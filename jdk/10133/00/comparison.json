{"files":[{"patch":"@@ -1030,51 +1030,1 @@\n-#ifdef _LP64\n- private:\n-  \/\/ Initialized in macroAssembler_x86_constants.cpp\n-  static address ONE;\n-  static address ONEHALF;\n-  static address SIGN_MASK;\n-  static address TWO_POW_55;\n-  static address TWO_POW_M55;\n-  static address SHIFTER;\n-  static address ZERO;\n-  static address NEG_ZERO;\n-  static address PI32INV;\n-  static address PI_INV_TABLE;\n-  static address Ctable;\n-  static address SC_1;\n-  static address SC_2;\n-  static address SC_3;\n-  static address SC_4;\n-  static address PI_4;\n-  static address P_1;\n-  static address P_3;\n-  static address P_2;\n-\n- public:\n-  void fast_log(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                Register rax, Register rcx, Register rdx, Register tmp1, Register tmp2);\n-\n-  void fast_log10(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                  XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                  Register rax, Register rcx, Register rdx, Register r11, Register tmp);\n-\n-  void fast_pow(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3, XMMRegister xmm4,\n-                XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7, Register rax, Register rcx,\n-                Register rdx, Register tmp1, Register tmp2, Register tmp3, Register tmp4);\n-\n-  void fast_sin(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                Register rax, Register rbx, Register rcx, Register rdx, Register tmp1);\n-\n-  void fast_cos(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                Register rax, Register rcx, Register rdx, Register r8,\n-                Register  r9, Register r10, Register r11, Register tmp);\n-\n-  void fast_tan(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                Register rax, Register rcx, Register rdx, Register r8,\n-                Register  r9, Register r10, Register r11, Register tmp);\n-\n-#else\n+#ifndef _LP64\n@@ -1124,1 +1074,1 @@\n-#endif\n+#endif \/\/ !_LP64\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":52,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+\n+ATTRIBUTE_ALIGNED(16) juint _ONES[] = {\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xbff00000UL\n+};\n+address MacroAssembler::ONES = (address)_ONES;\n+\n+ATTRIBUTE_ALIGNED(16) juint _PI4_INV[] = {\n+    0x6dc9c883UL, 0x3ff45f30UL\n+};\n+address MacroAssembler::PI4_INV = (address)_PI4_INV;\n+\n+ATTRIBUTE_ALIGNED(16) juint _PI4X3[] = {\n+    0x54443000UL, 0xbfe921fbUL, 0x3b39a000UL, 0x3d373dcbUL, 0xe0e68948UL,\n+    0xba845c06UL\n+};\n+address MacroAssembler::PI4X3 = (address)_PI4X3;\n+\n+ATTRIBUTE_ALIGNED(16) juint _PI4X4[] = {\n+    0x54400000UL, 0xbfe921fbUL, 0x1a600000UL, 0xbdc0b461UL, 0x2e000000UL,\n+    0xbb93198aUL, 0x252049c1UL, 0xb96b839aUL\n+};\n+address MacroAssembler::PI4X4 = (address)_PI4X4;\n+\n+ATTRIBUTE_ALIGNED(16) juint _L_2IL0FLOATPACKET_0[] = {\n+    0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n+};\n+address MacroAssembler::L_2IL0FLOATPACKET_0 = (address)_L_2IL0FLOATPACKET_0;\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_constants.cpp","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,428 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - COS()\n+\/\/                     ---------------------\n+\/\/\n+\/\/     1. RANGE REDUCTION\n+\/\/\n+\/\/     We perform an initial range reduction from X to r with\n+\/\/\n+\/\/          X =~= N * pi\/32 + r\n+\/\/\n+\/\/     so that |r| <= pi\/64 + epsilon. We restrict inputs to those\n+\/\/     where |N| <= 932560. Beyond this, the range reduction is\n+\/\/     insufficiently accurate. For extremely small inputs,\n+\/\/     denormalization can occur internally, impacting performance.\n+\/\/     This means that the main path is actually only taken for\n+\/\/     2^-252 <= |X| < 90112.\n+\/\/\n+\/\/     To avoid branches, we perform the range reduction to full\n+\/\/     accuracy each time.\n+\/\/\n+\/\/          X - N * (P_1 + P_2 + P_3)\n+\/\/\n+\/\/     where P_1 and P_2 are 32-bit numbers (so multiplication by N\n+\/\/     is exact) and P_3 is a 53-bit number. Together, these\n+\/\/     approximate pi well enough for all cases in the restricted\n+\/\/     range.\n+\/\/\n+\/\/     The main reduction sequence is:\n+\/\/\n+\/\/             y = 32\/pi * x\n+\/\/             N = integer(y)\n+\/\/     (computed by adding and subtracting off SHIFTER)\n+\/\/\n+\/\/             m_1 = N * P_1\n+\/\/             m_2 = N * P_2\n+\/\/             r_1 = x - m_1\n+\/\/             r = r_1 - m_2\n+\/\/     (this r can be used for most of the calculation)\n+\/\/\n+\/\/             c_1 = r_1 - r\n+\/\/             m_3 = N * P_3\n+\/\/             c_2 = c_1 - m_2\n+\/\/             c = c_2 - m_3\n+\/\/\n+\/\/     2. MAIN ALGORITHM\n+\/\/\n+\/\/     The algorithm uses a table lookup based on B = M * pi \/ 32\n+\/\/     where M = N mod 64. The stored values are:\n+\/\/       sigma             closest power of 2 to cos(B)\n+\/\/       C_hl              53-bit cos(B) - sigma\n+\/\/       S_hi + S_lo       2 * 53-bit sin(B)\n+\/\/\n+\/\/     The computation is organized as follows:\n+\/\/\n+\/\/          sin(B + r + c) = [sin(B) + sigma * r] +\n+\/\/                           r * (cos(B) - sigma) +\n+\/\/                           sin(B) * [cos(r + c) - 1] +\n+\/\/                           cos(B) * [sin(r + c) - r]\n+\/\/\n+\/\/     which is approximately:\n+\/\/\n+\/\/          [S_hi + sigma * r] +\n+\/\/          C_hl * r +\n+\/\/          S_lo + S_hi * [(cos(r) - 1) - r * c] +\n+\/\/          (C_hl + sigma) * [(sin(r) - r) + c]\n+\/\/\n+\/\/     and this is what is actually computed. We separate this sum\n+\/\/     into four parts:\n+\/\/\n+\/\/          hi + med + pols + corr\n+\/\/\n+\/\/     where\n+\/\/\n+\/\/          hi       = S_hi + sigma r\n+\/\/          med      = C_hl * r\n+\/\/          pols     = S_hi * (cos(r) - 1) + (C_hl + sigma) * (sin(r) - r)\n+\/\/          corr     = S_lo + c * ((C_hl + sigma) - S_hi * r)\n+\/\/\n+\/\/     3. POLYNOMIAL\n+\/\/\n+\/\/     The polynomial S_hi * (cos(r) - 1) + (C_hl + sigma) *\n+\/\/     (sin(r) - r) can be rearranged freely, since it is quite\n+\/\/     small, so we exploit parallelism to the fullest.\n+\/\/\n+\/\/          psc4       =   SC_4 * r_1\n+\/\/          msc4       =   psc4 * r\n+\/\/          r2         =   r * r\n+\/\/          msc2       =   SC_2 * r2\n+\/\/          r4         =   r2 * r2\n+\/\/          psc3       =   SC_3 + msc4\n+\/\/          psc1       =   SC_1 + msc2\n+\/\/          msc3       =   r4 * psc3\n+\/\/          sincospols =   psc1 + msc3\n+\/\/          pols       =   sincospols *\n+\/\/                         <S_hi * r^2 | (C_hl + sigma) * r^3>\n+\/\/\n+\/\/     4. CORRECTION TERM\n+\/\/\n+\/\/     This is where the \"c\" component of the range reduction is\n+\/\/     taken into account; recall that just \"r\" is used for most of\n+\/\/     the calculation.\n+\/\/\n+\/\/          -c   = m_3 - c_2\n+\/\/          -d   = S_hi * r - (C_hl + sigma)\n+\/\/          corr = -c * -d + S_lo\n+\/\/\n+\/\/     5. COMPENSATED SUMMATIONS\n+\/\/\n+\/\/     The two successive compensated summations add up the high\n+\/\/     and medium parts, leaving just the low parts to add up at\n+\/\/     the end.\n+\/\/\n+\/\/          rs        =  sigma * r\n+\/\/          res_int   =  S_hi + rs\n+\/\/          k_0       =  S_hi - res_int\n+\/\/          k_2       =  k_0 + rs\n+\/\/          med       =  C_hl * r\n+\/\/          res_hi    =  res_int + med\n+\/\/          k_1       =  res_int - res_hi\n+\/\/          k_3       =  k_1 + med\n+\/\/\n+\/\/     6. FINAL SUMMATION\n+\/\/\n+\/\/     We now add up all the small parts:\n+\/\/\n+\/\/          res_lo = pols(hi) + pols(lo) + corr + k_1 + k_3\n+\/\/\n+\/\/     Now the overall result is just:\n+\/\/\n+\/\/          res_hi + res_lo\n+\/\/\n+\/\/     7. SMALL ARGUMENTS\n+\/\/\n+\/\/     Inputs with |X| < 2^-252 are treated specially as\n+\/\/     1 - |x|.\n+\/\/\n+\/\/ Special cases:\n+\/\/  cos(NaN) = quiet NaN, and raise invalid exception\n+\/\/  cos(INF) = NaN and raise invalid exception\n+\/\/  cos(0) = 1\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 32 bit code is at most SSE2 compliant\n+\n+ATTRIBUTE_ALIGNED(16) juint _static_const_table_cos[] =\n+{\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL, 0xbf73b92eUL,\n+    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n+    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL,\n+    0xc0000000UL, 0xbc626d19UL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL,\n+    0xbfa60beaUL, 0x2ed59f06UL, 0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL,\n+    0x00000000UL, 0x3ff00000UL, 0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL,\n+    0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL, 0x00000000UL, 0x3ff00000UL,\n+    0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL, 0x20000000UL,\n+    0x3c5e0d89UL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL, 0xbfc59267UL,\n+    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n+    0x3ff00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL,\n+    0x20000000UL, 0x3c68076aUL, 0x00000000UL, 0x3ff00000UL, 0x99fcef32UL,\n+    0x3fca8279UL, 0x667f3bcdUL, 0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL,\n+    0x00000000UL, 0x3fe00000UL, 0x94247758UL, 0x3fc133ccUL, 0x6b151741UL,\n+    0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL, 0x00000000UL, 0x3fe00000UL,\n+    0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL, 0xe0000000UL,\n+    0x3c39f630UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL, 0xbf9d4a2cUL,\n+    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n+    0x3fe00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0x3fed906bUL,\n+    0x20000000UL, 0x3c7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x76acf82dUL,\n+    0x3fa4a031UL, 0x56c62ddaUL, 0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL,\n+    0x00000000UL, 0x3fd00000UL, 0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL,\n+    0x3fef6297UL, 0x20000000UL, 0x3c756217UL, 0x00000000UL, 0x3fd00000UL,\n+    0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL, 0x3fefd88dUL, 0x40000000UL,\n+    0xbc887df6UL, 0x00000000UL, 0x3fc00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0x3fefd88dUL,\n+    0x40000000UL, 0xbc887df6UL, 0x00000000UL, 0xbfc00000UL, 0x0e5967d5UL,\n+    0x3fac1d1fUL, 0xcff75cb0UL, 0x3fef6297UL, 0x20000000UL, 0x3c756217UL,\n+    0x00000000UL, 0xbfd00000UL, 0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL,\n+    0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL, 0x00000000UL, 0xbfd00000UL,\n+    0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL, 0x3fed906bUL, 0x20000000UL,\n+    0x3c7457e6UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL, 0x3f9d4a2cUL,\n+    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n+    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL,\n+    0xe0000000UL, 0x3c39f630UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL,\n+    0xbfc133ccUL, 0x6b151741UL, 0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL,\n+    0x00000000UL, 0xbfe00000UL, 0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL,\n+    0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL, 0x00000000UL, 0xbfe00000UL,\n+    0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL, 0x20000000UL,\n+    0x3c68076aUL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL, 0x3fc59267UL,\n+    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n+    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL,\n+    0x20000000UL, 0x3c5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL,\n+    0x3fb37ca1UL, 0xa6aea963UL, 0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL,\n+    0x00000000UL, 0xbff00000UL, 0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL,\n+    0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL, 0x00000000UL, 0xbff00000UL,\n+    0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL, 0xc0000000UL,\n+    0xbc626d19UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL, 0x3f73b92eUL,\n+    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n+    0xbff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL,\n+    0x3f73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n+    0x00000000UL, 0xbff00000UL, 0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL,\n+    0xbfc8f8b8UL, 0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0xbff00000UL,\n+    0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL,\n+    0x3c75d28dUL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL, 0x3fb37ca1UL,\n+    0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL, 0x3c672cedUL, 0x00000000UL,\n+    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0xbfde2b5dUL,\n+    0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL,\n+    0x3fc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n+    0x00000000UL, 0xbff00000UL, 0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL,\n+    0xbfe44cf3UL, 0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0xbff00000UL,\n+    0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL,\n+    0x3c8bdd34UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL, 0xbfc133ccUL,\n+    0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL, 0x3c82c5e1UL, 0x00000000UL,\n+    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0xbfea9b66UL,\n+    0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL,\n+    0x3f9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n+    0x00000000UL, 0xbfe00000UL, 0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL,\n+    0xbfed906bUL, 0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0xbfe00000UL,\n+    0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL,\n+    0xbc8760b1UL, 0x00000000UL, 0xbfd00000UL, 0x0e5967d5UL, 0x3fac1d1fUL,\n+    0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL, 0xbc756217UL, 0x00000000UL,\n+    0xbfd00000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0xbfefd88dUL,\n+    0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0xbfc00000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL,\n+    0xbfefd88dUL, 0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0x3fc00000UL,\n+    0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL,\n+    0xbc756217UL, 0x00000000UL, 0x3fd00000UL, 0x76acf82dUL, 0x3fa4a031UL,\n+    0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL, 0xbc8760b1UL, 0x00000000UL,\n+    0x3fd00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0xbfed906bUL,\n+    0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL,\n+    0xbf9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n+    0x00000000UL, 0x3fe00000UL, 0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL,\n+    0xbfea9b66UL, 0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0x3fe00000UL,\n+    0x94247758UL, 0x3fc133ccUL, 0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL,\n+    0x3c82c5e1UL, 0x00000000UL, 0x3fe00000UL, 0x99fcef32UL, 0x3fca8279UL,\n+    0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL, 0x3c8bdd34UL, 0x00000000UL,\n+    0x3fe00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0xbfe44cf3UL,\n+    0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL,\n+    0xbfc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n+    0x00000000UL, 0x3ff00000UL, 0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL,\n+    0xbfde2b5dUL, 0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0x3ff00000UL,\n+    0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL,\n+    0x3c672cedUL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL, 0xbfa60beaUL,\n+    0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL, 0x3c75d28dUL, 0x00000000UL,\n+    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0xbfc8f8b8UL,\n+    0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL,\n+    0xbf73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n+    0x00000000UL, 0x3ff00000UL, 0x55555555UL, 0xbfc55555UL, 0x00000000UL,\n+    0xbfe00000UL, 0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL,\n+    0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL, 0xa556c734UL,\n+    0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL, 0x1a600000UL, 0x3d90b461UL,\n+    0x1a600000UL, 0x3d90b461UL, 0x54400000UL, 0x3fb921fbUL, 0x00000000UL,\n+    0x00000000UL, 0x2e037073UL, 0x3b63198aUL, 0x00000000UL, 0x00000000UL,\n+    0x6dc9c883UL, 0x40245f30UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x43380000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x80000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x80000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+};\n+\/\/registers,\n+\/\/ input: (rbp + 8)\n+\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n+\/\/          eax, ecx, edx, ebx (tmp)\n+\n+\/\/ Code generated by Intel C compiler for LIBM library\n+\n+void MacroAssembler::fast_cos(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n+                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n+                              Register eax, Register ecx, Register edx, Register tmp) {\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label start;\n+\n+  assert_different_registers(tmp, eax, ecx, edx);\n+\n+  address static_const_table_cos = (address)_static_const_table_cos;\n+\n+  bind(start);\n+  subl(rsp, 120);\n+  movl(Address(rsp, 56), tmp);\n+  lea(tmp, ExternalAddress(static_const_table_cos));\n+  movsd(xmm0, Address(rsp, 128));\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32767);\n+  subl(eax, 12336);\n+  cmpl(eax, 4293);\n+  jcc(Assembler::above, L_2TAG_PACKET_0_0_2);\n+  movsd(xmm1, Address(tmp, 2160));\n+  mulsd(xmm1, xmm0);\n+  movdqu(xmm5, Address(tmp, 2240));\n+  movsd(xmm4, Address(tmp, 2224));\n+  pand(xmm4, xmm0);\n+  por(xmm5, xmm4);\n+  movsd(xmm3, Address(tmp, 2128));\n+  movdqu(xmm2, Address(tmp, 2112));\n+  addpd(xmm1, xmm5);\n+  cvttsd2sil(edx, xmm1);\n+  cvtsi2sdl(xmm1, edx);\n+  mulsd(xmm3, xmm1);\n+  unpcklpd(xmm1, xmm1);\n+  addl(edx, 1865232);\n+  movdqu(xmm4, xmm0);\n+  andl(edx, 63);\n+  movdqu(xmm5, Address(tmp, 2096));\n+  lea(eax, Address(tmp, 0));\n+  shll(edx, 5);\n+  addl(eax, edx);\n+  mulpd(xmm2, xmm1);\n+  subsd(xmm0, xmm3);\n+  mulsd(xmm1, Address(tmp, 2144));\n+  subsd(xmm4, xmm3);\n+  movsd(xmm7, Address(eax, 8));\n+  unpcklpd(xmm0, xmm0);\n+  movapd(xmm3, xmm4);\n+  subsd(xmm4, xmm2);\n+  mulpd(xmm5, xmm0);\n+  subpd(xmm0, xmm2);\n+  movdqu(xmm6, Address(tmp, 2064));\n+  mulsd(xmm7, xmm4);\n+  subsd(xmm3, xmm4);\n+  mulpd(xmm5, xmm0);\n+  mulpd(xmm0, xmm0);\n+  subsd(xmm3, xmm2);\n+  movdqu(xmm2, Address(eax, 0));\n+  subsd(xmm1, xmm3);\n+  movsd(xmm3, Address(eax, 24));\n+  addsd(xmm2, xmm3);\n+  subsd(xmm7, xmm2);\n+  mulsd(xmm2, xmm4);\n+  mulpd(xmm6, xmm0);\n+  mulsd(xmm3, xmm4);\n+  mulpd(xmm2, xmm0);\n+  mulpd(xmm0, xmm0);\n+  addpd(xmm5, Address(tmp, 2080));\n+  mulsd(xmm4, Address(eax, 0));\n+  addpd(xmm6, Address(tmp, 2048));\n+  mulpd(xmm5, xmm0);\n+  movapd(xmm0, xmm3);\n+  addsd(xmm3, Address(eax, 8));\n+  mulpd(xmm1, xmm7);\n+  movapd(xmm7, xmm4);\n+  addsd(xmm4, xmm3);\n+  addpd(xmm6, xmm5);\n+  movsd(xmm5, Address(eax, 8));\n+  subsd(xmm5, xmm3);\n+  subsd(xmm3, xmm4);\n+  addsd(xmm1, Address(eax, 16));\n+  mulpd(xmm6, xmm2);\n+  addsd(xmm5, xmm0);\n+  addsd(xmm3, xmm7);\n+  addsd(xmm1, xmm5);\n+  addsd(xmm1, xmm3);\n+  addsd(xmm1, xmm6);\n+  unpckhpd(xmm6, xmm6);\n+  addsd(xmm1, xmm6);\n+  addsd(xmm4, xmm1);\n+  movsd(Address(rsp, 0), xmm4);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_0_0_2);\n+  jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32767);\n+  pinsrw(xmm0, eax, 3);\n+  movsd(xmm1, Address(tmp, 2192));\n+  subsd(xmm1, xmm0);\n+  movsd(Address(rsp, 0), xmm1);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_2_0_2);\n+  movl(eax, Address(rsp, 132));\n+  andl(eax, 2146435072);\n+  cmpl(eax, 2146435072);\n+  jcc(Assembler::equal, L_2TAG_PACKET_3_0_2);\n+  subl(rsp, 32);\n+  movsd(Address(rsp, 0), xmm0);\n+  lea(eax, Address(rsp, 40));\n+  movl(Address(rsp, 8), eax);\n+  movl(eax, 1);\n+  movl(Address(rsp, 12), eax);\n+  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_sin_cos_huge())));\n+  addl(rsp, 32);\n+  fld_d(Address(rsp, 8));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_3_0_2);\n+  fld_d(Address(rsp, 128));\n+  fmul_d(Address(tmp, 2208));\n+\n+  bind(L_2TAG_PACKET_1_0_2);\n+  movl(tmp, Address(rsp, 56));\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_cos.cpp","additions":428,"deletions":0,"binary":false,"changes":428,"status":"added"},{"patch":"@@ -0,0 +1,330 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - EXP()\n+\/\/                     ---------------------\n+\/\/\n+\/\/ Description:\n+\/\/  Let K = 64 (table size).\n+\/\/        x    x\/log(2)     n\n+\/\/       e  = 2          = 2 * T[j] * (1 + P(y))\n+\/\/  where\n+\/\/       x = m*log(2)\/K + y,    y in [-log(2)\/K..log(2)\/K]\n+\/\/       m = n*K + j,           m,n,j - signed integer, j in [-K\/2..K\/2]\n+\/\/                  j\/K\n+\/\/       values of 2   are tabulated as T[j] = T_hi[j] ( 1 + T_lo[j]).\n+\/\/\n+\/\/       P(y) is a minimax polynomial approximation of exp(x)-1\n+\/\/       on small interval [-log(2)\/K..log(2)\/K] (were calculated by Maple V).\n+\/\/\n+\/\/  To avoid problems with arithmetic overflow and underflow,\n+\/\/            n                        n1  n2\n+\/\/  value of 2  is safely computed as 2 * 2 where n1 in [-BIAS\/2..BIAS\/2]\n+\/\/  where BIAS is a value of exponent bias.\n+\/\/\n+\/\/ Special cases:\n+\/\/  exp(NaN) = NaN\n+\/\/  exp(+INF) = +INF\n+\/\/  exp(-INF) = 0\n+\/\/  exp(x) = 1 for subnormals\n+\/\/  for finite argument, only exp(0)=1 is exact\n+\/\/  For IEEE double\n+\/\/    if x >  709.782712893383973096 then exp(x) overflow\n+\/\/    if x < -745.133219101941108420 then exp(x) underflow\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 32 bit code is at most SSE2 compliant\n+\n+ATTRIBUTE_ALIGNED(16) juint _static_const_table[] =\n+{\n+    0x00000000UL, 0xfff00000UL, 0x00000000UL, 0xfff00000UL, 0xffffffc0UL,\n+    0x00000000UL, 0xffffffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL,\n+    0x0000ffc0UL, 0x00000000UL, 0x00000000UL, 0x43380000UL, 0x00000000UL,\n+    0x43380000UL, 0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL,\n+    0xfefa0000UL, 0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL, 0xbc9e3b3aUL,\n+    0x3d1cf79aUL, 0xbc9e3b3aUL, 0x3d1cf79aUL, 0xfffffffeUL, 0x3fdfffffUL,\n+    0xfffffffeUL, 0x3fdfffffUL, 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL,\n+    0x3fa55555UL, 0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x0e03754dUL,\n+    0x3cad7bbfUL, 0x3e778060UL, 0x00002c9aUL, 0x3567f613UL, 0x3c8cd252UL,\n+    0xd3158574UL, 0x000059b0UL, 0x61e6c861UL, 0x3c60f74eUL, 0x18759bc8UL,\n+    0x00008745UL, 0x5d837b6cUL, 0x3c979aa6UL, 0x6cf9890fUL, 0x0000b558UL,\n+    0x702f9cd1UL, 0x3c3ebe3dUL, 0x32d3d1a2UL, 0x0000e3ecUL, 0x1e63bcd8UL,\n+    0x3ca3516eUL, 0xd0125b50UL, 0x00011301UL, 0x26f0387bUL, 0x3ca4c554UL,\n+    0xaea92ddfUL, 0x0001429aUL, 0x62523fb6UL, 0x3ca95153UL, 0x3c7d517aUL,\n+    0x000172b8UL, 0x3f1353bfUL, 0x3c8b898cUL, 0xeb6fcb75UL, 0x0001a35bUL,\n+    0x3e3a2f5fUL, 0x3c9aecf7UL, 0x3168b9aaUL, 0x0001d487UL, 0x44a6c38dUL,\n+    0x3c8a6f41UL, 0x88628cd6UL, 0x0002063bUL, 0xe3a8a894UL, 0x3c968efdUL,\n+    0x6e756238UL, 0x0002387aUL, 0x981fe7f2UL, 0x3c80472bUL, 0x65e27cddUL,\n+    0x00026b45UL, 0x6d09ab31UL, 0x3c82f7e1UL, 0xf51fdee1UL, 0x00029e9dUL,\n+    0x720c0ab3UL, 0x3c8b3782UL, 0xa6e4030bUL, 0x0002d285UL, 0x4db0abb6UL,\n+    0x3c834d75UL, 0x0a31b715UL, 0x000306feUL, 0x5dd3f84aUL, 0x3c8fdd39UL,\n+    0xb26416ffUL, 0x00033c08UL, 0xcc187d29UL, 0x3ca12f8cUL, 0x373aa9caUL,\n+    0x000371a7UL, 0x738b5e8bUL, 0x3ca7d229UL, 0x34e59ff6UL, 0x0003a7dbUL,\n+    0xa72a4c6dUL, 0x3c859f48UL, 0x4c123422UL, 0x0003dea6UL, 0x259d9205UL,\n+    0x3ca8b846UL, 0x21f72e29UL, 0x0004160aUL, 0x60c2ac12UL, 0x3c4363edUL,\n+    0x6061892dUL, 0x00044e08UL, 0xdaa10379UL, 0x3c6ecce1UL, 0xb5c13cd0UL,\n+    0x000486a2UL, 0xbb7aafb0UL, 0x3c7690ceUL, 0xd5362a27UL, 0x0004bfdaUL,\n+    0x9b282a09UL, 0x3ca083ccUL, 0x769d2ca6UL, 0x0004f9b2UL, 0xc1aae707UL,\n+    0x3ca509b0UL, 0x569d4f81UL, 0x0005342bUL, 0x18fdd78eUL, 0x3c933505UL,\n+    0x36b527daUL, 0x00056f47UL, 0xe21c5409UL, 0x3c9063e1UL, 0xdd485429UL,\n+    0x0005ab07UL, 0x2b64c035UL, 0x3c9432e6UL, 0x15ad2148UL, 0x0005e76fUL,\n+    0x99f08c0aUL, 0x3ca01284UL, 0xb03a5584UL, 0x0006247eUL, 0x0073dc06UL,\n+    0x3c99f087UL, 0x82552224UL, 0x00066238UL, 0x0da05571UL, 0x3c998d4dUL,\n+    0x667f3bccUL, 0x0006a09eUL, 0x86ce4786UL, 0x3ca52bb9UL, 0x3c651a2eUL,\n+    0x0006dfb2UL, 0x206f0dabUL, 0x3ca32092UL, 0xe8ec5f73UL, 0x00071f75UL,\n+    0x8e17a7a6UL, 0x3ca06122UL, 0x564267c8UL, 0x00075febUL, 0x461e9f86UL,\n+    0x3ca244acUL, 0x73eb0186UL, 0x0007a114UL, 0xabd66c55UL, 0x3c65ebe1UL,\n+    0x36cf4e62UL, 0x0007e2f3UL, 0xbbff67d0UL, 0x3c96fe9fUL, 0x994cce12UL,\n+    0x00082589UL, 0x14c801dfUL, 0x3c951f14UL, 0x9b4492ecUL, 0x000868d9UL,\n+    0xc1f0eab4UL, 0x3c8db72fUL, 0x422aa0dbUL, 0x0008ace5UL, 0x59f35f44UL,\n+    0x3c7bf683UL, 0x99157736UL, 0x0008f1aeUL, 0x9c06283cUL, 0x3ca360baUL,\n+    0xb0cdc5e4UL, 0x00093737UL, 0x20f962aaUL, 0x3c95e8d1UL, 0x9fde4e4fUL,\n+    0x00097d82UL, 0x2b91ce27UL, 0x3c71affcUL, 0x82a3f090UL, 0x0009c491UL,\n+    0x589a2ebdUL, 0x3c9b6d34UL, 0x7b5de564UL, 0x000a0c66UL, 0x9ab89880UL,\n+    0x3c95277cUL, 0xb23e255cUL, 0x000a5503UL, 0x6e735ab3UL, 0x3c846984UL,\n+    0x5579fdbfUL, 0x000a9e6bUL, 0x92cb3387UL, 0x3c8c1a77UL, 0x995ad3adUL,\n+    0x000ae89fUL, 0xdc2d1d96UL, 0x3ca22466UL, 0xb84f15faUL, 0x000b33a2UL,\n+    0xb19505aeUL, 0x3ca1112eUL, 0xf2fb5e46UL, 0x000b7f76UL, 0x0a5fddcdUL,\n+    0x3c74ffd7UL, 0x904bc1d2UL, 0x000bcc1eUL, 0x30af0cb3UL, 0x3c736eaeUL,\n+    0xdd85529cUL, 0x000c199bUL, 0xd10959acUL, 0x3c84e08fUL, 0x2e57d14bUL,\n+    0x000c67f1UL, 0x6c921968UL, 0x3c676b2cUL, 0xdcef9069UL, 0x000cb720UL,\n+    0x36df99b3UL, 0x3c937009UL, 0x4a07897bUL, 0x000d072dUL, 0xa63d07a7UL,\n+    0x3c74a385UL, 0xdcfba487UL, 0x000d5818UL, 0xd5c192acUL, 0x3c8e5a50UL,\n+    0x03db3285UL, 0x000da9e6UL, 0x1c4a9792UL, 0x3c98bb73UL, 0x337b9b5eUL,\n+    0x000dfc97UL, 0x603a88d3UL, 0x3c74b604UL, 0xe78b3ff6UL, 0x000e502eUL,\n+    0x92094926UL, 0x3c916f27UL, 0xa2a490d9UL, 0x000ea4afUL, 0x41aa2008UL,\n+    0x3c8ec3bcUL, 0xee615a27UL, 0x000efa1bUL, 0x31d185eeUL, 0x3c8a64a9UL,\n+    0x5b6e4540UL, 0x000f5076UL, 0x4d91cd9dUL, 0x3c77893bUL, 0x819e90d8UL,\n+    0x000fa7c1UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x7ff00000UL,\n+    0x00000000UL, 0x00000000UL, 0xffffffffUL, 0x7fefffffUL, 0x00000000UL,\n+    0x00100000UL\n+};\n+\n+\/\/registers,\n+\/\/ input: (rbp + 8)\n+\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n+\/\/          rax, rdx, rcx, rbx (tmp)\n+\n+\/\/ Code generated by Intel C compiler for LIBM library\n+\n+void MacroAssembler::fast_exp(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n+                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n+                              Register eax, Register ecx, Register edx, Register tmp) {\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n+  Label L_2TAG_PACKET_12_0_2;\n+\n+  assert_different_registers(tmp, eax, ecx, edx);\n+  address static_const_table = (address)_static_const_table;\n+\n+  subl(rsp, 120);\n+  movl(Address(rsp, 64), tmp);\n+  lea(tmp, ExternalAddress(static_const_table));\n+  movsd(xmm0, Address(rsp, 128));\n+  unpcklpd(xmm0, xmm0);\n+  movdqu(xmm1, Address(tmp, 64));          \/\/ 0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL\n+  movdqu(xmm6, Address(tmp, 48));          \/\/ 0x00000000UL, 0x43380000UL, 0x00000000UL, 0x43380000UL\n+  movdqu(xmm2, Address(tmp, 80));          \/\/ 0xfefa0000UL, 0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL\n+  movdqu(xmm3, Address(tmp, 96));          \/\/ 0xbc9e3b3aUL, 0x3d1cf79aUL, 0xbc9e3b3aUL, 0x3d1cf79aUL\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32767);\n+  movl(edx, 16527);\n+  subl(edx, eax);\n+  subl(eax, 15504);\n+  orl(edx, eax);\n+  cmpl(edx, INT_MIN);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+  mulpd(xmm1, xmm0);\n+  addpd(xmm1, xmm6);\n+  movapd(xmm7, xmm1);\n+  subpd(xmm1, xmm6);\n+  mulpd(xmm2, xmm1);\n+  movdqu(xmm4, Address(tmp, 128));         \/\/ 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL, 0x3fa55555UL\n+  mulpd(xmm3, xmm1);\n+  movdqu(xmm5, Address(tmp, 144));         \/\/ 0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL\n+  subpd(xmm0, xmm2);\n+  movdl(eax, xmm7);\n+  movl(ecx, eax);\n+  andl(ecx, 63);\n+  shll(ecx, 4);\n+  sarl(eax, 6);\n+  movl(edx, eax);\n+  movdqu(xmm6, Address(tmp, 16));          \/\/ 0xffffffc0UL, 0x00000000UL, 0xffffffc0UL, 0x00000000UL\n+  pand(xmm7, xmm6);\n+  movdqu(xmm6, Address(tmp, 32));          \/\/ 0x0000ffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL\n+  paddq(xmm7, xmm6);\n+  psllq(xmm7, 46);\n+  subpd(xmm0, xmm3);\n+  movdqu(xmm2, Address(tmp, ecx, Address::times_1, 160));\n+  mulpd(xmm4, xmm0);\n+  movapd(xmm6, xmm0);\n+  movapd(xmm1, xmm0);\n+  mulpd(xmm6, xmm6);\n+  mulpd(xmm0, xmm6);\n+  addpd(xmm5, xmm4);\n+  mulsd(xmm0, xmm6);\n+  mulpd(xmm6, Address(tmp, 112));          \/\/ 0xfffffffeUL, 0x3fdfffffUL, 0xfffffffeUL, 0x3fdfffffUL\n+  addsd(xmm1, xmm2);\n+  unpckhpd(xmm2, xmm2);\n+  mulpd(xmm0, xmm5);\n+  addsd(xmm1, xmm0);\n+  por(xmm2, xmm7);\n+  unpckhpd(xmm0, xmm0);\n+  addsd(xmm0, xmm1);\n+  addsd(xmm0, xmm6);\n+  addl(edx, 894);\n+  cmpl(edx, 1916);\n+  jcc(Assembler::above, L_2TAG_PACKET_1_0_2);\n+  mulsd(xmm0, xmm2);\n+  addsd(xmm0, xmm2);\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_1_0_2);\n+  fnstcw(Address(rsp, 24));\n+  movzwl(edx, Address(rsp, 24));\n+  orl(edx, 768);\n+  movw(Address(rsp, 28), edx);\n+  fldcw(Address(rsp, 28));\n+  movl(edx, eax);\n+  sarl(eax, 1);\n+  subl(edx, eax);\n+  movdqu(xmm6, Address(tmp, 0));           \/\/ 0x00000000UL, 0xfff00000UL, 0x00000000UL, 0xfff00000UL\n+  pandn(xmm6, xmm2);\n+  addl(eax, 1023);\n+  movdl(xmm3, eax);\n+  psllq(xmm3, 52);\n+  por(xmm6, xmm3);\n+  addl(edx, 1023);\n+  movdl(xmm4, edx);\n+  psllq(xmm4, 52);\n+  movsd(Address(rsp, 8), xmm0);\n+  fld_d(Address(rsp, 8));\n+  movsd(Address(rsp, 16), xmm6);\n+  fld_d(Address(rsp, 16));\n+  fmula(1);\n+  faddp(1);\n+  movsd(Address(rsp, 8), xmm4);\n+  fld_d(Address(rsp, 8));\n+  fmulp(1);\n+  fstp_d(Address(rsp, 8));\n+  movsd(xmm0, Address(rsp, 8));\n+  fldcw(Address(rsp, 24));\n+  pextrw(ecx, xmm0, 3);\n+  andl(ecx, 32752);\n+  cmpl(ecx, 32752);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_3_0_2);\n+  cmpl(ecx, 0);\n+  jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n+  jmp(L_2TAG_PACKET_2_0_2);\n+  cmpl(ecx, INT_MIN);\n+  jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n+  cmpl(ecx, -1064950997);\n+  jcc(Assembler::below, L_2TAG_PACKET_2_0_2);\n+  jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n+  movl(edx, Address(rsp, 128));\n+  cmpl(edx, -17155601);\n+  jcc(Assembler::below, L_2TAG_PACKET_2_0_2);\n+  jmp(L_2TAG_PACKET_4_0_2);\n+\n+  bind(L_2TAG_PACKET_3_0_2);\n+  movl(edx, 14);\n+  jmp(L_2TAG_PACKET_5_0_2);\n+\n+  bind(L_2TAG_PACKET_4_0_2);\n+  movl(edx, 15);\n+\n+  bind(L_2TAG_PACKET_5_0_2);\n+  movsd(Address(rsp, 0), xmm0);\n+  movsd(xmm0, Address(rsp, 128));\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_6_0_2);\n+\n+  bind(L_2TAG_PACKET_7_0_2);\n+  cmpl(eax, 2146435072);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_8_0_2);\n+  movl(eax, Address(rsp, 132));\n+  cmpl(eax, INT_MIN);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_9_0_2);\n+  movsd(xmm0, Address(tmp, 1208));         \/\/ 0xffffffffUL, 0x7fefffffUL\n+  mulsd(xmm0, xmm0);\n+  movl(edx, 14);\n+  jmp(L_2TAG_PACKET_5_0_2);\n+\n+  bind(L_2TAG_PACKET_9_0_2);\n+  movsd(xmm0, Address(tmp, 1216));\n+  mulsd(xmm0, xmm0);\n+  movl(edx, 15);\n+  jmp(L_2TAG_PACKET_5_0_2);\n+\n+  bind(L_2TAG_PACKET_8_0_2);\n+  movl(edx, Address(rsp, 128));\n+  cmpl(eax, 2146435072);\n+  jcc(Assembler::above, L_2TAG_PACKET_10_0_2);\n+  cmpl(edx, 0);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_10_0_2);\n+  movl(eax, Address(rsp, 132));\n+  cmpl(eax, 2146435072);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_11_0_2);\n+  movsd(xmm0, Address(tmp, 1192));         \/\/ 0x00000000UL, 0x7ff00000UL\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_11_0_2);\n+  movsd(xmm0, Address(tmp, 1200));         \/\/ 0x00000000UL, 0x00000000UL\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_10_0_2);\n+  movsd(xmm0, Address(rsp, 128));\n+  addsd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_0_0_2);\n+  movl(eax, Address(rsp, 132));\n+  andl(eax, 2147483647);\n+  cmpl(eax, 1083179008);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_7_0_2);\n+  movsd(xmm0, Address(rsp, 128));\n+  addsd(xmm0, Address(tmp, 1184));         \/\/ 0x00000000UL, 0x3ff00000UL\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_2_0_2);\n+  movsd(Address(rsp, 48), xmm0);\n+  fld_d(Address(rsp, 48));\n+\n+  bind(L_2TAG_PACKET_6_0_2);\n+  movl(tmp, Address(rsp, 64));\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_exp.cpp","additions":330,"deletions":0,"binary":false,"changes":330,"status":"added"},{"patch":"@@ -0,0 +1,345 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - LOG()\n+\/\/                     ---------------------\n+\/\/\n+\/\/    x=2^k * mx, mx in [1,2)\n+\/\/\n+\/\/    Get B~1\/mx based on the output of rcpss instruction (B0)\n+\/\/    B = int((B0*2^7+0.5))\/2^7\n+\/\/\n+\/\/    Reduced argument: r=B*mx-1.0 (computed accurately in high and low parts)\n+\/\/\n+\/\/    Result:  k*log(2) - log(B) + p(r) if |x-1| >= small value (2^-6)  and\n+\/\/             p(r) is a degree 7 polynomial\n+\/\/             -log(B) read from data table (high, low parts)\n+\/\/             Result is formed from high and low parts\n+\/\/\n+\/\/ Special cases:\n+\/\/  log(NaN) = quiet NaN, and raise invalid exception\n+\/\/  log(+INF) = that INF\n+\/\/  log(0) = -INF with divide-by-zero exception raised\n+\/\/  log(1) = +0\n+\/\/  log(x) = NaN with invalid exception raised if x < -0, including -INF\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 32 bit code is at most SSE2 compliant\n+\/\/\n+ATTRIBUTE_ALIGNED(16) juint _static_const_table_log[] =\n+{\n+    0xfefa3800UL, 0x3fe62e42UL, 0x93c76730UL, 0x3d2ef357UL, 0xaa241800UL,\n+    0x3fe5ee82UL, 0x0cda46beUL, 0x3d220238UL, 0x5c364800UL, 0x3fe5af40UL,\n+    0xac10c9fbUL, 0x3d2dfa63UL, 0x26bb8c00UL, 0x3fe5707aUL, 0xff3303ddUL,\n+    0x3d09980bUL, 0x26867800UL, 0x3fe5322eUL, 0x5d257531UL, 0x3d05ccc4UL,\n+    0x835a5000UL, 0x3fe4f45aUL, 0x6d93b8fbUL, 0xbd2e6c51UL, 0x6f970c00UL,\n+    0x3fe4b6fdUL, 0xed4c541cUL, 0x3cef7115UL, 0x27e8a400UL, 0x3fe47a15UL,\n+    0xf94d60aaUL, 0xbd22cb6aUL, 0xf2f92400UL, 0x3fe43d9fUL, 0x481051f7UL,\n+    0xbcfd984fUL, 0x2125cc00UL, 0x3fe4019cUL, 0x30f0c74cUL, 0xbd26ce79UL,\n+    0x0c36c000UL, 0x3fe3c608UL, 0x7cfe13c2UL, 0xbd02b736UL, 0x17197800UL,\n+    0x3fe38ae2UL, 0xbb5569a4UL, 0xbd218b7aUL, 0xad9d8c00UL, 0x3fe35028UL,\n+    0x9527e6acUL, 0x3d10b83fUL, 0x44340800UL, 0x3fe315daUL, 0xc5a0ed9cUL,\n+    0xbd274e93UL, 0x57b0e000UL, 0x3fe2dbf5UL, 0x07b9dc11UL, 0xbd17a6e5UL,\n+    0x6d0ec000UL, 0x3fe2a278UL, 0xe797882dUL, 0x3d206d2bUL, 0x1134dc00UL,\n+    0x3fe26962UL, 0x05226250UL, 0xbd0b61f1UL, 0xd8bebc00UL, 0x3fe230b0UL,\n+    0x6e48667bUL, 0x3d12fc06UL, 0x5fc61800UL, 0x3fe1f863UL, 0xc9fe81d3UL,\n+    0xbd2a7242UL, 0x49ae6000UL, 0x3fe1c078UL, 0xed70e667UL, 0x3cccacdeUL,\n+    0x40f23c00UL, 0x3fe188eeUL, 0xf8ab4650UL, 0x3d14cc4eUL, 0xf6f29800UL,\n+    0x3fe151c3UL, 0xa293ae49UL, 0xbd2edd97UL, 0x23c75c00UL, 0x3fe11af8UL,\n+    0xbb9ddcb2UL, 0xbd258647UL, 0x8611cc00UL, 0x3fe0e489UL, 0x07801742UL,\n+    0x3d1c2998UL, 0xe2d05400UL, 0x3fe0ae76UL, 0x887e7e27UL, 0x3d1f486bUL,\n+    0x0533c400UL, 0x3fe078bfUL, 0x41edf5fdUL, 0x3d268122UL, 0xbe760400UL,\n+    0x3fe04360UL, 0xe79539e0UL, 0xbd04c45fUL, 0xe5b20800UL, 0x3fe00e5aUL,\n+    0xb1727b1cUL, 0xbd053ba3UL, 0xaf7a4800UL, 0x3fdfb358UL, 0x3c164935UL,\n+    0x3d0085faUL, 0xee031800UL, 0x3fdf4aa7UL, 0x6f014a8bUL, 0x3d12cde5UL,\n+    0x56b41000UL, 0x3fdee2a1UL, 0x5a470251UL, 0x3d2f27f4UL, 0xc3ddb000UL,\n+    0x3fde7b42UL, 0x5372bd08UL, 0xbd246550UL, 0x1a272800UL, 0x3fde148aUL,\n+    0x07322938UL, 0xbd1326b2UL, 0x484c9800UL, 0x3fddae75UL, 0x60dc616aUL,\n+    0xbd1ea42dUL, 0x46def800UL, 0x3fdd4902UL, 0xe9a767a8UL, 0x3d235bafUL,\n+    0x18064800UL, 0x3fdce42fUL, 0x3ec7a6b0UL, 0xbd0797c3UL, 0xc7455800UL,\n+    0x3fdc7ff9UL, 0xc15249aeUL, 0xbd29b6ddUL, 0x693fa000UL, 0x3fdc1c60UL,\n+    0x7fe8e180UL, 0x3d2cec80UL, 0x1b80e000UL, 0x3fdbb961UL, 0xf40a666dUL,\n+    0x3d27d85bUL, 0x04462800UL, 0x3fdb56faUL, 0x2d841995UL, 0x3d109525UL,\n+    0x5248d000UL, 0x3fdaf529UL, 0x52774458UL, 0xbd217cc5UL, 0x3c8ad800UL,\n+    0x3fda93edUL, 0xbea77a5dUL, 0x3d1e36f2UL, 0x0224f800UL, 0x3fda3344UL,\n+    0x7f9d79f5UL, 0x3d23c645UL, 0xea15f000UL, 0x3fd9d32bUL, 0x10d0c0b0UL,\n+    0xbd26279eUL, 0x43135800UL, 0x3fd973a3UL, 0xa502d9f0UL, 0xbd152313UL,\n+    0x635bf800UL, 0x3fd914a8UL, 0x2ee6307dUL, 0xbd1766b5UL, 0xa88b3000UL,\n+    0x3fd8b639UL, 0xe5e70470UL, 0xbd205ae1UL, 0x776dc800UL, 0x3fd85855UL,\n+    0x3333778aUL, 0x3d2fd56fUL, 0x3bd81800UL, 0x3fd7fafaUL, 0xc812566aUL,\n+    0xbd272090UL, 0x687cf800UL, 0x3fd79e26UL, 0x2efd1778UL, 0x3d29ec7dUL,\n+    0x76c67800UL, 0x3fd741d8UL, 0x49dc60b3UL, 0x3d2d8b09UL, 0xe6af1800UL,\n+    0x3fd6e60eUL, 0x7c222d87UL, 0x3d172165UL, 0x3e9c6800UL, 0x3fd68ac8UL,\n+    0x2756eba0UL, 0x3d20a0d3UL, 0x0b3ab000UL, 0x3fd63003UL, 0xe731ae00UL,\n+    0xbd2db623UL, 0xdf596000UL, 0x3fd5d5bdUL, 0x08a465dcUL, 0xbd0a0b2aUL,\n+    0x53c8d000UL, 0x3fd57bf7UL, 0xee5d40efUL, 0x3d1fadedUL, 0x0738a000UL,\n+    0x3fd522aeUL, 0x8164c759UL, 0x3d2ebe70UL, 0x9e173000UL, 0x3fd4c9e0UL,\n+    0x1b0ad8a4UL, 0xbd2e2089UL, 0xc271c800UL, 0x3fd4718dUL, 0x0967d675UL,\n+    0xbd2f27ceUL, 0x23d5e800UL, 0x3fd419b4UL, 0xec90e09dUL, 0x3d08e436UL,\n+    0x77333000UL, 0x3fd3c252UL, 0xb606bd5cUL, 0x3d183b54UL, 0x76be1000UL,\n+    0x3fd36b67UL, 0xb0f177c8UL, 0x3d116ecdUL, 0xe1d36000UL, 0x3fd314f1UL,\n+    0xd3213cb8UL, 0xbd28e27aUL, 0x7cdc9000UL, 0x3fd2bef0UL, 0x4a5004f4UL,\n+    0x3d2a9cfaUL, 0x1134d800UL, 0x3fd26962UL, 0xdf5bb3b6UL, 0x3d2c93c1UL,\n+    0x6d0eb800UL, 0x3fd21445UL, 0xba46baeaUL, 0x3d0a87deUL, 0x635a6800UL,\n+    0x3fd1bf99UL, 0x5147bdb7UL, 0x3d2ca6edUL, 0xcbacf800UL, 0x3fd16b5cUL,\n+    0xf7a51681UL, 0x3d2b9acdUL, 0x8227e800UL, 0x3fd1178eUL, 0x63a5f01cUL,\n+    0xbd2c210eUL, 0x67616000UL, 0x3fd0c42dUL, 0x163ceae9UL, 0x3d27188bUL,\n+    0x604d5800UL, 0x3fd07138UL, 0x16ed4e91UL, 0x3cf89cdbUL, 0x5626c800UL,\n+    0x3fd01eaeUL, 0x1485e94aUL, 0xbd16f08cUL, 0x6cb3b000UL, 0x3fcf991cUL,\n+    0xca0cdf30UL, 0x3d1bcbecUL, 0xe4dd0000UL, 0x3fcef5adUL, 0x65bb8e11UL,\n+    0xbcca2115UL, 0xffe71000UL, 0x3fce530eUL, 0x6041f430UL, 0x3cc21227UL,\n+    0xb0d49000UL, 0x3fcdb13dUL, 0xf715b035UL, 0xbd2aff2aUL, 0xf2656000UL,\n+    0x3fcd1037UL, 0x75b6f6e4UL, 0xbd084a7eUL, 0xc6f01000UL, 0x3fcc6ffbUL,\n+    0xc5962bd2UL, 0xbcf1ec72UL, 0x383be000UL, 0x3fcbd087UL, 0x595412b6UL,\n+    0xbd2d4bc4UL, 0x575bd000UL, 0x3fcb31d8UL, 0x4eace1aaUL, 0xbd0c358dUL,\n+    0x3c8ae000UL, 0x3fca93edUL, 0x50562169UL, 0xbd287243UL, 0x07089000UL,\n+    0x3fc9f6c4UL, 0x6865817aUL, 0x3d29904dUL, 0xdcf70000UL, 0x3fc95a5aUL,\n+    0x58a0ff6fUL, 0x3d07f228UL, 0xeb390000UL, 0x3fc8beafUL, 0xaae92cd1UL,\n+    0xbd073d54UL, 0x6551a000UL, 0x3fc823c1UL, 0x9a631e83UL, 0x3d1e0ddbUL,\n+    0x85445000UL, 0x3fc7898dUL, 0x70914305UL, 0xbd1c6610UL, 0x8b757000UL,\n+    0x3fc6f012UL, 0xe59c21e1UL, 0xbd25118dUL, 0xbe8c1000UL, 0x3fc6574eUL,\n+    0x2c3c2e78UL, 0x3d19cf8bUL, 0x6b544000UL, 0x3fc5bf40UL, 0xeb68981cUL,\n+    0xbd127023UL, 0xe4a1b000UL, 0x3fc527e5UL, 0xe5697dc7UL, 0x3d2633e8UL,\n+    0x8333b000UL, 0x3fc4913dUL, 0x54fdb678UL, 0x3d258379UL, 0xa5993000UL,\n+    0x3fc3fb45UL, 0x7e6a354dUL, 0xbd2cd1d8UL, 0xb0159000UL, 0x3fc365fcUL,\n+    0x234b7289UL, 0x3cc62fa8UL, 0x0c868000UL, 0x3fc2d161UL, 0xcb81b4a1UL,\n+    0x3d039d6cUL, 0x2a49c000UL, 0x3fc23d71UL, 0x8fd3df5cUL, 0x3d100d23UL,\n+    0x7e23f000UL, 0x3fc1aa2bUL, 0x44389934UL, 0x3d2ca78eUL, 0x8227e000UL,\n+    0x3fc1178eUL, 0xce2d07f2UL, 0x3d21ef78UL, 0xb59e4000UL, 0x3fc08598UL,\n+    0x7009902cUL, 0xbd27e5ddUL, 0x39dbe000UL, 0x3fbfe891UL, 0x4fa10afdUL,\n+    0xbd2534d6UL, 0x830a2000UL, 0x3fbec739UL, 0xafe645e0UL, 0xbd2dc068UL,\n+    0x63844000UL, 0x3fbda727UL, 0x1fa71733UL, 0x3d1a8940UL, 0x01bc4000UL,\n+    0x3fbc8858UL, 0xc65aacd3UL, 0x3d2646d1UL, 0x8dad6000UL, 0x3fbb6ac8UL,\n+    0x2bf768e5UL, 0xbd139080UL, 0x40b1c000UL, 0x3fba4e76UL, 0xb94407c8UL,\n+    0xbd0e42b6UL, 0x5d594000UL, 0x3fb9335eUL, 0x3abd47daUL, 0x3d23115cUL,\n+    0x2f40e000UL, 0x3fb8197eUL, 0xf96ffdf7UL, 0x3d0f80dcUL, 0x0aeac000UL,\n+    0x3fb700d3UL, 0xa99ded32UL, 0x3cec1e8dUL, 0x4d97a000UL, 0x3fb5e95aUL,\n+    0x3c5d1d1eUL, 0xbd2c6906UL, 0x5d208000UL, 0x3fb4d311UL, 0x82f4e1efUL,\n+    0xbcf53a25UL, 0xa7d1e000UL, 0x3fb3bdf5UL, 0xa5db4ed7UL, 0x3d2cc85eUL,\n+    0xa4472000UL, 0x3fb2aa04UL, 0xae9c697dUL, 0xbd20b6e8UL, 0xd1466000UL,\n+    0x3fb1973bUL, 0x560d9e9bUL, 0xbd25325dUL, 0xb59e4000UL, 0x3fb08598UL,\n+    0x7009902cUL, 0xbd17e5ddUL, 0xc006c000UL, 0x3faeea31UL, 0x4fc93b7bUL,\n+    0xbd0e113eUL, 0xcdddc000UL, 0x3faccb73UL, 0x47d82807UL, 0xbd1a68f2UL,\n+    0xd0fb0000UL, 0x3faaaef2UL, 0x353bb42eUL, 0x3d20fc1aUL, 0x149fc000UL,\n+    0x3fa894aaUL, 0xd05a267dUL, 0xbd197995UL, 0xf2d4c000UL, 0x3fa67c94UL,\n+    0xec19afa2UL, 0xbd029efbUL, 0xd42e0000UL, 0x3fa466aeUL, 0x75bdfd28UL,\n+    0xbd2c1673UL, 0x2f8d0000UL, 0x3fa252f3UL, 0xe021b67bUL, 0x3d283e9aUL,\n+    0x89e74000UL, 0x3fa0415dUL, 0x5cf1d753UL, 0x3d0111c0UL, 0xec148000UL,\n+    0x3f9c63d2UL, 0x3f9eb2f3UL, 0x3d2578c6UL, 0x28c90000UL, 0x3f984925UL,\n+    0x325a0c34UL, 0xbd2aa0baUL, 0x25980000UL, 0x3f9432a9UL, 0x928637feUL,\n+    0x3d098139UL, 0x58938000UL, 0x3f902056UL, 0x06e2f7d2UL, 0xbd23dc5bUL,\n+    0xa3890000UL, 0x3f882448UL, 0xda74f640UL, 0xbd275577UL, 0x75890000UL,\n+    0x3f801015UL, 0x999d2be8UL, 0xbd10c76bUL, 0x59580000UL, 0x3f700805UL,\n+    0xcb31c67bUL, 0x3d2166afUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x80000000UL, 0xfefa3800UL, 0x3fa62e42UL, 0x93c76730UL, 0x3ceef357UL,\n+    0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL, 0x3d6fb175UL,\n+    0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL, 0x9999999aUL, 0x3fc99999UL,\n+    0x00000000UL, 0xbfe00000UL, 0x00000000UL, 0xffffe000UL, 0x00000000UL,\n+    0xffffe000UL\n+};\n+\n+\/\/registers,\n+\/\/ input: xmm0\n+\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n+\/\/          rax, rdx, rcx, rbx (tmp)\n+void MacroAssembler::fast_log(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n+                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n+                              Register eax, Register ecx, Register edx, Register tmp) {\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2;\n+  Label L_2TAG_PACKET_10_0_2;\n+\n+  assert_different_registers(tmp, eax, ecx, edx);\n+  address static_const_table = (address)_static_const_table_log;\n+\n+  subl(rsp, 104);\n+  movl(Address(rsp, 40), tmp);\n+  lea(tmp, ExternalAddress(static_const_table));\n+  xorpd(xmm2, xmm2);\n+  movl(eax, 16368);\n+  pinsrw(xmm2, eax, 3);\n+  xorpd(xmm3, xmm3);\n+  movl(edx, 30704);\n+  pinsrw(xmm3, edx, 3);\n+  movsd(xmm0, Address(rsp, 112));\n+  movapd(xmm1, xmm0);\n+  movl(ecx, 32768);\n+  movdl(xmm4, ecx);\n+  movsd(xmm5, Address(tmp, 2128));         \/\/ 0x00000000UL, 0xffffe000UL\n+  pextrw(eax, xmm0, 3);\n+  por(xmm0, xmm2);\n+  psllq(xmm0, 5);\n+  movl(ecx, 16352);\n+  psrlq(xmm0, 34);\n+  rcpss(xmm0, xmm0);\n+  psllq(xmm1, 12);\n+  pshufd(xmm6, xmm5, 228);\n+  psrlq(xmm1, 12);\n+  subl(eax, 16);\n+  cmpl(eax, 32736);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+\n+  bind(L_2TAG_PACKET_1_0_2);\n+  paddd(xmm0, xmm4);\n+  por(xmm1, xmm3);\n+  movdl(edx, xmm0);\n+  psllq(xmm0, 29);\n+  pand(xmm5, xmm1);\n+  pand(xmm0, xmm6);\n+  subsd(xmm1, xmm5);\n+  mulpd(xmm5, xmm0);\n+  andl(eax, 32752);\n+  subl(eax, ecx);\n+  cvtsi2sdl(xmm7, eax);\n+  mulsd(xmm1, xmm0);\n+  movsd(xmm6, Address(tmp, 2064));         \/\/ 0xfefa3800UL, 0x3fa62e42UL\n+  movdqu(xmm3, Address(tmp, 2080));        \/\/ 0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL\n+  subsd(xmm5, xmm2);\n+  andl(edx, 16711680);\n+  shrl(edx, 12);\n+  movdqu(xmm0, Address(tmp, edx));\n+  movdqu(xmm4, Address(tmp, 2096));        \/\/ 0x3d6fb175UL, 0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL\n+  addsd(xmm1, xmm5);\n+  movdqu(xmm2, Address(tmp, 2112));        \/\/ 0x9999999aUL, 0x3fc99999UL, 0x00000000UL, 0xbfe00000UL\n+  mulsd(xmm6, xmm7);\n+  pshufd(xmm5, xmm1, 68);\n+  mulsd(xmm7, Address(tmp, 2072));         \/\/ 0x93c76730UL, 0x3ceef357UL, 0x92492492UL, 0x3fc24924UL\n+  mulsd(xmm3, xmm1);\n+  addsd(xmm0, xmm6);\n+  mulpd(xmm4, xmm5);\n+  mulpd(xmm5, xmm5);\n+  pshufd(xmm6, xmm0, 228);\n+  addsd(xmm0, xmm1);\n+  addpd(xmm4, xmm2);\n+  mulpd(xmm3, xmm5);\n+  subsd(xmm6, xmm0);\n+  mulsd(xmm4, xmm1);\n+  pshufd(xmm2, xmm0, 238);\n+  addsd(xmm1, xmm6);\n+  mulsd(xmm5, xmm5);\n+  addsd(xmm7, xmm2);\n+  addpd(xmm4, xmm3);\n+  addsd(xmm1, xmm7);\n+  mulpd(xmm4, xmm5);\n+  addsd(xmm1, xmm4);\n+  pshufd(xmm5, xmm4, 238);\n+  addsd(xmm1, xmm5);\n+  addsd(xmm0, xmm1);\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_0_0_2);\n+  movsd(xmm0, Address(rsp, 112));\n+  movdqu(xmm1, xmm0);\n+  addl(eax, 16);\n+  cmpl(eax, 32768);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_3_0_2);\n+  cmpl(eax, 16);\n+  jcc(Assembler::below, L_2TAG_PACKET_4_0_2);\n+\n+  bind(L_2TAG_PACKET_5_0_2);\n+  addsd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_6_0_2);\n+  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n+  cmpl(edx, 0);\n+  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n+  jmp(L_2TAG_PACKET_7_0_2);\n+\n+  bind(L_2TAG_PACKET_3_0_2);\n+  movdl(edx, xmm1);\n+  psrlq(xmm1, 32);\n+  movdl(ecx, xmm1);\n+  addl(ecx, ecx);\n+  cmpl(ecx, -2097152);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_6_0_2);\n+  orl(edx, ecx);\n+  cmpl(edx, 0);\n+  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n+\n+  bind(L_2TAG_PACKET_7_0_2);\n+  xorpd(xmm1, xmm1);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 32752);\n+  pinsrw(xmm1, eax, 3);\n+  movl(edx, 3);\n+  mulsd(xmm0, xmm1);\n+\n+  bind(L_2TAG_PACKET_9_0_2);\n+  movsd(Address(rsp, 0), xmm0);\n+  movsd(xmm0, Address(rsp, 112));\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_10_0_2);\n+\n+  bind(L_2TAG_PACKET_8_0_2);\n+  xorpd(xmm1, xmm1);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 49136);\n+  pinsrw(xmm0, eax, 3);\n+  divsd(xmm0, xmm1);\n+  movl(edx, 2);\n+  jmp(L_2TAG_PACKET_9_0_2);\n+\n+  bind(L_2TAG_PACKET_4_0_2);\n+  movdl(edx, xmm1);\n+  psrlq(xmm1, 32);\n+  movdl(ecx, xmm1);\n+  orl(edx, ecx);\n+  cmpl(edx, 0);\n+  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n+  xorpd(xmm1, xmm1);\n+  movl(eax, 18416);\n+  pinsrw(xmm1, eax, 3);\n+  mulsd(xmm0, xmm1);\n+  movapd(xmm1, xmm0);\n+  pextrw(eax, xmm0, 3);\n+  por(xmm0, xmm2);\n+  psllq(xmm0, 5);\n+  movl(ecx, 18416);\n+  psrlq(xmm0, 34);\n+  rcpss(xmm0, xmm0);\n+  psllq(xmm1, 12);\n+  pshufd(xmm6, xmm5, 228);\n+  psrlq(xmm1, 12);\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_2_0_2);\n+  movsd(Address(rsp, 24), xmm0);\n+  fld_d(Address(rsp, 24));\n+\n+  bind(L_2TAG_PACKET_10_0_2);\n+  movl(tmp, Address(rsp, 40));\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_log.cpp","additions":345,"deletions":0,"binary":false,"changes":345,"status":"added"},{"patch":"@@ -0,0 +1,358 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - LOG10()\n+\/\/                     ---------------------\n+\/\/\n+\/\/    Let x=2^k * mx, mx in [1,2)\n+\/\/\n+\/\/    Get B~1\/mx based on the output of rcpss instruction (B0)\n+\/\/    B = int((B0*LH*2^7+0.5))\/2^7\n+\/\/    LH is a short approximation for log10(e)\n+\/\/\n+\/\/    Reduced argument: r=B*mx-LH (computed accurately in high and low parts)\n+\/\/\n+\/\/    Result:  k*log10(2) - log(B) + p(r)\n+\/\/             p(r) is a degree 7 polynomial\n+\/\/             -log(B) read from data table (high, low parts)\n+\/\/             Result is formed from high and low parts\n+\/\/\n+\/\/ Special cases:\n+\/\/  log10(0) = -INF with divide-by-zero exception raised\n+\/\/  log10(1) = +0\n+\/\/  log10(x) = NaN with invalid exception raised if x < -0, including -INF\n+\/\/  log10(+INF) = +INF\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 32 bit code is at most SSE2 compliant\n+\n+ATTRIBUTE_ALIGNED(16) juint _static_const_table_log10[] =\n+{\n+    0x509f7800UL, 0x3fd34413UL, 0x1f12b358UL, 0x3d1fef31UL, 0x80333400UL,\n+    0x3fd32418UL, 0xc671d9d0UL, 0xbcf542bfUL, 0x51195000UL, 0x3fd30442UL,\n+    0x78a4b0c3UL, 0x3d18216aUL, 0x6fc79400UL, 0x3fd2e490UL, 0x80fa389dUL,\n+    0xbc902869UL, 0x89d04000UL, 0x3fd2c502UL, 0x75c2f564UL, 0x3d040754UL,\n+    0x4ddd1c00UL, 0x3fd2a598UL, 0xd219b2c3UL, 0xbcfa1d84UL, 0x6baa7c00UL,\n+    0x3fd28651UL, 0xfd9abec1UL, 0x3d1be6d3UL, 0x94028800UL, 0x3fd2672dUL,\n+    0xe289a455UL, 0xbd1ede5eUL, 0x78b86400UL, 0x3fd2482cUL, 0x6734d179UL,\n+    0x3d1fe79bUL, 0xcca3c800UL, 0x3fd2294dUL, 0x981a40b8UL, 0xbced34eaUL,\n+    0x439c5000UL, 0x3fd20a91UL, 0xcc392737UL, 0xbd1a9cc3UL, 0x92752c00UL,\n+    0x3fd1ebf6UL, 0x03c9afe7UL, 0x3d1e98f8UL, 0x6ef8dc00UL, 0x3fd1cd7dUL,\n+    0x71dae7f4UL, 0x3d08a86cUL, 0x8fe4dc00UL, 0x3fd1af25UL, 0xee9185a1UL,\n+    0xbcff3412UL, 0xace59400UL, 0x3fd190eeUL, 0xc2cab353UL, 0x3cf17ed9UL,\n+    0x7e925000UL, 0x3fd172d8UL, 0x6952c1b2UL, 0x3cf1521cUL, 0xbe694400UL,\n+    0x3fd154e2UL, 0xcacb79caUL, 0xbd0bdc78UL, 0x26cbac00UL, 0x3fd1370dUL,\n+    0xf71f4de1UL, 0xbd01f8beUL, 0x72fa0800UL, 0x3fd11957UL, 0x55bf910bUL,\n+    0x3c946e2bUL, 0x5f106000UL, 0x3fd0fbc1UL, 0x39e639c1UL, 0x3d14a84bUL,\n+    0xa802a800UL, 0x3fd0de4aUL, 0xd3f31d5dUL, 0xbd178385UL, 0x0b992000UL,\n+    0x3fd0c0f3UL, 0x3843106fUL, 0xbd1f602fUL, 0x486ce800UL, 0x3fd0a3baUL,\n+    0x8819497cUL, 0x3cef987aUL, 0x1de49400UL, 0x3fd086a0UL, 0x1caa0467UL,\n+    0x3d0faec7UL, 0x4c30cc00UL, 0x3fd069a4UL, 0xa4424372UL, 0xbd1618fcUL,\n+    0x94490000UL, 0x3fd04cc6UL, 0x946517d2UL, 0xbd18384bUL, 0xb7e84000UL,\n+    0x3fd03006UL, 0xe0109c37UL, 0xbd19a6acUL, 0x798a0c00UL, 0x3fd01364UL,\n+    0x5121e864UL, 0xbd164cf7UL, 0x38ce8000UL, 0x3fcfedbfUL, 0x46214d1aUL,\n+    0xbcbbc402UL, 0xc8e62000UL, 0x3fcfb4efUL, 0xdab93203UL, 0x3d1e0176UL,\n+    0x2cb02800UL, 0x3fcf7c5aUL, 0x2a2ea8e4UL, 0xbcfec86aUL, 0xeeeaa000UL,\n+    0x3fcf43fdUL, 0xc18e49a4UL, 0x3cf110a8UL, 0x9bb6e800UL, 0x3fcf0bdaUL,\n+    0x923cc9c0UL, 0xbd15ce99UL, 0xc093f000UL, 0x3fced3efUL, 0x4d4b51e9UL,\n+    0x3d1a04c7UL, 0xec58f800UL, 0x3fce9c3cUL, 0x163cad59UL, 0x3cac8260UL,\n+    0x9a907000UL, 0x3fce2d7dUL, 0x3fa93646UL, 0x3ce4a1c0UL, 0x37311000UL,\n+    0x3fcdbf99UL, 0x32abd1fdUL, 0x3d07ea9dUL, 0x6744b800UL, 0x3fcd528cUL,\n+    0x4dcbdfd4UL, 0xbd1b08e2UL, 0xe36de800UL, 0x3fcce653UL, 0x0b7b7f7fUL,\n+    0xbd1b8f03UL, 0x77506800UL, 0x3fcc7aecUL, 0xa821c9fbUL, 0x3d13c163UL,\n+    0x00ff8800UL, 0x3fcc1053UL, 0x536bca76UL, 0xbd074ee5UL, 0x70719800UL,\n+    0x3fcba684UL, 0xd7da9b6bUL, 0xbd1fbf16UL, 0xc6f8d800UL, 0x3fcb3d7dUL,\n+    0xe2220bb3UL, 0x3d1a295dUL, 0x16c15800UL, 0x3fcad53cUL, 0xe724911eUL,\n+    0xbcf55822UL, 0x82533800UL, 0x3fca6dbcUL, 0x6d982371UL, 0x3cac567cUL,\n+    0x3c19e800UL, 0x3fca06fcUL, 0x84d17d80UL, 0x3d1da204UL, 0x85ef8000UL,\n+    0x3fc9a0f8UL, 0x54466a6aUL, 0xbd002204UL, 0xb0ac2000UL, 0x3fc93baeUL,\n+    0xd601fd65UL, 0x3d18840cUL, 0x1bb9b000UL, 0x3fc8d71cUL, 0x7bf58766UL,\n+    0xbd14f897UL, 0x34aae800UL, 0x3fc8733eUL, 0x3af6ac24UL, 0xbd0f5c45UL,\n+    0x76d68000UL, 0x3fc81012UL, 0x4303e1a1UL, 0xbd1f9a80UL, 0x6af57800UL,\n+    0x3fc7ad96UL, 0x43fbcb46UL, 0x3cf4c33eUL, 0xa6c51000UL, 0x3fc74bc7UL,\n+    0x70f0eac5UL, 0xbd192e3bUL, 0xccab9800UL, 0x3fc6eaa3UL, 0xc0093dfeUL,\n+    0xbd0faf15UL, 0x8b60b800UL, 0x3fc68a28UL, 0xde78d5fdUL, 0xbc9ea4eeUL,\n+    0x9d987000UL, 0x3fc62a53UL, 0x962bea6eUL, 0xbd194084UL, 0xc9b0e800UL,\n+    0x3fc5cb22UL, 0x888dd999UL, 0x3d1fe201UL, 0xe1634800UL, 0x3fc56c93UL,\n+    0x16ada7adUL, 0x3d1b1188UL, 0xc176c000UL, 0x3fc50ea4UL, 0x4159b5b5UL,\n+    0xbcf09c08UL, 0x51766000UL, 0x3fc4b153UL, 0x84393d23UL, 0xbcf6a89cUL,\n+    0x83695000UL, 0x3fc4549dUL, 0x9f0b8bbbUL, 0x3d1c4b8cUL, 0x538d5800UL,\n+    0x3fc3f881UL, 0xf49df747UL, 0x3cf89b99UL, 0xc8138000UL, 0x3fc39cfcUL,\n+    0xd503b834UL, 0xbd13b99fUL, 0xf0df0800UL, 0x3fc3420dUL, 0xf011b386UL,\n+    0xbd05d8beUL, 0xe7466800UL, 0x3fc2e7b2UL, 0xf39c7bc2UL, 0xbd1bb94eUL,\n+    0xcdd62800UL, 0x3fc28de9UL, 0x05e6d69bUL, 0xbd10ed05UL, 0xd015d800UL,\n+    0x3fc234b0UL, 0xe29b6c9dUL, 0xbd1ff967UL, 0x224ea800UL, 0x3fc1dc06UL,\n+    0x727711fcUL, 0xbcffb30dUL, 0x01540000UL, 0x3fc183e8UL, 0x39786c5aUL,\n+    0x3cc23f57UL, 0xb24d9800UL, 0x3fc12c54UL, 0xc905a342UL, 0x3d003a1dUL,\n+    0x82835800UL, 0x3fc0d54aUL, 0x9b9920c0UL, 0x3d03b25aUL, 0xc72ac000UL,\n+    0x3fc07ec7UL, 0x46f26a24UL, 0x3cf0fa41UL, 0xdd35d800UL, 0x3fc028caUL,\n+    0x41d9d6dcUL, 0x3d034a65UL, 0x52474000UL, 0x3fbfa6a4UL, 0x44f66449UL,\n+    0x3d19cad3UL, 0x2da3d000UL, 0x3fbefcb8UL, 0x67832999UL, 0x3d18400fUL,\n+    0x32a10000UL, 0x3fbe53ceUL, 0x9c0e3b1aUL, 0xbcff62fdUL, 0x556b7000UL,\n+    0x3fbdabe3UL, 0x02976913UL, 0xbcf8243bUL, 0x97e88000UL, 0x3fbd04f4UL,\n+    0xec793797UL, 0x3d1c0578UL, 0x09647000UL, 0x3fbc5effUL, 0x05fc0565UL,\n+    0xbd1d799eUL, 0xc6426000UL, 0x3fbbb9ffUL, 0x4625f5edUL, 0x3d1f5723UL,\n+    0xf7afd000UL, 0x3fbb15f3UL, 0xdd5aae61UL, 0xbd1a7e1eUL, 0xd358b000UL,\n+    0x3fba72d8UL, 0x3314e4d3UL, 0x3d17bc91UL, 0x9b1f5000UL, 0x3fb9d0abUL,\n+    0x9a4d514bUL, 0x3cf18c9bUL, 0x9cd4e000UL, 0x3fb92f69UL, 0x7e4496abUL,\n+    0x3cf1f96dUL, 0x31f4f000UL, 0x3fb88f10UL, 0xf56479e7UL, 0x3d165818UL,\n+    0xbf628000UL, 0x3fb7ef9cUL, 0x26bf486dUL, 0xbd1113a6UL, 0xb526b000UL,\n+    0x3fb7510cUL, 0x1a1c3384UL, 0x3ca9898dUL, 0x8e31e000UL, 0x3fb6b35dUL,\n+    0xb3875361UL, 0xbd0661acUL, 0xd01de000UL, 0x3fb6168cUL, 0x2a7cacfaUL,\n+    0xbd1bdf10UL, 0x0af23000UL, 0x3fb57a98UL, 0xff868816UL, 0x3cf046d0UL,\n+    0xd8ea0000UL, 0x3fb4df7cUL, 0x1515fbe7UL, 0xbd1fd529UL, 0xde3b2000UL,\n+    0x3fb44538UL, 0x6e59a132UL, 0x3d1faeeeUL, 0xc8df9000UL, 0x3fb3abc9UL,\n+    0xf1322361UL, 0xbd198807UL, 0x505f1000UL, 0x3fb3132dUL, 0x0888e6abUL,\n+    0x3d1e5380UL, 0x359bd000UL, 0x3fb27b61UL, 0xdfbcbb22UL, 0xbcfe2724UL,\n+    0x429ee000UL, 0x3fb1e463UL, 0x6eb4c58cUL, 0xbcfe4dd6UL, 0x4a673000UL,\n+    0x3fb14e31UL, 0x4ce1ac9bUL, 0x3d1ba691UL, 0x28b96000UL, 0x3fb0b8c9UL,\n+    0x8c7813b8UL, 0xbd0b3872UL, 0xc1f08000UL, 0x3fb02428UL, 0xc2bc8c2cUL,\n+    0x3cb5ea6bUL, 0x05a1a000UL, 0x3faf209cUL, 0x72e8f18eUL, 0xbce8df84UL,\n+    0xc0b5e000UL, 0x3fadfa6dUL, 0x9fdef436UL, 0x3d087364UL, 0xaf416000UL,\n+    0x3facd5c2UL, 0x1068c3a9UL, 0x3d0827e7UL, 0xdb356000UL, 0x3fabb296UL,\n+    0x120a34d3UL, 0x3d101a9fUL, 0x5dfea000UL, 0x3faa90e6UL, 0xdaded264UL,\n+    0xbd14c392UL, 0x6034c000UL, 0x3fa970adUL, 0x1c9d06a9UL, 0xbd1b705eUL,\n+    0x194c6000UL, 0x3fa851e8UL, 0x83996ad9UL, 0xbd0117bcUL, 0xcf4ac000UL,\n+    0x3fa73492UL, 0xb1a94a62UL, 0xbca5ea42UL, 0xd67b4000UL, 0x3fa618a9UL,\n+    0x75aed8caUL, 0xbd07119bUL, 0x9126c000UL, 0x3fa4fe29UL, 0x5291d533UL,\n+    0x3d12658fUL, 0x6f4d4000UL, 0x3fa3e50eUL, 0xcd2c5cd9UL, 0x3d1d5c70UL,\n+    0xee608000UL, 0x3fa2cd54UL, 0xd1008489UL, 0x3d1a4802UL, 0x9900e000UL,\n+    0x3fa1b6f9UL, 0x54fb5598UL, 0xbd16593fUL, 0x06bb6000UL, 0x3fa0a1f9UL,\n+    0x64ef57b4UL, 0xbd17636bUL, 0xb7940000UL, 0x3f9f1c9fUL, 0xee6a4737UL,\n+    0x3cb5d479UL, 0x91aa0000UL, 0x3f9cf7f5UL, 0x3a16373cUL, 0x3d087114UL,\n+    0x156b8000UL, 0x3f9ad5edUL, 0x836c554aUL, 0x3c6900b0UL, 0xd4764000UL,\n+    0x3f98b67fUL, 0xed12f17bUL, 0xbcffc974UL, 0x77dec000UL, 0x3f9699a7UL,\n+    0x232ce7eaUL, 0x3d1e35bbUL, 0xbfbf4000UL, 0x3f947f5dUL, 0xd84ffa6eUL,\n+    0x3d0e0a49UL, 0x82c7c000UL, 0x3f92679cUL, 0x8d170e90UL, 0xbd14d9f2UL,\n+    0xadd20000UL, 0x3f90525dUL, 0x86d9f88eUL, 0x3cdeb986UL, 0x86f10000UL,\n+    0x3f8c7f36UL, 0xb9e0a517UL, 0x3ce29faaUL, 0xb75c8000UL, 0x3f885e9eUL,\n+    0x542568cbUL, 0xbd1f7bdbUL, 0x46b30000UL, 0x3f8442e8UL, 0xb954e7d9UL,\n+    0x3d1e5287UL, 0xb7e60000UL, 0x3f802c07UL, 0x22da0b17UL, 0xbd19fb27UL,\n+    0x6c8b0000UL, 0x3f7833e3UL, 0x821271efUL, 0xbd190f96UL, 0x29910000UL,\n+    0x3f701936UL, 0xbc3491a5UL, 0xbd1bcf45UL, 0x354a0000UL, 0x3f600fe3UL,\n+    0xc0ff520aUL, 0xbd19d71cUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x509f7800UL, 0x3f934413UL, 0x1f12b358UL, 0x3cdfef31UL,\n+    0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL, 0xc0089309UL, 0x385593b1UL,\n+    0xc025c917UL, 0xdc963467UL, 0x3ffc6a02UL, 0x7f9d3aa1UL, 0x4016ab9fUL,\n+    0xdc77b115UL, 0xbff27af2UL, 0xf8000000UL, 0xffffffffUL, 0x00000000UL,\n+    0xffffe000UL, 0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n+};\n+\/\/registers,\n+\/\/ input: xmm0\n+\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n+\/\/          rax, rdx, rcx, rbx (tmp)\n+\n+void MacroAssembler::fast_log10(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n+                                XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n+                                Register eax, Register ecx, Register edx, Register tmp) {\n+\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2;\n+\n+  assert_different_registers(tmp, eax, ecx, edx);\n+\n+  address static_const_table_log10 = (address)_static_const_table_log10;\n+\n+  subl(rsp, 104);\n+  movl(Address(rsp, 40), tmp);\n+  lea(tmp, ExternalAddress(static_const_table_log10));\n+  xorpd(xmm2, xmm2);\n+  movl(eax, 16368);\n+  pinsrw(xmm2, eax, 3);\n+  movl(ecx, 1054736384);\n+  movdl(xmm7, ecx);\n+  xorpd(xmm3, xmm3);\n+  movl(edx, 30704);\n+  pinsrw(xmm3, edx, 3);\n+  movsd(xmm0, Address(rsp, 112));\n+  movdqu(xmm1, xmm0);\n+  movl(edx, 32768);\n+  movdl(xmm4, edx);\n+  movdqu(xmm5, Address(tmp, 2128));    \/\/0x3ffc6a02UL, 0x7f9d3aa1UL, 0x4016ab9fUL, 0xdc77b115UL\n+  pextrw(eax, xmm0, 3);\n+  por(xmm0, xmm2);\n+  movl(ecx, 16352);\n+  psllq(xmm0, 5);\n+  movsd(xmm2, Address(tmp, 2144));    \/\/0xbff27af2UL, 0xf8000000UL, 0xffffffffUL, 0x00000000UL\n+  psrlq(xmm0, 34);\n+  rcpss(xmm0, xmm0);\n+  psllq(xmm1, 12);\n+  pshufd(xmm6, xmm5, 78);\n+  psrlq(xmm1, 12);\n+  subl(eax, 16);\n+  cmpl(eax, 32736);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+\n+  bind(L_2TAG_PACKET_1_0_2);\n+  mulss(xmm0, xmm7);\n+  por(xmm1, xmm3);\n+  andpd(xmm5, xmm1);\n+  paddd(xmm0, xmm4);\n+  subsd(xmm1, xmm5);\n+  movdl(edx, xmm0);\n+  psllq(xmm0, 29);\n+  andpd(xmm0, xmm6);\n+  andl(eax, 32752);\n+  subl(eax, ecx);\n+  cvtsi2sdl(xmm7, eax);\n+  mulpd(xmm5, xmm0);\n+  mulsd(xmm1, xmm0);\n+  movsd(xmm6, Address(tmp, 2064));    \/\/0xbd19d71cUL, 0x00000000UL, 0x00000000UL, 0x00000000UL\n+  movdqu(xmm3, Address(tmp, 2080));    \/\/0x00000000UL, 0x509f7800UL, 0x3f934413UL, 0x1f12b358UL\n+  subsd(xmm5, xmm2);\n+  andl(edx, 16711680);\n+  shrl(edx, 12);\n+  movdqu(xmm0, Address(tmp, edx, Address::times_1, -1504));\n+  movdqu(xmm4, Address(tmp, 2096));    \/\/0x3cdfef31UL, 0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL\n+  addsd(xmm1, xmm5);\n+  movdqu(xmm2, Address(tmp, 2112));    \/\/0xc0089309UL, 0x385593b1UL, 0xc025c917UL, 0xdc963467UL\n+  mulsd(xmm6, xmm7);\n+  pshufd(xmm5, xmm1, 68);\n+  mulsd(xmm7, Address(tmp, 2072));    \/\/0x00000000UL, 0x00000000UL, 0x00000000UL, 0x509f7800UL\n+  mulsd(xmm3, xmm1);\n+  addsd(xmm0, xmm6);\n+  mulpd(xmm4, xmm5);\n+  movsd(xmm6, Address(tmp, 2152));    \/\/0xffffffffUL, 0x00000000UL, 0xffffe000UL, 0x00000000UL\n+  mulpd(xmm5, xmm5);\n+  addpd(xmm4, xmm2);\n+  mulpd(xmm3, xmm5);\n+  pshufd(xmm2, xmm0, 228);\n+  addsd(xmm0, xmm1);\n+  mulsd(xmm4, xmm1);\n+  subsd(xmm2, xmm0);\n+  mulsd(xmm6, xmm1);\n+  addsd(xmm1, xmm2);\n+  pshufd(xmm2, xmm0, 238);\n+  mulsd(xmm5, xmm5);\n+  addsd(xmm7, xmm2);\n+  addsd(xmm1, xmm6);\n+  addpd(xmm4, xmm3);\n+  addsd(xmm1, xmm7);\n+  mulpd(xmm4, xmm5);\n+  addsd(xmm1, xmm4);\n+  pshufd(xmm5, xmm4, 238);\n+  addsd(xmm1, xmm5);\n+  addsd(xmm0, xmm1);\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_0_0_2);\n+  movsd(xmm0, Address(rsp, 112));    \/\/0xbcfa1d84UL, 0x6baa7c00UL, 0x3fd28651UL, 0xfd9abec1UL\n+  movdqu(xmm1, xmm0);\n+  addl(eax, 16);\n+  cmpl(eax, 32768);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_3_0_2);\n+  cmpl(eax, 16);\n+  jcc(Assembler::below, L_2TAG_PACKET_4_0_2);\n+\n+  bind(L_2TAG_PACKET_5_0_2);\n+  addsd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_2_0_2);\n+\n+  bind(L_2TAG_PACKET_6_0_2);\n+  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n+  cmpl(edx, 0);\n+  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n+  jmp(L_2TAG_PACKET_7_0_2);\n+\n+  bind(L_2TAG_PACKET_3_0_2);\n+  movdl(edx, xmm1);\n+  psrlq(xmm1, 32);\n+  movdl(ecx, xmm1);\n+  addl(ecx, ecx);\n+  cmpl(ecx, -2097152);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_6_0_2);\n+  orl(edx, ecx);\n+  cmpl(edx, 0);\n+  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n+\n+  bind(L_2TAG_PACKET_7_0_2);\n+  xorpd(xmm1, xmm1);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 32752);\n+  pinsrw(xmm1, eax, 3);\n+  movl(edx, 9);\n+  mulsd(xmm0, xmm1);\n+\n+  bind(L_2TAG_PACKET_9_0_2);\n+  movsd(Address(rsp, 0), xmm0);\n+  movsd(xmm0, Address(rsp, 112));    \/\/0xbcfa1d84UL, 0x6baa7c00UL, 0x3fd28651UL, 0xfd9abec1UL\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_10_0_2);\n+\n+  bind(L_2TAG_PACKET_8_0_2);\n+  xorpd(xmm1, xmm1);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 49136);\n+  pinsrw(xmm0, eax, 3);\n+  divsd(xmm0, xmm1);\n+  movl(edx, 8);\n+  jmp(L_2TAG_PACKET_9_0_2);\n+\n+  bind(L_2TAG_PACKET_4_0_2);\n+  movdl(edx, xmm1);\n+  psrlq(xmm1, 32);\n+  movdl(ecx, xmm1);\n+  orl(edx, ecx);\n+  cmpl(edx, 0);\n+  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n+  xorpd(xmm1, xmm1);\n+  movl(eax, 18416);\n+  pinsrw(xmm1, eax, 3);\n+  mulsd(xmm0, xmm1);\n+  xorpd(xmm2, xmm2);\n+  movl(eax, 16368);\n+  pinsrw(xmm2, eax, 3);\n+  movdqu(xmm1, xmm0);\n+  pextrw(eax, xmm0, 3);\n+  por(xmm0, xmm2);\n+  movl(ecx, 18416);\n+  psllq(xmm0, 5);\n+  movsd(xmm2, Address(tmp, 2144));    \/\/0xbff27af2UL, 0xf8000000UL, 0xffffffffUL, 0x00000000UL\n+  psrlq(xmm0, 34);\n+  rcpss(xmm0, xmm0);\n+  psllq(xmm1, 12);\n+  pshufd(xmm6, xmm5, 78);\n+  psrlq(xmm1, 12);\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_2_0_2);\n+  movsd(Address(rsp, 24), xmm0);\n+  fld_d(Address(rsp, 24));\n+\n+  bind(L_2TAG_PACKET_10_0_2);\n+  movl(tmp, Address(rsp, 40));\n+\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_log10.cpp","additions":358,"deletions":0,"binary":false,"changes":358,"status":"added"},{"patch":"@@ -0,0 +1,1856 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION  - POW()\n+\/\/                     ---------------------\n+\/\/\n+\/\/    Let x=2^k * mx, mx in [1,2)\n+\/\/\n+\/\/    log2(x) calculation:\n+\/\/\n+\/\/    Get B~1\/mx based on the output of rcpps instruction (B0)\n+\/\/    B = int((B0*LH*2^9+0.5))\/2^9\n+\/\/    LH is a short approximation for log2(e)\n+\/\/\n+\/\/    Reduced argument, scaled by LH:\n+\/\/                r=B*mx-LH (computed accurately in high and low parts)\n+\/\/\n+\/\/    log2(x) result:  k - log2(B) + p(r)\n+\/\/             p(r) is a degree 8 polynomial\n+\/\/             -log2(B) read from data table (high, low parts)\n+\/\/             log2(x) is formed from high and low parts\n+\/\/    For |x| in [1-1\/32, 1+1\/16), a slower but more accurate computation\n+\/\/    based om the same table design is performed.\n+\/\/\n+\/\/   Main path is taken if | floor(log2(|log2(|x|)|) + floor(log2|y|) | < 8,\n+\/\/   to filter out all potential OF\/UF cases.\n+\/\/   exp2(y*log2(x)) is computed using an 8-bit index table and a degree 5\n+\/\/   polynomial\n+\/\/\n+\/\/ Special cases:\n+\/\/  pow(-0,y) = -INF and raises the divide-by-zero exception for y an odd\n+\/\/  integer < 0.\n+\/\/  pow(-0,y) = +INF and raises the divide-by-zero exception for y < 0 and\n+\/\/  not an odd integer.\n+\/\/  pow(-0,y) = -0 for y an odd integer > 0.\n+\/\/  pow(-0,y) = +0 for y > 0 and not an odd integer.\n+\/\/  pow(-1,-INF) = NaN.\n+\/\/  pow(+1,y) = NaN for any y, even a NaN.\n+\/\/  pow(x,-0) = 1 for any x, even a NaN.\n+\/\/  pow(x,y) = a NaN and raises the invalid exception for finite x < 0 and\n+\/\/  finite non-integer y.\n+\/\/  pow(x,-INF) = +INF for |x|<1.\n+\/\/  pow(x,-INF) = +0 for |x|>1.\n+\/\/  pow(x,+INF) = +0 for |x|<1.\n+\/\/  pow(x,+INF) = +INF for |x|>1.\n+\/\/  pow(-INF,y) = -0 for y an odd integer < 0.\n+\/\/  pow(-INF,y) = +0 for y < 0 and not an odd integer.\n+\/\/  pow(-INF,y) = -INF for y an odd integer > 0.\n+\/\/  pow(-INF,y) = +INF for y > 0 and not an odd integer.\n+\/\/  pow(+INF,y) = +0 for y <0.\n+\/\/  pow(+INF,y) = +INF for y >0.\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 32 bit code is at most SSE2 compliant\n+ATTRIBUTE_ALIGNED(16) juint _static_const_table_pow[] =\n+{\n+    0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL, 0xf8000000UL,\n+    0xffffffffUL, 0x00000000UL, 0xfffff800UL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0x00000000UL, 0x20000000UL, 0x3feff00aUL, 0x96621f95UL,\n+    0x3e5b1856UL, 0xe0000000UL, 0x3fefe019UL, 0xe5916f9eUL, 0xbe325278UL,\n+    0x00000000UL, 0x3fefd02fUL, 0x859a1062UL, 0x3e595fb7UL, 0xc0000000UL,\n+    0x3fefc049UL, 0xb245f18fUL, 0xbe529c38UL, 0xe0000000UL, 0x3fefb069UL,\n+    0xad2880a7UL, 0xbe501230UL, 0x60000000UL, 0x3fefa08fUL, 0xc8e72420UL,\n+    0x3e597bd1UL, 0x80000000UL, 0x3fef90baUL, 0xc30c4500UL, 0xbe5d6c75UL,\n+    0xe0000000UL, 0x3fef80eaUL, 0x02c63f43UL, 0x3e2e1318UL, 0xc0000000UL,\n+    0x3fef7120UL, 0xb3d4ccccUL, 0xbe44c52aUL, 0x00000000UL, 0x3fef615cUL,\n+    0xdbd91397UL, 0xbe4e7d6cUL, 0xa0000000UL, 0x3fef519cUL, 0x65c5cd68UL,\n+    0xbe522dc8UL, 0xa0000000UL, 0x3fef41e2UL, 0x46d1306cUL, 0xbe5a840eUL,\n+    0xe0000000UL, 0x3fef322dUL, 0xd2980e94UL, 0x3e5071afUL, 0xa0000000UL,\n+    0x3fef227eUL, 0x773abadeUL, 0xbe5891e5UL, 0xa0000000UL, 0x3fef12d4UL,\n+    0xdc6bf46bUL, 0xbe5cccbeUL, 0xe0000000UL, 0x3fef032fUL, 0xbc7247faUL,\n+    0xbe2bab83UL, 0x80000000UL, 0x3feef390UL, 0xbcaa1e46UL, 0xbe53bb3bUL,\n+    0x60000000UL, 0x3feee3f6UL, 0x5f6c682dUL, 0xbe54c619UL, 0x80000000UL,\n+    0x3feed461UL, 0x5141e368UL, 0xbe4b6d86UL, 0xe0000000UL, 0x3feec4d1UL,\n+    0xec678f76UL, 0xbe369af6UL, 0x80000000UL, 0x3feeb547UL, 0x41301f55UL,\n+    0xbe2d4312UL, 0x60000000UL, 0x3feea5c2UL, 0x676da6bdUL, 0xbe4d8dd0UL,\n+    0x60000000UL, 0x3fee9642UL, 0x57a891c4UL, 0x3e51f991UL, 0xa0000000UL,\n+    0x3fee86c7UL, 0xe4eb491eUL, 0x3e579bf9UL, 0x20000000UL, 0x3fee7752UL,\n+    0xfddc4a2cUL, 0xbe3356e6UL, 0xc0000000UL, 0x3fee67e1UL, 0xd75b5bf1UL,\n+    0xbe449531UL, 0x80000000UL, 0x3fee5876UL, 0xbd423b8eUL, 0x3df54fe4UL,\n+    0x60000000UL, 0x3fee4910UL, 0x330e51b9UL, 0x3e54289cUL, 0x80000000UL,\n+    0x3fee39afUL, 0x8651a95fUL, 0xbe55aad6UL, 0xa0000000UL, 0x3fee2a53UL,\n+    0x5e98c708UL, 0xbe2fc4a9UL, 0xe0000000UL, 0x3fee1afcUL, 0x0989328dUL,\n+    0x3e23958cUL, 0x40000000UL, 0x3fee0babUL, 0xee642abdUL, 0xbe425dd8UL,\n+    0xa0000000UL, 0x3fedfc5eUL, 0xc394d236UL, 0x3e526362UL, 0x20000000UL,\n+    0x3feded17UL, 0xe104aa8eUL, 0x3e4ce247UL, 0xc0000000UL, 0x3fedddd4UL,\n+    0x265a9be4UL, 0xbe5bb77aUL, 0x40000000UL, 0x3fedce97UL, 0x0ecac52fUL,\n+    0x3e4a7cb1UL, 0xe0000000UL, 0x3fedbf5eUL, 0x124cb3b8UL, 0x3e257024UL,\n+    0x80000000UL, 0x3fedb02bUL, 0xe6d4febeUL, 0xbe2033eeUL, 0x20000000UL,\n+    0x3feda0fdUL, 0x39cca00eUL, 0xbe3ddabcUL, 0xc0000000UL, 0x3fed91d3UL,\n+    0xef8a552aUL, 0xbe543390UL, 0x40000000UL, 0x3fed82afUL, 0xb8e85204UL,\n+    0x3e513850UL, 0xe0000000UL, 0x3fed738fUL, 0x3d59fe08UL, 0xbe5db728UL,\n+    0x40000000UL, 0x3fed6475UL, 0x3aa7ead1UL, 0x3e58804bUL, 0xc0000000UL,\n+    0x3fed555fUL, 0xf8a35ba9UL, 0xbe5298b0UL, 0x00000000UL, 0x3fed464fUL,\n+    0x9a88dd15UL, 0x3e5a8cdbUL, 0x40000000UL, 0x3fed3743UL, 0xb0b0a190UL,\n+    0x3e598635UL, 0x80000000UL, 0x3fed283cUL, 0xe2113295UL, 0xbe5c1119UL,\n+    0x80000000UL, 0x3fed193aUL, 0xafbf1728UL, 0xbe492e9cUL, 0x60000000UL,\n+    0x3fed0a3dUL, 0xe4a4ccf3UL, 0x3e19b90eUL, 0x20000000UL, 0x3fecfb45UL,\n+    0xba3cbeb8UL, 0x3e406b50UL, 0xc0000000UL, 0x3fecec51UL, 0x110f7dddUL,\n+    0x3e0d6806UL, 0x40000000UL, 0x3fecdd63UL, 0x7dd7d508UL, 0xbe5a8943UL,\n+    0x80000000UL, 0x3fecce79UL, 0x9b60f271UL, 0xbe50676aUL, 0x80000000UL,\n+    0x3fecbf94UL, 0x0b9ad660UL, 0x3e59174fUL, 0x60000000UL, 0x3fecb0b4UL,\n+    0x00823d9cUL, 0x3e5bbf72UL, 0x20000000UL, 0x3feca1d9UL, 0x38a6ec89UL,\n+    0xbe4d38f9UL, 0x80000000UL, 0x3fec9302UL, 0x3a0b7d8eUL, 0x3e53dbfdUL,\n+    0xc0000000UL, 0x3fec8430UL, 0xc6826b34UL, 0xbe27c5c9UL, 0xc0000000UL,\n+    0x3fec7563UL, 0x0c706381UL, 0xbe593653UL, 0x60000000UL, 0x3fec669bUL,\n+    0x7df34ec7UL, 0x3e461ab5UL, 0xe0000000UL, 0x3fec57d7UL, 0x40e5e7e8UL,\n+    0xbe5c3daeUL, 0x00000000UL, 0x3fec4919UL, 0x5602770fUL, 0xbe55219dUL,\n+    0xc0000000UL, 0x3fec3a5eUL, 0xec7911ebUL, 0x3e5a5d25UL, 0x60000000UL,\n+    0x3fec2ba9UL, 0xb39ea225UL, 0xbe53c00bUL, 0x80000000UL, 0x3fec1cf8UL,\n+    0x967a212eUL, 0x3e5a8ddfUL, 0x60000000UL, 0x3fec0e4cUL, 0x580798bdUL,\n+    0x3e5f53abUL, 0x00000000UL, 0x3febffa5UL, 0xb8282df6UL, 0xbe46b874UL,\n+    0x20000000UL, 0x3febf102UL, 0xe33a6729UL, 0x3e54963fUL, 0x00000000UL,\n+    0x3febe264UL, 0x3b53e88aUL, 0xbe3adce1UL, 0x60000000UL, 0x3febd3caUL,\n+    0xc2585084UL, 0x3e5cde9fUL, 0x80000000UL, 0x3febc535UL, 0xa335c5eeUL,\n+    0xbe39fd9cUL, 0x20000000UL, 0x3febb6a5UL, 0x7325b04dUL, 0x3e42ba15UL,\n+    0x60000000UL, 0x3feba819UL, 0x1564540fUL, 0x3e3a9f35UL, 0x40000000UL,\n+    0x3feb9992UL, 0x83fff592UL, 0xbe5465ceUL, 0xa0000000UL, 0x3feb8b0fUL,\n+    0xb9da63d3UL, 0xbe4b1a0aUL, 0x80000000UL, 0x3feb7c91UL, 0x6d6f1ea4UL,\n+    0x3e557657UL, 0x00000000UL, 0x3feb6e18UL, 0x5e80a1bfUL, 0x3e4ddbb6UL,\n+    0x00000000UL, 0x3feb5fa3UL, 0x1c9eacb5UL, 0x3e592877UL, 0xa0000000UL,\n+    0x3feb5132UL, 0x6d40beb3UL, 0xbe51858cUL, 0xa0000000UL, 0x3feb42c6UL,\n+    0xd740c67bUL, 0x3e427ad2UL, 0x40000000UL, 0x3feb345fUL, 0xa3e0cceeUL,\n+    0xbe5c2fc4UL, 0x40000000UL, 0x3feb25fcUL, 0x8e752b50UL, 0xbe3da3c2UL,\n+    0xc0000000UL, 0x3feb179dUL, 0xa892e7deUL, 0x3e1fb481UL, 0xc0000000UL,\n+    0x3feb0943UL, 0x21ed71e9UL, 0xbe365206UL, 0x20000000UL, 0x3feafaeeUL,\n+    0x0e1380a3UL, 0x3e5c5b7bUL, 0x20000000UL, 0x3feaec9dUL, 0x3c3d640eUL,\n+    0xbe5dbbd0UL, 0x60000000UL, 0x3feade50UL, 0x8f97a715UL, 0x3e3a8ec5UL,\n+    0x20000000UL, 0x3fead008UL, 0x23ab2839UL, 0x3e2fe98aUL, 0x40000000UL,\n+    0x3feac1c4UL, 0xf4bbd50fUL, 0x3e54d8f6UL, 0xe0000000UL, 0x3feab384UL,\n+    0x14757c4dUL, 0xbe48774cUL, 0xc0000000UL, 0x3feaa549UL, 0x7c7b0eeaUL,\n+    0x3e5b51bbUL, 0x20000000UL, 0x3fea9713UL, 0xf56f7013UL, 0x3e386200UL,\n+    0xe0000000UL, 0x3fea88e0UL, 0xbe428ebeUL, 0xbe514af5UL, 0xe0000000UL,\n+    0x3fea7ab2UL, 0x8d0e4496UL, 0x3e4f9165UL, 0x60000000UL, 0x3fea6c89UL,\n+    0xdbacc5d5UL, 0xbe5c063bUL, 0x20000000UL, 0x3fea5e64UL, 0x3f19d970UL,\n+    0xbe5a0c8cUL, 0x20000000UL, 0x3fea5043UL, 0x09ea3e6bUL, 0x3e5065dcUL,\n+    0x80000000UL, 0x3fea4226UL, 0x78df246cUL, 0x3e5e05f6UL, 0x40000000UL,\n+    0x3fea340eUL, 0x4057d4a0UL, 0x3e431b2bUL, 0x40000000UL, 0x3fea25faUL,\n+    0x82867bb5UL, 0x3e4b76beUL, 0xa0000000UL, 0x3fea17eaUL, 0x9436f40aUL,\n+    0xbe5aad39UL, 0x20000000UL, 0x3fea09dfUL, 0x4b5253b3UL, 0x3e46380bUL,\n+    0x00000000UL, 0x3fe9fbd8UL, 0x8fc52466UL, 0xbe386f9bUL, 0x20000000UL,\n+    0x3fe9edd5UL, 0x22d3f344UL, 0xbe538347UL, 0x60000000UL, 0x3fe9dfd6UL,\n+    0x1ac33522UL, 0x3e5dbc53UL, 0x00000000UL, 0x3fe9d1dcUL, 0xeabdff1dUL,\n+    0x3e40fc0cUL, 0xe0000000UL, 0x3fe9c3e5UL, 0xafd30e73UL, 0xbe585e63UL,\n+    0xe0000000UL, 0x3fe9b5f3UL, 0xa52f226aUL, 0xbe43e8f9UL, 0x20000000UL,\n+    0x3fe9a806UL, 0xecb8698dUL, 0xbe515b36UL, 0x80000000UL, 0x3fe99a1cUL,\n+    0xf2b4e89dUL, 0x3e48b62bUL, 0x20000000UL, 0x3fe98c37UL, 0x7c9a88fbUL,\n+    0x3e44414cUL, 0x00000000UL, 0x3fe97e56UL, 0xda015741UL, 0xbe5d13baUL,\n+    0xe0000000UL, 0x3fe97078UL, 0x5fdace06UL, 0x3e51b947UL, 0x00000000UL,\n+    0x3fe962a0UL, 0x956ca094UL, 0x3e518785UL, 0x40000000UL, 0x3fe954cbUL,\n+    0x01164c1dUL, 0x3e5d5b57UL, 0xc0000000UL, 0x3fe946faUL, 0xe63b3767UL,\n+    0xbe4f84e7UL, 0x40000000UL, 0x3fe9392eUL, 0xe57cc2a9UL, 0x3e34eda3UL,\n+    0xe0000000UL, 0x3fe92b65UL, 0x8c75b544UL, 0x3e5766a0UL, 0xc0000000UL,\n+    0x3fe91da1UL, 0x37d1d087UL, 0xbe5e2ab1UL, 0x80000000UL, 0x3fe90fe1UL,\n+    0xa953dc20UL, 0x3e5fa1f3UL, 0x80000000UL, 0x3fe90225UL, 0xdbd3f369UL,\n+    0x3e47d6dbUL, 0xa0000000UL, 0x3fe8f46dUL, 0x1c9be989UL, 0xbe5e2b0aUL,\n+    0xa0000000UL, 0x3fe8e6b9UL, 0x3c93d76aUL, 0x3e5c8618UL, 0xe0000000UL,\n+    0x3fe8d909UL, 0x2182fc9aUL, 0xbe41aa9eUL, 0x20000000UL, 0x3fe8cb5eUL,\n+    0xe6b3539dUL, 0xbe530d19UL, 0x60000000UL, 0x3fe8bdb6UL, 0x49e58cc3UL,\n+    0xbe3bb374UL, 0xa0000000UL, 0x3fe8b012UL, 0xa7cfeb8fUL, 0x3e56c412UL,\n+    0x00000000UL, 0x3fe8a273UL, 0x8d52bc19UL, 0x3e1429b8UL, 0x60000000UL,\n+    0x3fe894d7UL, 0x4dc32c6cUL, 0xbe48604cUL, 0xc0000000UL, 0x3fe8873fUL,\n+    0x0c868e56UL, 0xbe564ee5UL, 0x00000000UL, 0x3fe879acUL, 0x56aee828UL,\n+    0x3e5e2fd8UL, 0x60000000UL, 0x3fe86c1cUL, 0x7ceab8ecUL, 0x3e493365UL,\n+    0xc0000000UL, 0x3fe85e90UL, 0x78d4dadcUL, 0xbe4f7f25UL, 0x00000000UL,\n+    0x3fe85109UL, 0x0ccd8280UL, 0x3e31e7a2UL, 0x40000000UL, 0x3fe84385UL,\n+    0x34ba4e15UL, 0x3e328077UL, 0x80000000UL, 0x3fe83605UL, 0xa670975aUL,\n+    0xbe53eee5UL, 0xa0000000UL, 0x3fe82889UL, 0xf61b77b2UL, 0xbe43a20aUL,\n+    0xa0000000UL, 0x3fe81b11UL, 0x13e6643bUL, 0x3e5e5fe5UL, 0xc0000000UL,\n+    0x3fe80d9dUL, 0x82cc94e8UL, 0xbe5ff1f9UL, 0xa0000000UL, 0x3fe8002dUL,\n+    0x8a0c9c5dUL, 0xbe42b0e7UL, 0x60000000UL, 0x3fe7f2c1UL, 0x22a16f01UL,\n+    0x3e5d9ea0UL, 0x20000000UL, 0x3fe7e559UL, 0xc38cd451UL, 0x3e506963UL,\n+    0xc0000000UL, 0x3fe7d7f4UL, 0x9902bc71UL, 0x3e4503d7UL, 0x40000000UL,\n+    0x3fe7ca94UL, 0xdef2a3c0UL, 0x3e3d98edUL, 0xa0000000UL, 0x3fe7bd37UL,\n+    0xed49abb0UL, 0x3e24c1ffUL, 0xe0000000UL, 0x3fe7afdeUL, 0xe3b0be70UL,\n+    0xbe40c467UL, 0x00000000UL, 0x3fe7a28aUL, 0xaf9f193cUL, 0xbe5dff6cUL,\n+    0xe0000000UL, 0x3fe79538UL, 0xb74cf6b6UL, 0xbe258ed0UL, 0xa0000000UL,\n+    0x3fe787ebUL, 0x1d9127c7UL, 0x3e345fb0UL, 0x40000000UL, 0x3fe77aa2UL,\n+    0x1028c21dUL, 0xbe4619bdUL, 0xa0000000UL, 0x3fe76d5cUL, 0x7cb0b5e4UL,\n+    0x3e40f1a2UL, 0xe0000000UL, 0x3fe7601aUL, 0x2b1bc4adUL, 0xbe32e8bbUL,\n+    0xe0000000UL, 0x3fe752dcUL, 0x6839f64eUL, 0x3e41f57bUL, 0xc0000000UL,\n+    0x3fe745a2UL, 0xc4121f7eUL, 0xbe52c40aUL, 0x60000000UL, 0x3fe7386cUL,\n+    0xd6852d72UL, 0xbe5c4e6bUL, 0xc0000000UL, 0x3fe72b39UL, 0x91d690f7UL,\n+    0xbe57f88fUL, 0xe0000000UL, 0x3fe71e0aUL, 0x627a2159UL, 0xbe4425d5UL,\n+    0xc0000000UL, 0x3fe710dfUL, 0x50a54033UL, 0x3e422b7eUL, 0x60000000UL,\n+    0x3fe703b8UL, 0x3b0b5f91UL, 0x3e5d3857UL, 0xe0000000UL, 0x3fe6f694UL,\n+    0x84d628a2UL, 0xbe51f090UL, 0x00000000UL, 0x3fe6e975UL, 0x306d8894UL,\n+    0xbe414d83UL, 0xe0000000UL, 0x3fe6dc58UL, 0x30bf24aaUL, 0xbe4650caUL,\n+    0x80000000UL, 0x3fe6cf40UL, 0xd4628d69UL, 0xbe5db007UL, 0xc0000000UL,\n+    0x3fe6c22bUL, 0xa2aae57bUL, 0xbe31d279UL, 0xc0000000UL, 0x3fe6b51aUL,\n+    0x860edf7eUL, 0xbe2d4c4aUL, 0x80000000UL, 0x3fe6a80dUL, 0xf3559341UL,\n+    0xbe5f7e98UL, 0xe0000000UL, 0x3fe69b03UL, 0xa885899eUL, 0xbe5c2011UL,\n+    0xe0000000UL, 0x3fe68dfdUL, 0x2bdc6d37UL, 0x3e224a82UL, 0xa0000000UL,\n+    0x3fe680fbUL, 0xc12ad1b9UL, 0xbe40cf56UL, 0x00000000UL, 0x3fe673fdUL,\n+    0x1bcdf659UL, 0xbdf52f2dUL, 0x00000000UL, 0x3fe66702UL, 0x5df10408UL,\n+    0x3e5663e0UL, 0xc0000000UL, 0x3fe65a0aUL, 0xa4070568UL, 0xbe40b12fUL,\n+    0x00000000UL, 0x3fe64d17UL, 0x71c54c47UL, 0x3e5f5e8bUL, 0x00000000UL,\n+    0x3fe64027UL, 0xbd4b7e83UL, 0x3e42ead6UL, 0xa0000000UL, 0x3fe6333aUL,\n+    0x61598bd2UL, 0xbe4c48d4UL, 0xc0000000UL, 0x3fe62651UL, 0x6f538d61UL,\n+    0x3e548401UL, 0xa0000000UL, 0x3fe6196cUL, 0x14344120UL, 0xbe529af6UL,\n+    0x00000000UL, 0x3fe60c8bUL, 0x5982c587UL, 0xbe3e1e4fUL, 0x00000000UL,\n+    0x3fe5ffadUL, 0xfe51d4eaUL, 0xbe4c897aUL, 0x80000000UL, 0x3fe5f2d2UL,\n+    0xfd46ebe1UL, 0x3e552e00UL, 0xa0000000UL, 0x3fe5e5fbUL, 0xa4695699UL,\n+    0x3e5ed471UL, 0x60000000UL, 0x3fe5d928UL, 0x80d118aeUL, 0x3e456b61UL,\n+    0xa0000000UL, 0x3fe5cc58UL, 0x304c330bUL, 0x3e54dc29UL, 0x80000000UL,\n+    0x3fe5bf8cUL, 0x0af2dedfUL, 0xbe3aa9bdUL, 0xe0000000UL, 0x3fe5b2c3UL,\n+    0x15fc9258UL, 0xbe479a37UL, 0xc0000000UL, 0x3fe5a5feUL, 0x9292c7eaUL,\n+    0x3e188650UL, 0x20000000UL, 0x3fe5993dUL, 0x33b4d380UL, 0x3e5d6d93UL,\n+    0x20000000UL, 0x3fe58c7fUL, 0x02fd16c7UL, 0x3e2fe961UL, 0xa0000000UL,\n+    0x3fe57fc4UL, 0x4a05edb6UL, 0xbe4d55b4UL, 0xa0000000UL, 0x3fe5730dUL,\n+    0x3d443abbUL, 0xbe5e6954UL, 0x00000000UL, 0x3fe5665aUL, 0x024acfeaUL,\n+    0x3e50e61bUL, 0x00000000UL, 0x3fe559aaUL, 0xcc9edd09UL, 0xbe325403UL,\n+    0x60000000UL, 0x3fe54cfdUL, 0x1fe26950UL, 0x3e5d500eUL, 0x60000000UL,\n+    0x3fe54054UL, 0x6c5ae164UL, 0xbe4a79b4UL, 0xc0000000UL, 0x3fe533aeUL,\n+    0x154b0287UL, 0xbe401571UL, 0xa0000000UL, 0x3fe5270cUL, 0x0673f401UL,\n+    0xbe56e56bUL, 0xe0000000UL, 0x3fe51a6dUL, 0x751b639cUL, 0x3e235269UL,\n+    0xa0000000UL, 0x3fe50dd2UL, 0x7c7b2bedUL, 0x3ddec887UL, 0xc0000000UL,\n+    0x3fe5013aUL, 0xafab4e17UL, 0x3e5e7575UL, 0x60000000UL, 0x3fe4f4a6UL,\n+    0x2e308668UL, 0x3e59aed6UL, 0x80000000UL, 0x3fe4e815UL, 0xf33e2a76UL,\n+    0xbe51f184UL, 0xe0000000UL, 0x3fe4db87UL, 0x839f3e3eUL, 0x3e57db01UL,\n+    0xc0000000UL, 0x3fe4cefdUL, 0xa9eda7bbUL, 0x3e535e0fUL, 0x00000000UL,\n+    0x3fe4c277UL, 0x2a8f66a5UL, 0x3e5ce451UL, 0xc0000000UL, 0x3fe4b5f3UL,\n+    0x05192456UL, 0xbe4e8518UL, 0xc0000000UL, 0x3fe4a973UL, 0x4aa7cd1dUL,\n+    0x3e46784aUL, 0x40000000UL, 0x3fe49cf7UL, 0x8e23025eUL, 0xbe5749f2UL,\n+    0x00000000UL, 0x3fe4907eUL, 0x18d30215UL, 0x3e360f39UL, 0x20000000UL,\n+    0x3fe48408UL, 0x63dcf2f3UL, 0x3e5e00feUL, 0xc0000000UL, 0x3fe47795UL,\n+    0x46182d09UL, 0xbe5173d9UL, 0xa0000000UL, 0x3fe46b26UL, 0x8f0e62aaUL,\n+    0xbe48f281UL, 0xe0000000UL, 0x3fe45ebaUL, 0x5775c40cUL, 0xbe56aad4UL,\n+    0x60000000UL, 0x3fe45252UL, 0x0fe25f69UL, 0x3e48bd71UL, 0x40000000UL,\n+    0x3fe445edUL, 0xe9989ec5UL, 0x3e590d97UL, 0x80000000UL, 0x3fe4398bUL,\n+    0xb3d9ffe3UL, 0x3e479dbcUL, 0x20000000UL, 0x3fe42d2dUL, 0x388e4d2eUL,\n+    0xbe5eed80UL, 0xe0000000UL, 0x3fe420d1UL, 0x6f797c18UL, 0x3e554b4cUL,\n+    0x20000000UL, 0x3fe4147aUL, 0x31048bb4UL, 0xbe5b1112UL, 0x80000000UL,\n+    0x3fe40825UL, 0x2efba4f9UL, 0x3e48ebc7UL, 0x40000000UL, 0x3fe3fbd4UL,\n+    0x50201119UL, 0x3e40b701UL, 0x40000000UL, 0x3fe3ef86UL, 0x0a4db32cUL,\n+    0x3e551de8UL, 0xa0000000UL, 0x3fe3e33bUL, 0x0c9c148bUL, 0xbe50c1f6UL,\n+    0x20000000UL, 0x3fe3d6f4UL, 0xc9129447UL, 0x3e533fa0UL, 0x00000000UL,\n+    0x3fe3cab0UL, 0xaae5b5a0UL, 0xbe22b68eUL, 0x20000000UL, 0x3fe3be6fUL,\n+    0x02305e8aUL, 0xbe54fc08UL, 0x60000000UL, 0x3fe3b231UL, 0x7f908258UL,\n+    0x3e57dc05UL, 0x00000000UL, 0x3fe3a5f7UL, 0x1a09af78UL, 0x3e08038bUL,\n+    0xe0000000UL, 0x3fe399bfUL, 0x490643c1UL, 0xbe5dbe42UL, 0xe0000000UL,\n+    0x3fe38d8bUL, 0x5e8ad724UL, 0xbe3c2b72UL, 0x20000000UL, 0x3fe3815bUL,\n+    0xc67196b6UL, 0x3e1713cfUL, 0xa0000000UL, 0x3fe3752dUL, 0x6182e429UL,\n+    0xbe3ec14cUL, 0x40000000UL, 0x3fe36903UL, 0xab6eb1aeUL, 0x3e5a2cc5UL,\n+    0x40000000UL, 0x3fe35cdcUL, 0xfe5dc064UL, 0xbe5c5878UL, 0x40000000UL,\n+    0x3fe350b8UL, 0x0ba6b9e4UL, 0x3e51619bUL, 0x80000000UL, 0x3fe34497UL,\n+    0x857761aaUL, 0x3e5fff53UL, 0x00000000UL, 0x3fe3387aUL, 0xf872d68cUL,\n+    0x3e484f4dUL, 0xa0000000UL, 0x3fe32c5fUL, 0x087e97c2UL, 0x3e52842eUL,\n+    0x80000000UL, 0x3fe32048UL, 0x73d6d0c0UL, 0xbe503edfUL, 0x80000000UL,\n+    0x3fe31434UL, 0x0c1456a1UL, 0xbe5f72adUL, 0xa0000000UL, 0x3fe30823UL,\n+    0x83a1a4d5UL, 0xbe5e65ccUL, 0xe0000000UL, 0x3fe2fc15UL, 0x855a7390UL,\n+    0xbe506438UL, 0x40000000UL, 0x3fe2f00bUL, 0xa2898287UL, 0x3e3d22a2UL,\n+    0xe0000000UL, 0x3fe2e403UL, 0x8b56f66fUL, 0xbe5aa5fdUL, 0x80000000UL,\n+    0x3fe2d7ffUL, 0x52db119aUL, 0x3e3a2e3dUL, 0x60000000UL, 0x3fe2cbfeUL,\n+    0xe2ddd4c0UL, 0xbe586469UL, 0x40000000UL, 0x3fe2c000UL, 0x6b01bf10UL,\n+    0x3e352b9dUL, 0x40000000UL, 0x3fe2b405UL, 0xb07a1cdfUL, 0x3e5c5cdaUL,\n+    0x80000000UL, 0x3fe2a80dUL, 0xc7b5f868UL, 0xbe5668b3UL, 0xc0000000UL,\n+    0x3fe29c18UL, 0x185edf62UL, 0xbe563d66UL, 0x00000000UL, 0x3fe29027UL,\n+    0xf729e1ccUL, 0x3e59a9a0UL, 0x80000000UL, 0x3fe28438UL, 0x6433c727UL,\n+    0xbe43cc89UL, 0x00000000UL, 0x3fe2784dUL, 0x41782631UL, 0xbe30750cUL,\n+    0xa0000000UL, 0x3fe26c64UL, 0x914911b7UL, 0xbe58290eUL, 0x40000000UL,\n+    0x3fe2607fUL, 0x3dcc73e1UL, 0xbe4269cdUL, 0x00000000UL, 0x3fe2549dUL,\n+    0x2751bf70UL, 0xbe5a6998UL, 0xc0000000UL, 0x3fe248bdUL, 0x4248b9fbUL,\n+    0xbe4ddb00UL, 0x80000000UL, 0x3fe23ce1UL, 0xf35cf82fUL, 0x3e561b71UL,\n+    0x60000000UL, 0x3fe23108UL, 0x8e481a2dUL, 0x3e518fb9UL, 0x60000000UL,\n+    0x3fe22532UL, 0x5ab96edcUL, 0xbe5fafc5UL, 0x40000000UL, 0x3fe2195fUL,\n+    0x80943911UL, 0xbe07f819UL, 0x40000000UL, 0x3fe20d8fUL, 0x386f2d6cUL,\n+    0xbe54ba8bUL, 0x40000000UL, 0x3fe201c2UL, 0xf29664acUL, 0xbe5eb815UL,\n+    0x20000000UL, 0x3fe1f5f8UL, 0x64f03390UL, 0x3e5e320cUL, 0x20000000UL,\n+    0x3fe1ea31UL, 0x747ff696UL, 0x3e5ef0a5UL, 0x40000000UL, 0x3fe1de6dUL,\n+    0x3e9ceb51UL, 0xbe5f8d27UL, 0x20000000UL, 0x3fe1d2acUL, 0x4ae0b55eUL,\n+    0x3e5faa21UL, 0x20000000UL, 0x3fe1c6eeUL, 0x28569a5eUL, 0x3e598a4fUL,\n+    0x20000000UL, 0x3fe1bb33UL, 0x54b33e07UL, 0x3e46130aUL, 0x20000000UL,\n+    0x3fe1af7bUL, 0x024f1078UL, 0xbe4dbf93UL, 0x00000000UL, 0x3fe1a3c6UL,\n+    0xb0783bfaUL, 0x3e419248UL, 0xe0000000UL, 0x3fe19813UL, 0x2f02b836UL,\n+    0x3e4e02b7UL, 0xc0000000UL, 0x3fe18c64UL, 0x28dec9d4UL, 0x3e09064fUL,\n+    0x80000000UL, 0x3fe180b8UL, 0x45cbf406UL, 0x3e5b1f46UL, 0x40000000UL,\n+    0x3fe1750fUL, 0x03d9964cUL, 0x3e5b0a79UL, 0x00000000UL, 0x3fe16969UL,\n+    0x8b5b882bUL, 0xbe238086UL, 0xa0000000UL, 0x3fe15dc5UL, 0x73bad6f8UL,\n+    0xbdf1fca4UL, 0x20000000UL, 0x3fe15225UL, 0x5385769cUL, 0x3e5e8d76UL,\n+    0xa0000000UL, 0x3fe14687UL, 0x1676dc6bUL, 0x3e571d08UL, 0x20000000UL,\n+    0x3fe13aedUL, 0xa8c41c7fUL, 0xbe598a25UL, 0x60000000UL, 0x3fe12f55UL,\n+    0xc4e1aaf0UL, 0x3e435277UL, 0xa0000000UL, 0x3fe123c0UL, 0x403638e1UL,\n+    0xbe21aa7cUL, 0xc0000000UL, 0x3fe1182eUL, 0x557a092bUL, 0xbdd0116bUL,\n+    0xc0000000UL, 0x3fe10c9fUL, 0x7d779f66UL, 0x3e4a61baUL, 0xc0000000UL,\n+    0x3fe10113UL, 0x2b09c645UL, 0xbe5d586eUL, 0x20000000UL, 0x3fe0ea04UL,\n+    0xea2cad46UL, 0x3e5aa97cUL, 0x20000000UL, 0x3fe0d300UL, 0x23190e54UL,\n+    0x3e50f1a7UL, 0xa0000000UL, 0x3fe0bc07UL, 0x1379a5a6UL, 0xbe51619dUL,\n+    0x60000000UL, 0x3fe0a51aUL, 0x926a3d4aUL, 0x3e5cf019UL, 0xa0000000UL,\n+    0x3fe08e38UL, 0xa8c24358UL, 0x3e35241eUL, 0x20000000UL, 0x3fe07762UL,\n+    0x24317e7aUL, 0x3e512cfaUL, 0x00000000UL, 0x3fe06097UL, 0xfd9cf274UL,\n+    0xbe55bef3UL, 0x00000000UL, 0x3fe049d7UL, 0x3689b49dUL, 0xbe36d26dUL,\n+    0x40000000UL, 0x3fe03322UL, 0xf72ef6c4UL, 0xbe54cd08UL, 0xa0000000UL,\n+    0x3fe01c78UL, 0x23702d2dUL, 0xbe5900bfUL, 0x00000000UL, 0x3fe005daUL,\n+    0x3f59c14cUL, 0x3e57d80bUL, 0x40000000UL, 0x3fdfde8dUL, 0xad67766dUL,\n+    0xbe57fad4UL, 0x40000000UL, 0x3fdfb17cUL, 0x644f4ae7UL, 0x3e1ee43bUL,\n+    0x40000000UL, 0x3fdf8481UL, 0x903234d2UL, 0x3e501a86UL, 0x40000000UL,\n+    0x3fdf579cUL, 0xafe9e509UL, 0xbe267c3eUL, 0x00000000UL, 0x3fdf2acdUL,\n+    0xb7dfda0bUL, 0xbe48149bUL, 0x40000000UL, 0x3fdefe13UL, 0x3b94305eUL,\n+    0x3e5f4ea7UL, 0x80000000UL, 0x3fded16fUL, 0x5d95da61UL, 0xbe55c198UL,\n+    0x00000000UL, 0x3fdea4e1UL, 0x406960c9UL, 0xbdd99a19UL, 0x00000000UL,\n+    0x3fde7868UL, 0xd22f3539UL, 0x3e470c78UL, 0x80000000UL, 0x3fde4c04UL,\n+    0x83eec535UL, 0xbe3e1232UL, 0x40000000UL, 0x3fde1fb6UL, 0x3dfbffcbUL,\n+    0xbe4b7d71UL, 0x40000000UL, 0x3fddf37dUL, 0x7e1be4e0UL, 0xbe5b8f8fUL,\n+    0x40000000UL, 0x3fddc759UL, 0x46dae887UL, 0xbe350458UL, 0x80000000UL,\n+    0x3fdd9b4aUL, 0xed6ecc49UL, 0xbe5f0045UL, 0x80000000UL, 0x3fdd6f50UL,\n+    0x2e9e883cUL, 0x3e2915daUL, 0x80000000UL, 0x3fdd436bUL, 0xf0bccb32UL,\n+    0x3e4a68c9UL, 0x80000000UL, 0x3fdd179bUL, 0x9bbfc779UL, 0xbe54a26aUL,\n+    0x00000000UL, 0x3fdcebe0UL, 0x7cea33abUL, 0x3e43c6b7UL, 0x40000000UL,\n+    0x3fdcc039UL, 0xe740fd06UL, 0x3e5526c2UL, 0x40000000UL, 0x3fdc94a7UL,\n+    0x9eadeb1aUL, 0xbe396d8dUL, 0xc0000000UL, 0x3fdc6929UL, 0xf0a8f95aUL,\n+    0xbe5c0ab2UL, 0x80000000UL, 0x3fdc3dc0UL, 0x6ee2693bUL, 0x3e0992e6UL,\n+    0xc0000000UL, 0x3fdc126bUL, 0x5ac6b581UL, 0xbe2834b6UL, 0x40000000UL,\n+    0x3fdbe72bUL, 0x8cc226ffUL, 0x3e3596a6UL, 0x00000000UL, 0x3fdbbbffUL,\n+    0xf92a74bbUL, 0x3e3c5813UL, 0x00000000UL, 0x3fdb90e7UL, 0x479664c0UL,\n+    0xbe50d644UL, 0x00000000UL, 0x3fdb65e3UL, 0x5004975bUL, 0xbe55258fUL,\n+    0x00000000UL, 0x3fdb3af3UL, 0xe4b23194UL, 0xbe588407UL, 0xc0000000UL,\n+    0x3fdb1016UL, 0xe65d4d0aUL, 0x3e527c26UL, 0x80000000UL, 0x3fdae54eUL,\n+    0x814fddd6UL, 0x3e5962a2UL, 0x40000000UL, 0x3fdaba9aUL, 0xe19d0913UL,\n+    0xbe562f4eUL, 0x80000000UL, 0x3fda8ff9UL, 0x43cfd006UL, 0xbe4cfdebUL,\n+    0x40000000UL, 0x3fda656cUL, 0x686f0a4eUL, 0x3e5e47a8UL, 0xc0000000UL,\n+    0x3fda3af2UL, 0x7200d410UL, 0x3e5e1199UL, 0xc0000000UL, 0x3fda108cUL,\n+    0xabd2266eUL, 0x3e5ee4d1UL, 0x40000000UL, 0x3fd9e63aUL, 0x396f8f2cUL,\n+    0x3e4dbffbUL, 0x00000000UL, 0x3fd9bbfbUL, 0xe32b25ddUL, 0x3e5c3a54UL,\n+    0x40000000UL, 0x3fd991cfUL, 0x431e4035UL, 0xbe457925UL, 0x80000000UL,\n+    0x3fd967b6UL, 0x7bed3dd3UL, 0x3e40c61dUL, 0x00000000UL, 0x3fd93db1UL,\n+    0xd7449365UL, 0x3e306419UL, 0x80000000UL, 0x3fd913beUL, 0x1746e791UL,\n+    0x3e56fcfcUL, 0x40000000UL, 0x3fd8e9dfUL, 0xf3a9028bUL, 0xbe5041b9UL,\n+    0xc0000000UL, 0x3fd8c012UL, 0x56840c50UL, 0xbe26e20aUL, 0x40000000UL,\n+    0x3fd89659UL, 0x19763102UL, 0xbe51f466UL, 0x80000000UL, 0x3fd86cb2UL,\n+    0x7032de7cUL, 0xbe4d298aUL, 0x80000000UL, 0x3fd8431eUL, 0xdeb39fabUL,\n+    0xbe4361ebUL, 0x40000000UL, 0x3fd8199dUL, 0x5d01cbe0UL, 0xbe5425b3UL,\n+    0x80000000UL, 0x3fd7f02eUL, 0x3ce99aa9UL, 0x3e146fa8UL, 0x80000000UL,\n+    0x3fd7c6d2UL, 0xd1a262b9UL, 0xbe5a1a69UL, 0xc0000000UL, 0x3fd79d88UL,\n+    0x8606c236UL, 0x3e423a08UL, 0x80000000UL, 0x3fd77451UL, 0x8fd1e1b7UL,\n+    0x3e5a6a63UL, 0xc0000000UL, 0x3fd74b2cUL, 0xe491456aUL, 0x3e42c1caUL,\n+    0x40000000UL, 0x3fd7221aUL, 0x4499a6d7UL, 0x3e36a69aUL, 0x00000000UL,\n+    0x3fd6f91aUL, 0x5237df94UL, 0xbe0f8f02UL, 0x00000000UL, 0x3fd6d02cUL,\n+    0xb6482c6eUL, 0xbe5abcf7UL, 0x00000000UL, 0x3fd6a750UL, 0x1919fd61UL,\n+    0xbe57ade2UL, 0x00000000UL, 0x3fd67e86UL, 0xaa7a994dUL, 0xbe3f3fbdUL,\n+    0x00000000UL, 0x3fd655ceUL, 0x67db014cUL, 0x3e33c550UL, 0x00000000UL,\n+    0x3fd62d28UL, 0xa82856b7UL, 0xbe1409d1UL, 0xc0000000UL, 0x3fd60493UL,\n+    0x1e6a300dUL, 0x3e55d899UL, 0x80000000UL, 0x3fd5dc11UL, 0x1222bd5cUL,\n+    0xbe35bfc0UL, 0xc0000000UL, 0x3fd5b3a0UL, 0x6e8dc2d3UL, 0x3e5d4d79UL,\n+    0x00000000UL, 0x3fd58b42UL, 0xe0e4ace6UL, 0xbe517303UL, 0x80000000UL,\n+    0x3fd562f4UL, 0xb306e0a8UL, 0x3e5edf0fUL, 0xc0000000UL, 0x3fd53ab8UL,\n+    0x6574bc54UL, 0x3e5ee859UL, 0x80000000UL, 0x3fd5128eUL, 0xea902207UL,\n+    0x3e5f6188UL, 0xc0000000UL, 0x3fd4ea75UL, 0x9f911d79UL, 0x3e511735UL,\n+    0x80000000UL, 0x3fd4c26eUL, 0xf9c77397UL, 0xbe5b1643UL, 0x40000000UL,\n+    0x3fd49a78UL, 0x15fc9258UL, 0x3e479a37UL, 0x80000000UL, 0x3fd47293UL,\n+    0xd5a04dd9UL, 0xbe426e56UL, 0xc0000000UL, 0x3fd44abfUL, 0xe04042f5UL,\n+    0x3e56f7c6UL, 0x40000000UL, 0x3fd422fdUL, 0x1d8bf2c8UL, 0x3e5d8810UL,\n+    0x00000000UL, 0x3fd3fb4cUL, 0x88a8ddeeUL, 0xbe311454UL, 0xc0000000UL,\n+    0x3fd3d3abUL, 0x3e3b5e47UL, 0xbe5d1b72UL, 0x40000000UL, 0x3fd3ac1cUL,\n+    0xc2ab5d59UL, 0x3e31b02bUL, 0xc0000000UL, 0x3fd3849dUL, 0xd4e34b9eUL,\n+    0x3e51cb2fUL, 0x40000000UL, 0x3fd35d30UL, 0x177204fbUL, 0xbe2b8cd7UL,\n+    0x80000000UL, 0x3fd335d3UL, 0xfcd38c82UL, 0xbe4356e1UL, 0x80000000UL,\n+    0x3fd30e87UL, 0x64f54accUL, 0xbe4e6224UL, 0x00000000UL, 0x3fd2e74cUL,\n+    0xaa7975d9UL, 0x3e5dc0feUL, 0x80000000UL, 0x3fd2c021UL, 0x516dab3fUL,\n+    0xbe50ffa3UL, 0x40000000UL, 0x3fd29907UL, 0x2bfb7313UL, 0x3e5674a2UL,\n+    0xc0000000UL, 0x3fd271fdUL, 0x0549fc99UL, 0x3e385d29UL, 0xc0000000UL,\n+    0x3fd24b04UL, 0x55b63073UL, 0xbe500c6dUL, 0x00000000UL, 0x3fd2241cUL,\n+    0x3f91953aUL, 0x3e389977UL, 0xc0000000UL, 0x3fd1fd43UL, 0xa1543f71UL,\n+    0xbe3487abUL, 0xc0000000UL, 0x3fd1d67bUL, 0x4ec8867cUL, 0x3df6a2dcUL,\n+    0x00000000UL, 0x3fd1afc4UL, 0x4328e3bbUL, 0x3e41d9c0UL, 0x80000000UL,\n+    0x3fd1891cUL, 0x2e1cda84UL, 0x3e3bdd87UL, 0x40000000UL, 0x3fd16285UL,\n+    0x4b5331aeUL, 0xbe53128eUL, 0x00000000UL, 0x3fd13bfeUL, 0xb9aec164UL,\n+    0xbe52ac98UL, 0xc0000000UL, 0x3fd11586UL, 0xd91e1316UL, 0xbe350630UL,\n+    0x80000000UL, 0x3fd0ef1fUL, 0x7cacc12cUL, 0x3e3f5219UL, 0x40000000UL,\n+    0x3fd0c8c8UL, 0xbce277b7UL, 0x3e3d30c0UL, 0x00000000UL, 0x3fd0a281UL,\n+    0x2a63447dUL, 0xbe541377UL, 0x80000000UL, 0x3fd07c49UL, 0xfac483b5UL,\n+    0xbe5772ecUL, 0xc0000000UL, 0x3fd05621UL, 0x36b8a570UL, 0xbe4fd4bdUL,\n+    0xc0000000UL, 0x3fd03009UL, 0xbae505f7UL, 0xbe450388UL, 0x80000000UL,\n+    0x3fd00a01UL, 0x3e35aeadUL, 0xbe5430fcUL, 0x80000000UL, 0x3fcfc811UL,\n+    0x707475acUL, 0x3e38806eUL, 0x80000000UL, 0x3fcf7c3fUL, 0xc91817fcUL,\n+    0xbe40cceaUL, 0x80000000UL, 0x3fcf308cUL, 0xae05d5e9UL, 0xbe4919b8UL,\n+    0x80000000UL, 0x3fcee4f8UL, 0xae6cc9e6UL, 0xbe530b94UL, 0x00000000UL,\n+    0x3fce9983UL, 0x1efe3e8eUL, 0x3e57747eUL, 0x00000000UL, 0x3fce4e2dUL,\n+    0xda78d9bfUL, 0xbe59a608UL, 0x00000000UL, 0x3fce02f5UL, 0x8abe2c2eUL,\n+    0x3e4a35adUL, 0x00000000UL, 0x3fcdb7dcUL, 0x1495450dUL, 0xbe0872ccUL,\n+    0x80000000UL, 0x3fcd6ce1UL, 0x86ee0ba0UL, 0xbe4f59a0UL, 0x00000000UL,\n+    0x3fcd2205UL, 0xe81ca888UL, 0x3e5402c3UL, 0x00000000UL, 0x3fccd747UL,\n+    0x3b4424b9UL, 0x3e5dfdc3UL, 0x80000000UL, 0x3fcc8ca7UL, 0xd305b56cUL,\n+    0x3e202da6UL, 0x00000000UL, 0x3fcc4226UL, 0x399a6910UL, 0xbe482a1cUL,\n+    0x80000000UL, 0x3fcbf7c2UL, 0x747f7938UL, 0xbe587372UL, 0x80000000UL,\n+    0x3fcbad7cUL, 0x6fc246a0UL, 0x3e50d83dUL, 0x00000000UL, 0x3fcb6355UL,\n+    0xee9e9be5UL, 0xbe5c35bdUL, 0x80000000UL, 0x3fcb194aUL, 0x8416c0bcUL,\n+    0x3e546d4fUL, 0x00000000UL, 0x3fcacf5eUL, 0x49f7f08fUL, 0x3e56da76UL,\n+    0x00000000UL, 0x3fca858fUL, 0x5dc30de2UL, 0x3e5f390cUL, 0x00000000UL,\n+    0x3fca3bdeUL, 0x950583b6UL, 0xbe5e4169UL, 0x80000000UL, 0x3fc9f249UL,\n+    0x33631553UL, 0x3e52aeb1UL, 0x00000000UL, 0x3fc9a8d3UL, 0xde8795a6UL,\n+    0xbe59a504UL, 0x00000000UL, 0x3fc95f79UL, 0x076bf41eUL, 0x3e5122feUL,\n+    0x80000000UL, 0x3fc9163cUL, 0x2914c8e7UL, 0x3e3dd064UL, 0x00000000UL,\n+    0x3fc8cd1dUL, 0x3a30eca3UL, 0xbe21b4aaUL, 0x80000000UL, 0x3fc8841aUL,\n+    0xb2a96650UL, 0xbe575444UL, 0x80000000UL, 0x3fc83b34UL, 0x2376c0cbUL,\n+    0xbe2a74c7UL, 0x80000000UL, 0x3fc7f26bUL, 0xd8a0b653UL, 0xbe5181b6UL,\n+    0x00000000UL, 0x3fc7a9bfUL, 0x32257882UL, 0xbe4a78b4UL, 0x00000000UL,\n+    0x3fc7612fUL, 0x1eee8bd9UL, 0xbe1bfe9dUL, 0x80000000UL, 0x3fc718bbUL,\n+    0x0c603cc4UL, 0x3e36fdc9UL, 0x80000000UL, 0x3fc6d064UL, 0x3728b8cfUL,\n+    0xbe1e542eUL, 0x80000000UL, 0x3fc68829UL, 0xc79a4067UL, 0x3e5c380fUL,\n+    0x00000000UL, 0x3fc6400bUL, 0xf69eac69UL, 0x3e550a84UL, 0x80000000UL,\n+    0x3fc5f808UL, 0xb7a780a4UL, 0x3e5d9224UL, 0x80000000UL, 0x3fc5b022UL,\n+    0xad9dfb1eUL, 0xbe55242fUL, 0x00000000UL, 0x3fc56858UL, 0x659b18beUL,\n+    0xbe4bfda3UL, 0x80000000UL, 0x3fc520a9UL, 0x66ee3631UL, 0xbe57d769UL,\n+    0x80000000UL, 0x3fc4d916UL, 0x1ec62819UL, 0x3e2427f7UL, 0x80000000UL,\n+    0x3fc4919fUL, 0xdec25369UL, 0xbe435431UL, 0x00000000UL, 0x3fc44a44UL,\n+    0xa8acfc4bUL, 0xbe3c62e8UL, 0x00000000UL, 0x3fc40304UL, 0xcf1d3eabUL,\n+    0xbdfba29fUL, 0x80000000UL, 0x3fc3bbdfUL, 0x79aba3eaUL, 0xbdf1b7c8UL,\n+    0x80000000UL, 0x3fc374d6UL, 0xb8d186daUL, 0xbe5130cfUL, 0x80000000UL,\n+    0x3fc32de8UL, 0x9d74f152UL, 0x3e2285b6UL, 0x00000000UL, 0x3fc2e716UL,\n+    0x50ae7ca9UL, 0xbe503920UL, 0x80000000UL, 0x3fc2a05eUL, 0x6caed92eUL,\n+    0xbe533924UL, 0x00000000UL, 0x3fc259c2UL, 0x9cb5034eUL, 0xbe510e31UL,\n+    0x80000000UL, 0x3fc21340UL, 0x12c4d378UL, 0xbe540b43UL, 0x80000000UL,\n+    0x3fc1ccd9UL, 0xcc418706UL, 0x3e59887aUL, 0x00000000UL, 0x3fc1868eUL,\n+    0x921f4106UL, 0xbe528e67UL, 0x80000000UL, 0x3fc1405cUL, 0x3969441eUL,\n+    0x3e5d8051UL, 0x00000000UL, 0x3fc0fa46UL, 0xd941ef5bUL, 0x3e5f9079UL,\n+    0x80000000UL, 0x3fc0b44aUL, 0x5a3e81b2UL, 0xbe567691UL, 0x00000000UL,\n+    0x3fc06e69UL, 0x9d66afe7UL, 0xbe4d43fbUL, 0x00000000UL, 0x3fc028a2UL,\n+    0x0a92a162UL, 0xbe52f394UL, 0x00000000UL, 0x3fbfc5eaUL, 0x209897e5UL,\n+    0x3e529e37UL, 0x00000000UL, 0x3fbf3ac5UL, 0x8458bd7bUL, 0x3e582831UL,\n+    0x00000000UL, 0x3fbeafd5UL, 0xb8d8b4b8UL, 0xbe486b4aUL, 0x00000000UL,\n+    0x3fbe2518UL, 0xe0a3b7b6UL, 0x3e5bafd2UL, 0x00000000UL, 0x3fbd9a90UL,\n+    0x2bf2710eUL, 0x3e383b2bUL, 0x00000000UL, 0x3fbd103cUL, 0x73eb6ab7UL,\n+    0xbe56d78dUL, 0x00000000UL, 0x3fbc861bUL, 0x32ceaff5UL, 0xbe32dc5aUL,\n+    0x00000000UL, 0x3fbbfc2eUL, 0xbee04cb7UL, 0xbe4a71a4UL, 0x00000000UL,\n+    0x3fbb7274UL, 0x35ae9577UL, 0x3e38142fUL, 0x00000000UL, 0x3fbae8eeUL,\n+    0xcbaddab4UL, 0xbe5490f0UL, 0x00000000UL, 0x3fba5f9aUL, 0x95ce1114UL,\n+    0x3e597c71UL, 0x00000000UL, 0x3fb9d67aUL, 0x6d7c0f78UL, 0x3e3abc2dUL,\n+    0x00000000UL, 0x3fb94d8dUL, 0x2841a782UL, 0xbe566cbcUL, 0x00000000UL,\n+    0x3fb8c4d2UL, 0x6ed429c6UL, 0xbe3cfff9UL, 0x00000000UL, 0x3fb83c4aUL,\n+    0xe4a49fbbUL, 0xbe552964UL, 0x00000000UL, 0x3fb7b3f4UL, 0x2193d81eUL,\n+    0xbe42fa72UL, 0x00000000UL, 0x3fb72bd0UL, 0xdd70c122UL, 0x3e527a8cUL,\n+    0x00000000UL, 0x3fb6a3dfUL, 0x03108a54UL, 0xbe450393UL, 0x00000000UL,\n+    0x3fb61c1fUL, 0x30ff7954UL, 0x3e565840UL, 0x00000000UL, 0x3fb59492UL,\n+    0xdedd460cUL, 0xbe5422b5UL, 0x00000000UL, 0x3fb50d36UL, 0x950f9f45UL,\n+    0xbe5313f6UL, 0x00000000UL, 0x3fb4860bUL, 0x582cdcb1UL, 0x3e506d39UL,\n+    0x00000000UL, 0x3fb3ff12UL, 0x7216d3a6UL, 0x3e4aa719UL, 0x00000000UL,\n+    0x3fb3784aUL, 0x57a423fdUL, 0x3e5a9b9fUL, 0x00000000UL, 0x3fb2f1b4UL,\n+    0x7a138b41UL, 0xbe50b418UL, 0x00000000UL, 0x3fb26b4eUL, 0x2fbfd7eaUL,\n+    0x3e23a53eUL, 0x00000000UL, 0x3fb1e519UL, 0x18913ccbUL, 0x3e465fc1UL,\n+    0x00000000UL, 0x3fb15f15UL, 0x7ea24e21UL, 0x3e042843UL, 0x00000000UL,\n+    0x3fb0d941UL, 0x7c6d9c77UL, 0x3e59f61eUL, 0x00000000UL, 0x3fb0539eUL,\n+    0x114efd44UL, 0x3e4ccab7UL, 0x00000000UL, 0x3faf9c56UL, 0x1777f657UL,\n+    0x3e552f65UL, 0x00000000UL, 0x3fae91d2UL, 0xc317b86aUL, 0xbe5a61e0UL,\n+    0x00000000UL, 0x3fad87acUL, 0xb7664efbUL, 0xbe41f64eUL, 0x00000000UL,\n+    0x3fac7de6UL, 0x5d3d03a9UL, 0x3e0807a0UL, 0x00000000UL, 0x3fab7480UL,\n+    0x743c38ebUL, 0xbe3726e1UL, 0x00000000UL, 0x3faa6b78UL, 0x06a253f1UL,\n+    0x3e5ad636UL, 0x00000000UL, 0x3fa962d0UL, 0xa35f541bUL, 0x3e5a187aUL,\n+    0x00000000UL, 0x3fa85a88UL, 0x4b86e446UL, 0xbe508150UL, 0x00000000UL,\n+    0x3fa7529cUL, 0x2589cacfUL, 0x3e52938aUL, 0x00000000UL, 0x3fa64b10UL,\n+    0xaf6b11f2UL, 0xbe3454cdUL, 0x00000000UL, 0x3fa543e2UL, 0x97506fefUL,\n+    0xbe5fdec5UL, 0x00000000UL, 0x3fa43d10UL, 0xe75f7dd9UL, 0xbe388dd3UL,\n+    0x00000000UL, 0x3fa3369cUL, 0xa4139632UL, 0xbdea5177UL, 0x00000000UL,\n+    0x3fa23086UL, 0x352d6f1eUL, 0xbe565ad6UL, 0x00000000UL, 0x3fa12accUL,\n+    0x77449eb7UL, 0xbe50d5c7UL, 0x00000000UL, 0x3fa0256eUL, 0x7478da78UL,\n+    0x3e404724UL, 0x00000000UL, 0x3f9e40dcUL, 0xf59cef7fUL, 0xbe539d0aUL,\n+    0x00000000UL, 0x3f9c3790UL, 0x1511d43cUL, 0x3e53c2c8UL, 0x00000000UL,\n+    0x3f9a2f00UL, 0x9b8bff3cUL, 0xbe43b3e1UL, 0x00000000UL, 0x3f982724UL,\n+    0xad1e22a5UL, 0x3e46f0bdUL, 0x00000000UL, 0x3f962000UL, 0x130d9356UL,\n+    0x3e475ba0UL, 0x00000000UL, 0x3f941994UL, 0x8f86f883UL, 0xbe513d0bUL,\n+    0x00000000UL, 0x3f9213dcUL, 0x914d0dc8UL, 0xbe534335UL, 0x00000000UL,\n+    0x3f900ed8UL, 0x2d73e5e7UL, 0xbe22ba75UL, 0x00000000UL, 0x3f8c1510UL,\n+    0xc5b7d70eUL, 0x3e599c5dUL, 0x00000000UL, 0x3f880de0UL, 0x8a27857eUL,\n+    0xbe3d28c8UL, 0x00000000UL, 0x3f840810UL, 0xda767328UL, 0x3e531b3dUL,\n+    0x00000000UL, 0x3f8003b0UL, 0x77bacaf3UL, 0xbe5f04e3UL, 0x00000000UL,\n+    0x3f780150UL, 0xdf4b0720UL, 0x3e5a8bffUL, 0x00000000UL, 0x3f6ffc40UL,\n+    0x34c48e71UL, 0xbe3fcd99UL, 0x00000000UL, 0x3f5ff6c0UL, 0x1ad218afUL,\n+    0xbe4c78a7UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x80000000UL,\n+    0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL, 0x00000000UL,\n+    0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL, 0x6dc96112UL, 0xbf836578UL,\n+    0xee241472UL, 0xbf9b0301UL, 0x9f95985aUL, 0xbfb528dbUL, 0xb3841d2aUL,\n+    0xbfd619b6UL, 0x518775e3UL, 0x3f9004f2UL, 0xac8349bbUL, 0x3fa76c9bUL,\n+    0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL, 0xbf5dabe1UL, 0x9f95985aUL,\n+    0xbfb528dbUL, 0xf8b5787dUL, 0x3ef2531eUL, 0x486ececbUL, 0x3fc4635eUL,\n+    0x412055ccUL, 0xbdd61bb2UL, 0x00000000UL, 0xfffffff8UL, 0x00000000UL,\n+    0xffffffffUL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3b700000UL,\n+    0xfa5abcbfUL, 0x3ff00b1aUL, 0xa7609f71UL, 0xbc84f6b2UL, 0xa9fb3335UL,\n+    0x3ff0163dUL, 0x9ab8cdb7UL, 0x3c9b6129UL, 0x143b0281UL, 0x3ff02168UL,\n+    0x0fc54eb6UL, 0xbc82bf31UL, 0x3e778061UL, 0x3ff02c9aUL, 0x535b085dUL,\n+    0xbc719083UL, 0x2e11bbccUL, 0x3ff037d4UL, 0xeeade11aUL, 0x3c656811UL,\n+    0xe86e7f85UL, 0x3ff04315UL, 0x1977c96eUL, 0xbc90a31cUL, 0x72f654b1UL,\n+    0x3ff04e5fUL, 0x3aa0d08cUL, 0x3c84c379UL, 0xd3158574UL, 0x3ff059b0UL,\n+    0xa475b465UL, 0x3c8d73e2UL, 0x0e3c1f89UL, 0x3ff0650aUL, 0x5799c397UL,\n+    0xbc95cb7bUL, 0x29ddf6deUL, 0x3ff0706bUL, 0xe2b13c27UL, 0xbc8c91dfUL,\n+    0x2b72a836UL, 0x3ff07bd4UL, 0x54458700UL, 0x3c832334UL, 0x18759bc8UL,\n+    0x3ff08745UL, 0x4bb284ffUL, 0x3c6186beUL, 0xf66607e0UL, 0x3ff092bdUL,\n+    0x800a3fd1UL, 0xbc968063UL, 0xcac6f383UL, 0x3ff09e3eUL, 0x18316136UL,\n+    0x3c914878UL, 0x9b1f3919UL, 0x3ff0a9c7UL, 0x873d1d38UL, 0x3c85d16cUL,\n+    0x6cf9890fUL, 0x3ff0b558UL, 0x4adc610bUL, 0x3c98a62eUL, 0x45e46c85UL,\n+    0x3ff0c0f1UL, 0x06d21cefUL, 0x3c94f989UL, 0x2b7247f7UL, 0x3ff0cc92UL,\n+    0x16e24f71UL, 0x3c901edcUL, 0x23395decUL, 0x3ff0d83bUL, 0xe43f316aUL,\n+    0xbc9bc14dUL, 0x32d3d1a2UL, 0x3ff0e3ecUL, 0x27c57b52UL, 0x3c403a17UL,\n+    0x5fdfa9c5UL, 0x3ff0efa5UL, 0xbc54021bUL, 0xbc949db9UL, 0xaffed31bUL,\n+    0x3ff0fb66UL, 0xc44ebd7bUL, 0xbc6b9bedUL, 0x28d7233eUL, 0x3ff10730UL,\n+    0x1692fdd5UL, 0x3c8d46ebUL, 0xd0125b51UL, 0x3ff11301UL, 0x39449b3aUL,\n+    0xbc96c510UL, 0xab5e2ab6UL, 0x3ff11edbUL, 0xf703fb72UL, 0xbc9ca454UL,\n+    0xc06c31ccUL, 0x3ff12abdUL, 0xb36ca5c7UL, 0xbc51b514UL, 0x14f204abUL,\n+    0x3ff136a8UL, 0xba48dcf0UL, 0xbc67108fUL, 0xaea92de0UL, 0x3ff1429aUL,\n+    0x9af1369eUL, 0xbc932fbfUL, 0x934f312eUL, 0x3ff14e95UL, 0x39bf44abUL,\n+    0xbc8b91e8UL, 0xc8a58e51UL, 0x3ff15a98UL, 0xb9eeab0aUL, 0x3c82406aUL,\n+    0x5471c3c2UL, 0x3ff166a4UL, 0x82ea1a32UL, 0x3c58f23bUL, 0x3c7d517bUL,\n+    0x3ff172b8UL, 0xb9d78a76UL, 0xbc819041UL, 0x8695bbc0UL, 0x3ff17ed4UL,\n+    0xe2ac5a64UL, 0x3c709e3fUL, 0x388c8deaUL, 0x3ff18af9UL, 0xd1970f6cUL,\n+    0xbc911023UL, 0x58375d2fUL, 0x3ff19726UL, 0x85f17e08UL, 0x3c94aaddUL,\n+    0xeb6fcb75UL, 0x3ff1a35bUL, 0x7b4968e4UL, 0x3c8e5b4cUL, 0xf8138a1cUL,\n+    0x3ff1af99UL, 0xa4b69280UL, 0x3c97bf85UL, 0x84045cd4UL, 0x3ff1bbe0UL,\n+    0x352ef607UL, 0xbc995386UL, 0x95281c6bUL, 0x3ff1c82fUL, 0x8010f8c9UL,\n+    0x3c900977UL, 0x3168b9aaUL, 0x3ff1d487UL, 0x00a2643cUL, 0x3c9e016eUL,\n+    0x5eb44027UL, 0x3ff1e0e7UL, 0x088cb6deUL, 0xbc96fdd8UL, 0x22fcd91dUL,\n+    0x3ff1ed50UL, 0x027bb78cUL, 0xbc91df98UL, 0x8438ce4dUL, 0x3ff1f9c1UL,\n+    0xa097af5cUL, 0xbc9bf524UL, 0x88628cd6UL, 0x3ff2063bUL, 0x814a8495UL,\n+    0x3c8dc775UL, 0x3578a819UL, 0x3ff212beUL, 0x2cfcaac9UL, 0x3c93592dUL,\n+    0x917ddc96UL, 0x3ff21f49UL, 0x9494a5eeUL, 0x3c82a97eUL, 0xa27912d1UL,\n+    0x3ff22bddUL, 0x5577d69fUL, 0x3c8d34fbUL, 0x6e756238UL, 0x3ff2387aUL,\n+    0xb6c70573UL, 0x3c99b07eUL, 0xfb82140aUL, 0x3ff2451fUL, 0x911ca996UL,\n+    0x3c8acfccUL, 0x4fb2a63fUL, 0x3ff251ceUL, 0xbef4f4a4UL, 0x3c8ac155UL,\n+    0x711ece75UL, 0x3ff25e85UL, 0x4ac31b2cUL, 0x3c93e1a2UL, 0x65e27cddUL,\n+    0x3ff26b45UL, 0x9940e9d9UL, 0x3c82bd33UL, 0x341ddf29UL, 0x3ff2780eUL,\n+    0x05f9e76cUL, 0x3c9e067cUL, 0xe1f56381UL, 0x3ff284dfUL, 0x8c3f0d7eUL,\n+    0xbc9a4c3aUL, 0x7591bb70UL, 0x3ff291baUL, 0x28401cbdUL, 0xbc82cc72UL,\n+    0xf51fdee1UL, 0x3ff29e9dUL, 0xafad1255UL, 0x3c8612e8UL, 0x66d10f13UL,\n+    0x3ff2ab8aUL, 0x191690a7UL, 0xbc995743UL, 0xd0dad990UL, 0x3ff2b87fUL,\n+    0xd6381aa4UL, 0xbc410adcUL, 0x39771b2fUL, 0x3ff2c57eUL, 0xa6eb5124UL,\n+    0xbc950145UL, 0xa6e4030bUL, 0x3ff2d285UL, 0x54db41d5UL, 0x3c900247UL,\n+    0x1f641589UL, 0x3ff2df96UL, 0xfbbce198UL, 0x3c9d16cfUL, 0xa93e2f56UL,\n+    0x3ff2ecafUL, 0x45d52383UL, 0x3c71ca0fUL, 0x4abd886bUL, 0x3ff2f9d2UL,\n+    0x532bda93UL, 0xbc653c55UL, 0x0a31b715UL, 0x3ff306feUL, 0xd23182e4UL,\n+    0x3c86f46aUL, 0xedeeb2fdUL, 0x3ff31432UL, 0xf3f3fcd1UL, 0x3c8959a3UL,\n+    0xfc4cd831UL, 0x3ff32170UL, 0x8e18047cUL, 0x3c8a9ce7UL, 0x3ba8ea32UL,\n+    0x3ff32eb8UL, 0x3cb4f318UL, 0xbc9c45e8UL, 0xb26416ffUL, 0x3ff33c08UL,\n+    0x843659a6UL, 0x3c932721UL, 0x66e3fa2dUL, 0x3ff34962UL, 0x930881a4UL,\n+    0xbc835a75UL, 0x5f929ff1UL, 0x3ff356c5UL, 0x5c4e4628UL, 0xbc8b5ceeUL,\n+    0xa2de883bUL, 0x3ff36431UL, 0xa06cb85eUL, 0xbc8c3144UL, 0x373aa9cbUL,\n+    0x3ff371a7UL, 0xbf42eae2UL, 0xbc963aeaUL, 0x231e754aUL, 0x3ff37f26UL,\n+    0x9eceb23cUL, 0xbc99f5caUL, 0x6d05d866UL, 0x3ff38caeUL, 0x3c9904bdUL,\n+    0xbc9e958dUL, 0x1b7140efUL, 0x3ff39a40UL, 0xfc8e2934UL, 0xbc99a9a5UL,\n+    0x34e59ff7UL, 0x3ff3a7dbUL, 0xd661f5e3UL, 0xbc75e436UL, 0xbfec6cf4UL,\n+    0x3ff3b57fUL, 0xe26fff18UL, 0x3c954c66UL, 0xc313a8e5UL, 0x3ff3c32dUL,\n+    0x375d29c3UL, 0xbc9efff8UL, 0x44ede173UL, 0x3ff3d0e5UL, 0x8c284c71UL,\n+    0x3c7fe8d0UL, 0x4c123422UL, 0x3ff3dea6UL, 0x11f09ebcUL, 0x3c8ada09UL,\n+    0xdf1c5175UL, 0x3ff3ec70UL, 0x7b8c9bcaUL, 0xbc8af663UL, 0x04ac801cUL,\n+    0x3ff3fa45UL, 0xf956f9f3UL, 0xbc97d023UL, 0xc367a024UL, 0x3ff40822UL,\n+    0xb6f4d048UL, 0x3c8bddf8UL, 0x21f72e2aUL, 0x3ff4160aUL, 0x1c309278UL,\n+    0xbc5ef369UL, 0x2709468aUL, 0x3ff423fbUL, 0xc0b314ddUL, 0xbc98462dUL,\n+    0xd950a897UL, 0x3ff431f5UL, 0xe35f7999UL, 0xbc81c7ddUL, 0x3f84b9d4UL,\n+    0x3ff43ffaUL, 0x9704c003UL, 0x3c8880beUL, 0x6061892dUL, 0x3ff44e08UL,\n+    0x04ef80d0UL, 0x3c489b7aUL, 0x42a7d232UL, 0x3ff45c20UL, 0x82fb1f8eUL,\n+    0xbc686419UL, 0xed1d0057UL, 0x3ff46a41UL, 0xd1648a76UL, 0x3c9c944bUL,\n+    0x668b3237UL, 0x3ff4786dUL, 0xed445733UL, 0xbc9c20f0UL, 0xb5c13cd0UL,\n+    0x3ff486a2UL, 0xb69062f0UL, 0x3c73c1a3UL, 0xe192aed2UL, 0x3ff494e1UL,\n+    0x5e499ea0UL, 0xbc83b289UL, 0xf0d7d3deUL, 0x3ff4a32aUL, 0xf3d1be56UL,\n+    0x3c99cb62UL, 0xea6db7d7UL, 0x3ff4b17dUL, 0x7f2897f0UL, 0xbc8125b8UL,\n+    0xd5362a27UL, 0x3ff4bfdaUL, 0xafec42e2UL, 0x3c7d4397UL, 0xb817c114UL,\n+    0x3ff4ce41UL, 0x690abd5dUL, 0x3c905e29UL, 0x99fddd0dUL, 0x3ff4dcb2UL,\n+    0xbc6a7833UL, 0x3c98ecdbUL, 0x81d8abffUL, 0x3ff4eb2dUL, 0x2e5d7a52UL,\n+    0xbc95257dUL, 0x769d2ca7UL, 0x3ff4f9b2UL, 0xd25957e3UL, 0xbc94b309UL,\n+    0x7f4531eeUL, 0x3ff50841UL, 0x49b7465fUL, 0x3c7a249bUL, 0xa2cf6642UL,\n+    0x3ff516daUL, 0x69bd93efUL, 0xbc8f7685UL, 0xe83f4eefUL, 0x3ff5257dUL,\n+    0x43efef71UL, 0xbc7c998dUL, 0x569d4f82UL, 0x3ff5342bUL, 0x1db13cadUL,\n+    0xbc807abeUL, 0xf4f6ad27UL, 0x3ff542e2UL, 0x192d5f7eUL, 0x3c87926dUL,\n+    0xca5d920fUL, 0x3ff551a4UL, 0xefede59bUL, 0xbc8d689cUL, 0xdde910d2UL,\n+    0x3ff56070UL, 0x168eebf0UL, 0xbc90fb6eUL, 0x36b527daUL, 0x3ff56f47UL,\n+    0x011d93adUL, 0x3c99bb2cUL, 0xdbe2c4cfUL, 0x3ff57e27UL, 0x8a57b9c4UL,\n+    0xbc90b98cUL, 0xd497c7fdUL, 0x3ff58d12UL, 0x5b9a1de8UL, 0x3c8295e1UL,\n+    0x27ff07ccUL, 0x3ff59c08UL, 0xe467e60fUL, 0xbc97e2ceUL, 0xdd485429UL,\n+    0x3ff5ab07UL, 0x054647adUL, 0x3c96324cUL, 0xfba87a03UL, 0x3ff5ba11UL,\n+    0x4c233e1aUL, 0xbc9b77a1UL, 0x8a5946b7UL, 0x3ff5c926UL, 0x816986a2UL,\n+    0x3c3c4b1bUL, 0x90998b93UL, 0x3ff5d845UL, 0xa8b45643UL, 0xbc9cd6a7UL,\n+    0x15ad2148UL, 0x3ff5e76fUL, 0x3080e65eUL, 0x3c9ba6f9UL, 0x20dceb71UL,\n+    0x3ff5f6a3UL, 0xe3cdcf92UL, 0xbc89eaddUL, 0xb976dc09UL, 0x3ff605e1UL,\n+    0x9b56de47UL, 0xbc93e242UL, 0xe6cdf6f4UL, 0x3ff6152aUL, 0x4ab84c27UL,\n+    0x3c9e4b3eUL, 0xb03a5585UL, 0x3ff6247eUL, 0x7e40b497UL, 0xbc9383c1UL,\n+    0x1d1929fdUL, 0x3ff633ddUL, 0xbeb964e5UL, 0x3c984710UL, 0x34ccc320UL,\n+    0x3ff64346UL, 0x759d8933UL, 0xbc8c483cUL, 0xfebc8fb7UL, 0x3ff652b9UL,\n+    0xc9a73e09UL, 0xbc9ae3d5UL, 0x82552225UL, 0x3ff66238UL, 0x87591c34UL,\n+    0xbc9bb609UL, 0xc70833f6UL, 0x3ff671c1UL, 0x586c6134UL, 0xbc8e8732UL,\n+    0xd44ca973UL, 0x3ff68155UL, 0x44f73e65UL, 0x3c6038aeUL, 0xb19e9538UL,\n+    0x3ff690f4UL, 0x9aeb445dUL, 0x3c8804bdUL, 0x667f3bcdUL, 0x3ff6a09eUL,\n+    0x13b26456UL, 0xbc9bdd34UL, 0xfa75173eUL, 0x3ff6b052UL, 0x2c9a9d0eUL,\n+    0x3c7a38f5UL, 0x750bdabfUL, 0x3ff6c012UL, 0x67ff0b0dUL, 0xbc728956UL,\n+    0xddd47645UL, 0x3ff6cfdcUL, 0xb6f17309UL, 0x3c9c7aa9UL, 0x3c651a2fUL,\n+    0x3ff6dfb2UL, 0x683c88abUL, 0xbc6bbe3aUL, 0x98593ae5UL, 0x3ff6ef92UL,\n+    0x9e1ac8b2UL, 0xbc90b974UL, 0xf9519484UL, 0x3ff6ff7dUL, 0x25860ef6UL,\n+    0xbc883c0fUL, 0x66f42e87UL, 0x3ff70f74UL, 0xd45aa65fUL, 0x3c59d644UL,\n+    0xe8ec5f74UL, 0x3ff71f75UL, 0x86887a99UL, 0xbc816e47UL, 0x86ead08aUL,\n+    0x3ff72f82UL, 0x2cd62c72UL, 0xbc920aa0UL, 0x48a58174UL, 0x3ff73f9aUL,\n+    0x6c65d53cUL, 0xbc90a8d9UL, 0x35d7cbfdUL, 0x3ff74fbdUL, 0x618a6e1cUL,\n+    0x3c9047fdUL, 0x564267c9UL, 0x3ff75febUL, 0x57316dd3UL, 0xbc902459UL,\n+    0xb1ab6e09UL, 0x3ff77024UL, 0x169147f8UL, 0x3c9b7877UL, 0x4fde5d3fUL,\n+    0x3ff78069UL, 0x0a02162dUL, 0x3c9866b8UL, 0x38ac1cf6UL, 0x3ff790b9UL,\n+    0x62aadd3eUL, 0x3c9349a8UL, 0x73eb0187UL, 0x3ff7a114UL, 0xee04992fUL,\n+    0xbc841577UL, 0x0976cfdbUL, 0x3ff7b17bUL, 0x8468dc88UL, 0xbc9bebb5UL,\n+    0x0130c132UL, 0x3ff7c1edUL, 0xd1164dd6UL, 0x3c9f124cUL, 0x62ff86f0UL,\n+    0x3ff7d26aUL, 0xfb72b8b4UL, 0x3c91bddbUL, 0x36cf4e62UL, 0x3ff7e2f3UL,\n+    0xba15797eUL, 0x3c705d02UL, 0x8491c491UL, 0x3ff7f387UL, 0xcf9311aeUL,\n+    0xbc807f11UL, 0x543e1a12UL, 0x3ff80427UL, 0x626d972bUL, 0xbc927c86UL,\n+    0xadd106d9UL, 0x3ff814d2UL, 0x0d151d4dUL, 0x3c946437UL, 0x994cce13UL,\n+    0x3ff82589UL, 0xd41532d8UL, 0xbc9d4c1dUL, 0x1eb941f7UL, 0x3ff8364cUL,\n+    0x31df2bd5UL, 0x3c999b9aUL, 0x4623c7adUL, 0x3ff8471aUL, 0xa341cdfbUL,\n+    0xbc88d684UL, 0x179f5b21UL, 0x3ff857f4UL, 0xf8b216d0UL, 0xbc5ba748UL,\n+    0x9b4492edUL, 0x3ff868d9UL, 0x9bd4f6baUL, 0xbc9fc6f8UL, 0xd931a436UL,\n+    0x3ff879caUL, 0xd2db47bdUL, 0x3c85d2d7UL, 0xd98a6699UL, 0x3ff88ac7UL,\n+    0xf37cb53aUL, 0x3c9994c2UL, 0xa478580fUL, 0x3ff89bd0UL, 0x4475202aUL,\n+    0x3c9d5395UL, 0x422aa0dbUL, 0x3ff8ace5UL, 0x56864b27UL, 0x3c96e9f1UL,\n+    0xbad61778UL, 0x3ff8be05UL, 0xfc43446eUL, 0x3c9ecb5eUL, 0x16b5448cUL,\n+    0x3ff8cf32UL, 0x32e9e3aaUL, 0xbc70d55eUL, 0x5e0866d9UL, 0x3ff8e06aUL,\n+    0x6fc9b2e6UL, 0xbc97114aUL, 0x99157736UL, 0x3ff8f1aeUL, 0xa2e3976cUL,\n+    0x3c85cc13UL, 0xd0282c8aUL, 0x3ff902feUL, 0x85fe3fd2UL, 0x3c9592caUL,\n+    0x0b91ffc6UL, 0x3ff9145bUL, 0x2e582524UL, 0xbc9dd679UL, 0x53aa2fe2UL,\n+    0x3ff925c3UL, 0xa639db7fUL, 0xbc83455fUL, 0xb0cdc5e5UL, 0x3ff93737UL,\n+    0x81b57ebcUL, 0xbc675fc7UL, 0x2b5f98e5UL, 0x3ff948b8UL, 0x797d2d99UL,\n+    0xbc8dc3d6UL, 0xcbc8520fUL, 0x3ff95a44UL, 0x96a5f039UL, 0xbc764b7cUL,\n+    0x9a7670b3UL, 0x3ff96bddUL, 0x7f19c896UL, 0xbc5ba596UL, 0x9fde4e50UL,\n+    0x3ff97d82UL, 0x7c1b85d1UL, 0xbc9d185bUL, 0xe47a22a2UL, 0x3ff98f33UL,\n+    0xa24c78ecUL, 0x3c7cabdaUL, 0x70ca07baUL, 0x3ff9a0f1UL, 0x91cee632UL,\n+    0xbc9173bdUL, 0x4d53fe0dUL, 0x3ff9b2bbUL, 0x4df6d518UL, 0xbc9dd84eUL,\n+    0x82a3f090UL, 0x3ff9c491UL, 0xb071f2beUL, 0x3c7c7c46UL, 0x194bb8d5UL,\n+    0x3ff9d674UL, 0xa3dd8233UL, 0xbc9516beUL, 0x19e32323UL, 0x3ff9e863UL,\n+    0x78e64c6eUL, 0x3c7824caUL, 0x8d07f29eUL, 0x3ff9fa5eUL, 0xaaf1faceUL,\n+    0xbc84a9ceUL, 0x7b5de565UL, 0x3ffa0c66UL, 0x5d1cd533UL, 0xbc935949UL,\n+    0xed8eb8bbUL, 0x3ffa1e7aUL, 0xee8be70eUL, 0x3c9c6618UL, 0xec4a2d33UL,\n+    0x3ffa309bUL, 0x7ddc36abUL, 0x3c96305cUL, 0x80460ad8UL, 0x3ffa42c9UL,\n+    0x589fb120UL, 0xbc9aa780UL, 0xb23e255dUL, 0x3ffa5503UL, 0xdb8d41e1UL,\n+    0xbc9d2f6eUL, 0x8af46052UL, 0x3ffa674aUL, 0x30670366UL, 0x3c650f56UL,\n+    0x1330b358UL, 0x3ffa799eUL, 0xcac563c7UL, 0x3c9bcb7eUL, 0x53c12e59UL,\n+    0x3ffa8bfeUL, 0xb2ba15a9UL, 0xbc94f867UL, 0x5579fdbfUL, 0x3ffa9e6bUL,\n+    0x0ef7fd31UL, 0x3c90fac9UL, 0x21356ebaUL, 0x3ffab0e5UL, 0xdae94545UL,\n+    0x3c889c31UL, 0xbfd3f37aUL, 0x3ffac36bUL, 0xcae76cd0UL, 0xbc8f9234UL,\n+    0x3a3c2774UL, 0x3ffad5ffUL, 0xb6b1b8e5UL, 0x3c97ef3bUL, 0x995ad3adUL,\n+    0x3ffae89fUL, 0x345dcc81UL, 0x3c97a1cdUL, 0xe622f2ffUL, 0x3ffafb4cUL,\n+    0x0f315ecdUL, 0xbc94b2fcUL, 0x298db666UL, 0x3ffb0e07UL, 0x4c80e425UL,\n+    0xbc9bdef5UL, 0x6c9a8952UL, 0x3ffb20ceUL, 0x4a0756ccUL, 0x3c94dd02UL,\n+    0xb84f15fbUL, 0x3ffb33a2UL, 0x3084d708UL, 0xbc62805eUL, 0x15b749b1UL,\n+    0x3ffb4684UL, 0xe9df7c90UL, 0xbc7f763dUL, 0x8de5593aUL, 0x3ffb5972UL,\n+    0xbbba6de3UL, 0xbc9c71dfUL, 0x29f1c52aUL, 0x3ffb6c6eUL, 0x52883f6eUL,\n+    0x3c92a8f3UL, 0xf2fb5e47UL, 0x3ffb7f76UL, 0x7e54ac3bUL, 0xbc75584fUL,\n+    0xf22749e4UL, 0x3ffb928cUL, 0x54cb65c6UL, 0xbc9b7216UL, 0x30a1064aUL,\n+    0x3ffba5b0UL, 0x0e54292eUL, 0xbc9efcd3UL, 0xb79a6f1fUL, 0x3ffbb8e0UL,\n+    0xc9696205UL, 0xbc3f52d1UL, 0x904bc1d2UL, 0x3ffbcc1eUL, 0x7a2d9e84UL,\n+    0x3c823dd0UL, 0xc3f3a207UL, 0x3ffbdf69UL, 0x60ea5b53UL, 0xbc3c2623UL,\n+    0x5bd71e09UL, 0x3ffbf2c2UL, 0x3f6b9c73UL, 0xbc9efdcaUL, 0x6141b33dUL,\n+    0x3ffc0628UL, 0xa1fbca34UL, 0xbc8d8a5aUL, 0xdd85529cUL, 0x3ffc199bUL,\n+    0x895048ddUL, 0x3c811065UL, 0xd9fa652cUL, 0x3ffc2d1cUL, 0x17c8a5d7UL,\n+    0xbc96e516UL, 0x5fffd07aUL, 0x3ffc40abUL, 0xe083c60aUL, 0x3c9b4537UL,\n+    0x78fafb22UL, 0x3ffc5447UL, 0x2493b5afUL, 0x3c912f07UL, 0x2e57d14bUL,\n+    0x3ffc67f1UL, 0xff483cadUL, 0x3c92884dUL, 0x8988c933UL, 0x3ffc7ba8UL,\n+    0xbe255559UL, 0xbc8e76bbUL, 0x9406e7b5UL, 0x3ffc8f6dUL, 0x48805c44UL,\n+    0x3c71acbcUL, 0x5751c4dbUL, 0x3ffca340UL, 0xd10d08f5UL, 0xbc87f2beUL,\n+    0xdcef9069UL, 0x3ffcb720UL, 0xd1e949dbUL, 0x3c7503cbUL, 0x2e6d1675UL,\n+    0x3ffccb0fUL, 0x86009092UL, 0xbc7d220fUL, 0x555dc3faUL, 0x3ffcdf0bUL,\n+    0x53829d72UL, 0xbc8dd83bUL, 0x5b5bab74UL, 0x3ffcf315UL, 0xb86dff57UL,\n+    0xbc9a08e9UL, 0x4a07897cUL, 0x3ffd072dUL, 0x43797a9cUL, 0xbc9cbc37UL,\n+    0x2b08c968UL, 0x3ffd1b53UL, 0x219a36eeUL, 0x3c955636UL, 0x080d89f2UL,\n+    0x3ffd2f87UL, 0x719d8578UL, 0xbc9d487bUL, 0xeacaa1d6UL, 0x3ffd43c8UL,\n+    0xbf5a1614UL, 0x3c93db53UL, 0xdcfba487UL, 0x3ffd5818UL, 0xd75b3707UL,\n+    0x3c82ed02UL, 0xe862e6d3UL, 0x3ffd6c76UL, 0x4a8165a0UL, 0x3c5fe87aUL,\n+    0x16c98398UL, 0x3ffd80e3UL, 0x8beddfe8UL, 0xbc911ec1UL, 0x71ff6075UL,\n+    0x3ffd955dUL, 0xbb9af6beUL, 0x3c9a052dUL, 0x03db3285UL, 0x3ffda9e6UL,\n+    0x696db532UL, 0x3c9c2300UL, 0xd63a8315UL, 0x3ffdbe7cUL, 0x926b8be4UL,\n+    0xbc9b76f1UL, 0xf301b460UL, 0x3ffdd321UL, 0x78f018c3UL, 0x3c92da57UL,\n+    0x641c0658UL, 0x3ffde7d5UL, 0x8e79ba8fUL, 0xbc9ca552UL, 0x337b9b5fUL,\n+    0x3ffdfc97UL, 0x4f184b5cUL, 0xbc91a5cdUL, 0x6b197d17UL, 0x3ffe1167UL,\n+    0xbd5c7f44UL, 0xbc72b529UL, 0x14f5a129UL, 0x3ffe2646UL, 0x817a1496UL,\n+    0xbc97b627UL, 0x3b16ee12UL, 0x3ffe3b33UL, 0x31fdc68bUL, 0xbc99f4a4UL,\n+    0xe78b3ff6UL, 0x3ffe502eUL, 0x80a9cc8fUL, 0x3c839e89UL, 0x24676d76UL,\n+    0x3ffe6539UL, 0x7522b735UL, 0xbc863ff8UL, 0xfbc74c83UL, 0x3ffe7a51UL,\n+    0xca0c8de2UL, 0x3c92d522UL, 0x77cdb740UL, 0x3ffe8f79UL, 0x80b054b1UL,\n+    0xbc910894UL, 0xa2a490daUL, 0x3ffea4afUL, 0x179c2893UL, 0xbc9e9c23UL,\n+    0x867cca6eUL, 0x3ffeb9f4UL, 0x2293e4f2UL, 0x3c94832fUL, 0x2d8e67f1UL,\n+    0x3ffecf48UL, 0xb411ad8cUL, 0xbc9c93f3UL, 0xa2188510UL, 0x3ffee4aaUL,\n+    0xa487568dUL, 0x3c91c68dUL, 0xee615a27UL, 0x3ffefa1bUL, 0x86a4b6b0UL,\n+    0x3c9dc7f4UL, 0x1cb6412aUL, 0x3fff0f9cUL, 0x65181d45UL, 0xbc932200UL,\n+    0x376bba97UL, 0x3fff252bUL, 0xbf0d8e43UL, 0x3c93a1a5UL, 0x48dd7274UL,\n+    0x3fff3ac9UL, 0x3ed837deUL, 0xbc795a5aUL, 0x5b6e4540UL, 0x3fff5076UL,\n+    0x2dd8a18bUL, 0x3c99d3e1UL, 0x798844f8UL, 0x3fff6632UL, 0x3539343eUL,\n+    0x3c9fa37bUL, 0xad9cbe14UL, 0x3fff7bfdUL, 0xd006350aUL, 0xbc9dbb12UL,\n+    0x02243c89UL, 0x3fff91d8UL, 0xa779f689UL, 0xbc612ea8UL, 0x819e90d8UL,\n+    0x3fffa7c1UL, 0xf3a5931eUL, 0x3c874853UL, 0x3692d514UL, 0x3fffbdbaUL,\n+    0x15098eb6UL, 0xbc796773UL, 0x2b8f71f1UL, 0x3fffd3c2UL, 0x966579e7UL,\n+    0x3c62eb74UL, 0x6b2a23d9UL, 0x3fffe9d9UL, 0x7442fde3UL, 0x3c74a603UL,\n+    0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL, 0x6fba4e77UL,\n+    0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL, 0xfefa39efUL, 0x3fe62e42UL,\n+    0x00000000UL, 0x00000000UL, 0xfefa39efUL, 0x3fe62e42UL, 0xfefa39efUL,\n+    0xbfe62e42UL, 0xf8000000UL, 0xffffffffUL, 0xf8000000UL, 0xffffffffUL,\n+    0x00000000UL, 0x80000000UL, 0x00000000UL, 0x00000000UL\n+\n+};\n+\n+ATTRIBUTE_ALIGNED(8) double _DOUBLE2 = 2.0;\n+ATTRIBUTE_ALIGNED(8) double _DOUBLE0 = 0.0;\n+ATTRIBUTE_ALIGNED(8) double _DOUBLE0DOT5 = 0.5;\n+\n+\/\/registers,\n+\/\/ input: xmm0, xmm1\n+\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n+\/\/          eax, edx, ecx, ebx\n+\n+\/\/ Code generated by Intel C compiler for LIBM library\n+\n+void MacroAssembler::fast_pow(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3, XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7, Register eax, Register ecx, Register edx, Register tmp) {\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n+  Label L_2TAG_PACKET_12_0_2, L_2TAG_PACKET_13_0_2, L_2TAG_PACKET_14_0_2, L_2TAG_PACKET_15_0_2;\n+  Label L_2TAG_PACKET_16_0_2, L_2TAG_PACKET_17_0_2, L_2TAG_PACKET_18_0_2, L_2TAG_PACKET_19_0_2;\n+  Label L_2TAG_PACKET_20_0_2, L_2TAG_PACKET_21_0_2, L_2TAG_PACKET_22_0_2, L_2TAG_PACKET_23_0_2;\n+  Label L_2TAG_PACKET_24_0_2, L_2TAG_PACKET_25_0_2, L_2TAG_PACKET_26_0_2, L_2TAG_PACKET_27_0_2;\n+  Label L_2TAG_PACKET_28_0_2, L_2TAG_PACKET_29_0_2, L_2TAG_PACKET_30_0_2, L_2TAG_PACKET_31_0_2;\n+  Label L_2TAG_PACKET_32_0_2, L_2TAG_PACKET_33_0_2, L_2TAG_PACKET_34_0_2, L_2TAG_PACKET_35_0_2;\n+  Label L_2TAG_PACKET_36_0_2, L_2TAG_PACKET_37_0_2, L_2TAG_PACKET_38_0_2, L_2TAG_PACKET_39_0_2;\n+  Label L_2TAG_PACKET_40_0_2, L_2TAG_PACKET_41_0_2, L_2TAG_PACKET_42_0_2, L_2TAG_PACKET_43_0_2;\n+  Label L_2TAG_PACKET_44_0_2, L_2TAG_PACKET_45_0_2, L_2TAG_PACKET_46_0_2, L_2TAG_PACKET_47_0_2;\n+  Label L_2TAG_PACKET_48_0_2, L_2TAG_PACKET_49_0_2, L_2TAG_PACKET_50_0_2, L_2TAG_PACKET_51_0_2;\n+  Label L_2TAG_PACKET_52_0_2, L_2TAG_PACKET_53_0_2, L_2TAG_PACKET_54_0_2, L_2TAG_PACKET_55_0_2;\n+  Label L_2TAG_PACKET_56_0_2, L_2TAG_PACKET_57_0_2, L_2TAG_PACKET_58_0_2, start;\n+  Label L_NOT_DOUBLE2, L_NOT_DOUBLE0DOT5;\n+\n+  assert_different_registers(tmp, eax, ecx, edx);\n+\n+  address static_const_table_pow = (address)_static_const_table_pow;\n+  address DOUBLE2 = (address) &_DOUBLE2;\n+  address DOUBLE0 = (address) &_DOUBLE0;\n+  address DOUBLE0DOT5 = (address) &_DOUBLE0DOT5;\n+\n+  subl(rsp, 120);\n+  movl(Address(rsp, 64), tmp);\n+  lea(tmp, ExternalAddress(static_const_table_pow));\n+  movsd(xmm0, Address(rsp, 128));\n+  movsd(xmm1, Address(rsp, 136));\n+\n+  \/\/ Special case: pow(x, 2.0) => x * x\n+  ucomisd(xmm1, ExternalAddress(DOUBLE2));\n+  jccb(Assembler::notEqual, L_NOT_DOUBLE2);\n+  jccb(Assembler::parity, L_NOT_DOUBLE2);\n+  mulsd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_NOT_DOUBLE2);\n+  \/\/ Special case: pow(x, 0.5) => sqrt(x)\n+  ucomisd(xmm1, ExternalAddress(DOUBLE0DOT5)); \/\/ For pow(x, y), check whether y == 0.5\n+  jccb(Assembler::notEqual, L_NOT_DOUBLE0DOT5);\n+  jccb(Assembler::parity, L_NOT_DOUBLE0DOT5);\n+  ucomisd(xmm0, ExternalAddress(DOUBLE0));\n+  \/\/ According to the API specs, pow(-0.0, 0.5) = 0.0 and sqrt(-0.0) = -0.0.\n+  \/\/ So pow(-0.0, 0.5) shouldn't be replaced with sqrt(-0.0).\n+  \/\/ -0.0\/+0.0 are both excluded since floating-point comparison doesn't distinguish -0.0 from +0.0.\n+  jccb(Assembler::belowEqual, L_NOT_DOUBLE0DOT5); \/\/ pow(x, 0.5) => sqrt(x) only for x > 0.0\n+  sqrtsd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_NOT_DOUBLE0DOT5);\n+  xorpd(xmm2, xmm2);\n+  movl(eax, 16368);\n+  pinsrw(xmm2, eax, 3);\n+  movl(ecx, 1069088768);\n+  movdl(xmm7, ecx);\n+  movsd(Address(rsp, 16), xmm1);\n+  xorpd(xmm1, xmm1);\n+  movl(edx, 30704);\n+  pinsrw(xmm1, edx, 3);\n+  movsd(Address(rsp, 8), xmm0);\n+  movdqu(xmm3, xmm0);\n+  movl(edx, 8192);\n+  movdl(xmm4, edx);\n+  movdqu(xmm6, Address(tmp, 8240));\n+  pextrw(eax, xmm0, 3);\n+  por(xmm0, xmm2);\n+  psllq(xmm0, 5);\n+  movsd(xmm2, Address(tmp, 8256));\n+  psrlq(xmm0, 34);\n+  movl(edx, eax);\n+  andl(edx, 32752);\n+  subl(edx, 16368);\n+  movl(ecx, edx);\n+  sarl(edx, 31);\n+  addl(ecx, edx);\n+  xorl(ecx, edx);\n+  rcpss(xmm0, xmm0);\n+  psllq(xmm3, 12);\n+  addl(ecx, 16);\n+  bsrl(ecx, ecx);\n+  psrlq(xmm3, 12);\n+  movl(Address(rsp, 24), rsi);\n+  subl(eax, 16);\n+  cmpl(eax, 32736);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+  movl(rsi, 0);\n+\n+  bind(L_2TAG_PACKET_1_0_2);\n+  mulss(xmm0, xmm7);\n+  movl(edx, -1);\n+  subl(ecx, 4);\n+  shll(edx);\n+  movdl(xmm5, edx);\n+  por(xmm3, xmm1);\n+  subl(eax, 16351);\n+  cmpl(eax, 1);\n+  jcc(Assembler::belowEqual, L_2TAG_PACKET_2_0_2);\n+  paddd(xmm0, xmm4);\n+  psllq(xmm5, 32);\n+  movdl(edx, xmm0);\n+  psllq(xmm0, 29);\n+  pand(xmm5, xmm3);\n+\n+  bind(L_2TAG_PACKET_3_0_2);\n+  pand(xmm0, xmm6);\n+  subsd(xmm3, xmm5);\n+  subl(eax, 1);\n+  sarl(eax, 4);\n+  cvtsi2sdl(xmm7, eax);\n+  mulpd(xmm5, xmm0);\n+\n+  bind(L_2TAG_PACKET_4_0_2);\n+  mulsd(xmm3, xmm0);\n+  movdqu(xmm1, Address(tmp, 8272));\n+  subsd(xmm5, xmm2);\n+  movdqu(xmm4, Address(tmp, 8288));\n+  movl(ecx, eax);\n+  sarl(eax, 31);\n+  addl(ecx, eax);\n+  xorl(eax, ecx);\n+  addl(eax, 1);\n+  bsrl(eax, eax);\n+  unpcklpd(xmm5, xmm3);\n+  movdqu(xmm6, Address(tmp, 8304));\n+  addsd(xmm3, xmm5);\n+  andl(edx, 16760832);\n+  shrl(edx, 10);\n+  addpd(xmm5, Address(tmp, edx, Address::times_1, -3616));\n+  movdqu(xmm0, Address(tmp, 8320));\n+  pshufd(xmm2, xmm3, 68);\n+  mulsd(xmm3, xmm3);\n+  mulpd(xmm1, xmm2);\n+  mulpd(xmm4, xmm2);\n+  addsd(xmm5, xmm7);\n+  mulsd(xmm2, xmm3);\n+  addpd(xmm6, xmm1);\n+  mulsd(xmm3, xmm3);\n+  addpd(xmm0, xmm4);\n+  movsd(xmm1, Address(rsp, 16));\n+  movzwl(ecx, Address(rsp, 22));\n+  pshufd(xmm7, xmm5, 238);\n+  movsd(xmm4, Address(tmp, 8368));\n+  mulpd(xmm6, xmm2);\n+  pshufd(xmm3, xmm3, 68);\n+  mulpd(xmm0, xmm2);\n+  shll(eax, 4);\n+  subl(eax, 15872);\n+  andl(ecx, 32752);\n+  addl(eax, ecx);\n+  mulpd(xmm3, xmm6);\n+  cmpl(eax, 624);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n+  xorpd(xmm6, xmm6);\n+  movl(edx, 17080);\n+  pinsrw(xmm6, edx, 3);\n+  movdqu(xmm2, xmm1);\n+  pand(xmm4, xmm1);\n+  subsd(xmm1, xmm4);\n+  mulsd(xmm4, xmm5);\n+  addsd(xmm0, xmm7);\n+  mulsd(xmm1, xmm5);\n+  movdqu(xmm7, xmm6);\n+  addsd(xmm6, xmm4);\n+  addpd(xmm3, xmm0);\n+  movdl(edx, xmm6);\n+  subsd(xmm6, xmm7);\n+  pshufd(xmm0, xmm3, 238);\n+  subsd(xmm4, xmm6);\n+  addsd(xmm0, xmm3);\n+  movl(ecx, edx);\n+  andl(edx, 255);\n+  addl(edx, edx);\n+  movdqu(xmm5, Address(tmp, edx, Address::times_8, 8384));\n+  addsd(xmm4, xmm1);\n+  mulsd(xmm2, xmm0);\n+  movdqu(xmm7, Address(tmp, 12480));\n+  movdqu(xmm3, Address(tmp, 12496));\n+  shll(ecx, 12);\n+  xorl(ecx, rsi);\n+  andl(ecx, -1048576);\n+  movdl(xmm6, ecx);\n+  addsd(xmm2, xmm4);\n+  movsd(xmm1, Address(tmp, 12512));\n+  pshufd(xmm0, xmm2, 68);\n+  pshufd(xmm4, xmm2, 68);\n+  mulpd(xmm0, xmm0);\n+  movl(rsi, Address(rsp, 24));\n+  mulpd(xmm7, xmm4);\n+  pshufd(xmm6, xmm6, 17);\n+  mulsd(xmm1, xmm2);\n+  mulsd(xmm0, xmm0);\n+  paddd(xmm5, xmm6);\n+  addpd(xmm3, xmm7);\n+  mulsd(xmm1, xmm5);\n+  pshufd(xmm6, xmm5, 238);\n+  mulpd(xmm0, xmm3);\n+  addsd(xmm1, xmm6);\n+  pshufd(xmm3, xmm0, 238);\n+  mulsd(xmm0, xmm5);\n+  mulsd(xmm3, xmm5);\n+  addsd(xmm0, xmm1);\n+  addsd(xmm0, xmm3);\n+  addsd(xmm0, xmm5);\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_6_0_2);\n+\n+  bind(L_2TAG_PACKET_7_0_2);\n+  movsd(xmm0, Address(rsp, 128));\n+  movsd(xmm1, Address(rsp, 136));\n+  mulsd(xmm0, xmm1);\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_6_0_2);\n+\n+  bind(L_2TAG_PACKET_0_0_2);\n+  addl(eax, 16);\n+  movl(edx, 32752);\n+  andl(edx, eax);\n+  cmpl(edx, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n+  testl(eax, 32768);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_9_0_2);\n+\n+  bind(L_2TAG_PACKET_10_0_2);\n+  movl(ecx, Address(rsp, 16));\n+  xorl(edx, edx);\n+  testl(ecx, ecx);\n+  movl(ecx, 1);\n+  cmovl(Assembler::notEqual, edx, ecx);\n+  orl(edx, Address(rsp, 20));\n+  cmpl(edx, 1072693248);\n+  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n+  movsd(xmm0, Address(rsp, 8));\n+  movsd(xmm3, Address(rsp, 8));\n+  movdl(edx, xmm3);\n+  psrlq(xmm3, 32);\n+  movdl(ecx, xmm3);\n+  orl(edx, ecx);\n+  cmpl(edx, 0);\n+  jcc(Assembler::equal, L_2TAG_PACKET_11_0_2);\n+  xorpd(xmm3, xmm3);\n+  movl(eax, 18416);\n+  pinsrw(xmm3, eax, 3);\n+  mulsd(xmm0, xmm3);\n+  xorpd(xmm2, xmm2);\n+  movl(eax, 16368);\n+  pinsrw(xmm2, eax, 3);\n+  movdqu(xmm3, xmm0);\n+  pextrw(eax, xmm0, 3);\n+  por(xmm0, xmm2);\n+  movl(ecx, 18416);\n+  psllq(xmm0, 5);\n+  movsd(xmm2, Address(tmp, 8256));\n+  psrlq(xmm0, 34);\n+  rcpss(xmm0, xmm0);\n+  psllq(xmm3, 12);\n+  movdqu(xmm6, Address(tmp, 8240));\n+  psrlq(xmm3, 12);\n+  mulss(xmm0, xmm7);\n+  movl(edx, -1024);\n+  movdl(xmm5, edx);\n+  por(xmm3, xmm1);\n+  paddd(xmm0, xmm4);\n+  psllq(xmm5, 32);\n+  movdl(edx, xmm0);\n+  psllq(xmm0, 29);\n+  pand(xmm5, xmm3);\n+  movl(rsi, 0);\n+  pand(xmm0, xmm6);\n+  subsd(xmm3, xmm5);\n+  andl(eax, 32752);\n+  subl(eax, 18416);\n+  sarl(eax, 4);\n+  cvtsi2sdl(xmm7, eax);\n+  mulpd(xmm5, xmm0);\n+  jmp(L_2TAG_PACKET_4_0_2);\n+\n+  bind(L_2TAG_PACKET_12_0_2);\n+  movl(ecx, Address(rsp, 16));\n+  xorl(edx, edx);\n+  testl(ecx, ecx);\n+  movl(ecx, 1);\n+  cmovl(Assembler::notEqual, edx, ecx);\n+  orl(edx, Address(rsp, 20));\n+  cmpl(edx, 1072693248);\n+  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n+  movsd(xmm0, Address(rsp, 8));\n+  movsd(xmm3, Address(rsp, 8));\n+  movdl(edx, xmm3);\n+  psrlq(xmm3, 32);\n+  movdl(ecx, xmm3);\n+  orl(edx, ecx);\n+  cmpl(edx, 0);\n+  jcc(Assembler::equal, L_2TAG_PACKET_11_0_2);\n+  xorpd(xmm3, xmm3);\n+  movl(eax, 18416);\n+  pinsrw(xmm3, eax, 3);\n+  mulsd(xmm0, xmm3);\n+  xorpd(xmm2, xmm2);\n+  movl(eax, 16368);\n+  pinsrw(xmm2, eax, 3);\n+  movdqu(xmm3, xmm0);\n+  pextrw(eax, xmm0, 3);\n+  por(xmm0, xmm2);\n+  movl(ecx, 18416);\n+  psllq(xmm0, 5);\n+  movsd(xmm2, Address(tmp, 8256));\n+  psrlq(xmm0, 34);\n+  rcpss(xmm0, xmm0);\n+  psllq(xmm3, 12);\n+  movdqu(xmm6, Address(tmp, 8240));\n+  psrlq(xmm3, 12);\n+  mulss(xmm0, xmm7);\n+  movl(edx, -1024);\n+  movdl(xmm5, edx);\n+  por(xmm3, xmm1);\n+  paddd(xmm0, xmm4);\n+  psllq(xmm5, 32);\n+  movdl(edx, xmm0);\n+  psllq(xmm0, 29);\n+  pand(xmm5, xmm3);\n+  movl(rsi, INT_MIN);\n+  pand(xmm0, xmm6);\n+  subsd(xmm3, xmm5);\n+  andl(eax, 32752);\n+  subl(eax, 18416);\n+  sarl(eax, 4);\n+  cvtsi2sdl(xmm7, eax);\n+  mulpd(xmm5, xmm0);\n+  jmp(L_2TAG_PACKET_4_0_2);\n+\n+  bind(L_2TAG_PACKET_5_0_2);\n+  cmpl(eax, 0);\n+  jcc(Assembler::less, L_2TAG_PACKET_13_0_2);\n+  cmpl(eax, 752);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_14_0_2);\n+\n+  bind(L_2TAG_PACKET_15_0_2);\n+  addsd(xmm0, xmm7);\n+  movsd(xmm2, Address(tmp, 12544));\n+  addpd(xmm3, xmm0);\n+  xorpd(xmm6, xmm6);\n+  movl(eax, 17080);\n+  pinsrw(xmm6, eax, 3);\n+  pshufd(xmm0, xmm3, 238);\n+  addsd(xmm0, xmm3);\n+  movdqu(xmm3, xmm5);\n+  addsd(xmm5, xmm0);\n+  movdqu(xmm4, xmm2);\n+  subsd(xmm3, xmm5);\n+  movdqu(xmm7, xmm5);\n+  pand(xmm5, xmm2);\n+  movdqu(xmm2, xmm1);\n+  pand(xmm4, xmm1);\n+  subsd(xmm7, xmm5);\n+  addsd(xmm0, xmm3);\n+  subsd(xmm1, xmm4);\n+  mulsd(xmm4, xmm5);\n+  addsd(xmm0, xmm7);\n+  mulsd(xmm2, xmm0);\n+  movdqu(xmm7, xmm6);\n+  mulsd(xmm1, xmm5);\n+  addsd(xmm6, xmm4);\n+  movdl(eax, xmm6);\n+  subsd(xmm6, xmm7);\n+  addsd(xmm2, xmm1);\n+  movdqu(xmm7, Address(tmp, 12480));\n+  movdqu(xmm3, Address(tmp, 12496));\n+  subsd(xmm4, xmm6);\n+  pextrw(edx, xmm6, 3);\n+  movl(ecx, eax);\n+  andl(eax, 255);\n+  addl(eax, eax);\n+  movdqu(xmm5, Address(tmp, eax, Address::times_8, 8384));\n+  addsd(xmm2, xmm4);\n+  sarl(ecx, 8);\n+  movl(eax, ecx);\n+  sarl(ecx, 1);\n+  subl(eax, ecx);\n+  shll(ecx, 20);\n+  xorl(ecx, rsi);\n+  movdl(xmm6, ecx);\n+  movsd(xmm1, Address(tmp, 12512));\n+  andl(edx, 32767);\n+  cmpl(edx, 16529);\n+  jcc(Assembler::above, L_2TAG_PACKET_14_0_2);\n+  pshufd(xmm0, xmm2, 68);\n+  pshufd(xmm4, xmm2, 68);\n+  mulpd(xmm0, xmm0);\n+  mulpd(xmm7, xmm4);\n+  pshufd(xmm6, xmm6, 17);\n+  mulsd(xmm1, xmm2);\n+  mulsd(xmm0, xmm0);\n+  paddd(xmm5, xmm6);\n+  addpd(xmm3, xmm7);\n+  mulsd(xmm1, xmm5);\n+  pshufd(xmm6, xmm5, 238);\n+  mulpd(xmm0, xmm3);\n+  addsd(xmm1, xmm6);\n+  pshufd(xmm3, xmm0, 238);\n+  mulsd(xmm0, xmm5);\n+  mulsd(xmm3, xmm5);\n+  shll(eax, 4);\n+  xorpd(xmm4, xmm4);\n+  addl(eax, 16368);\n+  pinsrw(xmm4, eax, 3);\n+  addsd(xmm0, xmm1);\n+  movl(rsi, Address(rsp, 24));\n+  addsd(xmm0, xmm3);\n+  movdqu(xmm1, xmm0);\n+  addsd(xmm0, xmm5);\n+  mulsd(xmm0, xmm4);\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_16_0_2);\n+  cmpl(eax, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_17_0_2);\n+\n+  bind(L_2TAG_PACKET_18_0_2);\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_6_0_2);\n+\n+  bind(L_2TAG_PACKET_8_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  movsd(xmm0, Address(rsp, 8));\n+  movdqu(xmm2, xmm0);\n+  movdl(eax, xmm2);\n+  psrlq(xmm2, 20);\n+  movdl(edx, xmm2);\n+  orl(eax, edx);\n+  jcc(Assembler::equal, L_2TAG_PACKET_19_0_2);\n+  addsd(xmm0, xmm0);\n+  movdl(eax, xmm1);\n+  psrlq(xmm1, 32);\n+  movdl(edx, xmm1);\n+  movl(ecx, edx);\n+  addl(edx, edx);\n+  orl(eax, edx);\n+  jcc(Assembler::equal, L_2TAG_PACKET_20_0_2);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_20_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 16368);\n+  pinsrw(xmm0, eax, 3);\n+  movl(edx, 29);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_2TAG_PACKET_22_0_2);\n+  movsd(xmm0, Address(rsp, 16));\n+  addpd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_19_0_2);\n+  movdl(eax, xmm1);\n+  movdqu(xmm2, xmm1);\n+  psrlq(xmm1, 32);\n+  movdl(edx, xmm1);\n+  movl(ecx, edx);\n+  addl(edx, edx);\n+  orl(eax, edx);\n+  jcc(Assembler::equal, L_2TAG_PACKET_23_0_2);\n+  pextrw(eax, xmm2, 3);\n+  andl(eax, 32752);\n+  cmpl(eax, 32752);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_24_0_2);\n+  movdl(eax, xmm2);\n+  psrlq(xmm2, 20);\n+  movdl(edx, xmm2);\n+  orl(eax, edx);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n+\n+  bind(L_2TAG_PACKET_24_0_2);\n+  pextrw(eax, xmm0, 3);\n+  testl(eax, 32768);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_25_0_2);\n+  testl(ecx, INT_MIN);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_26_0_2);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_27_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  movdl(eax, xmm1);\n+  testl(eax, 1);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_28_0_2);\n+  testl(eax, 2);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_29_0_2);\n+  jmp(L_2TAG_PACKET_28_0_2);\n+\n+  bind(L_2TAG_PACKET_25_0_2);\n+  shrl(ecx, 20);\n+  andl(ecx, 2047);\n+  cmpl(ecx, 1075);\n+  jcc(Assembler::above, L_2TAG_PACKET_28_0_2);\n+  jcc(Assembler::equal, L_2TAG_PACKET_30_0_2);\n+  cmpl(ecx, 1074);\n+  jcc(Assembler::above, L_2TAG_PACKET_27_0_2);\n+  cmpl(ecx, 1023);\n+  jcc(Assembler::below, L_2TAG_PACKET_28_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  movl(eax, 17208);\n+  xorpd(xmm3, xmm3);\n+  pinsrw(xmm3, eax, 3);\n+  movdqu(xmm4, xmm3);\n+  addsd(xmm3, xmm1);\n+  subsd(xmm4, xmm3);\n+  addsd(xmm1, xmm4);\n+  pextrw(eax, xmm1, 3);\n+  andl(eax, 32752);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_28_0_2);\n+  movdl(eax, xmm3);\n+  andl(eax, 1);\n+  jcc(Assembler::equal, L_2TAG_PACKET_28_0_2);\n+\n+  bind(L_2TAG_PACKET_29_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  pextrw(eax, xmm1, 3);\n+  andl(eax, 32768);\n+  jcc(Assembler::equal, L_2TAG_PACKET_18_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 32768);\n+  pinsrw(xmm0, eax, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_28_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  pextrw(eax, xmm1, 3);\n+  andl(eax, 32768);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_26_0_2);\n+\n+  bind(L_2TAG_PACKET_31_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 32752);\n+  pinsrw(xmm0, eax, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_30_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  movdl(eax, xmm1);\n+  andl(eax, 1);\n+  jcc(Assembler::equal, L_2TAG_PACKET_28_0_2);\n+  jmp(L_2TAG_PACKET_29_0_2);\n+\n+  bind(L_2TAG_PACKET_32_0_2);\n+  movdl(eax, xmm1);\n+  psrlq(xmm1, 20);\n+  movdl(edx, xmm1);\n+  orl(eax, edx);\n+  jcc(Assembler::equal, L_2TAG_PACKET_33_0_2);\n+  movsd(xmm0, Address(rsp, 16));\n+  addsd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_33_0_2);\n+  movsd(xmm0, Address(rsp, 8));\n+  pextrw(eax, xmm0, 3);\n+  cmpl(eax, 49136);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n+  movdl(ecx, xmm0);\n+  psrlq(xmm0, 20);\n+  movdl(edx, xmm0);\n+  orl(ecx, edx);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 32760);\n+  pinsrw(xmm0, eax, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_34_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  andl(eax, 32752);\n+  subl(eax, 16368);\n+  pextrw(edx, xmm1, 3);\n+  xorpd(xmm0, xmm0);\n+  xorl(eax, edx);\n+  andl(eax, 32768);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n+  movl(ecx, 32752);\n+  pinsrw(xmm0, ecx, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_35_0_2);\n+  movdl(eax, xmm1);\n+  cmpl(edx, 17184);\n+  jcc(Assembler::above, L_2TAG_PACKET_36_0_2);\n+  testl(eax, 1);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_37_0_2);\n+  testl(eax, 2);\n+  jcc(Assembler::equal, L_2TAG_PACKET_38_0_2);\n+  jmp(L_2TAG_PACKET_39_0_2);\n+\n+  bind(L_2TAG_PACKET_36_0_2);\n+  testl(eax, 1);\n+  jcc(Assembler::equal, L_2TAG_PACKET_38_0_2);\n+  jmp(L_2TAG_PACKET_39_0_2);\n+\n+  bind(L_2TAG_PACKET_9_0_2);\n+  movsd(xmm2, Address(rsp, 8));\n+  movdl(eax, xmm2);\n+  psrlq(xmm2, 31);\n+  movdl(ecx, xmm2);\n+  orl(eax, ecx);\n+  jcc(Assembler::equal, L_2TAG_PACKET_11_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  pextrw(edx, xmm1, 3);\n+  movdl(eax, xmm1);\n+  movdqu(xmm2, xmm1);\n+  psrlq(xmm2, 32);\n+  movdl(ecx, xmm2);\n+  addl(ecx, ecx);\n+  orl(ecx, eax);\n+  jcc(Assembler::equal, L_2TAG_PACKET_40_0_2);\n+  andl(edx, 32752);\n+  cmpl(edx, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_32_0_2);\n+  cmpl(edx, 17200);\n+  jcc(Assembler::above, L_2TAG_PACKET_38_0_2);\n+  cmpl(edx, 17184);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_35_0_2);\n+  cmpl(edx, 16368);\n+  jcc(Assembler::below, L_2TAG_PACKET_37_0_2);\n+  movl(eax, 17208);\n+  xorpd(xmm2, xmm2);\n+  pinsrw(xmm2, eax, 3);\n+  movdqu(xmm4, xmm2);\n+  addsd(xmm2, xmm1);\n+  subsd(xmm4, xmm2);\n+  addsd(xmm1, xmm4);\n+  pextrw(eax, xmm1, 3);\n+  andl(eax, 32767);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_37_0_2);\n+  movdl(eax, xmm2);\n+  andl(eax, 1);\n+  jcc(Assembler::equal, L_2TAG_PACKET_38_0_2);\n+\n+  bind(L_2TAG_PACKET_39_0_2);\n+  xorpd(xmm1, xmm1);\n+  movl(edx, 30704);\n+  pinsrw(xmm1, edx, 3);\n+  movsd(xmm2, Address(tmp, 8256));\n+  movsd(xmm4, Address(rsp, 8));\n+  pextrw(eax, xmm4, 3);\n+  movl(edx, 8192);\n+  movdl(xmm4, edx);\n+  andl(eax, 32767);\n+  subl(eax, 16);\n+  jcc(Assembler::less, L_2TAG_PACKET_12_0_2);\n+  movl(edx, eax);\n+  andl(edx, 32752);\n+  subl(edx, 16368);\n+  movl(ecx, edx);\n+  sarl(edx, 31);\n+  addl(ecx, edx);\n+  xorl(ecx, edx);\n+  addl(ecx, 16);\n+  bsrl(ecx, ecx);\n+  movl(rsi, INT_MIN);\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_37_0_2);\n+  xorpd(xmm1, xmm1);\n+  movl(eax, 32752);\n+  pinsrw(xmm1, eax, 3);\n+  xorpd(xmm0, xmm0);\n+  mulsd(xmm0, xmm1);\n+  movl(edx, 28);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_2TAG_PACKET_38_0_2);\n+  xorpd(xmm1, xmm1);\n+  movl(edx, 30704);\n+  pinsrw(xmm1, edx, 3);\n+  movsd(xmm2, Address(tmp, 8256));\n+  movsd(xmm4, Address(rsp, 8));\n+  pextrw(eax, xmm4, 3);\n+  movl(edx, 8192);\n+  movdl(xmm4, edx);\n+  andl(eax, 32767);\n+  subl(eax, 16);\n+  jcc(Assembler::less, L_2TAG_PACKET_10_0_2);\n+  movl(edx, eax);\n+  andl(edx, 32752);\n+  subl(edx, 16368);\n+  movl(ecx, edx);\n+  sarl(edx, 31);\n+  addl(ecx, edx);\n+  xorl(ecx, edx);\n+  addl(ecx, 16);\n+  bsrl(ecx, ecx);\n+  movl(rsi, 0);\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_23_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 16368);\n+  pinsrw(xmm0, eax, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_26_0_2);\n+  xorpd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_13_0_2);\n+  addl(eax, 384);\n+  cmpl(eax, 0);\n+  jcc(Assembler::less, L_2TAG_PACKET_41_0_2);\n+  mulsd(xmm5, xmm1);\n+  addsd(xmm0, xmm7);\n+  shrl(rsi, 31);\n+  addpd(xmm3, xmm0);\n+  pshufd(xmm0, xmm3, 238);\n+  addsd(xmm3, xmm0);\n+  movsd(xmm4, Address(tmp, rsi, Address::times_8, 12528));\n+  mulsd(xmm1, xmm3);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 16368);\n+  shll(rsi, 15);\n+  orl(eax, rsi);\n+  pinsrw(xmm0, eax, 3);\n+  addsd(xmm5, xmm1);\n+  movl(rsi, Address(rsp, 24));\n+  mulsd(xmm5, xmm4);\n+  addsd(xmm0, xmm5);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_41_0_2);\n+  movl(rsi, Address(rsp, 24));\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 16368);\n+  pinsrw(xmm0, eax, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_40_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 16368);\n+  pinsrw(xmm0, eax, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_42_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 16368);\n+  pinsrw(xmm0, eax, 3);\n+  movl(edx, 26);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_2TAG_PACKET_11_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  movdqu(xmm2, xmm1);\n+  pextrw(eax, xmm1, 3);\n+  andl(eax, 32752);\n+  cmpl(eax, 32752);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_43_0_2);\n+  movdl(eax, xmm2);\n+  psrlq(xmm2, 20);\n+  movdl(edx, xmm2);\n+  orl(eax, edx);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n+\n+  bind(L_2TAG_PACKET_43_0_2);\n+  movdl(eax, xmm1);\n+  psrlq(xmm1, 32);\n+  movdl(edx, xmm1);\n+  movl(ecx, edx);\n+  addl(edx, edx);\n+  orl(eax, edx);\n+  jcc(Assembler::equal, L_2TAG_PACKET_42_0_2);\n+  shrl(edx, 21);\n+  cmpl(edx, 1075);\n+  jcc(Assembler::above, L_2TAG_PACKET_44_0_2);\n+  jcc(Assembler::equal, L_2TAG_PACKET_45_0_2);\n+  cmpl(edx, 1023);\n+  jcc(Assembler::below, L_2TAG_PACKET_44_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  movl(eax, 17208);\n+  xorpd(xmm3, xmm3);\n+  pinsrw(xmm3, eax, 3);\n+  movdqu(xmm4, xmm3);\n+  addsd(xmm3, xmm1);\n+  subsd(xmm4, xmm3);\n+  addsd(xmm1, xmm4);\n+  pextrw(eax, xmm1, 3);\n+  andl(eax, 32752);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_44_0_2);\n+  movdl(eax, xmm3);\n+  andl(eax, 1);\n+  jcc(Assembler::equal, L_2TAG_PACKET_44_0_2);\n+\n+  bind(L_2TAG_PACKET_46_0_2);\n+  movsd(xmm0, Address(rsp, 8));\n+  testl(ecx, INT_MIN);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_47_0_2);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_45_0_2);\n+  movsd(xmm1, Address(rsp, 16));\n+  movdl(eax, xmm1);\n+  testl(eax, 1);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_46_0_2);\n+\n+  bind(L_2TAG_PACKET_44_0_2);\n+  testl(ecx, INT_MIN);\n+  jcc(Assembler::equal, L_2TAG_PACKET_26_0_2);\n+  xorpd(xmm0, xmm0);\n+\n+  bind(L_2TAG_PACKET_47_0_2);\n+  movl(eax, 16368);\n+  xorpd(xmm1, xmm1);\n+  pinsrw(xmm1, eax, 3);\n+  divsd(xmm1, xmm0);\n+  movdqu(xmm0, xmm1);\n+  movl(edx, 27);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_2TAG_PACKET_14_0_2);\n+  movsd(xmm2, Address(rsp, 8));\n+  movsd(xmm6, Address(rsp, 16));\n+  pextrw(eax, xmm2, 3);\n+  pextrw(edx, xmm6, 3);\n+  movl(ecx, 32752);\n+  andl(ecx, edx);\n+  cmpl(ecx, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_48_0_2);\n+  andl(eax, 32752);\n+  subl(eax, 16368);\n+  xorl(edx, eax);\n+  testl(edx, 32768);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_49_0_2);\n+\n+  bind(L_2TAG_PACKET_50_0_2);\n+  movl(eax, 32736);\n+  pinsrw(xmm0, eax, 3);\n+  shrl(rsi, 16);\n+  orl(eax, rsi);\n+  pinsrw(xmm1, eax, 3);\n+  movl(rsi, Address(rsp, 24));\n+  mulsd(xmm0, xmm1);\n+\n+  bind(L_2TAG_PACKET_17_0_2);\n+  movl(edx, 24);\n+\n+  bind(L_2TAG_PACKET_21_0_2);\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_6_0_2);\n+\n+  bind(L_2TAG_PACKET_49_0_2);\n+  movl(eax, 16);\n+  pinsrw(xmm0, eax, 3);\n+  mulsd(xmm0, xmm0);\n+  testl(rsi, INT_MIN);\n+  jcc(Assembler::equal, L_2TAG_PACKET_51_0_2);\n+  movsd(xmm2, Address(tmp, 12560));\n+  xorpd(xmm0, xmm2);\n+\n+  bind(L_2TAG_PACKET_51_0_2);\n+  movl(rsi, Address(rsp, 24));\n+  movl(edx, 25);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_2TAG_PACKET_16_0_2);\n+  pextrw(ecx, xmm5, 3);\n+  pextrw(edx, xmm4, 3);\n+  movl(eax, -1);\n+  andl(ecx, 32752);\n+  subl(ecx, 16368);\n+  andl(edx, 32752);\n+  addl(edx, ecx);\n+  movl(ecx, -31);\n+  sarl(edx, 4);\n+  subl(ecx, edx);\n+  jcc(Assembler::lessEqual, L_2TAG_PACKET_52_0_2);\n+  cmpl(ecx, 20);\n+  jcc(Assembler::above, L_2TAG_PACKET_53_0_2);\n+  shll(eax);\n+\n+  bind(L_2TAG_PACKET_52_0_2);\n+  movdl(xmm0, eax);\n+  psllq(xmm0, 32);\n+  pand(xmm0, xmm5);\n+  subsd(xmm5, xmm0);\n+  addsd(xmm5, xmm1);\n+  mulsd(xmm0, xmm4);\n+  mulsd(xmm5, xmm4);\n+  addsd(xmm0, xmm5);\n+\n+  bind(L_2TAG_PACKET_53_0_2);\n+  movl(edx, 25);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_2TAG_PACKET_2_0_2);\n+  movzwl(ecx, Address(rsp, 22));\n+  movl(edx, INT_MIN);\n+  movdl(xmm1, edx);\n+  xorpd(xmm7, xmm7);\n+  paddd(xmm0, xmm4);\n+  psllq(xmm5, 32);\n+  movdl(edx, xmm0);\n+  psllq(xmm0, 29);\n+  paddq(xmm1, xmm3);\n+  pand(xmm5, xmm1);\n+  andl(ecx, 32752);\n+  cmpl(ecx, 16560);\n+  jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n+  pand(xmm0, xmm6);\n+  subsd(xmm3, xmm5);\n+  addl(eax, 16351);\n+  shrl(eax, 4);\n+  subl(eax, 1022);\n+  cvtsi2sdl(xmm7, eax);\n+  mulpd(xmm5, xmm0);\n+  movsd(xmm4, Address(tmp, 0));\n+  mulsd(xmm3, xmm0);\n+  movsd(xmm6, Address(tmp, 0));\n+  subsd(xmm5, xmm2);\n+  movsd(xmm1, Address(tmp, 8));\n+  pshufd(xmm2, xmm3, 68);\n+  unpcklpd(xmm5, xmm3);\n+  addsd(xmm3, xmm5);\n+  movsd(xmm0, Address(tmp, 8));\n+  andl(edx, 16760832);\n+  shrl(edx, 10);\n+  addpd(xmm7, Address(tmp, edx, Address::times_1, -3616));\n+  mulsd(xmm4, xmm5);\n+  mulsd(xmm0, xmm5);\n+  mulsd(xmm6, xmm2);\n+  mulsd(xmm1, xmm2);\n+  movdqu(xmm2, xmm5);\n+  mulsd(xmm4, xmm5);\n+  addsd(xmm5, xmm0);\n+  movdqu(xmm0, xmm7);\n+  addsd(xmm2, xmm3);\n+  addsd(xmm7, xmm5);\n+  mulsd(xmm6, xmm2);\n+  subsd(xmm0, xmm7);\n+  movdqu(xmm2, xmm7);\n+  addsd(xmm7, xmm4);\n+  addsd(xmm0, xmm5);\n+  subsd(xmm2, xmm7);\n+  addsd(xmm4, xmm2);\n+  pshufd(xmm2, xmm5, 238);\n+  movdqu(xmm5, xmm7);\n+  addsd(xmm7, xmm2);\n+  addsd(xmm4, xmm0);\n+  movdqu(xmm0, Address(tmp, 8272));\n+  subsd(xmm5, xmm7);\n+  addsd(xmm6, xmm4);\n+  movdqu(xmm4, xmm7);\n+  addsd(xmm5, xmm2);\n+  addsd(xmm7, xmm1);\n+  movdqu(xmm2, Address(tmp, 8336));\n+  subsd(xmm4, xmm7);\n+  addsd(xmm6, xmm5);\n+  addsd(xmm4, xmm1);\n+  pshufd(xmm5, xmm7, 238);\n+  movdqu(xmm1, xmm7);\n+  addsd(xmm7, xmm5);\n+  subsd(xmm1, xmm7);\n+  addsd(xmm1, xmm5);\n+  movdqu(xmm5, Address(tmp, 8352));\n+  pshufd(xmm3, xmm3, 68);\n+  addsd(xmm6, xmm4);\n+  addsd(xmm6, xmm1);\n+  movdqu(xmm1, Address(tmp, 8304));\n+  mulpd(xmm0, xmm3);\n+  mulpd(xmm2, xmm3);\n+  pshufd(xmm4, xmm3, 68);\n+  mulpd(xmm3, xmm3);\n+  addpd(xmm0, xmm1);\n+  addpd(xmm5, xmm2);\n+  mulsd(xmm4, xmm3);\n+  movsd(xmm2, Address(tmp, 16));\n+  mulpd(xmm3, xmm3);\n+  movsd(xmm1, Address(rsp, 16));\n+  movzwl(ecx, Address(rsp, 22));\n+  mulpd(xmm0, xmm4);\n+  pextrw(eax, xmm7, 3);\n+  mulpd(xmm5, xmm4);\n+  mulpd(xmm0, xmm3);\n+  movsd(xmm4, Address(tmp, 8376));\n+  pand(xmm2, xmm7);\n+  addsd(xmm5, xmm6);\n+  subsd(xmm7, xmm2);\n+  addpd(xmm5, xmm0);\n+  andl(eax, 32752);\n+  subl(eax, 16368);\n+  andl(ecx, 32752);\n+  cmpl(ecx, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_48_0_2);\n+  addl(ecx, eax);\n+  cmpl(ecx, 16576);\n+  jcc(Assembler::aboveEqual, L_2TAG_PACKET_54_0_2);\n+  pshufd(xmm0, xmm5, 238);\n+  pand(xmm4, xmm1);\n+  movdqu(xmm3, xmm1);\n+  addsd(xmm5, xmm0);\n+  subsd(xmm1, xmm4);\n+  xorpd(xmm6, xmm6);\n+  movl(edx, 17080);\n+  pinsrw(xmm6, edx, 3);\n+  addsd(xmm7, xmm5);\n+  mulsd(xmm4, xmm2);\n+  mulsd(xmm1, xmm2);\n+  movdqu(xmm5, xmm6);\n+  mulsd(xmm3, xmm7);\n+  addsd(xmm6, xmm4);\n+  addsd(xmm1, xmm3);\n+  movdqu(xmm7, Address(tmp, 12480));\n+  movdl(edx, xmm6);\n+  subsd(xmm6, xmm5);\n+  movdqu(xmm3, Address(tmp, 12496));\n+  movsd(xmm2, Address(tmp, 12512));\n+  subsd(xmm4, xmm6);\n+  movl(ecx, edx);\n+  andl(edx, 255);\n+  addl(edx, edx);\n+  movdqu(xmm5, Address(tmp, edx, Address::times_8, 8384));\n+  addsd(xmm4, xmm1);\n+  pextrw(edx, xmm6, 3);\n+  shrl(ecx, 8);\n+  movl(eax, ecx);\n+  shrl(ecx, 1);\n+  subl(eax, ecx);\n+  shll(ecx, 20);\n+  movdl(xmm6, ecx);\n+  pshufd(xmm0, xmm4, 68);\n+  pshufd(xmm1, xmm4, 68);\n+  mulpd(xmm0, xmm0);\n+  mulpd(xmm7, xmm1);\n+  pshufd(xmm6, xmm6, 17);\n+  mulsd(xmm2, xmm4);\n+  andl(edx, 32767);\n+  cmpl(edx, 16529);\n+  jcc(Assembler::above, L_2TAG_PACKET_14_0_2);\n+  mulsd(xmm0, xmm0);\n+  paddd(xmm5, xmm6);\n+  addpd(xmm3, xmm7);\n+  mulsd(xmm2, xmm5);\n+  pshufd(xmm6, xmm5, 238);\n+  mulpd(xmm0, xmm3);\n+  addsd(xmm2, xmm6);\n+  pshufd(xmm3, xmm0, 238);\n+  addl(eax, 1023);\n+  shll(eax, 20);\n+  orl(eax, rsi);\n+  movdl(xmm4, eax);\n+  mulsd(xmm0, xmm5);\n+  mulsd(xmm3, xmm5);\n+  addsd(xmm0, xmm2);\n+  psllq(xmm4, 32);\n+  addsd(xmm0, xmm3);\n+  movdqu(xmm1, xmm0);\n+  addsd(xmm0, xmm5);\n+  movl(rsi, Address(rsp, 24));\n+  mulsd(xmm0, xmm4);\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_16_0_2);\n+  cmpl(eax, 32752);\n+  jcc(Assembler::equal, L_2TAG_PACKET_17_0_2);\n+\n+  bind(L_2TAG_PACKET_55_0_2);\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_6_0_2);\n+\n+  bind(L_2TAG_PACKET_48_0_2);\n+  movl(rsi, Address(rsp, 24));\n+\n+  bind(L_2TAG_PACKET_56_0_2);\n+  movsd(xmm0, Address(rsp, 8));\n+  movsd(xmm1, Address(rsp, 16));\n+  addsd(xmm1, xmm1);\n+  xorpd(xmm2, xmm2);\n+  movl(eax, 49136);\n+  pinsrw(xmm2, eax, 3);\n+  addsd(xmm2, xmm0);\n+  pextrw(eax, xmm2, 3);\n+  cmpl(eax, 0);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_57_0_2);\n+  xorpd(xmm0, xmm0);\n+  movl(eax, 32760);\n+  pinsrw(xmm0, eax, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_57_0_2);\n+  movdl(edx, xmm1);\n+  movdqu(xmm3, xmm1);\n+  psrlq(xmm3, 20);\n+  movdl(ecx, xmm3);\n+  orl(ecx, edx);\n+  jcc(Assembler::equal, L_2TAG_PACKET_58_0_2);\n+  addsd(xmm1, xmm1);\n+  movdqu(xmm0, xmm1);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_58_0_2);\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32752);\n+  pextrw(edx, xmm1, 3);\n+  xorpd(xmm0, xmm0);\n+  subl(eax, 16368);\n+  xorl(eax, edx);\n+  testl(eax, 32768);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n+  movl(edx, 32752);\n+  pinsrw(xmm0, edx, 3);\n+  jmp(L_2TAG_PACKET_18_0_2);\n+\n+  bind(L_2TAG_PACKET_54_0_2);\n+  pextrw(eax, xmm1, 3);\n+  pextrw(ecx, xmm2, 3);\n+  xorl(eax, ecx);\n+  testl(eax, 32768);\n+  jcc(Assembler::equal, L_2TAG_PACKET_50_0_2);\n+  jmp(L_2TAG_PACKET_49_0_2);\n+\n+  bind(L_2TAG_PACKET_6_0_2);\n+  movl(tmp, Address(rsp, 64));\n+\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_pow.cpp","additions":1856,"deletions":0,"binary":false,"changes":1856,"status":"added"},{"patch":"@@ -0,0 +1,1743 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"stubRoutines_x86.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - SIN()\n+\/\/                     ---------------------\n+\/\/\n+\/\/     1. RANGE REDUCTION\n+\/\/\n+\/\/     We perform an initial range reduction from X to r with\n+\/\/\n+\/\/          X =~= N * pi\/32 + r\n+\/\/\n+\/\/     so that |r| <= pi\/64 + epsilon. We restrict inputs to those\n+\/\/     where |N| <= 932560. Beyond this, the range reduction is\n+\/\/     insufficiently accurate. For extremely small inputs,\n+\/\/     denormalization can occur internally, impacting performance.\n+\/\/     This means that the main path is actually only taken for\n+\/\/     2^-252 <= |X| < 90112.\n+\/\/\n+\/\/     To avoid branches, we perform the range reduction to full\n+\/\/     accuracy each time.\n+\/\/\n+\/\/          X - N * (P_1 + P_2 + P_3)\n+\/\/\n+\/\/     where P_1 and P_2 are 32-bit numbers (so multiplication by N\n+\/\/     is exact) and P_3 is a 53-bit number. Together, these\n+\/\/     approximate pi well enough for all cases in the restricted\n+\/\/     range.\n+\/\/\n+\/\/     The main reduction sequence is:\n+\/\/\n+\/\/             y = 32\/pi * x\n+\/\/             N = integer(y)\n+\/\/     (computed by adding and subtracting off SHIFTER)\n+\/\/\n+\/\/             m_1 = N * P_1\n+\/\/             m_2 = N * P_2\n+\/\/             r_1 = x - m_1\n+\/\/             r = r_1 - m_2\n+\/\/     (this r can be used for most of the calculation)\n+\/\/\n+\/\/             c_1 = r_1 - r\n+\/\/             m_3 = N * P_3\n+\/\/             c_2 = c_1 - m_2\n+\/\/             c = c_2 - m_3\n+\/\/\n+\/\/     2. MAIN ALGORITHM\n+\/\/\n+\/\/     The algorithm uses a table lookup based on B = M * pi \/ 32\n+\/\/     where M = N mod 64. The stored values are:\n+\/\/       sigma             closest power of 2 to cos(B)\n+\/\/       C_hl              53-bit cos(B) - sigma\n+\/\/       S_hi + S_lo       2 * 53-bit sin(B)\n+\/\/\n+\/\/     The computation is organized as follows:\n+\/\/\n+\/\/          sin(B + r + c) = [sin(B) + sigma * r] +\n+\/\/                           r * (cos(B) - sigma) +\n+\/\/                           sin(B) * [cos(r + c) - 1] +\n+\/\/                           cos(B) * [sin(r + c) - r]\n+\/\/\n+\/\/     which is approximately:\n+\/\/\n+\/\/          [S_hi + sigma * r] +\n+\/\/          C_hl * r +\n+\/\/          S_lo + S_hi * [(cos(r) - 1) - r * c] +\n+\/\/          (C_hl + sigma) * [(sin(r) - r) + c]\n+\/\/\n+\/\/     and this is what is actually computed. We separate this sum\n+\/\/     into four parts:\n+\/\/\n+\/\/          hi + med + pols + corr\n+\/\/\n+\/\/     where\n+\/\/\n+\/\/          hi       = S_hi + sigma r\n+\/\/          med      = C_hl * r\n+\/\/          pols     = S_hi * (cos(r) - 1) + (C_hl + sigma) * (sin(r) - r)\n+\/\/          corr     = S_lo + c * ((C_hl + sigma) - S_hi * r)\n+\/\/\n+\/\/     3. POLYNOMIAL\n+\/\/\n+\/\/     The polynomial S_hi * (cos(r) - 1) + (C_hl + sigma) *\n+\/\/     (sin(r) - r) can be rearranged freely, since it is quite\n+\/\/     small, so we exploit parallelism to the fullest.\n+\/\/\n+\/\/          psc4       =   SC_4 * r_1\n+\/\/          msc4       =   psc4 * r\n+\/\/          r2         =   r * r\n+\/\/          msc2       =   SC_2 * r2\n+\/\/          r4         =   r2 * r2\n+\/\/          psc3       =   SC_3 + msc4\n+\/\/          psc1       =   SC_1 + msc2\n+\/\/          msc3       =   r4 * psc3\n+\/\/          sincospols =   psc1 + msc3\n+\/\/          pols       =   sincospols *\n+\/\/                         <S_hi * r^2 | (C_hl + sigma) * r^3>\n+\/\/\n+\/\/     4. CORRECTION TERM\n+\/\/\n+\/\/     This is where the \"c\" component of the range reduction is\n+\/\/     taken into account; recall that just \"r\" is used for most of\n+\/\/     the calculation.\n+\/\/\n+\/\/          -c   = m_3 - c_2\n+\/\/          -d   = S_hi * r - (C_hl + sigma)\n+\/\/          corr = -c * -d + S_lo\n+\/\/\n+\/\/     5. COMPENSATED SUMMATIONS\n+\/\/\n+\/\/     The two successive compensated summations add up the high\n+\/\/     and medium parts, leaving just the low parts to add up at\n+\/\/     the end.\n+\/\/\n+\/\/          rs        =  sigma * r\n+\/\/          res_int   =  S_hi + rs\n+\/\/          k_0       =  S_hi - res_int\n+\/\/          k_2       =  k_0 + rs\n+\/\/          med       =  C_hl * r\n+\/\/          res_hi    =  res_int + med\n+\/\/          k_1       =  res_int - res_hi\n+\/\/          k_3       =  k_1 + med\n+\/\/\n+\/\/     6. FINAL SUMMATION\n+\/\/\n+\/\/     We now add up all the small parts:\n+\/\/\n+\/\/          res_lo = pols(hi) + pols(lo) + corr + k_1 + k_3\n+\/\/\n+\/\/     Now the overall result is just:\n+\/\/\n+\/\/          res_hi + res_lo\n+\/\/\n+\/\/     7. SMALL ARGUMENTS\n+\/\/\n+\/\/     If |x| < SNN (SNN meaning the smallest normal number), we\n+\/\/     simply perform 0.1111111 cdots 1111 * x. For SNN <= |x|, we\n+\/\/     do 2^-55 * (2^55 * x - x).\n+\/\/\n+\/\/ Special cases:\n+\/\/  sin(NaN) = quiet NaN, and raise invalid exception\n+\/\/  sin(INF) = NaN and raise invalid exception\n+\/\/  sin(+\/-0) = +\/-0\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 32 bit code is at most SSE2 compliant\n+ATTRIBUTE_ALIGNED(8) juint _zero_none[] =\n+{\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint __4onpi_d[] =\n+{\n+    0x6dc9c883UL, 0x3ff45f30UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _TWO_32H[] =\n+{\n+    0x00000000UL, 0x41f80000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _pi04_3d[] =\n+{\n+    0x54442d00UL, 0x3fe921fbUL, 0x98cc5180UL, 0x3ce84698UL, 0xcbb5bf6cUL,\n+    0xb9dfc8f8UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _pi04_5d[] =\n+{\n+    0x54400000UL, 0x3fe921fbUL, 0x1a600000UL, 0x3dc0b461UL, 0x2e000000UL,\n+    0x3b93198aUL, 0x25200000UL, 0x396b839aUL, 0x533e63a0UL, 0x37027044UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _SCALE[] =\n+{\n+    0x00000000UL, 0x32600000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _zeros[] =\n+{\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x80000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _pi04_2d[] =\n+{\n+    0x54400000UL, 0x3fe921fbUL, 0x1a626331UL, 0x3dc0b461UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _TWO_12H[] =\n+{\n+    0x00000000UL, 0x40b80000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(2) jushort __4onpi_31l[] =\n+{\n+    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x836e, 0xa2f9,\n+    0x40d8, 0x0000, 0x0000, 0x0000, 0x2a50, 0x9c88, 0x40b7, 0x0000, 0x0000, 0x0000,\n+    0xabe8, 0xfe13, 0x4099, 0x0000, 0x0000, 0x0000, 0x6ee0, 0xfa9a, 0x4079, 0x0000,\n+    0x0000, 0x0000, 0x9580, 0xdb62, 0x4058, 0x0000, 0x0000, 0x0000, 0x1c82, 0xc9e2,\n+    0x403d, 0x0000, 0x0000, 0x0000, 0xb1c0, 0xff28, 0x4019, 0x0000, 0x0000, 0x0000,\n+    0xef14, 0xaf7a, 0x3ffe, 0x0000, 0x0000, 0x0000, 0x48dc, 0xc36e, 0x3fdf, 0x0000,\n+    0x0000, 0x0000, 0x3740, 0xe909, 0x3fbe, 0x0000, 0x0000, 0x0000, 0x924a, 0xb801,\n+    0x3fa2, 0x0000, 0x0000, 0x0000, 0x3a32, 0xdd41, 0x3f83, 0x0000, 0x0000, 0x0000,\n+    0x8778, 0x873f, 0x3f62, 0x0000, 0x0000, 0x0000, 0x1298, 0xb1cb, 0x3f44, 0x0000,\n+    0x0000, 0x0000, 0xa208, 0x9cfb, 0x3f26, 0x0000, 0x0000, 0x0000, 0xbaec, 0xd7d4,\n+    0x3f06, 0x0000, 0x0000, 0x0000, 0xd338, 0x8909, 0x3ee7, 0x0000, 0x0000, 0x0000,\n+    0x68b8, 0xe04d, 0x3ec7, 0x0000, 0x0000, 0x0000, 0x4e64, 0xdf90, 0x3eaa, 0x0000,\n+    0x0000, 0x0000, 0xc1a8, 0xeb1c, 0x3e89, 0x0000, 0x0000, 0x0000, 0x2720, 0xce7d,\n+    0x3e6a, 0x0000, 0x0000, 0x0000, 0x77b8, 0x8bf1, 0x3e4b, 0x0000, 0x0000, 0x0000,\n+    0xec7e, 0xe4a0, 0x3e2e, 0x0000, 0x0000, 0x0000, 0xffbc, 0xf12f, 0x3e0f, 0x0000,\n+    0x0000, 0x0000, 0xfdc0, 0xb301, 0x3deb, 0x0000, 0x0000, 0x0000, 0xc5ac, 0x9788,\n+    0x3dd1, 0x0000, 0x0000, 0x0000, 0x47da, 0x829b, 0x3db2, 0x0000, 0x0000, 0x0000,\n+    0xd9e4, 0xa6cf, 0x3d93, 0x0000, 0x0000, 0x0000, 0x36e8, 0xf961, 0x3d73, 0x0000,\n+    0x0000, 0x0000, 0xf668, 0xf463, 0x3d54, 0x0000, 0x0000, 0x0000, 0x5168, 0xf2ff,\n+    0x3d35, 0x0000, 0x0000, 0x0000, 0x758e, 0xea4f, 0x3d17, 0x0000, 0x0000, 0x0000,\n+    0xf17a, 0xebe5, 0x3cf8, 0x0000, 0x0000, 0x0000, 0x9cfa, 0x9e83, 0x3cd9, 0x0000,\n+    0x0000, 0x0000, 0xa4ba, 0xe294, 0x3cba, 0x0000, 0x0000, 0x0000, 0xd7ec, 0x9afe,\n+    0x3c9a, 0x0000, 0x0000, 0x0000, 0xae80, 0x8fc6, 0x3c79, 0x0000, 0x0000, 0x0000,\n+    0x3304, 0x8560, 0x3c5c, 0x0000, 0x0000, 0x0000, 0x6d70, 0xdf8f, 0x3c3b, 0x0000,\n+    0x0000, 0x0000, 0x3ef0, 0xafc3, 0x3c1e, 0x0000, 0x0000, 0x0000, 0xd0d8, 0x826b,\n+    0x3bfe, 0x0000, 0x0000, 0x0000, 0x1c80, 0xed4f, 0x3bdd, 0x0000, 0x0000, 0x0000,\n+    0x730c, 0xb0af, 0x3bc1, 0x0000, 0x0000, 0x0000, 0x6660, 0xc219, 0x3ba2, 0x0000,\n+    0x0000, 0x0000, 0x940c, 0xabe2, 0x3b83, 0x0000, 0x0000, 0x0000, 0xdffc, 0x8408,\n+    0x3b64, 0x0000, 0x0000, 0x0000, 0x6b98, 0xc402, 0x3b45, 0x0000, 0x0000, 0x0000,\n+    0x1818, 0x9cc4, 0x3b26, 0x0000, 0x0000, 0x0000, 0x5390, 0xaab6, 0x3b05, 0x0000,\n+    0x0000, 0x0000, 0xb070, 0xd464, 0x3ae9, 0x0000, 0x0000, 0x0000, 0x231a, 0x9ef0,\n+    0x3aca, 0x0000, 0x0000, 0x0000, 0x0670, 0xd1f1, 0x3aaa, 0x0000, 0x0000, 0x0000,\n+    0x7738, 0xd9f3, 0x3a8a, 0x0000, 0x0000, 0x0000, 0xa834, 0x8092, 0x3a6c, 0x0000,\n+    0x0000, 0x0000, 0xb45c, 0xce23, 0x3a4d, 0x0000, 0x0000, 0x0000, 0x36e8, 0xb0e5,\n+    0x3a2d, 0x0000, 0x0000, 0x0000, 0xd156, 0xaf44, 0x3a10, 0x0000, 0x0000, 0x0000,\n+    0x9f52, 0x8c82, 0x39f1, 0x0000, 0x0000, 0x0000, 0x829c, 0xff83, 0x39d1, 0x0000,\n+    0x0000, 0x0000, 0x7d06, 0xefc6, 0x39b3, 0x0000, 0x0000, 0x0000, 0x93e0, 0xb0b7,\n+    0x3992, 0x0000, 0x0000, 0x0000, 0xedde, 0xc193, 0x3975, 0x0000, 0x0000, 0x0000,\n+    0xbbc0, 0xcf49, 0x3952, 0x0000, 0x0000, 0x0000, 0xbdf0, 0xd63c, 0x3937, 0x0000,\n+    0x0000, 0x0000, 0x1f34, 0x9f3a, 0x3918, 0x0000, 0x0000, 0x0000, 0x3f8e, 0xe579,\n+    0x38f9, 0x0000, 0x0000, 0x0000, 0x90c8, 0xc3f8, 0x38d9, 0x0000, 0x0000, 0x0000,\n+    0x48c0, 0xf8f8, 0x38b7, 0x0000, 0x0000, 0x0000, 0xed56, 0xafa6, 0x389c, 0x0000,\n+    0x0000, 0x0000, 0x8218, 0xb969, 0x387d, 0x0000, 0x0000, 0x0000, 0x1852, 0xec57,\n+    0x385e, 0x0000, 0x0000, 0x0000, 0x670c, 0xd674, 0x383e, 0x0000, 0x0000, 0x0000,\n+    0xad40, 0xc2c4, 0x3820, 0x0000, 0x0000, 0x0000, 0x2e80, 0xa696, 0x3801, 0x0000,\n+    0x0000, 0x0000, 0xd800, 0xc467, 0x37dc, 0x0000, 0x0000, 0x0000, 0x3c72, 0xc5ae,\n+    0x37c3, 0x0000, 0x0000, 0x0000, 0xb006, 0xac69, 0x37a4, 0x0000, 0x0000, 0x0000,\n+    0x34a0, 0x8cdf, 0x3782, 0x0000, 0x0000, 0x0000, 0x9ed2, 0xd25e, 0x3766, 0x0000,\n+    0x0000, 0x0000, 0x6fec, 0xaaaa, 0x3747, 0x0000, 0x0000, 0x0000, 0x6040, 0xfb5c,\n+    0x3726, 0x0000, 0x0000, 0x0000, 0x764c, 0xa3fc, 0x3708, 0x0000, 0x0000, 0x0000,\n+    0xb254, 0x954e, 0x36e9, 0x0000, 0x0000, 0x0000, 0x3e1c, 0xf5dc, 0x36ca, 0x0000,\n+    0x0000, 0x0000, 0x7b06, 0xc635, 0x36ac, 0x0000, 0x0000, 0x0000, 0xa8ba, 0xd738,\n+    0x368d, 0x0000, 0x0000, 0x0000, 0x06cc, 0xb24e, 0x366d, 0x0000, 0x0000, 0x0000,\n+    0x7108, 0xac76, 0x364f, 0x0000, 0x0000, 0x0000, 0x2324, 0xa7cb, 0x3630, 0x0000,\n+    0x0000, 0x0000, 0xac40, 0xef15, 0x360f, 0x0000, 0x0000, 0x0000, 0xae46, 0xd516,\n+    0x35f2, 0x0000, 0x0000, 0x0000, 0x615e, 0xe003, 0x35d3, 0x0000, 0x0000, 0x0000,\n+    0x0cf0, 0xefe7, 0x35b1, 0x0000, 0x0000, 0x0000, 0xfb50, 0xf98c, 0x3595, 0x0000,\n+    0x0000, 0x0000, 0x0abc, 0xf333, 0x3575, 0x0000, 0x0000, 0x0000, 0xdd60, 0xca3f,\n+    0x3555, 0x0000, 0x0000, 0x0000, 0x7eb6, 0xd87f, 0x3538, 0x0000, 0x0000, 0x0000,\n+    0x44f4, 0xb291, 0x3519, 0x0000, 0x0000, 0x0000, 0xff80, 0xc982, 0x34f6, 0x0000,\n+    0x0000, 0x0000, 0x9de0, 0xd9b8, 0x34db, 0x0000, 0x0000, 0x0000, 0xcd42, 0x9366,\n+    0x34bc, 0x0000, 0x0000, 0x0000, 0xbef0, 0xfaee, 0x349d, 0x0000, 0x0000, 0x0000,\n+    0xdac4, 0xb6f1, 0x347d, 0x0000, 0x0000, 0x0000, 0xf140, 0x94de, 0x345d, 0x0000,\n+    0x0000, 0x0000, 0xa218, 0x8b4b, 0x343e, 0x0000, 0x0000, 0x0000, 0x6380, 0xa135,\n+    0x341e, 0x0000, 0x0000, 0x0000, 0xb184, 0x8cb2, 0x3402, 0x0000, 0x0000, 0x0000,\n+    0x196e, 0xdc61, 0x33e3, 0x0000, 0x0000, 0x0000, 0x0c00, 0xde05, 0x33c4, 0x0000,\n+    0x0000, 0x0000, 0xef9a, 0xbd38, 0x33a5, 0x0000, 0x0000, 0x0000, 0xc1a0, 0xdf00,\n+    0x3385, 0x0000, 0x0000, 0x0000, 0x1090, 0x9973, 0x3365, 0x0000, 0x0000, 0x0000,\n+    0x4882, 0x8301, 0x3348, 0x0000, 0x0000, 0x0000, 0x7abe, 0xadc7, 0x3329, 0x0000,\n+    0x0000, 0x0000, 0x7cba, 0xec2b, 0x330a, 0x0000, 0x0000, 0x0000, 0xa520, 0x8f21,\n+    0x32e9, 0x0000, 0x0000, 0x0000, 0x710c, 0x8d36, 0x32cc, 0x0000, 0x0000, 0x0000,\n+    0x5212, 0xc6ed, 0x32ad, 0x0000, 0x0000, 0x0000, 0x7308, 0xfd76, 0x328d, 0x0000,\n+    0x0000, 0x0000, 0x5014, 0xd548, 0x326f, 0x0000, 0x0000, 0x0000, 0xd3f2, 0xb499,\n+    0x3250, 0x0000, 0x0000, 0x0000, 0x7f74, 0xa606, 0x3230, 0x0000, 0x0000, 0x0000,\n+    0xf0a8, 0xd720, 0x3212, 0x0000, 0x0000, 0x0000, 0x185c, 0xe20f, 0x31f2, 0x0000,\n+    0x0000, 0x0000, 0xa5a8, 0x8738, 0x31d4, 0x0000, 0x0000, 0x0000, 0xdd74, 0xcafb,\n+    0x31b4, 0x0000, 0x0000, 0x0000, 0x98b6, 0xbd8e, 0x3196, 0x0000, 0x0000, 0x0000,\n+    0xe9de, 0x977f, 0x3177, 0x0000, 0x0000, 0x0000, 0x67c0, 0x818d, 0x3158, 0x0000,\n+    0x0000, 0x0000, 0xe52a, 0x9322, 0x3139, 0x0000, 0x0000, 0x0000, 0xe568, 0x9b6c,\n+    0x3119, 0x0000, 0x0000, 0x0000, 0x2358, 0xaa0a, 0x30fa, 0x0000, 0x0000, 0x0000,\n+    0xe480, 0xe13b, 0x30d9, 0x0000, 0x0000, 0x0000, 0x3024, 0x90a1, 0x30bd, 0x0000,\n+    0x0000, 0x0000, 0x9620, 0xda30, 0x309d, 0x0000, 0x0000, 0x0000, 0x898a, 0xb388,\n+    0x307f, 0x0000, 0x0000, 0x0000, 0xb24c, 0xc891, 0x3060, 0x0000, 0x0000, 0x0000,\n+    0x8056, 0xf98b, 0x3041, 0x0000, 0x0000, 0x0000, 0x72a4, 0xa1ea, 0x3021, 0x0000,\n+    0x0000, 0x0000, 0x6af8, 0x9488, 0x3001, 0x0000, 0x0000, 0x0000, 0xe00c, 0xdfcb,\n+    0x2fe4, 0x0000, 0x0000, 0x0000, 0xeeec, 0xc941, 0x2fc4, 0x0000, 0x0000, 0x0000,\n+    0x53e0, 0xe70f, 0x2fa4, 0x0000, 0x0000, 0x0000, 0x8f60, 0x9c07, 0x2f85, 0x0000,\n+    0x0000, 0x0000, 0xb328, 0xc3e7, 0x2f68, 0x0000, 0x0000, 0x0000, 0x9404, 0xf8c7,\n+    0x2f48, 0x0000, 0x0000, 0x0000, 0x38e0, 0xc99f, 0x2f29, 0x0000, 0x0000, 0x0000,\n+    0x9778, 0xd984, 0x2f09, 0x0000, 0x0000, 0x0000, 0xe700, 0xd142, 0x2eea, 0x0000,\n+    0x0000, 0x0000, 0xd904, 0x9443, 0x2ecd, 0x0000, 0x0000, 0x0000, 0xd4ba, 0xae7e,\n+    0x2eae, 0x0000, 0x0000, 0x0000, 0x8e5e, 0x8524, 0x2e8f, 0x0000, 0x0000, 0x0000,\n+    0xb550, 0xc9ed, 0x2e6e, 0x0000, 0x0000, 0x0000, 0x53b8, 0x8648, 0x2e51, 0x0000,\n+    0x0000, 0x0000, 0xdae4, 0x87f9, 0x2e32, 0x0000, 0x0000, 0x0000, 0x2942, 0xd966,\n+    0x2e13, 0x0000, 0x0000, 0x0000, 0x4f28, 0xcf3c, 0x2df3, 0x0000, 0x0000, 0x0000,\n+    0xfa40, 0xc4ef, 0x2dd1, 0x0000, 0x0000, 0x0000, 0x4424, 0xbca7, 0x2db5, 0x0000,\n+    0x0000, 0x0000, 0x2e62, 0xcdc5, 0x2d97, 0x0000, 0x0000, 0x0000, 0xed88, 0x996b,\n+    0x2d78, 0x0000, 0x0000, 0x0000, 0x7c30, 0xd97d, 0x2d56, 0x0000, 0x0000, 0x0000,\n+    0xed26, 0xbf6e, 0x2d3a, 0x0000, 0x0000, 0x0000, 0x2918, 0x921b, 0x2d1a, 0x0000,\n+    0x0000, 0x0000, 0x4e24, 0xe84e, 0x2cfb, 0x0000, 0x0000, 0x0000, 0x6dc0, 0x92ec,\n+    0x2cdd, 0x0000, 0x0000, 0x0000, 0x4f2c, 0xacf8, 0x2cbd, 0x0000, 0x0000, 0x0000,\n+    0xc634, 0xf094, 0x2c9e, 0x0000, 0x0000, 0x0000, 0xdc70, 0xe5d3, 0x2c7e, 0x0000,\n+    0x0000, 0x0000, 0x2180, 0xa600, 0x2c5b, 0x0000, 0x0000, 0x0000, 0x8480, 0xd680,\n+    0x2c3c, 0x0000, 0x0000, 0x0000, 0x8b24, 0xd63b, 0x2c22, 0x0000, 0x0000, 0x0000,\n+    0x02e0, 0xaa47, 0x2c00, 0x0000, 0x0000, 0x0000, 0x9ad0, 0xee84, 0x2be3, 0x0000,\n+    0x0000, 0x0000, 0xf7dc, 0xf699, 0x2bc6, 0x0000, 0x0000, 0x0000, 0xddde, 0xe490,\n+    0x2ba7, 0x0000, 0x0000, 0x0000, 0x34a0, 0xb4fd, 0x2b85, 0x0000, 0x0000, 0x0000,\n+    0x91b4, 0x8ef6, 0x2b68, 0x0000, 0x0000, 0x0000, 0xa3e0, 0xa2a7, 0x2b47, 0x0000,\n+    0x0000, 0x0000, 0xcce4, 0x82b3, 0x2b2a, 0x0000, 0x0000, 0x0000, 0xe4be, 0x8207,\n+    0x2b0c, 0x0000, 0x0000, 0x0000, 0x1d92, 0xab43, 0x2aed, 0x0000, 0x0000, 0x0000,\n+    0xe818, 0xf9f6, 0x2acd, 0x0000, 0x0000, 0x0000, 0xff12, 0xba80, 0x2aaf, 0x0000,\n+    0x0000, 0x0000, 0x5254, 0x8529, 0x2a90, 0x0000, 0x0000, 0x0000, 0x1b88, 0xe032,\n+    0x2a71, 0x0000, 0x0000, 0x0000, 0x3248, 0xd86d, 0x2a50, 0x0000, 0x0000, 0x0000,\n+    0x3140, 0xc9d5, 0x2a2e, 0x0000, 0x0000, 0x0000, 0x14e6, 0xbd47, 0x2a14, 0x0000,\n+    0x0000, 0x0000, 0x5c10, 0xe544, 0x29f4, 0x0000, 0x0000, 0x0000, 0x9f50, 0x90b6,\n+    0x29d4, 0x0000, 0x0000, 0x0000, 0x9850, 0xab55, 0x29b6, 0x0000, 0x0000, 0x0000,\n+    0x2750, 0x9d07, 0x2998, 0x0000, 0x0000, 0x0000, 0x6700, 0x8bbb, 0x2973, 0x0000,\n+    0x0000, 0x0000, 0x5dba, 0xed31, 0x295a, 0x0000, 0x0000, 0x0000, 0x61dc, 0x85fe,\n+    0x293a, 0x0000, 0x0000, 0x0000, 0x9ba2, 0xd6b4, 0x291c, 0x0000, 0x0000, 0x0000,\n+    0x2d30, 0xe3a5, 0x28fb, 0x0000, 0x0000, 0x0000, 0x6630, 0xb566, 0x28dd, 0x0000,\n+    0x0000, 0x0000, 0x5ad4, 0xa829, 0x28bf, 0x0000, 0x0000, 0x0000, 0x89d8, 0xe290,\n+    0x28a0, 0x0000, 0x0000, 0x0000, 0x3916, 0xc428, 0x2881, 0x0000, 0x0000, 0x0000,\n+    0x0490, 0xbea4, 0x2860, 0x0000, 0x0000, 0x0000, 0xee06, 0x80ee, 0x2843, 0x0000,\n+    0x0000, 0x0000, 0xfc00, 0xf327, 0x2820, 0x0000, 0x0000, 0x0000, 0xea40, 0xa871,\n+    0x2800, 0x0000, 0x0000, 0x0000, 0x63d8, 0x9c26, 0x27e4, 0x0000, 0x0000, 0x0000,\n+    0x07ba, 0xc0c9, 0x27c7, 0x0000, 0x0000, 0x0000, 0x3fa2, 0x9797, 0x27a8, 0x0000,\n+    0x0000, 0x0000, 0x21c6, 0xfeca, 0x2789, 0x0000, 0x0000, 0x0000, 0xde40, 0x860d,\n+    0x2768, 0x0000, 0x0000, 0x0000, 0x9cc8, 0x98ce, 0x2749, 0x0000, 0x0000, 0x0000,\n+    0x3778, 0xa31c, 0x272a, 0x0000, 0x0000, 0x0000, 0xe778, 0xf6e2, 0x270b, 0x0000,\n+    0x0000, 0x0000, 0x59b8, 0xf841, 0x26ed, 0x0000, 0x0000, 0x0000, 0x02e0, 0xad04,\n+    0x26cd, 0x0000, 0x0000, 0x0000, 0x5a92, 0x9380, 0x26b0, 0x0000, 0x0000, 0x0000,\n+    0xc740, 0x8886, 0x268d, 0x0000, 0x0000, 0x0000, 0x0680, 0xfaf8, 0x266c, 0x0000,\n+    0x0000, 0x0000, 0xfb60, 0x897f, 0x2653, 0x0000, 0x0000, 0x0000, 0x8760, 0xf903,\n+    0x2634, 0x0000, 0x0000, 0x0000, 0xad2a, 0xc2c8, 0x2615, 0x0000, 0x0000, 0x0000,\n+    0x2d86, 0x8aef, 0x25f6, 0x0000, 0x0000, 0x0000, 0x1ef4, 0xe627, 0x25d6, 0x0000,\n+    0x0000, 0x0000, 0x09e4, 0x8020, 0x25b7, 0x0000, 0x0000, 0x0000, 0x7548, 0xd227,\n+    0x2598, 0x0000, 0x0000, 0x0000, 0x75dc, 0xfb5b, 0x2579, 0x0000, 0x0000, 0x0000,\n+    0xea84, 0xc8b6, 0x255a, 0x0000, 0x0000, 0x0000, 0xe4d0, 0x8145, 0x253b, 0x0000,\n+    0x0000, 0x0000, 0x3640, 0x9768, 0x251c, 0x0000, 0x0000, 0x0000, 0x246a, 0xccec,\n+    0x24fe, 0x0000, 0x0000, 0x0000, 0x51d0, 0xa075, 0x24dd, 0x0000, 0x0000, 0x0000,\n+    0x4638, 0xa385, 0x24bf, 0x0000, 0x0000, 0x0000, 0xd788, 0xd776, 0x24a1, 0x0000,\n+    0x0000, 0x0000, 0x1370, 0x8997, 0x2482, 0x0000, 0x0000, 0x0000, 0x1e88, 0x9b67,\n+    0x2462, 0x0000, 0x0000, 0x0000, 0x6c08, 0xd975, 0x2444, 0x0000, 0x0000, 0x0000,\n+    0xfdb0, 0xcfc0, 0x2422, 0x0000, 0x0000, 0x0000, 0x3100, 0xc026, 0x2406, 0x0000,\n+    0x0000, 0x0000, 0xc5b4, 0xae64, 0x23e6, 0x0000, 0x0000, 0x0000, 0x2280, 0xf687,\n+    0x23c3, 0x0000, 0x0000, 0x0000, 0x2de0, 0x9006, 0x23a9, 0x0000, 0x0000, 0x0000,\n+    0x24bc, 0xf631, 0x238a, 0x0000, 0x0000, 0x0000, 0xb8d4, 0xa975, 0x236b, 0x0000,\n+    0x0000, 0x0000, 0xd9a4, 0xb949, 0x234b, 0x0000, 0x0000, 0x0000, 0xb54e, 0xbd39,\n+    0x232d, 0x0000, 0x0000, 0x0000, 0x4aac, 0x9a52, 0x230e, 0x0000, 0x0000, 0x0000,\n+    0xbbbc, 0xd085, 0x22ef, 0x0000, 0x0000, 0x0000, 0xdf18, 0xc633, 0x22cf, 0x0000,\n+    0x0000, 0x0000, 0x16d0, 0xeca5, 0x22af, 0x0000, 0x0000, 0x0000, 0xf2a0, 0xdf6f,\n+    0x228e, 0x0000, 0x0000, 0x0000, 0x8c44, 0xe86b, 0x2272, 0x0000, 0x0000, 0x0000,\n+    0x35c0, 0xbbf4, 0x2253, 0x0000, 0x0000, 0x0000, 0x0c40, 0xdafb, 0x2230, 0x0000,\n+    0x0000, 0x0000, 0x92dc, 0x9935, 0x2216, 0x0000, 0x0000, 0x0000, 0x0ca0, 0xbda6,\n+    0x21f3, 0x0000, 0x0000, 0x0000, 0x5958, 0xa6fd, 0x21d6, 0x0000, 0x0000, 0x0000,\n+    0xa3dc, 0x9d7f, 0x21b9, 0x0000, 0x0000, 0x0000, 0x79dc, 0xfcb5, 0x2199, 0x0000,\n+    0x0000, 0x0000, 0xf264, 0xcebb, 0x217b, 0x0000, 0x0000, 0x0000, 0x0abe, 0x8308,\n+    0x215c, 0x0000, 0x0000, 0x0000, 0x30ae, 0xb463, 0x213d, 0x0000, 0x0000, 0x0000,\n+    0x6228, 0xb040, 0x211c, 0x0000, 0x0000, 0x0000, 0xc9b2, 0xf43b, 0x20ff, 0x0000,\n+    0x0000, 0x0000, 0x3d8e, 0xa4b3, 0x20e0, 0x0000, 0x0000, 0x0000, 0x84e6, 0x8dab,\n+    0x20c1, 0x0000, 0x0000, 0x0000, 0xa124, 0x9b74, 0x20a1, 0x0000, 0x0000, 0x0000,\n+    0xc276, 0xd497, 0x2083, 0x0000, 0x0000, 0x0000, 0x6354, 0xa466, 0x2063, 0x0000,\n+    0x0000, 0x0000, 0x8654, 0xaf0a, 0x2044, 0x0000, 0x0000, 0x0000, 0x1d20, 0xfa5c,\n+    0x2024, 0x0000, 0x0000, 0x0000, 0xbcd0, 0xf3f0, 0x2004, 0x0000, 0x0000, 0x0000,\n+    0xedf0, 0xf0b6, 0x1fe7, 0x0000, 0x0000, 0x0000, 0x45bc, 0x9182, 0x1fc9, 0x0000,\n+    0x0000, 0x0000, 0xe254, 0xdc85, 0x1faa, 0x0000, 0x0000, 0x0000, 0xb898, 0xe9b1,\n+    0x1f8a, 0x0000, 0x0000, 0x0000, 0x0ebe, 0xe6f0, 0x1f6c, 0x0000, 0x0000, 0x0000,\n+    0xa9b8, 0xf584, 0x1f4c, 0x0000, 0x0000, 0x0000, 0x12e8, 0xdf6b, 0x1f2e, 0x0000,\n+    0x0000, 0x0000, 0x9f9e, 0xcd55, 0x1f0f, 0x0000, 0x0000, 0x0000, 0x05a0, 0xec3a,\n+    0x1eef, 0x0000, 0x0000, 0x0000, 0xd8e0, 0x96f8, 0x1ed1, 0x0000, 0x0000, 0x0000,\n+    0x3bd4, 0xccc6, 0x1eb1, 0x0000, 0x0000, 0x0000, 0x4910, 0xb87b, 0x1e93, 0x0000,\n+    0x0000, 0x0000, 0xbefc, 0xd40b, 0x1e73, 0x0000, 0x0000, 0x0000, 0x317e, 0xa406,\n+    0x1e55, 0x0000, 0x0000, 0x0000, 0x6bb2, 0xc2b2, 0x1e36, 0x0000, 0x0000, 0x0000,\n+    0xb87e, 0xbb78, 0x1e17, 0x0000, 0x0000, 0x0000, 0xa03c, 0xdbbd, 0x1df7, 0x0000,\n+    0x0000, 0x0000, 0x5b6c, 0xe3c8, 0x1dd9, 0x0000, 0x0000, 0x0000, 0x8968, 0xca8e,\n+    0x1dba, 0x0000, 0x0000, 0x0000, 0xc024, 0xe6ab, 0x1d9a, 0x0000, 0x0000, 0x0000,\n+    0x4110, 0xd4eb, 0x1d7a, 0x0000, 0x0000, 0x0000, 0xa168, 0xbdb5, 0x1d5d, 0x0000,\n+    0x0000, 0x0000, 0x012e, 0xa5fa, 0x1d3e, 0x0000, 0x0000, 0x0000, 0x6838, 0x9c1f,\n+    0x1d1e, 0x0000, 0x0000, 0x0000, 0xa158, 0xaa76, 0x1d00, 0x0000, 0x0000, 0x0000,\n+    0x090a, 0xbd95, 0x1ce1, 0x0000, 0x0000, 0x0000, 0xf73e, 0x8b6d, 0x1cc2, 0x0000,\n+    0x0000, 0x0000, 0x5fda, 0xbcbf, 0x1ca3, 0x0000, 0x0000, 0x0000, 0xdbe8, 0xb89f,\n+    0x1c84, 0x0000, 0x0000, 0x0000, 0x6e4c, 0x96c7, 0x1c64, 0x0000, 0x0000, 0x0000,\n+    0x19c2, 0xf2a4, 0x1c46, 0x0000, 0x0000, 0x0000, 0xb800, 0xf855, 0x1c1e, 0x0000,\n+    0x0000, 0x0000, 0x87fc, 0x85ff, 0x1c08, 0x0000, 0x0000, 0x0000, 0x1418, 0x839f,\n+    0x1be9, 0x0000, 0x0000, 0x0000, 0x6186, 0xd9d8, 0x1bca, 0x0000, 0x0000, 0x0000,\n+    0xf500, 0xabaa, 0x1ba6, 0x0000, 0x0000, 0x0000, 0x7b36, 0xdafe, 0x1b8c, 0x0000,\n+    0x0000, 0x0000, 0xf394, 0xe6d8, 0x1b6c, 0x0000, 0x0000, 0x0000, 0x6efc, 0x9e55,\n+    0x1b4e, 0x0000, 0x0000, 0x0000, 0x5e10, 0xc523, 0x1b2e, 0x0000, 0x0000, 0x0000,\n+    0x8210, 0xb6f9, 0x1b0d, 0x0000, 0x0000, 0x0000, 0x9ab0, 0x96e3, 0x1af1, 0x0000,\n+    0x0000, 0x0000, 0x3864, 0x92e7, 0x1ad1, 0x0000, 0x0000, 0x0000, 0x9878, 0xdc65,\n+    0x1ab1, 0x0000, 0x0000, 0x0000, 0xfa20, 0xd6cb, 0x1a94, 0x0000, 0x0000, 0x0000,\n+    0x6c00, 0xa4e4, 0x1a70, 0x0000, 0x0000, 0x0000, 0xab40, 0xb41b, 0x1a53, 0x0000,\n+    0x0000, 0x0000, 0x43a4, 0x8ede, 0x1a37, 0x0000, 0x0000, 0x0000, 0x22e0, 0x9314,\n+    0x1a15, 0x0000, 0x0000, 0x0000, 0x6170, 0xb949, 0x19f8, 0x0000, 0x0000, 0x0000,\n+    0x6b00, 0xe056, 0x19d8, 0x0000, 0x0000, 0x0000, 0x9ba8, 0xa94c, 0x19b9, 0x0000,\n+    0x0000, 0x0000, 0xfaa0, 0xaa16, 0x199b, 0x0000, 0x0000, 0x0000, 0x899a, 0xf627,\n+    0x197d, 0x0000, 0x0000, 0x0000, 0x9f20, 0xfb70, 0x195d, 0x0000, 0x0000, 0x0000,\n+    0xa4b8, 0xc176, 0x193e, 0x0000, 0x0000, 0x0000, 0xb21c, 0x85c3, 0x1920, 0x0000,\n+    0x0000, 0x0000, 0x50d2, 0x9b19, 0x1901, 0x0000, 0x0000, 0x0000, 0xd4b0, 0xb708,\n+    0x18e0, 0x0000, 0x0000, 0x0000, 0xfb88, 0xf510, 0x18c1, 0x0000, 0x0000, 0x0000,\n+    0x31ec, 0xdc8d, 0x18a3, 0x0000, 0x0000, 0x0000, 0x3c00, 0xbff9, 0x1885, 0x0000,\n+    0x0000, 0x0000, 0x5020, 0xc30b, 0x1862, 0x0000, 0x0000, 0x0000, 0xd4f0, 0xda0c,\n+    0x1844, 0x0000, 0x0000, 0x0000, 0x20d2, 0x99a5, 0x1828, 0x0000, 0x0000, 0x0000,\n+    0x852e, 0xd159, 0x1809, 0x0000, 0x0000, 0x0000, 0x7cd8, 0x97a1, 0x17e9, 0x0000,\n+    0x0000, 0x0000, 0x423a, 0x997b, 0x17cb, 0x0000, 0x0000, 0x0000, 0xc1c0, 0xbe7d,\n+    0x17a8, 0x0000, 0x0000, 0x0000, 0xe8bc, 0xdcdd, 0x178d, 0x0000, 0x0000, 0x0000,\n+    0x8b28, 0xae06, 0x176e, 0x0000, 0x0000, 0x0000, 0x102e, 0xb8d4, 0x174f, 0x0000,\n+    0x0000, 0x0000, 0xaa00, 0xaa5c, 0x172f, 0x0000, 0x0000, 0x0000, 0x51f0, 0x9fc0,\n+    0x170e, 0x0000, 0x0000, 0x0000, 0xf858, 0xe181, 0x16f2, 0x0000, 0x0000, 0x0000,\n+    0x91a8, 0x8162, 0x16d3, 0x0000, 0x0000, 0x0000, 0x5f40, 0xcb6f, 0x16b1, 0x0000,\n+    0x0000, 0x0000, 0xbb50, 0xe55f, 0x1693, 0x0000, 0x0000, 0x0000, 0xacd2, 0xd895,\n+    0x1676, 0x0000, 0x0000, 0x0000, 0xef30, 0x97bf, 0x1654, 0x0000, 0x0000, 0x0000,\n+    0xf700, 0xb3d7, 0x1633, 0x0000, 0x0000, 0x0000, 0x3454, 0xa7b5, 0x1619, 0x0000,\n+    0x0000, 0x0000, 0x6b00, 0xa929, 0x15f6, 0x0000, 0x0000, 0x0000, 0x9f04, 0x89f7,\n+    0x15db, 0x0000, 0x0000, 0x0000, 0xad78, 0xd985, 0x15bc, 0x0000, 0x0000, 0x0000,\n+    0xa46a, 0xae3f, 0x159d, 0x0000, 0x0000, 0x0000, 0x63a0, 0xd0da, 0x157c, 0x0000,\n+    0x0000, 0x0000, 0x5e90, 0x817d, 0x155e, 0x0000, 0x0000, 0x0000, 0x1494, 0xb13f,\n+    0x1540, 0x0000, 0x0000, 0x0000, 0x0090, 0x9c40, 0x1521, 0x0000, 0x0000, 0x0000,\n+    0xdd70, 0xcc86, 0x1500, 0x0000, 0x0000, 0x0000, 0x64f8, 0xdb6f, 0x14e1, 0x0000,\n+    0x0000, 0x0000, 0xe22c, 0xac17, 0x14c3, 0x0000, 0x0000, 0x0000, 0x60e0, 0xa9ad,\n+    0x14a3, 0x0000, 0x0000, 0x0000, 0x4640, 0xd658, 0x1481, 0x0000, 0x0000, 0x0000,\n+    0x6490, 0xa181, 0x1467, 0x0000, 0x0000, 0x0000, 0x1df4, 0xaaa2, 0x1447, 0x0000,\n+    0x0000, 0x0000, 0xb94a, 0x8f61, 0x1429, 0x0000, 0x0000, 0x0000, 0x5198, 0x9d83,\n+    0x1409, 0x0000, 0x0000, 0x0000, 0x0f7a, 0xa818, 0x13eb, 0x0000, 0x0000, 0x0000,\n+    0xc45e, 0xc06c, 0x13cc, 0x0000, 0x0000, 0x0000, 0x4ec0, 0xfa29, 0x13a8, 0x0000,\n+    0x0000, 0x0000, 0x6418, 0x8cad, 0x138c, 0x0000, 0x0000, 0x0000, 0xbcc8, 0xe7d1,\n+    0x136f, 0x0000, 0x0000, 0x0000, 0xc934, 0xf9b0, 0x134f, 0x0000, 0x0000, 0x0000,\n+    0x6ce0, 0x98df, 0x1331, 0x0000, 0x0000, 0x0000, 0x3516, 0xe5e9, 0x1312, 0x0000,\n+    0x0000, 0x0000, 0xc6c0, 0xef8b, 0x12ef, 0x0000, 0x0000, 0x0000, 0xaf02, 0x913d,\n+    0x12d4, 0x0000, 0x0000, 0x0000, 0xd230, 0xe1d5, 0x12b5, 0x0000, 0x0000, 0x0000,\n+    0xfba8, 0xc232, 0x1295, 0x0000, 0x0000, 0x0000, 0x7ba4, 0xabeb, 0x1277, 0x0000,\n+    0x0000, 0x0000, 0x6e5c, 0xc692, 0x1258, 0x0000, 0x0000, 0x0000, 0x76a2, 0x9756,\n+    0x1239, 0x0000, 0x0000, 0x0000, 0xe180, 0xe423, 0x1214, 0x0000, 0x0000, 0x0000,\n+    0x8c3c, 0x90f8, 0x11fb, 0x0000, 0x0000, 0x0000, 0x9f3c, 0x9fd2, 0x11dc, 0x0000,\n+    0x0000, 0x0000, 0x53e0, 0xb73e, 0x11bd, 0x0000, 0x0000, 0x0000, 0x45be, 0x88d6,\n+    0x119e, 0x0000, 0x0000, 0x0000, 0x111a, 0x8bc0, 0x117f, 0x0000, 0x0000, 0x0000,\n+    0xe26a, 0xd7ff, 0x1160, 0x0000, 0x0000, 0x0000, 0xfb60, 0xdd8d, 0x113f, 0x0000,\n+    0x0000, 0x0000, 0x9370, 0xc108, 0x1120, 0x0000, 0x0000, 0x0000, 0x9654, 0x8baf,\n+    0x1103, 0x0000, 0x0000, 0x0000, 0xd6ec, 0xd6b9, 0x10e4, 0x0000, 0x0000, 0x0000,\n+    0x23e4, 0xd7b7, 0x10c4, 0x0000, 0x0000, 0x0000, 0x1aa6, 0xa847, 0x10a6, 0x0000,\n+    0x0000, 0x0000, 0xbee6, 0x9fef, 0x1087, 0x0000, 0x0000, 0x0000, 0x26d0, 0xa6eb,\n+    0x1066, 0x0000, 0x0000, 0x0000, 0x5b86, 0xa880, 0x1049, 0x0000, 0x0000, 0x0000,\n+    0x125c, 0xd971, 0x1029, 0x0000, 0x0000, 0x0000, 0x1f78, 0x9d18, 0x100a, 0x0000,\n+    0x0000, 0x0000, 0x0e84, 0xb15b, 0x0feb, 0x0000, 0x0000, 0x0000, 0xd0c0, 0xc150,\n+    0x0fcc, 0x0000, 0x0000, 0x0000, 0xa330, 0xc40c, 0x0fad, 0x0000, 0x0000, 0x0000,\n+    0x5202, 0xfc2c, 0x0f8f, 0x0000, 0x0000, 0x0000, 0x3f7c, 0xecf5, 0x0f6f, 0x0000,\n+    0x0000, 0x0000, 0xef44, 0xfdfd, 0x0f50, 0x0000, 0x0000, 0x0000, 0x3f6c, 0xab1b,\n+    0x0f31, 0x0000, 0x0000, 0x0000, 0xf658, 0x89ec, 0x0f11, 0x0000, 0x0000, 0x0000,\n+    0xbfc8, 0x9ba8, 0x0ef4, 0x0000, 0x0000, 0x0000, 0x3d40, 0xbe21, 0x0ed5, 0x0000,\n+    0x0000, 0x0000, 0xbbc4, 0xc70d, 0x0eb6, 0x0000, 0x0000, 0x0000, 0x5158, 0xdb16,\n+    0x0e96, 0x0000, 0x0000, 0x0000, 0xb5a8, 0xa8d8, 0x0e78, 0x0000, 0x0000, 0x0000,\n+    0xcccc, 0xb40e, 0x0e58, 0x0000, 0x0000, 0x0000, 0x448c, 0xcb62, 0x0e3a, 0x0000,\n+    0x0000, 0x0000, 0xf12a, 0x8aed, 0x0e1b, 0x0000, 0x0000, 0x0000, 0x79d0, 0xc59c,\n+    0x0dfb, 0x0000, 0x0000, 0x0000, 0x06b4, 0xcdc9, 0x0ddd, 0x0000, 0x0000, 0x0000,\n+    0xae70, 0xa979, 0x0dbe, 0x0000, 0x0000, 0x0000, 0x317c, 0xa8fb, 0x0d9e, 0x0000,\n+    0x0000, 0x0000, 0x5fe0, 0x8a50, 0x0d7d, 0x0000, 0x0000, 0x0000, 0x70b6, 0xfdfa,\n+    0x0d61, 0x0000, 0x0000, 0x0000, 0x1640, 0x9dc7, 0x0d41, 0x0000, 0x0000, 0x0000,\n+    0x9a9c, 0xdc50, 0x0d23, 0x0000, 0x0000, 0x0000, 0x4fcc, 0x9a9b, 0x0d04, 0x0000,\n+    0x0000, 0x0000, 0x7e48, 0x8f77, 0x0ce5, 0x0000, 0x0000, 0x0000, 0x84e4, 0xd4b9,\n+    0x0cc6, 0x0000, 0x0000, 0x0000, 0x84e0, 0xbd10, 0x0ca6, 0x0000, 0x0000, 0x0000,\n+    0x1b0a, 0xc8d9, 0x0c88, 0x0000, 0x0000, 0x0000, 0x6a48, 0xfc81, 0x0c68, 0x0000,\n+    0x0000, 0x0000, 0x070a, 0xbef6, 0x0c4a, 0x0000, 0x0000, 0x0000, 0x8a70, 0xf096,\n+    0x0c2b, 0x0000, 0x0000, 0x0000, 0xecc2, 0xc994, 0x0c0c, 0x0000, 0x0000, 0x0000,\n+    0x1540, 0x9537, 0x0bea, 0x0000, 0x0000, 0x0000, 0x1b02, 0xab5b, 0x0bce, 0x0000,\n+    0x0000, 0x0000, 0x5dc0, 0xb0c8, 0x0bad, 0x0000, 0x0000, 0x0000, 0xc928, 0xe034,\n+    0x0b8f, 0x0000, 0x0000, 0x0000, 0x2d12, 0xb4b0, 0x0b71, 0x0000, 0x0000, 0x0000,\n+    0x8fc2, 0xbb94, 0x0b52, 0x0000, 0x0000, 0x0000, 0xe236, 0xe22f, 0x0b33, 0x0000,\n+    0x0000, 0x0000, 0xb97c, 0xbe9e, 0x0b13, 0x0000, 0x0000, 0x0000, 0xe1a6, 0xe16d,\n+    0x0af5, 0x0000, 0x0000, 0x0000, 0xd330, 0xbaf0, 0x0ad6, 0x0000, 0x0000, 0x0000,\n+    0xc0bc, 0xbbd0, 0x0ab7, 0x0000, 0x0000, 0x0000, 0x8e66, 0xdd9b, 0x0a98, 0x0000,\n+    0x0000, 0x0000, 0xc95c, 0xf799, 0x0a79, 0x0000, 0x0000, 0x0000, 0xdac0, 0xbe4c,\n+    0x0a55, 0x0000, 0x0000, 0x0000, 0xafc0, 0xc378, 0x0a37, 0x0000, 0x0000, 0x0000,\n+    0xa880, 0xe341, 0x0a19, 0x0000, 0x0000, 0x0000, 0xc242, 0x81f6, 0x09fd, 0x0000,\n+    0x0000, 0x0000, 0x7470, 0xc777, 0x09de, 0x0000, 0x0000, 0x0000, 0x62bc, 0xb684,\n+    0x09be, 0x0000, 0x0000, 0x0000, 0x43ac, 0x8c58, 0x099f, 0x0000, 0x0000, 0x0000,\n+    0xcc3c, 0xf9ac, 0x0981, 0x0000, 0x0000, 0x0000, 0x1526, 0xb670, 0x0962, 0x0000,\n+    0x0000, 0x0000, 0xc9fe, 0xdf50, 0x0943, 0x0000, 0x0000, 0x0000, 0x6ae6, 0xc065,\n+    0x0924, 0x0000, 0x0000, 0x0000, 0xb114, 0xcf29, 0x0905, 0x0000, 0x0000, 0x0000,\n+    0xd388, 0x922a, 0x08e4, 0x0000, 0x0000, 0x0000, 0xcf54, 0xb926, 0x08c7, 0x0000,\n+    0x0000, 0x0000, 0x3826, 0xe855, 0x08a8, 0x0000, 0x0000, 0x0000, 0xe7c8, 0x829b,\n+    0x0888, 0x0000, 0x0000, 0x0000, 0x546c, 0xa903, 0x086a, 0x0000, 0x0000, 0x0000,\n+    0x8768, 0x99cc, 0x0849, 0x0000, 0x0000, 0x0000, 0x00ac, 0xf529, 0x082b, 0x0000,\n+    0x0000, 0x0000, 0x2658, 0x9f0b, 0x080c, 0x0000, 0x0000, 0x0000, 0xfe5c, 0x9e21,\n+    0x07ee, 0x0000, 0x0000, 0x0000, 0x6da2, 0x9910, 0x07cf, 0x0000, 0x0000, 0x0000,\n+    0x9220, 0xf9b3, 0x07b0, 0x0000, 0x0000, 0x0000, 0x3d90, 0xa541, 0x0791, 0x0000,\n+    0x0000, 0x0000, 0x6e4c, 0xe7cc, 0x0771, 0x0000, 0x0000, 0x0000, 0xa8fa, 0xe80a,\n+    0x0753, 0x0000, 0x0000, 0x0000, 0x4e14, 0xc3a7, 0x0734, 0x0000, 0x0000, 0x0000,\n+    0xf7e0, 0xbad9, 0x0712, 0x0000, 0x0000, 0x0000, 0xfea0, 0xeff2, 0x06f5, 0x0000,\n+    0x0000, 0x0000, 0xcef6, 0xbd48, 0x06d7, 0x0000, 0x0000, 0x0000, 0x7544, 0xf559,\n+    0x06b7, 0x0000, 0x0000, 0x0000, 0x2388, 0xf655, 0x0698, 0x0000, 0x0000, 0x0000,\n+    0xe900, 0xad56, 0x0676, 0x0000, 0x0000, 0x0000, 0x2cc0, 0x8437, 0x0659, 0x0000,\n+    0x0000, 0x0000, 0x3068, 0xc544, 0x063b, 0x0000, 0x0000, 0x0000, 0xdc70, 0xe73c,\n+    0x061b, 0x0000, 0x0000, 0x0000, 0xee50, 0x9d49, 0x05fc, 0x0000, 0x0000, 0x0000,\n+    0x93d2, 0x81f6, 0x05df, 0x0000, 0x0000, 0x0000, 0x941c, 0xadff, 0x05bf, 0x0000,\n+    0x0000, 0x0000, 0x2ce2, 0x8e45, 0x05a1, 0x0000, 0x0000, 0x0000, 0x4a60, 0x95fd,\n+    0x0581, 0x0000, 0x0000, 0x0000, 0x79f8, 0xb83a, 0x0563, 0x0000, 0x0000, 0x0000,\n+    0xcb58, 0xa1f5, 0x0543, 0x0000, 0x0000, 0x0000, 0x2a3a, 0xdc36, 0x0525, 0x0000,\n+    0x0000, 0x0000, 0x14ee, 0x890e, 0x0506, 0x0000, 0x0000, 0x0000, 0x8f20, 0xc432,\n+    0x04e3, 0x0000, 0x0000, 0x0000, 0x8440, 0xb21d, 0x04c6, 0x0000, 0x0000, 0x0000,\n+    0x5430, 0xf698, 0x04a7, 0x0000, 0x0000, 0x0000, 0x04ae, 0x8b20, 0x048a, 0x0000,\n+    0x0000, 0x0000, 0x04d0, 0xe872, 0x046b, 0x0000, 0x0000, 0x0000, 0xc78e, 0x8893,\n+    0x044c, 0x0000, 0x0000, 0x0000, 0x0f78, 0x9895, 0x042b, 0x0000, 0x0000, 0x0000,\n+    0x11d4, 0xdf2e, 0x040d, 0x0000, 0x0000, 0x0000, 0xe84c, 0x89d5, 0x03ef, 0x0000,\n+    0x0000, 0x0000, 0xf7be, 0x8a67, 0x03d0, 0x0000, 0x0000, 0x0000, 0x95d0, 0xc906,\n+    0x03b1, 0x0000, 0x0000, 0x0000, 0x64ce, 0xd96c, 0x0392, 0x0000, 0x0000, 0x0000,\n+    0x97ba, 0xa16f, 0x0373, 0x0000, 0x0000, 0x0000, 0x463c, 0xc51a, 0x0354, 0x0000,\n+    0x0000, 0x0000, 0xef0a, 0xe93e, 0x0335, 0x0000, 0x0000, 0x0000, 0x526a, 0xa466,\n+    0x0316, 0x0000, 0x0000, 0x0000, 0x4140, 0xa94d, 0x02f5, 0x0000, 0x0000, 0x0000,\n+    0xb4ec, 0xce68, 0x02d8, 0x0000, 0x0000, 0x0000, 0x4fa2, 0x8490, 0x02b9, 0x0000,\n+    0x0000, 0x0000, 0x4e60, 0xca98, 0x0298, 0x0000, 0x0000, 0x0000, 0x08dc, 0xe09c,\n+    0x027a, 0x0000, 0x0000, 0x0000, 0x2b90, 0xc7e3, 0x025c, 0x0000, 0x0000, 0x0000,\n+    0x5a7c, 0xf8ef, 0x023c, 0x0000, 0x0000, 0x0000, 0x5022, 0x9d58, 0x021e, 0x0000,\n+    0x0000, 0x0000, 0x553a, 0xe242, 0x01ff, 0x0000, 0x0000, 0x0000, 0x7e6e, 0xb54d,\n+    0x01e0, 0x0000, 0x0000, 0x0000, 0xd2d4, 0xa88c, 0x01c1, 0x0000, 0x0000, 0x0000,\n+    0x75b6, 0xfe6d, 0x01a2, 0x0000, 0x0000, 0x0000, 0x3bb2, 0xf04c, 0x0183, 0x0000,\n+    0x0000, 0x0000, 0xc2d0, 0xc046, 0x0163, 0x0000, 0x0000, 0x0000, 0x250c, 0xf9d6,\n+    0x0145, 0x0000, 0x0000, 0x0000, 0xb7b4, 0x8a0d, 0x0126, 0x0000, 0x0000, 0x0000,\n+    0x1a72, 0xe4f5, 0x0107, 0x0000, 0x0000, 0x0000, 0x825c, 0xa9b8, 0x00e8, 0x0000,\n+    0x0000, 0x0000, 0x6c90, 0xc9ad, 0x00c6, 0x0000, 0x0000, 0x0000, 0x4d00, 0xd1bb,\n+    0x00aa, 0x0000, 0x0000, 0x0000, 0xa4a0, 0xee01, 0x0087, 0x0000, 0x0000, 0x0000,\n+    0x89a8, 0xbe9f, 0x006b, 0x0000, 0x0000, 0x0000, 0x038e, 0xc80c, 0x004d, 0x0000,\n+    0x0000, 0x0000, 0xfe26, 0x8384, 0x002e, 0x0000, 0x0000, 0x0000, 0xcd90, 0xca57,\n+    0x000e, 0x0000\n+};\n+\n+void MacroAssembler::libm_reduce_pi04l(Register eax, Register ecx, Register edx, Register ebx, Register esi, Register edi, Register ebp, Register esp) {\n+  Label B1_1, B1_2, B1_3, B1_4, B1_5, B1_6, B1_7, B1_8, B1_9, B1_10, B1_11, B1_12;\n+  Label B1_13, B1_14, B1_15;\n+\n+  assert_different_registers(ebx, eax, ecx, edx, esi, edi, ebp, esp);\n+\n+  address zero_none  = (address)_zero_none;\n+  address _4onpi_d   = (address)__4onpi_d;\n+  address TWO_32H    = (address)_TWO_32H;\n+  address pi04_3d    = (address)_pi04_3d;\n+  address pi04_5d    = (address)_pi04_5d;\n+  address SCALE      = (address)_SCALE;\n+  address zeros      = (address)_zeros;\n+  address pi04_2d    = (address)_pi04_2d;\n+  address TWO_12H    = (address)_TWO_12H;\n+  address _4onpi_31l = (address)__4onpi_31l;\n+\n+  bind(B1_1);\n+  push(ebp);\n+  movl(ebp, esp);\n+  andl(esp, -16);\n+  push(esi);\n+  push(edi);\n+  push(ebx);\n+  subl(esp, 20);\n+  movzwl(ebx, Address(ebp, 16));\n+  andl(ebx, 32767);\n+  movl(eax, Address(ebp, 20));\n+  cmpl(ebx, 16413);\n+  movl(esi, Address(ebp, 24));\n+  movl(Address(esp, 4), eax);\n+  jcc(Assembler::greaterEqual, B1_8);\n+\n+  bind(B1_2);\n+  fld_x(Address(ebp, 8));\n+  fld_d(ExternalAddress(_4onpi_d));    \/\/0x6dc9c883UL, 0x3ff45f30UL\n+  fmul(1);\n+  fstp_x(Address(esp, 8));\n+  movzwl(ecx, Address(esp, 16));\n+  negl(ecx);\n+  addl(ecx, 30);\n+  movl(eax, Address(esp, 12));\n+  shrl(eax);\n+  cmpl(Address(esp, 4), 0);\n+  jcc(Assembler::notEqual, B1_4);\n+\n+  bind(B1_3);\n+  lea(ecx, Address(eax, 1));\n+  andl(ecx, -2);\n+  jmp(B1_5);\n+\n+  bind(B1_4);\n+  movl(ecx, eax);\n+  addl(eax, Address(esp, 4));\n+  movl(edx, eax);\n+  andl(edx, 1);\n+  addl(ecx, edx);\n+\n+  bind(B1_5);\n+  fld_d(ExternalAddress(TWO_32H));    \/\/0x00000000UL, 0x41f80000UL\n+  cmpl(ebx, 16400);\n+  movl(Address(esp, 0), ecx);\n+  fild_s(Address(esp, 0));\n+  jcc(Assembler::greaterEqual, B1_7);\n+\n+  bind(B1_6);\n+  fld_d(ExternalAddress(pi04_3d));    \/\/0x54442d00UL, 0x3fe921fbUL\n+  fmul(1);\n+  fsubp(3);\n+  fxch(1);\n+  fmul(2);\n+  fld_s(2);\n+  fadd(1);\n+  fsubrp(1);\n+  fld_s(0);\n+  fxch(1);\n+  fsuba(3);\n+  fld_d(ExternalAddress(8 + pi04_3d));    \/\/0x98cc5180UL, 0x3ce84698UL\n+  fmul(3);\n+  fsuba(2);\n+  fxch(1);\n+  fsub(2);\n+  fsubrp(1);\n+  faddp(3);\n+  fld_d(ExternalAddress(16 + pi04_3d));    \/\/0xcbb5bf6cUL, 0xb9dfc8f8UL\n+  fmulp(2);\n+  fld_s(1);\n+  fsubr(1);\n+  fsuba(1);\n+  fxch(2);\n+  fsubp(1);\n+  faddp(2);\n+  fxch(1);\n+  jmp(B1_15);\n+\n+  bind(B1_7);\n+  fld_d(ExternalAddress(pi04_5d));    \/\/0x54400000UL, 0x3fe921fbUL\n+  fmul(1);\n+  fsubp(3);\n+  fxch(1);\n+  fmul(2);\n+  fld_s(2);\n+  fadd(1);\n+  fsubrp(1);\n+  fld_s(0);\n+  fxch(1);\n+  fsuba(3);\n+  fld_d(ExternalAddress(8 + pi04_5d));    \/\/0x1a600000UL, 0x3dc0b461UL\n+  fmul(3);\n+  fsuba(2);\n+  fxch(1);\n+  fsub(2);\n+  fsubrp(1);\n+  faddp(3);\n+  fld_d(ExternalAddress(16 + pi04_5d));    \/\/0x2e000000UL, 0x3b93198aUL\n+  fmul(2);\n+  fld_s(0);\n+  fsubr(2);\n+  fsuba(2);\n+  fxch(1);\n+  fsubp(2);\n+  fxch(1);\n+  faddp(3);\n+  fld_d(ExternalAddress(24 + pi04_5d));    \/\/0x25200000UL, 0x396b839aUL\n+  fmul(2);\n+  fld_s(0);\n+  fsubr(2);\n+  fsuba(2);\n+  fxch(1);\n+  fsubp(2);\n+  fxch(1);\n+  faddp(3);\n+  fld_d(ExternalAddress(32 + pi04_5d));    \/\/0x533e63a0UL, 0x37027044UL\n+  fmulp(2);\n+  fld_s(1);\n+  fsubr(1);\n+  fsuba(1);\n+  fxch(2);\n+  fsubp(1);\n+  faddp(2);\n+  fxch(1);\n+  jmp(B1_15);\n+\n+  bind(B1_8);\n+  fld_x(Address(ebp, 8));\n+  addl(ebx, -16417);\n+  fmul_d(as_Address(ExternalAddress(SCALE)));    \/\/0x00000000UL, 0x32600000UL\n+  movl(eax, -2078209981);\n+  imull(ebx);\n+  addl(edx, ebx);\n+  movl(ecx, ebx);\n+  sarl(edx, 4);\n+  sarl(ecx, 31);\n+  subl(edx, ecx);\n+  movl(eax, edx);\n+  shll(eax, 5);\n+  fstp_x(Address(ebp, 8));\n+  fld_x(Address(ebp, 8));\n+  subl(eax, edx);\n+  movl(Address(ebp, 8), 0);\n+  subl(ebx, eax);\n+  fld_x(Address(ebp, 8));\n+  cmpl(ebx, 17);\n+  fsuba(1);\n+  jcc(Assembler::less, B1_10);\n+\n+  bind(B1_9);\n+  lea(eax, Address(noreg, edx, Address::times_8));\n+  lea(ecx, Address(eax, edx, Address::times_4));\n+  incl(edx);\n+  fld_x(Address(_4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n+  fmul(2);\n+  fld_x(Address(12 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n+  fmul(2);\n+  fld_s(0);\n+  fadd(2);\n+  fsuba(2);\n+  fxch(1);\n+  faddp(2);\n+  fld_s(1);\n+  fadd(1);\n+  fstp_x(Address(esp, 8));\n+  andl(Address(esp, 8), -16777216);\n+  fld_x(Address(esp, 8));\n+  fsubp(1);\n+  jmp(B1_11);\n+\n+  bind(B1_10);\n+  fld_d(ExternalAddress(zeros));    \/\/0x00000000UL, 0x00000000UL\n+  fld_s(0);\n+\n+  bind(B1_11);\n+  fld_s(0);\n+  lea(eax, Address(noreg, edx, Address::times_8));\n+  fld_s(3);\n+  lea(edx, Address(eax, edx, Address::times_4));\n+  fld_x(Address(_4onpi_31l, RelocationHolder::none).plus_disp(edx, Address::times_1));\n+  fmul(6);\n+  movl(Address(esp, 0), edx);\n+  fadda(2);\n+  fxch(2);\n+  fsuba(3);\n+  fxch(2);\n+  faddp(3);\n+  fxch(2);\n+  faddp(3);\n+  fld_x(Address(12 + _4onpi_31l, RelocationHolder::none).plus_disp(edx, Address::times_1));\n+  fmula(2);\n+  fld_s(2);\n+  fadd(2);\n+  fld_s(0);\n+  fxch(1);\n+  fsubra(3);\n+  fxch(3);\n+  fchs();\n+  faddp(4);\n+  fxch(3);\n+  faddp(4);\n+  fxch(2);\n+  fadd(3);\n+  fxch(2);\n+  fmul(5);\n+  fadda(2);\n+  fld_s(4);\n+  fld_x(Address(24 + _4onpi_31l, RelocationHolder::none).plus_disp(edx, Address::times_1));\n+  fmula(1);\n+  fxch(1);\n+  fadda(4);\n+  fxch(4);\n+  fstp_x(Address(esp, 8));\n+  movzwl(ebx, Address(esp, 16));\n+  andl(ebx, 32767);\n+  cmpl(ebx, 16415);\n+  jcc(Assembler::greaterEqual, B1_13);\n+\n+  bind(B1_12);\n+  negl(ebx);\n+  addl(ebx, 30);\n+  movl(ecx, ebx);\n+  movl(eax, Address(esp, 12));\n+  shrl(eax);\n+  shll(eax);\n+  movl(Address(esp, 12), eax);\n+  movl(Address(esp, 8), 0);\n+  shrl(eax);\n+  jmp(B1_14);\n+\n+  bind(B1_13);\n+  negl(ebx);\n+  addl(ebx, 30);\n+  movl(ecx, ebx);\n+  movl(edx, Address(esp, 8));\n+  shrl(edx);\n+  shll(edx);\n+  negl(ecx);\n+  movl(eax, Address(esp, 12));\n+  shll(eax);\n+  movl(ecx, ebx);\n+  movl(Address(esp, 8), edx);\n+  shrl(edx);\n+  orl(eax, edx);\n+\n+  bind(B1_14);\n+  fld_x(Address(esp, 8));\n+  addl(eax, Address(esp, 4));\n+  fsubp(3);\n+  fmul(6);\n+  fld_s(4);\n+  movl(edx, eax);\n+  andl(edx, 1);\n+  fadd(3);\n+  movl(ecx, Address(esp, 0));\n+  fsuba(3);\n+  fxch(3);\n+  faddp(5);\n+  fld_s(1);\n+  fxch(3);\n+  fadd_d(Address(zero_none, RelocationHolder::none).plus_disp(edx, Address::times_8));\n+  fadda(3);\n+  fsub(3);\n+  faddp(2);\n+  fxch(1);\n+  faddp(4);\n+  fld_s(2);\n+  fadd(2);\n+  fsuba(2);\n+  fxch(3);\n+  faddp(2);\n+  fxch(1);\n+  faddp(3);\n+  fld_s(0);\n+  fadd(2);\n+  fsuba(2);\n+  fxch(1);\n+  faddp(2);\n+  fxch(1);\n+  faddp(2);\n+  fld_s(2);\n+  fld_x(Address(36 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n+  fmula(1);\n+  fld_s(1);\n+  fadd(3);\n+  fsuba(3);\n+  fxch(2);\n+  faddp(3);\n+  fxch(2);\n+  faddp(3);\n+  fxch(1);\n+  fmul(4);\n+  fld_s(0);\n+  fadd(2);\n+  fsuba(2);\n+  fxch(1);\n+  faddp(2);\n+  fxch(1);\n+  faddp(2);\n+  fld_s(2);\n+  fld_x(Address(48 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n+  fmula(1);\n+  fld_s(1);\n+  fadd(3);\n+  fsuba(3);\n+  fxch(2);\n+  faddp(3);\n+  fxch(2);\n+  faddp(3);\n+  fld_s(3);\n+  fxch(2);\n+  fmul(5);\n+  fld_x(Address(60 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n+  fmula(3);\n+  fxch(3);\n+  faddp(1);\n+  fld_s(0);\n+  fadd(2);\n+  fsuba(2);\n+  fxch(1);\n+  faddp(2);\n+  fxch(1);\n+  faddp(3);\n+  fld_s(3);\n+  fxch(2);\n+  fmul(5);\n+  fld_x(Address(72 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n+  fmula(3);\n+  fxch(3);\n+  faddp(1);\n+  fld_s(0);\n+  fadd(2);\n+  fsuba(2);\n+  fxch(1);\n+  faddp(2);\n+  fxch(1);\n+  faddp(3);\n+  fxch(1);\n+  fmulp(4);\n+  fld_x(Address(84 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n+  fmulp(3);\n+  fxch(2);\n+  faddp(3);\n+  fld_s(2);\n+  fadd(2);\n+  fld_d(ExternalAddress(TWO_32H));    \/\/0x00000000UL, 0x41f80000UL\n+  fmul(1);\n+  fadda(1);\n+  fsubp(1);\n+  fsuba(2);\n+  fxch(3);\n+  faddp(2);\n+  faddp(1);\n+  fld_d(ExternalAddress(pi04_2d));    \/\/0x54400000UL, 0x3fe921fbUL\n+  fld_s(0);\n+  fmul(2);\n+  fxch(2);\n+  fadd(3);\n+  fxch(1);\n+  fmulp(3);\n+  fmul_d(as_Address(ExternalAddress(8 + pi04_2d)));    \/\/0x1a626331UL, 0x3dc0b461UL\n+  faddp(1);\n+\n+  bind(B1_15);\n+  fld_d(ExternalAddress(TWO_12H));    \/\/0x00000000UL, 0x40b80000UL\n+  fld_s(2);\n+  fadd(2);\n+  fmula(1);\n+  fstp_x(Address(esp, 8));\n+  fld_x(Address(esp, 8));\n+  fadd(1);\n+  fsubrp(1);\n+  fst_d(Address(esi, 0));\n+  fsubp(2);\n+  faddp(1);\n+  fstp_d(Address(esi, 8));\n+  addl(esp, 20);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+}\n+\n+\n+ATTRIBUTE_ALIGNED(16) jushort _SP[] =\n+{\n+    0xaaab, 0xaaaa, 0xaaaa, 0xaaaa, 0xbffc, 0x0000, 0x8887, 0x8888, 0x8888, 0x8888,\n+    0x3ff8, 0x0000, 0xc527, 0x0d00, 0x00d0, 0xd00d, 0xbff2, 0x0000, 0x45f6, 0xb616,\n+    0x1d2a, 0xb8ef, 0x3fec, 0x0000, 0x825b, 0x3997, 0x2b3f, 0xd732, 0xbfe5, 0x0000,\n+    0xbf33, 0x8bb4, 0x2fda, 0xb092, 0x3fde, 0x0000, 0x44a6, 0xed1a, 0x29ef, 0xd73e,\n+    0xbfd6, 0x0000, 0x8610, 0x307f, 0x62a1, 0xc921, 0x3fce, 0x0000\n+};\n+\n+ATTRIBUTE_ALIGNED(16) jushort _CP[] =\n+{\n+    0x0000, 0x0000, 0x0000, 0x8000, 0xbffe, 0x0000, 0xaaa5, 0xaaaa, 0xaaaa, 0xaaaa,\n+    0x3ffa, 0x0000, 0x9c2f, 0x0b60, 0x60b6, 0xb60b, 0xbff5, 0x0000, 0xf024, 0x0cac,\n+    0x00d0, 0xd00d, 0x3fef, 0x0000, 0x03fe, 0x3f65, 0x7dbb, 0x93f2, 0xbfe9, 0x0000,\n+    0xd84d, 0xadee, 0xc698, 0x8f76, 0x3fe2, 0x0000, 0xdaba, 0xfe79, 0xea36, 0xc9c9,\n+    0xbfda, 0x0000, 0x3ac6, 0x0ba0, 0x07ce, 0xd585, 0x3fd2, 0x0000\n+};\n+\n+void MacroAssembler::libm_sincos_huge(XMMRegister xmm0, XMMRegister xmm1, Register eax, Register ecx, Register edx, Register ebx, Register esi, Register edi, Register ebp, Register esp) {\n+  Label B1_1, B1_2, B1_3, B1_4, B1_5, B1_6, B1_7, B1_8, B1_9, B1_10, B1_11, B1_12;\n+  Label B1_13, B1_14, B1_15, B1_16, B1_17, B1_18, B1_19, B1_20, B1_21, B1_22, B1_23;\n+  Label B1_24, B1_25, B1_26, B1_27, B1_28, B1_29, B1_30, B1_31, B1_32, B1_33, B1_34;\n+  Label B1_35, B1_36, B1_37, B1_38, B1_39, B1_40, B1_41, B1_42, B1_43, B1_46;\n+\n+  assert_different_registers(ebx, eax, ecx, edx, esi, edi, ebp, esp);\n+\n+  address CP = (address)_CP;\n+  address SP = (address)_SP;\n+\n+  bind(B1_1);\n+  push(ebp);\n+  movl(ebp, esp);\n+  andl(esp, -64);\n+  push(esi);\n+  push(edi);\n+  push(ebx);\n+  subl(esp, 52);\n+  movl(eax, Address(ebp, 16));\n+  movl(edx, Address(ebp, 20));\n+  movl(Address(esp, 32), eax);\n+  movl(Address(esp, 36), edx);\n+\n+  bind(B1_2);\n+  fnstcw(Address(esp, 30));\n+\n+  bind(B1_3);\n+  movsd(xmm1, Address(ebp, 8));\n+  movl(esi, Address(ebp, 12));\n+  movl(eax, esi);\n+  andl(eax, 2147483647);\n+  andps(xmm1, ExternalAddress(L_2IL0FLOATPACKET_0));    \/\/0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n+  shrl(esi, 31);\n+  movl(Address(esp, 40), eax);\n+  cmpl(eax, 1104150528);\n+  movsd(Address(ebp, 8), xmm1);\n+  jcc(Assembler::aboveEqual, B1_11);\n+\n+  bind(B1_4);\n+  movsd(xmm0, ExternalAddress(PI4_INV));    \/\/0x6dc9c883UL, 0x3ff45f30UL\n+  mulsd(xmm0, xmm1);\n+  movzwl(edx, Address(esp, 30));\n+  movl(eax, edx);\n+  andl(eax, 768);\n+  movsd(Address(esp, 0), xmm0);\n+  cmpl(eax, 768);\n+  jcc(Assembler::equal, B1_42);\n+\n+  bind(B1_5);\n+  orl(edx, -64768);\n+  movw(Address(esp, 28), edx);\n+\n+  bind(B1_6);\n+  fldcw(Address(esp, 28));\n+\n+  bind(B1_7);\n+  movsd(xmm1, Address(ebp, 8));\n+  movl(ebx, 1);\n+\n+  bind(B1_8);\n+  movl(Address(esp, 12), ebx);\n+  movl(ebx, Address(esp, 4));\n+  movl(eax, ebx);\n+  movl(Address(esp, 8), esi);\n+  movl(esi, ebx);\n+  shrl(esi, 20);\n+  andl(eax, 1048575);\n+  movl(ecx, esi);\n+  orl(eax, 1048576);\n+  negl(ecx);\n+  movl(edx, eax);\n+  addl(ecx, 19);\n+  addl(esi, 13);\n+  movl(Address(esp, 24), ecx);\n+  shrl(edx);\n+  movl(ecx, esi);\n+  shll(eax);\n+  movl(ecx, Address(esp, 24));\n+  movl(esi, Address(esp, 0));\n+  shrl(esi);\n+  orl(eax, esi);\n+  cmpl(ebx, 1094713344);\n+  movsd(Address(esp, 16), xmm1);\n+  fld_d(Address(esp, 16));\n+  cmov32(Assembler::below, eax, edx);\n+  movl(esi, Address(esp, 8));\n+  lea(edx, Address(eax, 1));\n+  movl(ebx, edx);\n+  andl(ebx, -2);\n+  movl(Address(esp, 16), ebx);\n+  fild_s(Address(esp, 16));\n+  movl(ebx, Address(esp, 12));\n+  cmpl(Address(esp, 40), 1094713344);\n+  jcc(Assembler::aboveEqual, B1_10);\n+\n+  bind(B1_9);\n+  fld_d(ExternalAddress(PI4X3));    \/\/0x54443000UL, 0xbfe921fbUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X3 + 8));    \/\/0x3b39a000UL, 0x3d373dcbUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X3 + 16));    \/\/0xe0e68948UL, 0xba845c06UL\n+  fmulp(1);\n+  faddp(1);\n+  jmp(B1_17);\n+\n+  bind(B1_10);\n+  fld_d(ExternalAddress(PI4X4));    \/\/0x54400000UL, 0xbfe921fbUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X4 + 8));    \/\/0x1a600000UL, 0xbdc0b461UL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X4 + 16));    \/\/0x2e000000UL, 0xbb93198aUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X4 + 24));    \/\/0x252049c1UL, 0xb96b839aUL\n+  fmulp(1);\n+  faddp(1);\n+  jmp(B1_17);\n+\n+  bind(B1_11);\n+  movzwl(edx, Address(esp, 30));\n+  movl(eax, edx);\n+  andl(eax, 768);\n+  cmpl(eax, 768);\n+  jcc(Assembler::equal, B1_43);\n+  bind(B1_12);\n+  orl(edx, -64768);\n+  movw(Address(esp, 28), edx);\n+\n+  bind(B1_13);\n+  fldcw(Address(esp, 28));\n+\n+  bind(B1_14);\n+  movsd(xmm1, Address(ebp, 8));\n+  movl(ebx, 1);\n+\n+  bind(B1_15);\n+  movsd(Address(esp, 16), xmm1);\n+  fld_d(Address(esp, 16));\n+  addl(esp, -32);\n+  lea(eax, Address(esp, 32));\n+  fstp_x(Address(esp, 0));\n+  movl(Address(esp, 12), 0);\n+  movl(Address(esp, 16), eax);\n+  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_reduce_pi04l())));\n+\n+  bind(B1_46);\n+  addl(esp, 32);\n+\n+  bind(B1_16);\n+  fld_d(Address(esp, 0));\n+  lea(edx, Address(eax, 1));\n+  fld_d(Address(esp, 8));\n+  faddp(1);\n+\n+  bind(B1_17);\n+  movl(ecx, edx);\n+  addl(eax, 3);\n+  shrl(ecx, 2);\n+  andl(ecx, 1);\n+  shrl(eax, 2);\n+  xorl(esi, ecx);\n+  movl(ecx, Address(esp, 36));\n+  andl(eax, 1);\n+  andl(ecx, 3);\n+  cmpl(ecx, 3);\n+  jcc(Assembler::notEqual, B1_25);\n+\n+  bind(B1_18);\n+  fld_x(ExternalAddress(84 + SP));    \/\/0x8610, 0x307f, 0x62\n+  fld_s(1);\n+  fmul((2));\n+  testb(edx, 2);\n+  fmula((1));\n+  fld_x(ExternalAddress(72 + SP));    \/\/0x44a6, 0xed1a, 0x29\n+  faddp(2);\n+  fmula(1);\n+  fld_x(ExternalAddress(60 + SP));    \/\/0xbf33, 0x8bb4, 0x2f\n+  faddp(2);\n+  fmula(1);\n+  fld_x(ExternalAddress(48 + SP));    \/\/0x825b, 0x3997, 0x2b\n+  faddp(2);\n+  fmula(1);\n+  fld_x(ExternalAddress(36 + SP));    \/\/0x45f6, 0xb616, 0x1d\n+  faddp(2);\n+  fmula(1);\n+  fld_x(ExternalAddress(24 + SP));    \/\/0xc527, 0x0d00, 0x00\n+  faddp(2);\n+  fmula(1);\n+  fld_x(ExternalAddress(12 + SP));    \/\/0x8887, 0x8888, 0x88\n+  faddp(2);\n+  fmula(1);\n+  fld_x(ExternalAddress(SP));    \/\/0xaaab, 0xaaaa, 0xaa\n+  faddp(2);\n+  fmula(1);\n+  fld_x(ExternalAddress(84 + CP));    \/\/0x3ac6, 0x0ba0, 0x07\n+  fmul(1);\n+  fld_x(ExternalAddress(72 + CP));    \/\/0xdaba, 0xfe79, 0xea\n+  faddp(1);\n+  fmul(1);\n+  fld_x(ExternalAddress(62 + CP));    \/\/0xd84d, 0xadee, 0xc6\n+  faddp(1);\n+  fmul(1);\n+  fld_x(ExternalAddress(48 + CP));    \/\/0x03fe, 0x3f65, 0x7d\n+  faddp(1);\n+  fmul(1);\n+  fld_x(ExternalAddress(36 + CP));    \/\/0xf024, 0x0cac, 0x00\n+  faddp(1);\n+  fmul(1);\n+  fld_x(ExternalAddress(24 + CP));    \/\/0x9c2f, 0x0b60, 0x60\n+  faddp(1);\n+  fmul(1);\n+  fld_x(ExternalAddress(12 + CP));    \/\/0xaaa5, 0xaaaa, 0xaa\n+  faddp(1);\n+  fmul(1);\n+  fld_x(ExternalAddress(CP));    \/\/0x0000, 0x0000, 0x00\n+  faddp(1);\n+  fmulp(1);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(esi, Address::times_8));\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  jcc(Assembler::equal, B1_22);\n+\n+  bind(B1_19);\n+  fmulp(4);\n+  testl(ebx, ebx);\n+  fxch(2);\n+  fmul(3);\n+  movl(eax, Address(esp, 2));\n+  faddp(3);\n+  fxch(2);\n+  fstp_d(Address(eax, 0));\n+  fmula(1);\n+  faddp(1);\n+  fstp_d(Address(eax, 8));\n+  jcc(Assembler::equal, B1_21);\n+\n+  bind(B1_20);\n+  fldcw(Address(esp, 30));\n+\n+  bind(B1_21);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_22);\n+  fxch(1);\n+  fmulp(4);\n+  testl(ebx, ebx);\n+  fxch(2);\n+  fmul(3);\n+  movl(eax, Address(esp, 32));\n+  faddp(3);\n+  fxch(2);\n+  fstp_d(Address(eax, 8));\n+  fmula(1);\n+  faddp(1);\n+  fstp_d(Address(eax, 0));\n+  jcc(Assembler::equal, B1_24);\n+\n+  bind(B1_23);\n+  fldcw(Address(esp, 30));\n+\n+  bind(B1_24);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_25);\n+  testb(Address(esp, 36), 2);\n+  jcc(Assembler::equal, B1_33);\n+\n+  bind(B1_26);\n+  fld_s(0);\n+  testb(edx, 2);\n+  fmul(1);\n+  fld_s(0);\n+  fmul(1);\n+  jcc(Assembler::equal, B1_30);\n+\n+  bind(B1_27);\n+  fstp_d(2);\n+  fld_x(ExternalAddress(84 + CP));    \/\/0x3ac6, 0x0ba0, 0x07\n+  testl(ebx, ebx);\n+  fmul(2);\n+  fld_x(ExternalAddress(72 + CP));    \/\/0xdaba, 0xfe79, 0xea\n+  fmul(3);\n+  fld_x(ExternalAddress(60 + CP));    \/\/0xd84d, 0xadee, 0xc6\n+  movl(eax, Address(rsp, 32));\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(48 + CP));    \/\/0x03fe, 0x3f65, 0x7d\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(36 + CP));    \/\/0xf024, 0x0cac, 0x00\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(24 + CP));    \/\/0x9c2f, 0x0b60, 0x60\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(12 + CP));    \/\/0xaaa5, 0xaaaa, 0xaa\n+  faddp(2);\n+  fxch(1);\n+  fmulp(3);\n+  fld_x(ExternalAddress(CP));    \/\/0x0000, 0x0000, 0x00\n+  faddp(1);\n+  fmulp(1);\n+  faddp(1);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(rsi, Address::times_8));\n+  fmula(1);\n+  faddp(1);\n+  fstp_d(Address(eax, 8));\n+  jcc(Assembler::equal, B1_29);\n+\n+  bind(B1_28);\n+  fldcw(Address(esp, 30));\n+\n+  bind(B1_29);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_30);\n+  fld_x(ExternalAddress(84 + SP));    \/\/0x8610, 0x307f, 0x62\n+  testl(ebx, ebx);\n+  fmul(1);\n+  fld_x(ExternalAddress(72 + SP));    \/\/0x44a6, 0xed1a, 0x29\n+  fmul(2);\n+  fld_x(ExternalAddress(60 + SP));    \/\/0xbf33, 0x8bb4, 0x2f\n+  movl(eax, Address(rsp, 32));\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(48 + SP));    \/\/0x825b, 0x3997, 0x2b\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(36 + SP));    \/\/0x45f6, 0xb616, 0x1d\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(24 + SP));    \/\/0xc527, 0x0d00, 0x00\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(12 + SP));    \/\/0x8887, 0x8888, 0x88\n+  faddp(2);\n+  fxch(1);\n+  fmulp(2);\n+  fld_x(ExternalAddress(SP));    \/\/0xaaab, 0xaaaa, 0xaa\n+  faddp(1);\n+  fmulp(2);\n+  faddp(1);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(rsi, Address::times_8));\n+  fmulp(2);\n+  fmul(1);\n+  faddp(1);\n+  fstp_d(Address(eax, 8));\n+  jcc(Assembler::equal, B1_32);\n+\n+  bind(B1_31);\n+  fldcw(Address(esp, 30));\n+\n+  bind(B1_32);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_33);\n+  testb(Address(esp, 36), 1);\n+  jcc(Assembler::equal, B1_41);\n+\n+  bind(B1_34);\n+  fld_s(0);\n+  testb(edx, 2);\n+  fmul(1);\n+  fld_s(0);\n+  fmul(1);\n+  jcc(Assembler::equal, B1_38);\n+\n+  bind(B1_35);\n+  fld_x(ExternalAddress(84 + SP));    \/\/0x8610, 0x307f, 0x62\n+  testl(ebx, ebx);\n+  fmul(1);\n+  fld_x(ExternalAddress(72 + SP));    \/\/0x44a6, 0xed1a, 0x29\n+  fmul(2);\n+  fld_x(ExternalAddress(60 + SP));    \/\/0xbf33, 0x8bb4, 0x2f\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(48 + SP));    \/\/0x825b, 0x3997, 0x2b\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(36 + SP));    \/\/0x45f6, 0xb616, 0x1d\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(24 + SP));    \/\/0xc527, 0x0d00, 0x00\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(12 + SP));    \/\/0x8887, 0x8888, 0x88\n+  faddp(2);\n+  fxch(1);\n+  fmulp(2);\n+  fld_x(ExternalAddress(SP));    \/\/0xaaab, 0xaaaa, 0xaa\n+  faddp(1);\n+  fmulp(2);\n+  faddp(1);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmulp(2);\n+  fmul(1);\n+  movl(eax, Address(esp, 32));\n+  faddp(1);\n+  fstp_d(Address(eax, 0));\n+  jcc(Assembler::equal, B1_37);\n+\n+  bind(B1_36);\n+  fldcw(Address(esp, 30));\n+\n+  bind(B1_37);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_38);\n+  fstp_d(2);\n+  fld_x(ExternalAddress(84 + CP));    \/\/0x3ac6, 0x0ba0, 0x07\n+  testl(ebx, ebx);\n+  fmul(2);\n+  fld_x(ExternalAddress(72 + CP));    \/\/0xdaba, 0xfe79, 0xea\n+  fmul(3);\n+  fld_x(ExternalAddress(60 + CP));    \/\/0xd84d, 0xadee, 0xc6\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(48 + CP));    \/\/0x03fe, 0x3f65, 0x7d\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(36 + CP));    \/\/0xf024, 0x0cac, 0x00\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(24 + CP));    \/\/0x9c2f, 0x0b60, 0x60\n+  faddp(2);\n+  fxch(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(12 + CP));    \/\/0xaaa5, 0xaaaa, 0xaa\n+  faddp(2);\n+  fxch(1);\n+  fmulp(3);\n+  fld_x(ExternalAddress(CP));    \/\/0x0000, 0x0000, 0x00\n+  faddp(1);\n+  fmulp(1);\n+  faddp(1);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmula(1);\n+  movl(eax, Address(esp, 32));\n+  faddp(1);\n+  fstp_d(Address(eax, 0));\n+  jcc(Assembler::equal, B1_40);\n+\n+  bind(B1_39);\n+  fldcw(Address(esp, 30));\n+  bind(B1_40);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+  bind(B1_41);\n+  fstp_d(0);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+  bind(B1_42);\n+  xorl(ebx, ebx);\n+  jmp(B1_8);\n+  bind(B1_43);\n+  xorl(ebx, ebx);\n+  jmp(B1_15);\n+}\n+\n+ATTRIBUTE_ALIGNED(16) juint _static_const_table_sin[] =\n+{\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL, 0xbf73b92eUL,\n+    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n+    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL,\n+    0xc0000000UL, 0xbc626d19UL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL,\n+    0xbfa60beaUL, 0x2ed59f06UL, 0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL,\n+    0x00000000UL, 0x3ff00000UL, 0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL,\n+    0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL, 0x00000000UL, 0x3ff00000UL,\n+    0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL, 0x20000000UL,\n+    0x3c5e0d89UL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL, 0xbfc59267UL,\n+    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n+    0x3ff00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL,\n+    0x20000000UL, 0x3c68076aUL, 0x00000000UL, 0x3ff00000UL, 0x99fcef32UL,\n+    0x3fca8279UL, 0x667f3bcdUL, 0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL,\n+    0x00000000UL, 0x3fe00000UL, 0x94247758UL, 0x3fc133ccUL, 0x6b151741UL,\n+    0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL, 0x00000000UL, 0x3fe00000UL,\n+    0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL, 0xe0000000UL,\n+    0x3c39f630UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL, 0xbf9d4a2cUL,\n+    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n+    0x3fe00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0x3fed906bUL,\n+    0x20000000UL, 0x3c7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x76acf82dUL,\n+    0x3fa4a031UL, 0x56c62ddaUL, 0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL,\n+    0x00000000UL, 0x3fd00000UL, 0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL,\n+    0x3fef6297UL, 0x20000000UL, 0x3c756217UL, 0x00000000UL, 0x3fd00000UL,\n+    0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL, 0x3fefd88dUL, 0x40000000UL,\n+    0xbc887df6UL, 0x00000000UL, 0x3fc00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0x3fefd88dUL,\n+    0x40000000UL, 0xbc887df6UL, 0x00000000UL, 0xbfc00000UL, 0x0e5967d5UL,\n+    0x3fac1d1fUL, 0xcff75cb0UL, 0x3fef6297UL, 0x20000000UL, 0x3c756217UL,\n+    0x00000000UL, 0xbfd00000UL, 0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL,\n+    0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL, 0x00000000UL, 0xbfd00000UL,\n+    0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL, 0x3fed906bUL, 0x20000000UL,\n+    0x3c7457e6UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL, 0x3f9d4a2cUL,\n+    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n+    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL,\n+    0xe0000000UL, 0x3c39f630UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL,\n+    0xbfc133ccUL, 0x6b151741UL, 0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL,\n+    0x00000000UL, 0xbfe00000UL, 0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL,\n+    0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL, 0x00000000UL, 0xbfe00000UL,\n+    0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL, 0x20000000UL,\n+    0x3c68076aUL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL, 0x3fc59267UL,\n+    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n+    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL,\n+    0x20000000UL, 0x3c5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL,\n+    0x3fb37ca1UL, 0xa6aea963UL, 0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL,\n+    0x00000000UL, 0xbff00000UL, 0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL,\n+    0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL, 0x00000000UL, 0xbff00000UL,\n+    0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL, 0xc0000000UL,\n+    0xbc626d19UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL, 0x3f73b92eUL,\n+    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n+    0xbff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL,\n+    0x3f73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n+    0x00000000UL, 0xbff00000UL, 0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL,\n+    0xbfc8f8b8UL, 0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0xbff00000UL,\n+    0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL,\n+    0x3c75d28dUL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL, 0x3fb37ca1UL,\n+    0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL, 0x3c672cedUL, 0x00000000UL,\n+    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0xbfde2b5dUL,\n+    0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL,\n+    0x3fc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n+    0x00000000UL, 0xbff00000UL, 0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL,\n+    0xbfe44cf3UL, 0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0xbff00000UL,\n+    0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL,\n+    0x3c8bdd34UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL, 0xbfc133ccUL,\n+    0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL, 0x3c82c5e1UL, 0x00000000UL,\n+    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0xbfea9b66UL,\n+    0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL,\n+    0x3f9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n+    0x00000000UL, 0xbfe00000UL, 0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL,\n+    0xbfed906bUL, 0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0xbfe00000UL,\n+    0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL,\n+    0xbc8760b1UL, 0x00000000UL, 0xbfd00000UL, 0x0e5967d5UL, 0x3fac1d1fUL,\n+    0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL, 0xbc756217UL, 0x00000000UL,\n+    0xbfd00000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0xbfefd88dUL,\n+    0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0xbfc00000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL,\n+    0xbfefd88dUL, 0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0x3fc00000UL,\n+    0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL,\n+    0xbc756217UL, 0x00000000UL, 0x3fd00000UL, 0x76acf82dUL, 0x3fa4a031UL,\n+    0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL, 0xbc8760b1UL, 0x00000000UL,\n+    0x3fd00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0xbfed906bUL,\n+    0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL,\n+    0xbf9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n+    0x00000000UL, 0x3fe00000UL, 0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL,\n+    0xbfea9b66UL, 0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0x3fe00000UL,\n+    0x94247758UL, 0x3fc133ccUL, 0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL,\n+    0x3c82c5e1UL, 0x00000000UL, 0x3fe00000UL, 0x99fcef32UL, 0x3fca8279UL,\n+    0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL, 0x3c8bdd34UL, 0x00000000UL,\n+    0x3fe00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0xbfe44cf3UL,\n+    0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL,\n+    0xbfc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n+    0x00000000UL, 0x3ff00000UL, 0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL,\n+    0xbfde2b5dUL, 0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0x3ff00000UL,\n+    0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL,\n+    0x3c672cedUL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL, 0xbfa60beaUL,\n+    0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL, 0x3c75d28dUL, 0x00000000UL,\n+    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0xbfc8f8b8UL,\n+    0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL,\n+    0xbf73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n+    0x00000000UL, 0x3ff00000UL, 0x55555555UL, 0xbfc55555UL, 0x00000000UL,\n+    0xbfe00000UL, 0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL,\n+    0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL, 0xa556c734UL,\n+    0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL, 0x1a600000UL, 0x3d90b461UL,\n+    0x1a600000UL, 0x3d90b461UL, 0x54400000UL, 0x3fb921fbUL, 0x00000000UL,\n+    0x00000000UL, 0x2e037073UL, 0x3b63198aUL, 0x00000000UL, 0x00000000UL,\n+    0x6dc9c883UL, 0x40245f30UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x43380000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x43600000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x3c800000UL, 0x00000000UL,\n+    0x00000000UL, 0xffffffffUL, 0x3fefffffUL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x80000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x80000000UL, 0x00000000UL, 0x80000000UL, 0x00000000UL, 0x3fe00000UL,\n+    0x00000000UL, 0x3fe00000UL\n+};\n+\n+void MacroAssembler::fast_sin(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n+                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n+                              Register eax, Register ebx, Register edx) {\n+\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2;\n+\n+  assert_different_registers(eax, ebx, edx);\n+\n+  address static_const_table_sin = (address)_static_const_table_sin;\n+\n+  subl(rsp, 120);\n+  movl(Address(rsp, 56), ebx);\n+  lea(ebx, ExternalAddress(static_const_table_sin));\n+  movsd(xmm0, Address(rsp, 128));\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32767);\n+  subl(eax, 12336);\n+  cmpl(eax, 4293);\n+  jcc(Assembler::above, L_2TAG_PACKET_0_0_2);\n+  movsd(xmm1, Address(ebx, 2160));\n+  mulsd(xmm1, xmm0);\n+  movsd(xmm5, Address(ebx, 2272));\n+  movdqu(xmm4, Address(ebx, 2256));\n+  pand(xmm4, xmm0);\n+  por(xmm5, xmm4);\n+  movsd(xmm3, Address(ebx, 2128));\n+  movdqu(xmm2, Address(ebx, 2112));\n+  addpd(xmm1, xmm5);\n+  cvttsd2sil(edx, xmm1);\n+  cvtsi2sdl(xmm1, edx);\n+  mulsd(xmm3, xmm1);\n+  unpcklpd(xmm1, xmm1);\n+  addl(edx, 1865216);\n+  movdqu(xmm4, xmm0);\n+  andl(edx, 63);\n+  movdqu(xmm5, Address(ebx, 2096));\n+  lea(eax, Address(ebx, 0));\n+  shll(edx, 5);\n+  addl(eax, edx);\n+  mulpd(xmm2, xmm1);\n+  subsd(xmm0, xmm3);\n+  mulsd(xmm1, Address(ebx, 2144));\n+  subsd(xmm4, xmm3);\n+  movsd(xmm7, Address(eax, 8));\n+  unpcklpd(xmm0, xmm0);\n+  movapd(xmm3, xmm4);\n+  subsd(xmm4, xmm2);\n+  mulpd(xmm5, xmm0);\n+  subpd(xmm0, xmm2);\n+  movdqu(xmm6, Address(ebx, 2064));\n+  mulsd(xmm7, xmm4);\n+  subsd(xmm3, xmm4);\n+  mulpd(xmm5, xmm0);\n+  mulpd(xmm0, xmm0);\n+  subsd(xmm3, xmm2);\n+  movdqu(xmm2, Address(eax, 0));\n+  subsd(xmm1, xmm3);\n+  movsd(xmm3, Address(eax, 24));\n+  addsd(xmm2, xmm3);\n+  subsd(xmm7, xmm2);\n+  mulsd(xmm2, xmm4);\n+  mulpd(xmm6, xmm0);\n+  mulsd(xmm3, xmm4);\n+  mulpd(xmm2, xmm0);\n+  mulpd(xmm0, xmm0);\n+  addpd(xmm5, Address(ebx, 2080));\n+  mulsd(xmm4, Address(eax, 0));\n+  addpd(xmm6, Address(ebx, 2048));\n+  mulpd(xmm5, xmm0);\n+  movapd(xmm0, xmm3);\n+  addsd(xmm3, Address(eax, 8));\n+  mulpd(xmm1, xmm7);\n+  movapd(xmm7, xmm4);\n+  addsd(xmm4, xmm3);\n+  addpd(xmm6, xmm5);\n+  movsd(xmm5, Address(eax, 8));\n+  subsd(xmm5, xmm3);\n+  subsd(xmm3, xmm4);\n+  addsd(xmm1, Address(eax, 16));\n+  mulpd(xmm6, xmm2);\n+  addsd(xmm5, xmm0);\n+  addsd(xmm3, xmm7);\n+  addsd(xmm1, xmm5);\n+  addsd(xmm1, xmm3);\n+  addsd(xmm1, xmm6);\n+  unpckhpd(xmm6, xmm6);\n+  addsd(xmm1, xmm6);\n+  addsd(xmm4, xmm1);\n+  movsd(Address(rsp, 0), xmm4);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_0_0_2);\n+  jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n+  shrl(eax, 4);\n+  cmpl(eax, 268434685);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_3_0_2);\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_3_0_2);\n+  movsd(xmm3, Address(ebx, 2192));\n+  mulsd(xmm3, xmm0);\n+  subsd(xmm3, xmm0);\n+  mulsd(xmm3, Address(ebx, 2208));\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_2_0_2);\n+  movl(eax, Address(rsp, 132));\n+  andl(eax, 2146435072);\n+  cmpl(eax, 2146435072);\n+  jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n+  subl(rsp, 32);\n+  movsd(Address(rsp, 0), xmm0);\n+  lea(eax, Address(rsp, 40));\n+  movl(Address(rsp, 8), eax);\n+  movl(eax, 2);\n+  movl(Address(rsp, 12), eax);\n+  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_sin_cos_huge())));\n+  addl(rsp, 32);\n+  fld_d(Address(rsp, 16));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+  bind(L_2TAG_PACKET_4_0_2);\n+  fld_d(Address(rsp, 128));\n+  fmul_d(Address(ebx, 2240));\n+  bind(L_2TAG_PACKET_1_0_2);\n+  movl(ebx, Address(rsp, 56));\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_sin.cpp","additions":1743,"deletions":0,"binary":false,"changes":1743,"status":"added"},{"patch":"@@ -0,0 +1,1173 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"asm\/assembler.hpp\"\n+#include \"asm\/assembler.inline.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"runtime\/stubRoutines.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - TAN()\n+\/\/                     ---------------------\n+\/\/\n+\/\/ Polynomials coefficients and other constants.\n+\/\/\n+\/\/ Note that in this algorithm, there is a different polynomial for\n+\/\/ each breakpoint, so there are 32 sets of polynomial coefficients\n+\/\/ as well as 32 instances of the other constants.\n+\/\/\n+\/\/ The polynomial coefficients and constants are offset from the start\n+\/\/ of the main block as follows:\n+\/\/\n+\/\/   0:  c8 | c0\n+\/\/  16:  c9 | c1\n+\/\/  32: c10 | c2\n+\/\/  48: c11 | c3\n+\/\/  64: c12 | c4\n+\/\/  80: c13 | c5\n+\/\/  96: c14 | c6\n+\/\/ 112: c15 | c7\n+\/\/ 128: T_hi\n+\/\/ 136: T_lo\n+\/\/ 144: Sigma\n+\/\/ 152: T_hl\n+\/\/ 160: Tau\n+\/\/ 168: Mask\n+\/\/ 176: (end of block)\n+\/\/\n+\/\/ The total table size is therefore 5632 bytes.\n+\/\/\n+\/\/ Note that c0 and c1 are always zero. We could try storing\n+\/\/ other constants here, and just loading the low part of the\n+\/\/ SIMD register in these cases, after ensuring the high part\n+\/\/ is zero.\n+\/\/\n+\/\/ The higher terms of the polynomial are computed in the *low*\n+\/\/ part of the SIMD register. This is so we can overlap the\n+\/\/ multiplication by r^8 and the unpacking of the other part.\n+\/\/\n+\/\/ The constants are:\n+\/\/ T_hi + T_lo = accurate constant term in power series\n+\/\/ Sigma + T_hl = accurate coefficient of r in power series (Sigma=1 bit)\n+\/\/ Tau = multiplier for the reciprocal, always -1 or 0\n+\/\/\n+\/\/ The basic reconstruction formula using these constants is:\n+\/\/\n+\/\/ High = tau * recip_hi + t_hi\n+\/\/ Med = (sgn * r + t_hl * r)_hi\n+\/\/ Low = (sgn * r + t_hl * r)_lo +\n+\/\/       tau * recip_lo + T_lo + (T_hl + sigma) * c + pol\n+\/\/\n+\/\/ where pol = c0 + c1 * r + c2 * r^2 + ... + c15 * r^15\n+\/\/\n+\/\/ (c0 = c1 = 0, but using them keeps SIMD regularity)\n+\/\/\n+\/\/ We then do a compensated sum High + Med, add the low parts together\n+\/\/ and then do the final sum.\n+\/\/\n+\/\/ Here recip_hi + recip_lo is an accurate reciprocal of the remainder\n+\/\/ modulo pi\/2\n+\/\/\n+\/\/ Special cases:\n+\/\/  tan(NaN) = quiet NaN, and raise invalid exception\n+\/\/  tan(INF) = NaN and raise invalid exception\n+\/\/  tan(+\/-0) = +\/-0\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 32 bit code is at most SSE2 compliant\n+\n+ATTRIBUTE_ALIGNED(16) jushort _TP[] =\n+{\n+    0x4cd6, 0xaf6c, 0xc710, 0xc662, 0xbffd, 0x0000, 0x4b06, 0xb0ac, 0xd3b2, 0xcc2c,\n+    0x3ff9, 0x0000, 0x00e3, 0xc850, 0xaa28, 0x9533, 0xbff3, 0x0000, 0x2ff0, 0x466d,\n+    0x1a3b, 0xb266, 0x3fe5, 0x0000\n+};\n+\n+ATTRIBUTE_ALIGNED(16) jushort _TQ[] =\n+{\n+    0x399c, 0x8391, 0x154c, 0x94ca, 0xbfff, 0x0000, 0xb6a3, 0xc36a, 0x44e2, 0x8a2c,\n+    0x3ffe, 0x0000, 0xb70f, 0xd068, 0xa6ce, 0xe9dd, 0xbff9, 0x0000, 0x820f, 0x51ce,\n+    0x7d76, 0x9bff, 0x3ff3, 0x0000\n+};\n+\n+ATTRIBUTE_ALIGNED(16) jushort _GP[] =\n+{\n+    0xaaab, 0xaaaa, 0xaaaa, 0xaaaa, 0xbffd, 0x0000, 0xb62f, 0x0b60, 0x60b6, 0xb60b,\n+    0xbff9, 0x0000, 0xdfa7, 0x08aa, 0x55e0, 0x8ab3, 0xbff6, 0x0000, 0x85a0, 0xa819,\n+    0xbc99, 0xddeb, 0xbff2, 0x0000, 0x7065, 0x6a37, 0x795f, 0xb354, 0xbfef, 0x0000,\n+    0xa8f9, 0x83f1, 0x2ec8, 0x9140, 0xbfec, 0x0000, 0xf3ca, 0x8c96, 0x8e0b, 0xeb6d,\n+    0xbfe8, 0x0000, 0x355b, 0xd910, 0x67c9, 0xbed3, 0xbfe5, 0x0000, 0x286b, 0xb49e,\n+    0xb854, 0x9a98, 0xbfe2, 0x0000, 0x0871, 0x1a2f, 0x6477, 0xfcc4, 0xbfde, 0x0000,\n+    0xa559, 0x1da9, 0xaed2, 0xba76, 0xbfdb, 0x0000, 0x00a3, 0x7fea, 0x9bc3, 0xf205,\n+    0xbfd8, 0x0000\n+};\n+\n+void MacroAssembler::libm_tancot_huge(XMMRegister xmm0, XMMRegister xmm1, Register eax, Register ecx, Register edx, Register ebx, Register esi, Register edi, Register ebp, Register esp) {\n+  Label B1_1, B1_2, B1_3, B1_4, B1_5, B1_6, B1_7, B1_8, B1_9, B1_10, B1_11, B1_12;\n+  Label B1_13, B1_14, B1_15, B1_16, B1_17, B1_18, B1_19, B1_20, B1_21, B1_22, B1_23;\n+  Label B1_24, B1_25, B1_26, B1_27, B1_28, B1_29, B1_30, B1_31, B1_32, B1_33, B1_34;\n+  Label B1_35, B1_36, B1_37, B1_38, B1_39, B1_40, B1_43;\n+\n+  assert_different_registers(ebx, eax, ecx, edx, esi, edi, ebp, esp);\n+\n+  address TP = (address)_TP;\n+  address TQ = (address)_TQ;\n+  address GP = (address)_GP;\n+\n+  bind(B1_1);\n+  push(ebp);\n+  movl(ebp, esp);\n+  andl(esp, -64);\n+  push(esi);\n+  push(edi);\n+  push(ebx);\n+  subl(esp, 52);\n+  movl(eax, Address(ebp, 16));\n+  movl(ebx, Address(ebp, 20));\n+  movl(Address(esp, 40), eax);\n+\n+  bind(B1_2);\n+  fnstcw(Address(esp, 38));\n+\n+  bind(B1_3);\n+  movl(edx, Address(ebp, 12));\n+  movl(eax, edx);\n+  andl(eax, 2147483647);\n+  shrl(edx, 31);\n+  movl(Address(esp, 44), edx);\n+  cmpl(eax, 1104150528);\n+  jcc(Assembler::aboveEqual, B1_11);\n+\n+  bind(B1_4);\n+  movsd(xmm1, Address(ebp, 8));\n+  movzwl(ecx, Address(esp, 38));\n+  movl(edx, ecx);\n+  andl(edx, 768);\n+  andps(xmm1, ExternalAddress(L_2IL0FLOATPACKET_0));    \/\/0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n+  cmpl(edx, 768);\n+  movsd(xmm0, ExternalAddress(PI4_INV));    \/\/\/\/0x6dc9c883UL, 0x3ff45f30UL\n+  mulsd(xmm0, xmm1);\n+  movsd(Address(ebp, 8), xmm1);\n+  movsd(Address(esp, 0), xmm0);\n+  jcc(Assembler::equal, B1_39);\n+\n+  bind(B1_5);\n+  orl(ecx, -64768);\n+  movw(Address(esp, 36), ecx);\n+\n+  bind(B1_6);\n+  fldcw(Address(esp, 36));\n+\n+  bind(B1_7);\n+  movsd(xmm1, Address(ebp, 8));\n+  movl(edi, 1);\n+\n+  bind(B1_8);\n+  movl(Address(esp, 12), esi);\n+  movl(esi, Address(esp, 4));\n+  movl(edx, esi);\n+  movl(Address(esp, 24), edi);\n+  movl(edi, esi);\n+  shrl(edi, 20);\n+  andl(edx, 1048575);\n+  movl(ecx, edi);\n+  orl(edx, 1048576);\n+  negl(ecx);\n+  addl(edi, 13);\n+  movl(Address(esp, 8), ebx);\n+  addl(ecx, 19);\n+  movl(ebx, edx);\n+  movl(Address(esp, 28), ecx);\n+  shrl(ebx);\n+  movl(ecx, edi);\n+  shll(edx);\n+  movl(ecx, Address(esp, 28));\n+  movl(edi, Address(esp, 0));\n+  shrl(edi);\n+  orl(edx, edi);\n+  cmpl(esi, 1094713344);\n+  movsd(Address(esp, 16), xmm1);\n+  fld_d(Address(esp, 16));\n+  cmov32(Assembler::below, edx, ebx);\n+  movl(edi, Address(esp, 24));\n+  movl(esi, Address(esp, 12));\n+  lea(ebx, Address(edx, 1));\n+  andl(ebx, -2);\n+  movl(Address(esp, 16), ebx);\n+  cmpl(eax, 1094713344);\n+  fild_s(Address(esp, 16));\n+  movl(ebx, Address(esp, 8));\n+  jcc(Assembler::aboveEqual, B1_10);\n+\n+  bind(B1_9);\n+  fld_d(ExternalAddress(PI4X3));    \/\/0x54443000UL, 0xbfe921fbUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X3 + 8));    \/\/0x3b39a000UL, 0x3d373dcbUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X3 + 16));    \/\/0xe0e68948UL, 0xba845c06UL\n+  fmulp(1);\n+  faddp(1);\n+  jmp(B1_17);\n+\n+  bind(B1_10);\n+  fld_d(ExternalAddress(PI4X4));    \/\/0x54400000UL, 0xbfe921fbUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X4 + 8));    \/\/0x1a600000UL, 0xbdc0b461UL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X4 + 16));    \/\/0x2e000000UL, 0xbb93198aUL\n+  fmul(1);\n+  faddp(2);\n+  fld_d(ExternalAddress(PI4X4 + 24));    \/\/0x252049c1UL, 0xb96b839aUL\n+  fmulp(1);\n+  faddp(1);\n+  jmp(B1_17);\n+\n+  bind(B1_11);\n+  movzwl(edx, Address(esp, 38));\n+  movl(eax, edx);\n+  andl(eax, 768);\n+  cmpl(eax, 768);\n+  jcc(Assembler::equal, B1_40);\n+\n+  bind(B1_12);\n+  orl(edx, -64768);\n+  movw(Address(esp, 36), edx);\n+\n+  bind(B1_13);\n+  fldcw(Address(esp, 36));\n+\n+  bind(B1_14);\n+  movl(edi, 1);\n+\n+  bind(B1_15);\n+  movsd(xmm0, Address(ebp, 8));\n+  addl(esp, -32);\n+  andps(xmm0, ExternalAddress(L_2IL0FLOATPACKET_0));    \/\/0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n+  lea(eax, Address(esp, 32));\n+  movsd(Address(eax, 16), xmm0);\n+  fld_d(Address(eax, 16));\n+  fstp_x(Address(esp, 0));\n+  movl(Address(esp, 12), 0);\n+  movl(Address(esp, 16), eax);\n+  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_reduce_pi04l())));\n+\n+  bind(B1_43);\n+  movl(edx, eax);\n+  addl(esp, 32);\n+\n+  bind(B1_16);\n+  fld_d(Address(esp, 0));\n+  fld_d(Address(esp, 8));\n+  faddp(1);\n+\n+  bind(B1_17);\n+  movl(eax, ebx);\n+  andl(eax, 3);\n+  cmpl(eax, 3);\n+  jcc(Assembler::notEqual, B1_24);\n+\n+  bind(B1_18);\n+  fld_d(ExternalAddress(ONES));\n+  incl(edx);\n+  fdiv(1);\n+  testb(edx, 2);\n+  fstp_x(Address(esp, 24));\n+  fld_s(0);\n+  fmul(1);\n+  fld_s(0);\n+  fmul(1);\n+  fld_x(ExternalAddress(36 + TP));    \/\/0x2ff0, 0x466d, 0x1a\n+  fmul(2);\n+  fld_x(ExternalAddress(24 + TP));    \/\/0x00e3, 0xc850, 0xaa\n+  faddp(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(12 + TP));    \/\/0x4b06, 0xb0ac, 0xd3\n+  faddp(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(36 + TQ));    \/\/0x820f, 0x51ce, 0x7d\n+  fmul(3);\n+  fld_x(ExternalAddress(24 + TQ));    \/\/0xb70f, 0xd068, 0xa6\n+  faddp(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(12 + TQ));    \/\/0xb6a3, 0xc36a, 0x44\n+  faddp(1);\n+  fmul(3);\n+  fld_x(ExternalAddress(TQ));    \/\/0x399c, 0x8391, 0x15\n+  faddp(1);\n+  fld_x(ExternalAddress(TP));    \/\/0x4cd6, 0xaf6c, 0xc7\n+  faddp(2);\n+  fld_x(ExternalAddress(132 + GP));    \/\/0x00a3, 0x7fea, 0x9b\n+  fmul(3);\n+  fld_x(ExternalAddress(120 + GP));    \/\/0xa559, 0x1da9, 0xae\n+  fmul(4);\n+  fld_x(ExternalAddress(108 + GP));    \/\/0x0871, 0x1a2f, 0x64\n+  faddp(2);\n+  fxch(1);\n+  fmul(4);\n+  fld_x(ExternalAddress(96 + GP));    \/\/0x286b, 0xb49e, 0xb8\n+  faddp(2);\n+  fxch(1);\n+  fmul(4);\n+  fld_x(ExternalAddress(84 + GP));    \/\/0x355b, 0xd910, 0x67\n+  faddp(2);\n+  fxch(1);\n+  fmul(4);\n+  fld_x(ExternalAddress(72 + GP));    \/\/0x8c96, 0x8e0b, 0xeb\n+  faddp(2);\n+  fxch(1);\n+  fmul(4);\n+  fld_x(ExternalAddress(60 + GP));    \/\/0xa8f9, 0x83f1, 0x2e\n+  faddp(2);\n+  fxch(1);\n+  fmul(4);\n+  fld_x(ExternalAddress(48 + GP));    \/\/0x7065, 0x6a37, 0x79\n+  faddp(2);\n+  fxch(1);\n+  fmul(4);\n+  fld_x(ExternalAddress(36 + GP));    \/\/0x85a0, 0xa819, 0xbc\n+  faddp(2);\n+  fxch(1);\n+  fmul(4);\n+  fld_x(ExternalAddress(24 + GP));    \/\/0xdfa7, 0x08aa, 0x55\n+  faddp(2);\n+  fxch(1);\n+  fmulp(4);\n+  fld_x(ExternalAddress(12 + GP));    \/\/0xb62f, 0x0b60, 0x60\n+  faddp(1);\n+  fmul(4);\n+  fmul(5);\n+  fld_x(ExternalAddress(GP));    \/\/0xaaab, 0xaaaa, 0xaa\n+  faddp(4);\n+  fxch(3);\n+  fmul(5);\n+  faddp(3);\n+  jcc(Assembler::equal, B1_20);\n+\n+  bind(B1_19);\n+  fld_x(Address(esp, 24));\n+  fxch(1);\n+  fdivrp(2);\n+  fxch(1);\n+  fmulp(3);\n+  movl(eax, Address(esp, 44));\n+  xorl(eax, 1);\n+  fxch(2);\n+  fmul(3);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmula(2);\n+  fmula(3);\n+  fxch(3);\n+  faddp(2);\n+  fxch(1);\n+  fstp_d(Address(esp, 16));\n+  fmul(1);\n+  fxch(1);\n+  fmulp(2);\n+  movsd(xmm0, Address(esp, 16));\n+  faddp(1);\n+  fstp_d(Address(esp, 16));\n+  movsd(xmm1, Address(esp, 16));\n+  jmp(B1_21);\n+\n+  bind(B1_20);\n+  fdivrp(1);\n+  fmulp(2);\n+  fxch(1);\n+  fmul(2);\n+  movl(eax, Address(esp, 44));\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmula(1);\n+  fmula(3);\n+  fxch(3);\n+  faddp(1);\n+  fstp_d(Address(esp, 16));\n+  fmul(1);\n+  fld_x(Address(esp, 24));\n+  fmulp(2);\n+  movsd(xmm0, Address(esp, 16));\n+  faddp(1);\n+  fstp_d(Address(esp, 16));\n+  movsd(xmm1, Address(esp, 16));\n+\n+  bind(B1_21);\n+  testl(edi, edi);\n+  jcc(Assembler::equal, B1_23);\n+\n+  bind(B1_22);\n+  fldcw(Address(esp, 38));\n+\n+  bind(B1_23);\n+  movl(eax, Address(esp, 40));\n+  movsd(Address(eax, 0), xmm0);\n+  movsd(Address(eax, 8), xmm1);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_24);\n+  testb(ebx, 2);\n+  jcc(Assembler::equal, B1_31);\n+\n+  bind(B1_25);\n+  incl(edx);\n+  fld_s(0);\n+  fmul(1);\n+  testb(edx, 2);\n+  jcc(Assembler::equal, B1_27);\n+\n+  bind(B1_26);\n+  fld_d(ExternalAddress(ONES));\n+  fdiv(2);\n+  fld_s(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(132 + GP));    \/\/0x00a3, 0x7fea, 0x9b\n+  fmul(1);\n+  fld_x(ExternalAddress(120 + GP));    \/\/0xa559, 0x1da9, 0xae\n+  fmul(2);\n+  fld_x(ExternalAddress(108 + GP));    \/\/0x67c9, 0xbed3, 0xbf\n+  movl(eax, Address(esp, 44));\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  xorl(eax, 1);\n+  fld_x(ExternalAddress(96 + GP));    \/\/0x286b, 0xb49e, 0xb8\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(84 + GP));    \/\/0x355b, 0xd910, 0x67\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(72 + GP));    \/\/0xf3ca, 0x8c96, 0x8e\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(60 + GP));    \/\/0xa8f9, 0x83f1, 0x2e\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(48 + GP));    \/\/0x7065, 0x6a37, 0x79\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(36 + GP));    \/\/0x85a0, 0xa819, 0xbc\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(24 + GP));    \/\/0xdfa7, 0x08aa, 0x55\n+  faddp(2);\n+  fxch(1);\n+  fmulp(2);\n+  fld_x(ExternalAddress(12 + GP));    \/\/0xb62f, 0x0b60, 0x60\n+  faddp(1);\n+  fmulp(3);\n+  fld_x(ExternalAddress(GP));    \/\/0xaaab, 0xaaaa, 0xaa\n+  faddp(1);\n+  fmul(3);\n+  fxch(2);\n+  fmulp(3);\n+  fxch(1);\n+  faddp(2);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmula(2);\n+  fmulp(1);\n+  faddp(1);\n+  fstp_d(Address(esp, 16));\n+  movsd(xmm0, Address(esp, 16));\n+  jmp(B1_28);\n+\n+  bind(B1_27);\n+  fld_x(ExternalAddress(36 + TP));    \/\/0x2ff0, 0x466d, 0x1a\n+  fmul(1);\n+  fld_x(ExternalAddress(24 + TP));    \/\/0x00e3, 0xc850, 0xaa\n+  movl(eax, Address(esp, 44));\n+  faddp(1);\n+  fmul(1);\n+  fld_x(ExternalAddress(36 + TQ));    \/\/0x820f, 0x51ce, 0x7d\n+  fmul(2);\n+  fld_x(ExternalAddress(24 + TQ));    \/\/0xb70f, 0xd068, 0xa6\n+  faddp(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(12 + TQ));    \/\/0xb6a3, 0xc36a, 0x44\n+  faddp(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(TQ));    \/\/0x399c, 0x8391, 0x15\n+  faddp(1);\n+  fld_x(ExternalAddress(12 + TP));    \/\/0x4b06, 0xb0ac, 0xd3\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(TP));    \/\/0x4cd6, 0xaf6c, 0xc7\n+  faddp(1);\n+  fdivrp(1);\n+  fmulp(1);\n+  fmul(1);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmula(1);\n+  fmulp(2);\n+  faddp(1);\n+  fstp_d(Address(esp, 16));\n+  movsd(xmm0, Address(esp, 16));\n+\n+  bind(B1_28);\n+  testl(edi, edi);\n+  jcc(Assembler::equal, B1_30);\n+\n+  bind(B1_29);\n+  fldcw(Address(esp, 38));\n+\n+  bind(B1_30);\n+  movl(eax, Address(esp, 40));\n+  movsd(Address(eax, 0), xmm0);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  movl(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_31);\n+  testb(ebx, 1);\n+  jcc(Assembler::equal, B1_38);\n+\n+  bind(B1_32);\n+  incl(edx);\n+  fld_s(0);\n+  fmul(1);\n+  testb(edx, 2);\n+  jcc(Assembler::equal, B1_34);\n+\n+  bind(B1_33);\n+  fld_x(ExternalAddress(36 + TP));    \/\/0x2ff0, 0x466d, 0x1a\n+  fmul(1);\n+  fld_x(ExternalAddress(24 + TP));    \/\/0x00e3, 0xc850, 0xaa\n+  movl(eax, Address(esp, 44));\n+  faddp(1);\n+  fmul(1);\n+  xorl(eax, 1);\n+  fld_x(ExternalAddress(36 + TQ));    \/\/0x820f, 0x51ce, 0x7d\n+  fmul(2);\n+  fld_x(ExternalAddress(24 + TQ));    \/\/0xb70f, 0xd068, 0xa6\n+  faddp(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(12 + TQ));    \/\/0xb6a3, 0xc36a, 0x44\n+  faddp(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(TQ));    \/\/0x399c, 0x8391, 0x15\n+  faddp(1);\n+  fld_x(ExternalAddress(12 + TP));    \/\/0x4b06, 0xb0ac, 0xd3\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(TP));    \/\/0x4cd6, 0xaf6c, 0xc7\n+  faddp(1);\n+  fdivrp(1);\n+  fmulp(1);\n+  fmul(1);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmula(1);\n+  fmulp(2);\n+  faddp(1);\n+  fstp_d(Address(esp, 16));\n+  movsd(xmm0, Address(esp, 16));\n+  jmp(B1_35);\n+\n+  bind(B1_34);\n+  fld_d(ExternalAddress(ONES));\n+  fdiv(2);\n+  fld_s(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(132 + GP));    \/\/0x00a3, 0x7fea, 0x9b\n+  fmul(1);\n+  fld_x(ExternalAddress(120 + GP));    \/\/0xa559, 0x1da9, 0xae\n+  fmul(2);\n+  fld_x(ExternalAddress(108 + GP));    \/\/0x67c9, 0xbed3, 0xbf\n+  movl(eax, Address(esp, 44));\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(96 + GP));    \/\/0x286b, 0xb49e, 0xb8\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(84 + GP));    \/\/0x355b, 0xd910, 0x67\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(72 + GP));    \/\/0xf3ca, 0x8c96, 0x8e\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(60 + GP));    \/\/0xa8f9, 0x83f1, 0x2e\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(48 + GP));    \/\/0x7065, 0x6a37, 0x79\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(36 + GP));    \/\/0x85a0, 0xa819, 0xbc\n+  faddp(2);\n+  fxch(1);\n+  fmul(2);\n+  fld_x(ExternalAddress(24 + GP));    \/\/0xdfa7, 0x08aa, 0x55\n+  faddp(2);\n+  fxch(1);\n+  fmulp(2);\n+  fld_x(ExternalAddress(12 + GP));    \/\/0xb62f, 0x0b60, 0x60\n+  faddp(1);\n+  fmulp(3);\n+  fld_x(ExternalAddress(GP));    \/\/0xaaab, 0xaaaa, 0xaa\n+  faddp(1);\n+  fmul(3);\n+  fxch(2);\n+  fmulp(3);\n+  fxch(1);\n+  faddp(2);\n+  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n+  fmula(2);\n+  fmulp(1);\n+  faddp(1);\n+  fstp_d(Address(esp, 16));\n+  movsd(xmm0, Address(esp, 16));\n+\n+  bind(B1_35);\n+  testl(edi, edi);\n+  jcc(Assembler::equal, B1_37);\n+\n+  bind(B1_36);\n+  fldcw(Address(esp, 38));\n+\n+  bind(B1_37);\n+  movl(eax, Address(esp, 40));\n+  movsd(Address(eax, 8), xmm0);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  mov(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_38);\n+  fstp_d(0);\n+  addl(esp, 52);\n+  pop(ebx);\n+  pop(edi);\n+  pop(esi);\n+  mov(esp, ebp);\n+  pop(ebp);\n+  ret(0);\n+\n+  bind(B1_39);\n+  xorl(edi, edi);\n+  jmp(B1_8);\n+\n+  bind(B1_40);\n+  xorl(edi, edi);\n+  jmp(B1_15);\n+}\n+\n+ATTRIBUTE_ALIGNED(16) juint _static_const_table_tan[] =\n+{\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x882c10faUL,\n+    0x3f9664f4UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x55e6c23dUL, 0x3f8226e3UL, 0x55555555UL,\n+    0x3fd55555UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x0e157de0UL, 0x3f6d6d3dUL, 0x11111111UL, 0x3fc11111UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x452b75e3UL, 0x3f57da36UL,\n+    0x1ba1ba1cUL, 0x3faba1baUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n+    0x3f953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n+    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0x3f85ad63UL, 0xdc230b9bUL,\n+    0x3fb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n+    0x77bb08baUL, 0x3f757c85UL, 0xb6247521UL, 0x3fb1381eUL, 0x5922170cUL,\n+    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0x3f64e391UL,\n+    0x3e666320UL, 0x3fa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n+    0x3fafa8aeUL, 0x8c5b2da2UL, 0x3fb936bbUL, 0x4e88f7a5UL, 0x3c587d05UL,\n+    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x5a279ea3UL, 0x3faa3407UL,\n+    0x00000000UL, 0x00000000UL, 0x432d65faUL, 0x3fa70153UL, 0x00000000UL,\n+    0x00000000UL, 0x891a4602UL, 0x3f9d03efUL, 0xd62ca5f8UL, 0x3fca77d9UL,\n+    0xb35f4628UL, 0x3f97a265UL, 0x433258faUL, 0x3fd8cf51UL, 0xb58fd909UL,\n+    0x3f8f88e3UL, 0x01771ceaUL, 0x3fc2b154UL, 0xf3562f8eUL, 0x3f888f57UL,\n+    0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL, 0x3f80f44cUL, 0x214368e9UL,\n+    0x3fb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL, 0x172dbbf0UL, 0x3fb6cb8eUL,\n+    0xe0553158UL, 0x3fc975f5UL, 0x593fe814UL, 0x3c2ef5d3UL, 0x00000000UL,\n+    0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x9314533eUL, 0x3fbb8ec5UL, 0x00000000UL,\n+    0x00000000UL, 0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL,\n+    0xdcb427fdUL, 0x3fb13950UL, 0xd87ab0bbUL, 0x3fd5335eUL, 0xce0ae8a5UL,\n+    0x3fabb382UL, 0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0x3fa552f1UL,\n+    0x59f21a6dUL, 0x3fd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL,\n+    0x3fd0576cUL, 0x8f2c2950UL, 0x3f9a4898UL, 0xc0b3f22cUL, 0x3fc59462UL,\n+    0x1883a4b8UL, 0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL,\n+    0x3fd36a08UL, 0x1dce993dUL, 0xbc6d704dUL, 0x00000000UL, 0x3ff00000UL,\n+    0x2b82ab63UL, 0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x56f37042UL, 0x3fccfc56UL, 0x00000000UL, 0x00000000UL,\n+    0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL, 0x3d0e7c5dUL,\n+    0x3fc50533UL, 0x9bed9b2eUL, 0x3fdf0ed9UL, 0x5fe7c47cUL, 0x3fc1f250UL,\n+    0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0x3fbe5c71UL, 0x86362c20UL,\n+    0x3fda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL, 0x3fd911bdUL,\n+    0xb56658beUL, 0x3fb5e4c7UL, 0x93a2fd76UL, 0x3fd3c092UL, 0xda271794UL,\n+    0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL, 0x3fda8279UL,\n+    0xb68c1467UL, 0x3c708b2fUL, 0x00000000UL, 0x3ff00000UL, 0x980c4337UL,\n+    0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0xcc03e501UL, 0x3fdff10fUL, 0x00000000UL, 0x00000000UL, 0x44a4e845UL,\n+    0x3fddb63bUL, 0x00000000UL, 0x00000000UL, 0x3768ad9fUL, 0x3fdb72a4UL,\n+    0x3dd01ccaUL, 0x3fe5fdb9UL, 0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL,\n+    0x3fe977f9UL, 0xd013b3abUL, 0x3fd78ca3UL, 0xbf0bf914UL, 0x3fe4f192UL,\n+    0x4d53e730UL, 0x3fd5d060UL, 0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL,\n+    0x3fd4322aUL, 0x5936a835UL, 0x3fe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL,\n+    0xef478605UL, 0x3fe1659eUL, 0x190834ecUL, 0x3fe11ab7UL, 0xcdb625eaUL,\n+    0xbc8e564bUL, 0x00000000UL, 0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n+    0x3ff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n+    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0x3ff3972eUL, 0xe93463bdUL,\n+    0x3feeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n+    0xa04e8ea3UL, 0x3ff4541aUL, 0x386accd3UL, 0x3ff1369eUL, 0x222a66ddUL,\n+    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0x3ff5178fUL,\n+    0xddaa0031UL, 0x3ff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n+    0x3ff29311UL, 0x2ab7f990UL, 0x3fe561b8UL, 0x209c7df1UL, 0x3c87a8c5UL,\n+    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc7ab4d5aUL, 0x40085e24UL,\n+    0x00000000UL, 0x00000000UL, 0xe93ea75dUL, 0x400b963dUL, 0x00000000UL,\n+    0x00000000UL, 0x94a7f25aUL, 0x400f37e2UL, 0x4b6261cbUL, 0x3ff5f984UL,\n+    0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL, 0x3ffaf5a5UL, 0x7f2ce8e3UL,\n+    0x4013fe8bUL, 0xfe8e54faUL, 0x3ffd7334UL, 0x670d618dUL, 0x4016a10cUL,\n+    0x4db97058UL, 0x4000e012UL, 0x24df44ddUL, 0x40199c5fUL, 0x697d6eceUL,\n+    0x4003006eUL, 0x83298b82UL, 0x401cfc4dUL, 0x19d490d6UL, 0x40058c19UL,\n+    0x2ae42850UL, 0x3fea4300UL, 0x118e20e6UL, 0xbc7a6db8UL, 0x00000000UL,\n+    0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x65965966UL, 0x40219659UL, 0x00000000UL,\n+    0x00000000UL, 0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL,\n+    0x83cd3723UL, 0x402c8342UL, 0x00000000UL, 0x40000000UL, 0x55e6c23dUL,\n+    0x403226e3UL, 0x55555555UL, 0x40055555UL, 0x34451939UL, 0x40371c96UL,\n+    0xaaaaaaabUL, 0x400aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL,\n+    0x40111111UL, 0xa738201fUL, 0x4042bbceUL, 0x05b05b06UL, 0x4015b05bUL,\n+    0x452b75e3UL, 0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x4f48b8d3UL, 0xbf33eaf9UL, 0x00000000UL, 0x00000000UL,\n+    0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL, 0xd0258911UL,\n+    0xbf0abaf3UL, 0x23e49fe9UL, 0xbfab5a8cUL, 0x2d53222eUL, 0x3ef60d15UL,\n+    0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0xbee1d3b5UL, 0xdbf93b8eUL,\n+    0xbf84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL, 0x3f743924UL,\n+    0x794a8297UL, 0xbeb7b7b9UL, 0xe015f797UL, 0xbf5d41f5UL, 0xe41a4a56UL,\n+    0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL, 0xbfce49ceUL,\n+    0x8c743719UL, 0x3d1eb860UL, 0x00000000UL, 0x00000000UL, 0x1b4863cfUL,\n+    0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n+    0x535ad890UL, 0xbf2b9320UL, 0x00000000UL, 0x00000000UL, 0x018fdf1fUL,\n+    0x3f16d61dUL, 0x00000000UL, 0x00000000UL, 0x0359f1beUL, 0xbf0139e4UL,\n+    0xa4317c6dUL, 0xbfa67e17UL, 0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL,\n+    0x3f9f455bUL, 0x51ccf238UL, 0xbed55317UL, 0xf437b9acUL, 0xbf804beeUL,\n+    0xc791a2b5UL, 0x3ec0e993UL, 0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL,\n+    0xbeaa48a2UL, 0x0a268358UL, 0xbf55a443UL, 0xdfd978e4UL, 0x3e94b61fUL,\n+    0xd7767a58UL, 0x3f431806UL, 0x2aea0000UL, 0xbfc9bbe8UL, 0x7723ea61UL,\n+    0xbd3a2369UL, 0x00000000UL, 0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n+    0xbf231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n+    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0xbef66191UL, 0x848a46c6UL,\n+    0xbfa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n+    0xfdd299efUL, 0xbec9dd1aUL, 0x3f8dbaafUL, 0xbf793363UL, 0x309fc6eaUL,\n+    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0xbe9dae11UL,\n+    0x3e5c67b3UL, 0xbf4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n+    0x3f3d1eb1UL, 0x29cfc000UL, 0xbfc549ceUL, 0xbf159358UL, 0xbd397b33UL,\n+    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x7d98a556UL, 0xbf1a3958UL,\n+    0x00000000UL, 0x00000000UL, 0x9d88dc01UL, 0x3f0704c2UL, 0x00000000UL,\n+    0x00000000UL, 0x73742a2bUL, 0xbeed054aUL, 0x58844587UL, 0xbf9c2a13UL,\n+    0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL, 0x3f9a48f4UL, 0xa8dc9888UL,\n+    0xbebf8939UL, 0xaad4b5b8UL, 0xbf72f746UL, 0x9102efa1UL, 0x3ea88f82UL,\n+    0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL, 0xbe90f456UL, 0x741fb4edUL,\n+    0xbf46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL, 0xca89ff3fUL, 0x3f36db70UL,\n+    0xa8a2a000UL, 0xbfc0ee13UL, 0x3da24be1UL, 0xbd338b9fUL, 0x00000000UL,\n+    0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0xfffffff8UL, 0x1a154b97UL, 0xbf116b01UL, 0x00000000UL,\n+    0x00000000UL, 0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL,\n+    0xb93820c8UL, 0xbee264d4UL, 0xbb6cbb18UL, 0xbf94ab8cUL, 0x888d4d92UL,\n+    0x3ed0568bUL, 0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0xbeb2f950UL,\n+    0x22cf9f74UL, 0xbf6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL,\n+    0x3f64aad7UL, 0x637b73afUL, 0xbe83487cUL, 0xe522591aUL, 0xbf3fc092UL,\n+    0xa158e8bcUL, 0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL,\n+    0xbfb9477fUL, 0xc2c2d2bcUL, 0xbd135ef9UL, 0x00000000UL, 0x00000000UL,\n+    0xf2fdb123UL, 0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n+    0xfffffff8UL, 0xc41acb64UL, 0xbf05448dUL, 0x00000000UL, 0x00000000UL,\n+    0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL, 0x9e42962dUL,\n+    0xbed5aea5UL, 0x2579f8efUL, 0xbf8b2398UL, 0x288a1ed9UL, 0x3ec81441UL,\n+    0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0xbea57cd3UL, 0x5766336fUL,\n+    0xbf617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL, 0x3f62c646UL,\n+    0x6b8fb29cUL, 0xbe74e3a3UL, 0xdc4c0409UL, 0xbf33f952UL, 0x9bffe365UL,\n+    0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL, 0xbfb0cc62UL,\n+    0x016b907fUL, 0xbd119cbcUL, 0x00000000UL, 0x00000000UL, 0xe6b9d8faUL,\n+    0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n+    0x5daf22a6UL, 0xbef429d7UL, 0x00000000UL, 0x00000000UL, 0x06bca545UL,\n+    0x3ef7a27dUL, 0x00000000UL, 0x00000000UL, 0x7211c19aUL, 0xbec41c3eUL,\n+    0x956ed53eUL, 0xbf7ae3f4UL, 0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL,\n+    0x3f96f713UL, 0x36661e6cUL, 0xbe936e09UL, 0x506f9381UL, 0xbf5122e8UL,\n+    0xcb6dd43fUL, 0x3e9041b9UL, 0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL,\n+    0xbe625a8aUL, 0xe5a0e9dcUL, 0xbf23499dUL, 0x110384ddUL, 0x3e5b1c2cUL,\n+    0x68d43db6UL, 0x3f2cb899UL, 0x6ecac000UL, 0xbfa0c414UL, 0xcd7dd58cUL,\n+    0x3d13500fUL, 0x00000000UL, 0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2bf70ebeUL, 0x3ef66a8fUL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0xd644267fUL, 0x3ec22805UL, 0x16c16c17UL, 0x3f96c16cUL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc4e09162UL,\n+    0x3e8d6db2UL, 0xbc011567UL, 0x3f61566aUL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x1f79955cUL, 0x3e57da4eUL, 0x9334ef0bUL,\n+    0x3f2bbd77UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x55555555UL, 0x3fd55555UL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x5daf22a6UL, 0x3ef429d7UL,\n+    0x00000000UL, 0x00000000UL, 0x06bca545UL, 0x3ef7a27dUL, 0x00000000UL,\n+    0x00000000UL, 0x7211c19aUL, 0x3ec41c3eUL, 0x956ed53eUL, 0x3f7ae3f4UL,\n+    0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL, 0x3f96f713UL, 0x36661e6cUL,\n+    0x3e936e09UL, 0x506f9381UL, 0x3f5122e8UL, 0xcb6dd43fUL, 0x3e9041b9UL,\n+    0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL, 0x3e625a8aUL, 0xe5a0e9dcUL,\n+    0x3f23499dUL, 0x110384ddUL, 0x3e5b1c2cUL, 0x68d43db6UL, 0x3f2cb899UL,\n+    0x6ecac000UL, 0x3fa0c414UL, 0xcd7dd58cUL, 0xbd13500fUL, 0x00000000UL,\n+    0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0xfffffff8UL, 0xc41acb64UL, 0x3f05448dUL, 0x00000000UL,\n+    0x00000000UL, 0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL,\n+    0x9e42962dUL, 0x3ed5aea5UL, 0x2579f8efUL, 0x3f8b2398UL, 0x288a1ed9UL,\n+    0x3ec81441UL, 0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0x3ea57cd3UL,\n+    0x5766336fUL, 0x3f617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL,\n+    0x3f62c646UL, 0x6b8fb29cUL, 0x3e74e3a3UL, 0xdc4c0409UL, 0x3f33f952UL,\n+    0x9bffe365UL, 0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL,\n+    0x3fb0cc62UL, 0x016b907fUL, 0x3d119cbcUL, 0x00000000UL, 0x00000000UL,\n+    0xe6b9d8faUL, 0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n+    0xfffffff8UL, 0x1a154b97UL, 0x3f116b01UL, 0x00000000UL, 0x00000000UL,\n+    0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL, 0xb93820c8UL,\n+    0x3ee264d4UL, 0xbb6cbb18UL, 0x3f94ab8cUL, 0x888d4d92UL, 0x3ed0568bUL,\n+    0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0x3eb2f950UL, 0x22cf9f74UL,\n+    0x3f6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL, 0x3f64aad7UL,\n+    0x637b73afUL, 0x3e83487cUL, 0xe522591aUL, 0x3f3fc092UL, 0xa158e8bcUL,\n+    0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL, 0x3fb9477fUL,\n+    0xc2c2d2bcUL, 0x3d135ef9UL, 0x00000000UL, 0x00000000UL, 0xf2fdb123UL,\n+    0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n+    0x7d98a556UL, 0x3f1a3958UL, 0x00000000UL, 0x00000000UL, 0x9d88dc01UL,\n+    0x3f0704c2UL, 0x00000000UL, 0x00000000UL, 0x73742a2bUL, 0x3eed054aUL,\n+    0x58844587UL, 0x3f9c2a13UL, 0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL,\n+    0x3f9a48f4UL, 0xa8dc9888UL, 0x3ebf8939UL, 0xaad4b5b8UL, 0x3f72f746UL,\n+    0x9102efa1UL, 0x3ea88f82UL, 0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL,\n+    0x3e90f456UL, 0x741fb4edUL, 0x3f46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL,\n+    0xca89ff3fUL, 0x3f36db70UL, 0xa8a2a000UL, 0x3fc0ee13UL, 0x3da24be1UL,\n+    0x3d338b9fUL, 0x00000000UL, 0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n+    0x3f231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n+    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0x3ef66191UL, 0x848a46c6UL,\n+    0x3fa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n+    0xfdd299efUL, 0x3ec9dd1aUL, 0x3f8dbaafUL, 0x3f793363UL, 0x309fc6eaUL,\n+    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0x3e9dae11UL,\n+    0x3e5c67b3UL, 0x3f4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n+    0x3f3d1eb1UL, 0x29cfc000UL, 0x3fc549ceUL, 0xbf159358UL, 0x3d397b33UL,\n+    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x535ad890UL, 0x3f2b9320UL,\n+    0x00000000UL, 0x00000000UL, 0x018fdf1fUL, 0x3f16d61dUL, 0x00000000UL,\n+    0x00000000UL, 0x0359f1beUL, 0x3f0139e4UL, 0xa4317c6dUL, 0x3fa67e17UL,\n+    0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL, 0x3f9f455bUL, 0x51ccf238UL,\n+    0x3ed55317UL, 0xf437b9acUL, 0x3f804beeUL, 0xc791a2b5UL, 0x3ec0e993UL,\n+    0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL, 0x3eaa48a2UL, 0x0a268358UL,\n+    0x3f55a443UL, 0xdfd978e4UL, 0x3e94b61fUL, 0xd7767a58UL, 0x3f431806UL,\n+    0x2aea0000UL, 0x3fc9bbe8UL, 0x7723ea61UL, 0x3d3a2369UL, 0x00000000UL,\n+    0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0xfffffff8UL, 0x4f48b8d3UL, 0x3f33eaf9UL, 0x00000000UL,\n+    0x00000000UL, 0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL,\n+    0xd0258911UL, 0x3f0abaf3UL, 0x23e49fe9UL, 0x3fab5a8cUL, 0x2d53222eUL,\n+    0x3ef60d15UL, 0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0x3ee1d3b5UL,\n+    0xdbf93b8eUL, 0x3f84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL,\n+    0x3f743924UL, 0x794a8297UL, 0x3eb7b7b9UL, 0xe015f797UL, 0x3f5d41f5UL,\n+    0xe41a4a56UL, 0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL,\n+    0x3fce49ceUL, 0x8c743719UL, 0xbd1eb860UL, 0x00000000UL, 0x00000000UL,\n+    0x1b4863cfUL, 0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n+    0xfffffff8UL, 0x65965966UL, 0xc0219659UL, 0x00000000UL, 0x00000000UL,\n+    0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL, 0x83cd3723UL,\n+    0xc02c8342UL, 0x00000000UL, 0xc0000000UL, 0x55e6c23dUL, 0x403226e3UL,\n+    0x55555555UL, 0x40055555UL, 0x34451939UL, 0xc0371c96UL, 0xaaaaaaabUL,\n+    0xc00aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL, 0x40111111UL,\n+    0xa738201fUL, 0xc042bbceUL, 0x05b05b06UL, 0xc015b05bUL, 0x452b75e3UL,\n+    0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL, 0xbff00000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0xc7ab4d5aUL, 0xc0085e24UL, 0x00000000UL, 0x00000000UL, 0xe93ea75dUL,\n+    0x400b963dUL, 0x00000000UL, 0x00000000UL, 0x94a7f25aUL, 0xc00f37e2UL,\n+    0x4b6261cbUL, 0xbff5f984UL, 0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL,\n+    0x3ffaf5a5UL, 0x7f2ce8e3UL, 0xc013fe8bUL, 0xfe8e54faUL, 0xbffd7334UL,\n+    0x670d618dUL, 0x4016a10cUL, 0x4db97058UL, 0x4000e012UL, 0x24df44ddUL,\n+    0xc0199c5fUL, 0x697d6eceUL, 0xc003006eUL, 0x83298b82UL, 0x401cfc4dUL,\n+    0x19d490d6UL, 0x40058c19UL, 0x2ae42850UL, 0xbfea4300UL, 0x118e20e6UL,\n+    0x3c7a6db8UL, 0x00000000UL, 0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n+    0xbff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n+    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0xbff3972eUL, 0xe93463bdUL,\n+    0xbfeeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n+    0xa04e8ea3UL, 0xbff4541aUL, 0x386accd3UL, 0xbff1369eUL, 0x222a66ddUL,\n+    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0xbff5178fUL,\n+    0xddaa0031UL, 0xbff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n+    0x3ff29311UL, 0x2ab7f990UL, 0xbfe561b8UL, 0x209c7df1UL, 0xbc87a8c5UL,\n+    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xcc03e501UL, 0xbfdff10fUL,\n+    0x00000000UL, 0x00000000UL, 0x44a4e845UL, 0x3fddb63bUL, 0x00000000UL,\n+    0x00000000UL, 0x3768ad9fUL, 0xbfdb72a4UL, 0x3dd01ccaUL, 0xbfe5fdb9UL,\n+    0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL, 0x3fe977f9UL, 0xd013b3abUL,\n+    0xbfd78ca3UL, 0xbf0bf914UL, 0xbfe4f192UL, 0x4d53e730UL, 0x3fd5d060UL,\n+    0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL, 0xbfd4322aUL, 0x5936a835UL,\n+    0xbfe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL, 0xef478605UL, 0x3fe1659eUL,\n+    0x190834ecUL, 0xbfe11ab7UL, 0xcdb625eaUL, 0x3c8e564bUL, 0x00000000UL,\n+    0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x56f37042UL, 0xbfccfc56UL, 0x00000000UL,\n+    0x00000000UL, 0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL,\n+    0x3d0e7c5dUL, 0xbfc50533UL, 0x9bed9b2eUL, 0xbfdf0ed9UL, 0x5fe7c47cUL,\n+    0x3fc1f250UL, 0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0xbfbe5c71UL,\n+    0x86362c20UL, 0xbfda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL,\n+    0x3fd911bdUL, 0xb56658beUL, 0xbfb5e4c7UL, 0x93a2fd76UL, 0xbfd3c092UL,\n+    0xda271794UL, 0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL,\n+    0xbfda8279UL, 0xb68c1467UL, 0xbc708b2fUL, 0x00000000UL, 0x3ff00000UL,\n+    0x980c4337UL, 0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x9314533eUL, 0xbfbb8ec5UL, 0x00000000UL, 0x00000000UL,\n+    0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL, 0xdcb427fdUL,\n+    0xbfb13950UL, 0xd87ab0bbUL, 0xbfd5335eUL, 0xce0ae8a5UL, 0x3fabb382UL,\n+    0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0xbfa552f1UL, 0x59f21a6dUL,\n+    0xbfd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL, 0x3fd0576cUL,\n+    0x8f2c2950UL, 0xbf9a4898UL, 0xc0b3f22cUL, 0xbfc59462UL, 0x1883a4b8UL,\n+    0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL, 0xbfd36a08UL,\n+    0x1dce993dUL, 0x3c6d704dUL, 0x00000000UL, 0x3ff00000UL, 0x2b82ab63UL,\n+    0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x5a279ea3UL, 0xbfaa3407UL, 0x00000000UL, 0x00000000UL, 0x432d65faUL,\n+    0x3fa70153UL, 0x00000000UL, 0x00000000UL, 0x891a4602UL, 0xbf9d03efUL,\n+    0xd62ca5f8UL, 0xbfca77d9UL, 0xb35f4628UL, 0x3f97a265UL, 0x433258faUL,\n+    0x3fd8cf51UL, 0xb58fd909UL, 0xbf8f88e3UL, 0x01771ceaUL, 0xbfc2b154UL,\n+    0xf3562f8eUL, 0x3f888f57UL, 0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL,\n+    0xbf80f44cUL, 0x214368e9UL, 0xbfb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL,\n+    0x172dbbf0UL, 0x3fb6cb8eUL, 0xe0553158UL, 0xbfc975f5UL, 0x593fe814UL,\n+    0xbc2ef5d3UL, 0x00000000UL, 0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n+    0xbf953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n+    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0xbf85ad63UL, 0xdc230b9bUL,\n+    0xbfb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n+    0x77bb08baUL, 0xbf757c85UL, 0xb6247521UL, 0xbfb1381eUL, 0x5922170cUL,\n+    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0xbf64e391UL,\n+    0x3e666320UL, 0xbfa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n+    0x3fafa8aeUL, 0x8c5b2da2UL, 0xbfb936bbUL, 0x4e88f7a5UL, 0xbc587d05UL,\n+    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x6dc9c883UL, 0x3fe45f30UL,\n+    0x6dc9c883UL, 0x40245f30UL, 0x00000000UL, 0x43780000UL, 0x00000000UL,\n+    0x43380000UL, 0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL,\n+    0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL, 0x3707344aUL,\n+    0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL, 0x00000000UL, 0x80000000UL,\n+    0x00000000UL, 0x80000000UL, 0x676733afUL, 0x3d32e7b9UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x7ff00000UL, 0x00000000UL, 0x00000000UL, 0xfffc0000UL,\n+    0xffffffffUL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x43600000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x3c800000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x3ca00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL, 0x00000000UL,\n+    0x40300000UL, 0x00000000UL, 0x3ff00000UL\n+};\n+\n+void MacroAssembler::fast_tan(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3, XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7, Register eax, Register ecx, Register edx, Register tmp) {\n+\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2;\n+\n+  assert_different_registers(tmp, eax, ecx, edx);\n+\n+  address static_const_table_tan = (address)_static_const_table_tan;\n+\n+  subl(rsp, 120);\n+  movl(Address(rsp, 56), tmp);\n+  lea(tmp, ExternalAddress(static_const_table_tan));\n+  movsd(xmm0, Address(rsp, 128));\n+  pextrw(eax, xmm0, 3);\n+  andl(eax, 32767);\n+  subl(eax, 14368);\n+  cmpl(eax, 2216);\n+  jcc(Assembler::above, L_2TAG_PACKET_0_0_2);\n+  movdqu(xmm5, Address(tmp, 5840));\n+  movdqu(xmm6, Address(tmp, 5856));\n+  unpcklpd(xmm0, xmm0);\n+  movdqu(xmm4, Address(tmp, 5712));\n+  andpd(xmm4, xmm0);\n+  movdqu(xmm1, Address(tmp, 5632));\n+  mulpd(xmm1, xmm0);\n+  por(xmm5, xmm4);\n+  addpd(xmm1, xmm5);\n+  movdqu(xmm7, xmm1);\n+  unpckhpd(xmm7, xmm7);\n+  cvttsd2sil(edx, xmm7);\n+  cvttpd2dq(xmm1, xmm1);\n+  cvtdq2pd(xmm1, xmm1);\n+  mulpd(xmm1, xmm6);\n+  movdqu(xmm3, Address(tmp, 5664));\n+  movsd(xmm5, Address(tmp, 5728));\n+  addl(edx, 469248);\n+  movdqu(xmm4, Address(tmp, 5680));\n+  mulpd(xmm3, xmm1);\n+  andl(edx, 31);\n+  mulsd(xmm5, xmm1);\n+  movl(ecx, edx);\n+  mulpd(xmm4, xmm1);\n+  shll(ecx, 1);\n+  subpd(xmm0, xmm3);\n+  mulpd(xmm1, Address(tmp, 5696));\n+  addl(edx, ecx);\n+  shll(ecx, 2);\n+  addl(edx, ecx);\n+  addsd(xmm5, xmm0);\n+  movdqu(xmm2, xmm0);\n+  subpd(xmm0, xmm4);\n+  movsd(xmm6, Address(tmp, 5744));\n+  shll(edx, 4);\n+  lea(eax, Address(tmp, 0));\n+  andpd(xmm5, Address(tmp, 5776));\n+  movdqu(xmm3, xmm0);\n+  addl(eax, edx);\n+  subpd(xmm2, xmm0);\n+  unpckhpd(xmm0, xmm0);\n+  divsd(xmm6, xmm5);\n+  subpd(xmm2, xmm4);\n+  movdqu(xmm7, Address(eax, 16));\n+  subsd(xmm3, xmm5);\n+  mulpd(xmm7, xmm0);\n+  subpd(xmm2, xmm1);\n+  movdqu(xmm1, Address(eax, 48));\n+  mulpd(xmm1, xmm0);\n+  movdqu(xmm4, Address(eax, 96));\n+  mulpd(xmm4, xmm0);\n+  addsd(xmm2, xmm3);\n+  movdqu(xmm3, xmm0);\n+  mulpd(xmm0, xmm0);\n+  addpd(xmm7, Address(eax, 0));\n+  addpd(xmm1, Address(eax, 32));\n+  mulpd(xmm1, xmm0);\n+  addpd(xmm4, Address(eax, 80));\n+  addpd(xmm7, xmm1);\n+  movdqu(xmm1, Address(eax, 112));\n+  mulpd(xmm1, xmm0);\n+  mulpd(xmm0, xmm0);\n+  addpd(xmm4, xmm1);\n+  movdqu(xmm1, Address(eax, 64));\n+  mulpd(xmm1, xmm0);\n+  addpd(xmm7, xmm1);\n+  movdqu(xmm1, xmm3);\n+  mulpd(xmm3, xmm0);\n+  mulsd(xmm0, xmm0);\n+  mulpd(xmm1, Address(eax, 144));\n+  mulpd(xmm4, xmm3);\n+  movdqu(xmm3, xmm1);\n+  addpd(xmm7, xmm4);\n+  movdqu(xmm4, xmm1);\n+  mulsd(xmm0, xmm7);\n+  unpckhpd(xmm7, xmm7);\n+  addsd(xmm0, xmm7);\n+  unpckhpd(xmm1, xmm1);\n+  addsd(xmm3, xmm1);\n+  subsd(xmm4, xmm3);\n+  addsd(xmm1, xmm4);\n+  movdqu(xmm4, xmm2);\n+  movsd(xmm7, Address(eax, 144));\n+  unpckhpd(xmm2, xmm2);\n+  addsd(xmm7, Address(eax, 152));\n+  mulsd(xmm7, xmm2);\n+  addsd(xmm7, Address(eax, 136));\n+  addsd(xmm7, xmm1);\n+  addsd(xmm0, xmm7);\n+  movsd(xmm7, Address(tmp, 5744));\n+  mulsd(xmm4, xmm6);\n+  movsd(xmm2, Address(eax, 168));\n+  andpd(xmm2, xmm6);\n+  mulsd(xmm5, xmm2);\n+  mulsd(xmm6, Address(eax, 160));\n+  subsd(xmm7, xmm5);\n+  subsd(xmm2, Address(eax, 128));\n+  subsd(xmm7, xmm4);\n+  mulsd(xmm7, xmm6);\n+  movdqu(xmm4, xmm3);\n+  subsd(xmm3, xmm2);\n+  addsd(xmm2, xmm3);\n+  subsd(xmm4, xmm2);\n+  addsd(xmm0, xmm4);\n+  subsd(xmm0, xmm7);\n+  addsd(xmm0, xmm3);\n+  movsd(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_0_0_2);\n+  jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n+  shrl(eax, 4);\n+  cmpl(eax, 268434558);\n+  jcc(Assembler::notEqual, L_2TAG_PACKET_3_0_2);\n+  movdqu(xmm3, xmm0);\n+  mulsd(xmm3, Address(tmp, 5808));\n+\n+  bind(L_2TAG_PACKET_3_0_2);\n+  movsd(xmm3, Address(tmp, 5792));\n+  mulsd(xmm3, xmm0);\n+  addsd(xmm3, xmm0);\n+  mulsd(xmm3, Address(tmp, 5808));\n+  movsd(Address(rsp, 0), xmm3);\n+  fld_d(Address(rsp, 0));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_2_0_2);\n+  movq(xmm7, Address(tmp, 5712));\n+  andpd(xmm7, xmm0);\n+  xorpd(xmm7, xmm0);\n+  ucomisd(xmm7, Address(tmp, 5760));\n+  jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n+  subl(rsp, 32);\n+  movsd(Address(rsp, 0), xmm0);\n+  lea(eax, Address(rsp, 40));\n+  movl(Address(rsp, 8), eax);\n+  movl(eax, 2);\n+  movl(Address(rsp, 12), eax);\n+  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_tan_cot_huge())));\n+  addl(rsp, 32);\n+  fld_d(Address(rsp, 8));\n+  jmp(L_2TAG_PACKET_1_0_2);\n+\n+  bind(L_2TAG_PACKET_4_0_2);\n+  movq(Address(rsp, 0), xmm0);\n+  fld_d(Address(rsp, 0));\n+  fsub_d(Address(rsp, 0));\n+\n+  bind(L_2TAG_PACKET_1_0_2);\n+  movl(tmp, Address(rsp, 56));\n+}\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_32_tan.cpp","additions":1173,"deletions":0,"binary":false,"changes":1173,"status":"added"},{"patch":"@@ -1,267 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-\n-#include \"macroAssembler_x86.hpp\"\n-\n-#ifdef _LP64\n-\n-ATTRIBUTE_ALIGNED(8) juint _ONE[] = {\n-    0x00000000UL, 0x3ff00000UL\n-};\n-address MacroAssembler::ONE = (address)_ONE;\n-\n-ATTRIBUTE_ALIGNED(16) juint _ONEHALF[] = {\n-    0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-};\n-address MacroAssembler::ONEHALF = (address)_ONEHALF;\n-\n-ATTRIBUTE_ALIGNED(8) juint _SIGN_MASK[] = {\n-    0x00000000UL, 0x80000000UL\n-};\n-address MacroAssembler::SIGN_MASK = (address)_SIGN_MASK;\n-\n-ATTRIBUTE_ALIGNED(8) juint _TWO_POW_55[] = {\n-    0x00000000UL, 0x43600000UL\n-};\n-address MacroAssembler::TWO_POW_55 = (address)_TWO_POW_55;\n-\n-ATTRIBUTE_ALIGNED(8) juint _TWO_POW_M55[] = {\n-    0x00000000UL, 0x3c800000UL\n-};\n-address MacroAssembler::TWO_POW_M55 = (address)_TWO_POW_M55;\n-\n-ATTRIBUTE_ALIGNED(16) juint _SHIFTER[] = {\n-    0x00000000UL, 0x43380000UL, 0x00000000UL, 0x43380000UL\n-};\n-address MacroAssembler::SHIFTER = (address)_SHIFTER;\n-\n-ATTRIBUTE_ALIGNED(4) juint _ZERO[] = {\n-    0x00000000UL, 0x00000000UL\n-};\n-address MacroAssembler::ZERO = (address)_ZERO;\n-\n-ATTRIBUTE_ALIGNED(16) juint _SC_1[] = {\n-    0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n-};\n-address MacroAssembler::SC_1 = (address)_SC_1;\n-\n-ATTRIBUTE_ALIGNED(16) juint _SC_2[] = {\n-    0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n-};\n-address MacroAssembler::SC_2 = (address)_SC_2;\n-\n-ATTRIBUTE_ALIGNED(16) juint _SC_3[] = {\n-    0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n-};\n-address MacroAssembler::SC_3 = (address)_SC_3;\n-\n-ATTRIBUTE_ALIGNED(16) juint _SC_4[] = {\n-    0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n-};\n-address MacroAssembler::SC_4 = (address)_SC_4;\n-\n-ATTRIBUTE_ALIGNED(8) juint _PI_4[] = {\n-    0x40000000UL, 0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n-};\n-address MacroAssembler::PI_4 = (address)_PI_4;\n-\n-ATTRIBUTE_ALIGNED(8) juint _PI32INV[] = {\n-    0x6dc9c883UL, 0x40245f30UL\n-};\n-address MacroAssembler::PI32INV = (address)_PI32INV;\n-\n-ATTRIBUTE_ALIGNED(8) juint _NEG_ZERO[] = {\n-    0x00000000UL, 0x80000000UL\n-};\n-address MacroAssembler::NEG_ZERO = (address)_NEG_ZERO;\n-\n-ATTRIBUTE_ALIGNED(8) juint _P_1[] = {\n-    0x54400000UL, 0x3fb921fbUL\n-};\n-address MacroAssembler::P_1 = (address)_P_1;\n-\n-ATTRIBUTE_ALIGNED(16) juint _P_2[] = {\n-    0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n-};\n-address MacroAssembler::P_2 = (address)_P_2;\n-\n-ATTRIBUTE_ALIGNED(8) juint _P_3[] = {\n-    0x2e037073UL, 0x3b63198aUL\n-};\n-address MacroAssembler::P_3 = (address)_P_3;\n-\n-\n-ATTRIBUTE_ALIGNED(16) juint _PI_INV_TABLE[] = {\n-    0x00000000UL, 0x00000000UL, 0xa2f9836eUL, 0x4e441529UL, 0xfc2757d1UL,\n-    0xf534ddc0UL, 0xdb629599UL, 0x3c439041UL, 0xfe5163abUL, 0xdebbc561UL,\n-    0xb7246e3aUL, 0x424dd2e0UL, 0x06492eeaUL, 0x09d1921cUL, 0xfe1deb1cUL,\n-    0xb129a73eUL, 0xe88235f5UL, 0x2ebb4484UL, 0xe99c7026UL, 0xb45f7e41UL,\n-    0x3991d639UL, 0x835339f4UL, 0x9c845f8bUL, 0xbdf9283bUL, 0x1ff897ffUL,\n-    0xde05980fUL, 0xef2f118bUL, 0x5a0a6d1fUL, 0x6d367ecfUL, 0x27cb09b7UL,\n-    0x4f463f66UL, 0x9e5fea2dUL, 0x7527bac7UL, 0xebe5f17bUL, 0x3d0739f7UL,\n-    0x8a5292eaUL, 0x6bfb5fb1UL, 0x1f8d5d08UL, 0x56033046UL, 0xfc7b6babUL,\n-    0xf0cfbc21UL\n-};\n-address MacroAssembler::PI_INV_TABLE = (address)_PI_INV_TABLE;\n-\n-\n-ATTRIBUTE_ALIGNED(16) juint _Ctable[] = {\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL, 0xbf73b92eUL,\n-    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n-    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL,\n-    0xc0000000UL, 0xbc626d19UL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL,\n-    0xbfa60beaUL, 0x2ed59f06UL, 0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL,\n-    0x00000000UL, 0x3ff00000UL, 0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL,\n-    0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL, 0x00000000UL, 0x3ff00000UL,\n-    0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL, 0x20000000UL,\n-    0x3c5e0d89UL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL, 0xbfc59267UL,\n-    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n-    0x3ff00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL,\n-    0x20000000UL, 0x3c68076aUL, 0x00000000UL, 0x3ff00000UL, 0x99fcef32UL,\n-    0x3fca8279UL, 0x667f3bcdUL, 0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL,\n-    0x00000000UL, 0x3fe00000UL, 0x94247758UL, 0x3fc133ccUL, 0x6b151741UL,\n-    0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL, 0x00000000UL, 0x3fe00000UL,\n-    0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL, 0xe0000000UL,\n-    0x3c39f630UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL, 0xbf9d4a2cUL,\n-    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n-    0x3fe00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0x3fed906bUL,\n-    0x20000000UL, 0x3c7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x76acf82dUL,\n-    0x3fa4a031UL, 0x56c62ddaUL, 0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL,\n-    0x00000000UL, 0x3fd00000UL, 0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL,\n-    0x3fef6297UL, 0x20000000UL, 0x3c756217UL, 0x00000000UL, 0x3fd00000UL,\n-    0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL, 0x3fefd88dUL, 0x40000000UL,\n-    0xbc887df6UL, 0x00000000UL, 0x3fc00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0x3fefd88dUL,\n-    0x40000000UL, 0xbc887df6UL, 0x00000000UL, 0xbfc00000UL, 0x0e5967d5UL,\n-    0x3fac1d1fUL, 0xcff75cb0UL, 0x3fef6297UL, 0x20000000UL, 0x3c756217UL,\n-    0x00000000UL, 0xbfd00000UL, 0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL,\n-    0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL, 0x00000000UL, 0xbfd00000UL,\n-    0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL, 0x3fed906bUL, 0x20000000UL,\n-    0x3c7457e6UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL, 0x3f9d4a2cUL,\n-    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n-    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL,\n-    0xe0000000UL, 0x3c39f630UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL,\n-    0xbfc133ccUL, 0x6b151741UL, 0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL,\n-    0x00000000UL, 0xbfe00000UL, 0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL,\n-    0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL, 0x00000000UL, 0xbfe00000UL,\n-    0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL, 0x20000000UL,\n-    0x3c68076aUL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL, 0x3fc59267UL,\n-    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n-    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL,\n-    0x20000000UL, 0x3c5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL,\n-    0x3fb37ca1UL, 0xa6aea963UL, 0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL,\n-    0x00000000UL, 0xbff00000UL, 0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL,\n-    0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL, 0x00000000UL, 0xbff00000UL,\n-    0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL, 0xc0000000UL,\n-    0xbc626d19UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL, 0x3f73b92eUL,\n-    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n-    0xbff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL,\n-    0x3f73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n-    0x00000000UL, 0xbff00000UL, 0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL,\n-    0xbfc8f8b8UL, 0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0xbff00000UL,\n-    0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL,\n-    0x3c75d28dUL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL, 0x3fb37ca1UL,\n-    0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL, 0x3c672cedUL, 0x00000000UL,\n-    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0xbfde2b5dUL,\n-    0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL,\n-    0x3fc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n-    0x00000000UL, 0xbff00000UL, 0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL,\n-    0xbfe44cf3UL, 0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0xbff00000UL,\n-    0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL,\n-    0x3c8bdd34UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL, 0xbfc133ccUL,\n-    0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL, 0x3c82c5e1UL, 0x00000000UL,\n-    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0xbfea9b66UL,\n-    0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL,\n-    0x3f9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n-    0x00000000UL, 0xbfe00000UL, 0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL,\n-    0xbfed906bUL, 0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0xbfe00000UL,\n-    0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL,\n-    0xbc8760b1UL, 0x00000000UL, 0xbfd00000UL, 0x0e5967d5UL, 0x3fac1d1fUL,\n-    0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL, 0xbc756217UL, 0x00000000UL,\n-    0xbfd00000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0xbfefd88dUL,\n-    0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0xbfc00000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL,\n-    0xbfefd88dUL, 0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0x3fc00000UL,\n-    0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL,\n-    0xbc756217UL, 0x00000000UL, 0x3fd00000UL, 0x76acf82dUL, 0x3fa4a031UL,\n-    0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL, 0xbc8760b1UL, 0x00000000UL,\n-    0x3fd00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0xbfed906bUL,\n-    0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL,\n-    0xbf9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n-    0x00000000UL, 0x3fe00000UL, 0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL,\n-    0xbfea9b66UL, 0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0x3fe00000UL,\n-    0x94247758UL, 0x3fc133ccUL, 0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL,\n-    0x3c82c5e1UL, 0x00000000UL, 0x3fe00000UL, 0x99fcef32UL, 0x3fca8279UL,\n-    0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL, 0x3c8bdd34UL, 0x00000000UL,\n-    0x3fe00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0xbfe44cf3UL,\n-    0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL,\n-    0xbfc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n-    0x00000000UL, 0x3ff00000UL, 0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL,\n-    0xbfde2b5dUL, 0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0x3ff00000UL,\n-    0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL,\n-    0x3c672cedUL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL, 0xbfa60beaUL,\n-    0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL, 0x3c75d28dUL, 0x00000000UL,\n-    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0xbfc8f8b8UL,\n-    0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL,\n-    0xbf73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n-    0x00000000UL, 0x3ff00000UL\n-};\n-address MacroAssembler::Ctable = (address)_Ctable;\n-\n-#else \/\/ !_LP64\n-\n-ATTRIBUTE_ALIGNED(16) juint _ONES[] = {\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xbff00000UL\n-};\n-address MacroAssembler::ONES = (address)_ONES;\n-\n-ATTRIBUTE_ALIGNED(16) juint _PI4_INV[] = {\n-    0x6dc9c883UL, 0x3ff45f30UL\n-};\n-address MacroAssembler::PI4_INV = (address)_PI4_INV;\n-\n-ATTRIBUTE_ALIGNED(16) juint _PI4X3[] = {\n-    0x54443000UL, 0xbfe921fbUL, 0x3b39a000UL, 0x3d373dcbUL, 0xe0e68948UL,\n-    0xba845c06UL\n-};\n-address MacroAssembler::PI4X3 = (address)_PI4X3;\n-\n-ATTRIBUTE_ALIGNED(16) juint _PI4X4[] = {\n-    0x54400000UL, 0xbfe921fbUL, 0x1a600000UL, 0xbdc0b461UL, 0x2e000000UL,\n-    0xbb93198aUL, 0x252049c1UL, 0xb96b839aUL\n-};\n-address MacroAssembler::PI4X4 = (address)_PI4X4;\n-\n-ATTRIBUTE_ALIGNED(16) juint _L_2IL0FLOATPACKET_0[] = {\n-    0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n-};\n-address MacroAssembler::L_2IL0FLOATPACKET_0 = (address)_L_2IL0FLOATPACKET_0;\n-\n-#endif \/\/ _LP64\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_constants.cpp","additions":0,"deletions":267,"binary":false,"changes":267,"status":"deleted"},{"patch":"@@ -1,866 +0,0 @@\n-\/*\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n-* Intel Math Library (LIBM) Source Code\n-*\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/assembler.inline.hpp\"\n-#include \"macroAssembler_x86.hpp\"\n-#include \"runtime\/stubRoutines.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/******************************************************************************\/\n-\/\/                     ALGORITHM DESCRIPTION - COS()\n-\/\/                     ---------------------\n-\/\/\n-\/\/     1. RANGE REDUCTION\n-\/\/\n-\/\/     We perform an initial range reduction from X to r with\n-\/\/\n-\/\/          X =~= N * pi\/32 + r\n-\/\/\n-\/\/     so that |r| <= pi\/64 + epsilon. We restrict inputs to those\n-\/\/     where |N| <= 932560. Beyond this, the range reduction is\n-\/\/     insufficiently accurate. For extremely small inputs,\n-\/\/     denormalization can occur internally, impacting performance.\n-\/\/     This means that the main path is actually only taken for\n-\/\/     2^-252 <= |X| < 90112.\n-\/\/\n-\/\/     To avoid branches, we perform the range reduction to full\n-\/\/     accuracy each time.\n-\/\/\n-\/\/          X - N * (P_1 + P_2 + P_3)\n-\/\/\n-\/\/     where P_1 and P_2 are 32-bit numbers (so multiplication by N\n-\/\/     is exact) and P_3 is a 53-bit number. Together, these\n-\/\/     approximate pi well enough for all cases in the restricted\n-\/\/     range.\n-\/\/\n-\/\/     The main reduction sequence is:\n-\/\/\n-\/\/             y = 32\/pi * x\n-\/\/             N = integer(y)\n-\/\/     (computed by adding and subtracting off SHIFTER)\n-\/\/\n-\/\/             m_1 = N * P_1\n-\/\/             m_2 = N * P_2\n-\/\/             r_1 = x - m_1\n-\/\/             r = r_1 - m_2\n-\/\/     (this r can be used for most of the calculation)\n-\/\/\n-\/\/             c_1 = r_1 - r\n-\/\/             m_3 = N * P_3\n-\/\/             c_2 = c_1 - m_2\n-\/\/             c = c_2 - m_3\n-\/\/\n-\/\/     2. MAIN ALGORITHM\n-\/\/\n-\/\/     The algorithm uses a table lookup based on B = M * pi \/ 32\n-\/\/     where M = N mod 64. The stored values are:\n-\/\/       sigma             closest power of 2 to cos(B)\n-\/\/       C_hl              53-bit cos(B) - sigma\n-\/\/       S_hi + S_lo       2 * 53-bit sin(B)\n-\/\/\n-\/\/     The computation is organized as follows:\n-\/\/\n-\/\/          sin(B + r + c) = [sin(B) + sigma * r] +\n-\/\/                           r * (cos(B) - sigma) +\n-\/\/                           sin(B) * [cos(r + c) - 1] +\n-\/\/                           cos(B) * [sin(r + c) - r]\n-\/\/\n-\/\/     which is approximately:\n-\/\/\n-\/\/          [S_hi + sigma * r] +\n-\/\/          C_hl * r +\n-\/\/          S_lo + S_hi * [(cos(r) - 1) - r * c] +\n-\/\/          (C_hl + sigma) * [(sin(r) - r) + c]\n-\/\/\n-\/\/     and this is what is actually computed. We separate this sum\n-\/\/     into four parts:\n-\/\/\n-\/\/          hi + med + pols + corr\n-\/\/\n-\/\/     where\n-\/\/\n-\/\/          hi       = S_hi + sigma r\n-\/\/          med      = C_hl * r\n-\/\/          pols     = S_hi * (cos(r) - 1) + (C_hl + sigma) * (sin(r) - r)\n-\/\/          corr     = S_lo + c * ((C_hl + sigma) - S_hi * r)\n-\/\/\n-\/\/     3. POLYNOMIAL\n-\/\/\n-\/\/     The polynomial S_hi * (cos(r) - 1) + (C_hl + sigma) *\n-\/\/     (sin(r) - r) can be rearranged freely, since it is quite\n-\/\/     small, so we exploit parallelism to the fullest.\n-\/\/\n-\/\/          psc4       =   SC_4 * r_1\n-\/\/          msc4       =   psc4 * r\n-\/\/          r2         =   r * r\n-\/\/          msc2       =   SC_2 * r2\n-\/\/          r4         =   r2 * r2\n-\/\/          psc3       =   SC_3 + msc4\n-\/\/          psc1       =   SC_1 + msc2\n-\/\/          msc3       =   r4 * psc3\n-\/\/          sincospols =   psc1 + msc3\n-\/\/          pols       =   sincospols *\n-\/\/                         <S_hi * r^2 | (C_hl + sigma) * r^3>\n-\/\/\n-\/\/     4. CORRECTION TERM\n-\/\/\n-\/\/     This is where the \"c\" component of the range reduction is\n-\/\/     taken into account; recall that just \"r\" is used for most of\n-\/\/     the calculation.\n-\/\/\n-\/\/          -c   = m_3 - c_2\n-\/\/          -d   = S_hi * r - (C_hl + sigma)\n-\/\/          corr = -c * -d + S_lo\n-\/\/\n-\/\/     5. COMPENSATED SUMMATIONS\n-\/\/\n-\/\/     The two successive compensated summations add up the high\n-\/\/     and medium parts, leaving just the low parts to add up at\n-\/\/     the end.\n-\/\/\n-\/\/          rs        =  sigma * r\n-\/\/          res_int   =  S_hi + rs\n-\/\/          k_0       =  S_hi - res_int\n-\/\/          k_2       =  k_0 + rs\n-\/\/          med       =  C_hl * r\n-\/\/          res_hi    =  res_int + med\n-\/\/          k_1       =  res_int - res_hi\n-\/\/          k_3       =  k_1 + med\n-\/\/\n-\/\/     6. FINAL SUMMATION\n-\/\/\n-\/\/     We now add up all the small parts:\n-\/\/\n-\/\/          res_lo = pols(hi) + pols(lo) + corr + k_1 + k_3\n-\/\/\n-\/\/     Now the overall result is just:\n-\/\/\n-\/\/          res_hi + res_lo\n-\/\/\n-\/\/     7. SMALL ARGUMENTS\n-\/\/\n-\/\/     Inputs with |X| < 2^-252 are treated specially as\n-\/\/     1 - |x|.\n-\/\/\n-\/\/ Special cases:\n-\/\/  cos(NaN) = quiet NaN, and raise invalid exception\n-\/\/  cos(INF) = NaN and raise invalid exception\n-\/\/  cos(0) = 1\n-\/\/\n-\/******************************************************************************\/\n-\n-#ifdef _LP64\n-\/\/ The 64 bit code is at most SSE2 compliant\n-void MacroAssembler::fast_cos(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx, Register r8,\n-                              Register  r9, Register r10, Register r11, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1, L_2TAG_PACKET_3_0_1;\n-  Label L_2TAG_PACKET_4_0_1, L_2TAG_PACKET_5_0_1, L_2TAG_PACKET_6_0_1, L_2TAG_PACKET_7_0_1;\n-  Label L_2TAG_PACKET_8_0_1, L_2TAG_PACKET_9_0_1, L_2TAG_PACKET_10_0_1, L_2TAG_PACKET_11_0_1;\n-  Label L_2TAG_PACKET_12_0_1, L_2TAG_PACKET_13_0_1, B1_2, B1_4, start;\n-\n-  assert_different_registers(eax, ecx, edx, r8, r9, r10, r11, tmp);\n-\n-  bind(start);\n-  push(rbx);\n-  subq(rsp, 16);\n-  movsd(Address(rsp, 8), xmm0);\n-\n-  bind(B1_2);\n-  movl(eax, Address(rsp, 12));\n-  movq(xmm1, ExternalAddress(PI32INV), tmp \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x40245f30UL\n-  andl(eax, 2147418112);\n-  subl(eax, 808452096);\n-  cmpl(eax, 281346048);\n-  jcc(Assembler::above, L_2TAG_PACKET_0_0_1);\n-  mulsd(xmm1, xmm0);\n-  movdqu(xmm5, ExternalAddress(ONEHALF), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-  movq(xmm4, ExternalAddress(SIGN_MASK), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n-  pand(xmm4, xmm0);\n-  por(xmm5, xmm4);\n-  addpd(xmm1, xmm5);\n-  cvttsd2sil(edx, xmm1);\n-  cvtsi2sdl(xmm1, edx);\n-  movdqu(xmm2, ExternalAddress(P_2), tmp \/*rscratch*\/);    \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n-  movq(xmm3, ExternalAddress(P_1), tmp \/*rscratch*\/);    \/\/0x54400000UL, 0x3fb921fbUL\n-  mulsd(xmm3, xmm1);\n-  unpcklpd(xmm1, xmm1);\n-  addq(rdx, 1865232);\n-  movdqu(xmm4, xmm0);\n-  andq(rdx, 63);\n-  movdqu(xmm5, ExternalAddress(SC_4), tmp \/*rscratch*\/);    \/\/0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n-  lea(rax, ExternalAddress(Ctable));\n-  shlq(rdx, 5);\n-  addq(rax, rdx);\n-  mulpd(xmm2, xmm1);\n-  subsd(xmm0, xmm3);\n-  mulsd(xmm1, ExternalAddress(P_3), tmp \/*rscratch*\/);    \/\/0x2e037073UL, 0x3b63198aUL\n-  subsd(xmm4, xmm3);\n-  movq(xmm7, Address(rax, 8));\n-  unpcklpd(xmm0, xmm0);\n-  movdqu(xmm3, xmm4);\n-  subsd(xmm4, xmm2);\n-  mulpd(xmm5, xmm0);\n-  subpd(xmm0, xmm2);\n-  movdqu(xmm6, ExternalAddress(SC_2), tmp \/*rscratch*\/);    \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n-  mulsd(xmm7, xmm4);\n-  subsd(xmm3, xmm4);\n-  mulpd(xmm5, xmm0);\n-  mulpd(xmm0, xmm0);\n-  subsd(xmm3, xmm2);\n-  movdqu(xmm2, Address(rax, 0));\n-  subsd(xmm1, xmm3);\n-  movq(xmm3, Address(rax, 24));\n-  addsd(xmm2, xmm3);\n-  subsd(xmm7, xmm2);\n-  mulsd(xmm2, xmm4);\n-  mulpd(xmm6, xmm0);\n-  mulsd(xmm3, xmm4);\n-  mulpd(xmm2, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm5, ExternalAddress(SC_3), tmp \/*rscratch*\/);    \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n-  mulsd(xmm4, Address(rax, 0));\n-  addpd(xmm6, ExternalAddress(SC_1), tmp \/*rscratch*\/);    \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n-  mulpd(xmm5, xmm0);\n-  movdqu(xmm0, xmm3);\n-  addsd(xmm3, Address(rax, 8));\n-  mulpd(xmm1, xmm7);\n-  movdqu(xmm7, xmm4);\n-  addsd(xmm4, xmm3);\n-  addpd(xmm6, xmm5);\n-  movq(xmm5, Address(rax, 8));\n-  subsd(xmm5, xmm3);\n-  subsd(xmm3, xmm4);\n-  addsd(xmm1, Address(rax, 16));\n-  mulpd(xmm6, xmm2);\n-  addsd(xmm0, xmm5);\n-  addsd(xmm3, xmm7);\n-  addsd(xmm0, xmm1);\n-  addsd(xmm0, xmm3);\n-  addsd(xmm0, xmm6);\n-  unpckhpd(xmm6, xmm6);\n-  addsd(xmm0, xmm6);\n-  addsd(xmm0, xmm4);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_0_0_1);\n-  jcc(Assembler::greater, L_2TAG_PACKET_1_0_1);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  pinsrw(xmm0, eax, 3);\n-  movq(xmm1, ExternalAddress(ONE), tmp \/*rscratch*\/); \/\/ 0x00000000UL, 0x3ff00000UL\n-  subsd(xmm1, xmm0);\n-  movdqu(xmm0, xmm1);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_1_0_1);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_2_0_1);\n-  pextrw(ecx, xmm0, 3);\n-  andl(ecx, 32752);\n-  subl(ecx, 16224);\n-  shrl(ecx, 7);\n-  andl(ecx, 65532);\n-  lea(r11, ExternalAddress(PI_INV_TABLE));\n-  addq(rcx, r11);\n-  movdq(rax, xmm0);\n-  movl(r10, Address(rcx, 20));\n-  movl(r8, Address(rcx, 24));\n-  movl(edx, eax);\n-  shrq(rax, 21);\n-  orl(eax, INT_MIN);\n-  shrl(eax, 11);\n-  movl(r9, r10);\n-  imulq(r10, rdx);\n-  imulq(r9, rax);\n-  imulq(r8, rax);\n-  movl(rsi, Address(rcx, 16));\n-  movl(rdi, Address(rcx, 12));\n-  movl(r11, r10);\n-  shrq(r10, 32);\n-  addq(r9, r10);\n-  addq(r11, r8);\n-  movl(r8, r11);\n-  shrq(r11, 32);\n-  addq(r9, r11);\n-  movl(r10, rsi);\n-  imulq(rsi, rdx);\n-  imulq(r10, rax);\n-  movl(r11, rdi);\n-  imulq(rdi, rdx);\n-  movl(rbx, rsi);\n-  shrq(rsi, 32);\n-  addq(r9, rbx);\n-  movl(rbx, r9);\n-  shrq(r9, 32);\n-  addq(r10, rsi);\n-  addq(r10, r9);\n-  shlq(rbx, 32);\n-  orq(r8, rbx);\n-  imulq(r11, rax);\n-  movl(r9, Address(rcx, 8));\n-  movl(rsi, Address(rcx, 4));\n-  movl(rbx, rdi);\n-  shrq(rdi, 32);\n-  addq(r10, rbx);\n-  movl(rbx, r10);\n-  shrq(r10, 32);\n-  addq(r11, rdi);\n-  addq(r11, r10);\n-  movq(rdi, r9);\n-  imulq(r9, rdx);\n-  imulq(rdi, rax);\n-  movl(r10, r9);\n-  shrq(r9, 32);\n-  addq(r11, r10);\n-  movl(r10, r11);\n-  shrq(r11, 32);\n-  addq(rdi, r9);\n-  addq(rdi, r11);\n-  movq(r9, rsi);\n-  imulq(rsi, rdx);\n-  imulq(r9, rax);\n-  shlq(r10, 32);\n-  orq(r10, rbx);\n-  movl(eax, Address(rcx, 0));\n-  movl(r11, rsi);\n-  shrq(rsi, 32);\n-  addq(rdi, r11);\n-  movl(r11, rdi);\n-  shrq(rdi, 32);\n-  addq(r9, rsi);\n-  addq(r9, rdi);\n-  imulq(rdx, rax);\n-  pextrw(rbx, xmm0, 3);\n-  lea(rdi, ExternalAddress(PI_INV_TABLE));\n-  subq(rcx, rdi);\n-  addl(ecx, ecx);\n-  addl(ecx, ecx);\n-  addl(ecx, ecx);\n-  addl(ecx, 19);\n-  movl(rsi, 32768);\n-  andl(rsi, rbx);\n-  shrl(rbx, 4);\n-  andl(rbx, 2047);\n-  subl(rbx, 1023);\n-  subl(ecx, rbx);\n-  addq(r9, rdx);\n-  movl(edx, ecx);\n-  addl(edx, 32);\n-  cmpl(ecx, 1);\n-  jcc(Assembler::less, L_2TAG_PACKET_3_0_1);\n-  negl(ecx);\n-  addl(ecx, 29);\n-  shll(r9);\n-  movl(rdi, r9);\n-  andl(r9, 536870911);\n-  testl(r9, 268435456);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_4_0_1);\n-  shrl(r9);\n-  movl(rbx, 0);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-\n-  bind(L_2TAG_PACKET_5_0_1);\n-\n-  bind(L_2TAG_PACKET_6_0_1);\n-  cmpq(r9, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_7_0_1);\n-\n-  bind(L_2TAG_PACKET_8_0_1);\n-  bsrq(r11, r9);\n-  movl(ecx, 29);\n-  subl(ecx, r11);\n-  jcc(Assembler::lessEqual, L_2TAG_PACKET_9_0_1);\n-  shlq(r9);\n-  movq(rax, r10);\n-  shlq(r10);\n-  addl(edx, ecx);\n-  negl(ecx);\n-  addl(ecx, 64);\n-  shrq(rax);\n-  shrq(r8);\n-  orq(r9, rax);\n-  orq(r10, r8);\n-\n-  bind(L_2TAG_PACKET_10_0_1);\n-  cvtsi2sdq(xmm0, r9);\n-  shrq(r10, 1);\n-  cvtsi2sdq(xmm3, r10);\n-  xorpd(xmm4, xmm4);\n-  shll(edx, 4);\n-  negl(edx);\n-  addl(edx, 16368);\n-  orl(edx, rsi);\n-  xorl(edx, rbx);\n-  pinsrw(xmm4, edx, 3);\n-  movq(xmm2, ExternalAddress(PI_4),     tmp \/*rscratch*\/); \/\/0x40000000UL, 0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n-  movq(xmm6, ExternalAddress(PI_4 + 8), tmp \/*rscratch*\/); \/\/0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n-  xorpd(xmm5, xmm5);\n-  subl(edx, 1008);\n-  pinsrw(xmm5, edx, 3);\n-  mulsd(xmm0, xmm4);\n-  shll(rsi, 16);\n-  sarl(rsi, 31);\n-  mulsd(xmm3, xmm5);\n-  movdqu(xmm1, xmm0);\n-  mulsd(xmm0, xmm2);\n-  shrl(rdi, 29);\n-  addsd(xmm1, xmm3);\n-  mulsd(xmm3, xmm2);\n-  addl(rdi, rsi);\n-  xorl(rdi, rsi);\n-  mulsd(xmm6, xmm1);\n-  movl(eax, rdi);\n-  addsd(xmm6, xmm3);\n-  movdqu(xmm2, xmm0);\n-  addsd(xmm0, xmm6);\n-  subsd(xmm2, xmm0);\n-  addsd(xmm6, xmm2);\n-\n-  bind(L_2TAG_PACKET_11_0_1);\n-  movq(xmm1, ExternalAddress(PI32INV), tmp \/*rscratch*\/);   \/\/0x6dc9c883UL, 0x40245f30UL\n-  mulsd(xmm1, xmm0);\n-  movq(xmm5, ExternalAddress(ONEHALF), tmp \/*rscratch*\/);   \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-  movq(xmm4, ExternalAddress(SIGN_MASK), tmp \/*rscratch*\/); \/\/0x00000000UL, 0x80000000UL\n-  pand(xmm4, xmm0);\n-  por(xmm5, xmm4);\n-  addpd(xmm1, xmm5);\n-  cvttsd2siq(rdx, xmm1);\n-  cvtsi2sdq(xmm1, rdx);\n-  movq(xmm3, ExternalAddress(P_1), tmp \/*rscratch*\/);    \/\/0x54400000UL, 0x3fb921fbUL\n-  movdqu(xmm2, ExternalAddress(P_2), tmp \/*rscratch*\/);    \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n-  mulsd(xmm3, xmm1);\n-  unpcklpd(xmm1, xmm1);\n-  shll(eax, 3);\n-  addl(edx, 1865232);\n-  movdqu(xmm4, xmm0);\n-  addl(edx, eax);\n-  andl(edx, 63);\n-  movdqu(xmm5, ExternalAddress(SC_4), tmp \/*rscratch*\/);    \/\/0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n-  lea(rax, ExternalAddress(Ctable));\n-  shll(edx, 5);\n-  addq(rax, rdx);\n-  mulpd(xmm2, xmm1);\n-  subsd(xmm0, xmm3);\n-  mulsd(xmm1, ExternalAddress(P_3), tmp \/*rscratch*\/);    \/\/0x2e037073UL, 0x3b63198aUL\n-  subsd(xmm4, xmm3);\n-  movq(xmm7, Address(rax, 8));\n-  unpcklpd(xmm0, xmm0);\n-  movdqu(xmm3, xmm4);\n-  subsd(xmm4, xmm2);\n-  mulpd(xmm5, xmm0);\n-  subpd(xmm0, xmm2);\n-  mulsd(xmm7, xmm4);\n-  subsd(xmm3, xmm4);\n-  mulpd(xmm5, xmm0);\n-  mulpd(xmm0, xmm0);\n-  subsd(xmm3, xmm2);\n-  movdqu(xmm2, Address(rax, 0));\n-  subsd(xmm1, xmm3);\n-  movq(xmm3, Address(rax, 24));\n-  addsd(xmm2, xmm3);\n-  subsd(xmm7, xmm2);\n-  subsd(xmm1, xmm6);\n-  movdqu(xmm6, ExternalAddress(SC_2), tmp \/*rscratch*\/);    \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n-  mulsd(xmm2, xmm4);\n-  mulpd(xmm6, xmm0);\n-  mulsd(xmm3, xmm4);\n-  mulpd(xmm2, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm5, ExternalAddress(SC_3), tmp \/*rscratch*\/);    \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n-  mulsd(xmm4, Address(rax, 0));\n-  addpd(xmm6, ExternalAddress(SC_1), tmp \/*rscratch*\/);    \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n-  mulpd(xmm5, xmm0);\n-  movdqu(xmm0, xmm3);\n-  addsd(xmm3, Address(rax, 8));\n-  mulpd(xmm1, xmm7);\n-  movdqu(xmm7, xmm4);\n-  addsd(xmm4, xmm3);\n-  addpd(xmm6, xmm5);\n-  movq(xmm5, Address(rax, 8));\n-  subsd(xmm5, xmm3);\n-  subsd(xmm3, xmm4);\n-  addsd(xmm1, Address(rax, 16));\n-  mulpd(xmm6, xmm2);\n-  addsd(xmm5, xmm0);\n-  addsd(xmm3, xmm7);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm1, xmm3);\n-  addsd(xmm1, xmm6);\n-  unpckhpd(xmm6, xmm6);\n-  movdqu(xmm0, xmm4);\n-  addsd(xmm1, xmm6);\n-  addsd(xmm0, xmm1);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_7_0_1);\n-  addl(edx, 64);\n-  movq(r9, r10);\n-  movq(r10, r8);\n-  movl(r8, 0);\n-  cmpq(r9, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_8_0_1);\n-  addl(edx, 64);\n-  movq(r9, r10);\n-  movq(r10, r8);\n-  cmpq(r9, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_8_0_1);\n-  xorpd(xmm0, xmm0);\n-  xorpd(xmm6, xmm6);\n-  jmp(L_2TAG_PACKET_11_0_1);\n-\n-  bind(L_2TAG_PACKET_9_0_1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_10_0_1);\n-  negl(ecx);\n-  shrq(r10);\n-  movq(rax, r9);\n-  shrq(r9);\n-  subl(edx, ecx);\n-  negl(ecx);\n-  addl(ecx, 64);\n-  shlq(rax);\n-  orq(r10, rax);\n-  jmp(L_2TAG_PACKET_10_0_1);\n-  bind(L_2TAG_PACKET_3_0_1);\n-  negl(ecx);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-  shlq(r9);\n-  movq(rdi, r9);\n-  testl(r9, INT_MIN);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_12_0_1);\n-  shrl(r9);\n-  movl(rbx, 0);\n-  shrq(rdi, 3);\n-  jmp(L_2TAG_PACKET_6_0_1);\n-\n-  bind(L_2TAG_PACKET_4_0_1);\n-  shrl(r9);\n-  movl(rbx, 536870912);\n-  shrl(rbx);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-  shlq(rbx, 32);\n-  addl(rdi, 536870912);\n-  movl(rcx, 0);\n-  movl(r11, 0);\n-  subq(rcx, r8);\n-  sbbq(r11, r10);\n-  sbbq(rbx, r9);\n-  movq(r8, rcx);\n-  movq(r10, r11);\n-  movq(r9, rbx);\n-  movl(rbx, 32768);\n-  jmp(L_2TAG_PACKET_5_0_1);\n-\n-  bind(L_2TAG_PACKET_12_0_1);\n-  shrl(r9);\n-  mov64(rbx, 0x100000000);\n-  shrq(rbx);\n-  movl(rcx, 0);\n-  movl(r11, 0);\n-  subq(rcx, r8);\n-  sbbq(r11, r10);\n-  sbbq(rbx, r9);\n-  movq(r8, rcx);\n-  movq(r10, r11);\n-  movq(r9, rbx);\n-  movl(rbx, 32768);\n-  shrq(rdi, 3);\n-  addl(rdi, 536870912);\n-  jmp(L_2TAG_PACKET_6_0_1);\n-\n-  bind(L_2TAG_PACKET_2_0_1);\n-  movsd(xmm0, Address(rsp, 8));\n-  mulsd(xmm0, ExternalAddress(NEG_ZERO), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n-  movq(Address(rsp, 0), xmm0);\n-\n-  bind(L_2TAG_PACKET_13_0_1);\n-\n-  bind(B1_4);\n-  addq(rsp, 16);\n-  pop(rbx);\n-}\n-#else\n-\/\/ The 32 bit code is at most SSE2 compliant\n-\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_cos[] =\n-{\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL, 0xbf73b92eUL,\n-    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n-    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL,\n-    0xc0000000UL, 0xbc626d19UL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL,\n-    0xbfa60beaUL, 0x2ed59f06UL, 0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL,\n-    0x00000000UL, 0x3ff00000UL, 0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL,\n-    0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL, 0x00000000UL, 0x3ff00000UL,\n-    0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL, 0x20000000UL,\n-    0x3c5e0d89UL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL, 0xbfc59267UL,\n-    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n-    0x3ff00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL,\n-    0x20000000UL, 0x3c68076aUL, 0x00000000UL, 0x3ff00000UL, 0x99fcef32UL,\n-    0x3fca8279UL, 0x667f3bcdUL, 0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL,\n-    0x00000000UL, 0x3fe00000UL, 0x94247758UL, 0x3fc133ccUL, 0x6b151741UL,\n-    0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL, 0x00000000UL, 0x3fe00000UL,\n-    0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL, 0xe0000000UL,\n-    0x3c39f630UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL, 0xbf9d4a2cUL,\n-    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n-    0x3fe00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0x3fed906bUL,\n-    0x20000000UL, 0x3c7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x76acf82dUL,\n-    0x3fa4a031UL, 0x56c62ddaUL, 0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL,\n-    0x00000000UL, 0x3fd00000UL, 0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL,\n-    0x3fef6297UL, 0x20000000UL, 0x3c756217UL, 0x00000000UL, 0x3fd00000UL,\n-    0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL, 0x3fefd88dUL, 0x40000000UL,\n-    0xbc887df6UL, 0x00000000UL, 0x3fc00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0x3fefd88dUL,\n-    0x40000000UL, 0xbc887df6UL, 0x00000000UL, 0xbfc00000UL, 0x0e5967d5UL,\n-    0x3fac1d1fUL, 0xcff75cb0UL, 0x3fef6297UL, 0x20000000UL, 0x3c756217UL,\n-    0x00000000UL, 0xbfd00000UL, 0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL,\n-    0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL, 0x00000000UL, 0xbfd00000UL,\n-    0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL, 0x3fed906bUL, 0x20000000UL,\n-    0x3c7457e6UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL, 0x3f9d4a2cUL,\n-    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n-    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL,\n-    0xe0000000UL, 0x3c39f630UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL,\n-    0xbfc133ccUL, 0x6b151741UL, 0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL,\n-    0x00000000UL, 0xbfe00000UL, 0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL,\n-    0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL, 0x00000000UL, 0xbfe00000UL,\n-    0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL, 0x20000000UL,\n-    0x3c68076aUL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL, 0x3fc59267UL,\n-    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n-    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL,\n-    0x20000000UL, 0x3c5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL,\n-    0x3fb37ca1UL, 0xa6aea963UL, 0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL,\n-    0x00000000UL, 0xbff00000UL, 0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL,\n-    0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL, 0x00000000UL, 0xbff00000UL,\n-    0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL, 0xc0000000UL,\n-    0xbc626d19UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL, 0x3f73b92eUL,\n-    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n-    0xbff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL,\n-    0x3f73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n-    0x00000000UL, 0xbff00000UL, 0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL,\n-    0xbfc8f8b8UL, 0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0xbff00000UL,\n-    0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL,\n-    0x3c75d28dUL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL, 0x3fb37ca1UL,\n-    0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL, 0x3c672cedUL, 0x00000000UL,\n-    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0xbfde2b5dUL,\n-    0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL,\n-    0x3fc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n-    0x00000000UL, 0xbff00000UL, 0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL,\n-    0xbfe44cf3UL, 0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0xbff00000UL,\n-    0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL,\n-    0x3c8bdd34UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL, 0xbfc133ccUL,\n-    0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL, 0x3c82c5e1UL, 0x00000000UL,\n-    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0xbfea9b66UL,\n-    0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL,\n-    0x3f9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n-    0x00000000UL, 0xbfe00000UL, 0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL,\n-    0xbfed906bUL, 0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0xbfe00000UL,\n-    0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL,\n-    0xbc8760b1UL, 0x00000000UL, 0xbfd00000UL, 0x0e5967d5UL, 0x3fac1d1fUL,\n-    0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL, 0xbc756217UL, 0x00000000UL,\n-    0xbfd00000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0xbfefd88dUL,\n-    0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0xbfc00000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL,\n-    0xbfefd88dUL, 0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0x3fc00000UL,\n-    0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL,\n-    0xbc756217UL, 0x00000000UL, 0x3fd00000UL, 0x76acf82dUL, 0x3fa4a031UL,\n-    0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL, 0xbc8760b1UL, 0x00000000UL,\n-    0x3fd00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0xbfed906bUL,\n-    0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL,\n-    0xbf9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n-    0x00000000UL, 0x3fe00000UL, 0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL,\n-    0xbfea9b66UL, 0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0x3fe00000UL,\n-    0x94247758UL, 0x3fc133ccUL, 0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL,\n-    0x3c82c5e1UL, 0x00000000UL, 0x3fe00000UL, 0x99fcef32UL, 0x3fca8279UL,\n-    0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL, 0x3c8bdd34UL, 0x00000000UL,\n-    0x3fe00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0xbfe44cf3UL,\n-    0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL,\n-    0xbfc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n-    0x00000000UL, 0x3ff00000UL, 0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL,\n-    0xbfde2b5dUL, 0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0x3ff00000UL,\n-    0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL,\n-    0x3c672cedUL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL, 0xbfa60beaUL,\n-    0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL, 0x3c75d28dUL, 0x00000000UL,\n-    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0xbfc8f8b8UL,\n-    0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL,\n-    0xbf73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n-    0x00000000UL, 0x3ff00000UL, 0x55555555UL, 0xbfc55555UL, 0x00000000UL,\n-    0xbfe00000UL, 0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL,\n-    0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL, 0xa556c734UL,\n-    0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL, 0x1a600000UL, 0x3d90b461UL,\n-    0x1a600000UL, 0x3d90b461UL, 0x54400000UL, 0x3fb921fbUL, 0x00000000UL,\n-    0x00000000UL, 0x2e037073UL, 0x3b63198aUL, 0x00000000UL, 0x00000000UL,\n-    0x6dc9c883UL, 0x40245f30UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x43380000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x80000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x80000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-};\n-\/\/registers,\n-\/\/ input: (rbp + 8)\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          eax, ecx, edx, ebx (tmp)\n-\n-\/\/ Code generated by Intel C compiler for LIBM library\n-\n-void MacroAssembler::fast_cos(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label start;\n-\n-  assert_different_registers(tmp, eax, ecx, edx);\n-\n-  address static_const_table_cos = (address)_static_const_table_cos;\n-\n-  bind(start);\n-  subl(rsp, 120);\n-  movl(Address(rsp, 56), tmp);\n-  lea(tmp, ExternalAddress(static_const_table_cos));\n-  movsd(xmm0, Address(rsp, 128));\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  subl(eax, 12336);\n-  cmpl(eax, 4293);\n-  jcc(Assembler::above, L_2TAG_PACKET_0_0_2);\n-  movsd(xmm1, Address(tmp, 2160));\n-  mulsd(xmm1, xmm0);\n-  movdqu(xmm5, Address(tmp, 2240));\n-  movsd(xmm4, Address(tmp, 2224));\n-  pand(xmm4, xmm0);\n-  por(xmm5, xmm4);\n-  movsd(xmm3, Address(tmp, 2128));\n-  movdqu(xmm2, Address(tmp, 2112));\n-  addpd(xmm1, xmm5);\n-  cvttsd2sil(edx, xmm1);\n-  cvtsi2sdl(xmm1, edx);\n-  mulsd(xmm3, xmm1);\n-  unpcklpd(xmm1, xmm1);\n-  addl(edx, 1865232);\n-  movdqu(xmm4, xmm0);\n-  andl(edx, 63);\n-  movdqu(xmm5, Address(tmp, 2096));\n-  lea(eax, Address(tmp, 0));\n-  shll(edx, 5);\n-  addl(eax, edx);\n-  mulpd(xmm2, xmm1);\n-  subsd(xmm0, xmm3);\n-  mulsd(xmm1, Address(tmp, 2144));\n-  subsd(xmm4, xmm3);\n-  movsd(xmm7, Address(eax, 8));\n-  unpcklpd(xmm0, xmm0);\n-  movapd(xmm3, xmm4);\n-  subsd(xmm4, xmm2);\n-  mulpd(xmm5, xmm0);\n-  subpd(xmm0, xmm2);\n-  movdqu(xmm6, Address(tmp, 2064));\n-  mulsd(xmm7, xmm4);\n-  subsd(xmm3, xmm4);\n-  mulpd(xmm5, xmm0);\n-  mulpd(xmm0, xmm0);\n-  subsd(xmm3, xmm2);\n-  movdqu(xmm2, Address(eax, 0));\n-  subsd(xmm1, xmm3);\n-  movsd(xmm3, Address(eax, 24));\n-  addsd(xmm2, xmm3);\n-  subsd(xmm7, xmm2);\n-  mulsd(xmm2, xmm4);\n-  mulpd(xmm6, xmm0);\n-  mulsd(xmm3, xmm4);\n-  mulpd(xmm2, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm5, Address(tmp, 2080));\n-  mulsd(xmm4, Address(eax, 0));\n-  addpd(xmm6, Address(tmp, 2048));\n-  mulpd(xmm5, xmm0);\n-  movapd(xmm0, xmm3);\n-  addsd(xmm3, Address(eax, 8));\n-  mulpd(xmm1, xmm7);\n-  movapd(xmm7, xmm4);\n-  addsd(xmm4, xmm3);\n-  addpd(xmm6, xmm5);\n-  movsd(xmm5, Address(eax, 8));\n-  subsd(xmm5, xmm3);\n-  subsd(xmm3, xmm4);\n-  addsd(xmm1, Address(eax, 16));\n-  mulpd(xmm6, xmm2);\n-  addsd(xmm5, xmm0);\n-  addsd(xmm3, xmm7);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm1, xmm3);\n-  addsd(xmm1, xmm6);\n-  unpckhpd(xmm6, xmm6);\n-  addsd(xmm1, xmm6);\n-  addsd(xmm4, xmm1);\n-  movsd(Address(rsp, 0), xmm4);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  pinsrw(xmm0, eax, 3);\n-  movsd(xmm1, Address(tmp, 2192));\n-  subsd(xmm1, xmm0);\n-  movsd(Address(rsp, 0), xmm1);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movl(eax, Address(rsp, 132));\n-  andl(eax, 2146435072);\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::equal, L_2TAG_PACKET_3_0_2);\n-  subl(rsp, 32);\n-  movsd(Address(rsp, 0), xmm0);\n-  lea(eax, Address(rsp, 40));\n-  movl(Address(rsp, 8), eax);\n-  movl(eax, 1);\n-  movl(Address(rsp, 12), eax);\n-  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_sin_cos_huge())));\n-  addl(rsp, 32);\n-  fld_d(Address(rsp, 8));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  fld_d(Address(rsp, 128));\n-  fmul_d(Address(tmp, 2208));\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  movl(tmp, Address(rsp, 56));\n-}\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_cos.cpp","additions":0,"deletions":866,"binary":false,"changes":866,"status":"deleted"},{"patch":"@@ -1,654 +0,0 @@\n-\/*\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n-* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n-* Intel Math Library (LIBM) Source Code\n-*\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/assembler.inline.hpp\"\n-#include \"macroAssembler_x86.hpp\"\n-#include \"runtime\/stubRoutines.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/******************************************************************************\/\n-\/\/                     ALGORITHM DESCRIPTION - EXP()\n-\/\/                     ---------------------\n-\/\/\n-\/\/ Description:\n-\/\/  Let K = 64 (table size).\n-\/\/        x    x\/log(2)     n\n-\/\/       e  = 2          = 2 * T[j] * (1 + P(y))\n-\/\/  where\n-\/\/       x = m*log(2)\/K + y,    y in [-log(2)\/K..log(2)\/K]\n-\/\/       m = n*K + j,           m,n,j - signed integer, j in [-K\/2..K\/2]\n-\/\/                  j\/K\n-\/\/       values of 2   are tabulated as T[j] = T_hi[j] ( 1 + T_lo[j]).\n-\/\/\n-\/\/       P(y) is a minimax polynomial approximation of exp(x)-1\n-\/\/       on small interval [-log(2)\/K..log(2)\/K] (were calculated by Maple V).\n-\/\/\n-\/\/  To avoid problems with arithmetic overflow and underflow,\n-\/\/            n                        n1  n2\n-\/\/  value of 2  is safely computed as 2 * 2 where n1 in [-BIAS\/2..BIAS\/2]\n-\/\/  where BIAS is a value of exponent bias.\n-\/\/\n-\/\/ Special cases:\n-\/\/  exp(NaN) = NaN\n-\/\/  exp(+INF) = +INF\n-\/\/  exp(-INF) = 0\n-\/\/  exp(x) = 1 for subnormals\n-\/\/  for finite argument, only exp(0)=1 is exact\n-\/\/  For IEEE double\n-\/\/    if x >  709.782712893383973096 then exp(x) overflow\n-\/\/    if x < -745.133219101941108420 then exp(x) underflow\n-\/\/\n-\/******************************************************************************\/\n-\n-#ifdef _LP64\n-\/\/ The 64 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _cv[] =\n-{\n-    0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL, 0xfefa0000UL,\n-    0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL, 0xbc9e3b3aUL, 0x3d1cf79aUL,\n-    0xbc9e3b3aUL, 0x3d1cf79aUL, 0xfffffffeUL, 0x3fdfffffUL, 0xfffffffeUL,\n-    0x3fdfffffUL, 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL, 0x3fa55555UL,\n-    0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _mmask[] =\n-{\n-    0xffffffc0UL, 0x00000000UL, 0xffffffc0UL, 0x00000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _bias[] =\n-{\n-    0x0000ffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _Tbl_addr[] =\n-{\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x0e03754dUL,\n-    0x3cad7bbfUL, 0x3e778060UL, 0x00002c9aUL, 0x3567f613UL, 0x3c8cd252UL,\n-    0xd3158574UL, 0x000059b0UL, 0x61e6c861UL, 0x3c60f74eUL, 0x18759bc8UL,\n-    0x00008745UL, 0x5d837b6cUL, 0x3c979aa6UL, 0x6cf9890fUL, 0x0000b558UL,\n-    0x702f9cd1UL, 0x3c3ebe3dUL, 0x32d3d1a2UL, 0x0000e3ecUL, 0x1e63bcd8UL,\n-    0x3ca3516eUL, 0xd0125b50UL, 0x00011301UL, 0x26f0387bUL, 0x3ca4c554UL,\n-    0xaea92ddfUL, 0x0001429aUL, 0x62523fb6UL, 0x3ca95153UL, 0x3c7d517aUL,\n-    0x000172b8UL, 0x3f1353bfUL, 0x3c8b898cUL, 0xeb6fcb75UL, 0x0001a35bUL,\n-    0x3e3a2f5fUL, 0x3c9aecf7UL, 0x3168b9aaUL, 0x0001d487UL, 0x44a6c38dUL,\n-    0x3c8a6f41UL, 0x88628cd6UL, 0x0002063bUL, 0xe3a8a894UL, 0x3c968efdUL,\n-    0x6e756238UL, 0x0002387aUL, 0x981fe7f2UL, 0x3c80472bUL, 0x65e27cddUL,\n-    0x00026b45UL, 0x6d09ab31UL, 0x3c82f7e1UL, 0xf51fdee1UL, 0x00029e9dUL,\n-    0x720c0ab3UL, 0x3c8b3782UL, 0xa6e4030bUL, 0x0002d285UL, 0x4db0abb6UL,\n-    0x3c834d75UL, 0x0a31b715UL, 0x000306feUL, 0x5dd3f84aUL, 0x3c8fdd39UL,\n-    0xb26416ffUL, 0x00033c08UL, 0xcc187d29UL, 0x3ca12f8cUL, 0x373aa9caUL,\n-    0x000371a7UL, 0x738b5e8bUL, 0x3ca7d229UL, 0x34e59ff6UL, 0x0003a7dbUL,\n-    0xa72a4c6dUL, 0x3c859f48UL, 0x4c123422UL, 0x0003dea6UL, 0x259d9205UL,\n-    0x3ca8b846UL, 0x21f72e29UL, 0x0004160aUL, 0x60c2ac12UL, 0x3c4363edUL,\n-    0x6061892dUL, 0x00044e08UL, 0xdaa10379UL, 0x3c6ecce1UL, 0xb5c13cd0UL,\n-    0x000486a2UL, 0xbb7aafb0UL, 0x3c7690ceUL, 0xd5362a27UL, 0x0004bfdaUL,\n-    0x9b282a09UL, 0x3ca083ccUL, 0x769d2ca6UL, 0x0004f9b2UL, 0xc1aae707UL,\n-    0x3ca509b0UL, 0x569d4f81UL, 0x0005342bUL, 0x18fdd78eUL, 0x3c933505UL,\n-    0x36b527daUL, 0x00056f47UL, 0xe21c5409UL, 0x3c9063e1UL, 0xdd485429UL,\n-    0x0005ab07UL, 0x2b64c035UL, 0x3c9432e6UL, 0x15ad2148UL, 0x0005e76fUL,\n-    0x99f08c0aUL, 0x3ca01284UL, 0xb03a5584UL, 0x0006247eUL, 0x0073dc06UL,\n-    0x3c99f087UL, 0x82552224UL, 0x00066238UL, 0x0da05571UL, 0x3c998d4dUL,\n-    0x667f3bccUL, 0x0006a09eUL, 0x86ce4786UL, 0x3ca52bb9UL, 0x3c651a2eUL,\n-    0x0006dfb2UL, 0x206f0dabUL, 0x3ca32092UL, 0xe8ec5f73UL, 0x00071f75UL,\n-    0x8e17a7a6UL, 0x3ca06122UL, 0x564267c8UL, 0x00075febUL, 0x461e9f86UL,\n-    0x3ca244acUL, 0x73eb0186UL, 0x0007a114UL, 0xabd66c55UL, 0x3c65ebe1UL,\n-    0x36cf4e62UL, 0x0007e2f3UL, 0xbbff67d0UL, 0x3c96fe9fUL, 0x994cce12UL,\n-    0x00082589UL, 0x14c801dfUL, 0x3c951f14UL, 0x9b4492ecUL, 0x000868d9UL,\n-    0xc1f0eab4UL, 0x3c8db72fUL, 0x422aa0dbUL, 0x0008ace5UL, 0x59f35f44UL,\n-    0x3c7bf683UL, 0x99157736UL, 0x0008f1aeUL, 0x9c06283cUL, 0x3ca360baUL,\n-    0xb0cdc5e4UL, 0x00093737UL, 0x20f962aaUL, 0x3c95e8d1UL, 0x9fde4e4fUL,\n-    0x00097d82UL, 0x2b91ce27UL, 0x3c71affcUL, 0x82a3f090UL, 0x0009c491UL,\n-    0x589a2ebdUL, 0x3c9b6d34UL, 0x7b5de564UL, 0x000a0c66UL, 0x9ab89880UL,\n-    0x3c95277cUL, 0xb23e255cUL, 0x000a5503UL, 0x6e735ab3UL, 0x3c846984UL,\n-    0x5579fdbfUL, 0x000a9e6bUL, 0x92cb3387UL, 0x3c8c1a77UL, 0x995ad3adUL,\n-    0x000ae89fUL, 0xdc2d1d96UL, 0x3ca22466UL, 0xb84f15faUL, 0x000b33a2UL,\n-    0xb19505aeUL, 0x3ca1112eUL, 0xf2fb5e46UL, 0x000b7f76UL, 0x0a5fddcdUL,\n-    0x3c74ffd7UL, 0x904bc1d2UL, 0x000bcc1eUL, 0x30af0cb3UL, 0x3c736eaeUL,\n-    0xdd85529cUL, 0x000c199bUL, 0xd10959acUL, 0x3c84e08fUL, 0x2e57d14bUL,\n-    0x000c67f1UL, 0x6c921968UL, 0x3c676b2cUL, 0xdcef9069UL, 0x000cb720UL,\n-    0x36df99b3UL, 0x3c937009UL, 0x4a07897bUL, 0x000d072dUL, 0xa63d07a7UL,\n-    0x3c74a385UL, 0xdcfba487UL, 0x000d5818UL, 0xd5c192acUL, 0x3c8e5a50UL,\n-    0x03db3285UL, 0x000da9e6UL, 0x1c4a9792UL, 0x3c98bb73UL, 0x337b9b5eUL,\n-    0x000dfc97UL, 0x603a88d3UL, 0x3c74b604UL, 0xe78b3ff6UL, 0x000e502eUL,\n-    0x92094926UL, 0x3c916f27UL, 0xa2a490d9UL, 0x000ea4afUL, 0x41aa2008UL,\n-    0x3c8ec3bcUL, 0xee615a27UL, 0x000efa1bUL, 0x31d185eeUL, 0x3c8a64a9UL,\n-    0x5b6e4540UL, 0x000f5076UL, 0x4d91cd9dUL, 0x3c77893bUL, 0x819e90d8UL,\n-    0x000fa7c1UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _ALLONES[] =\n-{\n-    0xffffffffUL, 0xffffffffUL, 0xffffffffUL, 0xffffffffUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _ebias[] =\n-{\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3ff00000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _XMAX[] =\n-{\n-    0xffffffffUL, 0x7fefffffUL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _XMIN[] =\n-{\n-    0x00000000UL, 0x00100000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _INF[] =\n-{\n-    0x00000000UL, 0x7ff00000UL\n-};\n-\n-\n-\n-\/\/ Registers:\n-\/\/ input: xmm0\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          rax, rdx, rcx, tmp - r11\n-\n-\/\/ Code generated by Intel C compiler for LIBM library\n-\n-void MacroAssembler::fast_exp(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n-  Label L_2TAG_PACKET_12_0_2, B1_3, B1_5;\n-\n-  assert_different_registers(tmp, eax, ecx, edx);\n-\n-  address cv       = (address)_cv;\n-  address mmask    = (address)_mmask;\n-  address bias     = (address)_bias;\n-  address Tbl_addr = (address)_Tbl_addr;\n-  address ALLONES  = (address)_ALLONES;\n-  address ebias    = (address)_ebias;\n-  address XMAX     = (address)_XMAX;\n-  address XMIN     = (address)_XMIN;\n-  address INF      = (address)_INF;\n-\n-  subq(rsp, 24);\n-  movsd(Address(rsp, 8), xmm0);\n-  unpcklpd(xmm0, xmm0);\n-  movdqu(xmm1, ExternalAddress(cv),      tmp \/*rscratch*\/); \/\/ 0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL\n-  movdqu(xmm2, ExternalAddress(cv + 16), tmp \/*rscratch*\/); \/\/ 0xfefa0000UL, 0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL\n-  movdqu(xmm3, ExternalAddress(cv + 32), tmp \/*rscratch*\/); \/\/ 0xbc9e3b3aUL, 0x3d1cf79aUL, 0xbc9e3b3aUL, 0x3d1cf79aUL\n-  movdqu(xmm6, ExternalAddress(SHIFTER), tmp \/*rscratch*\/); \/\/ 0x00000000UL, 0x43380000UL, 0x00000000UL, 0x43380000UL\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  movl(edx, 16527);\n-  subl(edx, eax);\n-  subl(eax, 15504);\n-  orl(edx, eax);\n-  cmpl(edx, INT_MIN);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm1, xmm6);\n-  movapd(xmm7, xmm1);\n-  subpd(xmm1, xmm6);\n-  mulpd(xmm2, xmm1);\n-  movdqu(xmm4, ExternalAddress(cv + 64), tmp \/*rscratch*\/);  \/\/ 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL, 0x3fa55555UL\n-  mulpd(xmm3, xmm1);\n-  movdqu(xmm5, ExternalAddress(cv + 80), tmp \/*rscratch*\/);  \/\/ 0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL\n-  subpd(xmm0, xmm2);\n-  movdl(eax, xmm7);\n-  movl(ecx, eax);\n-  andl(ecx, 63);\n-  shll(ecx, 4);\n-  sarl(eax, 6);\n-  movl(edx, eax);\n-  movdqu(xmm6, ExternalAddress(mmask), tmp \/*rscratch*\/);    \/\/ 0xffffffc0UL, 0x00000000UL, 0xffffffc0UL, 0x00000000UL\n-  pand(xmm7, xmm6);\n-  movdqu(xmm6, ExternalAddress(bias), tmp \/*rscratch*\/);     \/\/ 0x0000ffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL\n-  paddq(xmm7, xmm6);\n-  psllq(xmm7, 46);\n-  subpd(xmm0, xmm3);\n-  lea(tmp, ExternalAddress(Tbl_addr));\n-  movdqu(xmm2, Address(ecx, tmp));\n-  mulpd(xmm4, xmm0);\n-  movapd(xmm6, xmm0);\n-  movapd(xmm1, xmm0);\n-  mulpd(xmm6, xmm6);\n-  mulpd(xmm0, xmm6);\n-  addpd(xmm5, xmm4);\n-  mulsd(xmm0, xmm6);\n-  mulpd(xmm6, ExternalAddress(cv + 48), tmp \/*rscratch*\/);     \/\/ 0xfffffffeUL, 0x3fdfffffUL, 0xfffffffeUL, 0x3fdfffffUL\n-  addsd(xmm1, xmm2);\n-  unpckhpd(xmm2, xmm2);\n-  mulpd(xmm0, xmm5);\n-  addsd(xmm1, xmm0);\n-  por(xmm2, xmm7);\n-  unpckhpd(xmm0, xmm0);\n-  addsd(xmm0, xmm1);\n-  addsd(xmm0, xmm6);\n-  addl(edx, 894);\n-  cmpl(edx, 1916);\n-  jcc(Assembler::above, L_2TAG_PACKET_1_0_2);\n-  mulsd(xmm0, xmm2);\n-  addsd(xmm0, xmm2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  xorpd(xmm3, xmm3);\n-  movdqu(xmm4, ExternalAddress(ALLONES), tmp \/*rscratch*\/);  \/\/ 0xffffffffUL, 0xffffffffUL, 0xffffffffUL, 0xffffffffUL\n-  movl(edx, -1022);\n-  subl(edx, eax);\n-  movdl(xmm5, edx);\n-  psllq(xmm4, xmm5);\n-  movl(ecx, eax);\n-  sarl(eax, 1);\n-  pinsrw(xmm3, eax, 3);\n-  movdqu(xmm6, ExternalAddress(ebias), tmp \/*rscratch*\/);    \/\/ 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3ff00000UL\n-  psllq(xmm3, 4);\n-  psubd(xmm2, xmm3);\n-  mulsd(xmm0, xmm2);\n-  cmpl(edx, 52);\n-  jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n-  pand(xmm4, xmm2);\n-  paddd(xmm3, xmm6);\n-  subsd(xmm2, xmm4);\n-  addsd(xmm0, xmm2);\n-  cmpl(ecx, 1023);\n-  jcc(Assembler::greaterEqual, L_2TAG_PACKET_3_0_2);\n-  pextrw(ecx, xmm0, 3);\n-  andl(ecx, 32768);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n-  movapd(xmm6, xmm0);\n-  addsd(xmm0, xmm4);\n-  mulsd(xmm0, xmm3);\n-  pextrw(ecx, xmm0, 3);\n-  andl(ecx, 32752);\n-  cmpl(ecx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_5_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  mulsd(xmm6, xmm3);\n-  mulsd(xmm4, xmm3);\n-  movdqu(xmm0, xmm6);\n-  pxor(xmm6, xmm4);\n-  psrad(xmm6, 31);\n-  pshufd(xmm6, xmm6, 85);\n-  psllq(xmm0, 1);\n-  psrlq(xmm0, 1);\n-  pxor(xmm0, xmm6);\n-  psrlq(xmm6, 63);\n-  paddq(xmm0, xmm6);\n-  paddq(xmm0, xmm4);\n-  movl(Address(rsp, 0), 15);\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  addsd(xmm0, xmm4);\n-  mulsd(xmm0, xmm3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  addsd(xmm0, xmm4);\n-  mulsd(xmm0, xmm3);\n-  pextrw(ecx, xmm0, 3);\n-  andl(ecx, 32752);\n-  cmpl(ecx, 32752);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_7_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  paddd(xmm3, xmm6);\n-  addpd(xmm0, xmm2);\n-  mulsd(xmm0, xmm3);\n-  movl(Address(rsp, 0), 15);\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_9_0_2);\n-  movl(eax, Address(rsp, 12));\n-  cmpl(eax, INT_MIN);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_10_0_2);\n-  movsd(xmm0, ExternalAddress(XMAX), tmp \/*rscratch*\/);      \/\/ 0xffffffffUL, 0x7fefffffUL\n-  mulsd(xmm0, xmm0);\n-\n-  bind(L_2TAG_PACKET_7_0_2);\n-  movl(Address(rsp, 0), 14);\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_10_0_2);\n-  movsd(xmm0, ExternalAddress(XMIN), tmp \/*rscratch*\/);      \/\/ 0x00000000UL, 0x00100000UL\n-  mulsd(xmm0, xmm0);\n-  movl(Address(rsp, 0), 15);\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_9_0_2);\n-  movl(edx, Address(rsp, 8));\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::above, L_2TAG_PACKET_11_0_2);\n-  cmpl(edx, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_11_0_2);\n-  movl(eax, Address(rsp, 12));\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_12_0_2);\n-  movsd(xmm0, ExternalAddress(INF), tmp \/*rscratch*\/);       \/\/ 0x00000000UL, 0x7ff00000UL\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_12_0_2);\n-  movsd(xmm0, ExternalAddress(ZERO), tmp \/*rscratch*\/);      \/\/ 0x00000000UL, 0x00000000UL\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_11_0_2);\n-  movsd(xmm0, Address(rsp, 8));\n-  addsd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  movl(eax, Address(rsp, 12));\n-  andl(eax, 2147483647);\n-  cmpl(eax, 1083179008);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_8_0_2);\n-  movsd(Address(rsp, 8), xmm0);\n-  addsd(xmm0, ExternalAddress(ONE), tmp \/*rscratch*\/); \/\/ 0x00000000UL, 0x3ff00000UL\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  movq(Address(rsp, 16), xmm0);\n-\n-  bind(B1_3);\n-  movq(xmm0, Address(rsp, 16));\n-\n-  bind(B1_5);\n-  addq(rsp, 24);\n-}\n-#else\n-\/\/ The 32 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table[] =\n-{\n-    0x00000000UL, 0xfff00000UL, 0x00000000UL, 0xfff00000UL, 0xffffffc0UL,\n-    0x00000000UL, 0xffffffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL,\n-    0x0000ffc0UL, 0x00000000UL, 0x00000000UL, 0x43380000UL, 0x00000000UL,\n-    0x43380000UL, 0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL,\n-    0xfefa0000UL, 0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL, 0xbc9e3b3aUL,\n-    0x3d1cf79aUL, 0xbc9e3b3aUL, 0x3d1cf79aUL, 0xfffffffeUL, 0x3fdfffffUL,\n-    0xfffffffeUL, 0x3fdfffffUL, 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL,\n-    0x3fa55555UL, 0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x0e03754dUL,\n-    0x3cad7bbfUL, 0x3e778060UL, 0x00002c9aUL, 0x3567f613UL, 0x3c8cd252UL,\n-    0xd3158574UL, 0x000059b0UL, 0x61e6c861UL, 0x3c60f74eUL, 0x18759bc8UL,\n-    0x00008745UL, 0x5d837b6cUL, 0x3c979aa6UL, 0x6cf9890fUL, 0x0000b558UL,\n-    0x702f9cd1UL, 0x3c3ebe3dUL, 0x32d3d1a2UL, 0x0000e3ecUL, 0x1e63bcd8UL,\n-    0x3ca3516eUL, 0xd0125b50UL, 0x00011301UL, 0x26f0387bUL, 0x3ca4c554UL,\n-    0xaea92ddfUL, 0x0001429aUL, 0x62523fb6UL, 0x3ca95153UL, 0x3c7d517aUL,\n-    0x000172b8UL, 0x3f1353bfUL, 0x3c8b898cUL, 0xeb6fcb75UL, 0x0001a35bUL,\n-    0x3e3a2f5fUL, 0x3c9aecf7UL, 0x3168b9aaUL, 0x0001d487UL, 0x44a6c38dUL,\n-    0x3c8a6f41UL, 0x88628cd6UL, 0x0002063bUL, 0xe3a8a894UL, 0x3c968efdUL,\n-    0x6e756238UL, 0x0002387aUL, 0x981fe7f2UL, 0x3c80472bUL, 0x65e27cddUL,\n-    0x00026b45UL, 0x6d09ab31UL, 0x3c82f7e1UL, 0xf51fdee1UL, 0x00029e9dUL,\n-    0x720c0ab3UL, 0x3c8b3782UL, 0xa6e4030bUL, 0x0002d285UL, 0x4db0abb6UL,\n-    0x3c834d75UL, 0x0a31b715UL, 0x000306feUL, 0x5dd3f84aUL, 0x3c8fdd39UL,\n-    0xb26416ffUL, 0x00033c08UL, 0xcc187d29UL, 0x3ca12f8cUL, 0x373aa9caUL,\n-    0x000371a7UL, 0x738b5e8bUL, 0x3ca7d229UL, 0x34e59ff6UL, 0x0003a7dbUL,\n-    0xa72a4c6dUL, 0x3c859f48UL, 0x4c123422UL, 0x0003dea6UL, 0x259d9205UL,\n-    0x3ca8b846UL, 0x21f72e29UL, 0x0004160aUL, 0x60c2ac12UL, 0x3c4363edUL,\n-    0x6061892dUL, 0x00044e08UL, 0xdaa10379UL, 0x3c6ecce1UL, 0xb5c13cd0UL,\n-    0x000486a2UL, 0xbb7aafb0UL, 0x3c7690ceUL, 0xd5362a27UL, 0x0004bfdaUL,\n-    0x9b282a09UL, 0x3ca083ccUL, 0x769d2ca6UL, 0x0004f9b2UL, 0xc1aae707UL,\n-    0x3ca509b0UL, 0x569d4f81UL, 0x0005342bUL, 0x18fdd78eUL, 0x3c933505UL,\n-    0x36b527daUL, 0x00056f47UL, 0xe21c5409UL, 0x3c9063e1UL, 0xdd485429UL,\n-    0x0005ab07UL, 0x2b64c035UL, 0x3c9432e6UL, 0x15ad2148UL, 0x0005e76fUL,\n-    0x99f08c0aUL, 0x3ca01284UL, 0xb03a5584UL, 0x0006247eUL, 0x0073dc06UL,\n-    0x3c99f087UL, 0x82552224UL, 0x00066238UL, 0x0da05571UL, 0x3c998d4dUL,\n-    0x667f3bccUL, 0x0006a09eUL, 0x86ce4786UL, 0x3ca52bb9UL, 0x3c651a2eUL,\n-    0x0006dfb2UL, 0x206f0dabUL, 0x3ca32092UL, 0xe8ec5f73UL, 0x00071f75UL,\n-    0x8e17a7a6UL, 0x3ca06122UL, 0x564267c8UL, 0x00075febUL, 0x461e9f86UL,\n-    0x3ca244acUL, 0x73eb0186UL, 0x0007a114UL, 0xabd66c55UL, 0x3c65ebe1UL,\n-    0x36cf4e62UL, 0x0007e2f3UL, 0xbbff67d0UL, 0x3c96fe9fUL, 0x994cce12UL,\n-    0x00082589UL, 0x14c801dfUL, 0x3c951f14UL, 0x9b4492ecUL, 0x000868d9UL,\n-    0xc1f0eab4UL, 0x3c8db72fUL, 0x422aa0dbUL, 0x0008ace5UL, 0x59f35f44UL,\n-    0x3c7bf683UL, 0x99157736UL, 0x0008f1aeUL, 0x9c06283cUL, 0x3ca360baUL,\n-    0xb0cdc5e4UL, 0x00093737UL, 0x20f962aaUL, 0x3c95e8d1UL, 0x9fde4e4fUL,\n-    0x00097d82UL, 0x2b91ce27UL, 0x3c71affcUL, 0x82a3f090UL, 0x0009c491UL,\n-    0x589a2ebdUL, 0x3c9b6d34UL, 0x7b5de564UL, 0x000a0c66UL, 0x9ab89880UL,\n-    0x3c95277cUL, 0xb23e255cUL, 0x000a5503UL, 0x6e735ab3UL, 0x3c846984UL,\n-    0x5579fdbfUL, 0x000a9e6bUL, 0x92cb3387UL, 0x3c8c1a77UL, 0x995ad3adUL,\n-    0x000ae89fUL, 0xdc2d1d96UL, 0x3ca22466UL, 0xb84f15faUL, 0x000b33a2UL,\n-    0xb19505aeUL, 0x3ca1112eUL, 0xf2fb5e46UL, 0x000b7f76UL, 0x0a5fddcdUL,\n-    0x3c74ffd7UL, 0x904bc1d2UL, 0x000bcc1eUL, 0x30af0cb3UL, 0x3c736eaeUL,\n-    0xdd85529cUL, 0x000c199bUL, 0xd10959acUL, 0x3c84e08fUL, 0x2e57d14bUL,\n-    0x000c67f1UL, 0x6c921968UL, 0x3c676b2cUL, 0xdcef9069UL, 0x000cb720UL,\n-    0x36df99b3UL, 0x3c937009UL, 0x4a07897bUL, 0x000d072dUL, 0xa63d07a7UL,\n-    0x3c74a385UL, 0xdcfba487UL, 0x000d5818UL, 0xd5c192acUL, 0x3c8e5a50UL,\n-    0x03db3285UL, 0x000da9e6UL, 0x1c4a9792UL, 0x3c98bb73UL, 0x337b9b5eUL,\n-    0x000dfc97UL, 0x603a88d3UL, 0x3c74b604UL, 0xe78b3ff6UL, 0x000e502eUL,\n-    0x92094926UL, 0x3c916f27UL, 0xa2a490d9UL, 0x000ea4afUL, 0x41aa2008UL,\n-    0x3c8ec3bcUL, 0xee615a27UL, 0x000efa1bUL, 0x31d185eeUL, 0x3c8a64a9UL,\n-    0x5b6e4540UL, 0x000f5076UL, 0x4d91cd9dUL, 0x3c77893bUL, 0x819e90d8UL,\n-    0x000fa7c1UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x7ff00000UL,\n-    0x00000000UL, 0x00000000UL, 0xffffffffUL, 0x7fefffffUL, 0x00000000UL,\n-    0x00100000UL\n-};\n-\n-\/\/registers,\n-\/\/ input: (rbp + 8)\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          rax, rdx, rcx, rbx (tmp)\n-\n-\/\/ Code generated by Intel C compiler for LIBM library\n-\n-void MacroAssembler::fast_exp(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n-  Label L_2TAG_PACKET_12_0_2;\n-\n-  assert_different_registers(tmp, eax, ecx, edx);\n-  address static_const_table = (address)_static_const_table;\n-\n-  subl(rsp, 120);\n-  movl(Address(rsp, 64), tmp);\n-  lea(tmp, ExternalAddress(static_const_table));\n-  movsd(xmm0, Address(rsp, 128));\n-  unpcklpd(xmm0, xmm0);\n-  movdqu(xmm1, Address(tmp, 64));          \/\/ 0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL\n-  movdqu(xmm6, Address(tmp, 48));          \/\/ 0x00000000UL, 0x43380000UL, 0x00000000UL, 0x43380000UL\n-  movdqu(xmm2, Address(tmp, 80));          \/\/ 0xfefa0000UL, 0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL\n-  movdqu(xmm3, Address(tmp, 96));          \/\/ 0xbc9e3b3aUL, 0x3d1cf79aUL, 0xbc9e3b3aUL, 0x3d1cf79aUL\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  movl(edx, 16527);\n-  subl(edx, eax);\n-  subl(eax, 15504);\n-  orl(edx, eax);\n-  cmpl(edx, INT_MIN);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm1, xmm6);\n-  movapd(xmm7, xmm1);\n-  subpd(xmm1, xmm6);\n-  mulpd(xmm2, xmm1);\n-  movdqu(xmm4, Address(tmp, 128));         \/\/ 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL, 0x3fa55555UL\n-  mulpd(xmm3, xmm1);\n-  movdqu(xmm5, Address(tmp, 144));         \/\/ 0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL\n-  subpd(xmm0, xmm2);\n-  movdl(eax, xmm7);\n-  movl(ecx, eax);\n-  andl(ecx, 63);\n-  shll(ecx, 4);\n-  sarl(eax, 6);\n-  movl(edx, eax);\n-  movdqu(xmm6, Address(tmp, 16));          \/\/ 0xffffffc0UL, 0x00000000UL, 0xffffffc0UL, 0x00000000UL\n-  pand(xmm7, xmm6);\n-  movdqu(xmm6, Address(tmp, 32));          \/\/ 0x0000ffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL\n-  paddq(xmm7, xmm6);\n-  psllq(xmm7, 46);\n-  subpd(xmm0, xmm3);\n-  movdqu(xmm2, Address(tmp, ecx, Address::times_1, 160));\n-  mulpd(xmm4, xmm0);\n-  movapd(xmm6, xmm0);\n-  movapd(xmm1, xmm0);\n-  mulpd(xmm6, xmm6);\n-  mulpd(xmm0, xmm6);\n-  addpd(xmm5, xmm4);\n-  mulsd(xmm0, xmm6);\n-  mulpd(xmm6, Address(tmp, 112));          \/\/ 0xfffffffeUL, 0x3fdfffffUL, 0xfffffffeUL, 0x3fdfffffUL\n-  addsd(xmm1, xmm2);\n-  unpckhpd(xmm2, xmm2);\n-  mulpd(xmm0, xmm5);\n-  addsd(xmm1, xmm0);\n-  por(xmm2, xmm7);\n-  unpckhpd(xmm0, xmm0);\n-  addsd(xmm0, xmm1);\n-  addsd(xmm0, xmm6);\n-  addl(edx, 894);\n-  cmpl(edx, 1916);\n-  jcc(Assembler::above, L_2TAG_PACKET_1_0_2);\n-  mulsd(xmm0, xmm2);\n-  addsd(xmm0, xmm2);\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  fnstcw(Address(rsp, 24));\n-  movzwl(edx, Address(rsp, 24));\n-  orl(edx, 768);\n-  movw(Address(rsp, 28), edx);\n-  fldcw(Address(rsp, 28));\n-  movl(edx, eax);\n-  sarl(eax, 1);\n-  subl(edx, eax);\n-  movdqu(xmm6, Address(tmp, 0));           \/\/ 0x00000000UL, 0xfff00000UL, 0x00000000UL, 0xfff00000UL\n-  pandn(xmm6, xmm2);\n-  addl(eax, 1023);\n-  movdl(xmm3, eax);\n-  psllq(xmm3, 52);\n-  por(xmm6, xmm3);\n-  addl(edx, 1023);\n-  movdl(xmm4, edx);\n-  psllq(xmm4, 52);\n-  movsd(Address(rsp, 8), xmm0);\n-  fld_d(Address(rsp, 8));\n-  movsd(Address(rsp, 16), xmm6);\n-  fld_d(Address(rsp, 16));\n-  fmula(1);\n-  faddp(1);\n-  movsd(Address(rsp, 8), xmm4);\n-  fld_d(Address(rsp, 8));\n-  fmulp(1);\n-  fstp_d(Address(rsp, 8));\n-  movsd(xmm0, Address(rsp, 8));\n-  fldcw(Address(rsp, 24));\n-  pextrw(ecx, xmm0, 3);\n-  andl(ecx, 32752);\n-  cmpl(ecx, 32752);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_3_0_2);\n-  cmpl(ecx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n-  jmp(L_2TAG_PACKET_2_0_2);\n-  cmpl(ecx, INT_MIN);\n-  jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n-  cmpl(ecx, -1064950997);\n-  jcc(Assembler::below, L_2TAG_PACKET_2_0_2);\n-  jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n-  movl(edx, Address(rsp, 128));\n-  cmpl(edx, -17155601);\n-  jcc(Assembler::below, L_2TAG_PACKET_2_0_2);\n-  jmp(L_2TAG_PACKET_4_0_2);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  movl(edx, 14);\n-  jmp(L_2TAG_PACKET_5_0_2);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  movl(edx, 15);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  movsd(Address(rsp, 0), xmm0);\n-  movsd(xmm0, Address(rsp, 128));\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_7_0_2);\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_8_0_2);\n-  movl(eax, Address(rsp, 132));\n-  cmpl(eax, INT_MIN);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_9_0_2);\n-  movsd(xmm0, Address(tmp, 1208));         \/\/ 0xffffffffUL, 0x7fefffffUL\n-  mulsd(xmm0, xmm0);\n-  movl(edx, 14);\n-  jmp(L_2TAG_PACKET_5_0_2);\n-\n-  bind(L_2TAG_PACKET_9_0_2);\n-  movsd(xmm0, Address(tmp, 1216));\n-  mulsd(xmm0, xmm0);\n-  movl(edx, 15);\n-  jmp(L_2TAG_PACKET_5_0_2);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  movl(edx, Address(rsp, 128));\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::above, L_2TAG_PACKET_10_0_2);\n-  cmpl(edx, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_10_0_2);\n-  movl(eax, Address(rsp, 132));\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_11_0_2);\n-  movsd(xmm0, Address(tmp, 1192));         \/\/ 0x00000000UL, 0x7ff00000UL\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_11_0_2);\n-  movsd(xmm0, Address(tmp, 1200));         \/\/ 0x00000000UL, 0x00000000UL\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_10_0_2);\n-  movsd(xmm0, Address(rsp, 128));\n-  addsd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  movl(eax, Address(rsp, 132));\n-  andl(eax, 2147483647);\n-  cmpl(eax, 1083179008);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_7_0_2);\n-  movsd(xmm0, Address(rsp, 128));\n-  addsd(xmm0, Address(tmp, 1184));         \/\/ 0x00000000UL, 0x3ff00000UL\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movsd(Address(rsp, 48), xmm0);\n-  fld_d(Address(rsp, 48));\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  movl(tmp, Address(rsp, 64));\n-}\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_exp.cpp","additions":0,"deletions":654,"binary":false,"changes":654,"status":"deleted"},{"patch":"@@ -1,651 +0,0 @@\n-\/*\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n-* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n-* Intel Math Library (LIBM) Source Code\n-*\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/assembler.inline.hpp\"\n-#include \"macroAssembler_x86.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/******************************************************************************\/\n-\/\/                     ALGORITHM DESCRIPTION - LOG()\n-\/\/                     ---------------------\n-\/\/\n-\/\/    x=2^k * mx, mx in [1,2)\n-\/\/\n-\/\/    Get B~1\/mx based on the output of rcpss instruction (B0)\n-\/\/    B = int((B0*2^7+0.5))\/2^7\n-\/\/\n-\/\/    Reduced argument: r=B*mx-1.0 (computed accurately in high and low parts)\n-\/\/\n-\/\/    Result:  k*log(2) - log(B) + p(r) if |x-1| >= small value (2^-6)  and\n-\/\/             p(r) is a degree 7 polynomial\n-\/\/             -log(B) read from data table (high, low parts)\n-\/\/             Result is formed from high and low parts\n-\/\/\n-\/\/ Special cases:\n-\/\/  log(NaN) = quiet NaN, and raise invalid exception\n-\/\/  log(+INF) = that INF\n-\/\/  log(0) = -INF with divide-by-zero exception raised\n-\/\/  log(1) = +0\n-\/\/  log(x) = NaN with invalid exception raised if x < -0, including -INF\n-\/\/\n-\/******************************************************************************\/\n-\n-#ifdef _LP64\n-\/\/ The 64 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _L_tbl[] =\n-{\n-    0xfefa3800UL, 0x3fe62e42UL, 0x93c76730UL, 0x3d2ef357UL, 0xaa241800UL,\n-    0x3fe5ee82UL, 0x0cda46beUL, 0x3d220238UL, 0x5c364800UL, 0x3fe5af40UL,\n-    0xac10c9fbUL, 0x3d2dfa63UL, 0x26bb8c00UL, 0x3fe5707aUL, 0xff3303ddUL,\n-    0x3d09980bUL, 0x26867800UL, 0x3fe5322eUL, 0x5d257531UL, 0x3d05ccc4UL,\n-    0x835a5000UL, 0x3fe4f45aUL, 0x6d93b8fbUL, 0xbd2e6c51UL, 0x6f970c00UL,\n-    0x3fe4b6fdUL, 0xed4c541cUL, 0x3cef7115UL, 0x27e8a400UL, 0x3fe47a15UL,\n-    0xf94d60aaUL, 0xbd22cb6aUL, 0xf2f92400UL, 0x3fe43d9fUL, 0x481051f7UL,\n-    0xbcfd984fUL, 0x2125cc00UL, 0x3fe4019cUL, 0x30f0c74cUL, 0xbd26ce79UL,\n-    0x0c36c000UL, 0x3fe3c608UL, 0x7cfe13c2UL, 0xbd02b736UL, 0x17197800UL,\n-    0x3fe38ae2UL, 0xbb5569a4UL, 0xbd218b7aUL, 0xad9d8c00UL, 0x3fe35028UL,\n-    0x9527e6acUL, 0x3d10b83fUL, 0x44340800UL, 0x3fe315daUL, 0xc5a0ed9cUL,\n-    0xbd274e93UL, 0x57b0e000UL, 0x3fe2dbf5UL, 0x07b9dc11UL, 0xbd17a6e5UL,\n-    0x6d0ec000UL, 0x3fe2a278UL, 0xe797882dUL, 0x3d206d2bUL, 0x1134dc00UL,\n-    0x3fe26962UL, 0x05226250UL, 0xbd0b61f1UL, 0xd8bebc00UL, 0x3fe230b0UL,\n-    0x6e48667bUL, 0x3d12fc06UL, 0x5fc61800UL, 0x3fe1f863UL, 0xc9fe81d3UL,\n-    0xbd2a7242UL, 0x49ae6000UL, 0x3fe1c078UL, 0xed70e667UL, 0x3cccacdeUL,\n-    0x40f23c00UL, 0x3fe188eeUL, 0xf8ab4650UL, 0x3d14cc4eUL, 0xf6f29800UL,\n-    0x3fe151c3UL, 0xa293ae49UL, 0xbd2edd97UL, 0x23c75c00UL, 0x3fe11af8UL,\n-    0xbb9ddcb2UL, 0xbd258647UL, 0x8611cc00UL, 0x3fe0e489UL, 0x07801742UL,\n-    0x3d1c2998UL, 0xe2d05400UL, 0x3fe0ae76UL, 0x887e7e27UL, 0x3d1f486bUL,\n-    0x0533c400UL, 0x3fe078bfUL, 0x41edf5fdUL, 0x3d268122UL, 0xbe760400UL,\n-    0x3fe04360UL, 0xe79539e0UL, 0xbd04c45fUL, 0xe5b20800UL, 0x3fe00e5aUL,\n-    0xb1727b1cUL, 0xbd053ba3UL, 0xaf7a4800UL, 0x3fdfb358UL, 0x3c164935UL,\n-    0x3d0085faUL, 0xee031800UL, 0x3fdf4aa7UL, 0x6f014a8bUL, 0x3d12cde5UL,\n-    0x56b41000UL, 0x3fdee2a1UL, 0x5a470251UL, 0x3d2f27f4UL, 0xc3ddb000UL,\n-    0x3fde7b42UL, 0x5372bd08UL, 0xbd246550UL, 0x1a272800UL, 0x3fde148aUL,\n-    0x07322938UL, 0xbd1326b2UL, 0x484c9800UL, 0x3fddae75UL, 0x60dc616aUL,\n-    0xbd1ea42dUL, 0x46def800UL, 0x3fdd4902UL, 0xe9a767a8UL, 0x3d235bafUL,\n-    0x18064800UL, 0x3fdce42fUL, 0x3ec7a6b0UL, 0xbd0797c3UL, 0xc7455800UL,\n-    0x3fdc7ff9UL, 0xc15249aeUL, 0xbd29b6ddUL, 0x693fa000UL, 0x3fdc1c60UL,\n-    0x7fe8e180UL, 0x3d2cec80UL, 0x1b80e000UL, 0x3fdbb961UL, 0xf40a666dUL,\n-    0x3d27d85bUL, 0x04462800UL, 0x3fdb56faUL, 0x2d841995UL, 0x3d109525UL,\n-    0x5248d000UL, 0x3fdaf529UL, 0x52774458UL, 0xbd217cc5UL, 0x3c8ad800UL,\n-    0x3fda93edUL, 0xbea77a5dUL, 0x3d1e36f2UL, 0x0224f800UL, 0x3fda3344UL,\n-    0x7f9d79f5UL, 0x3d23c645UL, 0xea15f000UL, 0x3fd9d32bUL, 0x10d0c0b0UL,\n-    0xbd26279eUL, 0x43135800UL, 0x3fd973a3UL, 0xa502d9f0UL, 0xbd152313UL,\n-    0x635bf800UL, 0x3fd914a8UL, 0x2ee6307dUL, 0xbd1766b5UL, 0xa88b3000UL,\n-    0x3fd8b639UL, 0xe5e70470UL, 0xbd205ae1UL, 0x776dc800UL, 0x3fd85855UL,\n-    0x3333778aUL, 0x3d2fd56fUL, 0x3bd81800UL, 0x3fd7fafaUL, 0xc812566aUL,\n-    0xbd272090UL, 0x687cf800UL, 0x3fd79e26UL, 0x2efd1778UL, 0x3d29ec7dUL,\n-    0x76c67800UL, 0x3fd741d8UL, 0x49dc60b3UL, 0x3d2d8b09UL, 0xe6af1800UL,\n-    0x3fd6e60eUL, 0x7c222d87UL, 0x3d172165UL, 0x3e9c6800UL, 0x3fd68ac8UL,\n-    0x2756eba0UL, 0x3d20a0d3UL, 0x0b3ab000UL, 0x3fd63003UL, 0xe731ae00UL,\n-    0xbd2db623UL, 0xdf596000UL, 0x3fd5d5bdUL, 0x08a465dcUL, 0xbd0a0b2aUL,\n-    0x53c8d000UL, 0x3fd57bf7UL, 0xee5d40efUL, 0x3d1fadedUL, 0x0738a000UL,\n-    0x3fd522aeUL, 0x8164c759UL, 0x3d2ebe70UL, 0x9e173000UL, 0x3fd4c9e0UL,\n-    0x1b0ad8a4UL, 0xbd2e2089UL, 0xc271c800UL, 0x3fd4718dUL, 0x0967d675UL,\n-    0xbd2f27ceUL, 0x23d5e800UL, 0x3fd419b4UL, 0xec90e09dUL, 0x3d08e436UL,\n-    0x77333000UL, 0x3fd3c252UL, 0xb606bd5cUL, 0x3d183b54UL, 0x76be1000UL,\n-    0x3fd36b67UL, 0xb0f177c8UL, 0x3d116ecdUL, 0xe1d36000UL, 0x3fd314f1UL,\n-    0xd3213cb8UL, 0xbd28e27aUL, 0x7cdc9000UL, 0x3fd2bef0UL, 0x4a5004f4UL,\n-    0x3d2a9cfaUL, 0x1134d800UL, 0x3fd26962UL, 0xdf5bb3b6UL, 0x3d2c93c1UL,\n-    0x6d0eb800UL, 0x3fd21445UL, 0xba46baeaUL, 0x3d0a87deUL, 0x635a6800UL,\n-    0x3fd1bf99UL, 0x5147bdb7UL, 0x3d2ca6edUL, 0xcbacf800UL, 0x3fd16b5cUL,\n-    0xf7a51681UL, 0x3d2b9acdUL, 0x8227e800UL, 0x3fd1178eUL, 0x63a5f01cUL,\n-    0xbd2c210eUL, 0x67616000UL, 0x3fd0c42dUL, 0x163ceae9UL, 0x3d27188bUL,\n-    0x604d5800UL, 0x3fd07138UL, 0x16ed4e91UL, 0x3cf89cdbUL, 0x5626c800UL,\n-    0x3fd01eaeUL, 0x1485e94aUL, 0xbd16f08cUL, 0x6cb3b000UL, 0x3fcf991cUL,\n-    0xca0cdf30UL, 0x3d1bcbecUL, 0xe4dd0000UL, 0x3fcef5adUL, 0x65bb8e11UL,\n-    0xbcca2115UL, 0xffe71000UL, 0x3fce530eUL, 0x6041f430UL, 0x3cc21227UL,\n-    0xb0d49000UL, 0x3fcdb13dUL, 0xf715b035UL, 0xbd2aff2aUL, 0xf2656000UL,\n-    0x3fcd1037UL, 0x75b6f6e4UL, 0xbd084a7eUL, 0xc6f01000UL, 0x3fcc6ffbUL,\n-    0xc5962bd2UL, 0xbcf1ec72UL, 0x383be000UL, 0x3fcbd087UL, 0x595412b6UL,\n-    0xbd2d4bc4UL, 0x575bd000UL, 0x3fcb31d8UL, 0x4eace1aaUL, 0xbd0c358dUL,\n-    0x3c8ae000UL, 0x3fca93edUL, 0x50562169UL, 0xbd287243UL, 0x07089000UL,\n-    0x3fc9f6c4UL, 0x6865817aUL, 0x3d29904dUL, 0xdcf70000UL, 0x3fc95a5aUL,\n-    0x58a0ff6fUL, 0x3d07f228UL, 0xeb390000UL, 0x3fc8beafUL, 0xaae92cd1UL,\n-    0xbd073d54UL, 0x6551a000UL, 0x3fc823c1UL, 0x9a631e83UL, 0x3d1e0ddbUL,\n-    0x85445000UL, 0x3fc7898dUL, 0x70914305UL, 0xbd1c6610UL, 0x8b757000UL,\n-    0x3fc6f012UL, 0xe59c21e1UL, 0xbd25118dUL, 0xbe8c1000UL, 0x3fc6574eUL,\n-    0x2c3c2e78UL, 0x3d19cf8bUL, 0x6b544000UL, 0x3fc5bf40UL, 0xeb68981cUL,\n-    0xbd127023UL, 0xe4a1b000UL, 0x3fc527e5UL, 0xe5697dc7UL, 0x3d2633e8UL,\n-    0x8333b000UL, 0x3fc4913dUL, 0x54fdb678UL, 0x3d258379UL, 0xa5993000UL,\n-    0x3fc3fb45UL, 0x7e6a354dUL, 0xbd2cd1d8UL, 0xb0159000UL, 0x3fc365fcUL,\n-    0x234b7289UL, 0x3cc62fa8UL, 0x0c868000UL, 0x3fc2d161UL, 0xcb81b4a1UL,\n-    0x3d039d6cUL, 0x2a49c000UL, 0x3fc23d71UL, 0x8fd3df5cUL, 0x3d100d23UL,\n-    0x7e23f000UL, 0x3fc1aa2bUL, 0x44389934UL, 0x3d2ca78eUL, 0x8227e000UL,\n-    0x3fc1178eUL, 0xce2d07f2UL, 0x3d21ef78UL, 0xb59e4000UL, 0x3fc08598UL,\n-    0x7009902cUL, 0xbd27e5ddUL, 0x39dbe000UL, 0x3fbfe891UL, 0x4fa10afdUL,\n-    0xbd2534d6UL, 0x830a2000UL, 0x3fbec739UL, 0xafe645e0UL, 0xbd2dc068UL,\n-    0x63844000UL, 0x3fbda727UL, 0x1fa71733UL, 0x3d1a8940UL, 0x01bc4000UL,\n-    0x3fbc8858UL, 0xc65aacd3UL, 0x3d2646d1UL, 0x8dad6000UL, 0x3fbb6ac8UL,\n-    0x2bf768e5UL, 0xbd139080UL, 0x40b1c000UL, 0x3fba4e76UL, 0xb94407c8UL,\n-    0xbd0e42b6UL, 0x5d594000UL, 0x3fb9335eUL, 0x3abd47daUL, 0x3d23115cUL,\n-    0x2f40e000UL, 0x3fb8197eUL, 0xf96ffdf7UL, 0x3d0f80dcUL, 0x0aeac000UL,\n-    0x3fb700d3UL, 0xa99ded32UL, 0x3cec1e8dUL, 0x4d97a000UL, 0x3fb5e95aUL,\n-    0x3c5d1d1eUL, 0xbd2c6906UL, 0x5d208000UL, 0x3fb4d311UL, 0x82f4e1efUL,\n-    0xbcf53a25UL, 0xa7d1e000UL, 0x3fb3bdf5UL, 0xa5db4ed7UL, 0x3d2cc85eUL,\n-    0xa4472000UL, 0x3fb2aa04UL, 0xae9c697dUL, 0xbd20b6e8UL, 0xd1466000UL,\n-    0x3fb1973bUL, 0x560d9e9bUL, 0xbd25325dUL, 0xb59e4000UL, 0x3fb08598UL,\n-    0x7009902cUL, 0xbd17e5ddUL, 0xc006c000UL, 0x3faeea31UL, 0x4fc93b7bUL,\n-    0xbd0e113eUL, 0xcdddc000UL, 0x3faccb73UL, 0x47d82807UL, 0xbd1a68f2UL,\n-    0xd0fb0000UL, 0x3faaaef2UL, 0x353bb42eUL, 0x3d20fc1aUL, 0x149fc000UL,\n-    0x3fa894aaUL, 0xd05a267dUL, 0xbd197995UL, 0xf2d4c000UL, 0x3fa67c94UL,\n-    0xec19afa2UL, 0xbd029efbUL, 0xd42e0000UL, 0x3fa466aeUL, 0x75bdfd28UL,\n-    0xbd2c1673UL, 0x2f8d0000UL, 0x3fa252f3UL, 0xe021b67bUL, 0x3d283e9aUL,\n-    0x89e74000UL, 0x3fa0415dUL, 0x5cf1d753UL, 0x3d0111c0UL, 0xec148000UL,\n-    0x3f9c63d2UL, 0x3f9eb2f3UL, 0x3d2578c6UL, 0x28c90000UL, 0x3f984925UL,\n-    0x325a0c34UL, 0xbd2aa0baUL, 0x25980000UL, 0x3f9432a9UL, 0x928637feUL,\n-    0x3d098139UL, 0x58938000UL, 0x3f902056UL, 0x06e2f7d2UL, 0xbd23dc5bUL,\n-    0xa3890000UL, 0x3f882448UL, 0xda74f640UL, 0xbd275577UL, 0x75890000UL,\n-    0x3f801015UL, 0x999d2be8UL, 0xbd10c76bUL, 0x59580000UL, 0x3f700805UL,\n-    0xcb31c67bUL, 0x3d2166afUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x80000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _log2[] =\n-{\n-    0xfefa3800UL, 0x3fa62e42UL, 0x93c76730UL, 0x3ceef357UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _coeff[] =\n-{\n-    0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL, 0x3d6fb175UL,\n-    0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL, 0x9999999aUL, 0x3fc99999UL,\n-    0x00000000UL, 0xbfe00000UL\n-};\n-\n-\/\/registers,\n-\/\/ input: xmm0\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          rax, rdx, rcx, r8, r11\n-\n-void MacroAssembler::fast_log(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx, Register tmp1, Register tmp2) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2;\n-  Label B1_3, B1_5;\n-\n-  assert_different_registers(tmp1, tmp2, eax, ecx, edx);\n-  address L_tbl = (address)_L_tbl;\n-  address log2  = (address)_log2;\n-  address coeff = (address)_coeff;\n-\n-  subq(rsp, 24);\n-  movsd(Address(rsp, 0), xmm0);\n-  mov64(rax, 0x3ff0000000000000);\n-  movdq(xmm2, rax);\n-  mov64(rdx, 0x77f0000000000000);\n-  movdq(xmm3, rdx);\n-  movl(ecx, 32768);\n-  movdl(xmm4, rcx);\n-  mov64(tmp1, 0xffffe00000000000);\n-  movdq(xmm5, tmp1);\n-  movdqu(xmm1, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 16352);\n-  psrlq(xmm0, 27);\n-  lea(tmp2, ExternalAddress(L_tbl));\n-  psrld(xmm0, 2);\n-  rcpps(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 228);\n-  psrlq(xmm1, 12);\n-  subl(eax, 16);\n-  cmpl(eax, 32736);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  paddd(xmm0, xmm4);\n-  por(xmm1, xmm3);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  pand(xmm5, xmm1);\n-  pand(xmm0, xmm6);\n-  subsd(xmm1, xmm5);\n-  mulpd(xmm5, xmm0);\n-  andl(eax, 32752);\n-  subl(eax, ecx);\n-  cvtsi2sdl(xmm7, eax);\n-  mulsd(xmm1, xmm0);\n-  movq(xmm6, ExternalAddress(log2), tmp1 \/*rscratch*\/);       \/\/ 0xfefa3800UL, 0x3fa62e42UL\n-  movdqu(xmm3, ExternalAddress(coeff), tmp1 \/*rscratch*\/);    \/\/ 0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL\n-  subsd(xmm5, xmm2);\n-  andl(edx, 16711680);\n-  shrl(edx, 12);\n-  movdqu(xmm0, Address(tmp2, edx));\n-  movdqu(xmm4, ExternalAddress(coeff + 16), tmp1 \/*rscratch*\/); \/\/ 0x3d6fb175UL, 0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL\n-  addsd(xmm1, xmm5);\n-  movdqu(xmm2, ExternalAddress(coeff + 32), tmp1 \/*rscratch*\/); \/\/ 0x9999999aUL, 0x3fc99999UL, 0x00000000UL, 0xbfe00000UL\n-  mulsd(xmm6, xmm7);\n-  if (VM_Version::supports_sse3()) {\n-    movddup(xmm5, xmm1);\n-  }\n-  else {\n-    movdqu(xmm5, xmm1);\n-    movlhps(xmm5, xmm5);\n-  }\n-  mulsd(xmm7, ExternalAddress(log2 + 8), tmp1 \/*rscratch*\/);    \/\/ 0x93c76730UL, 0x3ceef357UL\n-  mulsd(xmm3, xmm1);\n-  addsd(xmm0, xmm6);\n-  mulpd(xmm4, xmm5);\n-  mulpd(xmm5, xmm5);\n-  if (VM_Version::supports_sse3()) {\n-    movddup(xmm6, xmm0);\n-  }\n-  else {\n-    movdqu(xmm6, xmm0);\n-    movlhps(xmm6, xmm6);\n-  }\n-  addsd(xmm0, xmm1);\n-  addpd(xmm4, xmm2);\n-  mulpd(xmm3, xmm5);\n-  subsd(xmm6, xmm0);\n-  mulsd(xmm4, xmm1);\n-  pshufd(xmm2, xmm0, 238);\n-  addsd(xmm1, xmm6);\n-  mulsd(xmm5, xmm5);\n-  addsd(xmm7, xmm2);\n-  addpd(xmm4, xmm3);\n-  addsd(xmm1, xmm7);\n-  mulpd(xmm4, xmm5);\n-  addsd(xmm1, xmm4);\n-  pshufd(xmm5, xmm4, 238);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm0, xmm1);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  movq(xmm0, Address(rsp, 0));\n-  movq(xmm1, Address(rsp, 0));\n-  addl(eax, 16);\n-  cmpl(eax, 32768);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_2_0_2);\n-  cmpl(eax, 16);\n-  jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  addsd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n-  cmpl(edx, 0);\n-  jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  xorpd(xmm1, xmm1);\n-  addsd(xmm1, xmm0);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(eax, 18416);\n-  pinsrw(xmm1, eax, 3);\n-  mulsd(xmm0, xmm1);\n-  movdqu(xmm1, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  psrlq(xmm0, 27);\n-  movl(ecx, 18416);\n-  psrld(xmm0, 2);\n-  rcpps(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 228);\n-  psrlq(xmm1, 12);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  addl(ecx, ecx);\n-  cmpl(ecx, -2097152);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32752);\n-  pinsrw(xmm1, eax, 3);\n-  mulsd(xmm0, xmm1);\n-  movl(Address(rsp, 16), 3);\n-  jmp(L_2TAG_PACKET_8_0_2);\n-  bind(L_2TAG_PACKET_7_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 49136);\n-  pinsrw(xmm0, eax, 3);\n-  divsd(xmm0, xmm1);\n-  movl(Address(rsp, 16), 2);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  movq(Address(rsp, 8), xmm0);\n-\n-  bind(B1_3);\n-  movq(xmm0, Address(rsp, 8));\n-\n-  bind(B1_5);\n-  addq(rsp, 24);\n-}\n-#else\n-\/\/ The 32 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_log[] =\n-{\n-    0xfefa3800UL, 0x3fe62e42UL, 0x93c76730UL, 0x3d2ef357UL, 0xaa241800UL,\n-    0x3fe5ee82UL, 0x0cda46beUL, 0x3d220238UL, 0x5c364800UL, 0x3fe5af40UL,\n-    0xac10c9fbUL, 0x3d2dfa63UL, 0x26bb8c00UL, 0x3fe5707aUL, 0xff3303ddUL,\n-    0x3d09980bUL, 0x26867800UL, 0x3fe5322eUL, 0x5d257531UL, 0x3d05ccc4UL,\n-    0x835a5000UL, 0x3fe4f45aUL, 0x6d93b8fbUL, 0xbd2e6c51UL, 0x6f970c00UL,\n-    0x3fe4b6fdUL, 0xed4c541cUL, 0x3cef7115UL, 0x27e8a400UL, 0x3fe47a15UL,\n-    0xf94d60aaUL, 0xbd22cb6aUL, 0xf2f92400UL, 0x3fe43d9fUL, 0x481051f7UL,\n-    0xbcfd984fUL, 0x2125cc00UL, 0x3fe4019cUL, 0x30f0c74cUL, 0xbd26ce79UL,\n-    0x0c36c000UL, 0x3fe3c608UL, 0x7cfe13c2UL, 0xbd02b736UL, 0x17197800UL,\n-    0x3fe38ae2UL, 0xbb5569a4UL, 0xbd218b7aUL, 0xad9d8c00UL, 0x3fe35028UL,\n-    0x9527e6acUL, 0x3d10b83fUL, 0x44340800UL, 0x3fe315daUL, 0xc5a0ed9cUL,\n-    0xbd274e93UL, 0x57b0e000UL, 0x3fe2dbf5UL, 0x07b9dc11UL, 0xbd17a6e5UL,\n-    0x6d0ec000UL, 0x3fe2a278UL, 0xe797882dUL, 0x3d206d2bUL, 0x1134dc00UL,\n-    0x3fe26962UL, 0x05226250UL, 0xbd0b61f1UL, 0xd8bebc00UL, 0x3fe230b0UL,\n-    0x6e48667bUL, 0x3d12fc06UL, 0x5fc61800UL, 0x3fe1f863UL, 0xc9fe81d3UL,\n-    0xbd2a7242UL, 0x49ae6000UL, 0x3fe1c078UL, 0xed70e667UL, 0x3cccacdeUL,\n-    0x40f23c00UL, 0x3fe188eeUL, 0xf8ab4650UL, 0x3d14cc4eUL, 0xf6f29800UL,\n-    0x3fe151c3UL, 0xa293ae49UL, 0xbd2edd97UL, 0x23c75c00UL, 0x3fe11af8UL,\n-    0xbb9ddcb2UL, 0xbd258647UL, 0x8611cc00UL, 0x3fe0e489UL, 0x07801742UL,\n-    0x3d1c2998UL, 0xe2d05400UL, 0x3fe0ae76UL, 0x887e7e27UL, 0x3d1f486bUL,\n-    0x0533c400UL, 0x3fe078bfUL, 0x41edf5fdUL, 0x3d268122UL, 0xbe760400UL,\n-    0x3fe04360UL, 0xe79539e0UL, 0xbd04c45fUL, 0xe5b20800UL, 0x3fe00e5aUL,\n-    0xb1727b1cUL, 0xbd053ba3UL, 0xaf7a4800UL, 0x3fdfb358UL, 0x3c164935UL,\n-    0x3d0085faUL, 0xee031800UL, 0x3fdf4aa7UL, 0x6f014a8bUL, 0x3d12cde5UL,\n-    0x56b41000UL, 0x3fdee2a1UL, 0x5a470251UL, 0x3d2f27f4UL, 0xc3ddb000UL,\n-    0x3fde7b42UL, 0x5372bd08UL, 0xbd246550UL, 0x1a272800UL, 0x3fde148aUL,\n-    0x07322938UL, 0xbd1326b2UL, 0x484c9800UL, 0x3fddae75UL, 0x60dc616aUL,\n-    0xbd1ea42dUL, 0x46def800UL, 0x3fdd4902UL, 0xe9a767a8UL, 0x3d235bafUL,\n-    0x18064800UL, 0x3fdce42fUL, 0x3ec7a6b0UL, 0xbd0797c3UL, 0xc7455800UL,\n-    0x3fdc7ff9UL, 0xc15249aeUL, 0xbd29b6ddUL, 0x693fa000UL, 0x3fdc1c60UL,\n-    0x7fe8e180UL, 0x3d2cec80UL, 0x1b80e000UL, 0x3fdbb961UL, 0xf40a666dUL,\n-    0x3d27d85bUL, 0x04462800UL, 0x3fdb56faUL, 0x2d841995UL, 0x3d109525UL,\n-    0x5248d000UL, 0x3fdaf529UL, 0x52774458UL, 0xbd217cc5UL, 0x3c8ad800UL,\n-    0x3fda93edUL, 0xbea77a5dUL, 0x3d1e36f2UL, 0x0224f800UL, 0x3fda3344UL,\n-    0x7f9d79f5UL, 0x3d23c645UL, 0xea15f000UL, 0x3fd9d32bUL, 0x10d0c0b0UL,\n-    0xbd26279eUL, 0x43135800UL, 0x3fd973a3UL, 0xa502d9f0UL, 0xbd152313UL,\n-    0x635bf800UL, 0x3fd914a8UL, 0x2ee6307dUL, 0xbd1766b5UL, 0xa88b3000UL,\n-    0x3fd8b639UL, 0xe5e70470UL, 0xbd205ae1UL, 0x776dc800UL, 0x3fd85855UL,\n-    0x3333778aUL, 0x3d2fd56fUL, 0x3bd81800UL, 0x3fd7fafaUL, 0xc812566aUL,\n-    0xbd272090UL, 0x687cf800UL, 0x3fd79e26UL, 0x2efd1778UL, 0x3d29ec7dUL,\n-    0x76c67800UL, 0x3fd741d8UL, 0x49dc60b3UL, 0x3d2d8b09UL, 0xe6af1800UL,\n-    0x3fd6e60eUL, 0x7c222d87UL, 0x3d172165UL, 0x3e9c6800UL, 0x3fd68ac8UL,\n-    0x2756eba0UL, 0x3d20a0d3UL, 0x0b3ab000UL, 0x3fd63003UL, 0xe731ae00UL,\n-    0xbd2db623UL, 0xdf596000UL, 0x3fd5d5bdUL, 0x08a465dcUL, 0xbd0a0b2aUL,\n-    0x53c8d000UL, 0x3fd57bf7UL, 0xee5d40efUL, 0x3d1fadedUL, 0x0738a000UL,\n-    0x3fd522aeUL, 0x8164c759UL, 0x3d2ebe70UL, 0x9e173000UL, 0x3fd4c9e0UL,\n-    0x1b0ad8a4UL, 0xbd2e2089UL, 0xc271c800UL, 0x3fd4718dUL, 0x0967d675UL,\n-    0xbd2f27ceUL, 0x23d5e800UL, 0x3fd419b4UL, 0xec90e09dUL, 0x3d08e436UL,\n-    0x77333000UL, 0x3fd3c252UL, 0xb606bd5cUL, 0x3d183b54UL, 0x76be1000UL,\n-    0x3fd36b67UL, 0xb0f177c8UL, 0x3d116ecdUL, 0xe1d36000UL, 0x3fd314f1UL,\n-    0xd3213cb8UL, 0xbd28e27aUL, 0x7cdc9000UL, 0x3fd2bef0UL, 0x4a5004f4UL,\n-    0x3d2a9cfaUL, 0x1134d800UL, 0x3fd26962UL, 0xdf5bb3b6UL, 0x3d2c93c1UL,\n-    0x6d0eb800UL, 0x3fd21445UL, 0xba46baeaUL, 0x3d0a87deUL, 0x635a6800UL,\n-    0x3fd1bf99UL, 0x5147bdb7UL, 0x3d2ca6edUL, 0xcbacf800UL, 0x3fd16b5cUL,\n-    0xf7a51681UL, 0x3d2b9acdUL, 0x8227e800UL, 0x3fd1178eUL, 0x63a5f01cUL,\n-    0xbd2c210eUL, 0x67616000UL, 0x3fd0c42dUL, 0x163ceae9UL, 0x3d27188bUL,\n-    0x604d5800UL, 0x3fd07138UL, 0x16ed4e91UL, 0x3cf89cdbUL, 0x5626c800UL,\n-    0x3fd01eaeUL, 0x1485e94aUL, 0xbd16f08cUL, 0x6cb3b000UL, 0x3fcf991cUL,\n-    0xca0cdf30UL, 0x3d1bcbecUL, 0xe4dd0000UL, 0x3fcef5adUL, 0x65bb8e11UL,\n-    0xbcca2115UL, 0xffe71000UL, 0x3fce530eUL, 0x6041f430UL, 0x3cc21227UL,\n-    0xb0d49000UL, 0x3fcdb13dUL, 0xf715b035UL, 0xbd2aff2aUL, 0xf2656000UL,\n-    0x3fcd1037UL, 0x75b6f6e4UL, 0xbd084a7eUL, 0xc6f01000UL, 0x3fcc6ffbUL,\n-    0xc5962bd2UL, 0xbcf1ec72UL, 0x383be000UL, 0x3fcbd087UL, 0x595412b6UL,\n-    0xbd2d4bc4UL, 0x575bd000UL, 0x3fcb31d8UL, 0x4eace1aaUL, 0xbd0c358dUL,\n-    0x3c8ae000UL, 0x3fca93edUL, 0x50562169UL, 0xbd287243UL, 0x07089000UL,\n-    0x3fc9f6c4UL, 0x6865817aUL, 0x3d29904dUL, 0xdcf70000UL, 0x3fc95a5aUL,\n-    0x58a0ff6fUL, 0x3d07f228UL, 0xeb390000UL, 0x3fc8beafUL, 0xaae92cd1UL,\n-    0xbd073d54UL, 0x6551a000UL, 0x3fc823c1UL, 0x9a631e83UL, 0x3d1e0ddbUL,\n-    0x85445000UL, 0x3fc7898dUL, 0x70914305UL, 0xbd1c6610UL, 0x8b757000UL,\n-    0x3fc6f012UL, 0xe59c21e1UL, 0xbd25118dUL, 0xbe8c1000UL, 0x3fc6574eUL,\n-    0x2c3c2e78UL, 0x3d19cf8bUL, 0x6b544000UL, 0x3fc5bf40UL, 0xeb68981cUL,\n-    0xbd127023UL, 0xe4a1b000UL, 0x3fc527e5UL, 0xe5697dc7UL, 0x3d2633e8UL,\n-    0x8333b000UL, 0x3fc4913dUL, 0x54fdb678UL, 0x3d258379UL, 0xa5993000UL,\n-    0x3fc3fb45UL, 0x7e6a354dUL, 0xbd2cd1d8UL, 0xb0159000UL, 0x3fc365fcUL,\n-    0x234b7289UL, 0x3cc62fa8UL, 0x0c868000UL, 0x3fc2d161UL, 0xcb81b4a1UL,\n-    0x3d039d6cUL, 0x2a49c000UL, 0x3fc23d71UL, 0x8fd3df5cUL, 0x3d100d23UL,\n-    0x7e23f000UL, 0x3fc1aa2bUL, 0x44389934UL, 0x3d2ca78eUL, 0x8227e000UL,\n-    0x3fc1178eUL, 0xce2d07f2UL, 0x3d21ef78UL, 0xb59e4000UL, 0x3fc08598UL,\n-    0x7009902cUL, 0xbd27e5ddUL, 0x39dbe000UL, 0x3fbfe891UL, 0x4fa10afdUL,\n-    0xbd2534d6UL, 0x830a2000UL, 0x3fbec739UL, 0xafe645e0UL, 0xbd2dc068UL,\n-    0x63844000UL, 0x3fbda727UL, 0x1fa71733UL, 0x3d1a8940UL, 0x01bc4000UL,\n-    0x3fbc8858UL, 0xc65aacd3UL, 0x3d2646d1UL, 0x8dad6000UL, 0x3fbb6ac8UL,\n-    0x2bf768e5UL, 0xbd139080UL, 0x40b1c000UL, 0x3fba4e76UL, 0xb94407c8UL,\n-    0xbd0e42b6UL, 0x5d594000UL, 0x3fb9335eUL, 0x3abd47daUL, 0x3d23115cUL,\n-    0x2f40e000UL, 0x3fb8197eUL, 0xf96ffdf7UL, 0x3d0f80dcUL, 0x0aeac000UL,\n-    0x3fb700d3UL, 0xa99ded32UL, 0x3cec1e8dUL, 0x4d97a000UL, 0x3fb5e95aUL,\n-    0x3c5d1d1eUL, 0xbd2c6906UL, 0x5d208000UL, 0x3fb4d311UL, 0x82f4e1efUL,\n-    0xbcf53a25UL, 0xa7d1e000UL, 0x3fb3bdf5UL, 0xa5db4ed7UL, 0x3d2cc85eUL,\n-    0xa4472000UL, 0x3fb2aa04UL, 0xae9c697dUL, 0xbd20b6e8UL, 0xd1466000UL,\n-    0x3fb1973bUL, 0x560d9e9bUL, 0xbd25325dUL, 0xb59e4000UL, 0x3fb08598UL,\n-    0x7009902cUL, 0xbd17e5ddUL, 0xc006c000UL, 0x3faeea31UL, 0x4fc93b7bUL,\n-    0xbd0e113eUL, 0xcdddc000UL, 0x3faccb73UL, 0x47d82807UL, 0xbd1a68f2UL,\n-    0xd0fb0000UL, 0x3faaaef2UL, 0x353bb42eUL, 0x3d20fc1aUL, 0x149fc000UL,\n-    0x3fa894aaUL, 0xd05a267dUL, 0xbd197995UL, 0xf2d4c000UL, 0x3fa67c94UL,\n-    0xec19afa2UL, 0xbd029efbUL, 0xd42e0000UL, 0x3fa466aeUL, 0x75bdfd28UL,\n-    0xbd2c1673UL, 0x2f8d0000UL, 0x3fa252f3UL, 0xe021b67bUL, 0x3d283e9aUL,\n-    0x89e74000UL, 0x3fa0415dUL, 0x5cf1d753UL, 0x3d0111c0UL, 0xec148000UL,\n-    0x3f9c63d2UL, 0x3f9eb2f3UL, 0x3d2578c6UL, 0x28c90000UL, 0x3f984925UL,\n-    0x325a0c34UL, 0xbd2aa0baUL, 0x25980000UL, 0x3f9432a9UL, 0x928637feUL,\n-    0x3d098139UL, 0x58938000UL, 0x3f902056UL, 0x06e2f7d2UL, 0xbd23dc5bUL,\n-    0xa3890000UL, 0x3f882448UL, 0xda74f640UL, 0xbd275577UL, 0x75890000UL,\n-    0x3f801015UL, 0x999d2be8UL, 0xbd10c76bUL, 0x59580000UL, 0x3f700805UL,\n-    0xcb31c67bUL, 0x3d2166afUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x80000000UL, 0xfefa3800UL, 0x3fa62e42UL, 0x93c76730UL, 0x3ceef357UL,\n-    0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL, 0x3d6fb175UL,\n-    0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL, 0x9999999aUL, 0x3fc99999UL,\n-    0x00000000UL, 0xbfe00000UL, 0x00000000UL, 0xffffe000UL, 0x00000000UL,\n-    0xffffe000UL\n-};\n-\/\/registers,\n-\/\/ input: xmm0\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          rax, rdx, rcx, rbx (tmp)\n-\n-void MacroAssembler::fast_log(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2;\n-  Label L_2TAG_PACKET_10_0_2;\n-\n-  assert_different_registers(tmp, eax, ecx, edx);\n-  address static_const_table = (address)_static_const_table_log;\n-\n-  subl(rsp, 104);\n-  movl(Address(rsp, 40), tmp);\n-  lea(tmp, ExternalAddress(static_const_table));\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  xorpd(xmm3, xmm3);\n-  movl(edx, 30704);\n-  pinsrw(xmm3, edx, 3);\n-  movsd(xmm0, Address(rsp, 112));\n-  movapd(xmm1, xmm0);\n-  movl(ecx, 32768);\n-  movdl(xmm4, ecx);\n-  movsd(xmm5, Address(tmp, 2128));         \/\/ 0x00000000UL, 0xffffe000UL\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  psllq(xmm0, 5);\n-  movl(ecx, 16352);\n-  psrlq(xmm0, 34);\n-  rcpss(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 228);\n-  psrlq(xmm1, 12);\n-  subl(eax, 16);\n-  cmpl(eax, 32736);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  paddd(xmm0, xmm4);\n-  por(xmm1, xmm3);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  pand(xmm5, xmm1);\n-  pand(xmm0, xmm6);\n-  subsd(xmm1, xmm5);\n-  mulpd(xmm5, xmm0);\n-  andl(eax, 32752);\n-  subl(eax, ecx);\n-  cvtsi2sdl(xmm7, eax);\n-  mulsd(xmm1, xmm0);\n-  movsd(xmm6, Address(tmp, 2064));         \/\/ 0xfefa3800UL, 0x3fa62e42UL\n-  movdqu(xmm3, Address(tmp, 2080));        \/\/ 0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL\n-  subsd(xmm5, xmm2);\n-  andl(edx, 16711680);\n-  shrl(edx, 12);\n-  movdqu(xmm0, Address(tmp, edx));\n-  movdqu(xmm4, Address(tmp, 2096));        \/\/ 0x3d6fb175UL, 0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL\n-  addsd(xmm1, xmm5);\n-  movdqu(xmm2, Address(tmp, 2112));        \/\/ 0x9999999aUL, 0x3fc99999UL, 0x00000000UL, 0xbfe00000UL\n-  mulsd(xmm6, xmm7);\n-  pshufd(xmm5, xmm1, 68);\n-  mulsd(xmm7, Address(tmp, 2072));         \/\/ 0x93c76730UL, 0x3ceef357UL, 0x92492492UL, 0x3fc24924UL\n-  mulsd(xmm3, xmm1);\n-  addsd(xmm0, xmm6);\n-  mulpd(xmm4, xmm5);\n-  mulpd(xmm5, xmm5);\n-  pshufd(xmm6, xmm0, 228);\n-  addsd(xmm0, xmm1);\n-  addpd(xmm4, xmm2);\n-  mulpd(xmm3, xmm5);\n-  subsd(xmm6, xmm0);\n-  mulsd(xmm4, xmm1);\n-  pshufd(xmm2, xmm0, 238);\n-  addsd(xmm1, xmm6);\n-  mulsd(xmm5, xmm5);\n-  addsd(xmm7, xmm2);\n-  addpd(xmm4, xmm3);\n-  addsd(xmm1, xmm7);\n-  mulpd(xmm4, xmm5);\n-  addsd(xmm1, xmm4);\n-  pshufd(xmm5, xmm4, 238);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm0, xmm1);\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  movsd(xmm0, Address(rsp, 112));\n-  movdqu(xmm1, xmm0);\n-  addl(eax, 16);\n-  cmpl(eax, 32768);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_3_0_2);\n-  cmpl(eax, 16);\n-  jcc(Assembler::below, L_2TAG_PACKET_4_0_2);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  addsd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n-  cmpl(edx, 0);\n-  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n-  jmp(L_2TAG_PACKET_7_0_2);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  addl(ecx, ecx);\n-  cmpl(ecx, -2097152);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_6_0_2);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n-\n-  bind(L_2TAG_PACKET_7_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32752);\n-  pinsrw(xmm1, eax, 3);\n-  movl(edx, 3);\n-  mulsd(xmm0, xmm1);\n-\n-  bind(L_2TAG_PACKET_9_0_2);\n-  movsd(Address(rsp, 0), xmm0);\n-  movsd(xmm0, Address(rsp, 112));\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_10_0_2);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 49136);\n-  pinsrw(xmm0, eax, 3);\n-  divsd(xmm0, xmm1);\n-  movl(edx, 2);\n-  jmp(L_2TAG_PACKET_9_0_2);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(eax, 18416);\n-  pinsrw(xmm1, eax, 3);\n-  mulsd(xmm0, xmm1);\n-  movapd(xmm1, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  psllq(xmm0, 5);\n-  movl(ecx, 18416);\n-  psrlq(xmm0, 34);\n-  rcpss(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 228);\n-  psrlq(xmm1, 12);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movsd(Address(rsp, 24), xmm0);\n-  fld_d(Address(rsp, 24));\n-\n-  bind(L_2TAG_PACKET_10_0_2);\n-  movl(tmp, Address(rsp, 40));\n-}\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_log.cpp","additions":0,"deletions":651,"binary":false,"changes":651,"status":"deleted"},{"patch":"@@ -1,684 +0,0 @@\n-\/*\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n-* Intel Math Library (LIBM) Source Code\n-*\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/assembler.inline.hpp\"\n-#include \"macroAssembler_x86.hpp\"\n-#include \"runtime\/stubRoutines.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/******************************************************************************\/\n-\/\/                     ALGORITHM DESCRIPTION - LOG10()\n-\/\/                     ---------------------\n-\/\/\n-\/\/    Let x=2^k * mx, mx in [1,2)\n-\/\/\n-\/\/    Get B~1\/mx based on the output of rcpss instruction (B0)\n-\/\/    B = int((B0*LH*2^7+0.5))\/2^7\n-\/\/    LH is a short approximation for log10(e)\n-\/\/\n-\/\/    Reduced argument: r=B*mx-LH (computed accurately in high and low parts)\n-\/\/\n-\/\/    Result:  k*log10(2) - log(B) + p(r)\n-\/\/             p(r) is a degree 7 polynomial\n-\/\/             -log(B) read from data table (high, low parts)\n-\/\/             Result is formed from high and low parts\n-\/\/\n-\/\/ Special cases:\n-\/\/  log10(0) = -INF with divide-by-zero exception raised\n-\/\/  log10(1) = +0\n-\/\/  log10(x) = NaN with invalid exception raised if x < -0, including -INF\n-\/\/  log10(+INF) = +INF\n-\/\/\n-\/******************************************************************************\/\n-\n-#ifdef _LP64\n-\/\/ The 64 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _HIGHSIGMASK_log10[] =\n-{\n-    0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xffffe000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _LOG10_E[] =\n-{\n-    0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _L_tbl_log10[] =\n-{\n-    0x509f7800UL, 0x3fd34413UL, 0x1f12b358UL, 0x3d1fef31UL, 0x80333400UL,\n-    0x3fd32418UL, 0xc671d9d0UL, 0xbcf542bfUL, 0x51195000UL, 0x3fd30442UL,\n-    0x78a4b0c3UL, 0x3d18216aUL, 0x6fc79400UL, 0x3fd2e490UL, 0x80fa389dUL,\n-    0xbc902869UL, 0x89d04000UL, 0x3fd2c502UL, 0x75c2f564UL, 0x3d040754UL,\n-    0x4ddd1c00UL, 0x3fd2a598UL, 0xd219b2c3UL, 0xbcfa1d84UL, 0x6baa7c00UL,\n-    0x3fd28651UL, 0xfd9abec1UL, 0x3d1be6d3UL, 0x94028800UL, 0x3fd2672dUL,\n-    0xe289a455UL, 0xbd1ede5eUL, 0x78b86400UL, 0x3fd2482cUL, 0x6734d179UL,\n-    0x3d1fe79bUL, 0xcca3c800UL, 0x3fd2294dUL, 0x981a40b8UL, 0xbced34eaUL,\n-    0x439c5000UL, 0x3fd20a91UL, 0xcc392737UL, 0xbd1a9cc3UL, 0x92752c00UL,\n-    0x3fd1ebf6UL, 0x03c9afe7UL, 0x3d1e98f8UL, 0x6ef8dc00UL, 0x3fd1cd7dUL,\n-    0x71dae7f4UL, 0x3d08a86cUL, 0x8fe4dc00UL, 0x3fd1af25UL, 0xee9185a1UL,\n-    0xbcff3412UL, 0xace59400UL, 0x3fd190eeUL, 0xc2cab353UL, 0x3cf17ed9UL,\n-    0x7e925000UL, 0x3fd172d8UL, 0x6952c1b2UL, 0x3cf1521cUL, 0xbe694400UL,\n-    0x3fd154e2UL, 0xcacb79caUL, 0xbd0bdc78UL, 0x26cbac00UL, 0x3fd1370dUL,\n-    0xf71f4de1UL, 0xbd01f8beUL, 0x72fa0800UL, 0x3fd11957UL, 0x55bf910bUL,\n-    0x3c946e2bUL, 0x5f106000UL, 0x3fd0fbc1UL, 0x39e639c1UL, 0x3d14a84bUL,\n-    0xa802a800UL, 0x3fd0de4aUL, 0xd3f31d5dUL, 0xbd178385UL, 0x0b992000UL,\n-    0x3fd0c0f3UL, 0x3843106fUL, 0xbd1f602fUL, 0x486ce800UL, 0x3fd0a3baUL,\n-    0x8819497cUL, 0x3cef987aUL, 0x1de49400UL, 0x3fd086a0UL, 0x1caa0467UL,\n-    0x3d0faec7UL, 0x4c30cc00UL, 0x3fd069a4UL, 0xa4424372UL, 0xbd1618fcUL,\n-    0x94490000UL, 0x3fd04cc6UL, 0x946517d2UL, 0xbd18384bUL, 0xb7e84000UL,\n-    0x3fd03006UL, 0xe0109c37UL, 0xbd19a6acUL, 0x798a0c00UL, 0x3fd01364UL,\n-    0x5121e864UL, 0xbd164cf7UL, 0x38ce8000UL, 0x3fcfedbfUL, 0x46214d1aUL,\n-    0xbcbbc402UL, 0xc8e62000UL, 0x3fcfb4efUL, 0xdab93203UL, 0x3d1e0176UL,\n-    0x2cb02800UL, 0x3fcf7c5aUL, 0x2a2ea8e4UL, 0xbcfec86aUL, 0xeeeaa000UL,\n-    0x3fcf43fdUL, 0xc18e49a4UL, 0x3cf110a8UL, 0x9bb6e800UL, 0x3fcf0bdaUL,\n-    0x923cc9c0UL, 0xbd15ce99UL, 0xc093f000UL, 0x3fced3efUL, 0x4d4b51e9UL,\n-    0x3d1a04c7UL, 0xec58f800UL, 0x3fce9c3cUL, 0x163cad59UL, 0x3cac8260UL,\n-    0x9a907000UL, 0x3fce2d7dUL, 0x3fa93646UL, 0x3ce4a1c0UL, 0x37311000UL,\n-    0x3fcdbf99UL, 0x32abd1fdUL, 0x3d07ea9dUL, 0x6744b800UL, 0x3fcd528cUL,\n-    0x4dcbdfd4UL, 0xbd1b08e2UL, 0xe36de800UL, 0x3fcce653UL, 0x0b7b7f7fUL,\n-    0xbd1b8f03UL, 0x77506800UL, 0x3fcc7aecUL, 0xa821c9fbUL, 0x3d13c163UL,\n-    0x00ff8800UL, 0x3fcc1053UL, 0x536bca76UL, 0xbd074ee5UL, 0x70719800UL,\n-    0x3fcba684UL, 0xd7da9b6bUL, 0xbd1fbf16UL, 0xc6f8d800UL, 0x3fcb3d7dUL,\n-    0xe2220bb3UL, 0x3d1a295dUL, 0x16c15800UL, 0x3fcad53cUL, 0xe724911eUL,\n-    0xbcf55822UL, 0x82533800UL, 0x3fca6dbcUL, 0x6d982371UL, 0x3cac567cUL,\n-    0x3c19e800UL, 0x3fca06fcUL, 0x84d17d80UL, 0x3d1da204UL, 0x85ef8000UL,\n-    0x3fc9a0f8UL, 0x54466a6aUL, 0xbd002204UL, 0xb0ac2000UL, 0x3fc93baeUL,\n-    0xd601fd65UL, 0x3d18840cUL, 0x1bb9b000UL, 0x3fc8d71cUL, 0x7bf58766UL,\n-    0xbd14f897UL, 0x34aae800UL, 0x3fc8733eUL, 0x3af6ac24UL, 0xbd0f5c45UL,\n-    0x76d68000UL, 0x3fc81012UL, 0x4303e1a1UL, 0xbd1f9a80UL, 0x6af57800UL,\n-    0x3fc7ad96UL, 0x43fbcb46UL, 0x3cf4c33eUL, 0xa6c51000UL, 0x3fc74bc7UL,\n-    0x70f0eac5UL, 0xbd192e3bUL, 0xccab9800UL, 0x3fc6eaa3UL, 0xc0093dfeUL,\n-    0xbd0faf15UL, 0x8b60b800UL, 0x3fc68a28UL, 0xde78d5fdUL, 0xbc9ea4eeUL,\n-    0x9d987000UL, 0x3fc62a53UL, 0x962bea6eUL, 0xbd194084UL, 0xc9b0e800UL,\n-    0x3fc5cb22UL, 0x888dd999UL, 0x3d1fe201UL, 0xe1634800UL, 0x3fc56c93UL,\n-    0x16ada7adUL, 0x3d1b1188UL, 0xc176c000UL, 0x3fc50ea4UL, 0x4159b5b5UL,\n-    0xbcf09c08UL, 0x51766000UL, 0x3fc4b153UL, 0x84393d23UL, 0xbcf6a89cUL,\n-    0x83695000UL, 0x3fc4549dUL, 0x9f0b8bbbUL, 0x3d1c4b8cUL, 0x538d5800UL,\n-    0x3fc3f881UL, 0xf49df747UL, 0x3cf89b99UL, 0xc8138000UL, 0x3fc39cfcUL,\n-    0xd503b834UL, 0xbd13b99fUL, 0xf0df0800UL, 0x3fc3420dUL, 0xf011b386UL,\n-    0xbd05d8beUL, 0xe7466800UL, 0x3fc2e7b2UL, 0xf39c7bc2UL, 0xbd1bb94eUL,\n-    0xcdd62800UL, 0x3fc28de9UL, 0x05e6d69bUL, 0xbd10ed05UL, 0xd015d800UL,\n-    0x3fc234b0UL, 0xe29b6c9dUL, 0xbd1ff967UL, 0x224ea800UL, 0x3fc1dc06UL,\n-    0x727711fcUL, 0xbcffb30dUL, 0x01540000UL, 0x3fc183e8UL, 0x39786c5aUL,\n-    0x3cc23f57UL, 0xb24d9800UL, 0x3fc12c54UL, 0xc905a342UL, 0x3d003a1dUL,\n-    0x82835800UL, 0x3fc0d54aUL, 0x9b9920c0UL, 0x3d03b25aUL, 0xc72ac000UL,\n-    0x3fc07ec7UL, 0x46f26a24UL, 0x3cf0fa41UL, 0xdd35d800UL, 0x3fc028caUL,\n-    0x41d9d6dcUL, 0x3d034a65UL, 0x52474000UL, 0x3fbfa6a4UL, 0x44f66449UL,\n-    0x3d19cad3UL, 0x2da3d000UL, 0x3fbefcb8UL, 0x67832999UL, 0x3d18400fUL,\n-    0x32a10000UL, 0x3fbe53ceUL, 0x9c0e3b1aUL, 0xbcff62fdUL, 0x556b7000UL,\n-    0x3fbdabe3UL, 0x02976913UL, 0xbcf8243bUL, 0x97e88000UL, 0x3fbd04f4UL,\n-    0xec793797UL, 0x3d1c0578UL, 0x09647000UL, 0x3fbc5effUL, 0x05fc0565UL,\n-    0xbd1d799eUL, 0xc6426000UL, 0x3fbbb9ffUL, 0x4625f5edUL, 0x3d1f5723UL,\n-    0xf7afd000UL, 0x3fbb15f3UL, 0xdd5aae61UL, 0xbd1a7e1eUL, 0xd358b000UL,\n-    0x3fba72d8UL, 0x3314e4d3UL, 0x3d17bc91UL, 0x9b1f5000UL, 0x3fb9d0abUL,\n-    0x9a4d514bUL, 0x3cf18c9bUL, 0x9cd4e000UL, 0x3fb92f69UL, 0x7e4496abUL,\n-    0x3cf1f96dUL, 0x31f4f000UL, 0x3fb88f10UL, 0xf56479e7UL, 0x3d165818UL,\n-    0xbf628000UL, 0x3fb7ef9cUL, 0x26bf486dUL, 0xbd1113a6UL, 0xb526b000UL,\n-    0x3fb7510cUL, 0x1a1c3384UL, 0x3ca9898dUL, 0x8e31e000UL, 0x3fb6b35dUL,\n-    0xb3875361UL, 0xbd0661acUL, 0xd01de000UL, 0x3fb6168cUL, 0x2a7cacfaUL,\n-    0xbd1bdf10UL, 0x0af23000UL, 0x3fb57a98UL, 0xff868816UL, 0x3cf046d0UL,\n-    0xd8ea0000UL, 0x3fb4df7cUL, 0x1515fbe7UL, 0xbd1fd529UL, 0xde3b2000UL,\n-    0x3fb44538UL, 0x6e59a132UL, 0x3d1faeeeUL, 0xc8df9000UL, 0x3fb3abc9UL,\n-    0xf1322361UL, 0xbd198807UL, 0x505f1000UL, 0x3fb3132dUL, 0x0888e6abUL,\n-    0x3d1e5380UL, 0x359bd000UL, 0x3fb27b61UL, 0xdfbcbb22UL, 0xbcfe2724UL,\n-    0x429ee000UL, 0x3fb1e463UL, 0x6eb4c58cUL, 0xbcfe4dd6UL, 0x4a673000UL,\n-    0x3fb14e31UL, 0x4ce1ac9bUL, 0x3d1ba691UL, 0x28b96000UL, 0x3fb0b8c9UL,\n-    0x8c7813b8UL, 0xbd0b3872UL, 0xc1f08000UL, 0x3fb02428UL, 0xc2bc8c2cUL,\n-    0x3cb5ea6bUL, 0x05a1a000UL, 0x3faf209cUL, 0x72e8f18eUL, 0xbce8df84UL,\n-    0xc0b5e000UL, 0x3fadfa6dUL, 0x9fdef436UL, 0x3d087364UL, 0xaf416000UL,\n-    0x3facd5c2UL, 0x1068c3a9UL, 0x3d0827e7UL, 0xdb356000UL, 0x3fabb296UL,\n-    0x120a34d3UL, 0x3d101a9fUL, 0x5dfea000UL, 0x3faa90e6UL, 0xdaded264UL,\n-    0xbd14c392UL, 0x6034c000UL, 0x3fa970adUL, 0x1c9d06a9UL, 0xbd1b705eUL,\n-    0x194c6000UL, 0x3fa851e8UL, 0x83996ad9UL, 0xbd0117bcUL, 0xcf4ac000UL,\n-    0x3fa73492UL, 0xb1a94a62UL, 0xbca5ea42UL, 0xd67b4000UL, 0x3fa618a9UL,\n-    0x75aed8caUL, 0xbd07119bUL, 0x9126c000UL, 0x3fa4fe29UL, 0x5291d533UL,\n-    0x3d12658fUL, 0x6f4d4000UL, 0x3fa3e50eUL, 0xcd2c5cd9UL, 0x3d1d5c70UL,\n-    0xee608000UL, 0x3fa2cd54UL, 0xd1008489UL, 0x3d1a4802UL, 0x9900e000UL,\n-    0x3fa1b6f9UL, 0x54fb5598UL, 0xbd16593fUL, 0x06bb6000UL, 0x3fa0a1f9UL,\n-    0x64ef57b4UL, 0xbd17636bUL, 0xb7940000UL, 0x3f9f1c9fUL, 0xee6a4737UL,\n-    0x3cb5d479UL, 0x91aa0000UL, 0x3f9cf7f5UL, 0x3a16373cUL, 0x3d087114UL,\n-    0x156b8000UL, 0x3f9ad5edUL, 0x836c554aUL, 0x3c6900b0UL, 0xd4764000UL,\n-    0x3f98b67fUL, 0xed12f17bUL, 0xbcffc974UL, 0x77dec000UL, 0x3f9699a7UL,\n-    0x232ce7eaUL, 0x3d1e35bbUL, 0xbfbf4000UL, 0x3f947f5dUL, 0xd84ffa6eUL,\n-    0x3d0e0a49UL, 0x82c7c000UL, 0x3f92679cUL, 0x8d170e90UL, 0xbd14d9f2UL,\n-    0xadd20000UL, 0x3f90525dUL, 0x86d9f88eUL, 0x3cdeb986UL, 0x86f10000UL,\n-    0x3f8c7f36UL, 0xb9e0a517UL, 0x3ce29faaUL, 0xb75c8000UL, 0x3f885e9eUL,\n-    0x542568cbUL, 0xbd1f7bdbUL, 0x46b30000UL, 0x3f8442e8UL, 0xb954e7d9UL,\n-    0x3d1e5287UL, 0xb7e60000UL, 0x3f802c07UL, 0x22da0b17UL, 0xbd19fb27UL,\n-    0x6c8b0000UL, 0x3f7833e3UL, 0x821271efUL, 0xbd190f96UL, 0x29910000UL,\n-    0x3f701936UL, 0xbc3491a5UL, 0xbd1bcf45UL, 0x354a0000UL, 0x3f600fe3UL,\n-    0xc0ff520aUL, 0xbd19d71cUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _log2_log10[] =\n-{\n-    0x509f7800UL, 0x3f934413UL, 0x1f12b358UL, 0x3cdfef31UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _coeff_log10[] =\n-{\n-    0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL, 0xc0089309UL, 0x385593b1UL,\n-    0xc025c917UL, 0xdc963467UL, 0x3ffc6a02UL, 0x7f9d3aa1UL, 0x4016ab9fUL,\n-    0xdc77b115UL, 0xbff27af2UL\n-};\n-\n-\/\/ Registers:\n-\/\/ input: xmm0\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          rax, rdx, rcx, r11, tmp\n-\n-\/\/ Code generated by Intel C compiler for LIBM library\n-\n-void MacroAssembler::fast_log10(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                                XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                                Register eax, Register ecx, Register edx, Register r11, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, B1_2, B1_3, B1_5;\n-\n-  assert_different_registers(r11, eax, ecx, edx);\n-\n-  address HIGHSIGMASK = (address)_HIGHSIGMASK_log10;\n-  address LOG10_E = (address)_LOG10_E;\n-  address L_tbl = (address)_L_tbl_log10;\n-  address log2 = (address)_log2_log10;\n-  address coeff = (address)_coeff_log10;\n-\n-  subq(rsp, 24);\n-  movsd(Address(rsp, 0), xmm0);\n-\n-  bind(B1_2);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movl(ecx, 1054736384);\n-  movdl(xmm7, ecx);\n-  xorpd(xmm3, xmm3);\n-  movl(edx, 30704);\n-  pinsrw(xmm3, edx, 3);\n-  movdqu(xmm1, xmm0);\n-  movl(edx, 32768);\n-  movdl(xmm4, edx);\n-  movdqu(xmm5, ExternalAddress(HIGHSIGMASK), tmp \/*rscratch*\/);    \/\/0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xffffe000UL\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 16352);\n-  psrlq(xmm0, 27);\n-  movdqu(xmm2, ExternalAddress(LOG10_E), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n-  psrld(xmm0, 2);\n-  rcpps(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 78);\n-  psrlq(xmm1, 12);\n-  subl(eax, 16);\n-  cmpl(eax, 32736);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  mulss(xmm0, xmm7);\n-  por(xmm1, xmm3);\n-  lea(r11, ExternalAddress(L_tbl));\n-  andpd(xmm5, xmm1);\n-  paddd(xmm0, xmm4);\n-  subsd(xmm1, xmm5);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  andpd(xmm0, xmm6);\n-  andl(eax, 32752);\n-  subl(eax, ecx);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  mulsd(xmm1, xmm0);\n-  movq(xmm6, ExternalAddress(log2), tmp \/*rscratch*\/);    \/\/0x509f7800UL, 0x3f934413UL, 0x1f12b358UL, 0x3cdfef31UL\n-  movdqu(xmm3, ExternalAddress(coeff), tmp \/*rscratch*\/);    \/\/0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL, 0xc0089309UL\n-  subsd(xmm5, xmm2);\n-  andl(edx, 16711680);\n-  shrl(edx, 12);\n-  movdqu(xmm0, Address(r11, rdx, Address::times_1, -1504));\n-  movdqu(xmm4, ExternalAddress(coeff + 16), tmp \/*rscratch*\/);    \/\/0x385593b1UL, 0xc025c917UL, 0xdc963467UL, 0x3ffc6a02UL\n-  addsd(xmm1, xmm5);\n-  movdqu(xmm2, ExternalAddress(coeff + 32), tmp \/*rscratch*\/);    \/\/0x7f9d3aa1UL, 0x4016ab9fUL, 0xdc77b115UL, 0xbff27af2UL\n-  mulsd(xmm6, xmm7);\n-  pshufd(xmm5, xmm1, 68);\n-  mulsd(xmm7, ExternalAddress(log2 + 8), tmp \/*rscratch*\/);    \/\/0x1f12b358UL, 0x3cdfef31UL\n-  mulsd(xmm3, xmm1);\n-  addsd(xmm0, xmm6);\n-  mulpd(xmm4, xmm5);\n-  movq(xmm6, ExternalAddress(LOG10_E + 8), tmp \/*rscratch*\/);    \/\/0xbf2e4108UL, 0x3f5a7a6cUL\n-  mulpd(xmm5, xmm5);\n-  addpd(xmm4, xmm2);\n-  mulpd(xmm3, xmm5);\n-  pshufd(xmm2, xmm0, 228);\n-  addsd(xmm0, xmm1);\n-  mulsd(xmm4, xmm1);\n-  subsd(xmm2, xmm0);\n-  mulsd(xmm6, xmm1);\n-  addsd(xmm1, xmm2);\n-  pshufd(xmm2, xmm0, 238);\n-  mulsd(xmm5, xmm5);\n-  addsd(xmm7, xmm2);\n-  addsd(xmm1, xmm6);\n-  addpd(xmm4, xmm3);\n-  addsd(xmm1, xmm7);\n-  mulpd(xmm4, xmm5);\n-  addsd(xmm1, xmm4);\n-  pshufd(xmm5, xmm4, 238);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm0, xmm1);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  movq(xmm0, Address(rsp, 0));\n-  movq(xmm1, Address(rsp, 0));\n-  addl(eax, 16);\n-  cmpl(eax, 32768);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_2_0_2);\n-  cmpl(eax, 16);\n-  jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  addsd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n-  cmpl(edx, 0);\n-  jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  xorpd(xmm1, xmm1);\n-  addsd(xmm1, xmm0);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(eax, 18416);\n-  pinsrw(xmm1, eax, 3);\n-  mulsd(xmm0, xmm1);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm1, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 18416);\n-  psrlq(xmm0, 27);\n-  movdqu(xmm2, ExternalAddress(LOG10_E), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n-  psrld(xmm0, 2);\n-  rcpps(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 78);\n-  psrlq(xmm1, 12);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  addl(ecx, ecx);\n-  cmpl(ecx, -2097152);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32752);\n-  pinsrw(xmm1, eax, 3);\n-  mulsd(xmm0, xmm1);\n-  movl(Address(rsp, 16), 9);\n-  jmp(L_2TAG_PACKET_8_0_2);\n-\n-  bind(L_2TAG_PACKET_7_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 49136);\n-  pinsrw(xmm0, eax, 3);\n-  divsd(xmm0, xmm1);\n-  movl(Address(rsp, 16), 8);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  movq(Address(rsp, 8), xmm0);\n-\n-  bind(B1_3);\n-  movq(xmm0, Address(rsp, 8));\n-\n-  bind(L_2TAG_PACKET_9_0_2);\n-\n-  bind(B1_5);\n-  addq(rsp, 24);\n-\n-}\n-#else\n-\/\/ The 32 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_log10[] =\n-{\n-    0x509f7800UL, 0x3fd34413UL, 0x1f12b358UL, 0x3d1fef31UL, 0x80333400UL,\n-    0x3fd32418UL, 0xc671d9d0UL, 0xbcf542bfUL, 0x51195000UL, 0x3fd30442UL,\n-    0x78a4b0c3UL, 0x3d18216aUL, 0x6fc79400UL, 0x3fd2e490UL, 0x80fa389dUL,\n-    0xbc902869UL, 0x89d04000UL, 0x3fd2c502UL, 0x75c2f564UL, 0x3d040754UL,\n-    0x4ddd1c00UL, 0x3fd2a598UL, 0xd219b2c3UL, 0xbcfa1d84UL, 0x6baa7c00UL,\n-    0x3fd28651UL, 0xfd9abec1UL, 0x3d1be6d3UL, 0x94028800UL, 0x3fd2672dUL,\n-    0xe289a455UL, 0xbd1ede5eUL, 0x78b86400UL, 0x3fd2482cUL, 0x6734d179UL,\n-    0x3d1fe79bUL, 0xcca3c800UL, 0x3fd2294dUL, 0x981a40b8UL, 0xbced34eaUL,\n-    0x439c5000UL, 0x3fd20a91UL, 0xcc392737UL, 0xbd1a9cc3UL, 0x92752c00UL,\n-    0x3fd1ebf6UL, 0x03c9afe7UL, 0x3d1e98f8UL, 0x6ef8dc00UL, 0x3fd1cd7dUL,\n-    0x71dae7f4UL, 0x3d08a86cUL, 0x8fe4dc00UL, 0x3fd1af25UL, 0xee9185a1UL,\n-    0xbcff3412UL, 0xace59400UL, 0x3fd190eeUL, 0xc2cab353UL, 0x3cf17ed9UL,\n-    0x7e925000UL, 0x3fd172d8UL, 0x6952c1b2UL, 0x3cf1521cUL, 0xbe694400UL,\n-    0x3fd154e2UL, 0xcacb79caUL, 0xbd0bdc78UL, 0x26cbac00UL, 0x3fd1370dUL,\n-    0xf71f4de1UL, 0xbd01f8beUL, 0x72fa0800UL, 0x3fd11957UL, 0x55bf910bUL,\n-    0x3c946e2bUL, 0x5f106000UL, 0x3fd0fbc1UL, 0x39e639c1UL, 0x3d14a84bUL,\n-    0xa802a800UL, 0x3fd0de4aUL, 0xd3f31d5dUL, 0xbd178385UL, 0x0b992000UL,\n-    0x3fd0c0f3UL, 0x3843106fUL, 0xbd1f602fUL, 0x486ce800UL, 0x3fd0a3baUL,\n-    0x8819497cUL, 0x3cef987aUL, 0x1de49400UL, 0x3fd086a0UL, 0x1caa0467UL,\n-    0x3d0faec7UL, 0x4c30cc00UL, 0x3fd069a4UL, 0xa4424372UL, 0xbd1618fcUL,\n-    0x94490000UL, 0x3fd04cc6UL, 0x946517d2UL, 0xbd18384bUL, 0xb7e84000UL,\n-    0x3fd03006UL, 0xe0109c37UL, 0xbd19a6acUL, 0x798a0c00UL, 0x3fd01364UL,\n-    0x5121e864UL, 0xbd164cf7UL, 0x38ce8000UL, 0x3fcfedbfUL, 0x46214d1aUL,\n-    0xbcbbc402UL, 0xc8e62000UL, 0x3fcfb4efUL, 0xdab93203UL, 0x3d1e0176UL,\n-    0x2cb02800UL, 0x3fcf7c5aUL, 0x2a2ea8e4UL, 0xbcfec86aUL, 0xeeeaa000UL,\n-    0x3fcf43fdUL, 0xc18e49a4UL, 0x3cf110a8UL, 0x9bb6e800UL, 0x3fcf0bdaUL,\n-    0x923cc9c0UL, 0xbd15ce99UL, 0xc093f000UL, 0x3fced3efUL, 0x4d4b51e9UL,\n-    0x3d1a04c7UL, 0xec58f800UL, 0x3fce9c3cUL, 0x163cad59UL, 0x3cac8260UL,\n-    0x9a907000UL, 0x3fce2d7dUL, 0x3fa93646UL, 0x3ce4a1c0UL, 0x37311000UL,\n-    0x3fcdbf99UL, 0x32abd1fdUL, 0x3d07ea9dUL, 0x6744b800UL, 0x3fcd528cUL,\n-    0x4dcbdfd4UL, 0xbd1b08e2UL, 0xe36de800UL, 0x3fcce653UL, 0x0b7b7f7fUL,\n-    0xbd1b8f03UL, 0x77506800UL, 0x3fcc7aecUL, 0xa821c9fbUL, 0x3d13c163UL,\n-    0x00ff8800UL, 0x3fcc1053UL, 0x536bca76UL, 0xbd074ee5UL, 0x70719800UL,\n-    0x3fcba684UL, 0xd7da9b6bUL, 0xbd1fbf16UL, 0xc6f8d800UL, 0x3fcb3d7dUL,\n-    0xe2220bb3UL, 0x3d1a295dUL, 0x16c15800UL, 0x3fcad53cUL, 0xe724911eUL,\n-    0xbcf55822UL, 0x82533800UL, 0x3fca6dbcUL, 0x6d982371UL, 0x3cac567cUL,\n-    0x3c19e800UL, 0x3fca06fcUL, 0x84d17d80UL, 0x3d1da204UL, 0x85ef8000UL,\n-    0x3fc9a0f8UL, 0x54466a6aUL, 0xbd002204UL, 0xb0ac2000UL, 0x3fc93baeUL,\n-    0xd601fd65UL, 0x3d18840cUL, 0x1bb9b000UL, 0x3fc8d71cUL, 0x7bf58766UL,\n-    0xbd14f897UL, 0x34aae800UL, 0x3fc8733eUL, 0x3af6ac24UL, 0xbd0f5c45UL,\n-    0x76d68000UL, 0x3fc81012UL, 0x4303e1a1UL, 0xbd1f9a80UL, 0x6af57800UL,\n-    0x3fc7ad96UL, 0x43fbcb46UL, 0x3cf4c33eUL, 0xa6c51000UL, 0x3fc74bc7UL,\n-    0x70f0eac5UL, 0xbd192e3bUL, 0xccab9800UL, 0x3fc6eaa3UL, 0xc0093dfeUL,\n-    0xbd0faf15UL, 0x8b60b800UL, 0x3fc68a28UL, 0xde78d5fdUL, 0xbc9ea4eeUL,\n-    0x9d987000UL, 0x3fc62a53UL, 0x962bea6eUL, 0xbd194084UL, 0xc9b0e800UL,\n-    0x3fc5cb22UL, 0x888dd999UL, 0x3d1fe201UL, 0xe1634800UL, 0x3fc56c93UL,\n-    0x16ada7adUL, 0x3d1b1188UL, 0xc176c000UL, 0x3fc50ea4UL, 0x4159b5b5UL,\n-    0xbcf09c08UL, 0x51766000UL, 0x3fc4b153UL, 0x84393d23UL, 0xbcf6a89cUL,\n-    0x83695000UL, 0x3fc4549dUL, 0x9f0b8bbbUL, 0x3d1c4b8cUL, 0x538d5800UL,\n-    0x3fc3f881UL, 0xf49df747UL, 0x3cf89b99UL, 0xc8138000UL, 0x3fc39cfcUL,\n-    0xd503b834UL, 0xbd13b99fUL, 0xf0df0800UL, 0x3fc3420dUL, 0xf011b386UL,\n-    0xbd05d8beUL, 0xe7466800UL, 0x3fc2e7b2UL, 0xf39c7bc2UL, 0xbd1bb94eUL,\n-    0xcdd62800UL, 0x3fc28de9UL, 0x05e6d69bUL, 0xbd10ed05UL, 0xd015d800UL,\n-    0x3fc234b0UL, 0xe29b6c9dUL, 0xbd1ff967UL, 0x224ea800UL, 0x3fc1dc06UL,\n-    0x727711fcUL, 0xbcffb30dUL, 0x01540000UL, 0x3fc183e8UL, 0x39786c5aUL,\n-    0x3cc23f57UL, 0xb24d9800UL, 0x3fc12c54UL, 0xc905a342UL, 0x3d003a1dUL,\n-    0x82835800UL, 0x3fc0d54aUL, 0x9b9920c0UL, 0x3d03b25aUL, 0xc72ac000UL,\n-    0x3fc07ec7UL, 0x46f26a24UL, 0x3cf0fa41UL, 0xdd35d800UL, 0x3fc028caUL,\n-    0x41d9d6dcUL, 0x3d034a65UL, 0x52474000UL, 0x3fbfa6a4UL, 0x44f66449UL,\n-    0x3d19cad3UL, 0x2da3d000UL, 0x3fbefcb8UL, 0x67832999UL, 0x3d18400fUL,\n-    0x32a10000UL, 0x3fbe53ceUL, 0x9c0e3b1aUL, 0xbcff62fdUL, 0x556b7000UL,\n-    0x3fbdabe3UL, 0x02976913UL, 0xbcf8243bUL, 0x97e88000UL, 0x3fbd04f4UL,\n-    0xec793797UL, 0x3d1c0578UL, 0x09647000UL, 0x3fbc5effUL, 0x05fc0565UL,\n-    0xbd1d799eUL, 0xc6426000UL, 0x3fbbb9ffUL, 0x4625f5edUL, 0x3d1f5723UL,\n-    0xf7afd000UL, 0x3fbb15f3UL, 0xdd5aae61UL, 0xbd1a7e1eUL, 0xd358b000UL,\n-    0x3fba72d8UL, 0x3314e4d3UL, 0x3d17bc91UL, 0x9b1f5000UL, 0x3fb9d0abUL,\n-    0x9a4d514bUL, 0x3cf18c9bUL, 0x9cd4e000UL, 0x3fb92f69UL, 0x7e4496abUL,\n-    0x3cf1f96dUL, 0x31f4f000UL, 0x3fb88f10UL, 0xf56479e7UL, 0x3d165818UL,\n-    0xbf628000UL, 0x3fb7ef9cUL, 0x26bf486dUL, 0xbd1113a6UL, 0xb526b000UL,\n-    0x3fb7510cUL, 0x1a1c3384UL, 0x3ca9898dUL, 0x8e31e000UL, 0x3fb6b35dUL,\n-    0xb3875361UL, 0xbd0661acUL, 0xd01de000UL, 0x3fb6168cUL, 0x2a7cacfaUL,\n-    0xbd1bdf10UL, 0x0af23000UL, 0x3fb57a98UL, 0xff868816UL, 0x3cf046d0UL,\n-    0xd8ea0000UL, 0x3fb4df7cUL, 0x1515fbe7UL, 0xbd1fd529UL, 0xde3b2000UL,\n-    0x3fb44538UL, 0x6e59a132UL, 0x3d1faeeeUL, 0xc8df9000UL, 0x3fb3abc9UL,\n-    0xf1322361UL, 0xbd198807UL, 0x505f1000UL, 0x3fb3132dUL, 0x0888e6abUL,\n-    0x3d1e5380UL, 0x359bd000UL, 0x3fb27b61UL, 0xdfbcbb22UL, 0xbcfe2724UL,\n-    0x429ee000UL, 0x3fb1e463UL, 0x6eb4c58cUL, 0xbcfe4dd6UL, 0x4a673000UL,\n-    0x3fb14e31UL, 0x4ce1ac9bUL, 0x3d1ba691UL, 0x28b96000UL, 0x3fb0b8c9UL,\n-    0x8c7813b8UL, 0xbd0b3872UL, 0xc1f08000UL, 0x3fb02428UL, 0xc2bc8c2cUL,\n-    0x3cb5ea6bUL, 0x05a1a000UL, 0x3faf209cUL, 0x72e8f18eUL, 0xbce8df84UL,\n-    0xc0b5e000UL, 0x3fadfa6dUL, 0x9fdef436UL, 0x3d087364UL, 0xaf416000UL,\n-    0x3facd5c2UL, 0x1068c3a9UL, 0x3d0827e7UL, 0xdb356000UL, 0x3fabb296UL,\n-    0x120a34d3UL, 0x3d101a9fUL, 0x5dfea000UL, 0x3faa90e6UL, 0xdaded264UL,\n-    0xbd14c392UL, 0x6034c000UL, 0x3fa970adUL, 0x1c9d06a9UL, 0xbd1b705eUL,\n-    0x194c6000UL, 0x3fa851e8UL, 0x83996ad9UL, 0xbd0117bcUL, 0xcf4ac000UL,\n-    0x3fa73492UL, 0xb1a94a62UL, 0xbca5ea42UL, 0xd67b4000UL, 0x3fa618a9UL,\n-    0x75aed8caUL, 0xbd07119bUL, 0x9126c000UL, 0x3fa4fe29UL, 0x5291d533UL,\n-    0x3d12658fUL, 0x6f4d4000UL, 0x3fa3e50eUL, 0xcd2c5cd9UL, 0x3d1d5c70UL,\n-    0xee608000UL, 0x3fa2cd54UL, 0xd1008489UL, 0x3d1a4802UL, 0x9900e000UL,\n-    0x3fa1b6f9UL, 0x54fb5598UL, 0xbd16593fUL, 0x06bb6000UL, 0x3fa0a1f9UL,\n-    0x64ef57b4UL, 0xbd17636bUL, 0xb7940000UL, 0x3f9f1c9fUL, 0xee6a4737UL,\n-    0x3cb5d479UL, 0x91aa0000UL, 0x3f9cf7f5UL, 0x3a16373cUL, 0x3d087114UL,\n-    0x156b8000UL, 0x3f9ad5edUL, 0x836c554aUL, 0x3c6900b0UL, 0xd4764000UL,\n-    0x3f98b67fUL, 0xed12f17bUL, 0xbcffc974UL, 0x77dec000UL, 0x3f9699a7UL,\n-    0x232ce7eaUL, 0x3d1e35bbUL, 0xbfbf4000UL, 0x3f947f5dUL, 0xd84ffa6eUL,\n-    0x3d0e0a49UL, 0x82c7c000UL, 0x3f92679cUL, 0x8d170e90UL, 0xbd14d9f2UL,\n-    0xadd20000UL, 0x3f90525dUL, 0x86d9f88eUL, 0x3cdeb986UL, 0x86f10000UL,\n-    0x3f8c7f36UL, 0xb9e0a517UL, 0x3ce29faaUL, 0xb75c8000UL, 0x3f885e9eUL,\n-    0x542568cbUL, 0xbd1f7bdbUL, 0x46b30000UL, 0x3f8442e8UL, 0xb954e7d9UL,\n-    0x3d1e5287UL, 0xb7e60000UL, 0x3f802c07UL, 0x22da0b17UL, 0xbd19fb27UL,\n-    0x6c8b0000UL, 0x3f7833e3UL, 0x821271efUL, 0xbd190f96UL, 0x29910000UL,\n-    0x3f701936UL, 0xbc3491a5UL, 0xbd1bcf45UL, 0x354a0000UL, 0x3f600fe3UL,\n-    0xc0ff520aUL, 0xbd19d71cUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x509f7800UL, 0x3f934413UL, 0x1f12b358UL, 0x3cdfef31UL,\n-    0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL, 0xc0089309UL, 0x385593b1UL,\n-    0xc025c917UL, 0xdc963467UL, 0x3ffc6a02UL, 0x7f9d3aa1UL, 0x4016ab9fUL,\n-    0xdc77b115UL, 0xbff27af2UL, 0xf8000000UL, 0xffffffffUL, 0x00000000UL,\n-    0xffffe000UL, 0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n-};\n-\/\/registers,\n-\/\/ input: xmm0\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          rax, rdx, rcx, rbx (tmp)\n-\n-void MacroAssembler::fast_log10(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                                XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                                Register eax, Register ecx, Register edx, Register tmp) {\n-\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2;\n-\n-  assert_different_registers(tmp, eax, ecx, edx);\n-\n-  address static_const_table_log10 = (address)_static_const_table_log10;\n-\n-  subl(rsp, 104);\n-  movl(Address(rsp, 40), tmp);\n-  lea(tmp, ExternalAddress(static_const_table_log10));\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movl(ecx, 1054736384);\n-  movdl(xmm7, ecx);\n-  xorpd(xmm3, xmm3);\n-  movl(edx, 30704);\n-  pinsrw(xmm3, edx, 3);\n-  movsd(xmm0, Address(rsp, 112));\n-  movdqu(xmm1, xmm0);\n-  movl(edx, 32768);\n-  movdl(xmm4, edx);\n-  movdqu(xmm5, Address(tmp, 2128));    \/\/0x3ffc6a02UL, 0x7f9d3aa1UL, 0x4016ab9fUL, 0xdc77b115UL\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 16352);\n-  psllq(xmm0, 5);\n-  movsd(xmm2, Address(tmp, 2144));    \/\/0xbff27af2UL, 0xf8000000UL, 0xffffffffUL, 0x00000000UL\n-  psrlq(xmm0, 34);\n-  rcpss(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 78);\n-  psrlq(xmm1, 12);\n-  subl(eax, 16);\n-  cmpl(eax, 32736);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  mulss(xmm0, xmm7);\n-  por(xmm1, xmm3);\n-  andpd(xmm5, xmm1);\n-  paddd(xmm0, xmm4);\n-  subsd(xmm1, xmm5);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  andpd(xmm0, xmm6);\n-  andl(eax, 32752);\n-  subl(eax, ecx);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  mulsd(xmm1, xmm0);\n-  movsd(xmm6, Address(tmp, 2064));    \/\/0xbd19d71cUL, 0x00000000UL, 0x00000000UL, 0x00000000UL\n-  movdqu(xmm3, Address(tmp, 2080));    \/\/0x00000000UL, 0x509f7800UL, 0x3f934413UL, 0x1f12b358UL\n-  subsd(xmm5, xmm2);\n-  andl(edx, 16711680);\n-  shrl(edx, 12);\n-  movdqu(xmm0, Address(tmp, edx, Address::times_1, -1504));\n-  movdqu(xmm4, Address(tmp, 2096));    \/\/0x3cdfef31UL, 0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL\n-  addsd(xmm1, xmm5);\n-  movdqu(xmm2, Address(tmp, 2112));    \/\/0xc0089309UL, 0x385593b1UL, 0xc025c917UL, 0xdc963467UL\n-  mulsd(xmm6, xmm7);\n-  pshufd(xmm5, xmm1, 68);\n-  mulsd(xmm7, Address(tmp, 2072));    \/\/0x00000000UL, 0x00000000UL, 0x00000000UL, 0x509f7800UL\n-  mulsd(xmm3, xmm1);\n-  addsd(xmm0, xmm6);\n-  mulpd(xmm4, xmm5);\n-  movsd(xmm6, Address(tmp, 2152));    \/\/0xffffffffUL, 0x00000000UL, 0xffffe000UL, 0x00000000UL\n-  mulpd(xmm5, xmm5);\n-  addpd(xmm4, xmm2);\n-  mulpd(xmm3, xmm5);\n-  pshufd(xmm2, xmm0, 228);\n-  addsd(xmm0, xmm1);\n-  mulsd(xmm4, xmm1);\n-  subsd(xmm2, xmm0);\n-  mulsd(xmm6, xmm1);\n-  addsd(xmm1, xmm2);\n-  pshufd(xmm2, xmm0, 238);\n-  mulsd(xmm5, xmm5);\n-  addsd(xmm7, xmm2);\n-  addsd(xmm1, xmm6);\n-  addpd(xmm4, xmm3);\n-  addsd(xmm1, xmm7);\n-  mulpd(xmm4, xmm5);\n-  addsd(xmm1, xmm4);\n-  pshufd(xmm5, xmm4, 238);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm0, xmm1);\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  movsd(xmm0, Address(rsp, 112));    \/\/0xbcfa1d84UL, 0x6baa7c00UL, 0x3fd28651UL, 0xfd9abec1UL\n-  movdqu(xmm1, xmm0);\n-  addl(eax, 16);\n-  cmpl(eax, 32768);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_3_0_2);\n-  cmpl(eax, 16);\n-  jcc(Assembler::below, L_2TAG_PACKET_4_0_2);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  addsd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_2_0_2);\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n-  cmpl(edx, 0);\n-  jcc(Assembler::above, L_2TAG_PACKET_5_0_2);\n-  jmp(L_2TAG_PACKET_7_0_2);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  addl(ecx, ecx);\n-  cmpl(ecx, -2097152);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_6_0_2);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n-\n-  bind(L_2TAG_PACKET_7_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32752);\n-  pinsrw(xmm1, eax, 3);\n-  movl(edx, 9);\n-  mulsd(xmm0, xmm1);\n-\n-  bind(L_2TAG_PACKET_9_0_2);\n-  movsd(Address(rsp, 0), xmm0);\n-  movsd(xmm0, Address(rsp, 112));    \/\/0xbcfa1d84UL, 0x6baa7c00UL, 0x3fd28651UL, 0xfd9abec1UL\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_10_0_2);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  xorpd(xmm1, xmm1);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 49136);\n-  pinsrw(xmm0, eax, 3);\n-  divsd(xmm0, xmm1);\n-  movl(edx, 8);\n-  jmp(L_2TAG_PACKET_9_0_2);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  movdl(edx, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(ecx, xmm1);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(eax, 18416);\n-  pinsrw(xmm1, eax, 3);\n-  mulsd(xmm0, xmm1);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm1, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 18416);\n-  psllq(xmm0, 5);\n-  movsd(xmm2, Address(tmp, 2144));    \/\/0xbff27af2UL, 0xf8000000UL, 0xffffffffUL, 0x00000000UL\n-  psrlq(xmm0, 34);\n-  rcpss(xmm0, xmm0);\n-  psllq(xmm1, 12);\n-  pshufd(xmm6, xmm5, 78);\n-  psrlq(xmm1, 12);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movsd(Address(rsp, 24), xmm0);\n-  fld_d(Address(rsp, 24));\n-\n-  bind(L_2TAG_PACKET_10_0_2);\n-  movl(tmp, Address(rsp, 40));\n-\n-}\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_log10.cpp","additions":0,"deletions":684,"binary":false,"changes":684,"status":"deleted"},{"patch":"@@ -1,3653 +0,0 @@\n-\/*\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n-* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n-* Intel Math Library (LIBM) Source Code\n-*\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/assembler.inline.hpp\"\n-#include \"macroAssembler_x86.hpp\"\n-#include \"runtime\/stubRoutines.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/******************************************************************************\/\n-\/\/                     ALGORITHM DESCRIPTION  - POW()\n-\/\/                     ---------------------\n-\/\/\n-\/\/    Let x=2^k * mx, mx in [1,2)\n-\/\/\n-\/\/    log2(x) calculation:\n-\/\/\n-\/\/    Get B~1\/mx based on the output of rcpps instruction (B0)\n-\/\/    B = int((B0*LH*2^9+0.5))\/2^9\n-\/\/    LH is a short approximation for log2(e)\n-\/\/\n-\/\/    Reduced argument, scaled by LH:\n-\/\/                r=B*mx-LH (computed accurately in high and low parts)\n-\/\/\n-\/\/    log2(x) result:  k - log2(B) + p(r)\n-\/\/             p(r) is a degree 8 polynomial\n-\/\/             -log2(B) read from data table (high, low parts)\n-\/\/             log2(x) is formed from high and low parts\n-\/\/    For |x| in [1-1\/32, 1+1\/16), a slower but more accurate computation\n-\/\/    based om the same table design is performed.\n-\/\/\n-\/\/   Main path is taken if | floor(log2(|log2(|x|)|) + floor(log2|y|) | < 8,\n-\/\/   to filter out all potential OF\/UF cases.\n-\/\/   exp2(y*log2(x)) is computed using an 8-bit index table and a degree 5\n-\/\/   polynomial\n-\/\/\n-\/\/ Special cases:\n-\/\/  pow(-0,y) = -INF and raises the divide-by-zero exception for y an odd\n-\/\/  integer < 0.\n-\/\/  pow(-0,y) = +INF and raises the divide-by-zero exception for y < 0 and\n-\/\/  not an odd integer.\n-\/\/  pow(-0,y) = -0 for y an odd integer > 0.\n-\/\/  pow(-0,y) = +0 for y > 0 and not an odd integer.\n-\/\/  pow(-1,-INF) = NaN.\n-\/\/  pow(+1,y) = NaN for any y, even a NaN.\n-\/\/  pow(x,-0) = 1 for any x, even a NaN.\n-\/\/  pow(x,y) = a NaN and raises the invalid exception for finite x < 0 and\n-\/\/  finite non-integer y.\n-\/\/  pow(x,-INF) = +INF for |x|<1.\n-\/\/  pow(x,-INF) = +0 for |x|>1.\n-\/\/  pow(x,+INF) = +0 for |x|<1.\n-\/\/  pow(x,+INF) = +INF for |x|>1.\n-\/\/  pow(-INF,y) = -0 for y an odd integer < 0.\n-\/\/  pow(-INF,y) = +0 for y < 0 and not an odd integer.\n-\/\/  pow(-INF,y) = -INF for y an odd integer > 0.\n-\/\/  pow(-INF,y) = +INF for y > 0 and not an odd integer.\n-\/\/  pow(+INF,y) = +0 for y <0.\n-\/\/  pow(+INF,y) = +INF for y >0.\n-\/\/\n-\/******************************************************************************\/\n-\n-#ifdef _LP64\n-\/\/ The 64 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _HIGHSIGMASK[] =\n-{\n-    0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _LOG2_E[] =\n-{\n-    0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _HIGHMASK_Y[] =\n-{\n-    0x00000000UL, 0xfffffff8UL, 0x00000000UL, 0xffffffffUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _T_exp[] =\n-{\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3b700000UL, 0xfa5abcbfUL,\n-    0x3ff00b1aUL, 0xa7609f71UL, 0xbc84f6b2UL, 0xa9fb3335UL, 0x3ff0163dUL,\n-    0x9ab8cdb7UL, 0x3c9b6129UL, 0x143b0281UL, 0x3ff02168UL, 0x0fc54eb6UL,\n-    0xbc82bf31UL, 0x3e778061UL, 0x3ff02c9aUL, 0x535b085dUL, 0xbc719083UL,\n-    0x2e11bbccUL, 0x3ff037d4UL, 0xeeade11aUL, 0x3c656811UL, 0xe86e7f85UL,\n-    0x3ff04315UL, 0x1977c96eUL, 0xbc90a31cUL, 0x72f654b1UL, 0x3ff04e5fUL,\n-    0x3aa0d08cUL, 0x3c84c379UL, 0xd3158574UL, 0x3ff059b0UL, 0xa475b465UL,\n-    0x3c8d73e2UL, 0x0e3c1f89UL, 0x3ff0650aUL, 0x5799c397UL, 0xbc95cb7bUL,\n-    0x29ddf6deUL, 0x3ff0706bUL, 0xe2b13c27UL, 0xbc8c91dfUL, 0x2b72a836UL,\n-    0x3ff07bd4UL, 0x54458700UL, 0x3c832334UL, 0x18759bc8UL, 0x3ff08745UL,\n-    0x4bb284ffUL, 0x3c6186beUL, 0xf66607e0UL, 0x3ff092bdUL, 0x800a3fd1UL,\n-    0xbc968063UL, 0xcac6f383UL, 0x3ff09e3eUL, 0x18316136UL, 0x3c914878UL,\n-    0x9b1f3919UL, 0x3ff0a9c7UL, 0x873d1d38UL, 0x3c85d16cUL, 0x6cf9890fUL,\n-    0x3ff0b558UL, 0x4adc610bUL, 0x3c98a62eUL, 0x45e46c85UL, 0x3ff0c0f1UL,\n-    0x06d21cefUL, 0x3c94f989UL, 0x2b7247f7UL, 0x3ff0cc92UL, 0x16e24f71UL,\n-    0x3c901edcUL, 0x23395decUL, 0x3ff0d83bUL, 0xe43f316aUL, 0xbc9bc14dUL,\n-    0x32d3d1a2UL, 0x3ff0e3ecUL, 0x27c57b52UL, 0x3c403a17UL, 0x5fdfa9c5UL,\n-    0x3ff0efa5UL, 0xbc54021bUL, 0xbc949db9UL, 0xaffed31bUL, 0x3ff0fb66UL,\n-    0xc44ebd7bUL, 0xbc6b9bedUL, 0x28d7233eUL, 0x3ff10730UL, 0x1692fdd5UL,\n-    0x3c8d46ebUL, 0xd0125b51UL, 0x3ff11301UL, 0x39449b3aUL, 0xbc96c510UL,\n-    0xab5e2ab6UL, 0x3ff11edbUL, 0xf703fb72UL, 0xbc9ca454UL, 0xc06c31ccUL,\n-    0x3ff12abdUL, 0xb36ca5c7UL, 0xbc51b514UL, 0x14f204abUL, 0x3ff136a8UL,\n-    0xba48dcf0UL, 0xbc67108fUL, 0xaea92de0UL, 0x3ff1429aUL, 0x9af1369eUL,\n-    0xbc932fbfUL, 0x934f312eUL, 0x3ff14e95UL, 0x39bf44abUL, 0xbc8b91e8UL,\n-    0xc8a58e51UL, 0x3ff15a98UL, 0xb9eeab0aUL, 0x3c82406aUL, 0x5471c3c2UL,\n-    0x3ff166a4UL, 0x82ea1a32UL, 0x3c58f23bUL, 0x3c7d517bUL, 0x3ff172b8UL,\n-    0xb9d78a76UL, 0xbc819041UL, 0x8695bbc0UL, 0x3ff17ed4UL, 0xe2ac5a64UL,\n-    0x3c709e3fUL, 0x388c8deaUL, 0x3ff18af9UL, 0xd1970f6cUL, 0xbc911023UL,\n-    0x58375d2fUL, 0x3ff19726UL, 0x85f17e08UL, 0x3c94aaddUL, 0xeb6fcb75UL,\n-    0x3ff1a35bUL, 0x7b4968e4UL, 0x3c8e5b4cUL, 0xf8138a1cUL, 0x3ff1af99UL,\n-    0xa4b69280UL, 0x3c97bf85UL, 0x84045cd4UL, 0x3ff1bbe0UL, 0x352ef607UL,\n-    0xbc995386UL, 0x95281c6bUL, 0x3ff1c82fUL, 0x8010f8c9UL, 0x3c900977UL,\n-    0x3168b9aaUL, 0x3ff1d487UL, 0x00a2643cUL, 0x3c9e016eUL, 0x5eb44027UL,\n-    0x3ff1e0e7UL, 0x088cb6deUL, 0xbc96fdd8UL, 0x22fcd91dUL, 0x3ff1ed50UL,\n-    0x027bb78cUL, 0xbc91df98UL, 0x8438ce4dUL, 0x3ff1f9c1UL, 0xa097af5cUL,\n-    0xbc9bf524UL, 0x88628cd6UL, 0x3ff2063bUL, 0x814a8495UL, 0x3c8dc775UL,\n-    0x3578a819UL, 0x3ff212beUL, 0x2cfcaac9UL, 0x3c93592dUL, 0x917ddc96UL,\n-    0x3ff21f49UL, 0x9494a5eeUL, 0x3c82a97eUL, 0xa27912d1UL, 0x3ff22bddUL,\n-    0x5577d69fUL, 0x3c8d34fbUL, 0x6e756238UL, 0x3ff2387aUL, 0xb6c70573UL,\n-    0x3c99b07eUL, 0xfb82140aUL, 0x3ff2451fUL, 0x911ca996UL, 0x3c8acfccUL,\n-    0x4fb2a63fUL, 0x3ff251ceUL, 0xbef4f4a4UL, 0x3c8ac155UL, 0x711ece75UL,\n-    0x3ff25e85UL, 0x4ac31b2cUL, 0x3c93e1a2UL, 0x65e27cddUL, 0x3ff26b45UL,\n-    0x9940e9d9UL, 0x3c82bd33UL, 0x341ddf29UL, 0x3ff2780eUL, 0x05f9e76cUL,\n-    0x3c9e067cUL, 0xe1f56381UL, 0x3ff284dfUL, 0x8c3f0d7eUL, 0xbc9a4c3aUL,\n-    0x7591bb70UL, 0x3ff291baUL, 0x28401cbdUL, 0xbc82cc72UL, 0xf51fdee1UL,\n-    0x3ff29e9dUL, 0xafad1255UL, 0x3c8612e8UL, 0x66d10f13UL, 0x3ff2ab8aUL,\n-    0x191690a7UL, 0xbc995743UL, 0xd0dad990UL, 0x3ff2b87fUL, 0xd6381aa4UL,\n-    0xbc410adcUL, 0x39771b2fUL, 0x3ff2c57eUL, 0xa6eb5124UL, 0xbc950145UL,\n-    0xa6e4030bUL, 0x3ff2d285UL, 0x54db41d5UL, 0x3c900247UL, 0x1f641589UL,\n-    0x3ff2df96UL, 0xfbbce198UL, 0x3c9d16cfUL, 0xa93e2f56UL, 0x3ff2ecafUL,\n-    0x45d52383UL, 0x3c71ca0fUL, 0x4abd886bUL, 0x3ff2f9d2UL, 0x532bda93UL,\n-    0xbc653c55UL, 0x0a31b715UL, 0x3ff306feUL, 0xd23182e4UL, 0x3c86f46aUL,\n-    0xedeeb2fdUL, 0x3ff31432UL, 0xf3f3fcd1UL, 0x3c8959a3UL, 0xfc4cd831UL,\n-    0x3ff32170UL, 0x8e18047cUL, 0x3c8a9ce7UL, 0x3ba8ea32UL, 0x3ff32eb8UL,\n-    0x3cb4f318UL, 0xbc9c45e8UL, 0xb26416ffUL, 0x3ff33c08UL, 0x843659a6UL,\n-    0x3c932721UL, 0x66e3fa2dUL, 0x3ff34962UL, 0x930881a4UL, 0xbc835a75UL,\n-    0x5f929ff1UL, 0x3ff356c5UL, 0x5c4e4628UL, 0xbc8b5ceeUL, 0xa2de883bUL,\n-    0x3ff36431UL, 0xa06cb85eUL, 0xbc8c3144UL, 0x373aa9cbUL, 0x3ff371a7UL,\n-    0xbf42eae2UL, 0xbc963aeaUL, 0x231e754aUL, 0x3ff37f26UL, 0x9eceb23cUL,\n-    0xbc99f5caUL, 0x6d05d866UL, 0x3ff38caeUL, 0x3c9904bdUL, 0xbc9e958dUL,\n-    0x1b7140efUL, 0x3ff39a40UL, 0xfc8e2934UL, 0xbc99a9a5UL, 0x34e59ff7UL,\n-    0x3ff3a7dbUL, 0xd661f5e3UL, 0xbc75e436UL, 0xbfec6cf4UL, 0x3ff3b57fUL,\n-    0xe26fff18UL, 0x3c954c66UL, 0xc313a8e5UL, 0x3ff3c32dUL, 0x375d29c3UL,\n-    0xbc9efff8UL, 0x44ede173UL, 0x3ff3d0e5UL, 0x8c284c71UL, 0x3c7fe8d0UL,\n-    0x4c123422UL, 0x3ff3dea6UL, 0x11f09ebcUL, 0x3c8ada09UL, 0xdf1c5175UL,\n-    0x3ff3ec70UL, 0x7b8c9bcaUL, 0xbc8af663UL, 0x04ac801cUL, 0x3ff3fa45UL,\n-    0xf956f9f3UL, 0xbc97d023UL, 0xc367a024UL, 0x3ff40822UL, 0xb6f4d048UL,\n-    0x3c8bddf8UL, 0x21f72e2aUL, 0x3ff4160aUL, 0x1c309278UL, 0xbc5ef369UL,\n-    0x2709468aUL, 0x3ff423fbUL, 0xc0b314ddUL, 0xbc98462dUL, 0xd950a897UL,\n-    0x3ff431f5UL, 0xe35f7999UL, 0xbc81c7ddUL, 0x3f84b9d4UL, 0x3ff43ffaUL,\n-    0x9704c003UL, 0x3c8880beUL, 0x6061892dUL, 0x3ff44e08UL, 0x04ef80d0UL,\n-    0x3c489b7aUL, 0x42a7d232UL, 0x3ff45c20UL, 0x82fb1f8eUL, 0xbc686419UL,\n-    0xed1d0057UL, 0x3ff46a41UL, 0xd1648a76UL, 0x3c9c944bUL, 0x668b3237UL,\n-    0x3ff4786dUL, 0xed445733UL, 0xbc9c20f0UL, 0xb5c13cd0UL, 0x3ff486a2UL,\n-    0xb69062f0UL, 0x3c73c1a3UL, 0xe192aed2UL, 0x3ff494e1UL, 0x5e499ea0UL,\n-    0xbc83b289UL, 0xf0d7d3deUL, 0x3ff4a32aUL, 0xf3d1be56UL, 0x3c99cb62UL,\n-    0xea6db7d7UL, 0x3ff4b17dUL, 0x7f2897f0UL, 0xbc8125b8UL, 0xd5362a27UL,\n-    0x3ff4bfdaUL, 0xafec42e2UL, 0x3c7d4397UL, 0xb817c114UL, 0x3ff4ce41UL,\n-    0x690abd5dUL, 0x3c905e29UL, 0x99fddd0dUL, 0x3ff4dcb2UL, 0xbc6a7833UL,\n-    0x3c98ecdbUL, 0x81d8abffUL, 0x3ff4eb2dUL, 0x2e5d7a52UL, 0xbc95257dUL,\n-    0x769d2ca7UL, 0x3ff4f9b2UL, 0xd25957e3UL, 0xbc94b309UL, 0x7f4531eeUL,\n-    0x3ff50841UL, 0x49b7465fUL, 0x3c7a249bUL, 0xa2cf6642UL, 0x3ff516daUL,\n-    0x69bd93efUL, 0xbc8f7685UL, 0xe83f4eefUL, 0x3ff5257dUL, 0x43efef71UL,\n-    0xbc7c998dUL, 0x569d4f82UL, 0x3ff5342bUL, 0x1db13cadUL, 0xbc807abeUL,\n-    0xf4f6ad27UL, 0x3ff542e2UL, 0x192d5f7eUL, 0x3c87926dUL, 0xca5d920fUL,\n-    0x3ff551a4UL, 0xefede59bUL, 0xbc8d689cUL, 0xdde910d2UL, 0x3ff56070UL,\n-    0x168eebf0UL, 0xbc90fb6eUL, 0x36b527daUL, 0x3ff56f47UL, 0x011d93adUL,\n-    0x3c99bb2cUL, 0xdbe2c4cfUL, 0x3ff57e27UL, 0x8a57b9c4UL, 0xbc90b98cUL,\n-    0xd497c7fdUL, 0x3ff58d12UL, 0x5b9a1de8UL, 0x3c8295e1UL, 0x27ff07ccUL,\n-    0x3ff59c08UL, 0xe467e60fUL, 0xbc97e2ceUL, 0xdd485429UL, 0x3ff5ab07UL,\n-    0x054647adUL, 0x3c96324cUL, 0xfba87a03UL, 0x3ff5ba11UL, 0x4c233e1aUL,\n-    0xbc9b77a1UL, 0x8a5946b7UL, 0x3ff5c926UL, 0x816986a2UL, 0x3c3c4b1bUL,\n-    0x90998b93UL, 0x3ff5d845UL, 0xa8b45643UL, 0xbc9cd6a7UL, 0x15ad2148UL,\n-    0x3ff5e76fUL, 0x3080e65eUL, 0x3c9ba6f9UL, 0x20dceb71UL, 0x3ff5f6a3UL,\n-    0xe3cdcf92UL, 0xbc89eaddUL, 0xb976dc09UL, 0x3ff605e1UL, 0x9b56de47UL,\n-    0xbc93e242UL, 0xe6cdf6f4UL, 0x3ff6152aUL, 0x4ab84c27UL, 0x3c9e4b3eUL,\n-    0xb03a5585UL, 0x3ff6247eUL, 0x7e40b497UL, 0xbc9383c1UL, 0x1d1929fdUL,\n-    0x3ff633ddUL, 0xbeb964e5UL, 0x3c984710UL, 0x34ccc320UL, 0x3ff64346UL,\n-    0x759d8933UL, 0xbc8c483cUL, 0xfebc8fb7UL, 0x3ff652b9UL, 0xc9a73e09UL,\n-    0xbc9ae3d5UL, 0x82552225UL, 0x3ff66238UL, 0x87591c34UL, 0xbc9bb609UL,\n-    0xc70833f6UL, 0x3ff671c1UL, 0x586c6134UL, 0xbc8e8732UL, 0xd44ca973UL,\n-    0x3ff68155UL, 0x44f73e65UL, 0x3c6038aeUL, 0xb19e9538UL, 0x3ff690f4UL,\n-    0x9aeb445dUL, 0x3c8804bdUL, 0x667f3bcdUL, 0x3ff6a09eUL, 0x13b26456UL,\n-    0xbc9bdd34UL, 0xfa75173eUL, 0x3ff6b052UL, 0x2c9a9d0eUL, 0x3c7a38f5UL,\n-    0x750bdabfUL, 0x3ff6c012UL, 0x67ff0b0dUL, 0xbc728956UL, 0xddd47645UL,\n-    0x3ff6cfdcUL, 0xb6f17309UL, 0x3c9c7aa9UL, 0x3c651a2fUL, 0x3ff6dfb2UL,\n-    0x683c88abUL, 0xbc6bbe3aUL, 0x98593ae5UL, 0x3ff6ef92UL, 0x9e1ac8b2UL,\n-    0xbc90b974UL, 0xf9519484UL, 0x3ff6ff7dUL, 0x25860ef6UL, 0xbc883c0fUL,\n-    0x66f42e87UL, 0x3ff70f74UL, 0xd45aa65fUL, 0x3c59d644UL, 0xe8ec5f74UL,\n-    0x3ff71f75UL, 0x86887a99UL, 0xbc816e47UL, 0x86ead08aUL, 0x3ff72f82UL,\n-    0x2cd62c72UL, 0xbc920aa0UL, 0x48a58174UL, 0x3ff73f9aUL, 0x6c65d53cUL,\n-    0xbc90a8d9UL, 0x35d7cbfdUL, 0x3ff74fbdUL, 0x618a6e1cUL, 0x3c9047fdUL,\n-    0x564267c9UL, 0x3ff75febUL, 0x57316dd3UL, 0xbc902459UL, 0xb1ab6e09UL,\n-    0x3ff77024UL, 0x169147f8UL, 0x3c9b7877UL, 0x4fde5d3fUL, 0x3ff78069UL,\n-    0x0a02162dUL, 0x3c9866b8UL, 0x38ac1cf6UL, 0x3ff790b9UL, 0x62aadd3eUL,\n-    0x3c9349a8UL, 0x73eb0187UL, 0x3ff7a114UL, 0xee04992fUL, 0xbc841577UL,\n-    0x0976cfdbUL, 0x3ff7b17bUL, 0x8468dc88UL, 0xbc9bebb5UL, 0x0130c132UL,\n-    0x3ff7c1edUL, 0xd1164dd6UL, 0x3c9f124cUL, 0x62ff86f0UL, 0x3ff7d26aUL,\n-    0xfb72b8b4UL, 0x3c91bddbUL, 0x36cf4e62UL, 0x3ff7e2f3UL, 0xba15797eUL,\n-    0x3c705d02UL, 0x8491c491UL, 0x3ff7f387UL, 0xcf9311aeUL, 0xbc807f11UL,\n-    0x543e1a12UL, 0x3ff80427UL, 0x626d972bUL, 0xbc927c86UL, 0xadd106d9UL,\n-    0x3ff814d2UL, 0x0d151d4dUL, 0x3c946437UL, 0x994cce13UL, 0x3ff82589UL,\n-    0xd41532d8UL, 0xbc9d4c1dUL, 0x1eb941f7UL, 0x3ff8364cUL, 0x31df2bd5UL,\n-    0x3c999b9aUL, 0x4623c7adUL, 0x3ff8471aUL, 0xa341cdfbUL, 0xbc88d684UL,\n-    0x179f5b21UL, 0x3ff857f4UL, 0xf8b216d0UL, 0xbc5ba748UL, 0x9b4492edUL,\n-    0x3ff868d9UL, 0x9bd4f6baUL, 0xbc9fc6f8UL, 0xd931a436UL, 0x3ff879caUL,\n-    0xd2db47bdUL, 0x3c85d2d7UL, 0xd98a6699UL, 0x3ff88ac7UL, 0xf37cb53aUL,\n-    0x3c9994c2UL, 0xa478580fUL, 0x3ff89bd0UL, 0x4475202aUL, 0x3c9d5395UL,\n-    0x422aa0dbUL, 0x3ff8ace5UL, 0x56864b27UL, 0x3c96e9f1UL, 0xbad61778UL,\n-    0x3ff8be05UL, 0xfc43446eUL, 0x3c9ecb5eUL, 0x16b5448cUL, 0x3ff8cf32UL,\n-    0x32e9e3aaUL, 0xbc70d55eUL, 0x5e0866d9UL, 0x3ff8e06aUL, 0x6fc9b2e6UL,\n-    0xbc97114aUL, 0x99157736UL, 0x3ff8f1aeUL, 0xa2e3976cUL, 0x3c85cc13UL,\n-    0xd0282c8aUL, 0x3ff902feUL, 0x85fe3fd2UL, 0x3c9592caUL, 0x0b91ffc6UL,\n-    0x3ff9145bUL, 0x2e582524UL, 0xbc9dd679UL, 0x53aa2fe2UL, 0x3ff925c3UL,\n-    0xa639db7fUL, 0xbc83455fUL, 0xb0cdc5e5UL, 0x3ff93737UL, 0x81b57ebcUL,\n-    0xbc675fc7UL, 0x2b5f98e5UL, 0x3ff948b8UL, 0x797d2d99UL, 0xbc8dc3d6UL,\n-    0xcbc8520fUL, 0x3ff95a44UL, 0x96a5f039UL, 0xbc764b7cUL, 0x9a7670b3UL,\n-    0x3ff96bddUL, 0x7f19c896UL, 0xbc5ba596UL, 0x9fde4e50UL, 0x3ff97d82UL,\n-    0x7c1b85d1UL, 0xbc9d185bUL, 0xe47a22a2UL, 0x3ff98f33UL, 0xa24c78ecUL,\n-    0x3c7cabdaUL, 0x70ca07baUL, 0x3ff9a0f1UL, 0x91cee632UL, 0xbc9173bdUL,\n-    0x4d53fe0dUL, 0x3ff9b2bbUL, 0x4df6d518UL, 0xbc9dd84eUL, 0x82a3f090UL,\n-    0x3ff9c491UL, 0xb071f2beUL, 0x3c7c7c46UL, 0x194bb8d5UL, 0x3ff9d674UL,\n-    0xa3dd8233UL, 0xbc9516beUL, 0x19e32323UL, 0x3ff9e863UL, 0x78e64c6eUL,\n-    0x3c7824caUL, 0x8d07f29eUL, 0x3ff9fa5eUL, 0xaaf1faceUL, 0xbc84a9ceUL,\n-    0x7b5de565UL, 0x3ffa0c66UL, 0x5d1cd533UL, 0xbc935949UL, 0xed8eb8bbUL,\n-    0x3ffa1e7aUL, 0xee8be70eUL, 0x3c9c6618UL, 0xec4a2d33UL, 0x3ffa309bUL,\n-    0x7ddc36abUL, 0x3c96305cUL, 0x80460ad8UL, 0x3ffa42c9UL, 0x589fb120UL,\n-    0xbc9aa780UL, 0xb23e255dUL, 0x3ffa5503UL, 0xdb8d41e1UL, 0xbc9d2f6eUL,\n-    0x8af46052UL, 0x3ffa674aUL, 0x30670366UL, 0x3c650f56UL, 0x1330b358UL,\n-    0x3ffa799eUL, 0xcac563c7UL, 0x3c9bcb7eUL, 0x53c12e59UL, 0x3ffa8bfeUL,\n-    0xb2ba15a9UL, 0xbc94f867UL, 0x5579fdbfUL, 0x3ffa9e6bUL, 0x0ef7fd31UL,\n-    0x3c90fac9UL, 0x21356ebaUL, 0x3ffab0e5UL, 0xdae94545UL, 0x3c889c31UL,\n-    0xbfd3f37aUL, 0x3ffac36bUL, 0xcae76cd0UL, 0xbc8f9234UL, 0x3a3c2774UL,\n-    0x3ffad5ffUL, 0xb6b1b8e5UL, 0x3c97ef3bUL, 0x995ad3adUL, 0x3ffae89fUL,\n-    0x345dcc81UL, 0x3c97a1cdUL, 0xe622f2ffUL, 0x3ffafb4cUL, 0x0f315ecdUL,\n-    0xbc94b2fcUL, 0x298db666UL, 0x3ffb0e07UL, 0x4c80e425UL, 0xbc9bdef5UL,\n-    0x6c9a8952UL, 0x3ffb20ceUL, 0x4a0756ccUL, 0x3c94dd02UL, 0xb84f15fbUL,\n-    0x3ffb33a2UL, 0x3084d708UL, 0xbc62805eUL, 0x15b749b1UL, 0x3ffb4684UL,\n-    0xe9df7c90UL, 0xbc7f763dUL, 0x8de5593aUL, 0x3ffb5972UL, 0xbbba6de3UL,\n-    0xbc9c71dfUL, 0x29f1c52aUL, 0x3ffb6c6eUL, 0x52883f6eUL, 0x3c92a8f3UL,\n-    0xf2fb5e47UL, 0x3ffb7f76UL, 0x7e54ac3bUL, 0xbc75584fUL, 0xf22749e4UL,\n-    0x3ffb928cUL, 0x54cb65c6UL, 0xbc9b7216UL, 0x30a1064aUL, 0x3ffba5b0UL,\n-    0x0e54292eUL, 0xbc9efcd3UL, 0xb79a6f1fUL, 0x3ffbb8e0UL, 0xc9696205UL,\n-    0xbc3f52d1UL, 0x904bc1d2UL, 0x3ffbcc1eUL, 0x7a2d9e84UL, 0x3c823dd0UL,\n-    0xc3f3a207UL, 0x3ffbdf69UL, 0x60ea5b53UL, 0xbc3c2623UL, 0x5bd71e09UL,\n-    0x3ffbf2c2UL, 0x3f6b9c73UL, 0xbc9efdcaUL, 0x6141b33dUL, 0x3ffc0628UL,\n-    0xa1fbca34UL, 0xbc8d8a5aUL, 0xdd85529cUL, 0x3ffc199bUL, 0x895048ddUL,\n-    0x3c811065UL, 0xd9fa652cUL, 0x3ffc2d1cUL, 0x17c8a5d7UL, 0xbc96e516UL,\n-    0x5fffd07aUL, 0x3ffc40abUL, 0xe083c60aUL, 0x3c9b4537UL, 0x78fafb22UL,\n-    0x3ffc5447UL, 0x2493b5afUL, 0x3c912f07UL, 0x2e57d14bUL, 0x3ffc67f1UL,\n-    0xff483cadUL, 0x3c92884dUL, 0x8988c933UL, 0x3ffc7ba8UL, 0xbe255559UL,\n-    0xbc8e76bbUL, 0x9406e7b5UL, 0x3ffc8f6dUL, 0x48805c44UL, 0x3c71acbcUL,\n-    0x5751c4dbUL, 0x3ffca340UL, 0xd10d08f5UL, 0xbc87f2beUL, 0xdcef9069UL,\n-    0x3ffcb720UL, 0xd1e949dbUL, 0x3c7503cbUL, 0x2e6d1675UL, 0x3ffccb0fUL,\n-    0x86009092UL, 0xbc7d220fUL, 0x555dc3faUL, 0x3ffcdf0bUL, 0x53829d72UL,\n-    0xbc8dd83bUL, 0x5b5bab74UL, 0x3ffcf315UL, 0xb86dff57UL, 0xbc9a08e9UL,\n-    0x4a07897cUL, 0x3ffd072dUL, 0x43797a9cUL, 0xbc9cbc37UL, 0x2b08c968UL,\n-    0x3ffd1b53UL, 0x219a36eeUL, 0x3c955636UL, 0x080d89f2UL, 0x3ffd2f87UL,\n-    0x719d8578UL, 0xbc9d487bUL, 0xeacaa1d6UL, 0x3ffd43c8UL, 0xbf5a1614UL,\n-    0x3c93db53UL, 0xdcfba487UL, 0x3ffd5818UL, 0xd75b3707UL, 0x3c82ed02UL,\n-    0xe862e6d3UL, 0x3ffd6c76UL, 0x4a8165a0UL, 0x3c5fe87aUL, 0x16c98398UL,\n-    0x3ffd80e3UL, 0x8beddfe8UL, 0xbc911ec1UL, 0x71ff6075UL, 0x3ffd955dUL,\n-    0xbb9af6beUL, 0x3c9a052dUL, 0x03db3285UL, 0x3ffda9e6UL, 0x696db532UL,\n-    0x3c9c2300UL, 0xd63a8315UL, 0x3ffdbe7cUL, 0x926b8be4UL, 0xbc9b76f1UL,\n-    0xf301b460UL, 0x3ffdd321UL, 0x78f018c3UL, 0x3c92da57UL, 0x641c0658UL,\n-    0x3ffde7d5UL, 0x8e79ba8fUL, 0xbc9ca552UL, 0x337b9b5fUL, 0x3ffdfc97UL,\n-    0x4f184b5cUL, 0xbc91a5cdUL, 0x6b197d17UL, 0x3ffe1167UL, 0xbd5c7f44UL,\n-    0xbc72b529UL, 0x14f5a129UL, 0x3ffe2646UL, 0x817a1496UL, 0xbc97b627UL,\n-    0x3b16ee12UL, 0x3ffe3b33UL, 0x31fdc68bUL, 0xbc99f4a4UL, 0xe78b3ff6UL,\n-    0x3ffe502eUL, 0x80a9cc8fUL, 0x3c839e89UL, 0x24676d76UL, 0x3ffe6539UL,\n-    0x7522b735UL, 0xbc863ff8UL, 0xfbc74c83UL, 0x3ffe7a51UL, 0xca0c8de2UL,\n-    0x3c92d522UL, 0x77cdb740UL, 0x3ffe8f79UL, 0x80b054b1UL, 0xbc910894UL,\n-    0xa2a490daUL, 0x3ffea4afUL, 0x179c2893UL, 0xbc9e9c23UL, 0x867cca6eUL,\n-    0x3ffeb9f4UL, 0x2293e4f2UL, 0x3c94832fUL, 0x2d8e67f1UL, 0x3ffecf48UL,\n-    0xb411ad8cUL, 0xbc9c93f3UL, 0xa2188510UL, 0x3ffee4aaUL, 0xa487568dUL,\n-    0x3c91c68dUL, 0xee615a27UL, 0x3ffefa1bUL, 0x86a4b6b0UL, 0x3c9dc7f4UL,\n-    0x1cb6412aUL, 0x3fff0f9cUL, 0x65181d45UL, 0xbc932200UL, 0x376bba97UL,\n-    0x3fff252bUL, 0xbf0d8e43UL, 0x3c93a1a5UL, 0x48dd7274UL, 0x3fff3ac9UL,\n-    0x3ed837deUL, 0xbc795a5aUL, 0x5b6e4540UL, 0x3fff5076UL, 0x2dd8a18bUL,\n-    0x3c99d3e1UL, 0x798844f8UL, 0x3fff6632UL, 0x3539343eUL, 0x3c9fa37bUL,\n-    0xad9cbe14UL, 0x3fff7bfdUL, 0xd006350aUL, 0xbc9dbb12UL, 0x02243c89UL,\n-    0x3fff91d8UL, 0xa779f689UL, 0xbc612ea8UL, 0x819e90d8UL, 0x3fffa7c1UL,\n-    0xf3a5931eUL, 0x3c874853UL, 0x3692d514UL, 0x3fffbdbaUL, 0x15098eb6UL,\n-    0xbc796773UL, 0x2b8f71f1UL, 0x3fffd3c2UL, 0x966579e7UL, 0x3c62eb74UL,\n-    0x6b2a23d9UL, 0x3fffe9d9UL, 0x7442fde3UL, 0x3c74a603UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _e_coeff[] =\n-{\n-    0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL, 0x6fba4e77UL,\n-    0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL, 0xfefa39efUL, 0x3fe62e42UL,\n-    0x00000000UL, 0x00000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _coeff_h[] =\n-{\n-    0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _HIGHMASK_LOG_X[] =\n-{\n-    0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xfffff800UL\n-};\n-\n-ATTRIBUTE_ALIGNED(8) juint _HALFMASK[] =\n-{\n-    0xf8000000UL, 0xffffffffUL, 0xf8000000UL, 0xffffffffUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _coeff_pow[] =\n-{\n-    0x6dc96112UL, 0xbf836578UL, 0xee241472UL, 0xbf9b0301UL, 0x9f95985aUL,\n-    0xbfb528dbUL, 0xb3841d2aUL, 0xbfd619b6UL, 0x518775e3UL, 0x3f9004f2UL,\n-    0xac8349bbUL, 0x3fa76c9bUL, 0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL,\n-    0xbf5dabe1UL, 0x9f95985aUL, 0xbfb528dbUL, 0xf8b5787dUL, 0x3ef2531eUL,\n-    0x486ececbUL, 0x3fc4635eUL, 0x412055ccUL, 0xbdd61bb2UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _L_tbl_pow[] =\n-{\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x20000000UL,\n-    0x3feff00aUL, 0x96621f95UL, 0x3e5b1856UL, 0xe0000000UL, 0x3fefe019UL,\n-    0xe5916f9eUL, 0xbe325278UL, 0x00000000UL, 0x3fefd02fUL, 0x859a1062UL,\n-    0x3e595fb7UL, 0xc0000000UL, 0x3fefc049UL, 0xb245f18fUL, 0xbe529c38UL,\n-    0xe0000000UL, 0x3fefb069UL, 0xad2880a7UL, 0xbe501230UL, 0x60000000UL,\n-    0x3fefa08fUL, 0xc8e72420UL, 0x3e597bd1UL, 0x80000000UL, 0x3fef90baUL,\n-    0xc30c4500UL, 0xbe5d6c75UL, 0xe0000000UL, 0x3fef80eaUL, 0x02c63f43UL,\n-    0x3e2e1318UL, 0xc0000000UL, 0x3fef7120UL, 0xb3d4ccccUL, 0xbe44c52aUL,\n-    0x00000000UL, 0x3fef615cUL, 0xdbd91397UL, 0xbe4e7d6cUL, 0xa0000000UL,\n-    0x3fef519cUL, 0x65c5cd68UL, 0xbe522dc8UL, 0xa0000000UL, 0x3fef41e2UL,\n-    0x46d1306cUL, 0xbe5a840eUL, 0xe0000000UL, 0x3fef322dUL, 0xd2980e94UL,\n-    0x3e5071afUL, 0xa0000000UL, 0x3fef227eUL, 0x773abadeUL, 0xbe5891e5UL,\n-    0xa0000000UL, 0x3fef12d4UL, 0xdc6bf46bUL, 0xbe5cccbeUL, 0xe0000000UL,\n-    0x3fef032fUL, 0xbc7247faUL, 0xbe2bab83UL, 0x80000000UL, 0x3feef390UL,\n-    0xbcaa1e46UL, 0xbe53bb3bUL, 0x60000000UL, 0x3feee3f6UL, 0x5f6c682dUL,\n-    0xbe54c619UL, 0x80000000UL, 0x3feed461UL, 0x5141e368UL, 0xbe4b6d86UL,\n-    0xe0000000UL, 0x3feec4d1UL, 0xec678f76UL, 0xbe369af6UL, 0x80000000UL,\n-    0x3feeb547UL, 0x41301f55UL, 0xbe2d4312UL, 0x60000000UL, 0x3feea5c2UL,\n-    0x676da6bdUL, 0xbe4d8dd0UL, 0x60000000UL, 0x3fee9642UL, 0x57a891c4UL,\n-    0x3e51f991UL, 0xa0000000UL, 0x3fee86c7UL, 0xe4eb491eUL, 0x3e579bf9UL,\n-    0x20000000UL, 0x3fee7752UL, 0xfddc4a2cUL, 0xbe3356e6UL, 0xc0000000UL,\n-    0x3fee67e1UL, 0xd75b5bf1UL, 0xbe449531UL, 0x80000000UL, 0x3fee5876UL,\n-    0xbd423b8eUL, 0x3df54fe4UL, 0x60000000UL, 0x3fee4910UL, 0x330e51b9UL,\n-    0x3e54289cUL, 0x80000000UL, 0x3fee39afUL, 0x8651a95fUL, 0xbe55aad6UL,\n-    0xa0000000UL, 0x3fee2a53UL, 0x5e98c708UL, 0xbe2fc4a9UL, 0xe0000000UL,\n-    0x3fee1afcUL, 0x0989328dUL, 0x3e23958cUL, 0x40000000UL, 0x3fee0babUL,\n-    0xee642abdUL, 0xbe425dd8UL, 0xa0000000UL, 0x3fedfc5eUL, 0xc394d236UL,\n-    0x3e526362UL, 0x20000000UL, 0x3feded17UL, 0xe104aa8eUL, 0x3e4ce247UL,\n-    0xc0000000UL, 0x3fedddd4UL, 0x265a9be4UL, 0xbe5bb77aUL, 0x40000000UL,\n-    0x3fedce97UL, 0x0ecac52fUL, 0x3e4a7cb1UL, 0xe0000000UL, 0x3fedbf5eUL,\n-    0x124cb3b8UL, 0x3e257024UL, 0x80000000UL, 0x3fedb02bUL, 0xe6d4febeUL,\n-    0xbe2033eeUL, 0x20000000UL, 0x3feda0fdUL, 0x39cca00eUL, 0xbe3ddabcUL,\n-    0xc0000000UL, 0x3fed91d3UL, 0xef8a552aUL, 0xbe543390UL, 0x40000000UL,\n-    0x3fed82afUL, 0xb8e85204UL, 0x3e513850UL, 0xe0000000UL, 0x3fed738fUL,\n-    0x3d59fe08UL, 0xbe5db728UL, 0x40000000UL, 0x3fed6475UL, 0x3aa7ead1UL,\n-    0x3e58804bUL, 0xc0000000UL, 0x3fed555fUL, 0xf8a35ba9UL, 0xbe5298b0UL,\n-    0x00000000UL, 0x3fed464fUL, 0x9a88dd15UL, 0x3e5a8cdbUL, 0x40000000UL,\n-    0x3fed3743UL, 0xb0b0a190UL, 0x3e598635UL, 0x80000000UL, 0x3fed283cUL,\n-    0xe2113295UL, 0xbe5c1119UL, 0x80000000UL, 0x3fed193aUL, 0xafbf1728UL,\n-    0xbe492e9cUL, 0x60000000UL, 0x3fed0a3dUL, 0xe4a4ccf3UL, 0x3e19b90eUL,\n-    0x20000000UL, 0x3fecfb45UL, 0xba3cbeb8UL, 0x3e406b50UL, 0xc0000000UL,\n-    0x3fecec51UL, 0x110f7dddUL, 0x3e0d6806UL, 0x40000000UL, 0x3fecdd63UL,\n-    0x7dd7d508UL, 0xbe5a8943UL, 0x80000000UL, 0x3fecce79UL, 0x9b60f271UL,\n-    0xbe50676aUL, 0x80000000UL, 0x3fecbf94UL, 0x0b9ad660UL, 0x3e59174fUL,\n-    0x60000000UL, 0x3fecb0b4UL, 0x00823d9cUL, 0x3e5bbf72UL, 0x20000000UL,\n-    0x3feca1d9UL, 0x38a6ec89UL, 0xbe4d38f9UL, 0x80000000UL, 0x3fec9302UL,\n-    0x3a0b7d8eUL, 0x3e53dbfdUL, 0xc0000000UL, 0x3fec8430UL, 0xc6826b34UL,\n-    0xbe27c5c9UL, 0xc0000000UL, 0x3fec7563UL, 0x0c706381UL, 0xbe593653UL,\n-    0x60000000UL, 0x3fec669bUL, 0x7df34ec7UL, 0x3e461ab5UL, 0xe0000000UL,\n-    0x3fec57d7UL, 0x40e5e7e8UL, 0xbe5c3daeUL, 0x00000000UL, 0x3fec4919UL,\n-    0x5602770fUL, 0xbe55219dUL, 0xc0000000UL, 0x3fec3a5eUL, 0xec7911ebUL,\n-    0x3e5a5d25UL, 0x60000000UL, 0x3fec2ba9UL, 0xb39ea225UL, 0xbe53c00bUL,\n-    0x80000000UL, 0x3fec1cf8UL, 0x967a212eUL, 0x3e5a8ddfUL, 0x60000000UL,\n-    0x3fec0e4cUL, 0x580798bdUL, 0x3e5f53abUL, 0x00000000UL, 0x3febffa5UL,\n-    0xb8282df6UL, 0xbe46b874UL, 0x20000000UL, 0x3febf102UL, 0xe33a6729UL,\n-    0x3e54963fUL, 0x00000000UL, 0x3febe264UL, 0x3b53e88aUL, 0xbe3adce1UL,\n-    0x60000000UL, 0x3febd3caUL, 0xc2585084UL, 0x3e5cde9fUL, 0x80000000UL,\n-    0x3febc535UL, 0xa335c5eeUL, 0xbe39fd9cUL, 0x20000000UL, 0x3febb6a5UL,\n-    0x7325b04dUL, 0x3e42ba15UL, 0x60000000UL, 0x3feba819UL, 0x1564540fUL,\n-    0x3e3a9f35UL, 0x40000000UL, 0x3feb9992UL, 0x83fff592UL, 0xbe5465ceUL,\n-    0xa0000000UL, 0x3feb8b0fUL, 0xb9da63d3UL, 0xbe4b1a0aUL, 0x80000000UL,\n-    0x3feb7c91UL, 0x6d6f1ea4UL, 0x3e557657UL, 0x00000000UL, 0x3feb6e18UL,\n-    0x5e80a1bfUL, 0x3e4ddbb6UL, 0x00000000UL, 0x3feb5fa3UL, 0x1c9eacb5UL,\n-    0x3e592877UL, 0xa0000000UL, 0x3feb5132UL, 0x6d40beb3UL, 0xbe51858cUL,\n-    0xa0000000UL, 0x3feb42c6UL, 0xd740c67bUL, 0x3e427ad2UL, 0x40000000UL,\n-    0x3feb345fUL, 0xa3e0cceeUL, 0xbe5c2fc4UL, 0x40000000UL, 0x3feb25fcUL,\n-    0x8e752b50UL, 0xbe3da3c2UL, 0xc0000000UL, 0x3feb179dUL, 0xa892e7deUL,\n-    0x3e1fb481UL, 0xc0000000UL, 0x3feb0943UL, 0x21ed71e9UL, 0xbe365206UL,\n-    0x20000000UL, 0x3feafaeeUL, 0x0e1380a3UL, 0x3e5c5b7bUL, 0x20000000UL,\n-    0x3feaec9dUL, 0x3c3d640eUL, 0xbe5dbbd0UL, 0x60000000UL, 0x3feade50UL,\n-    0x8f97a715UL, 0x3e3a8ec5UL, 0x20000000UL, 0x3fead008UL, 0x23ab2839UL,\n-    0x3e2fe98aUL, 0x40000000UL, 0x3feac1c4UL, 0xf4bbd50fUL, 0x3e54d8f6UL,\n-    0xe0000000UL, 0x3feab384UL, 0x14757c4dUL, 0xbe48774cUL, 0xc0000000UL,\n-    0x3feaa549UL, 0x7c7b0eeaUL, 0x3e5b51bbUL, 0x20000000UL, 0x3fea9713UL,\n-    0xf56f7013UL, 0x3e386200UL, 0xe0000000UL, 0x3fea88e0UL, 0xbe428ebeUL,\n-    0xbe514af5UL, 0xe0000000UL, 0x3fea7ab2UL, 0x8d0e4496UL, 0x3e4f9165UL,\n-    0x60000000UL, 0x3fea6c89UL, 0xdbacc5d5UL, 0xbe5c063bUL, 0x20000000UL,\n-    0x3fea5e64UL, 0x3f19d970UL, 0xbe5a0c8cUL, 0x20000000UL, 0x3fea5043UL,\n-    0x09ea3e6bUL, 0x3e5065dcUL, 0x80000000UL, 0x3fea4226UL, 0x78df246cUL,\n-    0x3e5e05f6UL, 0x40000000UL, 0x3fea340eUL, 0x4057d4a0UL, 0x3e431b2bUL,\n-    0x40000000UL, 0x3fea25faUL, 0x82867bb5UL, 0x3e4b76beUL, 0xa0000000UL,\n-    0x3fea17eaUL, 0x9436f40aUL, 0xbe5aad39UL, 0x20000000UL, 0x3fea09dfUL,\n-    0x4b5253b3UL, 0x3e46380bUL, 0x00000000UL, 0x3fe9fbd8UL, 0x8fc52466UL,\n-    0xbe386f9bUL, 0x20000000UL, 0x3fe9edd5UL, 0x22d3f344UL, 0xbe538347UL,\n-    0x60000000UL, 0x3fe9dfd6UL, 0x1ac33522UL, 0x3e5dbc53UL, 0x00000000UL,\n-    0x3fe9d1dcUL, 0xeabdff1dUL, 0x3e40fc0cUL, 0xe0000000UL, 0x3fe9c3e5UL,\n-    0xafd30e73UL, 0xbe585e63UL, 0xe0000000UL, 0x3fe9b5f3UL, 0xa52f226aUL,\n-    0xbe43e8f9UL, 0x20000000UL, 0x3fe9a806UL, 0xecb8698dUL, 0xbe515b36UL,\n-    0x80000000UL, 0x3fe99a1cUL, 0xf2b4e89dUL, 0x3e48b62bUL, 0x20000000UL,\n-    0x3fe98c37UL, 0x7c9a88fbUL, 0x3e44414cUL, 0x00000000UL, 0x3fe97e56UL,\n-    0xda015741UL, 0xbe5d13baUL, 0xe0000000UL, 0x3fe97078UL, 0x5fdace06UL,\n-    0x3e51b947UL, 0x00000000UL, 0x3fe962a0UL, 0x956ca094UL, 0x3e518785UL,\n-    0x40000000UL, 0x3fe954cbUL, 0x01164c1dUL, 0x3e5d5b57UL, 0xc0000000UL,\n-    0x3fe946faUL, 0xe63b3767UL, 0xbe4f84e7UL, 0x40000000UL, 0x3fe9392eUL,\n-    0xe57cc2a9UL, 0x3e34eda3UL, 0xe0000000UL, 0x3fe92b65UL, 0x8c75b544UL,\n-    0x3e5766a0UL, 0xc0000000UL, 0x3fe91da1UL, 0x37d1d087UL, 0xbe5e2ab1UL,\n-    0x80000000UL, 0x3fe90fe1UL, 0xa953dc20UL, 0x3e5fa1f3UL, 0x80000000UL,\n-    0x3fe90225UL, 0xdbd3f369UL, 0x3e47d6dbUL, 0xa0000000UL, 0x3fe8f46dUL,\n-    0x1c9be989UL, 0xbe5e2b0aUL, 0xa0000000UL, 0x3fe8e6b9UL, 0x3c93d76aUL,\n-    0x3e5c8618UL, 0xe0000000UL, 0x3fe8d909UL, 0x2182fc9aUL, 0xbe41aa9eUL,\n-    0x20000000UL, 0x3fe8cb5eUL, 0xe6b3539dUL, 0xbe530d19UL, 0x60000000UL,\n-    0x3fe8bdb6UL, 0x49e58cc3UL, 0xbe3bb374UL, 0xa0000000UL, 0x3fe8b012UL,\n-    0xa7cfeb8fUL, 0x3e56c412UL, 0x00000000UL, 0x3fe8a273UL, 0x8d52bc19UL,\n-    0x3e1429b8UL, 0x60000000UL, 0x3fe894d7UL, 0x4dc32c6cUL, 0xbe48604cUL,\n-    0xc0000000UL, 0x3fe8873fUL, 0x0c868e56UL, 0xbe564ee5UL, 0x00000000UL,\n-    0x3fe879acUL, 0x56aee828UL, 0x3e5e2fd8UL, 0x60000000UL, 0x3fe86c1cUL,\n-    0x7ceab8ecUL, 0x3e493365UL, 0xc0000000UL, 0x3fe85e90UL, 0x78d4dadcUL,\n-    0xbe4f7f25UL, 0x00000000UL, 0x3fe85109UL, 0x0ccd8280UL, 0x3e31e7a2UL,\n-    0x40000000UL, 0x3fe84385UL, 0x34ba4e15UL, 0x3e328077UL, 0x80000000UL,\n-    0x3fe83605UL, 0xa670975aUL, 0xbe53eee5UL, 0xa0000000UL, 0x3fe82889UL,\n-    0xf61b77b2UL, 0xbe43a20aUL, 0xa0000000UL, 0x3fe81b11UL, 0x13e6643bUL,\n-    0x3e5e5fe5UL, 0xc0000000UL, 0x3fe80d9dUL, 0x82cc94e8UL, 0xbe5ff1f9UL,\n-    0xa0000000UL, 0x3fe8002dUL, 0x8a0c9c5dUL, 0xbe42b0e7UL, 0x60000000UL,\n-    0x3fe7f2c1UL, 0x22a16f01UL, 0x3e5d9ea0UL, 0x20000000UL, 0x3fe7e559UL,\n-    0xc38cd451UL, 0x3e506963UL, 0xc0000000UL, 0x3fe7d7f4UL, 0x9902bc71UL,\n-    0x3e4503d7UL, 0x40000000UL, 0x3fe7ca94UL, 0xdef2a3c0UL, 0x3e3d98edUL,\n-    0xa0000000UL, 0x3fe7bd37UL, 0xed49abb0UL, 0x3e24c1ffUL, 0xe0000000UL,\n-    0x3fe7afdeUL, 0xe3b0be70UL, 0xbe40c467UL, 0x00000000UL, 0x3fe7a28aUL,\n-    0xaf9f193cUL, 0xbe5dff6cUL, 0xe0000000UL, 0x3fe79538UL, 0xb74cf6b6UL,\n-    0xbe258ed0UL, 0xa0000000UL, 0x3fe787ebUL, 0x1d9127c7UL, 0x3e345fb0UL,\n-    0x40000000UL, 0x3fe77aa2UL, 0x1028c21dUL, 0xbe4619bdUL, 0xa0000000UL,\n-    0x3fe76d5cUL, 0x7cb0b5e4UL, 0x3e40f1a2UL, 0xe0000000UL, 0x3fe7601aUL,\n-    0x2b1bc4adUL, 0xbe32e8bbUL, 0xe0000000UL, 0x3fe752dcUL, 0x6839f64eUL,\n-    0x3e41f57bUL, 0xc0000000UL, 0x3fe745a2UL, 0xc4121f7eUL, 0xbe52c40aUL,\n-    0x60000000UL, 0x3fe7386cUL, 0xd6852d72UL, 0xbe5c4e6bUL, 0xc0000000UL,\n-    0x3fe72b39UL, 0x91d690f7UL, 0xbe57f88fUL, 0xe0000000UL, 0x3fe71e0aUL,\n-    0x627a2159UL, 0xbe4425d5UL, 0xc0000000UL, 0x3fe710dfUL, 0x50a54033UL,\n-    0x3e422b7eUL, 0x60000000UL, 0x3fe703b8UL, 0x3b0b5f91UL, 0x3e5d3857UL,\n-    0xe0000000UL, 0x3fe6f694UL, 0x84d628a2UL, 0xbe51f090UL, 0x00000000UL,\n-    0x3fe6e975UL, 0x306d8894UL, 0xbe414d83UL, 0xe0000000UL, 0x3fe6dc58UL,\n-    0x30bf24aaUL, 0xbe4650caUL, 0x80000000UL, 0x3fe6cf40UL, 0xd4628d69UL,\n-    0xbe5db007UL, 0xc0000000UL, 0x3fe6c22bUL, 0xa2aae57bUL, 0xbe31d279UL,\n-    0xc0000000UL, 0x3fe6b51aUL, 0x860edf7eUL, 0xbe2d4c4aUL, 0x80000000UL,\n-    0x3fe6a80dUL, 0xf3559341UL, 0xbe5f7e98UL, 0xe0000000UL, 0x3fe69b03UL,\n-    0xa885899eUL, 0xbe5c2011UL, 0xe0000000UL, 0x3fe68dfdUL, 0x2bdc6d37UL,\n-    0x3e224a82UL, 0xa0000000UL, 0x3fe680fbUL, 0xc12ad1b9UL, 0xbe40cf56UL,\n-    0x00000000UL, 0x3fe673fdUL, 0x1bcdf659UL, 0xbdf52f2dUL, 0x00000000UL,\n-    0x3fe66702UL, 0x5df10408UL, 0x3e5663e0UL, 0xc0000000UL, 0x3fe65a0aUL,\n-    0xa4070568UL, 0xbe40b12fUL, 0x00000000UL, 0x3fe64d17UL, 0x71c54c47UL,\n-    0x3e5f5e8bUL, 0x00000000UL, 0x3fe64027UL, 0xbd4b7e83UL, 0x3e42ead6UL,\n-    0xa0000000UL, 0x3fe6333aUL, 0x61598bd2UL, 0xbe4c48d4UL, 0xc0000000UL,\n-    0x3fe62651UL, 0x6f538d61UL, 0x3e548401UL, 0xa0000000UL, 0x3fe6196cUL,\n-    0x14344120UL, 0xbe529af6UL, 0x00000000UL, 0x3fe60c8bUL, 0x5982c587UL,\n-    0xbe3e1e4fUL, 0x00000000UL, 0x3fe5ffadUL, 0xfe51d4eaUL, 0xbe4c897aUL,\n-    0x80000000UL, 0x3fe5f2d2UL, 0xfd46ebe1UL, 0x3e552e00UL, 0xa0000000UL,\n-    0x3fe5e5fbUL, 0xa4695699UL, 0x3e5ed471UL, 0x60000000UL, 0x3fe5d928UL,\n-    0x80d118aeUL, 0x3e456b61UL, 0xa0000000UL, 0x3fe5cc58UL, 0x304c330bUL,\n-    0x3e54dc29UL, 0x80000000UL, 0x3fe5bf8cUL, 0x0af2dedfUL, 0xbe3aa9bdUL,\n-    0xe0000000UL, 0x3fe5b2c3UL, 0x15fc9258UL, 0xbe479a37UL, 0xc0000000UL,\n-    0x3fe5a5feUL, 0x9292c7eaUL, 0x3e188650UL, 0x20000000UL, 0x3fe5993dUL,\n-    0x33b4d380UL, 0x3e5d6d93UL, 0x20000000UL, 0x3fe58c7fUL, 0x02fd16c7UL,\n-    0x3e2fe961UL, 0xa0000000UL, 0x3fe57fc4UL, 0x4a05edb6UL, 0xbe4d55b4UL,\n-    0xa0000000UL, 0x3fe5730dUL, 0x3d443abbUL, 0xbe5e6954UL, 0x00000000UL,\n-    0x3fe5665aUL, 0x024acfeaUL, 0x3e50e61bUL, 0x00000000UL, 0x3fe559aaUL,\n-    0xcc9edd09UL, 0xbe325403UL, 0x60000000UL, 0x3fe54cfdUL, 0x1fe26950UL,\n-    0x3e5d500eUL, 0x60000000UL, 0x3fe54054UL, 0x6c5ae164UL, 0xbe4a79b4UL,\n-    0xc0000000UL, 0x3fe533aeUL, 0x154b0287UL, 0xbe401571UL, 0xa0000000UL,\n-    0x3fe5270cUL, 0x0673f401UL, 0xbe56e56bUL, 0xe0000000UL, 0x3fe51a6dUL,\n-    0x751b639cUL, 0x3e235269UL, 0xa0000000UL, 0x3fe50dd2UL, 0x7c7b2bedUL,\n-    0x3ddec887UL, 0xc0000000UL, 0x3fe5013aUL, 0xafab4e17UL, 0x3e5e7575UL,\n-    0x60000000UL, 0x3fe4f4a6UL, 0x2e308668UL, 0x3e59aed6UL, 0x80000000UL,\n-    0x3fe4e815UL, 0xf33e2a76UL, 0xbe51f184UL, 0xe0000000UL, 0x3fe4db87UL,\n-    0x839f3e3eUL, 0x3e57db01UL, 0xc0000000UL, 0x3fe4cefdUL, 0xa9eda7bbUL,\n-    0x3e535e0fUL, 0x00000000UL, 0x3fe4c277UL, 0x2a8f66a5UL, 0x3e5ce451UL,\n-    0xc0000000UL, 0x3fe4b5f3UL, 0x05192456UL, 0xbe4e8518UL, 0xc0000000UL,\n-    0x3fe4a973UL, 0x4aa7cd1dUL, 0x3e46784aUL, 0x40000000UL, 0x3fe49cf7UL,\n-    0x8e23025eUL, 0xbe5749f2UL, 0x00000000UL, 0x3fe4907eUL, 0x18d30215UL,\n-    0x3e360f39UL, 0x20000000UL, 0x3fe48408UL, 0x63dcf2f3UL, 0x3e5e00feUL,\n-    0xc0000000UL, 0x3fe47795UL, 0x46182d09UL, 0xbe5173d9UL, 0xa0000000UL,\n-    0x3fe46b26UL, 0x8f0e62aaUL, 0xbe48f281UL, 0xe0000000UL, 0x3fe45ebaUL,\n-    0x5775c40cUL, 0xbe56aad4UL, 0x60000000UL, 0x3fe45252UL, 0x0fe25f69UL,\n-    0x3e48bd71UL, 0x40000000UL, 0x3fe445edUL, 0xe9989ec5UL, 0x3e590d97UL,\n-    0x80000000UL, 0x3fe4398bUL, 0xb3d9ffe3UL, 0x3e479dbcUL, 0x20000000UL,\n-    0x3fe42d2dUL, 0x388e4d2eUL, 0xbe5eed80UL, 0xe0000000UL, 0x3fe420d1UL,\n-    0x6f797c18UL, 0x3e554b4cUL, 0x20000000UL, 0x3fe4147aUL, 0x31048bb4UL,\n-    0xbe5b1112UL, 0x80000000UL, 0x3fe40825UL, 0x2efba4f9UL, 0x3e48ebc7UL,\n-    0x40000000UL, 0x3fe3fbd4UL, 0x50201119UL, 0x3e40b701UL, 0x40000000UL,\n-    0x3fe3ef86UL, 0x0a4db32cUL, 0x3e551de8UL, 0xa0000000UL, 0x3fe3e33bUL,\n-    0x0c9c148bUL, 0xbe50c1f6UL, 0x20000000UL, 0x3fe3d6f4UL, 0xc9129447UL,\n-    0x3e533fa0UL, 0x00000000UL, 0x3fe3cab0UL, 0xaae5b5a0UL, 0xbe22b68eUL,\n-    0x20000000UL, 0x3fe3be6fUL, 0x02305e8aUL, 0xbe54fc08UL, 0x60000000UL,\n-    0x3fe3b231UL, 0x7f908258UL, 0x3e57dc05UL, 0x00000000UL, 0x3fe3a5f7UL,\n-    0x1a09af78UL, 0x3e08038bUL, 0xe0000000UL, 0x3fe399bfUL, 0x490643c1UL,\n-    0xbe5dbe42UL, 0xe0000000UL, 0x3fe38d8bUL, 0x5e8ad724UL, 0xbe3c2b72UL,\n-    0x20000000UL, 0x3fe3815bUL, 0xc67196b6UL, 0x3e1713cfUL, 0xa0000000UL,\n-    0x3fe3752dUL, 0x6182e429UL, 0xbe3ec14cUL, 0x40000000UL, 0x3fe36903UL,\n-    0xab6eb1aeUL, 0x3e5a2cc5UL, 0x40000000UL, 0x3fe35cdcUL, 0xfe5dc064UL,\n-    0xbe5c5878UL, 0x40000000UL, 0x3fe350b8UL, 0x0ba6b9e4UL, 0x3e51619bUL,\n-    0x80000000UL, 0x3fe34497UL, 0x857761aaUL, 0x3e5fff53UL, 0x00000000UL,\n-    0x3fe3387aUL, 0xf872d68cUL, 0x3e484f4dUL, 0xa0000000UL, 0x3fe32c5fUL,\n-    0x087e97c2UL, 0x3e52842eUL, 0x80000000UL, 0x3fe32048UL, 0x73d6d0c0UL,\n-    0xbe503edfUL, 0x80000000UL, 0x3fe31434UL, 0x0c1456a1UL, 0xbe5f72adUL,\n-    0xa0000000UL, 0x3fe30823UL, 0x83a1a4d5UL, 0xbe5e65ccUL, 0xe0000000UL,\n-    0x3fe2fc15UL, 0x855a7390UL, 0xbe506438UL, 0x40000000UL, 0x3fe2f00bUL,\n-    0xa2898287UL, 0x3e3d22a2UL, 0xe0000000UL, 0x3fe2e403UL, 0x8b56f66fUL,\n-    0xbe5aa5fdUL, 0x80000000UL, 0x3fe2d7ffUL, 0x52db119aUL, 0x3e3a2e3dUL,\n-    0x60000000UL, 0x3fe2cbfeUL, 0xe2ddd4c0UL, 0xbe586469UL, 0x40000000UL,\n-    0x3fe2c000UL, 0x6b01bf10UL, 0x3e352b9dUL, 0x40000000UL, 0x3fe2b405UL,\n-    0xb07a1cdfUL, 0x3e5c5cdaUL, 0x80000000UL, 0x3fe2a80dUL, 0xc7b5f868UL,\n-    0xbe5668b3UL, 0xc0000000UL, 0x3fe29c18UL, 0x185edf62UL, 0xbe563d66UL,\n-    0x00000000UL, 0x3fe29027UL, 0xf729e1ccUL, 0x3e59a9a0UL, 0x80000000UL,\n-    0x3fe28438UL, 0x6433c727UL, 0xbe43cc89UL, 0x00000000UL, 0x3fe2784dUL,\n-    0x41782631UL, 0xbe30750cUL, 0xa0000000UL, 0x3fe26c64UL, 0x914911b7UL,\n-    0xbe58290eUL, 0x40000000UL, 0x3fe2607fUL, 0x3dcc73e1UL, 0xbe4269cdUL,\n-    0x00000000UL, 0x3fe2549dUL, 0x2751bf70UL, 0xbe5a6998UL, 0xc0000000UL,\n-    0x3fe248bdUL, 0x4248b9fbUL, 0xbe4ddb00UL, 0x80000000UL, 0x3fe23ce1UL,\n-    0xf35cf82fUL, 0x3e561b71UL, 0x60000000UL, 0x3fe23108UL, 0x8e481a2dUL,\n-    0x3e518fb9UL, 0x60000000UL, 0x3fe22532UL, 0x5ab96edcUL, 0xbe5fafc5UL,\n-    0x40000000UL, 0x3fe2195fUL, 0x80943911UL, 0xbe07f819UL, 0x40000000UL,\n-    0x3fe20d8fUL, 0x386f2d6cUL, 0xbe54ba8bUL, 0x40000000UL, 0x3fe201c2UL,\n-    0xf29664acUL, 0xbe5eb815UL, 0x20000000UL, 0x3fe1f5f8UL, 0x64f03390UL,\n-    0x3e5e320cUL, 0x20000000UL, 0x3fe1ea31UL, 0x747ff696UL, 0x3e5ef0a5UL,\n-    0x40000000UL, 0x3fe1de6dUL, 0x3e9ceb51UL, 0xbe5f8d27UL, 0x20000000UL,\n-    0x3fe1d2acUL, 0x4ae0b55eUL, 0x3e5faa21UL, 0x20000000UL, 0x3fe1c6eeUL,\n-    0x28569a5eUL, 0x3e598a4fUL, 0x20000000UL, 0x3fe1bb33UL, 0x54b33e07UL,\n-    0x3e46130aUL, 0x20000000UL, 0x3fe1af7bUL, 0x024f1078UL, 0xbe4dbf93UL,\n-    0x00000000UL, 0x3fe1a3c6UL, 0xb0783bfaUL, 0x3e419248UL, 0xe0000000UL,\n-    0x3fe19813UL, 0x2f02b836UL, 0x3e4e02b7UL, 0xc0000000UL, 0x3fe18c64UL,\n-    0x28dec9d4UL, 0x3e09064fUL, 0x80000000UL, 0x3fe180b8UL, 0x45cbf406UL,\n-    0x3e5b1f46UL, 0x40000000UL, 0x3fe1750fUL, 0x03d9964cUL, 0x3e5b0a79UL,\n-    0x00000000UL, 0x3fe16969UL, 0x8b5b882bUL, 0xbe238086UL, 0xa0000000UL,\n-    0x3fe15dc5UL, 0x73bad6f8UL, 0xbdf1fca4UL, 0x20000000UL, 0x3fe15225UL,\n-    0x5385769cUL, 0x3e5e8d76UL, 0xa0000000UL, 0x3fe14687UL, 0x1676dc6bUL,\n-    0x3e571d08UL, 0x20000000UL, 0x3fe13aedUL, 0xa8c41c7fUL, 0xbe598a25UL,\n-    0x60000000UL, 0x3fe12f55UL, 0xc4e1aaf0UL, 0x3e435277UL, 0xa0000000UL,\n-    0x3fe123c0UL, 0x403638e1UL, 0xbe21aa7cUL, 0xc0000000UL, 0x3fe1182eUL,\n-    0x557a092bUL, 0xbdd0116bUL, 0xc0000000UL, 0x3fe10c9fUL, 0x7d779f66UL,\n-    0x3e4a61baUL, 0xc0000000UL, 0x3fe10113UL, 0x2b09c645UL, 0xbe5d586eUL,\n-    0x20000000UL, 0x3fe0ea04UL, 0xea2cad46UL, 0x3e5aa97cUL, 0x20000000UL,\n-    0x3fe0d300UL, 0x23190e54UL, 0x3e50f1a7UL, 0xa0000000UL, 0x3fe0bc07UL,\n-    0x1379a5a6UL, 0xbe51619dUL, 0x60000000UL, 0x3fe0a51aUL, 0x926a3d4aUL,\n-    0x3e5cf019UL, 0xa0000000UL, 0x3fe08e38UL, 0xa8c24358UL, 0x3e35241eUL,\n-    0x20000000UL, 0x3fe07762UL, 0x24317e7aUL, 0x3e512cfaUL, 0x00000000UL,\n-    0x3fe06097UL, 0xfd9cf274UL, 0xbe55bef3UL, 0x00000000UL, 0x3fe049d7UL,\n-    0x3689b49dUL, 0xbe36d26dUL, 0x40000000UL, 0x3fe03322UL, 0xf72ef6c4UL,\n-    0xbe54cd08UL, 0xa0000000UL, 0x3fe01c78UL, 0x23702d2dUL, 0xbe5900bfUL,\n-    0x00000000UL, 0x3fe005daUL, 0x3f59c14cUL, 0x3e57d80bUL, 0x40000000UL,\n-    0x3fdfde8dUL, 0xad67766dUL, 0xbe57fad4UL, 0x40000000UL, 0x3fdfb17cUL,\n-    0x644f4ae7UL, 0x3e1ee43bUL, 0x40000000UL, 0x3fdf8481UL, 0x903234d2UL,\n-    0x3e501a86UL, 0x40000000UL, 0x3fdf579cUL, 0xafe9e509UL, 0xbe267c3eUL,\n-    0x00000000UL, 0x3fdf2acdUL, 0xb7dfda0bUL, 0xbe48149bUL, 0x40000000UL,\n-    0x3fdefe13UL, 0x3b94305eUL, 0x3e5f4ea7UL, 0x80000000UL, 0x3fded16fUL,\n-    0x5d95da61UL, 0xbe55c198UL, 0x00000000UL, 0x3fdea4e1UL, 0x406960c9UL,\n-    0xbdd99a19UL, 0x00000000UL, 0x3fde7868UL, 0xd22f3539UL, 0x3e470c78UL,\n-    0x80000000UL, 0x3fde4c04UL, 0x83eec535UL, 0xbe3e1232UL, 0x40000000UL,\n-    0x3fde1fb6UL, 0x3dfbffcbUL, 0xbe4b7d71UL, 0x40000000UL, 0x3fddf37dUL,\n-    0x7e1be4e0UL, 0xbe5b8f8fUL, 0x40000000UL, 0x3fddc759UL, 0x46dae887UL,\n-    0xbe350458UL, 0x80000000UL, 0x3fdd9b4aUL, 0xed6ecc49UL, 0xbe5f0045UL,\n-    0x80000000UL, 0x3fdd6f50UL, 0x2e9e883cUL, 0x3e2915daUL, 0x80000000UL,\n-    0x3fdd436bUL, 0xf0bccb32UL, 0x3e4a68c9UL, 0x80000000UL, 0x3fdd179bUL,\n-    0x9bbfc779UL, 0xbe54a26aUL, 0x00000000UL, 0x3fdcebe0UL, 0x7cea33abUL,\n-    0x3e43c6b7UL, 0x40000000UL, 0x3fdcc039UL, 0xe740fd06UL, 0x3e5526c2UL,\n-    0x40000000UL, 0x3fdc94a7UL, 0x9eadeb1aUL, 0xbe396d8dUL, 0xc0000000UL,\n-    0x3fdc6929UL, 0xf0a8f95aUL, 0xbe5c0ab2UL, 0x80000000UL, 0x3fdc3dc0UL,\n-    0x6ee2693bUL, 0x3e0992e6UL, 0xc0000000UL, 0x3fdc126bUL, 0x5ac6b581UL,\n-    0xbe2834b6UL, 0x40000000UL, 0x3fdbe72bUL, 0x8cc226ffUL, 0x3e3596a6UL,\n-    0x00000000UL, 0x3fdbbbffUL, 0xf92a74bbUL, 0x3e3c5813UL, 0x00000000UL,\n-    0x3fdb90e7UL, 0x479664c0UL, 0xbe50d644UL, 0x00000000UL, 0x3fdb65e3UL,\n-    0x5004975bUL, 0xbe55258fUL, 0x00000000UL, 0x3fdb3af3UL, 0xe4b23194UL,\n-    0xbe588407UL, 0xc0000000UL, 0x3fdb1016UL, 0xe65d4d0aUL, 0x3e527c26UL,\n-    0x80000000UL, 0x3fdae54eUL, 0x814fddd6UL, 0x3e5962a2UL, 0x40000000UL,\n-    0x3fdaba9aUL, 0xe19d0913UL, 0xbe562f4eUL, 0x80000000UL, 0x3fda8ff9UL,\n-    0x43cfd006UL, 0xbe4cfdebUL, 0x40000000UL, 0x3fda656cUL, 0x686f0a4eUL,\n-    0x3e5e47a8UL, 0xc0000000UL, 0x3fda3af2UL, 0x7200d410UL, 0x3e5e1199UL,\n-    0xc0000000UL, 0x3fda108cUL, 0xabd2266eUL, 0x3e5ee4d1UL, 0x40000000UL,\n-    0x3fd9e63aUL, 0x396f8f2cUL, 0x3e4dbffbUL, 0x00000000UL, 0x3fd9bbfbUL,\n-    0xe32b25ddUL, 0x3e5c3a54UL, 0x40000000UL, 0x3fd991cfUL, 0x431e4035UL,\n-    0xbe457925UL, 0x80000000UL, 0x3fd967b6UL, 0x7bed3dd3UL, 0x3e40c61dUL,\n-    0x00000000UL, 0x3fd93db1UL, 0xd7449365UL, 0x3e306419UL, 0x80000000UL,\n-    0x3fd913beUL, 0x1746e791UL, 0x3e56fcfcUL, 0x40000000UL, 0x3fd8e9dfUL,\n-    0xf3a9028bUL, 0xbe5041b9UL, 0xc0000000UL, 0x3fd8c012UL, 0x56840c50UL,\n-    0xbe26e20aUL, 0x40000000UL, 0x3fd89659UL, 0x19763102UL, 0xbe51f466UL,\n-    0x80000000UL, 0x3fd86cb2UL, 0x7032de7cUL, 0xbe4d298aUL, 0x80000000UL,\n-    0x3fd8431eUL, 0xdeb39fabUL, 0xbe4361ebUL, 0x40000000UL, 0x3fd8199dUL,\n-    0x5d01cbe0UL, 0xbe5425b3UL, 0x80000000UL, 0x3fd7f02eUL, 0x3ce99aa9UL,\n-    0x3e146fa8UL, 0x80000000UL, 0x3fd7c6d2UL, 0xd1a262b9UL, 0xbe5a1a69UL,\n-    0xc0000000UL, 0x3fd79d88UL, 0x8606c236UL, 0x3e423a08UL, 0x80000000UL,\n-    0x3fd77451UL, 0x8fd1e1b7UL, 0x3e5a6a63UL, 0xc0000000UL, 0x3fd74b2cUL,\n-    0xe491456aUL, 0x3e42c1caUL, 0x40000000UL, 0x3fd7221aUL, 0x4499a6d7UL,\n-    0x3e36a69aUL, 0x00000000UL, 0x3fd6f91aUL, 0x5237df94UL, 0xbe0f8f02UL,\n-    0x00000000UL, 0x3fd6d02cUL, 0xb6482c6eUL, 0xbe5abcf7UL, 0x00000000UL,\n-    0x3fd6a750UL, 0x1919fd61UL, 0xbe57ade2UL, 0x00000000UL, 0x3fd67e86UL,\n-    0xaa7a994dUL, 0xbe3f3fbdUL, 0x00000000UL, 0x3fd655ceUL, 0x67db014cUL,\n-    0x3e33c550UL, 0x00000000UL, 0x3fd62d28UL, 0xa82856b7UL, 0xbe1409d1UL,\n-    0xc0000000UL, 0x3fd60493UL, 0x1e6a300dUL, 0x3e55d899UL, 0x80000000UL,\n-    0x3fd5dc11UL, 0x1222bd5cUL, 0xbe35bfc0UL, 0xc0000000UL, 0x3fd5b3a0UL,\n-    0x6e8dc2d3UL, 0x3e5d4d79UL, 0x00000000UL, 0x3fd58b42UL, 0xe0e4ace6UL,\n-    0xbe517303UL, 0x80000000UL, 0x3fd562f4UL, 0xb306e0a8UL, 0x3e5edf0fUL,\n-    0xc0000000UL, 0x3fd53ab8UL, 0x6574bc54UL, 0x3e5ee859UL, 0x80000000UL,\n-    0x3fd5128eUL, 0xea902207UL, 0x3e5f6188UL, 0xc0000000UL, 0x3fd4ea75UL,\n-    0x9f911d79UL, 0x3e511735UL, 0x80000000UL, 0x3fd4c26eUL, 0xf9c77397UL,\n-    0xbe5b1643UL, 0x40000000UL, 0x3fd49a78UL, 0x15fc9258UL, 0x3e479a37UL,\n-    0x80000000UL, 0x3fd47293UL, 0xd5a04dd9UL, 0xbe426e56UL, 0xc0000000UL,\n-    0x3fd44abfUL, 0xe04042f5UL, 0x3e56f7c6UL, 0x40000000UL, 0x3fd422fdUL,\n-    0x1d8bf2c8UL, 0x3e5d8810UL, 0x00000000UL, 0x3fd3fb4cUL, 0x88a8ddeeUL,\n-    0xbe311454UL, 0xc0000000UL, 0x3fd3d3abUL, 0x3e3b5e47UL, 0xbe5d1b72UL,\n-    0x40000000UL, 0x3fd3ac1cUL, 0xc2ab5d59UL, 0x3e31b02bUL, 0xc0000000UL,\n-    0x3fd3849dUL, 0xd4e34b9eUL, 0x3e51cb2fUL, 0x40000000UL, 0x3fd35d30UL,\n-    0x177204fbUL, 0xbe2b8cd7UL, 0x80000000UL, 0x3fd335d3UL, 0xfcd38c82UL,\n-    0xbe4356e1UL, 0x80000000UL, 0x3fd30e87UL, 0x64f54accUL, 0xbe4e6224UL,\n-    0x00000000UL, 0x3fd2e74cUL, 0xaa7975d9UL, 0x3e5dc0feUL, 0x80000000UL,\n-    0x3fd2c021UL, 0x516dab3fUL, 0xbe50ffa3UL, 0x40000000UL, 0x3fd29907UL,\n-    0x2bfb7313UL, 0x3e5674a2UL, 0xc0000000UL, 0x3fd271fdUL, 0x0549fc99UL,\n-    0x3e385d29UL, 0xc0000000UL, 0x3fd24b04UL, 0x55b63073UL, 0xbe500c6dUL,\n-    0x00000000UL, 0x3fd2241cUL, 0x3f91953aUL, 0x3e389977UL, 0xc0000000UL,\n-    0x3fd1fd43UL, 0xa1543f71UL, 0xbe3487abUL, 0xc0000000UL, 0x3fd1d67bUL,\n-    0x4ec8867cUL, 0x3df6a2dcUL, 0x00000000UL, 0x3fd1afc4UL, 0x4328e3bbUL,\n-    0x3e41d9c0UL, 0x80000000UL, 0x3fd1891cUL, 0x2e1cda84UL, 0x3e3bdd87UL,\n-    0x40000000UL, 0x3fd16285UL, 0x4b5331aeUL, 0xbe53128eUL, 0x00000000UL,\n-    0x3fd13bfeUL, 0xb9aec164UL, 0xbe52ac98UL, 0xc0000000UL, 0x3fd11586UL,\n-    0xd91e1316UL, 0xbe350630UL, 0x80000000UL, 0x3fd0ef1fUL, 0x7cacc12cUL,\n-    0x3e3f5219UL, 0x40000000UL, 0x3fd0c8c8UL, 0xbce277b7UL, 0x3e3d30c0UL,\n-    0x00000000UL, 0x3fd0a281UL, 0x2a63447dUL, 0xbe541377UL, 0x80000000UL,\n-    0x3fd07c49UL, 0xfac483b5UL, 0xbe5772ecUL, 0xc0000000UL, 0x3fd05621UL,\n-    0x36b8a570UL, 0xbe4fd4bdUL, 0xc0000000UL, 0x3fd03009UL, 0xbae505f7UL,\n-    0xbe450388UL, 0x80000000UL, 0x3fd00a01UL, 0x3e35aeadUL, 0xbe5430fcUL,\n-    0x80000000UL, 0x3fcfc811UL, 0x707475acUL, 0x3e38806eUL, 0x80000000UL,\n-    0x3fcf7c3fUL, 0xc91817fcUL, 0xbe40cceaUL, 0x80000000UL, 0x3fcf308cUL,\n-    0xae05d5e9UL, 0xbe4919b8UL, 0x80000000UL, 0x3fcee4f8UL, 0xae6cc9e6UL,\n-    0xbe530b94UL, 0x00000000UL, 0x3fce9983UL, 0x1efe3e8eUL, 0x3e57747eUL,\n-    0x00000000UL, 0x3fce4e2dUL, 0xda78d9bfUL, 0xbe59a608UL, 0x00000000UL,\n-    0x3fce02f5UL, 0x8abe2c2eUL, 0x3e4a35adUL, 0x00000000UL, 0x3fcdb7dcUL,\n-    0x1495450dUL, 0xbe0872ccUL, 0x80000000UL, 0x3fcd6ce1UL, 0x86ee0ba0UL,\n-    0xbe4f59a0UL, 0x00000000UL, 0x3fcd2205UL, 0xe81ca888UL, 0x3e5402c3UL,\n-    0x00000000UL, 0x3fccd747UL, 0x3b4424b9UL, 0x3e5dfdc3UL, 0x80000000UL,\n-    0x3fcc8ca7UL, 0xd305b56cUL, 0x3e202da6UL, 0x00000000UL, 0x3fcc4226UL,\n-    0x399a6910UL, 0xbe482a1cUL, 0x80000000UL, 0x3fcbf7c2UL, 0x747f7938UL,\n-    0xbe587372UL, 0x80000000UL, 0x3fcbad7cUL, 0x6fc246a0UL, 0x3e50d83dUL,\n-    0x00000000UL, 0x3fcb6355UL, 0xee9e9be5UL, 0xbe5c35bdUL, 0x80000000UL,\n-    0x3fcb194aUL, 0x8416c0bcUL, 0x3e546d4fUL, 0x00000000UL, 0x3fcacf5eUL,\n-    0x49f7f08fUL, 0x3e56da76UL, 0x00000000UL, 0x3fca858fUL, 0x5dc30de2UL,\n-    0x3e5f390cUL, 0x00000000UL, 0x3fca3bdeUL, 0x950583b6UL, 0xbe5e4169UL,\n-    0x80000000UL, 0x3fc9f249UL, 0x33631553UL, 0x3e52aeb1UL, 0x00000000UL,\n-    0x3fc9a8d3UL, 0xde8795a6UL, 0xbe59a504UL, 0x00000000UL, 0x3fc95f79UL,\n-    0x076bf41eUL, 0x3e5122feUL, 0x80000000UL, 0x3fc9163cUL, 0x2914c8e7UL,\n-    0x3e3dd064UL, 0x00000000UL, 0x3fc8cd1dUL, 0x3a30eca3UL, 0xbe21b4aaUL,\n-    0x80000000UL, 0x3fc8841aUL, 0xb2a96650UL, 0xbe575444UL, 0x80000000UL,\n-    0x3fc83b34UL, 0x2376c0cbUL, 0xbe2a74c7UL, 0x80000000UL, 0x3fc7f26bUL,\n-    0xd8a0b653UL, 0xbe5181b6UL, 0x00000000UL, 0x3fc7a9bfUL, 0x32257882UL,\n-    0xbe4a78b4UL, 0x00000000UL, 0x3fc7612fUL, 0x1eee8bd9UL, 0xbe1bfe9dUL,\n-    0x80000000UL, 0x3fc718bbUL, 0x0c603cc4UL, 0x3e36fdc9UL, 0x80000000UL,\n-    0x3fc6d064UL, 0x3728b8cfUL, 0xbe1e542eUL, 0x80000000UL, 0x3fc68829UL,\n-    0xc79a4067UL, 0x3e5c380fUL, 0x00000000UL, 0x3fc6400bUL, 0xf69eac69UL,\n-    0x3e550a84UL, 0x80000000UL, 0x3fc5f808UL, 0xb7a780a4UL, 0x3e5d9224UL,\n-    0x80000000UL, 0x3fc5b022UL, 0xad9dfb1eUL, 0xbe55242fUL, 0x00000000UL,\n-    0x3fc56858UL, 0x659b18beUL, 0xbe4bfda3UL, 0x80000000UL, 0x3fc520a9UL,\n-    0x66ee3631UL, 0xbe57d769UL, 0x80000000UL, 0x3fc4d916UL, 0x1ec62819UL,\n-    0x3e2427f7UL, 0x80000000UL, 0x3fc4919fUL, 0xdec25369UL, 0xbe435431UL,\n-    0x00000000UL, 0x3fc44a44UL, 0xa8acfc4bUL, 0xbe3c62e8UL, 0x00000000UL,\n-    0x3fc40304UL, 0xcf1d3eabUL, 0xbdfba29fUL, 0x80000000UL, 0x3fc3bbdfUL,\n-    0x79aba3eaUL, 0xbdf1b7c8UL, 0x80000000UL, 0x3fc374d6UL, 0xb8d186daUL,\n-    0xbe5130cfUL, 0x80000000UL, 0x3fc32de8UL, 0x9d74f152UL, 0x3e2285b6UL,\n-    0x00000000UL, 0x3fc2e716UL, 0x50ae7ca9UL, 0xbe503920UL, 0x80000000UL,\n-    0x3fc2a05eUL, 0x6caed92eUL, 0xbe533924UL, 0x00000000UL, 0x3fc259c2UL,\n-    0x9cb5034eUL, 0xbe510e31UL, 0x80000000UL, 0x3fc21340UL, 0x12c4d378UL,\n-    0xbe540b43UL, 0x80000000UL, 0x3fc1ccd9UL, 0xcc418706UL, 0x3e59887aUL,\n-    0x00000000UL, 0x3fc1868eUL, 0x921f4106UL, 0xbe528e67UL, 0x80000000UL,\n-    0x3fc1405cUL, 0x3969441eUL, 0x3e5d8051UL, 0x00000000UL, 0x3fc0fa46UL,\n-    0xd941ef5bUL, 0x3e5f9079UL, 0x80000000UL, 0x3fc0b44aUL, 0x5a3e81b2UL,\n-    0xbe567691UL, 0x00000000UL, 0x3fc06e69UL, 0x9d66afe7UL, 0xbe4d43fbUL,\n-    0x00000000UL, 0x3fc028a2UL, 0x0a92a162UL, 0xbe52f394UL, 0x00000000UL,\n-    0x3fbfc5eaUL, 0x209897e5UL, 0x3e529e37UL, 0x00000000UL, 0x3fbf3ac5UL,\n-    0x8458bd7bUL, 0x3e582831UL, 0x00000000UL, 0x3fbeafd5UL, 0xb8d8b4b8UL,\n-    0xbe486b4aUL, 0x00000000UL, 0x3fbe2518UL, 0xe0a3b7b6UL, 0x3e5bafd2UL,\n-    0x00000000UL, 0x3fbd9a90UL, 0x2bf2710eUL, 0x3e383b2bUL, 0x00000000UL,\n-    0x3fbd103cUL, 0x73eb6ab7UL, 0xbe56d78dUL, 0x00000000UL, 0x3fbc861bUL,\n-    0x32ceaff5UL, 0xbe32dc5aUL, 0x00000000UL, 0x3fbbfc2eUL, 0xbee04cb7UL,\n-    0xbe4a71a4UL, 0x00000000UL, 0x3fbb7274UL, 0x35ae9577UL, 0x3e38142fUL,\n-    0x00000000UL, 0x3fbae8eeUL, 0xcbaddab4UL, 0xbe5490f0UL, 0x00000000UL,\n-    0x3fba5f9aUL, 0x95ce1114UL, 0x3e597c71UL, 0x00000000UL, 0x3fb9d67aUL,\n-    0x6d7c0f78UL, 0x3e3abc2dUL, 0x00000000UL, 0x3fb94d8dUL, 0x2841a782UL,\n-    0xbe566cbcUL, 0x00000000UL, 0x3fb8c4d2UL, 0x6ed429c6UL, 0xbe3cfff9UL,\n-    0x00000000UL, 0x3fb83c4aUL, 0xe4a49fbbUL, 0xbe552964UL, 0x00000000UL,\n-    0x3fb7b3f4UL, 0x2193d81eUL, 0xbe42fa72UL, 0x00000000UL, 0x3fb72bd0UL,\n-    0xdd70c122UL, 0x3e527a8cUL, 0x00000000UL, 0x3fb6a3dfUL, 0x03108a54UL,\n-    0xbe450393UL, 0x00000000UL, 0x3fb61c1fUL, 0x30ff7954UL, 0x3e565840UL,\n-    0x00000000UL, 0x3fb59492UL, 0xdedd460cUL, 0xbe5422b5UL, 0x00000000UL,\n-    0x3fb50d36UL, 0x950f9f45UL, 0xbe5313f6UL, 0x00000000UL, 0x3fb4860bUL,\n-    0x582cdcb1UL, 0x3e506d39UL, 0x00000000UL, 0x3fb3ff12UL, 0x7216d3a6UL,\n-    0x3e4aa719UL, 0x00000000UL, 0x3fb3784aUL, 0x57a423fdUL, 0x3e5a9b9fUL,\n-    0x00000000UL, 0x3fb2f1b4UL, 0x7a138b41UL, 0xbe50b418UL, 0x00000000UL,\n-    0x3fb26b4eUL, 0x2fbfd7eaUL, 0x3e23a53eUL, 0x00000000UL, 0x3fb1e519UL,\n-    0x18913ccbUL, 0x3e465fc1UL, 0x00000000UL, 0x3fb15f15UL, 0x7ea24e21UL,\n-    0x3e042843UL, 0x00000000UL, 0x3fb0d941UL, 0x7c6d9c77UL, 0x3e59f61eUL,\n-    0x00000000UL, 0x3fb0539eUL, 0x114efd44UL, 0x3e4ccab7UL, 0x00000000UL,\n-    0x3faf9c56UL, 0x1777f657UL, 0x3e552f65UL, 0x00000000UL, 0x3fae91d2UL,\n-    0xc317b86aUL, 0xbe5a61e0UL, 0x00000000UL, 0x3fad87acUL, 0xb7664efbUL,\n-    0xbe41f64eUL, 0x00000000UL, 0x3fac7de6UL, 0x5d3d03a9UL, 0x3e0807a0UL,\n-    0x00000000UL, 0x3fab7480UL, 0x743c38ebUL, 0xbe3726e1UL, 0x00000000UL,\n-    0x3faa6b78UL, 0x06a253f1UL, 0x3e5ad636UL, 0x00000000UL, 0x3fa962d0UL,\n-    0xa35f541bUL, 0x3e5a187aUL, 0x00000000UL, 0x3fa85a88UL, 0x4b86e446UL,\n-    0xbe508150UL, 0x00000000UL, 0x3fa7529cUL, 0x2589cacfUL, 0x3e52938aUL,\n-    0x00000000UL, 0x3fa64b10UL, 0xaf6b11f2UL, 0xbe3454cdUL, 0x00000000UL,\n-    0x3fa543e2UL, 0x97506fefUL, 0xbe5fdec5UL, 0x00000000UL, 0x3fa43d10UL,\n-    0xe75f7dd9UL, 0xbe388dd3UL, 0x00000000UL, 0x3fa3369cUL, 0xa4139632UL,\n-    0xbdea5177UL, 0x00000000UL, 0x3fa23086UL, 0x352d6f1eUL, 0xbe565ad6UL,\n-    0x00000000UL, 0x3fa12accUL, 0x77449eb7UL, 0xbe50d5c7UL, 0x00000000UL,\n-    0x3fa0256eUL, 0x7478da78UL, 0x3e404724UL, 0x00000000UL, 0x3f9e40dcUL,\n-    0xf59cef7fUL, 0xbe539d0aUL, 0x00000000UL, 0x3f9c3790UL, 0x1511d43cUL,\n-    0x3e53c2c8UL, 0x00000000UL, 0x3f9a2f00UL, 0x9b8bff3cUL, 0xbe43b3e1UL,\n-    0x00000000UL, 0x3f982724UL, 0xad1e22a5UL, 0x3e46f0bdUL, 0x00000000UL,\n-    0x3f962000UL, 0x130d9356UL, 0x3e475ba0UL, 0x00000000UL, 0x3f941994UL,\n-    0x8f86f883UL, 0xbe513d0bUL, 0x00000000UL, 0x3f9213dcUL, 0x914d0dc8UL,\n-    0xbe534335UL, 0x00000000UL, 0x3f900ed8UL, 0x2d73e5e7UL, 0xbe22ba75UL,\n-    0x00000000UL, 0x3f8c1510UL, 0xc5b7d70eUL, 0x3e599c5dUL, 0x00000000UL,\n-    0x3f880de0UL, 0x8a27857eUL, 0xbe3d28c8UL, 0x00000000UL, 0x3f840810UL,\n-    0xda767328UL, 0x3e531b3dUL, 0x00000000UL, 0x3f8003b0UL, 0x77bacaf3UL,\n-    0xbe5f04e3UL, 0x00000000UL, 0x3f780150UL, 0xdf4b0720UL, 0x3e5a8bffUL,\n-    0x00000000UL, 0x3f6ffc40UL, 0x34c48e71UL, 0xbe3fcd99UL, 0x00000000UL,\n-    0x3f5ff6c0UL, 0x1ad218afUL, 0xbe4c78a7UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x80000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(8) juint _log2_pow[] =\n-{\n-    0xfefa39efUL, 0x3fe62e42UL, 0xfefa39efUL, 0xbfe62e42UL\n-};\n-\n-ATTRIBUTE_ALIGNED(8) juint _DOUBLE2[] =\n-{\n-    0x00000000UL, 0x40000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(8) juint _DOUBLE0[] =\n-{\n-    0x00000000UL, 0x00000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(8) juint _DOUBLE0DOT5[] =\n-{\n-    0x00000000UL, 0x3fe00000UL\n-};\n-\n-\/\/registers,\n-\/\/ input: xmm0, xmm1\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          rax, rdx, rcx, r8, r11\n-\n-\/\/ Code generated by Intel C compiler for LIBM library\n-\n-void MacroAssembler::fast_pow(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx,\n-                              Register tmp1, Register tmp2, Register tmp3, Register tmp4) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n-  Label L_2TAG_PACKET_12_0_2, L_2TAG_PACKET_13_0_2, L_2TAG_PACKET_14_0_2, L_2TAG_PACKET_15_0_2;\n-  Label L_2TAG_PACKET_16_0_2, L_2TAG_PACKET_17_0_2, L_2TAG_PACKET_18_0_2, L_2TAG_PACKET_19_0_2;\n-  Label L_2TAG_PACKET_20_0_2, L_2TAG_PACKET_21_0_2, L_2TAG_PACKET_22_0_2, L_2TAG_PACKET_23_0_2;\n-  Label L_2TAG_PACKET_24_0_2, L_2TAG_PACKET_25_0_2, L_2TAG_PACKET_26_0_2, L_2TAG_PACKET_27_0_2;\n-  Label L_2TAG_PACKET_28_0_2, L_2TAG_PACKET_29_0_2, L_2TAG_PACKET_30_0_2, L_2TAG_PACKET_31_0_2;\n-  Label L_2TAG_PACKET_32_0_2, L_2TAG_PACKET_33_0_2, L_2TAG_PACKET_34_0_2, L_2TAG_PACKET_35_0_2;\n-  Label L_2TAG_PACKET_36_0_2, L_2TAG_PACKET_37_0_2, L_2TAG_PACKET_38_0_2, L_2TAG_PACKET_39_0_2;\n-  Label L_2TAG_PACKET_40_0_2, L_2TAG_PACKET_41_0_2, L_2TAG_PACKET_42_0_2, L_2TAG_PACKET_43_0_2;\n-  Label L_2TAG_PACKET_44_0_2, L_2TAG_PACKET_45_0_2, L_2TAG_PACKET_46_0_2, L_2TAG_PACKET_47_0_2;\n-  Label L_2TAG_PACKET_48_0_2, L_2TAG_PACKET_49_0_2, L_2TAG_PACKET_50_0_2, L_2TAG_PACKET_51_0_2;\n-  Label L_2TAG_PACKET_52_0_2, L_2TAG_PACKET_53_0_2, L_2TAG_PACKET_54_0_2, L_2TAG_PACKET_55_0_2;\n-  Label L_2TAG_PACKET_56_0_2;\n-  Label B1_2, B1_3, B1_5;\n-  Label L_POW;\n-\n-  assert_different_registers(tmp1, tmp2, eax, ecx, edx);\n-  address HIGHSIGMASK = (address)_HIGHSIGMASK;\n-  address LOG2_E = (address)_LOG2_E;\n-  address coeff = (address)_coeff_pow;\n-  address L_tbl = (address)_L_tbl_pow;\n-  address HIGHMASK_Y = (address)_HIGHMASK_Y;\n-  address T_exp = (address)_T_exp;\n-  address e_coeff = (address)_e_coeff;\n-  address coeff_h = (address)_coeff_h;\n-  address HIGHMASK_LOG_X = (address)_HIGHMASK_LOG_X;\n-  address HALFMASK = (address)_HALFMASK;\n-  address log2 = (address)_log2_pow;\n-  address DOUBLE2 = (address)_DOUBLE2;\n-  address DOUBLE0 = (address)_DOUBLE0;\n-  address DOUBLE0DOT5 = (address)_DOUBLE0DOT5;\n-\n-  subq(rsp, 40);\n-  movsd(Address(rsp, 8), xmm0);\n-  movsd(Address(rsp, 16), xmm1);\n-\n-  \/\/ Special case: pow(x, 2.0) => x * x\n-  movdq(tmp1, xmm1);\n-  cmp64(tmp1, ExternalAddress(DOUBLE2), tmp2 \/*rscratch*\/);\n-  jccb(Assembler::notEqual, B1_2);\n-  mulsd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  \/\/ Special case: pow(x, 0.5) => sqrt(x)\n-  bind(B1_2);\n-  cmp64(tmp1, ExternalAddress(DOUBLE0DOT5), tmp2 \/*rscratch*\/);\n-  jccb(Assembler::notEqual, L_POW); \/\/ For pow(x, y), check whether y == 0.5\n-  movdq(tmp2, xmm0);\n-  cmp64(tmp2, ExternalAddress(DOUBLE0), tmp3 \/*rscratch*\/);\n-  jccb(Assembler::less, L_POW); \/\/ pow(x, 0.5) => sqrt(x) only for x >= 0.0 or x is +inf\/NaN\n-  sqrtsd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_POW);\n-  pextrw(eax, xmm0, 3);\n-  xorpd(xmm2, xmm2);\n-  mov64(tmp2, 0x3ff0000000000000);\n-  movdq(xmm2, tmp2);\n-  movl(tmp1, 1069088768);\n-  movdq(xmm7, tmp1);\n-  xorpd(xmm1, xmm1);\n-  mov64(tmp3, 0x77f0000000000000);\n-  movdq(xmm1, tmp3);\n-  movdqu(xmm3, xmm0);\n-  movl(edx, 32752);\n-  andl(edx, eax);\n-  subl(edx, 16368);\n-  movl(ecx, edx);\n-  sarl(edx, 31);\n-  addl(ecx, edx);\n-  xorl(ecx, edx);\n-  por(xmm0, xmm2);\n-  movdqu(xmm6, ExternalAddress(HIGHSIGMASK), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n-  psrlq(xmm0, 27);\n-  movq(xmm2, ExternalAddress(LOG2_E), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n-  psrld(xmm0, 2);\n-  addl(ecx, 16);\n-  bsrl(ecx, ecx);\n-  rcpps(xmm0, xmm0);\n-  psllq(xmm3, 12);\n-  movl(tmp4, 8192);\n-  movdq(xmm4, tmp4);\n-  psrlq(xmm3, 12);\n-  subl(eax, 16);\n-  cmpl(eax, 32736);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-  movl(tmp1, 0);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  mulss(xmm0, xmm7);\n-  movl(edx, -1);\n-  subl(ecx, 4);\n-  shll(edx);\n-  shlq(edx, 32);\n-  movdq(xmm5, edx);\n-  por(xmm3, xmm1);\n-  subl(eax, 16351);\n-  cmpl(eax, 1);\n-  jcc(Assembler::belowEqual, L_2TAG_PACKET_2_0_2);\n-  paddd(xmm0, xmm4);\n-  pand(xmm5, xmm3);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  subsd(xmm3, xmm5);\n-  pand(xmm0, xmm6);\n-  subl(eax, 1);\n-  sarl(eax, 4);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  mulsd(xmm3, xmm0);\n-  movdqu(xmm1, ExternalAddress(coeff), tmp2 \/*rscratch*\/);    \/\/0x6dc96112UL, 0xbf836578UL, 0xee241472UL, 0xbf9b0301UL\n-  lea(tmp4, ExternalAddress(L_tbl));\n-  subsd(xmm5, xmm2);\n-  movdqu(xmm4, ExternalAddress(coeff + 16), tmp2 \/*rscratch*\/);    \/\/0x9f95985aUL, 0xbfb528dbUL, 0xb3841d2aUL, 0xbfd619b6UL\n-  movl(ecx, eax);\n-  sarl(eax, 31);\n-  addl(ecx, eax);\n-  xorl(eax, ecx);\n-  addl(eax, 1);\n-  bsrl(eax, eax);\n-  unpcklpd(xmm5, xmm3);\n-  movdqu(xmm6, ExternalAddress(coeff + 32), tmp2 \/*rscratch*\/);    \/\/0x518775e3UL, 0x3f9004f2UL, 0xac8349bbUL, 0x3fa76c9bUL\n-  addsd(xmm3, xmm5);\n-  andl(edx, 16760832);\n-  shrl(edx, 10);\n-  addpd(xmm5, Address(tmp4, edx, Address::times_1, -3648));\n-  movdqu(xmm0, ExternalAddress(coeff + 48), tmp2 \/*rscratch*\/);    \/\/0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL, 0xbf5dabe1UL\n-  pshufd(xmm2, xmm3, 68);\n-  mulsd(xmm3, xmm3);\n-  mulpd(xmm1, xmm2);\n-  mulpd(xmm4, xmm2);\n-  addsd(xmm5, xmm7);\n-  mulsd(xmm2, xmm3);\n-  addpd(xmm6, xmm1);\n-  mulsd(xmm3, xmm3);\n-  addpd(xmm0, xmm4);\n-  movq(xmm1, Address(rsp, 16));\n-  movw(ecx, Address(rsp, 22));\n-  pshufd(xmm7, xmm5, 238);\n-  movq(xmm4, ExternalAddress(HIGHMASK_Y), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffffff8UL, 0x00000000UL, 0xffffffffUL\n-  mulpd(xmm6, xmm2);\n-  pshufd(xmm3, xmm3, 68);\n-  mulpd(xmm0, xmm2);\n-  shll(eax, 4);\n-  subl(eax, 15872);\n-  andl(ecx, 32752);\n-  addl(eax, ecx);\n-  mulpd(xmm3, xmm6);\n-  cmpl(eax, 624);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n-  xorpd(xmm6, xmm6);\n-  movl(edx, 17080);\n-  pinsrw(xmm6, edx, 3);\n-  movdqu(xmm2, xmm1);\n-  pand(xmm4, xmm1);\n-  subsd(xmm1, xmm4);\n-  mulsd(xmm4, xmm5);\n-  addsd(xmm0, xmm7);\n-  mulsd(xmm1, xmm5);\n-  movdqu(xmm7, xmm6);\n-  addsd(xmm6, xmm4);\n-  lea(tmp4, ExternalAddress(T_exp));\n-  addpd(xmm3, xmm0);\n-  movdl(edx, xmm6);\n-  subsd(xmm6, xmm7);\n-  pshufd(xmm0, xmm3, 238);\n-  subsd(xmm4, xmm6);\n-  addsd(xmm0, xmm3);\n-  movl(ecx, edx);\n-  andl(edx, 255);\n-  addl(edx, edx);\n-  movdqu(xmm5, Address(tmp4, edx, Address::times_8, 0));\n-  addsd(xmm4, xmm1);\n-  mulsd(xmm2, xmm0);\n-  movdqu(xmm7, ExternalAddress(e_coeff),      tmp2 \/*rscratch*\/);    \/\/0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL\n-  movdqu(xmm3, ExternalAddress(e_coeff + 16), tmp2 \/*rscratch*\/);    \/\/0x6fba4e77UL, 0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL\n-  shll(ecx, 12);\n-  xorl(ecx, tmp1);\n-  andl(rcx, -1048576);\n-  movdq(xmm6, rcx);\n-  addsd(xmm2, xmm4);\n-  mov64(tmp2, 0x3fe62e42fefa39ef);\n-  movdq(xmm1, tmp2);\n-  pshufd(xmm0, xmm2, 68);\n-  pshufd(xmm4, xmm2, 68);\n-  mulsd(xmm1, xmm2);\n-  pshufd(xmm6, xmm6, 17);\n-  mulpd(xmm0, xmm0);\n-  mulpd(xmm7, xmm4);\n-  paddd(xmm5, xmm6);\n-  mulsd(xmm1, xmm5);\n-  pshufd(xmm6, xmm5, 238);\n-  mulsd(xmm0, xmm0);\n-  addpd(xmm3, xmm7);\n-  addsd(xmm1, xmm6);\n-  mulpd(xmm0, xmm3);\n-  pshufd(xmm3, xmm0, 238);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm3, xmm5);\n-  addsd(xmm0, xmm1);\n-  addsd(xmm0, xmm3);\n-  addsd(xmm0, xmm5);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  addl(eax, 16);\n-  movl(edx, 32752);\n-  andl(edx, eax);\n-  cmpl(edx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_6_0_2);\n-  testl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_7_0_2);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  movq(xmm0, Address(rsp, 8));\n-  movq(xmm3, Address(rsp, 8));\n-  movdl(edx, xmm3);\n-  psrlq(xmm3, 32);\n-  movdl(ecx, xmm3);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_9_0_2);\n-  xorpd(xmm3, xmm3);\n-  movl(eax, 18416);\n-  pinsrw(xmm3, eax, 3);\n-  mulsd(xmm0, xmm3);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm3, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 18416);\n-  psrlq(xmm0, 27);\n-  movq(xmm2, ExternalAddress(LOG2_E), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n-  psrld(xmm0, 2);\n-  rcpps(xmm0, xmm0);\n-  psllq(xmm3, 12);\n-  movdqu(xmm6, ExternalAddress(HIGHSIGMASK), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n-  psrlq(xmm3, 12);\n-  mulss(xmm0, xmm7);\n-  movl(edx, -1024);\n-  movdl(xmm5, edx);\n-  por(xmm3, xmm1);\n-  paddd(xmm0, xmm4);\n-  psllq(xmm5, 32);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  pand(xmm5, xmm3);\n-  movl(tmp1, 0);\n-  pand(xmm0, xmm6);\n-  subsd(xmm3, xmm5);\n-  andl(eax, 32752);\n-  subl(eax, 18416);\n-  sarl(eax, 4);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  jmp(L_2TAG_PACKET_4_0_2);\n-\n-  bind(L_2TAG_PACKET_10_0_2);\n-  movq(xmm0, Address(rsp, 8));\n-  movq(xmm3, Address(rsp, 8));\n-  movdl(edx, xmm3);\n-  psrlq(xmm3, 32);\n-  movdl(ecx, xmm3);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_9_0_2);\n-  xorpd(xmm3, xmm3);\n-  movl(eax, 18416);\n-  pinsrw(xmm3, eax, 3);\n-  mulsd(xmm0, xmm3);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm3, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 18416);\n-  psrlq(xmm0, 27);\n-  movq(xmm2, ExternalAddress(LOG2_E), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n-  psrld(xmm0, 2);\n-  rcpps(xmm0, xmm0);\n-  psllq(xmm3, 12);\n-  movdqu(xmm6, ExternalAddress(HIGHSIGMASK), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n-  psrlq(xmm3, 12);\n-  mulss(xmm0, xmm7);\n-  movl(edx, -1024);\n-  movdl(xmm5, edx);\n-  por(xmm3, xmm1);\n-  paddd(xmm0, xmm4);\n-  psllq(xmm5, 32);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  pand(xmm5, xmm3);\n-  movl(tmp1, INT_MIN);\n-  pand(xmm0, xmm6);\n-  subsd(xmm3, xmm5);\n-  andl(eax, 32752);\n-  subl(eax, 18416);\n-  sarl(eax, 4);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  jmp(L_2TAG_PACKET_4_0_2);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  cmpl(eax, 0);\n-  jcc(Assembler::less, L_2TAG_PACKET_11_0_2);\n-  cmpl(eax, 752);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_12_0_2);\n-  addsd(xmm0, xmm7);\n-  movq(xmm2, ExternalAddress(HALFMASK), tmp2 \/*rscratch*\/);    \/\/0xf8000000UL, 0xffffffffUL, 0xf8000000UL, 0xffffffffUL\n-  addpd(xmm3, xmm0);\n-  xorpd(xmm6, xmm6);\n-  movl(eax, 17080);\n-  pinsrw(xmm6, eax, 3);\n-  pshufd(xmm0, xmm3, 238);\n-  addsd(xmm0, xmm3);\n-  movdqu(xmm3, xmm5);\n-  addsd(xmm5, xmm0);\n-  movdqu(xmm4, xmm2);\n-  subsd(xmm3, xmm5);\n-  movdqu(xmm7, xmm5);\n-  pand(xmm5, xmm2);\n-  movdqu(xmm2, xmm1);\n-  pand(xmm4, xmm1);\n-  subsd(xmm7, xmm5);\n-  addsd(xmm0, xmm3);\n-  subsd(xmm1, xmm4);\n-  mulsd(xmm4, xmm5);\n-  addsd(xmm0, xmm7);\n-  mulsd(xmm2, xmm0);\n-  movdqu(xmm7, xmm6);\n-  mulsd(xmm1, xmm5);\n-  addsd(xmm6, xmm4);\n-  movdl(eax, xmm6);\n-  subsd(xmm6, xmm7);\n-  lea(tmp4, ExternalAddress(T_exp));\n-  addsd(xmm2, xmm1);\n-  movdqu(xmm7, ExternalAddress(e_coeff +  0), tmp2 \/*rscratch*\/);    \/\/0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL\n-  movdqu(xmm3, ExternalAddress(e_coeff + 16), tmp2 \/*rscratch*\/);    \/\/0x6fba4e77UL, 0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL\n-  subsd(xmm4, xmm6);\n-  pextrw(edx, xmm6, 3);\n-  movl(ecx, eax);\n-  andl(eax, 255);\n-  addl(eax, eax);\n-  movdqu(xmm5, Address(tmp4, rax, Address::times_8, 0));\n-  addsd(xmm2, xmm4);\n-  sarl(ecx, 8);\n-  movl(eax, ecx);\n-  sarl(ecx, 1);\n-  subl(eax, ecx);\n-  shll(ecx, 20);\n-  xorl(ecx, tmp1);\n-  movdl(xmm6, ecx);\n-  movq(xmm1, ExternalAddress(e_coeff + 32), tmp2 \/*rscratch*\/);    \/\/0xfefa39efUL, 0x3fe62e42UL, 0x00000000UL, 0x00000000UL\n-  andl(edx, 32767);\n-  cmpl(edx, 16529);\n-  jcc(Assembler::above, L_2TAG_PACKET_12_0_2);\n-  pshufd(xmm0, xmm2, 68);\n-  pshufd(xmm4, xmm2, 68);\n-  mulpd(xmm0, xmm0);\n-  mulpd(xmm7, xmm4);\n-  pshufd(xmm6, xmm6, 17);\n-  mulsd(xmm1, xmm2);\n-  mulsd(xmm0, xmm0);\n-  paddd(xmm5, xmm6);\n-  addpd(xmm3, xmm7);\n-  mulsd(xmm1, xmm5);\n-  pshufd(xmm6, xmm5, 238);\n-  mulpd(xmm0, xmm3);\n-  addsd(xmm1, xmm6);\n-  pshufd(xmm3, xmm0, 238);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm3, xmm5);\n-  shll(eax, 4);\n-  xorpd(xmm4, xmm4);\n-  addl(eax, 16368);\n-  pinsrw(xmm4, eax, 3);\n-  addsd(xmm0, xmm1);\n-  addsd(xmm0, xmm3);\n-  movdqu(xmm1, xmm0);\n-  addsd(xmm0, xmm5);\n-  mulsd(xmm0, xmm4);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_13_0_2);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_14_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movq(xmm0, Address(rsp, 8));\n-  movdqu(xmm2, xmm0);\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 20);\n-  movdl(edx, xmm2);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_15_0_2);\n-  movdl(eax, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(edx, xmm1);\n-  movl(ecx, edx);\n-  addl(edx, edx);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_16_0_2);\n-  addsd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_16_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  movl(Address(rsp, 0), 29);\n-  jmp(L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_18_0_2);\n-  movq(xmm0, Address(rsp, 16));\n-  addpd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_15_0_2);\n-  movdl(eax, xmm1);\n-  movdqu(xmm2, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(edx, xmm1);\n-  movl(ecx, edx);\n-  addl(edx, edx);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_19_0_2);\n-  pextrw(eax, xmm2, 3);\n-  andl(eax, 32752);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_20_0_2);\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 20);\n-  movdl(edx, xmm2);\n-  orl(eax, edx);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_20_0_2);\n-  pextrw(eax, xmm0, 3);\n-  testl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_21_0_2);\n-  testl(ecx, INT_MIN);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_23_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movdl(eax, xmm1);\n-  testl(eax, 1);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_24_0_2);\n-  testl(eax, 2);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_25_0_2);\n-  jmp(L_2TAG_PACKET_24_0_2);\n-\n-  bind(L_2TAG_PACKET_21_0_2);\n-  shrl(ecx, 20);\n-  andl(ecx, 2047);\n-  cmpl(ecx, 1075);\n-  jcc(Assembler::above, L_2TAG_PACKET_24_0_2);\n-  jcc(Assembler::equal, L_2TAG_PACKET_26_0_2);\n-  cmpl(ecx, 1074);\n-  jcc(Assembler::above, L_2TAG_PACKET_23_0_2);\n-  cmpl(ecx, 1023);\n-  jcc(Assembler::below, L_2TAG_PACKET_24_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movl(eax, 17208);\n-  xorpd(xmm3, xmm3);\n-  pinsrw(xmm3, eax, 3);\n-  movdqu(xmm4, xmm3);\n-  addsd(xmm3, xmm1);\n-  subsd(xmm4, xmm3);\n-  addsd(xmm1, xmm4);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_24_0_2);\n-  movdl(eax, xmm3);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_24_0_2);\n-\n-  bind(L_2TAG_PACKET_25_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_27_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_27_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32768);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_24_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32752);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_26_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movdl(eax, xmm1);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_24_0_2);\n-  jmp(L_2TAG_PACKET_25_0_2);\n-\n-  bind(L_2TAG_PACKET_28_0_2);\n-  movdl(eax, xmm1);\n-  psrlq(xmm1, 20);\n-  movdl(edx, xmm1);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_29_0_2);\n-  movq(xmm0, Address(rsp, 16));\n-  addsd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_29_0_2);\n-  movq(xmm0, Address(rsp, 8));\n-  pextrw(eax, xmm0, 3);\n-  cmpl(eax, 49136);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_30_0_2);\n-  movdl(ecx, xmm0);\n-  psrlq(xmm0, 20);\n-  movdl(edx, xmm0);\n-  orl(ecx, edx);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_30_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32760);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_30_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  andl(eax, 32752);\n-  subl(eax, 16368);\n-  pextrw(edx, xmm1, 3);\n-  xorpd(xmm0, xmm0);\n-  xorl(eax, edx);\n-  andl(eax, 32768);\n-  jcc(Assembler::equal, L_2TAG_PACKET_31_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_31_0_2);\n-  movl(ecx, 32752);\n-  pinsrw(xmm0, ecx, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_32_0_2);\n-  movdl(eax, xmm1);\n-  cmpl(edx, 17184);\n-  jcc(Assembler::above, L_2TAG_PACKET_33_0_2);\n-  testl(eax, 1);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n-  testl(eax, 2);\n-  jcc(Assembler::equal, L_2TAG_PACKET_35_0_2);\n-  jmp(L_2TAG_PACKET_36_0_2);\n-\n-  bind(L_2TAG_PACKET_33_0_2);\n-  testl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_35_0_2);\n-  jmp(L_2TAG_PACKET_36_0_2);\n-\n-  bind(L_2TAG_PACKET_7_0_2);\n-  movq(xmm2, Address(rsp, 8));\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 31);\n-  movdl(ecx, xmm2);\n-  orl(eax, ecx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_9_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  pextrw(edx, xmm1, 3);\n-  movdl(eax, xmm1);\n-  movdqu(xmm2, xmm1);\n-  psrlq(xmm2, 32);\n-  movdl(ecx, xmm2);\n-  addl(ecx, ecx);\n-  orl(ecx, eax);\n-  jcc(Assembler::equal, L_2TAG_PACKET_37_0_2);\n-  andl(edx, 32752);\n-  cmpl(edx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_28_0_2);\n-  cmpl(edx, 17200);\n-  jcc(Assembler::above, L_2TAG_PACKET_35_0_2);\n-  cmpl(edx, 17184);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_32_0_2);\n-  cmpl(edx, 16368);\n-  jcc(Assembler::below, L_2TAG_PACKET_34_0_2);\n-  movl(eax, 17208);\n-  xorpd(xmm2, xmm2);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm4, xmm2);\n-  addsd(xmm2, xmm1);\n-  subsd(xmm4, xmm2);\n-  addsd(xmm1, xmm4);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32767);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n-  movdl(eax, xmm2);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_35_0_2);\n-\n-  bind(L_2TAG_PACKET_36_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(edx, 30704);\n-  pinsrw(xmm1, edx, 3);\n-  movq(xmm2, ExternalAddress(LOG2_E), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n-  movq(xmm4, Address(rsp, 8));\n-  pextrw(eax, xmm4, 3);\n-  movl(edx, 8192);\n-  movdl(xmm4, edx);\n-  andl(eax, 32767);\n-  subl(eax, 16);\n-  jcc(Assembler::less, L_2TAG_PACKET_10_0_2);\n-  movl(edx, eax);\n-  andl(edx, 32752);\n-  subl(edx, 16368);\n-  movl(ecx, edx);\n-  sarl(edx, 31);\n-  addl(ecx, edx);\n-  xorl(ecx, edx);\n-  addl(ecx, 16);\n-  bsrl(ecx, ecx);\n-  movl(tmp1, INT_MIN);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_34_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(eax, 32752);\n-  pinsrw(xmm1, eax, 3);\n-  xorpd(xmm0, xmm0);\n-  mulsd(xmm0, xmm1);\n-  movl(Address(rsp, 0), 28);\n-  jmp(L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_35_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(edx, 30704);\n-  pinsrw(xmm1, edx, 3);\n-  movq(xmm2, ExternalAddress(LOG2_E), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n-  movq(xmm4, Address(rsp, 8));\n-  pextrw(eax, xmm4, 3);\n-  movl(edx, 8192);\n-  movdl(xmm4, edx);\n-  andl(eax, 32767);\n-  subl(eax, 16);\n-  jcc(Assembler::less, L_2TAG_PACKET_8_0_2);\n-  movl(edx, eax);\n-  andl(edx, 32752);\n-  subl(edx, 16368);\n-  movl(ecx, edx);\n-  sarl(edx, 31);\n-  addl(ecx, edx);\n-  xorl(ecx, edx);\n-  addl(ecx, 16);\n-  bsrl(ecx, ecx);\n-  movl(tmp1, 0);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_19_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_22_0_2);\n-  xorpd(xmm0, xmm0);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_11_0_2);\n-  addl(eax, 384);\n-  cmpl(eax, 0);\n-  jcc(Assembler::less, L_2TAG_PACKET_38_0_2);\n-  mulsd(xmm5, xmm1);\n-  addsd(xmm0, xmm7);\n-  shrl(tmp1, 31);\n-  addpd(xmm3, xmm0);\n-  pshufd(xmm0, xmm3, 238);\n-  addsd(xmm3, xmm0);\n-  lea(tmp4, ExternalAddress(log2));    \/\/0xfefa39efUL, 0x3fe62e42UL, 0xfefa39efUL, 0xbfe62e42UL\n-  movq(xmm4, Address(tmp4, tmp1, Address::times_8, 0));\n-  mulsd(xmm1, xmm3);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  shll(tmp1, 15);\n-  orl(eax, tmp1);\n-  pinsrw(xmm0, eax, 3);\n-  addsd(xmm5, xmm1);\n-  mulsd(xmm5, xmm4);\n-  addsd(xmm0, xmm5);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_38_0_2);\n-\n-  bind(L_2TAG_PACKET_37_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_39_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  movl(Address(rsp, 0), 26);\n-  jmp(L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_9_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movdqu(xmm2, xmm1);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32752);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_40_0_2);\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 20);\n-  movdl(edx, xmm2);\n-  orl(eax, edx);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_40_0_2);\n-  movdl(eax, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(edx, xmm1);\n-  movl(ecx, edx);\n-  addl(edx, edx);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_39_0_2);\n-  shrl(edx, 21);\n-  cmpl(edx, 1075);\n-  jcc(Assembler::above, L_2TAG_PACKET_41_0_2);\n-  jcc(Assembler::equal, L_2TAG_PACKET_42_0_2);\n-  cmpl(edx, 1023);\n-  jcc(Assembler::below, L_2TAG_PACKET_41_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movl(eax, 17208);\n-  xorpd(xmm3, xmm3);\n-  pinsrw(xmm3, eax, 3);\n-  movdqu(xmm4, xmm3);\n-  addsd(xmm3, xmm1);\n-  subsd(xmm4, xmm3);\n-  addsd(xmm1, xmm4);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_41_0_2);\n-  movdl(eax, xmm3);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_41_0_2);\n-\n-  bind(L_2TAG_PACKET_43_0_2);\n-  movq(xmm0, Address(rsp, 8));\n-  testl(ecx, INT_MIN);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_44_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_42_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movdl(eax, xmm1);\n-  testl(eax, 1);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_43_0_2);\n-\n-  bind(L_2TAG_PACKET_41_0_2);\n-  testl(ecx, INT_MIN);\n-  jcc(Assembler::equal, L_2TAG_PACKET_22_0_2);\n-  xorpd(xmm0, xmm0);\n-\n-  bind(L_2TAG_PACKET_44_0_2);\n-  movl(eax, 16368);\n-  xorpd(xmm1, xmm1);\n-  pinsrw(xmm1, eax, 3);\n-  divsd(xmm1, xmm0);\n-  movdqu(xmm0, xmm1);\n-  movl(Address(rsp, 0), 27);\n-  jmp(L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_12_0_2);\n-  movq(xmm2, Address(rsp, 8));\n-  movq(xmm6, Address(rsp, 16));\n-  pextrw(eax, xmm2, 3);\n-  pextrw(edx, xmm6, 3);\n-  movl(ecx, 32752);\n-  andl(ecx, edx);\n-  cmpl(ecx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_45_0_2);\n-  andl(eax, 32752);\n-  subl(eax, 16368);\n-  xorl(edx, eax);\n-  testl(edx, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_46_0_2);\n-\n-  bind(L_2TAG_PACKET_47_0_2);\n-  movl(eax, 32736);\n-  pinsrw(xmm0, eax, 3);\n-  shrl(tmp1, 16);\n-  orl(eax, tmp1);\n-  pinsrw(xmm1, eax, 3);\n-  mulsd(xmm0, xmm1);\n-\n-  bind(L_2TAG_PACKET_14_0_2);\n-  movl(Address(rsp, 0), 24);\n-  jmp(L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_46_0_2);\n-  movl(eax, 16);\n-  pinsrw(xmm0, eax, 3);\n-  mulsd(xmm0, xmm0);\n-  testl(tmp1, INT_MIN);\n-  jcc(Assembler::equal, L_2TAG_PACKET_48_0_2);\n-  mov64(tmp2, 0x8000000000000000);\n-  movdq(xmm2, tmp2);\n-  xorpd(xmm0, xmm2);\n-\n-  bind(L_2TAG_PACKET_48_0_2);\n-  movl(Address(rsp, 0), 25);\n-  jmp(L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_13_0_2);\n-  pextrw(ecx, xmm5, 3);\n-  pextrw(edx, xmm4, 3);\n-  movl(eax, -1);\n-  andl(ecx, 32752);\n-  subl(ecx, 16368);\n-  andl(edx, 32752);\n-  addl(edx, ecx);\n-  movl(ecx, -31);\n-  sarl(edx, 4);\n-  subl(ecx, edx);\n-  jcc(Assembler::lessEqual, L_2TAG_PACKET_49_0_2);\n-  cmpl(ecx, 20);\n-  jcc(Assembler::above, L_2TAG_PACKET_50_0_2);\n-  shll(eax);\n-\n-  bind(L_2TAG_PACKET_49_0_2);\n-  movdl(xmm0, eax);\n-  psllq(xmm0, 32);\n-  pand(xmm0, xmm5);\n-  subsd(xmm5, xmm0);\n-  addsd(xmm5, xmm1);\n-  mulsd(xmm0, xmm4);\n-  mulsd(xmm5, xmm4);\n-  addsd(xmm0, xmm5);\n-\n-  bind(L_2TAG_PACKET_50_0_2);\n-  jmp(L_2TAG_PACKET_48_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movw(ecx, Address(rsp, 22));\n-  movl(edx, INT_MIN);\n-  movdl(xmm1, rdx);\n-  xorpd(xmm7, xmm7);\n-  paddd(xmm0, xmm4);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  paddq(xmm1, xmm3);\n-  pand(xmm5, xmm1);\n-  andl(ecx, 32752);\n-  cmpl(ecx, 16560);\n-  jcc(Assembler::less, L_2TAG_PACKET_3_0_2);\n-  pand(xmm0, xmm6);\n-  subsd(xmm3, xmm5);\n-  addl(eax, 16351);\n-  shrl(eax, 4);\n-  subl(eax, 1022);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  lea(r11, ExternalAddress(L_tbl));\n-  movq(xmm4, ExternalAddress(coeff_h), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL\n-  mulsd(xmm3, xmm0);\n-  movq(xmm6, ExternalAddress(coeff_h), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL\n-  subsd(xmm5, xmm2);\n-  movq(xmm1, ExternalAddress(coeff_h + 8), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xbf5dabe1UL\n-  pshufd(xmm2, xmm3, 68);\n-  unpcklpd(xmm5, xmm3);\n-  addsd(xmm3, xmm5);\n-  movq(xmm0, ExternalAddress(coeff_h + 8), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xbf5dabe1UL\n-  andl(edx, 16760832);\n-  shrl(edx, 10);\n-  addpd(xmm7, Address(tmp4, edx, Address::times_1, -3648));\n-  mulsd(xmm4, xmm5);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm6, xmm2);\n-  mulsd(xmm1, xmm2);\n-  movdqu(xmm2, xmm5);\n-  mulsd(xmm4, xmm5);\n-  addsd(xmm5, xmm0);\n-  movdqu(xmm0, xmm7);\n-  addsd(xmm2, xmm3);\n-  addsd(xmm7, xmm5);\n-  mulsd(xmm6, xmm2);\n-  subsd(xmm0, xmm7);\n-  movdqu(xmm2, xmm7);\n-  addsd(xmm7, xmm4);\n-  addsd(xmm0, xmm5);\n-  subsd(xmm2, xmm7);\n-  addsd(xmm4, xmm2);\n-  pshufd(xmm2, xmm5, 238);\n-  movdqu(xmm5, xmm7);\n-  addsd(xmm7, xmm2);\n-  addsd(xmm4, xmm0);\n-  movdqu(xmm0, ExternalAddress(coeff), tmp2 \/*rscratch*\/);    \/\/0x6dc96112UL, 0xbf836578UL, 0xee241472UL, 0xbf9b0301UL\n-  subsd(xmm5, xmm7);\n-  addsd(xmm6, xmm4);\n-  movdqu(xmm4, xmm7);\n-  addsd(xmm5, xmm2);\n-  addsd(xmm7, xmm1);\n-  movdqu(xmm2, ExternalAddress(coeff + 64), tmp2 \/*rscratch*\/);    \/\/0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL, 0xbf5dabe1UL\n-  subsd(xmm4, xmm7);\n-  addsd(xmm6, xmm5);\n-  addsd(xmm4, xmm1);\n-  pshufd(xmm5, xmm7, 238);\n-  movapd(xmm1, xmm7);\n-  addsd(xmm7, xmm5);\n-  subsd(xmm1, xmm7);\n-  addsd(xmm1, xmm5);\n-  movdqu(xmm5, ExternalAddress(coeff + 80), tmp2 \/*rscratch*\/);    \/\/0x9f95985aUL, 0xbfb528dbUL, 0xf8b5787dUL, 0x3ef2531eUL\n-  pshufd(xmm3, xmm3, 68);\n-  addsd(xmm6, xmm4);\n-  addsd(xmm6, xmm1);\n-  movdqu(xmm1, ExternalAddress(coeff + 32), tmp2 \/*rscratch*\/);    \/\/0x9f95985aUL, 0xbfb528dbUL, 0xb3841d2aUL, 0xbfd619b6UL\n-  mulpd(xmm0, xmm3);\n-  mulpd(xmm2, xmm3);\n-  pshufd(xmm4, xmm3, 68);\n-  mulpd(xmm3, xmm3);\n-  addpd(xmm0, xmm1);\n-  addpd(xmm5, xmm2);\n-  mulsd(xmm4, xmm3);\n-  movq(xmm2, ExternalAddress(HIGHMASK_LOG_X), tmp2 \/*rscratch*\/);    \/\/0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xfffff800UL\n-  mulpd(xmm3, xmm3);\n-  movq(xmm1, Address(rsp, 16));\n-  movw(ecx, Address(rsp, 22));\n-  mulpd(xmm0, xmm4);\n-  pextrw(eax, xmm7, 3);\n-  mulpd(xmm5, xmm4);\n-  mulpd(xmm0, xmm3);\n-  movq(xmm4, ExternalAddress(HIGHMASK_Y + 8), tmp2 \/*rscratch*\/);    \/\/0x00000000UL, 0xffffffffUL\n-  pand(xmm2, xmm7);\n-  addsd(xmm5, xmm6);\n-  subsd(xmm7, xmm2);\n-  addpd(xmm5, xmm0);\n-  andl(eax, 32752);\n-  subl(eax, 16368);\n-  andl(ecx, 32752);\n-  cmpl(ecx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_45_0_2);\n-  addl(ecx, eax);\n-  cmpl(ecx, 16576);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_51_0_2);\n-  pshufd(xmm0, xmm5, 238);\n-  pand(xmm4, xmm1);\n-  movdqu(xmm3, xmm1);\n-  addsd(xmm5, xmm0);\n-  subsd(xmm1, xmm4);\n-  xorpd(xmm6, xmm6);\n-  movl(edx, 17080);\n-  pinsrw(xmm6, edx, 3);\n-  addsd(xmm7, xmm5);\n-  mulsd(xmm4, xmm2);\n-  mulsd(xmm1, xmm2);\n-  movdqu(xmm5, xmm6);\n-  mulsd(xmm3, xmm7);\n-  addsd(xmm6, xmm4);\n-  addsd(xmm1, xmm3);\n-  movdqu(xmm7, ExternalAddress(e_coeff), tmp2 \/*rscratch*\/);    \/\/0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL\n-  movdl(edx, xmm6);\n-  subsd(xmm6, xmm5);\n-  lea(tmp4, ExternalAddress(T_exp));\n-  movdqu(xmm3, ExternalAddress(e_coeff + 16), tmp2 \/*rscratch*\/);    \/\/0x6fba4e77UL, 0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL\n-  movq(xmm2, ExternalAddress(e_coeff + 32), tmp2 \/*rscratch*\/);    \/\/0xfefa39efUL, 0x3fe62e42UL, 0x00000000UL, 0x00000000UL\n-  subsd(xmm4, xmm6);\n-  movl(ecx, edx);\n-  andl(edx, 255);\n-  addl(edx, edx);\n-  movdqu(xmm5, Address(tmp4, edx, Address::times_8, 0));\n-  addsd(xmm4, xmm1);\n-  pextrw(edx, xmm6, 3);\n-  shrl(ecx, 8);\n-  movl(eax, ecx);\n-  shrl(ecx, 1);\n-  subl(eax, ecx);\n-  shll(ecx, 20);\n-  movdl(xmm6, ecx);\n-  pshufd(xmm0, xmm4, 68);\n-  pshufd(xmm1, xmm4, 68);\n-  mulpd(xmm0, xmm0);\n-  mulpd(xmm7, xmm1);\n-  pshufd(xmm6, xmm6, 17);\n-  mulsd(xmm2, xmm4);\n-  andl(edx, 32767);\n-  cmpl(edx, 16529);\n-  jcc(Assembler::above, L_2TAG_PACKET_12_0_2);\n-  mulsd(xmm0, xmm0);\n-  paddd(xmm5, xmm6);\n-  addpd(xmm3, xmm7);\n-  mulsd(xmm2, xmm5);\n-  pshufd(xmm6, xmm5, 238);\n-  mulpd(xmm0, xmm3);\n-  addsd(xmm2, xmm6);\n-  pshufd(xmm3, xmm0, 238);\n-  addl(eax, 1023);\n-  shll(eax, 20);\n-  orl(eax, tmp1);\n-  movdl(xmm4, eax);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm3, xmm5);\n-  addsd(xmm0, xmm2);\n-  psllq(xmm4, 32);\n-  addsd(xmm0, xmm3);\n-  movdqu(xmm1, xmm0);\n-  addsd(xmm0, xmm5);\n-  mulsd(xmm0, xmm4);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_13_0_2);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_14_0_2);\n-\n-  bind(L_2TAG_PACKET_52_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_45_0_2);\n-  movq(xmm0, Address(rsp, 8));\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 49136);\n-  pinsrw(xmm2, eax, 3);\n-  addsd(xmm2, xmm0);\n-  pextrw(eax, xmm2, 3);\n-  cmpl(eax, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_53_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32760);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_53_0_2);\n-  movq(xmm1, Address(rsp, 16));\n-  movdl(edx, xmm1);\n-  movdqu(xmm3, xmm1);\n-  psrlq(xmm3, 20);\n-  movdl(ecx, xmm3);\n-  orl(ecx, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_54_0_2);\n-  addsd(xmm1, xmm1);\n-  movdqu(xmm0, xmm1);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_51_0_2);\n-  pextrw(eax, xmm1, 3);\n-  pextrw(ecx, xmm2, 3);\n-  xorl(eax, ecx);\n-  testl(eax, 32768);\n-  jcc(Assembler::equal, L_2TAG_PACKET_47_0_2);\n-  jmp(L_2TAG_PACKET_46_0_2);\n-\n-  bind(L_2TAG_PACKET_54_0_2);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  pextrw(edx, xmm1, 3);\n-  xorpd(xmm0, xmm0);\n-  subl(eax, 16368);\n-  xorl(eax, edx);\n-  testl(eax, 32768);\n-  jcc(Assembler::equal, L_2TAG_PACKET_55_0_2);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_55_0_2);\n-  movl(edx, 32752);\n-  pinsrw(xmm0, edx, 3);\n-  jmp(B1_5);\n-\n-  bind(L_2TAG_PACKET_17_0_2);\n-  movq(Address(rsp, 24), xmm0);\n-\n-  bind(B1_3);\n-  movq(xmm0, Address(rsp, 24));\n-\n-  bind(L_2TAG_PACKET_56_0_2);\n-\n-  bind(B1_5);\n-  addq(rsp, 40);\n-}\n-#else\n-\/\/ The 32 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_pow[] =\n-{\n-    0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL, 0xf8000000UL,\n-    0xffffffffUL, 0x00000000UL, 0xfffff800UL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0x00000000UL, 0x20000000UL, 0x3feff00aUL, 0x96621f95UL,\n-    0x3e5b1856UL, 0xe0000000UL, 0x3fefe019UL, 0xe5916f9eUL, 0xbe325278UL,\n-    0x00000000UL, 0x3fefd02fUL, 0x859a1062UL, 0x3e595fb7UL, 0xc0000000UL,\n-    0x3fefc049UL, 0xb245f18fUL, 0xbe529c38UL, 0xe0000000UL, 0x3fefb069UL,\n-    0xad2880a7UL, 0xbe501230UL, 0x60000000UL, 0x3fefa08fUL, 0xc8e72420UL,\n-    0x3e597bd1UL, 0x80000000UL, 0x3fef90baUL, 0xc30c4500UL, 0xbe5d6c75UL,\n-    0xe0000000UL, 0x3fef80eaUL, 0x02c63f43UL, 0x3e2e1318UL, 0xc0000000UL,\n-    0x3fef7120UL, 0xb3d4ccccUL, 0xbe44c52aUL, 0x00000000UL, 0x3fef615cUL,\n-    0xdbd91397UL, 0xbe4e7d6cUL, 0xa0000000UL, 0x3fef519cUL, 0x65c5cd68UL,\n-    0xbe522dc8UL, 0xa0000000UL, 0x3fef41e2UL, 0x46d1306cUL, 0xbe5a840eUL,\n-    0xe0000000UL, 0x3fef322dUL, 0xd2980e94UL, 0x3e5071afUL, 0xa0000000UL,\n-    0x3fef227eUL, 0x773abadeUL, 0xbe5891e5UL, 0xa0000000UL, 0x3fef12d4UL,\n-    0xdc6bf46bUL, 0xbe5cccbeUL, 0xe0000000UL, 0x3fef032fUL, 0xbc7247faUL,\n-    0xbe2bab83UL, 0x80000000UL, 0x3feef390UL, 0xbcaa1e46UL, 0xbe53bb3bUL,\n-    0x60000000UL, 0x3feee3f6UL, 0x5f6c682dUL, 0xbe54c619UL, 0x80000000UL,\n-    0x3feed461UL, 0x5141e368UL, 0xbe4b6d86UL, 0xe0000000UL, 0x3feec4d1UL,\n-    0xec678f76UL, 0xbe369af6UL, 0x80000000UL, 0x3feeb547UL, 0x41301f55UL,\n-    0xbe2d4312UL, 0x60000000UL, 0x3feea5c2UL, 0x676da6bdUL, 0xbe4d8dd0UL,\n-    0x60000000UL, 0x3fee9642UL, 0x57a891c4UL, 0x3e51f991UL, 0xa0000000UL,\n-    0x3fee86c7UL, 0xe4eb491eUL, 0x3e579bf9UL, 0x20000000UL, 0x3fee7752UL,\n-    0xfddc4a2cUL, 0xbe3356e6UL, 0xc0000000UL, 0x3fee67e1UL, 0xd75b5bf1UL,\n-    0xbe449531UL, 0x80000000UL, 0x3fee5876UL, 0xbd423b8eUL, 0x3df54fe4UL,\n-    0x60000000UL, 0x3fee4910UL, 0x330e51b9UL, 0x3e54289cUL, 0x80000000UL,\n-    0x3fee39afUL, 0x8651a95fUL, 0xbe55aad6UL, 0xa0000000UL, 0x3fee2a53UL,\n-    0x5e98c708UL, 0xbe2fc4a9UL, 0xe0000000UL, 0x3fee1afcUL, 0x0989328dUL,\n-    0x3e23958cUL, 0x40000000UL, 0x3fee0babUL, 0xee642abdUL, 0xbe425dd8UL,\n-    0xa0000000UL, 0x3fedfc5eUL, 0xc394d236UL, 0x3e526362UL, 0x20000000UL,\n-    0x3feded17UL, 0xe104aa8eUL, 0x3e4ce247UL, 0xc0000000UL, 0x3fedddd4UL,\n-    0x265a9be4UL, 0xbe5bb77aUL, 0x40000000UL, 0x3fedce97UL, 0x0ecac52fUL,\n-    0x3e4a7cb1UL, 0xe0000000UL, 0x3fedbf5eUL, 0x124cb3b8UL, 0x3e257024UL,\n-    0x80000000UL, 0x3fedb02bUL, 0xe6d4febeUL, 0xbe2033eeUL, 0x20000000UL,\n-    0x3feda0fdUL, 0x39cca00eUL, 0xbe3ddabcUL, 0xc0000000UL, 0x3fed91d3UL,\n-    0xef8a552aUL, 0xbe543390UL, 0x40000000UL, 0x3fed82afUL, 0xb8e85204UL,\n-    0x3e513850UL, 0xe0000000UL, 0x3fed738fUL, 0x3d59fe08UL, 0xbe5db728UL,\n-    0x40000000UL, 0x3fed6475UL, 0x3aa7ead1UL, 0x3e58804bUL, 0xc0000000UL,\n-    0x3fed555fUL, 0xf8a35ba9UL, 0xbe5298b0UL, 0x00000000UL, 0x3fed464fUL,\n-    0x9a88dd15UL, 0x3e5a8cdbUL, 0x40000000UL, 0x3fed3743UL, 0xb0b0a190UL,\n-    0x3e598635UL, 0x80000000UL, 0x3fed283cUL, 0xe2113295UL, 0xbe5c1119UL,\n-    0x80000000UL, 0x3fed193aUL, 0xafbf1728UL, 0xbe492e9cUL, 0x60000000UL,\n-    0x3fed0a3dUL, 0xe4a4ccf3UL, 0x3e19b90eUL, 0x20000000UL, 0x3fecfb45UL,\n-    0xba3cbeb8UL, 0x3e406b50UL, 0xc0000000UL, 0x3fecec51UL, 0x110f7dddUL,\n-    0x3e0d6806UL, 0x40000000UL, 0x3fecdd63UL, 0x7dd7d508UL, 0xbe5a8943UL,\n-    0x80000000UL, 0x3fecce79UL, 0x9b60f271UL, 0xbe50676aUL, 0x80000000UL,\n-    0x3fecbf94UL, 0x0b9ad660UL, 0x3e59174fUL, 0x60000000UL, 0x3fecb0b4UL,\n-    0x00823d9cUL, 0x3e5bbf72UL, 0x20000000UL, 0x3feca1d9UL, 0x38a6ec89UL,\n-    0xbe4d38f9UL, 0x80000000UL, 0x3fec9302UL, 0x3a0b7d8eUL, 0x3e53dbfdUL,\n-    0xc0000000UL, 0x3fec8430UL, 0xc6826b34UL, 0xbe27c5c9UL, 0xc0000000UL,\n-    0x3fec7563UL, 0x0c706381UL, 0xbe593653UL, 0x60000000UL, 0x3fec669bUL,\n-    0x7df34ec7UL, 0x3e461ab5UL, 0xe0000000UL, 0x3fec57d7UL, 0x40e5e7e8UL,\n-    0xbe5c3daeUL, 0x00000000UL, 0x3fec4919UL, 0x5602770fUL, 0xbe55219dUL,\n-    0xc0000000UL, 0x3fec3a5eUL, 0xec7911ebUL, 0x3e5a5d25UL, 0x60000000UL,\n-    0x3fec2ba9UL, 0xb39ea225UL, 0xbe53c00bUL, 0x80000000UL, 0x3fec1cf8UL,\n-    0x967a212eUL, 0x3e5a8ddfUL, 0x60000000UL, 0x3fec0e4cUL, 0x580798bdUL,\n-    0x3e5f53abUL, 0x00000000UL, 0x3febffa5UL, 0xb8282df6UL, 0xbe46b874UL,\n-    0x20000000UL, 0x3febf102UL, 0xe33a6729UL, 0x3e54963fUL, 0x00000000UL,\n-    0x3febe264UL, 0x3b53e88aUL, 0xbe3adce1UL, 0x60000000UL, 0x3febd3caUL,\n-    0xc2585084UL, 0x3e5cde9fUL, 0x80000000UL, 0x3febc535UL, 0xa335c5eeUL,\n-    0xbe39fd9cUL, 0x20000000UL, 0x3febb6a5UL, 0x7325b04dUL, 0x3e42ba15UL,\n-    0x60000000UL, 0x3feba819UL, 0x1564540fUL, 0x3e3a9f35UL, 0x40000000UL,\n-    0x3feb9992UL, 0x83fff592UL, 0xbe5465ceUL, 0xa0000000UL, 0x3feb8b0fUL,\n-    0xb9da63d3UL, 0xbe4b1a0aUL, 0x80000000UL, 0x3feb7c91UL, 0x6d6f1ea4UL,\n-    0x3e557657UL, 0x00000000UL, 0x3feb6e18UL, 0x5e80a1bfUL, 0x3e4ddbb6UL,\n-    0x00000000UL, 0x3feb5fa3UL, 0x1c9eacb5UL, 0x3e592877UL, 0xa0000000UL,\n-    0x3feb5132UL, 0x6d40beb3UL, 0xbe51858cUL, 0xa0000000UL, 0x3feb42c6UL,\n-    0xd740c67bUL, 0x3e427ad2UL, 0x40000000UL, 0x3feb345fUL, 0xa3e0cceeUL,\n-    0xbe5c2fc4UL, 0x40000000UL, 0x3feb25fcUL, 0x8e752b50UL, 0xbe3da3c2UL,\n-    0xc0000000UL, 0x3feb179dUL, 0xa892e7deUL, 0x3e1fb481UL, 0xc0000000UL,\n-    0x3feb0943UL, 0x21ed71e9UL, 0xbe365206UL, 0x20000000UL, 0x3feafaeeUL,\n-    0x0e1380a3UL, 0x3e5c5b7bUL, 0x20000000UL, 0x3feaec9dUL, 0x3c3d640eUL,\n-    0xbe5dbbd0UL, 0x60000000UL, 0x3feade50UL, 0x8f97a715UL, 0x3e3a8ec5UL,\n-    0x20000000UL, 0x3fead008UL, 0x23ab2839UL, 0x3e2fe98aUL, 0x40000000UL,\n-    0x3feac1c4UL, 0xf4bbd50fUL, 0x3e54d8f6UL, 0xe0000000UL, 0x3feab384UL,\n-    0x14757c4dUL, 0xbe48774cUL, 0xc0000000UL, 0x3feaa549UL, 0x7c7b0eeaUL,\n-    0x3e5b51bbUL, 0x20000000UL, 0x3fea9713UL, 0xf56f7013UL, 0x3e386200UL,\n-    0xe0000000UL, 0x3fea88e0UL, 0xbe428ebeUL, 0xbe514af5UL, 0xe0000000UL,\n-    0x3fea7ab2UL, 0x8d0e4496UL, 0x3e4f9165UL, 0x60000000UL, 0x3fea6c89UL,\n-    0xdbacc5d5UL, 0xbe5c063bUL, 0x20000000UL, 0x3fea5e64UL, 0x3f19d970UL,\n-    0xbe5a0c8cUL, 0x20000000UL, 0x3fea5043UL, 0x09ea3e6bUL, 0x3e5065dcUL,\n-    0x80000000UL, 0x3fea4226UL, 0x78df246cUL, 0x3e5e05f6UL, 0x40000000UL,\n-    0x3fea340eUL, 0x4057d4a0UL, 0x3e431b2bUL, 0x40000000UL, 0x3fea25faUL,\n-    0x82867bb5UL, 0x3e4b76beUL, 0xa0000000UL, 0x3fea17eaUL, 0x9436f40aUL,\n-    0xbe5aad39UL, 0x20000000UL, 0x3fea09dfUL, 0x4b5253b3UL, 0x3e46380bUL,\n-    0x00000000UL, 0x3fe9fbd8UL, 0x8fc52466UL, 0xbe386f9bUL, 0x20000000UL,\n-    0x3fe9edd5UL, 0x22d3f344UL, 0xbe538347UL, 0x60000000UL, 0x3fe9dfd6UL,\n-    0x1ac33522UL, 0x3e5dbc53UL, 0x00000000UL, 0x3fe9d1dcUL, 0xeabdff1dUL,\n-    0x3e40fc0cUL, 0xe0000000UL, 0x3fe9c3e5UL, 0xafd30e73UL, 0xbe585e63UL,\n-    0xe0000000UL, 0x3fe9b5f3UL, 0xa52f226aUL, 0xbe43e8f9UL, 0x20000000UL,\n-    0x3fe9a806UL, 0xecb8698dUL, 0xbe515b36UL, 0x80000000UL, 0x3fe99a1cUL,\n-    0xf2b4e89dUL, 0x3e48b62bUL, 0x20000000UL, 0x3fe98c37UL, 0x7c9a88fbUL,\n-    0x3e44414cUL, 0x00000000UL, 0x3fe97e56UL, 0xda015741UL, 0xbe5d13baUL,\n-    0xe0000000UL, 0x3fe97078UL, 0x5fdace06UL, 0x3e51b947UL, 0x00000000UL,\n-    0x3fe962a0UL, 0x956ca094UL, 0x3e518785UL, 0x40000000UL, 0x3fe954cbUL,\n-    0x01164c1dUL, 0x3e5d5b57UL, 0xc0000000UL, 0x3fe946faUL, 0xe63b3767UL,\n-    0xbe4f84e7UL, 0x40000000UL, 0x3fe9392eUL, 0xe57cc2a9UL, 0x3e34eda3UL,\n-    0xe0000000UL, 0x3fe92b65UL, 0x8c75b544UL, 0x3e5766a0UL, 0xc0000000UL,\n-    0x3fe91da1UL, 0x37d1d087UL, 0xbe5e2ab1UL, 0x80000000UL, 0x3fe90fe1UL,\n-    0xa953dc20UL, 0x3e5fa1f3UL, 0x80000000UL, 0x3fe90225UL, 0xdbd3f369UL,\n-    0x3e47d6dbUL, 0xa0000000UL, 0x3fe8f46dUL, 0x1c9be989UL, 0xbe5e2b0aUL,\n-    0xa0000000UL, 0x3fe8e6b9UL, 0x3c93d76aUL, 0x3e5c8618UL, 0xe0000000UL,\n-    0x3fe8d909UL, 0x2182fc9aUL, 0xbe41aa9eUL, 0x20000000UL, 0x3fe8cb5eUL,\n-    0xe6b3539dUL, 0xbe530d19UL, 0x60000000UL, 0x3fe8bdb6UL, 0x49e58cc3UL,\n-    0xbe3bb374UL, 0xa0000000UL, 0x3fe8b012UL, 0xa7cfeb8fUL, 0x3e56c412UL,\n-    0x00000000UL, 0x3fe8a273UL, 0x8d52bc19UL, 0x3e1429b8UL, 0x60000000UL,\n-    0x3fe894d7UL, 0x4dc32c6cUL, 0xbe48604cUL, 0xc0000000UL, 0x3fe8873fUL,\n-    0x0c868e56UL, 0xbe564ee5UL, 0x00000000UL, 0x3fe879acUL, 0x56aee828UL,\n-    0x3e5e2fd8UL, 0x60000000UL, 0x3fe86c1cUL, 0x7ceab8ecUL, 0x3e493365UL,\n-    0xc0000000UL, 0x3fe85e90UL, 0x78d4dadcUL, 0xbe4f7f25UL, 0x00000000UL,\n-    0x3fe85109UL, 0x0ccd8280UL, 0x3e31e7a2UL, 0x40000000UL, 0x3fe84385UL,\n-    0x34ba4e15UL, 0x3e328077UL, 0x80000000UL, 0x3fe83605UL, 0xa670975aUL,\n-    0xbe53eee5UL, 0xa0000000UL, 0x3fe82889UL, 0xf61b77b2UL, 0xbe43a20aUL,\n-    0xa0000000UL, 0x3fe81b11UL, 0x13e6643bUL, 0x3e5e5fe5UL, 0xc0000000UL,\n-    0x3fe80d9dUL, 0x82cc94e8UL, 0xbe5ff1f9UL, 0xa0000000UL, 0x3fe8002dUL,\n-    0x8a0c9c5dUL, 0xbe42b0e7UL, 0x60000000UL, 0x3fe7f2c1UL, 0x22a16f01UL,\n-    0x3e5d9ea0UL, 0x20000000UL, 0x3fe7e559UL, 0xc38cd451UL, 0x3e506963UL,\n-    0xc0000000UL, 0x3fe7d7f4UL, 0x9902bc71UL, 0x3e4503d7UL, 0x40000000UL,\n-    0x3fe7ca94UL, 0xdef2a3c0UL, 0x3e3d98edUL, 0xa0000000UL, 0x3fe7bd37UL,\n-    0xed49abb0UL, 0x3e24c1ffUL, 0xe0000000UL, 0x3fe7afdeUL, 0xe3b0be70UL,\n-    0xbe40c467UL, 0x00000000UL, 0x3fe7a28aUL, 0xaf9f193cUL, 0xbe5dff6cUL,\n-    0xe0000000UL, 0x3fe79538UL, 0xb74cf6b6UL, 0xbe258ed0UL, 0xa0000000UL,\n-    0x3fe787ebUL, 0x1d9127c7UL, 0x3e345fb0UL, 0x40000000UL, 0x3fe77aa2UL,\n-    0x1028c21dUL, 0xbe4619bdUL, 0xa0000000UL, 0x3fe76d5cUL, 0x7cb0b5e4UL,\n-    0x3e40f1a2UL, 0xe0000000UL, 0x3fe7601aUL, 0x2b1bc4adUL, 0xbe32e8bbUL,\n-    0xe0000000UL, 0x3fe752dcUL, 0x6839f64eUL, 0x3e41f57bUL, 0xc0000000UL,\n-    0x3fe745a2UL, 0xc4121f7eUL, 0xbe52c40aUL, 0x60000000UL, 0x3fe7386cUL,\n-    0xd6852d72UL, 0xbe5c4e6bUL, 0xc0000000UL, 0x3fe72b39UL, 0x91d690f7UL,\n-    0xbe57f88fUL, 0xe0000000UL, 0x3fe71e0aUL, 0x627a2159UL, 0xbe4425d5UL,\n-    0xc0000000UL, 0x3fe710dfUL, 0x50a54033UL, 0x3e422b7eUL, 0x60000000UL,\n-    0x3fe703b8UL, 0x3b0b5f91UL, 0x3e5d3857UL, 0xe0000000UL, 0x3fe6f694UL,\n-    0x84d628a2UL, 0xbe51f090UL, 0x00000000UL, 0x3fe6e975UL, 0x306d8894UL,\n-    0xbe414d83UL, 0xe0000000UL, 0x3fe6dc58UL, 0x30bf24aaUL, 0xbe4650caUL,\n-    0x80000000UL, 0x3fe6cf40UL, 0xd4628d69UL, 0xbe5db007UL, 0xc0000000UL,\n-    0x3fe6c22bUL, 0xa2aae57bUL, 0xbe31d279UL, 0xc0000000UL, 0x3fe6b51aUL,\n-    0x860edf7eUL, 0xbe2d4c4aUL, 0x80000000UL, 0x3fe6a80dUL, 0xf3559341UL,\n-    0xbe5f7e98UL, 0xe0000000UL, 0x3fe69b03UL, 0xa885899eUL, 0xbe5c2011UL,\n-    0xe0000000UL, 0x3fe68dfdUL, 0x2bdc6d37UL, 0x3e224a82UL, 0xa0000000UL,\n-    0x3fe680fbUL, 0xc12ad1b9UL, 0xbe40cf56UL, 0x00000000UL, 0x3fe673fdUL,\n-    0x1bcdf659UL, 0xbdf52f2dUL, 0x00000000UL, 0x3fe66702UL, 0x5df10408UL,\n-    0x3e5663e0UL, 0xc0000000UL, 0x3fe65a0aUL, 0xa4070568UL, 0xbe40b12fUL,\n-    0x00000000UL, 0x3fe64d17UL, 0x71c54c47UL, 0x3e5f5e8bUL, 0x00000000UL,\n-    0x3fe64027UL, 0xbd4b7e83UL, 0x3e42ead6UL, 0xa0000000UL, 0x3fe6333aUL,\n-    0x61598bd2UL, 0xbe4c48d4UL, 0xc0000000UL, 0x3fe62651UL, 0x6f538d61UL,\n-    0x3e548401UL, 0xa0000000UL, 0x3fe6196cUL, 0x14344120UL, 0xbe529af6UL,\n-    0x00000000UL, 0x3fe60c8bUL, 0x5982c587UL, 0xbe3e1e4fUL, 0x00000000UL,\n-    0x3fe5ffadUL, 0xfe51d4eaUL, 0xbe4c897aUL, 0x80000000UL, 0x3fe5f2d2UL,\n-    0xfd46ebe1UL, 0x3e552e00UL, 0xa0000000UL, 0x3fe5e5fbUL, 0xa4695699UL,\n-    0x3e5ed471UL, 0x60000000UL, 0x3fe5d928UL, 0x80d118aeUL, 0x3e456b61UL,\n-    0xa0000000UL, 0x3fe5cc58UL, 0x304c330bUL, 0x3e54dc29UL, 0x80000000UL,\n-    0x3fe5bf8cUL, 0x0af2dedfUL, 0xbe3aa9bdUL, 0xe0000000UL, 0x3fe5b2c3UL,\n-    0x15fc9258UL, 0xbe479a37UL, 0xc0000000UL, 0x3fe5a5feUL, 0x9292c7eaUL,\n-    0x3e188650UL, 0x20000000UL, 0x3fe5993dUL, 0x33b4d380UL, 0x3e5d6d93UL,\n-    0x20000000UL, 0x3fe58c7fUL, 0x02fd16c7UL, 0x3e2fe961UL, 0xa0000000UL,\n-    0x3fe57fc4UL, 0x4a05edb6UL, 0xbe4d55b4UL, 0xa0000000UL, 0x3fe5730dUL,\n-    0x3d443abbUL, 0xbe5e6954UL, 0x00000000UL, 0x3fe5665aUL, 0x024acfeaUL,\n-    0x3e50e61bUL, 0x00000000UL, 0x3fe559aaUL, 0xcc9edd09UL, 0xbe325403UL,\n-    0x60000000UL, 0x3fe54cfdUL, 0x1fe26950UL, 0x3e5d500eUL, 0x60000000UL,\n-    0x3fe54054UL, 0x6c5ae164UL, 0xbe4a79b4UL, 0xc0000000UL, 0x3fe533aeUL,\n-    0x154b0287UL, 0xbe401571UL, 0xa0000000UL, 0x3fe5270cUL, 0x0673f401UL,\n-    0xbe56e56bUL, 0xe0000000UL, 0x3fe51a6dUL, 0x751b639cUL, 0x3e235269UL,\n-    0xa0000000UL, 0x3fe50dd2UL, 0x7c7b2bedUL, 0x3ddec887UL, 0xc0000000UL,\n-    0x3fe5013aUL, 0xafab4e17UL, 0x3e5e7575UL, 0x60000000UL, 0x3fe4f4a6UL,\n-    0x2e308668UL, 0x3e59aed6UL, 0x80000000UL, 0x3fe4e815UL, 0xf33e2a76UL,\n-    0xbe51f184UL, 0xe0000000UL, 0x3fe4db87UL, 0x839f3e3eUL, 0x3e57db01UL,\n-    0xc0000000UL, 0x3fe4cefdUL, 0xa9eda7bbUL, 0x3e535e0fUL, 0x00000000UL,\n-    0x3fe4c277UL, 0x2a8f66a5UL, 0x3e5ce451UL, 0xc0000000UL, 0x3fe4b5f3UL,\n-    0x05192456UL, 0xbe4e8518UL, 0xc0000000UL, 0x3fe4a973UL, 0x4aa7cd1dUL,\n-    0x3e46784aUL, 0x40000000UL, 0x3fe49cf7UL, 0x8e23025eUL, 0xbe5749f2UL,\n-    0x00000000UL, 0x3fe4907eUL, 0x18d30215UL, 0x3e360f39UL, 0x20000000UL,\n-    0x3fe48408UL, 0x63dcf2f3UL, 0x3e5e00feUL, 0xc0000000UL, 0x3fe47795UL,\n-    0x46182d09UL, 0xbe5173d9UL, 0xa0000000UL, 0x3fe46b26UL, 0x8f0e62aaUL,\n-    0xbe48f281UL, 0xe0000000UL, 0x3fe45ebaUL, 0x5775c40cUL, 0xbe56aad4UL,\n-    0x60000000UL, 0x3fe45252UL, 0x0fe25f69UL, 0x3e48bd71UL, 0x40000000UL,\n-    0x3fe445edUL, 0xe9989ec5UL, 0x3e590d97UL, 0x80000000UL, 0x3fe4398bUL,\n-    0xb3d9ffe3UL, 0x3e479dbcUL, 0x20000000UL, 0x3fe42d2dUL, 0x388e4d2eUL,\n-    0xbe5eed80UL, 0xe0000000UL, 0x3fe420d1UL, 0x6f797c18UL, 0x3e554b4cUL,\n-    0x20000000UL, 0x3fe4147aUL, 0x31048bb4UL, 0xbe5b1112UL, 0x80000000UL,\n-    0x3fe40825UL, 0x2efba4f9UL, 0x3e48ebc7UL, 0x40000000UL, 0x3fe3fbd4UL,\n-    0x50201119UL, 0x3e40b701UL, 0x40000000UL, 0x3fe3ef86UL, 0x0a4db32cUL,\n-    0x3e551de8UL, 0xa0000000UL, 0x3fe3e33bUL, 0x0c9c148bUL, 0xbe50c1f6UL,\n-    0x20000000UL, 0x3fe3d6f4UL, 0xc9129447UL, 0x3e533fa0UL, 0x00000000UL,\n-    0x3fe3cab0UL, 0xaae5b5a0UL, 0xbe22b68eUL, 0x20000000UL, 0x3fe3be6fUL,\n-    0x02305e8aUL, 0xbe54fc08UL, 0x60000000UL, 0x3fe3b231UL, 0x7f908258UL,\n-    0x3e57dc05UL, 0x00000000UL, 0x3fe3a5f7UL, 0x1a09af78UL, 0x3e08038bUL,\n-    0xe0000000UL, 0x3fe399bfUL, 0x490643c1UL, 0xbe5dbe42UL, 0xe0000000UL,\n-    0x3fe38d8bUL, 0x5e8ad724UL, 0xbe3c2b72UL, 0x20000000UL, 0x3fe3815bUL,\n-    0xc67196b6UL, 0x3e1713cfUL, 0xa0000000UL, 0x3fe3752dUL, 0x6182e429UL,\n-    0xbe3ec14cUL, 0x40000000UL, 0x3fe36903UL, 0xab6eb1aeUL, 0x3e5a2cc5UL,\n-    0x40000000UL, 0x3fe35cdcUL, 0xfe5dc064UL, 0xbe5c5878UL, 0x40000000UL,\n-    0x3fe350b8UL, 0x0ba6b9e4UL, 0x3e51619bUL, 0x80000000UL, 0x3fe34497UL,\n-    0x857761aaUL, 0x3e5fff53UL, 0x00000000UL, 0x3fe3387aUL, 0xf872d68cUL,\n-    0x3e484f4dUL, 0xa0000000UL, 0x3fe32c5fUL, 0x087e97c2UL, 0x3e52842eUL,\n-    0x80000000UL, 0x3fe32048UL, 0x73d6d0c0UL, 0xbe503edfUL, 0x80000000UL,\n-    0x3fe31434UL, 0x0c1456a1UL, 0xbe5f72adUL, 0xa0000000UL, 0x3fe30823UL,\n-    0x83a1a4d5UL, 0xbe5e65ccUL, 0xe0000000UL, 0x3fe2fc15UL, 0x855a7390UL,\n-    0xbe506438UL, 0x40000000UL, 0x3fe2f00bUL, 0xa2898287UL, 0x3e3d22a2UL,\n-    0xe0000000UL, 0x3fe2e403UL, 0x8b56f66fUL, 0xbe5aa5fdUL, 0x80000000UL,\n-    0x3fe2d7ffUL, 0x52db119aUL, 0x3e3a2e3dUL, 0x60000000UL, 0x3fe2cbfeUL,\n-    0xe2ddd4c0UL, 0xbe586469UL, 0x40000000UL, 0x3fe2c000UL, 0x6b01bf10UL,\n-    0x3e352b9dUL, 0x40000000UL, 0x3fe2b405UL, 0xb07a1cdfUL, 0x3e5c5cdaUL,\n-    0x80000000UL, 0x3fe2a80dUL, 0xc7b5f868UL, 0xbe5668b3UL, 0xc0000000UL,\n-    0x3fe29c18UL, 0x185edf62UL, 0xbe563d66UL, 0x00000000UL, 0x3fe29027UL,\n-    0xf729e1ccUL, 0x3e59a9a0UL, 0x80000000UL, 0x3fe28438UL, 0x6433c727UL,\n-    0xbe43cc89UL, 0x00000000UL, 0x3fe2784dUL, 0x41782631UL, 0xbe30750cUL,\n-    0xa0000000UL, 0x3fe26c64UL, 0x914911b7UL, 0xbe58290eUL, 0x40000000UL,\n-    0x3fe2607fUL, 0x3dcc73e1UL, 0xbe4269cdUL, 0x00000000UL, 0x3fe2549dUL,\n-    0x2751bf70UL, 0xbe5a6998UL, 0xc0000000UL, 0x3fe248bdUL, 0x4248b9fbUL,\n-    0xbe4ddb00UL, 0x80000000UL, 0x3fe23ce1UL, 0xf35cf82fUL, 0x3e561b71UL,\n-    0x60000000UL, 0x3fe23108UL, 0x8e481a2dUL, 0x3e518fb9UL, 0x60000000UL,\n-    0x3fe22532UL, 0x5ab96edcUL, 0xbe5fafc5UL, 0x40000000UL, 0x3fe2195fUL,\n-    0x80943911UL, 0xbe07f819UL, 0x40000000UL, 0x3fe20d8fUL, 0x386f2d6cUL,\n-    0xbe54ba8bUL, 0x40000000UL, 0x3fe201c2UL, 0xf29664acUL, 0xbe5eb815UL,\n-    0x20000000UL, 0x3fe1f5f8UL, 0x64f03390UL, 0x3e5e320cUL, 0x20000000UL,\n-    0x3fe1ea31UL, 0x747ff696UL, 0x3e5ef0a5UL, 0x40000000UL, 0x3fe1de6dUL,\n-    0x3e9ceb51UL, 0xbe5f8d27UL, 0x20000000UL, 0x3fe1d2acUL, 0x4ae0b55eUL,\n-    0x3e5faa21UL, 0x20000000UL, 0x3fe1c6eeUL, 0x28569a5eUL, 0x3e598a4fUL,\n-    0x20000000UL, 0x3fe1bb33UL, 0x54b33e07UL, 0x3e46130aUL, 0x20000000UL,\n-    0x3fe1af7bUL, 0x024f1078UL, 0xbe4dbf93UL, 0x00000000UL, 0x3fe1a3c6UL,\n-    0xb0783bfaUL, 0x3e419248UL, 0xe0000000UL, 0x3fe19813UL, 0x2f02b836UL,\n-    0x3e4e02b7UL, 0xc0000000UL, 0x3fe18c64UL, 0x28dec9d4UL, 0x3e09064fUL,\n-    0x80000000UL, 0x3fe180b8UL, 0x45cbf406UL, 0x3e5b1f46UL, 0x40000000UL,\n-    0x3fe1750fUL, 0x03d9964cUL, 0x3e5b0a79UL, 0x00000000UL, 0x3fe16969UL,\n-    0x8b5b882bUL, 0xbe238086UL, 0xa0000000UL, 0x3fe15dc5UL, 0x73bad6f8UL,\n-    0xbdf1fca4UL, 0x20000000UL, 0x3fe15225UL, 0x5385769cUL, 0x3e5e8d76UL,\n-    0xa0000000UL, 0x3fe14687UL, 0x1676dc6bUL, 0x3e571d08UL, 0x20000000UL,\n-    0x3fe13aedUL, 0xa8c41c7fUL, 0xbe598a25UL, 0x60000000UL, 0x3fe12f55UL,\n-    0xc4e1aaf0UL, 0x3e435277UL, 0xa0000000UL, 0x3fe123c0UL, 0x403638e1UL,\n-    0xbe21aa7cUL, 0xc0000000UL, 0x3fe1182eUL, 0x557a092bUL, 0xbdd0116bUL,\n-    0xc0000000UL, 0x3fe10c9fUL, 0x7d779f66UL, 0x3e4a61baUL, 0xc0000000UL,\n-    0x3fe10113UL, 0x2b09c645UL, 0xbe5d586eUL, 0x20000000UL, 0x3fe0ea04UL,\n-    0xea2cad46UL, 0x3e5aa97cUL, 0x20000000UL, 0x3fe0d300UL, 0x23190e54UL,\n-    0x3e50f1a7UL, 0xa0000000UL, 0x3fe0bc07UL, 0x1379a5a6UL, 0xbe51619dUL,\n-    0x60000000UL, 0x3fe0a51aUL, 0x926a3d4aUL, 0x3e5cf019UL, 0xa0000000UL,\n-    0x3fe08e38UL, 0xa8c24358UL, 0x3e35241eUL, 0x20000000UL, 0x3fe07762UL,\n-    0x24317e7aUL, 0x3e512cfaUL, 0x00000000UL, 0x3fe06097UL, 0xfd9cf274UL,\n-    0xbe55bef3UL, 0x00000000UL, 0x3fe049d7UL, 0x3689b49dUL, 0xbe36d26dUL,\n-    0x40000000UL, 0x3fe03322UL, 0xf72ef6c4UL, 0xbe54cd08UL, 0xa0000000UL,\n-    0x3fe01c78UL, 0x23702d2dUL, 0xbe5900bfUL, 0x00000000UL, 0x3fe005daUL,\n-    0x3f59c14cUL, 0x3e57d80bUL, 0x40000000UL, 0x3fdfde8dUL, 0xad67766dUL,\n-    0xbe57fad4UL, 0x40000000UL, 0x3fdfb17cUL, 0x644f4ae7UL, 0x3e1ee43bUL,\n-    0x40000000UL, 0x3fdf8481UL, 0x903234d2UL, 0x3e501a86UL, 0x40000000UL,\n-    0x3fdf579cUL, 0xafe9e509UL, 0xbe267c3eUL, 0x00000000UL, 0x3fdf2acdUL,\n-    0xb7dfda0bUL, 0xbe48149bUL, 0x40000000UL, 0x3fdefe13UL, 0x3b94305eUL,\n-    0x3e5f4ea7UL, 0x80000000UL, 0x3fded16fUL, 0x5d95da61UL, 0xbe55c198UL,\n-    0x00000000UL, 0x3fdea4e1UL, 0x406960c9UL, 0xbdd99a19UL, 0x00000000UL,\n-    0x3fde7868UL, 0xd22f3539UL, 0x3e470c78UL, 0x80000000UL, 0x3fde4c04UL,\n-    0x83eec535UL, 0xbe3e1232UL, 0x40000000UL, 0x3fde1fb6UL, 0x3dfbffcbUL,\n-    0xbe4b7d71UL, 0x40000000UL, 0x3fddf37dUL, 0x7e1be4e0UL, 0xbe5b8f8fUL,\n-    0x40000000UL, 0x3fddc759UL, 0x46dae887UL, 0xbe350458UL, 0x80000000UL,\n-    0x3fdd9b4aUL, 0xed6ecc49UL, 0xbe5f0045UL, 0x80000000UL, 0x3fdd6f50UL,\n-    0x2e9e883cUL, 0x3e2915daUL, 0x80000000UL, 0x3fdd436bUL, 0xf0bccb32UL,\n-    0x3e4a68c9UL, 0x80000000UL, 0x3fdd179bUL, 0x9bbfc779UL, 0xbe54a26aUL,\n-    0x00000000UL, 0x3fdcebe0UL, 0x7cea33abUL, 0x3e43c6b7UL, 0x40000000UL,\n-    0x3fdcc039UL, 0xe740fd06UL, 0x3e5526c2UL, 0x40000000UL, 0x3fdc94a7UL,\n-    0x9eadeb1aUL, 0xbe396d8dUL, 0xc0000000UL, 0x3fdc6929UL, 0xf0a8f95aUL,\n-    0xbe5c0ab2UL, 0x80000000UL, 0x3fdc3dc0UL, 0x6ee2693bUL, 0x3e0992e6UL,\n-    0xc0000000UL, 0x3fdc126bUL, 0x5ac6b581UL, 0xbe2834b6UL, 0x40000000UL,\n-    0x3fdbe72bUL, 0x8cc226ffUL, 0x3e3596a6UL, 0x00000000UL, 0x3fdbbbffUL,\n-    0xf92a74bbUL, 0x3e3c5813UL, 0x00000000UL, 0x3fdb90e7UL, 0x479664c0UL,\n-    0xbe50d644UL, 0x00000000UL, 0x3fdb65e3UL, 0x5004975bUL, 0xbe55258fUL,\n-    0x00000000UL, 0x3fdb3af3UL, 0xe4b23194UL, 0xbe588407UL, 0xc0000000UL,\n-    0x3fdb1016UL, 0xe65d4d0aUL, 0x3e527c26UL, 0x80000000UL, 0x3fdae54eUL,\n-    0x814fddd6UL, 0x3e5962a2UL, 0x40000000UL, 0x3fdaba9aUL, 0xe19d0913UL,\n-    0xbe562f4eUL, 0x80000000UL, 0x3fda8ff9UL, 0x43cfd006UL, 0xbe4cfdebUL,\n-    0x40000000UL, 0x3fda656cUL, 0x686f0a4eUL, 0x3e5e47a8UL, 0xc0000000UL,\n-    0x3fda3af2UL, 0x7200d410UL, 0x3e5e1199UL, 0xc0000000UL, 0x3fda108cUL,\n-    0xabd2266eUL, 0x3e5ee4d1UL, 0x40000000UL, 0x3fd9e63aUL, 0x396f8f2cUL,\n-    0x3e4dbffbUL, 0x00000000UL, 0x3fd9bbfbUL, 0xe32b25ddUL, 0x3e5c3a54UL,\n-    0x40000000UL, 0x3fd991cfUL, 0x431e4035UL, 0xbe457925UL, 0x80000000UL,\n-    0x3fd967b6UL, 0x7bed3dd3UL, 0x3e40c61dUL, 0x00000000UL, 0x3fd93db1UL,\n-    0xd7449365UL, 0x3e306419UL, 0x80000000UL, 0x3fd913beUL, 0x1746e791UL,\n-    0x3e56fcfcUL, 0x40000000UL, 0x3fd8e9dfUL, 0xf3a9028bUL, 0xbe5041b9UL,\n-    0xc0000000UL, 0x3fd8c012UL, 0x56840c50UL, 0xbe26e20aUL, 0x40000000UL,\n-    0x3fd89659UL, 0x19763102UL, 0xbe51f466UL, 0x80000000UL, 0x3fd86cb2UL,\n-    0x7032de7cUL, 0xbe4d298aUL, 0x80000000UL, 0x3fd8431eUL, 0xdeb39fabUL,\n-    0xbe4361ebUL, 0x40000000UL, 0x3fd8199dUL, 0x5d01cbe0UL, 0xbe5425b3UL,\n-    0x80000000UL, 0x3fd7f02eUL, 0x3ce99aa9UL, 0x3e146fa8UL, 0x80000000UL,\n-    0x3fd7c6d2UL, 0xd1a262b9UL, 0xbe5a1a69UL, 0xc0000000UL, 0x3fd79d88UL,\n-    0x8606c236UL, 0x3e423a08UL, 0x80000000UL, 0x3fd77451UL, 0x8fd1e1b7UL,\n-    0x3e5a6a63UL, 0xc0000000UL, 0x3fd74b2cUL, 0xe491456aUL, 0x3e42c1caUL,\n-    0x40000000UL, 0x3fd7221aUL, 0x4499a6d7UL, 0x3e36a69aUL, 0x00000000UL,\n-    0x3fd6f91aUL, 0x5237df94UL, 0xbe0f8f02UL, 0x00000000UL, 0x3fd6d02cUL,\n-    0xb6482c6eUL, 0xbe5abcf7UL, 0x00000000UL, 0x3fd6a750UL, 0x1919fd61UL,\n-    0xbe57ade2UL, 0x00000000UL, 0x3fd67e86UL, 0xaa7a994dUL, 0xbe3f3fbdUL,\n-    0x00000000UL, 0x3fd655ceUL, 0x67db014cUL, 0x3e33c550UL, 0x00000000UL,\n-    0x3fd62d28UL, 0xa82856b7UL, 0xbe1409d1UL, 0xc0000000UL, 0x3fd60493UL,\n-    0x1e6a300dUL, 0x3e55d899UL, 0x80000000UL, 0x3fd5dc11UL, 0x1222bd5cUL,\n-    0xbe35bfc0UL, 0xc0000000UL, 0x3fd5b3a0UL, 0x6e8dc2d3UL, 0x3e5d4d79UL,\n-    0x00000000UL, 0x3fd58b42UL, 0xe0e4ace6UL, 0xbe517303UL, 0x80000000UL,\n-    0x3fd562f4UL, 0xb306e0a8UL, 0x3e5edf0fUL, 0xc0000000UL, 0x3fd53ab8UL,\n-    0x6574bc54UL, 0x3e5ee859UL, 0x80000000UL, 0x3fd5128eUL, 0xea902207UL,\n-    0x3e5f6188UL, 0xc0000000UL, 0x3fd4ea75UL, 0x9f911d79UL, 0x3e511735UL,\n-    0x80000000UL, 0x3fd4c26eUL, 0xf9c77397UL, 0xbe5b1643UL, 0x40000000UL,\n-    0x3fd49a78UL, 0x15fc9258UL, 0x3e479a37UL, 0x80000000UL, 0x3fd47293UL,\n-    0xd5a04dd9UL, 0xbe426e56UL, 0xc0000000UL, 0x3fd44abfUL, 0xe04042f5UL,\n-    0x3e56f7c6UL, 0x40000000UL, 0x3fd422fdUL, 0x1d8bf2c8UL, 0x3e5d8810UL,\n-    0x00000000UL, 0x3fd3fb4cUL, 0x88a8ddeeUL, 0xbe311454UL, 0xc0000000UL,\n-    0x3fd3d3abUL, 0x3e3b5e47UL, 0xbe5d1b72UL, 0x40000000UL, 0x3fd3ac1cUL,\n-    0xc2ab5d59UL, 0x3e31b02bUL, 0xc0000000UL, 0x3fd3849dUL, 0xd4e34b9eUL,\n-    0x3e51cb2fUL, 0x40000000UL, 0x3fd35d30UL, 0x177204fbUL, 0xbe2b8cd7UL,\n-    0x80000000UL, 0x3fd335d3UL, 0xfcd38c82UL, 0xbe4356e1UL, 0x80000000UL,\n-    0x3fd30e87UL, 0x64f54accUL, 0xbe4e6224UL, 0x00000000UL, 0x3fd2e74cUL,\n-    0xaa7975d9UL, 0x3e5dc0feUL, 0x80000000UL, 0x3fd2c021UL, 0x516dab3fUL,\n-    0xbe50ffa3UL, 0x40000000UL, 0x3fd29907UL, 0x2bfb7313UL, 0x3e5674a2UL,\n-    0xc0000000UL, 0x3fd271fdUL, 0x0549fc99UL, 0x3e385d29UL, 0xc0000000UL,\n-    0x3fd24b04UL, 0x55b63073UL, 0xbe500c6dUL, 0x00000000UL, 0x3fd2241cUL,\n-    0x3f91953aUL, 0x3e389977UL, 0xc0000000UL, 0x3fd1fd43UL, 0xa1543f71UL,\n-    0xbe3487abUL, 0xc0000000UL, 0x3fd1d67bUL, 0x4ec8867cUL, 0x3df6a2dcUL,\n-    0x00000000UL, 0x3fd1afc4UL, 0x4328e3bbUL, 0x3e41d9c0UL, 0x80000000UL,\n-    0x3fd1891cUL, 0x2e1cda84UL, 0x3e3bdd87UL, 0x40000000UL, 0x3fd16285UL,\n-    0x4b5331aeUL, 0xbe53128eUL, 0x00000000UL, 0x3fd13bfeUL, 0xb9aec164UL,\n-    0xbe52ac98UL, 0xc0000000UL, 0x3fd11586UL, 0xd91e1316UL, 0xbe350630UL,\n-    0x80000000UL, 0x3fd0ef1fUL, 0x7cacc12cUL, 0x3e3f5219UL, 0x40000000UL,\n-    0x3fd0c8c8UL, 0xbce277b7UL, 0x3e3d30c0UL, 0x00000000UL, 0x3fd0a281UL,\n-    0x2a63447dUL, 0xbe541377UL, 0x80000000UL, 0x3fd07c49UL, 0xfac483b5UL,\n-    0xbe5772ecUL, 0xc0000000UL, 0x3fd05621UL, 0x36b8a570UL, 0xbe4fd4bdUL,\n-    0xc0000000UL, 0x3fd03009UL, 0xbae505f7UL, 0xbe450388UL, 0x80000000UL,\n-    0x3fd00a01UL, 0x3e35aeadUL, 0xbe5430fcUL, 0x80000000UL, 0x3fcfc811UL,\n-    0x707475acUL, 0x3e38806eUL, 0x80000000UL, 0x3fcf7c3fUL, 0xc91817fcUL,\n-    0xbe40cceaUL, 0x80000000UL, 0x3fcf308cUL, 0xae05d5e9UL, 0xbe4919b8UL,\n-    0x80000000UL, 0x3fcee4f8UL, 0xae6cc9e6UL, 0xbe530b94UL, 0x00000000UL,\n-    0x3fce9983UL, 0x1efe3e8eUL, 0x3e57747eUL, 0x00000000UL, 0x3fce4e2dUL,\n-    0xda78d9bfUL, 0xbe59a608UL, 0x00000000UL, 0x3fce02f5UL, 0x8abe2c2eUL,\n-    0x3e4a35adUL, 0x00000000UL, 0x3fcdb7dcUL, 0x1495450dUL, 0xbe0872ccUL,\n-    0x80000000UL, 0x3fcd6ce1UL, 0x86ee0ba0UL, 0xbe4f59a0UL, 0x00000000UL,\n-    0x3fcd2205UL, 0xe81ca888UL, 0x3e5402c3UL, 0x00000000UL, 0x3fccd747UL,\n-    0x3b4424b9UL, 0x3e5dfdc3UL, 0x80000000UL, 0x3fcc8ca7UL, 0xd305b56cUL,\n-    0x3e202da6UL, 0x00000000UL, 0x3fcc4226UL, 0x399a6910UL, 0xbe482a1cUL,\n-    0x80000000UL, 0x3fcbf7c2UL, 0x747f7938UL, 0xbe587372UL, 0x80000000UL,\n-    0x3fcbad7cUL, 0x6fc246a0UL, 0x3e50d83dUL, 0x00000000UL, 0x3fcb6355UL,\n-    0xee9e9be5UL, 0xbe5c35bdUL, 0x80000000UL, 0x3fcb194aUL, 0x8416c0bcUL,\n-    0x3e546d4fUL, 0x00000000UL, 0x3fcacf5eUL, 0x49f7f08fUL, 0x3e56da76UL,\n-    0x00000000UL, 0x3fca858fUL, 0x5dc30de2UL, 0x3e5f390cUL, 0x00000000UL,\n-    0x3fca3bdeUL, 0x950583b6UL, 0xbe5e4169UL, 0x80000000UL, 0x3fc9f249UL,\n-    0x33631553UL, 0x3e52aeb1UL, 0x00000000UL, 0x3fc9a8d3UL, 0xde8795a6UL,\n-    0xbe59a504UL, 0x00000000UL, 0x3fc95f79UL, 0x076bf41eUL, 0x3e5122feUL,\n-    0x80000000UL, 0x3fc9163cUL, 0x2914c8e7UL, 0x3e3dd064UL, 0x00000000UL,\n-    0x3fc8cd1dUL, 0x3a30eca3UL, 0xbe21b4aaUL, 0x80000000UL, 0x3fc8841aUL,\n-    0xb2a96650UL, 0xbe575444UL, 0x80000000UL, 0x3fc83b34UL, 0x2376c0cbUL,\n-    0xbe2a74c7UL, 0x80000000UL, 0x3fc7f26bUL, 0xd8a0b653UL, 0xbe5181b6UL,\n-    0x00000000UL, 0x3fc7a9bfUL, 0x32257882UL, 0xbe4a78b4UL, 0x00000000UL,\n-    0x3fc7612fUL, 0x1eee8bd9UL, 0xbe1bfe9dUL, 0x80000000UL, 0x3fc718bbUL,\n-    0x0c603cc4UL, 0x3e36fdc9UL, 0x80000000UL, 0x3fc6d064UL, 0x3728b8cfUL,\n-    0xbe1e542eUL, 0x80000000UL, 0x3fc68829UL, 0xc79a4067UL, 0x3e5c380fUL,\n-    0x00000000UL, 0x3fc6400bUL, 0xf69eac69UL, 0x3e550a84UL, 0x80000000UL,\n-    0x3fc5f808UL, 0xb7a780a4UL, 0x3e5d9224UL, 0x80000000UL, 0x3fc5b022UL,\n-    0xad9dfb1eUL, 0xbe55242fUL, 0x00000000UL, 0x3fc56858UL, 0x659b18beUL,\n-    0xbe4bfda3UL, 0x80000000UL, 0x3fc520a9UL, 0x66ee3631UL, 0xbe57d769UL,\n-    0x80000000UL, 0x3fc4d916UL, 0x1ec62819UL, 0x3e2427f7UL, 0x80000000UL,\n-    0x3fc4919fUL, 0xdec25369UL, 0xbe435431UL, 0x00000000UL, 0x3fc44a44UL,\n-    0xa8acfc4bUL, 0xbe3c62e8UL, 0x00000000UL, 0x3fc40304UL, 0xcf1d3eabUL,\n-    0xbdfba29fUL, 0x80000000UL, 0x3fc3bbdfUL, 0x79aba3eaUL, 0xbdf1b7c8UL,\n-    0x80000000UL, 0x3fc374d6UL, 0xb8d186daUL, 0xbe5130cfUL, 0x80000000UL,\n-    0x3fc32de8UL, 0x9d74f152UL, 0x3e2285b6UL, 0x00000000UL, 0x3fc2e716UL,\n-    0x50ae7ca9UL, 0xbe503920UL, 0x80000000UL, 0x3fc2a05eUL, 0x6caed92eUL,\n-    0xbe533924UL, 0x00000000UL, 0x3fc259c2UL, 0x9cb5034eUL, 0xbe510e31UL,\n-    0x80000000UL, 0x3fc21340UL, 0x12c4d378UL, 0xbe540b43UL, 0x80000000UL,\n-    0x3fc1ccd9UL, 0xcc418706UL, 0x3e59887aUL, 0x00000000UL, 0x3fc1868eUL,\n-    0x921f4106UL, 0xbe528e67UL, 0x80000000UL, 0x3fc1405cUL, 0x3969441eUL,\n-    0x3e5d8051UL, 0x00000000UL, 0x3fc0fa46UL, 0xd941ef5bUL, 0x3e5f9079UL,\n-    0x80000000UL, 0x3fc0b44aUL, 0x5a3e81b2UL, 0xbe567691UL, 0x00000000UL,\n-    0x3fc06e69UL, 0x9d66afe7UL, 0xbe4d43fbUL, 0x00000000UL, 0x3fc028a2UL,\n-    0x0a92a162UL, 0xbe52f394UL, 0x00000000UL, 0x3fbfc5eaUL, 0x209897e5UL,\n-    0x3e529e37UL, 0x00000000UL, 0x3fbf3ac5UL, 0x8458bd7bUL, 0x3e582831UL,\n-    0x00000000UL, 0x3fbeafd5UL, 0xb8d8b4b8UL, 0xbe486b4aUL, 0x00000000UL,\n-    0x3fbe2518UL, 0xe0a3b7b6UL, 0x3e5bafd2UL, 0x00000000UL, 0x3fbd9a90UL,\n-    0x2bf2710eUL, 0x3e383b2bUL, 0x00000000UL, 0x3fbd103cUL, 0x73eb6ab7UL,\n-    0xbe56d78dUL, 0x00000000UL, 0x3fbc861bUL, 0x32ceaff5UL, 0xbe32dc5aUL,\n-    0x00000000UL, 0x3fbbfc2eUL, 0xbee04cb7UL, 0xbe4a71a4UL, 0x00000000UL,\n-    0x3fbb7274UL, 0x35ae9577UL, 0x3e38142fUL, 0x00000000UL, 0x3fbae8eeUL,\n-    0xcbaddab4UL, 0xbe5490f0UL, 0x00000000UL, 0x3fba5f9aUL, 0x95ce1114UL,\n-    0x3e597c71UL, 0x00000000UL, 0x3fb9d67aUL, 0x6d7c0f78UL, 0x3e3abc2dUL,\n-    0x00000000UL, 0x3fb94d8dUL, 0x2841a782UL, 0xbe566cbcUL, 0x00000000UL,\n-    0x3fb8c4d2UL, 0x6ed429c6UL, 0xbe3cfff9UL, 0x00000000UL, 0x3fb83c4aUL,\n-    0xe4a49fbbUL, 0xbe552964UL, 0x00000000UL, 0x3fb7b3f4UL, 0x2193d81eUL,\n-    0xbe42fa72UL, 0x00000000UL, 0x3fb72bd0UL, 0xdd70c122UL, 0x3e527a8cUL,\n-    0x00000000UL, 0x3fb6a3dfUL, 0x03108a54UL, 0xbe450393UL, 0x00000000UL,\n-    0x3fb61c1fUL, 0x30ff7954UL, 0x3e565840UL, 0x00000000UL, 0x3fb59492UL,\n-    0xdedd460cUL, 0xbe5422b5UL, 0x00000000UL, 0x3fb50d36UL, 0x950f9f45UL,\n-    0xbe5313f6UL, 0x00000000UL, 0x3fb4860bUL, 0x582cdcb1UL, 0x3e506d39UL,\n-    0x00000000UL, 0x3fb3ff12UL, 0x7216d3a6UL, 0x3e4aa719UL, 0x00000000UL,\n-    0x3fb3784aUL, 0x57a423fdUL, 0x3e5a9b9fUL, 0x00000000UL, 0x3fb2f1b4UL,\n-    0x7a138b41UL, 0xbe50b418UL, 0x00000000UL, 0x3fb26b4eUL, 0x2fbfd7eaUL,\n-    0x3e23a53eUL, 0x00000000UL, 0x3fb1e519UL, 0x18913ccbUL, 0x3e465fc1UL,\n-    0x00000000UL, 0x3fb15f15UL, 0x7ea24e21UL, 0x3e042843UL, 0x00000000UL,\n-    0x3fb0d941UL, 0x7c6d9c77UL, 0x3e59f61eUL, 0x00000000UL, 0x3fb0539eUL,\n-    0x114efd44UL, 0x3e4ccab7UL, 0x00000000UL, 0x3faf9c56UL, 0x1777f657UL,\n-    0x3e552f65UL, 0x00000000UL, 0x3fae91d2UL, 0xc317b86aUL, 0xbe5a61e0UL,\n-    0x00000000UL, 0x3fad87acUL, 0xb7664efbUL, 0xbe41f64eUL, 0x00000000UL,\n-    0x3fac7de6UL, 0x5d3d03a9UL, 0x3e0807a0UL, 0x00000000UL, 0x3fab7480UL,\n-    0x743c38ebUL, 0xbe3726e1UL, 0x00000000UL, 0x3faa6b78UL, 0x06a253f1UL,\n-    0x3e5ad636UL, 0x00000000UL, 0x3fa962d0UL, 0xa35f541bUL, 0x3e5a187aUL,\n-    0x00000000UL, 0x3fa85a88UL, 0x4b86e446UL, 0xbe508150UL, 0x00000000UL,\n-    0x3fa7529cUL, 0x2589cacfUL, 0x3e52938aUL, 0x00000000UL, 0x3fa64b10UL,\n-    0xaf6b11f2UL, 0xbe3454cdUL, 0x00000000UL, 0x3fa543e2UL, 0x97506fefUL,\n-    0xbe5fdec5UL, 0x00000000UL, 0x3fa43d10UL, 0xe75f7dd9UL, 0xbe388dd3UL,\n-    0x00000000UL, 0x3fa3369cUL, 0xa4139632UL, 0xbdea5177UL, 0x00000000UL,\n-    0x3fa23086UL, 0x352d6f1eUL, 0xbe565ad6UL, 0x00000000UL, 0x3fa12accUL,\n-    0x77449eb7UL, 0xbe50d5c7UL, 0x00000000UL, 0x3fa0256eUL, 0x7478da78UL,\n-    0x3e404724UL, 0x00000000UL, 0x3f9e40dcUL, 0xf59cef7fUL, 0xbe539d0aUL,\n-    0x00000000UL, 0x3f9c3790UL, 0x1511d43cUL, 0x3e53c2c8UL, 0x00000000UL,\n-    0x3f9a2f00UL, 0x9b8bff3cUL, 0xbe43b3e1UL, 0x00000000UL, 0x3f982724UL,\n-    0xad1e22a5UL, 0x3e46f0bdUL, 0x00000000UL, 0x3f962000UL, 0x130d9356UL,\n-    0x3e475ba0UL, 0x00000000UL, 0x3f941994UL, 0x8f86f883UL, 0xbe513d0bUL,\n-    0x00000000UL, 0x3f9213dcUL, 0x914d0dc8UL, 0xbe534335UL, 0x00000000UL,\n-    0x3f900ed8UL, 0x2d73e5e7UL, 0xbe22ba75UL, 0x00000000UL, 0x3f8c1510UL,\n-    0xc5b7d70eUL, 0x3e599c5dUL, 0x00000000UL, 0x3f880de0UL, 0x8a27857eUL,\n-    0xbe3d28c8UL, 0x00000000UL, 0x3f840810UL, 0xda767328UL, 0x3e531b3dUL,\n-    0x00000000UL, 0x3f8003b0UL, 0x77bacaf3UL, 0xbe5f04e3UL, 0x00000000UL,\n-    0x3f780150UL, 0xdf4b0720UL, 0x3e5a8bffUL, 0x00000000UL, 0x3f6ffc40UL,\n-    0x34c48e71UL, 0xbe3fcd99UL, 0x00000000UL, 0x3f5ff6c0UL, 0x1ad218afUL,\n-    0xbe4c78a7UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x80000000UL,\n-    0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL, 0x00000000UL,\n-    0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL, 0x6dc96112UL, 0xbf836578UL,\n-    0xee241472UL, 0xbf9b0301UL, 0x9f95985aUL, 0xbfb528dbUL, 0xb3841d2aUL,\n-    0xbfd619b6UL, 0x518775e3UL, 0x3f9004f2UL, 0xac8349bbUL, 0x3fa76c9bUL,\n-    0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL, 0xbf5dabe1UL, 0x9f95985aUL,\n-    0xbfb528dbUL, 0xf8b5787dUL, 0x3ef2531eUL, 0x486ececbUL, 0x3fc4635eUL,\n-    0x412055ccUL, 0xbdd61bb2UL, 0x00000000UL, 0xfffffff8UL, 0x00000000UL,\n-    0xffffffffUL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3b700000UL,\n-    0xfa5abcbfUL, 0x3ff00b1aUL, 0xa7609f71UL, 0xbc84f6b2UL, 0xa9fb3335UL,\n-    0x3ff0163dUL, 0x9ab8cdb7UL, 0x3c9b6129UL, 0x143b0281UL, 0x3ff02168UL,\n-    0x0fc54eb6UL, 0xbc82bf31UL, 0x3e778061UL, 0x3ff02c9aUL, 0x535b085dUL,\n-    0xbc719083UL, 0x2e11bbccUL, 0x3ff037d4UL, 0xeeade11aUL, 0x3c656811UL,\n-    0xe86e7f85UL, 0x3ff04315UL, 0x1977c96eUL, 0xbc90a31cUL, 0x72f654b1UL,\n-    0x3ff04e5fUL, 0x3aa0d08cUL, 0x3c84c379UL, 0xd3158574UL, 0x3ff059b0UL,\n-    0xa475b465UL, 0x3c8d73e2UL, 0x0e3c1f89UL, 0x3ff0650aUL, 0x5799c397UL,\n-    0xbc95cb7bUL, 0x29ddf6deUL, 0x3ff0706bUL, 0xe2b13c27UL, 0xbc8c91dfUL,\n-    0x2b72a836UL, 0x3ff07bd4UL, 0x54458700UL, 0x3c832334UL, 0x18759bc8UL,\n-    0x3ff08745UL, 0x4bb284ffUL, 0x3c6186beUL, 0xf66607e0UL, 0x3ff092bdUL,\n-    0x800a3fd1UL, 0xbc968063UL, 0xcac6f383UL, 0x3ff09e3eUL, 0x18316136UL,\n-    0x3c914878UL, 0x9b1f3919UL, 0x3ff0a9c7UL, 0x873d1d38UL, 0x3c85d16cUL,\n-    0x6cf9890fUL, 0x3ff0b558UL, 0x4adc610bUL, 0x3c98a62eUL, 0x45e46c85UL,\n-    0x3ff0c0f1UL, 0x06d21cefUL, 0x3c94f989UL, 0x2b7247f7UL, 0x3ff0cc92UL,\n-    0x16e24f71UL, 0x3c901edcUL, 0x23395decUL, 0x3ff0d83bUL, 0xe43f316aUL,\n-    0xbc9bc14dUL, 0x32d3d1a2UL, 0x3ff0e3ecUL, 0x27c57b52UL, 0x3c403a17UL,\n-    0x5fdfa9c5UL, 0x3ff0efa5UL, 0xbc54021bUL, 0xbc949db9UL, 0xaffed31bUL,\n-    0x3ff0fb66UL, 0xc44ebd7bUL, 0xbc6b9bedUL, 0x28d7233eUL, 0x3ff10730UL,\n-    0x1692fdd5UL, 0x3c8d46ebUL, 0xd0125b51UL, 0x3ff11301UL, 0x39449b3aUL,\n-    0xbc96c510UL, 0xab5e2ab6UL, 0x3ff11edbUL, 0xf703fb72UL, 0xbc9ca454UL,\n-    0xc06c31ccUL, 0x3ff12abdUL, 0xb36ca5c7UL, 0xbc51b514UL, 0x14f204abUL,\n-    0x3ff136a8UL, 0xba48dcf0UL, 0xbc67108fUL, 0xaea92de0UL, 0x3ff1429aUL,\n-    0x9af1369eUL, 0xbc932fbfUL, 0x934f312eUL, 0x3ff14e95UL, 0x39bf44abUL,\n-    0xbc8b91e8UL, 0xc8a58e51UL, 0x3ff15a98UL, 0xb9eeab0aUL, 0x3c82406aUL,\n-    0x5471c3c2UL, 0x3ff166a4UL, 0x82ea1a32UL, 0x3c58f23bUL, 0x3c7d517bUL,\n-    0x3ff172b8UL, 0xb9d78a76UL, 0xbc819041UL, 0x8695bbc0UL, 0x3ff17ed4UL,\n-    0xe2ac5a64UL, 0x3c709e3fUL, 0x388c8deaUL, 0x3ff18af9UL, 0xd1970f6cUL,\n-    0xbc911023UL, 0x58375d2fUL, 0x3ff19726UL, 0x85f17e08UL, 0x3c94aaddUL,\n-    0xeb6fcb75UL, 0x3ff1a35bUL, 0x7b4968e4UL, 0x3c8e5b4cUL, 0xf8138a1cUL,\n-    0x3ff1af99UL, 0xa4b69280UL, 0x3c97bf85UL, 0x84045cd4UL, 0x3ff1bbe0UL,\n-    0x352ef607UL, 0xbc995386UL, 0x95281c6bUL, 0x3ff1c82fUL, 0x8010f8c9UL,\n-    0x3c900977UL, 0x3168b9aaUL, 0x3ff1d487UL, 0x00a2643cUL, 0x3c9e016eUL,\n-    0x5eb44027UL, 0x3ff1e0e7UL, 0x088cb6deUL, 0xbc96fdd8UL, 0x22fcd91dUL,\n-    0x3ff1ed50UL, 0x027bb78cUL, 0xbc91df98UL, 0x8438ce4dUL, 0x3ff1f9c1UL,\n-    0xa097af5cUL, 0xbc9bf524UL, 0x88628cd6UL, 0x3ff2063bUL, 0x814a8495UL,\n-    0x3c8dc775UL, 0x3578a819UL, 0x3ff212beUL, 0x2cfcaac9UL, 0x3c93592dUL,\n-    0x917ddc96UL, 0x3ff21f49UL, 0x9494a5eeUL, 0x3c82a97eUL, 0xa27912d1UL,\n-    0x3ff22bddUL, 0x5577d69fUL, 0x3c8d34fbUL, 0x6e756238UL, 0x3ff2387aUL,\n-    0xb6c70573UL, 0x3c99b07eUL, 0xfb82140aUL, 0x3ff2451fUL, 0x911ca996UL,\n-    0x3c8acfccUL, 0x4fb2a63fUL, 0x3ff251ceUL, 0xbef4f4a4UL, 0x3c8ac155UL,\n-    0x711ece75UL, 0x3ff25e85UL, 0x4ac31b2cUL, 0x3c93e1a2UL, 0x65e27cddUL,\n-    0x3ff26b45UL, 0x9940e9d9UL, 0x3c82bd33UL, 0x341ddf29UL, 0x3ff2780eUL,\n-    0x05f9e76cUL, 0x3c9e067cUL, 0xe1f56381UL, 0x3ff284dfUL, 0x8c3f0d7eUL,\n-    0xbc9a4c3aUL, 0x7591bb70UL, 0x3ff291baUL, 0x28401cbdUL, 0xbc82cc72UL,\n-    0xf51fdee1UL, 0x3ff29e9dUL, 0xafad1255UL, 0x3c8612e8UL, 0x66d10f13UL,\n-    0x3ff2ab8aUL, 0x191690a7UL, 0xbc995743UL, 0xd0dad990UL, 0x3ff2b87fUL,\n-    0xd6381aa4UL, 0xbc410adcUL, 0x39771b2fUL, 0x3ff2c57eUL, 0xa6eb5124UL,\n-    0xbc950145UL, 0xa6e4030bUL, 0x3ff2d285UL, 0x54db41d5UL, 0x3c900247UL,\n-    0x1f641589UL, 0x3ff2df96UL, 0xfbbce198UL, 0x3c9d16cfUL, 0xa93e2f56UL,\n-    0x3ff2ecafUL, 0x45d52383UL, 0x3c71ca0fUL, 0x4abd886bUL, 0x3ff2f9d2UL,\n-    0x532bda93UL, 0xbc653c55UL, 0x0a31b715UL, 0x3ff306feUL, 0xd23182e4UL,\n-    0x3c86f46aUL, 0xedeeb2fdUL, 0x3ff31432UL, 0xf3f3fcd1UL, 0x3c8959a3UL,\n-    0xfc4cd831UL, 0x3ff32170UL, 0x8e18047cUL, 0x3c8a9ce7UL, 0x3ba8ea32UL,\n-    0x3ff32eb8UL, 0x3cb4f318UL, 0xbc9c45e8UL, 0xb26416ffUL, 0x3ff33c08UL,\n-    0x843659a6UL, 0x3c932721UL, 0x66e3fa2dUL, 0x3ff34962UL, 0x930881a4UL,\n-    0xbc835a75UL, 0x5f929ff1UL, 0x3ff356c5UL, 0x5c4e4628UL, 0xbc8b5ceeUL,\n-    0xa2de883bUL, 0x3ff36431UL, 0xa06cb85eUL, 0xbc8c3144UL, 0x373aa9cbUL,\n-    0x3ff371a7UL, 0xbf42eae2UL, 0xbc963aeaUL, 0x231e754aUL, 0x3ff37f26UL,\n-    0x9eceb23cUL, 0xbc99f5caUL, 0x6d05d866UL, 0x3ff38caeUL, 0x3c9904bdUL,\n-    0xbc9e958dUL, 0x1b7140efUL, 0x3ff39a40UL, 0xfc8e2934UL, 0xbc99a9a5UL,\n-    0x34e59ff7UL, 0x3ff3a7dbUL, 0xd661f5e3UL, 0xbc75e436UL, 0xbfec6cf4UL,\n-    0x3ff3b57fUL, 0xe26fff18UL, 0x3c954c66UL, 0xc313a8e5UL, 0x3ff3c32dUL,\n-    0x375d29c3UL, 0xbc9efff8UL, 0x44ede173UL, 0x3ff3d0e5UL, 0x8c284c71UL,\n-    0x3c7fe8d0UL, 0x4c123422UL, 0x3ff3dea6UL, 0x11f09ebcUL, 0x3c8ada09UL,\n-    0xdf1c5175UL, 0x3ff3ec70UL, 0x7b8c9bcaUL, 0xbc8af663UL, 0x04ac801cUL,\n-    0x3ff3fa45UL, 0xf956f9f3UL, 0xbc97d023UL, 0xc367a024UL, 0x3ff40822UL,\n-    0xb6f4d048UL, 0x3c8bddf8UL, 0x21f72e2aUL, 0x3ff4160aUL, 0x1c309278UL,\n-    0xbc5ef369UL, 0x2709468aUL, 0x3ff423fbUL, 0xc0b314ddUL, 0xbc98462dUL,\n-    0xd950a897UL, 0x3ff431f5UL, 0xe35f7999UL, 0xbc81c7ddUL, 0x3f84b9d4UL,\n-    0x3ff43ffaUL, 0x9704c003UL, 0x3c8880beUL, 0x6061892dUL, 0x3ff44e08UL,\n-    0x04ef80d0UL, 0x3c489b7aUL, 0x42a7d232UL, 0x3ff45c20UL, 0x82fb1f8eUL,\n-    0xbc686419UL, 0xed1d0057UL, 0x3ff46a41UL, 0xd1648a76UL, 0x3c9c944bUL,\n-    0x668b3237UL, 0x3ff4786dUL, 0xed445733UL, 0xbc9c20f0UL, 0xb5c13cd0UL,\n-    0x3ff486a2UL, 0xb69062f0UL, 0x3c73c1a3UL, 0xe192aed2UL, 0x3ff494e1UL,\n-    0x5e499ea0UL, 0xbc83b289UL, 0xf0d7d3deUL, 0x3ff4a32aUL, 0xf3d1be56UL,\n-    0x3c99cb62UL, 0xea6db7d7UL, 0x3ff4b17dUL, 0x7f2897f0UL, 0xbc8125b8UL,\n-    0xd5362a27UL, 0x3ff4bfdaUL, 0xafec42e2UL, 0x3c7d4397UL, 0xb817c114UL,\n-    0x3ff4ce41UL, 0x690abd5dUL, 0x3c905e29UL, 0x99fddd0dUL, 0x3ff4dcb2UL,\n-    0xbc6a7833UL, 0x3c98ecdbUL, 0x81d8abffUL, 0x3ff4eb2dUL, 0x2e5d7a52UL,\n-    0xbc95257dUL, 0x769d2ca7UL, 0x3ff4f9b2UL, 0xd25957e3UL, 0xbc94b309UL,\n-    0x7f4531eeUL, 0x3ff50841UL, 0x49b7465fUL, 0x3c7a249bUL, 0xa2cf6642UL,\n-    0x3ff516daUL, 0x69bd93efUL, 0xbc8f7685UL, 0xe83f4eefUL, 0x3ff5257dUL,\n-    0x43efef71UL, 0xbc7c998dUL, 0x569d4f82UL, 0x3ff5342bUL, 0x1db13cadUL,\n-    0xbc807abeUL, 0xf4f6ad27UL, 0x3ff542e2UL, 0x192d5f7eUL, 0x3c87926dUL,\n-    0xca5d920fUL, 0x3ff551a4UL, 0xefede59bUL, 0xbc8d689cUL, 0xdde910d2UL,\n-    0x3ff56070UL, 0x168eebf0UL, 0xbc90fb6eUL, 0x36b527daUL, 0x3ff56f47UL,\n-    0x011d93adUL, 0x3c99bb2cUL, 0xdbe2c4cfUL, 0x3ff57e27UL, 0x8a57b9c4UL,\n-    0xbc90b98cUL, 0xd497c7fdUL, 0x3ff58d12UL, 0x5b9a1de8UL, 0x3c8295e1UL,\n-    0x27ff07ccUL, 0x3ff59c08UL, 0xe467e60fUL, 0xbc97e2ceUL, 0xdd485429UL,\n-    0x3ff5ab07UL, 0x054647adUL, 0x3c96324cUL, 0xfba87a03UL, 0x3ff5ba11UL,\n-    0x4c233e1aUL, 0xbc9b77a1UL, 0x8a5946b7UL, 0x3ff5c926UL, 0x816986a2UL,\n-    0x3c3c4b1bUL, 0x90998b93UL, 0x3ff5d845UL, 0xa8b45643UL, 0xbc9cd6a7UL,\n-    0x15ad2148UL, 0x3ff5e76fUL, 0x3080e65eUL, 0x3c9ba6f9UL, 0x20dceb71UL,\n-    0x3ff5f6a3UL, 0xe3cdcf92UL, 0xbc89eaddUL, 0xb976dc09UL, 0x3ff605e1UL,\n-    0x9b56de47UL, 0xbc93e242UL, 0xe6cdf6f4UL, 0x3ff6152aUL, 0x4ab84c27UL,\n-    0x3c9e4b3eUL, 0xb03a5585UL, 0x3ff6247eUL, 0x7e40b497UL, 0xbc9383c1UL,\n-    0x1d1929fdUL, 0x3ff633ddUL, 0xbeb964e5UL, 0x3c984710UL, 0x34ccc320UL,\n-    0x3ff64346UL, 0x759d8933UL, 0xbc8c483cUL, 0xfebc8fb7UL, 0x3ff652b9UL,\n-    0xc9a73e09UL, 0xbc9ae3d5UL, 0x82552225UL, 0x3ff66238UL, 0x87591c34UL,\n-    0xbc9bb609UL, 0xc70833f6UL, 0x3ff671c1UL, 0x586c6134UL, 0xbc8e8732UL,\n-    0xd44ca973UL, 0x3ff68155UL, 0x44f73e65UL, 0x3c6038aeUL, 0xb19e9538UL,\n-    0x3ff690f4UL, 0x9aeb445dUL, 0x3c8804bdUL, 0x667f3bcdUL, 0x3ff6a09eUL,\n-    0x13b26456UL, 0xbc9bdd34UL, 0xfa75173eUL, 0x3ff6b052UL, 0x2c9a9d0eUL,\n-    0x3c7a38f5UL, 0x750bdabfUL, 0x3ff6c012UL, 0x67ff0b0dUL, 0xbc728956UL,\n-    0xddd47645UL, 0x3ff6cfdcUL, 0xb6f17309UL, 0x3c9c7aa9UL, 0x3c651a2fUL,\n-    0x3ff6dfb2UL, 0x683c88abUL, 0xbc6bbe3aUL, 0x98593ae5UL, 0x3ff6ef92UL,\n-    0x9e1ac8b2UL, 0xbc90b974UL, 0xf9519484UL, 0x3ff6ff7dUL, 0x25860ef6UL,\n-    0xbc883c0fUL, 0x66f42e87UL, 0x3ff70f74UL, 0xd45aa65fUL, 0x3c59d644UL,\n-    0xe8ec5f74UL, 0x3ff71f75UL, 0x86887a99UL, 0xbc816e47UL, 0x86ead08aUL,\n-    0x3ff72f82UL, 0x2cd62c72UL, 0xbc920aa0UL, 0x48a58174UL, 0x3ff73f9aUL,\n-    0x6c65d53cUL, 0xbc90a8d9UL, 0x35d7cbfdUL, 0x3ff74fbdUL, 0x618a6e1cUL,\n-    0x3c9047fdUL, 0x564267c9UL, 0x3ff75febUL, 0x57316dd3UL, 0xbc902459UL,\n-    0xb1ab6e09UL, 0x3ff77024UL, 0x169147f8UL, 0x3c9b7877UL, 0x4fde5d3fUL,\n-    0x3ff78069UL, 0x0a02162dUL, 0x3c9866b8UL, 0x38ac1cf6UL, 0x3ff790b9UL,\n-    0x62aadd3eUL, 0x3c9349a8UL, 0x73eb0187UL, 0x3ff7a114UL, 0xee04992fUL,\n-    0xbc841577UL, 0x0976cfdbUL, 0x3ff7b17bUL, 0x8468dc88UL, 0xbc9bebb5UL,\n-    0x0130c132UL, 0x3ff7c1edUL, 0xd1164dd6UL, 0x3c9f124cUL, 0x62ff86f0UL,\n-    0x3ff7d26aUL, 0xfb72b8b4UL, 0x3c91bddbUL, 0x36cf4e62UL, 0x3ff7e2f3UL,\n-    0xba15797eUL, 0x3c705d02UL, 0x8491c491UL, 0x3ff7f387UL, 0xcf9311aeUL,\n-    0xbc807f11UL, 0x543e1a12UL, 0x3ff80427UL, 0x626d972bUL, 0xbc927c86UL,\n-    0xadd106d9UL, 0x3ff814d2UL, 0x0d151d4dUL, 0x3c946437UL, 0x994cce13UL,\n-    0x3ff82589UL, 0xd41532d8UL, 0xbc9d4c1dUL, 0x1eb941f7UL, 0x3ff8364cUL,\n-    0x31df2bd5UL, 0x3c999b9aUL, 0x4623c7adUL, 0x3ff8471aUL, 0xa341cdfbUL,\n-    0xbc88d684UL, 0x179f5b21UL, 0x3ff857f4UL, 0xf8b216d0UL, 0xbc5ba748UL,\n-    0x9b4492edUL, 0x3ff868d9UL, 0x9bd4f6baUL, 0xbc9fc6f8UL, 0xd931a436UL,\n-    0x3ff879caUL, 0xd2db47bdUL, 0x3c85d2d7UL, 0xd98a6699UL, 0x3ff88ac7UL,\n-    0xf37cb53aUL, 0x3c9994c2UL, 0xa478580fUL, 0x3ff89bd0UL, 0x4475202aUL,\n-    0x3c9d5395UL, 0x422aa0dbUL, 0x3ff8ace5UL, 0x56864b27UL, 0x3c96e9f1UL,\n-    0xbad61778UL, 0x3ff8be05UL, 0xfc43446eUL, 0x3c9ecb5eUL, 0x16b5448cUL,\n-    0x3ff8cf32UL, 0x32e9e3aaUL, 0xbc70d55eUL, 0x5e0866d9UL, 0x3ff8e06aUL,\n-    0x6fc9b2e6UL, 0xbc97114aUL, 0x99157736UL, 0x3ff8f1aeUL, 0xa2e3976cUL,\n-    0x3c85cc13UL, 0xd0282c8aUL, 0x3ff902feUL, 0x85fe3fd2UL, 0x3c9592caUL,\n-    0x0b91ffc6UL, 0x3ff9145bUL, 0x2e582524UL, 0xbc9dd679UL, 0x53aa2fe2UL,\n-    0x3ff925c3UL, 0xa639db7fUL, 0xbc83455fUL, 0xb0cdc5e5UL, 0x3ff93737UL,\n-    0x81b57ebcUL, 0xbc675fc7UL, 0x2b5f98e5UL, 0x3ff948b8UL, 0x797d2d99UL,\n-    0xbc8dc3d6UL, 0xcbc8520fUL, 0x3ff95a44UL, 0x96a5f039UL, 0xbc764b7cUL,\n-    0x9a7670b3UL, 0x3ff96bddUL, 0x7f19c896UL, 0xbc5ba596UL, 0x9fde4e50UL,\n-    0x3ff97d82UL, 0x7c1b85d1UL, 0xbc9d185bUL, 0xe47a22a2UL, 0x3ff98f33UL,\n-    0xa24c78ecUL, 0x3c7cabdaUL, 0x70ca07baUL, 0x3ff9a0f1UL, 0x91cee632UL,\n-    0xbc9173bdUL, 0x4d53fe0dUL, 0x3ff9b2bbUL, 0x4df6d518UL, 0xbc9dd84eUL,\n-    0x82a3f090UL, 0x3ff9c491UL, 0xb071f2beUL, 0x3c7c7c46UL, 0x194bb8d5UL,\n-    0x3ff9d674UL, 0xa3dd8233UL, 0xbc9516beUL, 0x19e32323UL, 0x3ff9e863UL,\n-    0x78e64c6eUL, 0x3c7824caUL, 0x8d07f29eUL, 0x3ff9fa5eUL, 0xaaf1faceUL,\n-    0xbc84a9ceUL, 0x7b5de565UL, 0x3ffa0c66UL, 0x5d1cd533UL, 0xbc935949UL,\n-    0xed8eb8bbUL, 0x3ffa1e7aUL, 0xee8be70eUL, 0x3c9c6618UL, 0xec4a2d33UL,\n-    0x3ffa309bUL, 0x7ddc36abUL, 0x3c96305cUL, 0x80460ad8UL, 0x3ffa42c9UL,\n-    0x589fb120UL, 0xbc9aa780UL, 0xb23e255dUL, 0x3ffa5503UL, 0xdb8d41e1UL,\n-    0xbc9d2f6eUL, 0x8af46052UL, 0x3ffa674aUL, 0x30670366UL, 0x3c650f56UL,\n-    0x1330b358UL, 0x3ffa799eUL, 0xcac563c7UL, 0x3c9bcb7eUL, 0x53c12e59UL,\n-    0x3ffa8bfeUL, 0xb2ba15a9UL, 0xbc94f867UL, 0x5579fdbfUL, 0x3ffa9e6bUL,\n-    0x0ef7fd31UL, 0x3c90fac9UL, 0x21356ebaUL, 0x3ffab0e5UL, 0xdae94545UL,\n-    0x3c889c31UL, 0xbfd3f37aUL, 0x3ffac36bUL, 0xcae76cd0UL, 0xbc8f9234UL,\n-    0x3a3c2774UL, 0x3ffad5ffUL, 0xb6b1b8e5UL, 0x3c97ef3bUL, 0x995ad3adUL,\n-    0x3ffae89fUL, 0x345dcc81UL, 0x3c97a1cdUL, 0xe622f2ffUL, 0x3ffafb4cUL,\n-    0x0f315ecdUL, 0xbc94b2fcUL, 0x298db666UL, 0x3ffb0e07UL, 0x4c80e425UL,\n-    0xbc9bdef5UL, 0x6c9a8952UL, 0x3ffb20ceUL, 0x4a0756ccUL, 0x3c94dd02UL,\n-    0xb84f15fbUL, 0x3ffb33a2UL, 0x3084d708UL, 0xbc62805eUL, 0x15b749b1UL,\n-    0x3ffb4684UL, 0xe9df7c90UL, 0xbc7f763dUL, 0x8de5593aUL, 0x3ffb5972UL,\n-    0xbbba6de3UL, 0xbc9c71dfUL, 0x29f1c52aUL, 0x3ffb6c6eUL, 0x52883f6eUL,\n-    0x3c92a8f3UL, 0xf2fb5e47UL, 0x3ffb7f76UL, 0x7e54ac3bUL, 0xbc75584fUL,\n-    0xf22749e4UL, 0x3ffb928cUL, 0x54cb65c6UL, 0xbc9b7216UL, 0x30a1064aUL,\n-    0x3ffba5b0UL, 0x0e54292eUL, 0xbc9efcd3UL, 0xb79a6f1fUL, 0x3ffbb8e0UL,\n-    0xc9696205UL, 0xbc3f52d1UL, 0x904bc1d2UL, 0x3ffbcc1eUL, 0x7a2d9e84UL,\n-    0x3c823dd0UL, 0xc3f3a207UL, 0x3ffbdf69UL, 0x60ea5b53UL, 0xbc3c2623UL,\n-    0x5bd71e09UL, 0x3ffbf2c2UL, 0x3f6b9c73UL, 0xbc9efdcaUL, 0x6141b33dUL,\n-    0x3ffc0628UL, 0xa1fbca34UL, 0xbc8d8a5aUL, 0xdd85529cUL, 0x3ffc199bUL,\n-    0x895048ddUL, 0x3c811065UL, 0xd9fa652cUL, 0x3ffc2d1cUL, 0x17c8a5d7UL,\n-    0xbc96e516UL, 0x5fffd07aUL, 0x3ffc40abUL, 0xe083c60aUL, 0x3c9b4537UL,\n-    0x78fafb22UL, 0x3ffc5447UL, 0x2493b5afUL, 0x3c912f07UL, 0x2e57d14bUL,\n-    0x3ffc67f1UL, 0xff483cadUL, 0x3c92884dUL, 0x8988c933UL, 0x3ffc7ba8UL,\n-    0xbe255559UL, 0xbc8e76bbUL, 0x9406e7b5UL, 0x3ffc8f6dUL, 0x48805c44UL,\n-    0x3c71acbcUL, 0x5751c4dbUL, 0x3ffca340UL, 0xd10d08f5UL, 0xbc87f2beUL,\n-    0xdcef9069UL, 0x3ffcb720UL, 0xd1e949dbUL, 0x3c7503cbUL, 0x2e6d1675UL,\n-    0x3ffccb0fUL, 0x86009092UL, 0xbc7d220fUL, 0x555dc3faUL, 0x3ffcdf0bUL,\n-    0x53829d72UL, 0xbc8dd83bUL, 0x5b5bab74UL, 0x3ffcf315UL, 0xb86dff57UL,\n-    0xbc9a08e9UL, 0x4a07897cUL, 0x3ffd072dUL, 0x43797a9cUL, 0xbc9cbc37UL,\n-    0x2b08c968UL, 0x3ffd1b53UL, 0x219a36eeUL, 0x3c955636UL, 0x080d89f2UL,\n-    0x3ffd2f87UL, 0x719d8578UL, 0xbc9d487bUL, 0xeacaa1d6UL, 0x3ffd43c8UL,\n-    0xbf5a1614UL, 0x3c93db53UL, 0xdcfba487UL, 0x3ffd5818UL, 0xd75b3707UL,\n-    0x3c82ed02UL, 0xe862e6d3UL, 0x3ffd6c76UL, 0x4a8165a0UL, 0x3c5fe87aUL,\n-    0x16c98398UL, 0x3ffd80e3UL, 0x8beddfe8UL, 0xbc911ec1UL, 0x71ff6075UL,\n-    0x3ffd955dUL, 0xbb9af6beUL, 0x3c9a052dUL, 0x03db3285UL, 0x3ffda9e6UL,\n-    0x696db532UL, 0x3c9c2300UL, 0xd63a8315UL, 0x3ffdbe7cUL, 0x926b8be4UL,\n-    0xbc9b76f1UL, 0xf301b460UL, 0x3ffdd321UL, 0x78f018c3UL, 0x3c92da57UL,\n-    0x641c0658UL, 0x3ffde7d5UL, 0x8e79ba8fUL, 0xbc9ca552UL, 0x337b9b5fUL,\n-    0x3ffdfc97UL, 0x4f184b5cUL, 0xbc91a5cdUL, 0x6b197d17UL, 0x3ffe1167UL,\n-    0xbd5c7f44UL, 0xbc72b529UL, 0x14f5a129UL, 0x3ffe2646UL, 0x817a1496UL,\n-    0xbc97b627UL, 0x3b16ee12UL, 0x3ffe3b33UL, 0x31fdc68bUL, 0xbc99f4a4UL,\n-    0xe78b3ff6UL, 0x3ffe502eUL, 0x80a9cc8fUL, 0x3c839e89UL, 0x24676d76UL,\n-    0x3ffe6539UL, 0x7522b735UL, 0xbc863ff8UL, 0xfbc74c83UL, 0x3ffe7a51UL,\n-    0xca0c8de2UL, 0x3c92d522UL, 0x77cdb740UL, 0x3ffe8f79UL, 0x80b054b1UL,\n-    0xbc910894UL, 0xa2a490daUL, 0x3ffea4afUL, 0x179c2893UL, 0xbc9e9c23UL,\n-    0x867cca6eUL, 0x3ffeb9f4UL, 0x2293e4f2UL, 0x3c94832fUL, 0x2d8e67f1UL,\n-    0x3ffecf48UL, 0xb411ad8cUL, 0xbc9c93f3UL, 0xa2188510UL, 0x3ffee4aaUL,\n-    0xa487568dUL, 0x3c91c68dUL, 0xee615a27UL, 0x3ffefa1bUL, 0x86a4b6b0UL,\n-    0x3c9dc7f4UL, 0x1cb6412aUL, 0x3fff0f9cUL, 0x65181d45UL, 0xbc932200UL,\n-    0x376bba97UL, 0x3fff252bUL, 0xbf0d8e43UL, 0x3c93a1a5UL, 0x48dd7274UL,\n-    0x3fff3ac9UL, 0x3ed837deUL, 0xbc795a5aUL, 0x5b6e4540UL, 0x3fff5076UL,\n-    0x2dd8a18bUL, 0x3c99d3e1UL, 0x798844f8UL, 0x3fff6632UL, 0x3539343eUL,\n-    0x3c9fa37bUL, 0xad9cbe14UL, 0x3fff7bfdUL, 0xd006350aUL, 0xbc9dbb12UL,\n-    0x02243c89UL, 0x3fff91d8UL, 0xa779f689UL, 0xbc612ea8UL, 0x819e90d8UL,\n-    0x3fffa7c1UL, 0xf3a5931eUL, 0x3c874853UL, 0x3692d514UL, 0x3fffbdbaUL,\n-    0x15098eb6UL, 0xbc796773UL, 0x2b8f71f1UL, 0x3fffd3c2UL, 0x966579e7UL,\n-    0x3c62eb74UL, 0x6b2a23d9UL, 0x3fffe9d9UL, 0x7442fde3UL, 0x3c74a603UL,\n-    0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL, 0x6fba4e77UL,\n-    0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL, 0xfefa39efUL, 0x3fe62e42UL,\n-    0x00000000UL, 0x00000000UL, 0xfefa39efUL, 0x3fe62e42UL, 0xfefa39efUL,\n-    0xbfe62e42UL, 0xf8000000UL, 0xffffffffUL, 0xf8000000UL, 0xffffffffUL,\n-    0x00000000UL, 0x80000000UL, 0x00000000UL, 0x00000000UL\n-\n-};\n-\n-ATTRIBUTE_ALIGNED(8) double _DOUBLE2 = 2.0;\n-ATTRIBUTE_ALIGNED(8) double _DOUBLE0 = 0.0;\n-ATTRIBUTE_ALIGNED(8) double _DOUBLE0DOT5 = 0.5;\n-\n-\/\/registers,\n-\/\/ input: xmm0, xmm1\n-\/\/ scratch: xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7\n-\/\/          eax, edx, ecx, ebx\n-\n-\/\/ Code generated by Intel C compiler for LIBM library\n-\n-void MacroAssembler::fast_pow(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3, XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7, Register eax, Register ecx, Register edx, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n-  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n-  Label L_2TAG_PACKET_12_0_2, L_2TAG_PACKET_13_0_2, L_2TAG_PACKET_14_0_2, L_2TAG_PACKET_15_0_2;\n-  Label L_2TAG_PACKET_16_0_2, L_2TAG_PACKET_17_0_2, L_2TAG_PACKET_18_0_2, L_2TAG_PACKET_19_0_2;\n-  Label L_2TAG_PACKET_20_0_2, L_2TAG_PACKET_21_0_2, L_2TAG_PACKET_22_0_2, L_2TAG_PACKET_23_0_2;\n-  Label L_2TAG_PACKET_24_0_2, L_2TAG_PACKET_25_0_2, L_2TAG_PACKET_26_0_2, L_2TAG_PACKET_27_0_2;\n-  Label L_2TAG_PACKET_28_0_2, L_2TAG_PACKET_29_0_2, L_2TAG_PACKET_30_0_2, L_2TAG_PACKET_31_0_2;\n-  Label L_2TAG_PACKET_32_0_2, L_2TAG_PACKET_33_0_2, L_2TAG_PACKET_34_0_2, L_2TAG_PACKET_35_0_2;\n-  Label L_2TAG_PACKET_36_0_2, L_2TAG_PACKET_37_0_2, L_2TAG_PACKET_38_0_2, L_2TAG_PACKET_39_0_2;\n-  Label L_2TAG_PACKET_40_0_2, L_2TAG_PACKET_41_0_2, L_2TAG_PACKET_42_0_2, L_2TAG_PACKET_43_0_2;\n-  Label L_2TAG_PACKET_44_0_2, L_2TAG_PACKET_45_0_2, L_2TAG_PACKET_46_0_2, L_2TAG_PACKET_47_0_2;\n-  Label L_2TAG_PACKET_48_0_2, L_2TAG_PACKET_49_0_2, L_2TAG_PACKET_50_0_2, L_2TAG_PACKET_51_0_2;\n-  Label L_2TAG_PACKET_52_0_2, L_2TAG_PACKET_53_0_2, L_2TAG_PACKET_54_0_2, L_2TAG_PACKET_55_0_2;\n-  Label L_2TAG_PACKET_56_0_2, L_2TAG_PACKET_57_0_2, L_2TAG_PACKET_58_0_2, start;\n-  Label L_NOT_DOUBLE2, L_NOT_DOUBLE0DOT5;\n-\n-  assert_different_registers(tmp, eax, ecx, edx);\n-\n-  address static_const_table_pow = (address)_static_const_table_pow;\n-  address DOUBLE2 = (address) &_DOUBLE2;\n-  address DOUBLE0 = (address) &_DOUBLE0;\n-  address DOUBLE0DOT5 = (address) &_DOUBLE0DOT5;\n-\n-  subl(rsp, 120);\n-  movl(Address(rsp, 64), tmp);\n-  lea(tmp, ExternalAddress(static_const_table_pow));\n-  movsd(xmm0, Address(rsp, 128));\n-  movsd(xmm1, Address(rsp, 136));\n-\n-  \/\/ Special case: pow(x, 2.0) => x * x\n-  ucomisd(xmm1, ExternalAddress(DOUBLE2));\n-  jccb(Assembler::notEqual, L_NOT_DOUBLE2);\n-  jccb(Assembler::parity, L_NOT_DOUBLE2);\n-  mulsd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_NOT_DOUBLE2);\n-  \/\/ Special case: pow(x, 0.5) => sqrt(x)\n-  ucomisd(xmm1, ExternalAddress(DOUBLE0DOT5)); \/\/ For pow(x, y), check whether y == 0.5\n-  jccb(Assembler::notEqual, L_NOT_DOUBLE0DOT5);\n-  jccb(Assembler::parity, L_NOT_DOUBLE0DOT5);\n-  ucomisd(xmm0, ExternalAddress(DOUBLE0));\n-  \/\/ According to the API specs, pow(-0.0, 0.5) = 0.0 and sqrt(-0.0) = -0.0.\n-  \/\/ So pow(-0.0, 0.5) shouldn't be replaced with sqrt(-0.0).\n-  \/\/ -0.0\/+0.0 are both excluded since floating-point comparison doesn't distinguish -0.0 from +0.0.\n-  jccb(Assembler::belowEqual, L_NOT_DOUBLE0DOT5); \/\/ pow(x, 0.5) => sqrt(x) only for x > 0.0\n-  sqrtsd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_NOT_DOUBLE0DOT5);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movl(ecx, 1069088768);\n-  movdl(xmm7, ecx);\n-  movsd(Address(rsp, 16), xmm1);\n-  xorpd(xmm1, xmm1);\n-  movl(edx, 30704);\n-  pinsrw(xmm1, edx, 3);\n-  movsd(Address(rsp, 8), xmm0);\n-  movdqu(xmm3, xmm0);\n-  movl(edx, 8192);\n-  movdl(xmm4, edx);\n-  movdqu(xmm6, Address(tmp, 8240));\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  psllq(xmm0, 5);\n-  movsd(xmm2, Address(tmp, 8256));\n-  psrlq(xmm0, 34);\n-  movl(edx, eax);\n-  andl(edx, 32752);\n-  subl(edx, 16368);\n-  movl(ecx, edx);\n-  sarl(edx, 31);\n-  addl(ecx, edx);\n-  xorl(ecx, edx);\n-  rcpss(xmm0, xmm0);\n-  psllq(xmm3, 12);\n-  addl(ecx, 16);\n-  bsrl(ecx, ecx);\n-  psrlq(xmm3, 12);\n-  movl(Address(rsp, 24), rsi);\n-  subl(eax, 16);\n-  cmpl(eax, 32736);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n-  movl(rsi, 0);\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  mulss(xmm0, xmm7);\n-  movl(edx, -1);\n-  subl(ecx, 4);\n-  shll(edx);\n-  movdl(xmm5, edx);\n-  por(xmm3, xmm1);\n-  subl(eax, 16351);\n-  cmpl(eax, 1);\n-  jcc(Assembler::belowEqual, L_2TAG_PACKET_2_0_2);\n-  paddd(xmm0, xmm4);\n-  psllq(xmm5, 32);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  pand(xmm5, xmm3);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  pand(xmm0, xmm6);\n-  subsd(xmm3, xmm5);\n-  subl(eax, 1);\n-  sarl(eax, 4);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  mulsd(xmm3, xmm0);\n-  movdqu(xmm1, Address(tmp, 8272));\n-  subsd(xmm5, xmm2);\n-  movdqu(xmm4, Address(tmp, 8288));\n-  movl(ecx, eax);\n-  sarl(eax, 31);\n-  addl(ecx, eax);\n-  xorl(eax, ecx);\n-  addl(eax, 1);\n-  bsrl(eax, eax);\n-  unpcklpd(xmm5, xmm3);\n-  movdqu(xmm6, Address(tmp, 8304));\n-  addsd(xmm3, xmm5);\n-  andl(edx, 16760832);\n-  shrl(edx, 10);\n-  addpd(xmm5, Address(tmp, edx, Address::times_1, -3616));\n-  movdqu(xmm0, Address(tmp, 8320));\n-  pshufd(xmm2, xmm3, 68);\n-  mulsd(xmm3, xmm3);\n-  mulpd(xmm1, xmm2);\n-  mulpd(xmm4, xmm2);\n-  addsd(xmm5, xmm7);\n-  mulsd(xmm2, xmm3);\n-  addpd(xmm6, xmm1);\n-  mulsd(xmm3, xmm3);\n-  addpd(xmm0, xmm4);\n-  movsd(xmm1, Address(rsp, 16));\n-  movzwl(ecx, Address(rsp, 22));\n-  pshufd(xmm7, xmm5, 238);\n-  movsd(xmm4, Address(tmp, 8368));\n-  mulpd(xmm6, xmm2);\n-  pshufd(xmm3, xmm3, 68);\n-  mulpd(xmm0, xmm2);\n-  shll(eax, 4);\n-  subl(eax, 15872);\n-  andl(ecx, 32752);\n-  addl(eax, ecx);\n-  mulpd(xmm3, xmm6);\n-  cmpl(eax, 624);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n-  xorpd(xmm6, xmm6);\n-  movl(edx, 17080);\n-  pinsrw(xmm6, edx, 3);\n-  movdqu(xmm2, xmm1);\n-  pand(xmm4, xmm1);\n-  subsd(xmm1, xmm4);\n-  mulsd(xmm4, xmm5);\n-  addsd(xmm0, xmm7);\n-  mulsd(xmm1, xmm5);\n-  movdqu(xmm7, xmm6);\n-  addsd(xmm6, xmm4);\n-  addpd(xmm3, xmm0);\n-  movdl(edx, xmm6);\n-  subsd(xmm6, xmm7);\n-  pshufd(xmm0, xmm3, 238);\n-  subsd(xmm4, xmm6);\n-  addsd(xmm0, xmm3);\n-  movl(ecx, edx);\n-  andl(edx, 255);\n-  addl(edx, edx);\n-  movdqu(xmm5, Address(tmp, edx, Address::times_8, 8384));\n-  addsd(xmm4, xmm1);\n-  mulsd(xmm2, xmm0);\n-  movdqu(xmm7, Address(tmp, 12480));\n-  movdqu(xmm3, Address(tmp, 12496));\n-  shll(ecx, 12);\n-  xorl(ecx, rsi);\n-  andl(ecx, -1048576);\n-  movdl(xmm6, ecx);\n-  addsd(xmm2, xmm4);\n-  movsd(xmm1, Address(tmp, 12512));\n-  pshufd(xmm0, xmm2, 68);\n-  pshufd(xmm4, xmm2, 68);\n-  mulpd(xmm0, xmm0);\n-  movl(rsi, Address(rsp, 24));\n-  mulpd(xmm7, xmm4);\n-  pshufd(xmm6, xmm6, 17);\n-  mulsd(xmm1, xmm2);\n-  mulsd(xmm0, xmm0);\n-  paddd(xmm5, xmm6);\n-  addpd(xmm3, xmm7);\n-  mulsd(xmm1, xmm5);\n-  pshufd(xmm6, xmm5, 238);\n-  mulpd(xmm0, xmm3);\n-  addsd(xmm1, xmm6);\n-  pshufd(xmm3, xmm0, 238);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm3, xmm5);\n-  addsd(xmm0, xmm1);\n-  addsd(xmm0, xmm3);\n-  addsd(xmm0, xmm5);\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_7_0_2);\n-  movsd(xmm0, Address(rsp, 128));\n-  movsd(xmm1, Address(rsp, 136));\n-  mulsd(xmm0, xmm1);\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  addl(eax, 16);\n-  movl(edx, 32752);\n-  andl(edx, eax);\n-  cmpl(edx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_8_0_2);\n-  testl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_9_0_2);\n-\n-  bind(L_2TAG_PACKET_10_0_2);\n-  movl(ecx, Address(rsp, 16));\n-  xorl(edx, edx);\n-  testl(ecx, ecx);\n-  movl(ecx, 1);\n-  cmovl(Assembler::notEqual, edx, ecx);\n-  orl(edx, Address(rsp, 20));\n-  cmpl(edx, 1072693248);\n-  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n-  movsd(xmm0, Address(rsp, 8));\n-  movsd(xmm3, Address(rsp, 8));\n-  movdl(edx, xmm3);\n-  psrlq(xmm3, 32);\n-  movdl(ecx, xmm3);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_11_0_2);\n-  xorpd(xmm3, xmm3);\n-  movl(eax, 18416);\n-  pinsrw(xmm3, eax, 3);\n-  mulsd(xmm0, xmm3);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm3, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 18416);\n-  psllq(xmm0, 5);\n-  movsd(xmm2, Address(tmp, 8256));\n-  psrlq(xmm0, 34);\n-  rcpss(xmm0, xmm0);\n-  psllq(xmm3, 12);\n-  movdqu(xmm6, Address(tmp, 8240));\n-  psrlq(xmm3, 12);\n-  mulss(xmm0, xmm7);\n-  movl(edx, -1024);\n-  movdl(xmm5, edx);\n-  por(xmm3, xmm1);\n-  paddd(xmm0, xmm4);\n-  psllq(xmm5, 32);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  pand(xmm5, xmm3);\n-  movl(rsi, 0);\n-  pand(xmm0, xmm6);\n-  subsd(xmm3, xmm5);\n-  andl(eax, 32752);\n-  subl(eax, 18416);\n-  sarl(eax, 4);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  jmp(L_2TAG_PACKET_4_0_2);\n-\n-  bind(L_2TAG_PACKET_12_0_2);\n-  movl(ecx, Address(rsp, 16));\n-  xorl(edx, edx);\n-  testl(ecx, ecx);\n-  movl(ecx, 1);\n-  cmovl(Assembler::notEqual, edx, ecx);\n-  orl(edx, Address(rsp, 20));\n-  cmpl(edx, 1072693248);\n-  jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n-  movsd(xmm0, Address(rsp, 8));\n-  movsd(xmm3, Address(rsp, 8));\n-  movdl(edx, xmm3);\n-  psrlq(xmm3, 32);\n-  movdl(ecx, xmm3);\n-  orl(edx, ecx);\n-  cmpl(edx, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_11_0_2);\n-  xorpd(xmm3, xmm3);\n-  movl(eax, 18416);\n-  pinsrw(xmm3, eax, 3);\n-  mulsd(xmm0, xmm3);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 16368);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm3, xmm0);\n-  pextrw(eax, xmm0, 3);\n-  por(xmm0, xmm2);\n-  movl(ecx, 18416);\n-  psllq(xmm0, 5);\n-  movsd(xmm2, Address(tmp, 8256));\n-  psrlq(xmm0, 34);\n-  rcpss(xmm0, xmm0);\n-  psllq(xmm3, 12);\n-  movdqu(xmm6, Address(tmp, 8240));\n-  psrlq(xmm3, 12);\n-  mulss(xmm0, xmm7);\n-  movl(edx, -1024);\n-  movdl(xmm5, edx);\n-  por(xmm3, xmm1);\n-  paddd(xmm0, xmm4);\n-  psllq(xmm5, 32);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  pand(xmm5, xmm3);\n-  movl(rsi, INT_MIN);\n-  pand(xmm0, xmm6);\n-  subsd(xmm3, xmm5);\n-  andl(eax, 32752);\n-  subl(eax, 18416);\n-  sarl(eax, 4);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  jmp(L_2TAG_PACKET_4_0_2);\n-\n-  bind(L_2TAG_PACKET_5_0_2);\n-  cmpl(eax, 0);\n-  jcc(Assembler::less, L_2TAG_PACKET_13_0_2);\n-  cmpl(eax, 752);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_14_0_2);\n-\n-  bind(L_2TAG_PACKET_15_0_2);\n-  addsd(xmm0, xmm7);\n-  movsd(xmm2, Address(tmp, 12544));\n-  addpd(xmm3, xmm0);\n-  xorpd(xmm6, xmm6);\n-  movl(eax, 17080);\n-  pinsrw(xmm6, eax, 3);\n-  pshufd(xmm0, xmm3, 238);\n-  addsd(xmm0, xmm3);\n-  movdqu(xmm3, xmm5);\n-  addsd(xmm5, xmm0);\n-  movdqu(xmm4, xmm2);\n-  subsd(xmm3, xmm5);\n-  movdqu(xmm7, xmm5);\n-  pand(xmm5, xmm2);\n-  movdqu(xmm2, xmm1);\n-  pand(xmm4, xmm1);\n-  subsd(xmm7, xmm5);\n-  addsd(xmm0, xmm3);\n-  subsd(xmm1, xmm4);\n-  mulsd(xmm4, xmm5);\n-  addsd(xmm0, xmm7);\n-  mulsd(xmm2, xmm0);\n-  movdqu(xmm7, xmm6);\n-  mulsd(xmm1, xmm5);\n-  addsd(xmm6, xmm4);\n-  movdl(eax, xmm6);\n-  subsd(xmm6, xmm7);\n-  addsd(xmm2, xmm1);\n-  movdqu(xmm7, Address(tmp, 12480));\n-  movdqu(xmm3, Address(tmp, 12496));\n-  subsd(xmm4, xmm6);\n-  pextrw(edx, xmm6, 3);\n-  movl(ecx, eax);\n-  andl(eax, 255);\n-  addl(eax, eax);\n-  movdqu(xmm5, Address(tmp, eax, Address::times_8, 8384));\n-  addsd(xmm2, xmm4);\n-  sarl(ecx, 8);\n-  movl(eax, ecx);\n-  sarl(ecx, 1);\n-  subl(eax, ecx);\n-  shll(ecx, 20);\n-  xorl(ecx, rsi);\n-  movdl(xmm6, ecx);\n-  movsd(xmm1, Address(tmp, 12512));\n-  andl(edx, 32767);\n-  cmpl(edx, 16529);\n-  jcc(Assembler::above, L_2TAG_PACKET_14_0_2);\n-  pshufd(xmm0, xmm2, 68);\n-  pshufd(xmm4, xmm2, 68);\n-  mulpd(xmm0, xmm0);\n-  mulpd(xmm7, xmm4);\n-  pshufd(xmm6, xmm6, 17);\n-  mulsd(xmm1, xmm2);\n-  mulsd(xmm0, xmm0);\n-  paddd(xmm5, xmm6);\n-  addpd(xmm3, xmm7);\n-  mulsd(xmm1, xmm5);\n-  pshufd(xmm6, xmm5, 238);\n-  mulpd(xmm0, xmm3);\n-  addsd(xmm1, xmm6);\n-  pshufd(xmm3, xmm0, 238);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm3, xmm5);\n-  shll(eax, 4);\n-  xorpd(xmm4, xmm4);\n-  addl(eax, 16368);\n-  pinsrw(xmm4, eax, 3);\n-  addsd(xmm0, xmm1);\n-  movl(rsi, Address(rsp, 24));\n-  addsd(xmm0, xmm3);\n-  movdqu(xmm1, xmm0);\n-  addsd(xmm0, xmm5);\n-  mulsd(xmm0, xmm4);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_16_0_2);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_18_0_2);\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_8_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  movsd(xmm0, Address(rsp, 8));\n-  movdqu(xmm2, xmm0);\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 20);\n-  movdl(edx, xmm2);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_19_0_2);\n-  addsd(xmm0, xmm0);\n-  movdl(eax, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(edx, xmm1);\n-  movl(ecx, edx);\n-  addl(edx, edx);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_20_0_2);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_20_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  movl(edx, 29);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_2TAG_PACKET_22_0_2);\n-  movsd(xmm0, Address(rsp, 16));\n-  addpd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_19_0_2);\n-  movdl(eax, xmm1);\n-  movdqu(xmm2, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(edx, xmm1);\n-  movl(ecx, edx);\n-  addl(edx, edx);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_23_0_2);\n-  pextrw(eax, xmm2, 3);\n-  andl(eax, 32752);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_24_0_2);\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 20);\n-  movdl(edx, xmm2);\n-  orl(eax, edx);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n-\n-  bind(L_2TAG_PACKET_24_0_2);\n-  pextrw(eax, xmm0, 3);\n-  testl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_25_0_2);\n-  testl(ecx, INT_MIN);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_26_0_2);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_27_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  movdl(eax, xmm1);\n-  testl(eax, 1);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_28_0_2);\n-  testl(eax, 2);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_29_0_2);\n-  jmp(L_2TAG_PACKET_28_0_2);\n-\n-  bind(L_2TAG_PACKET_25_0_2);\n-  shrl(ecx, 20);\n-  andl(ecx, 2047);\n-  cmpl(ecx, 1075);\n-  jcc(Assembler::above, L_2TAG_PACKET_28_0_2);\n-  jcc(Assembler::equal, L_2TAG_PACKET_30_0_2);\n-  cmpl(ecx, 1074);\n-  jcc(Assembler::above, L_2TAG_PACKET_27_0_2);\n-  cmpl(ecx, 1023);\n-  jcc(Assembler::below, L_2TAG_PACKET_28_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  movl(eax, 17208);\n-  xorpd(xmm3, xmm3);\n-  pinsrw(xmm3, eax, 3);\n-  movdqu(xmm4, xmm3);\n-  addsd(xmm3, xmm1);\n-  subsd(xmm4, xmm3);\n-  addsd(xmm1, xmm4);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_28_0_2);\n-  movdl(eax, xmm3);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_28_0_2);\n-\n-  bind(L_2TAG_PACKET_29_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32768);\n-  jcc(Assembler::equal, L_2TAG_PACKET_18_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32768);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_28_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_26_0_2);\n-\n-  bind(L_2TAG_PACKET_31_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32752);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_30_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  movdl(eax, xmm1);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_28_0_2);\n-  jmp(L_2TAG_PACKET_29_0_2);\n-\n-  bind(L_2TAG_PACKET_32_0_2);\n-  movdl(eax, xmm1);\n-  psrlq(xmm1, 20);\n-  movdl(edx, xmm1);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_33_0_2);\n-  movsd(xmm0, Address(rsp, 16));\n-  addsd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_33_0_2);\n-  movsd(xmm0, Address(rsp, 8));\n-  pextrw(eax, xmm0, 3);\n-  cmpl(eax, 49136);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n-  movdl(ecx, xmm0);\n-  psrlq(xmm0, 20);\n-  movdl(edx, xmm0);\n-  orl(ecx, edx);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32760);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_34_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  andl(eax, 32752);\n-  subl(eax, 16368);\n-  pextrw(edx, xmm1, 3);\n-  xorpd(xmm0, xmm0);\n-  xorl(eax, edx);\n-  andl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n-  movl(ecx, 32752);\n-  pinsrw(xmm0, ecx, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_35_0_2);\n-  movdl(eax, xmm1);\n-  cmpl(edx, 17184);\n-  jcc(Assembler::above, L_2TAG_PACKET_36_0_2);\n-  testl(eax, 1);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_37_0_2);\n-  testl(eax, 2);\n-  jcc(Assembler::equal, L_2TAG_PACKET_38_0_2);\n-  jmp(L_2TAG_PACKET_39_0_2);\n-\n-  bind(L_2TAG_PACKET_36_0_2);\n-  testl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_38_0_2);\n-  jmp(L_2TAG_PACKET_39_0_2);\n-\n-  bind(L_2TAG_PACKET_9_0_2);\n-  movsd(xmm2, Address(rsp, 8));\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 31);\n-  movdl(ecx, xmm2);\n-  orl(eax, ecx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_11_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  pextrw(edx, xmm1, 3);\n-  movdl(eax, xmm1);\n-  movdqu(xmm2, xmm1);\n-  psrlq(xmm2, 32);\n-  movdl(ecx, xmm2);\n-  addl(ecx, ecx);\n-  orl(ecx, eax);\n-  jcc(Assembler::equal, L_2TAG_PACKET_40_0_2);\n-  andl(edx, 32752);\n-  cmpl(edx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_32_0_2);\n-  cmpl(edx, 17200);\n-  jcc(Assembler::above, L_2TAG_PACKET_38_0_2);\n-  cmpl(edx, 17184);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_35_0_2);\n-  cmpl(edx, 16368);\n-  jcc(Assembler::below, L_2TAG_PACKET_37_0_2);\n-  movl(eax, 17208);\n-  xorpd(xmm2, xmm2);\n-  pinsrw(xmm2, eax, 3);\n-  movdqu(xmm4, xmm2);\n-  addsd(xmm2, xmm1);\n-  subsd(xmm4, xmm2);\n-  addsd(xmm1, xmm4);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32767);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_37_0_2);\n-  movdl(eax, xmm2);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_38_0_2);\n-\n-  bind(L_2TAG_PACKET_39_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(edx, 30704);\n-  pinsrw(xmm1, edx, 3);\n-  movsd(xmm2, Address(tmp, 8256));\n-  movsd(xmm4, Address(rsp, 8));\n-  pextrw(eax, xmm4, 3);\n-  movl(edx, 8192);\n-  movdl(xmm4, edx);\n-  andl(eax, 32767);\n-  subl(eax, 16);\n-  jcc(Assembler::less, L_2TAG_PACKET_12_0_2);\n-  movl(edx, eax);\n-  andl(edx, 32752);\n-  subl(edx, 16368);\n-  movl(ecx, edx);\n-  sarl(edx, 31);\n-  addl(ecx, edx);\n-  xorl(ecx, edx);\n-  addl(ecx, 16);\n-  bsrl(ecx, ecx);\n-  movl(rsi, INT_MIN);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_37_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(eax, 32752);\n-  pinsrw(xmm1, eax, 3);\n-  xorpd(xmm0, xmm0);\n-  mulsd(xmm0, xmm1);\n-  movl(edx, 28);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_2TAG_PACKET_38_0_2);\n-  xorpd(xmm1, xmm1);\n-  movl(edx, 30704);\n-  pinsrw(xmm1, edx, 3);\n-  movsd(xmm2, Address(tmp, 8256));\n-  movsd(xmm4, Address(rsp, 8));\n-  pextrw(eax, xmm4, 3);\n-  movl(edx, 8192);\n-  movdl(xmm4, edx);\n-  andl(eax, 32767);\n-  subl(eax, 16);\n-  jcc(Assembler::less, L_2TAG_PACKET_10_0_2);\n-  movl(edx, eax);\n-  andl(edx, 32752);\n-  subl(edx, 16368);\n-  movl(ecx, edx);\n-  sarl(edx, 31);\n-  addl(ecx, edx);\n-  xorl(ecx, edx);\n-  addl(ecx, 16);\n-  bsrl(ecx, ecx);\n-  movl(rsi, 0);\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_23_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_26_0_2);\n-  xorpd(xmm0, xmm0);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_13_0_2);\n-  addl(eax, 384);\n-  cmpl(eax, 0);\n-  jcc(Assembler::less, L_2TAG_PACKET_41_0_2);\n-  mulsd(xmm5, xmm1);\n-  addsd(xmm0, xmm7);\n-  shrl(rsi, 31);\n-  addpd(xmm3, xmm0);\n-  pshufd(xmm0, xmm3, 238);\n-  addsd(xmm3, xmm0);\n-  movsd(xmm4, Address(tmp, rsi, Address::times_8, 12528));\n-  mulsd(xmm1, xmm3);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  shll(rsi, 15);\n-  orl(eax, rsi);\n-  pinsrw(xmm0, eax, 3);\n-  addsd(xmm5, xmm1);\n-  movl(rsi, Address(rsp, 24));\n-  mulsd(xmm5, xmm4);\n-  addsd(xmm0, xmm5);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_41_0_2);\n-  movl(rsi, Address(rsp, 24));\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_40_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_42_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 16368);\n-  pinsrw(xmm0, eax, 3);\n-  movl(edx, 26);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_2TAG_PACKET_11_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  movdqu(xmm2, xmm1);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32752);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_43_0_2);\n-  movdl(eax, xmm2);\n-  psrlq(xmm2, 20);\n-  movdl(edx, xmm2);\n-  orl(eax, edx);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n-\n-  bind(L_2TAG_PACKET_43_0_2);\n-  movdl(eax, xmm1);\n-  psrlq(xmm1, 32);\n-  movdl(edx, xmm1);\n-  movl(ecx, edx);\n-  addl(edx, edx);\n-  orl(eax, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_42_0_2);\n-  shrl(edx, 21);\n-  cmpl(edx, 1075);\n-  jcc(Assembler::above, L_2TAG_PACKET_44_0_2);\n-  jcc(Assembler::equal, L_2TAG_PACKET_45_0_2);\n-  cmpl(edx, 1023);\n-  jcc(Assembler::below, L_2TAG_PACKET_44_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  movl(eax, 17208);\n-  xorpd(xmm3, xmm3);\n-  pinsrw(xmm3, eax, 3);\n-  movdqu(xmm4, xmm3);\n-  addsd(xmm3, xmm1);\n-  subsd(xmm4, xmm3);\n-  addsd(xmm1, xmm4);\n-  pextrw(eax, xmm1, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_44_0_2);\n-  movdl(eax, xmm3);\n-  andl(eax, 1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_44_0_2);\n-\n-  bind(L_2TAG_PACKET_46_0_2);\n-  movsd(xmm0, Address(rsp, 8));\n-  testl(ecx, INT_MIN);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_47_0_2);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_45_0_2);\n-  movsd(xmm1, Address(rsp, 16));\n-  movdl(eax, xmm1);\n-  testl(eax, 1);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_46_0_2);\n-\n-  bind(L_2TAG_PACKET_44_0_2);\n-  testl(ecx, INT_MIN);\n-  jcc(Assembler::equal, L_2TAG_PACKET_26_0_2);\n-  xorpd(xmm0, xmm0);\n-\n-  bind(L_2TAG_PACKET_47_0_2);\n-  movl(eax, 16368);\n-  xorpd(xmm1, xmm1);\n-  pinsrw(xmm1, eax, 3);\n-  divsd(xmm1, xmm0);\n-  movdqu(xmm0, xmm1);\n-  movl(edx, 27);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_2TAG_PACKET_14_0_2);\n-  movsd(xmm2, Address(rsp, 8));\n-  movsd(xmm6, Address(rsp, 16));\n-  pextrw(eax, xmm2, 3);\n-  pextrw(edx, xmm6, 3);\n-  movl(ecx, 32752);\n-  andl(ecx, edx);\n-  cmpl(ecx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_48_0_2);\n-  andl(eax, 32752);\n-  subl(eax, 16368);\n-  xorl(edx, eax);\n-  testl(edx, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_49_0_2);\n-\n-  bind(L_2TAG_PACKET_50_0_2);\n-  movl(eax, 32736);\n-  pinsrw(xmm0, eax, 3);\n-  shrl(rsi, 16);\n-  orl(eax, rsi);\n-  pinsrw(xmm1, eax, 3);\n-  movl(rsi, Address(rsp, 24));\n-  mulsd(xmm0, xmm1);\n-\n-  bind(L_2TAG_PACKET_17_0_2);\n-  movl(edx, 24);\n-\n-  bind(L_2TAG_PACKET_21_0_2);\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_49_0_2);\n-  movl(eax, 16);\n-  pinsrw(xmm0, eax, 3);\n-  mulsd(xmm0, xmm0);\n-  testl(rsi, INT_MIN);\n-  jcc(Assembler::equal, L_2TAG_PACKET_51_0_2);\n-  movsd(xmm2, Address(tmp, 12560));\n-  xorpd(xmm0, xmm2);\n-\n-  bind(L_2TAG_PACKET_51_0_2);\n-  movl(rsi, Address(rsp, 24));\n-  movl(edx, 25);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_2TAG_PACKET_16_0_2);\n-  pextrw(ecx, xmm5, 3);\n-  pextrw(edx, xmm4, 3);\n-  movl(eax, -1);\n-  andl(ecx, 32752);\n-  subl(ecx, 16368);\n-  andl(edx, 32752);\n-  addl(edx, ecx);\n-  movl(ecx, -31);\n-  sarl(edx, 4);\n-  subl(ecx, edx);\n-  jcc(Assembler::lessEqual, L_2TAG_PACKET_52_0_2);\n-  cmpl(ecx, 20);\n-  jcc(Assembler::above, L_2TAG_PACKET_53_0_2);\n-  shll(eax);\n-\n-  bind(L_2TAG_PACKET_52_0_2);\n-  movdl(xmm0, eax);\n-  psllq(xmm0, 32);\n-  pand(xmm0, xmm5);\n-  subsd(xmm5, xmm0);\n-  addsd(xmm5, xmm1);\n-  mulsd(xmm0, xmm4);\n-  mulsd(xmm5, xmm4);\n-  addsd(xmm0, xmm5);\n-\n-  bind(L_2TAG_PACKET_53_0_2);\n-  movl(edx, 25);\n-  jmp(L_2TAG_PACKET_21_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movzwl(ecx, Address(rsp, 22));\n-  movl(edx, INT_MIN);\n-  movdl(xmm1, edx);\n-  xorpd(xmm7, xmm7);\n-  paddd(xmm0, xmm4);\n-  psllq(xmm5, 32);\n-  movdl(edx, xmm0);\n-  psllq(xmm0, 29);\n-  paddq(xmm1, xmm3);\n-  pand(xmm5, xmm1);\n-  andl(ecx, 32752);\n-  cmpl(ecx, 16560);\n-  jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n-  pand(xmm0, xmm6);\n-  subsd(xmm3, xmm5);\n-  addl(eax, 16351);\n-  shrl(eax, 4);\n-  subl(eax, 1022);\n-  cvtsi2sdl(xmm7, eax);\n-  mulpd(xmm5, xmm0);\n-  movsd(xmm4, Address(tmp, 0));\n-  mulsd(xmm3, xmm0);\n-  movsd(xmm6, Address(tmp, 0));\n-  subsd(xmm5, xmm2);\n-  movsd(xmm1, Address(tmp, 8));\n-  pshufd(xmm2, xmm3, 68);\n-  unpcklpd(xmm5, xmm3);\n-  addsd(xmm3, xmm5);\n-  movsd(xmm0, Address(tmp, 8));\n-  andl(edx, 16760832);\n-  shrl(edx, 10);\n-  addpd(xmm7, Address(tmp, edx, Address::times_1, -3616));\n-  mulsd(xmm4, xmm5);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm6, xmm2);\n-  mulsd(xmm1, xmm2);\n-  movdqu(xmm2, xmm5);\n-  mulsd(xmm4, xmm5);\n-  addsd(xmm5, xmm0);\n-  movdqu(xmm0, xmm7);\n-  addsd(xmm2, xmm3);\n-  addsd(xmm7, xmm5);\n-  mulsd(xmm6, xmm2);\n-  subsd(xmm0, xmm7);\n-  movdqu(xmm2, xmm7);\n-  addsd(xmm7, xmm4);\n-  addsd(xmm0, xmm5);\n-  subsd(xmm2, xmm7);\n-  addsd(xmm4, xmm2);\n-  pshufd(xmm2, xmm5, 238);\n-  movdqu(xmm5, xmm7);\n-  addsd(xmm7, xmm2);\n-  addsd(xmm4, xmm0);\n-  movdqu(xmm0, Address(tmp, 8272));\n-  subsd(xmm5, xmm7);\n-  addsd(xmm6, xmm4);\n-  movdqu(xmm4, xmm7);\n-  addsd(xmm5, xmm2);\n-  addsd(xmm7, xmm1);\n-  movdqu(xmm2, Address(tmp, 8336));\n-  subsd(xmm4, xmm7);\n-  addsd(xmm6, xmm5);\n-  addsd(xmm4, xmm1);\n-  pshufd(xmm5, xmm7, 238);\n-  movdqu(xmm1, xmm7);\n-  addsd(xmm7, xmm5);\n-  subsd(xmm1, xmm7);\n-  addsd(xmm1, xmm5);\n-  movdqu(xmm5, Address(tmp, 8352));\n-  pshufd(xmm3, xmm3, 68);\n-  addsd(xmm6, xmm4);\n-  addsd(xmm6, xmm1);\n-  movdqu(xmm1, Address(tmp, 8304));\n-  mulpd(xmm0, xmm3);\n-  mulpd(xmm2, xmm3);\n-  pshufd(xmm4, xmm3, 68);\n-  mulpd(xmm3, xmm3);\n-  addpd(xmm0, xmm1);\n-  addpd(xmm5, xmm2);\n-  mulsd(xmm4, xmm3);\n-  movsd(xmm2, Address(tmp, 16));\n-  mulpd(xmm3, xmm3);\n-  movsd(xmm1, Address(rsp, 16));\n-  movzwl(ecx, Address(rsp, 22));\n-  mulpd(xmm0, xmm4);\n-  pextrw(eax, xmm7, 3);\n-  mulpd(xmm5, xmm4);\n-  mulpd(xmm0, xmm3);\n-  movsd(xmm4, Address(tmp, 8376));\n-  pand(xmm2, xmm7);\n-  addsd(xmm5, xmm6);\n-  subsd(xmm7, xmm2);\n-  addpd(xmm5, xmm0);\n-  andl(eax, 32752);\n-  subl(eax, 16368);\n-  andl(ecx, 32752);\n-  cmpl(ecx, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_48_0_2);\n-  addl(ecx, eax);\n-  cmpl(ecx, 16576);\n-  jcc(Assembler::aboveEqual, L_2TAG_PACKET_54_0_2);\n-  pshufd(xmm0, xmm5, 238);\n-  pand(xmm4, xmm1);\n-  movdqu(xmm3, xmm1);\n-  addsd(xmm5, xmm0);\n-  subsd(xmm1, xmm4);\n-  xorpd(xmm6, xmm6);\n-  movl(edx, 17080);\n-  pinsrw(xmm6, edx, 3);\n-  addsd(xmm7, xmm5);\n-  mulsd(xmm4, xmm2);\n-  mulsd(xmm1, xmm2);\n-  movdqu(xmm5, xmm6);\n-  mulsd(xmm3, xmm7);\n-  addsd(xmm6, xmm4);\n-  addsd(xmm1, xmm3);\n-  movdqu(xmm7, Address(tmp, 12480));\n-  movdl(edx, xmm6);\n-  subsd(xmm6, xmm5);\n-  movdqu(xmm3, Address(tmp, 12496));\n-  movsd(xmm2, Address(tmp, 12512));\n-  subsd(xmm4, xmm6);\n-  movl(ecx, edx);\n-  andl(edx, 255);\n-  addl(edx, edx);\n-  movdqu(xmm5, Address(tmp, edx, Address::times_8, 8384));\n-  addsd(xmm4, xmm1);\n-  pextrw(edx, xmm6, 3);\n-  shrl(ecx, 8);\n-  movl(eax, ecx);\n-  shrl(ecx, 1);\n-  subl(eax, ecx);\n-  shll(ecx, 20);\n-  movdl(xmm6, ecx);\n-  pshufd(xmm0, xmm4, 68);\n-  pshufd(xmm1, xmm4, 68);\n-  mulpd(xmm0, xmm0);\n-  mulpd(xmm7, xmm1);\n-  pshufd(xmm6, xmm6, 17);\n-  mulsd(xmm2, xmm4);\n-  andl(edx, 32767);\n-  cmpl(edx, 16529);\n-  jcc(Assembler::above, L_2TAG_PACKET_14_0_2);\n-  mulsd(xmm0, xmm0);\n-  paddd(xmm5, xmm6);\n-  addpd(xmm3, xmm7);\n-  mulsd(xmm2, xmm5);\n-  pshufd(xmm6, xmm5, 238);\n-  mulpd(xmm0, xmm3);\n-  addsd(xmm2, xmm6);\n-  pshufd(xmm3, xmm0, 238);\n-  addl(eax, 1023);\n-  shll(eax, 20);\n-  orl(eax, rsi);\n-  movdl(xmm4, eax);\n-  mulsd(xmm0, xmm5);\n-  mulsd(xmm3, xmm5);\n-  addsd(xmm0, xmm2);\n-  psllq(xmm4, 32);\n-  addsd(xmm0, xmm3);\n-  movdqu(xmm1, xmm0);\n-  addsd(xmm0, xmm5);\n-  movl(rsi, Address(rsp, 24));\n-  mulsd(xmm0, xmm4);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_16_0_2);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_17_0_2);\n-\n-  bind(L_2TAG_PACKET_55_0_2);\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_6_0_2);\n-\n-  bind(L_2TAG_PACKET_48_0_2);\n-  movl(rsi, Address(rsp, 24));\n-\n-  bind(L_2TAG_PACKET_56_0_2);\n-  movsd(xmm0, Address(rsp, 8));\n-  movsd(xmm1, Address(rsp, 16));\n-  addsd(xmm1, xmm1);\n-  xorpd(xmm2, xmm2);\n-  movl(eax, 49136);\n-  pinsrw(xmm2, eax, 3);\n-  addsd(xmm2, xmm0);\n-  pextrw(eax, xmm2, 3);\n-  cmpl(eax, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_57_0_2);\n-  xorpd(xmm0, xmm0);\n-  movl(eax, 32760);\n-  pinsrw(xmm0, eax, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_57_0_2);\n-  movdl(edx, xmm1);\n-  movdqu(xmm3, xmm1);\n-  psrlq(xmm3, 20);\n-  movdl(ecx, xmm3);\n-  orl(ecx, edx);\n-  jcc(Assembler::equal, L_2TAG_PACKET_58_0_2);\n-  addsd(xmm1, xmm1);\n-  movdqu(xmm0, xmm1);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_58_0_2);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  pextrw(edx, xmm1, 3);\n-  xorpd(xmm0, xmm0);\n-  subl(eax, 16368);\n-  xorl(eax, edx);\n-  testl(eax, 32768);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n-  movl(edx, 32752);\n-  pinsrw(xmm0, edx, 3);\n-  jmp(L_2TAG_PACKET_18_0_2);\n-\n-  bind(L_2TAG_PACKET_54_0_2);\n-  pextrw(eax, xmm1, 3);\n-  pextrw(ecx, xmm2, 3);\n-  xorl(eax, ecx);\n-  testl(eax, 32768);\n-  jcc(Assembler::equal, L_2TAG_PACKET_50_0_2);\n-  jmp(L_2TAG_PACKET_49_0_2);\n-\n-  bind(L_2TAG_PACKET_6_0_2);\n-  movl(tmp, Address(rsp, 64));\n-\n-}\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_pow.cpp","additions":0,"deletions":3653,"binary":false,"changes":3653,"status":"deleted"},{"patch":"@@ -1,2203 +0,0 @@\n-\/*\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n-* Intel Math Library (LIBM) Source Code\n-*\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/assembler.inline.hpp\"\n-#include \"macroAssembler_x86.hpp\"\n-#include \"runtime\/stubRoutines.hpp\"\n-#include \"stubRoutines_x86.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/******************************************************************************\/\n-\/\/                     ALGORITHM DESCRIPTION - SIN()\n-\/\/                     ---------------------\n-\/\/\n-\/\/     1. RANGE REDUCTION\n-\/\/\n-\/\/     We perform an initial range reduction from X to r with\n-\/\/\n-\/\/          X =~= N * pi\/32 + r\n-\/\/\n-\/\/     so that |r| <= pi\/64 + epsilon. We restrict inputs to those\n-\/\/     where |N| <= 932560. Beyond this, the range reduction is\n-\/\/     insufficiently accurate. For extremely small inputs,\n-\/\/     denormalization can occur internally, impacting performance.\n-\/\/     This means that the main path is actually only taken for\n-\/\/     2^-252 <= |X| < 90112.\n-\/\/\n-\/\/     To avoid branches, we perform the range reduction to full\n-\/\/     accuracy each time.\n-\/\/\n-\/\/          X - N * (P_1 + P_2 + P_3)\n-\/\/\n-\/\/     where P_1 and P_2 are 32-bit numbers (so multiplication by N\n-\/\/     is exact) and P_3 is a 53-bit number. Together, these\n-\/\/     approximate pi well enough for all cases in the restricted\n-\/\/     range.\n-\/\/\n-\/\/     The main reduction sequence is:\n-\/\/\n-\/\/             y = 32\/pi * x\n-\/\/             N = integer(y)\n-\/\/     (computed by adding and subtracting off SHIFTER)\n-\/\/\n-\/\/             m_1 = N * P_1\n-\/\/             m_2 = N * P_2\n-\/\/             r_1 = x - m_1\n-\/\/             r = r_1 - m_2\n-\/\/     (this r can be used for most of the calculation)\n-\/\/\n-\/\/             c_1 = r_1 - r\n-\/\/             m_3 = N * P_3\n-\/\/             c_2 = c_1 - m_2\n-\/\/             c = c_2 - m_3\n-\/\/\n-\/\/     2. MAIN ALGORITHM\n-\/\/\n-\/\/     The algorithm uses a table lookup based on B = M * pi \/ 32\n-\/\/     where M = N mod 64. The stored values are:\n-\/\/       sigma             closest power of 2 to cos(B)\n-\/\/       C_hl              53-bit cos(B) - sigma\n-\/\/       S_hi + S_lo       2 * 53-bit sin(B)\n-\/\/\n-\/\/     The computation is organized as follows:\n-\/\/\n-\/\/          sin(B + r + c) = [sin(B) + sigma * r] +\n-\/\/                           r * (cos(B) - sigma) +\n-\/\/                           sin(B) * [cos(r + c) - 1] +\n-\/\/                           cos(B) * [sin(r + c) - r]\n-\/\/\n-\/\/     which is approximately:\n-\/\/\n-\/\/          [S_hi + sigma * r] +\n-\/\/          C_hl * r +\n-\/\/          S_lo + S_hi * [(cos(r) - 1) - r * c] +\n-\/\/          (C_hl + sigma) * [(sin(r) - r) + c]\n-\/\/\n-\/\/     and this is what is actually computed. We separate this sum\n-\/\/     into four parts:\n-\/\/\n-\/\/          hi + med + pols + corr\n-\/\/\n-\/\/     where\n-\/\/\n-\/\/          hi       = S_hi + sigma r\n-\/\/          med      = C_hl * r\n-\/\/          pols     = S_hi * (cos(r) - 1) + (C_hl + sigma) * (sin(r) - r)\n-\/\/          corr     = S_lo + c * ((C_hl + sigma) - S_hi * r)\n-\/\/\n-\/\/     3. POLYNOMIAL\n-\/\/\n-\/\/     The polynomial S_hi * (cos(r) - 1) + (C_hl + sigma) *\n-\/\/     (sin(r) - r) can be rearranged freely, since it is quite\n-\/\/     small, so we exploit parallelism to the fullest.\n-\/\/\n-\/\/          psc4       =   SC_4 * r_1\n-\/\/          msc4       =   psc4 * r\n-\/\/          r2         =   r * r\n-\/\/          msc2       =   SC_2 * r2\n-\/\/          r4         =   r2 * r2\n-\/\/          psc3       =   SC_3 + msc4\n-\/\/          psc1       =   SC_1 + msc2\n-\/\/          msc3       =   r4 * psc3\n-\/\/          sincospols =   psc1 + msc3\n-\/\/          pols       =   sincospols *\n-\/\/                         <S_hi * r^2 | (C_hl + sigma) * r^3>\n-\/\/\n-\/\/     4. CORRECTION TERM\n-\/\/\n-\/\/     This is where the \"c\" component of the range reduction is\n-\/\/     taken into account; recall that just \"r\" is used for most of\n-\/\/     the calculation.\n-\/\/\n-\/\/          -c   = m_3 - c_2\n-\/\/          -d   = S_hi * r - (C_hl + sigma)\n-\/\/          corr = -c * -d + S_lo\n-\/\/\n-\/\/     5. COMPENSATED SUMMATIONS\n-\/\/\n-\/\/     The two successive compensated summations add up the high\n-\/\/     and medium parts, leaving just the low parts to add up at\n-\/\/     the end.\n-\/\/\n-\/\/          rs        =  sigma * r\n-\/\/          res_int   =  S_hi + rs\n-\/\/          k_0       =  S_hi - res_int\n-\/\/          k_2       =  k_0 + rs\n-\/\/          med       =  C_hl * r\n-\/\/          res_hi    =  res_int + med\n-\/\/          k_1       =  res_int - res_hi\n-\/\/          k_3       =  k_1 + med\n-\/\/\n-\/\/     6. FINAL SUMMATION\n-\/\/\n-\/\/     We now add up all the small parts:\n-\/\/\n-\/\/          res_lo = pols(hi) + pols(lo) + corr + k_1 + k_3\n-\/\/\n-\/\/     Now the overall result is just:\n-\/\/\n-\/\/          res_hi + res_lo\n-\/\/\n-\/\/     7. SMALL ARGUMENTS\n-\/\/\n-\/\/     If |x| < SNN (SNN meaning the smallest normal number), we\n-\/\/     simply perform 0.1111111 cdots 1111 * x. For SNN <= |x|, we\n-\/\/     do 2^-55 * (2^55 * x - x).\n-\/\/\n-\/\/ Special cases:\n-\/\/  sin(NaN) = quiet NaN, and raise invalid exception\n-\/\/  sin(INF) = NaN and raise invalid exception\n-\/\/  sin(+\/-0) = +\/-0\n-\/\/\n-\/******************************************************************************\/\n-\n-#ifdef _LP64\n-\/\/ The 64 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(8) juint _ALL_ONES[] =\n-{\n-    0xffffffffUL, 0x3fefffffUL\n-};\n-\n-void MacroAssembler::fast_sin(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ebx, Register ecx, Register edx, Register tmp) {\n-  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1, L_2TAG_PACKET_3_0_1;\n-  Label L_2TAG_PACKET_4_0_1, L_2TAG_PACKET_5_0_1, L_2TAG_PACKET_6_0_1, L_2TAG_PACKET_7_0_1;\n-  Label L_2TAG_PACKET_8_0_1, L_2TAG_PACKET_9_0_1, L_2TAG_PACKET_10_0_1, L_2TAG_PACKET_11_0_1;\n-  Label L_2TAG_PACKET_13_0_1, L_2TAG_PACKET_14_0_1;\n-  Label L_2TAG_PACKET_12_0_1, B1_4;\n-\n-  assert_different_registers(tmp, eax, ebx, ecx, edx);\n-\n-  address ALL_ONES = (address)_ALL_ONES;\n-\n-  push(rbx);\n-  subq(rsp, 16);\n-  movsd(Address(rsp, 8), xmm0);\n-  movl(eax, Address(rsp, 12));\n-  movq(xmm1, ExternalAddress(PI32INV), tmp \/*rscratch*\/); \/\/0x6dc9c883UL, 0x40245f30UL\n-  movq(xmm2, ExternalAddress(SHIFTER), tmp \/*rscratch*\/); \/\/0x00000000UL, 0x43380000UL\n-  andl(eax, 2147418112);\n-  subl(eax, 808452096);\n-  cmpl(eax, 281346048);\n-  jcc(Assembler::above, L_2TAG_PACKET_0_0_1);\n-  mulsd(xmm1, xmm0);\n-  movdqu(xmm5, ExternalAddress(ONEHALF), tmp \/*rscratch*\/); \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-  movq(xmm4, ExternalAddress(SIGN_MASK), tmp \/*rscratch*\/); \/\/0x00000000UL, 0x80000000UL\n-  pand(xmm4, xmm0);\n-  por(xmm5, xmm4);\n-  addpd(xmm1, xmm5);\n-  cvttsd2sil(edx, xmm1);\n-  cvtsi2sdl(xmm1, edx);\n-  movdqu(xmm6, ExternalAddress(P_2), tmp \/*rscratch*\/); \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n-  mov64(r8, 0x3fb921fb54400000);\n-  movdq(xmm3, r8);\n-  movdqu(xmm5, ExternalAddress(SC_4), tmp \/*rscratch*\/); \/\/0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n-  pshufd(xmm4, xmm0, 68);\n-  mulsd(xmm3, xmm1);\n-  if (VM_Version::supports_sse3()) {\n-    movddup(xmm1, xmm1);\n-  } else {\n-    movlhps(xmm1, xmm1);\n-  }\n-  andl(edx, 63);\n-  shll(edx, 5);\n-  lea(rax, ExternalAddress(Ctable));\n-  addq(rax, rdx);\n-  mulpd(xmm6, xmm1);\n-  mulsd(xmm1, ExternalAddress(P_3), tmp \/*rscratch*\/); \/\/0x2e037073UL, 0x3b63198aUL\n-  subsd(xmm4, xmm3);\n-  movq(xmm7, Address(rax, 8));\n-  subsd(xmm0, xmm3);\n-  if (VM_Version::supports_sse3()) {\n-    movddup(xmm3, xmm4);\n-  } else {\n-    movdqu(xmm3, xmm4);\n-    movlhps(xmm3, xmm3);\n-  }\n-  subsd(xmm4, xmm6);\n-  pshufd(xmm0, xmm0, 68);\n-  movdqu(xmm2, Address(rax, 0));\n-  mulpd(xmm5, xmm0);\n-  subpd(xmm0, xmm6);\n-  mulsd(xmm7, xmm4);\n-  subsd(xmm3, xmm4);\n-  mulpd(xmm5, xmm0);\n-  mulpd(xmm0, xmm0);\n-  subsd(xmm3, xmm6);\n-  movdqu(xmm6, ExternalAddress(SC_2), tmp \/*rscratch*\/); \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n-  subsd(xmm1, xmm3);\n-  movq(xmm3, Address(rax, 24));\n-  addsd(xmm2, xmm3);\n-  subsd(xmm7, xmm2);\n-  mulsd(xmm2, xmm4);\n-  mulpd(xmm6, xmm0);\n-  mulsd(xmm3, xmm4);\n-  mulpd(xmm2, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm5, ExternalAddress(SC_3), tmp \/*rscratch*\/); \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n-  mulsd(xmm4, Address(rax, 0));\n-  addpd(xmm6, ExternalAddress(SC_1), tmp \/*rscratch*\/); \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n-  mulpd(xmm5, xmm0);\n-  movdqu(xmm0, xmm3);\n-  addsd(xmm3, Address(rax, 8));\n-  mulpd(xmm1, xmm7);\n-  movdqu(xmm7, xmm4);\n-  addsd(xmm4, xmm3);\n-  addpd(xmm6, xmm5);\n-  movq(xmm5, Address(rax, 8));\n-  subsd(xmm5, xmm3);\n-  subsd(xmm3, xmm4);\n-  addsd(xmm1, Address(rax, 16));\n-  mulpd(xmm6, xmm2);\n-  addsd(xmm5, xmm0);\n-  addsd(xmm3, xmm7);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm1, xmm3);\n-  addsd(xmm1, xmm6);\n-  unpckhpd(xmm6, xmm6);\n-  movdqu(xmm0, xmm4);\n-  addsd(xmm1, xmm6);\n-  addsd(xmm0, xmm1);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_0_0_1);\n-  jcc(Assembler::greater, L_2TAG_PACKET_1_0_1);\n-  shrl(eax, 20);\n-  cmpl(eax, 3325);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_2_0_1);\n-  mulsd(xmm0, ExternalAddress(ALL_ONES), tmp \/*rscratch*\/); \/\/0xffffffffUL, 0x3fefffffUL\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_2_0_1);\n-  movq(xmm3, ExternalAddress(TWO_POW_55), tmp \/*rscratch*\/); \/\/0x00000000UL, 0x43600000UL\n-  mulsd(xmm3, xmm0);\n-  subsd(xmm3, xmm0);\n-  mulsd(xmm3, ExternalAddress(TWO_POW_M55), tmp \/*rscratch*\/); \/\/0x00000000UL, 0x3c800000UL\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_1_0_1);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_3_0_1);\n-  pextrw(ecx, xmm0, 3);\n-  andl(ecx, 32752);\n-  subl(ecx, 16224);\n-  shrl(ecx, 7);\n-  andl(ecx, 65532);\n-  lea(r11, ExternalAddress(PI_INV_TABLE));\n-  addq(rcx, r11);\n-  movdq(rax, xmm0);\n-  movl(r10, Address(rcx, 20));\n-  movl(r8, Address(rcx, 24));\n-  movl(edx, eax);\n-  shrq(rax, 21);\n-  orl(eax, INT_MIN);\n-  shrl(eax, 11);\n-  movl(r9, r10);\n-  imulq(r10, rdx);\n-  imulq(r9, rax);\n-  imulq(r8, rax);\n-  movl(rsi, Address(rcx, 16));\n-  movl(rdi, Address(rcx, 12));\n-  movl(r11, r10);\n-  shrq(r10, 32);\n-  addq(r9, r10);\n-  addq(r11, r8);\n-  movl(r8, r11);\n-  shrq(r11, 32);\n-  addq(r9, r11);\n-  movl(r10, rsi);\n-  imulq(rsi, rdx);\n-  imulq(r10, rax);\n-  movl(r11, rdi);\n-  imulq(rdi, rdx);\n-  movl(ebx, rsi);\n-  shrq(rsi, 32);\n-  addq(r9, rbx);\n-  movl(ebx, r9);\n-  shrq(r9, 32);\n-  addq(r10, rsi);\n-  addq(r10, r9);\n-  shlq(rbx, 32);\n-  orq(r8, rbx);\n-  imulq(r11, rax);\n-  movl(r9, Address(rcx, 8));\n-  movl(rsi, Address(rcx, 4));\n-  movl(ebx, rdi);\n-  shrq(rdi, 32);\n-  addq(r10, rbx);\n-  movl(ebx, r10);\n-  shrq(r10, 32);\n-  addq(r11, rdi);\n-  addq(r11, r10);\n-  movq(rdi, r9);\n-  imulq(r9, rdx);\n-  imulq(rdi, rax);\n-  movl(r10, r9);\n-  shrq(r9, 32);\n-  addq(r11, r10);\n-  movl(r10, r11);\n-  shrq(r11, 32);\n-  addq(rdi, r9);\n-  addq(rdi, r11);\n-  movq(r9, rsi);\n-  imulq(rsi, rdx);\n-  imulq(r9, rax);\n-  shlq(r10, 32);\n-  orq(r10, rbx);\n-  movl(eax, Address(rcx, 0));\n-  movl(r11, rsi);\n-  shrq(rsi, 32);\n-  addq(rdi, r11);\n-  movl(r11, rdi);\n-  shrq(rdi, 32);\n-  addq(r9, rsi);\n-  addq(r9, rdi);\n-  imulq(rdx, rax);\n-  pextrw(ebx, xmm0, 3);\n-  lea(rdi, ExternalAddress(PI_INV_TABLE));\n-  subq(rcx, rdi);\n-  addl(ecx, ecx);\n-  addl(ecx, ecx);\n-  addl(ecx, ecx);\n-  addl(ecx, 19);\n-  movl(rsi, 32768);\n-  andl(rsi, ebx);\n-  shrl(ebx, 4);\n-  andl(ebx, 2047);\n-  subl(ebx, 1023);\n-  subl(ecx, ebx);\n-  addq(r9, rdx);\n-  movl(edx, ecx);\n-  addl(edx, 32);\n-  cmpl(ecx, 1);\n-  jcc(Assembler::less, L_2TAG_PACKET_4_0_1);\n-  negl(ecx);\n-  addl(ecx, 29);\n-  shll(r9);\n-  movl(rdi, r9);\n-  andl(r9, 536870911);\n-  testl(r9, 268435456);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_5_0_1);\n-  shrl(r9);\n-  movl(ebx, 0);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-\n-  bind(L_2TAG_PACKET_6_0_1);\n-\n-  bind(L_2TAG_PACKET_7_0_1);\n-\n-  cmpq(r9, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_8_0_1);\n-\n-  bind(L_2TAG_PACKET_9_0_1);\n-  bsrq(r11, r9);\n-  movl(ecx, 29);\n-  subl(ecx, r11);\n-  jcc(Assembler::lessEqual, L_2TAG_PACKET_10_0_1);\n-  shlq(r9);\n-  movq(rax, r10);\n-  shlq(r10);\n-  addl(edx, ecx);\n-  negl(ecx);\n-  addl(ecx, 64);\n-  shrq(rax);\n-  shrq(r8);\n-  orq(r9, rax);\n-  orq(r10, r8);\n-\n-  bind(L_2TAG_PACKET_11_0_1);\n-  cvtsi2sdq(xmm0, r9);\n-  shrq(r10, 1);\n-  cvtsi2sdq(xmm3, r10);\n-  xorpd(xmm4, xmm4);\n-  shll(edx, 4);\n-  negl(edx);\n-  addl(edx, 16368);\n-  orl(edx, rsi);\n-  xorl(edx, ebx);\n-  pinsrw(xmm4, edx, 3);\n-  movq(xmm2, ExternalAddress(PI_4),     tmp \/*rscratch*\/); \/\/0x40000000UL, 0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n-  movq(xmm6, ExternalAddress(PI_4 + 8), tmp \/*rscratch*\/); \/\/0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n-  xorpd(xmm5, xmm5);\n-  subl(edx, 1008);\n-  pinsrw(xmm5, edx, 3);\n-  mulsd(xmm0, xmm4);\n-  shll(rsi, 16);\n-  sarl(rsi, 31);\n-  mulsd(xmm3, xmm5);\n-  movdqu(xmm1, xmm0);\n-  mulsd(xmm0, xmm2);\n-  shrl(rdi, 29);\n-  addsd(xmm1, xmm3);\n-  mulsd(xmm3, xmm2);\n-  addl(rdi, rsi);\n-  xorl(rdi, rsi);\n-  mulsd(xmm6, xmm1);\n-  movl(eax, rdi);\n-  addsd(xmm6, xmm3);\n-  movdqu(xmm2, xmm0);\n-  addsd(xmm0, xmm6);\n-  subsd(xmm2, xmm0);\n-  addsd(xmm6, xmm2);\n-\n-  bind(L_2TAG_PACKET_12_0_1);\n-  movq(xmm1, ExternalAddress(PI32INV), tmp \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x40245f30UL\n-  mulsd(xmm1, xmm0);\n-  movq(xmm5, ExternalAddress(ONEHALF), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-  movq(xmm4, ExternalAddress(SIGN_MASK), tmp \/*rscratch*\/);  \/\/0x00000000UL, 0x80000000UL\n-  pand(xmm4, xmm0);\n-  por(xmm5, xmm4);\n-  addpd(xmm1, xmm5);\n-  cvttsd2sil(edx, xmm1);\n-  cvtsi2sdl(xmm1, edx);\n-  movq(xmm3, ExternalAddress(P_1), tmp \/*rscratch*\/);      \/\/0x54400000UL, 0x3fb921fbUL\n-  movdqu(xmm2, ExternalAddress(P_2), tmp \/*rscratch*\/);    \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n-  mulsd(xmm3, xmm1);\n-  unpcklpd(xmm1, xmm1);\n-  shll(eax, 3);\n-  addl(edx, 1865216);\n-  movdqu(xmm4, xmm0);\n-  addl(edx, eax);\n-  andl(edx, 63);\n-  movdqu(xmm5, ExternalAddress(SC_4), tmp \/*rscratch*\/);    \/\/0x54400000UL, 0x3fb921fbUL\n-  lea(rax, ExternalAddress(Ctable));\n-  shll(edx, 5);\n-  addq(rax, rdx);\n-  mulpd(xmm2, xmm1);\n-  subsd(xmm0, xmm3);\n-  mulsd(xmm1, ExternalAddress(P_3), tmp \/*rscratch*\/);    \/\/0x2e037073UL, 0x3b63198aUL\n-  subsd(xmm4, xmm3);\n-  movq(xmm7, Address(rax, 8));\n-  unpcklpd(xmm0, xmm0);\n-  movdqu(xmm3, xmm4);\n-  subsd(xmm4, xmm2);\n-  mulpd(xmm5, xmm0);\n-  subpd(xmm0, xmm2);\n-  mulsd(xmm7, xmm4);\n-  subsd(xmm3, xmm4);\n-  mulpd(xmm5, xmm0);\n-  mulpd(xmm0, xmm0);\n-  subsd(xmm3, xmm2);\n-  movdqu(xmm2, Address(rax, 0));\n-  subsd(xmm1, xmm3);\n-  movq(xmm3, Address(rax, 24));\n-  addsd(xmm2, xmm3);\n-  subsd(xmm7, xmm2);\n-  subsd(xmm1, xmm6);\n-  movdqu(xmm6, ExternalAddress(SC_2), tmp \/*rscratch*\/);    \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n-  mulsd(xmm2, xmm4);\n-  mulpd(xmm6, xmm0);\n-  mulsd(xmm3, xmm4);\n-  mulpd(xmm2, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm5, ExternalAddress(SC_3), tmp \/*rscratch*\/);    \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n-  mulsd(xmm4, Address(rax, 0));\n-  addpd(xmm6, ExternalAddress(SC_1), tmp \/*rscratch*\/);    \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n-  mulpd(xmm5, xmm0);\n-  movdqu(xmm0, xmm3);\n-  addsd(xmm3, Address(rax, 8));\n-  mulpd(xmm1, xmm7);\n-  movdqu(xmm7, xmm4);\n-  addsd(xmm4, xmm3);\n-  addpd(xmm6, xmm5);\n-  movq(xmm5, Address(rax, 8));\n-  subsd(xmm5, xmm3);\n-  subsd(xmm3, xmm4);\n-  addsd(xmm1, Address(rax, 16));\n-  mulpd(xmm6, xmm2);\n-  addsd(xmm5, xmm0);\n-  addsd(xmm3, xmm7);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm1, xmm3);\n-  addsd(xmm1, xmm6);\n-  unpckhpd(xmm6, xmm6);\n-  movdqu(xmm0, xmm4);\n-  addsd(xmm1, xmm6);\n-  addsd(xmm0, xmm1);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_8_0_1);\n-  addl(edx, 64);\n-  movq(r9, r10);\n-  movq(r10, r8);\n-  movl(r8, 0);\n-  cmpq(r9, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_9_0_1);\n-  addl(edx, 64);\n-  movq(r9, r10);\n-  movq(r10, r8);\n-  cmpq(r9, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_9_0_1);\n-  xorpd(xmm0, xmm0);\n-  xorpd(xmm6, xmm6);\n-  jmp(L_2TAG_PACKET_12_0_1);\n-\n-  bind(L_2TAG_PACKET_10_0_1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_11_0_1);\n-  negl(ecx);\n-  shrq(r10);\n-  movq(rax, r9);\n-  shrq(r9);\n-  subl(edx, ecx);\n-  negl(ecx);\n-  addl(ecx, 64);\n-  shlq(rax);\n-  orq(r10, rax);\n-  jmp(L_2TAG_PACKET_11_0_1);\n-\n-  bind(L_2TAG_PACKET_4_0_1);\n-  negl(ecx);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-  shlq(r9);\n-  movq(rdi, r9);\n-  testl(r9, INT_MIN);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_13_0_1);\n-  shrl(r9);\n-  movl(ebx, 0);\n-  shrq(rdi, 3);\n-  jmp(L_2TAG_PACKET_7_0_1);\n-\n-  bind(L_2TAG_PACKET_5_0_1);\n-  shrl(r9);\n-  movl(ebx, 536870912);\n-  shrl(ebx);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-  shlq(rbx, 32);\n-  addl(rdi, 536870912);\n-  movl(rcx, 0);\n-  movl(r11, 0);\n-  subq(rcx, r8);\n-  sbbq(r11, r10);\n-  sbbq(rbx, r9);\n-  movq(r8, rcx);\n-  movq(r10, r11);\n-  movq(r9, rbx);\n-  movl(ebx, 32768);\n-  jmp(L_2TAG_PACKET_6_0_1);\n-\n-  bind(L_2TAG_PACKET_13_0_1);\n-  shrl(r9);\n-  mov64(rbx, 0x100000000);\n-  shrq(rbx);\n-  movl(rcx, 0);\n-  movl(r11, 0);\n-  subq(rcx, r8);\n-  sbbq(r11, r10);\n-  sbbq(rbx, r9);\n-  movq(r8, rcx);\n-  movq(r10, r11);\n-  movq(r9, rbx);\n-  movl(ebx, 32768);\n-  shrq(rdi, 3);\n-  addl(rdi, 536870912);\n-  jmp(L_2TAG_PACKET_7_0_1);\n-\n-  bind(L_2TAG_PACKET_3_0_1);\n-  movq(xmm0, Address(rsp, 8));\n-  mulsd(xmm0, ExternalAddress(NEG_ZERO), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n-  movq(Address(rsp, 0), xmm0);\n-\n-  bind(L_2TAG_PACKET_14_0_1);\n-\n-  bind(B1_4);\n-  addq(rsp, 16);\n-  pop(rbx);\n-}\n-#else\n-\/\/ The 32 bit code is at most SSE2 compliant\n-ATTRIBUTE_ALIGNED(8) juint _zero_none[] =\n-{\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint __4onpi_d[] =\n-{\n-    0x6dc9c883UL, 0x3ff45f30UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _TWO_32H[] =\n-{\n-    0x00000000UL, 0x41f80000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _pi04_3d[] =\n-{\n-    0x54442d00UL, 0x3fe921fbUL, 0x98cc5180UL, 0x3ce84698UL, 0xcbb5bf6cUL,\n-    0xb9dfc8f8UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _pi04_5d[] =\n-{\n-    0x54400000UL, 0x3fe921fbUL, 0x1a600000UL, 0x3dc0b461UL, 0x2e000000UL,\n-    0x3b93198aUL, 0x25200000UL, 0x396b839aUL, 0x533e63a0UL, 0x37027044UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _SCALE[] =\n-{\n-    0x00000000UL, 0x32600000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _zeros[] =\n-{\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x80000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _pi04_2d[] =\n-{\n-    0x54400000UL, 0x3fe921fbUL, 0x1a626331UL, 0x3dc0b461UL\n-};\n-\n-ATTRIBUTE_ALIGNED(4) juint _TWO_12H[] =\n-{\n-    0x00000000UL, 0x40b80000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(2) jushort __4onpi_31l[] =\n-{\n-    0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x836e, 0xa2f9,\n-    0x40d8, 0x0000, 0x0000, 0x0000, 0x2a50, 0x9c88, 0x40b7, 0x0000, 0x0000, 0x0000,\n-    0xabe8, 0xfe13, 0x4099, 0x0000, 0x0000, 0x0000, 0x6ee0, 0xfa9a, 0x4079, 0x0000,\n-    0x0000, 0x0000, 0x9580, 0xdb62, 0x4058, 0x0000, 0x0000, 0x0000, 0x1c82, 0xc9e2,\n-    0x403d, 0x0000, 0x0000, 0x0000, 0xb1c0, 0xff28, 0x4019, 0x0000, 0x0000, 0x0000,\n-    0xef14, 0xaf7a, 0x3ffe, 0x0000, 0x0000, 0x0000, 0x48dc, 0xc36e, 0x3fdf, 0x0000,\n-    0x0000, 0x0000, 0x3740, 0xe909, 0x3fbe, 0x0000, 0x0000, 0x0000, 0x924a, 0xb801,\n-    0x3fa2, 0x0000, 0x0000, 0x0000, 0x3a32, 0xdd41, 0x3f83, 0x0000, 0x0000, 0x0000,\n-    0x8778, 0x873f, 0x3f62, 0x0000, 0x0000, 0x0000, 0x1298, 0xb1cb, 0x3f44, 0x0000,\n-    0x0000, 0x0000, 0xa208, 0x9cfb, 0x3f26, 0x0000, 0x0000, 0x0000, 0xbaec, 0xd7d4,\n-    0x3f06, 0x0000, 0x0000, 0x0000, 0xd338, 0x8909, 0x3ee7, 0x0000, 0x0000, 0x0000,\n-    0x68b8, 0xe04d, 0x3ec7, 0x0000, 0x0000, 0x0000, 0x4e64, 0xdf90, 0x3eaa, 0x0000,\n-    0x0000, 0x0000, 0xc1a8, 0xeb1c, 0x3e89, 0x0000, 0x0000, 0x0000, 0x2720, 0xce7d,\n-    0x3e6a, 0x0000, 0x0000, 0x0000, 0x77b8, 0x8bf1, 0x3e4b, 0x0000, 0x0000, 0x0000,\n-    0xec7e, 0xe4a0, 0x3e2e, 0x0000, 0x0000, 0x0000, 0xffbc, 0xf12f, 0x3e0f, 0x0000,\n-    0x0000, 0x0000, 0xfdc0, 0xb301, 0x3deb, 0x0000, 0x0000, 0x0000, 0xc5ac, 0x9788,\n-    0x3dd1, 0x0000, 0x0000, 0x0000, 0x47da, 0x829b, 0x3db2, 0x0000, 0x0000, 0x0000,\n-    0xd9e4, 0xa6cf, 0x3d93, 0x0000, 0x0000, 0x0000, 0x36e8, 0xf961, 0x3d73, 0x0000,\n-    0x0000, 0x0000, 0xf668, 0xf463, 0x3d54, 0x0000, 0x0000, 0x0000, 0x5168, 0xf2ff,\n-    0x3d35, 0x0000, 0x0000, 0x0000, 0x758e, 0xea4f, 0x3d17, 0x0000, 0x0000, 0x0000,\n-    0xf17a, 0xebe5, 0x3cf8, 0x0000, 0x0000, 0x0000, 0x9cfa, 0x9e83, 0x3cd9, 0x0000,\n-    0x0000, 0x0000, 0xa4ba, 0xe294, 0x3cba, 0x0000, 0x0000, 0x0000, 0xd7ec, 0x9afe,\n-    0x3c9a, 0x0000, 0x0000, 0x0000, 0xae80, 0x8fc6, 0x3c79, 0x0000, 0x0000, 0x0000,\n-    0x3304, 0x8560, 0x3c5c, 0x0000, 0x0000, 0x0000, 0x6d70, 0xdf8f, 0x3c3b, 0x0000,\n-    0x0000, 0x0000, 0x3ef0, 0xafc3, 0x3c1e, 0x0000, 0x0000, 0x0000, 0xd0d8, 0x826b,\n-    0x3bfe, 0x0000, 0x0000, 0x0000, 0x1c80, 0xed4f, 0x3bdd, 0x0000, 0x0000, 0x0000,\n-    0x730c, 0xb0af, 0x3bc1, 0x0000, 0x0000, 0x0000, 0x6660, 0xc219, 0x3ba2, 0x0000,\n-    0x0000, 0x0000, 0x940c, 0xabe2, 0x3b83, 0x0000, 0x0000, 0x0000, 0xdffc, 0x8408,\n-    0x3b64, 0x0000, 0x0000, 0x0000, 0x6b98, 0xc402, 0x3b45, 0x0000, 0x0000, 0x0000,\n-    0x1818, 0x9cc4, 0x3b26, 0x0000, 0x0000, 0x0000, 0x5390, 0xaab6, 0x3b05, 0x0000,\n-    0x0000, 0x0000, 0xb070, 0xd464, 0x3ae9, 0x0000, 0x0000, 0x0000, 0x231a, 0x9ef0,\n-    0x3aca, 0x0000, 0x0000, 0x0000, 0x0670, 0xd1f1, 0x3aaa, 0x0000, 0x0000, 0x0000,\n-    0x7738, 0xd9f3, 0x3a8a, 0x0000, 0x0000, 0x0000, 0xa834, 0x8092, 0x3a6c, 0x0000,\n-    0x0000, 0x0000, 0xb45c, 0xce23, 0x3a4d, 0x0000, 0x0000, 0x0000, 0x36e8, 0xb0e5,\n-    0x3a2d, 0x0000, 0x0000, 0x0000, 0xd156, 0xaf44, 0x3a10, 0x0000, 0x0000, 0x0000,\n-    0x9f52, 0x8c82, 0x39f1, 0x0000, 0x0000, 0x0000, 0x829c, 0xff83, 0x39d1, 0x0000,\n-    0x0000, 0x0000, 0x7d06, 0xefc6, 0x39b3, 0x0000, 0x0000, 0x0000, 0x93e0, 0xb0b7,\n-    0x3992, 0x0000, 0x0000, 0x0000, 0xedde, 0xc193, 0x3975, 0x0000, 0x0000, 0x0000,\n-    0xbbc0, 0xcf49, 0x3952, 0x0000, 0x0000, 0x0000, 0xbdf0, 0xd63c, 0x3937, 0x0000,\n-    0x0000, 0x0000, 0x1f34, 0x9f3a, 0x3918, 0x0000, 0x0000, 0x0000, 0x3f8e, 0xe579,\n-    0x38f9, 0x0000, 0x0000, 0x0000, 0x90c8, 0xc3f8, 0x38d9, 0x0000, 0x0000, 0x0000,\n-    0x48c0, 0xf8f8, 0x38b7, 0x0000, 0x0000, 0x0000, 0xed56, 0xafa6, 0x389c, 0x0000,\n-    0x0000, 0x0000, 0x8218, 0xb969, 0x387d, 0x0000, 0x0000, 0x0000, 0x1852, 0xec57,\n-    0x385e, 0x0000, 0x0000, 0x0000, 0x670c, 0xd674, 0x383e, 0x0000, 0x0000, 0x0000,\n-    0xad40, 0xc2c4, 0x3820, 0x0000, 0x0000, 0x0000, 0x2e80, 0xa696, 0x3801, 0x0000,\n-    0x0000, 0x0000, 0xd800, 0xc467, 0x37dc, 0x0000, 0x0000, 0x0000, 0x3c72, 0xc5ae,\n-    0x37c3, 0x0000, 0x0000, 0x0000, 0xb006, 0xac69, 0x37a4, 0x0000, 0x0000, 0x0000,\n-    0x34a0, 0x8cdf, 0x3782, 0x0000, 0x0000, 0x0000, 0x9ed2, 0xd25e, 0x3766, 0x0000,\n-    0x0000, 0x0000, 0x6fec, 0xaaaa, 0x3747, 0x0000, 0x0000, 0x0000, 0x6040, 0xfb5c,\n-    0x3726, 0x0000, 0x0000, 0x0000, 0x764c, 0xa3fc, 0x3708, 0x0000, 0x0000, 0x0000,\n-    0xb254, 0x954e, 0x36e9, 0x0000, 0x0000, 0x0000, 0x3e1c, 0xf5dc, 0x36ca, 0x0000,\n-    0x0000, 0x0000, 0x7b06, 0xc635, 0x36ac, 0x0000, 0x0000, 0x0000, 0xa8ba, 0xd738,\n-    0x368d, 0x0000, 0x0000, 0x0000, 0x06cc, 0xb24e, 0x366d, 0x0000, 0x0000, 0x0000,\n-    0x7108, 0xac76, 0x364f, 0x0000, 0x0000, 0x0000, 0x2324, 0xa7cb, 0x3630, 0x0000,\n-    0x0000, 0x0000, 0xac40, 0xef15, 0x360f, 0x0000, 0x0000, 0x0000, 0xae46, 0xd516,\n-    0x35f2, 0x0000, 0x0000, 0x0000, 0x615e, 0xe003, 0x35d3, 0x0000, 0x0000, 0x0000,\n-    0x0cf0, 0xefe7, 0x35b1, 0x0000, 0x0000, 0x0000, 0xfb50, 0xf98c, 0x3595, 0x0000,\n-    0x0000, 0x0000, 0x0abc, 0xf333, 0x3575, 0x0000, 0x0000, 0x0000, 0xdd60, 0xca3f,\n-    0x3555, 0x0000, 0x0000, 0x0000, 0x7eb6, 0xd87f, 0x3538, 0x0000, 0x0000, 0x0000,\n-    0x44f4, 0xb291, 0x3519, 0x0000, 0x0000, 0x0000, 0xff80, 0xc982, 0x34f6, 0x0000,\n-    0x0000, 0x0000, 0x9de0, 0xd9b8, 0x34db, 0x0000, 0x0000, 0x0000, 0xcd42, 0x9366,\n-    0x34bc, 0x0000, 0x0000, 0x0000, 0xbef0, 0xfaee, 0x349d, 0x0000, 0x0000, 0x0000,\n-    0xdac4, 0xb6f1, 0x347d, 0x0000, 0x0000, 0x0000, 0xf140, 0x94de, 0x345d, 0x0000,\n-    0x0000, 0x0000, 0xa218, 0x8b4b, 0x343e, 0x0000, 0x0000, 0x0000, 0x6380, 0xa135,\n-    0x341e, 0x0000, 0x0000, 0x0000, 0xb184, 0x8cb2, 0x3402, 0x0000, 0x0000, 0x0000,\n-    0x196e, 0xdc61, 0x33e3, 0x0000, 0x0000, 0x0000, 0x0c00, 0xde05, 0x33c4, 0x0000,\n-    0x0000, 0x0000, 0xef9a, 0xbd38, 0x33a5, 0x0000, 0x0000, 0x0000, 0xc1a0, 0xdf00,\n-    0x3385, 0x0000, 0x0000, 0x0000, 0x1090, 0x9973, 0x3365, 0x0000, 0x0000, 0x0000,\n-    0x4882, 0x8301, 0x3348, 0x0000, 0x0000, 0x0000, 0x7abe, 0xadc7, 0x3329, 0x0000,\n-    0x0000, 0x0000, 0x7cba, 0xec2b, 0x330a, 0x0000, 0x0000, 0x0000, 0xa520, 0x8f21,\n-    0x32e9, 0x0000, 0x0000, 0x0000, 0x710c, 0x8d36, 0x32cc, 0x0000, 0x0000, 0x0000,\n-    0x5212, 0xc6ed, 0x32ad, 0x0000, 0x0000, 0x0000, 0x7308, 0xfd76, 0x328d, 0x0000,\n-    0x0000, 0x0000, 0x5014, 0xd548, 0x326f, 0x0000, 0x0000, 0x0000, 0xd3f2, 0xb499,\n-    0x3250, 0x0000, 0x0000, 0x0000, 0x7f74, 0xa606, 0x3230, 0x0000, 0x0000, 0x0000,\n-    0xf0a8, 0xd720, 0x3212, 0x0000, 0x0000, 0x0000, 0x185c, 0xe20f, 0x31f2, 0x0000,\n-    0x0000, 0x0000, 0xa5a8, 0x8738, 0x31d4, 0x0000, 0x0000, 0x0000, 0xdd74, 0xcafb,\n-    0x31b4, 0x0000, 0x0000, 0x0000, 0x98b6, 0xbd8e, 0x3196, 0x0000, 0x0000, 0x0000,\n-    0xe9de, 0x977f, 0x3177, 0x0000, 0x0000, 0x0000, 0x67c0, 0x818d, 0x3158, 0x0000,\n-    0x0000, 0x0000, 0xe52a, 0x9322, 0x3139, 0x0000, 0x0000, 0x0000, 0xe568, 0x9b6c,\n-    0x3119, 0x0000, 0x0000, 0x0000, 0x2358, 0xaa0a, 0x30fa, 0x0000, 0x0000, 0x0000,\n-    0xe480, 0xe13b, 0x30d9, 0x0000, 0x0000, 0x0000, 0x3024, 0x90a1, 0x30bd, 0x0000,\n-    0x0000, 0x0000, 0x9620, 0xda30, 0x309d, 0x0000, 0x0000, 0x0000, 0x898a, 0xb388,\n-    0x307f, 0x0000, 0x0000, 0x0000, 0xb24c, 0xc891, 0x3060, 0x0000, 0x0000, 0x0000,\n-    0x8056, 0xf98b, 0x3041, 0x0000, 0x0000, 0x0000, 0x72a4, 0xa1ea, 0x3021, 0x0000,\n-    0x0000, 0x0000, 0x6af8, 0x9488, 0x3001, 0x0000, 0x0000, 0x0000, 0xe00c, 0xdfcb,\n-    0x2fe4, 0x0000, 0x0000, 0x0000, 0xeeec, 0xc941, 0x2fc4, 0x0000, 0x0000, 0x0000,\n-    0x53e0, 0xe70f, 0x2fa4, 0x0000, 0x0000, 0x0000, 0x8f60, 0x9c07, 0x2f85, 0x0000,\n-    0x0000, 0x0000, 0xb328, 0xc3e7, 0x2f68, 0x0000, 0x0000, 0x0000, 0x9404, 0xf8c7,\n-    0x2f48, 0x0000, 0x0000, 0x0000, 0x38e0, 0xc99f, 0x2f29, 0x0000, 0x0000, 0x0000,\n-    0x9778, 0xd984, 0x2f09, 0x0000, 0x0000, 0x0000, 0xe700, 0xd142, 0x2eea, 0x0000,\n-    0x0000, 0x0000, 0xd904, 0x9443, 0x2ecd, 0x0000, 0x0000, 0x0000, 0xd4ba, 0xae7e,\n-    0x2eae, 0x0000, 0x0000, 0x0000, 0x8e5e, 0x8524, 0x2e8f, 0x0000, 0x0000, 0x0000,\n-    0xb550, 0xc9ed, 0x2e6e, 0x0000, 0x0000, 0x0000, 0x53b8, 0x8648, 0x2e51, 0x0000,\n-    0x0000, 0x0000, 0xdae4, 0x87f9, 0x2e32, 0x0000, 0x0000, 0x0000, 0x2942, 0xd966,\n-    0x2e13, 0x0000, 0x0000, 0x0000, 0x4f28, 0xcf3c, 0x2df3, 0x0000, 0x0000, 0x0000,\n-    0xfa40, 0xc4ef, 0x2dd1, 0x0000, 0x0000, 0x0000, 0x4424, 0xbca7, 0x2db5, 0x0000,\n-    0x0000, 0x0000, 0x2e62, 0xcdc5, 0x2d97, 0x0000, 0x0000, 0x0000, 0xed88, 0x996b,\n-    0x2d78, 0x0000, 0x0000, 0x0000, 0x7c30, 0xd97d, 0x2d56, 0x0000, 0x0000, 0x0000,\n-    0xed26, 0xbf6e, 0x2d3a, 0x0000, 0x0000, 0x0000, 0x2918, 0x921b, 0x2d1a, 0x0000,\n-    0x0000, 0x0000, 0x4e24, 0xe84e, 0x2cfb, 0x0000, 0x0000, 0x0000, 0x6dc0, 0x92ec,\n-    0x2cdd, 0x0000, 0x0000, 0x0000, 0x4f2c, 0xacf8, 0x2cbd, 0x0000, 0x0000, 0x0000,\n-    0xc634, 0xf094, 0x2c9e, 0x0000, 0x0000, 0x0000, 0xdc70, 0xe5d3, 0x2c7e, 0x0000,\n-    0x0000, 0x0000, 0x2180, 0xa600, 0x2c5b, 0x0000, 0x0000, 0x0000, 0x8480, 0xd680,\n-    0x2c3c, 0x0000, 0x0000, 0x0000, 0x8b24, 0xd63b, 0x2c22, 0x0000, 0x0000, 0x0000,\n-    0x02e0, 0xaa47, 0x2c00, 0x0000, 0x0000, 0x0000, 0x9ad0, 0xee84, 0x2be3, 0x0000,\n-    0x0000, 0x0000, 0xf7dc, 0xf699, 0x2bc6, 0x0000, 0x0000, 0x0000, 0xddde, 0xe490,\n-    0x2ba7, 0x0000, 0x0000, 0x0000, 0x34a0, 0xb4fd, 0x2b85, 0x0000, 0x0000, 0x0000,\n-    0x91b4, 0x8ef6, 0x2b68, 0x0000, 0x0000, 0x0000, 0xa3e0, 0xa2a7, 0x2b47, 0x0000,\n-    0x0000, 0x0000, 0xcce4, 0x82b3, 0x2b2a, 0x0000, 0x0000, 0x0000, 0xe4be, 0x8207,\n-    0x2b0c, 0x0000, 0x0000, 0x0000, 0x1d92, 0xab43, 0x2aed, 0x0000, 0x0000, 0x0000,\n-    0xe818, 0xf9f6, 0x2acd, 0x0000, 0x0000, 0x0000, 0xff12, 0xba80, 0x2aaf, 0x0000,\n-    0x0000, 0x0000, 0x5254, 0x8529, 0x2a90, 0x0000, 0x0000, 0x0000, 0x1b88, 0xe032,\n-    0x2a71, 0x0000, 0x0000, 0x0000, 0x3248, 0xd86d, 0x2a50, 0x0000, 0x0000, 0x0000,\n-    0x3140, 0xc9d5, 0x2a2e, 0x0000, 0x0000, 0x0000, 0x14e6, 0xbd47, 0x2a14, 0x0000,\n-    0x0000, 0x0000, 0x5c10, 0xe544, 0x29f4, 0x0000, 0x0000, 0x0000, 0x9f50, 0x90b6,\n-    0x29d4, 0x0000, 0x0000, 0x0000, 0x9850, 0xab55, 0x29b6, 0x0000, 0x0000, 0x0000,\n-    0x2750, 0x9d07, 0x2998, 0x0000, 0x0000, 0x0000, 0x6700, 0x8bbb, 0x2973, 0x0000,\n-    0x0000, 0x0000, 0x5dba, 0xed31, 0x295a, 0x0000, 0x0000, 0x0000, 0x61dc, 0x85fe,\n-    0x293a, 0x0000, 0x0000, 0x0000, 0x9ba2, 0xd6b4, 0x291c, 0x0000, 0x0000, 0x0000,\n-    0x2d30, 0xe3a5, 0x28fb, 0x0000, 0x0000, 0x0000, 0x6630, 0xb566, 0x28dd, 0x0000,\n-    0x0000, 0x0000, 0x5ad4, 0xa829, 0x28bf, 0x0000, 0x0000, 0x0000, 0x89d8, 0xe290,\n-    0x28a0, 0x0000, 0x0000, 0x0000, 0x3916, 0xc428, 0x2881, 0x0000, 0x0000, 0x0000,\n-    0x0490, 0xbea4, 0x2860, 0x0000, 0x0000, 0x0000, 0xee06, 0x80ee, 0x2843, 0x0000,\n-    0x0000, 0x0000, 0xfc00, 0xf327, 0x2820, 0x0000, 0x0000, 0x0000, 0xea40, 0xa871,\n-    0x2800, 0x0000, 0x0000, 0x0000, 0x63d8, 0x9c26, 0x27e4, 0x0000, 0x0000, 0x0000,\n-    0x07ba, 0xc0c9, 0x27c7, 0x0000, 0x0000, 0x0000, 0x3fa2, 0x9797, 0x27a8, 0x0000,\n-    0x0000, 0x0000, 0x21c6, 0xfeca, 0x2789, 0x0000, 0x0000, 0x0000, 0xde40, 0x860d,\n-    0x2768, 0x0000, 0x0000, 0x0000, 0x9cc8, 0x98ce, 0x2749, 0x0000, 0x0000, 0x0000,\n-    0x3778, 0xa31c, 0x272a, 0x0000, 0x0000, 0x0000, 0xe778, 0xf6e2, 0x270b, 0x0000,\n-    0x0000, 0x0000, 0x59b8, 0xf841, 0x26ed, 0x0000, 0x0000, 0x0000, 0x02e0, 0xad04,\n-    0x26cd, 0x0000, 0x0000, 0x0000, 0x5a92, 0x9380, 0x26b0, 0x0000, 0x0000, 0x0000,\n-    0xc740, 0x8886, 0x268d, 0x0000, 0x0000, 0x0000, 0x0680, 0xfaf8, 0x266c, 0x0000,\n-    0x0000, 0x0000, 0xfb60, 0x897f, 0x2653, 0x0000, 0x0000, 0x0000, 0x8760, 0xf903,\n-    0x2634, 0x0000, 0x0000, 0x0000, 0xad2a, 0xc2c8, 0x2615, 0x0000, 0x0000, 0x0000,\n-    0x2d86, 0x8aef, 0x25f6, 0x0000, 0x0000, 0x0000, 0x1ef4, 0xe627, 0x25d6, 0x0000,\n-    0x0000, 0x0000, 0x09e4, 0x8020, 0x25b7, 0x0000, 0x0000, 0x0000, 0x7548, 0xd227,\n-    0x2598, 0x0000, 0x0000, 0x0000, 0x75dc, 0xfb5b, 0x2579, 0x0000, 0x0000, 0x0000,\n-    0xea84, 0xc8b6, 0x255a, 0x0000, 0x0000, 0x0000, 0xe4d0, 0x8145, 0x253b, 0x0000,\n-    0x0000, 0x0000, 0x3640, 0x9768, 0x251c, 0x0000, 0x0000, 0x0000, 0x246a, 0xccec,\n-    0x24fe, 0x0000, 0x0000, 0x0000, 0x51d0, 0xa075, 0x24dd, 0x0000, 0x0000, 0x0000,\n-    0x4638, 0xa385, 0x24bf, 0x0000, 0x0000, 0x0000, 0xd788, 0xd776, 0x24a1, 0x0000,\n-    0x0000, 0x0000, 0x1370, 0x8997, 0x2482, 0x0000, 0x0000, 0x0000, 0x1e88, 0x9b67,\n-    0x2462, 0x0000, 0x0000, 0x0000, 0x6c08, 0xd975, 0x2444, 0x0000, 0x0000, 0x0000,\n-    0xfdb0, 0xcfc0, 0x2422, 0x0000, 0x0000, 0x0000, 0x3100, 0xc026, 0x2406, 0x0000,\n-    0x0000, 0x0000, 0xc5b4, 0xae64, 0x23e6, 0x0000, 0x0000, 0x0000, 0x2280, 0xf687,\n-    0x23c3, 0x0000, 0x0000, 0x0000, 0x2de0, 0x9006, 0x23a9, 0x0000, 0x0000, 0x0000,\n-    0x24bc, 0xf631, 0x238a, 0x0000, 0x0000, 0x0000, 0xb8d4, 0xa975, 0x236b, 0x0000,\n-    0x0000, 0x0000, 0xd9a4, 0xb949, 0x234b, 0x0000, 0x0000, 0x0000, 0xb54e, 0xbd39,\n-    0x232d, 0x0000, 0x0000, 0x0000, 0x4aac, 0x9a52, 0x230e, 0x0000, 0x0000, 0x0000,\n-    0xbbbc, 0xd085, 0x22ef, 0x0000, 0x0000, 0x0000, 0xdf18, 0xc633, 0x22cf, 0x0000,\n-    0x0000, 0x0000, 0x16d0, 0xeca5, 0x22af, 0x0000, 0x0000, 0x0000, 0xf2a0, 0xdf6f,\n-    0x228e, 0x0000, 0x0000, 0x0000, 0x8c44, 0xe86b, 0x2272, 0x0000, 0x0000, 0x0000,\n-    0x35c0, 0xbbf4, 0x2253, 0x0000, 0x0000, 0x0000, 0x0c40, 0xdafb, 0x2230, 0x0000,\n-    0x0000, 0x0000, 0x92dc, 0x9935, 0x2216, 0x0000, 0x0000, 0x0000, 0x0ca0, 0xbda6,\n-    0x21f3, 0x0000, 0x0000, 0x0000, 0x5958, 0xa6fd, 0x21d6, 0x0000, 0x0000, 0x0000,\n-    0xa3dc, 0x9d7f, 0x21b9, 0x0000, 0x0000, 0x0000, 0x79dc, 0xfcb5, 0x2199, 0x0000,\n-    0x0000, 0x0000, 0xf264, 0xcebb, 0x217b, 0x0000, 0x0000, 0x0000, 0x0abe, 0x8308,\n-    0x215c, 0x0000, 0x0000, 0x0000, 0x30ae, 0xb463, 0x213d, 0x0000, 0x0000, 0x0000,\n-    0x6228, 0xb040, 0x211c, 0x0000, 0x0000, 0x0000, 0xc9b2, 0xf43b, 0x20ff, 0x0000,\n-    0x0000, 0x0000, 0x3d8e, 0xa4b3, 0x20e0, 0x0000, 0x0000, 0x0000, 0x84e6, 0x8dab,\n-    0x20c1, 0x0000, 0x0000, 0x0000, 0xa124, 0x9b74, 0x20a1, 0x0000, 0x0000, 0x0000,\n-    0xc276, 0xd497, 0x2083, 0x0000, 0x0000, 0x0000, 0x6354, 0xa466, 0x2063, 0x0000,\n-    0x0000, 0x0000, 0x8654, 0xaf0a, 0x2044, 0x0000, 0x0000, 0x0000, 0x1d20, 0xfa5c,\n-    0x2024, 0x0000, 0x0000, 0x0000, 0xbcd0, 0xf3f0, 0x2004, 0x0000, 0x0000, 0x0000,\n-    0xedf0, 0xf0b6, 0x1fe7, 0x0000, 0x0000, 0x0000, 0x45bc, 0x9182, 0x1fc9, 0x0000,\n-    0x0000, 0x0000, 0xe254, 0xdc85, 0x1faa, 0x0000, 0x0000, 0x0000, 0xb898, 0xe9b1,\n-    0x1f8a, 0x0000, 0x0000, 0x0000, 0x0ebe, 0xe6f0, 0x1f6c, 0x0000, 0x0000, 0x0000,\n-    0xa9b8, 0xf584, 0x1f4c, 0x0000, 0x0000, 0x0000, 0x12e8, 0xdf6b, 0x1f2e, 0x0000,\n-    0x0000, 0x0000, 0x9f9e, 0xcd55, 0x1f0f, 0x0000, 0x0000, 0x0000, 0x05a0, 0xec3a,\n-    0x1eef, 0x0000, 0x0000, 0x0000, 0xd8e0, 0x96f8, 0x1ed1, 0x0000, 0x0000, 0x0000,\n-    0x3bd4, 0xccc6, 0x1eb1, 0x0000, 0x0000, 0x0000, 0x4910, 0xb87b, 0x1e93, 0x0000,\n-    0x0000, 0x0000, 0xbefc, 0xd40b, 0x1e73, 0x0000, 0x0000, 0x0000, 0x317e, 0xa406,\n-    0x1e55, 0x0000, 0x0000, 0x0000, 0x6bb2, 0xc2b2, 0x1e36, 0x0000, 0x0000, 0x0000,\n-    0xb87e, 0xbb78, 0x1e17, 0x0000, 0x0000, 0x0000, 0xa03c, 0xdbbd, 0x1df7, 0x0000,\n-    0x0000, 0x0000, 0x5b6c, 0xe3c8, 0x1dd9, 0x0000, 0x0000, 0x0000, 0x8968, 0xca8e,\n-    0x1dba, 0x0000, 0x0000, 0x0000, 0xc024, 0xe6ab, 0x1d9a, 0x0000, 0x0000, 0x0000,\n-    0x4110, 0xd4eb, 0x1d7a, 0x0000, 0x0000, 0x0000, 0xa168, 0xbdb5, 0x1d5d, 0x0000,\n-    0x0000, 0x0000, 0x012e, 0xa5fa, 0x1d3e, 0x0000, 0x0000, 0x0000, 0x6838, 0x9c1f,\n-    0x1d1e, 0x0000, 0x0000, 0x0000, 0xa158, 0xaa76, 0x1d00, 0x0000, 0x0000, 0x0000,\n-    0x090a, 0xbd95, 0x1ce1, 0x0000, 0x0000, 0x0000, 0xf73e, 0x8b6d, 0x1cc2, 0x0000,\n-    0x0000, 0x0000, 0x5fda, 0xbcbf, 0x1ca3, 0x0000, 0x0000, 0x0000, 0xdbe8, 0xb89f,\n-    0x1c84, 0x0000, 0x0000, 0x0000, 0x6e4c, 0x96c7, 0x1c64, 0x0000, 0x0000, 0x0000,\n-    0x19c2, 0xf2a4, 0x1c46, 0x0000, 0x0000, 0x0000, 0xb800, 0xf855, 0x1c1e, 0x0000,\n-    0x0000, 0x0000, 0x87fc, 0x85ff, 0x1c08, 0x0000, 0x0000, 0x0000, 0x1418, 0x839f,\n-    0x1be9, 0x0000, 0x0000, 0x0000, 0x6186, 0xd9d8, 0x1bca, 0x0000, 0x0000, 0x0000,\n-    0xf500, 0xabaa, 0x1ba6, 0x0000, 0x0000, 0x0000, 0x7b36, 0xdafe, 0x1b8c, 0x0000,\n-    0x0000, 0x0000, 0xf394, 0xe6d8, 0x1b6c, 0x0000, 0x0000, 0x0000, 0x6efc, 0x9e55,\n-    0x1b4e, 0x0000, 0x0000, 0x0000, 0x5e10, 0xc523, 0x1b2e, 0x0000, 0x0000, 0x0000,\n-    0x8210, 0xb6f9, 0x1b0d, 0x0000, 0x0000, 0x0000, 0x9ab0, 0x96e3, 0x1af1, 0x0000,\n-    0x0000, 0x0000, 0x3864, 0x92e7, 0x1ad1, 0x0000, 0x0000, 0x0000, 0x9878, 0xdc65,\n-    0x1ab1, 0x0000, 0x0000, 0x0000, 0xfa20, 0xd6cb, 0x1a94, 0x0000, 0x0000, 0x0000,\n-    0x6c00, 0xa4e4, 0x1a70, 0x0000, 0x0000, 0x0000, 0xab40, 0xb41b, 0x1a53, 0x0000,\n-    0x0000, 0x0000, 0x43a4, 0x8ede, 0x1a37, 0x0000, 0x0000, 0x0000, 0x22e0, 0x9314,\n-    0x1a15, 0x0000, 0x0000, 0x0000, 0x6170, 0xb949, 0x19f8, 0x0000, 0x0000, 0x0000,\n-    0x6b00, 0xe056, 0x19d8, 0x0000, 0x0000, 0x0000, 0x9ba8, 0xa94c, 0x19b9, 0x0000,\n-    0x0000, 0x0000, 0xfaa0, 0xaa16, 0x199b, 0x0000, 0x0000, 0x0000, 0x899a, 0xf627,\n-    0x197d, 0x0000, 0x0000, 0x0000, 0x9f20, 0xfb70, 0x195d, 0x0000, 0x0000, 0x0000,\n-    0xa4b8, 0xc176, 0x193e, 0x0000, 0x0000, 0x0000, 0xb21c, 0x85c3, 0x1920, 0x0000,\n-    0x0000, 0x0000, 0x50d2, 0x9b19, 0x1901, 0x0000, 0x0000, 0x0000, 0xd4b0, 0xb708,\n-    0x18e0, 0x0000, 0x0000, 0x0000, 0xfb88, 0xf510, 0x18c1, 0x0000, 0x0000, 0x0000,\n-    0x31ec, 0xdc8d, 0x18a3, 0x0000, 0x0000, 0x0000, 0x3c00, 0xbff9, 0x1885, 0x0000,\n-    0x0000, 0x0000, 0x5020, 0xc30b, 0x1862, 0x0000, 0x0000, 0x0000, 0xd4f0, 0xda0c,\n-    0x1844, 0x0000, 0x0000, 0x0000, 0x20d2, 0x99a5, 0x1828, 0x0000, 0x0000, 0x0000,\n-    0x852e, 0xd159, 0x1809, 0x0000, 0x0000, 0x0000, 0x7cd8, 0x97a1, 0x17e9, 0x0000,\n-    0x0000, 0x0000, 0x423a, 0x997b, 0x17cb, 0x0000, 0x0000, 0x0000, 0xc1c0, 0xbe7d,\n-    0x17a8, 0x0000, 0x0000, 0x0000, 0xe8bc, 0xdcdd, 0x178d, 0x0000, 0x0000, 0x0000,\n-    0x8b28, 0xae06, 0x176e, 0x0000, 0x0000, 0x0000, 0x102e, 0xb8d4, 0x174f, 0x0000,\n-    0x0000, 0x0000, 0xaa00, 0xaa5c, 0x172f, 0x0000, 0x0000, 0x0000, 0x51f0, 0x9fc0,\n-    0x170e, 0x0000, 0x0000, 0x0000, 0xf858, 0xe181, 0x16f2, 0x0000, 0x0000, 0x0000,\n-    0x91a8, 0x8162, 0x16d3, 0x0000, 0x0000, 0x0000, 0x5f40, 0xcb6f, 0x16b1, 0x0000,\n-    0x0000, 0x0000, 0xbb50, 0xe55f, 0x1693, 0x0000, 0x0000, 0x0000, 0xacd2, 0xd895,\n-    0x1676, 0x0000, 0x0000, 0x0000, 0xef30, 0x97bf, 0x1654, 0x0000, 0x0000, 0x0000,\n-    0xf700, 0xb3d7, 0x1633, 0x0000, 0x0000, 0x0000, 0x3454, 0xa7b5, 0x1619, 0x0000,\n-    0x0000, 0x0000, 0x6b00, 0xa929, 0x15f6, 0x0000, 0x0000, 0x0000, 0x9f04, 0x89f7,\n-    0x15db, 0x0000, 0x0000, 0x0000, 0xad78, 0xd985, 0x15bc, 0x0000, 0x0000, 0x0000,\n-    0xa46a, 0xae3f, 0x159d, 0x0000, 0x0000, 0x0000, 0x63a0, 0xd0da, 0x157c, 0x0000,\n-    0x0000, 0x0000, 0x5e90, 0x817d, 0x155e, 0x0000, 0x0000, 0x0000, 0x1494, 0xb13f,\n-    0x1540, 0x0000, 0x0000, 0x0000, 0x0090, 0x9c40, 0x1521, 0x0000, 0x0000, 0x0000,\n-    0xdd70, 0xcc86, 0x1500, 0x0000, 0x0000, 0x0000, 0x64f8, 0xdb6f, 0x14e1, 0x0000,\n-    0x0000, 0x0000, 0xe22c, 0xac17, 0x14c3, 0x0000, 0x0000, 0x0000, 0x60e0, 0xa9ad,\n-    0x14a3, 0x0000, 0x0000, 0x0000, 0x4640, 0xd658, 0x1481, 0x0000, 0x0000, 0x0000,\n-    0x6490, 0xa181, 0x1467, 0x0000, 0x0000, 0x0000, 0x1df4, 0xaaa2, 0x1447, 0x0000,\n-    0x0000, 0x0000, 0xb94a, 0x8f61, 0x1429, 0x0000, 0x0000, 0x0000, 0x5198, 0x9d83,\n-    0x1409, 0x0000, 0x0000, 0x0000, 0x0f7a, 0xa818, 0x13eb, 0x0000, 0x0000, 0x0000,\n-    0xc45e, 0xc06c, 0x13cc, 0x0000, 0x0000, 0x0000, 0x4ec0, 0xfa29, 0x13a8, 0x0000,\n-    0x0000, 0x0000, 0x6418, 0x8cad, 0x138c, 0x0000, 0x0000, 0x0000, 0xbcc8, 0xe7d1,\n-    0x136f, 0x0000, 0x0000, 0x0000, 0xc934, 0xf9b0, 0x134f, 0x0000, 0x0000, 0x0000,\n-    0x6ce0, 0x98df, 0x1331, 0x0000, 0x0000, 0x0000, 0x3516, 0xe5e9, 0x1312, 0x0000,\n-    0x0000, 0x0000, 0xc6c0, 0xef8b, 0x12ef, 0x0000, 0x0000, 0x0000, 0xaf02, 0x913d,\n-    0x12d4, 0x0000, 0x0000, 0x0000, 0xd230, 0xe1d5, 0x12b5, 0x0000, 0x0000, 0x0000,\n-    0xfba8, 0xc232, 0x1295, 0x0000, 0x0000, 0x0000, 0x7ba4, 0xabeb, 0x1277, 0x0000,\n-    0x0000, 0x0000, 0x6e5c, 0xc692, 0x1258, 0x0000, 0x0000, 0x0000, 0x76a2, 0x9756,\n-    0x1239, 0x0000, 0x0000, 0x0000, 0xe180, 0xe423, 0x1214, 0x0000, 0x0000, 0x0000,\n-    0x8c3c, 0x90f8, 0x11fb, 0x0000, 0x0000, 0x0000, 0x9f3c, 0x9fd2, 0x11dc, 0x0000,\n-    0x0000, 0x0000, 0x53e0, 0xb73e, 0x11bd, 0x0000, 0x0000, 0x0000, 0x45be, 0x88d6,\n-    0x119e, 0x0000, 0x0000, 0x0000, 0x111a, 0x8bc0, 0x117f, 0x0000, 0x0000, 0x0000,\n-    0xe26a, 0xd7ff, 0x1160, 0x0000, 0x0000, 0x0000, 0xfb60, 0xdd8d, 0x113f, 0x0000,\n-    0x0000, 0x0000, 0x9370, 0xc108, 0x1120, 0x0000, 0x0000, 0x0000, 0x9654, 0x8baf,\n-    0x1103, 0x0000, 0x0000, 0x0000, 0xd6ec, 0xd6b9, 0x10e4, 0x0000, 0x0000, 0x0000,\n-    0x23e4, 0xd7b7, 0x10c4, 0x0000, 0x0000, 0x0000, 0x1aa6, 0xa847, 0x10a6, 0x0000,\n-    0x0000, 0x0000, 0xbee6, 0x9fef, 0x1087, 0x0000, 0x0000, 0x0000, 0x26d0, 0xa6eb,\n-    0x1066, 0x0000, 0x0000, 0x0000, 0x5b86, 0xa880, 0x1049, 0x0000, 0x0000, 0x0000,\n-    0x125c, 0xd971, 0x1029, 0x0000, 0x0000, 0x0000, 0x1f78, 0x9d18, 0x100a, 0x0000,\n-    0x0000, 0x0000, 0x0e84, 0xb15b, 0x0feb, 0x0000, 0x0000, 0x0000, 0xd0c0, 0xc150,\n-    0x0fcc, 0x0000, 0x0000, 0x0000, 0xa330, 0xc40c, 0x0fad, 0x0000, 0x0000, 0x0000,\n-    0x5202, 0xfc2c, 0x0f8f, 0x0000, 0x0000, 0x0000, 0x3f7c, 0xecf5, 0x0f6f, 0x0000,\n-    0x0000, 0x0000, 0xef44, 0xfdfd, 0x0f50, 0x0000, 0x0000, 0x0000, 0x3f6c, 0xab1b,\n-    0x0f31, 0x0000, 0x0000, 0x0000, 0xf658, 0x89ec, 0x0f11, 0x0000, 0x0000, 0x0000,\n-    0xbfc8, 0x9ba8, 0x0ef4, 0x0000, 0x0000, 0x0000, 0x3d40, 0xbe21, 0x0ed5, 0x0000,\n-    0x0000, 0x0000, 0xbbc4, 0xc70d, 0x0eb6, 0x0000, 0x0000, 0x0000, 0x5158, 0xdb16,\n-    0x0e96, 0x0000, 0x0000, 0x0000, 0xb5a8, 0xa8d8, 0x0e78, 0x0000, 0x0000, 0x0000,\n-    0xcccc, 0xb40e, 0x0e58, 0x0000, 0x0000, 0x0000, 0x448c, 0xcb62, 0x0e3a, 0x0000,\n-    0x0000, 0x0000, 0xf12a, 0x8aed, 0x0e1b, 0x0000, 0x0000, 0x0000, 0x79d0, 0xc59c,\n-    0x0dfb, 0x0000, 0x0000, 0x0000, 0x06b4, 0xcdc9, 0x0ddd, 0x0000, 0x0000, 0x0000,\n-    0xae70, 0xa979, 0x0dbe, 0x0000, 0x0000, 0x0000, 0x317c, 0xa8fb, 0x0d9e, 0x0000,\n-    0x0000, 0x0000, 0x5fe0, 0x8a50, 0x0d7d, 0x0000, 0x0000, 0x0000, 0x70b6, 0xfdfa,\n-    0x0d61, 0x0000, 0x0000, 0x0000, 0x1640, 0x9dc7, 0x0d41, 0x0000, 0x0000, 0x0000,\n-    0x9a9c, 0xdc50, 0x0d23, 0x0000, 0x0000, 0x0000, 0x4fcc, 0x9a9b, 0x0d04, 0x0000,\n-    0x0000, 0x0000, 0x7e48, 0x8f77, 0x0ce5, 0x0000, 0x0000, 0x0000, 0x84e4, 0xd4b9,\n-    0x0cc6, 0x0000, 0x0000, 0x0000, 0x84e0, 0xbd10, 0x0ca6, 0x0000, 0x0000, 0x0000,\n-    0x1b0a, 0xc8d9, 0x0c88, 0x0000, 0x0000, 0x0000, 0x6a48, 0xfc81, 0x0c68, 0x0000,\n-    0x0000, 0x0000, 0x070a, 0xbef6, 0x0c4a, 0x0000, 0x0000, 0x0000, 0x8a70, 0xf096,\n-    0x0c2b, 0x0000, 0x0000, 0x0000, 0xecc2, 0xc994, 0x0c0c, 0x0000, 0x0000, 0x0000,\n-    0x1540, 0x9537, 0x0bea, 0x0000, 0x0000, 0x0000, 0x1b02, 0xab5b, 0x0bce, 0x0000,\n-    0x0000, 0x0000, 0x5dc0, 0xb0c8, 0x0bad, 0x0000, 0x0000, 0x0000, 0xc928, 0xe034,\n-    0x0b8f, 0x0000, 0x0000, 0x0000, 0x2d12, 0xb4b0, 0x0b71, 0x0000, 0x0000, 0x0000,\n-    0x8fc2, 0xbb94, 0x0b52, 0x0000, 0x0000, 0x0000, 0xe236, 0xe22f, 0x0b33, 0x0000,\n-    0x0000, 0x0000, 0xb97c, 0xbe9e, 0x0b13, 0x0000, 0x0000, 0x0000, 0xe1a6, 0xe16d,\n-    0x0af5, 0x0000, 0x0000, 0x0000, 0xd330, 0xbaf0, 0x0ad6, 0x0000, 0x0000, 0x0000,\n-    0xc0bc, 0xbbd0, 0x0ab7, 0x0000, 0x0000, 0x0000, 0x8e66, 0xdd9b, 0x0a98, 0x0000,\n-    0x0000, 0x0000, 0xc95c, 0xf799, 0x0a79, 0x0000, 0x0000, 0x0000, 0xdac0, 0xbe4c,\n-    0x0a55, 0x0000, 0x0000, 0x0000, 0xafc0, 0xc378, 0x0a37, 0x0000, 0x0000, 0x0000,\n-    0xa880, 0xe341, 0x0a19, 0x0000, 0x0000, 0x0000, 0xc242, 0x81f6, 0x09fd, 0x0000,\n-    0x0000, 0x0000, 0x7470, 0xc777, 0x09de, 0x0000, 0x0000, 0x0000, 0x62bc, 0xb684,\n-    0x09be, 0x0000, 0x0000, 0x0000, 0x43ac, 0x8c58, 0x099f, 0x0000, 0x0000, 0x0000,\n-    0xcc3c, 0xf9ac, 0x0981, 0x0000, 0x0000, 0x0000, 0x1526, 0xb670, 0x0962, 0x0000,\n-    0x0000, 0x0000, 0xc9fe, 0xdf50, 0x0943, 0x0000, 0x0000, 0x0000, 0x6ae6, 0xc065,\n-    0x0924, 0x0000, 0x0000, 0x0000, 0xb114, 0xcf29, 0x0905, 0x0000, 0x0000, 0x0000,\n-    0xd388, 0x922a, 0x08e4, 0x0000, 0x0000, 0x0000, 0xcf54, 0xb926, 0x08c7, 0x0000,\n-    0x0000, 0x0000, 0x3826, 0xe855, 0x08a8, 0x0000, 0x0000, 0x0000, 0xe7c8, 0x829b,\n-    0x0888, 0x0000, 0x0000, 0x0000, 0x546c, 0xa903, 0x086a, 0x0000, 0x0000, 0x0000,\n-    0x8768, 0x99cc, 0x0849, 0x0000, 0x0000, 0x0000, 0x00ac, 0xf529, 0x082b, 0x0000,\n-    0x0000, 0x0000, 0x2658, 0x9f0b, 0x080c, 0x0000, 0x0000, 0x0000, 0xfe5c, 0x9e21,\n-    0x07ee, 0x0000, 0x0000, 0x0000, 0x6da2, 0x9910, 0x07cf, 0x0000, 0x0000, 0x0000,\n-    0x9220, 0xf9b3, 0x07b0, 0x0000, 0x0000, 0x0000, 0x3d90, 0xa541, 0x0791, 0x0000,\n-    0x0000, 0x0000, 0x6e4c, 0xe7cc, 0x0771, 0x0000, 0x0000, 0x0000, 0xa8fa, 0xe80a,\n-    0x0753, 0x0000, 0x0000, 0x0000, 0x4e14, 0xc3a7, 0x0734, 0x0000, 0x0000, 0x0000,\n-    0xf7e0, 0xbad9, 0x0712, 0x0000, 0x0000, 0x0000, 0xfea0, 0xeff2, 0x06f5, 0x0000,\n-    0x0000, 0x0000, 0xcef6, 0xbd48, 0x06d7, 0x0000, 0x0000, 0x0000, 0x7544, 0xf559,\n-    0x06b7, 0x0000, 0x0000, 0x0000, 0x2388, 0xf655, 0x0698, 0x0000, 0x0000, 0x0000,\n-    0xe900, 0xad56, 0x0676, 0x0000, 0x0000, 0x0000, 0x2cc0, 0x8437, 0x0659, 0x0000,\n-    0x0000, 0x0000, 0x3068, 0xc544, 0x063b, 0x0000, 0x0000, 0x0000, 0xdc70, 0xe73c,\n-    0x061b, 0x0000, 0x0000, 0x0000, 0xee50, 0x9d49, 0x05fc, 0x0000, 0x0000, 0x0000,\n-    0x93d2, 0x81f6, 0x05df, 0x0000, 0x0000, 0x0000, 0x941c, 0xadff, 0x05bf, 0x0000,\n-    0x0000, 0x0000, 0x2ce2, 0x8e45, 0x05a1, 0x0000, 0x0000, 0x0000, 0x4a60, 0x95fd,\n-    0x0581, 0x0000, 0x0000, 0x0000, 0x79f8, 0xb83a, 0x0563, 0x0000, 0x0000, 0x0000,\n-    0xcb58, 0xa1f5, 0x0543, 0x0000, 0x0000, 0x0000, 0x2a3a, 0xdc36, 0x0525, 0x0000,\n-    0x0000, 0x0000, 0x14ee, 0x890e, 0x0506, 0x0000, 0x0000, 0x0000, 0x8f20, 0xc432,\n-    0x04e3, 0x0000, 0x0000, 0x0000, 0x8440, 0xb21d, 0x04c6, 0x0000, 0x0000, 0x0000,\n-    0x5430, 0xf698, 0x04a7, 0x0000, 0x0000, 0x0000, 0x04ae, 0x8b20, 0x048a, 0x0000,\n-    0x0000, 0x0000, 0x04d0, 0xe872, 0x046b, 0x0000, 0x0000, 0x0000, 0xc78e, 0x8893,\n-    0x044c, 0x0000, 0x0000, 0x0000, 0x0f78, 0x9895, 0x042b, 0x0000, 0x0000, 0x0000,\n-    0x11d4, 0xdf2e, 0x040d, 0x0000, 0x0000, 0x0000, 0xe84c, 0x89d5, 0x03ef, 0x0000,\n-    0x0000, 0x0000, 0xf7be, 0x8a67, 0x03d0, 0x0000, 0x0000, 0x0000, 0x95d0, 0xc906,\n-    0x03b1, 0x0000, 0x0000, 0x0000, 0x64ce, 0xd96c, 0x0392, 0x0000, 0x0000, 0x0000,\n-    0x97ba, 0xa16f, 0x0373, 0x0000, 0x0000, 0x0000, 0x463c, 0xc51a, 0x0354, 0x0000,\n-    0x0000, 0x0000, 0xef0a, 0xe93e, 0x0335, 0x0000, 0x0000, 0x0000, 0x526a, 0xa466,\n-    0x0316, 0x0000, 0x0000, 0x0000, 0x4140, 0xa94d, 0x02f5, 0x0000, 0x0000, 0x0000,\n-    0xb4ec, 0xce68, 0x02d8, 0x0000, 0x0000, 0x0000, 0x4fa2, 0x8490, 0x02b9, 0x0000,\n-    0x0000, 0x0000, 0x4e60, 0xca98, 0x0298, 0x0000, 0x0000, 0x0000, 0x08dc, 0xe09c,\n-    0x027a, 0x0000, 0x0000, 0x0000, 0x2b90, 0xc7e3, 0x025c, 0x0000, 0x0000, 0x0000,\n-    0x5a7c, 0xf8ef, 0x023c, 0x0000, 0x0000, 0x0000, 0x5022, 0x9d58, 0x021e, 0x0000,\n-    0x0000, 0x0000, 0x553a, 0xe242, 0x01ff, 0x0000, 0x0000, 0x0000, 0x7e6e, 0xb54d,\n-    0x01e0, 0x0000, 0x0000, 0x0000, 0xd2d4, 0xa88c, 0x01c1, 0x0000, 0x0000, 0x0000,\n-    0x75b6, 0xfe6d, 0x01a2, 0x0000, 0x0000, 0x0000, 0x3bb2, 0xf04c, 0x0183, 0x0000,\n-    0x0000, 0x0000, 0xc2d0, 0xc046, 0x0163, 0x0000, 0x0000, 0x0000, 0x250c, 0xf9d6,\n-    0x0145, 0x0000, 0x0000, 0x0000, 0xb7b4, 0x8a0d, 0x0126, 0x0000, 0x0000, 0x0000,\n-    0x1a72, 0xe4f5, 0x0107, 0x0000, 0x0000, 0x0000, 0x825c, 0xa9b8, 0x00e8, 0x0000,\n-    0x0000, 0x0000, 0x6c90, 0xc9ad, 0x00c6, 0x0000, 0x0000, 0x0000, 0x4d00, 0xd1bb,\n-    0x00aa, 0x0000, 0x0000, 0x0000, 0xa4a0, 0xee01, 0x0087, 0x0000, 0x0000, 0x0000,\n-    0x89a8, 0xbe9f, 0x006b, 0x0000, 0x0000, 0x0000, 0x038e, 0xc80c, 0x004d, 0x0000,\n-    0x0000, 0x0000, 0xfe26, 0x8384, 0x002e, 0x0000, 0x0000, 0x0000, 0xcd90, 0xca57,\n-    0x000e, 0x0000\n-};\n-\n-void MacroAssembler::libm_reduce_pi04l(Register eax, Register ecx, Register edx, Register ebx, Register esi, Register edi, Register ebp, Register esp) {\n-  Label B1_1, B1_2, B1_3, B1_4, B1_5, B1_6, B1_7, B1_8, B1_9, B1_10, B1_11, B1_12;\n-  Label B1_13, B1_14, B1_15;\n-\n-  assert_different_registers(ebx, eax, ecx, edx, esi, edi, ebp, esp);\n-\n-  address zero_none  = (address)_zero_none;\n-  address _4onpi_d   = (address)__4onpi_d;\n-  address TWO_32H    = (address)_TWO_32H;\n-  address pi04_3d    = (address)_pi04_3d;\n-  address pi04_5d    = (address)_pi04_5d;\n-  address SCALE      = (address)_SCALE;\n-  address zeros      = (address)_zeros;\n-  address pi04_2d    = (address)_pi04_2d;\n-  address TWO_12H    = (address)_TWO_12H;\n-  address _4onpi_31l = (address)__4onpi_31l;\n-\n-  bind(B1_1);\n-  push(ebp);\n-  movl(ebp, esp);\n-  andl(esp, -16);\n-  push(esi);\n-  push(edi);\n-  push(ebx);\n-  subl(esp, 20);\n-  movzwl(ebx, Address(ebp, 16));\n-  andl(ebx, 32767);\n-  movl(eax, Address(ebp, 20));\n-  cmpl(ebx, 16413);\n-  movl(esi, Address(ebp, 24));\n-  movl(Address(esp, 4), eax);\n-  jcc(Assembler::greaterEqual, B1_8);\n-\n-  bind(B1_2);\n-  fld_x(Address(ebp, 8));\n-  fld_d(ExternalAddress(_4onpi_d));    \/\/0x6dc9c883UL, 0x3ff45f30UL\n-  fmul(1);\n-  fstp_x(Address(esp, 8));\n-  movzwl(ecx, Address(esp, 16));\n-  negl(ecx);\n-  addl(ecx, 30);\n-  movl(eax, Address(esp, 12));\n-  shrl(eax);\n-  cmpl(Address(esp, 4), 0);\n-  jcc(Assembler::notEqual, B1_4);\n-\n-  bind(B1_3);\n-  lea(ecx, Address(eax, 1));\n-  andl(ecx, -2);\n-  jmp(B1_5);\n-\n-  bind(B1_4);\n-  movl(ecx, eax);\n-  addl(eax, Address(esp, 4));\n-  movl(edx, eax);\n-  andl(edx, 1);\n-  addl(ecx, edx);\n-\n-  bind(B1_5);\n-  fld_d(ExternalAddress(TWO_32H));    \/\/0x00000000UL, 0x41f80000UL\n-  cmpl(ebx, 16400);\n-  movl(Address(esp, 0), ecx);\n-  fild_s(Address(esp, 0));\n-  jcc(Assembler::greaterEqual, B1_7);\n-\n-  bind(B1_6);\n-  fld_d(ExternalAddress(pi04_3d));    \/\/0x54442d00UL, 0x3fe921fbUL\n-  fmul(1);\n-  fsubp(3);\n-  fxch(1);\n-  fmul(2);\n-  fld_s(2);\n-  fadd(1);\n-  fsubrp(1);\n-  fld_s(0);\n-  fxch(1);\n-  fsuba(3);\n-  fld_d(ExternalAddress(8 + pi04_3d));    \/\/0x98cc5180UL, 0x3ce84698UL\n-  fmul(3);\n-  fsuba(2);\n-  fxch(1);\n-  fsub(2);\n-  fsubrp(1);\n-  faddp(3);\n-  fld_d(ExternalAddress(16 + pi04_3d));    \/\/0xcbb5bf6cUL, 0xb9dfc8f8UL\n-  fmulp(2);\n-  fld_s(1);\n-  fsubr(1);\n-  fsuba(1);\n-  fxch(2);\n-  fsubp(1);\n-  faddp(2);\n-  fxch(1);\n-  jmp(B1_15);\n-\n-  bind(B1_7);\n-  fld_d(ExternalAddress(pi04_5d));    \/\/0x54400000UL, 0x3fe921fbUL\n-  fmul(1);\n-  fsubp(3);\n-  fxch(1);\n-  fmul(2);\n-  fld_s(2);\n-  fadd(1);\n-  fsubrp(1);\n-  fld_s(0);\n-  fxch(1);\n-  fsuba(3);\n-  fld_d(ExternalAddress(8 + pi04_5d));    \/\/0x1a600000UL, 0x3dc0b461UL\n-  fmul(3);\n-  fsuba(2);\n-  fxch(1);\n-  fsub(2);\n-  fsubrp(1);\n-  faddp(3);\n-  fld_d(ExternalAddress(16 + pi04_5d));    \/\/0x2e000000UL, 0x3b93198aUL\n-  fmul(2);\n-  fld_s(0);\n-  fsubr(2);\n-  fsuba(2);\n-  fxch(1);\n-  fsubp(2);\n-  fxch(1);\n-  faddp(3);\n-  fld_d(ExternalAddress(24 + pi04_5d));    \/\/0x25200000UL, 0x396b839aUL\n-  fmul(2);\n-  fld_s(0);\n-  fsubr(2);\n-  fsuba(2);\n-  fxch(1);\n-  fsubp(2);\n-  fxch(1);\n-  faddp(3);\n-  fld_d(ExternalAddress(32 + pi04_5d));    \/\/0x533e63a0UL, 0x37027044UL\n-  fmulp(2);\n-  fld_s(1);\n-  fsubr(1);\n-  fsuba(1);\n-  fxch(2);\n-  fsubp(1);\n-  faddp(2);\n-  fxch(1);\n-  jmp(B1_15);\n-\n-  bind(B1_8);\n-  fld_x(Address(ebp, 8));\n-  addl(ebx, -16417);\n-  fmul_d(as_Address(ExternalAddress(SCALE)));    \/\/0x00000000UL, 0x32600000UL\n-  movl(eax, -2078209981);\n-  imull(ebx);\n-  addl(edx, ebx);\n-  movl(ecx, ebx);\n-  sarl(edx, 4);\n-  sarl(ecx, 31);\n-  subl(edx, ecx);\n-  movl(eax, edx);\n-  shll(eax, 5);\n-  fstp_x(Address(ebp, 8));\n-  fld_x(Address(ebp, 8));\n-  subl(eax, edx);\n-  movl(Address(ebp, 8), 0);\n-  subl(ebx, eax);\n-  fld_x(Address(ebp, 8));\n-  cmpl(ebx, 17);\n-  fsuba(1);\n-  jcc(Assembler::less, B1_10);\n-\n-  bind(B1_9);\n-  lea(eax, Address(noreg, edx, Address::times_8));\n-  lea(ecx, Address(eax, edx, Address::times_4));\n-  incl(edx);\n-  fld_x(Address(_4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n-  fmul(2);\n-  fld_x(Address(12 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n-  fmul(2);\n-  fld_s(0);\n-  fadd(2);\n-  fsuba(2);\n-  fxch(1);\n-  faddp(2);\n-  fld_s(1);\n-  fadd(1);\n-  fstp_x(Address(esp, 8));\n-  andl(Address(esp, 8), -16777216);\n-  fld_x(Address(esp, 8));\n-  fsubp(1);\n-  jmp(B1_11);\n-\n-  bind(B1_10);\n-  fld_d(ExternalAddress(zeros));    \/\/0x00000000UL, 0x00000000UL\n-  fld_s(0);\n-\n-  bind(B1_11);\n-  fld_s(0);\n-  lea(eax, Address(noreg, edx, Address::times_8));\n-  fld_s(3);\n-  lea(edx, Address(eax, edx, Address::times_4));\n-  fld_x(Address(_4onpi_31l, RelocationHolder::none).plus_disp(edx, Address::times_1));\n-  fmul(6);\n-  movl(Address(esp, 0), edx);\n-  fadda(2);\n-  fxch(2);\n-  fsuba(3);\n-  fxch(2);\n-  faddp(3);\n-  fxch(2);\n-  faddp(3);\n-  fld_x(Address(12 + _4onpi_31l, RelocationHolder::none).plus_disp(edx, Address::times_1));\n-  fmula(2);\n-  fld_s(2);\n-  fadd(2);\n-  fld_s(0);\n-  fxch(1);\n-  fsubra(3);\n-  fxch(3);\n-  fchs();\n-  faddp(4);\n-  fxch(3);\n-  faddp(4);\n-  fxch(2);\n-  fadd(3);\n-  fxch(2);\n-  fmul(5);\n-  fadda(2);\n-  fld_s(4);\n-  fld_x(Address(24 + _4onpi_31l, RelocationHolder::none).plus_disp(edx, Address::times_1));\n-  fmula(1);\n-  fxch(1);\n-  fadda(4);\n-  fxch(4);\n-  fstp_x(Address(esp, 8));\n-  movzwl(ebx, Address(esp, 16));\n-  andl(ebx, 32767);\n-  cmpl(ebx, 16415);\n-  jcc(Assembler::greaterEqual, B1_13);\n-\n-  bind(B1_12);\n-  negl(ebx);\n-  addl(ebx, 30);\n-  movl(ecx, ebx);\n-  movl(eax, Address(esp, 12));\n-  shrl(eax);\n-  shll(eax);\n-  movl(Address(esp, 12), eax);\n-  movl(Address(esp, 8), 0);\n-  shrl(eax);\n-  jmp(B1_14);\n-\n-  bind(B1_13);\n-  negl(ebx);\n-  addl(ebx, 30);\n-  movl(ecx, ebx);\n-  movl(edx, Address(esp, 8));\n-  shrl(edx);\n-  shll(edx);\n-  negl(ecx);\n-  movl(eax, Address(esp, 12));\n-  shll(eax);\n-  movl(ecx, ebx);\n-  movl(Address(esp, 8), edx);\n-  shrl(edx);\n-  orl(eax, edx);\n-\n-  bind(B1_14);\n-  fld_x(Address(esp, 8));\n-  addl(eax, Address(esp, 4));\n-  fsubp(3);\n-  fmul(6);\n-  fld_s(4);\n-  movl(edx, eax);\n-  andl(edx, 1);\n-  fadd(3);\n-  movl(ecx, Address(esp, 0));\n-  fsuba(3);\n-  fxch(3);\n-  faddp(5);\n-  fld_s(1);\n-  fxch(3);\n-  fadd_d(Address(zero_none, RelocationHolder::none).plus_disp(edx, Address::times_8));\n-  fadda(3);\n-  fsub(3);\n-  faddp(2);\n-  fxch(1);\n-  faddp(4);\n-  fld_s(2);\n-  fadd(2);\n-  fsuba(2);\n-  fxch(3);\n-  faddp(2);\n-  fxch(1);\n-  faddp(3);\n-  fld_s(0);\n-  fadd(2);\n-  fsuba(2);\n-  fxch(1);\n-  faddp(2);\n-  fxch(1);\n-  faddp(2);\n-  fld_s(2);\n-  fld_x(Address(36 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n-  fmula(1);\n-  fld_s(1);\n-  fadd(3);\n-  fsuba(3);\n-  fxch(2);\n-  faddp(3);\n-  fxch(2);\n-  faddp(3);\n-  fxch(1);\n-  fmul(4);\n-  fld_s(0);\n-  fadd(2);\n-  fsuba(2);\n-  fxch(1);\n-  faddp(2);\n-  fxch(1);\n-  faddp(2);\n-  fld_s(2);\n-  fld_x(Address(48 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n-  fmula(1);\n-  fld_s(1);\n-  fadd(3);\n-  fsuba(3);\n-  fxch(2);\n-  faddp(3);\n-  fxch(2);\n-  faddp(3);\n-  fld_s(3);\n-  fxch(2);\n-  fmul(5);\n-  fld_x(Address(60 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n-  fmula(3);\n-  fxch(3);\n-  faddp(1);\n-  fld_s(0);\n-  fadd(2);\n-  fsuba(2);\n-  fxch(1);\n-  faddp(2);\n-  fxch(1);\n-  faddp(3);\n-  fld_s(3);\n-  fxch(2);\n-  fmul(5);\n-  fld_x(Address(72 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n-  fmula(3);\n-  fxch(3);\n-  faddp(1);\n-  fld_s(0);\n-  fadd(2);\n-  fsuba(2);\n-  fxch(1);\n-  faddp(2);\n-  fxch(1);\n-  faddp(3);\n-  fxch(1);\n-  fmulp(4);\n-  fld_x(Address(84 + _4onpi_31l, RelocationHolder::none).plus_disp(ecx, Address::times_1));\n-  fmulp(3);\n-  fxch(2);\n-  faddp(3);\n-  fld_s(2);\n-  fadd(2);\n-  fld_d(ExternalAddress(TWO_32H));    \/\/0x00000000UL, 0x41f80000UL\n-  fmul(1);\n-  fadda(1);\n-  fsubp(1);\n-  fsuba(2);\n-  fxch(3);\n-  faddp(2);\n-  faddp(1);\n-  fld_d(ExternalAddress(pi04_2d));    \/\/0x54400000UL, 0x3fe921fbUL\n-  fld_s(0);\n-  fmul(2);\n-  fxch(2);\n-  fadd(3);\n-  fxch(1);\n-  fmulp(3);\n-  fmul_d(as_Address(ExternalAddress(8 + pi04_2d)));    \/\/0x1a626331UL, 0x3dc0b461UL\n-  faddp(1);\n-\n-  bind(B1_15);\n-  fld_d(ExternalAddress(TWO_12H));    \/\/0x00000000UL, 0x40b80000UL\n-  fld_s(2);\n-  fadd(2);\n-  fmula(1);\n-  fstp_x(Address(esp, 8));\n-  fld_x(Address(esp, 8));\n-  fadd(1);\n-  fsubrp(1);\n-  fst_d(Address(esi, 0));\n-  fsubp(2);\n-  faddp(1);\n-  fstp_d(Address(esi, 8));\n-  addl(esp, 20);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-}\n-\n-\n-ATTRIBUTE_ALIGNED(16) jushort _SP[] =\n-{\n-    0xaaab, 0xaaaa, 0xaaaa, 0xaaaa, 0xbffc, 0x0000, 0x8887, 0x8888, 0x8888, 0x8888,\n-    0x3ff8, 0x0000, 0xc527, 0x0d00, 0x00d0, 0xd00d, 0xbff2, 0x0000, 0x45f6, 0xb616,\n-    0x1d2a, 0xb8ef, 0x3fec, 0x0000, 0x825b, 0x3997, 0x2b3f, 0xd732, 0xbfe5, 0x0000,\n-    0xbf33, 0x8bb4, 0x2fda, 0xb092, 0x3fde, 0x0000, 0x44a6, 0xed1a, 0x29ef, 0xd73e,\n-    0xbfd6, 0x0000, 0x8610, 0x307f, 0x62a1, 0xc921, 0x3fce, 0x0000\n-};\n-\n-ATTRIBUTE_ALIGNED(16) jushort _CP[] =\n-{\n-    0x0000, 0x0000, 0x0000, 0x8000, 0xbffe, 0x0000, 0xaaa5, 0xaaaa, 0xaaaa, 0xaaaa,\n-    0x3ffa, 0x0000, 0x9c2f, 0x0b60, 0x60b6, 0xb60b, 0xbff5, 0x0000, 0xf024, 0x0cac,\n-    0x00d0, 0xd00d, 0x3fef, 0x0000, 0x03fe, 0x3f65, 0x7dbb, 0x93f2, 0xbfe9, 0x0000,\n-    0xd84d, 0xadee, 0xc698, 0x8f76, 0x3fe2, 0x0000, 0xdaba, 0xfe79, 0xea36, 0xc9c9,\n-    0xbfda, 0x0000, 0x3ac6, 0x0ba0, 0x07ce, 0xd585, 0x3fd2, 0x0000\n-};\n-\n-void MacroAssembler::libm_sincos_huge(XMMRegister xmm0, XMMRegister xmm1, Register eax, Register ecx, Register edx, Register ebx, Register esi, Register edi, Register ebp, Register esp) {\n-  Label B1_1, B1_2, B1_3, B1_4, B1_5, B1_6, B1_7, B1_8, B1_9, B1_10, B1_11, B1_12;\n-  Label B1_13, B1_14, B1_15, B1_16, B1_17, B1_18, B1_19, B1_20, B1_21, B1_22, B1_23;\n-  Label B1_24, B1_25, B1_26, B1_27, B1_28, B1_29, B1_30, B1_31, B1_32, B1_33, B1_34;\n-  Label B1_35, B1_36, B1_37, B1_38, B1_39, B1_40, B1_41, B1_42, B1_43, B1_46;\n-\n-  assert_different_registers(ebx, eax, ecx, edx, esi, edi, ebp, esp);\n-\n-  address CP = (address)_CP;\n-  address SP = (address)_SP;\n-\n-  bind(B1_1);\n-  push(ebp);\n-  movl(ebp, esp);\n-  andl(esp, -64);\n-  push(esi);\n-  push(edi);\n-  push(ebx);\n-  subl(esp, 52);\n-  movl(eax, Address(ebp, 16));\n-  movl(edx, Address(ebp, 20));\n-  movl(Address(esp, 32), eax);\n-  movl(Address(esp, 36), edx);\n-\n-  bind(B1_2);\n-  fnstcw(Address(esp, 30));\n-\n-  bind(B1_3);\n-  movsd(xmm1, Address(ebp, 8));\n-  movl(esi, Address(ebp, 12));\n-  movl(eax, esi);\n-  andl(eax, 2147483647);\n-  andps(xmm1, ExternalAddress(L_2IL0FLOATPACKET_0));    \/\/0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n-  shrl(esi, 31);\n-  movl(Address(esp, 40), eax);\n-  cmpl(eax, 1104150528);\n-  movsd(Address(ebp, 8), xmm1);\n-  jcc(Assembler::aboveEqual, B1_11);\n-\n-  bind(B1_4);\n-  movsd(xmm0, ExternalAddress(PI4_INV));    \/\/0x6dc9c883UL, 0x3ff45f30UL\n-  mulsd(xmm0, xmm1);\n-  movzwl(edx, Address(esp, 30));\n-  movl(eax, edx);\n-  andl(eax, 768);\n-  movsd(Address(esp, 0), xmm0);\n-  cmpl(eax, 768);\n-  jcc(Assembler::equal, B1_42);\n-\n-  bind(B1_5);\n-  orl(edx, -64768);\n-  movw(Address(esp, 28), edx);\n-\n-  bind(B1_6);\n-  fldcw(Address(esp, 28));\n-\n-  bind(B1_7);\n-  movsd(xmm1, Address(ebp, 8));\n-  movl(ebx, 1);\n-\n-  bind(B1_8);\n-  movl(Address(esp, 12), ebx);\n-  movl(ebx, Address(esp, 4));\n-  movl(eax, ebx);\n-  movl(Address(esp, 8), esi);\n-  movl(esi, ebx);\n-  shrl(esi, 20);\n-  andl(eax, 1048575);\n-  movl(ecx, esi);\n-  orl(eax, 1048576);\n-  negl(ecx);\n-  movl(edx, eax);\n-  addl(ecx, 19);\n-  addl(esi, 13);\n-  movl(Address(esp, 24), ecx);\n-  shrl(edx);\n-  movl(ecx, esi);\n-  shll(eax);\n-  movl(ecx, Address(esp, 24));\n-  movl(esi, Address(esp, 0));\n-  shrl(esi);\n-  orl(eax, esi);\n-  cmpl(ebx, 1094713344);\n-  movsd(Address(esp, 16), xmm1);\n-  fld_d(Address(esp, 16));\n-  cmov32(Assembler::below, eax, edx);\n-  movl(esi, Address(esp, 8));\n-  lea(edx, Address(eax, 1));\n-  movl(ebx, edx);\n-  andl(ebx, -2);\n-  movl(Address(esp, 16), ebx);\n-  fild_s(Address(esp, 16));\n-  movl(ebx, Address(esp, 12));\n-  cmpl(Address(esp, 40), 1094713344);\n-  jcc(Assembler::aboveEqual, B1_10);\n-\n-  bind(B1_9);\n-  fld_d(ExternalAddress(PI4X3));    \/\/0x54443000UL, 0xbfe921fbUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X3 + 8));    \/\/0x3b39a000UL, 0x3d373dcbUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X3 + 16));    \/\/0xe0e68948UL, 0xba845c06UL\n-  fmulp(1);\n-  faddp(1);\n-  jmp(B1_17);\n-\n-  bind(B1_10);\n-  fld_d(ExternalAddress(PI4X4));    \/\/0x54400000UL, 0xbfe921fbUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X4 + 8));    \/\/0x1a600000UL, 0xbdc0b461UL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X4 + 16));    \/\/0x2e000000UL, 0xbb93198aUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X4 + 24));    \/\/0x252049c1UL, 0xb96b839aUL\n-  fmulp(1);\n-  faddp(1);\n-  jmp(B1_17);\n-\n-  bind(B1_11);\n-  movzwl(edx, Address(esp, 30));\n-  movl(eax, edx);\n-  andl(eax, 768);\n-  cmpl(eax, 768);\n-  jcc(Assembler::equal, B1_43);\n-  bind(B1_12);\n-  orl(edx, -64768);\n-  movw(Address(esp, 28), edx);\n-\n-  bind(B1_13);\n-  fldcw(Address(esp, 28));\n-\n-  bind(B1_14);\n-  movsd(xmm1, Address(ebp, 8));\n-  movl(ebx, 1);\n-\n-  bind(B1_15);\n-  movsd(Address(esp, 16), xmm1);\n-  fld_d(Address(esp, 16));\n-  addl(esp, -32);\n-  lea(eax, Address(esp, 32));\n-  fstp_x(Address(esp, 0));\n-  movl(Address(esp, 12), 0);\n-  movl(Address(esp, 16), eax);\n-  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_reduce_pi04l())));\n-\n-  bind(B1_46);\n-  addl(esp, 32);\n-\n-  bind(B1_16);\n-  fld_d(Address(esp, 0));\n-  lea(edx, Address(eax, 1));\n-  fld_d(Address(esp, 8));\n-  faddp(1);\n-\n-  bind(B1_17);\n-  movl(ecx, edx);\n-  addl(eax, 3);\n-  shrl(ecx, 2);\n-  andl(ecx, 1);\n-  shrl(eax, 2);\n-  xorl(esi, ecx);\n-  movl(ecx, Address(esp, 36));\n-  andl(eax, 1);\n-  andl(ecx, 3);\n-  cmpl(ecx, 3);\n-  jcc(Assembler::notEqual, B1_25);\n-\n-  bind(B1_18);\n-  fld_x(ExternalAddress(84 + SP));    \/\/0x8610, 0x307f, 0x62\n-  fld_s(1);\n-  fmul((2));\n-  testb(edx, 2);\n-  fmula((1));\n-  fld_x(ExternalAddress(72 + SP));    \/\/0x44a6, 0xed1a, 0x29\n-  faddp(2);\n-  fmula(1);\n-  fld_x(ExternalAddress(60 + SP));    \/\/0xbf33, 0x8bb4, 0x2f\n-  faddp(2);\n-  fmula(1);\n-  fld_x(ExternalAddress(48 + SP));    \/\/0x825b, 0x3997, 0x2b\n-  faddp(2);\n-  fmula(1);\n-  fld_x(ExternalAddress(36 + SP));    \/\/0x45f6, 0xb616, 0x1d\n-  faddp(2);\n-  fmula(1);\n-  fld_x(ExternalAddress(24 + SP));    \/\/0xc527, 0x0d00, 0x00\n-  faddp(2);\n-  fmula(1);\n-  fld_x(ExternalAddress(12 + SP));    \/\/0x8887, 0x8888, 0x88\n-  faddp(2);\n-  fmula(1);\n-  fld_x(ExternalAddress(SP));    \/\/0xaaab, 0xaaaa, 0xaa\n-  faddp(2);\n-  fmula(1);\n-  fld_x(ExternalAddress(84 + CP));    \/\/0x3ac6, 0x0ba0, 0x07\n-  fmul(1);\n-  fld_x(ExternalAddress(72 + CP));    \/\/0xdaba, 0xfe79, 0xea\n-  faddp(1);\n-  fmul(1);\n-  fld_x(ExternalAddress(62 + CP));    \/\/0xd84d, 0xadee, 0xc6\n-  faddp(1);\n-  fmul(1);\n-  fld_x(ExternalAddress(48 + CP));    \/\/0x03fe, 0x3f65, 0x7d\n-  faddp(1);\n-  fmul(1);\n-  fld_x(ExternalAddress(36 + CP));    \/\/0xf024, 0x0cac, 0x00\n-  faddp(1);\n-  fmul(1);\n-  fld_x(ExternalAddress(24 + CP));    \/\/0x9c2f, 0x0b60, 0x60\n-  faddp(1);\n-  fmul(1);\n-  fld_x(ExternalAddress(12 + CP));    \/\/0xaaa5, 0xaaaa, 0xaa\n-  faddp(1);\n-  fmul(1);\n-  fld_x(ExternalAddress(CP));    \/\/0x0000, 0x0000, 0x00\n-  faddp(1);\n-  fmulp(1);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(esi, Address::times_8));\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  jcc(Assembler::equal, B1_22);\n-\n-  bind(B1_19);\n-  fmulp(4);\n-  testl(ebx, ebx);\n-  fxch(2);\n-  fmul(3);\n-  movl(eax, Address(esp, 2));\n-  faddp(3);\n-  fxch(2);\n-  fstp_d(Address(eax, 0));\n-  fmula(1);\n-  faddp(1);\n-  fstp_d(Address(eax, 8));\n-  jcc(Assembler::equal, B1_21);\n-\n-  bind(B1_20);\n-  fldcw(Address(esp, 30));\n-\n-  bind(B1_21);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_22);\n-  fxch(1);\n-  fmulp(4);\n-  testl(ebx, ebx);\n-  fxch(2);\n-  fmul(3);\n-  movl(eax, Address(esp, 32));\n-  faddp(3);\n-  fxch(2);\n-  fstp_d(Address(eax, 8));\n-  fmula(1);\n-  faddp(1);\n-  fstp_d(Address(eax, 0));\n-  jcc(Assembler::equal, B1_24);\n-\n-  bind(B1_23);\n-  fldcw(Address(esp, 30));\n-\n-  bind(B1_24);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_25);\n-  testb(Address(esp, 36), 2);\n-  jcc(Assembler::equal, B1_33);\n-\n-  bind(B1_26);\n-  fld_s(0);\n-  testb(edx, 2);\n-  fmul(1);\n-  fld_s(0);\n-  fmul(1);\n-  jcc(Assembler::equal, B1_30);\n-\n-  bind(B1_27);\n-  fstp_d(2);\n-  fld_x(ExternalAddress(84 + CP));    \/\/0x3ac6, 0x0ba0, 0x07\n-  testl(ebx, ebx);\n-  fmul(2);\n-  fld_x(ExternalAddress(72 + CP));    \/\/0xdaba, 0xfe79, 0xea\n-  fmul(3);\n-  fld_x(ExternalAddress(60 + CP));    \/\/0xd84d, 0xadee, 0xc6\n-  movl(eax, Address(rsp, 32));\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(48 + CP));    \/\/0x03fe, 0x3f65, 0x7d\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(36 + CP));    \/\/0xf024, 0x0cac, 0x00\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(24 + CP));    \/\/0x9c2f, 0x0b60, 0x60\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(12 + CP));    \/\/0xaaa5, 0xaaaa, 0xaa\n-  faddp(2);\n-  fxch(1);\n-  fmulp(3);\n-  fld_x(ExternalAddress(CP));    \/\/0x0000, 0x0000, 0x00\n-  faddp(1);\n-  fmulp(1);\n-  faddp(1);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(rsi, Address::times_8));\n-  fmula(1);\n-  faddp(1);\n-  fstp_d(Address(eax, 8));\n-  jcc(Assembler::equal, B1_29);\n-\n-  bind(B1_28);\n-  fldcw(Address(esp, 30));\n-\n-  bind(B1_29);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_30);\n-  fld_x(ExternalAddress(84 + SP));    \/\/0x8610, 0x307f, 0x62\n-  testl(ebx, ebx);\n-  fmul(1);\n-  fld_x(ExternalAddress(72 + SP));    \/\/0x44a6, 0xed1a, 0x29\n-  fmul(2);\n-  fld_x(ExternalAddress(60 + SP));    \/\/0xbf33, 0x8bb4, 0x2f\n-  movl(eax, Address(rsp, 32));\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(48 + SP));    \/\/0x825b, 0x3997, 0x2b\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(36 + SP));    \/\/0x45f6, 0xb616, 0x1d\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(24 + SP));    \/\/0xc527, 0x0d00, 0x00\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(12 + SP));    \/\/0x8887, 0x8888, 0x88\n-  faddp(2);\n-  fxch(1);\n-  fmulp(2);\n-  fld_x(ExternalAddress(SP));    \/\/0xaaab, 0xaaaa, 0xaa\n-  faddp(1);\n-  fmulp(2);\n-  faddp(1);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(rsi, Address::times_8));\n-  fmulp(2);\n-  fmul(1);\n-  faddp(1);\n-  fstp_d(Address(eax, 8));\n-  jcc(Assembler::equal, B1_32);\n-\n-  bind(B1_31);\n-  fldcw(Address(esp, 30));\n-\n-  bind(B1_32);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_33);\n-  testb(Address(esp, 36), 1);\n-  jcc(Assembler::equal, B1_41);\n-\n-  bind(B1_34);\n-  fld_s(0);\n-  testb(edx, 2);\n-  fmul(1);\n-  fld_s(0);\n-  fmul(1);\n-  jcc(Assembler::equal, B1_38);\n-\n-  bind(B1_35);\n-  fld_x(ExternalAddress(84 + SP));    \/\/0x8610, 0x307f, 0x62\n-  testl(ebx, ebx);\n-  fmul(1);\n-  fld_x(ExternalAddress(72 + SP));    \/\/0x44a6, 0xed1a, 0x29\n-  fmul(2);\n-  fld_x(ExternalAddress(60 + SP));    \/\/0xbf33, 0x8bb4, 0x2f\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(48 + SP));    \/\/0x825b, 0x3997, 0x2b\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(36 + SP));    \/\/0x45f6, 0xb616, 0x1d\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(24 + SP));    \/\/0xc527, 0x0d00, 0x00\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(12 + SP));    \/\/0x8887, 0x8888, 0x88\n-  faddp(2);\n-  fxch(1);\n-  fmulp(2);\n-  fld_x(ExternalAddress(SP));    \/\/0xaaab, 0xaaaa, 0xaa\n-  faddp(1);\n-  fmulp(2);\n-  faddp(1);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmulp(2);\n-  fmul(1);\n-  movl(eax, Address(esp, 32));\n-  faddp(1);\n-  fstp_d(Address(eax, 0));\n-  jcc(Assembler::equal, B1_37);\n-\n-  bind(B1_36);\n-  fldcw(Address(esp, 30));\n-\n-  bind(B1_37);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_38);\n-  fstp_d(2);\n-  fld_x(ExternalAddress(84 + CP));    \/\/0x3ac6, 0x0ba0, 0x07\n-  testl(ebx, ebx);\n-  fmul(2);\n-  fld_x(ExternalAddress(72 + CP));    \/\/0xdaba, 0xfe79, 0xea\n-  fmul(3);\n-  fld_x(ExternalAddress(60 + CP));    \/\/0xd84d, 0xadee, 0xc6\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(48 + CP));    \/\/0x03fe, 0x3f65, 0x7d\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(36 + CP));    \/\/0xf024, 0x0cac, 0x00\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(24 + CP));    \/\/0x9c2f, 0x0b60, 0x60\n-  faddp(2);\n-  fxch(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(12 + CP));    \/\/0xaaa5, 0xaaaa, 0xaa\n-  faddp(2);\n-  fxch(1);\n-  fmulp(3);\n-  fld_x(ExternalAddress(CP));    \/\/0x0000, 0x0000, 0x00\n-  faddp(1);\n-  fmulp(1);\n-  faddp(1);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmula(1);\n-  movl(eax, Address(esp, 32));\n-  faddp(1);\n-  fstp_d(Address(eax, 0));\n-  jcc(Assembler::equal, B1_40);\n-\n-  bind(B1_39);\n-  fldcw(Address(esp, 30));\n-  bind(B1_40);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-  bind(B1_41);\n-  fstp_d(0);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-  bind(B1_42);\n-  xorl(ebx, ebx);\n-  jmp(B1_8);\n-  bind(B1_43);\n-  xorl(ebx, ebx);\n-  jmp(B1_15);\n-}\n-\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_sin[] =\n-{\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL, 0xbf73b92eUL,\n-    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n-    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL,\n-    0xc0000000UL, 0xbc626d19UL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL,\n-    0xbfa60beaUL, 0x2ed59f06UL, 0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL,\n-    0x00000000UL, 0x3ff00000UL, 0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL,\n-    0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL, 0x00000000UL, 0x3ff00000UL,\n-    0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL, 0x20000000UL,\n-    0x3c5e0d89UL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL, 0xbfc59267UL,\n-    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n-    0x3ff00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL,\n-    0x20000000UL, 0x3c68076aUL, 0x00000000UL, 0x3ff00000UL, 0x99fcef32UL,\n-    0x3fca8279UL, 0x667f3bcdUL, 0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL,\n-    0x00000000UL, 0x3fe00000UL, 0x94247758UL, 0x3fc133ccUL, 0x6b151741UL,\n-    0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL, 0x00000000UL, 0x3fe00000UL,\n-    0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL, 0xe0000000UL,\n-    0x3c39f630UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL, 0xbf9d4a2cUL,\n-    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n-    0x3fe00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0x3fed906bUL,\n-    0x20000000UL, 0x3c7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x76acf82dUL,\n-    0x3fa4a031UL, 0x56c62ddaUL, 0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL,\n-    0x00000000UL, 0x3fd00000UL, 0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL,\n-    0x3fef6297UL, 0x20000000UL, 0x3c756217UL, 0x00000000UL, 0x3fd00000UL,\n-    0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL, 0x3fefd88dUL, 0x40000000UL,\n-    0xbc887df6UL, 0x00000000UL, 0x3fc00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0x3fefd88dUL,\n-    0x40000000UL, 0xbc887df6UL, 0x00000000UL, 0xbfc00000UL, 0x0e5967d5UL,\n-    0x3fac1d1fUL, 0xcff75cb0UL, 0x3fef6297UL, 0x20000000UL, 0x3c756217UL,\n-    0x00000000UL, 0xbfd00000UL, 0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL,\n-    0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL, 0x00000000UL, 0xbfd00000UL,\n-    0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL, 0x3fed906bUL, 0x20000000UL,\n-    0x3c7457e6UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL, 0x3f9d4a2cUL,\n-    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n-    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL,\n-    0xe0000000UL, 0x3c39f630UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL,\n-    0xbfc133ccUL, 0x6b151741UL, 0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL,\n-    0x00000000UL, 0xbfe00000UL, 0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL,\n-    0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL, 0x00000000UL, 0xbfe00000UL,\n-    0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL, 0x20000000UL,\n-    0x3c68076aUL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL, 0x3fc59267UL,\n-    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n-    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL,\n-    0x20000000UL, 0x3c5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL,\n-    0x3fb37ca1UL, 0xa6aea963UL, 0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL,\n-    0x00000000UL, 0xbff00000UL, 0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL,\n-    0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL, 0x00000000UL, 0xbff00000UL,\n-    0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL, 0xc0000000UL,\n-    0xbc626d19UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL, 0x3f73b92eUL,\n-    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n-    0xbff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL,\n-    0x3f73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n-    0x00000000UL, 0xbff00000UL, 0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL,\n-    0xbfc8f8b8UL, 0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0xbff00000UL,\n-    0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL,\n-    0x3c75d28dUL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL, 0x3fb37ca1UL,\n-    0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL, 0x3c672cedUL, 0x00000000UL,\n-    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0xbfde2b5dUL,\n-    0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL,\n-    0x3fc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n-    0x00000000UL, 0xbff00000UL, 0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL,\n-    0xbfe44cf3UL, 0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0xbff00000UL,\n-    0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL,\n-    0x3c8bdd34UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL, 0xbfc133ccUL,\n-    0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL, 0x3c82c5e1UL, 0x00000000UL,\n-    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0xbfea9b66UL,\n-    0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL,\n-    0x3f9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n-    0x00000000UL, 0xbfe00000UL, 0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL,\n-    0xbfed906bUL, 0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0xbfe00000UL,\n-    0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL,\n-    0xbc8760b1UL, 0x00000000UL, 0xbfd00000UL, 0x0e5967d5UL, 0x3fac1d1fUL,\n-    0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL, 0xbc756217UL, 0x00000000UL,\n-    0xbfd00000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0xbfefd88dUL,\n-    0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0xbfc00000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL,\n-    0xbfefd88dUL, 0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0x3fc00000UL,\n-    0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL,\n-    0xbc756217UL, 0x00000000UL, 0x3fd00000UL, 0x76acf82dUL, 0x3fa4a031UL,\n-    0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL, 0xbc8760b1UL, 0x00000000UL,\n-    0x3fd00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0xbfed906bUL,\n-    0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL,\n-    0xbf9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n-    0x00000000UL, 0x3fe00000UL, 0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL,\n-    0xbfea9b66UL, 0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0x3fe00000UL,\n-    0x94247758UL, 0x3fc133ccUL, 0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL,\n-    0x3c82c5e1UL, 0x00000000UL, 0x3fe00000UL, 0x99fcef32UL, 0x3fca8279UL,\n-    0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL, 0x3c8bdd34UL, 0x00000000UL,\n-    0x3fe00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0xbfe44cf3UL,\n-    0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL,\n-    0xbfc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n-    0x00000000UL, 0x3ff00000UL, 0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL,\n-    0xbfde2b5dUL, 0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0x3ff00000UL,\n-    0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL,\n-    0x3c672cedUL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL, 0xbfa60beaUL,\n-    0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL, 0x3c75d28dUL, 0x00000000UL,\n-    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0xbfc8f8b8UL,\n-    0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL,\n-    0xbf73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n-    0x00000000UL, 0x3ff00000UL, 0x55555555UL, 0xbfc55555UL, 0x00000000UL,\n-    0xbfe00000UL, 0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL,\n-    0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL, 0xa556c734UL,\n-    0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL, 0x1a600000UL, 0x3d90b461UL,\n-    0x1a600000UL, 0x3d90b461UL, 0x54400000UL, 0x3fb921fbUL, 0x00000000UL,\n-    0x00000000UL, 0x2e037073UL, 0x3b63198aUL, 0x00000000UL, 0x00000000UL,\n-    0x6dc9c883UL, 0x40245f30UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x43380000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x43600000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x3c800000UL, 0x00000000UL,\n-    0x00000000UL, 0xffffffffUL, 0x3fefffffUL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x80000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x80000000UL, 0x00000000UL, 0x80000000UL, 0x00000000UL, 0x3fe00000UL,\n-    0x00000000UL, 0x3fe00000UL\n-};\n-\n-void MacroAssembler::fast_sin(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ebx, Register edx) {\n-\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2;\n-\n-  assert_different_registers(eax, ebx, edx);\n-\n-  address static_const_table_sin = (address)_static_const_table_sin;\n-\n-  subl(rsp, 120);\n-  movl(Address(rsp, 56), ebx);\n-  lea(ebx, ExternalAddress(static_const_table_sin));\n-  movsd(xmm0, Address(rsp, 128));\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  subl(eax, 12336);\n-  cmpl(eax, 4293);\n-  jcc(Assembler::above, L_2TAG_PACKET_0_0_2);\n-  movsd(xmm1, Address(ebx, 2160));\n-  mulsd(xmm1, xmm0);\n-  movsd(xmm5, Address(ebx, 2272));\n-  movdqu(xmm4, Address(ebx, 2256));\n-  pand(xmm4, xmm0);\n-  por(xmm5, xmm4);\n-  movsd(xmm3, Address(ebx, 2128));\n-  movdqu(xmm2, Address(ebx, 2112));\n-  addpd(xmm1, xmm5);\n-  cvttsd2sil(edx, xmm1);\n-  cvtsi2sdl(xmm1, edx);\n-  mulsd(xmm3, xmm1);\n-  unpcklpd(xmm1, xmm1);\n-  addl(edx, 1865216);\n-  movdqu(xmm4, xmm0);\n-  andl(edx, 63);\n-  movdqu(xmm5, Address(ebx, 2096));\n-  lea(eax, Address(ebx, 0));\n-  shll(edx, 5);\n-  addl(eax, edx);\n-  mulpd(xmm2, xmm1);\n-  subsd(xmm0, xmm3);\n-  mulsd(xmm1, Address(ebx, 2144));\n-  subsd(xmm4, xmm3);\n-  movsd(xmm7, Address(eax, 8));\n-  unpcklpd(xmm0, xmm0);\n-  movapd(xmm3, xmm4);\n-  subsd(xmm4, xmm2);\n-  mulpd(xmm5, xmm0);\n-  subpd(xmm0, xmm2);\n-  movdqu(xmm6, Address(ebx, 2064));\n-  mulsd(xmm7, xmm4);\n-  subsd(xmm3, xmm4);\n-  mulpd(xmm5, xmm0);\n-  mulpd(xmm0, xmm0);\n-  subsd(xmm3, xmm2);\n-  movdqu(xmm2, Address(eax, 0));\n-  subsd(xmm1, xmm3);\n-  movsd(xmm3, Address(eax, 24));\n-  addsd(xmm2, xmm3);\n-  subsd(xmm7, xmm2);\n-  mulsd(xmm2, xmm4);\n-  mulpd(xmm6, xmm0);\n-  mulsd(xmm3, xmm4);\n-  mulpd(xmm2, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm5, Address(ebx, 2080));\n-  mulsd(xmm4, Address(eax, 0));\n-  addpd(xmm6, Address(ebx, 2048));\n-  mulpd(xmm5, xmm0);\n-  movapd(xmm0, xmm3);\n-  addsd(xmm3, Address(eax, 8));\n-  mulpd(xmm1, xmm7);\n-  movapd(xmm7, xmm4);\n-  addsd(xmm4, xmm3);\n-  addpd(xmm6, xmm5);\n-  movsd(xmm5, Address(eax, 8));\n-  subsd(xmm5, xmm3);\n-  subsd(xmm3, xmm4);\n-  addsd(xmm1, Address(eax, 16));\n-  mulpd(xmm6, xmm2);\n-  addsd(xmm5, xmm0);\n-  addsd(xmm3, xmm7);\n-  addsd(xmm1, xmm5);\n-  addsd(xmm1, xmm3);\n-  addsd(xmm1, xmm6);\n-  unpckhpd(xmm6, xmm6);\n-  addsd(xmm1, xmm6);\n-  addsd(xmm4, xmm1);\n-  movsd(Address(rsp, 0), xmm4);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n-  shrl(eax, 4);\n-  cmpl(eax, 268434685);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_3_0_2);\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  movsd(xmm3, Address(ebx, 2192));\n-  mulsd(xmm3, xmm0);\n-  subsd(xmm3, xmm0);\n-  mulsd(xmm3, Address(ebx, 2208));\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movl(eax, Address(rsp, 132));\n-  andl(eax, 2146435072);\n-  cmpl(eax, 2146435072);\n-  jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n-  subl(rsp, 32);\n-  movsd(Address(rsp, 0), xmm0);\n-  lea(eax, Address(rsp, 40));\n-  movl(Address(rsp, 8), eax);\n-  movl(eax, 2);\n-  movl(Address(rsp, 12), eax);\n-  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_sin_cos_huge())));\n-  addl(rsp, 32);\n-  fld_d(Address(rsp, 16));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-  bind(L_2TAG_PACKET_4_0_2);\n-  fld_d(Address(rsp, 128));\n-  fmul_d(Address(ebx, 2240));\n-  bind(L_2TAG_PACKET_1_0_2);\n-  movl(ebx, Address(rsp, 56));\n-}\n-#endif \/\/ _LP64\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_sin.cpp","additions":0,"deletions":2203,"binary":false,"changes":2203,"status":"deleted"},{"patch":"@@ -1,2093 +0,0 @@\n-\/*\n-* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n-* Intel Math Library (LIBM) Source Code\n-*\n-* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-*\n-* This code is free software; you can redistribute it and\/or modify it\n-* under the terms of the GNU General Public License version 2 only, as\n-* published by the Free Software Foundation.\n-*\n-* This code is distributed in the hope that it will be useful, but WITHOUT\n-* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-* version 2 for more details (a copy is included in the LICENSE file that\n-* accompanied this code).\n-*\n-* You should have received a copy of the GNU General Public License version\n-* 2 along with this work; if not, write to the Free Software Foundation,\n-* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-*\n-* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-* or visit www.oracle.com if you need additional information or have any\n-* questions.\n-*\n-*\/\n-\n-#include \"precompiled.hpp\"\n-#include \"asm\/assembler.hpp\"\n-#include \"asm\/assembler.inline.hpp\"\n-#include \"macroAssembler_x86.hpp\"\n-#include \"runtime\/stubRoutines.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-\/******************************************************************************\/\n-\/\/                     ALGORITHM DESCRIPTION - TAN()\n-\/\/                     ---------------------\n-\/\/\n-\/\/ Polynomials coefficients and other constants.\n-\/\/\n-\/\/ Note that in this algorithm, there is a different polynomial for\n-\/\/ each breakpoint, so there are 32 sets of polynomial coefficients\n-\/\/ as well as 32 instances of the other constants.\n-\/\/\n-\/\/ The polynomial coefficients and constants are offset from the start\n-\/\/ of the main block as follows:\n-\/\/\n-\/\/   0:  c8 | c0\n-\/\/  16:  c9 | c1\n-\/\/  32: c10 | c2\n-\/\/  48: c11 | c3\n-\/\/  64: c12 | c4\n-\/\/  80: c13 | c5\n-\/\/  96: c14 | c6\n-\/\/ 112: c15 | c7\n-\/\/ 128: T_hi\n-\/\/ 136: T_lo\n-\/\/ 144: Sigma\n-\/\/ 152: T_hl\n-\/\/ 160: Tau\n-\/\/ 168: Mask\n-\/\/ 176: (end of block)\n-\/\/\n-\/\/ The total table size is therefore 5632 bytes.\n-\/\/\n-\/\/ Note that c0 and c1 are always zero. We could try storing\n-\/\/ other constants here, and just loading the low part of the\n-\/\/ SIMD register in these cases, after ensuring the high part\n-\/\/ is zero.\n-\/\/\n-\/\/ The higher terms of the polynomial are computed in the *low*\n-\/\/ part of the SIMD register. This is so we can overlap the\n-\/\/ multiplication by r^8 and the unpacking of the other part.\n-\/\/\n-\/\/ The constants are:\n-\/\/ T_hi + T_lo = accurate constant term in power series\n-\/\/ Sigma + T_hl = accurate coefficient of r in power series (Sigma=1 bit)\n-\/\/ Tau = multiplier for the reciprocal, always -1 or 0\n-\/\/\n-\/\/ The basic reconstruction formula using these constants is:\n-\/\/\n-\/\/ High = tau * recip_hi + t_hi\n-\/\/ Med = (sgn * r + t_hl * r)_hi\n-\/\/ Low = (sgn * r + t_hl * r)_lo +\n-\/\/       tau * recip_lo + T_lo + (T_hl + sigma) * c + pol\n-\/\/\n-\/\/ where pol = c0 + c1 * r + c2 * r^2 + ... + c15 * r^15\n-\/\/\n-\/\/ (c0 = c1 = 0, but using them keeps SIMD regularity)\n-\/\/\n-\/\/ We then do a compensated sum High + Med, add the low parts together\n-\/\/ and then do the final sum.\n-\/\/\n-\/\/ Here recip_hi + recip_lo is an accurate reciprocal of the remainder\n-\/\/ modulo pi\/2\n-\/\/\n-\/\/ Special cases:\n-\/\/  tan(NaN) = quiet NaN, and raise invalid exception\n-\/\/  tan(INF) = NaN and raise invalid exception\n-\/\/  tan(+\/-0) = +\/-0\n-\/\/\n-\/******************************************************************************\/\n-\n-#ifdef _LP64\n-\/\/ The 64 bit code is at most SSE2 compliant\n-\n-ATTRIBUTE_ALIGNED(16) juint _MUL16[] =\n-{\n-    0x00000000UL, 0x40300000UL, 0x00000000UL, 0x3ff00000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _sign_mask_tan[] =\n-{\n-    0x00000000UL, 0x80000000UL, 0x00000000UL, 0x80000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _PI32INV_tan[] =\n-{\n-    0x6dc9c883UL, 0x3fe45f30UL, 0x6dc9c883UL, 0x40245f30UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _P_1_tan[] =\n-{\n-    0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _P_2_tan[] =\n-{\n-    0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _P_3_tan[] =\n-{\n-    0x3707344aUL, 0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _Ctable_tan[] =\n-{\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x882c10faUL,\n-    0x3f9664f4UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x55e6c23dUL, 0x3f8226e3UL, 0x55555555UL,\n-    0x3fd55555UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x0e157de0UL, 0x3f6d6d3dUL, 0x11111111UL, 0x3fc11111UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x452b75e3UL, 0x3f57da36UL,\n-    0x1ba1ba1cUL, 0x3faba1baUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n-    0x3f953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n-    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0x3f85ad63UL, 0xdc230b9bUL,\n-    0x3fb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n-    0x77bb08baUL, 0x3f757c85UL, 0xb6247521UL, 0x3fb1381eUL, 0x5922170cUL,\n-    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0x3f64e391UL,\n-    0x3e666320UL, 0x3fa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n-    0x3fafa8aeUL, 0x8c5b2da2UL, 0x3fb936bbUL, 0x4e88f7a5UL, 0x3c587d05UL,\n-    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x5a279ea3UL, 0x3faa3407UL,\n-    0x00000000UL, 0x00000000UL, 0x432d65faUL, 0x3fa70153UL, 0x00000000UL,\n-    0x00000000UL, 0x891a4602UL, 0x3f9d03efUL, 0xd62ca5f8UL, 0x3fca77d9UL,\n-    0xb35f4628UL, 0x3f97a265UL, 0x433258faUL, 0x3fd8cf51UL, 0xb58fd909UL,\n-    0x3f8f88e3UL, 0x01771ceaUL, 0x3fc2b154UL, 0xf3562f8eUL, 0x3f888f57UL,\n-    0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL, 0x3f80f44cUL, 0x214368e9UL,\n-    0x3fb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL, 0x172dbbf0UL, 0x3fb6cb8eUL,\n-    0xe0553158UL, 0x3fc975f5UL, 0x593fe814UL, 0x3c2ef5d3UL, 0x00000000UL,\n-    0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x9314533eUL, 0x3fbb8ec5UL, 0x00000000UL,\n-    0x00000000UL, 0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL,\n-    0xdcb427fdUL, 0x3fb13950UL, 0xd87ab0bbUL, 0x3fd5335eUL, 0xce0ae8a5UL,\n-    0x3fabb382UL, 0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0x3fa552f1UL,\n-    0x59f21a6dUL, 0x3fd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL,\n-    0x3fd0576cUL, 0x8f2c2950UL, 0x3f9a4898UL, 0xc0b3f22cUL, 0x3fc59462UL,\n-    0x1883a4b8UL, 0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL,\n-    0x3fd36a08UL, 0x1dce993dUL, 0xbc6d704dUL, 0x00000000UL, 0x3ff00000UL,\n-    0x2b82ab63UL, 0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x56f37042UL, 0x3fccfc56UL, 0x00000000UL, 0x00000000UL,\n-    0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL, 0x3d0e7c5dUL,\n-    0x3fc50533UL, 0x9bed9b2eUL, 0x3fdf0ed9UL, 0x5fe7c47cUL, 0x3fc1f250UL,\n-    0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0x3fbe5c71UL, 0x86362c20UL,\n-    0x3fda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL, 0x3fd911bdUL,\n-    0xb56658beUL, 0x3fb5e4c7UL, 0x93a2fd76UL, 0x3fd3c092UL, 0xda271794UL,\n-    0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL, 0x3fda8279UL,\n-    0xb68c1467UL, 0x3c708b2fUL, 0x00000000UL, 0x3ff00000UL, 0x980c4337UL,\n-    0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0xcc03e501UL, 0x3fdff10fUL, 0x00000000UL, 0x00000000UL, 0x44a4e845UL,\n-    0x3fddb63bUL, 0x00000000UL, 0x00000000UL, 0x3768ad9fUL, 0x3fdb72a4UL,\n-    0x3dd01ccaUL, 0x3fe5fdb9UL, 0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL,\n-    0x3fe977f9UL, 0xd013b3abUL, 0x3fd78ca3UL, 0xbf0bf914UL, 0x3fe4f192UL,\n-    0x4d53e730UL, 0x3fd5d060UL, 0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL,\n-    0x3fd4322aUL, 0x5936a835UL, 0x3fe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL,\n-    0xef478605UL, 0x3fe1659eUL, 0x190834ecUL, 0x3fe11ab7UL, 0xcdb625eaUL,\n-    0xbc8e564bUL, 0x00000000UL, 0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n-    0x3ff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n-    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0x3ff3972eUL, 0xe93463bdUL,\n-    0x3feeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n-    0xa04e8ea3UL, 0x3ff4541aUL, 0x386accd3UL, 0x3ff1369eUL, 0x222a66ddUL,\n-    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0x3ff5178fUL,\n-    0xddaa0031UL, 0x3ff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n-    0x3ff29311UL, 0x2ab7f990UL, 0x3fe561b8UL, 0x209c7df1UL, 0x3c87a8c5UL,\n-    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc7ab4d5aUL, 0x40085e24UL,\n-    0x00000000UL, 0x00000000UL, 0xe93ea75dUL, 0x400b963dUL, 0x00000000UL,\n-    0x00000000UL, 0x94a7f25aUL, 0x400f37e2UL, 0x4b6261cbUL, 0x3ff5f984UL,\n-    0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL, 0x3ffaf5a5UL, 0x7f2ce8e3UL,\n-    0x4013fe8bUL, 0xfe8e54faUL, 0x3ffd7334UL, 0x670d618dUL, 0x4016a10cUL,\n-    0x4db97058UL, 0x4000e012UL, 0x24df44ddUL, 0x40199c5fUL, 0x697d6eceUL,\n-    0x4003006eUL, 0x83298b82UL, 0x401cfc4dUL, 0x19d490d6UL, 0x40058c19UL,\n-    0x2ae42850UL, 0x3fea4300UL, 0x118e20e6UL, 0xbc7a6db8UL, 0x00000000UL,\n-    0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x65965966UL, 0x40219659UL, 0x00000000UL,\n-    0x00000000UL, 0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL,\n-    0x83cd3723UL, 0x402c8342UL, 0x00000000UL, 0x40000000UL, 0x55e6c23dUL,\n-    0x403226e3UL, 0x55555555UL, 0x40055555UL, 0x34451939UL, 0x40371c96UL,\n-    0xaaaaaaabUL, 0x400aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL,\n-    0x40111111UL, 0xa738201fUL, 0x4042bbceUL, 0x05b05b06UL, 0x4015b05bUL,\n-    0x452b75e3UL, 0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x4f48b8d3UL, 0xbf33eaf9UL, 0x00000000UL, 0x00000000UL,\n-    0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL, 0xd0258911UL,\n-    0xbf0abaf3UL, 0x23e49fe9UL, 0xbfab5a8cUL, 0x2d53222eUL, 0x3ef60d15UL,\n-    0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0xbee1d3b5UL, 0xdbf93b8eUL,\n-    0xbf84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL, 0x3f743924UL,\n-    0x794a8297UL, 0xbeb7b7b9UL, 0xe015f797UL, 0xbf5d41f5UL, 0xe41a4a56UL,\n-    0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL, 0xbfce49ceUL,\n-    0x8c743719UL, 0x3d1eb860UL, 0x00000000UL, 0x00000000UL, 0x1b4863cfUL,\n-    0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n-    0x535ad890UL, 0xbf2b9320UL, 0x00000000UL, 0x00000000UL, 0x018fdf1fUL,\n-    0x3f16d61dUL, 0x00000000UL, 0x00000000UL, 0x0359f1beUL, 0xbf0139e4UL,\n-    0xa4317c6dUL, 0xbfa67e17UL, 0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL,\n-    0x3f9f455bUL, 0x51ccf238UL, 0xbed55317UL, 0xf437b9acUL, 0xbf804beeUL,\n-    0xc791a2b5UL, 0x3ec0e993UL, 0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL,\n-    0xbeaa48a2UL, 0x0a268358UL, 0xbf55a443UL, 0xdfd978e4UL, 0x3e94b61fUL,\n-    0xd7767a58UL, 0x3f431806UL, 0x2aea0000UL, 0xbfc9bbe8UL, 0x7723ea61UL,\n-    0xbd3a2369UL, 0x00000000UL, 0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n-    0xbf231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n-    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0xbef66191UL, 0x848a46c6UL,\n-    0xbfa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n-    0xfdd299efUL, 0xbec9dd1aUL, 0x3f8dbaafUL, 0xbf793363UL, 0x309fc6eaUL,\n-    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0xbe9dae11UL,\n-    0x3e5c67b3UL, 0xbf4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n-    0x3f3d1eb1UL, 0x29cfc000UL, 0xbfc549ceUL, 0xbf159358UL, 0xbd397b33UL,\n-    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x7d98a556UL, 0xbf1a3958UL,\n-    0x00000000UL, 0x00000000UL, 0x9d88dc01UL, 0x3f0704c2UL, 0x00000000UL,\n-    0x00000000UL, 0x73742a2bUL, 0xbeed054aUL, 0x58844587UL, 0xbf9c2a13UL,\n-    0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL, 0x3f9a48f4UL, 0xa8dc9888UL,\n-    0xbebf8939UL, 0xaad4b5b8UL, 0xbf72f746UL, 0x9102efa1UL, 0x3ea88f82UL,\n-    0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL, 0xbe90f456UL, 0x741fb4edUL,\n-    0xbf46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL, 0xca89ff3fUL, 0x3f36db70UL,\n-    0xa8a2a000UL, 0xbfc0ee13UL, 0x3da24be1UL, 0xbd338b9fUL, 0x00000000UL,\n-    0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0xfffffff8UL, 0x1a154b97UL, 0xbf116b01UL, 0x00000000UL,\n-    0x00000000UL, 0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL,\n-    0xb93820c8UL, 0xbee264d4UL, 0xbb6cbb18UL, 0xbf94ab8cUL, 0x888d4d92UL,\n-    0x3ed0568bUL, 0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0xbeb2f950UL,\n-    0x22cf9f74UL, 0xbf6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL,\n-    0x3f64aad7UL, 0x637b73afUL, 0xbe83487cUL, 0xe522591aUL, 0xbf3fc092UL,\n-    0xa158e8bcUL, 0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL,\n-    0xbfb9477fUL, 0xc2c2d2bcUL, 0xbd135ef9UL, 0x00000000UL, 0x00000000UL,\n-    0xf2fdb123UL, 0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n-    0xfffffff8UL, 0xc41acb64UL, 0xbf05448dUL, 0x00000000UL, 0x00000000UL,\n-    0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL, 0x9e42962dUL,\n-    0xbed5aea5UL, 0x2579f8efUL, 0xbf8b2398UL, 0x288a1ed9UL, 0x3ec81441UL,\n-    0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0xbea57cd3UL, 0x5766336fUL,\n-    0xbf617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL, 0x3f62c646UL,\n-    0x6b8fb29cUL, 0xbe74e3a3UL, 0xdc4c0409UL, 0xbf33f952UL, 0x9bffe365UL,\n-    0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL, 0xbfb0cc62UL,\n-    0x016b907fUL, 0xbd119cbcUL, 0x00000000UL, 0x00000000UL, 0xe6b9d8faUL,\n-    0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n-    0x5daf22a6UL, 0xbef429d7UL, 0x00000000UL, 0x00000000UL, 0x06bca545UL,\n-    0x3ef7a27dUL, 0x00000000UL, 0x00000000UL, 0x7211c19aUL, 0xbec41c3eUL,\n-    0x956ed53eUL, 0xbf7ae3f4UL, 0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL,\n-    0x3f96f713UL, 0x36661e6cUL, 0xbe936e09UL, 0x506f9381UL, 0xbf5122e8UL,\n-    0xcb6dd43fUL, 0x3e9041b9UL, 0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL,\n-    0xbe625a8aUL, 0xe5a0e9dcUL, 0xbf23499dUL, 0x110384ddUL, 0x3e5b1c2cUL,\n-    0x68d43db6UL, 0x3f2cb899UL, 0x6ecac000UL, 0xbfa0c414UL, 0xcd7dd58cUL,\n-    0x3d13500fUL, 0x00000000UL, 0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2bf70ebeUL, 0x3ef66a8fUL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0xd644267fUL, 0x3ec22805UL, 0x16c16c17UL, 0x3f96c16cUL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc4e09162UL,\n-    0x3e8d6db2UL, 0xbc011567UL, 0x3f61566aUL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x1f79955cUL, 0x3e57da4eUL, 0x9334ef0bUL,\n-    0x3f2bbd77UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x55555555UL, 0x3fd55555UL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x5daf22a6UL, 0x3ef429d7UL,\n-    0x00000000UL, 0x00000000UL, 0x06bca545UL, 0x3ef7a27dUL, 0x00000000UL,\n-    0x00000000UL, 0x7211c19aUL, 0x3ec41c3eUL, 0x956ed53eUL, 0x3f7ae3f4UL,\n-    0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL, 0x3f96f713UL, 0x36661e6cUL,\n-    0x3e936e09UL, 0x506f9381UL, 0x3f5122e8UL, 0xcb6dd43fUL, 0x3e9041b9UL,\n-    0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL, 0x3e625a8aUL, 0xe5a0e9dcUL,\n-    0x3f23499dUL, 0x110384ddUL, 0x3e5b1c2cUL, 0x68d43db6UL, 0x3f2cb899UL,\n-    0x6ecac000UL, 0x3fa0c414UL, 0xcd7dd58cUL, 0xbd13500fUL, 0x00000000UL,\n-    0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0xfffffff8UL, 0xc41acb64UL, 0x3f05448dUL, 0x00000000UL,\n-    0x00000000UL, 0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL,\n-    0x9e42962dUL, 0x3ed5aea5UL, 0x2579f8efUL, 0x3f8b2398UL, 0x288a1ed9UL,\n-    0x3ec81441UL, 0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0x3ea57cd3UL,\n-    0x5766336fUL, 0x3f617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL,\n-    0x3f62c646UL, 0x6b8fb29cUL, 0x3e74e3a3UL, 0xdc4c0409UL, 0x3f33f952UL,\n-    0x9bffe365UL, 0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL,\n-    0x3fb0cc62UL, 0x016b907fUL, 0x3d119cbcUL, 0x00000000UL, 0x00000000UL,\n-    0xe6b9d8faUL, 0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n-    0xfffffff8UL, 0x1a154b97UL, 0x3f116b01UL, 0x00000000UL, 0x00000000UL,\n-    0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL, 0xb93820c8UL,\n-    0x3ee264d4UL, 0xbb6cbb18UL, 0x3f94ab8cUL, 0x888d4d92UL, 0x3ed0568bUL,\n-    0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0x3eb2f950UL, 0x22cf9f74UL,\n-    0x3f6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL, 0x3f64aad7UL,\n-    0x637b73afUL, 0x3e83487cUL, 0xe522591aUL, 0x3f3fc092UL, 0xa158e8bcUL,\n-    0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL, 0x3fb9477fUL,\n-    0xc2c2d2bcUL, 0x3d135ef9UL, 0x00000000UL, 0x00000000UL, 0xf2fdb123UL,\n-    0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n-    0x7d98a556UL, 0x3f1a3958UL, 0x00000000UL, 0x00000000UL, 0x9d88dc01UL,\n-    0x3f0704c2UL, 0x00000000UL, 0x00000000UL, 0x73742a2bUL, 0x3eed054aUL,\n-    0x58844587UL, 0x3f9c2a13UL, 0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL,\n-    0x3f9a48f4UL, 0xa8dc9888UL, 0x3ebf8939UL, 0xaad4b5b8UL, 0x3f72f746UL,\n-    0x9102efa1UL, 0x3ea88f82UL, 0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL,\n-    0x3e90f456UL, 0x741fb4edUL, 0x3f46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL,\n-    0xca89ff3fUL, 0x3f36db70UL, 0xa8a2a000UL, 0x3fc0ee13UL, 0x3da24be1UL,\n-    0x3d338b9fUL, 0x00000000UL, 0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n-    0x3f231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n-    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0x3ef66191UL, 0x848a46c6UL,\n-    0x3fa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n-    0xfdd299efUL, 0x3ec9dd1aUL, 0x3f8dbaafUL, 0x3f793363UL, 0x309fc6eaUL,\n-    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0x3e9dae11UL,\n-    0x3e5c67b3UL, 0x3f4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n-    0x3f3d1eb1UL, 0x29cfc000UL, 0x3fc549ceUL, 0xbf159358UL, 0x3d397b33UL,\n-    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x535ad890UL, 0x3f2b9320UL,\n-    0x00000000UL, 0x00000000UL, 0x018fdf1fUL, 0x3f16d61dUL, 0x00000000UL,\n-    0x00000000UL, 0x0359f1beUL, 0x3f0139e4UL, 0xa4317c6dUL, 0x3fa67e17UL,\n-    0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL, 0x3f9f455bUL, 0x51ccf238UL,\n-    0x3ed55317UL, 0xf437b9acUL, 0x3f804beeUL, 0xc791a2b5UL, 0x3ec0e993UL,\n-    0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL, 0x3eaa48a2UL, 0x0a268358UL,\n-    0x3f55a443UL, 0xdfd978e4UL, 0x3e94b61fUL, 0xd7767a58UL, 0x3f431806UL,\n-    0x2aea0000UL, 0x3fc9bbe8UL, 0x7723ea61UL, 0x3d3a2369UL, 0x00000000UL,\n-    0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0xfffffff8UL, 0x4f48b8d3UL, 0x3f33eaf9UL, 0x00000000UL,\n-    0x00000000UL, 0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL,\n-    0xd0258911UL, 0x3f0abaf3UL, 0x23e49fe9UL, 0x3fab5a8cUL, 0x2d53222eUL,\n-    0x3ef60d15UL, 0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0x3ee1d3b5UL,\n-    0xdbf93b8eUL, 0x3f84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL,\n-    0x3f743924UL, 0x794a8297UL, 0x3eb7b7b9UL, 0xe015f797UL, 0x3f5d41f5UL,\n-    0xe41a4a56UL, 0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL,\n-    0x3fce49ceUL, 0x8c743719UL, 0xbd1eb860UL, 0x00000000UL, 0x00000000UL,\n-    0x1b4863cfUL, 0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n-    0xfffffff8UL, 0x65965966UL, 0xc0219659UL, 0x00000000UL, 0x00000000UL,\n-    0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL, 0x83cd3723UL,\n-    0xc02c8342UL, 0x00000000UL, 0xc0000000UL, 0x55e6c23dUL, 0x403226e3UL,\n-    0x55555555UL, 0x40055555UL, 0x34451939UL, 0xc0371c96UL, 0xaaaaaaabUL,\n-    0xc00aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL, 0x40111111UL,\n-    0xa738201fUL, 0xc042bbceUL, 0x05b05b06UL, 0xc015b05bUL, 0x452b75e3UL,\n-    0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL, 0xbff00000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0xc7ab4d5aUL, 0xc0085e24UL, 0x00000000UL, 0x00000000UL, 0xe93ea75dUL,\n-    0x400b963dUL, 0x00000000UL, 0x00000000UL, 0x94a7f25aUL, 0xc00f37e2UL,\n-    0x4b6261cbUL, 0xbff5f984UL, 0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL,\n-    0x3ffaf5a5UL, 0x7f2ce8e3UL, 0xc013fe8bUL, 0xfe8e54faUL, 0xbffd7334UL,\n-    0x670d618dUL, 0x4016a10cUL, 0x4db97058UL, 0x4000e012UL, 0x24df44ddUL,\n-    0xc0199c5fUL, 0x697d6eceUL, 0xc003006eUL, 0x83298b82UL, 0x401cfc4dUL,\n-    0x19d490d6UL, 0x40058c19UL, 0x2ae42850UL, 0xbfea4300UL, 0x118e20e6UL,\n-    0x3c7a6db8UL, 0x00000000UL, 0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n-    0xbff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n-    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0xbff3972eUL, 0xe93463bdUL,\n-    0xbfeeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n-    0xa04e8ea3UL, 0xbff4541aUL, 0x386accd3UL, 0xbff1369eUL, 0x222a66ddUL,\n-    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0xbff5178fUL,\n-    0xddaa0031UL, 0xbff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n-    0x3ff29311UL, 0x2ab7f990UL, 0xbfe561b8UL, 0x209c7df1UL, 0xbc87a8c5UL,\n-    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xcc03e501UL, 0xbfdff10fUL,\n-    0x00000000UL, 0x00000000UL, 0x44a4e845UL, 0x3fddb63bUL, 0x00000000UL,\n-    0x00000000UL, 0x3768ad9fUL, 0xbfdb72a4UL, 0x3dd01ccaUL, 0xbfe5fdb9UL,\n-    0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL, 0x3fe977f9UL, 0xd013b3abUL,\n-    0xbfd78ca3UL, 0xbf0bf914UL, 0xbfe4f192UL, 0x4d53e730UL, 0x3fd5d060UL,\n-    0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL, 0xbfd4322aUL, 0x5936a835UL,\n-    0xbfe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL, 0xef478605UL, 0x3fe1659eUL,\n-    0x190834ecUL, 0xbfe11ab7UL, 0xcdb625eaUL, 0x3c8e564bUL, 0x00000000UL,\n-    0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x56f37042UL, 0xbfccfc56UL, 0x00000000UL,\n-    0x00000000UL, 0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL,\n-    0x3d0e7c5dUL, 0xbfc50533UL, 0x9bed9b2eUL, 0xbfdf0ed9UL, 0x5fe7c47cUL,\n-    0x3fc1f250UL, 0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0xbfbe5c71UL,\n-    0x86362c20UL, 0xbfda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL,\n-    0x3fd911bdUL, 0xb56658beUL, 0xbfb5e4c7UL, 0x93a2fd76UL, 0xbfd3c092UL,\n-    0xda271794UL, 0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL,\n-    0xbfda8279UL, 0xb68c1467UL, 0xbc708b2fUL, 0x00000000UL, 0x3ff00000UL,\n-    0x980c4337UL, 0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x9314533eUL, 0xbfbb8ec5UL, 0x00000000UL, 0x00000000UL,\n-    0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL, 0xdcb427fdUL,\n-    0xbfb13950UL, 0xd87ab0bbUL, 0xbfd5335eUL, 0xce0ae8a5UL, 0x3fabb382UL,\n-    0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0xbfa552f1UL, 0x59f21a6dUL,\n-    0xbfd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL, 0x3fd0576cUL,\n-    0x8f2c2950UL, 0xbf9a4898UL, 0xc0b3f22cUL, 0xbfc59462UL, 0x1883a4b8UL,\n-    0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL, 0xbfd36a08UL,\n-    0x1dce993dUL, 0x3c6d704dUL, 0x00000000UL, 0x3ff00000UL, 0x2b82ab63UL,\n-    0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x5a279ea3UL, 0xbfaa3407UL, 0x00000000UL, 0x00000000UL, 0x432d65faUL,\n-    0x3fa70153UL, 0x00000000UL, 0x00000000UL, 0x891a4602UL, 0xbf9d03efUL,\n-    0xd62ca5f8UL, 0xbfca77d9UL, 0xb35f4628UL, 0x3f97a265UL, 0x433258faUL,\n-    0x3fd8cf51UL, 0xb58fd909UL, 0xbf8f88e3UL, 0x01771ceaUL, 0xbfc2b154UL,\n-    0xf3562f8eUL, 0x3f888f57UL, 0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL,\n-    0xbf80f44cUL, 0x214368e9UL, 0xbfb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL,\n-    0x172dbbf0UL, 0x3fb6cb8eUL, 0xe0553158UL, 0xbfc975f5UL, 0x593fe814UL,\n-    0xbc2ef5d3UL, 0x00000000UL, 0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n-    0xbf953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n-    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0xbf85ad63UL, 0xdc230b9bUL,\n-    0xbfb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n-    0x77bb08baUL, 0xbf757c85UL, 0xb6247521UL, 0xbfb1381eUL, 0x5922170cUL,\n-    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0xbf64e391UL,\n-    0x3e666320UL, 0xbfa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n-    0x3fafa8aeUL, 0x8c5b2da2UL, 0xbfb936bbUL, 0x4e88f7a5UL, 0xbc587d05UL,\n-    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _MASK_35_tan[] =\n-{\n-    0xfffc0000UL, 0xffffffffUL, 0x00000000UL, 0x00000000UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _Q_11_tan[] =\n-{\n-    0xb8fe4d77UL, 0x3f82609aUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _Q_9_tan[] =\n-{\n-    0xbf847a43UL, 0x3f9664a0UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _Q_7_tan[] =\n-{\n-    0x52c4c8abUL, 0x3faba1baUL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _Q_5_tan[] =\n-{\n-    0x11092746UL, 0x3fc11111UL\n-};\n-\n-ATTRIBUTE_ALIGNED(16) juint _Q_3_tan[] =\n-{\n-    0x55555612UL, 0x3fd55555UL\n-};\n-\n-ATTRIBUTE_ALIGNED(8) juint _PI_4_tan[] =\n-{\n-    0x00000000UL, 0x3fe921fbUL, 0x4611a626UL, 0x3e85110bUL\n-};\n-\n-ATTRIBUTE_ALIGNED(8) juint _QQ_2_tan[] =\n-{\n-    0x676733afUL, 0x3d32e7b9UL\n-};\n-\n-void MacroAssembler::fast_tan(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3,\n-                              XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7,\n-                              Register eax, Register ecx, Register edx, Register r8, Register r9,\n-                              Register r10, Register r11, Register tmp) {\n-\n-  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1, L_2TAG_PACKET_3_0_1;\n-  Label L_2TAG_PACKET_4_0_1, L_2TAG_PACKET_5_0_1, L_2TAG_PACKET_6_0_1, L_2TAG_PACKET_7_0_1;\n-  Label L_2TAG_PACKET_8_0_1, L_2TAG_PACKET_9_0_1, L_2TAG_PACKET_10_0_1, L_2TAG_PACKET_11_0_1;\n-  Label L_2TAG_PACKET_12_0_1, L_2TAG_PACKET_13_0_1, L_2TAG_PACKET_14_0_1, B1_2, B1_4;\n-\n-  assert_different_registers(eax, ecx, edx, r8, r9, r10, r11, tmp);\n-\n-  address MUL16     = (address)_MUL16;\n-  address sign_mask = (address)_sign_mask_tan;\n-  address PI32INV   = (address)_PI32INV_tan;\n-  address P_1       = (address)_P_1_tan;\n-  address P_2       = (address)_P_2_tan;\n-  address P_3       = (address)_P_3_tan;\n-  address Ctable    = (address)_Ctable_tan;\n-  address MASK_35   = (address)_MASK_35_tan;\n-  address Q_11      = (address)_Q_11_tan;\n-  address Q_9       = (address)_Q_9_tan;\n-  address Q_7       = (address)_Q_7_tan;\n-  address Q_5       = (address)_Q_5_tan;\n-  address Q_3       = (address)_Q_3_tan;\n-  address PI_4      = (address)_PI_4_tan;\n-  address QQ_2      = (address)_QQ_2_tan;\n-\n-  push(rbx);\n-  subq(rsp, 16);\n-  movsd(Address(rsp, 8), xmm0);\n-\n-  bind(B1_2);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  subl(eax, 16314);\n-  cmpl(eax, 270);\n-  jcc(Assembler::above, L_2TAG_PACKET_0_0_1);\n-  movdqu(xmm5, ExternalAddress(ONEHALF), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-  movdqu(xmm6, ExternalAddress(MUL16), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x40300000UL, 0x00000000UL, 0x3ff00000UL\n-  unpcklpd(xmm0, xmm0);\n-  movdqu(xmm4, ExternalAddress(sign_mask), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL, 0x00000000UL, 0x80000000UL\n-  andpd(xmm4, xmm0);\n-  movdqu(xmm1, ExternalAddress(PI32INV), tmp \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x3fe45f30UL, 0x6dc9c883UL, 0x40245f30UL\n-  mulpd(xmm1, xmm0);\n-  por(xmm5, xmm4);\n-  addpd(xmm1, xmm5);\n-  movdqu(xmm7, xmm1);\n-  unpckhpd(xmm7, xmm7);\n-  cvttsd2sil(edx, xmm7);\n-  cvttpd2dq(xmm1, xmm1);\n-  cvtdq2pd(xmm1, xmm1);\n-  mulpd(xmm1, xmm6);\n-  movdqu(xmm3, ExternalAddress(P_1), tmp \/*rscratch*\/);    \/\/0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL\n-  movq(xmm5, ExternalAddress(QQ_2), tmp \/*rscratch*\/);    \/\/0x676733afUL, 0x3d32e7b9UL\n-  addq(rdx, 469248);\n-  movdqu(xmm4, ExternalAddress(P_2), tmp \/*rscratch*\/);    \/\/0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL\n-  mulpd(xmm3, xmm1);\n-  andq(rdx, 31);\n-  mulsd(xmm5, xmm1);\n-  movq(rcx, rdx);\n-  mulpd(xmm4, xmm1);\n-  shlq(rcx, 1);\n-  subpd(xmm0, xmm3);\n-  mulpd(xmm1, ExternalAddress(P_3), tmp \/*rscratch*\/);    \/\/0x3707344aUL, 0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL\n-  addq(rdx, rcx);\n-  shlq(rcx, 2);\n-  addq(rdx, rcx);\n-  addsd(xmm5, xmm0);\n-  movdqu(xmm2, xmm0);\n-  subpd(xmm0, xmm4);\n-  movq(xmm6, ExternalAddress(ONE), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n-  shlq(rdx, 4);\n-  lea(rax, ExternalAddress(Ctable));\n-  andpd(xmm5, ExternalAddress(MASK_35), tmp \/*rscratch*\/);    \/\/0xfffc0000UL, 0xffffffffUL, 0x00000000UL, 0x00000000UL\n-  movdqu(xmm3, xmm0);\n-  addq(rax, rdx);\n-  subpd(xmm2, xmm0);\n-  unpckhpd(xmm0, xmm0);\n-  divsd(xmm6, xmm5);\n-  subpd(xmm2, xmm4);\n-  movdqu(xmm7, Address(rax, 16));\n-  subsd(xmm3, xmm5);\n-  mulpd(xmm7, xmm0);\n-  subpd(xmm2, xmm1);\n-  movdqu(xmm1, Address(rax, 48));\n-  mulpd(xmm1, xmm0);\n-  movdqu(xmm4, Address(rax, 96));\n-  mulpd(xmm4, xmm0);\n-  addsd(xmm2, xmm3);\n-  movdqu(xmm3, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm7, Address(rax, 0));\n-  addpd(xmm1, Address(rax, 32));\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm4, Address(rax, 80));\n-  addpd(xmm7, xmm1);\n-  movdqu(xmm1, Address(rax, 112));\n-  mulpd(xmm1, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm4, xmm1);\n-  movdqu(xmm1, Address(rax, 64));\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm7, xmm1);\n-  movdqu(xmm1, xmm3);\n-  mulpd(xmm3, xmm0);\n-  mulsd(xmm0, xmm0);\n-  mulpd(xmm1, Address(rax, 144));\n-  mulpd(xmm4, xmm3);\n-  movdqu(xmm3, xmm1);\n-  addpd(xmm7, xmm4);\n-  movdqu(xmm4, xmm1);\n-  mulsd(xmm0, xmm7);\n-  unpckhpd(xmm7, xmm7);\n-  addsd(xmm0, xmm7);\n-  unpckhpd(xmm1, xmm1);\n-  addsd(xmm3, xmm1);\n-  subsd(xmm4, xmm3);\n-  addsd(xmm1, xmm4);\n-  movdqu(xmm4, xmm2);\n-  movq(xmm7, Address(rax, 144));\n-  unpckhpd(xmm2, xmm2);\n-  addsd(xmm7, Address(rax, 152));\n-  mulsd(xmm7, xmm2);\n-  addsd(xmm7, Address(rax, 136));\n-  addsd(xmm7, xmm1);\n-  addsd(xmm0, xmm7);\n-  movq(xmm7, ExternalAddress(ONE), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n-  mulsd(xmm4, xmm6);\n-  movq(xmm2, Address(rax, 168));\n-  andpd(xmm2, xmm6);\n-  mulsd(xmm5, xmm2);\n-  mulsd(xmm6, Address(rax, 160));\n-  subsd(xmm7, xmm5);\n-  subsd(xmm2, Address(rax, 128));\n-  subsd(xmm7, xmm4);\n-  mulsd(xmm7, xmm6);\n-  movdqu(xmm4, xmm3);\n-  subsd(xmm3, xmm2);\n-  addsd(xmm2, xmm3);\n-  subsd(xmm4, xmm2);\n-  addsd(xmm0, xmm4);\n-  subsd(xmm0, xmm7);\n-  addsd(xmm0, xmm3);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_0_0_1);\n-  jcc(Assembler::greater, L_2TAG_PACKET_1_0_1);\n-  pextrw(eax, xmm0, 3);\n-  movl(edx, eax);\n-  andl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_2_0_1);\n-  andl(edx, 32767);\n-  cmpl(edx, 15904);\n-  jcc(Assembler::below, L_2TAG_PACKET_3_0_1);\n-  movdqu(xmm2, xmm0);\n-  movdqu(xmm3, xmm0);\n-  movq(xmm1, ExternalAddress(Q_11), tmp \/*rscratch*\/);    \/\/0xb8fe4d77UL, 0x3f82609aUL\n-  mulsd(xmm2, xmm0);\n-  mulsd(xmm3, xmm2);\n-  mulsd(xmm1, xmm2);\n-  addsd(xmm1, ExternalAddress(Q_9), tmp \/*rscratch*\/);    \/\/0xbf847a43UL, 0x3f9664a0UL\n-  mulsd(xmm1, xmm2);\n-  addsd(xmm1, ExternalAddress(Q_7), tmp \/*rscratch*\/);    \/\/0x52c4c8abUL, 0x3faba1baUL\n-  mulsd(xmm1, xmm2);\n-  addsd(xmm1, ExternalAddress(Q_5), tmp \/*rscratch*\/);    \/\/0x11092746UL, 0x3fc11111UL\n-  mulsd(xmm1, xmm2);\n-  addsd(xmm1, ExternalAddress(Q_3), tmp \/*rscratch*\/);    \/\/0x55555612UL, 0x3fd55555UL\n-  mulsd(xmm1, xmm3);\n-  addsd(xmm0, xmm1);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_3_0_1);\n-  movq(xmm3, ExternalAddress(TWO_POW_55), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x43600000UL\n-  mulsd(xmm3, xmm0);\n-  addsd(xmm0, xmm3);\n-  mulsd(xmm0, ExternalAddress(TWO_POW_M55), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3c800000UL\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_2_0_1);\n-  movdqu(xmm1, xmm0);\n-  mulsd(xmm1, xmm1);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_1_0_1);\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32752);\n-  cmpl(eax, 32752);\n-  jcc(Assembler::equal, L_2TAG_PACKET_4_0_1);\n-  pextrw(ecx, xmm0, 3);\n-  andl(ecx, 32752);\n-  subl(ecx, 16224);\n-  shrl(ecx, 7);\n-  andl(ecx, 65532);\n-  lea(r11, ExternalAddress(PI_INV_TABLE));\n-  addq(rcx, r11);\n-  movdq(rax, xmm0);\n-  movl(r10, Address(rcx, 20));\n-  movl(r8, Address(rcx, 24));\n-  movl(edx, eax);\n-  shrq(rax, 21);\n-  orl(eax, INT_MIN);\n-  shrl(eax, 11);\n-  movl(r9, r10);\n-  imulq(r10, rdx);\n-  imulq(r9, rax);\n-  imulq(r8, rax);\n-  movl(rsi, Address(rcx, 16));\n-  movl(rdi, Address(rcx, 12));\n-  movl(r11, r10);\n-  shrq(r10, 32);\n-  addq(r9, r10);\n-  addq(r11, r8);\n-  movl(r8, r11);\n-  shrq(r11, 32);\n-  addq(r9, r11);\n-  movl(r10, rsi);\n-  imulq(rsi, rdx);\n-  imulq(r10, rax);\n-  movl(r11, rdi);\n-  imulq(rdi, rdx);\n-  movl(rbx, rsi);\n-  shrq(rsi, 32);\n-  addq(r9, rbx);\n-  movl(rbx, r9);\n-  shrq(r9, 32);\n-  addq(r10, rsi);\n-  addq(r10, r9);\n-  shlq(rbx, 32);\n-  orq(r8, rbx);\n-  imulq(r11, rax);\n-  movl(r9, Address(rcx, 8));\n-  movl(rsi, Address(rcx, 4));\n-  movl(rbx, rdi);\n-  shrq(rdi, 32);\n-  addq(r10, rbx);\n-  movl(rbx, r10);\n-  shrq(r10, 32);\n-  addq(r11, rdi);\n-  addq(r11, r10);\n-  movq(rdi, r9);\n-  imulq(r9, rdx);\n-  imulq(rdi, rax);\n-  movl(r10, r9);\n-  shrq(r9, 32);\n-  addq(r11, r10);\n-  movl(r10, r11);\n-  shrq(r11, 32);\n-  addq(rdi, r9);\n-  addq(rdi, r11);\n-  movq(r9, rsi);\n-  imulq(rsi, rdx);\n-  imulq(r9, rax);\n-  shlq(r10, 32);\n-  orq(r10, rbx);\n-  movl(eax, Address(rcx, 0));\n-  movl(r11, rsi);\n-  shrq(rsi, 32);\n-  addq(rdi, r11);\n-  movl(r11, rdi);\n-  shrq(rdi, 32);\n-  addq(r9, rsi);\n-  addq(r9, rdi);\n-  imulq(rdx, rax);\n-  pextrw(rbx, xmm0, 3);\n-  lea(rdi, ExternalAddress(PI_INV_TABLE));\n-  subq(rcx, rdi);\n-  addl(ecx, ecx);\n-  addl(ecx, ecx);\n-  addl(ecx, ecx);\n-  addl(ecx, 19);\n-  movl(rsi, 32768);\n-  andl(rsi, rbx);\n-  shrl(rbx, 4);\n-  andl(rbx, 2047);\n-  subl(rbx, 1023);\n-  subl(ecx, rbx);\n-  addq(r9, rdx);\n-  movl(edx, ecx);\n-  addl(edx, 32);\n-  cmpl(ecx, 0);\n-  jcc(Assembler::less, L_2TAG_PACKET_5_0_1);\n-  negl(ecx);\n-  addl(ecx, 29);\n-  shll(r9);\n-  movl(rdi, r9);\n-  andl(r9, 1073741823);\n-  testl(r9, 536870912);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_6_0_1);\n-  shrl(r9);\n-  movl(rbx, 0);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-\n-  bind(L_2TAG_PACKET_7_0_1);\n-\n-  bind(L_2TAG_PACKET_8_0_1);\n-  cmpq(r9, 0);\n-  jcc(Assembler::equal, L_2TAG_PACKET_9_0_1);\n-\n-  bind(L_2TAG_PACKET_10_0_1);\n-  bsrq(r11, r9);\n-  movl(ecx, 29);\n-  subl(ecx, r11);\n-  jcc(Assembler::lessEqual, L_2TAG_PACKET_11_0_1);\n-  shlq(r9);\n-  movq(rax, r10);\n-  shlq(r10);\n-  addl(edx, ecx);\n-  negl(ecx);\n-  addl(ecx, 64);\n-  shrq(rax);\n-  shrq(r8);\n-  orq(r9, rax);\n-  orq(r10, r8);\n-\n-  bind(L_2TAG_PACKET_12_0_1);\n-  cvtsi2sdq(xmm0, r9);\n-  shrq(r10, 1);\n-  cvtsi2sdq(xmm3, r10);\n-  xorpd(xmm4, xmm4);\n-  shll(edx, 4);\n-  negl(edx);\n-  addl(edx, 16368);\n-  orl(edx, rsi);\n-  xorl(edx, rbx);\n-  pinsrw(xmm4, edx, 3);\n-  movq(xmm2, ExternalAddress(PI_4),     tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe921fbUL, 0x4611a626UL, 0x3e85110bUL\n-  movq(xmm7, ExternalAddress(PI_4 + 8), tmp \/*rscratch*\/);    \/\/0x3fe921fbUL, 0x4611a626UL, 0x3e85110bUL\n-  xorpd(xmm5, xmm5);\n-  subl(edx, 1008);\n-  pinsrw(xmm5, edx, 3);\n-  mulsd(xmm0, xmm4);\n-  shll(rsi, 16);\n-  sarl(rsi, 31);\n-  mulsd(xmm3, xmm5);\n-  movdqu(xmm1, xmm0);\n-  mulsd(xmm0, xmm2);\n-  shrl(rdi, 30);\n-  addsd(xmm1, xmm3);\n-  mulsd(xmm3, xmm2);\n-  addl(rdi, rsi);\n-  xorl(rdi, rsi);\n-  mulsd(xmm7, xmm1);\n-  movl(eax, rdi);\n-  addsd(xmm7, xmm3);\n-  movdqu(xmm2, xmm0);\n-  addsd(xmm0, xmm7);\n-  subsd(xmm2, xmm0);\n-  addsd(xmm7, xmm2);\n-  movdqu(xmm1, ExternalAddress(PI32INV), tmp \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x3fe45f30UL, 0x6dc9c883UL, 0x40245f30UL\n-  if (VM_Version::supports_sse3()) {\n-    movddup(xmm0, xmm0);\n-  }\n-  else {\n-    movlhps(xmm0, xmm0);\n-  }\n-  movdqu(xmm4, ExternalAddress(sign_mask), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL, 0x00000000UL, 0x80000000UL\n-  andpd(xmm4, xmm0);\n-  mulpd(xmm1, xmm0);\n-  if (VM_Version::supports_sse3()) {\n-    movddup(xmm7, xmm7);\n-  }\n-  else {\n-    movlhps(xmm7, xmm7);\n-  }\n-  movdqu(xmm5, ExternalAddress(ONEHALF), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n-  movdqu(xmm6, ExternalAddress(MUL16), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x40300000UL, 0x00000000UL, 0x3ff00000UL\n-  por(xmm5, xmm4);\n-  addpd(xmm1, xmm5);\n-  movdqu(xmm5, xmm1);\n-  unpckhpd(xmm5, xmm5);\n-  cvttsd2sil(edx, xmm5);\n-  cvttpd2dq(xmm1, xmm1);\n-  cvtdq2pd(xmm1, xmm1);\n-  mulpd(xmm1, xmm6);\n-  movdqu(xmm3, ExternalAddress(P_1), tmp \/*rscratch*\/);    \/\/0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL\n-  movq(xmm5, ExternalAddress(QQ_2), tmp \/*rscratch*\/);    \/\/0x676733afUL, 0x3d32e7b9UL\n-  shll(eax, 4);\n-  addl(edx, 469248);\n-  movdqu(xmm4, ExternalAddress(P_2), tmp \/*rscratch*\/);    \/\/0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL\n-  mulpd(xmm3, xmm1);\n-  addl(edx, eax);\n-  andl(edx, 31);\n-  mulsd(xmm5, xmm1);\n-  movl(ecx, edx);\n-  mulpd(xmm4, xmm1);\n-  shll(ecx, 1);\n-  subpd(xmm0, xmm3);\n-  mulpd(xmm1, ExternalAddress(P_3), tmp \/*rscratch*\/);    \/\/0x3707344aUL, 0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL\n-  addl(edx, ecx);\n-  shll(ecx, 2);\n-  addl(edx, ecx);\n-  addsd(xmm5, xmm0);\n-  movdqu(xmm2, xmm0);\n-  subpd(xmm0, xmm4);\n-  movq(xmm6, ExternalAddress(ONE), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n-  shll(edx, 4);\n-  lea(rax, ExternalAddress(Ctable));\n-  andpd(xmm5, ExternalAddress(MASK_35), tmp \/*rscratch*\/);    \/\/0xfffc0000UL, 0xffffffffUL, 0x00000000UL, 0x00000000UL\n-  movdqu(xmm3, xmm0);\n-  addq(rax, rdx);\n-  subpd(xmm2, xmm0);\n-  unpckhpd(xmm0, xmm0);\n-  divsd(xmm6, xmm5);\n-  subpd(xmm2, xmm4);\n-  subsd(xmm3, xmm5);\n-  subpd(xmm2, xmm1);\n-  movdqu(xmm1, Address(rax, 48));\n-  addpd(xmm2, xmm7);\n-  movdqu(xmm7, Address(rax, 16));\n-  mulpd(xmm7, xmm0);\n-  movdqu(xmm4, Address(rax, 96));\n-  mulpd(xmm1, xmm0);\n-  mulpd(xmm4, xmm0);\n-  addsd(xmm2, xmm3);\n-  movdqu(xmm3, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm7, Address(rax, 0));\n-  addpd(xmm1, Address(rax, 32));\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm4, Address(rax, 80));\n-  addpd(xmm7, xmm1);\n-  movdqu(xmm1, Address(rax, 112));\n-  mulpd(xmm1, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm4, xmm1);\n-  movdqu(xmm1, Address(rax, 64));\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm7, xmm1);\n-  movdqu(xmm1, xmm3);\n-  mulpd(xmm3, xmm0);\n-  mulsd(xmm0, xmm0);\n-  mulpd(xmm1, Address(rax, 144));\n-  mulpd(xmm4, xmm3);\n-  movdqu(xmm3, xmm1);\n-  addpd(xmm7, xmm4);\n-  movdqu(xmm4, xmm1);\n-  mulsd(xmm0, xmm7);\n-  unpckhpd(xmm7, xmm7);\n-  addsd(xmm0, xmm7);\n-  unpckhpd(xmm1, xmm1);\n-  addsd(xmm3, xmm1);\n-  subsd(xmm4, xmm3);\n-  addsd(xmm1, xmm4);\n-  movdqu(xmm4, xmm2);\n-  movq(xmm7, Address(rax, 144));\n-  unpckhpd(xmm2, xmm2);\n-  addsd(xmm7, Address(rax, 152));\n-  mulsd(xmm7, xmm2);\n-  addsd(xmm7, Address(rax, 136));\n-  addsd(xmm7, xmm1);\n-  addsd(xmm0, xmm7);\n-  movq(xmm7, ExternalAddress(ONE), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n-  mulsd(xmm4, xmm6);\n-  movq(xmm2, Address(rax, 168));\n-  andpd(xmm2, xmm6);\n-  mulsd(xmm5, xmm2);\n-  mulsd(xmm6, Address(rax, 160));\n-  subsd(xmm7, xmm5);\n-  subsd(xmm2, Address(rax, 128));\n-  subsd(xmm7, xmm4);\n-  mulsd(xmm7, xmm6);\n-  movdqu(xmm4, xmm3);\n-  subsd(xmm3, xmm2);\n-  addsd(xmm2, xmm3);\n-  subsd(xmm4, xmm2);\n-  addsd(xmm0, xmm4);\n-  subsd(xmm0, xmm7);\n-  addsd(xmm0, xmm3);\n-  jmp(B1_4);\n-\n-  bind(L_2TAG_PACKET_9_0_1);\n-  addl(edx, 64);\n-  movq(r9, r10);\n-  movq(r10, r8);\n-  movl(r8, 0);\n-  cmpq(r9, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_10_0_1);\n-  addl(edx, 64);\n-  movq(r9, r10);\n-  movq(r10, r8);\n-  cmpq(r9, 0);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_10_0_1);\n-  jmp(L_2TAG_PACKET_12_0_1);\n-\n-  bind(L_2TAG_PACKET_11_0_1);\n-  jcc(Assembler::equal, L_2TAG_PACKET_12_0_1);\n-  negl(ecx);\n-  shrq(r10);\n-  movq(rax, r9);\n-  shrq(r9);\n-  subl(edx, ecx);\n-  negl(ecx);\n-  addl(ecx, 64);\n-  shlq(rax);\n-  orq(r10, rax);\n-  jmp(L_2TAG_PACKET_12_0_1);\n-\n-  bind(L_2TAG_PACKET_5_0_1);\n-  notl(ecx);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-  shlq(r9);\n-  movq(rdi, r9);\n-  testl(r9, INT_MIN);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_13_0_1);\n-  shrl(r9);\n-  movl(rbx, 0);\n-  shrq(rdi, 2);\n-  jmp(L_2TAG_PACKET_8_0_1);\n-\n-  bind(L_2TAG_PACKET_6_0_1);\n-  shrl(r9);\n-  movl(rbx, 1073741824);\n-  shrl(rbx);\n-  shlq(r9, 32);\n-  orq(r9, r11);\n-  shlq(rbx, 32);\n-  addl(rdi, 1073741824);\n-  movl(rcx, 0);\n-  movl(r11, 0);\n-  subq(rcx, r8);\n-  sbbq(r11, r10);\n-  sbbq(rbx, r9);\n-  movq(r8, rcx);\n-  movq(r10, r11);\n-  movq(r9, rbx);\n-  movl(rbx, 32768);\n-  jmp(L_2TAG_PACKET_7_0_1);\n-\n-  bind(L_2TAG_PACKET_13_0_1);\n-  shrl(r9);\n-  mov64(rbx, 0x100000000);\n-  shrq(rbx);\n-  movl(rcx, 0);\n-  movl(r11, 0);\n-  subq(rcx, r8);\n-  sbbq(r11, r10);\n-  sbbq(rbx, r9);\n-  movq(r8, rcx);\n-  movq(r10, r11);\n-  movq(r9, rbx);\n-  movl(rbx, 32768);\n-  shrq(rdi, 2);\n-  addl(rdi, 1073741824);\n-  jmp(L_2TAG_PACKET_8_0_1);\n-\n-  bind(L_2TAG_PACKET_4_0_1);\n-  movq(xmm0, Address(rsp, 8));\n-  mulsd(xmm0, ExternalAddress(NEG_ZERO), tmp \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n-  movq(Address(rsp, 0), xmm0);\n-\n-  bind(L_2TAG_PACKET_14_0_1);\n-\n-  bind(B1_4);\n-  addq(rsp, 16);\n-  pop(rbx);\n-}\n-#else\n-\/\/ The 32 bit code is at most SSE2 compliant\n-\n-ATTRIBUTE_ALIGNED(16) jushort _TP[] =\n-{\n-    0x4cd6, 0xaf6c, 0xc710, 0xc662, 0xbffd, 0x0000, 0x4b06, 0xb0ac, 0xd3b2, 0xcc2c,\n-    0x3ff9, 0x0000, 0x00e3, 0xc850, 0xaa28, 0x9533, 0xbff3, 0x0000, 0x2ff0, 0x466d,\n-    0x1a3b, 0xb266, 0x3fe5, 0x0000\n-};\n-\n-ATTRIBUTE_ALIGNED(16) jushort _TQ[] =\n-{\n-    0x399c, 0x8391, 0x154c, 0x94ca, 0xbfff, 0x0000, 0xb6a3, 0xc36a, 0x44e2, 0x8a2c,\n-    0x3ffe, 0x0000, 0xb70f, 0xd068, 0xa6ce, 0xe9dd, 0xbff9, 0x0000, 0x820f, 0x51ce,\n-    0x7d76, 0x9bff, 0x3ff3, 0x0000\n-};\n-\n-ATTRIBUTE_ALIGNED(16) jushort _GP[] =\n-{\n-    0xaaab, 0xaaaa, 0xaaaa, 0xaaaa, 0xbffd, 0x0000, 0xb62f, 0x0b60, 0x60b6, 0xb60b,\n-    0xbff9, 0x0000, 0xdfa7, 0x08aa, 0x55e0, 0x8ab3, 0xbff6, 0x0000, 0x85a0, 0xa819,\n-    0xbc99, 0xddeb, 0xbff2, 0x0000, 0x7065, 0x6a37, 0x795f, 0xb354, 0xbfef, 0x0000,\n-    0xa8f9, 0x83f1, 0x2ec8, 0x9140, 0xbfec, 0x0000, 0xf3ca, 0x8c96, 0x8e0b, 0xeb6d,\n-    0xbfe8, 0x0000, 0x355b, 0xd910, 0x67c9, 0xbed3, 0xbfe5, 0x0000, 0x286b, 0xb49e,\n-    0xb854, 0x9a98, 0xbfe2, 0x0000, 0x0871, 0x1a2f, 0x6477, 0xfcc4, 0xbfde, 0x0000,\n-    0xa559, 0x1da9, 0xaed2, 0xba76, 0xbfdb, 0x0000, 0x00a3, 0x7fea, 0x9bc3, 0xf205,\n-    0xbfd8, 0x0000\n-};\n-\n-void MacroAssembler::libm_tancot_huge(XMMRegister xmm0, XMMRegister xmm1, Register eax, Register ecx, Register edx, Register ebx, Register esi, Register edi, Register ebp, Register esp) {\n-  Label B1_1, B1_2, B1_3, B1_4, B1_5, B1_6, B1_7, B1_8, B1_9, B1_10, B1_11, B1_12;\n-  Label B1_13, B1_14, B1_15, B1_16, B1_17, B1_18, B1_19, B1_20, B1_21, B1_22, B1_23;\n-  Label B1_24, B1_25, B1_26, B1_27, B1_28, B1_29, B1_30, B1_31, B1_32, B1_33, B1_34;\n-  Label B1_35, B1_36, B1_37, B1_38, B1_39, B1_40, B1_43;\n-\n-  assert_different_registers(ebx, eax, ecx, edx, esi, edi, ebp, esp);\n-\n-  address TP = (address)_TP;\n-  address TQ = (address)_TQ;\n-  address GP = (address)_GP;\n-\n-  bind(B1_1);\n-  push(ebp);\n-  movl(ebp, esp);\n-  andl(esp, -64);\n-  push(esi);\n-  push(edi);\n-  push(ebx);\n-  subl(esp, 52);\n-  movl(eax, Address(ebp, 16));\n-  movl(ebx, Address(ebp, 20));\n-  movl(Address(esp, 40), eax);\n-\n-  bind(B1_2);\n-  fnstcw(Address(esp, 38));\n-\n-  bind(B1_3);\n-  movl(edx, Address(ebp, 12));\n-  movl(eax, edx);\n-  andl(eax, 2147483647);\n-  shrl(edx, 31);\n-  movl(Address(esp, 44), edx);\n-  cmpl(eax, 1104150528);\n-  jcc(Assembler::aboveEqual, B1_11);\n-\n-  bind(B1_4);\n-  movsd(xmm1, Address(ebp, 8));\n-  movzwl(ecx, Address(esp, 38));\n-  movl(edx, ecx);\n-  andl(edx, 768);\n-  andps(xmm1, ExternalAddress(L_2IL0FLOATPACKET_0));    \/\/0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n-  cmpl(edx, 768);\n-  movsd(xmm0, ExternalAddress(PI4_INV));    \/\/\/\/0x6dc9c883UL, 0x3ff45f30UL\n-  mulsd(xmm0, xmm1);\n-  movsd(Address(ebp, 8), xmm1);\n-  movsd(Address(esp, 0), xmm0);\n-  jcc(Assembler::equal, B1_39);\n-\n-  bind(B1_5);\n-  orl(ecx, -64768);\n-  movw(Address(esp, 36), ecx);\n-\n-  bind(B1_6);\n-  fldcw(Address(esp, 36));\n-\n-  bind(B1_7);\n-  movsd(xmm1, Address(ebp, 8));\n-  movl(edi, 1);\n-\n-  bind(B1_8);\n-  movl(Address(esp, 12), esi);\n-  movl(esi, Address(esp, 4));\n-  movl(edx, esi);\n-  movl(Address(esp, 24), edi);\n-  movl(edi, esi);\n-  shrl(edi, 20);\n-  andl(edx, 1048575);\n-  movl(ecx, edi);\n-  orl(edx, 1048576);\n-  negl(ecx);\n-  addl(edi, 13);\n-  movl(Address(esp, 8), ebx);\n-  addl(ecx, 19);\n-  movl(ebx, edx);\n-  movl(Address(esp, 28), ecx);\n-  shrl(ebx);\n-  movl(ecx, edi);\n-  shll(edx);\n-  movl(ecx, Address(esp, 28));\n-  movl(edi, Address(esp, 0));\n-  shrl(edi);\n-  orl(edx, edi);\n-  cmpl(esi, 1094713344);\n-  movsd(Address(esp, 16), xmm1);\n-  fld_d(Address(esp, 16));\n-  cmov32(Assembler::below, edx, ebx);\n-  movl(edi, Address(esp, 24));\n-  movl(esi, Address(esp, 12));\n-  lea(ebx, Address(edx, 1));\n-  andl(ebx, -2);\n-  movl(Address(esp, 16), ebx);\n-  cmpl(eax, 1094713344);\n-  fild_s(Address(esp, 16));\n-  movl(ebx, Address(esp, 8));\n-  jcc(Assembler::aboveEqual, B1_10);\n-\n-  bind(B1_9);\n-  fld_d(ExternalAddress(PI4X3));    \/\/0x54443000UL, 0xbfe921fbUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X3 + 8));    \/\/0x3b39a000UL, 0x3d373dcbUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X3 + 16));    \/\/0xe0e68948UL, 0xba845c06UL\n-  fmulp(1);\n-  faddp(1);\n-  jmp(B1_17);\n-\n-  bind(B1_10);\n-  fld_d(ExternalAddress(PI4X4));    \/\/0x54400000UL, 0xbfe921fbUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X4 + 8));    \/\/0x1a600000UL, 0xbdc0b461UL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X4 + 16));    \/\/0x2e000000UL, 0xbb93198aUL\n-  fmul(1);\n-  faddp(2);\n-  fld_d(ExternalAddress(PI4X4 + 24));    \/\/0x252049c1UL, 0xb96b839aUL\n-  fmulp(1);\n-  faddp(1);\n-  jmp(B1_17);\n-\n-  bind(B1_11);\n-  movzwl(edx, Address(esp, 38));\n-  movl(eax, edx);\n-  andl(eax, 768);\n-  cmpl(eax, 768);\n-  jcc(Assembler::equal, B1_40);\n-\n-  bind(B1_12);\n-  orl(edx, -64768);\n-  movw(Address(esp, 36), edx);\n-\n-  bind(B1_13);\n-  fldcw(Address(esp, 36));\n-\n-  bind(B1_14);\n-  movl(edi, 1);\n-\n-  bind(B1_15);\n-  movsd(xmm0, Address(ebp, 8));\n-  addl(esp, -32);\n-  andps(xmm0, ExternalAddress(L_2IL0FLOATPACKET_0));    \/\/0xffffffffUL, 0x7fffffffUL, 0x00000000UL, 0x00000000UL\n-  lea(eax, Address(esp, 32));\n-  movsd(Address(eax, 16), xmm0);\n-  fld_d(Address(eax, 16));\n-  fstp_x(Address(esp, 0));\n-  movl(Address(esp, 12), 0);\n-  movl(Address(esp, 16), eax);\n-  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_reduce_pi04l())));\n-\n-  bind(B1_43);\n-  movl(edx, eax);\n-  addl(esp, 32);\n-\n-  bind(B1_16);\n-  fld_d(Address(esp, 0));\n-  fld_d(Address(esp, 8));\n-  faddp(1);\n-\n-  bind(B1_17);\n-  movl(eax, ebx);\n-  andl(eax, 3);\n-  cmpl(eax, 3);\n-  jcc(Assembler::notEqual, B1_24);\n-\n-  bind(B1_18);\n-  fld_d(ExternalAddress(ONES));\n-  incl(edx);\n-  fdiv(1);\n-  testb(edx, 2);\n-  fstp_x(Address(esp, 24));\n-  fld_s(0);\n-  fmul(1);\n-  fld_s(0);\n-  fmul(1);\n-  fld_x(ExternalAddress(36 + TP));    \/\/0x2ff0, 0x466d, 0x1a\n-  fmul(2);\n-  fld_x(ExternalAddress(24 + TP));    \/\/0x00e3, 0xc850, 0xaa\n-  faddp(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(12 + TP));    \/\/0x4b06, 0xb0ac, 0xd3\n-  faddp(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(36 + TQ));    \/\/0x820f, 0x51ce, 0x7d\n-  fmul(3);\n-  fld_x(ExternalAddress(24 + TQ));    \/\/0xb70f, 0xd068, 0xa6\n-  faddp(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(12 + TQ));    \/\/0xb6a3, 0xc36a, 0x44\n-  faddp(1);\n-  fmul(3);\n-  fld_x(ExternalAddress(TQ));    \/\/0x399c, 0x8391, 0x15\n-  faddp(1);\n-  fld_x(ExternalAddress(TP));    \/\/0x4cd6, 0xaf6c, 0xc7\n-  faddp(2);\n-  fld_x(ExternalAddress(132 + GP));    \/\/0x00a3, 0x7fea, 0x9b\n-  fmul(3);\n-  fld_x(ExternalAddress(120 + GP));    \/\/0xa559, 0x1da9, 0xae\n-  fmul(4);\n-  fld_x(ExternalAddress(108 + GP));    \/\/0x0871, 0x1a2f, 0x64\n-  faddp(2);\n-  fxch(1);\n-  fmul(4);\n-  fld_x(ExternalAddress(96 + GP));    \/\/0x286b, 0xb49e, 0xb8\n-  faddp(2);\n-  fxch(1);\n-  fmul(4);\n-  fld_x(ExternalAddress(84 + GP));    \/\/0x355b, 0xd910, 0x67\n-  faddp(2);\n-  fxch(1);\n-  fmul(4);\n-  fld_x(ExternalAddress(72 + GP));    \/\/0x8c96, 0x8e0b, 0xeb\n-  faddp(2);\n-  fxch(1);\n-  fmul(4);\n-  fld_x(ExternalAddress(60 + GP));    \/\/0xa8f9, 0x83f1, 0x2e\n-  faddp(2);\n-  fxch(1);\n-  fmul(4);\n-  fld_x(ExternalAddress(48 + GP));    \/\/0x7065, 0x6a37, 0x79\n-  faddp(2);\n-  fxch(1);\n-  fmul(4);\n-  fld_x(ExternalAddress(36 + GP));    \/\/0x85a0, 0xa819, 0xbc\n-  faddp(2);\n-  fxch(1);\n-  fmul(4);\n-  fld_x(ExternalAddress(24 + GP));    \/\/0xdfa7, 0x08aa, 0x55\n-  faddp(2);\n-  fxch(1);\n-  fmulp(4);\n-  fld_x(ExternalAddress(12 + GP));    \/\/0xb62f, 0x0b60, 0x60\n-  faddp(1);\n-  fmul(4);\n-  fmul(5);\n-  fld_x(ExternalAddress(GP));    \/\/0xaaab, 0xaaaa, 0xaa\n-  faddp(4);\n-  fxch(3);\n-  fmul(5);\n-  faddp(3);\n-  jcc(Assembler::equal, B1_20);\n-\n-  bind(B1_19);\n-  fld_x(Address(esp, 24));\n-  fxch(1);\n-  fdivrp(2);\n-  fxch(1);\n-  fmulp(3);\n-  movl(eax, Address(esp, 44));\n-  xorl(eax, 1);\n-  fxch(2);\n-  fmul(3);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmula(2);\n-  fmula(3);\n-  fxch(3);\n-  faddp(2);\n-  fxch(1);\n-  fstp_d(Address(esp, 16));\n-  fmul(1);\n-  fxch(1);\n-  fmulp(2);\n-  movsd(xmm0, Address(esp, 16));\n-  faddp(1);\n-  fstp_d(Address(esp, 16));\n-  movsd(xmm1, Address(esp, 16));\n-  jmp(B1_21);\n-\n-  bind(B1_20);\n-  fdivrp(1);\n-  fmulp(2);\n-  fxch(1);\n-  fmul(2);\n-  movl(eax, Address(esp, 44));\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmula(1);\n-  fmula(3);\n-  fxch(3);\n-  faddp(1);\n-  fstp_d(Address(esp, 16));\n-  fmul(1);\n-  fld_x(Address(esp, 24));\n-  fmulp(2);\n-  movsd(xmm0, Address(esp, 16));\n-  faddp(1);\n-  fstp_d(Address(esp, 16));\n-  movsd(xmm1, Address(esp, 16));\n-\n-  bind(B1_21);\n-  testl(edi, edi);\n-  jcc(Assembler::equal, B1_23);\n-\n-  bind(B1_22);\n-  fldcw(Address(esp, 38));\n-\n-  bind(B1_23);\n-  movl(eax, Address(esp, 40));\n-  movsd(Address(eax, 0), xmm0);\n-  movsd(Address(eax, 8), xmm1);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_24);\n-  testb(ebx, 2);\n-  jcc(Assembler::equal, B1_31);\n-\n-  bind(B1_25);\n-  incl(edx);\n-  fld_s(0);\n-  fmul(1);\n-  testb(edx, 2);\n-  jcc(Assembler::equal, B1_27);\n-\n-  bind(B1_26);\n-  fld_d(ExternalAddress(ONES));\n-  fdiv(2);\n-  fld_s(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(132 + GP));    \/\/0x00a3, 0x7fea, 0x9b\n-  fmul(1);\n-  fld_x(ExternalAddress(120 + GP));    \/\/0xa559, 0x1da9, 0xae\n-  fmul(2);\n-  fld_x(ExternalAddress(108 + GP));    \/\/0x67c9, 0xbed3, 0xbf\n-  movl(eax, Address(esp, 44));\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  xorl(eax, 1);\n-  fld_x(ExternalAddress(96 + GP));    \/\/0x286b, 0xb49e, 0xb8\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(84 + GP));    \/\/0x355b, 0xd910, 0x67\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(72 + GP));    \/\/0xf3ca, 0x8c96, 0x8e\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(60 + GP));    \/\/0xa8f9, 0x83f1, 0x2e\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(48 + GP));    \/\/0x7065, 0x6a37, 0x79\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(36 + GP));    \/\/0x85a0, 0xa819, 0xbc\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(24 + GP));    \/\/0xdfa7, 0x08aa, 0x55\n-  faddp(2);\n-  fxch(1);\n-  fmulp(2);\n-  fld_x(ExternalAddress(12 + GP));    \/\/0xb62f, 0x0b60, 0x60\n-  faddp(1);\n-  fmulp(3);\n-  fld_x(ExternalAddress(GP));    \/\/0xaaab, 0xaaaa, 0xaa\n-  faddp(1);\n-  fmul(3);\n-  fxch(2);\n-  fmulp(3);\n-  fxch(1);\n-  faddp(2);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmula(2);\n-  fmulp(1);\n-  faddp(1);\n-  fstp_d(Address(esp, 16));\n-  movsd(xmm0, Address(esp, 16));\n-  jmp(B1_28);\n-\n-  bind(B1_27);\n-  fld_x(ExternalAddress(36 + TP));    \/\/0x2ff0, 0x466d, 0x1a\n-  fmul(1);\n-  fld_x(ExternalAddress(24 + TP));    \/\/0x00e3, 0xc850, 0xaa\n-  movl(eax, Address(esp, 44));\n-  faddp(1);\n-  fmul(1);\n-  fld_x(ExternalAddress(36 + TQ));    \/\/0x820f, 0x51ce, 0x7d\n-  fmul(2);\n-  fld_x(ExternalAddress(24 + TQ));    \/\/0xb70f, 0xd068, 0xa6\n-  faddp(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(12 + TQ));    \/\/0xb6a3, 0xc36a, 0x44\n-  faddp(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(TQ));    \/\/0x399c, 0x8391, 0x15\n-  faddp(1);\n-  fld_x(ExternalAddress(12 + TP));    \/\/0x4b06, 0xb0ac, 0xd3\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(TP));    \/\/0x4cd6, 0xaf6c, 0xc7\n-  faddp(1);\n-  fdivrp(1);\n-  fmulp(1);\n-  fmul(1);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmula(1);\n-  fmulp(2);\n-  faddp(1);\n-  fstp_d(Address(esp, 16));\n-  movsd(xmm0, Address(esp, 16));\n-\n-  bind(B1_28);\n-  testl(edi, edi);\n-  jcc(Assembler::equal, B1_30);\n-\n-  bind(B1_29);\n-  fldcw(Address(esp, 38));\n-\n-  bind(B1_30);\n-  movl(eax, Address(esp, 40));\n-  movsd(Address(eax, 0), xmm0);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  movl(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_31);\n-  testb(ebx, 1);\n-  jcc(Assembler::equal, B1_38);\n-\n-  bind(B1_32);\n-  incl(edx);\n-  fld_s(0);\n-  fmul(1);\n-  testb(edx, 2);\n-  jcc(Assembler::equal, B1_34);\n-\n-  bind(B1_33);\n-  fld_x(ExternalAddress(36 + TP));    \/\/0x2ff0, 0x466d, 0x1a\n-  fmul(1);\n-  fld_x(ExternalAddress(24 + TP));    \/\/0x00e3, 0xc850, 0xaa\n-  movl(eax, Address(esp, 44));\n-  faddp(1);\n-  fmul(1);\n-  xorl(eax, 1);\n-  fld_x(ExternalAddress(36 + TQ));    \/\/0x820f, 0x51ce, 0x7d\n-  fmul(2);\n-  fld_x(ExternalAddress(24 + TQ));    \/\/0xb70f, 0xd068, 0xa6\n-  faddp(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(12 + TQ));    \/\/0xb6a3, 0xc36a, 0x44\n-  faddp(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(TQ));    \/\/0x399c, 0x8391, 0x15\n-  faddp(1);\n-  fld_x(ExternalAddress(12 + TP));    \/\/0x4b06, 0xb0ac, 0xd3\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(TP));    \/\/0x4cd6, 0xaf6c, 0xc7\n-  faddp(1);\n-  fdivrp(1);\n-  fmulp(1);\n-  fmul(1);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmula(1);\n-  fmulp(2);\n-  faddp(1);\n-  fstp_d(Address(esp, 16));\n-  movsd(xmm0, Address(esp, 16));\n-  jmp(B1_35);\n-\n-  bind(B1_34);\n-  fld_d(ExternalAddress(ONES));\n-  fdiv(2);\n-  fld_s(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(132 + GP));    \/\/0x00a3, 0x7fea, 0x9b\n-  fmul(1);\n-  fld_x(ExternalAddress(120 + GP));    \/\/0xa559, 0x1da9, 0xae\n-  fmul(2);\n-  fld_x(ExternalAddress(108 + GP));    \/\/0x67c9, 0xbed3, 0xbf\n-  movl(eax, Address(esp, 44));\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(96 + GP));    \/\/0x286b, 0xb49e, 0xb8\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(84 + GP));    \/\/0x355b, 0xd910, 0x67\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(72 + GP));    \/\/0xf3ca, 0x8c96, 0x8e\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(60 + GP));    \/\/0xa8f9, 0x83f1, 0x2e\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(48 + GP));    \/\/0x7065, 0x6a37, 0x79\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(36 + GP));    \/\/0x85a0, 0xa819, 0xbc\n-  faddp(2);\n-  fxch(1);\n-  fmul(2);\n-  fld_x(ExternalAddress(24 + GP));    \/\/0xdfa7, 0x08aa, 0x55\n-  faddp(2);\n-  fxch(1);\n-  fmulp(2);\n-  fld_x(ExternalAddress(12 + GP));    \/\/0xb62f, 0x0b60, 0x60\n-  faddp(1);\n-  fmulp(3);\n-  fld_x(ExternalAddress(GP));    \/\/0xaaab, 0xaaaa, 0xaa\n-  faddp(1);\n-  fmul(3);\n-  fxch(2);\n-  fmulp(3);\n-  fxch(1);\n-  faddp(2);\n-  fld_d(Address(ONES, RelocationHolder::none).plus_disp(eax, Address::times_8));\n-  fmula(2);\n-  fmulp(1);\n-  faddp(1);\n-  fstp_d(Address(esp, 16));\n-  movsd(xmm0, Address(esp, 16));\n-\n-  bind(B1_35);\n-  testl(edi, edi);\n-  jcc(Assembler::equal, B1_37);\n-\n-  bind(B1_36);\n-  fldcw(Address(esp, 38));\n-\n-  bind(B1_37);\n-  movl(eax, Address(esp, 40));\n-  movsd(Address(eax, 8), xmm0);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  mov(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_38);\n-  fstp_d(0);\n-  addl(esp, 52);\n-  pop(ebx);\n-  pop(edi);\n-  pop(esi);\n-  mov(esp, ebp);\n-  pop(ebp);\n-  ret(0);\n-\n-  bind(B1_39);\n-  xorl(edi, edi);\n-  jmp(B1_8);\n-\n-  bind(B1_40);\n-  xorl(edi, edi);\n-  jmp(B1_15);\n-}\n-\n-ATTRIBUTE_ALIGNED(16) juint _static_const_table_tan[] =\n-{\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x882c10faUL,\n-    0x3f9664f4UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x55e6c23dUL, 0x3f8226e3UL, 0x55555555UL,\n-    0x3fd55555UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x0e157de0UL, 0x3f6d6d3dUL, 0x11111111UL, 0x3fc11111UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x452b75e3UL, 0x3f57da36UL,\n-    0x1ba1ba1cUL, 0x3faba1baUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n-    0x3f953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n-    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0x3f85ad63UL, 0xdc230b9bUL,\n-    0x3fb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n-    0x77bb08baUL, 0x3f757c85UL, 0xb6247521UL, 0x3fb1381eUL, 0x5922170cUL,\n-    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0x3f64e391UL,\n-    0x3e666320UL, 0x3fa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n-    0x3fafa8aeUL, 0x8c5b2da2UL, 0x3fb936bbUL, 0x4e88f7a5UL, 0x3c587d05UL,\n-    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x5a279ea3UL, 0x3faa3407UL,\n-    0x00000000UL, 0x00000000UL, 0x432d65faUL, 0x3fa70153UL, 0x00000000UL,\n-    0x00000000UL, 0x891a4602UL, 0x3f9d03efUL, 0xd62ca5f8UL, 0x3fca77d9UL,\n-    0xb35f4628UL, 0x3f97a265UL, 0x433258faUL, 0x3fd8cf51UL, 0xb58fd909UL,\n-    0x3f8f88e3UL, 0x01771ceaUL, 0x3fc2b154UL, 0xf3562f8eUL, 0x3f888f57UL,\n-    0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL, 0x3f80f44cUL, 0x214368e9UL,\n-    0x3fb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL, 0x172dbbf0UL, 0x3fb6cb8eUL,\n-    0xe0553158UL, 0x3fc975f5UL, 0x593fe814UL, 0x3c2ef5d3UL, 0x00000000UL,\n-    0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x9314533eUL, 0x3fbb8ec5UL, 0x00000000UL,\n-    0x00000000UL, 0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL,\n-    0xdcb427fdUL, 0x3fb13950UL, 0xd87ab0bbUL, 0x3fd5335eUL, 0xce0ae8a5UL,\n-    0x3fabb382UL, 0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0x3fa552f1UL,\n-    0x59f21a6dUL, 0x3fd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL,\n-    0x3fd0576cUL, 0x8f2c2950UL, 0x3f9a4898UL, 0xc0b3f22cUL, 0x3fc59462UL,\n-    0x1883a4b8UL, 0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL,\n-    0x3fd36a08UL, 0x1dce993dUL, 0xbc6d704dUL, 0x00000000UL, 0x3ff00000UL,\n-    0x2b82ab63UL, 0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x56f37042UL, 0x3fccfc56UL, 0x00000000UL, 0x00000000UL,\n-    0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL, 0x3d0e7c5dUL,\n-    0x3fc50533UL, 0x9bed9b2eUL, 0x3fdf0ed9UL, 0x5fe7c47cUL, 0x3fc1f250UL,\n-    0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0x3fbe5c71UL, 0x86362c20UL,\n-    0x3fda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL, 0x3fd911bdUL,\n-    0xb56658beUL, 0x3fb5e4c7UL, 0x93a2fd76UL, 0x3fd3c092UL, 0xda271794UL,\n-    0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL, 0x3fda8279UL,\n-    0xb68c1467UL, 0x3c708b2fUL, 0x00000000UL, 0x3ff00000UL, 0x980c4337UL,\n-    0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0xcc03e501UL, 0x3fdff10fUL, 0x00000000UL, 0x00000000UL, 0x44a4e845UL,\n-    0x3fddb63bUL, 0x00000000UL, 0x00000000UL, 0x3768ad9fUL, 0x3fdb72a4UL,\n-    0x3dd01ccaUL, 0x3fe5fdb9UL, 0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL,\n-    0x3fe977f9UL, 0xd013b3abUL, 0x3fd78ca3UL, 0xbf0bf914UL, 0x3fe4f192UL,\n-    0x4d53e730UL, 0x3fd5d060UL, 0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL,\n-    0x3fd4322aUL, 0x5936a835UL, 0x3fe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL,\n-    0xef478605UL, 0x3fe1659eUL, 0x190834ecUL, 0x3fe11ab7UL, 0xcdb625eaUL,\n-    0xbc8e564bUL, 0x00000000UL, 0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n-    0x3ff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n-    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0x3ff3972eUL, 0xe93463bdUL,\n-    0x3feeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n-    0xa04e8ea3UL, 0x3ff4541aUL, 0x386accd3UL, 0x3ff1369eUL, 0x222a66ddUL,\n-    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0x3ff5178fUL,\n-    0xddaa0031UL, 0x3ff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n-    0x3ff29311UL, 0x2ab7f990UL, 0x3fe561b8UL, 0x209c7df1UL, 0x3c87a8c5UL,\n-    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc7ab4d5aUL, 0x40085e24UL,\n-    0x00000000UL, 0x00000000UL, 0xe93ea75dUL, 0x400b963dUL, 0x00000000UL,\n-    0x00000000UL, 0x94a7f25aUL, 0x400f37e2UL, 0x4b6261cbUL, 0x3ff5f984UL,\n-    0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL, 0x3ffaf5a5UL, 0x7f2ce8e3UL,\n-    0x4013fe8bUL, 0xfe8e54faUL, 0x3ffd7334UL, 0x670d618dUL, 0x4016a10cUL,\n-    0x4db97058UL, 0x4000e012UL, 0x24df44ddUL, 0x40199c5fUL, 0x697d6eceUL,\n-    0x4003006eUL, 0x83298b82UL, 0x401cfc4dUL, 0x19d490d6UL, 0x40058c19UL,\n-    0x2ae42850UL, 0x3fea4300UL, 0x118e20e6UL, 0xbc7a6db8UL, 0x00000000UL,\n-    0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x65965966UL, 0x40219659UL, 0x00000000UL,\n-    0x00000000UL, 0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL,\n-    0x83cd3723UL, 0x402c8342UL, 0x00000000UL, 0x40000000UL, 0x55e6c23dUL,\n-    0x403226e3UL, 0x55555555UL, 0x40055555UL, 0x34451939UL, 0x40371c96UL,\n-    0xaaaaaaabUL, 0x400aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL,\n-    0x40111111UL, 0xa738201fUL, 0x4042bbceUL, 0x05b05b06UL, 0x4015b05bUL,\n-    0x452b75e3UL, 0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x4f48b8d3UL, 0xbf33eaf9UL, 0x00000000UL, 0x00000000UL,\n-    0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL, 0xd0258911UL,\n-    0xbf0abaf3UL, 0x23e49fe9UL, 0xbfab5a8cUL, 0x2d53222eUL, 0x3ef60d15UL,\n-    0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0xbee1d3b5UL, 0xdbf93b8eUL,\n-    0xbf84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL, 0x3f743924UL,\n-    0x794a8297UL, 0xbeb7b7b9UL, 0xe015f797UL, 0xbf5d41f5UL, 0xe41a4a56UL,\n-    0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL, 0xbfce49ceUL,\n-    0x8c743719UL, 0x3d1eb860UL, 0x00000000UL, 0x00000000UL, 0x1b4863cfUL,\n-    0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n-    0x535ad890UL, 0xbf2b9320UL, 0x00000000UL, 0x00000000UL, 0x018fdf1fUL,\n-    0x3f16d61dUL, 0x00000000UL, 0x00000000UL, 0x0359f1beUL, 0xbf0139e4UL,\n-    0xa4317c6dUL, 0xbfa67e17UL, 0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL,\n-    0x3f9f455bUL, 0x51ccf238UL, 0xbed55317UL, 0xf437b9acUL, 0xbf804beeUL,\n-    0xc791a2b5UL, 0x3ec0e993UL, 0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL,\n-    0xbeaa48a2UL, 0x0a268358UL, 0xbf55a443UL, 0xdfd978e4UL, 0x3e94b61fUL,\n-    0xd7767a58UL, 0x3f431806UL, 0x2aea0000UL, 0xbfc9bbe8UL, 0x7723ea61UL,\n-    0xbd3a2369UL, 0x00000000UL, 0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n-    0xbf231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n-    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0xbef66191UL, 0x848a46c6UL,\n-    0xbfa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n-    0xfdd299efUL, 0xbec9dd1aUL, 0x3f8dbaafUL, 0xbf793363UL, 0x309fc6eaUL,\n-    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0xbe9dae11UL,\n-    0x3e5c67b3UL, 0xbf4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n-    0x3f3d1eb1UL, 0x29cfc000UL, 0xbfc549ceUL, 0xbf159358UL, 0xbd397b33UL,\n-    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x7d98a556UL, 0xbf1a3958UL,\n-    0x00000000UL, 0x00000000UL, 0x9d88dc01UL, 0x3f0704c2UL, 0x00000000UL,\n-    0x00000000UL, 0x73742a2bUL, 0xbeed054aUL, 0x58844587UL, 0xbf9c2a13UL,\n-    0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL, 0x3f9a48f4UL, 0xa8dc9888UL,\n-    0xbebf8939UL, 0xaad4b5b8UL, 0xbf72f746UL, 0x9102efa1UL, 0x3ea88f82UL,\n-    0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL, 0xbe90f456UL, 0x741fb4edUL,\n-    0xbf46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL, 0xca89ff3fUL, 0x3f36db70UL,\n-    0xa8a2a000UL, 0xbfc0ee13UL, 0x3da24be1UL, 0xbd338b9fUL, 0x00000000UL,\n-    0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0xfffffff8UL, 0x1a154b97UL, 0xbf116b01UL, 0x00000000UL,\n-    0x00000000UL, 0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL,\n-    0xb93820c8UL, 0xbee264d4UL, 0xbb6cbb18UL, 0xbf94ab8cUL, 0x888d4d92UL,\n-    0x3ed0568bUL, 0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0xbeb2f950UL,\n-    0x22cf9f74UL, 0xbf6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL,\n-    0x3f64aad7UL, 0x637b73afUL, 0xbe83487cUL, 0xe522591aUL, 0xbf3fc092UL,\n-    0xa158e8bcUL, 0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL,\n-    0xbfb9477fUL, 0xc2c2d2bcUL, 0xbd135ef9UL, 0x00000000UL, 0x00000000UL,\n-    0xf2fdb123UL, 0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n-    0xfffffff8UL, 0xc41acb64UL, 0xbf05448dUL, 0x00000000UL, 0x00000000UL,\n-    0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL, 0x9e42962dUL,\n-    0xbed5aea5UL, 0x2579f8efUL, 0xbf8b2398UL, 0x288a1ed9UL, 0x3ec81441UL,\n-    0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0xbea57cd3UL, 0x5766336fUL,\n-    0xbf617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL, 0x3f62c646UL,\n-    0x6b8fb29cUL, 0xbe74e3a3UL, 0xdc4c0409UL, 0xbf33f952UL, 0x9bffe365UL,\n-    0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL, 0xbfb0cc62UL,\n-    0x016b907fUL, 0xbd119cbcUL, 0x00000000UL, 0x00000000UL, 0xe6b9d8faUL,\n-    0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n-    0x5daf22a6UL, 0xbef429d7UL, 0x00000000UL, 0x00000000UL, 0x06bca545UL,\n-    0x3ef7a27dUL, 0x00000000UL, 0x00000000UL, 0x7211c19aUL, 0xbec41c3eUL,\n-    0x956ed53eUL, 0xbf7ae3f4UL, 0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL,\n-    0x3f96f713UL, 0x36661e6cUL, 0xbe936e09UL, 0x506f9381UL, 0xbf5122e8UL,\n-    0xcb6dd43fUL, 0x3e9041b9UL, 0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL,\n-    0xbe625a8aUL, 0xe5a0e9dcUL, 0xbf23499dUL, 0x110384ddUL, 0x3e5b1c2cUL,\n-    0x68d43db6UL, 0x3f2cb899UL, 0x6ecac000UL, 0xbfa0c414UL, 0xcd7dd58cUL,\n-    0x3d13500fUL, 0x00000000UL, 0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2bf70ebeUL, 0x3ef66a8fUL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0xd644267fUL, 0x3ec22805UL, 0x16c16c17UL, 0x3f96c16cUL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc4e09162UL,\n-    0x3e8d6db2UL, 0xbc011567UL, 0x3f61566aUL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x1f79955cUL, 0x3e57da4eUL, 0x9334ef0bUL,\n-    0x3f2bbd77UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x55555555UL, 0x3fd55555UL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x5daf22a6UL, 0x3ef429d7UL,\n-    0x00000000UL, 0x00000000UL, 0x06bca545UL, 0x3ef7a27dUL, 0x00000000UL,\n-    0x00000000UL, 0x7211c19aUL, 0x3ec41c3eUL, 0x956ed53eUL, 0x3f7ae3f4UL,\n-    0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL, 0x3f96f713UL, 0x36661e6cUL,\n-    0x3e936e09UL, 0x506f9381UL, 0x3f5122e8UL, 0xcb6dd43fUL, 0x3e9041b9UL,\n-    0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL, 0x3e625a8aUL, 0xe5a0e9dcUL,\n-    0x3f23499dUL, 0x110384ddUL, 0x3e5b1c2cUL, 0x68d43db6UL, 0x3f2cb899UL,\n-    0x6ecac000UL, 0x3fa0c414UL, 0xcd7dd58cUL, 0xbd13500fUL, 0x00000000UL,\n-    0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0xfffffff8UL, 0xc41acb64UL, 0x3f05448dUL, 0x00000000UL,\n-    0x00000000UL, 0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL,\n-    0x9e42962dUL, 0x3ed5aea5UL, 0x2579f8efUL, 0x3f8b2398UL, 0x288a1ed9UL,\n-    0x3ec81441UL, 0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0x3ea57cd3UL,\n-    0x5766336fUL, 0x3f617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL,\n-    0x3f62c646UL, 0x6b8fb29cUL, 0x3e74e3a3UL, 0xdc4c0409UL, 0x3f33f952UL,\n-    0x9bffe365UL, 0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL,\n-    0x3fb0cc62UL, 0x016b907fUL, 0x3d119cbcUL, 0x00000000UL, 0x00000000UL,\n-    0xe6b9d8faUL, 0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n-    0xfffffff8UL, 0x1a154b97UL, 0x3f116b01UL, 0x00000000UL, 0x00000000UL,\n-    0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL, 0xb93820c8UL,\n-    0x3ee264d4UL, 0xbb6cbb18UL, 0x3f94ab8cUL, 0x888d4d92UL, 0x3ed0568bUL,\n-    0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0x3eb2f950UL, 0x22cf9f74UL,\n-    0x3f6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL, 0x3f64aad7UL,\n-    0x637b73afUL, 0x3e83487cUL, 0xe522591aUL, 0x3f3fc092UL, 0xa158e8bcUL,\n-    0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL, 0x3fb9477fUL,\n-    0xc2c2d2bcUL, 0x3d135ef9UL, 0x00000000UL, 0x00000000UL, 0xf2fdb123UL,\n-    0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n-    0x7d98a556UL, 0x3f1a3958UL, 0x00000000UL, 0x00000000UL, 0x9d88dc01UL,\n-    0x3f0704c2UL, 0x00000000UL, 0x00000000UL, 0x73742a2bUL, 0x3eed054aUL,\n-    0x58844587UL, 0x3f9c2a13UL, 0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL,\n-    0x3f9a48f4UL, 0xa8dc9888UL, 0x3ebf8939UL, 0xaad4b5b8UL, 0x3f72f746UL,\n-    0x9102efa1UL, 0x3ea88f82UL, 0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL,\n-    0x3e90f456UL, 0x741fb4edUL, 0x3f46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL,\n-    0xca89ff3fUL, 0x3f36db70UL, 0xa8a2a000UL, 0x3fc0ee13UL, 0x3da24be1UL,\n-    0x3d338b9fUL, 0x00000000UL, 0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL,\n-    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n-    0x3f231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n-    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0x3ef66191UL, 0x848a46c6UL,\n-    0x3fa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n-    0xfdd299efUL, 0x3ec9dd1aUL, 0x3f8dbaafUL, 0x3f793363UL, 0x309fc6eaUL,\n-    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0x3e9dae11UL,\n-    0x3e5c67b3UL, 0x3f4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n-    0x3f3d1eb1UL, 0x29cfc000UL, 0x3fc549ceUL, 0xbf159358UL, 0x3d397b33UL,\n-    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n-    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x535ad890UL, 0x3f2b9320UL,\n-    0x00000000UL, 0x00000000UL, 0x018fdf1fUL, 0x3f16d61dUL, 0x00000000UL,\n-    0x00000000UL, 0x0359f1beUL, 0x3f0139e4UL, 0xa4317c6dUL, 0x3fa67e17UL,\n-    0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL, 0x3f9f455bUL, 0x51ccf238UL,\n-    0x3ed55317UL, 0xf437b9acUL, 0x3f804beeUL, 0xc791a2b5UL, 0x3ec0e993UL,\n-    0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL, 0x3eaa48a2UL, 0x0a268358UL,\n-    0x3f55a443UL, 0xdfd978e4UL, 0x3e94b61fUL, 0xd7767a58UL, 0x3f431806UL,\n-    0x2aea0000UL, 0x3fc9bbe8UL, 0x7723ea61UL, 0x3d3a2369UL, 0x00000000UL,\n-    0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL, 0x00000000UL, 0x3ff00000UL,\n-    0x00000000UL, 0xfffffff8UL, 0x4f48b8d3UL, 0x3f33eaf9UL, 0x00000000UL,\n-    0x00000000UL, 0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL,\n-    0xd0258911UL, 0x3f0abaf3UL, 0x23e49fe9UL, 0x3fab5a8cUL, 0x2d53222eUL,\n-    0x3ef60d15UL, 0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0x3ee1d3b5UL,\n-    0xdbf93b8eUL, 0x3f84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL,\n-    0x3f743924UL, 0x794a8297UL, 0x3eb7b7b9UL, 0xe015f797UL, 0x3f5d41f5UL,\n-    0xe41a4a56UL, 0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL,\n-    0x3fce49ceUL, 0x8c743719UL, 0xbd1eb860UL, 0x00000000UL, 0x00000000UL,\n-    0x1b4863cfUL, 0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n-    0xfffffff8UL, 0x65965966UL, 0xc0219659UL, 0x00000000UL, 0x00000000UL,\n-    0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL, 0x83cd3723UL,\n-    0xc02c8342UL, 0x00000000UL, 0xc0000000UL, 0x55e6c23dUL, 0x403226e3UL,\n-    0x55555555UL, 0x40055555UL, 0x34451939UL, 0xc0371c96UL, 0xaaaaaaabUL,\n-    0xc00aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL, 0x40111111UL,\n-    0xa738201fUL, 0xc042bbceUL, 0x05b05b06UL, 0xc015b05bUL, 0x452b75e3UL,\n-    0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL, 0xbff00000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0xc7ab4d5aUL, 0xc0085e24UL, 0x00000000UL, 0x00000000UL, 0xe93ea75dUL,\n-    0x400b963dUL, 0x00000000UL, 0x00000000UL, 0x94a7f25aUL, 0xc00f37e2UL,\n-    0x4b6261cbUL, 0xbff5f984UL, 0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL,\n-    0x3ffaf5a5UL, 0x7f2ce8e3UL, 0xc013fe8bUL, 0xfe8e54faUL, 0xbffd7334UL,\n-    0x670d618dUL, 0x4016a10cUL, 0x4db97058UL, 0x4000e012UL, 0x24df44ddUL,\n-    0xc0199c5fUL, 0x697d6eceUL, 0xc003006eUL, 0x83298b82UL, 0x401cfc4dUL,\n-    0x19d490d6UL, 0x40058c19UL, 0x2ae42850UL, 0xbfea4300UL, 0x118e20e6UL,\n-    0x3c7a6db8UL, 0x00000000UL, 0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n-    0xbff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n-    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0xbff3972eUL, 0xe93463bdUL,\n-    0xbfeeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n-    0xa04e8ea3UL, 0xbff4541aUL, 0x386accd3UL, 0xbff1369eUL, 0x222a66ddUL,\n-    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0xbff5178fUL,\n-    0xddaa0031UL, 0xbff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n-    0x3ff29311UL, 0x2ab7f990UL, 0xbfe561b8UL, 0x209c7df1UL, 0xbc87a8c5UL,\n-    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xcc03e501UL, 0xbfdff10fUL,\n-    0x00000000UL, 0x00000000UL, 0x44a4e845UL, 0x3fddb63bUL, 0x00000000UL,\n-    0x00000000UL, 0x3768ad9fUL, 0xbfdb72a4UL, 0x3dd01ccaUL, 0xbfe5fdb9UL,\n-    0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL, 0x3fe977f9UL, 0xd013b3abUL,\n-    0xbfd78ca3UL, 0xbf0bf914UL, 0xbfe4f192UL, 0x4d53e730UL, 0x3fd5d060UL,\n-    0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL, 0xbfd4322aUL, 0x5936a835UL,\n-    0xbfe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL, 0xef478605UL, 0x3fe1659eUL,\n-    0x190834ecUL, 0xbfe11ab7UL, 0xcdb625eaUL, 0x3c8e564bUL, 0x00000000UL,\n-    0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x56f37042UL, 0xbfccfc56UL, 0x00000000UL,\n-    0x00000000UL, 0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL,\n-    0x3d0e7c5dUL, 0xbfc50533UL, 0x9bed9b2eUL, 0xbfdf0ed9UL, 0x5fe7c47cUL,\n-    0x3fc1f250UL, 0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0xbfbe5c71UL,\n-    0x86362c20UL, 0xbfda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL,\n-    0x3fd911bdUL, 0xb56658beUL, 0xbfb5e4c7UL, 0x93a2fd76UL, 0xbfd3c092UL,\n-    0xda271794UL, 0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL,\n-    0xbfda8279UL, 0xb68c1467UL, 0xbc708b2fUL, 0x00000000UL, 0x3ff00000UL,\n-    0x980c4337UL, 0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x9314533eUL, 0xbfbb8ec5UL, 0x00000000UL, 0x00000000UL,\n-    0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL, 0xdcb427fdUL,\n-    0xbfb13950UL, 0xd87ab0bbUL, 0xbfd5335eUL, 0xce0ae8a5UL, 0x3fabb382UL,\n-    0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0xbfa552f1UL, 0x59f21a6dUL,\n-    0xbfd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL, 0x3fd0576cUL,\n-    0x8f2c2950UL, 0xbf9a4898UL, 0xc0b3f22cUL, 0xbfc59462UL, 0x1883a4b8UL,\n-    0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL, 0xbfd36a08UL,\n-    0x1dce993dUL, 0x3c6d704dUL, 0x00000000UL, 0x3ff00000UL, 0x2b82ab63UL,\n-    0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n-    0x5a279ea3UL, 0xbfaa3407UL, 0x00000000UL, 0x00000000UL, 0x432d65faUL,\n-    0x3fa70153UL, 0x00000000UL, 0x00000000UL, 0x891a4602UL, 0xbf9d03efUL,\n-    0xd62ca5f8UL, 0xbfca77d9UL, 0xb35f4628UL, 0x3f97a265UL, 0x433258faUL,\n-    0x3fd8cf51UL, 0xb58fd909UL, 0xbf8f88e3UL, 0x01771ceaUL, 0xbfc2b154UL,\n-    0xf3562f8eUL, 0x3f888f57UL, 0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL,\n-    0xbf80f44cUL, 0x214368e9UL, 0xbfb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL,\n-    0x172dbbf0UL, 0x3fb6cb8eUL, 0xe0553158UL, 0xbfc975f5UL, 0x593fe814UL,\n-    0xbc2ef5d3UL, 0x00000000UL, 0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n-    0xbf953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n-    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0xbf85ad63UL, 0xdc230b9bUL,\n-    0xbfb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n-    0x77bb08baUL, 0xbf757c85UL, 0xb6247521UL, 0xbfb1381eUL, 0x5922170cUL,\n-    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0xbf64e391UL,\n-    0x3e666320UL, 0xbfa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n-    0x3fafa8aeUL, 0x8c5b2da2UL, 0xbfb936bbUL, 0x4e88f7a5UL, 0xbc587d05UL,\n-    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x6dc9c883UL, 0x3fe45f30UL,\n-    0x6dc9c883UL, 0x40245f30UL, 0x00000000UL, 0x43780000UL, 0x00000000UL,\n-    0x43380000UL, 0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL,\n-    0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL, 0x3707344aUL,\n-    0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL, 0x00000000UL, 0x80000000UL,\n-    0x00000000UL, 0x80000000UL, 0x676733afUL, 0x3d32e7b9UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x7ff00000UL, 0x00000000UL, 0x00000000UL, 0xfffc0000UL,\n-    0xffffffffUL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x43600000UL,\n-    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x3c800000UL, 0x00000000UL,\n-    0x00000000UL, 0x00000000UL, 0x3ca00000UL, 0x00000000UL, 0x00000000UL,\n-    0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL, 0x00000000UL,\n-    0x40300000UL, 0x00000000UL, 0x3ff00000UL\n-};\n-\n-void MacroAssembler::fast_tan(XMMRegister xmm0, XMMRegister xmm1, XMMRegister xmm2, XMMRegister xmm3, XMMRegister xmm4, XMMRegister xmm5, XMMRegister xmm6, XMMRegister xmm7, Register eax, Register ecx, Register edx, Register tmp) {\n-\n-  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n-  Label L_2TAG_PACKET_4_0_2;\n-\n-  assert_different_registers(tmp, eax, ecx, edx);\n-\n-  address static_const_table_tan = (address)_static_const_table_tan;\n-\n-  subl(rsp, 120);\n-  movl(Address(rsp, 56), tmp);\n-  lea(tmp, ExternalAddress(static_const_table_tan));\n-  movsd(xmm0, Address(rsp, 128));\n-  pextrw(eax, xmm0, 3);\n-  andl(eax, 32767);\n-  subl(eax, 14368);\n-  cmpl(eax, 2216);\n-  jcc(Assembler::above, L_2TAG_PACKET_0_0_2);\n-  movdqu(xmm5, Address(tmp, 5840));\n-  movdqu(xmm6, Address(tmp, 5856));\n-  unpcklpd(xmm0, xmm0);\n-  movdqu(xmm4, Address(tmp, 5712));\n-  andpd(xmm4, xmm0);\n-  movdqu(xmm1, Address(tmp, 5632));\n-  mulpd(xmm1, xmm0);\n-  por(xmm5, xmm4);\n-  addpd(xmm1, xmm5);\n-  movdqu(xmm7, xmm1);\n-  unpckhpd(xmm7, xmm7);\n-  cvttsd2sil(edx, xmm7);\n-  cvttpd2dq(xmm1, xmm1);\n-  cvtdq2pd(xmm1, xmm1);\n-  mulpd(xmm1, xmm6);\n-  movdqu(xmm3, Address(tmp, 5664));\n-  movsd(xmm5, Address(tmp, 5728));\n-  addl(edx, 469248);\n-  movdqu(xmm4, Address(tmp, 5680));\n-  mulpd(xmm3, xmm1);\n-  andl(edx, 31);\n-  mulsd(xmm5, xmm1);\n-  movl(ecx, edx);\n-  mulpd(xmm4, xmm1);\n-  shll(ecx, 1);\n-  subpd(xmm0, xmm3);\n-  mulpd(xmm1, Address(tmp, 5696));\n-  addl(edx, ecx);\n-  shll(ecx, 2);\n-  addl(edx, ecx);\n-  addsd(xmm5, xmm0);\n-  movdqu(xmm2, xmm0);\n-  subpd(xmm0, xmm4);\n-  movsd(xmm6, Address(tmp, 5744));\n-  shll(edx, 4);\n-  lea(eax, Address(tmp, 0));\n-  andpd(xmm5, Address(tmp, 5776));\n-  movdqu(xmm3, xmm0);\n-  addl(eax, edx);\n-  subpd(xmm2, xmm0);\n-  unpckhpd(xmm0, xmm0);\n-  divsd(xmm6, xmm5);\n-  subpd(xmm2, xmm4);\n-  movdqu(xmm7, Address(eax, 16));\n-  subsd(xmm3, xmm5);\n-  mulpd(xmm7, xmm0);\n-  subpd(xmm2, xmm1);\n-  movdqu(xmm1, Address(eax, 48));\n-  mulpd(xmm1, xmm0);\n-  movdqu(xmm4, Address(eax, 96));\n-  mulpd(xmm4, xmm0);\n-  addsd(xmm2, xmm3);\n-  movdqu(xmm3, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm7, Address(eax, 0));\n-  addpd(xmm1, Address(eax, 32));\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm4, Address(eax, 80));\n-  addpd(xmm7, xmm1);\n-  movdqu(xmm1, Address(eax, 112));\n-  mulpd(xmm1, xmm0);\n-  mulpd(xmm0, xmm0);\n-  addpd(xmm4, xmm1);\n-  movdqu(xmm1, Address(eax, 64));\n-  mulpd(xmm1, xmm0);\n-  addpd(xmm7, xmm1);\n-  movdqu(xmm1, xmm3);\n-  mulpd(xmm3, xmm0);\n-  mulsd(xmm0, xmm0);\n-  mulpd(xmm1, Address(eax, 144));\n-  mulpd(xmm4, xmm3);\n-  movdqu(xmm3, xmm1);\n-  addpd(xmm7, xmm4);\n-  movdqu(xmm4, xmm1);\n-  mulsd(xmm0, xmm7);\n-  unpckhpd(xmm7, xmm7);\n-  addsd(xmm0, xmm7);\n-  unpckhpd(xmm1, xmm1);\n-  addsd(xmm3, xmm1);\n-  subsd(xmm4, xmm3);\n-  addsd(xmm1, xmm4);\n-  movdqu(xmm4, xmm2);\n-  movsd(xmm7, Address(eax, 144));\n-  unpckhpd(xmm2, xmm2);\n-  addsd(xmm7, Address(eax, 152));\n-  mulsd(xmm7, xmm2);\n-  addsd(xmm7, Address(eax, 136));\n-  addsd(xmm7, xmm1);\n-  addsd(xmm0, xmm7);\n-  movsd(xmm7, Address(tmp, 5744));\n-  mulsd(xmm4, xmm6);\n-  movsd(xmm2, Address(eax, 168));\n-  andpd(xmm2, xmm6);\n-  mulsd(xmm5, xmm2);\n-  mulsd(xmm6, Address(eax, 160));\n-  subsd(xmm7, xmm5);\n-  subsd(xmm2, Address(eax, 128));\n-  subsd(xmm7, xmm4);\n-  mulsd(xmm7, xmm6);\n-  movdqu(xmm4, xmm3);\n-  subsd(xmm3, xmm2);\n-  addsd(xmm2, xmm3);\n-  subsd(xmm4, xmm2);\n-  addsd(xmm0, xmm4);\n-  subsd(xmm0, xmm7);\n-  addsd(xmm0, xmm3);\n-  movsd(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_0_0_2);\n-  jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n-  shrl(eax, 4);\n-  cmpl(eax, 268434558);\n-  jcc(Assembler::notEqual, L_2TAG_PACKET_3_0_2);\n-  movdqu(xmm3, xmm0);\n-  mulsd(xmm3, Address(tmp, 5808));\n-\n-  bind(L_2TAG_PACKET_3_0_2);\n-  movsd(xmm3, Address(tmp, 5792));\n-  mulsd(xmm3, xmm0);\n-  addsd(xmm3, xmm0);\n-  mulsd(xmm3, Address(tmp, 5808));\n-  movsd(Address(rsp, 0), xmm3);\n-  fld_d(Address(rsp, 0));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_2_0_2);\n-  movq(xmm7, Address(tmp, 5712));\n-  andpd(xmm7, xmm0);\n-  xorpd(xmm7, xmm0);\n-  ucomisd(xmm7, Address(tmp, 5760));\n-  jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n-  subl(rsp, 32);\n-  movsd(Address(rsp, 0), xmm0);\n-  lea(eax, Address(rsp, 40));\n-  movl(Address(rsp, 8), eax);\n-  movl(eax, 2);\n-  movl(Address(rsp, 12), eax);\n-  call(RuntimeAddress(CAST_FROM_FN_PTR(address, StubRoutines::dlibm_tan_cot_huge())));\n-  addl(rsp, 32);\n-  fld_d(Address(rsp, 8));\n-  jmp(L_2TAG_PACKET_1_0_2);\n-\n-  bind(L_2TAG_PACKET_4_0_2);\n-  movq(Address(rsp, 0), xmm0);\n-  fld_d(Address(rsp, 0));\n-  fsub_d(Address(rsp, 0));\n-\n-  bind(L_2TAG_PACKET_1_0_2);\n-  movl(tmp, Address(rsp, 56));\n-}\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_tan.cpp","additions":0,"deletions":2093,"binary":false,"changes":2093,"status":"deleted"},{"patch":"@@ -7313,111 +7313,24 @@\n-address StubGenerator::generate_libmExp() {\n-  StubCodeMark mark(this, \"StubRoutines\", \"libmExp\");\n-  address start = __ pc();\n-\n-  BLOCK_COMMENT(\"Entry:\");\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-  __ fast_exp(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,\n-              rax, rcx, rdx, r11);\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(0);\n-\n-  return start;\n-}\n-\n-address StubGenerator::generate_libmLog() {\n-  StubCodeMark mark(this, \"StubRoutines\", \"libmLog\");\n-  address start = __ pc();\n-\n-  BLOCK_COMMENT(\"Entry:\");\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-  __ fast_log(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,\n-              rax, rcx, rdx, r11, r8);\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(0);\n-\n-  return start;\n-}\n-\n-address StubGenerator::generate_libmLog10() {\n-  StubCodeMark mark(this, \"StubRoutines\", \"libmLog10\");\n-  address start = __ pc();\n-\n-  BLOCK_COMMENT(\"Entry:\");\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-  __ fast_log10(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,\n-                rax, rcx, rdx, r11, r8);\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(0);\n-\n-  return start;\n-}\n-\n-address StubGenerator::generate_libmPow() {\n-  StubCodeMark mark(this, \"StubRoutines\", \"libmPow\");\n-  address start = __ pc();\n-\n-  BLOCK_COMMENT(\"Entry:\");\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-  __ fast_pow(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,\n-              rax, rcx, rdx, r8, r9, r10, r11);\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(0);\n-\n-  return start;\n-}\n-\n-address StubGenerator::generate_libmSin() {\n-  StubCodeMark mark(this, \"StubRoutines\", \"libmSin\");\n-  address start = __ pc();\n-\n-  BLOCK_COMMENT(\"Entry:\");\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-#ifdef _WIN64\n-  __ push(rsi);\n-  __ push(rdi);\n-#endif\n-  __ fast_sin(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,\n-              rax, rbx, rcx, rdx, r8);\n-#ifdef _WIN64\n-  __ pop(rdi);\n-  __ pop(rsi);\n-#endif\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(0);\n-\n-  return start;\n-}\n-\n-address StubGenerator::generate_libmCos() {\n-  StubCodeMark mark(this, \"StubRoutines\", \"libmCos\");\n-  address start = __ pc();\n-\n-  BLOCK_COMMENT(\"Entry:\");\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-#ifdef _WIN64\n-  __ push(rsi);\n-  __ push(rdi);\n-#endif\n-  __ fast_cos(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,\n-              rax, rcx, rdx, r8, r9, r10, r11, rbx);\n-\n-#ifdef _WIN64\n-  __ pop(rdi);\n-  __ pop(rsi);\n-#endif\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(0);\n-\n-  return start;\n+void StubGenerator::generate_libm_stubs() {\n+  if (UseLibmIntrinsic && InlineIntrinsics) {\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dsin)) {\n+      StubRoutines::_dsin = generate_libmSin(); \/\/ from stubGenerator_x86_64_sin.cpp\n+    }\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dcos)) {\n+      StubRoutines::_dcos = generate_libmCos(); \/\/ from stubGenerator_x86_64_cos.cpp\n+    }\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dtan)) {\n+      StubRoutines::_dtan = generate_libmTan();\n+    }\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dexp)) {\n+      StubRoutines::_dexp = generate_libmExp();\n+    }\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dpow)) {\n+      StubRoutines::_dpow = generate_libmPow();\n+    }\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dlog)) {\n+      StubRoutines::_dlog = generate_libmLog();\n+    }\n+    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dlog10)) {\n+      StubRoutines::_dlog10 = generate_libmLog10();\n+    }\n+  }\n@@ -7426,24 +7339,0 @@\n-address StubGenerator::generate_libmTan() {\n-  StubCodeMark mark(this, \"StubRoutines\", \"libmTan\");\n-  address start = __ pc();\n-\n-  BLOCK_COMMENT(\"Entry:\");\n-  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n-\n-#ifdef _WIN64\n-  __ push(rsi);\n-  __ push(rdi);\n-#endif\n-  __ fast_tan(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,\n-              rax, rcx, rdx, r8, r9, r10, r11, rbx);\n-\n-#ifdef _WIN64\n-  __ pop(rdi);\n-  __ pop(rsi);\n-#endif\n-\n-  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n-  __ ret(0);\n-\n-  return start;\n-}\n@@ -7817,24 +7706,0 @@\n-\n-  if (UseLibmIntrinsic && InlineIntrinsics) {\n-    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dexp)) {\n-      StubRoutines::_dexp = generate_libmExp();\n-    }\n-    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dlog)) {\n-      StubRoutines::_dlog = generate_libmLog();\n-    }\n-    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dlog10)) {\n-      StubRoutines::_dlog10 = generate_libmLog10();\n-    }\n-    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dpow)) {\n-      StubRoutines::_dpow = generate_libmPow();\n-    }\n-    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dsin)) {\n-      StubRoutines::_dsin = generate_libmSin();\n-    }\n-    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dcos)) {\n-      StubRoutines::_dcos = generate_libmCos();\n-    }\n-    if (vmIntrinsics::is_intrinsic_available(vmIntrinsics::_dtan)) {\n-      StubRoutines::_dtan = generate_libmTan();\n-    }\n-  }\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":24,"deletions":159,"binary":false,"changes":183,"status":"modified"},{"patch":"@@ -390,4 +390,3 @@\n-  address generate_libmExp();\n-  address generate_libmLog();\n-  address generate_libmLog10();\n-  address generate_libmPow();\n+\n+  \/\/ Libm trigonometric stubs\n+\n@@ -397,0 +396,28 @@\n+  address generate_libmExp();\n+  address generate_libmPow();\n+  address generate_libmLog();\n+  address generate_libmLog10();\n+\n+  \/\/ Shared constants\n+  static address ZERO;\n+  static address NEG_ZERO;\n+  static address ONE;\n+  static address ONEHALF;\n+  static address SIGN_MASK;\n+  static address TWO_POW_55;\n+  static address TWO_POW_M55;\n+  static address SHIFTER;\n+  static address PI32INV;\n+  static address PI_INV_TABLE;\n+  static address Ctable;\n+  static address SC_1;\n+  static address SC_2;\n+  static address SC_3;\n+  static address SC_4;\n+  static address PI_4;\n+  static address P_1;\n+  static address P_3;\n+  static address P_2;\n+\n+  void generate_libm_stubs();\n+\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.hpp","additions":31,"deletions":4,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,236 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+\/\/ Constants for libm trigonometric stubs\n+\n+ATTRIBUTE_ALIGNED(8) juint _ONE[] = {\n+    0x00000000UL, 0x3ff00000UL\n+};\n+address StubGenerator::ONE = (address)_ONE;\n+\n+ATTRIBUTE_ALIGNED(16) juint _ONEHALF[] = {\n+    0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+};\n+address StubGenerator::ONEHALF = (address)_ONEHALF;\n+\n+ATTRIBUTE_ALIGNED(8) juint _SIGN_MASK[] = {\n+    0x00000000UL, 0x80000000UL\n+};\n+address StubGenerator::SIGN_MASK = (address)_SIGN_MASK;\n+\n+ATTRIBUTE_ALIGNED(8) juint _TWO_POW_55[] = {\n+    0x00000000UL, 0x43600000UL\n+};\n+address StubGenerator::TWO_POW_55 = (address)_TWO_POW_55;\n+\n+ATTRIBUTE_ALIGNED(8) juint _TWO_POW_M55[] = {\n+    0x00000000UL, 0x3c800000UL\n+};\n+address StubGenerator::TWO_POW_M55 = (address)_TWO_POW_M55;\n+\n+ATTRIBUTE_ALIGNED(16) juint _SHIFTER[] = {\n+    0x00000000UL, 0x43380000UL, 0x00000000UL, 0x43380000UL\n+};\n+address StubGenerator::SHIFTER = (address)_SHIFTER;\n+\n+ATTRIBUTE_ALIGNED(4) juint _ZERO[] = {\n+    0x00000000UL, 0x00000000UL\n+};\n+address StubGenerator::ZERO = (address)_ZERO;\n+\n+ATTRIBUTE_ALIGNED(16) juint _SC_1[] = {\n+    0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n+};\n+address StubGenerator::SC_1 = (address)_SC_1;\n+\n+ATTRIBUTE_ALIGNED(16) juint _SC_2[] = {\n+    0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n+};\n+address StubGenerator::SC_2 = (address)_SC_2;\n+\n+ATTRIBUTE_ALIGNED(16) juint _SC_3[] = {\n+    0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n+};\n+address StubGenerator::SC_3 = (address)_SC_3;\n+\n+ATTRIBUTE_ALIGNED(16) juint _SC_4[] = {\n+    0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n+};\n+address StubGenerator::SC_4 = (address)_SC_4;\n+\n+ATTRIBUTE_ALIGNED(8) juint _PI_4[] = {\n+    0x40000000UL, 0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n+};\n+address StubGenerator::PI_4 = (address)_PI_4;\n+\n+ATTRIBUTE_ALIGNED(8) juint _PI32INV[] = {\n+    0x6dc9c883UL, 0x40245f30UL\n+};\n+address StubGenerator::PI32INV = (address)_PI32INV;\n+\n+ATTRIBUTE_ALIGNED(8) juint _NEG_ZERO[] = {\n+    0x00000000UL, 0x80000000UL\n+};\n+address StubGenerator::NEG_ZERO = (address)_NEG_ZERO;\n+\n+ATTRIBUTE_ALIGNED(8) juint _P_1[] = {\n+    0x54400000UL, 0x3fb921fbUL\n+};\n+address StubGenerator::P_1 = (address)_P_1;\n+\n+ATTRIBUTE_ALIGNED(16) juint _P_2[] = {\n+    0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n+};\n+address StubGenerator::P_2 = (address)_P_2;\n+\n+ATTRIBUTE_ALIGNED(8) juint _P_3[] = {\n+    0x2e037073UL, 0x3b63198aUL\n+};\n+address StubGenerator::P_3 = (address)_P_3;\n+\n+\n+ATTRIBUTE_ALIGNED(16) juint _PI_INV_TABLE[] = {\n+    0x00000000UL, 0x00000000UL, 0xa2f9836eUL, 0x4e441529UL, 0xfc2757d1UL,\n+    0xf534ddc0UL, 0xdb629599UL, 0x3c439041UL, 0xfe5163abUL, 0xdebbc561UL,\n+    0xb7246e3aUL, 0x424dd2e0UL, 0x06492eeaUL, 0x09d1921cUL, 0xfe1deb1cUL,\n+    0xb129a73eUL, 0xe88235f5UL, 0x2ebb4484UL, 0xe99c7026UL, 0xb45f7e41UL,\n+    0x3991d639UL, 0x835339f4UL, 0x9c845f8bUL, 0xbdf9283bUL, 0x1ff897ffUL,\n+    0xde05980fUL, 0xef2f118bUL, 0x5a0a6d1fUL, 0x6d367ecfUL, 0x27cb09b7UL,\n+    0x4f463f66UL, 0x9e5fea2dUL, 0x7527bac7UL, 0xebe5f17bUL, 0x3d0739f7UL,\n+    0x8a5292eaUL, 0x6bfb5fb1UL, 0x1f8d5d08UL, 0x56033046UL, 0xfc7b6babUL,\n+    0xf0cfbc21UL\n+};\n+address StubGenerator::PI_INV_TABLE = (address)_PI_INV_TABLE;\n+\n+\n+ATTRIBUTE_ALIGNED(16) juint _Ctable[] = {\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL, 0xbf73b92eUL,\n+    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n+    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL,\n+    0xc0000000UL, 0xbc626d19UL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL,\n+    0xbfa60beaUL, 0x2ed59f06UL, 0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL,\n+    0x00000000UL, 0x3ff00000UL, 0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL,\n+    0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL, 0x00000000UL, 0x3ff00000UL,\n+    0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL, 0x20000000UL,\n+    0x3c5e0d89UL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL, 0xbfc59267UL,\n+    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n+    0x3ff00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL,\n+    0x20000000UL, 0x3c68076aUL, 0x00000000UL, 0x3ff00000UL, 0x99fcef32UL,\n+    0x3fca8279UL, 0x667f3bcdUL, 0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL,\n+    0x00000000UL, 0x3fe00000UL, 0x94247758UL, 0x3fc133ccUL, 0x6b151741UL,\n+    0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL, 0x00000000UL, 0x3fe00000UL,\n+    0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL, 0xe0000000UL,\n+    0x3c39f630UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL, 0xbf9d4a2cUL,\n+    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n+    0x3fe00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0x3fed906bUL,\n+    0x20000000UL, 0x3c7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x76acf82dUL,\n+    0x3fa4a031UL, 0x56c62ddaUL, 0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL,\n+    0x00000000UL, 0x3fd00000UL, 0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL,\n+    0x3fef6297UL, 0x20000000UL, 0x3c756217UL, 0x00000000UL, 0x3fd00000UL,\n+    0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL, 0x3fefd88dUL, 0x40000000UL,\n+    0xbc887df6UL, 0x00000000UL, 0x3fc00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0x3fefd88dUL,\n+    0x40000000UL, 0xbc887df6UL, 0x00000000UL, 0xbfc00000UL, 0x0e5967d5UL,\n+    0x3fac1d1fUL, 0xcff75cb0UL, 0x3fef6297UL, 0x20000000UL, 0x3c756217UL,\n+    0x00000000UL, 0xbfd00000UL, 0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL,\n+    0x3fee9f41UL, 0xe0000000UL, 0x3c8760b1UL, 0x00000000UL, 0xbfd00000UL,\n+    0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL, 0x3fed906bUL, 0x20000000UL,\n+    0x3c7457e6UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL, 0x3f9d4a2cUL,\n+    0xf180bdb1UL, 0x3fec38b2UL, 0x80000000UL, 0xbc76e0b1UL, 0x00000000UL,\n+    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0x3fea9b66UL,\n+    0xe0000000UL, 0x3c39f630UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL,\n+    0xbfc133ccUL, 0x6b151741UL, 0x3fe8bc80UL, 0x20000000UL, 0xbc82c5e1UL,\n+    0x00000000UL, 0xbfe00000UL, 0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL,\n+    0x3fe6a09eUL, 0x20000000UL, 0xbc8bdd34UL, 0x00000000UL, 0xbfe00000UL,\n+    0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL, 0x3fe44cf3UL, 0x20000000UL,\n+    0x3c68076aUL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL, 0x3fc59267UL,\n+    0x39ae68c8UL, 0x3fe1c73bUL, 0x20000000UL, 0x3c8b25ddUL, 0x00000000UL,\n+    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0x3fde2b5dUL,\n+    0x20000000UL, 0x3c5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL,\n+    0x3fb37ca1UL, 0xa6aea963UL, 0x3fd87de2UL, 0xe0000000UL, 0xbc672cedUL,\n+    0x00000000UL, 0xbff00000UL, 0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL,\n+    0x3fd29406UL, 0xa0000000UL, 0xbc75d28dUL, 0x00000000UL, 0xbff00000UL,\n+    0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL, 0x3fc8f8b8UL, 0xc0000000UL,\n+    0xbc626d19UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL, 0x3f73b92eUL,\n+    0xbc29b42cUL, 0x3fb917a6UL, 0xe0000000UL, 0xbc3e2718UL, 0x00000000UL,\n+    0xbff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x176d6d31UL,\n+    0x3f73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n+    0x00000000UL, 0xbff00000UL, 0x011469fbUL, 0x3f93ad06UL, 0x3c69a60bUL,\n+    0xbfc8f8b8UL, 0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0xbff00000UL,\n+    0x939d225aUL, 0x3fa60beaUL, 0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL,\n+    0x3c75d28dUL, 0x00000000UL, 0xbff00000UL, 0x866b95cfUL, 0x3fb37ca1UL,\n+    0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL, 0x3c672cedUL, 0x00000000UL,\n+    0xbff00000UL, 0x73fa1279UL, 0x3fbe3a68UL, 0x3806f63bUL, 0xbfde2b5dUL,\n+    0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0xbff00000UL, 0x5bc57974UL,\n+    0x3fc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n+    0x00000000UL, 0xbff00000UL, 0x53aba2fdUL, 0x3fcd0dfeUL, 0x25091dd6UL,\n+    0xbfe44cf3UL, 0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0xbff00000UL,\n+    0x99fcef32UL, 0xbfca8279UL, 0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL,\n+    0x3c8bdd34UL, 0x00000000UL, 0xbfe00000UL, 0x94247758UL, 0xbfc133ccUL,\n+    0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL, 0x3c82c5e1UL, 0x00000000UL,\n+    0xbfe00000UL, 0x9ae68c87UL, 0xbfac73b3UL, 0x290ea1a3UL, 0xbfea9b66UL,\n+    0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0xbfe00000UL, 0x7f909c4eUL,\n+    0x3f9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n+    0x00000000UL, 0xbfe00000UL, 0x65455a75UL, 0x3fbe0875UL, 0xcf328d46UL,\n+    0xbfed906bUL, 0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0xbfe00000UL,\n+    0x76acf82dUL, 0xbfa4a031UL, 0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL,\n+    0xbc8760b1UL, 0x00000000UL, 0xbfd00000UL, 0x0e5967d5UL, 0x3fac1d1fUL,\n+    0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL, 0xbc756217UL, 0x00000000UL,\n+    0xbfd00000UL, 0x0f592f50UL, 0x3f9ba165UL, 0xa3d12526UL, 0xbfefd88dUL,\n+    0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0xbfc00000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0xbff00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x0f592f50UL, 0xbf9ba165UL, 0xa3d12526UL,\n+    0xbfefd88dUL, 0x40000000UL, 0x3c887df6UL, 0x00000000UL, 0x3fc00000UL,\n+    0x0e5967d5UL, 0xbfac1d1fUL, 0xcff75cb0UL, 0xbfef6297UL, 0x20000000UL,\n+    0xbc756217UL, 0x00000000UL, 0x3fd00000UL, 0x76acf82dUL, 0x3fa4a031UL,\n+    0x56c62ddaUL, 0xbfee9f41UL, 0xe0000000UL, 0xbc8760b1UL, 0x00000000UL,\n+    0x3fd00000UL, 0x65455a75UL, 0xbfbe0875UL, 0xcf328d46UL, 0xbfed906bUL,\n+    0x20000000UL, 0xbc7457e6UL, 0x00000000UL, 0x3fe00000UL, 0x7f909c4eUL,\n+    0xbf9d4a2cUL, 0xf180bdb1UL, 0xbfec38b2UL, 0x80000000UL, 0x3c76e0b1UL,\n+    0x00000000UL, 0x3fe00000UL, 0x9ae68c87UL, 0x3fac73b3UL, 0x290ea1a3UL,\n+    0xbfea9b66UL, 0xe0000000UL, 0xbc39f630UL, 0x00000000UL, 0x3fe00000UL,\n+    0x94247758UL, 0x3fc133ccUL, 0x6b151741UL, 0xbfe8bc80UL, 0x20000000UL,\n+    0x3c82c5e1UL, 0x00000000UL, 0x3fe00000UL, 0x99fcef32UL, 0x3fca8279UL,\n+    0x667f3bcdUL, 0xbfe6a09eUL, 0x20000000UL, 0x3c8bdd34UL, 0x00000000UL,\n+    0x3fe00000UL, 0x53aba2fdUL, 0xbfcd0dfeUL, 0x25091dd6UL, 0xbfe44cf3UL,\n+    0x20000000UL, 0xbc68076aUL, 0x00000000UL, 0x3ff00000UL, 0x5bc57974UL,\n+    0xbfc59267UL, 0x39ae68c8UL, 0xbfe1c73bUL, 0x20000000UL, 0xbc8b25ddUL,\n+    0x00000000UL, 0x3ff00000UL, 0x73fa1279UL, 0xbfbe3a68UL, 0x3806f63bUL,\n+    0xbfde2b5dUL, 0x20000000UL, 0xbc5e0d89UL, 0x00000000UL, 0x3ff00000UL,\n+    0x866b95cfUL, 0xbfb37ca1UL, 0xa6aea963UL, 0xbfd87de2UL, 0xe0000000UL,\n+    0x3c672cedUL, 0x00000000UL, 0x3ff00000UL, 0x939d225aUL, 0xbfa60beaUL,\n+    0x2ed59f06UL, 0xbfd29406UL, 0xa0000000UL, 0x3c75d28dUL, 0x00000000UL,\n+    0x3ff00000UL, 0x011469fbUL, 0xbf93ad06UL, 0x3c69a60bUL, 0xbfc8f8b8UL,\n+    0xc0000000UL, 0x3c626d19UL, 0x00000000UL, 0x3ff00000UL, 0x176d6d31UL,\n+    0xbf73b92eUL, 0xbc29b42cUL, 0xbfb917a6UL, 0xe0000000UL, 0x3c3e2718UL,\n+    0x00000000UL, 0x3ff00000UL\n+};\n+address StubGenerator::Ctable = (address)_Ctable;\n+\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_constants.cpp","additions":236,"deletions":0,"binary":false,"changes":236,"status":"added"},{"patch":"@@ -0,0 +1,625 @@\n+\/*\n+ *  Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+ * Intel Math Library (LIBM) Source Code\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - COS()\n+\/\/                     ---------------------\n+\/\/\n+\/\/     1. RANGE REDUCTION\n+\/\/\n+\/\/     We perform an initial range reduction from X to r with\n+\/\/\n+\/\/          X =~= N * pi\/32 + r\n+\/\/\n+\/\/     so that |r| <= pi\/64 + epsilon. We restrict inputs to those\n+\/\/     where |N| <= 932560. Beyond this, the range reduction is\n+\/\/     insufficiently accurate. For extremely small inputs,\n+\/\/     denormalization can occur internally, impacting performance.\n+\/\/     This means that the main path is actually only taken for\n+\/\/     2^-252 <= |X| < 90112.\n+\/\/\n+\/\/     To avoid branches, we perform the range reduction to full\n+\/\/     accuracy each time.\n+\/\/\n+\/\/          X - N * (P_1 + P_2 + P_3)\n+\/\/\n+\/\/     where P_1 and P_2 are 32-bit numbers (so multiplication by N\n+\/\/     is exact) and P_3 is a 53-bit number. Together, these\n+\/\/     approximate pi well enough for all cases in the restricted\n+\/\/     range.\n+\/\/\n+\/\/     The main reduction sequence is:\n+\/\/\n+\/\/             y = 32\/pi * x\n+\/\/             N = integer(y)\n+\/\/     (computed by adding and subtracting off SHIFTER)\n+\/\/\n+\/\/             m_1 = N * P_1\n+\/\/             m_2 = N * P_2\n+\/\/             r_1 = x - m_1\n+\/\/             r = r_1 - m_2\n+\/\/     (this r can be used for most of the calculation)\n+\/\/\n+\/\/             c_1 = r_1 - r\n+\/\/             m_3 = N * P_3\n+\/\/             c_2 = c_1 - m_2\n+\/\/             c = c_2 - m_3\n+\/\/\n+\/\/     2. MAIN ALGORITHM\n+\/\/\n+\/\/     The algorithm uses a table lookup based on B = M * pi \/ 32\n+\/\/     where M = N mod 64. The stored values are:\n+\/\/       sigma             closest power of 2 to cos(B)\n+\/\/       C_hl              53-bit cos(B) - sigma\n+\/\/       S_hi + S_lo       2 * 53-bit sin(B)\n+\/\/\n+\/\/     The computation is organized as follows:\n+\/\/\n+\/\/          sin(B + r + c) = [sin(B) + sigma * r] +\n+\/\/                           r * (cos(B) - sigma) +\n+\/\/                           sin(B) * [cos(r + c) - 1] +\n+\/\/                           cos(B) * [sin(r + c) - r]\n+\/\/\n+\/\/     which is approximately:\n+\/\/\n+\/\/          [S_hi + sigma * r] +\n+\/\/          C_hl * r +\n+\/\/          S_lo + S_hi * [(cos(r) - 1) - r * c] +\n+\/\/          (C_hl + sigma) * [(sin(r) - r) + c]\n+\/\/\n+\/\/     and this is what is actually computed. We separate this sum\n+\/\/     into four parts:\n+\/\/\n+\/\/          hi + med + pols + corr\n+\/\/\n+\/\/     where\n+\/\/\n+\/\/          hi       = S_hi + sigma r\n+\/\/          med      = C_hl * r\n+\/\/          pols     = S_hi * (cos(r) - 1) + (C_hl + sigma) * (sin(r) - r)\n+\/\/          corr     = S_lo + c * ((C_hl + sigma) - S_hi * r)\n+\/\/\n+\/\/     3. POLYNOMIAL\n+\/\/\n+\/\/     The polynomial S_hi * (cos(r) - 1) + (C_hl + sigma) *\n+\/\/     (sin(r) - r) can be rearranged freely, since it is quite\n+\/\/     small, so we exploit parallelism to the fullest.\n+\/\/\n+\/\/          psc4       =   SC_4 * r_1\n+\/\/          msc4       =   psc4 * r\n+\/\/          r2         =   r * r\n+\/\/          msc2       =   SC_2 * r2\n+\/\/          r4         =   r2 * r2\n+\/\/          psc3       =   SC_3 + msc4\n+\/\/          psc1       =   SC_1 + msc2\n+\/\/          msc3       =   r4 * psc3\n+\/\/          sincospols =   psc1 + msc3\n+\/\/          pols       =   sincospols *\n+\/\/                         <S_hi * r^2 | (C_hl + sigma) * r^3>\n+\/\/\n+\/\/     4. CORRECTION TERM\n+\/\/\n+\/\/     This is where the \"c\" component of the range reduction is\n+\/\/     taken into account; recall that just \"r\" is used for most of\n+\/\/     the calculation.\n+\/\/\n+\/\/          -c   = m_3 - c_2\n+\/\/          -d   = S_hi * r - (C_hl + sigma)\n+\/\/          corr = -c * -d + S_lo\n+\/\/\n+\/\/     5. COMPENSATED SUMMATIONS\n+\/\/\n+\/\/     The two successive compensated summations add up the high\n+\/\/     and medium parts, leaving just the low parts to add up at\n+\/\/     the end.\n+\/\/\n+\/\/          rs        =  sigma * r\n+\/\/          res_int   =  S_hi + rs\n+\/\/          k_0       =  S_hi - res_int\n+\/\/          k_2       =  k_0 + rs\n+\/\/          med       =  C_hl * r\n+\/\/          res_hi    =  res_int + med\n+\/\/          k_1       =  res_int - res_hi\n+\/\/          k_3       =  k_1 + med\n+\/\/\n+\/\/     6. FINAL SUMMATION\n+\/\/\n+\/\/     We now add up all the small parts:\n+\/\/\n+\/\/          res_lo = pols(hi) + pols(lo) + corr + k_1 + k_3\n+\/\/\n+\/\/     Now the overall result is just:\n+\/\/\n+\/\/          res_hi + res_lo\n+\/\/\n+\/\/     7. SMALL ARGUMENTS\n+\/\/\n+\/\/     Inputs with |X| < 2^-252 are treated specially as\n+\/\/     1 - |x|.\n+\/\/\n+\/\/ Special cases:\n+\/\/  cos(NaN) = quiet NaN, and raise invalid exception\n+\/\/  cos(INF) = NaN and raise invalid exception\n+\/\/  cos(0) = 1\n+\/\/\n+\/******************************************************************************\/\n+\n+#define __ _masm->\n+\n+address StubGenerator::generate_libmCos() {\n+  StubCodeMark mark(this, \"StubRoutines\", \"libmCos\");\n+  address start = __ pc();\n+\n+  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1, L_2TAG_PACKET_3_0_1;\n+  Label L_2TAG_PACKET_4_0_1, L_2TAG_PACKET_5_0_1, L_2TAG_PACKET_6_0_1, L_2TAG_PACKET_7_0_1;\n+  Label L_2TAG_PACKET_8_0_1, L_2TAG_PACKET_9_0_1, L_2TAG_PACKET_10_0_1, L_2TAG_PACKET_11_0_1;\n+  Label L_2TAG_PACKET_12_0_1, L_2TAG_PACKET_13_0_1, B1_2, B1_4;\n+\n+  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+#ifdef _WIN64\n+  __ push(rsi);\n+  __ push(rdi);\n+#endif\n+\n+  __ push(rbx);\n+  __ subq(rsp, 16);\n+  __ movsd(Address(rsp, 8), xmm0);\n+\n+  __ bind(B1_2);\n+  __ movl(rax, Address(rsp, 12));\n+  __ movq(xmm1, ExternalAddress(PI32INV), rbx \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x40245f30UL\n+  __ andl(rax, 2147418112);\n+  __ subl(rax, 808452096);\n+  __ cmpl(rax, 281346048);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_0_0_1);\n+  __ mulsd(xmm1, xmm0);\n+  __ movdqu(xmm5, ExternalAddress(ONEHALF), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+  __ movq(xmm4, ExternalAddress(SIGN_MASK), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n+  __ pand(xmm4, xmm0);\n+  __ por(xmm5, xmm4);\n+  __ addpd(xmm1, xmm5);\n+  __ cvttsd2sil(rdx, xmm1);\n+  __ cvtsi2sdl(xmm1, rdx);\n+  __ movdqu(xmm2, ExternalAddress(P_2), rbx \/*rscratch*\/);    \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n+  __ movq(xmm3, ExternalAddress(P_1), rbx \/*rscratch*\/);    \/\/0x54400000UL, 0x3fb921fbUL\n+  __ mulsd(xmm3, xmm1);\n+  __ unpcklpd(xmm1, xmm1);\n+  __ addq(rdx, 1865232);\n+  __ movdqu(xmm4, xmm0);\n+  __ andq(rdx, 63);\n+  __ movdqu(xmm5, ExternalAddress(SC_4), rbx \/*rscratch*\/);    \/\/0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n+  __ lea(rax, ExternalAddress(Ctable));\n+  __ shlq(rdx, 5);\n+  __ addq(rax, rdx);\n+  __ mulpd(xmm2, xmm1);\n+  __ subsd(xmm0, xmm3);\n+  __ mulsd(xmm1, ExternalAddress(P_3), rbx \/*rscratch*\/);    \/\/0x2e037073UL, 0x3b63198aUL\n+  __ subsd(xmm4, xmm3);\n+  __ movq(xmm7, Address(rax, 8));\n+  __ unpcklpd(xmm0, xmm0);\n+  __ movdqu(xmm3, xmm4);\n+  __ subsd(xmm4, xmm2);\n+  __ mulpd(xmm5, xmm0);\n+  __ subpd(xmm0, xmm2);\n+  __ movdqu(xmm6, ExternalAddress(SC_2), rbx \/*rscratch*\/);    \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n+  __ mulsd(xmm7, xmm4);\n+  __ subsd(xmm3, xmm4);\n+  __ mulpd(xmm5, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ subsd(xmm3, xmm2);\n+  __ movdqu(xmm2, Address(rax, 0));\n+  __ subsd(xmm1, xmm3);\n+  __ movq(xmm3, Address(rax, 24));\n+  __ addsd(xmm2, xmm3);\n+  __ subsd(xmm7, xmm2);\n+  __ mulsd(xmm2, xmm4);\n+  __ mulpd(xmm6, xmm0);\n+  __ mulsd(xmm3, xmm4);\n+  __ mulpd(xmm2, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm5, ExternalAddress(SC_3), rbx \/*rscratch*\/);    \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n+  __ mulsd(xmm4, Address(rax, 0));\n+  __ addpd(xmm6, ExternalAddress(SC_1), rbx \/*rscratch*\/);    \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n+  __ mulpd(xmm5, xmm0);\n+  __ movdqu(xmm0, xmm3);\n+  __ addsd(xmm3, Address(rax, 8));\n+  __ mulpd(xmm1, xmm7);\n+  __ movdqu(xmm7, xmm4);\n+  __ addsd(xmm4, xmm3);\n+  __ addpd(xmm6, xmm5);\n+  __ movq(xmm5, Address(rax, 8));\n+  __ subsd(xmm5, xmm3);\n+  __ subsd(xmm3, xmm4);\n+  __ addsd(xmm1, Address(rax, 16));\n+  __ mulpd(xmm6, xmm2);\n+  __ addsd(xmm0, xmm5);\n+  __ addsd(xmm3, xmm7);\n+  __ addsd(xmm0, xmm1);\n+  __ addsd(xmm0, xmm3);\n+  __ addsd(xmm0, xmm6);\n+  __ unpckhpd(xmm6, xmm6);\n+  __ addsd(xmm0, xmm6);\n+  __ addsd(xmm0, xmm4);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_0_0_1);\n+  __ jcc(Assembler::greater, L_2TAG_PACKET_1_0_1);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32767);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ movq(xmm1, ExternalAddress(ONE), rbx \/*rscratch*\/); \/\/ 0x00000000UL, 0x3ff00000UL\n+  __ subsd(xmm1, xmm0);\n+  __ movdqu(xmm0, xmm1);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_1_0_1);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32752);\n+  __ cmpl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_2_0_1);\n+  __ pextrw(rcx, xmm0, 3);\n+  __ andl(rcx, 32752);\n+  __ subl(rcx, 16224);\n+  __ shrl(rcx, 7);\n+  __ andl(rcx, 65532);\n+  __ lea(r11, ExternalAddress(PI_INV_TABLE));\n+  __ addq(rcx, r11);\n+  __ movdq(rax, xmm0);\n+  __ movl(r10, Address(rcx, 20));\n+  __ movl(r8, Address(rcx, 24));\n+  __ movl(rdx, rax);\n+  __ shrq(rax, 21);\n+  __ orl(rax, INT_MIN);\n+  __ shrl(rax, 11);\n+  __ movl(r9, r10);\n+  __ imulq(r10, rdx);\n+  __ imulq(r9, rax);\n+  __ imulq(r8, rax);\n+  __ movl(rsi, Address(rcx, 16));\n+  __ movl(rdi, Address(rcx, 12));\n+  __ movl(r11, r10);\n+  __ shrq(r10, 32);\n+  __ addq(r9, r10);\n+  __ addq(r11, r8);\n+  __ movl(r8, r11);\n+  __ shrq(r11, 32);\n+  __ addq(r9, r11);\n+  __ movl(r10, rsi);\n+  __ imulq(rsi, rdx);\n+  __ imulq(r10, rax);\n+  __ movl(r11, rdi);\n+  __ imulq(rdi, rdx);\n+  __ movl(rbx, rsi);\n+  __ shrq(rsi, 32);\n+  __ addq(r9, rbx);\n+  __ movl(rbx, r9);\n+  __ shrq(r9, 32);\n+  __ addq(r10, rsi);\n+  __ addq(r10, r9);\n+  __ shlq(rbx, 32);\n+  __ orq(r8, rbx);\n+  __ imulq(r11, rax);\n+  __ movl(r9, Address(rcx, 8));\n+  __ movl(rsi, Address(rcx, 4));\n+  __ movl(rbx, rdi);\n+  __ shrq(rdi, 32);\n+  __ addq(r10, rbx);\n+  __ movl(rbx, r10);\n+  __ shrq(r10, 32);\n+  __ addq(r11, rdi);\n+  __ addq(r11, r10);\n+  __ movq(rdi, r9);\n+  __ imulq(r9, rdx);\n+  __ imulq(rdi, rax);\n+  __ movl(r10, r9);\n+  __ shrq(r9, 32);\n+  __ addq(r11, r10);\n+  __ movl(r10, r11);\n+  __ shrq(r11, 32);\n+  __ addq(rdi, r9);\n+  __ addq(rdi, r11);\n+  __ movq(r9, rsi);\n+  __ imulq(rsi, rdx);\n+  __ imulq(r9, rax);\n+  __ shlq(r10, 32);\n+  __ orq(r10, rbx);\n+  __ movl(rax, Address(rcx, 0));\n+  __ movl(r11, rsi);\n+  __ shrq(rsi, 32);\n+  __ addq(rdi, r11);\n+  __ movl(r11, rdi);\n+  __ shrq(rdi, 32);\n+  __ addq(r9, rsi);\n+  __ addq(r9, rdi);\n+  __ imulq(rdx, rax);\n+  __ pextrw(rbx, xmm0, 3);\n+  __ lea(rdi, ExternalAddress(PI_INV_TABLE));\n+  __ subq(rcx, rdi);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, 19);\n+  __ movl(rsi, 32768);\n+  __ andl(rsi, rbx);\n+  __ shrl(rbx, 4);\n+  __ andl(rbx, 2047);\n+  __ subl(rbx, 1023);\n+  __ subl(rcx, rbx);\n+  __ addq(r9, rdx);\n+  __ movl(rdx, rcx);\n+  __ addl(rdx, 32);\n+  __ cmpl(rcx, 1);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_3_0_1);\n+  __ negl(rcx);\n+  __ addl(rcx, 29);\n+  __ shll(r9);\n+  __ movl(rdi, r9);\n+  __ andl(r9, 536870911);\n+  __ testl(r9, 268435456);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_4_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 0);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+\n+  __ bind(L_2TAG_PACKET_5_0_1);\n+\n+  __ bind(L_2TAG_PACKET_6_0_1);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_7_0_1);\n+\n+  __ bind(L_2TAG_PACKET_8_0_1);\n+  __ bsrq(r11, r9);\n+  __ movl(rcx, 29);\n+  __ subl(rcx, r11);\n+  __ jcc(Assembler::lessEqual, L_2TAG_PACKET_9_0_1);\n+  __ shlq(r9);\n+  __ movq(rax, r10);\n+  __ shlq(r10);\n+  __ addl(rdx, rcx);\n+  __ negl(rcx);\n+  __ addl(rcx, 64);\n+  __ shrq(rax);\n+  __ shrq(r8);\n+  __ orq(r9, rax);\n+  __ orq(r10, r8);\n+\n+  __ bind(L_2TAG_PACKET_10_0_1);\n+  __ cvtsi2sdq(xmm0, r9);\n+  __ shrq(r10, 1);\n+  __ cvtsi2sdq(xmm3, r10);\n+  __ xorpd(xmm4, xmm4);\n+  __ shll(rdx, 4);\n+  __ negl(rdx);\n+  __ addl(rdx, 16368);\n+  __ orl(rdx, rsi);\n+  __ xorl(rdx, rbx);\n+  __ pinsrw(xmm4, rdx, 3);\n+  __ movq(xmm2, ExternalAddress(PI_4),     rbx \/*rscratch*\/); \/\/0x40000000UL, 0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n+  __ movq(xmm6, ExternalAddress(PI_4 + 8), rbx \/*rscratch*\/); \/\/0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n+  __ xorpd(xmm5, xmm5);\n+  __ subl(rdx, 1008);\n+  __ pinsrw(xmm5, rdx, 3);\n+  __ mulsd(xmm0, xmm4);\n+  __ shll(rsi, 16);\n+  __ sarl(rsi, 31);\n+  __ mulsd(xmm3, xmm5);\n+  __ movdqu(xmm1, xmm0);\n+  __ mulsd(xmm0, xmm2);\n+  __ shrl(rdi, 29);\n+  __ addsd(xmm1, xmm3);\n+  __ mulsd(xmm3, xmm2);\n+  __ addl(rdi, rsi);\n+  __ xorl(rdi, rsi);\n+  __ mulsd(xmm6, xmm1);\n+  __ movl(rax, rdi);\n+  __ addsd(xmm6, xmm3);\n+  __ movdqu(xmm2, xmm0);\n+  __ addsd(xmm0, xmm6);\n+  __ subsd(xmm2, xmm0);\n+  __ addsd(xmm6, xmm2);\n+\n+  __ bind(L_2TAG_PACKET_11_0_1);\n+  __ movq(xmm1, ExternalAddress(PI32INV), rbx \/*rscratch*\/);   \/\/0x6dc9c883UL, 0x40245f30UL\n+  __ mulsd(xmm1, xmm0);\n+  __ movq(xmm5, ExternalAddress(ONEHALF), rbx \/*rscratch*\/);   \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+  __ movq(xmm4, ExternalAddress(SIGN_MASK), rbx \/*rscratch*\/); \/\/0x00000000UL, 0x80000000UL\n+  __ pand(xmm4, xmm0);\n+  __ por(xmm5, xmm4);\n+  __ addpd(xmm1, xmm5);\n+  __ cvttsd2siq(rdx, xmm1);\n+  __ cvtsi2sdq(xmm1, rdx);\n+  __ movq(xmm3, ExternalAddress(P_1), rbx \/*rscratch*\/);    \/\/0x54400000UL, 0x3fb921fbUL\n+  __ movdqu(xmm2, ExternalAddress(P_2), rbx \/*rscratch*\/);    \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n+  __ mulsd(xmm3, xmm1);\n+  __ unpcklpd(xmm1, xmm1);\n+  __ shll(rax, 3);\n+  __ addl(rdx, 1865232);\n+  __ movdqu(xmm4, xmm0);\n+  __ addl(rdx, rax);\n+  __ andl(rdx, 63);\n+  __ movdqu(xmm5, ExternalAddress(SC_4), rbx \/*rscratch*\/);    \/\/0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n+  __ lea(rax, ExternalAddress(Ctable));\n+  __ shll(rdx, 5);\n+  __ addq(rax, rdx);\n+  __ mulpd(xmm2, xmm1);\n+  __ subsd(xmm0, xmm3);\n+  __ mulsd(xmm1, ExternalAddress(P_3), rbx \/*rscratch*\/);    \/\/0x2e037073UL, 0x3b63198aUL\n+  __ subsd(xmm4, xmm3);\n+  __ movq(xmm7, Address(rax, 8));\n+  __ unpcklpd(xmm0, xmm0);\n+  __ movdqu(xmm3, xmm4);\n+  __ subsd(xmm4, xmm2);\n+  __ mulpd(xmm5, xmm0);\n+  __ subpd(xmm0, xmm2);\n+  __ mulsd(xmm7, xmm4);\n+  __ subsd(xmm3, xmm4);\n+  __ mulpd(xmm5, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ subsd(xmm3, xmm2);\n+  __ movdqu(xmm2, Address(rax, 0));\n+  __ subsd(xmm1, xmm3);\n+  __ movq(xmm3, Address(rax, 24));\n+  __ addsd(xmm2, xmm3);\n+  __ subsd(xmm7, xmm2);\n+  __ subsd(xmm1, xmm6);\n+  __ movdqu(xmm6, ExternalAddress(SC_2), rbx \/*rscratch*\/);    \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n+  __ mulsd(xmm2, xmm4);\n+  __ mulpd(xmm6, xmm0);\n+  __ mulsd(xmm3, xmm4);\n+  __ mulpd(xmm2, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm5, ExternalAddress(SC_3), rbx \/*rscratch*\/);    \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n+  __ mulsd(xmm4, Address(rax, 0));\n+  __ addpd(xmm6, ExternalAddress(SC_1), rbx \/*rscratch*\/);    \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n+  __ mulpd(xmm5, xmm0);\n+  __ movdqu(xmm0, xmm3);\n+  __ addsd(xmm3, Address(rax, 8));\n+  __ mulpd(xmm1, xmm7);\n+  __ movdqu(xmm7, xmm4);\n+  __ addsd(xmm4, xmm3);\n+  __ addpd(xmm6, xmm5);\n+  __ movq(xmm5, Address(rax, 8));\n+  __ subsd(xmm5, xmm3);\n+  __ subsd(xmm3, xmm4);\n+  __ addsd(xmm1, Address(rax, 16));\n+  __ mulpd(xmm6, xmm2);\n+  __ addsd(xmm5, xmm0);\n+  __ addsd(xmm3, xmm7);\n+  __ addsd(xmm1, xmm5);\n+  __ addsd(xmm1, xmm3);\n+  __ addsd(xmm1, xmm6);\n+  __ unpckhpd(xmm6, xmm6);\n+  __ movdqu(xmm0, xmm4);\n+  __ addsd(xmm1, xmm6);\n+  __ addsd(xmm0, xmm1);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_7_0_1);\n+  __ addl(rdx, 64);\n+  __ movq(r9, r10);\n+  __ movq(r10, r8);\n+  __ movl(r8, 0);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_8_0_1);\n+  __ addl(rdx, 64);\n+  __ movq(r9, r10);\n+  __ movq(r10, r8);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_8_0_1);\n+  __ xorpd(xmm0, xmm0);\n+  __ xorpd(xmm6, xmm6);\n+  __ jmp(L_2TAG_PACKET_11_0_1);\n+\n+  __ bind(L_2TAG_PACKET_9_0_1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_10_0_1);\n+  __ negl(rcx);\n+  __ shrq(r10);\n+  __ movq(rax, r9);\n+  __ shrq(r9);\n+  __ subl(rdx, rcx);\n+  __ negl(rcx);\n+  __ addl(rcx, 64);\n+  __ shlq(rax);\n+  __ orq(r10, rax);\n+  __ jmp(L_2TAG_PACKET_10_0_1);\n+  __ bind(L_2TAG_PACKET_3_0_1);\n+  __ negl(rcx);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+  __ shlq(r9);\n+  __ movq(rdi, r9);\n+  __ testl(r9, INT_MIN);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_12_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 0);\n+  __ shrq(rdi, 3);\n+  __ jmp(L_2TAG_PACKET_6_0_1);\n+\n+  __ bind(L_2TAG_PACKET_4_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 536870912);\n+  __ shrl(rbx);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+  __ shlq(rbx, 32);\n+  __ addl(rdi, 536870912);\n+  __ movl(rcx, 0);\n+  __ movl(r11, 0);\n+  __ subq(rcx, r8);\n+  __ sbbq(r11, r10);\n+  __ sbbq(rbx, r9);\n+  __ movq(r8, rcx);\n+  __ movq(r10, r11);\n+  __ movq(r9, rbx);\n+  __ movl(rbx, 32768);\n+  __ jmp(L_2TAG_PACKET_5_0_1);\n+\n+  __ bind(L_2TAG_PACKET_12_0_1);\n+  __ shrl(r9);\n+  __ mov64(rbx, 0x100000000);\n+  __ shrq(rbx);\n+  __ movl(rcx, 0);\n+  __ movl(r11, 0);\n+  __ subq(rcx, r8);\n+  __ sbbq(r11, r10);\n+  __ sbbq(rbx, r9);\n+  __ movq(r8, rcx);\n+  __ movq(r10, r11);\n+  __ movq(r9, rbx);\n+  __ movl(rbx, 32768);\n+  __ shrq(rdi, 3);\n+  __ addl(rdi, 536870912);\n+  __ jmp(L_2TAG_PACKET_6_0_1);\n+\n+  __ bind(L_2TAG_PACKET_2_0_1);\n+  __ movsd(xmm0, Address(rsp, 8));\n+  __ mulsd(xmm0, ExternalAddress(NEG_ZERO), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n+  __ movq(Address(rsp, 0), xmm0);\n+\n+  __ bind(L_2TAG_PACKET_13_0_1);\n+\n+  __ bind(B1_4);\n+  __ addq(rsp, 16);\n+  __ pop(rbx);\n+\n+#ifdef _WIN64\n+  __ pop(rdi);\n+  __ pop(rsi);\n+#endif\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_cos.cpp","additions":625,"deletions":0,"binary":false,"changes":625,"status":"added"},{"patch":"@@ -0,0 +1,387 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - EXP()\n+\/\/                     ---------------------\n+\/\/\n+\/\/ Description:\n+\/\/  Let K = 64 (table size).\n+\/\/        x    x\/log(2)     n\n+\/\/       e  = 2          = 2 * T[j] * (1 + P(y))\n+\/\/  where\n+\/\/       x = m*log(2)\/K + y,    y in [-log(2)\/K..log(2)\/K]\n+\/\/       m = n*K + j,           m,n,j - signed integer, j in [-K\/2..K\/2]\n+\/\/                  j\/K\n+\/\/       values of 2   are tabulated as T[j] = T_hi[j] ( 1 + T_lo[j]).\n+\/\/\n+\/\/       P(y) is a minimax polynomial approximation of exp(x)-1\n+\/\/       on small interval [-log(2)\/K..log(2)\/K] (were calculated by Maple V).\n+\/\/\n+\/\/  To avoid problems with arithmetic overflow and underflow,\n+\/\/            n                        n1  n2\n+\/\/  value of 2  is safely computed as 2 * 2 where n1 in [-BIAS\/2..BIAS\/2]\n+\/\/  where BIAS is a value of exponent bias.\n+\/\/\n+\/\/ Special cases:\n+\/\/  exp(NaN) = NaN\n+\/\/  exp(+INF) = +INF\n+\/\/  exp(-INF) = 0\n+\/\/  exp(x) = 1 for subnormals\n+\/\/  for finite argument, only exp(0)=1 is exact\n+\/\/  For IEEE double\n+\/\/    if x >  709.782712893383973096 then exp(x) overflow\n+\/\/    if x < -745.133219101941108420 then exp(x) underflow\n+\/\/\n+\/******************************************************************************\/\n+\n+ATTRIBUTE_ALIGNED(16) juint _cv[] =\n+{\n+    0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL, 0xfefa0000UL,\n+    0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL, 0xbc9e3b3aUL, 0x3d1cf79aUL,\n+    0xbc9e3b3aUL, 0x3d1cf79aUL, 0xfffffffeUL, 0x3fdfffffUL, 0xfffffffeUL,\n+    0x3fdfffffUL, 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL, 0x3fa55555UL,\n+    0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _mmask[] =\n+{\n+    0xffffffc0UL, 0x00000000UL, 0xffffffc0UL, 0x00000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _bias[] =\n+{\n+    0x0000ffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _Tbl_addr[] =\n+{\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x0e03754dUL,\n+    0x3cad7bbfUL, 0x3e778060UL, 0x00002c9aUL, 0x3567f613UL, 0x3c8cd252UL,\n+    0xd3158574UL, 0x000059b0UL, 0x61e6c861UL, 0x3c60f74eUL, 0x18759bc8UL,\n+    0x00008745UL, 0x5d837b6cUL, 0x3c979aa6UL, 0x6cf9890fUL, 0x0000b558UL,\n+    0x702f9cd1UL, 0x3c3ebe3dUL, 0x32d3d1a2UL, 0x0000e3ecUL, 0x1e63bcd8UL,\n+    0x3ca3516eUL, 0xd0125b50UL, 0x00011301UL, 0x26f0387bUL, 0x3ca4c554UL,\n+    0xaea92ddfUL, 0x0001429aUL, 0x62523fb6UL, 0x3ca95153UL, 0x3c7d517aUL,\n+    0x000172b8UL, 0x3f1353bfUL, 0x3c8b898cUL, 0xeb6fcb75UL, 0x0001a35bUL,\n+    0x3e3a2f5fUL, 0x3c9aecf7UL, 0x3168b9aaUL, 0x0001d487UL, 0x44a6c38dUL,\n+    0x3c8a6f41UL, 0x88628cd6UL, 0x0002063bUL, 0xe3a8a894UL, 0x3c968efdUL,\n+    0x6e756238UL, 0x0002387aUL, 0x981fe7f2UL, 0x3c80472bUL, 0x65e27cddUL,\n+    0x00026b45UL, 0x6d09ab31UL, 0x3c82f7e1UL, 0xf51fdee1UL, 0x00029e9dUL,\n+    0x720c0ab3UL, 0x3c8b3782UL, 0xa6e4030bUL, 0x0002d285UL, 0x4db0abb6UL,\n+    0x3c834d75UL, 0x0a31b715UL, 0x000306feUL, 0x5dd3f84aUL, 0x3c8fdd39UL,\n+    0xb26416ffUL, 0x00033c08UL, 0xcc187d29UL, 0x3ca12f8cUL, 0x373aa9caUL,\n+    0x000371a7UL, 0x738b5e8bUL, 0x3ca7d229UL, 0x34e59ff6UL, 0x0003a7dbUL,\n+    0xa72a4c6dUL, 0x3c859f48UL, 0x4c123422UL, 0x0003dea6UL, 0x259d9205UL,\n+    0x3ca8b846UL, 0x21f72e29UL, 0x0004160aUL, 0x60c2ac12UL, 0x3c4363edUL,\n+    0x6061892dUL, 0x00044e08UL, 0xdaa10379UL, 0x3c6ecce1UL, 0xb5c13cd0UL,\n+    0x000486a2UL, 0xbb7aafb0UL, 0x3c7690ceUL, 0xd5362a27UL, 0x0004bfdaUL,\n+    0x9b282a09UL, 0x3ca083ccUL, 0x769d2ca6UL, 0x0004f9b2UL, 0xc1aae707UL,\n+    0x3ca509b0UL, 0x569d4f81UL, 0x0005342bUL, 0x18fdd78eUL, 0x3c933505UL,\n+    0x36b527daUL, 0x00056f47UL, 0xe21c5409UL, 0x3c9063e1UL, 0xdd485429UL,\n+    0x0005ab07UL, 0x2b64c035UL, 0x3c9432e6UL, 0x15ad2148UL, 0x0005e76fUL,\n+    0x99f08c0aUL, 0x3ca01284UL, 0xb03a5584UL, 0x0006247eUL, 0x0073dc06UL,\n+    0x3c99f087UL, 0x82552224UL, 0x00066238UL, 0x0da05571UL, 0x3c998d4dUL,\n+    0x667f3bccUL, 0x0006a09eUL, 0x86ce4786UL, 0x3ca52bb9UL, 0x3c651a2eUL,\n+    0x0006dfb2UL, 0x206f0dabUL, 0x3ca32092UL, 0xe8ec5f73UL, 0x00071f75UL,\n+    0x8e17a7a6UL, 0x3ca06122UL, 0x564267c8UL, 0x00075febUL, 0x461e9f86UL,\n+    0x3ca244acUL, 0x73eb0186UL, 0x0007a114UL, 0xabd66c55UL, 0x3c65ebe1UL,\n+    0x36cf4e62UL, 0x0007e2f3UL, 0xbbff67d0UL, 0x3c96fe9fUL, 0x994cce12UL,\n+    0x00082589UL, 0x14c801dfUL, 0x3c951f14UL, 0x9b4492ecUL, 0x000868d9UL,\n+    0xc1f0eab4UL, 0x3c8db72fUL, 0x422aa0dbUL, 0x0008ace5UL, 0x59f35f44UL,\n+    0x3c7bf683UL, 0x99157736UL, 0x0008f1aeUL, 0x9c06283cUL, 0x3ca360baUL,\n+    0xb0cdc5e4UL, 0x00093737UL, 0x20f962aaUL, 0x3c95e8d1UL, 0x9fde4e4fUL,\n+    0x00097d82UL, 0x2b91ce27UL, 0x3c71affcUL, 0x82a3f090UL, 0x0009c491UL,\n+    0x589a2ebdUL, 0x3c9b6d34UL, 0x7b5de564UL, 0x000a0c66UL, 0x9ab89880UL,\n+    0x3c95277cUL, 0xb23e255cUL, 0x000a5503UL, 0x6e735ab3UL, 0x3c846984UL,\n+    0x5579fdbfUL, 0x000a9e6bUL, 0x92cb3387UL, 0x3c8c1a77UL, 0x995ad3adUL,\n+    0x000ae89fUL, 0xdc2d1d96UL, 0x3ca22466UL, 0xb84f15faUL, 0x000b33a2UL,\n+    0xb19505aeUL, 0x3ca1112eUL, 0xf2fb5e46UL, 0x000b7f76UL, 0x0a5fddcdUL,\n+    0x3c74ffd7UL, 0x904bc1d2UL, 0x000bcc1eUL, 0x30af0cb3UL, 0x3c736eaeUL,\n+    0xdd85529cUL, 0x000c199bUL, 0xd10959acUL, 0x3c84e08fUL, 0x2e57d14bUL,\n+    0x000c67f1UL, 0x6c921968UL, 0x3c676b2cUL, 0xdcef9069UL, 0x000cb720UL,\n+    0x36df99b3UL, 0x3c937009UL, 0x4a07897bUL, 0x000d072dUL, 0xa63d07a7UL,\n+    0x3c74a385UL, 0xdcfba487UL, 0x000d5818UL, 0xd5c192acUL, 0x3c8e5a50UL,\n+    0x03db3285UL, 0x000da9e6UL, 0x1c4a9792UL, 0x3c98bb73UL, 0x337b9b5eUL,\n+    0x000dfc97UL, 0x603a88d3UL, 0x3c74b604UL, 0xe78b3ff6UL, 0x000e502eUL,\n+    0x92094926UL, 0x3c916f27UL, 0xa2a490d9UL, 0x000ea4afUL, 0x41aa2008UL,\n+    0x3c8ec3bcUL, 0xee615a27UL, 0x000efa1bUL, 0x31d185eeUL, 0x3c8a64a9UL,\n+    0x5b6e4540UL, 0x000f5076UL, 0x4d91cd9dUL, 0x3c77893bUL, 0x819e90d8UL,\n+    0x000fa7c1UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _ALLONES[] =\n+{\n+    0xffffffffUL, 0xffffffffUL, 0xffffffffUL, 0xffffffffUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _ebias[] =\n+{\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3ff00000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _XMAX[] =\n+{\n+    0xffffffffUL, 0x7fefffffUL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _XMIN[] =\n+{\n+    0x00000000UL, 0x00100000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(4) juint _INF[] =\n+{\n+    0x00000000UL, 0x7ff00000UL\n+};\n+\n+#define __ _masm->\n+\n+address StubGenerator::generate_libmExp() {\n+  StubCodeMark mark(this, \"StubRoutines\", \"libmExp\");\n+  address start = __ pc();\n+\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n+  Label L_2TAG_PACKET_12_0_2, B1_3, B1_5;\n+\n+  address cv       = (address)_cv;\n+  address mmask    = (address)_mmask;\n+  address bias     = (address)_bias;\n+  address Tbl_addr = (address)_Tbl_addr;\n+  address ALLONES  = (address)_ALLONES;\n+  address ebias    = (address)_ebias;\n+  address XMAX     = (address)_XMAX;\n+  address XMIN     = (address)_XMIN;\n+  address INF      = (address)_INF;\n+\n+  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+  __ subq(rsp, 24);\n+  __ movsd(Address(rsp, 8), xmm0);\n+  __ unpcklpd(xmm0, xmm0);\n+  __ movdqu(xmm1, ExternalAddress(cv),      r11 \/*rscratch*\/); \/\/ 0x652b82feUL, 0x40571547UL, 0x652b82feUL, 0x40571547UL\n+  __ movdqu(xmm2, ExternalAddress(cv + 16), r11 \/*rscratch*\/); \/\/ 0xfefa0000UL, 0x3f862e42UL, 0xfefa0000UL, 0x3f862e42UL\n+  __ movdqu(xmm3, ExternalAddress(cv + 32), r11 \/*rscratch*\/); \/\/ 0xbc9e3b3aUL, 0x3d1cf79aUL, 0xbc9e3b3aUL, 0x3d1cf79aUL\n+  __ movdqu(xmm6, ExternalAddress(SHIFTER), r11 \/*rscratch*\/); \/\/ 0x00000000UL, 0x43380000UL, 0x00000000UL, 0x43380000UL\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32767);\n+  __ movl(rdx, 16527);\n+  __ subl(rdx, rax);\n+  __ subl(rax, 15504);\n+  __ orl(rdx, rax);\n+  __ cmpl(rdx, INT_MIN);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+  __ mulpd(xmm1, xmm0);\n+  __ addpd(xmm1, xmm6);\n+  __ movapd(xmm7, xmm1);\n+  __ subpd(xmm1, xmm6);\n+  __ mulpd(xmm2, xmm1);\n+  __ movdqu(xmm4, ExternalAddress(cv + 64), r11 \/*rscratch*\/);  \/\/ 0xe3289860UL, 0x3f56c15cUL, 0x555b9e25UL, 0x3fa55555UL\n+  __ mulpd(xmm3, xmm1);\n+  __ movdqu(xmm5, ExternalAddress(cv + 80), r11 \/*rscratch*\/);  \/\/ 0xc090cf0fUL, 0x3f811115UL, 0x55548ba1UL, 0x3fc55555UL\n+  __ subpd(xmm0, xmm2);\n+  __ movdl(rax, xmm7);\n+  __ movl(rcx, rax);\n+  __ andl(rcx, 63);\n+  __ shll(rcx, 4);\n+  __ sarl(rax, 6);\n+  __ movl(rdx, rax);\n+  __ movdqu(xmm6, ExternalAddress(mmask), r11 \/*rscratch*\/);    \/\/ 0xffffffc0UL, 0x00000000UL, 0xffffffc0UL, 0x00000000UL\n+  __ pand(xmm7, xmm6);\n+  __ movdqu(xmm6, ExternalAddress(bias), r11 \/*rscratch*\/);     \/\/ 0x0000ffc0UL, 0x00000000UL, 0x0000ffc0UL, 0x00000000UL\n+  __ paddq(xmm7, xmm6);\n+  __ psllq(xmm7, 46);\n+  __ subpd(xmm0, xmm3);\n+  __ lea(r11, ExternalAddress(Tbl_addr));\n+  __ movdqu(xmm2, Address(rcx, r11));\n+  __ mulpd(xmm4, xmm0);\n+  __ movapd(xmm6, xmm0);\n+  __ movapd(xmm1, xmm0);\n+  __ mulpd(xmm6, xmm6);\n+  __ mulpd(xmm0, xmm6);\n+  __ addpd(xmm5, xmm4);\n+  __ mulsd(xmm0, xmm6);\n+  __ mulpd(xmm6, ExternalAddress(cv + 48), r11 \/*rscratch*\/);     \/\/ 0xfffffffeUL, 0x3fdfffffUL, 0xfffffffeUL, 0x3fdfffffUL\n+  __ addsd(xmm1, xmm2);\n+  __ unpckhpd(xmm2, xmm2);\n+  __ mulpd(xmm0, xmm5);\n+  __ addsd(xmm1, xmm0);\n+  __ por(xmm2, xmm7);\n+  __ unpckhpd(xmm0, xmm0);\n+  __ addsd(xmm0, xmm1);\n+  __ addsd(xmm0, xmm6);\n+  __ addl(rdx, 894);\n+  __ cmpl(rdx, 1916);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_1_0_2);\n+  __ mulsd(xmm0, xmm2);\n+  __ addsd(xmm0, xmm2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_1_0_2);\n+  __ xorpd(xmm3, xmm3);\n+  __ movdqu(xmm4, ExternalAddress(ALLONES), r11 \/*rscratch*\/);  \/\/ 0xffffffffUL, 0xffffffffUL, 0xffffffffUL, 0xffffffffUL\n+  __ movl(rdx, -1022);\n+  __ subl(rdx, rax);\n+  __ movdl(xmm5, rdx);\n+  __ psllq(xmm4, xmm5);\n+  __ movl(rcx, rax);\n+  __ sarl(rax, 1);\n+  __ pinsrw(xmm3, rax, 3);\n+  __ movdqu(xmm6, ExternalAddress(ebias), r11 \/*rscratch*\/);    \/\/ 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3ff00000UL\n+  __ psllq(xmm3, 4);\n+  __ psubd(xmm2, xmm3);\n+  __ mulsd(xmm0, xmm2);\n+  __ cmpl(rdx, 52);\n+  __ jcc(Assembler::greater, L_2TAG_PACKET_2_0_2);\n+  __ pand(xmm4, xmm2);\n+  __ paddd(xmm3, xmm6);\n+  __ subsd(xmm2, xmm4);\n+  __ addsd(xmm0, xmm2);\n+  __ cmpl(rcx, 1023);\n+  __ jcc(Assembler::greaterEqual, L_2TAG_PACKET_3_0_2);\n+  __ pextrw(rcx, xmm0, 3);\n+  __ andl(rcx, 32768);\n+  __ orl(rdx, rcx);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_4_0_2);\n+  __ movapd(xmm6, xmm0);\n+  __ addsd(xmm0, xmm4);\n+  __ mulsd(xmm0, xmm3);\n+  __ pextrw(rcx, xmm0, 3);\n+  __ andl(rcx, 32752);\n+  __ cmpl(rcx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_5_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_5_0_2);\n+  __ mulsd(xmm6, xmm3);\n+  __ mulsd(xmm4, xmm3);\n+  __ movdqu(xmm0, xmm6);\n+  __ pxor(xmm6, xmm4);\n+  __ psrad(xmm6, 31);\n+  __ pshufd(xmm6, xmm6, 85);\n+  __ psllq(xmm0, 1);\n+  __ psrlq(xmm0, 1);\n+  __ pxor(xmm0, xmm6);\n+  __ psrlq(xmm6, 63);\n+  __ paddq(xmm0, xmm6);\n+  __ paddq(xmm0, xmm4);\n+  __ movl(Address(rsp, 0), 15);\n+  __ jmp(L_2TAG_PACKET_6_0_2);\n+\n+  __ bind(L_2TAG_PACKET_4_0_2);\n+  __ addsd(xmm0, xmm4);\n+  __ mulsd(xmm0, xmm3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_3_0_2);\n+  __ addsd(xmm0, xmm4);\n+  __ mulsd(xmm0, xmm3);\n+  __ pextrw(rcx, xmm0, 3);\n+  __ andl(rcx, 32752);\n+  __ cmpl(rcx, 32752);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_7_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_2_0_2);\n+  __ paddd(xmm3, xmm6);\n+  __ addpd(xmm0, xmm2);\n+  __ mulsd(xmm0, xmm3);\n+  __ movl(Address(rsp, 0), 15);\n+  __ jmp(L_2TAG_PACKET_6_0_2);\n+\n+  __ bind(L_2TAG_PACKET_8_0_2);\n+  __ cmpl(rax, 2146435072);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_9_0_2);\n+  __ movl(rax, Address(rsp, 12));\n+  __ cmpl(rax, INT_MIN);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_10_0_2);\n+  __ movsd(xmm0, ExternalAddress(XMAX), r11 \/*rscratch*\/);      \/\/ 0xffffffffUL, 0x7fefffffUL\n+  __ mulsd(xmm0, xmm0);\n+\n+  __ bind(L_2TAG_PACKET_7_0_2);\n+  __ movl(Address(rsp, 0), 14);\n+  __ jmp(L_2TAG_PACKET_6_0_2);\n+\n+  __ bind(L_2TAG_PACKET_10_0_2);\n+  __ movsd(xmm0, ExternalAddress(XMIN), r11 \/*rscratch*\/);      \/\/ 0x00000000UL, 0x00100000UL\n+  __ mulsd(xmm0, xmm0);\n+  __ movl(Address(rsp, 0), 15);\n+  __ jmp(L_2TAG_PACKET_6_0_2);\n+\n+  __ bind(L_2TAG_PACKET_9_0_2);\n+  __ movl(rdx, Address(rsp, 8));\n+  __ cmpl(rax, 2146435072);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_11_0_2);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_11_0_2);\n+  __ movl(rax, Address(rsp, 12));\n+  __ cmpl(rax, 2146435072);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_12_0_2);\n+  __ movsd(xmm0, ExternalAddress(INF), r11 \/*rscratch*\/);       \/\/ 0x00000000UL, 0x7ff00000UL\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_12_0_2);\n+  __ movsd(xmm0, ExternalAddress(ZERO), r11 \/*rscratch*\/);      \/\/ 0x00000000UL, 0x00000000UL\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_11_0_2);\n+  __ movsd(xmm0, Address(rsp, 8));\n+  __ addsd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_0_0_2);\n+  __ movl(rax, Address(rsp, 12));\n+  __ andl(rax, 2147483647);\n+  __ cmpl(rax, 1083179008);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_8_0_2);\n+  __ movsd(Address(rsp, 8), xmm0);\n+  __ addsd(xmm0, ExternalAddress(ONE), r11 \/*rscratch*\/); \/\/ 0x00000000UL, 0x3ff00000UL\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_6_0_2);\n+  __ movq(Address(rsp, 16), xmm0);\n+\n+  __ bind(B1_3);\n+  __ movq(xmm0, Address(rsp, 16));\n+\n+  __ bind(B1_5);\n+  __ addq(rsp, 24);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_exp.cpp","additions":387,"deletions":0,"binary":false,"changes":387,"status":"added"},{"patch":"@@ -0,0 +1,709 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - LOG()\n+\/\/                     ---------------------\n+\/\/\n+\/\/    x=2^k * mx, mx in [1,2)\n+\/\/\n+\/\/    Get B~1\/mx based on the output of rcpss instruction (B0)\n+\/\/    B = int((B0*2^7+0.5))\/2^7\n+\/\/\n+\/\/    Reduced argument: r=B*mx-1.0 (computed accurately in high and low parts)\n+\/\/\n+\/\/    Result:  k*log(2) - log(B) + p(r) if |x-1| >= small value (2^-6)  and\n+\/\/             p(r) is a degree 7 polynomial\n+\/\/             -log(B) read from data table (high, low parts)\n+\/\/             Result is formed from high and low parts\n+\/\/\n+\/\/ Special cases:\n+\/\/  log(NaN) = quiet NaN, and raise invalid exception\n+\/\/  log(+INF) = that INF\n+\/\/  log(0) = -INF with divide-by-zero exception raised\n+\/\/  log(1) = +0\n+\/\/  log(x) = NaN with invalid exception raised if x < -0, including -INF\n+\/\/\n+\/******************************************************************************\/\n+\n+ATTRIBUTE_ALIGNED(16) juint _L_tbl[] =\n+{\n+    0xfefa3800UL, 0x3fe62e42UL, 0x93c76730UL, 0x3d2ef357UL, 0xaa241800UL,\n+    0x3fe5ee82UL, 0x0cda46beUL, 0x3d220238UL, 0x5c364800UL, 0x3fe5af40UL,\n+    0xac10c9fbUL, 0x3d2dfa63UL, 0x26bb8c00UL, 0x3fe5707aUL, 0xff3303ddUL,\n+    0x3d09980bUL, 0x26867800UL, 0x3fe5322eUL, 0x5d257531UL, 0x3d05ccc4UL,\n+    0x835a5000UL, 0x3fe4f45aUL, 0x6d93b8fbUL, 0xbd2e6c51UL, 0x6f970c00UL,\n+    0x3fe4b6fdUL, 0xed4c541cUL, 0x3cef7115UL, 0x27e8a400UL, 0x3fe47a15UL,\n+    0xf94d60aaUL, 0xbd22cb6aUL, 0xf2f92400UL, 0x3fe43d9fUL, 0x481051f7UL,\n+    0xbcfd984fUL, 0x2125cc00UL, 0x3fe4019cUL, 0x30f0c74cUL, 0xbd26ce79UL,\n+    0x0c36c000UL, 0x3fe3c608UL, 0x7cfe13c2UL, 0xbd02b736UL, 0x17197800UL,\n+    0x3fe38ae2UL, 0xbb5569a4UL, 0xbd218b7aUL, 0xad9d8c00UL, 0x3fe35028UL,\n+    0x9527e6acUL, 0x3d10b83fUL, 0x44340800UL, 0x3fe315daUL, 0xc5a0ed9cUL,\n+    0xbd274e93UL, 0x57b0e000UL, 0x3fe2dbf5UL, 0x07b9dc11UL, 0xbd17a6e5UL,\n+    0x6d0ec000UL, 0x3fe2a278UL, 0xe797882dUL, 0x3d206d2bUL, 0x1134dc00UL,\n+    0x3fe26962UL, 0x05226250UL, 0xbd0b61f1UL, 0xd8bebc00UL, 0x3fe230b0UL,\n+    0x6e48667bUL, 0x3d12fc06UL, 0x5fc61800UL, 0x3fe1f863UL, 0xc9fe81d3UL,\n+    0xbd2a7242UL, 0x49ae6000UL, 0x3fe1c078UL, 0xed70e667UL, 0x3cccacdeUL,\n+    0x40f23c00UL, 0x3fe188eeUL, 0xf8ab4650UL, 0x3d14cc4eUL, 0xf6f29800UL,\n+    0x3fe151c3UL, 0xa293ae49UL, 0xbd2edd97UL, 0x23c75c00UL, 0x3fe11af8UL,\n+    0xbb9ddcb2UL, 0xbd258647UL, 0x8611cc00UL, 0x3fe0e489UL, 0x07801742UL,\n+    0x3d1c2998UL, 0xe2d05400UL, 0x3fe0ae76UL, 0x887e7e27UL, 0x3d1f486bUL,\n+    0x0533c400UL, 0x3fe078bfUL, 0x41edf5fdUL, 0x3d268122UL, 0xbe760400UL,\n+    0x3fe04360UL, 0xe79539e0UL, 0xbd04c45fUL, 0xe5b20800UL, 0x3fe00e5aUL,\n+    0xb1727b1cUL, 0xbd053ba3UL, 0xaf7a4800UL, 0x3fdfb358UL, 0x3c164935UL,\n+    0x3d0085faUL, 0xee031800UL, 0x3fdf4aa7UL, 0x6f014a8bUL, 0x3d12cde5UL,\n+    0x56b41000UL, 0x3fdee2a1UL, 0x5a470251UL, 0x3d2f27f4UL, 0xc3ddb000UL,\n+    0x3fde7b42UL, 0x5372bd08UL, 0xbd246550UL, 0x1a272800UL, 0x3fde148aUL,\n+    0x07322938UL, 0xbd1326b2UL, 0x484c9800UL, 0x3fddae75UL, 0x60dc616aUL,\n+    0xbd1ea42dUL, 0x46def800UL, 0x3fdd4902UL, 0xe9a767a8UL, 0x3d235bafUL,\n+    0x18064800UL, 0x3fdce42fUL, 0x3ec7a6b0UL, 0xbd0797c3UL, 0xc7455800UL,\n+    0x3fdc7ff9UL, 0xc15249aeUL, 0xbd29b6ddUL, 0x693fa000UL, 0x3fdc1c60UL,\n+    0x7fe8e180UL, 0x3d2cec80UL, 0x1b80e000UL, 0x3fdbb961UL, 0xf40a666dUL,\n+    0x3d27d85bUL, 0x04462800UL, 0x3fdb56faUL, 0x2d841995UL, 0x3d109525UL,\n+    0x5248d000UL, 0x3fdaf529UL, 0x52774458UL, 0xbd217cc5UL, 0x3c8ad800UL,\n+    0x3fda93edUL, 0xbea77a5dUL, 0x3d1e36f2UL, 0x0224f800UL, 0x3fda3344UL,\n+    0x7f9d79f5UL, 0x3d23c645UL, 0xea15f000UL, 0x3fd9d32bUL, 0x10d0c0b0UL,\n+    0xbd26279eUL, 0x43135800UL, 0x3fd973a3UL, 0xa502d9f0UL, 0xbd152313UL,\n+    0x635bf800UL, 0x3fd914a8UL, 0x2ee6307dUL, 0xbd1766b5UL, 0xa88b3000UL,\n+    0x3fd8b639UL, 0xe5e70470UL, 0xbd205ae1UL, 0x776dc800UL, 0x3fd85855UL,\n+    0x3333778aUL, 0x3d2fd56fUL, 0x3bd81800UL, 0x3fd7fafaUL, 0xc812566aUL,\n+    0xbd272090UL, 0x687cf800UL, 0x3fd79e26UL, 0x2efd1778UL, 0x3d29ec7dUL,\n+    0x76c67800UL, 0x3fd741d8UL, 0x49dc60b3UL, 0x3d2d8b09UL, 0xe6af1800UL,\n+    0x3fd6e60eUL, 0x7c222d87UL, 0x3d172165UL, 0x3e9c6800UL, 0x3fd68ac8UL,\n+    0x2756eba0UL, 0x3d20a0d3UL, 0x0b3ab000UL, 0x3fd63003UL, 0xe731ae00UL,\n+    0xbd2db623UL, 0xdf596000UL, 0x3fd5d5bdUL, 0x08a465dcUL, 0xbd0a0b2aUL,\n+    0x53c8d000UL, 0x3fd57bf7UL, 0xee5d40efUL, 0x3d1fadedUL, 0x0738a000UL,\n+    0x3fd522aeUL, 0x8164c759UL, 0x3d2ebe70UL, 0x9e173000UL, 0x3fd4c9e0UL,\n+    0x1b0ad8a4UL, 0xbd2e2089UL, 0xc271c800UL, 0x3fd4718dUL, 0x0967d675UL,\n+    0xbd2f27ceUL, 0x23d5e800UL, 0x3fd419b4UL, 0xec90e09dUL, 0x3d08e436UL,\n+    0x77333000UL, 0x3fd3c252UL, 0xb606bd5cUL, 0x3d183b54UL, 0x76be1000UL,\n+    0x3fd36b67UL, 0xb0f177c8UL, 0x3d116ecdUL, 0xe1d36000UL, 0x3fd314f1UL,\n+    0xd3213cb8UL, 0xbd28e27aUL, 0x7cdc9000UL, 0x3fd2bef0UL, 0x4a5004f4UL,\n+    0x3d2a9cfaUL, 0x1134d800UL, 0x3fd26962UL, 0xdf5bb3b6UL, 0x3d2c93c1UL,\n+    0x6d0eb800UL, 0x3fd21445UL, 0xba46baeaUL, 0x3d0a87deUL, 0x635a6800UL,\n+    0x3fd1bf99UL, 0x5147bdb7UL, 0x3d2ca6edUL, 0xcbacf800UL, 0x3fd16b5cUL,\n+    0xf7a51681UL, 0x3d2b9acdUL, 0x8227e800UL, 0x3fd1178eUL, 0x63a5f01cUL,\n+    0xbd2c210eUL, 0x67616000UL, 0x3fd0c42dUL, 0x163ceae9UL, 0x3d27188bUL,\n+    0x604d5800UL, 0x3fd07138UL, 0x16ed4e91UL, 0x3cf89cdbUL, 0x5626c800UL,\n+    0x3fd01eaeUL, 0x1485e94aUL, 0xbd16f08cUL, 0x6cb3b000UL, 0x3fcf991cUL,\n+    0xca0cdf30UL, 0x3d1bcbecUL, 0xe4dd0000UL, 0x3fcef5adUL, 0x65bb8e11UL,\n+    0xbcca2115UL, 0xffe71000UL, 0x3fce530eUL, 0x6041f430UL, 0x3cc21227UL,\n+    0xb0d49000UL, 0x3fcdb13dUL, 0xf715b035UL, 0xbd2aff2aUL, 0xf2656000UL,\n+    0x3fcd1037UL, 0x75b6f6e4UL, 0xbd084a7eUL, 0xc6f01000UL, 0x3fcc6ffbUL,\n+    0xc5962bd2UL, 0xbcf1ec72UL, 0x383be000UL, 0x3fcbd087UL, 0x595412b6UL,\n+    0xbd2d4bc4UL, 0x575bd000UL, 0x3fcb31d8UL, 0x4eace1aaUL, 0xbd0c358dUL,\n+    0x3c8ae000UL, 0x3fca93edUL, 0x50562169UL, 0xbd287243UL, 0x07089000UL,\n+    0x3fc9f6c4UL, 0x6865817aUL, 0x3d29904dUL, 0xdcf70000UL, 0x3fc95a5aUL,\n+    0x58a0ff6fUL, 0x3d07f228UL, 0xeb390000UL, 0x3fc8beafUL, 0xaae92cd1UL,\n+    0xbd073d54UL, 0x6551a000UL, 0x3fc823c1UL, 0x9a631e83UL, 0x3d1e0ddbUL,\n+    0x85445000UL, 0x3fc7898dUL, 0x70914305UL, 0xbd1c6610UL, 0x8b757000UL,\n+    0x3fc6f012UL, 0xe59c21e1UL, 0xbd25118dUL, 0xbe8c1000UL, 0x3fc6574eUL,\n+    0x2c3c2e78UL, 0x3d19cf8bUL, 0x6b544000UL, 0x3fc5bf40UL, 0xeb68981cUL,\n+    0xbd127023UL, 0xe4a1b000UL, 0x3fc527e5UL, 0xe5697dc7UL, 0x3d2633e8UL,\n+    0x8333b000UL, 0x3fc4913dUL, 0x54fdb678UL, 0x3d258379UL, 0xa5993000UL,\n+    0x3fc3fb45UL, 0x7e6a354dUL, 0xbd2cd1d8UL, 0xb0159000UL, 0x3fc365fcUL,\n+    0x234b7289UL, 0x3cc62fa8UL, 0x0c868000UL, 0x3fc2d161UL, 0xcb81b4a1UL,\n+    0x3d039d6cUL, 0x2a49c000UL, 0x3fc23d71UL, 0x8fd3df5cUL, 0x3d100d23UL,\n+    0x7e23f000UL, 0x3fc1aa2bUL, 0x44389934UL, 0x3d2ca78eUL, 0x8227e000UL,\n+    0x3fc1178eUL, 0xce2d07f2UL, 0x3d21ef78UL, 0xb59e4000UL, 0x3fc08598UL,\n+    0x7009902cUL, 0xbd27e5ddUL, 0x39dbe000UL, 0x3fbfe891UL, 0x4fa10afdUL,\n+    0xbd2534d6UL, 0x830a2000UL, 0x3fbec739UL, 0xafe645e0UL, 0xbd2dc068UL,\n+    0x63844000UL, 0x3fbda727UL, 0x1fa71733UL, 0x3d1a8940UL, 0x01bc4000UL,\n+    0x3fbc8858UL, 0xc65aacd3UL, 0x3d2646d1UL, 0x8dad6000UL, 0x3fbb6ac8UL,\n+    0x2bf768e5UL, 0xbd139080UL, 0x40b1c000UL, 0x3fba4e76UL, 0xb94407c8UL,\n+    0xbd0e42b6UL, 0x5d594000UL, 0x3fb9335eUL, 0x3abd47daUL, 0x3d23115cUL,\n+    0x2f40e000UL, 0x3fb8197eUL, 0xf96ffdf7UL, 0x3d0f80dcUL, 0x0aeac000UL,\n+    0x3fb700d3UL, 0xa99ded32UL, 0x3cec1e8dUL, 0x4d97a000UL, 0x3fb5e95aUL,\n+    0x3c5d1d1eUL, 0xbd2c6906UL, 0x5d208000UL, 0x3fb4d311UL, 0x82f4e1efUL,\n+    0xbcf53a25UL, 0xa7d1e000UL, 0x3fb3bdf5UL, 0xa5db4ed7UL, 0x3d2cc85eUL,\n+    0xa4472000UL, 0x3fb2aa04UL, 0xae9c697dUL, 0xbd20b6e8UL, 0xd1466000UL,\n+    0x3fb1973bUL, 0x560d9e9bUL, 0xbd25325dUL, 0xb59e4000UL, 0x3fb08598UL,\n+    0x7009902cUL, 0xbd17e5ddUL, 0xc006c000UL, 0x3faeea31UL, 0x4fc93b7bUL,\n+    0xbd0e113eUL, 0xcdddc000UL, 0x3faccb73UL, 0x47d82807UL, 0xbd1a68f2UL,\n+    0xd0fb0000UL, 0x3faaaef2UL, 0x353bb42eUL, 0x3d20fc1aUL, 0x149fc000UL,\n+    0x3fa894aaUL, 0xd05a267dUL, 0xbd197995UL, 0xf2d4c000UL, 0x3fa67c94UL,\n+    0xec19afa2UL, 0xbd029efbUL, 0xd42e0000UL, 0x3fa466aeUL, 0x75bdfd28UL,\n+    0xbd2c1673UL, 0x2f8d0000UL, 0x3fa252f3UL, 0xe021b67bUL, 0x3d283e9aUL,\n+    0x89e74000UL, 0x3fa0415dUL, 0x5cf1d753UL, 0x3d0111c0UL, 0xec148000UL,\n+    0x3f9c63d2UL, 0x3f9eb2f3UL, 0x3d2578c6UL, 0x28c90000UL, 0x3f984925UL,\n+    0x325a0c34UL, 0xbd2aa0baUL, 0x25980000UL, 0x3f9432a9UL, 0x928637feUL,\n+    0x3d098139UL, 0x58938000UL, 0x3f902056UL, 0x06e2f7d2UL, 0xbd23dc5bUL,\n+    0xa3890000UL, 0x3f882448UL, 0xda74f640UL, 0xbd275577UL, 0x75890000UL,\n+    0x3f801015UL, 0x999d2be8UL, 0xbd10c76bUL, 0x59580000UL, 0x3f700805UL,\n+    0xcb31c67bUL, 0x3d2166afUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x80000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _log2[] =\n+{\n+    0xfefa3800UL, 0x3fa62e42UL, 0x93c76730UL, 0x3ceef357UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _coeff[] =\n+{\n+    0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL, 0x3d6fb175UL,\n+    0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL, 0x9999999aUL, 0x3fc99999UL,\n+    0x00000000UL, 0xbfe00000UL\n+};\n+\n+#define __ _masm->\n+\n+address StubGenerator::generate_libmLog() {\n+  StubCodeMark mark(this, \"StubRoutines\", \"libmLog\");\n+  address start = __ pc();\n+\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2;\n+  Label B1_3, B1_5;\n+\n+  address L_tbl = (address)_L_tbl;\n+  address log2  = (address)_log2;\n+  address coeff = (address)_coeff;\n+\n+  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+  __ subq(rsp, 24);\n+  __ movsd(Address(rsp, 0), xmm0);\n+  __ mov64(rax, 0x3ff0000000000000);\n+  __ movdq(xmm2, rax);\n+  __ mov64(rdx, 0x77f0000000000000);\n+  __ movdq(xmm3, rdx);\n+  __ movl(rcx, 32768);\n+  __ movdl(xmm4, rcx);\n+  __ mov64(r11, 0xffffe00000000000);\n+  __ movdq(xmm5, r11);\n+  __ movdqu(xmm1, xmm0);\n+  __ pextrw(rax, xmm0, 3);\n+  __ por(xmm0, xmm2);\n+  __ movl(rcx, 16352);\n+  __ psrlq(xmm0, 27);\n+  __ lea(r8, ExternalAddress(L_tbl));\n+  __ psrld(xmm0, 2);\n+  __ rcpps(xmm0, xmm0);\n+  __ psllq(xmm1, 12);\n+  __ pshufd(xmm6, xmm5, 228);\n+  __ psrlq(xmm1, 12);\n+  __ subl(rax, 16);\n+  __ cmpl(rax, 32736);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+\n+  __ bind(L_2TAG_PACKET_1_0_2);\n+  __ paddd(xmm0, xmm4);\n+  __ por(xmm1, xmm3);\n+  __ movdl(rdx, xmm0);\n+  __ psllq(xmm0, 29);\n+  __ pand(xmm5, xmm1);\n+  __ pand(xmm0, xmm6);\n+  __ subsd(xmm1, xmm5);\n+  __ mulpd(xmm5, xmm0);\n+  __ andl(rax, 32752);\n+  __ subl(rax, rcx);\n+  __ cvtsi2sdl(xmm7, rax);\n+  __ mulsd(xmm1, xmm0);\n+  __ movq(xmm6, ExternalAddress(log2), r11 \/*rscratch*\/);       \/\/ 0xfefa3800UL, 0x3fa62e42UL\n+  __ movdqu(xmm3, ExternalAddress(coeff), r11 \/*rscratch*\/);    \/\/ 0x92492492UL, 0x3fc24924UL, 0x00000000UL, 0xbfd00000UL\n+  __ subsd(xmm5, xmm2);\n+  __ andl(rdx, 16711680);\n+  __ shrl(rdx, 12);\n+  __ movdqu(xmm0, Address(r8, rdx));\n+  __ movdqu(xmm4, ExternalAddress(coeff + 16), r11 \/*rscratch*\/); \/\/ 0x3d6fb175UL, 0xbfc5555eUL, 0x55555555UL, 0x3fd55555UL\n+  __ addsd(xmm1, xmm5);\n+  __ movdqu(xmm2, ExternalAddress(coeff + 32), r11 \/*rscratch*\/); \/\/ 0x9999999aUL, 0x3fc99999UL, 0x00000000UL, 0xbfe00000UL\n+  __ mulsd(xmm6, xmm7);\n+  if (VM_Version::supports_sse3()) {\n+    __ movddup(xmm5, xmm1);\n+  }\n+  else {\n+    __ movdqu(xmm5, xmm1);\n+    __ movlhps(xmm5, xmm5);\n+  }\n+  __ mulsd(xmm7, ExternalAddress(log2 + 8), r11 \/*rscratch*\/);    \/\/ 0x93c76730UL, 0x3ceef357UL\n+  __ mulsd(xmm3, xmm1);\n+  __ addsd(xmm0, xmm6);\n+  __ mulpd(xmm4, xmm5);\n+  __ mulpd(xmm5, xmm5);\n+  if (VM_Version::supports_sse3()) {\n+    __ movddup(xmm6, xmm0);\n+  }\n+  else {\n+    __ movdqu(xmm6, xmm0);\n+    __ movlhps(xmm6, xmm6);\n+  }\n+  __ addsd(xmm0, xmm1);\n+  __ addpd(xmm4, xmm2);\n+  __ mulpd(xmm3, xmm5);\n+  __ subsd(xmm6, xmm0);\n+  __ mulsd(xmm4, xmm1);\n+  __ pshufd(xmm2, xmm0, 238);\n+  __ addsd(xmm1, xmm6);\n+  __ mulsd(xmm5, xmm5);\n+  __ addsd(xmm7, xmm2);\n+  __ addpd(xmm4, xmm3);\n+  __ addsd(xmm1, xmm7);\n+  __ mulpd(xmm4, xmm5);\n+  __ addsd(xmm1, xmm4);\n+  __ pshufd(xmm5, xmm4, 238);\n+  __ addsd(xmm1, xmm5);\n+  __ addsd(xmm0, xmm1);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_0_0_2);\n+  __ movq(xmm0, Address(rsp, 0));\n+  __ movq(xmm1, Address(rsp, 0));\n+  __ addl(rax, 16);\n+  __ cmpl(rax, 32768);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_2_0_2);\n+  __ cmpl(rax, 16);\n+  __ jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n+\n+  __ bind(L_2TAG_PACKET_4_0_2);\n+  __ addsd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_5_0_2);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n+  __ jmp(L_2TAG_PACKET_6_0_2);\n+\n+  __ bind(L_2TAG_PACKET_3_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ addsd(xmm1, xmm0);\n+  __ movdl(rdx, xmm1);\n+  __ psrlq(xmm1, 32);\n+  __ movdl(rcx, xmm1);\n+  __ orl(rdx, rcx);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ movl(rax, 18416);\n+  __ pinsrw(xmm1, rax, 3);\n+  __ mulsd(xmm0, xmm1);\n+  __ movdqu(xmm1, xmm0);\n+  __ pextrw(rax, xmm0, 3);\n+  __ por(xmm0, xmm2);\n+  __ psrlq(xmm0, 27);\n+  __ movl(rcx, 18416);\n+  __ psrld(xmm0, 2);\n+  __ rcpps(xmm0, xmm0);\n+  __ psllq(xmm1, 12);\n+  __ pshufd(xmm6, xmm5, 228);\n+  __ psrlq(xmm1, 12);\n+  __ jmp(L_2TAG_PACKET_1_0_2);\n+\n+  __ bind(L_2TAG_PACKET_2_0_2);\n+  __ movdl(rdx, xmm1);\n+  __ psrlq(xmm1, 32);\n+  __ movdl(rcx, xmm1);\n+  __ addl(rcx, rcx);\n+  __ cmpl(rcx, -2097152);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n+  __ orl(rdx, rcx);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n+\n+  __ bind(L_2TAG_PACKET_6_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 32752);\n+  __ pinsrw(xmm1, rax, 3);\n+  __ mulsd(xmm0, xmm1);\n+  __ movl(Address(rsp, 16), 3);\n+  __ jmp(L_2TAG_PACKET_8_0_2);\n+  __ bind(L_2TAG_PACKET_7_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 49136);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ divsd(xmm0, xmm1);\n+  __ movl(Address(rsp, 16), 2);\n+\n+  __ bind(L_2TAG_PACKET_8_0_2);\n+  __ movq(Address(rsp, 8), xmm0);\n+\n+  __ bind(B1_3);\n+  __ movq(xmm0, Address(rsp, 8));\n+\n+  __ bind(B1_5);\n+  __ addq(rsp, 24);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - LOG10()\n+\/\/                     ---------------------\n+\/\/\n+\/\/    Let x=2^k * mx, mx in [1,2)\n+\/\/\n+\/\/    Get B~1\/mx based on the output of rcpss instruction (B0)\n+\/\/    B = int((B0*LH*2^7+0.5))\/2^7\n+\/\/    LH is a short approximation for log10(e)\n+\/\/\n+\/\/    Reduced argument: r=B*mx-LH (computed accurately in high and low parts)\n+\/\/\n+\/\/    Result:  k*log10(2) - log(B) + p(r)\n+\/\/             p(r) is a degree 7 polynomial\n+\/\/             -log(B) read from data table (high, low parts)\n+\/\/             Result is formed from high and low parts\n+\/\/\n+\/\/ Special cases:\n+\/\/  log10(0) = -INF with divide-by-zero exception raised\n+\/\/  log10(1) = +0\n+\/\/  log10(x) = NaN with invalid exception raised if x < -0, including -INF\n+\/\/  log10(+INF) = +INF\n+\/\/\n+\/******************************************************************************\/\n+\n+ATTRIBUTE_ALIGNED(16) juint _HIGHSIGMASK_log10[] = {\n+    0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xffffe000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _LOG10_E[] = {\n+    0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _L_tbl_log10[] = {\n+    0x509f7800UL, 0x3fd34413UL, 0x1f12b358UL, 0x3d1fef31UL, 0x80333400UL,\n+    0x3fd32418UL, 0xc671d9d0UL, 0xbcf542bfUL, 0x51195000UL, 0x3fd30442UL,\n+    0x78a4b0c3UL, 0x3d18216aUL, 0x6fc79400UL, 0x3fd2e490UL, 0x80fa389dUL,\n+    0xbc902869UL, 0x89d04000UL, 0x3fd2c502UL, 0x75c2f564UL, 0x3d040754UL,\n+    0x4ddd1c00UL, 0x3fd2a598UL, 0xd219b2c3UL, 0xbcfa1d84UL, 0x6baa7c00UL,\n+    0x3fd28651UL, 0xfd9abec1UL, 0x3d1be6d3UL, 0x94028800UL, 0x3fd2672dUL,\n+    0xe289a455UL, 0xbd1ede5eUL, 0x78b86400UL, 0x3fd2482cUL, 0x6734d179UL,\n+    0x3d1fe79bUL, 0xcca3c800UL, 0x3fd2294dUL, 0x981a40b8UL, 0xbced34eaUL,\n+    0x439c5000UL, 0x3fd20a91UL, 0xcc392737UL, 0xbd1a9cc3UL, 0x92752c00UL,\n+    0x3fd1ebf6UL, 0x03c9afe7UL, 0x3d1e98f8UL, 0x6ef8dc00UL, 0x3fd1cd7dUL,\n+    0x71dae7f4UL, 0x3d08a86cUL, 0x8fe4dc00UL, 0x3fd1af25UL, 0xee9185a1UL,\n+    0xbcff3412UL, 0xace59400UL, 0x3fd190eeUL, 0xc2cab353UL, 0x3cf17ed9UL,\n+    0x7e925000UL, 0x3fd172d8UL, 0x6952c1b2UL, 0x3cf1521cUL, 0xbe694400UL,\n+    0x3fd154e2UL, 0xcacb79caUL, 0xbd0bdc78UL, 0x26cbac00UL, 0x3fd1370dUL,\n+    0xf71f4de1UL, 0xbd01f8beUL, 0x72fa0800UL, 0x3fd11957UL, 0x55bf910bUL,\n+    0x3c946e2bUL, 0x5f106000UL, 0x3fd0fbc1UL, 0x39e639c1UL, 0x3d14a84bUL,\n+    0xa802a800UL, 0x3fd0de4aUL, 0xd3f31d5dUL, 0xbd178385UL, 0x0b992000UL,\n+    0x3fd0c0f3UL, 0x3843106fUL, 0xbd1f602fUL, 0x486ce800UL, 0x3fd0a3baUL,\n+    0x8819497cUL, 0x3cef987aUL, 0x1de49400UL, 0x3fd086a0UL, 0x1caa0467UL,\n+    0x3d0faec7UL, 0x4c30cc00UL, 0x3fd069a4UL, 0xa4424372UL, 0xbd1618fcUL,\n+    0x94490000UL, 0x3fd04cc6UL, 0x946517d2UL, 0xbd18384bUL, 0xb7e84000UL,\n+    0x3fd03006UL, 0xe0109c37UL, 0xbd19a6acUL, 0x798a0c00UL, 0x3fd01364UL,\n+    0x5121e864UL, 0xbd164cf7UL, 0x38ce8000UL, 0x3fcfedbfUL, 0x46214d1aUL,\n+    0xbcbbc402UL, 0xc8e62000UL, 0x3fcfb4efUL, 0xdab93203UL, 0x3d1e0176UL,\n+    0x2cb02800UL, 0x3fcf7c5aUL, 0x2a2ea8e4UL, 0xbcfec86aUL, 0xeeeaa000UL,\n+    0x3fcf43fdUL, 0xc18e49a4UL, 0x3cf110a8UL, 0x9bb6e800UL, 0x3fcf0bdaUL,\n+    0x923cc9c0UL, 0xbd15ce99UL, 0xc093f000UL, 0x3fced3efUL, 0x4d4b51e9UL,\n+    0x3d1a04c7UL, 0xec58f800UL, 0x3fce9c3cUL, 0x163cad59UL, 0x3cac8260UL,\n+    0x9a907000UL, 0x3fce2d7dUL, 0x3fa93646UL, 0x3ce4a1c0UL, 0x37311000UL,\n+    0x3fcdbf99UL, 0x32abd1fdUL, 0x3d07ea9dUL, 0x6744b800UL, 0x3fcd528cUL,\n+    0x4dcbdfd4UL, 0xbd1b08e2UL, 0xe36de800UL, 0x3fcce653UL, 0x0b7b7f7fUL,\n+    0xbd1b8f03UL, 0x77506800UL, 0x3fcc7aecUL, 0xa821c9fbUL, 0x3d13c163UL,\n+    0x00ff8800UL, 0x3fcc1053UL, 0x536bca76UL, 0xbd074ee5UL, 0x70719800UL,\n+    0x3fcba684UL, 0xd7da9b6bUL, 0xbd1fbf16UL, 0xc6f8d800UL, 0x3fcb3d7dUL,\n+    0xe2220bb3UL, 0x3d1a295dUL, 0x16c15800UL, 0x3fcad53cUL, 0xe724911eUL,\n+    0xbcf55822UL, 0x82533800UL, 0x3fca6dbcUL, 0x6d982371UL, 0x3cac567cUL,\n+    0x3c19e800UL, 0x3fca06fcUL, 0x84d17d80UL, 0x3d1da204UL, 0x85ef8000UL,\n+    0x3fc9a0f8UL, 0x54466a6aUL, 0xbd002204UL, 0xb0ac2000UL, 0x3fc93baeUL,\n+    0xd601fd65UL, 0x3d18840cUL, 0x1bb9b000UL, 0x3fc8d71cUL, 0x7bf58766UL,\n+    0xbd14f897UL, 0x34aae800UL, 0x3fc8733eUL, 0x3af6ac24UL, 0xbd0f5c45UL,\n+    0x76d68000UL, 0x3fc81012UL, 0x4303e1a1UL, 0xbd1f9a80UL, 0x6af57800UL,\n+    0x3fc7ad96UL, 0x43fbcb46UL, 0x3cf4c33eUL, 0xa6c51000UL, 0x3fc74bc7UL,\n+    0x70f0eac5UL, 0xbd192e3bUL, 0xccab9800UL, 0x3fc6eaa3UL, 0xc0093dfeUL,\n+    0xbd0faf15UL, 0x8b60b800UL, 0x3fc68a28UL, 0xde78d5fdUL, 0xbc9ea4eeUL,\n+    0x9d987000UL, 0x3fc62a53UL, 0x962bea6eUL, 0xbd194084UL, 0xc9b0e800UL,\n+    0x3fc5cb22UL, 0x888dd999UL, 0x3d1fe201UL, 0xe1634800UL, 0x3fc56c93UL,\n+    0x16ada7adUL, 0x3d1b1188UL, 0xc176c000UL, 0x3fc50ea4UL, 0x4159b5b5UL,\n+    0xbcf09c08UL, 0x51766000UL, 0x3fc4b153UL, 0x84393d23UL, 0xbcf6a89cUL,\n+    0x83695000UL, 0x3fc4549dUL, 0x9f0b8bbbUL, 0x3d1c4b8cUL, 0x538d5800UL,\n+    0x3fc3f881UL, 0xf49df747UL, 0x3cf89b99UL, 0xc8138000UL, 0x3fc39cfcUL,\n+    0xd503b834UL, 0xbd13b99fUL, 0xf0df0800UL, 0x3fc3420dUL, 0xf011b386UL,\n+    0xbd05d8beUL, 0xe7466800UL, 0x3fc2e7b2UL, 0xf39c7bc2UL, 0xbd1bb94eUL,\n+    0xcdd62800UL, 0x3fc28de9UL, 0x05e6d69bUL, 0xbd10ed05UL, 0xd015d800UL,\n+    0x3fc234b0UL, 0xe29b6c9dUL, 0xbd1ff967UL, 0x224ea800UL, 0x3fc1dc06UL,\n+    0x727711fcUL, 0xbcffb30dUL, 0x01540000UL, 0x3fc183e8UL, 0x39786c5aUL,\n+    0x3cc23f57UL, 0xb24d9800UL, 0x3fc12c54UL, 0xc905a342UL, 0x3d003a1dUL,\n+    0x82835800UL, 0x3fc0d54aUL, 0x9b9920c0UL, 0x3d03b25aUL, 0xc72ac000UL,\n+    0x3fc07ec7UL, 0x46f26a24UL, 0x3cf0fa41UL, 0xdd35d800UL, 0x3fc028caUL,\n+    0x41d9d6dcUL, 0x3d034a65UL, 0x52474000UL, 0x3fbfa6a4UL, 0x44f66449UL,\n+    0x3d19cad3UL, 0x2da3d000UL, 0x3fbefcb8UL, 0x67832999UL, 0x3d18400fUL,\n+    0x32a10000UL, 0x3fbe53ceUL, 0x9c0e3b1aUL, 0xbcff62fdUL, 0x556b7000UL,\n+    0x3fbdabe3UL, 0x02976913UL, 0xbcf8243bUL, 0x97e88000UL, 0x3fbd04f4UL,\n+    0xec793797UL, 0x3d1c0578UL, 0x09647000UL, 0x3fbc5effUL, 0x05fc0565UL,\n+    0xbd1d799eUL, 0xc6426000UL, 0x3fbbb9ffUL, 0x4625f5edUL, 0x3d1f5723UL,\n+    0xf7afd000UL, 0x3fbb15f3UL, 0xdd5aae61UL, 0xbd1a7e1eUL, 0xd358b000UL,\n+    0x3fba72d8UL, 0x3314e4d3UL, 0x3d17bc91UL, 0x9b1f5000UL, 0x3fb9d0abUL,\n+    0x9a4d514bUL, 0x3cf18c9bUL, 0x9cd4e000UL, 0x3fb92f69UL, 0x7e4496abUL,\n+    0x3cf1f96dUL, 0x31f4f000UL, 0x3fb88f10UL, 0xf56479e7UL, 0x3d165818UL,\n+    0xbf628000UL, 0x3fb7ef9cUL, 0x26bf486dUL, 0xbd1113a6UL, 0xb526b000UL,\n+    0x3fb7510cUL, 0x1a1c3384UL, 0x3ca9898dUL, 0x8e31e000UL, 0x3fb6b35dUL,\n+    0xb3875361UL, 0xbd0661acUL, 0xd01de000UL, 0x3fb6168cUL, 0x2a7cacfaUL,\n+    0xbd1bdf10UL, 0x0af23000UL, 0x3fb57a98UL, 0xff868816UL, 0x3cf046d0UL,\n+    0xd8ea0000UL, 0x3fb4df7cUL, 0x1515fbe7UL, 0xbd1fd529UL, 0xde3b2000UL,\n+    0x3fb44538UL, 0x6e59a132UL, 0x3d1faeeeUL, 0xc8df9000UL, 0x3fb3abc9UL,\n+    0xf1322361UL, 0xbd198807UL, 0x505f1000UL, 0x3fb3132dUL, 0x0888e6abUL,\n+    0x3d1e5380UL, 0x359bd000UL, 0x3fb27b61UL, 0xdfbcbb22UL, 0xbcfe2724UL,\n+    0x429ee000UL, 0x3fb1e463UL, 0x6eb4c58cUL, 0xbcfe4dd6UL, 0x4a673000UL,\n+    0x3fb14e31UL, 0x4ce1ac9bUL, 0x3d1ba691UL, 0x28b96000UL, 0x3fb0b8c9UL,\n+    0x8c7813b8UL, 0xbd0b3872UL, 0xc1f08000UL, 0x3fb02428UL, 0xc2bc8c2cUL,\n+    0x3cb5ea6bUL, 0x05a1a000UL, 0x3faf209cUL, 0x72e8f18eUL, 0xbce8df84UL,\n+    0xc0b5e000UL, 0x3fadfa6dUL, 0x9fdef436UL, 0x3d087364UL, 0xaf416000UL,\n+    0x3facd5c2UL, 0x1068c3a9UL, 0x3d0827e7UL, 0xdb356000UL, 0x3fabb296UL,\n+    0x120a34d3UL, 0x3d101a9fUL, 0x5dfea000UL, 0x3faa90e6UL, 0xdaded264UL,\n+    0xbd14c392UL, 0x6034c000UL, 0x3fa970adUL, 0x1c9d06a9UL, 0xbd1b705eUL,\n+    0x194c6000UL, 0x3fa851e8UL, 0x83996ad9UL, 0xbd0117bcUL, 0xcf4ac000UL,\n+    0x3fa73492UL, 0xb1a94a62UL, 0xbca5ea42UL, 0xd67b4000UL, 0x3fa618a9UL,\n+    0x75aed8caUL, 0xbd07119bUL, 0x9126c000UL, 0x3fa4fe29UL, 0x5291d533UL,\n+    0x3d12658fUL, 0x6f4d4000UL, 0x3fa3e50eUL, 0xcd2c5cd9UL, 0x3d1d5c70UL,\n+    0xee608000UL, 0x3fa2cd54UL, 0xd1008489UL, 0x3d1a4802UL, 0x9900e000UL,\n+    0x3fa1b6f9UL, 0x54fb5598UL, 0xbd16593fUL, 0x06bb6000UL, 0x3fa0a1f9UL,\n+    0x64ef57b4UL, 0xbd17636bUL, 0xb7940000UL, 0x3f9f1c9fUL, 0xee6a4737UL,\n+    0x3cb5d479UL, 0x91aa0000UL, 0x3f9cf7f5UL, 0x3a16373cUL, 0x3d087114UL,\n+    0x156b8000UL, 0x3f9ad5edUL, 0x836c554aUL, 0x3c6900b0UL, 0xd4764000UL,\n+    0x3f98b67fUL, 0xed12f17bUL, 0xbcffc974UL, 0x77dec000UL, 0x3f9699a7UL,\n+    0x232ce7eaUL, 0x3d1e35bbUL, 0xbfbf4000UL, 0x3f947f5dUL, 0xd84ffa6eUL,\n+    0x3d0e0a49UL, 0x82c7c000UL, 0x3f92679cUL, 0x8d170e90UL, 0xbd14d9f2UL,\n+    0xadd20000UL, 0x3f90525dUL, 0x86d9f88eUL, 0x3cdeb986UL, 0x86f10000UL,\n+    0x3f8c7f36UL, 0xb9e0a517UL, 0x3ce29faaUL, 0xb75c8000UL, 0x3f885e9eUL,\n+    0x542568cbUL, 0xbd1f7bdbUL, 0x46b30000UL, 0x3f8442e8UL, 0xb954e7d9UL,\n+    0x3d1e5287UL, 0xb7e60000UL, 0x3f802c07UL, 0x22da0b17UL, 0xbd19fb27UL,\n+    0x6c8b0000UL, 0x3f7833e3UL, 0x821271efUL, 0xbd190f96UL, 0x29910000UL,\n+    0x3f701936UL, 0xbc3491a5UL, 0xbd1bcf45UL, 0x354a0000UL, 0x3f600fe3UL,\n+    0xc0ff520aUL, 0xbd19d71cUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _log2_log10[] =\n+{\n+    0x509f7800UL, 0x3f934413UL, 0x1f12b358UL, 0x3cdfef31UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _coeff_log10[] =\n+{\n+    0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL, 0xc0089309UL, 0x385593b1UL,\n+    0xc025c917UL, 0xdc963467UL, 0x3ffc6a02UL, 0x7f9d3aa1UL, 0x4016ab9fUL,\n+    0xdc77b115UL, 0xbff27af2UL\n+};\n+\n+address StubGenerator::generate_libmLog10() {\n+  StubCodeMark mark(this, \"StubRoutines\", \"libmLog10\");\n+  address start = __ pc();\n+\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, B1_2, B1_3, B1_5;\n+\n+  address HIGHSIGMASK = (address)_HIGHSIGMASK_log10;\n+  address LOG10_E = (address)_LOG10_E;\n+  address L_tbl = (address)_L_tbl_log10;\n+  address log2 = (address)_log2_log10;\n+  address coeff = (address)_coeff_log10;\n+\n+  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+  __ subq(rsp, 24);\n+  __ movsd(Address(rsp, 0), xmm0);\n+\n+  __ bind(B1_2);\n+  __ xorpd(xmm2, xmm2);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm2, rax, 3);\n+  __ movl(rcx, 1054736384);\n+  __ movdl(xmm7, rcx);\n+  __ xorpd(xmm3, xmm3);\n+  __ movl(rdx, 30704);\n+  __ pinsrw(xmm3, rdx, 3);\n+  __ movdqu(xmm1, xmm0);\n+  __ movl(rdx, 32768);\n+  __ movdl(xmm4, rdx);\n+  __ movdqu(xmm5, ExternalAddress(HIGHSIGMASK), r8 \/*rscratch*\/);    \/\/0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xffffe000UL\n+  __ pextrw(rax, xmm0, 3);\n+  __ por(xmm0, xmm2);\n+  __ movl(rcx, 16352);\n+  __ psrlq(xmm0, 27);\n+  __ movdqu(xmm2, ExternalAddress(LOG10_E), r8 \/*rscratch*\/);    \/\/0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n+  __ psrld(xmm0, 2);\n+  __ rcpps(xmm0, xmm0);\n+  __ psllq(xmm1, 12);\n+  __ pshufd(xmm6, xmm5, 78);\n+  __ psrlq(xmm1, 12);\n+  __ subl(rax, 16);\n+  __ cmpl(rax, 32736);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+\n+  __ bind(L_2TAG_PACKET_1_0_2);\n+  __ mulss(xmm0, xmm7);\n+  __ por(xmm1, xmm3);\n+  __ lea(r11, ExternalAddress(L_tbl));\n+  __ andpd(xmm5, xmm1);\n+  __ paddd(xmm0, xmm4);\n+  __ subsd(xmm1, xmm5);\n+  __ movdl(rdx, xmm0);\n+  __ psllq(xmm0, 29);\n+  __ andpd(xmm0, xmm6);\n+  __ andl(rax, 32752);\n+  __ subl(rax, rcx);\n+  __ cvtsi2sdl(xmm7, rax);\n+  __ mulpd(xmm5, xmm0);\n+  __ mulsd(xmm1, xmm0);\n+  __ movq(xmm6, ExternalAddress(log2), r8 \/*rscratch*\/);    \/\/0x509f7800UL, 0x3f934413UL, 0x1f12b358UL, 0x3cdfef31UL\n+  __ movdqu(xmm3, ExternalAddress(coeff), r8 \/*rscratch*\/);    \/\/0xc1a5f12eUL, 0x40358874UL, 0x64d4ef0dUL, 0xc0089309UL\n+  __ subsd(xmm5, xmm2);\n+  __ andl(rdx, 16711680);\n+  __ shrl(rdx, 12);\n+  __ movdqu(xmm0, Address(r11, rdx, Address::times_1, -1504));\n+  __ movdqu(xmm4, ExternalAddress(coeff + 16), r8 \/*rscratch*\/);    \/\/0x385593b1UL, 0xc025c917UL, 0xdc963467UL, 0x3ffc6a02UL\n+  __ addsd(xmm1, xmm5);\n+  __ movdqu(xmm2, ExternalAddress(coeff + 32), r8 \/*rscratch*\/);    \/\/0x7f9d3aa1UL, 0x4016ab9fUL, 0xdc77b115UL, 0xbff27af2UL\n+  __ mulsd(xmm6, xmm7);\n+  __ pshufd(xmm5, xmm1, 68);\n+  __ mulsd(xmm7, ExternalAddress(log2 + 8), r8 \/*rscratch*\/);    \/\/0x1f12b358UL, 0x3cdfef31UL\n+  __ mulsd(xmm3, xmm1);\n+  __ addsd(xmm0, xmm6);\n+  __ mulpd(xmm4, xmm5);\n+  __ movq(xmm6, ExternalAddress(LOG10_E + 8), r8 \/*rscratch*\/);    \/\/0xbf2e4108UL, 0x3f5a7a6cUL\n+  __ mulpd(xmm5, xmm5);\n+  __ addpd(xmm4, xmm2);\n+  __ mulpd(xmm3, xmm5);\n+  __ pshufd(xmm2, xmm0, 228);\n+  __ addsd(xmm0, xmm1);\n+  __ mulsd(xmm4, xmm1);\n+  __ subsd(xmm2, xmm0);\n+  __ mulsd(xmm6, xmm1);\n+  __ addsd(xmm1, xmm2);\n+  __ pshufd(xmm2, xmm0, 238);\n+  __ mulsd(xmm5, xmm5);\n+  __ addsd(xmm7, xmm2);\n+  __ addsd(xmm1, xmm6);\n+  __ addpd(xmm4, xmm3);\n+  __ addsd(xmm1, xmm7);\n+  __ mulpd(xmm4, xmm5);\n+  __ addsd(xmm1, xmm4);\n+  __ pshufd(xmm5, xmm4, 238);\n+  __ addsd(xmm1, xmm5);\n+  __ addsd(xmm0, xmm1);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_0_0_2);\n+  __ movq(xmm0, Address(rsp, 0));\n+  __ movq(xmm1, Address(rsp, 0));\n+  __ addl(rax, 16);\n+  __ cmpl(rax, 32768);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_2_0_2);\n+  __ cmpl(rax, 16);\n+  __ jcc(Assembler::below, L_2TAG_PACKET_3_0_2);\n+\n+  __ bind(L_2TAG_PACKET_4_0_2);\n+  __ addsd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_5_0_2);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_4_0_2);\n+  __ jmp(L_2TAG_PACKET_6_0_2);\n+\n+  __ bind(L_2TAG_PACKET_3_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ addsd(xmm1, xmm0);\n+  __ movdl(rdx, xmm1);\n+  __ psrlq(xmm1, 32);\n+  __ movdl(rcx, xmm1);\n+  __ orl(rdx, rcx);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ movl(rax, 18416);\n+  __ pinsrw(xmm1, rax, 3);\n+  __ mulsd(xmm0, xmm1);\n+  __ xorpd(xmm2, xmm2);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm2, rax, 3);\n+  __ movdqu(xmm1, xmm0);\n+  __ pextrw(rax, xmm0, 3);\n+  __ por(xmm0, xmm2);\n+  __ movl(rcx, 18416);\n+  __ psrlq(xmm0, 27);\n+  __ movdqu(xmm2, ExternalAddress(LOG10_E), r8 \/*rscratch*\/);    \/\/0x00000000UL, 0x3fdbc000UL, 0xbf2e4108UL, 0x3f5a7a6cUL\n+  __ psrld(xmm0, 2);\n+  __ rcpps(xmm0, xmm0);\n+  __ psllq(xmm1, 12);\n+  __ pshufd(xmm6, xmm5, 78);\n+  __ psrlq(xmm1, 12);\n+  __ jmp(L_2TAG_PACKET_1_0_2);\n+\n+  __ bind(L_2TAG_PACKET_2_0_2);\n+  __ movdl(rdx, xmm1);\n+  __ psrlq(xmm1, 32);\n+  __ movdl(rcx, xmm1);\n+  __ addl(rcx, rcx);\n+  __ cmpl(rcx, -2097152);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n+  __ orl(rdx, rcx);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_7_0_2);\n+\n+  __ bind(L_2TAG_PACKET_6_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 32752);\n+  __ pinsrw(xmm1, rax, 3);\n+  __ mulsd(xmm0, xmm1);\n+  __ movl(Address(rsp, 16), 9);\n+  __ jmp(L_2TAG_PACKET_8_0_2);\n+\n+  __ bind(L_2TAG_PACKET_7_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 49136);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ divsd(xmm0, xmm1);\n+  __ movl(Address(rsp, 16), 8);\n+\n+  __ bind(L_2TAG_PACKET_8_0_2);\n+  __ movq(Address(rsp, 8), xmm0);\n+\n+  __ bind(B1_3);\n+  __ movq(xmm0, Address(rsp, 8));\n+\n+  __ bind(L_2TAG_PACKET_9_0_2);\n+\n+  __ bind(B1_5);\n+  __ addq(rsp, 24);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_log.cpp","additions":709,"deletions":0,"binary":false,"changes":709,"status":"added"},{"patch":"@@ -0,0 +1,1865 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION  - POW()\n+\/\/                     ---------------------\n+\/\/\n+\/\/    Let x=2^k * mx, mx in [1,2)\n+\/\/\n+\/\/    log2(x) calculation:\n+\/\/\n+\/\/    Get B~1\/mx based on the output of rcpps instruction (B0)\n+\/\/    B = int((B0*LH*2^9+0.5))\/2^9\n+\/\/    LH is a short approximation for log2(e)\n+\/\/\n+\/\/    Reduced argument, scaled by LH:\n+\/\/                r=B*mx-LH (computed accurately in high and low parts)\n+\/\/\n+\/\/    log2(x) result:  k - log2(B) + p(r)\n+\/\/             p(r) is a degree 8 polynomial\n+\/\/             -log2(B) read from data table (high, low parts)\n+\/\/             log2(x) is formed from high and low parts\n+\/\/    For |x| in [1-1\/32, 1+1\/16), a slower but more accurate computation\n+\/\/    based om the same table design is performed.\n+\/\/\n+\/\/   Main path is taken if | floor(log2(|log2(|x|)|) + floor(log2|y|) | < 8,\n+\/\/   to filter out all potential OF\/UF cases.\n+\/\/   exp2(y*log2(x)) is computed using an 8-bit index table and a degree 5\n+\/\/   polynomial\n+\/\/\n+\/\/ Special cases:\n+\/\/  pow(-0,y) = -INF and raises the divide-by-zero exception for y an odd\n+\/\/  integer < 0.\n+\/\/  pow(-0,y) = +INF and raises the divide-by-zero exception for y < 0 and\n+\/\/  not an odd integer.\n+\/\/  pow(-0,y) = -0 for y an odd integer > 0.\n+\/\/  pow(-0,y) = +0 for y > 0 and not an odd integer.\n+\/\/  pow(-1,-INF) = NaN.\n+\/\/  pow(+1,y) = NaN for any y, even a NaN.\n+\/\/  pow(x,-0) = 1 for any x, even a NaN.\n+\/\/  pow(x,y) = a NaN and raises the invalid exception for finite x < 0 and\n+\/\/  finite non-integer y.\n+\/\/  pow(x,-INF) = +INF for |x|<1.\n+\/\/  pow(x,-INF) = +0 for |x|>1.\n+\/\/  pow(x,+INF) = +0 for |x|<1.\n+\/\/  pow(x,+INF) = +INF for |x|>1.\n+\/\/  pow(-INF,y) = -0 for y an odd integer < 0.\n+\/\/  pow(-INF,y) = +0 for y < 0 and not an odd integer.\n+\/\/  pow(-INF,y) = -INF for y an odd integer > 0.\n+\/\/  pow(-INF,y) = +INF for y > 0 and not an odd integer.\n+\/\/  pow(+INF,y) = +0 for y <0.\n+\/\/  pow(+INF,y) = +INF for y >0.\n+\/\/\n+\/******************************************************************************\/\n+\n+ATTRIBUTE_ALIGNED(16) juint _HIGHSIGMASK[] = {\n+    0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _LOG2_E[] = {\n+    0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _HIGHMASK_Y[] = {\n+    0x00000000UL, 0xfffffff8UL, 0x00000000UL, 0xffffffffUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _T_exp[] = {\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x3b700000UL, 0xfa5abcbfUL,\n+    0x3ff00b1aUL, 0xa7609f71UL, 0xbc84f6b2UL, 0xa9fb3335UL, 0x3ff0163dUL,\n+    0x9ab8cdb7UL, 0x3c9b6129UL, 0x143b0281UL, 0x3ff02168UL, 0x0fc54eb6UL,\n+    0xbc82bf31UL, 0x3e778061UL, 0x3ff02c9aUL, 0x535b085dUL, 0xbc719083UL,\n+    0x2e11bbccUL, 0x3ff037d4UL, 0xeeade11aUL, 0x3c656811UL, 0xe86e7f85UL,\n+    0x3ff04315UL, 0x1977c96eUL, 0xbc90a31cUL, 0x72f654b1UL, 0x3ff04e5fUL,\n+    0x3aa0d08cUL, 0x3c84c379UL, 0xd3158574UL, 0x3ff059b0UL, 0xa475b465UL,\n+    0x3c8d73e2UL, 0x0e3c1f89UL, 0x3ff0650aUL, 0x5799c397UL, 0xbc95cb7bUL,\n+    0x29ddf6deUL, 0x3ff0706bUL, 0xe2b13c27UL, 0xbc8c91dfUL, 0x2b72a836UL,\n+    0x3ff07bd4UL, 0x54458700UL, 0x3c832334UL, 0x18759bc8UL, 0x3ff08745UL,\n+    0x4bb284ffUL, 0x3c6186beUL, 0xf66607e0UL, 0x3ff092bdUL, 0x800a3fd1UL,\n+    0xbc968063UL, 0xcac6f383UL, 0x3ff09e3eUL, 0x18316136UL, 0x3c914878UL,\n+    0x9b1f3919UL, 0x3ff0a9c7UL, 0x873d1d38UL, 0x3c85d16cUL, 0x6cf9890fUL,\n+    0x3ff0b558UL, 0x4adc610bUL, 0x3c98a62eUL, 0x45e46c85UL, 0x3ff0c0f1UL,\n+    0x06d21cefUL, 0x3c94f989UL, 0x2b7247f7UL, 0x3ff0cc92UL, 0x16e24f71UL,\n+    0x3c901edcUL, 0x23395decUL, 0x3ff0d83bUL, 0xe43f316aUL, 0xbc9bc14dUL,\n+    0x32d3d1a2UL, 0x3ff0e3ecUL, 0x27c57b52UL, 0x3c403a17UL, 0x5fdfa9c5UL,\n+    0x3ff0efa5UL, 0xbc54021bUL, 0xbc949db9UL, 0xaffed31bUL, 0x3ff0fb66UL,\n+    0xc44ebd7bUL, 0xbc6b9bedUL, 0x28d7233eUL, 0x3ff10730UL, 0x1692fdd5UL,\n+    0x3c8d46ebUL, 0xd0125b51UL, 0x3ff11301UL, 0x39449b3aUL, 0xbc96c510UL,\n+    0xab5e2ab6UL, 0x3ff11edbUL, 0xf703fb72UL, 0xbc9ca454UL, 0xc06c31ccUL,\n+    0x3ff12abdUL, 0xb36ca5c7UL, 0xbc51b514UL, 0x14f204abUL, 0x3ff136a8UL,\n+    0xba48dcf0UL, 0xbc67108fUL, 0xaea92de0UL, 0x3ff1429aUL, 0x9af1369eUL,\n+    0xbc932fbfUL, 0x934f312eUL, 0x3ff14e95UL, 0x39bf44abUL, 0xbc8b91e8UL,\n+    0xc8a58e51UL, 0x3ff15a98UL, 0xb9eeab0aUL, 0x3c82406aUL, 0x5471c3c2UL,\n+    0x3ff166a4UL, 0x82ea1a32UL, 0x3c58f23bUL, 0x3c7d517bUL, 0x3ff172b8UL,\n+    0xb9d78a76UL, 0xbc819041UL, 0x8695bbc0UL, 0x3ff17ed4UL, 0xe2ac5a64UL,\n+    0x3c709e3fUL, 0x388c8deaUL, 0x3ff18af9UL, 0xd1970f6cUL, 0xbc911023UL,\n+    0x58375d2fUL, 0x3ff19726UL, 0x85f17e08UL, 0x3c94aaddUL, 0xeb6fcb75UL,\n+    0x3ff1a35bUL, 0x7b4968e4UL, 0x3c8e5b4cUL, 0xf8138a1cUL, 0x3ff1af99UL,\n+    0xa4b69280UL, 0x3c97bf85UL, 0x84045cd4UL, 0x3ff1bbe0UL, 0x352ef607UL,\n+    0xbc995386UL, 0x95281c6bUL, 0x3ff1c82fUL, 0x8010f8c9UL, 0x3c900977UL,\n+    0x3168b9aaUL, 0x3ff1d487UL, 0x00a2643cUL, 0x3c9e016eUL, 0x5eb44027UL,\n+    0x3ff1e0e7UL, 0x088cb6deUL, 0xbc96fdd8UL, 0x22fcd91dUL, 0x3ff1ed50UL,\n+    0x027bb78cUL, 0xbc91df98UL, 0x8438ce4dUL, 0x3ff1f9c1UL, 0xa097af5cUL,\n+    0xbc9bf524UL, 0x88628cd6UL, 0x3ff2063bUL, 0x814a8495UL, 0x3c8dc775UL,\n+    0x3578a819UL, 0x3ff212beUL, 0x2cfcaac9UL, 0x3c93592dUL, 0x917ddc96UL,\n+    0x3ff21f49UL, 0x9494a5eeUL, 0x3c82a97eUL, 0xa27912d1UL, 0x3ff22bddUL,\n+    0x5577d69fUL, 0x3c8d34fbUL, 0x6e756238UL, 0x3ff2387aUL, 0xb6c70573UL,\n+    0x3c99b07eUL, 0xfb82140aUL, 0x3ff2451fUL, 0x911ca996UL, 0x3c8acfccUL,\n+    0x4fb2a63fUL, 0x3ff251ceUL, 0xbef4f4a4UL, 0x3c8ac155UL, 0x711ece75UL,\n+    0x3ff25e85UL, 0x4ac31b2cUL, 0x3c93e1a2UL, 0x65e27cddUL, 0x3ff26b45UL,\n+    0x9940e9d9UL, 0x3c82bd33UL, 0x341ddf29UL, 0x3ff2780eUL, 0x05f9e76cUL,\n+    0x3c9e067cUL, 0xe1f56381UL, 0x3ff284dfUL, 0x8c3f0d7eUL, 0xbc9a4c3aUL,\n+    0x7591bb70UL, 0x3ff291baUL, 0x28401cbdUL, 0xbc82cc72UL, 0xf51fdee1UL,\n+    0x3ff29e9dUL, 0xafad1255UL, 0x3c8612e8UL, 0x66d10f13UL, 0x3ff2ab8aUL,\n+    0x191690a7UL, 0xbc995743UL, 0xd0dad990UL, 0x3ff2b87fUL, 0xd6381aa4UL,\n+    0xbc410adcUL, 0x39771b2fUL, 0x3ff2c57eUL, 0xa6eb5124UL, 0xbc950145UL,\n+    0xa6e4030bUL, 0x3ff2d285UL, 0x54db41d5UL, 0x3c900247UL, 0x1f641589UL,\n+    0x3ff2df96UL, 0xfbbce198UL, 0x3c9d16cfUL, 0xa93e2f56UL, 0x3ff2ecafUL,\n+    0x45d52383UL, 0x3c71ca0fUL, 0x4abd886bUL, 0x3ff2f9d2UL, 0x532bda93UL,\n+    0xbc653c55UL, 0x0a31b715UL, 0x3ff306feUL, 0xd23182e4UL, 0x3c86f46aUL,\n+    0xedeeb2fdUL, 0x3ff31432UL, 0xf3f3fcd1UL, 0x3c8959a3UL, 0xfc4cd831UL,\n+    0x3ff32170UL, 0x8e18047cUL, 0x3c8a9ce7UL, 0x3ba8ea32UL, 0x3ff32eb8UL,\n+    0x3cb4f318UL, 0xbc9c45e8UL, 0xb26416ffUL, 0x3ff33c08UL, 0x843659a6UL,\n+    0x3c932721UL, 0x66e3fa2dUL, 0x3ff34962UL, 0x930881a4UL, 0xbc835a75UL,\n+    0x5f929ff1UL, 0x3ff356c5UL, 0x5c4e4628UL, 0xbc8b5ceeUL, 0xa2de883bUL,\n+    0x3ff36431UL, 0xa06cb85eUL, 0xbc8c3144UL, 0x373aa9cbUL, 0x3ff371a7UL,\n+    0xbf42eae2UL, 0xbc963aeaUL, 0x231e754aUL, 0x3ff37f26UL, 0x9eceb23cUL,\n+    0xbc99f5caUL, 0x6d05d866UL, 0x3ff38caeUL, 0x3c9904bdUL, 0xbc9e958dUL,\n+    0x1b7140efUL, 0x3ff39a40UL, 0xfc8e2934UL, 0xbc99a9a5UL, 0x34e59ff7UL,\n+    0x3ff3a7dbUL, 0xd661f5e3UL, 0xbc75e436UL, 0xbfec6cf4UL, 0x3ff3b57fUL,\n+    0xe26fff18UL, 0x3c954c66UL, 0xc313a8e5UL, 0x3ff3c32dUL, 0x375d29c3UL,\n+    0xbc9efff8UL, 0x44ede173UL, 0x3ff3d0e5UL, 0x8c284c71UL, 0x3c7fe8d0UL,\n+    0x4c123422UL, 0x3ff3dea6UL, 0x11f09ebcUL, 0x3c8ada09UL, 0xdf1c5175UL,\n+    0x3ff3ec70UL, 0x7b8c9bcaUL, 0xbc8af663UL, 0x04ac801cUL, 0x3ff3fa45UL,\n+    0xf956f9f3UL, 0xbc97d023UL, 0xc367a024UL, 0x3ff40822UL, 0xb6f4d048UL,\n+    0x3c8bddf8UL, 0x21f72e2aUL, 0x3ff4160aUL, 0x1c309278UL, 0xbc5ef369UL,\n+    0x2709468aUL, 0x3ff423fbUL, 0xc0b314ddUL, 0xbc98462dUL, 0xd950a897UL,\n+    0x3ff431f5UL, 0xe35f7999UL, 0xbc81c7ddUL, 0x3f84b9d4UL, 0x3ff43ffaUL,\n+    0x9704c003UL, 0x3c8880beUL, 0x6061892dUL, 0x3ff44e08UL, 0x04ef80d0UL,\n+    0x3c489b7aUL, 0x42a7d232UL, 0x3ff45c20UL, 0x82fb1f8eUL, 0xbc686419UL,\n+    0xed1d0057UL, 0x3ff46a41UL, 0xd1648a76UL, 0x3c9c944bUL, 0x668b3237UL,\n+    0x3ff4786dUL, 0xed445733UL, 0xbc9c20f0UL, 0xb5c13cd0UL, 0x3ff486a2UL,\n+    0xb69062f0UL, 0x3c73c1a3UL, 0xe192aed2UL, 0x3ff494e1UL, 0x5e499ea0UL,\n+    0xbc83b289UL, 0xf0d7d3deUL, 0x3ff4a32aUL, 0xf3d1be56UL, 0x3c99cb62UL,\n+    0xea6db7d7UL, 0x3ff4b17dUL, 0x7f2897f0UL, 0xbc8125b8UL, 0xd5362a27UL,\n+    0x3ff4bfdaUL, 0xafec42e2UL, 0x3c7d4397UL, 0xb817c114UL, 0x3ff4ce41UL,\n+    0x690abd5dUL, 0x3c905e29UL, 0x99fddd0dUL, 0x3ff4dcb2UL, 0xbc6a7833UL,\n+    0x3c98ecdbUL, 0x81d8abffUL, 0x3ff4eb2dUL, 0x2e5d7a52UL, 0xbc95257dUL,\n+    0x769d2ca7UL, 0x3ff4f9b2UL, 0xd25957e3UL, 0xbc94b309UL, 0x7f4531eeUL,\n+    0x3ff50841UL, 0x49b7465fUL, 0x3c7a249bUL, 0xa2cf6642UL, 0x3ff516daUL,\n+    0x69bd93efUL, 0xbc8f7685UL, 0xe83f4eefUL, 0x3ff5257dUL, 0x43efef71UL,\n+    0xbc7c998dUL, 0x569d4f82UL, 0x3ff5342bUL, 0x1db13cadUL, 0xbc807abeUL,\n+    0xf4f6ad27UL, 0x3ff542e2UL, 0x192d5f7eUL, 0x3c87926dUL, 0xca5d920fUL,\n+    0x3ff551a4UL, 0xefede59bUL, 0xbc8d689cUL, 0xdde910d2UL, 0x3ff56070UL,\n+    0x168eebf0UL, 0xbc90fb6eUL, 0x36b527daUL, 0x3ff56f47UL, 0x011d93adUL,\n+    0x3c99bb2cUL, 0xdbe2c4cfUL, 0x3ff57e27UL, 0x8a57b9c4UL, 0xbc90b98cUL,\n+    0xd497c7fdUL, 0x3ff58d12UL, 0x5b9a1de8UL, 0x3c8295e1UL, 0x27ff07ccUL,\n+    0x3ff59c08UL, 0xe467e60fUL, 0xbc97e2ceUL, 0xdd485429UL, 0x3ff5ab07UL,\n+    0x054647adUL, 0x3c96324cUL, 0xfba87a03UL, 0x3ff5ba11UL, 0x4c233e1aUL,\n+    0xbc9b77a1UL, 0x8a5946b7UL, 0x3ff5c926UL, 0x816986a2UL, 0x3c3c4b1bUL,\n+    0x90998b93UL, 0x3ff5d845UL, 0xa8b45643UL, 0xbc9cd6a7UL, 0x15ad2148UL,\n+    0x3ff5e76fUL, 0x3080e65eUL, 0x3c9ba6f9UL, 0x20dceb71UL, 0x3ff5f6a3UL,\n+    0xe3cdcf92UL, 0xbc89eaddUL, 0xb976dc09UL, 0x3ff605e1UL, 0x9b56de47UL,\n+    0xbc93e242UL, 0xe6cdf6f4UL, 0x3ff6152aUL, 0x4ab84c27UL, 0x3c9e4b3eUL,\n+    0xb03a5585UL, 0x3ff6247eUL, 0x7e40b497UL, 0xbc9383c1UL, 0x1d1929fdUL,\n+    0x3ff633ddUL, 0xbeb964e5UL, 0x3c984710UL, 0x34ccc320UL, 0x3ff64346UL,\n+    0x759d8933UL, 0xbc8c483cUL, 0xfebc8fb7UL, 0x3ff652b9UL, 0xc9a73e09UL,\n+    0xbc9ae3d5UL, 0x82552225UL, 0x3ff66238UL, 0x87591c34UL, 0xbc9bb609UL,\n+    0xc70833f6UL, 0x3ff671c1UL, 0x586c6134UL, 0xbc8e8732UL, 0xd44ca973UL,\n+    0x3ff68155UL, 0x44f73e65UL, 0x3c6038aeUL, 0xb19e9538UL, 0x3ff690f4UL,\n+    0x9aeb445dUL, 0x3c8804bdUL, 0x667f3bcdUL, 0x3ff6a09eUL, 0x13b26456UL,\n+    0xbc9bdd34UL, 0xfa75173eUL, 0x3ff6b052UL, 0x2c9a9d0eUL, 0x3c7a38f5UL,\n+    0x750bdabfUL, 0x3ff6c012UL, 0x67ff0b0dUL, 0xbc728956UL, 0xddd47645UL,\n+    0x3ff6cfdcUL, 0xb6f17309UL, 0x3c9c7aa9UL, 0x3c651a2fUL, 0x3ff6dfb2UL,\n+    0x683c88abUL, 0xbc6bbe3aUL, 0x98593ae5UL, 0x3ff6ef92UL, 0x9e1ac8b2UL,\n+    0xbc90b974UL, 0xf9519484UL, 0x3ff6ff7dUL, 0x25860ef6UL, 0xbc883c0fUL,\n+    0x66f42e87UL, 0x3ff70f74UL, 0xd45aa65fUL, 0x3c59d644UL, 0xe8ec5f74UL,\n+    0x3ff71f75UL, 0x86887a99UL, 0xbc816e47UL, 0x86ead08aUL, 0x3ff72f82UL,\n+    0x2cd62c72UL, 0xbc920aa0UL, 0x48a58174UL, 0x3ff73f9aUL, 0x6c65d53cUL,\n+    0xbc90a8d9UL, 0x35d7cbfdUL, 0x3ff74fbdUL, 0x618a6e1cUL, 0x3c9047fdUL,\n+    0x564267c9UL, 0x3ff75febUL, 0x57316dd3UL, 0xbc902459UL, 0xb1ab6e09UL,\n+    0x3ff77024UL, 0x169147f8UL, 0x3c9b7877UL, 0x4fde5d3fUL, 0x3ff78069UL,\n+    0x0a02162dUL, 0x3c9866b8UL, 0x38ac1cf6UL, 0x3ff790b9UL, 0x62aadd3eUL,\n+    0x3c9349a8UL, 0x73eb0187UL, 0x3ff7a114UL, 0xee04992fUL, 0xbc841577UL,\n+    0x0976cfdbUL, 0x3ff7b17bUL, 0x8468dc88UL, 0xbc9bebb5UL, 0x0130c132UL,\n+    0x3ff7c1edUL, 0xd1164dd6UL, 0x3c9f124cUL, 0x62ff86f0UL, 0x3ff7d26aUL,\n+    0xfb72b8b4UL, 0x3c91bddbUL, 0x36cf4e62UL, 0x3ff7e2f3UL, 0xba15797eUL,\n+    0x3c705d02UL, 0x8491c491UL, 0x3ff7f387UL, 0xcf9311aeUL, 0xbc807f11UL,\n+    0x543e1a12UL, 0x3ff80427UL, 0x626d972bUL, 0xbc927c86UL, 0xadd106d9UL,\n+    0x3ff814d2UL, 0x0d151d4dUL, 0x3c946437UL, 0x994cce13UL, 0x3ff82589UL,\n+    0xd41532d8UL, 0xbc9d4c1dUL, 0x1eb941f7UL, 0x3ff8364cUL, 0x31df2bd5UL,\n+    0x3c999b9aUL, 0x4623c7adUL, 0x3ff8471aUL, 0xa341cdfbUL, 0xbc88d684UL,\n+    0x179f5b21UL, 0x3ff857f4UL, 0xf8b216d0UL, 0xbc5ba748UL, 0x9b4492edUL,\n+    0x3ff868d9UL, 0x9bd4f6baUL, 0xbc9fc6f8UL, 0xd931a436UL, 0x3ff879caUL,\n+    0xd2db47bdUL, 0x3c85d2d7UL, 0xd98a6699UL, 0x3ff88ac7UL, 0xf37cb53aUL,\n+    0x3c9994c2UL, 0xa478580fUL, 0x3ff89bd0UL, 0x4475202aUL, 0x3c9d5395UL,\n+    0x422aa0dbUL, 0x3ff8ace5UL, 0x56864b27UL, 0x3c96e9f1UL, 0xbad61778UL,\n+    0x3ff8be05UL, 0xfc43446eUL, 0x3c9ecb5eUL, 0x16b5448cUL, 0x3ff8cf32UL,\n+    0x32e9e3aaUL, 0xbc70d55eUL, 0x5e0866d9UL, 0x3ff8e06aUL, 0x6fc9b2e6UL,\n+    0xbc97114aUL, 0x99157736UL, 0x3ff8f1aeUL, 0xa2e3976cUL, 0x3c85cc13UL,\n+    0xd0282c8aUL, 0x3ff902feUL, 0x85fe3fd2UL, 0x3c9592caUL, 0x0b91ffc6UL,\n+    0x3ff9145bUL, 0x2e582524UL, 0xbc9dd679UL, 0x53aa2fe2UL, 0x3ff925c3UL,\n+    0xa639db7fUL, 0xbc83455fUL, 0xb0cdc5e5UL, 0x3ff93737UL, 0x81b57ebcUL,\n+    0xbc675fc7UL, 0x2b5f98e5UL, 0x3ff948b8UL, 0x797d2d99UL, 0xbc8dc3d6UL,\n+    0xcbc8520fUL, 0x3ff95a44UL, 0x96a5f039UL, 0xbc764b7cUL, 0x9a7670b3UL,\n+    0x3ff96bddUL, 0x7f19c896UL, 0xbc5ba596UL, 0x9fde4e50UL, 0x3ff97d82UL,\n+    0x7c1b85d1UL, 0xbc9d185bUL, 0xe47a22a2UL, 0x3ff98f33UL, 0xa24c78ecUL,\n+    0x3c7cabdaUL, 0x70ca07baUL, 0x3ff9a0f1UL, 0x91cee632UL, 0xbc9173bdUL,\n+    0x4d53fe0dUL, 0x3ff9b2bbUL, 0x4df6d518UL, 0xbc9dd84eUL, 0x82a3f090UL,\n+    0x3ff9c491UL, 0xb071f2beUL, 0x3c7c7c46UL, 0x194bb8d5UL, 0x3ff9d674UL,\n+    0xa3dd8233UL, 0xbc9516beUL, 0x19e32323UL, 0x3ff9e863UL, 0x78e64c6eUL,\n+    0x3c7824caUL, 0x8d07f29eUL, 0x3ff9fa5eUL, 0xaaf1faceUL, 0xbc84a9ceUL,\n+    0x7b5de565UL, 0x3ffa0c66UL, 0x5d1cd533UL, 0xbc935949UL, 0xed8eb8bbUL,\n+    0x3ffa1e7aUL, 0xee8be70eUL, 0x3c9c6618UL, 0xec4a2d33UL, 0x3ffa309bUL,\n+    0x7ddc36abUL, 0x3c96305cUL, 0x80460ad8UL, 0x3ffa42c9UL, 0x589fb120UL,\n+    0xbc9aa780UL, 0xb23e255dUL, 0x3ffa5503UL, 0xdb8d41e1UL, 0xbc9d2f6eUL,\n+    0x8af46052UL, 0x3ffa674aUL, 0x30670366UL, 0x3c650f56UL, 0x1330b358UL,\n+    0x3ffa799eUL, 0xcac563c7UL, 0x3c9bcb7eUL, 0x53c12e59UL, 0x3ffa8bfeUL,\n+    0xb2ba15a9UL, 0xbc94f867UL, 0x5579fdbfUL, 0x3ffa9e6bUL, 0x0ef7fd31UL,\n+    0x3c90fac9UL, 0x21356ebaUL, 0x3ffab0e5UL, 0xdae94545UL, 0x3c889c31UL,\n+    0xbfd3f37aUL, 0x3ffac36bUL, 0xcae76cd0UL, 0xbc8f9234UL, 0x3a3c2774UL,\n+    0x3ffad5ffUL, 0xb6b1b8e5UL, 0x3c97ef3bUL, 0x995ad3adUL, 0x3ffae89fUL,\n+    0x345dcc81UL, 0x3c97a1cdUL, 0xe622f2ffUL, 0x3ffafb4cUL, 0x0f315ecdUL,\n+    0xbc94b2fcUL, 0x298db666UL, 0x3ffb0e07UL, 0x4c80e425UL, 0xbc9bdef5UL,\n+    0x6c9a8952UL, 0x3ffb20ceUL, 0x4a0756ccUL, 0x3c94dd02UL, 0xb84f15fbUL,\n+    0x3ffb33a2UL, 0x3084d708UL, 0xbc62805eUL, 0x15b749b1UL, 0x3ffb4684UL,\n+    0xe9df7c90UL, 0xbc7f763dUL, 0x8de5593aUL, 0x3ffb5972UL, 0xbbba6de3UL,\n+    0xbc9c71dfUL, 0x29f1c52aUL, 0x3ffb6c6eUL, 0x52883f6eUL, 0x3c92a8f3UL,\n+    0xf2fb5e47UL, 0x3ffb7f76UL, 0x7e54ac3bUL, 0xbc75584fUL, 0xf22749e4UL,\n+    0x3ffb928cUL, 0x54cb65c6UL, 0xbc9b7216UL, 0x30a1064aUL, 0x3ffba5b0UL,\n+    0x0e54292eUL, 0xbc9efcd3UL, 0xb79a6f1fUL, 0x3ffbb8e0UL, 0xc9696205UL,\n+    0xbc3f52d1UL, 0x904bc1d2UL, 0x3ffbcc1eUL, 0x7a2d9e84UL, 0x3c823dd0UL,\n+    0xc3f3a207UL, 0x3ffbdf69UL, 0x60ea5b53UL, 0xbc3c2623UL, 0x5bd71e09UL,\n+    0x3ffbf2c2UL, 0x3f6b9c73UL, 0xbc9efdcaUL, 0x6141b33dUL, 0x3ffc0628UL,\n+    0xa1fbca34UL, 0xbc8d8a5aUL, 0xdd85529cUL, 0x3ffc199bUL, 0x895048ddUL,\n+    0x3c811065UL, 0xd9fa652cUL, 0x3ffc2d1cUL, 0x17c8a5d7UL, 0xbc96e516UL,\n+    0x5fffd07aUL, 0x3ffc40abUL, 0xe083c60aUL, 0x3c9b4537UL, 0x78fafb22UL,\n+    0x3ffc5447UL, 0x2493b5afUL, 0x3c912f07UL, 0x2e57d14bUL, 0x3ffc67f1UL,\n+    0xff483cadUL, 0x3c92884dUL, 0x8988c933UL, 0x3ffc7ba8UL, 0xbe255559UL,\n+    0xbc8e76bbUL, 0x9406e7b5UL, 0x3ffc8f6dUL, 0x48805c44UL, 0x3c71acbcUL,\n+    0x5751c4dbUL, 0x3ffca340UL, 0xd10d08f5UL, 0xbc87f2beUL, 0xdcef9069UL,\n+    0x3ffcb720UL, 0xd1e949dbUL, 0x3c7503cbUL, 0x2e6d1675UL, 0x3ffccb0fUL,\n+    0x86009092UL, 0xbc7d220fUL, 0x555dc3faUL, 0x3ffcdf0bUL, 0x53829d72UL,\n+    0xbc8dd83bUL, 0x5b5bab74UL, 0x3ffcf315UL, 0xb86dff57UL, 0xbc9a08e9UL,\n+    0x4a07897cUL, 0x3ffd072dUL, 0x43797a9cUL, 0xbc9cbc37UL, 0x2b08c968UL,\n+    0x3ffd1b53UL, 0x219a36eeUL, 0x3c955636UL, 0x080d89f2UL, 0x3ffd2f87UL,\n+    0x719d8578UL, 0xbc9d487bUL, 0xeacaa1d6UL, 0x3ffd43c8UL, 0xbf5a1614UL,\n+    0x3c93db53UL, 0xdcfba487UL, 0x3ffd5818UL, 0xd75b3707UL, 0x3c82ed02UL,\n+    0xe862e6d3UL, 0x3ffd6c76UL, 0x4a8165a0UL, 0x3c5fe87aUL, 0x16c98398UL,\n+    0x3ffd80e3UL, 0x8beddfe8UL, 0xbc911ec1UL, 0x71ff6075UL, 0x3ffd955dUL,\n+    0xbb9af6beUL, 0x3c9a052dUL, 0x03db3285UL, 0x3ffda9e6UL, 0x696db532UL,\n+    0x3c9c2300UL, 0xd63a8315UL, 0x3ffdbe7cUL, 0x926b8be4UL, 0xbc9b76f1UL,\n+    0xf301b460UL, 0x3ffdd321UL, 0x78f018c3UL, 0x3c92da57UL, 0x641c0658UL,\n+    0x3ffde7d5UL, 0x8e79ba8fUL, 0xbc9ca552UL, 0x337b9b5fUL, 0x3ffdfc97UL,\n+    0x4f184b5cUL, 0xbc91a5cdUL, 0x6b197d17UL, 0x3ffe1167UL, 0xbd5c7f44UL,\n+    0xbc72b529UL, 0x14f5a129UL, 0x3ffe2646UL, 0x817a1496UL, 0xbc97b627UL,\n+    0x3b16ee12UL, 0x3ffe3b33UL, 0x31fdc68bUL, 0xbc99f4a4UL, 0xe78b3ff6UL,\n+    0x3ffe502eUL, 0x80a9cc8fUL, 0x3c839e89UL, 0x24676d76UL, 0x3ffe6539UL,\n+    0x7522b735UL, 0xbc863ff8UL, 0xfbc74c83UL, 0x3ffe7a51UL, 0xca0c8de2UL,\n+    0x3c92d522UL, 0x77cdb740UL, 0x3ffe8f79UL, 0x80b054b1UL, 0xbc910894UL,\n+    0xa2a490daUL, 0x3ffea4afUL, 0x179c2893UL, 0xbc9e9c23UL, 0x867cca6eUL,\n+    0x3ffeb9f4UL, 0x2293e4f2UL, 0x3c94832fUL, 0x2d8e67f1UL, 0x3ffecf48UL,\n+    0xb411ad8cUL, 0xbc9c93f3UL, 0xa2188510UL, 0x3ffee4aaUL, 0xa487568dUL,\n+    0x3c91c68dUL, 0xee615a27UL, 0x3ffefa1bUL, 0x86a4b6b0UL, 0x3c9dc7f4UL,\n+    0x1cb6412aUL, 0x3fff0f9cUL, 0x65181d45UL, 0xbc932200UL, 0x376bba97UL,\n+    0x3fff252bUL, 0xbf0d8e43UL, 0x3c93a1a5UL, 0x48dd7274UL, 0x3fff3ac9UL,\n+    0x3ed837deUL, 0xbc795a5aUL, 0x5b6e4540UL, 0x3fff5076UL, 0x2dd8a18bUL,\n+    0x3c99d3e1UL, 0x798844f8UL, 0x3fff6632UL, 0x3539343eUL, 0x3c9fa37bUL,\n+    0xad9cbe14UL, 0x3fff7bfdUL, 0xd006350aUL, 0xbc9dbb12UL, 0x02243c89UL,\n+    0x3fff91d8UL, 0xa779f689UL, 0xbc612ea8UL, 0x819e90d8UL, 0x3fffa7c1UL,\n+    0xf3a5931eUL, 0x3c874853UL, 0x3692d514UL, 0x3fffbdbaUL, 0x15098eb6UL,\n+    0xbc796773UL, 0x2b8f71f1UL, 0x3fffd3c2UL, 0x966579e7UL, 0x3c62eb74UL,\n+    0x6b2a23d9UL, 0x3fffe9d9UL, 0x7442fde3UL, 0x3c74a603UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _e_coeff[] = {\n+    0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL, 0x6fba4e77UL,\n+    0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL, 0xfefa39efUL, 0x3fe62e42UL,\n+    0x00000000UL, 0x00000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _coeff_h[] = {\n+    0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _HIGHMASK_LOG_X[] = {\n+    0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xfffff800UL\n+};\n+\n+ATTRIBUTE_ALIGNED(8) juint _HALFMASK[] = {\n+    0xf8000000UL, 0xffffffffUL, 0xf8000000UL, 0xffffffffUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _coeff_pow[] = {\n+    0x6dc96112UL, 0xbf836578UL, 0xee241472UL, 0xbf9b0301UL, 0x9f95985aUL,\n+    0xbfb528dbUL, 0xb3841d2aUL, 0xbfd619b6UL, 0x518775e3UL, 0x3f9004f2UL,\n+    0xac8349bbUL, 0x3fa76c9bUL, 0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL,\n+    0xbf5dabe1UL, 0x9f95985aUL, 0xbfb528dbUL, 0xf8b5787dUL, 0x3ef2531eUL,\n+    0x486ececbUL, 0x3fc4635eUL, 0x412055ccUL, 0xbdd61bb2UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _L_tbl_pow[] = {\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x20000000UL,\n+    0x3feff00aUL, 0x96621f95UL, 0x3e5b1856UL, 0xe0000000UL, 0x3fefe019UL,\n+    0xe5916f9eUL, 0xbe325278UL, 0x00000000UL, 0x3fefd02fUL, 0x859a1062UL,\n+    0x3e595fb7UL, 0xc0000000UL, 0x3fefc049UL, 0xb245f18fUL, 0xbe529c38UL,\n+    0xe0000000UL, 0x3fefb069UL, 0xad2880a7UL, 0xbe501230UL, 0x60000000UL,\n+    0x3fefa08fUL, 0xc8e72420UL, 0x3e597bd1UL, 0x80000000UL, 0x3fef90baUL,\n+    0xc30c4500UL, 0xbe5d6c75UL, 0xe0000000UL, 0x3fef80eaUL, 0x02c63f43UL,\n+    0x3e2e1318UL, 0xc0000000UL, 0x3fef7120UL, 0xb3d4ccccUL, 0xbe44c52aUL,\n+    0x00000000UL, 0x3fef615cUL, 0xdbd91397UL, 0xbe4e7d6cUL, 0xa0000000UL,\n+    0x3fef519cUL, 0x65c5cd68UL, 0xbe522dc8UL, 0xa0000000UL, 0x3fef41e2UL,\n+    0x46d1306cUL, 0xbe5a840eUL, 0xe0000000UL, 0x3fef322dUL, 0xd2980e94UL,\n+    0x3e5071afUL, 0xa0000000UL, 0x3fef227eUL, 0x773abadeUL, 0xbe5891e5UL,\n+    0xa0000000UL, 0x3fef12d4UL, 0xdc6bf46bUL, 0xbe5cccbeUL, 0xe0000000UL,\n+    0x3fef032fUL, 0xbc7247faUL, 0xbe2bab83UL, 0x80000000UL, 0x3feef390UL,\n+    0xbcaa1e46UL, 0xbe53bb3bUL, 0x60000000UL, 0x3feee3f6UL, 0x5f6c682dUL,\n+    0xbe54c619UL, 0x80000000UL, 0x3feed461UL, 0x5141e368UL, 0xbe4b6d86UL,\n+    0xe0000000UL, 0x3feec4d1UL, 0xec678f76UL, 0xbe369af6UL, 0x80000000UL,\n+    0x3feeb547UL, 0x41301f55UL, 0xbe2d4312UL, 0x60000000UL, 0x3feea5c2UL,\n+    0x676da6bdUL, 0xbe4d8dd0UL, 0x60000000UL, 0x3fee9642UL, 0x57a891c4UL,\n+    0x3e51f991UL, 0xa0000000UL, 0x3fee86c7UL, 0xe4eb491eUL, 0x3e579bf9UL,\n+    0x20000000UL, 0x3fee7752UL, 0xfddc4a2cUL, 0xbe3356e6UL, 0xc0000000UL,\n+    0x3fee67e1UL, 0xd75b5bf1UL, 0xbe449531UL, 0x80000000UL, 0x3fee5876UL,\n+    0xbd423b8eUL, 0x3df54fe4UL, 0x60000000UL, 0x3fee4910UL, 0x330e51b9UL,\n+    0x3e54289cUL, 0x80000000UL, 0x3fee39afUL, 0x8651a95fUL, 0xbe55aad6UL,\n+    0xa0000000UL, 0x3fee2a53UL, 0x5e98c708UL, 0xbe2fc4a9UL, 0xe0000000UL,\n+    0x3fee1afcUL, 0x0989328dUL, 0x3e23958cUL, 0x40000000UL, 0x3fee0babUL,\n+    0xee642abdUL, 0xbe425dd8UL, 0xa0000000UL, 0x3fedfc5eUL, 0xc394d236UL,\n+    0x3e526362UL, 0x20000000UL, 0x3feded17UL, 0xe104aa8eUL, 0x3e4ce247UL,\n+    0xc0000000UL, 0x3fedddd4UL, 0x265a9be4UL, 0xbe5bb77aUL, 0x40000000UL,\n+    0x3fedce97UL, 0x0ecac52fUL, 0x3e4a7cb1UL, 0xe0000000UL, 0x3fedbf5eUL,\n+    0x124cb3b8UL, 0x3e257024UL, 0x80000000UL, 0x3fedb02bUL, 0xe6d4febeUL,\n+    0xbe2033eeUL, 0x20000000UL, 0x3feda0fdUL, 0x39cca00eUL, 0xbe3ddabcUL,\n+    0xc0000000UL, 0x3fed91d3UL, 0xef8a552aUL, 0xbe543390UL, 0x40000000UL,\n+    0x3fed82afUL, 0xb8e85204UL, 0x3e513850UL, 0xe0000000UL, 0x3fed738fUL,\n+    0x3d59fe08UL, 0xbe5db728UL, 0x40000000UL, 0x3fed6475UL, 0x3aa7ead1UL,\n+    0x3e58804bUL, 0xc0000000UL, 0x3fed555fUL, 0xf8a35ba9UL, 0xbe5298b0UL,\n+    0x00000000UL, 0x3fed464fUL, 0x9a88dd15UL, 0x3e5a8cdbUL, 0x40000000UL,\n+    0x3fed3743UL, 0xb0b0a190UL, 0x3e598635UL, 0x80000000UL, 0x3fed283cUL,\n+    0xe2113295UL, 0xbe5c1119UL, 0x80000000UL, 0x3fed193aUL, 0xafbf1728UL,\n+    0xbe492e9cUL, 0x60000000UL, 0x3fed0a3dUL, 0xe4a4ccf3UL, 0x3e19b90eUL,\n+    0x20000000UL, 0x3fecfb45UL, 0xba3cbeb8UL, 0x3e406b50UL, 0xc0000000UL,\n+    0x3fecec51UL, 0x110f7dddUL, 0x3e0d6806UL, 0x40000000UL, 0x3fecdd63UL,\n+    0x7dd7d508UL, 0xbe5a8943UL, 0x80000000UL, 0x3fecce79UL, 0x9b60f271UL,\n+    0xbe50676aUL, 0x80000000UL, 0x3fecbf94UL, 0x0b9ad660UL, 0x3e59174fUL,\n+    0x60000000UL, 0x3fecb0b4UL, 0x00823d9cUL, 0x3e5bbf72UL, 0x20000000UL,\n+    0x3feca1d9UL, 0x38a6ec89UL, 0xbe4d38f9UL, 0x80000000UL, 0x3fec9302UL,\n+    0x3a0b7d8eUL, 0x3e53dbfdUL, 0xc0000000UL, 0x3fec8430UL, 0xc6826b34UL,\n+    0xbe27c5c9UL, 0xc0000000UL, 0x3fec7563UL, 0x0c706381UL, 0xbe593653UL,\n+    0x60000000UL, 0x3fec669bUL, 0x7df34ec7UL, 0x3e461ab5UL, 0xe0000000UL,\n+    0x3fec57d7UL, 0x40e5e7e8UL, 0xbe5c3daeUL, 0x00000000UL, 0x3fec4919UL,\n+    0x5602770fUL, 0xbe55219dUL, 0xc0000000UL, 0x3fec3a5eUL, 0xec7911ebUL,\n+    0x3e5a5d25UL, 0x60000000UL, 0x3fec2ba9UL, 0xb39ea225UL, 0xbe53c00bUL,\n+    0x80000000UL, 0x3fec1cf8UL, 0x967a212eUL, 0x3e5a8ddfUL, 0x60000000UL,\n+    0x3fec0e4cUL, 0x580798bdUL, 0x3e5f53abUL, 0x00000000UL, 0x3febffa5UL,\n+    0xb8282df6UL, 0xbe46b874UL, 0x20000000UL, 0x3febf102UL, 0xe33a6729UL,\n+    0x3e54963fUL, 0x00000000UL, 0x3febe264UL, 0x3b53e88aUL, 0xbe3adce1UL,\n+    0x60000000UL, 0x3febd3caUL, 0xc2585084UL, 0x3e5cde9fUL, 0x80000000UL,\n+    0x3febc535UL, 0xa335c5eeUL, 0xbe39fd9cUL, 0x20000000UL, 0x3febb6a5UL,\n+    0x7325b04dUL, 0x3e42ba15UL, 0x60000000UL, 0x3feba819UL, 0x1564540fUL,\n+    0x3e3a9f35UL, 0x40000000UL, 0x3feb9992UL, 0x83fff592UL, 0xbe5465ceUL,\n+    0xa0000000UL, 0x3feb8b0fUL, 0xb9da63d3UL, 0xbe4b1a0aUL, 0x80000000UL,\n+    0x3feb7c91UL, 0x6d6f1ea4UL, 0x3e557657UL, 0x00000000UL, 0x3feb6e18UL,\n+    0x5e80a1bfUL, 0x3e4ddbb6UL, 0x00000000UL, 0x3feb5fa3UL, 0x1c9eacb5UL,\n+    0x3e592877UL, 0xa0000000UL, 0x3feb5132UL, 0x6d40beb3UL, 0xbe51858cUL,\n+    0xa0000000UL, 0x3feb42c6UL, 0xd740c67bUL, 0x3e427ad2UL, 0x40000000UL,\n+    0x3feb345fUL, 0xa3e0cceeUL, 0xbe5c2fc4UL, 0x40000000UL, 0x3feb25fcUL,\n+    0x8e752b50UL, 0xbe3da3c2UL, 0xc0000000UL, 0x3feb179dUL, 0xa892e7deUL,\n+    0x3e1fb481UL, 0xc0000000UL, 0x3feb0943UL, 0x21ed71e9UL, 0xbe365206UL,\n+    0x20000000UL, 0x3feafaeeUL, 0x0e1380a3UL, 0x3e5c5b7bUL, 0x20000000UL,\n+    0x3feaec9dUL, 0x3c3d640eUL, 0xbe5dbbd0UL, 0x60000000UL, 0x3feade50UL,\n+    0x8f97a715UL, 0x3e3a8ec5UL, 0x20000000UL, 0x3fead008UL, 0x23ab2839UL,\n+    0x3e2fe98aUL, 0x40000000UL, 0x3feac1c4UL, 0xf4bbd50fUL, 0x3e54d8f6UL,\n+    0xe0000000UL, 0x3feab384UL, 0x14757c4dUL, 0xbe48774cUL, 0xc0000000UL,\n+    0x3feaa549UL, 0x7c7b0eeaUL, 0x3e5b51bbUL, 0x20000000UL, 0x3fea9713UL,\n+    0xf56f7013UL, 0x3e386200UL, 0xe0000000UL, 0x3fea88e0UL, 0xbe428ebeUL,\n+    0xbe514af5UL, 0xe0000000UL, 0x3fea7ab2UL, 0x8d0e4496UL, 0x3e4f9165UL,\n+    0x60000000UL, 0x3fea6c89UL, 0xdbacc5d5UL, 0xbe5c063bUL, 0x20000000UL,\n+    0x3fea5e64UL, 0x3f19d970UL, 0xbe5a0c8cUL, 0x20000000UL, 0x3fea5043UL,\n+    0x09ea3e6bUL, 0x3e5065dcUL, 0x80000000UL, 0x3fea4226UL, 0x78df246cUL,\n+    0x3e5e05f6UL, 0x40000000UL, 0x3fea340eUL, 0x4057d4a0UL, 0x3e431b2bUL,\n+    0x40000000UL, 0x3fea25faUL, 0x82867bb5UL, 0x3e4b76beUL, 0xa0000000UL,\n+    0x3fea17eaUL, 0x9436f40aUL, 0xbe5aad39UL, 0x20000000UL, 0x3fea09dfUL,\n+    0x4b5253b3UL, 0x3e46380bUL, 0x00000000UL, 0x3fe9fbd8UL, 0x8fc52466UL,\n+    0xbe386f9bUL, 0x20000000UL, 0x3fe9edd5UL, 0x22d3f344UL, 0xbe538347UL,\n+    0x60000000UL, 0x3fe9dfd6UL, 0x1ac33522UL, 0x3e5dbc53UL, 0x00000000UL,\n+    0x3fe9d1dcUL, 0xeabdff1dUL, 0x3e40fc0cUL, 0xe0000000UL, 0x3fe9c3e5UL,\n+    0xafd30e73UL, 0xbe585e63UL, 0xe0000000UL, 0x3fe9b5f3UL, 0xa52f226aUL,\n+    0xbe43e8f9UL, 0x20000000UL, 0x3fe9a806UL, 0xecb8698dUL, 0xbe515b36UL,\n+    0x80000000UL, 0x3fe99a1cUL, 0xf2b4e89dUL, 0x3e48b62bUL, 0x20000000UL,\n+    0x3fe98c37UL, 0x7c9a88fbUL, 0x3e44414cUL, 0x00000000UL, 0x3fe97e56UL,\n+    0xda015741UL, 0xbe5d13baUL, 0xe0000000UL, 0x3fe97078UL, 0x5fdace06UL,\n+    0x3e51b947UL, 0x00000000UL, 0x3fe962a0UL, 0x956ca094UL, 0x3e518785UL,\n+    0x40000000UL, 0x3fe954cbUL, 0x01164c1dUL, 0x3e5d5b57UL, 0xc0000000UL,\n+    0x3fe946faUL, 0xe63b3767UL, 0xbe4f84e7UL, 0x40000000UL, 0x3fe9392eUL,\n+    0xe57cc2a9UL, 0x3e34eda3UL, 0xe0000000UL, 0x3fe92b65UL, 0x8c75b544UL,\n+    0x3e5766a0UL, 0xc0000000UL, 0x3fe91da1UL, 0x37d1d087UL, 0xbe5e2ab1UL,\n+    0x80000000UL, 0x3fe90fe1UL, 0xa953dc20UL, 0x3e5fa1f3UL, 0x80000000UL,\n+    0x3fe90225UL, 0xdbd3f369UL, 0x3e47d6dbUL, 0xa0000000UL, 0x3fe8f46dUL,\n+    0x1c9be989UL, 0xbe5e2b0aUL, 0xa0000000UL, 0x3fe8e6b9UL, 0x3c93d76aUL,\n+    0x3e5c8618UL, 0xe0000000UL, 0x3fe8d909UL, 0x2182fc9aUL, 0xbe41aa9eUL,\n+    0x20000000UL, 0x3fe8cb5eUL, 0xe6b3539dUL, 0xbe530d19UL, 0x60000000UL,\n+    0x3fe8bdb6UL, 0x49e58cc3UL, 0xbe3bb374UL, 0xa0000000UL, 0x3fe8b012UL,\n+    0xa7cfeb8fUL, 0x3e56c412UL, 0x00000000UL, 0x3fe8a273UL, 0x8d52bc19UL,\n+    0x3e1429b8UL, 0x60000000UL, 0x3fe894d7UL, 0x4dc32c6cUL, 0xbe48604cUL,\n+    0xc0000000UL, 0x3fe8873fUL, 0x0c868e56UL, 0xbe564ee5UL, 0x00000000UL,\n+    0x3fe879acUL, 0x56aee828UL, 0x3e5e2fd8UL, 0x60000000UL, 0x3fe86c1cUL,\n+    0x7ceab8ecUL, 0x3e493365UL, 0xc0000000UL, 0x3fe85e90UL, 0x78d4dadcUL,\n+    0xbe4f7f25UL, 0x00000000UL, 0x3fe85109UL, 0x0ccd8280UL, 0x3e31e7a2UL,\n+    0x40000000UL, 0x3fe84385UL, 0x34ba4e15UL, 0x3e328077UL, 0x80000000UL,\n+    0x3fe83605UL, 0xa670975aUL, 0xbe53eee5UL, 0xa0000000UL, 0x3fe82889UL,\n+    0xf61b77b2UL, 0xbe43a20aUL, 0xa0000000UL, 0x3fe81b11UL, 0x13e6643bUL,\n+    0x3e5e5fe5UL, 0xc0000000UL, 0x3fe80d9dUL, 0x82cc94e8UL, 0xbe5ff1f9UL,\n+    0xa0000000UL, 0x3fe8002dUL, 0x8a0c9c5dUL, 0xbe42b0e7UL, 0x60000000UL,\n+    0x3fe7f2c1UL, 0x22a16f01UL, 0x3e5d9ea0UL, 0x20000000UL, 0x3fe7e559UL,\n+    0xc38cd451UL, 0x3e506963UL, 0xc0000000UL, 0x3fe7d7f4UL, 0x9902bc71UL,\n+    0x3e4503d7UL, 0x40000000UL, 0x3fe7ca94UL, 0xdef2a3c0UL, 0x3e3d98edUL,\n+    0xa0000000UL, 0x3fe7bd37UL, 0xed49abb0UL, 0x3e24c1ffUL, 0xe0000000UL,\n+    0x3fe7afdeUL, 0xe3b0be70UL, 0xbe40c467UL, 0x00000000UL, 0x3fe7a28aUL,\n+    0xaf9f193cUL, 0xbe5dff6cUL, 0xe0000000UL, 0x3fe79538UL, 0xb74cf6b6UL,\n+    0xbe258ed0UL, 0xa0000000UL, 0x3fe787ebUL, 0x1d9127c7UL, 0x3e345fb0UL,\n+    0x40000000UL, 0x3fe77aa2UL, 0x1028c21dUL, 0xbe4619bdUL, 0xa0000000UL,\n+    0x3fe76d5cUL, 0x7cb0b5e4UL, 0x3e40f1a2UL, 0xe0000000UL, 0x3fe7601aUL,\n+    0x2b1bc4adUL, 0xbe32e8bbUL, 0xe0000000UL, 0x3fe752dcUL, 0x6839f64eUL,\n+    0x3e41f57bUL, 0xc0000000UL, 0x3fe745a2UL, 0xc4121f7eUL, 0xbe52c40aUL,\n+    0x60000000UL, 0x3fe7386cUL, 0xd6852d72UL, 0xbe5c4e6bUL, 0xc0000000UL,\n+    0x3fe72b39UL, 0x91d690f7UL, 0xbe57f88fUL, 0xe0000000UL, 0x3fe71e0aUL,\n+    0x627a2159UL, 0xbe4425d5UL, 0xc0000000UL, 0x3fe710dfUL, 0x50a54033UL,\n+    0x3e422b7eUL, 0x60000000UL, 0x3fe703b8UL, 0x3b0b5f91UL, 0x3e5d3857UL,\n+    0xe0000000UL, 0x3fe6f694UL, 0x84d628a2UL, 0xbe51f090UL, 0x00000000UL,\n+    0x3fe6e975UL, 0x306d8894UL, 0xbe414d83UL, 0xe0000000UL, 0x3fe6dc58UL,\n+    0x30bf24aaUL, 0xbe4650caUL, 0x80000000UL, 0x3fe6cf40UL, 0xd4628d69UL,\n+    0xbe5db007UL, 0xc0000000UL, 0x3fe6c22bUL, 0xa2aae57bUL, 0xbe31d279UL,\n+    0xc0000000UL, 0x3fe6b51aUL, 0x860edf7eUL, 0xbe2d4c4aUL, 0x80000000UL,\n+    0x3fe6a80dUL, 0xf3559341UL, 0xbe5f7e98UL, 0xe0000000UL, 0x3fe69b03UL,\n+    0xa885899eUL, 0xbe5c2011UL, 0xe0000000UL, 0x3fe68dfdUL, 0x2bdc6d37UL,\n+    0x3e224a82UL, 0xa0000000UL, 0x3fe680fbUL, 0xc12ad1b9UL, 0xbe40cf56UL,\n+    0x00000000UL, 0x3fe673fdUL, 0x1bcdf659UL, 0xbdf52f2dUL, 0x00000000UL,\n+    0x3fe66702UL, 0x5df10408UL, 0x3e5663e0UL, 0xc0000000UL, 0x3fe65a0aUL,\n+    0xa4070568UL, 0xbe40b12fUL, 0x00000000UL, 0x3fe64d17UL, 0x71c54c47UL,\n+    0x3e5f5e8bUL, 0x00000000UL, 0x3fe64027UL, 0xbd4b7e83UL, 0x3e42ead6UL,\n+    0xa0000000UL, 0x3fe6333aUL, 0x61598bd2UL, 0xbe4c48d4UL, 0xc0000000UL,\n+    0x3fe62651UL, 0x6f538d61UL, 0x3e548401UL, 0xa0000000UL, 0x3fe6196cUL,\n+    0x14344120UL, 0xbe529af6UL, 0x00000000UL, 0x3fe60c8bUL, 0x5982c587UL,\n+    0xbe3e1e4fUL, 0x00000000UL, 0x3fe5ffadUL, 0xfe51d4eaUL, 0xbe4c897aUL,\n+    0x80000000UL, 0x3fe5f2d2UL, 0xfd46ebe1UL, 0x3e552e00UL, 0xa0000000UL,\n+    0x3fe5e5fbUL, 0xa4695699UL, 0x3e5ed471UL, 0x60000000UL, 0x3fe5d928UL,\n+    0x80d118aeUL, 0x3e456b61UL, 0xa0000000UL, 0x3fe5cc58UL, 0x304c330bUL,\n+    0x3e54dc29UL, 0x80000000UL, 0x3fe5bf8cUL, 0x0af2dedfUL, 0xbe3aa9bdUL,\n+    0xe0000000UL, 0x3fe5b2c3UL, 0x15fc9258UL, 0xbe479a37UL, 0xc0000000UL,\n+    0x3fe5a5feUL, 0x9292c7eaUL, 0x3e188650UL, 0x20000000UL, 0x3fe5993dUL,\n+    0x33b4d380UL, 0x3e5d6d93UL, 0x20000000UL, 0x3fe58c7fUL, 0x02fd16c7UL,\n+    0x3e2fe961UL, 0xa0000000UL, 0x3fe57fc4UL, 0x4a05edb6UL, 0xbe4d55b4UL,\n+    0xa0000000UL, 0x3fe5730dUL, 0x3d443abbUL, 0xbe5e6954UL, 0x00000000UL,\n+    0x3fe5665aUL, 0x024acfeaUL, 0x3e50e61bUL, 0x00000000UL, 0x3fe559aaUL,\n+    0xcc9edd09UL, 0xbe325403UL, 0x60000000UL, 0x3fe54cfdUL, 0x1fe26950UL,\n+    0x3e5d500eUL, 0x60000000UL, 0x3fe54054UL, 0x6c5ae164UL, 0xbe4a79b4UL,\n+    0xc0000000UL, 0x3fe533aeUL, 0x154b0287UL, 0xbe401571UL, 0xa0000000UL,\n+    0x3fe5270cUL, 0x0673f401UL, 0xbe56e56bUL, 0xe0000000UL, 0x3fe51a6dUL,\n+    0x751b639cUL, 0x3e235269UL, 0xa0000000UL, 0x3fe50dd2UL, 0x7c7b2bedUL,\n+    0x3ddec887UL, 0xc0000000UL, 0x3fe5013aUL, 0xafab4e17UL, 0x3e5e7575UL,\n+    0x60000000UL, 0x3fe4f4a6UL, 0x2e308668UL, 0x3e59aed6UL, 0x80000000UL,\n+    0x3fe4e815UL, 0xf33e2a76UL, 0xbe51f184UL, 0xe0000000UL, 0x3fe4db87UL,\n+    0x839f3e3eUL, 0x3e57db01UL, 0xc0000000UL, 0x3fe4cefdUL, 0xa9eda7bbUL,\n+    0x3e535e0fUL, 0x00000000UL, 0x3fe4c277UL, 0x2a8f66a5UL, 0x3e5ce451UL,\n+    0xc0000000UL, 0x3fe4b5f3UL, 0x05192456UL, 0xbe4e8518UL, 0xc0000000UL,\n+    0x3fe4a973UL, 0x4aa7cd1dUL, 0x3e46784aUL, 0x40000000UL, 0x3fe49cf7UL,\n+    0x8e23025eUL, 0xbe5749f2UL, 0x00000000UL, 0x3fe4907eUL, 0x18d30215UL,\n+    0x3e360f39UL, 0x20000000UL, 0x3fe48408UL, 0x63dcf2f3UL, 0x3e5e00feUL,\n+    0xc0000000UL, 0x3fe47795UL, 0x46182d09UL, 0xbe5173d9UL, 0xa0000000UL,\n+    0x3fe46b26UL, 0x8f0e62aaUL, 0xbe48f281UL, 0xe0000000UL, 0x3fe45ebaUL,\n+    0x5775c40cUL, 0xbe56aad4UL, 0x60000000UL, 0x3fe45252UL, 0x0fe25f69UL,\n+    0x3e48bd71UL, 0x40000000UL, 0x3fe445edUL, 0xe9989ec5UL, 0x3e590d97UL,\n+    0x80000000UL, 0x3fe4398bUL, 0xb3d9ffe3UL, 0x3e479dbcUL, 0x20000000UL,\n+    0x3fe42d2dUL, 0x388e4d2eUL, 0xbe5eed80UL, 0xe0000000UL, 0x3fe420d1UL,\n+    0x6f797c18UL, 0x3e554b4cUL, 0x20000000UL, 0x3fe4147aUL, 0x31048bb4UL,\n+    0xbe5b1112UL, 0x80000000UL, 0x3fe40825UL, 0x2efba4f9UL, 0x3e48ebc7UL,\n+    0x40000000UL, 0x3fe3fbd4UL, 0x50201119UL, 0x3e40b701UL, 0x40000000UL,\n+    0x3fe3ef86UL, 0x0a4db32cUL, 0x3e551de8UL, 0xa0000000UL, 0x3fe3e33bUL,\n+    0x0c9c148bUL, 0xbe50c1f6UL, 0x20000000UL, 0x3fe3d6f4UL, 0xc9129447UL,\n+    0x3e533fa0UL, 0x00000000UL, 0x3fe3cab0UL, 0xaae5b5a0UL, 0xbe22b68eUL,\n+    0x20000000UL, 0x3fe3be6fUL, 0x02305e8aUL, 0xbe54fc08UL, 0x60000000UL,\n+    0x3fe3b231UL, 0x7f908258UL, 0x3e57dc05UL, 0x00000000UL, 0x3fe3a5f7UL,\n+    0x1a09af78UL, 0x3e08038bUL, 0xe0000000UL, 0x3fe399bfUL, 0x490643c1UL,\n+    0xbe5dbe42UL, 0xe0000000UL, 0x3fe38d8bUL, 0x5e8ad724UL, 0xbe3c2b72UL,\n+    0x20000000UL, 0x3fe3815bUL, 0xc67196b6UL, 0x3e1713cfUL, 0xa0000000UL,\n+    0x3fe3752dUL, 0x6182e429UL, 0xbe3ec14cUL, 0x40000000UL, 0x3fe36903UL,\n+    0xab6eb1aeUL, 0x3e5a2cc5UL, 0x40000000UL, 0x3fe35cdcUL, 0xfe5dc064UL,\n+    0xbe5c5878UL, 0x40000000UL, 0x3fe350b8UL, 0x0ba6b9e4UL, 0x3e51619bUL,\n+    0x80000000UL, 0x3fe34497UL, 0x857761aaUL, 0x3e5fff53UL, 0x00000000UL,\n+    0x3fe3387aUL, 0xf872d68cUL, 0x3e484f4dUL, 0xa0000000UL, 0x3fe32c5fUL,\n+    0x087e97c2UL, 0x3e52842eUL, 0x80000000UL, 0x3fe32048UL, 0x73d6d0c0UL,\n+    0xbe503edfUL, 0x80000000UL, 0x3fe31434UL, 0x0c1456a1UL, 0xbe5f72adUL,\n+    0xa0000000UL, 0x3fe30823UL, 0x83a1a4d5UL, 0xbe5e65ccUL, 0xe0000000UL,\n+    0x3fe2fc15UL, 0x855a7390UL, 0xbe506438UL, 0x40000000UL, 0x3fe2f00bUL,\n+    0xa2898287UL, 0x3e3d22a2UL, 0xe0000000UL, 0x3fe2e403UL, 0x8b56f66fUL,\n+    0xbe5aa5fdUL, 0x80000000UL, 0x3fe2d7ffUL, 0x52db119aUL, 0x3e3a2e3dUL,\n+    0x60000000UL, 0x3fe2cbfeUL, 0xe2ddd4c0UL, 0xbe586469UL, 0x40000000UL,\n+    0x3fe2c000UL, 0x6b01bf10UL, 0x3e352b9dUL, 0x40000000UL, 0x3fe2b405UL,\n+    0xb07a1cdfUL, 0x3e5c5cdaUL, 0x80000000UL, 0x3fe2a80dUL, 0xc7b5f868UL,\n+    0xbe5668b3UL, 0xc0000000UL, 0x3fe29c18UL, 0x185edf62UL, 0xbe563d66UL,\n+    0x00000000UL, 0x3fe29027UL, 0xf729e1ccUL, 0x3e59a9a0UL, 0x80000000UL,\n+    0x3fe28438UL, 0x6433c727UL, 0xbe43cc89UL, 0x00000000UL, 0x3fe2784dUL,\n+    0x41782631UL, 0xbe30750cUL, 0xa0000000UL, 0x3fe26c64UL, 0x914911b7UL,\n+    0xbe58290eUL, 0x40000000UL, 0x3fe2607fUL, 0x3dcc73e1UL, 0xbe4269cdUL,\n+    0x00000000UL, 0x3fe2549dUL, 0x2751bf70UL, 0xbe5a6998UL, 0xc0000000UL,\n+    0x3fe248bdUL, 0x4248b9fbUL, 0xbe4ddb00UL, 0x80000000UL, 0x3fe23ce1UL,\n+    0xf35cf82fUL, 0x3e561b71UL, 0x60000000UL, 0x3fe23108UL, 0x8e481a2dUL,\n+    0x3e518fb9UL, 0x60000000UL, 0x3fe22532UL, 0x5ab96edcUL, 0xbe5fafc5UL,\n+    0x40000000UL, 0x3fe2195fUL, 0x80943911UL, 0xbe07f819UL, 0x40000000UL,\n+    0x3fe20d8fUL, 0x386f2d6cUL, 0xbe54ba8bUL, 0x40000000UL, 0x3fe201c2UL,\n+    0xf29664acUL, 0xbe5eb815UL, 0x20000000UL, 0x3fe1f5f8UL, 0x64f03390UL,\n+    0x3e5e320cUL, 0x20000000UL, 0x3fe1ea31UL, 0x747ff696UL, 0x3e5ef0a5UL,\n+    0x40000000UL, 0x3fe1de6dUL, 0x3e9ceb51UL, 0xbe5f8d27UL, 0x20000000UL,\n+    0x3fe1d2acUL, 0x4ae0b55eUL, 0x3e5faa21UL, 0x20000000UL, 0x3fe1c6eeUL,\n+    0x28569a5eUL, 0x3e598a4fUL, 0x20000000UL, 0x3fe1bb33UL, 0x54b33e07UL,\n+    0x3e46130aUL, 0x20000000UL, 0x3fe1af7bUL, 0x024f1078UL, 0xbe4dbf93UL,\n+    0x00000000UL, 0x3fe1a3c6UL, 0xb0783bfaUL, 0x3e419248UL, 0xe0000000UL,\n+    0x3fe19813UL, 0x2f02b836UL, 0x3e4e02b7UL, 0xc0000000UL, 0x3fe18c64UL,\n+    0x28dec9d4UL, 0x3e09064fUL, 0x80000000UL, 0x3fe180b8UL, 0x45cbf406UL,\n+    0x3e5b1f46UL, 0x40000000UL, 0x3fe1750fUL, 0x03d9964cUL, 0x3e5b0a79UL,\n+    0x00000000UL, 0x3fe16969UL, 0x8b5b882bUL, 0xbe238086UL, 0xa0000000UL,\n+    0x3fe15dc5UL, 0x73bad6f8UL, 0xbdf1fca4UL, 0x20000000UL, 0x3fe15225UL,\n+    0x5385769cUL, 0x3e5e8d76UL, 0xa0000000UL, 0x3fe14687UL, 0x1676dc6bUL,\n+    0x3e571d08UL, 0x20000000UL, 0x3fe13aedUL, 0xa8c41c7fUL, 0xbe598a25UL,\n+    0x60000000UL, 0x3fe12f55UL, 0xc4e1aaf0UL, 0x3e435277UL, 0xa0000000UL,\n+    0x3fe123c0UL, 0x403638e1UL, 0xbe21aa7cUL, 0xc0000000UL, 0x3fe1182eUL,\n+    0x557a092bUL, 0xbdd0116bUL, 0xc0000000UL, 0x3fe10c9fUL, 0x7d779f66UL,\n+    0x3e4a61baUL, 0xc0000000UL, 0x3fe10113UL, 0x2b09c645UL, 0xbe5d586eUL,\n+    0x20000000UL, 0x3fe0ea04UL, 0xea2cad46UL, 0x3e5aa97cUL, 0x20000000UL,\n+    0x3fe0d300UL, 0x23190e54UL, 0x3e50f1a7UL, 0xa0000000UL, 0x3fe0bc07UL,\n+    0x1379a5a6UL, 0xbe51619dUL, 0x60000000UL, 0x3fe0a51aUL, 0x926a3d4aUL,\n+    0x3e5cf019UL, 0xa0000000UL, 0x3fe08e38UL, 0xa8c24358UL, 0x3e35241eUL,\n+    0x20000000UL, 0x3fe07762UL, 0x24317e7aUL, 0x3e512cfaUL, 0x00000000UL,\n+    0x3fe06097UL, 0xfd9cf274UL, 0xbe55bef3UL, 0x00000000UL, 0x3fe049d7UL,\n+    0x3689b49dUL, 0xbe36d26dUL, 0x40000000UL, 0x3fe03322UL, 0xf72ef6c4UL,\n+    0xbe54cd08UL, 0xa0000000UL, 0x3fe01c78UL, 0x23702d2dUL, 0xbe5900bfUL,\n+    0x00000000UL, 0x3fe005daUL, 0x3f59c14cUL, 0x3e57d80bUL, 0x40000000UL,\n+    0x3fdfde8dUL, 0xad67766dUL, 0xbe57fad4UL, 0x40000000UL, 0x3fdfb17cUL,\n+    0x644f4ae7UL, 0x3e1ee43bUL, 0x40000000UL, 0x3fdf8481UL, 0x903234d2UL,\n+    0x3e501a86UL, 0x40000000UL, 0x3fdf579cUL, 0xafe9e509UL, 0xbe267c3eUL,\n+    0x00000000UL, 0x3fdf2acdUL, 0xb7dfda0bUL, 0xbe48149bUL, 0x40000000UL,\n+    0x3fdefe13UL, 0x3b94305eUL, 0x3e5f4ea7UL, 0x80000000UL, 0x3fded16fUL,\n+    0x5d95da61UL, 0xbe55c198UL, 0x00000000UL, 0x3fdea4e1UL, 0x406960c9UL,\n+    0xbdd99a19UL, 0x00000000UL, 0x3fde7868UL, 0xd22f3539UL, 0x3e470c78UL,\n+    0x80000000UL, 0x3fde4c04UL, 0x83eec535UL, 0xbe3e1232UL, 0x40000000UL,\n+    0x3fde1fb6UL, 0x3dfbffcbUL, 0xbe4b7d71UL, 0x40000000UL, 0x3fddf37dUL,\n+    0x7e1be4e0UL, 0xbe5b8f8fUL, 0x40000000UL, 0x3fddc759UL, 0x46dae887UL,\n+    0xbe350458UL, 0x80000000UL, 0x3fdd9b4aUL, 0xed6ecc49UL, 0xbe5f0045UL,\n+    0x80000000UL, 0x3fdd6f50UL, 0x2e9e883cUL, 0x3e2915daUL, 0x80000000UL,\n+    0x3fdd436bUL, 0xf0bccb32UL, 0x3e4a68c9UL, 0x80000000UL, 0x3fdd179bUL,\n+    0x9bbfc779UL, 0xbe54a26aUL, 0x00000000UL, 0x3fdcebe0UL, 0x7cea33abUL,\n+    0x3e43c6b7UL, 0x40000000UL, 0x3fdcc039UL, 0xe740fd06UL, 0x3e5526c2UL,\n+    0x40000000UL, 0x3fdc94a7UL, 0x9eadeb1aUL, 0xbe396d8dUL, 0xc0000000UL,\n+    0x3fdc6929UL, 0xf0a8f95aUL, 0xbe5c0ab2UL, 0x80000000UL, 0x3fdc3dc0UL,\n+    0x6ee2693bUL, 0x3e0992e6UL, 0xc0000000UL, 0x3fdc126bUL, 0x5ac6b581UL,\n+    0xbe2834b6UL, 0x40000000UL, 0x3fdbe72bUL, 0x8cc226ffUL, 0x3e3596a6UL,\n+    0x00000000UL, 0x3fdbbbffUL, 0xf92a74bbUL, 0x3e3c5813UL, 0x00000000UL,\n+    0x3fdb90e7UL, 0x479664c0UL, 0xbe50d644UL, 0x00000000UL, 0x3fdb65e3UL,\n+    0x5004975bUL, 0xbe55258fUL, 0x00000000UL, 0x3fdb3af3UL, 0xe4b23194UL,\n+    0xbe588407UL, 0xc0000000UL, 0x3fdb1016UL, 0xe65d4d0aUL, 0x3e527c26UL,\n+    0x80000000UL, 0x3fdae54eUL, 0x814fddd6UL, 0x3e5962a2UL, 0x40000000UL,\n+    0x3fdaba9aUL, 0xe19d0913UL, 0xbe562f4eUL, 0x80000000UL, 0x3fda8ff9UL,\n+    0x43cfd006UL, 0xbe4cfdebUL, 0x40000000UL, 0x3fda656cUL, 0x686f0a4eUL,\n+    0x3e5e47a8UL, 0xc0000000UL, 0x3fda3af2UL, 0x7200d410UL, 0x3e5e1199UL,\n+    0xc0000000UL, 0x3fda108cUL, 0xabd2266eUL, 0x3e5ee4d1UL, 0x40000000UL,\n+    0x3fd9e63aUL, 0x396f8f2cUL, 0x3e4dbffbUL, 0x00000000UL, 0x3fd9bbfbUL,\n+    0xe32b25ddUL, 0x3e5c3a54UL, 0x40000000UL, 0x3fd991cfUL, 0x431e4035UL,\n+    0xbe457925UL, 0x80000000UL, 0x3fd967b6UL, 0x7bed3dd3UL, 0x3e40c61dUL,\n+    0x00000000UL, 0x3fd93db1UL, 0xd7449365UL, 0x3e306419UL, 0x80000000UL,\n+    0x3fd913beUL, 0x1746e791UL, 0x3e56fcfcUL, 0x40000000UL, 0x3fd8e9dfUL,\n+    0xf3a9028bUL, 0xbe5041b9UL, 0xc0000000UL, 0x3fd8c012UL, 0x56840c50UL,\n+    0xbe26e20aUL, 0x40000000UL, 0x3fd89659UL, 0x19763102UL, 0xbe51f466UL,\n+    0x80000000UL, 0x3fd86cb2UL, 0x7032de7cUL, 0xbe4d298aUL, 0x80000000UL,\n+    0x3fd8431eUL, 0xdeb39fabUL, 0xbe4361ebUL, 0x40000000UL, 0x3fd8199dUL,\n+    0x5d01cbe0UL, 0xbe5425b3UL, 0x80000000UL, 0x3fd7f02eUL, 0x3ce99aa9UL,\n+    0x3e146fa8UL, 0x80000000UL, 0x3fd7c6d2UL, 0xd1a262b9UL, 0xbe5a1a69UL,\n+    0xc0000000UL, 0x3fd79d88UL, 0x8606c236UL, 0x3e423a08UL, 0x80000000UL,\n+    0x3fd77451UL, 0x8fd1e1b7UL, 0x3e5a6a63UL, 0xc0000000UL, 0x3fd74b2cUL,\n+    0xe491456aUL, 0x3e42c1caUL, 0x40000000UL, 0x3fd7221aUL, 0x4499a6d7UL,\n+    0x3e36a69aUL, 0x00000000UL, 0x3fd6f91aUL, 0x5237df94UL, 0xbe0f8f02UL,\n+    0x00000000UL, 0x3fd6d02cUL, 0xb6482c6eUL, 0xbe5abcf7UL, 0x00000000UL,\n+    0x3fd6a750UL, 0x1919fd61UL, 0xbe57ade2UL, 0x00000000UL, 0x3fd67e86UL,\n+    0xaa7a994dUL, 0xbe3f3fbdUL, 0x00000000UL, 0x3fd655ceUL, 0x67db014cUL,\n+    0x3e33c550UL, 0x00000000UL, 0x3fd62d28UL, 0xa82856b7UL, 0xbe1409d1UL,\n+    0xc0000000UL, 0x3fd60493UL, 0x1e6a300dUL, 0x3e55d899UL, 0x80000000UL,\n+    0x3fd5dc11UL, 0x1222bd5cUL, 0xbe35bfc0UL, 0xc0000000UL, 0x3fd5b3a0UL,\n+    0x6e8dc2d3UL, 0x3e5d4d79UL, 0x00000000UL, 0x3fd58b42UL, 0xe0e4ace6UL,\n+    0xbe517303UL, 0x80000000UL, 0x3fd562f4UL, 0xb306e0a8UL, 0x3e5edf0fUL,\n+    0xc0000000UL, 0x3fd53ab8UL, 0x6574bc54UL, 0x3e5ee859UL, 0x80000000UL,\n+    0x3fd5128eUL, 0xea902207UL, 0x3e5f6188UL, 0xc0000000UL, 0x3fd4ea75UL,\n+    0x9f911d79UL, 0x3e511735UL, 0x80000000UL, 0x3fd4c26eUL, 0xf9c77397UL,\n+    0xbe5b1643UL, 0x40000000UL, 0x3fd49a78UL, 0x15fc9258UL, 0x3e479a37UL,\n+    0x80000000UL, 0x3fd47293UL, 0xd5a04dd9UL, 0xbe426e56UL, 0xc0000000UL,\n+    0x3fd44abfUL, 0xe04042f5UL, 0x3e56f7c6UL, 0x40000000UL, 0x3fd422fdUL,\n+    0x1d8bf2c8UL, 0x3e5d8810UL, 0x00000000UL, 0x3fd3fb4cUL, 0x88a8ddeeUL,\n+    0xbe311454UL, 0xc0000000UL, 0x3fd3d3abUL, 0x3e3b5e47UL, 0xbe5d1b72UL,\n+    0x40000000UL, 0x3fd3ac1cUL, 0xc2ab5d59UL, 0x3e31b02bUL, 0xc0000000UL,\n+    0x3fd3849dUL, 0xd4e34b9eUL, 0x3e51cb2fUL, 0x40000000UL, 0x3fd35d30UL,\n+    0x177204fbUL, 0xbe2b8cd7UL, 0x80000000UL, 0x3fd335d3UL, 0xfcd38c82UL,\n+    0xbe4356e1UL, 0x80000000UL, 0x3fd30e87UL, 0x64f54accUL, 0xbe4e6224UL,\n+    0x00000000UL, 0x3fd2e74cUL, 0xaa7975d9UL, 0x3e5dc0feUL, 0x80000000UL,\n+    0x3fd2c021UL, 0x516dab3fUL, 0xbe50ffa3UL, 0x40000000UL, 0x3fd29907UL,\n+    0x2bfb7313UL, 0x3e5674a2UL, 0xc0000000UL, 0x3fd271fdUL, 0x0549fc99UL,\n+    0x3e385d29UL, 0xc0000000UL, 0x3fd24b04UL, 0x55b63073UL, 0xbe500c6dUL,\n+    0x00000000UL, 0x3fd2241cUL, 0x3f91953aUL, 0x3e389977UL, 0xc0000000UL,\n+    0x3fd1fd43UL, 0xa1543f71UL, 0xbe3487abUL, 0xc0000000UL, 0x3fd1d67bUL,\n+    0x4ec8867cUL, 0x3df6a2dcUL, 0x00000000UL, 0x3fd1afc4UL, 0x4328e3bbUL,\n+    0x3e41d9c0UL, 0x80000000UL, 0x3fd1891cUL, 0x2e1cda84UL, 0x3e3bdd87UL,\n+    0x40000000UL, 0x3fd16285UL, 0x4b5331aeUL, 0xbe53128eUL, 0x00000000UL,\n+    0x3fd13bfeUL, 0xb9aec164UL, 0xbe52ac98UL, 0xc0000000UL, 0x3fd11586UL,\n+    0xd91e1316UL, 0xbe350630UL, 0x80000000UL, 0x3fd0ef1fUL, 0x7cacc12cUL,\n+    0x3e3f5219UL, 0x40000000UL, 0x3fd0c8c8UL, 0xbce277b7UL, 0x3e3d30c0UL,\n+    0x00000000UL, 0x3fd0a281UL, 0x2a63447dUL, 0xbe541377UL, 0x80000000UL,\n+    0x3fd07c49UL, 0xfac483b5UL, 0xbe5772ecUL, 0xc0000000UL, 0x3fd05621UL,\n+    0x36b8a570UL, 0xbe4fd4bdUL, 0xc0000000UL, 0x3fd03009UL, 0xbae505f7UL,\n+    0xbe450388UL, 0x80000000UL, 0x3fd00a01UL, 0x3e35aeadUL, 0xbe5430fcUL,\n+    0x80000000UL, 0x3fcfc811UL, 0x707475acUL, 0x3e38806eUL, 0x80000000UL,\n+    0x3fcf7c3fUL, 0xc91817fcUL, 0xbe40cceaUL, 0x80000000UL, 0x3fcf308cUL,\n+    0xae05d5e9UL, 0xbe4919b8UL, 0x80000000UL, 0x3fcee4f8UL, 0xae6cc9e6UL,\n+    0xbe530b94UL, 0x00000000UL, 0x3fce9983UL, 0x1efe3e8eUL, 0x3e57747eUL,\n+    0x00000000UL, 0x3fce4e2dUL, 0xda78d9bfUL, 0xbe59a608UL, 0x00000000UL,\n+    0x3fce02f5UL, 0x8abe2c2eUL, 0x3e4a35adUL, 0x00000000UL, 0x3fcdb7dcUL,\n+    0x1495450dUL, 0xbe0872ccUL, 0x80000000UL, 0x3fcd6ce1UL, 0x86ee0ba0UL,\n+    0xbe4f59a0UL, 0x00000000UL, 0x3fcd2205UL, 0xe81ca888UL, 0x3e5402c3UL,\n+    0x00000000UL, 0x3fccd747UL, 0x3b4424b9UL, 0x3e5dfdc3UL, 0x80000000UL,\n+    0x3fcc8ca7UL, 0xd305b56cUL, 0x3e202da6UL, 0x00000000UL, 0x3fcc4226UL,\n+    0x399a6910UL, 0xbe482a1cUL, 0x80000000UL, 0x3fcbf7c2UL, 0x747f7938UL,\n+    0xbe587372UL, 0x80000000UL, 0x3fcbad7cUL, 0x6fc246a0UL, 0x3e50d83dUL,\n+    0x00000000UL, 0x3fcb6355UL, 0xee9e9be5UL, 0xbe5c35bdUL, 0x80000000UL,\n+    0x3fcb194aUL, 0x8416c0bcUL, 0x3e546d4fUL, 0x00000000UL, 0x3fcacf5eUL,\n+    0x49f7f08fUL, 0x3e56da76UL, 0x00000000UL, 0x3fca858fUL, 0x5dc30de2UL,\n+    0x3e5f390cUL, 0x00000000UL, 0x3fca3bdeUL, 0x950583b6UL, 0xbe5e4169UL,\n+    0x80000000UL, 0x3fc9f249UL, 0x33631553UL, 0x3e52aeb1UL, 0x00000000UL,\n+    0x3fc9a8d3UL, 0xde8795a6UL, 0xbe59a504UL, 0x00000000UL, 0x3fc95f79UL,\n+    0x076bf41eUL, 0x3e5122feUL, 0x80000000UL, 0x3fc9163cUL, 0x2914c8e7UL,\n+    0x3e3dd064UL, 0x00000000UL, 0x3fc8cd1dUL, 0x3a30eca3UL, 0xbe21b4aaUL,\n+    0x80000000UL, 0x3fc8841aUL, 0xb2a96650UL, 0xbe575444UL, 0x80000000UL,\n+    0x3fc83b34UL, 0x2376c0cbUL, 0xbe2a74c7UL, 0x80000000UL, 0x3fc7f26bUL,\n+    0xd8a0b653UL, 0xbe5181b6UL, 0x00000000UL, 0x3fc7a9bfUL, 0x32257882UL,\n+    0xbe4a78b4UL, 0x00000000UL, 0x3fc7612fUL, 0x1eee8bd9UL, 0xbe1bfe9dUL,\n+    0x80000000UL, 0x3fc718bbUL, 0x0c603cc4UL, 0x3e36fdc9UL, 0x80000000UL,\n+    0x3fc6d064UL, 0x3728b8cfUL, 0xbe1e542eUL, 0x80000000UL, 0x3fc68829UL,\n+    0xc79a4067UL, 0x3e5c380fUL, 0x00000000UL, 0x3fc6400bUL, 0xf69eac69UL,\n+    0x3e550a84UL, 0x80000000UL, 0x3fc5f808UL, 0xb7a780a4UL, 0x3e5d9224UL,\n+    0x80000000UL, 0x3fc5b022UL, 0xad9dfb1eUL, 0xbe55242fUL, 0x00000000UL,\n+    0x3fc56858UL, 0x659b18beUL, 0xbe4bfda3UL, 0x80000000UL, 0x3fc520a9UL,\n+    0x66ee3631UL, 0xbe57d769UL, 0x80000000UL, 0x3fc4d916UL, 0x1ec62819UL,\n+    0x3e2427f7UL, 0x80000000UL, 0x3fc4919fUL, 0xdec25369UL, 0xbe435431UL,\n+    0x00000000UL, 0x3fc44a44UL, 0xa8acfc4bUL, 0xbe3c62e8UL, 0x00000000UL,\n+    0x3fc40304UL, 0xcf1d3eabUL, 0xbdfba29fUL, 0x80000000UL, 0x3fc3bbdfUL,\n+    0x79aba3eaUL, 0xbdf1b7c8UL, 0x80000000UL, 0x3fc374d6UL, 0xb8d186daUL,\n+    0xbe5130cfUL, 0x80000000UL, 0x3fc32de8UL, 0x9d74f152UL, 0x3e2285b6UL,\n+    0x00000000UL, 0x3fc2e716UL, 0x50ae7ca9UL, 0xbe503920UL, 0x80000000UL,\n+    0x3fc2a05eUL, 0x6caed92eUL, 0xbe533924UL, 0x00000000UL, 0x3fc259c2UL,\n+    0x9cb5034eUL, 0xbe510e31UL, 0x80000000UL, 0x3fc21340UL, 0x12c4d378UL,\n+    0xbe540b43UL, 0x80000000UL, 0x3fc1ccd9UL, 0xcc418706UL, 0x3e59887aUL,\n+    0x00000000UL, 0x3fc1868eUL, 0x921f4106UL, 0xbe528e67UL, 0x80000000UL,\n+    0x3fc1405cUL, 0x3969441eUL, 0x3e5d8051UL, 0x00000000UL, 0x3fc0fa46UL,\n+    0xd941ef5bUL, 0x3e5f9079UL, 0x80000000UL, 0x3fc0b44aUL, 0x5a3e81b2UL,\n+    0xbe567691UL, 0x00000000UL, 0x3fc06e69UL, 0x9d66afe7UL, 0xbe4d43fbUL,\n+    0x00000000UL, 0x3fc028a2UL, 0x0a92a162UL, 0xbe52f394UL, 0x00000000UL,\n+    0x3fbfc5eaUL, 0x209897e5UL, 0x3e529e37UL, 0x00000000UL, 0x3fbf3ac5UL,\n+    0x8458bd7bUL, 0x3e582831UL, 0x00000000UL, 0x3fbeafd5UL, 0xb8d8b4b8UL,\n+    0xbe486b4aUL, 0x00000000UL, 0x3fbe2518UL, 0xe0a3b7b6UL, 0x3e5bafd2UL,\n+    0x00000000UL, 0x3fbd9a90UL, 0x2bf2710eUL, 0x3e383b2bUL, 0x00000000UL,\n+    0x3fbd103cUL, 0x73eb6ab7UL, 0xbe56d78dUL, 0x00000000UL, 0x3fbc861bUL,\n+    0x32ceaff5UL, 0xbe32dc5aUL, 0x00000000UL, 0x3fbbfc2eUL, 0xbee04cb7UL,\n+    0xbe4a71a4UL, 0x00000000UL, 0x3fbb7274UL, 0x35ae9577UL, 0x3e38142fUL,\n+    0x00000000UL, 0x3fbae8eeUL, 0xcbaddab4UL, 0xbe5490f0UL, 0x00000000UL,\n+    0x3fba5f9aUL, 0x95ce1114UL, 0x3e597c71UL, 0x00000000UL, 0x3fb9d67aUL,\n+    0x6d7c0f78UL, 0x3e3abc2dUL, 0x00000000UL, 0x3fb94d8dUL, 0x2841a782UL,\n+    0xbe566cbcUL, 0x00000000UL, 0x3fb8c4d2UL, 0x6ed429c6UL, 0xbe3cfff9UL,\n+    0x00000000UL, 0x3fb83c4aUL, 0xe4a49fbbUL, 0xbe552964UL, 0x00000000UL,\n+    0x3fb7b3f4UL, 0x2193d81eUL, 0xbe42fa72UL, 0x00000000UL, 0x3fb72bd0UL,\n+    0xdd70c122UL, 0x3e527a8cUL, 0x00000000UL, 0x3fb6a3dfUL, 0x03108a54UL,\n+    0xbe450393UL, 0x00000000UL, 0x3fb61c1fUL, 0x30ff7954UL, 0x3e565840UL,\n+    0x00000000UL, 0x3fb59492UL, 0xdedd460cUL, 0xbe5422b5UL, 0x00000000UL,\n+    0x3fb50d36UL, 0x950f9f45UL, 0xbe5313f6UL, 0x00000000UL, 0x3fb4860bUL,\n+    0x582cdcb1UL, 0x3e506d39UL, 0x00000000UL, 0x3fb3ff12UL, 0x7216d3a6UL,\n+    0x3e4aa719UL, 0x00000000UL, 0x3fb3784aUL, 0x57a423fdUL, 0x3e5a9b9fUL,\n+    0x00000000UL, 0x3fb2f1b4UL, 0x7a138b41UL, 0xbe50b418UL, 0x00000000UL,\n+    0x3fb26b4eUL, 0x2fbfd7eaUL, 0x3e23a53eUL, 0x00000000UL, 0x3fb1e519UL,\n+    0x18913ccbUL, 0x3e465fc1UL, 0x00000000UL, 0x3fb15f15UL, 0x7ea24e21UL,\n+    0x3e042843UL, 0x00000000UL, 0x3fb0d941UL, 0x7c6d9c77UL, 0x3e59f61eUL,\n+    0x00000000UL, 0x3fb0539eUL, 0x114efd44UL, 0x3e4ccab7UL, 0x00000000UL,\n+    0x3faf9c56UL, 0x1777f657UL, 0x3e552f65UL, 0x00000000UL, 0x3fae91d2UL,\n+    0xc317b86aUL, 0xbe5a61e0UL, 0x00000000UL, 0x3fad87acUL, 0xb7664efbUL,\n+    0xbe41f64eUL, 0x00000000UL, 0x3fac7de6UL, 0x5d3d03a9UL, 0x3e0807a0UL,\n+    0x00000000UL, 0x3fab7480UL, 0x743c38ebUL, 0xbe3726e1UL, 0x00000000UL,\n+    0x3faa6b78UL, 0x06a253f1UL, 0x3e5ad636UL, 0x00000000UL, 0x3fa962d0UL,\n+    0xa35f541bUL, 0x3e5a187aUL, 0x00000000UL, 0x3fa85a88UL, 0x4b86e446UL,\n+    0xbe508150UL, 0x00000000UL, 0x3fa7529cUL, 0x2589cacfUL, 0x3e52938aUL,\n+    0x00000000UL, 0x3fa64b10UL, 0xaf6b11f2UL, 0xbe3454cdUL, 0x00000000UL,\n+    0x3fa543e2UL, 0x97506fefUL, 0xbe5fdec5UL, 0x00000000UL, 0x3fa43d10UL,\n+    0xe75f7dd9UL, 0xbe388dd3UL, 0x00000000UL, 0x3fa3369cUL, 0xa4139632UL,\n+    0xbdea5177UL, 0x00000000UL, 0x3fa23086UL, 0x352d6f1eUL, 0xbe565ad6UL,\n+    0x00000000UL, 0x3fa12accUL, 0x77449eb7UL, 0xbe50d5c7UL, 0x00000000UL,\n+    0x3fa0256eUL, 0x7478da78UL, 0x3e404724UL, 0x00000000UL, 0x3f9e40dcUL,\n+    0xf59cef7fUL, 0xbe539d0aUL, 0x00000000UL, 0x3f9c3790UL, 0x1511d43cUL,\n+    0x3e53c2c8UL, 0x00000000UL, 0x3f9a2f00UL, 0x9b8bff3cUL, 0xbe43b3e1UL,\n+    0x00000000UL, 0x3f982724UL, 0xad1e22a5UL, 0x3e46f0bdUL, 0x00000000UL,\n+    0x3f962000UL, 0x130d9356UL, 0x3e475ba0UL, 0x00000000UL, 0x3f941994UL,\n+    0x8f86f883UL, 0xbe513d0bUL, 0x00000000UL, 0x3f9213dcUL, 0x914d0dc8UL,\n+    0xbe534335UL, 0x00000000UL, 0x3f900ed8UL, 0x2d73e5e7UL, 0xbe22ba75UL,\n+    0x00000000UL, 0x3f8c1510UL, 0xc5b7d70eUL, 0x3e599c5dUL, 0x00000000UL,\n+    0x3f880de0UL, 0x8a27857eUL, 0xbe3d28c8UL, 0x00000000UL, 0x3f840810UL,\n+    0xda767328UL, 0x3e531b3dUL, 0x00000000UL, 0x3f8003b0UL, 0x77bacaf3UL,\n+    0xbe5f04e3UL, 0x00000000UL, 0x3f780150UL, 0xdf4b0720UL, 0x3e5a8bffUL,\n+    0x00000000UL, 0x3f6ffc40UL, 0x34c48e71UL, 0xbe3fcd99UL, 0x00000000UL,\n+    0x3f5ff6c0UL, 0x1ad218afUL, 0xbe4c78a7UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x80000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(8) juint _log2_pow[] = {\n+    0xfefa39efUL, 0x3fe62e42UL, 0xfefa39efUL, 0xbfe62e42UL\n+};\n+\n+ATTRIBUTE_ALIGNED(8) juint _DOUBLE2[] = {\n+    0x00000000UL, 0x40000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(8) juint _DOUBLE0[] = {\n+    0x00000000UL, 0x00000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(8) juint _DOUBLE0DOT5[] = {\n+    0x00000000UL, 0x3fe00000UL\n+};\n+\n+#define __ _masm->\n+\n+address StubGenerator::generate_libmPow() {\n+  StubCodeMark mark(this, \"StubRoutines\", \"libmPow\");\n+  address start = __ pc();\n+\n+  Label L_2TAG_PACKET_0_0_2, L_2TAG_PACKET_1_0_2, L_2TAG_PACKET_2_0_2, L_2TAG_PACKET_3_0_2;\n+  Label L_2TAG_PACKET_4_0_2, L_2TAG_PACKET_5_0_2, L_2TAG_PACKET_6_0_2, L_2TAG_PACKET_7_0_2;\n+  Label L_2TAG_PACKET_8_0_2, L_2TAG_PACKET_9_0_2, L_2TAG_PACKET_10_0_2, L_2TAG_PACKET_11_0_2;\n+  Label L_2TAG_PACKET_12_0_2, L_2TAG_PACKET_13_0_2, L_2TAG_PACKET_14_0_2, L_2TAG_PACKET_15_0_2;\n+  Label L_2TAG_PACKET_16_0_2, L_2TAG_PACKET_17_0_2, L_2TAG_PACKET_18_0_2, L_2TAG_PACKET_19_0_2;\n+  Label L_2TAG_PACKET_20_0_2, L_2TAG_PACKET_21_0_2, L_2TAG_PACKET_22_0_2, L_2TAG_PACKET_23_0_2;\n+  Label L_2TAG_PACKET_24_0_2, L_2TAG_PACKET_25_0_2, L_2TAG_PACKET_26_0_2, L_2TAG_PACKET_27_0_2;\n+  Label L_2TAG_PACKET_28_0_2, L_2TAG_PACKET_29_0_2, L_2TAG_PACKET_30_0_2, L_2TAG_PACKET_31_0_2;\n+  Label L_2TAG_PACKET_32_0_2, L_2TAG_PACKET_33_0_2, L_2TAG_PACKET_34_0_2, L_2TAG_PACKET_35_0_2;\n+  Label L_2TAG_PACKET_36_0_2, L_2TAG_PACKET_37_0_2, L_2TAG_PACKET_38_0_2, L_2TAG_PACKET_39_0_2;\n+  Label L_2TAG_PACKET_40_0_2, L_2TAG_PACKET_41_0_2, L_2TAG_PACKET_42_0_2, L_2TAG_PACKET_43_0_2;\n+  Label L_2TAG_PACKET_44_0_2, L_2TAG_PACKET_45_0_2, L_2TAG_PACKET_46_0_2, L_2TAG_PACKET_47_0_2;\n+  Label L_2TAG_PACKET_48_0_2, L_2TAG_PACKET_49_0_2, L_2TAG_PACKET_50_0_2, L_2TAG_PACKET_51_0_2;\n+  Label L_2TAG_PACKET_52_0_2, L_2TAG_PACKET_53_0_2, L_2TAG_PACKET_54_0_2, L_2TAG_PACKET_55_0_2;\n+  Label L_2TAG_PACKET_56_0_2;\n+  Label B1_2, B1_3, B1_5;\n+  Label L_POW;\n+\n+  address HIGHSIGMASK    = (address)_HIGHSIGMASK;\n+  address LOG2_E         = (address)_LOG2_E;\n+  address coeff          = (address)_coeff_pow;\n+  address L_tbl          = (address)_L_tbl_pow;\n+  address HIGHMASK_Y     = (address)_HIGHMASK_Y;\n+  address T_exp          = (address)_T_exp;\n+  address e_coeff        = (address)_e_coeff;\n+  address coeff_h        = (address)_coeff_h;\n+  address HIGHMASK_LOG_X = (address)_HIGHMASK_LOG_X;\n+  address HALFMASK       = (address)_HALFMASK;\n+  address log2           = (address)_log2_pow;\n+  address DOUBLE2        = (address)_DOUBLE2;\n+  address DOUBLE0        = (address)_DOUBLE0;\n+  address DOUBLE0DOT5    = (address)_DOUBLE0DOT5;\n+\n+  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+  __ subq(rsp, 40);\n+  __ movsd(Address(rsp, 8), xmm0);\n+  __ movsd(Address(rsp, 16), xmm1);\n+\n+  \/\/ Special case: pow(x, 2.0) => x * x\n+  __ movdq(r8, xmm1);\n+  __ cmp64(r8, ExternalAddress(DOUBLE2), r9 \/*rscratch*\/);\n+  __ jccb(Assembler::notEqual, B1_2);\n+  __ mulsd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  \/\/ Special case: pow(x, 0.5) => sqrt(x)\n+  __ bind(B1_2);\n+  __ cmp64(r8, ExternalAddress(DOUBLE0DOT5), r9 \/*rscratch*\/);\n+  __ jccb(Assembler::notEqual, L_POW); \/\/ For pow(x, y), check whether y == 0.5\n+  __ movdq(r9, xmm0);\n+  __ cmp64(r9, ExternalAddress(DOUBLE0), r10 \/*rscratch*\/);\n+  __ jccb(Assembler::less, L_POW); \/\/ pow(x, 0.5) => sqrt(x) only for x >= 0.0 or x is +inf\/NaN\n+  __ sqrtsd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_POW);\n+  __ pextrw(rax, xmm0, 3);\n+  __ xorpd(xmm2, xmm2);\n+  __ mov64(r9, 0x3ff0000000000000);\n+  __ movdq(xmm2, r9);\n+  __ movl(r8, 1069088768);\n+  __ movdq(xmm7, r8);\n+  __ xorpd(xmm1, xmm1);\n+  __ mov64(r10, 0x77f0000000000000);\n+  __ movdq(xmm1, r10);\n+  __ movdqu(xmm3, xmm0);\n+  __ movl(rdx, 32752);\n+  __ andl(rdx, rax);\n+  __ subl(rdx, 16368);\n+  __ movl(rcx, rdx);\n+  __ sarl(rdx, 31);\n+  __ addl(rcx, rdx);\n+  __ xorl(rcx, rdx);\n+  __ por(xmm0, xmm2);\n+  __ movdqu(xmm6, ExternalAddress(HIGHSIGMASK), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n+  __ psrlq(xmm0, 27);\n+  __ movq(xmm2, ExternalAddress(LOG2_E), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n+  __ psrld(xmm0, 2);\n+  __ addl(rcx, 16);\n+  __ bsrl(rcx, rcx);\n+  __ rcpps(xmm0, xmm0);\n+  __ psllq(xmm3, 12);\n+  __ movl(r11, 8192);\n+  __ movdq(xmm4, r11);\n+  __ psrlq(xmm3, 12);\n+  __ subl(rax, 16);\n+  __ cmpl(rax, 32736);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_0_0_2);\n+  __ movl(r8, 0);\n+\n+  __ bind(L_2TAG_PACKET_1_0_2);\n+  __ mulss(xmm0, xmm7);\n+  __ movl(rdx, -1);\n+  __ subl(rcx, 4);\n+  __ shll(rdx);\n+  __ shlq(rdx, 32);\n+  __ movdq(xmm5, rdx);\n+  __ por(xmm3, xmm1);\n+  __ subl(rax, 16351);\n+  __ cmpl(rax, 1);\n+  __ jcc(Assembler::belowEqual, L_2TAG_PACKET_2_0_2);\n+  __ paddd(xmm0, xmm4);\n+  __ pand(xmm5, xmm3);\n+  __ movdl(rdx, xmm0);\n+  __ psllq(xmm0, 29);\n+\n+  __ bind(L_2TAG_PACKET_3_0_2);\n+  __ subsd(xmm3, xmm5);\n+  __ pand(xmm0, xmm6);\n+  __ subl(rax, 1);\n+  __ sarl(rax, 4);\n+  __ cvtsi2sdl(xmm7, rax);\n+  __ mulpd(xmm5, xmm0);\n+\n+  __ bind(L_2TAG_PACKET_4_0_2);\n+  __ mulsd(xmm3, xmm0);\n+  __ movdqu(xmm1, ExternalAddress(coeff), r9 \/*rscratch*\/);    \/\/0x6dc96112UL, 0xbf836578UL, 0xee241472UL, 0xbf9b0301UL\n+  __ lea(r11, ExternalAddress(L_tbl));\n+  __ subsd(xmm5, xmm2);\n+  __ movdqu(xmm4, ExternalAddress(coeff + 16), r9 \/*rscratch*\/);    \/\/0x9f95985aUL, 0xbfb528dbUL, 0xb3841d2aUL, 0xbfd619b6UL\n+  __ movl(rcx, rax);\n+  __ sarl(rax, 31);\n+  __ addl(rcx, rax);\n+  __ xorl(rax, rcx);\n+  __ addl(rax, 1);\n+  __ bsrl(rax, rax);\n+  __ unpcklpd(xmm5, xmm3);\n+  __ movdqu(xmm6, ExternalAddress(coeff + 32), r9 \/*rscratch*\/);    \/\/0x518775e3UL, 0x3f9004f2UL, 0xac8349bbUL, 0x3fa76c9bUL\n+  __ addsd(xmm3, xmm5);\n+  __ andl(rdx, 16760832);\n+  __ shrl(rdx, 10);\n+  __ addpd(xmm5, Address(r11, rdx, Address::times_1, -3648));\n+  __ movdqu(xmm0, ExternalAddress(coeff + 48), r9 \/*rscratch*\/);    \/\/0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL, 0xbf5dabe1UL\n+  __ pshufd(xmm2, xmm3, 68);\n+  __ mulsd(xmm3, xmm3);\n+  __ mulpd(xmm1, xmm2);\n+  __ mulpd(xmm4, xmm2);\n+  __ addsd(xmm5, xmm7);\n+  __ mulsd(xmm2, xmm3);\n+  __ addpd(xmm6, xmm1);\n+  __ mulsd(xmm3, xmm3);\n+  __ addpd(xmm0, xmm4);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movw(rcx, Address(rsp, 22));\n+  __ pshufd(xmm7, xmm5, 238);\n+  __ movq(xmm4, ExternalAddress(HIGHMASK_Y), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffffff8UL, 0x00000000UL, 0xffffffffUL\n+  __ mulpd(xmm6, xmm2);\n+  __ pshufd(xmm3, xmm3, 68);\n+  __ mulpd(xmm0, xmm2);\n+  __ shll(rax, 4);\n+  __ subl(rax, 15872);\n+  __ andl(rcx, 32752);\n+  __ addl(rax, rcx);\n+  __ mulpd(xmm3, xmm6);\n+  __ cmpl(rax, 624);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_5_0_2);\n+  __ xorpd(xmm6, xmm6);\n+  __ movl(rdx, 17080);\n+  __ pinsrw(xmm6, rdx, 3);\n+  __ movdqu(xmm2, xmm1);\n+  __ pand(xmm4, xmm1);\n+  __ subsd(xmm1, xmm4);\n+  __ mulsd(xmm4, xmm5);\n+  __ addsd(xmm0, xmm7);\n+  __ mulsd(xmm1, xmm5);\n+  __ movdqu(xmm7, xmm6);\n+  __ addsd(xmm6, xmm4);\n+  __ lea(r11, ExternalAddress(T_exp));\n+  __ addpd(xmm3, xmm0);\n+  __ movdl(rdx, xmm6);\n+  __ subsd(xmm6, xmm7);\n+  __ pshufd(xmm0, xmm3, 238);\n+  __ subsd(xmm4, xmm6);\n+  __ addsd(xmm0, xmm3);\n+  __ movl(rcx, rdx);\n+  __ andl(rdx, 255);\n+  __ addl(rdx, rdx);\n+  __ movdqu(xmm5, Address(r11, rdx, Address::times_8, 0));\n+  __ addsd(xmm4, xmm1);\n+  __ mulsd(xmm2, xmm0);\n+  __ movdqu(xmm7, ExternalAddress(e_coeff),      r9 \/*rscratch*\/);    \/\/0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL\n+  __ movdqu(xmm3, ExternalAddress(e_coeff + 16), r9 \/*rscratch*\/);    \/\/0x6fba4e77UL, 0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL\n+  __ shll(rcx, 12);\n+  __ xorl(rcx, r8);\n+  __ andl(rcx, -1048576);\n+  __ movdq(xmm6, rcx);\n+  __ addsd(xmm2, xmm4);\n+  __ mov64(r9, 0x3fe62e42fefa39ef);\n+  __ movdq(xmm1, r9);\n+  __ pshufd(xmm0, xmm2, 68);\n+  __ pshufd(xmm4, xmm2, 68);\n+  __ mulsd(xmm1, xmm2);\n+  __ pshufd(xmm6, xmm6, 17);\n+  __ mulpd(xmm0, xmm0);\n+  __ mulpd(xmm7, xmm4);\n+  __ paddd(xmm5, xmm6);\n+  __ mulsd(xmm1, xmm5);\n+  __ pshufd(xmm6, xmm5, 238);\n+  __ mulsd(xmm0, xmm0);\n+  __ addpd(xmm3, xmm7);\n+  __ addsd(xmm1, xmm6);\n+  __ mulpd(xmm0, xmm3);\n+  __ pshufd(xmm3, xmm0, 238);\n+  __ mulsd(xmm0, xmm5);\n+  __ mulsd(xmm3, xmm5);\n+  __ addsd(xmm0, xmm1);\n+  __ addsd(xmm0, xmm3);\n+  __ addsd(xmm0, xmm5);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_0_0_2);\n+  __ addl(rax, 16);\n+  __ movl(rdx, 32752);\n+  __ andl(rdx, rax);\n+  __ cmpl(rdx, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_6_0_2);\n+  __ testl(rax, 32768);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_7_0_2);\n+\n+  __ bind(L_2TAG_PACKET_8_0_2);\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ movq(xmm3, Address(rsp, 8));\n+  __ movdl(rdx, xmm3);\n+  __ psrlq(xmm3, 32);\n+  __ movdl(rcx, xmm3);\n+  __ orl(rdx, rcx);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_9_0_2);\n+  __ xorpd(xmm3, xmm3);\n+  __ movl(rax, 18416);\n+  __ pinsrw(xmm3, rax, 3);\n+  __ mulsd(xmm0, xmm3);\n+  __ xorpd(xmm2, xmm2);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm2, rax, 3);\n+  __ movdqu(xmm3, xmm0);\n+  __ pextrw(rax, xmm0, 3);\n+  __ por(xmm0, xmm2);\n+  __ movl(rcx, 18416);\n+  __ psrlq(xmm0, 27);\n+  __ movq(xmm2, ExternalAddress(LOG2_E), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n+  __ psrld(xmm0, 2);\n+  __ rcpps(xmm0, xmm0);\n+  __ psllq(xmm3, 12);\n+  __ movdqu(xmm6, ExternalAddress(HIGHSIGMASK), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n+  __ psrlq(xmm3, 12);\n+  __ mulss(xmm0, xmm7);\n+  __ movl(rdx, -1024);\n+  __ movdl(xmm5, rdx);\n+  __ por(xmm3, xmm1);\n+  __ paddd(xmm0, xmm4);\n+  __ psllq(xmm5, 32);\n+  __ movdl(rdx, xmm0);\n+  __ psllq(xmm0, 29);\n+  __ pand(xmm5, xmm3);\n+  __ movl(r8, 0);\n+  __ pand(xmm0, xmm6);\n+  __ subsd(xmm3, xmm5);\n+  __ andl(rax, 32752);\n+  __ subl(rax, 18416);\n+  __ sarl(rax, 4);\n+  __ cvtsi2sdl(xmm7, rax);\n+  __ mulpd(xmm5, xmm0);\n+  __ jmp(L_2TAG_PACKET_4_0_2);\n+\n+  __ bind(L_2TAG_PACKET_10_0_2);\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ movq(xmm3, Address(rsp, 8));\n+  __ movdl(rdx, xmm3);\n+  __ psrlq(xmm3, 32);\n+  __ movdl(rcx, xmm3);\n+  __ orl(rdx, rcx);\n+  __ cmpl(rdx, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_9_0_2);\n+  __ xorpd(xmm3, xmm3);\n+  __ movl(rax, 18416);\n+  __ pinsrw(xmm3, rax, 3);\n+  __ mulsd(xmm0, xmm3);\n+  __ xorpd(xmm2, xmm2);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm2, rax, 3);\n+  __ movdqu(xmm3, xmm0);\n+  __ pextrw(rax, xmm0, 3);\n+  __ por(xmm0, xmm2);\n+  __ movl(rcx, 18416);\n+  __ psrlq(xmm0, 27);\n+  __ movq(xmm2, ExternalAddress(LOG2_E), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n+  __ psrld(xmm0, 2);\n+  __ rcpps(xmm0, xmm0);\n+  __ psllq(xmm3, 12);\n+  __ movdqu(xmm6, ExternalAddress(HIGHSIGMASK), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xfffff800UL, 0x00000000UL, 0xfffff800UL\n+  __ psrlq(xmm3, 12);\n+  __ mulss(xmm0, xmm7);\n+  __ movl(rdx, -1024);\n+  __ movdl(xmm5, rdx);\n+  __ por(xmm3, xmm1);\n+  __ paddd(xmm0, xmm4);\n+  __ psllq(xmm5, 32);\n+  __ movdl(rdx, xmm0);\n+  __ psllq(xmm0, 29);\n+  __ pand(xmm5, xmm3);\n+  __ movl(r8, INT_MIN);\n+  __ pand(xmm0, xmm6);\n+  __ subsd(xmm3, xmm5);\n+  __ andl(rax, 32752);\n+  __ subl(rax, 18416);\n+  __ sarl(rax, 4);\n+  __ cvtsi2sdl(xmm7, rax);\n+  __ mulpd(xmm5, xmm0);\n+  __ jmp(L_2TAG_PACKET_4_0_2);\n+\n+  __ bind(L_2TAG_PACKET_5_0_2);\n+  __ cmpl(rax, 0);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_11_0_2);\n+  __ cmpl(rax, 752);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_12_0_2);\n+  __ addsd(xmm0, xmm7);\n+  __ movq(xmm2, ExternalAddress(HALFMASK), r9 \/*rscratch*\/);    \/\/0xf8000000UL, 0xffffffffUL, 0xf8000000UL, 0xffffffffUL\n+  __ addpd(xmm3, xmm0);\n+  __ xorpd(xmm6, xmm6);\n+  __ movl(rax, 17080);\n+  __ pinsrw(xmm6, rax, 3);\n+  __ pshufd(xmm0, xmm3, 238);\n+  __ addsd(xmm0, xmm3);\n+  __ movdqu(xmm3, xmm5);\n+  __ addsd(xmm5, xmm0);\n+  __ movdqu(xmm4, xmm2);\n+  __ subsd(xmm3, xmm5);\n+  __ movdqu(xmm7, xmm5);\n+  __ pand(xmm5, xmm2);\n+  __ movdqu(xmm2, xmm1);\n+  __ pand(xmm4, xmm1);\n+  __ subsd(xmm7, xmm5);\n+  __ addsd(xmm0, xmm3);\n+  __ subsd(xmm1, xmm4);\n+  __ mulsd(xmm4, xmm5);\n+  __ addsd(xmm0, xmm7);\n+  __ mulsd(xmm2, xmm0);\n+  __ movdqu(xmm7, xmm6);\n+  __ mulsd(xmm1, xmm5);\n+  __ addsd(xmm6, xmm4);\n+  __ movdl(rax, xmm6);\n+  __ subsd(xmm6, xmm7);\n+  __ lea(r11, ExternalAddress(T_exp));\n+  __ addsd(xmm2, xmm1);\n+  __ movdqu(xmm7, ExternalAddress(e_coeff +  0), r9 \/*rscratch*\/);    \/\/0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL\n+  __ movdqu(xmm3, ExternalAddress(e_coeff + 16), r9 \/*rscratch*\/);    \/\/0x6fba4e77UL, 0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL\n+  __ subsd(xmm4, xmm6);\n+  __ pextrw(rdx, xmm6, 3);\n+  __ movl(rcx, rax);\n+  __ andl(rax, 255);\n+  __ addl(rax, rax);\n+  __ movdqu(xmm5, Address(r11, rax, Address::times_8, 0));\n+  __ addsd(xmm2, xmm4);\n+  __ sarl(rcx, 8);\n+  __ movl(rax, rcx);\n+  __ sarl(rcx, 1);\n+  __ subl(rax, rcx);\n+  __ shll(rcx, 20);\n+  __ xorl(rcx, r8);\n+  __ movdl(xmm6, rcx);\n+  __ movq(xmm1, ExternalAddress(e_coeff + 32), r9 \/*rscratch*\/);    \/\/0xfefa39efUL, 0x3fe62e42UL, 0x00000000UL, 0x00000000UL\n+  __ andl(rdx, 32767);\n+  __ cmpl(rdx, 16529);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_12_0_2);\n+  __ pshufd(xmm0, xmm2, 68);\n+  __ pshufd(xmm4, xmm2, 68);\n+  __ mulpd(xmm0, xmm0);\n+  __ mulpd(xmm7, xmm4);\n+  __ pshufd(xmm6, xmm6, 17);\n+  __ mulsd(xmm1, xmm2);\n+  __ mulsd(xmm0, xmm0);\n+  __ paddd(xmm5, xmm6);\n+  __ addpd(xmm3, xmm7);\n+  __ mulsd(xmm1, xmm5);\n+  __ pshufd(xmm6, xmm5, 238);\n+  __ mulpd(xmm0, xmm3);\n+  __ addsd(xmm1, xmm6);\n+  __ pshufd(xmm3, xmm0, 238);\n+  __ mulsd(xmm0, xmm5);\n+  __ mulsd(xmm3, xmm5);\n+  __ shll(rax, 4);\n+  __ xorpd(xmm4, xmm4);\n+  __ addl(rax, 16368);\n+  __ pinsrw(xmm4, rax, 3);\n+  __ addsd(xmm0, xmm1);\n+  __ addsd(xmm0, xmm3);\n+  __ movdqu(xmm1, xmm0);\n+  __ addsd(xmm0, xmm5);\n+  __ mulsd(xmm0, xmm4);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_13_0_2);\n+  __ cmpl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_14_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_6_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ movdqu(xmm2, xmm0);\n+  __ movdl(rax, xmm2);\n+  __ psrlq(xmm2, 20);\n+  __ movdl(rdx, xmm2);\n+  __ orl(rax, rdx);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_15_0_2);\n+  __ movdl(rax, xmm1);\n+  __ psrlq(xmm1, 32);\n+  __ movdl(rdx, xmm1);\n+  __ movl(rcx, rdx);\n+  __ addl(rdx, rdx);\n+  __ orl(rax, rdx);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_16_0_2);\n+  __ addsd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_16_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ movl(Address(rsp, 0), 29);\n+  __ jmp(L_2TAG_PACKET_17_0_2);\n+\n+  __ bind(L_2TAG_PACKET_18_0_2);\n+  __ movq(xmm0, Address(rsp, 16));\n+  __ addpd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_15_0_2);\n+  __ movdl(rax, xmm1);\n+  __ movdqu(xmm2, xmm1);\n+  __ psrlq(xmm1, 32);\n+  __ movdl(rdx, xmm1);\n+  __ movl(rcx, rdx);\n+  __ addl(rdx, rdx);\n+  __ orl(rax, rdx);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_19_0_2);\n+  __ pextrw(rax, xmm2, 3);\n+  __ andl(rax, 32752);\n+  __ cmpl(rax, 32752);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_20_0_2);\n+  __ movdl(rax, xmm2);\n+  __ psrlq(xmm2, 20);\n+  __ movdl(rdx, xmm2);\n+  __ orl(rax, rdx);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n+\n+  __ bind(L_2TAG_PACKET_20_0_2);\n+  __ pextrw(rax, xmm0, 3);\n+  __ testl(rax, 32768);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_21_0_2);\n+  __ testl(rcx, INT_MIN);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_23_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movdl(rax, xmm1);\n+  __ testl(rax, 1);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_24_0_2);\n+  __ testl(rax, 2);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_25_0_2);\n+  __ jmp(L_2TAG_PACKET_24_0_2);\n+\n+  __ bind(L_2TAG_PACKET_21_0_2);\n+  __ shrl(rcx, 20);\n+  __ andl(rcx, 2047);\n+  __ cmpl(rcx, 1075);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_24_0_2);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_26_0_2);\n+  __ cmpl(rcx, 1074);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_23_0_2);\n+  __ cmpl(rcx, 1023);\n+  __ jcc(Assembler::below, L_2TAG_PACKET_24_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movl(rax, 17208);\n+  __ xorpd(xmm3, xmm3);\n+  __ pinsrw(xmm3, rax, 3);\n+  __ movdqu(xmm4, xmm3);\n+  __ addsd(xmm3, xmm1);\n+  __ subsd(xmm4, xmm3);\n+  __ addsd(xmm1, xmm4);\n+  __ pextrw(rax, xmm1, 3);\n+  __ andl(rax, 32752);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_24_0_2);\n+  __ movdl(rax, xmm3);\n+  __ andl(rax, 1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_24_0_2);\n+\n+  __ bind(L_2TAG_PACKET_25_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ pextrw(rax, xmm1, 3);\n+  __ andl(rax, 32768);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_27_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_27_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 32768);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_24_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ pextrw(rax, xmm1, 3);\n+  __ andl(rax, 32768);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_22_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 32752);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_26_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movdl(rax, xmm1);\n+  __ andl(rax, 1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_24_0_2);\n+  __ jmp(L_2TAG_PACKET_25_0_2);\n+\n+  __ bind(L_2TAG_PACKET_28_0_2);\n+  __ movdl(rax, xmm1);\n+  __ psrlq(xmm1, 20);\n+  __ movdl(rdx, xmm1);\n+  __ orl(rax, rdx);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_29_0_2);\n+  __ movq(xmm0, Address(rsp, 16));\n+  __ addsd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_29_0_2);\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ pextrw(rax, xmm0, 3);\n+  __ cmpl(rax, 49136);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_30_0_2);\n+  __ movdl(rcx, xmm0);\n+  __ psrlq(xmm0, 20);\n+  __ movdl(rdx, xmm0);\n+  __ orl(rcx, rdx);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_30_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 32760);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_30_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ andl(rax, 32752);\n+  __ subl(rax, 16368);\n+  __ pextrw(rdx, xmm1, 3);\n+  __ xorpd(xmm0, xmm0);\n+  __ xorl(rax, rdx);\n+  __ andl(rax, 32768);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_31_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_31_0_2);\n+  __ movl(rcx, 32752);\n+  __ pinsrw(xmm0, rcx, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_32_0_2);\n+  __ movdl(rax, xmm1);\n+  __ cmpl(rdx, 17184);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_33_0_2);\n+  __ testl(rax, 1);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n+  __ testl(rax, 2);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_35_0_2);\n+  __ jmp(L_2TAG_PACKET_36_0_2);\n+\n+  __ bind(L_2TAG_PACKET_33_0_2);\n+  __ testl(rax, 1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_35_0_2);\n+  __ jmp(L_2TAG_PACKET_36_0_2);\n+\n+  __ bind(L_2TAG_PACKET_7_0_2);\n+  __ movq(xmm2, Address(rsp, 8));\n+  __ movdl(rax, xmm2);\n+  __ psrlq(xmm2, 31);\n+  __ movdl(rcx, xmm2);\n+  __ orl(rax, rcx);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_9_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ pextrw(rdx, xmm1, 3);\n+  __ movdl(rax, xmm1);\n+  __ movdqu(xmm2, xmm1);\n+  __ psrlq(xmm2, 32);\n+  __ movdl(rcx, xmm2);\n+  __ addl(rcx, rcx);\n+  __ orl(rcx, rax);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_37_0_2);\n+  __ andl(rdx, 32752);\n+  __ cmpl(rdx, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_28_0_2);\n+  __ cmpl(rdx, 17200);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_35_0_2);\n+  __ cmpl(rdx, 17184);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_32_0_2);\n+  __ cmpl(rdx, 16368);\n+  __ jcc(Assembler::below, L_2TAG_PACKET_34_0_2);\n+  __ movl(rax, 17208);\n+  __ xorpd(xmm2, xmm2);\n+  __ pinsrw(xmm2, rax, 3);\n+  __ movdqu(xmm4, xmm2);\n+  __ addsd(xmm2, xmm1);\n+  __ subsd(xmm4, xmm2);\n+  __ addsd(xmm1, xmm4);\n+  __ pextrw(rax, xmm1, 3);\n+  __ andl(rax, 32767);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_34_0_2);\n+  __ movdl(rax, xmm2);\n+  __ andl(rax, 1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_35_0_2);\n+\n+  __ bind(L_2TAG_PACKET_36_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ movl(rdx, 30704);\n+  __ pinsrw(xmm1, rdx, 3);\n+  __ movq(xmm2, ExternalAddress(LOG2_E), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n+  __ movq(xmm4, Address(rsp, 8));\n+  __ pextrw(rax, xmm4, 3);\n+  __ movl(rdx, 8192);\n+  __ movdl(xmm4, rdx);\n+  __ andl(rax, 32767);\n+  __ subl(rax, 16);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_10_0_2);\n+  __ movl(rdx, rax);\n+  __ andl(rdx, 32752);\n+  __ subl(rdx, 16368);\n+  __ movl(rcx, rdx);\n+  __ sarl(rdx, 31);\n+  __ addl(rcx, rdx);\n+  __ xorl(rcx, rdx);\n+  __ addl(rcx, 16);\n+  __ bsrl(rcx, rcx);\n+  __ movl(r8, INT_MIN);\n+  __ jmp(L_2TAG_PACKET_1_0_2);\n+\n+  __ bind(L_2TAG_PACKET_34_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ movl(rax, 32752);\n+  __ pinsrw(xmm1, rax, 3);\n+  __ xorpd(xmm0, xmm0);\n+  __ mulsd(xmm0, xmm1);\n+  __ movl(Address(rsp, 0), 28);\n+  __ jmp(L_2TAG_PACKET_17_0_2);\n+\n+  __ bind(L_2TAG_PACKET_35_0_2);\n+  __ xorpd(xmm1, xmm1);\n+  __ movl(rdx, 30704);\n+  __ pinsrw(xmm1, rdx, 3);\n+  __ movq(xmm2, ExternalAddress(LOG2_E), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff72000UL, 0x161bb241UL, 0xbf5dabe1UL\n+  __ movq(xmm4, Address(rsp, 8));\n+  __ pextrw(rax, xmm4, 3);\n+  __ movl(rdx, 8192);\n+  __ movdl(xmm4, rdx);\n+  __ andl(rax, 32767);\n+  __ subl(rax, 16);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_8_0_2);\n+  __ movl(rdx, rax);\n+  __ andl(rdx, 32752);\n+  __ subl(rdx, 16368);\n+  __ movl(rcx, rdx);\n+  __ sarl(rdx, 31);\n+  __ addl(rcx, rdx);\n+  __ xorl(rcx, rdx);\n+  __ addl(rcx, 16);\n+  __ bsrl(rcx, rcx);\n+  __ movl(r8, 0);\n+  __ jmp(L_2TAG_PACKET_1_0_2);\n+\n+  __ bind(L_2TAG_PACKET_19_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_22_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_11_0_2);\n+  __ addl(rax, 384);\n+  __ cmpl(rax, 0);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_38_0_2);\n+  __ mulsd(xmm5, xmm1);\n+  __ addsd(xmm0, xmm7);\n+  __ shrl(r8, 31);\n+  __ addpd(xmm3, xmm0);\n+  __ pshufd(xmm0, xmm3, 238);\n+  __ addsd(xmm3, xmm0);\n+  __ lea(r11, ExternalAddress(log2));    \/\/0xfefa39efUL, 0x3fe62e42UL, 0xfefa39efUL, 0xbfe62e42UL\n+  __ movq(xmm4, Address(r11, r8, Address::times_8, 0));\n+  __ mulsd(xmm1, xmm3);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 16368);\n+  __ shll(r8, 15);\n+  __ orl(rax, r8);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ addsd(xmm5, xmm1);\n+  __ mulsd(xmm5, xmm4);\n+  __ addsd(xmm0, xmm5);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_38_0_2);\n+\n+  __ bind(L_2TAG_PACKET_37_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_39_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 16368);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ movl(Address(rsp, 0), 26);\n+  __ jmp(L_2TAG_PACKET_17_0_2);\n+\n+  __ bind(L_2TAG_PACKET_9_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movdqu(xmm2, xmm1);\n+  __ pextrw(rax, xmm1, 3);\n+  __ andl(rax, 32752);\n+  __ cmpl(rax, 32752);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_40_0_2);\n+  __ movdl(rax, xmm2);\n+  __ psrlq(xmm2, 20);\n+  __ movdl(rdx, xmm2);\n+  __ orl(rax, rdx);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_18_0_2);\n+\n+  __ bind(L_2TAG_PACKET_40_0_2);\n+  __ movdl(rax, xmm1);\n+  __ psrlq(xmm1, 32);\n+  __ movdl(rdx, xmm1);\n+  __ movl(rcx, rdx);\n+  __ addl(rdx, rdx);\n+  __ orl(rax, rdx);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_39_0_2);\n+  __ shrl(rdx, 21);\n+  __ cmpl(rdx, 1075);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_41_0_2);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_42_0_2);\n+  __ cmpl(rdx, 1023);\n+  __ jcc(Assembler::below, L_2TAG_PACKET_41_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movl(rax, 17208);\n+  __ xorpd(xmm3, xmm3);\n+  __ pinsrw(xmm3, rax, 3);\n+  __ movdqu(xmm4, xmm3);\n+  __ addsd(xmm3, xmm1);\n+  __ subsd(xmm4, xmm3);\n+  __ addsd(xmm1, xmm4);\n+  __ pextrw(rax, xmm1, 3);\n+  __ andl(rax, 32752);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_41_0_2);\n+  __ movdl(rax, xmm3);\n+  __ andl(rax, 1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_41_0_2);\n+\n+  __ bind(L_2TAG_PACKET_43_0_2);\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ testl(rcx, INT_MIN);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_44_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_42_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movdl(rax, xmm1);\n+  __ testl(rax, 1);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_43_0_2);\n+\n+  __ bind(L_2TAG_PACKET_41_0_2);\n+  __ testl(rcx, INT_MIN);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_22_0_2);\n+  __ xorpd(xmm0, xmm0);\n+\n+  __ bind(L_2TAG_PACKET_44_0_2);\n+  __ movl(rax, 16368);\n+  __ xorpd(xmm1, xmm1);\n+  __ pinsrw(xmm1, rax, 3);\n+  __ divsd(xmm1, xmm0);\n+  __ movdqu(xmm0, xmm1);\n+  __ movl(Address(rsp, 0), 27);\n+  __ jmp(L_2TAG_PACKET_17_0_2);\n+\n+  __ bind(L_2TAG_PACKET_12_0_2);\n+  __ movq(xmm2, Address(rsp, 8));\n+  __ movq(xmm6, Address(rsp, 16));\n+  __ pextrw(rax, xmm2, 3);\n+  __ pextrw(rdx, xmm6, 3);\n+  __ movl(rcx, 32752);\n+  __ andl(rcx, rdx);\n+  __ cmpl(rcx, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_45_0_2);\n+  __ andl(rax, 32752);\n+  __ subl(rax, 16368);\n+  __ xorl(rdx, rax);\n+  __ testl(rdx, 32768);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_46_0_2);\n+\n+  __ bind(L_2TAG_PACKET_47_0_2);\n+  __ movl(rax, 32736);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ shrl(r8, 16);\n+  __ orl(rax, r8);\n+  __ pinsrw(xmm1, rax, 3);\n+  __ mulsd(xmm0, xmm1);\n+\n+  __ bind(L_2TAG_PACKET_14_0_2);\n+  __ movl(Address(rsp, 0), 24);\n+  __ jmp(L_2TAG_PACKET_17_0_2);\n+\n+  __ bind(L_2TAG_PACKET_46_0_2);\n+  __ movl(rax, 16);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ mulsd(xmm0, xmm0);\n+  __ testl(r8, INT_MIN);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_48_0_2);\n+  __ mov64(r9, 0x8000000000000000);\n+  __ movdq(xmm2, r9);\n+  __ xorpd(xmm0, xmm2);\n+\n+  __ bind(L_2TAG_PACKET_48_0_2);\n+  __ movl(Address(rsp, 0), 25);\n+  __ jmp(L_2TAG_PACKET_17_0_2);\n+\n+  __ bind(L_2TAG_PACKET_13_0_2);\n+  __ pextrw(rcx, xmm5, 3);\n+  __ pextrw(rdx, xmm4, 3);\n+  __ movl(rax, -1);\n+  __ andl(rcx, 32752);\n+  __ subl(rcx, 16368);\n+  __ andl(rdx, 32752);\n+  __ addl(rdx, rcx);\n+  __ movl(rcx, -31);\n+  __ sarl(rdx, 4);\n+  __ subl(rcx, rdx);\n+  __ jcc(Assembler::lessEqual, L_2TAG_PACKET_49_0_2);\n+  __ cmpl(rcx, 20);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_50_0_2);\n+  __ shll(rax);\n+\n+  __ bind(L_2TAG_PACKET_49_0_2);\n+  __ movdl(xmm0, rax);\n+  __ psllq(xmm0, 32);\n+  __ pand(xmm0, xmm5);\n+  __ subsd(xmm5, xmm0);\n+  __ addsd(xmm5, xmm1);\n+  __ mulsd(xmm0, xmm4);\n+  __ mulsd(xmm5, xmm4);\n+  __ addsd(xmm0, xmm5);\n+\n+  __ bind(L_2TAG_PACKET_50_0_2);\n+  __ jmp(L_2TAG_PACKET_48_0_2);\n+\n+  __ bind(L_2TAG_PACKET_2_0_2);\n+  __ movw(rcx, Address(rsp, 22));\n+  __ movl(rdx, INT_MIN);\n+  __ movdl(xmm1, rdx);\n+  __ xorpd(xmm7, xmm7);\n+  __ paddd(xmm0, xmm4);\n+  __ movdl(rdx, xmm0);\n+  __ psllq(xmm0, 29);\n+  __ paddq(xmm1, xmm3);\n+  __ pand(xmm5, xmm1);\n+  __ andl(rcx, 32752);\n+  __ cmpl(rcx, 16560);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_3_0_2);\n+  __ pand(xmm0, xmm6);\n+  __ subsd(xmm3, xmm5);\n+  __ addl(rax, 16351);\n+  __ shrl(rax, 4);\n+  __ subl(rax, 1022);\n+  __ cvtsi2sdl(xmm7, rax);\n+  __ mulpd(xmm5, xmm0);\n+  __ lea(r11, ExternalAddress(L_tbl));\n+  __ movq(xmm4, ExternalAddress(coeff_h), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL\n+  __ mulsd(xmm3, xmm0);\n+  __ movq(xmm6, ExternalAddress(coeff_h), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xbfd61a00UL, 0x00000000UL, 0xbf5dabe1UL\n+  __ subsd(xmm5, xmm2);\n+  __ movq(xmm1, ExternalAddress(coeff_h + 8), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xbf5dabe1UL\n+  __ pshufd(xmm2, xmm3, 68);\n+  __ unpcklpd(xmm5, xmm3);\n+  __ addsd(xmm3, xmm5);\n+  __ movq(xmm0, ExternalAddress(coeff_h + 8), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xbf5dabe1UL\n+  __ andl(rdx, 16760832);\n+  __ shrl(rdx, 10);\n+  __ addpd(xmm7, Address(r11, rdx, Address::times_1, -3648));\n+  __ mulsd(xmm4, xmm5);\n+  __ mulsd(xmm0, xmm5);\n+  __ mulsd(xmm6, xmm2);\n+  __ mulsd(xmm1, xmm2);\n+  __ movdqu(xmm2, xmm5);\n+  __ mulsd(xmm4, xmm5);\n+  __ addsd(xmm5, xmm0);\n+  __ movdqu(xmm0, xmm7);\n+  __ addsd(xmm2, xmm3);\n+  __ addsd(xmm7, xmm5);\n+  __ mulsd(xmm6, xmm2);\n+  __ subsd(xmm0, xmm7);\n+  __ movdqu(xmm2, xmm7);\n+  __ addsd(xmm7, xmm4);\n+  __ addsd(xmm0, xmm5);\n+  __ subsd(xmm2, xmm7);\n+  __ addsd(xmm4, xmm2);\n+  __ pshufd(xmm2, xmm5, 238);\n+  __ movdqu(xmm5, xmm7);\n+  __ addsd(xmm7, xmm2);\n+  __ addsd(xmm4, xmm0);\n+  __ movdqu(xmm0, ExternalAddress(coeff), r9 \/*rscratch*\/);    \/\/0x6dc96112UL, 0xbf836578UL, 0xee241472UL, 0xbf9b0301UL\n+  __ subsd(xmm5, xmm7);\n+  __ addsd(xmm6, xmm4);\n+  __ movdqu(xmm4, xmm7);\n+  __ addsd(xmm5, xmm2);\n+  __ addsd(xmm7, xmm1);\n+  __ movdqu(xmm2, ExternalAddress(coeff + 64), r9 \/*rscratch*\/);    \/\/0x486ececcUL, 0x3fc4635eUL, 0x161bb241UL, 0xbf5dabe1UL\n+  __ subsd(xmm4, xmm7);\n+  __ addsd(xmm6, xmm5);\n+  __ addsd(xmm4, xmm1);\n+  __ pshufd(xmm5, xmm7, 238);\n+  __ movapd(xmm1, xmm7);\n+  __ addsd(xmm7, xmm5);\n+  __ subsd(xmm1, xmm7);\n+  __ addsd(xmm1, xmm5);\n+  __ movdqu(xmm5, ExternalAddress(coeff + 80), r9 \/*rscratch*\/);    \/\/0x9f95985aUL, 0xbfb528dbUL, 0xf8b5787dUL, 0x3ef2531eUL\n+  __ pshufd(xmm3, xmm3, 68);\n+  __ addsd(xmm6, xmm4);\n+  __ addsd(xmm6, xmm1);\n+  __ movdqu(xmm1, ExternalAddress(coeff + 32), r9 \/*rscratch*\/);    \/\/0x9f95985aUL, 0xbfb528dbUL, 0xb3841d2aUL, 0xbfd619b6UL\n+  __ mulpd(xmm0, xmm3);\n+  __ mulpd(xmm2, xmm3);\n+  __ pshufd(xmm4, xmm3, 68);\n+  __ mulpd(xmm3, xmm3);\n+  __ addpd(xmm0, xmm1);\n+  __ addpd(xmm5, xmm2);\n+  __ mulsd(xmm4, xmm3);\n+  __ movq(xmm2, ExternalAddress(HIGHMASK_LOG_X), r9 \/*rscratch*\/);    \/\/0xf8000000UL, 0xffffffffUL, 0x00000000UL, 0xfffff800UL\n+  __ mulpd(xmm3, xmm3);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movw(rcx, Address(rsp, 22));\n+  __ mulpd(xmm0, xmm4);\n+  __ pextrw(rax, xmm7, 3);\n+  __ mulpd(xmm5, xmm4);\n+  __ mulpd(xmm0, xmm3);\n+  __ movq(xmm4, ExternalAddress(HIGHMASK_Y + 8), r9 \/*rscratch*\/);    \/\/0x00000000UL, 0xffffffffUL\n+  __ pand(xmm2, xmm7);\n+  __ addsd(xmm5, xmm6);\n+  __ subsd(xmm7, xmm2);\n+  __ addpd(xmm5, xmm0);\n+  __ andl(rax, 32752);\n+  __ subl(rax, 16368);\n+  __ andl(rcx, 32752);\n+  __ cmpl(rcx, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_45_0_2);\n+  __ addl(rcx, rax);\n+  __ cmpl(rcx, 16576);\n+  __ jcc(Assembler::aboveEqual, L_2TAG_PACKET_51_0_2);\n+  __ pshufd(xmm0, xmm5, 238);\n+  __ pand(xmm4, xmm1);\n+  __ movdqu(xmm3, xmm1);\n+  __ addsd(xmm5, xmm0);\n+  __ subsd(xmm1, xmm4);\n+  __ xorpd(xmm6, xmm6);\n+  __ movl(rdx, 17080);\n+  __ pinsrw(xmm6, rdx, 3);\n+  __ addsd(xmm7, xmm5);\n+  __ mulsd(xmm4, xmm2);\n+  __ mulsd(xmm1, xmm2);\n+  __ movdqu(xmm5, xmm6);\n+  __ mulsd(xmm3, xmm7);\n+  __ addsd(xmm6, xmm4);\n+  __ addsd(xmm1, xmm3);\n+  __ movdqu(xmm7, ExternalAddress(e_coeff), r9 \/*rscratch*\/);    \/\/0xe78a6731UL, 0x3f55d87fUL, 0xd704a0c0UL, 0x3fac6b08UL\n+  __ movdl(rdx, xmm6);\n+  __ subsd(xmm6, xmm5);\n+  __ lea(r11, ExternalAddress(T_exp));\n+  __ movdqu(xmm3, ExternalAddress(e_coeff + 16), r9 \/*rscratch*\/);    \/\/0x6fba4e77UL, 0x3f83b2abUL, 0xff82c58fUL, 0x3fcebfbdUL\n+  __ movq(xmm2, ExternalAddress(e_coeff + 32), r9 \/*rscratch*\/);    \/\/0xfefa39efUL, 0x3fe62e42UL, 0x00000000UL, 0x00000000UL\n+  __ subsd(xmm4, xmm6);\n+  __ movl(rcx, rdx);\n+  __ andl(rdx, 255);\n+  __ addl(rdx, rdx);\n+  __ movdqu(xmm5, Address(r11, rdx, Address::times_8, 0));\n+  __ addsd(xmm4, xmm1);\n+  __ pextrw(rdx, xmm6, 3);\n+  __ shrl(rcx, 8);\n+  __ movl(rax, rcx);\n+  __ shrl(rcx, 1);\n+  __ subl(rax, rcx);\n+  __ shll(rcx, 20);\n+  __ movdl(xmm6, rcx);\n+  __ pshufd(xmm0, xmm4, 68);\n+  __ pshufd(xmm1, xmm4, 68);\n+  __ mulpd(xmm0, xmm0);\n+  __ mulpd(xmm7, xmm1);\n+  __ pshufd(xmm6, xmm6, 17);\n+  __ mulsd(xmm2, xmm4);\n+  __ andl(rdx, 32767);\n+  __ cmpl(rdx, 16529);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_12_0_2);\n+  __ mulsd(xmm0, xmm0);\n+  __ paddd(xmm5, xmm6);\n+  __ addpd(xmm3, xmm7);\n+  __ mulsd(xmm2, xmm5);\n+  __ pshufd(xmm6, xmm5, 238);\n+  __ mulpd(xmm0, xmm3);\n+  __ addsd(xmm2, xmm6);\n+  __ pshufd(xmm3, xmm0, 238);\n+  __ addl(rax, 1023);\n+  __ shll(rax, 20);\n+  __ orl(rax, r8);\n+  __ movdl(xmm4, rax);\n+  __ mulsd(xmm0, xmm5);\n+  __ mulsd(xmm3, xmm5);\n+  __ addsd(xmm0, xmm2);\n+  __ psllq(xmm4, 32);\n+  __ addsd(xmm0, xmm3);\n+  __ movdqu(xmm1, xmm0);\n+  __ addsd(xmm0, xmm5);\n+  __ mulsd(xmm0, xmm4);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_13_0_2);\n+  __ cmpl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_14_0_2);\n+\n+  __ bind(L_2TAG_PACKET_52_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_45_0_2);\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ xorpd(xmm2, xmm2);\n+  __ movl(rax, 49136);\n+  __ pinsrw(xmm2, rax, 3);\n+  __ addsd(xmm2, xmm0);\n+  __ pextrw(rax, xmm2, 3);\n+  __ cmpl(rax, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_53_0_2);\n+  __ xorpd(xmm0, xmm0);\n+  __ movl(rax, 32760);\n+  __ pinsrw(xmm0, rax, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_53_0_2);\n+  __ movq(xmm1, Address(rsp, 16));\n+  __ movdl(rdx, xmm1);\n+  __ movdqu(xmm3, xmm1);\n+  __ psrlq(xmm3, 20);\n+  __ movdl(rcx, xmm3);\n+  __ orl(rcx, rdx);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_54_0_2);\n+  __ addsd(xmm1, xmm1);\n+  __ movdqu(xmm0, xmm1);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_51_0_2);\n+  __ pextrw(rax, xmm1, 3);\n+  __ pextrw(rcx, xmm2, 3);\n+  __ xorl(rax, rcx);\n+  __ testl(rax, 32768);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_47_0_2);\n+  __ jmp(L_2TAG_PACKET_46_0_2);\n+\n+  __ bind(L_2TAG_PACKET_54_0_2);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32752);\n+  __ pextrw(rdx, xmm1, 3);\n+  __ xorpd(xmm0, xmm0);\n+  __ subl(rax, 16368);\n+  __ xorl(rax, rdx);\n+  __ testl(rax, 32768);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_55_0_2);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_55_0_2);\n+  __ movl(rdx, 32752);\n+  __ pinsrw(xmm0, rdx, 3);\n+  __ jmp(B1_5);\n+\n+  __ bind(L_2TAG_PACKET_17_0_2);\n+  __ movq(Address(rsp, 24), xmm0);\n+\n+  __ bind(B1_3);\n+  __ movq(xmm0, Address(rsp, 24));\n+\n+  __ bind(L_2TAG_PACKET_56_0_2);\n+\n+  __ bind(B1_5);\n+  __ addq(rsp, 40);\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_pow.cpp","additions":1865,"deletions":0,"binary":false,"changes":1865,"status":"added"},{"patch":"@@ -0,0 +1,651 @@\n+\/*\n+ * Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+ * Intel Math Library (LIBM) Source Code\n+ *\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - SIN()\n+\/\/                     ---------------------\n+\/\/\n+\/\/     1. RANGE REDUCTION\n+\/\/\n+\/\/     We perform an initial range reduction from X to r with\n+\/\/\n+\/\/          X =~= N * pi\/32 + r\n+\/\/\n+\/\/     so that |r| <= pi\/64 + epsilon. We restrict inputs to those\n+\/\/     where |N| <= 932560. Beyond this, the range reduction is\n+\/\/     insufficiently accurate. For extremely small inputs,\n+\/\/     denormalization can occur internally, impacting performance.\n+\/\/     This means that the main path is actually only taken for\n+\/\/     2^-252 <= |X| < 90112.\n+\/\/\n+\/\/     To avoid branches, we perform the range reduction to full\n+\/\/     accuracy each time.\n+\/\/\n+\/\/          X - N * (P_1 + P_2 + P_3)\n+\/\/\n+\/\/     where P_1 and P_2 are 32-bit numbers (so multiplication by N\n+\/\/     is exact) and P_3 is a 53-bit number. Together, these\n+\/\/     approximate pi well enough for all cases in the restricted\n+\/\/     range.\n+\/\/\n+\/\/     The main reduction sequence is:\n+\/\/\n+\/\/             y = 32\/pi * x\n+\/\/             N = integer(y)\n+\/\/     (computed by adding and subtracting off SHIFTER)\n+\/\/\n+\/\/             m_1 = N * P_1\n+\/\/             m_2 = N * P_2\n+\/\/             r_1 = x - m_1\n+\/\/             r = r_1 - m_2\n+\/\/     (this r can be used for most of the calculation)\n+\/\/\n+\/\/             c_1 = r_1 - r\n+\/\/             m_3 = N * P_3\n+\/\/             c_2 = c_1 - m_2\n+\/\/             c = c_2 - m_3\n+\/\/\n+\/\/     2. MAIN ALGORITHM\n+\/\/\n+\/\/     The algorithm uses a table lookup based on B = M * pi \/ 32\n+\/\/     where M = N mod 64. The stored values are:\n+\/\/       sigma             closest power of 2 to cos(B)\n+\/\/       C_hl              53-bit cos(B) - sigma\n+\/\/       S_hi + S_lo       2 * 53-bit sin(B)\n+\/\/\n+\/\/     The computation is organized as follows:\n+\/\/\n+\/\/          sin(B + r + c) = [sin(B) + sigma * r] +\n+\/\/                           r * (cos(B) - sigma) +\n+\/\/                           sin(B) * [cos(r + c) - 1] +\n+\/\/                           cos(B) * [sin(r + c) - r]\n+\/\/\n+\/\/     which is approximately:\n+\/\/\n+\/\/          [S_hi + sigma * r] +\n+\/\/          C_hl * r +\n+\/\/          S_lo + S_hi * [(cos(r) - 1) - r * c] +\n+\/\/          (C_hl + sigma) * [(sin(r) - r) + c]\n+\/\/\n+\/\/     and this is what is actually computed. We separate this sum\n+\/\/     into four parts:\n+\/\/\n+\/\/          hi + med + pols + corr\n+\/\/\n+\/\/     where\n+\/\/\n+\/\/          hi       = S_hi + sigma r\n+\/\/          med      = C_hl * r\n+\/\/          pols     = S_hi * (cos(r) - 1) + (C_hl + sigma) * (sin(r) - r)\n+\/\/          corr     = S_lo + c * ((C_hl + sigma) - S_hi * r)\n+\/\/\n+\/\/     3. POLYNOMIAL\n+\/\/\n+\/\/     The polynomial S_hi * (cos(r) - 1) + (C_hl + sigma) *\n+\/\/     (sin(r) - r) can be rearranged freely, since it is quite\n+\/\/     small, so we exploit parallelism to the fullest.\n+\/\/\n+\/\/          psc4       =   SC_4 * r_1\n+\/\/          msc4       =   psc4 * r\n+\/\/          r2         =   r * r\n+\/\/          msc2       =   SC_2 * r2\n+\/\/          r4         =   r2 * r2\n+\/\/          psc3       =   SC_3 + msc4\n+\/\/          psc1       =   SC_1 + msc2\n+\/\/          msc3       =   r4 * psc3\n+\/\/          sincospols =   psc1 + msc3\n+\/\/          pols       =   sincospols *\n+\/\/                         <S_hi * r^2 | (C_hl + sigma) * r^3>\n+\/\/\n+\/\/     4. CORRECTION TERM\n+\/\/\n+\/\/     This is where the \"c\" component of the range reduction is\n+\/\/     taken into account; recall that just \"r\" is used for most of\n+\/\/     the calculation.\n+\/\/\n+\/\/          -c   = m_3 - c_2\n+\/\/          -d   = S_hi * r - (C_hl + sigma)\n+\/\/          corr = -c * -d + S_lo\n+\/\/\n+\/\/     5. COMPENSATED SUMMATIONS\n+\/\/\n+\/\/     The two successive compensated summations add up the high\n+\/\/     and medium parts, leaving just the low parts to add up at\n+\/\/     the end.\n+\/\/\n+\/\/          rs        =  sigma * r\n+\/\/          res_int   =  S_hi + rs\n+\/\/          k_0       =  S_hi - res_int\n+\/\/          k_2       =  k_0 + rs\n+\/\/          med       =  C_hl * r\n+\/\/          res_hi    =  res_int + med\n+\/\/          k_1       =  res_int - res_hi\n+\/\/          k_3       =  k_1 + med\n+\/\/\n+\/\/     6. FINAL SUMMATION\n+\/\/\n+\/\/     We now add up all the small parts:\n+\/\/\n+\/\/          res_lo = pols(hi) + pols(lo) + corr + k_1 + k_3\n+\/\/\n+\/\/     Now the overall result is just:\n+\/\/\n+\/\/          res_hi + res_lo\n+\/\/\n+\/\/     7. SMALL ARGUMENTS\n+\/\/\n+\/\/     If |x| < SNN (SNN meaning the smallest normal number), we\n+\/\/     simply perform 0.1111111 cdots 1111 * x. For SNN <= |x|, we\n+\/\/     do 2^-55 * (2^55 * x - x).\n+\/\/\n+\/\/ Special cases:\n+\/\/  sin(NaN) = quiet NaN, and raise invalid exception\n+\/\/  sin(INF) = NaN and raise invalid exception\n+\/\/  sin(+\/-0) = +\/-0\n+\/\/\n+\/******************************************************************************\/\n+\n+\/\/ The 64 bit code is at most SSE2 compliant\n+ATTRIBUTE_ALIGNED(8) juint _ALL_ONES[] =\n+{\n+    0xffffffffUL, 0x3fefffffUL\n+};\n+\n+#define __ _masm->\n+\n+address StubGenerator::generate_libmSin() {\n+  StubCodeMark mark(this, \"StubRoutines\", \"libmSin\");\n+  address start = __ pc();\n+\n+  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1, L_2TAG_PACKET_3_0_1;\n+  Label L_2TAG_PACKET_4_0_1, L_2TAG_PACKET_5_0_1, L_2TAG_PACKET_6_0_1, L_2TAG_PACKET_7_0_1;\n+  Label L_2TAG_PACKET_8_0_1, L_2TAG_PACKET_9_0_1, L_2TAG_PACKET_10_0_1, L_2TAG_PACKET_11_0_1;\n+  Label L_2TAG_PACKET_13_0_1, L_2TAG_PACKET_14_0_1;\n+  Label L_2TAG_PACKET_12_0_1, B1_4;\n+\n+  address ALL_ONES = (address)_ALL_ONES;\n+\n+  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+#ifdef _WIN64\n+  __ push(rsi);\n+  __ push(rdi);\n+#endif\n+\n+  __ push(rbx);\n+  __ subq(rsp, 16);\n+  __ movsd(Address(rsp, 8), xmm0);\n+  __ movl(rax, Address(rsp, 12));\n+  __ movq(xmm1, ExternalAddress(PI32INV), r8 \/*rscratch*\/); \/\/0x6dc9c883UL, 0x40245f30UL\n+  __ movq(xmm2, ExternalAddress(SHIFTER), r8 \/*rscratch*\/); \/\/0x00000000UL, 0x43380000UL\n+  __ andl(rax, 2147418112);\n+  __ subl(rax, 808452096);\n+  __ cmpl(rax, 281346048);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_0_0_1);\n+  __ mulsd(xmm1, xmm0);\n+  __ movdqu(xmm5, ExternalAddress(ONEHALF), r8 \/*rscratch*\/); \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+  __ movq(xmm4, ExternalAddress(SIGN_MASK), r8 \/*rscratch*\/); \/\/0x00000000UL, 0x80000000UL\n+  __ pand(xmm4, xmm0);\n+  __ por(xmm5, xmm4);\n+  __ addpd(xmm1, xmm5);\n+  __ cvttsd2sil(rdx, xmm1);\n+  __ cvtsi2sdl(xmm1, rdx);\n+  __ movdqu(xmm6, ExternalAddress(P_2), r8 \/*rscratch*\/); \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n+  __ mov64(r8, 0x3fb921fb54400000);\n+  __ movdq(xmm3, r8);\n+  __ movdqu(xmm5, ExternalAddress(SC_4), r8 \/*rscratch*\/); \/\/0xa556c734UL, 0x3ec71de3UL, 0x1a01a01aUL, 0x3efa01a0UL\n+  __ pshufd(xmm4, xmm0, 68);\n+  __ mulsd(xmm3, xmm1);\n+  if (VM_Version::supports_sse3()) {\n+    __ movddup(xmm1, xmm1);\n+  } else {\n+    __ movlhps(xmm1, xmm1);\n+  }\n+  __ andl(rdx, 63);\n+  __ shll(rdx, 5);\n+  __ lea(rax, ExternalAddress(Ctable));\n+  __ addq(rax, rdx);\n+  __ mulpd(xmm6, xmm1);\n+  __ mulsd(xmm1, ExternalAddress(P_3), r8 \/*rscratch*\/); \/\/0x2e037073UL, 0x3b63198aUL\n+  __ subsd(xmm4, xmm3);\n+  __ movq(xmm7, Address(rax, 8));\n+  __ subsd(xmm0, xmm3);\n+  if (VM_Version::supports_sse3()) {\n+    __ movddup(xmm3, xmm4);\n+  } else {\n+    __ movdqu(xmm3, xmm4);\n+    __ movlhps(xmm3, xmm3);\n+  }\n+  __ subsd(xmm4, xmm6);\n+  __ pshufd(xmm0, xmm0, 68);\n+  __ movdqu(xmm2, Address(rax, 0));\n+  __ mulpd(xmm5, xmm0);\n+  __ subpd(xmm0, xmm6);\n+  __ mulsd(xmm7, xmm4);\n+  __ subsd(xmm3, xmm4);\n+  __ mulpd(xmm5, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ subsd(xmm3, xmm6);\n+  __ movdqu(xmm6, ExternalAddress(SC_2), r8 \/*rscratch*\/); \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n+  __ subsd(xmm1, xmm3);\n+  __ movq(xmm3, Address(rax, 24));\n+  __ addsd(xmm2, xmm3);\n+  __ subsd(xmm7, xmm2);\n+  __ mulsd(xmm2, xmm4);\n+  __ mulpd(xmm6, xmm0);\n+  __ mulsd(xmm3, xmm4);\n+  __ mulpd(xmm2, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm5, ExternalAddress(SC_3), r8 \/*rscratch*\/); \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n+  __ mulsd(xmm4, Address(rax, 0));\n+  __ addpd(xmm6, ExternalAddress(SC_1), r8 \/*rscratch*\/); \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n+  __ mulpd(xmm5, xmm0);\n+  __ movdqu(xmm0, xmm3);\n+  __ addsd(xmm3, Address(rax, 8));\n+  __ mulpd(xmm1, xmm7);\n+  __ movdqu(xmm7, xmm4);\n+  __ addsd(xmm4, xmm3);\n+  __ addpd(xmm6, xmm5);\n+  __ movq(xmm5, Address(rax, 8));\n+  __ subsd(xmm5, xmm3);\n+  __ subsd(xmm3, xmm4);\n+  __ addsd(xmm1, Address(rax, 16));\n+  __ mulpd(xmm6, xmm2);\n+  __ addsd(xmm5, xmm0);\n+  __ addsd(xmm3, xmm7);\n+  __ addsd(xmm1, xmm5);\n+  __ addsd(xmm1, xmm3);\n+  __ addsd(xmm1, xmm6);\n+  __ unpckhpd(xmm6, xmm6);\n+  __ movdqu(xmm0, xmm4);\n+  __ addsd(xmm1, xmm6);\n+  __ addsd(xmm0, xmm1);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_0_0_1);\n+  __ jcc(Assembler::greater, L_2TAG_PACKET_1_0_1);\n+  __ shrl(rax, 20);\n+  __ cmpl(rax, 3325);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_2_0_1);\n+  __ mulsd(xmm0, ExternalAddress(ALL_ONES), r8 \/*rscratch*\/); \/\/0xffffffffUL, 0x3fefffffUL\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_2_0_1);\n+  __ movq(xmm3, ExternalAddress(TWO_POW_55), r8 \/*rscratch*\/); \/\/0x00000000UL, 0x43600000UL\n+  __ mulsd(xmm3, xmm0);\n+  __ subsd(xmm3, xmm0);\n+  __ mulsd(xmm3, ExternalAddress(TWO_POW_M55), r8 \/*rscratch*\/); \/\/0x00000000UL, 0x3c800000UL\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_1_0_1);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32752);\n+  __ cmpl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_3_0_1);\n+  __ pextrw(rcx, xmm0, 3);\n+  __ andl(rcx, 32752);\n+  __ subl(rcx, 16224);\n+  __ shrl(rcx, 7);\n+  __ andl(rcx, 65532);\n+  __ lea(r11, ExternalAddress(PI_INV_TABLE));\n+  __ addq(rcx, r11);\n+  __ movdq(rax, xmm0);\n+  __ movl(r10, Address(rcx, 20));\n+  __ movl(r8, Address(rcx, 24));\n+  __ movl(rdx, rax);\n+  __ shrq(rax, 21);\n+  __ orl(rax, INT_MIN);\n+  __ shrl(rax, 11);\n+  __ movl(r9, r10);\n+  __ imulq(r10, rdx);\n+  __ imulq(r9, rax);\n+  __ imulq(r8, rax);\n+  __ movl(rsi, Address(rcx, 16));\n+  __ movl(rdi, Address(rcx, 12));\n+  __ movl(r11, r10);\n+  __ shrq(r10, 32);\n+  __ addq(r9, r10);\n+  __ addq(r11, r8);\n+  __ movl(r8, r11);\n+  __ shrq(r11, 32);\n+  __ addq(r9, r11);\n+  __ movl(r10, rsi);\n+  __ imulq(rsi, rdx);\n+  __ imulq(r10, rax);\n+  __ movl(r11, rdi);\n+  __ imulq(rdi, rdx);\n+  __ movl(rbx, rsi);\n+  __ shrq(rsi, 32);\n+  __ addq(r9, rbx);\n+  __ movl(rbx, r9);\n+  __ shrq(r9, 32);\n+  __ addq(r10, rsi);\n+  __ addq(r10, r9);\n+  __ shlq(rbx, 32);\n+  __ orq(r8, rbx);\n+  __ imulq(r11, rax);\n+  __ movl(r9, Address(rcx, 8));\n+  __ movl(rsi, Address(rcx, 4));\n+  __ movl(rbx, rdi);\n+  __ shrq(rdi, 32);\n+  __ addq(r10, rbx);\n+  __ movl(rbx, r10);\n+  __ shrq(r10, 32);\n+  __ addq(r11, rdi);\n+  __ addq(r11, r10);\n+  __ movq(rdi, r9);\n+  __ imulq(r9, rdx);\n+  __ imulq(rdi, rax);\n+  __ movl(r10, r9);\n+  __ shrq(r9, 32);\n+  __ addq(r11, r10);\n+  __ movl(r10, r11);\n+  __ shrq(r11, 32);\n+  __ addq(rdi, r9);\n+  __ addq(rdi, r11);\n+  __ movq(r9, rsi);\n+  __ imulq(rsi, rdx);\n+  __ imulq(r9, rax);\n+  __ shlq(r10, 32);\n+  __ orq(r10, rbx);\n+  __ movl(rax, Address(rcx, 0));\n+  __ movl(r11, rsi);\n+  __ shrq(rsi, 32);\n+  __ addq(rdi, r11);\n+  __ movl(r11, rdi);\n+  __ shrq(rdi, 32);\n+  __ addq(r9, rsi);\n+  __ addq(r9, rdi);\n+  __ imulq(rdx, rax);\n+  __ pextrw(rbx, xmm0, 3);\n+  __ lea(rdi, ExternalAddress(PI_INV_TABLE));\n+  __ subq(rcx, rdi);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, 19);\n+  __ movl(rsi, 32768);\n+  __ andl(rsi, rbx);\n+  __ shrl(rbx, 4);\n+  __ andl(rbx, 2047);\n+  __ subl(rbx, 1023);\n+  __ subl(rcx, rbx);\n+  __ addq(r9, rdx);\n+  __ movl(rdx, rcx);\n+  __ addl(rdx, 32);\n+  __ cmpl(rcx, 1);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_4_0_1);\n+  __ negl(rcx);\n+  __ addl(rcx, 29);\n+  __ shll(r9);\n+  __ movl(rdi, r9);\n+  __ andl(r9, 536870911);\n+  __ testl(r9, 268435456);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_5_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 0);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+\n+  __ bind(L_2TAG_PACKET_6_0_1);\n+\n+  __ bind(L_2TAG_PACKET_7_0_1);\n+\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_8_0_1);\n+\n+  __ bind(L_2TAG_PACKET_9_0_1);\n+  __ bsrq(r11, r9);\n+  __ movl(rcx, 29);\n+  __ subl(rcx, r11);\n+  __ jcc(Assembler::lessEqual, L_2TAG_PACKET_10_0_1);\n+  __ shlq(r9);\n+  __ movq(rax, r10);\n+  __ shlq(r10);\n+  __ addl(rdx, rcx);\n+  __ negl(rcx);\n+  __ addl(rcx, 64);\n+  __ shrq(rax);\n+  __ shrq(r8);\n+  __ orq(r9, rax);\n+  __ orq(r10, r8);\n+\n+  __ bind(L_2TAG_PACKET_11_0_1);\n+  __ cvtsi2sdq(xmm0, r9);\n+  __ shrq(r10, 1);\n+  __ cvtsi2sdq(xmm3, r10);\n+  __ xorpd(xmm4, xmm4);\n+  __ shll(rdx, 4);\n+  __ negl(rdx);\n+  __ addl(rdx, 16368);\n+  __ orl(rdx, rsi);\n+  __ xorl(rdx, rbx);\n+  __ pinsrw(xmm4, rdx, 3);\n+  __ movq(xmm2, ExternalAddress(PI_4),     r8 \/*rscratch*\/); \/\/0x40000000UL, 0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n+  __ movq(xmm6, ExternalAddress(PI_4 + 8), r8 \/*rscratch*\/); \/\/0x3fe921fbUL, 0x18469899UL, 0x3e64442dUL\n+  __ xorpd(xmm5, xmm5);\n+  __ subl(rdx, 1008);\n+  __ pinsrw(xmm5, rdx, 3);\n+  __ mulsd(xmm0, xmm4);\n+  __ shll(rsi, 16);\n+  __ sarl(rsi, 31);\n+  __ mulsd(xmm3, xmm5);\n+  __ movdqu(xmm1, xmm0);\n+  __ mulsd(xmm0, xmm2);\n+  __ shrl(rdi, 29);\n+  __ addsd(xmm1, xmm3);\n+  __ mulsd(xmm3, xmm2);\n+  __ addl(rdi, rsi);\n+  __ xorl(rdi, rsi);\n+  __ mulsd(xmm6, xmm1);\n+  __ movl(rax, rdi);\n+  __ addsd(xmm6, xmm3);\n+  __ movdqu(xmm2, xmm0);\n+  __ addsd(xmm0, xmm6);\n+  __ subsd(xmm2, xmm0);\n+  __ addsd(xmm6, xmm2);\n+\n+  __ bind(L_2TAG_PACKET_12_0_1);\n+  __ movq(xmm1, ExternalAddress(PI32INV), r8 \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x40245f30UL\n+  __ mulsd(xmm1, xmm0);\n+  __ movq(xmm5, ExternalAddress(ONEHALF), r8 \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+  __ movq(xmm4, ExternalAddress(SIGN_MASK), r8 \/*rscratch*\/);  \/\/0x00000000UL, 0x80000000UL\n+  __ pand(xmm4, xmm0);\n+  __ por(xmm5, xmm4);\n+  __ addpd(xmm1, xmm5);\n+  __ cvttsd2sil(rdx, xmm1);\n+  __ cvtsi2sdl(xmm1, rdx);\n+  __ movq(xmm3, ExternalAddress(P_1), r8 \/*rscratch*\/);      \/\/0x54400000UL, 0x3fb921fbUL\n+  __ movdqu(xmm2, ExternalAddress(P_2), r8 \/*rscratch*\/);    \/\/0x1a600000UL, 0x3d90b461UL, 0x1a600000UL, 0x3d90b461UL\n+  __ mulsd(xmm3, xmm1);\n+  __ unpcklpd(xmm1, xmm1);\n+  __ shll(rax, 3);\n+  __ addl(rdx, 1865216);\n+  __ movdqu(xmm4, xmm0);\n+  __ addl(rdx, rax);\n+  __ andl(rdx, 63);\n+  __ movdqu(xmm5, ExternalAddress(SC_4), r8 \/*rscratch*\/);    \/\/0x54400000UL, 0x3fb921fbUL\n+  __ lea(rax, ExternalAddress(Ctable));\n+  __ shll(rdx, 5);\n+  __ addq(rax, rdx);\n+  __ mulpd(xmm2, xmm1);\n+  __ subsd(xmm0, xmm3);\n+  __ mulsd(xmm1, ExternalAddress(P_3), r8 \/*rscratch*\/);    \/\/0x2e037073UL, 0x3b63198aUL\n+  __ subsd(xmm4, xmm3);\n+  __ movq(xmm7, Address(rax, 8));\n+  __ unpcklpd(xmm0, xmm0);\n+  __ movdqu(xmm3, xmm4);\n+  __ subsd(xmm4, xmm2);\n+  __ mulpd(xmm5, xmm0);\n+  __ subpd(xmm0, xmm2);\n+  __ mulsd(xmm7, xmm4);\n+  __ subsd(xmm3, xmm4);\n+  __ mulpd(xmm5, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ subsd(xmm3, xmm2);\n+  __ movdqu(xmm2, Address(rax, 0));\n+  __ subsd(xmm1, xmm3);\n+  __ movq(xmm3, Address(rax, 24));\n+  __ addsd(xmm2, xmm3);\n+  __ subsd(xmm7, xmm2);\n+  __ subsd(xmm1, xmm6);\n+  __ movdqu(xmm6, ExternalAddress(SC_2), r8 \/*rscratch*\/);    \/\/0x11111111UL, 0x3f811111UL, 0x55555555UL, 0x3fa55555UL\n+  __ mulsd(xmm2, xmm4);\n+  __ mulpd(xmm6, xmm0);\n+  __ mulsd(xmm3, xmm4);\n+  __ mulpd(xmm2, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm5, ExternalAddress(SC_3), r8 \/*rscratch*\/);    \/\/0x1a01a01aUL, 0xbf2a01a0UL, 0x16c16c17UL, 0xbf56c16cUL\n+  __ mulsd(xmm4, Address(rax, 0));\n+  __ addpd(xmm6, ExternalAddress(SC_1), r8 \/*rscratch*\/);    \/\/0x55555555UL, 0xbfc55555UL, 0x00000000UL, 0xbfe00000UL\n+  __ mulpd(xmm5, xmm0);\n+  __ movdqu(xmm0, xmm3);\n+  __ addsd(xmm3, Address(rax, 8));\n+  __ mulpd(xmm1, xmm7);\n+  __ movdqu(xmm7, xmm4);\n+  __ addsd(xmm4, xmm3);\n+  __ addpd(xmm6, xmm5);\n+  __ movq(xmm5, Address(rax, 8));\n+  __ subsd(xmm5, xmm3);\n+  __ subsd(xmm3, xmm4);\n+  __ addsd(xmm1, Address(rax, 16));\n+  __ mulpd(xmm6, xmm2);\n+  __ addsd(xmm5, xmm0);\n+  __ addsd(xmm3, xmm7);\n+  __ addsd(xmm1, xmm5);\n+  __ addsd(xmm1, xmm3);\n+  __ addsd(xmm1, xmm6);\n+  __ unpckhpd(xmm6, xmm6);\n+  __ movdqu(xmm0, xmm4);\n+  __ addsd(xmm1, xmm6);\n+  __ addsd(xmm0, xmm1);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_8_0_1);\n+  __ addl(rdx, 64);\n+  __ movq(r9, r10);\n+  __ movq(r10, r8);\n+  __ movl(r8, 0);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_9_0_1);\n+  __ addl(rdx, 64);\n+  __ movq(r9, r10);\n+  __ movq(r10, r8);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_9_0_1);\n+  __ xorpd(xmm0, xmm0);\n+  __ xorpd(xmm6, xmm6);\n+  __ jmp(L_2TAG_PACKET_12_0_1);\n+\n+  __ bind(L_2TAG_PACKET_10_0_1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_11_0_1);\n+  __ negl(rcx);\n+  __ shrq(r10);\n+  __ movq(rax, r9);\n+  __ shrq(r9);\n+  __ subl(rdx, rcx);\n+  __ negl(rcx);\n+  __ addl(rcx, 64);\n+  __ shlq(rax);\n+  __ orq(r10, rax);\n+  __ jmp(L_2TAG_PACKET_11_0_1);\n+\n+  __ bind(L_2TAG_PACKET_4_0_1);\n+  __ negl(rcx);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+  __ shlq(r9);\n+  __ movq(rdi, r9);\n+  __ testl(r9, INT_MIN);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_13_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 0);\n+  __ shrq(rdi, 3);\n+  __ jmp(L_2TAG_PACKET_7_0_1);\n+\n+  __ bind(L_2TAG_PACKET_5_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 536870912);\n+  __ shrl(rbx);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+  __ shlq(rbx, 32);\n+  __ addl(rdi, 536870912);\n+  __ movl(rcx, 0);\n+  __ movl(r11, 0);\n+  __ subq(rcx, r8);\n+  __ sbbq(r11, r10);\n+  __ sbbq(rbx, r9);\n+  __ movq(r8, rcx);\n+  __ movq(r10, r11);\n+  __ movq(r9, rbx);\n+  __ movl(rbx, 32768);\n+  __ jmp(L_2TAG_PACKET_6_0_1);\n+\n+  __ bind(L_2TAG_PACKET_13_0_1);\n+  __ shrl(r9);\n+  __ mov64(rbx, 0x100000000);\n+  __ shrq(rbx);\n+  __ movl(rcx, 0);\n+  __ movl(r11, 0);\n+  __ subq(rcx, r8);\n+  __ sbbq(r11, r10);\n+  __ sbbq(rbx, r9);\n+  __ movq(r8, rcx);\n+  __ movq(r10, r11);\n+  __ movq(r9, rbx);\n+  __ movl(rbx, 32768);\n+  __ shrq(rdi, 3);\n+  __ addl(rdi, 536870912);\n+  __ jmp(L_2TAG_PACKET_7_0_1);\n+\n+  __ bind(L_2TAG_PACKET_3_0_1);\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ mulsd(xmm0, ExternalAddress(NEG_ZERO), r8 \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n+  __ movq(Address(rsp, 0), xmm0);\n+\n+  __ bind(L_2TAG_PACKET_14_0_1);\n+\n+  __ bind(B1_4);\n+  __ addq(rsp, 16);\n+  __ pop(rbx);\n+\n+#ifdef _WIN64\n+  __ pop(rdi);\n+  __ pop(rsi);\n+#endif\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_sin.cpp","additions":651,"deletions":0,"binary":false,"changes":651,"status":"added"},{"patch":"@@ -0,0 +1,1031 @@\n+\/*\n+* Copyright (c) 2016, 2021, Intel Corporation. All rights reserved.\n+* Intel Math Library (LIBM) Source Code\n+*\n+* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+*\n+* This code is free software; you can redistribute it and\/or modify it\n+* under the terms of the GNU General Public License version 2 only, as\n+* published by the Free Software Foundation.\n+*\n+* This code is distributed in the hope that it will be useful, but WITHOUT\n+* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+* version 2 for more details (a copy is included in the LICENSE file that\n+* accompanied this code).\n+*\n+* You should have received a copy of the GNU General Public License version\n+* 2 along with this work; if not, write to the Free Software Foundation,\n+* Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+*\n+* Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+* or visit www.oracle.com if you need additional information or have any\n+* questions.\n+*\n+*\/\n+\n+#include \"precompiled.hpp\"\n+#include \"macroAssembler_x86.hpp\"\n+#include \"stubGenerator_x86_64.hpp\"\n+\n+\/******************************************************************************\/\n+\/\/                     ALGORITHM DESCRIPTION - TAN()\n+\/\/                     ---------------------\n+\/\/\n+\/\/ Polynomials coefficients and other constants.\n+\/\/\n+\/\/ Note that in this algorithm, there is a different polynomial for\n+\/\/ each breakpoint, so there are 32 sets of polynomial coefficients\n+\/\/ as well as 32 instances of the other constants.\n+\/\/\n+\/\/ The polynomial coefficients and constants are offset from the start\n+\/\/ of the main block as follows:\n+\/\/\n+\/\/   0:  c8 | c0\n+\/\/  16:  c9 | c1\n+\/\/  32: c10 | c2\n+\/\/  48: c11 | c3\n+\/\/  64: c12 | c4\n+\/\/  80: c13 | c5\n+\/\/  96: c14 | c6\n+\/\/ 112: c15 | c7\n+\/\/ 128: T_hi\n+\/\/ 136: T_lo\n+\/\/ 144: Sigma\n+\/\/ 152: T_hl\n+\/\/ 160: Tau\n+\/\/ 168: Mask\n+\/\/ 176: (end of block)\n+\/\/\n+\/\/ The total table size is therefore 5632 bytes.\n+\/\/\n+\/\/ Note that c0 and c1 are always zero. We could try storing\n+\/\/ other constants here, and just loading the low part of the\n+\/\/ SIMD register in these cases, after ensuring the high part\n+\/\/ is zero.\n+\/\/\n+\/\/ The higher terms of the polynomial are computed in the *low*\n+\/\/ part of the SIMD register. This is so we can overlap the\n+\/\/ multiplication by r^8 and the unpacking of the other part.\n+\/\/\n+\/\/ The constants are:\n+\/\/ T_hi + T_lo = accurate constant term in power series\n+\/\/ Sigma + T_hl = accurate coefficient of r in power series (Sigma=1 bit)\n+\/\/ Tau = multiplier for the reciprocal, always -1 or 0\n+\/\/\n+\/\/ The basic reconstruction formula using these constants is:\n+\/\/\n+\/\/ High = tau * recip_hi + t_hi\n+\/\/ Med = (sgn * r + t_hl * r)_hi\n+\/\/ Low = (sgn * r + t_hl * r)_lo +\n+\/\/       tau * recip_lo + T_lo + (T_hl + sigma) * c + pol\n+\/\/\n+\/\/ where pol = c0 + c1 * r + c2 * r^2 + ... + c15 * r^15\n+\/\/\n+\/\/ (c0 = c1 = 0, but using them keeps SIMD regularity)\n+\/\/\n+\/\/ We then do a compensated sum High + Med, add the low parts together\n+\/\/ and then do the final sum.\n+\/\/\n+\/\/ Here recip_hi + recip_lo is an accurate reciprocal of the remainder\n+\/\/ modulo pi\/2\n+\/\/\n+\/\/ Special cases:\n+\/\/  tan(NaN) = quiet NaN, and raise invalid exception\n+\/\/  tan(INF) = NaN and raise invalid exception\n+\/\/  tan(+\/-0) = +\/-0\n+\/\/\n+\/******************************************************************************\/\n+\n+ATTRIBUTE_ALIGNED(16) juint _MUL16[] =\n+{\n+    0x00000000UL, 0x40300000UL, 0x00000000UL, 0x3ff00000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _sign_mask_tan[] =\n+{\n+    0x00000000UL, 0x80000000UL, 0x00000000UL, 0x80000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _PI32INV_tan[] =\n+{\n+    0x6dc9c883UL, 0x3fe45f30UL, 0x6dc9c883UL, 0x40245f30UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _P_1_tan[] =\n+{\n+    0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _P_2_tan[] =\n+{\n+    0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _P_3_tan[] =\n+{\n+    0x3707344aUL, 0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _Ctable_tan[] =\n+{\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x882c10faUL,\n+    0x3f9664f4UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x55e6c23dUL, 0x3f8226e3UL, 0x55555555UL,\n+    0x3fd55555UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x0e157de0UL, 0x3f6d6d3dUL, 0x11111111UL, 0x3fc11111UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x452b75e3UL, 0x3f57da36UL,\n+    0x1ba1ba1cUL, 0x3faba1baUL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n+    0x3f953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n+    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0x3f85ad63UL, 0xdc230b9bUL,\n+    0x3fb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n+    0x77bb08baUL, 0x3f757c85UL, 0xb6247521UL, 0x3fb1381eUL, 0x5922170cUL,\n+    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0x3f64e391UL,\n+    0x3e666320UL, 0x3fa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n+    0x3fafa8aeUL, 0x8c5b2da2UL, 0x3fb936bbUL, 0x4e88f7a5UL, 0x3c587d05UL,\n+    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x5a279ea3UL, 0x3faa3407UL,\n+    0x00000000UL, 0x00000000UL, 0x432d65faUL, 0x3fa70153UL, 0x00000000UL,\n+    0x00000000UL, 0x891a4602UL, 0x3f9d03efUL, 0xd62ca5f8UL, 0x3fca77d9UL,\n+    0xb35f4628UL, 0x3f97a265UL, 0x433258faUL, 0x3fd8cf51UL, 0xb58fd909UL,\n+    0x3f8f88e3UL, 0x01771ceaUL, 0x3fc2b154UL, 0xf3562f8eUL, 0x3f888f57UL,\n+    0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL, 0x3f80f44cUL, 0x214368e9UL,\n+    0x3fb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL, 0x172dbbf0UL, 0x3fb6cb8eUL,\n+    0xe0553158UL, 0x3fc975f5UL, 0x593fe814UL, 0x3c2ef5d3UL, 0x00000000UL,\n+    0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x9314533eUL, 0x3fbb8ec5UL, 0x00000000UL,\n+    0x00000000UL, 0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL,\n+    0xdcb427fdUL, 0x3fb13950UL, 0xd87ab0bbUL, 0x3fd5335eUL, 0xce0ae8a5UL,\n+    0x3fabb382UL, 0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0x3fa552f1UL,\n+    0x59f21a6dUL, 0x3fd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL,\n+    0x3fd0576cUL, 0x8f2c2950UL, 0x3f9a4898UL, 0xc0b3f22cUL, 0x3fc59462UL,\n+    0x1883a4b8UL, 0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL,\n+    0x3fd36a08UL, 0x1dce993dUL, 0xbc6d704dUL, 0x00000000UL, 0x3ff00000UL,\n+    0x2b82ab63UL, 0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x56f37042UL, 0x3fccfc56UL, 0x00000000UL, 0x00000000UL,\n+    0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL, 0x3d0e7c5dUL,\n+    0x3fc50533UL, 0x9bed9b2eUL, 0x3fdf0ed9UL, 0x5fe7c47cUL, 0x3fc1f250UL,\n+    0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0x3fbe5c71UL, 0x86362c20UL,\n+    0x3fda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL, 0x3fd911bdUL,\n+    0xb56658beUL, 0x3fb5e4c7UL, 0x93a2fd76UL, 0x3fd3c092UL, 0xda271794UL,\n+    0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL, 0x3fda8279UL,\n+    0xb68c1467UL, 0x3c708b2fUL, 0x00000000UL, 0x3ff00000UL, 0x980c4337UL,\n+    0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0xcc03e501UL, 0x3fdff10fUL, 0x00000000UL, 0x00000000UL, 0x44a4e845UL,\n+    0x3fddb63bUL, 0x00000000UL, 0x00000000UL, 0x3768ad9fUL, 0x3fdb72a4UL,\n+    0x3dd01ccaUL, 0x3fe5fdb9UL, 0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL,\n+    0x3fe977f9UL, 0xd013b3abUL, 0x3fd78ca3UL, 0xbf0bf914UL, 0x3fe4f192UL,\n+    0x4d53e730UL, 0x3fd5d060UL, 0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL,\n+    0x3fd4322aUL, 0x5936a835UL, 0x3fe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL,\n+    0xef478605UL, 0x3fe1659eUL, 0x190834ecUL, 0x3fe11ab7UL, 0xcdb625eaUL,\n+    0xbc8e564bUL, 0x00000000UL, 0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n+    0x3ff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n+    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0x3ff3972eUL, 0xe93463bdUL,\n+    0x3feeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n+    0xa04e8ea3UL, 0x3ff4541aUL, 0x386accd3UL, 0x3ff1369eUL, 0x222a66ddUL,\n+    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0x3ff5178fUL,\n+    0xddaa0031UL, 0x3ff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n+    0x3ff29311UL, 0x2ab7f990UL, 0x3fe561b8UL, 0x209c7df1UL, 0x3c87a8c5UL,\n+    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc7ab4d5aUL, 0x40085e24UL,\n+    0x00000000UL, 0x00000000UL, 0xe93ea75dUL, 0x400b963dUL, 0x00000000UL,\n+    0x00000000UL, 0x94a7f25aUL, 0x400f37e2UL, 0x4b6261cbUL, 0x3ff5f984UL,\n+    0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL, 0x3ffaf5a5UL, 0x7f2ce8e3UL,\n+    0x4013fe8bUL, 0xfe8e54faUL, 0x3ffd7334UL, 0x670d618dUL, 0x4016a10cUL,\n+    0x4db97058UL, 0x4000e012UL, 0x24df44ddUL, 0x40199c5fUL, 0x697d6eceUL,\n+    0x4003006eUL, 0x83298b82UL, 0x401cfc4dUL, 0x19d490d6UL, 0x40058c19UL,\n+    0x2ae42850UL, 0x3fea4300UL, 0x118e20e6UL, 0xbc7a6db8UL, 0x00000000UL,\n+    0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x65965966UL, 0x40219659UL, 0x00000000UL,\n+    0x00000000UL, 0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL,\n+    0x83cd3723UL, 0x402c8342UL, 0x00000000UL, 0x40000000UL, 0x55e6c23dUL,\n+    0x403226e3UL, 0x55555555UL, 0x40055555UL, 0x34451939UL, 0x40371c96UL,\n+    0xaaaaaaabUL, 0x400aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL,\n+    0x40111111UL, 0xa738201fUL, 0x4042bbceUL, 0x05b05b06UL, 0x4015b05bUL,\n+    0x452b75e3UL, 0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x4f48b8d3UL, 0xbf33eaf9UL, 0x00000000UL, 0x00000000UL,\n+    0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL, 0xd0258911UL,\n+    0xbf0abaf3UL, 0x23e49fe9UL, 0xbfab5a8cUL, 0x2d53222eUL, 0x3ef60d15UL,\n+    0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0xbee1d3b5UL, 0xdbf93b8eUL,\n+    0xbf84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL, 0x3f743924UL,\n+    0x794a8297UL, 0xbeb7b7b9UL, 0xe015f797UL, 0xbf5d41f5UL, 0xe41a4a56UL,\n+    0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL, 0xbfce49ceUL,\n+    0x8c743719UL, 0x3d1eb860UL, 0x00000000UL, 0x00000000UL, 0x1b4863cfUL,\n+    0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n+    0x535ad890UL, 0xbf2b9320UL, 0x00000000UL, 0x00000000UL, 0x018fdf1fUL,\n+    0x3f16d61dUL, 0x00000000UL, 0x00000000UL, 0x0359f1beUL, 0xbf0139e4UL,\n+    0xa4317c6dUL, 0xbfa67e17UL, 0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL,\n+    0x3f9f455bUL, 0x51ccf238UL, 0xbed55317UL, 0xf437b9acUL, 0xbf804beeUL,\n+    0xc791a2b5UL, 0x3ec0e993UL, 0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL,\n+    0xbeaa48a2UL, 0x0a268358UL, 0xbf55a443UL, 0xdfd978e4UL, 0x3e94b61fUL,\n+    0xd7767a58UL, 0x3f431806UL, 0x2aea0000UL, 0xbfc9bbe8UL, 0x7723ea61UL,\n+    0xbd3a2369UL, 0x00000000UL, 0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n+    0xbf231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n+    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0xbef66191UL, 0x848a46c6UL,\n+    0xbfa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n+    0xfdd299efUL, 0xbec9dd1aUL, 0x3f8dbaafUL, 0xbf793363UL, 0x309fc6eaUL,\n+    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0xbe9dae11UL,\n+    0x3e5c67b3UL, 0xbf4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n+    0x3f3d1eb1UL, 0x29cfc000UL, 0xbfc549ceUL, 0xbf159358UL, 0xbd397b33UL,\n+    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x7d98a556UL, 0xbf1a3958UL,\n+    0x00000000UL, 0x00000000UL, 0x9d88dc01UL, 0x3f0704c2UL, 0x00000000UL,\n+    0x00000000UL, 0x73742a2bUL, 0xbeed054aUL, 0x58844587UL, 0xbf9c2a13UL,\n+    0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL, 0x3f9a48f4UL, 0xa8dc9888UL,\n+    0xbebf8939UL, 0xaad4b5b8UL, 0xbf72f746UL, 0x9102efa1UL, 0x3ea88f82UL,\n+    0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL, 0xbe90f456UL, 0x741fb4edUL,\n+    0xbf46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL, 0xca89ff3fUL, 0x3f36db70UL,\n+    0xa8a2a000UL, 0xbfc0ee13UL, 0x3da24be1UL, 0xbd338b9fUL, 0x00000000UL,\n+    0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0xfffffff8UL, 0x1a154b97UL, 0xbf116b01UL, 0x00000000UL,\n+    0x00000000UL, 0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL,\n+    0xb93820c8UL, 0xbee264d4UL, 0xbb6cbb18UL, 0xbf94ab8cUL, 0x888d4d92UL,\n+    0x3ed0568bUL, 0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0xbeb2f950UL,\n+    0x22cf9f74UL, 0xbf6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL,\n+    0x3f64aad7UL, 0x637b73afUL, 0xbe83487cUL, 0xe522591aUL, 0xbf3fc092UL,\n+    0xa158e8bcUL, 0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL,\n+    0xbfb9477fUL, 0xc2c2d2bcUL, 0xbd135ef9UL, 0x00000000UL, 0x00000000UL,\n+    0xf2fdb123UL, 0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n+    0xfffffff8UL, 0xc41acb64UL, 0xbf05448dUL, 0x00000000UL, 0x00000000UL,\n+    0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL, 0x9e42962dUL,\n+    0xbed5aea5UL, 0x2579f8efUL, 0xbf8b2398UL, 0x288a1ed9UL, 0x3ec81441UL,\n+    0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0xbea57cd3UL, 0x5766336fUL,\n+    0xbf617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL, 0x3f62c646UL,\n+    0x6b8fb29cUL, 0xbe74e3a3UL, 0xdc4c0409UL, 0xbf33f952UL, 0x9bffe365UL,\n+    0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL, 0xbfb0cc62UL,\n+    0x016b907fUL, 0xbd119cbcUL, 0x00000000UL, 0x00000000UL, 0xe6b9d8faUL,\n+    0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n+    0x5daf22a6UL, 0xbef429d7UL, 0x00000000UL, 0x00000000UL, 0x06bca545UL,\n+    0x3ef7a27dUL, 0x00000000UL, 0x00000000UL, 0x7211c19aUL, 0xbec41c3eUL,\n+    0x956ed53eUL, 0xbf7ae3f4UL, 0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL,\n+    0x3f96f713UL, 0x36661e6cUL, 0xbe936e09UL, 0x506f9381UL, 0xbf5122e8UL,\n+    0xcb6dd43fUL, 0x3e9041b9UL, 0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL,\n+    0xbe625a8aUL, 0xe5a0e9dcUL, 0xbf23499dUL, 0x110384ddUL, 0x3e5b1c2cUL,\n+    0x68d43db6UL, 0x3f2cb899UL, 0x6ecac000UL, 0xbfa0c414UL, 0xcd7dd58cUL,\n+    0x3d13500fUL, 0x00000000UL, 0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2bf70ebeUL, 0x3ef66a8fUL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0xd644267fUL, 0x3ec22805UL, 0x16c16c17UL, 0x3f96c16cUL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0xc4e09162UL,\n+    0x3e8d6db2UL, 0xbc011567UL, 0x3f61566aUL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x1f79955cUL, 0x3e57da4eUL, 0x9334ef0bUL,\n+    0x3f2bbd77UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x55555555UL, 0x3fd55555UL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x5daf22a6UL, 0x3ef429d7UL,\n+    0x00000000UL, 0x00000000UL, 0x06bca545UL, 0x3ef7a27dUL, 0x00000000UL,\n+    0x00000000UL, 0x7211c19aUL, 0x3ec41c3eUL, 0x956ed53eUL, 0x3f7ae3f4UL,\n+    0xee750e72UL, 0x3ec3901bUL, 0x91d443f5UL, 0x3f96f713UL, 0x36661e6cUL,\n+    0x3e936e09UL, 0x506f9381UL, 0x3f5122e8UL, 0xcb6dd43fUL, 0x3e9041b9UL,\n+    0x6698b2ffUL, 0x3f61b0c7UL, 0x576bf12bUL, 0x3e625a8aUL, 0xe5a0e9dcUL,\n+    0x3f23499dUL, 0x110384ddUL, 0x3e5b1c2cUL, 0x68d43db6UL, 0x3f2cb899UL,\n+    0x6ecac000UL, 0x3fa0c414UL, 0xcd7dd58cUL, 0xbd13500fUL, 0x00000000UL,\n+    0x00000000UL, 0x85a2c8fbUL, 0x3fd55fe0UL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0xfffffff8UL, 0xc41acb64UL, 0x3f05448dUL, 0x00000000UL,\n+    0x00000000UL, 0xdbb03d6fUL, 0x3efb7ad2UL, 0x00000000UL, 0x00000000UL,\n+    0x9e42962dUL, 0x3ed5aea5UL, 0x2579f8efUL, 0x3f8b2398UL, 0x288a1ed9UL,\n+    0x3ec81441UL, 0xb0198dc5UL, 0x3f979a3aUL, 0x2fdfe253UL, 0x3ea57cd3UL,\n+    0x5766336fUL, 0x3f617caaUL, 0x600944c3UL, 0x3e954ed6UL, 0xa4e0aaf8UL,\n+    0x3f62c646UL, 0x6b8fb29cUL, 0x3e74e3a3UL, 0xdc4c0409UL, 0x3f33f952UL,\n+    0x9bffe365UL, 0x3e6301ecUL, 0xb8869e44UL, 0x3f2fc566UL, 0xe1e04000UL,\n+    0x3fb0cc62UL, 0x016b907fUL, 0x3d119cbcUL, 0x00000000UL, 0x00000000UL,\n+    0xe6b9d8faUL, 0x3fd57fb3UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n+    0xfffffff8UL, 0x1a154b97UL, 0x3f116b01UL, 0x00000000UL, 0x00000000UL,\n+    0x2d427630UL, 0x3f0147bfUL, 0x00000000UL, 0x00000000UL, 0xb93820c8UL,\n+    0x3ee264d4UL, 0xbb6cbb18UL, 0x3f94ab8cUL, 0x888d4d92UL, 0x3ed0568bUL,\n+    0x60730f7cUL, 0x3f98b19bUL, 0xe4b1fb11UL, 0x3eb2f950UL, 0x22cf9f74UL,\n+    0x3f6b21cdUL, 0x4a3ff0a6UL, 0x3e9f499eUL, 0xfd2b83ceUL, 0x3f64aad7UL,\n+    0x637b73afUL, 0x3e83487cUL, 0xe522591aUL, 0x3f3fc092UL, 0xa158e8bcUL,\n+    0x3e6e3aaeUL, 0xe5e82ffaUL, 0x3f329d2fUL, 0xd636a000UL, 0x3fb9477fUL,\n+    0xc2c2d2bcUL, 0x3d135ef9UL, 0x00000000UL, 0x00000000UL, 0xf2fdb123UL,\n+    0x3fd5b566UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL,\n+    0x7d98a556UL, 0x3f1a3958UL, 0x00000000UL, 0x00000000UL, 0x9d88dc01UL,\n+    0x3f0704c2UL, 0x00000000UL, 0x00000000UL, 0x73742a2bUL, 0x3eed054aUL,\n+    0x58844587UL, 0x3f9c2a13UL, 0x55688a79UL, 0x3ed7a326UL, 0xee33f1d6UL,\n+    0x3f9a48f4UL, 0xa8dc9888UL, 0x3ebf8939UL, 0xaad4b5b8UL, 0x3f72f746UL,\n+    0x9102efa1UL, 0x3ea88f82UL, 0xdabc29cfUL, 0x3f678228UL, 0x9289afb8UL,\n+    0x3e90f456UL, 0x741fb4edUL, 0x3f46f3a3UL, 0xa97f6663UL, 0x3e79b4bfUL,\n+    0xca89ff3fUL, 0x3f36db70UL, 0xa8a2a000UL, 0x3fc0ee13UL, 0x3da24be1UL,\n+    0x3d338b9fUL, 0x00000000UL, 0x00000000UL, 0x11cd6c69UL, 0x3fd601fdUL,\n+    0x00000000UL, 0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0xb9ff07ceUL,\n+    0x3f231c78UL, 0x00000000UL, 0x00000000UL, 0xa5517182UL, 0x3f0ff0e0UL,\n+    0x00000000UL, 0x00000000UL, 0x790b4cbcUL, 0x3ef66191UL, 0x848a46c6UL,\n+    0x3fa21ac0UL, 0xb16435faUL, 0x3ee1d3ecUL, 0x2a1aa832UL, 0x3f9c71eaUL,\n+    0xfdd299efUL, 0x3ec9dd1aUL, 0x3f8dbaafUL, 0x3f793363UL, 0x309fc6eaUL,\n+    0x3eb415d6UL, 0xbee60471UL, 0x3f6b83baUL, 0x94a0a697UL, 0x3e9dae11UL,\n+    0x3e5c67b3UL, 0x3f4fd07bUL, 0x9a8f3e3eUL, 0x3e86bd75UL, 0xa4beb7a4UL,\n+    0x3f3d1eb1UL, 0x29cfc000UL, 0x3fc549ceUL, 0xbf159358UL, 0x3d397b33UL,\n+    0x00000000UL, 0x00000000UL, 0x871fee6cUL, 0x3fd666f0UL, 0x00000000UL,\n+    0x3ff00000UL, 0x00000000UL, 0xfffffff8UL, 0x535ad890UL, 0x3f2b9320UL,\n+    0x00000000UL, 0x00000000UL, 0x018fdf1fUL, 0x3f16d61dUL, 0x00000000UL,\n+    0x00000000UL, 0x0359f1beUL, 0x3f0139e4UL, 0xa4317c6dUL, 0x3fa67e17UL,\n+    0x82672d0fUL, 0x3eebb405UL, 0x2f1b621eUL, 0x3f9f455bUL, 0x51ccf238UL,\n+    0x3ed55317UL, 0xf437b9acUL, 0x3f804beeUL, 0xc791a2b5UL, 0x3ec0e993UL,\n+    0x919a1db2UL, 0x3f7080c2UL, 0x336a5b0eUL, 0x3eaa48a2UL, 0x0a268358UL,\n+    0x3f55a443UL, 0xdfd978e4UL, 0x3e94b61fUL, 0xd7767a58UL, 0x3f431806UL,\n+    0x2aea0000UL, 0x3fc9bbe8UL, 0x7723ea61UL, 0x3d3a2369UL, 0x00000000UL,\n+    0x00000000UL, 0xdf7796ffUL, 0x3fd6e642UL, 0x00000000UL, 0x3ff00000UL,\n+    0x00000000UL, 0xfffffff8UL, 0x4f48b8d3UL, 0x3f33eaf9UL, 0x00000000UL,\n+    0x00000000UL, 0x0cf7586fUL, 0x3f20b8eaUL, 0x00000000UL, 0x00000000UL,\n+    0xd0258911UL, 0x3f0abaf3UL, 0x23e49fe9UL, 0x3fab5a8cUL, 0x2d53222eUL,\n+    0x3ef60d15UL, 0x21169451UL, 0x3fa172b2UL, 0xbb254dbcUL, 0x3ee1d3b5UL,\n+    0xdbf93b8eUL, 0x3f84c7dbUL, 0x05b4630bUL, 0x3ecd3364UL, 0xee9aada7UL,\n+    0x3f743924UL, 0x794a8297UL, 0x3eb7b7b9UL, 0xe015f797UL, 0x3f5d41f5UL,\n+    0xe41a4a56UL, 0x3ea35dfbUL, 0xe4c2a251UL, 0x3f49a2abUL, 0x5af9e000UL,\n+    0x3fce49ceUL, 0x8c743719UL, 0xbd1eb860UL, 0x00000000UL, 0x00000000UL,\n+    0x1b4863cfUL, 0x3fd78294UL, 0x00000000UL, 0x3ff00000UL, 0x00000000UL,\n+    0xfffffff8UL, 0x65965966UL, 0xc0219659UL, 0x00000000UL, 0x00000000UL,\n+    0x882c10faUL, 0x402664f4UL, 0x00000000UL, 0x00000000UL, 0x83cd3723UL,\n+    0xc02c8342UL, 0x00000000UL, 0xc0000000UL, 0x55e6c23dUL, 0x403226e3UL,\n+    0x55555555UL, 0x40055555UL, 0x34451939UL, 0xc0371c96UL, 0xaaaaaaabUL,\n+    0xc00aaaaaUL, 0x0e157de0UL, 0x403d6d3dUL, 0x11111111UL, 0x40111111UL,\n+    0xa738201fUL, 0xc042bbceUL, 0x05b05b06UL, 0xc015b05bUL, 0x452b75e3UL,\n+    0x4047da36UL, 0x1ba1ba1cUL, 0x401ba1baUL, 0x00000000UL, 0xbff00000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x40000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0xc7ab4d5aUL, 0xc0085e24UL, 0x00000000UL, 0x00000000UL, 0xe93ea75dUL,\n+    0x400b963dUL, 0x00000000UL, 0x00000000UL, 0x94a7f25aUL, 0xc00f37e2UL,\n+    0x4b6261cbUL, 0xbff5f984UL, 0x5a9dd812UL, 0x4011aab0UL, 0x74c30018UL,\n+    0x3ffaf5a5UL, 0x7f2ce8e3UL, 0xc013fe8bUL, 0xfe8e54faUL, 0xbffd7334UL,\n+    0x670d618dUL, 0x4016a10cUL, 0x4db97058UL, 0x4000e012UL, 0x24df44ddUL,\n+    0xc0199c5fUL, 0x697d6eceUL, 0xc003006eUL, 0x83298b82UL, 0x401cfc4dUL,\n+    0x19d490d6UL, 0x40058c19UL, 0x2ae42850UL, 0xbfea4300UL, 0x118e20e6UL,\n+    0x3c7a6db8UL, 0x00000000UL, 0x40000000UL, 0xe33345b8UL, 0xbfd4e526UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x2b2c49d0UL,\n+    0xbff2de9cUL, 0x00000000UL, 0x00000000UL, 0x2655bc98UL, 0x3ff33e58UL,\n+    0x00000000UL, 0x00000000UL, 0xff691fa2UL, 0xbff3972eUL, 0xe93463bdUL,\n+    0xbfeeed87UL, 0x070e10a0UL, 0x3ff3f5b2UL, 0xf4d790a4UL, 0x3ff20c10UL,\n+    0xa04e8ea3UL, 0xbff4541aUL, 0x386accd3UL, 0xbff1369eUL, 0x222a66ddUL,\n+    0x3ff4b521UL, 0x22a9777eUL, 0x3ff20817UL, 0x52a04a6eUL, 0xbff5178fUL,\n+    0xddaa0031UL, 0xbff22137UL, 0x4447d47cUL, 0x3ff57c01UL, 0x1e9c7f1dUL,\n+    0x3ff29311UL, 0x2ab7f990UL, 0xbfe561b8UL, 0x209c7df1UL, 0xbc87a8c5UL,\n+    0x00000000UL, 0x3ff00000UL, 0x4170bcc6UL, 0x3fdc92d8UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0xcc03e501UL, 0xbfdff10fUL,\n+    0x00000000UL, 0x00000000UL, 0x44a4e845UL, 0x3fddb63bUL, 0x00000000UL,\n+    0x00000000UL, 0x3768ad9fUL, 0xbfdb72a4UL, 0x3dd01ccaUL, 0xbfe5fdb9UL,\n+    0xa61d2811UL, 0x3fd972b2UL, 0x5645ad0bUL, 0x3fe977f9UL, 0xd013b3abUL,\n+    0xbfd78ca3UL, 0xbf0bf914UL, 0xbfe4f192UL, 0x4d53e730UL, 0x3fd5d060UL,\n+    0x3f8b9000UL, 0x3fe49933UL, 0xe2b82f08UL, 0xbfd4322aUL, 0x5936a835UL,\n+    0xbfe27ae1UL, 0xb1c61c9bUL, 0x3fd2b3fbUL, 0xef478605UL, 0x3fe1659eUL,\n+    0x190834ecUL, 0xbfe11ab7UL, 0xcdb625eaUL, 0x3c8e564bUL, 0x00000000UL,\n+    0x3ff00000UL, 0xb07217e3UL, 0x3fd248f1UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x56f37042UL, 0xbfccfc56UL, 0x00000000UL,\n+    0x00000000UL, 0xaa563951UL, 0x3fc90125UL, 0x00000000UL, 0x00000000UL,\n+    0x3d0e7c5dUL, 0xbfc50533UL, 0x9bed9b2eUL, 0xbfdf0ed9UL, 0x5fe7c47cUL,\n+    0x3fc1f250UL, 0x96c125e5UL, 0x3fe2edd9UL, 0x5a02bbd8UL, 0xbfbe5c71UL,\n+    0x86362c20UL, 0xbfda08b7UL, 0x4b4435edUL, 0x3fb9d342UL, 0x4b494091UL,\n+    0x3fd911bdUL, 0xb56658beUL, 0xbfb5e4c7UL, 0x93a2fd76UL, 0xbfd3c092UL,\n+    0xda271794UL, 0x3fb29910UL, 0x3303df2bUL, 0x3fd189beUL, 0x99fcef32UL,\n+    0xbfda8279UL, 0xb68c1467UL, 0xbc708b2fUL, 0x00000000UL, 0x3ff00000UL,\n+    0x980c4337UL, 0x3fc5f619UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x00000000UL, 0x9314533eUL, 0xbfbb8ec5UL, 0x00000000UL, 0x00000000UL,\n+    0x09aa36d0UL, 0x3fb6d3f4UL, 0x00000000UL, 0x00000000UL, 0xdcb427fdUL,\n+    0xbfb13950UL, 0xd87ab0bbUL, 0xbfd5335eUL, 0xce0ae8a5UL, 0x3fabb382UL,\n+    0x79143126UL, 0x3fddba41UL, 0x5f2b28d4UL, 0xbfa552f1UL, 0x59f21a6dUL,\n+    0xbfd015abUL, 0x22c27d95UL, 0x3fa0e984UL, 0xe19fc6aaUL, 0x3fd0576cUL,\n+    0x8f2c2950UL, 0xbf9a4898UL, 0xc0b3f22cUL, 0xbfc59462UL, 0x1883a4b8UL,\n+    0x3f94b61cUL, 0x3f838640UL, 0x3fc30eb8UL, 0x355c63dcUL, 0xbfd36a08UL,\n+    0x1dce993dUL, 0x3c6d704dUL, 0x00000000UL, 0x3ff00000UL, 0x2b82ab63UL,\n+    0x3fb78e92UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL,\n+    0x5a279ea3UL, 0xbfaa3407UL, 0x00000000UL, 0x00000000UL, 0x432d65faUL,\n+    0x3fa70153UL, 0x00000000UL, 0x00000000UL, 0x891a4602UL, 0xbf9d03efUL,\n+    0xd62ca5f8UL, 0xbfca77d9UL, 0xb35f4628UL, 0x3f97a265UL, 0x433258faUL,\n+    0x3fd8cf51UL, 0xb58fd909UL, 0xbf8f88e3UL, 0x01771ceaUL, 0xbfc2b154UL,\n+    0xf3562f8eUL, 0x3f888f57UL, 0xc028a723UL, 0x3fc7370fUL, 0x20b7f9f0UL,\n+    0xbf80f44cUL, 0x214368e9UL, 0xbfb6dfaaUL, 0x28891863UL, 0x3f79b4b6UL,\n+    0x172dbbf0UL, 0x3fb6cb8eUL, 0xe0553158UL, 0xbfc975f5UL, 0x593fe814UL,\n+    0xbc2ef5d3UL, 0x00000000UL, 0x3ff00000UL, 0x03dec550UL, 0x3fa44203UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL, 0x00000000UL, 0x4e435f9bUL,\n+    0xbf953f83UL, 0x00000000UL, 0x00000000UL, 0x3c6e8e46UL, 0x3f9b74eaUL,\n+    0x00000000UL, 0x00000000UL, 0xda5b7511UL, 0xbf85ad63UL, 0xdc230b9bUL,\n+    0xbfb97558UL, 0x26cb3788UL, 0x3f881308UL, 0x76fc4985UL, 0x3fd62ac9UL,\n+    0x77bb08baUL, 0xbf757c85UL, 0xb6247521UL, 0xbfb1381eUL, 0x5922170cUL,\n+    0x3f754e95UL, 0x8746482dUL, 0x3fc27f83UL, 0x11055b30UL, 0xbf64e391UL,\n+    0x3e666320UL, 0xbfa3e609UL, 0x0de9dae3UL, 0x3f6301dfUL, 0x1f1dca06UL,\n+    0x3fafa8aeUL, 0x8c5b2da2UL, 0xbfb936bbUL, 0x4e88f7a5UL, 0xbc587d05UL,\n+    0x00000000UL, 0x3ff00000UL, 0xa8935dd9UL, 0x3f83dde2UL, 0x00000000UL,\n+    0x00000000UL, 0x00000000UL, 0x00000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _MASK_35_tan[] =\n+{\n+    0xfffc0000UL, 0xffffffffUL, 0x00000000UL, 0x00000000UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _Q_11_tan[] =\n+{\n+    0xb8fe4d77UL, 0x3f82609aUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _Q_9_tan[] =\n+{\n+    0xbf847a43UL, 0x3f9664a0UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _Q_7_tan[] =\n+{\n+    0x52c4c8abUL, 0x3faba1baUL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _Q_5_tan[] =\n+{\n+    0x11092746UL, 0x3fc11111UL\n+};\n+\n+ATTRIBUTE_ALIGNED(16) juint _Q_3_tan[] =\n+{\n+    0x55555612UL, 0x3fd55555UL\n+};\n+\n+ATTRIBUTE_ALIGNED(8) juint _PI_4_tan[] =\n+{\n+    0x00000000UL, 0x3fe921fbUL, 0x4611a626UL, 0x3e85110bUL\n+};\n+\n+ATTRIBUTE_ALIGNED(8) juint _QQ_2_tan[] =\n+{\n+    0x676733afUL, 0x3d32e7b9UL\n+};\n+\n+#define __ _masm->\n+\n+address StubGenerator::generate_libmTan() {\n+  StubCodeMark mark(this, \"StubRoutines\", \"libmTan\");\n+  address start = __ pc();\n+\n+  Label L_2TAG_PACKET_0_0_1, L_2TAG_PACKET_1_0_1, L_2TAG_PACKET_2_0_1, L_2TAG_PACKET_3_0_1;\n+  Label L_2TAG_PACKET_4_0_1, L_2TAG_PACKET_5_0_1, L_2TAG_PACKET_6_0_1, L_2TAG_PACKET_7_0_1;\n+  Label L_2TAG_PACKET_8_0_1, L_2TAG_PACKET_9_0_1, L_2TAG_PACKET_10_0_1, L_2TAG_PACKET_11_0_1;\n+  Label L_2TAG_PACKET_12_0_1, L_2TAG_PACKET_13_0_1, L_2TAG_PACKET_14_0_1, B1_2, B1_4;\n+\n+  address MUL16     = (address)_MUL16;\n+  address sign_mask = (address)_sign_mask_tan;\n+  address PI32INV   = (address)_PI32INV_tan;\n+  address P_1       = (address)_P_1_tan;\n+  address P_2       = (address)_P_2_tan;\n+  address P_3       = (address)_P_3_tan;\n+  address Ctable    = (address)_Ctable_tan;\n+  address MASK_35   = (address)_MASK_35_tan;\n+  address Q_11      = (address)_Q_11_tan;\n+  address Q_9       = (address)_Q_9_tan;\n+  address Q_7       = (address)_Q_7_tan;\n+  address Q_5       = (address)_Q_5_tan;\n+  address Q_3       = (address)_Q_3_tan;\n+  address PI_4      = (address)_PI_4_tan;\n+  address QQ_2      = (address)_QQ_2_tan;\n+\n+  __ enter(); \/\/ required for proper stackwalking of RuntimeStub frame\n+\n+#ifdef _WIN64\n+  __ push(rsi);\n+  __ push(rdi);\n+#endif\n+\n+  __ push(rbx);\n+  __ subq(rsp, 16);\n+  __ movsd(Address(rsp, 8), xmm0);\n+\n+  __ bind(B1_2);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32767);\n+  __ subl(rax, 16314);\n+  __ cmpl(rax, 270);\n+  __ jcc(Assembler::above, L_2TAG_PACKET_0_0_1);\n+  __ movdqu(xmm5, ExternalAddress(ONEHALF), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+  __ movdqu(xmm6, ExternalAddress(MUL16), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x40300000UL, 0x00000000UL, 0x3ff00000UL\n+  __ unpcklpd(xmm0, xmm0);\n+  __ movdqu(xmm4, ExternalAddress(sign_mask), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL, 0x00000000UL, 0x80000000UL\n+  __ andpd(xmm4, xmm0);\n+  __ movdqu(xmm1, ExternalAddress(PI32INV), rbx \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x3fe45f30UL, 0x6dc9c883UL, 0x40245f30UL\n+  __ mulpd(xmm1, xmm0);\n+  __ por(xmm5, xmm4);\n+  __ addpd(xmm1, xmm5);\n+  __ movdqu(xmm7, xmm1);\n+  __ unpckhpd(xmm7, xmm7);\n+  __ cvttsd2sil(rdx, xmm7);\n+  __ cvttpd2dq(xmm1, xmm1);\n+  __ cvtdq2pd(xmm1, xmm1);\n+  __ mulpd(xmm1, xmm6);\n+  __ movdqu(xmm3, ExternalAddress(P_1), rbx \/*rscratch*\/);    \/\/0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL\n+  __ movq(xmm5, ExternalAddress(QQ_2), rbx \/*rscratch*\/);    \/\/0x676733afUL, 0x3d32e7b9UL\n+  __ addq(rdx, 469248);\n+  __ movdqu(xmm4, ExternalAddress(P_2), rbx \/*rscratch*\/);    \/\/0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL\n+  __ mulpd(xmm3, xmm1);\n+  __ andq(rdx, 31);\n+  __ mulsd(xmm5, xmm1);\n+  __ movq(rcx, rdx);\n+  __ mulpd(xmm4, xmm1);\n+  __ shlq(rcx, 1);\n+  __ subpd(xmm0, xmm3);\n+  __ mulpd(xmm1, ExternalAddress(P_3), rbx \/*rscratch*\/);    \/\/0x3707344aUL, 0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL\n+  __ addq(rdx, rcx);\n+  __ shlq(rcx, 2);\n+  __ addq(rdx, rcx);\n+  __ addsd(xmm5, xmm0);\n+  __ movdqu(xmm2, xmm0);\n+  __ subpd(xmm0, xmm4);\n+  __ movq(xmm6, ExternalAddress(ONE), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n+  __ shlq(rdx, 4);\n+  __ lea(rax, ExternalAddress(Ctable));\n+  __ andpd(xmm5, ExternalAddress(MASK_35), rbx \/*rscratch*\/);    \/\/0xfffc0000UL, 0xffffffffUL, 0x00000000UL, 0x00000000UL\n+  __ movdqu(xmm3, xmm0);\n+  __ addq(rax, rdx);\n+  __ subpd(xmm2, xmm0);\n+  __ unpckhpd(xmm0, xmm0);\n+  __ divsd(xmm6, xmm5);\n+  __ subpd(xmm2, xmm4);\n+  __ movdqu(xmm7, Address(rax, 16));\n+  __ subsd(xmm3, xmm5);\n+  __ mulpd(xmm7, xmm0);\n+  __ subpd(xmm2, xmm1);\n+  __ movdqu(xmm1, Address(rax, 48));\n+  __ mulpd(xmm1, xmm0);\n+  __ movdqu(xmm4, Address(rax, 96));\n+  __ mulpd(xmm4, xmm0);\n+  __ addsd(xmm2, xmm3);\n+  __ movdqu(xmm3, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm7, Address(rax, 0));\n+  __ addpd(xmm1, Address(rax, 32));\n+  __ mulpd(xmm1, xmm0);\n+  __ addpd(xmm4, Address(rax, 80));\n+  __ addpd(xmm7, xmm1);\n+  __ movdqu(xmm1, Address(rax, 112));\n+  __ mulpd(xmm1, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm4, xmm1);\n+  __ movdqu(xmm1, Address(rax, 64));\n+  __ mulpd(xmm1, xmm0);\n+  __ addpd(xmm7, xmm1);\n+  __ movdqu(xmm1, xmm3);\n+  __ mulpd(xmm3, xmm0);\n+  __ mulsd(xmm0, xmm0);\n+  __ mulpd(xmm1, Address(rax, 144));\n+  __ mulpd(xmm4, xmm3);\n+  __ movdqu(xmm3, xmm1);\n+  __ addpd(xmm7, xmm4);\n+  __ movdqu(xmm4, xmm1);\n+  __ mulsd(xmm0, xmm7);\n+  __ unpckhpd(xmm7, xmm7);\n+  __ addsd(xmm0, xmm7);\n+  __ unpckhpd(xmm1, xmm1);\n+  __ addsd(xmm3, xmm1);\n+  __ subsd(xmm4, xmm3);\n+  __ addsd(xmm1, xmm4);\n+  __ movdqu(xmm4, xmm2);\n+  __ movq(xmm7, Address(rax, 144));\n+  __ unpckhpd(xmm2, xmm2);\n+  __ addsd(xmm7, Address(rax, 152));\n+  __ mulsd(xmm7, xmm2);\n+  __ addsd(xmm7, Address(rax, 136));\n+  __ addsd(xmm7, xmm1);\n+  __ addsd(xmm0, xmm7);\n+  __ movq(xmm7, ExternalAddress(ONE), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n+  __ mulsd(xmm4, xmm6);\n+  __ movq(xmm2, Address(rax, 168));\n+  __ andpd(xmm2, xmm6);\n+  __ mulsd(xmm5, xmm2);\n+  __ mulsd(xmm6, Address(rax, 160));\n+  __ subsd(xmm7, xmm5);\n+  __ subsd(xmm2, Address(rax, 128));\n+  __ subsd(xmm7, xmm4);\n+  __ mulsd(xmm7, xmm6);\n+  __ movdqu(xmm4, xmm3);\n+  __ subsd(xmm3, xmm2);\n+  __ addsd(xmm2, xmm3);\n+  __ subsd(xmm4, xmm2);\n+  __ addsd(xmm0, xmm4);\n+  __ subsd(xmm0, xmm7);\n+  __ addsd(xmm0, xmm3);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_0_0_1);\n+  __ jcc(Assembler::greater, L_2TAG_PACKET_1_0_1);\n+  __ pextrw(rax, xmm0, 3);\n+  __ movl(rdx, rax);\n+  __ andl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_2_0_1);\n+  __ andl(rdx, 32767);\n+  __ cmpl(rdx, 15904);\n+  __ jcc(Assembler::below, L_2TAG_PACKET_3_0_1);\n+  __ movdqu(xmm2, xmm0);\n+  __ movdqu(xmm3, xmm0);\n+  __ movq(xmm1, ExternalAddress(Q_11), rbx \/*rscratch*\/);    \/\/0xb8fe4d77UL, 0x3f82609aUL\n+  __ mulsd(xmm2, xmm0);\n+  __ mulsd(xmm3, xmm2);\n+  __ mulsd(xmm1, xmm2);\n+  __ addsd(xmm1, ExternalAddress(Q_9), rbx \/*rscratch*\/);    \/\/0xbf847a43UL, 0x3f9664a0UL\n+  __ mulsd(xmm1, xmm2);\n+  __ addsd(xmm1, ExternalAddress(Q_7), rbx \/*rscratch*\/);    \/\/0x52c4c8abUL, 0x3faba1baUL\n+  __ mulsd(xmm1, xmm2);\n+  __ addsd(xmm1, ExternalAddress(Q_5), rbx \/*rscratch*\/);    \/\/0x11092746UL, 0x3fc11111UL\n+  __ mulsd(xmm1, xmm2);\n+  __ addsd(xmm1, ExternalAddress(Q_3), rbx \/*rscratch*\/);    \/\/0x55555612UL, 0x3fd55555UL\n+  __ mulsd(xmm1, xmm3);\n+  __ addsd(xmm0, xmm1);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_3_0_1);\n+  __ movq(xmm3, ExternalAddress(TWO_POW_55), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x43600000UL\n+  __ mulsd(xmm3, xmm0);\n+  __ addsd(xmm0, xmm3);\n+  __ mulsd(xmm0, ExternalAddress(TWO_POW_M55), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3c800000UL\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_2_0_1);\n+  __ movdqu(xmm1, xmm0);\n+  __ mulsd(xmm1, xmm1);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_1_0_1);\n+  __ pextrw(rax, xmm0, 3);\n+  __ andl(rax, 32752);\n+  __ cmpl(rax, 32752);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_4_0_1);\n+  __ pextrw(rcx, xmm0, 3);\n+  __ andl(rcx, 32752);\n+  __ subl(rcx, 16224);\n+  __ shrl(rcx, 7);\n+  __ andl(rcx, 65532);\n+  __ lea(r11, ExternalAddress(PI_INV_TABLE));\n+  __ addq(rcx, r11);\n+  __ movdq(rax, xmm0);\n+  __ movl(r10, Address(rcx, 20));\n+  __ movl(r8, Address(rcx, 24));\n+  __ movl(rdx, rax);\n+  __ shrq(rax, 21);\n+  __ orl(rax, INT_MIN);\n+  __ shrl(rax, 11);\n+  __ movl(r9, r10);\n+  __ imulq(r10, rdx);\n+  __ imulq(r9, rax);\n+  __ imulq(r8, rax);\n+  __ movl(rsi, Address(rcx, 16));\n+  __ movl(rdi, Address(rcx, 12));\n+  __ movl(r11, r10);\n+  __ shrq(r10, 32);\n+  __ addq(r9, r10);\n+  __ addq(r11, r8);\n+  __ movl(r8, r11);\n+  __ shrq(r11, 32);\n+  __ addq(r9, r11);\n+  __ movl(r10, rsi);\n+  __ imulq(rsi, rdx);\n+  __ imulq(r10, rax);\n+  __ movl(r11, rdi);\n+  __ imulq(rdi, rdx);\n+  __ movl(rbx, rsi);\n+  __ shrq(rsi, 32);\n+  __ addq(r9, rbx);\n+  __ movl(rbx, r9);\n+  __ shrq(r9, 32);\n+  __ addq(r10, rsi);\n+  __ addq(r10, r9);\n+  __ shlq(rbx, 32);\n+  __ orq(r8, rbx);\n+  __ imulq(r11, rax);\n+  __ movl(r9, Address(rcx, 8));\n+  __ movl(rsi, Address(rcx, 4));\n+  __ movl(rbx, rdi);\n+  __ shrq(rdi, 32);\n+  __ addq(r10, rbx);\n+  __ movl(rbx, r10);\n+  __ shrq(r10, 32);\n+  __ addq(r11, rdi);\n+  __ addq(r11, r10);\n+  __ movq(rdi, r9);\n+  __ imulq(r9, rdx);\n+  __ imulq(rdi, rax);\n+  __ movl(r10, r9);\n+  __ shrq(r9, 32);\n+  __ addq(r11, r10);\n+  __ movl(r10, r11);\n+  __ shrq(r11, 32);\n+  __ addq(rdi, r9);\n+  __ addq(rdi, r11);\n+  __ movq(r9, rsi);\n+  __ imulq(rsi, rdx);\n+  __ imulq(r9, rax);\n+  __ shlq(r10, 32);\n+  __ orq(r10, rbx);\n+  __ movl(rax, Address(rcx, 0));\n+  __ movl(r11, rsi);\n+  __ shrq(rsi, 32);\n+  __ addq(rdi, r11);\n+  __ movl(r11, rdi);\n+  __ shrq(rdi, 32);\n+  __ addq(r9, rsi);\n+  __ addq(r9, rdi);\n+  __ imulq(rdx, rax);\n+  __ pextrw(rbx, xmm0, 3);\n+  __ lea(rdi, ExternalAddress(PI_INV_TABLE));\n+  __ subq(rcx, rdi);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, rcx);\n+  __ addl(rcx, 19);\n+  __ movl(rsi, 32768);\n+  __ andl(rsi, rbx);\n+  __ shrl(rbx, 4);\n+  __ andl(rbx, 2047);\n+  __ subl(rbx, 1023);\n+  __ subl(rcx, rbx);\n+  __ addq(r9, rdx);\n+  __ movl(rdx, rcx);\n+  __ addl(rdx, 32);\n+  __ cmpl(rcx, 0);\n+  __ jcc(Assembler::less, L_2TAG_PACKET_5_0_1);\n+  __ negl(rcx);\n+  __ addl(rcx, 29);\n+  __ shll(r9);\n+  __ movl(rdi, r9);\n+  __ andl(r9, 1073741823);\n+  __ testl(r9, 536870912);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_6_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 0);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+\n+  __ bind(L_2TAG_PACKET_7_0_1);\n+\n+  __ bind(L_2TAG_PACKET_8_0_1);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_9_0_1);\n+\n+  __ bind(L_2TAG_PACKET_10_0_1);\n+  __ bsrq(r11, r9);\n+  __ movl(rcx, 29);\n+  __ subl(rcx, r11);\n+  __ jcc(Assembler::lessEqual, L_2TAG_PACKET_11_0_1);\n+  __ shlq(r9);\n+  __ movq(rax, r10);\n+  __ shlq(r10);\n+  __ addl(rdx, rcx);\n+  __ negl(rcx);\n+  __ addl(rcx, 64);\n+  __ shrq(rax);\n+  __ shrq(r8);\n+  __ orq(r9, rax);\n+  __ orq(r10, r8);\n+\n+  __ bind(L_2TAG_PACKET_12_0_1);\n+  __ cvtsi2sdq(xmm0, r9);\n+  __ shrq(r10, 1);\n+  __ cvtsi2sdq(xmm3, r10);\n+  __ xorpd(xmm4, xmm4);\n+  __ shll(rdx, 4);\n+  __ negl(rdx);\n+  __ addl(rdx, 16368);\n+  __ orl(rdx, rsi);\n+  __ xorl(rdx, rbx);\n+  __ pinsrw(xmm4, rdx, 3);\n+  __ movq(xmm2, ExternalAddress(PI_4),     rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe921fbUL, 0x4611a626UL, 0x3e85110bUL\n+  __ movq(xmm7, ExternalAddress(PI_4 + 8), rbx \/*rscratch*\/);    \/\/0x3fe921fbUL, 0x4611a626UL, 0x3e85110bUL\n+  __ xorpd(xmm5, xmm5);\n+  __ subl(rdx, 1008);\n+  __ pinsrw(xmm5, rdx, 3);\n+  __ mulsd(xmm0, xmm4);\n+  __ shll(rsi, 16);\n+  __ sarl(rsi, 31);\n+  __ mulsd(xmm3, xmm5);\n+  __ movdqu(xmm1, xmm0);\n+  __ mulsd(xmm0, xmm2);\n+  __ shrl(rdi, 30);\n+  __ addsd(xmm1, xmm3);\n+  __ mulsd(xmm3, xmm2);\n+  __ addl(rdi, rsi);\n+  __ xorl(rdi, rsi);\n+  __ mulsd(xmm7, xmm1);\n+  __ movl(rax, rdi);\n+  __ addsd(xmm7, xmm3);\n+  __ movdqu(xmm2, xmm0);\n+  __ addsd(xmm0, xmm7);\n+  __ subsd(xmm2, xmm0);\n+  __ addsd(xmm7, xmm2);\n+  __ movdqu(xmm1, ExternalAddress(PI32INV), rbx \/*rscratch*\/);    \/\/0x6dc9c883UL, 0x3fe45f30UL, 0x6dc9c883UL, 0x40245f30UL\n+  if (VM_Version::supports_sse3()) {\n+    __ movddup(xmm0, xmm0);\n+  } else {\n+    __ movlhps(xmm0, xmm0);\n+  }\n+  __ movdqu(xmm4, ExternalAddress(sign_mask), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL, 0x00000000UL, 0x80000000UL\n+  __ andpd(xmm4, xmm0);\n+  __ mulpd(xmm1, xmm0);\n+  if (VM_Version::supports_sse3()) {\n+    __ movddup(xmm7, xmm7);\n+  }\n+  else {\n+    __ movlhps(xmm7, xmm7);\n+  }\n+  __ movdqu(xmm5, ExternalAddress(ONEHALF), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3fe00000UL, 0x00000000UL, 0x3fe00000UL\n+  __ movdqu(xmm6, ExternalAddress(MUL16), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x40300000UL, 0x00000000UL, 0x3ff00000UL\n+  __ por(xmm5, xmm4);\n+  __ addpd(xmm1, xmm5);\n+  __ movdqu(xmm5, xmm1);\n+  __ unpckhpd(xmm5, xmm5);\n+  __ cvttsd2sil(rdx, xmm5);\n+  __ cvttpd2dq(xmm1, xmm1);\n+  __ cvtdq2pd(xmm1, xmm1);\n+  __ mulpd(xmm1, xmm6);\n+  __ movdqu(xmm3, ExternalAddress(P_1), rbx \/*rscratch*\/);    \/\/0x54444000UL, 0x3fb921fbUL, 0x54440000UL, 0x3fb921fbUL\n+  __ movq(xmm5, ExternalAddress(QQ_2), rbx \/*rscratch*\/);    \/\/0x676733afUL, 0x3d32e7b9UL\n+  __ shll(rax, 4);\n+  __ addl(rdx, 469248);\n+  __ movdqu(xmm4, ExternalAddress(P_2), rbx \/*rscratch*\/);    \/\/0x67674000UL, 0xbd32e7b9UL, 0x4c4c0000UL, 0x3d468c23UL\n+  __ mulpd(xmm3, xmm1);\n+  __ addl(rdx, rax);\n+  __ andl(rdx, 31);\n+  __ mulsd(xmm5, xmm1);\n+  __ movl(rcx, rdx);\n+  __ mulpd(xmm4, xmm1);\n+  __ shll(rcx, 1);\n+  __ subpd(xmm0, xmm3);\n+  __ mulpd(xmm1, ExternalAddress(P_3), rbx \/*rscratch*\/);    \/\/0x3707344aUL, 0x3aa8a2e0UL, 0x03707345UL, 0x3ae98a2eUL\n+  __ addl(rdx, rcx);\n+  __ shll(rcx, 2);\n+  __ addl(rdx, rcx);\n+  __ addsd(xmm5, xmm0);\n+  __ movdqu(xmm2, xmm0);\n+  __ subpd(xmm0, xmm4);\n+  __ movq(xmm6, ExternalAddress(ONE), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n+  __ shll(rdx, 4);\n+  __ lea(rax, ExternalAddress(Ctable));\n+  __ andpd(xmm5, ExternalAddress(MASK_35), rbx \/*rscratch*\/);    \/\/0xfffc0000UL, 0xffffffffUL, 0x00000000UL, 0x00000000UL\n+  __ movdqu(xmm3, xmm0);\n+  __ addq(rax, rdx);\n+  __ subpd(xmm2, xmm0);\n+  __ unpckhpd(xmm0, xmm0);\n+  __ divsd(xmm6, xmm5);\n+  __ subpd(xmm2, xmm4);\n+  __ subsd(xmm3, xmm5);\n+  __ subpd(xmm2, xmm1);\n+  __ movdqu(xmm1, Address(rax, 48));\n+  __ addpd(xmm2, xmm7);\n+  __ movdqu(xmm7, Address(rax, 16));\n+  __ mulpd(xmm7, xmm0);\n+  __ movdqu(xmm4, Address(rax, 96));\n+  __ mulpd(xmm1, xmm0);\n+  __ mulpd(xmm4, xmm0);\n+  __ addsd(xmm2, xmm3);\n+  __ movdqu(xmm3, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm7, Address(rax, 0));\n+  __ addpd(xmm1, Address(rax, 32));\n+  __ mulpd(xmm1, xmm0);\n+  __ addpd(xmm4, Address(rax, 80));\n+  __ addpd(xmm7, xmm1);\n+  __ movdqu(xmm1, Address(rax, 112));\n+  __ mulpd(xmm1, xmm0);\n+  __ mulpd(xmm0, xmm0);\n+  __ addpd(xmm4, xmm1);\n+  __ movdqu(xmm1, Address(rax, 64));\n+  __ mulpd(xmm1, xmm0);\n+  __ addpd(xmm7, xmm1);\n+  __ movdqu(xmm1, xmm3);\n+  __ mulpd(xmm3, xmm0);\n+  __ mulsd(xmm0, xmm0);\n+  __ mulpd(xmm1, Address(rax, 144));\n+  __ mulpd(xmm4, xmm3);\n+  __ movdqu(xmm3, xmm1);\n+  __ addpd(xmm7, xmm4);\n+  __ movdqu(xmm4, xmm1);\n+  __ mulsd(xmm0, xmm7);\n+  __ unpckhpd(xmm7, xmm7);\n+  __ addsd(xmm0, xmm7);\n+  __ unpckhpd(xmm1, xmm1);\n+  __ addsd(xmm3, xmm1);\n+  __ subsd(xmm4, xmm3);\n+  __ addsd(xmm1, xmm4);\n+  __ movdqu(xmm4, xmm2);\n+  __ movq(xmm7, Address(rax, 144));\n+  __ unpckhpd(xmm2, xmm2);\n+  __ addsd(xmm7, Address(rax, 152));\n+  __ mulsd(xmm7, xmm2);\n+  __ addsd(xmm7, Address(rax, 136));\n+  __ addsd(xmm7, xmm1);\n+  __ addsd(xmm0, xmm7);\n+  __ movq(xmm7, ExternalAddress(ONE), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x3ff00000UL\n+  __ mulsd(xmm4, xmm6);\n+  __ movq(xmm2, Address(rax, 168));\n+  __ andpd(xmm2, xmm6);\n+  __ mulsd(xmm5, xmm2);\n+  __ mulsd(xmm6, Address(rax, 160));\n+  __ subsd(xmm7, xmm5);\n+  __ subsd(xmm2, Address(rax, 128));\n+  __ subsd(xmm7, xmm4);\n+  __ mulsd(xmm7, xmm6);\n+  __ movdqu(xmm4, xmm3);\n+  __ subsd(xmm3, xmm2);\n+  __ addsd(xmm2, xmm3);\n+  __ subsd(xmm4, xmm2);\n+  __ addsd(xmm0, xmm4);\n+  __ subsd(xmm0, xmm7);\n+  __ addsd(xmm0, xmm3);\n+  __ jmp(B1_4);\n+\n+  __ bind(L_2TAG_PACKET_9_0_1);\n+  __ addl(rdx, 64);\n+  __ movq(r9, r10);\n+  __ movq(r10, r8);\n+  __ movl(r8, 0);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_10_0_1);\n+  __ addl(rdx, 64);\n+  __ movq(r9, r10);\n+  __ movq(r10, r8);\n+  __ cmpq(r9, 0);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_10_0_1);\n+  __ jmp(L_2TAG_PACKET_12_0_1);\n+\n+  __ bind(L_2TAG_PACKET_11_0_1);\n+  __ jcc(Assembler::equal, L_2TAG_PACKET_12_0_1);\n+  __ negl(rcx);\n+  __ shrq(r10);\n+  __ movq(rax, r9);\n+  __ shrq(r9);\n+  __ subl(rdx, rcx);\n+  __ negl(rcx);\n+  __ addl(rcx, 64);\n+  __ shlq(rax);\n+  __ orq(r10, rax);\n+  __ jmp(L_2TAG_PACKET_12_0_1);\n+\n+  __ bind(L_2TAG_PACKET_5_0_1);\n+  __ notl(rcx);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+  __ shlq(r9);\n+  __ movq(rdi, r9);\n+  __ testl(r9, INT_MIN);\n+  __ jcc(Assembler::notEqual, L_2TAG_PACKET_13_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 0);\n+  __ shrq(rdi, 2);\n+  __ jmp(L_2TAG_PACKET_8_0_1);\n+\n+  __ bind(L_2TAG_PACKET_6_0_1);\n+  __ shrl(r9);\n+  __ movl(rbx, 1073741824);\n+  __ shrl(rbx);\n+  __ shlq(r9, 32);\n+  __ orq(r9, r11);\n+  __ shlq(rbx, 32);\n+  __ addl(rdi, 1073741824);\n+  __ movl(rcx, 0);\n+  __ movl(r11, 0);\n+  __ subq(rcx, r8);\n+  __ sbbq(r11, r10);\n+  __ sbbq(rbx, r9);\n+  __ movq(r8, rcx);\n+  __ movq(r10, r11);\n+  __ movq(r9, rbx);\n+  __ movl(rbx, 32768);\n+  __ jmp(L_2TAG_PACKET_7_0_1);\n+\n+  __ bind(L_2TAG_PACKET_13_0_1);\n+  __ shrl(r9);\n+  __ mov64(rbx, 0x100000000);\n+  __ shrq(rbx);\n+  __ movl(rcx, 0);\n+  __ movl(r11, 0);\n+  __ subq(rcx, r8);\n+  __ sbbq(r11, r10);\n+  __ sbbq(rbx, r9);\n+  __ movq(r8, rcx);\n+  __ movq(r10, r11);\n+  __ movq(r9, rbx);\n+  __ movl(rbx, 32768);\n+  __ shrq(rdi, 2);\n+  __ addl(rdi, 1073741824);\n+  __ jmp(L_2TAG_PACKET_8_0_1);\n+\n+  __ bind(L_2TAG_PACKET_4_0_1);\n+  __ movq(xmm0, Address(rsp, 8));\n+  __ mulsd(xmm0, ExternalAddress(NEG_ZERO), rbx \/*rscratch*\/);    \/\/0x00000000UL, 0x80000000UL\n+  __ movq(Address(rsp, 0), xmm0);\n+\n+  __ bind(L_2TAG_PACKET_14_0_1);\n+\n+  __ bind(B1_4);\n+  __ addq(rsp, 16);\n+  __ pop(rbx);\n+\n+#ifdef _WIN64\n+  __ pop(rdi);\n+  __ pop(rsi);\n+#endif\n+\n+  __ leave(); \/\/ required for proper stackwalking of RuntimeStub frame\n+  __ ret(0);\n+\n+  return start;\n+}\n+\n+#undef __\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_tan.cpp","additions":1031,"deletions":0,"binary":false,"changes":1031,"status":"added"}]}