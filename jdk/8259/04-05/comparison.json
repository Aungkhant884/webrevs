{"files":[{"patch":"@@ -52,0 +52,4 @@\n+ * <p>The view collections of this map also have reference-equality semantics\n+ * for their elements. See the {@link keySet() keySet}, {@link values() values},\n+ * and {@link entrySet() entrySet} methods for further information.\n+ *\n@@ -349,1 +353,2 @@\n-     * hash map.\n+     * hash map. Returns {@code true} if and only if this map contains a mapping\n+     * with key {@code k} such that {@code (key == k)}.\n@@ -373,1 +378,2 @@\n-     * hash map.\n+     * hash map. Returns {@code true} if and only if this map contains a mapping\n+     * with value {@code v} such that {@code (value == v)}.\n@@ -414,2 +420,3 @@\n-     * hash map.  If the map previously contained a mapping for the key, the\n-     * old value is replaced.\n+     * hash map. If this map already {@link containsKey(Object) contains}\n+     * a mapping for the key, the old value is replaced, otherwise, a new mapping\n+     * is inserted into this map.\n@@ -500,2 +507,4 @@\n-     * These mappings will replace any mappings that this map had for\n-     * any of the keys currently in the specified map.\n+     * For each mapping in the specified map, if this map already\n+     * {@link containsKey(Object) contains} a mapping for the key,\n+     * its value is replaced with the value from the specified map;\n+     * otherwise, a new mapping is inserted into this map.\n@@ -519,0 +528,2 @@\n+     * The mapping is removed if and only if the mapping has a key\n+     * {@code k} such that (key == k).\n@@ -635,1 +646,3 @@\n-     * {@code this.entrySet().equals(m.entrySet())}.\n+     * {@code this.entrySet().equals(m.entrySet())}. See the\n+     * {@link entrySet() entrySet} method for the specification of equality\n+     * of this map's entries.\n@@ -670,2 +683,5 @@\n-     * defined to be the sum of the hash codes of each entry in the map's\n-     * {@code entrySet()} view.  This ensures that {@code m1.equals(m2)}\n+     * defined to be the sum of the hash codes of each entry of this map.\n+     * See the {@link entrySet() entrySet} method for a specification of the\n+     * hash code of this map's entries.\n+     *\n+     * <p>This specification ensures that {@code m1.equals(m2)}\n@@ -1165,1 +1181,3 @@\n-     * System.identityHashCode(e.getValue())}.\n+     * System.identityHashCode(e.getValue())}. (While the keys and values\n+     * are compared using reference equality, the {@code Map.Entry}\n+     * objects themselves are not.)\n@@ -1389,2 +1407,2 @@\n-     * {@code k} to a value {@code v} such that {@code key == k}\n-     * and {@code value == v}, then this method removes the mapping\n+     * {@code k} to a value {@code v} such that {@code (key == k)}\n+     * and {@code (value == v)}, then this method removes the mapping\n@@ -1403,3 +1421,3 @@\n-     * {@code k} to a value {@code v} such that {@code key == k}\n-     * and {@code oldValue == v}, then this method associates\n-     * {@code k} to {@code newValue} and returns {@code true};\n+     * {@code k} to a value {@code v} such that {@code (key == k)}\n+     * and {@code (oldValue == v)}, then this method associates\n+     * {@code k} with {@code newValue} and returns {@code true};\n","filename":"src\/java.base\/share\/classes\/java\/util\/IdentityHashMap.java","additions":33,"deletions":15,"binary":false,"changes":48,"status":"modified"}]}