{"files":[{"patch":"@@ -34,0 +34,5 @@\n+\/\/ Helper macros for printing scaled sizes in MemReporterBase and children\n+#define SCALED_FORMAT            SIZE_FORMAT \"%s\"\n+#define SCALED_FORMAT_ARGS(size) amount_in_current_scale(size), current_scale()\n+#define COUNT_FORMAT            \"#\" SIZE_FORMAT\n+\n@@ -43,3 +48,2 @@\n-  const char* scale = current_scale();\n-  output()->print(\"reserved=\" SIZE_FORMAT \"%s, committed=\" SIZE_FORMAT \"%s\",\n-    amount_in_current_scale(reserved), scale, amount_in_current_scale(committed), scale);\n+  output()->print(\"reserved=\" SCALED_FORMAT \", committed=\" SCALED_FORMAT,\n+    SCALED_FORMAT_ARGS(reserved), SCALED_FORMAT_ARGS(committed));\n@@ -49,1 +53,0 @@\n-  const char* scale = current_scale();\n@@ -57,2 +60,2 @@\n-    out->print(\"(%s\" SIZE_FORMAT \"%s type=%s\", alloc_type,\n-      amount_in_current_scale(amount), scale, NMTUtil::flag_to_name(flag));\n+    out->print(\"(%s\" SCALED_FORMAT \" type=%s\", alloc_type,\n+      SCALED_FORMAT_ARGS(amount), NMTUtil::flag_to_name(flag));\n@@ -60,2 +63,2 @@\n-    out->print(\"(%s\" SIZE_FORMAT \"%s\", alloc_type,\n-      amount_in_current_scale(amount), scale);\n+    out->print(\"(%s\" SCALED_FORMAT, alloc_type,\n+        SCALED_FORMAT_ARGS(amount));\n@@ -66,1 +69,1 @@\n-    out->print(\" #\" SIZE_FORMAT \"\", count);\n+    out->print(\" \" COUNT_FORMAT, count);\n@@ -76,2 +79,2 @@\n-    out->print(\" (peak=\" SIZE_FORMAT \"%s #\" SIZE_FORMAT \")\",\n-        amount_in_current_scale(pk_amount), scale, pk_count);\n+    out->print(\" (peak=\" SCALED_FORMAT \" \" COUNT_FORMAT \")\",\n+        SCALED_FORMAT_ARGS(pk_amount), pk_count);\n@@ -82,3 +85,2 @@\n-  const char* scale = current_scale();\n-  output()->print(\"(mmap: reserved=\" SIZE_FORMAT \"%s, committed=\" SIZE_FORMAT \"%s)\",\n-    amount_in_current_scale(reserved), scale, amount_in_current_scale(committed), scale);\n+  output()->print(\"(mmap: reserved=\" SCALED_FORMAT \", committed=\" SCALED_FORMAT \")\",\n+      SCALED_FORMAT_ARGS(reserved), SCALED_FORMAT_ARGS(committed));\n@@ -100,1 +102,0 @@\n-  const char* scale = current_scale();\n@@ -106,2 +107,2 @@\n-  out->print(\"%27s (arena=\" SIZE_FORMAT \"%s #\" SIZE_FORMAT \")\", \"\",\n-    amount_in_current_scale(amount), scale, count);\n+  out->print(\"%27s (arena=\" SCALED_FORMAT \" \" COUNT_FORMAT \")\", \"\",\n+    SCALED_FORMAT_ARGS(amount), count);\n@@ -114,2 +115,2 @@\n-    out->print(\" (peak=\" SIZE_FORMAT \"%s #\" SIZE_FORMAT \")\",\n-        amount_in_current_scale(pk_amount), scale, pk_count);\n+    out->print(\" (peak=\" SCALED_FORMAT \" \" COUNT_FORMAT \")\",\n+        SCALED_FORMAT_ARGS(pk_amount), pk_count);\n@@ -122,3 +123,2 @@\n-  const char* scale = current_scale();\n-  output()->print(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] %s \" SIZE_FORMAT \"%s\",\n-    p2i(base), p2i(base + size), type, amount_in_current_scale(size), scale);\n+  output()->print(\"[\" PTR_FORMAT \" - \" PTR_FORMAT \"] %s \" SCALED_FORMAT,\n+    p2i(base), p2i(base + size), type, SCALED_FORMAT_ARGS(size));\n@@ -148,2 +148,2 @@\n-  out->print_cr(\"       malloc: \" SIZE_FORMAT \"%s #\" SIZE_FORMAT,\n-                amount_in_current_scale(total_malloced_bytes), current_scale(),\n+  out->print_cr(\"       malloc: \" SCALED_FORMAT \" \" COUNT_FORMAT,\n+                SCALED_FORMAT_ARGS(total_malloced_bytes),\n@@ -195,1 +195,0 @@\n-    const char*   scale = current_scale();\n@@ -202,1 +201,1 @@\n-      out->print_cr(\"%27s (classes #\" SIZE_FORMAT \")\",\n+      out->print_cr(\"%27s (classes \" COUNT_FORMAT \")\",\n@@ -204,1 +203,1 @@\n-      out->print_cr(\"%27s (  instance classes #\" SIZE_FORMAT \", array classes #\" SIZE_FORMAT \")\",\n+      out->print_cr(\"%27s (  instance classes #\" SIZE_FORMAT \", array classes \" COUNT_FORMAT \")\",\n@@ -211,1 +210,1 @@\n-        out->print_cr(\"%27s (thread #\" SIZE_FORMAT \")\", \" \", ThreadStackTracker::thread_count());\n+        out->print_cr(\"%27s (thread \" COUNT_FORMAT \")\", \" \", ThreadStackTracker::thread_count());\n@@ -219,3 +218,3 @@\n-        out->print_cr(\"%27s (thread #\" SIZE_FORMAT \")\", \" \", thread_stack_memory->malloc_count());\n-        out->print(\"%27s (Stack: \" SIZE_FORMAT \"%s\", \" \",\n-          amount_in_current_scale(thread_stack_memory->malloc_size()), scale);\n+        out->print_cr(\"%27s (thread \" COUNT_FORMAT \")\", \" \", thread_stack_memory->malloc_count());\n+        out->print(\"%27s (Stack: \" SCALED_FORMAT, \" \",\n+            SCALED_FORMAT_ARGS(thread_stack_memory->malloc_size()));\n@@ -243,2 +242,2 @@\n-      out->print_cr(\"%27s (tracking overhead=\" SIZE_FORMAT \"%s)\", \" \",\n-        amount_in_current_scale(_malloc_snapshot->malloc_overhead()), scale);\n+      out->print_cr(\"%27s (tracking overhead=\" SCALED_FORMAT \")\", \" \",\n+          SCALED_FORMAT_ARGS(_malloc_snapshot->malloc_overhead()));\n@@ -273,3 +272,3 @@\n-  out->print_cr(\"%27s (    used=\" SIZE_FORMAT \"%s)\", \" \", amount_in_current_scale(stats.used()), scale);\n-  out->print_cr(\"%27s (    waste=\" SIZE_FORMAT \"%s =%2.2f%%)\", \" \", amount_in_current_scale(waste),\n-    scale, waste_percentage);\n+  out->print_cr(\"%27s (    used=\" SCALED_FORMAT \")\", \" \", SCALED_FORMAT_ARGS(stats.used()));\n+  out->print_cr(\"%27s (    waste=\" SCALED_FORMAT \" =%2.2f%%)\", \" \", SCALED_FORMAT_ARGS(waste),\n+      waste_percentage);\n@@ -453,1 +452,1 @@\n-  out->print(\"%s\" SIZE_FORMAT \"%s\", alloc_type, amount_in_current_scale(current_amount), scale);\n+  out->print(\"%s\" SCALED_FORMAT, alloc_type, SCALED_FORMAT_ARGS(current_amount));\n@@ -464,1 +463,1 @@\n-    out->print(\" #\" SIZE_FORMAT \"\", current_count);\n+    out->print(\" \" COUNT_FORMAT, current_count);\n@@ -473,1 +472,0 @@\n-  const char* scale = current_scale();\n@@ -475,1 +473,1 @@\n-  out->print(\"arena=\" SIZE_FORMAT \"%s\", amount_in_current_scale(current_amount), scale);\n+  out->print(\"arena=\" SCALED_FORMAT, SCALED_FORMAT_ARGS(current_amount));\n@@ -480,1 +478,1 @@\n-  out->print(\" #\" SIZE_FORMAT \"\", current_count);\n+  out->print(\" \" COUNT_FORMAT \"\", current_count);\n@@ -490,1 +488,1 @@\n-  out->print(\"reserved=\" SIZE_FORMAT \"%s\", amount_in_current_scale(current_reserved), scale);\n+  out->print(\"reserved=\" SCALED_FORMAT, SCALED_FORMAT_ARGS(current_reserved));\n@@ -496,1 +494,1 @@\n-  out->print(\", committed=\" SIZE_FORMAT \"%s\", amount_in_current_scale(current_committed), scale);\n+  out->print(\", committed=\" SCALED_FORMAT, SCALED_FORMAT_ARGS(current_committed));\n@@ -553,1 +551,1 @@\n-      out->print(\"%27s (classes #\" SIZE_FORMAT \"\", \" \", _current_baseline.class_count());\n+      out->print(\"%27s (classes \" COUNT_FORMAT \"\", \" \", _current_baseline.class_count());\n@@ -561,1 +559,1 @@\n-      out->print(\"%27s (  instance classes #\" SIZE_FORMAT, \" \", _current_baseline.instance_class_count());\n+      out->print(\"%27s (  instance classes \" COUNT_FORMAT, \" \", _current_baseline.instance_class_count());\n@@ -565,1 +563,1 @@\n-      out->print(\", array classes #\" SIZE_FORMAT, _current_baseline.array_class_count());\n+      out->print(\", array classes \" COUNT_FORMAT, _current_baseline.array_class_count());\n@@ -573,1 +571,1 @@\n-      out->print(\"%27s (thread #\" SIZE_FORMAT \"\", \" \", _current_baseline.thread_count());\n+      out->print(\"%27s (thread \" COUNT_FORMAT \"\", \" \", _current_baseline.thread_count());\n@@ -683,2 +681,2 @@\n-  out->print(\"%27s (    used=\" SIZE_FORMAT \"%s\", \" \",\n-    amount_in_current_scale(current_stats.used()), scale);\n+  out->print(\"%27s (    used=\" SCALED_FORMAT, \" \",\n+      SCALED_FORMAT_ARGS(current_stats.used()));\n@@ -693,2 +691,2 @@\n-  out->print(\"%27s (    waste=\" SIZE_FORMAT \"%s =%2.2f%%\", \" \",\n-    amount_in_current_scale(current_waste), scale, waste_percentage);\n+  out->print(\"%27s (    waste=\" SCALED_FORMAT \" =%2.2f%%\", \" \",\n+      SCALED_FORMAT_ARGS(current_waste), waste_percentage);\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":49,"deletions":51,"binary":false,"changes":100,"status":"modified"}]}