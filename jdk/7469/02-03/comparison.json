{"files":[{"patch":"@@ -32,0 +32,2 @@\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -43,0 +45,1 @@\n+\n@@ -58,1 +61,2 @@\n-    private static volatile boolean passed = false;\n+    private static CountDownLatch textAreaGainedFocusLatch;\n+    private static CountDownLatch buttonGainedFocusLatch;\n@@ -72,0 +76,2 @@\n+            textAreaGainedFocusLatch = new CountDownLatch(1);\n+            buttonGainedFocusLatch = new CountDownLatch(1);\n@@ -86,9 +92,5 @@\n-                int waitCount = 0;\n-                \/\/ Waits until the textArea becomes the focus owner.\n-                while (!isFocusOwner()) {\n-                    robot.delay(100);\n-                    waitCount++;\n-                    if (waitCount > 20) {\n-                        throw new RuntimeException(\"Test Failed, waited for long, \" +\n-                                \"but the JTextArea can't gain focus for L&F: \" + laf);\n-                    }\n+\n+                \/\/ Waits until the textArea gains focus.\n+                if (!textAreaGainedFocusLatch.await(3, TimeUnit.SECONDS)) {\n+                    throw new RuntimeException(\"Test Failed, waited for long, \" +\n+                            \"but the JTextArea can't gain focus for L&F: \" + laf);\n@@ -102,2 +104,0 @@\n-                passed = false;\n-\n@@ -113,2 +113,4 @@\n-                if (passed) {\n-                    System.out.println(\" Test passed for \" + laf);\n+                \/\/ Waits until the button gains focus.\n+                if (!buttonGainedFocusLatch.await(3, TimeUnit.SECONDS)) {\n+                    throw new RuntimeException(\"Test Failed, waited for long, \" +\n+                            \"but the Button can't gain focus when 'Tab' key pressed for L&F: \" + laf);\n@@ -116,1 +118,1 @@\n-                    throw new RuntimeException(\"Test failed for \" + laf);\n+                    System.out.println(\" Test passed for \" + laf);\n@@ -124,5 +126,0 @@\n-    private static boolean isFocusOwner() throws Exception {\n-        AtomicBoolean isFocusOwner = new AtomicBoolean(false);\n-        SwingUtilities.invokeAndWait(() -> isFocusOwner.set(textArea.isFocusOwner()));\n-        return isFocusOwner.get();\n-    }\n@@ -134,0 +131,6 @@\n+        textArea.addFocusListener(new FocusAdapter() {\n+            @Override\n+            public void focusGained(FocusEvent e) {\n+                textAreaGainedFocusLatch.countDown();\n+            }\n+        });\n@@ -141,1 +144,1 @@\n-                passed = true;\n+                buttonGainedFocusLatch.countDown();\n@@ -146,0 +149,1 @@\n+        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n","filename":"test\/jdk\/javax\/swing\/JTextArea\/4514331\/TabShiftsFocusToNextComponent.java","additions":25,"deletions":21,"binary":false,"changes":46,"status":"modified"}]}