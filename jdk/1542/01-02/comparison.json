{"files":[{"patch":"@@ -35,2 +35,1 @@\n- * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n- * @compile ..\/..\/..\/..\/..\/jdk\/java\/lang\/invoke\/lambda\/LambdaEagerInitTest.java\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds test-classes\n@@ -48,1 +47,3 @@\n-        testImpl();\n+        createArchiveWithEagerInitializationEnabled();\n+        testWithEagerInitializationEnabled();\n+        testWithEagerInitializationDisabled();\n@@ -52,1 +53,1 @@\n-    private static final String mainClass = \"LambdaEagerInitTest\";\n+    private static final String mainClass = LambdaEagerInitTest.class.getName();\n@@ -54,0 +55,5 @@\n+    private static final String lambdaNotLoadedFromArchive =\n+        \".class.load. java.util.stream.Collectors[$][$]Lambda[$].*\/0x.*source:.*java.*util.*stream.*Collectors\";\n+    private static final String cdsLoadedLambdaProxy = \".cds.*Loaded.*lambda.*proxy\";\n+    private static final String archiveName = mainClass + \".jsa\";\n+    private static String appJar;\n@@ -55,3 +61,2 @@\n-    static void testImpl() throws Exception {\n-        String appJar = JarBuilder.build(\"lambda_eager\", new File(classDir), null);\n-        String archiveName = mainClass + \".jsa\";\n+    static void createArchiveWithEagerInitializationEnabled() throws Exception {\n+        appJar = JarBuilder.build(\"lambda_eager\", new File(classDir), null);\n@@ -65,0 +70,1 @@\n+    }\n@@ -66,0 +72,1 @@\n+    static void testWithEagerInitializationEnabled() throws Exception {\n@@ -73,2 +80,2 @@\n-        output.shouldMatch(\".class.load. java.util.stream.Collectors[$][$]Lambda[$].*\/0x.*source:.*java.*util.*stream.*Collectors\")\n-              .shouldNotMatch(\".cds.*Loaded.*lambda.*proxy\")\n+        output.shouldMatch(lambdaNotLoadedFromArchive)\n+              .shouldNotMatch(cdsLoadedLambdaProxy)\n@@ -76,0 +83,1 @@\n+    }\n@@ -77,0 +85,1 @@\n+    static void testWithEagerInitializationDisabled() throws Exception {\n@@ -78,1 +87,1 @@\n-        runOpts = (new CDSOptions())\n+        CDSOptions runOpts = (new CDSOptions())\n@@ -83,3 +92,3 @@\n-        output = CDSTestUtils.runWithArchive(runOpts);\n-        output.shouldMatch(\".class.load. java.util.stream.Collectors[$][$]Lambda[$].*\/0x.*source:.*java.*util.*stream.*Collectors\")\n-              .shouldNotMatch(\".cds.*Loaded.*lambda.*proxy\")\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n+        output.shouldMatch(lambdaNotLoadedFromArchive)\n+              .shouldNotMatch(cdsLoadedLambdaProxy)\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaEagerInit.java","additions":22,"deletions":13,"binary":false,"changes":35,"status":"modified"},{"patch":"","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/test-classes\/LambdaEagerInitTest.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/java\/lang\/invoke\/lambda\/LambdaEagerInitTest.java","status":"copied"}]}