{"files":[{"patch":"@@ -1687,2 +1687,1 @@\n-                                                                         InstanceKlass* caller_ik,\n-                                                                         bool initialize, TRAPS) {\n+                                                                         InstanceKlass* caller_ik, TRAPS) {\n@@ -1729,3 +1728,1 @@\n-  if (initialize) {\n-    loaded_lambda->initialize(CHECK_NULL);\n-  }\n+  loaded_lambda->initialize(CHECK_NULL);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -307,2 +307,1 @@\n-                                                          InstanceKlass* caller_ik,\n-                                                          bool initialize, TRAPS) NOT_CDS_RETURN_(NULL);\n+                                                          InstanceKlass* caller_ik, TRAPS) NOT_CDS_RETURN_(NULL);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -197,2 +197,1 @@\n-                                      jobject instantiatedMethodType,\n-                                      jboolean initialize);\n+                                      jobject instantiatedMethodType);\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3828,2 +3828,1 @@\n-                                                        jobject instantiatedMethodType,\n-                                                        jboolean initialize))\n+                                                        jobject instantiatedMethodType))\n@@ -3863,1 +3862,1 @@\n-    InstanceKlass* loaded_lambda = SystemDictionaryShared::prepare_shared_lambda_proxy_class(lambda_ik, caller_ik, initialize, THREAD);\n+    InstanceKlass* loaded_lambda = SystemDictionaryShared::prepare_shared_lambda_proxy_class(lambda_ik, caller_ik, THREAD);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -266,15 +266,17 @@\n-        \/\/ include lambda proxy class in CDS archive at dump time\n-        if (CDS.isDumpingArchive()) {\n-            Class<?> innerClass = generateInnerClass();\n-            LambdaProxyClassArchive.register(targetClass,\n-                                             samMethodName,\n-                                             invokedType,\n-                                             samMethodType,\n-                                             implMethod,\n-                                             instantiatedMethodType,\n-                                             isSerializable,\n-                                             markerInterfaces,\n-                                             additionalBridges,\n-                                             innerClass);\n-            return innerClass;\n-        }\n+        \/\/ CDS does not handle disableEagerInitialization.\n+        if (!disableEagerInitialization) {\n+            \/\/ include lambda proxy class in CDS archive at dump time\n+            if (CDS.isDumpingArchive()) {\n+                Class<?> innerClass = generateInnerClass();\n+                LambdaProxyClassArchive.register(targetClass,\n+                                                 samMethodName,\n+                                                 invokedType,\n+                                                 samMethodType,\n+                                                 implMethod,\n+                                                 instantiatedMethodType,\n+                                                 isSerializable,\n+                                                 markerInterfaces,\n+                                                 additionalBridges,\n+                                                 innerClass);\n+                return innerClass;\n+            }\n@@ -282,13 +284,11 @@\n-        \/\/ load from CDS archive if present\n-        Class<?> innerClass = LambdaProxyClassArchive.find(targetClass,\n-                                                           samMethodName,\n-                                                           invokedType,\n-                                                           samMethodType,\n-                                                           implMethod,\n-                                                           instantiatedMethodType,\n-                                                           isSerializable,\n-                                                           markerInterfaces,\n-                                                           additionalBridges,\n-                                                           !disableEagerInitialization);\n-        if (innerClass == null) {\n-            innerClass = generateInnerClass();\n+            \/\/ load from CDS archive if present\n+            Class<?> innerClass = LambdaProxyClassArchive.find(targetClass,\n+                                                               samMethodName,\n+                                                               invokedType,\n+                                                               samMethodType,\n+                                                               implMethod,\n+                                                               instantiatedMethodType,\n+                                                               isSerializable,\n+                                                               markerInterfaces,\n+                                                               additionalBridges);\n+            if (innerClass != null) return innerClass;\n@@ -296,1 +296,1 @@\n-        return innerClass;\n+        return generateInnerClass();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InnerClassLambdaMetafactory.java","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -53,2 +53,1 @@\n-                                                   MethodType instantiatedMethodType,\n-                                                   boolean initialize);\n+                                                   MethodType instantiatedMethodType);\n@@ -104,2 +103,1 @@\n-                         MethodType[] additionalBridges,\n-                         boolean initialize) {\n+                         MethodType[] additionalBridges) {\n@@ -109,1 +107,1 @@\n-        if (!loadedByBuiltinLoader(caller) || !initialize ||\n+        if (!loadedByBuiltinLoader(caller) ||\n@@ -114,1 +112,1 @@\n-                               implMethod.internalMemberName(), instantiatedMethodType, initialize);\n+                               implMethod.internalMemberName(), instantiatedMethodType);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaProxyClassArchive.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -54,2 +54,1 @@\n-                                                            jobject instantiatedMethodType,\n-                                                            jboolean initialize) {\n+                                                            jobject instantiatedMethodType) {\n@@ -58,1 +57,1 @@\n-                                                 instantiatedMethodType, initialize);\n+                                                 instantiatedMethodType);\n","filename":"src\/java.base\/share\/native\/libjava\/LambdaProxyClassArchive.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}