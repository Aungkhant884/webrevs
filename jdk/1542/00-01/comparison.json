{"files":[{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8257241\n+ * @summary Run the LambdaEagerInitTest.java test in static CDS archive mode.\n+ *          Create a base archive with the -Djdk.internal.lambda.disableEagerInitialization=true property.\n+ *          Run with the archive with and without specifying the property.\n+ *          With the disableEagerInit set to true, lambda proxy classes will not\n+ *          be archived. During runtime, lambda proxy classes will not be loaded\n+ *          from the archive.\n+ * @requires vm.cds\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\/runtime\/cds\/appcds\n+ * @compile ..\/..\/..\/..\/..\/jdk\/java\/lang\/invoke\/lambda\/LambdaEagerInitTest.java\n+ * @run main\/othervm LambdaEagerInit\n+ *\/\n+\n+import java.io.File;\n+\n+import jdk.test.lib.cds.CDSOptions;\n+import jdk.test.lib.cds.CDSTestUtils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class LambdaEagerInit {\n+    public static void main(String[] args) throws Exception {\n+        testImpl();\n+    }\n+\n+    private static final String classDir = System.getProperty(\"test.classes\");\n+    private static final String mainClass = \"LambdaEagerInitTest\";\n+    private static final String testProperty = \"-Djdk.internal.lambda.disableEagerInitialization=true\";\n+\n+    static void testImpl() throws Exception {\n+        String appJar = JarBuilder.build(\"lambda_eager\", new File(classDir), null);\n+        String archiveName = mainClass + \".jsa\";\n+\n+        \/\/ create base archive with the -Djdk.internal.lambda.disableEagerInitialization=true property\n+        CDSOptions opts = (new CDSOptions())\n+            .addPrefix(testProperty,\n+                       \"-Xlog:class+load,cds\")\n+            .setArchiveName(archiveName);\n+        CDSTestUtils.createArchiveAndCheck(opts);\n+\n+        \/\/ run with archive with the -Djdk.internal.lambda.disableEagerInitialization=true property\n+        CDSOptions runOpts = (new CDSOptions())\n+            .addPrefix(\"-cp\", appJar, testProperty,  \"-Xlog:class+load,cds=debug\")\n+            .setArchiveName(archiveName)\n+            .setUseVersion(false)\n+            .addSuffix(mainClass);\n+        OutputAnalyzer output = CDSTestUtils.runWithArchive(runOpts);\n+        output.shouldMatch(\".class.load. java.util.stream.Collectors[$][$]Lambda[$].*\/0x.*source:.*java.*util.*stream.*Collectors\")\n+              .shouldNotMatch(\".cds.*Loaded.*lambda.*proxy\")\n+              .shouldHaveExitValue(0);\n+\n+        \/\/ run with archive without the -Djdk.internal.lambda.disableEagerInitialization=true property\n+        runOpts = (new CDSOptions())\n+            .addPrefix(\"-cp\", appJar, \"-Xlog:class+load,cds=debug\")\n+            .setArchiveName(archiveName)\n+            .setUseVersion(false)\n+            .addSuffix(mainClass);\n+        output = CDSTestUtils.runWithArchive(runOpts);\n+        output.shouldMatch(\".class.load. java.util.stream.Collectors[$][$]Lambda[$].*\/0x.*source:.*java.*util.*stream.*Collectors\")\n+              .shouldNotMatch(\".cds.*Loaded.*lambda.*proxy\")\n+              .shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaEagerInit.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}