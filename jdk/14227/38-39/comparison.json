{"files":[{"patch":"@@ -172,2 +172,2 @@\n-         * @param indexPivot1 the index of pivot1, the first pivot\n-         * @param indexPivot2 the index of pivot2, the second pivot\n+         * @param pivotIndex1 the index of pivot1, the first pivot\n+         * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -175,1 +175,1 @@\n-        int[] partition(A a, int low, int high, int indexPivot1, int indexPivot2);\n+        int[] partition(A a, int low, int high, int pivotIndex1, int pivotIndex2);\n@@ -188,2 +188,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -194,2 +194,2 @@\n-    private static <A> int[] partition(Class<?> elemType, A array, long offset, int low, int high, int indexPivot1, int indexPivot2, PartitionOperation<A> po) {\n-        return po.partition(array, low, high, indexPivot1, indexPivot2);\n+    private static <A> int[] partition(Class<?> elemType, A array, long offset, int low, int high, int pivotIndex1, int pivotIndex2, PartitionOperation<A> po) {\n+        return po.partition(array, low, high, pivotIndex1, pivotIndex2);\n@@ -402,2 +402,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -407,1 +407,1 @@\n-    private static int[] partitionDualPivot(int[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionDualPivot(int[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -412,2 +412,2 @@\n-        int e1 = indexPivot1;\n-        int e5 = indexPivot2;\n+        int e1 = pivotIndex1;\n+        int e5 = pivotIndex2;\n@@ -483,2 +483,0 @@\n-\n-\n@@ -491,2 +489,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -496,1 +494,1 @@\n-    private static int[] partitionSinglePivot(int[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionSinglePivot(int[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -501,1 +499,1 @@\n-        int e3 = indexPivot1;\n+        int e3 = pivotIndex1;\n@@ -1205,2 +1203,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -1210,1 +1208,1 @@\n-    private static int[] partitionDualPivot(long[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionDualPivot(long[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -1215,2 +1213,2 @@\n-        int e1 = indexPivot1;\n-        int e5 = indexPivot2;\n+        int e1 = pivotIndex1;\n+        int e5 = pivotIndex2;\n@@ -1286,1 +1284,0 @@\n-\n@@ -1293,2 +1290,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -1298,1 +1295,1 @@\n-    private static int[] partitionSinglePivot(long[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionSinglePivot(long[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -1304,1 +1301,1 @@\n-        int e3 = indexPivot1;\n+        int e3 = pivotIndex1;\n@@ -2795,2 +2792,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -2800,1 +2797,1 @@\n-    private static int[] partitionDualPivot(float[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionDualPivot(float[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -2805,2 +2802,2 @@\n-        int e1 = indexPivot1;\n-        int e5 = indexPivot2;\n+        int e1 = pivotIndex1;\n+        int e5 = pivotIndex2;\n@@ -2876,1 +2873,0 @@\n-\n@@ -2883,2 +2879,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -2888,1 +2884,1 @@\n-    private static int[] partitionSinglePivot(float[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionSinglePivot(float[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -2893,1 +2889,1 @@\n-        int e3 = indexPivot1;\n+        int e3 = pivotIndex1;\n@@ -3649,2 +3645,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -3654,1 +3650,1 @@\n-    private static int[] partitionDualPivot(double[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionDualPivot(double[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -3659,2 +3655,2 @@\n-        int e1 = indexPivot1;\n-        int e5 = indexPivot2;\n+        int e1 = pivotIndex1;\n+        int e5 = pivotIndex2;\n@@ -3730,2 +3726,0 @@\n-\n-\n@@ -3738,2 +3732,2 @@\n-     * @param indexPivot1 the index of pivot1, the first pivot\n-     * @param indexPivot2 the index of pivot2, the second pivot\n+     * @param pivotIndex1 the index of pivot1, the first pivot\n+     * @param pivotIndex2 the index of pivot2, the second pivot\n@@ -3742,1 +3736,1 @@\n-    private static int[] partitionSinglePivot(double[] a, int low, int high, int indexPivot1, int indexPivot2) {\n+    private static int[] partitionSinglePivot(double[] a, int low, int high, int pivotIndex1, int pivotIndex2) {\n@@ -3748,1 +3742,1 @@\n-        int e3 = indexPivot1;\n+        int e3 = pivotIndex1;\n","filename":"src\/java.base\/share\/classes\/java\/util\/DualPivotQuicksort.java","additions":43,"deletions":49,"binary":false,"changes":92,"status":"modified"}]}