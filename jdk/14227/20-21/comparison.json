{"files":[{"patch":"@@ -441,28 +441,0 @@\n-\n-\n-X86_SIMD_SORT_INLINE int64_t replace_nan_with_inf(float *arr, int64_t arrsize) {\n-    int64_t nan_count = 0;\n-    __mmask16 loadmask = 0xFFFF;\n-    while (arrsize > 0) {\n-        if (arrsize < 16) {\n-            loadmask = (0x0001 << arrsize) - 0x0001;\n-        }\n-        __m512 in_zmm = _mm512_maskz_loadu_ps(loadmask, arr);\n-        __mmask16 nanmask = _mm512_cmp_ps_mask(in_zmm, in_zmm, _CMP_NEQ_UQ);\n-        nan_count += _mm_popcnt_u32((int32_t)nanmask);\n-        _mm512_mask_storeu_ps(arr, nanmask, ZMM_MAX_FLOAT);\n-        arr += 16;\n-        arrsize -= 16;\n-    }\n-    return nan_count;\n-}\n-\n-X86_SIMD_SORT_INLINE void replace_inf_with_nan(float *arr, int64_t arrsize,\n-                                               int64_t nan_count) {\n-    for (int64_t ii = arrsize - 1; nan_count > 0; --ii) {\n-        arr[ii] = std::nanf(\"1\");\n-        nan_count -= 1;\n-    }\n-}\n-\n-\n@@ -479,0 +451,2 @@\n+    int64_t idx_last_elem_not_nan = move_nans_to_end_of_array(arr, arrsize);\n+    arrsize = idx_last_elem_not_nan + 1;\n@@ -480,2 +454,1 @@\n-        int64_t nan_count = replace_nan_with_inf(arr, arrsize);\n-        qsort_32bit_<zmm_vector<float>, float>(arr, 0, arrsize - 1,\n+        qsort_32bit_<zmm_vector<float>, float>(arr, 0, idx_last_elem_not_nan,\n@@ -483,1 +456,0 @@\n-        replace_inf_with_nan(arr, arrsize, nan_count);\n","filename":"src\/java.base\/linux\/native\/libx86_64\/avx512-32bit-qsort.hpp","additions":3,"deletions":31,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -185,17 +185,0 @@\n-X86_SIMD_SORT_INLINE int64_t replace_nan_with_inf(double *arr,\n-                                                  int64_t arrsize) {\n-    int64_t nan_count = 0;\n-    __mmask8 loadmask = 0xFF;\n-    while (arrsize > 0) {\n-        if (arrsize < 8) {\n-            loadmask = (0x01 << arrsize) - 0x01;\n-        }\n-        __m512d in_zmm = _mm512_maskz_loadu_pd(loadmask, arr);\n-        __mmask8 nanmask = _mm512_cmp_pd_mask(in_zmm, in_zmm, _CMP_NEQ_UQ);\n-        nan_count += _mm_popcnt_u32((int32_t)nanmask);\n-        _mm512_mask_storeu_pd(arr, nanmask, ZMM_MAX_DOUBLE);\n-        arr += 8;\n-        arrsize -= 8;\n-    }\n-    return nan_count;\n-}\n@@ -203,7 +186,0 @@\n-X86_SIMD_SORT_INLINE void replace_inf_with_nan(double *arr, int64_t arrsize,\n-                                               int64_t nan_count) {\n-    for (int64_t ii = arrsize - 1; nan_count > 0; --ii) {\n-        arr[ii] = std::nan(\"1\");\n-        nan_count -= 1;\n-    }\n-}\n","filename":"src\/java.base\/linux\/native\/libx86_64\/avx512-64bit-common.h","additions":0,"deletions":24,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -766,0 +766,2 @@\n+    int64_t idx_last_elem_not_nan = move_nans_to_end_of_array(arr, arrsize);\n+    arrsize = idx_last_elem_not_nan + 1;\n@@ -767,2 +769,1 @@\n-        int64_t nan_count = replace_nan_with_inf(arr, arrsize);\n-        qsort_64bit_<zmm_vector<double>, double>(arr, 0, arrsize - 1,\n+        qsort_64bit_<zmm_vector<double>, double>(arr, 0, idx_last_elem_not_nan,\n@@ -770,1 +771,0 @@\n-        replace_inf_with_nan(arr, arrsize, nan_count);\n","filename":"src\/java.base\/linux\/native\/libx86_64\/avx512-64bit-qsort.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-    @Warmup(iterations = 3, time=20)\n+    @Warmup(iterations = 3, time=40)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/ArraysSort.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}