{"files":[{"patch":"@@ -4195,2 +4195,2 @@\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_sort_int\");\n-      StubRoutines::_arraysort_int = (address)os::dll_lookup(libsimdsort, ebuf_);\n+      snprintf(ebuf_, sizeof(ebuf_), \"avx512_sort\");\n+      StubRoutines::_arraysort = (address)os::dll_lookup(libsimdsort, ebuf_);\n@@ -4198,2 +4198,2 @@\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_sort_long\");\n-      StubRoutines::_arraysort_long = (address)os::dll_lookup(libsimdsort, ebuf_);\n+      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_single\");\n+      StubRoutines::_array_partition_single = (address)os::dll_lookup(libsimdsort, ebuf_);\n@@ -4201,2 +4201,2 @@\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_sort_float\");\n-      StubRoutines::_arraysort_float = (address)os::dll_lookup(libsimdsort, ebuf_);\n+      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_dual\");\n+      StubRoutines::_array_partition_dual = (address)os::dll_lookup(libsimdsort, ebuf_);\n@@ -4204,26 +4204,0 @@\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_sort_double\");\n-      StubRoutines::_arraysort_double = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_single_int\");\n-      StubRoutines::_array_partition_single_int = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_dual_int\");\n-      StubRoutines::_array_partition_dual_int = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_single_long\");\n-      StubRoutines::_array_partition_single_long = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_dual_long\");\n-      StubRoutines::_array_partition_dual_long = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_single_float\");\n-      StubRoutines::_array_partition_single_float = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_dual_float\");\n-      StubRoutines::_array_partition_dual_float = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_single_double\");\n-      StubRoutines::_array_partition_single_double = (address)os::dll_lookup(libsimdsort, ebuf_);\n-\n-      snprintf(ebuf_, sizeof(ebuf_), \"avx512_partition_dual_double\");\n-      StubRoutines::_array_partition_dual_double = (address)os::dll_lookup(libsimdsort, ebuf_);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":6,"deletions":32,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -391,1 +391,1 @@\n-        { { TypeFunc::Parms, ShenandoahStore }, { TypeFunc::Parms+3, ShenandoahStore },   { -1, ShenandoahNone },\n+        { { TypeFunc::Parms, ShenandoahStore }, { TypeFunc::Parms+4, ShenandoahStore },   { -1, ShenandoahNone },\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/c2\/shenandoahSupport.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -330,12 +330,3 @@\n-  static_field(StubRoutines,                _arraysort_int,                                   address)                               \\\n-  static_field(StubRoutines,                _arraysort_long,                                  address)                               \\\n-  static_field(StubRoutines,                _arraysort_float,                                 address)                               \\\n-  static_field(StubRoutines,                _arraysort_double,                                address)                               \\\n-  static_field(StubRoutines,                _array_partition_single_int,                      address)                               \\\n-  static_field(StubRoutines,                _array_partition_dual_int,                        address)                               \\\n-  static_field(StubRoutines,                _array_partition_single_long,                     address)                               \\\n-  static_field(StubRoutines,                _array_partition_dual_long,                       address)                               \\\n-  static_field(StubRoutines,                _array_partition_single_float,                    address)                               \\\n-  static_field(StubRoutines,                _array_partition_dual_float,                      address)                               \\\n-  static_field(StubRoutines,                _array_partition_single_double,                   address)                               \\\n-  static_field(StubRoutines,                _array_partition_dual_double,                     address)                               \\\n+  static_field(StubRoutines,                _arraysort,                                       address)                               \\\n+  static_field(StubRoutines,                _array_partition_single,                          address)                               \\\n+  static_field(StubRoutines,                _array_partition_dual,                            address)                               \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -5390,1 +5390,1 @@\n-  stubAddr = StubRoutines::select_array_partition_function(bt, is_dual_pivot);\n+  stubAddr = StubRoutines::select_array_partition_function(is_dual_pivot);\n@@ -5411,0 +5411,3 @@\n+  \/\/ pass the bastic type enum to the stub\n+  Node* elemType = intcon(bt);\n+\n@@ -5414,1 +5417,1 @@\n-                    obj_adr, fromIndex, toIndex, pivotIndices_adr, indexPivot1, indexPivot2);\n+                    obj_adr, elemType, fromIndex, toIndex, pivotIndices_adr, indexPivot1, indexPivot2);\n@@ -5440,1 +5443,1 @@\n-  stubAddr = StubRoutines::select_arraysort_function(bt);\n+  stubAddr = StubRoutines::select_arraysort_function();\n@@ -5453,0 +5456,3 @@\n+  \/\/ pass the bastic type enum to the stub\n+  Node* elemType = intcon(bt);\n+\n@@ -5456,1 +5462,1 @@\n-                    obj_adr, fromIndex, toIndex);\n+                    obj_adr, elemType, fromIndex, toIndex);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -862,1 +862,1 @@\n-  int num_args = is_dual_pivot ? 6 : 5;\n+  int num_args = is_dual_pivot ? 7 : 6;\n@@ -867,0 +867,1 @@\n+  fields[argp++] = TypeInt::INT;      \/\/ element type\n@@ -886,1 +887,1 @@\n-  int num_args      = 3;\n+  int num_args      = 4;\n@@ -891,0 +892,1 @@\n+  fields[argp++] = TypeInt::INT;    \/\/ element type\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -179,12 +179,3 @@\n-address StubRoutines::_arraysort_int = nullptr;\n-address StubRoutines::_arraysort_long = nullptr;\n-address StubRoutines::_arraysort_float = nullptr;\n-address StubRoutines::_arraysort_double = nullptr;\n-address StubRoutines::_array_partition_single_int  = nullptr;\n-address StubRoutines::_array_partition_dual_int  = nullptr;\n-address StubRoutines::_array_partition_single_long = nullptr;\n-address StubRoutines::_array_partition_dual_long = nullptr;\n-address StubRoutines::_array_partition_single_float = nullptr;\n-address StubRoutines::_array_partition_dual_float = nullptr;\n-address StubRoutines::_array_partition_single_double = nullptr;\n-address StubRoutines::_array_partition_dual_double = nullptr;\n+address StubRoutines::_arraysort = nullptr;\n+address StubRoutines::_array_partition_single  = nullptr;\n+address StubRoutines::_array_partition_dual  = nullptr;\n@@ -547,24 +538,0 @@\n-\n-address StubRoutines::select_arraysort_function(BasicType t) {\n-  switch(t) {\n-    case T_INT:    return _arraysort_int;\n-    case T_LONG:   return _arraysort_long;\n-    case T_FLOAT:  return _arraysort_float;\n-    case T_DOUBLE: return _arraysort_double;\n-  default:\n-    ShouldNotReachHere();\n-    return nullptr;\n-  }\n-}\n-\n-address StubRoutines::select_array_partition_function(BasicType t, bool is_dual_pivot) {\n-  switch(t) {\n-    case T_INT:    return is_dual_pivot ? _array_partition_dual_int : _array_partition_single_int;\n-    case T_LONG:   return is_dual_pivot ? _array_partition_dual_long : _array_partition_single_long;\n-    case T_FLOAT:  return is_dual_pivot ? _array_partition_dual_float : _array_partition_single_float;\n-    case T_DOUBLE: return is_dual_pivot ? _array_partition_dual_double : _array_partition_single_double;\n-  default:\n-    ShouldNotReachHere();\n-    return nullptr;\n-  }\n-}\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":3,"deletions":36,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -156,12 +156,3 @@\n-  static address _arraysort_int;\n-  static address _arraysort_long;\n-  static address _arraysort_float;\n-  static address _arraysort_double;\n-  static address _array_partition_single_int;\n-  static address _array_partition_dual_int;\n-  static address _array_partition_single_long;\n-  static address _array_partition_dual_long;\n-  static address _array_partition_single_float;\n-  static address _array_partition_dual_float;\n-  static address _array_partition_single_double;\n-  static address _array_partition_dual_double;\n+  static address _arraysort;\n+  static address _array_partition_single;\n+  static address _array_partition_dual;\n@@ -390,2 +381,2 @@\n-  static address select_arraysort_function(BasicType t);\n-  static address select_array_partition_function(BasicType t, bool is_dual_pivot);\n+  static address select_arraysort_function() { return _arraysort; }\n+  static address select_array_partition_function(bool is_dual_pivot) { return is_dual_pivot ? _array_partition_dual : _array_partition_single; }\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.hpp","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"classfile_constants.h\"\n@@ -37,2 +38,15 @@\n-    DLL_PUBLIC void avx512_sort_int(int32_t *array, int64_t from_index, int64_t to_index) {\n-        avx512_fastsort<int32_t>(array, from_index, to_index, INSERTION_SORT_THRESHOLD_32BIT);\n+    DLL_PUBLIC void avx512_sort(void *array, int elem_type, int32_t from_index, int32_t to_index) {\n+        switch(elem_type) {\n+            case JVM_T_INT:\n+                avx512_fastsort<int32_t>((int32_t*)array, from_index, to_index, INSERTION_SORT_THRESHOLD_32BIT);\n+                break;\n+            case JVM_T_LONG:\n+                avx512_fastsort<int64_t>((int64_t*)array, from_index, to_index, INSERTION_SORT_THRESHOLD_64BIT);\n+                break;\n+            case JVM_T_FLOAT:\n+                avx512_fastsort<float>((float*)array, from_index, to_index, INSERTION_SORT_THRESHOLD_32BIT);\n+                break;\n+            case JVM_T_DOUBLE:\n+                avx512_fastsort<double>((double*)array, from_index, to_index, INSERTION_SORT_THRESHOLD_64BIT);\n+                break;\n+        }\n@@ -41,2 +55,15 @@\n-    DLL_PUBLIC void avx512_sort_long(int64_t *array, int64_t from_index, int64_t to_index) {\n-        avx512_fastsort<int64_t>(array, from_index, to_index, INSERTION_SORT_THRESHOLD_64BIT);\n+    DLL_PUBLIC void avx512_partition_single(void *array, int elem_type, int32_t from_index, int32_t to_index, int32_t *pivot_indices, int32_t index_pivot) {\n+        switch(elem_type) {\n+            case JVM_T_INT:\n+                avx512_single_pivot_partition<int32_t>((int32_t*)array, from_index, to_index, pivot_indices, index_pivot);\n+                break;\n+            case JVM_T_LONG:\n+                avx512_single_pivot_partition<int64_t>((int64_t*)array, from_index, to_index, pivot_indices, index_pivot);\n+                break;\n+            case JVM_T_FLOAT:\n+                 avx512_single_pivot_partition<float>((float*)array, from_index, to_index, pivot_indices, index_pivot);\n+                break;\n+            case JVM_T_DOUBLE:\n+                avx512_single_pivot_partition<double>((double*)array, from_index, to_index, pivot_indices, index_pivot);\n+                break;\n+        }\n@@ -45,38 +72,15 @@\n-    DLL_PUBLIC void avx512_sort_float(float *array, int64_t from_index, int64_t to_index) {\n-        avx512_fastsort<float>(array, from_index, to_index, INSERTION_SORT_THRESHOLD_32BIT);\n-    }\n-\n-    DLL_PUBLIC void avx512_sort_double(double *array, int64_t from_index, int64_t to_index) {\n-        avx512_fastsort<double>(array, from_index, to_index, INSERTION_SORT_THRESHOLD_64BIT);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_single_int(int32_t *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot) {\n-        avx512_single_pivot_partition<int32_t>(array, from_index, to_index, pivot_indices, index_pivot);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_dual_int(int32_t *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot1, int32_t index_pivot2) {\n-        avx512_dual_pivot_partition<int32_t>(array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_single_long(int64_t *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot) {\n-        avx512_single_pivot_partition<int64_t>(array, from_index, to_index, pivot_indices, index_pivot);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_dual_long(int64_t *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot1, int32_t index_pivot2) {\n-        avx512_dual_pivot_partition<int64_t>(array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_single_float(float *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot) {\n-        avx512_single_pivot_partition<float>(array, from_index, to_index, pivot_indices, index_pivot);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_dual_float(float *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot1, int32_t index_pivot2) {\n-        avx512_dual_pivot_partition<float>(array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_single_double(double *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot) {\n-        avx512_single_pivot_partition<double>(array, from_index, to_index, pivot_indices, index_pivot);\n-    }\n-\n-    DLL_PUBLIC void avx512_partition_dual_double(double *array, int64_t from_index, int64_t to_index, int32_t *pivot_indices, int32_t index_pivot1, int32_t index_pivot2) {\n-        avx512_dual_pivot_partition<double>(array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n+    DLL_PUBLIC void avx512_partition_dual(void *array, int elem_type, int32_t from_index, int32_t to_index, int32_t *pivot_indices, int32_t index_pivot1, int32_t index_pivot2) {\n+        switch(elem_type) {\n+            case JVM_T_INT:\n+                avx512_dual_pivot_partition<int32_t>((int32_t*)array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n+                break;\n+            case JVM_T_LONG:\n+                avx512_dual_pivot_partition<int64_t>((int64_t*)array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n+                break;\n+            case JVM_T_FLOAT:\n+                avx512_dual_pivot_partition<float>((float*)array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n+                break;\n+            case JVM_T_DOUBLE:\n+                avx512_dual_pivot_partition<double>((double*)array, from_index, to_index, pivot_indices, index_pivot1, index_pivot2);\n+                break;\n+        }\n","filename":"src\/java.base\/linux\/native\/libsimdsort\/avxsort_linux_x86.cpp","additions":46,"deletions":42,"binary":false,"changes":88,"status":"modified"}]}