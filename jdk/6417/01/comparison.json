{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/acl,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/acl,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n@@ -637,0 +637,10 @@\n+class name jdk\/internal\/event\/Event\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor ()V flags 4\n+method name begin descriptor ()V flags 1\n+method name end descriptor ()V flags 1\n+method name commit descriptor ()V flags 1\n+method name isEnabled descriptor ()Z flags 1\n+method name shouldCommit descriptor ()Z flags 1\n+method name set descriptor (ILjava\/lang\/Object;)V flags 1\n+\n","filename":"make\/data\/symbols\/java.base-C.sym.txt","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n@@ -212,6 +212,0 @@\n-method name tryWriteLock descriptor ()J flags 1\n-method name writeLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n-method name tryReadLock descriptor ()J flags 1\n-method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J thrownTypes java\/lang\/InterruptedException flags 1\n-method name readLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n-method name unlock descriptor (J)V flags 1\n@@ -224,0 +218,6 @@\n+method name tryWriteLock descriptor ()J flags 1\n+method name writeLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name tryReadLock descriptor ()J flags 1\n+method name tryReadLock descriptor (JLjava\/util\/concurrent\/TimeUnit;)J thrownTypes java\/lang\/InterruptedException flags 1\n+method name readLockInterruptibly descriptor ()J thrownTypes java\/lang\/InterruptedException flags 1\n+method name unlock descriptor (J)V flags 1\n","filename":"make\/data\/symbols\/java.base-E.sym.txt","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,3 @@\n+module name java.base\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr],jdk\/internal\/vm\/vector[jdk.incubator.vector] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider target linux-amd64 flags 8000\n+\n@@ -680,1 +683,0 @@\n-field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -682,0 +684,1 @@\n+field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -1172,0 +1175,110 @@\n+class name jdk\/internal\/event\/Event\n+header extends java\/lang\/Object flags 421\n+-method name <init> descriptor ()V\n+-method name begin descriptor ()V\n+-method name end descriptor ()V\n+-method name commit descriptor ()V\n+-method name isEnabled descriptor ()Z\n+-method name shouldCommit descriptor ()Z\n+-method name set descriptor (ILjava\/lang\/Object;)V\n+method name <init> descriptor ()V flags 4\n+method name begin descriptor ()V flags 1\n+method name end descriptor ()V flags 1\n+method name commit descriptor ()V flags 1\n+method name isEnabled descriptor ()Z flags 1\n+method name shouldCommit descriptor ()Z flags 1\n+method name set descriptor (ILjava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport\n+header extends java\/lang\/Object nestMembers jdk\/internal\/vm\/vector\/VectorSupport$VectorMask,jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle,jdk\/internal\/vm\/vector\/VectorSupport$Vector,jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload,jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies flags 21\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+field name VECTOR_OP_ABS descriptor I constantValue 0 flags 19\n+field name VECTOR_OP_NEG descriptor I constantValue 1 flags 19\n+field name VECTOR_OP_SQRT descriptor I constantValue 2 flags 19\n+field name VECTOR_OP_ADD descriptor I constantValue 4 flags 19\n+field name VECTOR_OP_SUB descriptor I constantValue 5 flags 19\n+field name VECTOR_OP_MUL descriptor I constantValue 6 flags 19\n+field name VECTOR_OP_DIV descriptor I constantValue 7 flags 19\n+field name VECTOR_OP_MIN descriptor I constantValue 8 flags 19\n+field name VECTOR_OP_MAX descriptor I constantValue 9 flags 19\n+field name VECTOR_OP_AND descriptor I constantValue 10 flags 19\n+field name VECTOR_OP_OR descriptor I constantValue 11 flags 19\n+field name VECTOR_OP_XOR descriptor I constantValue 12 flags 19\n+field name VECTOR_OP_FMA descriptor I constantValue 13 flags 19\n+field name VECTOR_OP_LSHIFT descriptor I constantValue 14 flags 19\n+field name VECTOR_OP_RSHIFT descriptor I constantValue 15 flags 19\n+field name VECTOR_OP_URSHIFT descriptor I constantValue 16 flags 19\n+field name VECTOR_OP_CAST descriptor I constantValue 17 flags 19\n+field name VECTOR_OP_REINTERPRET descriptor I constantValue 18 flags 19\n+field name BT_eq descriptor I constantValue 0 flags 19\n+field name BT_ne descriptor I constantValue 4 flags 19\n+field name BT_le descriptor I constantValue 5 flags 19\n+field name BT_ge descriptor I constantValue 7 flags 19\n+field name BT_lt descriptor I constantValue 3 flags 19\n+field name BT_gt descriptor I constantValue 1 flags 19\n+field name BT_overflow descriptor I constantValue 2 flags 19\n+field name BT_no_overflow descriptor I constantValue 6 flags 19\n+field name T_FLOAT descriptor I constantValue 6 flags 19\n+field name T_DOUBLE descriptor I constantValue 7 flags 19\n+field name T_BYTE descriptor I constantValue 8 flags 19\n+field name T_SHORT descriptor I constantValue 9 flags 19\n+field name T_INT descriptor I constantValue 10 flags 19\n+field name T_LONG descriptor I constantValue 11 flags 19\n+method name <init> descriptor ()V flags 1\n+method name broadcastCoerced descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;IJLjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<TE;>;IJTS;Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation<TVM;TE;TS;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name shuffleIota descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle; flags 9 signature <E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;TS;IIIILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleIotaOperation<TE;TS;>;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name shuffleToVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;Sh:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;TSh;ILjdk\/internal\/vm\/vector\/VectorSupport$ShuffleToVectorOperation<TVM;TSh;TE;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name indexVector descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TE;>;ITV;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$IndexOperation<TV;TE;TS;>;)TV;\n+method name reductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/util\/function\/Function;)J flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITV;Ljava\/util\/function\/Function<TV;Ljava\/lang\/Long;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name extract descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp;)J flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITV;ILjdk\/internal\/vm\/vector\/VectorSupport$VecExtractOp<TV;>;)J runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name insert descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;IJLjdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<*>;ITV;IJLjdk\/internal\/vm\/vector\/VectorSupport$VecInsertOp<TV;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name unaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/util\/function\/Function;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<*>;ITVM;Ljava\/util\/function\/Function<TVM;TVM;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name binaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<*>;ITVM;TVM;Ljava\/util\/function\/BiFunction<TVM;TVM;TVM;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name ternaryOp descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation;)Ljava\/lang\/Object; flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<*>;ITVM;TVM;TVM;Ljdk\/internal\/vm\/vector\/VectorSupport$TernaryOperation<TVM;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name load descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation;)Ljava\/lang\/Object; flags 9 signature <C:Ljava\/lang\/Object;VM:Ljava\/lang\/Object;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<+TVM;>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Object;JTC;ITS;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadOperation<TC;TVM;TE;TS;>;)TVM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name loadWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;W:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;E:Ljava\/lang\/Object;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<TE;>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<TE;>;ILjava\/lang\/Class<*>;Ljava\/lang\/Object;JTW;TC;I[IITS;Ljdk\/internal\/vm\/vector\/VectorSupport$LoadVectorOperationWithMap<TC;TV;TE;TS;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name store descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperation;)V flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ILjava\/lang\/Object;JTV;TC;ILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperation<TC;TV;>;)V runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name storeWithMap descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Object;JLjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljava\/lang\/Object;I[IILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap;)V flags 9 signature <C:Ljava\/lang\/Object;V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;W:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<Ljava\/lang\/Integer;>;>(Ljava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ILjava\/lang\/Class<*>;Ljava\/lang\/Object;JTW;TV;TC;I[IILjdk\/internal\/vm\/vector\/VectorSupport$StoreVectorOperationWithMap<TC;TV;>;)V runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name test descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/util\/function\/BiFunction;)Z flags 9 signature <VM:Ljava\/lang\/Object;>(ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITVM;TVM;Ljava\/util\/function\/BiFunction<TVM;TVM;Ljava\/lang\/Boolean;>;)Z runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name compare descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<*>;ITV;TV;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorCompareOp<TV;TM;>;)TM; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name rearrangeOp descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;Sh:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TSh;>;Ljava\/lang\/Class<*>;ITV;TSh;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorRearrangeOp<TV;TSh;TE;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name blend descriptor (Ljava\/lang\/Class;Ljava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$Vector;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<TE;>;M:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMask<TE;>;E:Ljava\/lang\/Object;>(Ljava\/lang\/Class<+TV;>;Ljava\/lang\/Class<TM;>;Ljava\/lang\/Class<*>;ITV;TV;TM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorBlendOp<TV;TM;TE;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name broadcastInt descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$Vector;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$Vector; flags 9 signature <V:Ljdk\/internal\/vm\/vector\/VectorSupport$Vector<*>;>(ILjava\/lang\/Class<+TV;>;Ljava\/lang\/Class<*>;ITV;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorBroadcastIntOp<TV;>;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name convert descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Class;Ljava\/lang\/Class;ILjdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorConvertOp;)Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload; flags 9 signature <VOUT:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;VIN:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;S:Ljdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies<*>;>(ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ILjava\/lang\/Class<*>;Ljava\/lang\/Class<*>;ITVIN;TS;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorConvertOp<TVOUT;TVIN;TS;>;)TVOUT; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name maybeRebox descriptor (Ljava\/lang\/Object;)Ljava\/lang\/Object; flags 9 signature <V:Ljava\/lang\/Object;>(TV;)TV; runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+method name getMaxLaneCount descriptor (Ljava\/lang\/Class;)I flags 109 signature (Ljava\/lang\/Class<*>;)I\n+method name isNonCapturingLambda descriptor (Ljava\/lang\/Object;)Z flags 9\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$Vector\n+header extends jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorMask\n+header extends jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload\n+header extends java\/lang\/Object nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+method name getPayload descriptor ()Ljava\/lang\/Object; flags 14\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle\n+header extends jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljdk\/internal\/vm\/vector\/VectorSupport$VectorPayload;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+method name <init> descriptor (Ljava\/lang\/Object;)V flags 1\n+\n+class name jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies\n+header extends java\/lang\/Object nestHost jdk\/internal\/vm\/vector\/VectorSupport flags 21 signature <E:Ljava\/lang\/Object;>Ljava\/lang\/Object;\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+method name <init> descriptor ()V flags 1\n+\n","filename":"make\/data\/symbols\/java.base-G.sym.txt","additions":115,"deletions":2,"binary":false,"changes":117,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/random,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/random\/RandomGenerator,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider,interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;java\/security\/SecureRandom\\u005C;u002C;java\/util\/Random\\u005C;u002C;java\/util\/SplittableRandom target linux-amd64 flags 8000\n+header exports java\/io,java\/lang,java\/lang\/annotation,java\/lang\/constant,java\/lang\/invoke,java\/lang\/module,java\/lang\/ref,java\/lang\/reflect,java\/lang\/runtime,java\/math,java\/net,java\/net\/spi,java\/nio,java\/nio\/channels,java\/nio\/channels\/spi,java\/nio\/charset,java\/nio\/charset\/spi,java\/nio\/file,java\/nio\/file\/attribute,java\/nio\/file\/spi,java\/security,java\/security\/cert,java\/security\/interfaces,java\/security\/spec,java\/text,java\/text\/spi,java\/time,java\/time\/chrono,java\/time\/format,java\/time\/temporal,java\/time\/zone,java\/util,java\/util\/concurrent,java\/util\/concurrent\/atomic,java\/util\/concurrent\/locks,java\/util\/function,java\/util\/jar,java\/util\/random,java\/util\/regex,java\/util\/spi,java\/util\/stream,java\/util\/zip,javax\/crypto,javax\/crypto\/interfaces,javax\/crypto\/spec,javax\/net,javax\/net\/ssl,javax\/security\/auth,javax\/security\/auth\/callback,javax\/security\/auth\/login,javax\/security\/auth\/spi,javax\/security\/auth\/x500,javax\/security\/cert,jdk\/internal\/event[jdk.jfr],jdk\/internal\/vm\/vector[jdk.incubator.vector] uses java\/lang\/System$LoggerFinder,java\/net\/ContentHandlerFactory,java\/net\/spi\/URLStreamHandlerProvider,java\/nio\/channels\/spi\/AsynchronousChannelProvider,java\/nio\/channels\/spi\/SelectorProvider,java\/nio\/charset\/spi\/CharsetProvider,java\/nio\/file\/spi\/FileSystemProvider,java\/nio\/file\/spi\/FileTypeDetector,java\/security\/Provider,java\/text\/spi\/BreakIteratorProvider,java\/text\/spi\/CollatorProvider,java\/text\/spi\/DateFormatProvider,java\/text\/spi\/DateFormatSymbolsProvider,java\/text\/spi\/DecimalFormatSymbolsProvider,java\/text\/spi\/NumberFormatProvider,java\/time\/chrono\/AbstractChronology,java\/time\/chrono\/Chronology,java\/time\/zone\/ZoneRulesProvider,java\/util\/random\/RandomGenerator,java\/util\/spi\/CalendarDataProvider,java\/util\/spi\/CalendarNameProvider,java\/util\/spi\/CurrencyNameProvider,java\/util\/spi\/LocaleNameProvider,java\/util\/spi\/ResourceBundleControlProvider,java\/util\/spi\/ResourceBundleProvider,java\/util\/spi\/TimeZoneNameProvider,java\/util\/spi\/ToolProvider,javax\/security\/auth\/spi\/LoginModule,jdk\/internal\/logger\/DefaultLoggerFinder,sun\/text\/spi\/JavaTimeDateTimePatternProvider,sun\/util\/locale\/provider\/LocaleDataMetaInfo,sun\/util\/resources\/LocaleData$CommonResourceBundleProvider,sun\/util\/resources\/LocaleData$SupplementaryResourceBundleProvider,sun\/util\/spi\/CalendarProvider provides interface\\u0020;java\/nio\/file\/spi\/FileSystemProvider\\u0020;impls\\u0020;jdk\/internal\/jrtfs\/JrtFileSystemProvider,interface\\u0020;java\/util\/random\/RandomGenerator\\u0020;impls\\u0020;java\/security\/SecureRandom\\u005C;u002C;java\/util\/Random\\u005C;u002C;java\/util\/SplittableRandom target linux-amd64 flags 8000\n@@ -117,1 +117,0 @@\n-method name getSecurityManager descriptor ()Ljava\/lang\/SecurityManager; flags 9 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"17\")\n@@ -119,0 +118,1 @@\n+method name getSecurityManager descriptor ()Ljava\/lang\/SecurityManager; flags 9 deprecated true runtimeAnnotations @Ljava\/lang\/Deprecated;(forRemoval=Ztrue,since=\"17\")\n@@ -316,1 +316,0 @@\n-field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -318,0 +317,1 @@\n+field name TRAILER_FIELD_BC descriptor I constantValue 1 flags 19\n@@ -473,1 +473,0 @@\n-method name split descriptor ()Ljava\/util\/random\/RandomGenerator$SplittableGenerator; flags 1041\n@@ -475,0 +474,1 @@\n+method name split descriptor ()Ljava\/util\/random\/RandomGenerator$SplittableGenerator; flags 1041\n@@ -931,0 +931,29 @@\n+class name jdk\/internal\/vm\/vector\/VectorSupport\n+field name VECTOR_OP_MASK_TRUECOUNT descriptor I constantValue 19 flags 19\n+field name VECTOR_OP_MASK_FIRSTTRUE descriptor I constantValue 20 flags 19\n+field name VECTOR_OP_MASK_LASTTRUE descriptor I constantValue 21 flags 19\n+field name VECTOR_OP_TAN descriptor I constantValue 101 flags 19\n+field name VECTOR_OP_TANH descriptor I constantValue 102 flags 19\n+field name VECTOR_OP_SIN descriptor I constantValue 103 flags 19\n+field name VECTOR_OP_SINH descriptor I constantValue 104 flags 19\n+field name VECTOR_OP_COS descriptor I constantValue 105 flags 19\n+field name VECTOR_OP_COSH descriptor I constantValue 106 flags 19\n+field name VECTOR_OP_ASIN descriptor I constantValue 107 flags 19\n+field name VECTOR_OP_ACOS descriptor I constantValue 108 flags 19\n+field name VECTOR_OP_ATAN descriptor I constantValue 109 flags 19\n+field name VECTOR_OP_ATAN2 descriptor I constantValue 110 flags 19\n+field name VECTOR_OP_CBRT descriptor I constantValue 111 flags 19\n+field name VECTOR_OP_LOG descriptor I constantValue 112 flags 19\n+field name VECTOR_OP_LOG10 descriptor I constantValue 113 flags 19\n+field name VECTOR_OP_LOG1P descriptor I constantValue 114 flags 19\n+field name VECTOR_OP_POW descriptor I constantValue 115 flags 19\n+field name VECTOR_OP_EXP descriptor I constantValue 116 flags 19\n+field name VECTOR_OP_EXPM1 descriptor I constantValue 117 flags 19\n+field name VECTOR_OP_HYPOT descriptor I constantValue 118 flags 19\n+field name BT_unsigned_compare descriptor I constantValue 16 flags 19\n+field name BT_ule descriptor I constantValue 21 flags 19\n+field name BT_uge descriptor I constantValue 23 flags 19\n+field name BT_ult descriptor I constantValue 19 flags 19\n+field name BT_ugt descriptor I constantValue 17 flags 19\n+method name maskReductionCoerced descriptor (ILjava\/lang\/Class;Ljava\/lang\/Class;ILjava\/lang\/Object;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMaskOp;)I flags 9 signature <E:Ljava\/lang\/Object;M:Ljava\/lang\/Object;>(ILjava\/lang\/Class<+TM;>;Ljava\/lang\/Class<*>;ITM;Ljdk\/internal\/vm\/vector\/VectorSupport$VectorMaskOp<TM;>;)I runtimeAnnotations @Ljdk\/internal\/vm\/annotation\/IntrinsicCandidate;\n+\n","filename":"make\/data\/symbols\/java.base-H.sym.txt","additions":33,"deletions":4,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,1 +139,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -141,0 +140,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-B.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -32,0 +31,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-C.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -47,0 +46,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-D.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n@@ -32,0 +31,1 @@\n+method name newFactory descriptor ()Ljavax\/xml\/stream\/XMLInputFactory; thrownTypes javax\/xml\/stream\/FactoryConfigurationError flags 9\n","filename":"make\/data\/symbols\/java.xml-E.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,0 @@\n-field name NULL descriptor Ljdk\/incubator\/foreign\/MemoryAddress; flags 19\n@@ -65,0 +64,1 @@\n+field name NULL descriptor Ljdk\/incubator\/foreign\/MemoryAddress; flags 19\n@@ -81,1 +81,0 @@\n-field name LAYOUT_NAME descriptor Ljava\/lang\/String; constantValue layout\/name flags 19\n@@ -83,0 +82,1 @@\n+field name LAYOUT_NAME descriptor Ljava\/lang\/String; constantValue layout\/name flags 19\n@@ -91,0 +91,4 @@\n+-method name acquire descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name asReadOnly descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n+-method name isReadOnly descriptor ()Z\n+-method name mapFromPath descriptor (Ljava\/nio\/file\/Path;JLjava\/nio\/channels\/FileChannel$MapMode;)Ljdk\/incubator\/foreign\/MemorySegment;\n@@ -97,4 +101,0 @@\n--method name acquire descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n--method name asReadOnly descriptor ()Ljdk\/incubator\/foreign\/MemorySegment;\n--method name isReadOnly descriptor ()Z\n--method name mapFromPath descriptor (Ljava\/nio\/file\/Path;JLjava\/nio\/channels\/FileChannel$MapMode;)Ljdk\/incubator\/foreign\/MemorySegment;\n","filename":"make\/data\/symbols\/jdk.incubator.foreign-F.sym.txt","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,1 +267,0 @@\n-field name SHARE descriptor I constantValue 8 flags 19\n@@ -273,0 +272,1 @@\n+field name SHARE descriptor I constantValue 8 flags 19\n","filename":"make\/data\/symbols\/jdk.incubator.foreign-G.sym.txt","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+method name systemLookup descriptor ()Ljdk\/incubator\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n@@ -54,1 +55,0 @@\n-method name systemLookup descriptor ()Ljdk\/incubator\/foreign\/SymbolLookup; flags 9 runtimeAnnotations @Ljdk\/internal\/reflect\/CallerSensitive;\n","filename":"make\/data\/symbols\/jdk.incubator.foreign-H.sym.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -58,0 +60,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -233,0 +236,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -405,0 +409,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -577,0 +582,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -753,0 +759,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -922,0 +929,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n@@ -1187,0 +1195,1 @@\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n","filename":"make\/data\/symbols\/jdk.incubator.vector-G.sym.txt","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,14 @@\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Byte;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n@@ -39,0 +53,64 @@\n+class name jdk\/incubator\/vector\/DoubleVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Double;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/FloatVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Float;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/IntVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Integer;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n+class name jdk\/incubator\/vector\/LongVector\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Long;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n+\n@@ -40,0 +118,14 @@\n+header extends jdk\/incubator\/vector\/AbstractVector flags 421 signature Ljdk\/incubator\/vector\/AbstractVector<Ljava\/lang\/Short;>;\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Operator outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Operator flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorSpecies outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorSpecies flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Unary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Unary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Comparison outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Comparison flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Associative outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Associative flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Binary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Binary flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$Vector outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName Vector flags 9\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Ternary outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Ternary flags 609\n+innerclass innerClass jdk\/incubator\/vector\/VectorOperators$Test outerClass jdk\/incubator\/vector\/VectorOperators innerClassName Test flags 609\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorMask outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorMask flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorShuffle outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorShuffle flags 9\n+innerclass innerClass jdk\/internal\/vm\/vector\/VectorSupport$VectorPayload outerClass jdk\/internal\/vm\/vector\/VectorSupport innerClassName VectorPayload flags 9\n+innerclass innerClass java\/lang\/invoke\/MethodHandles$Lookup outerClass java\/lang\/invoke\/MethodHandles innerClassName Lookup flags 19\n","filename":"make\/data\/symbols\/jdk.incubator.vector-H.sym.txt","additions":92,"deletions":0,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+method name print descriptor (Ljavax\/tools\/Diagnostic$Kind;Ljavax\/tools\/FileObject;IIILjava\/lang\/String;)V flags 1\n@@ -34,1 +35,0 @@\n-method name print descriptor (Ljavax\/tools\/Diagnostic$Kind;Ljavax\/tools\/FileObject;IIILjava\/lang\/String;)V flags 1\n","filename":"make\/data\/symbols\/jdk.javadoc-H.sym.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-header exports jdk\/jfr,jdk\/jfr\/consumer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n+header exports jdk\/jfr,jdk\/jfr\/consumer extraModulePackages jdk\/jfr\/internal requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n@@ -393,0 +393,9 @@\n+class name jdk\/jfr\/internal\/Control\n+header extends java\/lang\/Object flags 421\n+method name <init> descriptor (Ljava\/security\/AccessControlContext;)V flags 1\n+method name <init> descriptor (Ljava\/lang\/String;)V flags 1\n+method name combine descriptor (Ljava\/util\/Set;)Ljava\/lang\/String; flags 401 signature (Ljava\/util\/Set<Ljava\/lang\/String;>;)Ljava\/lang\/String;\n+method name setValue descriptor (Ljava\/lang\/String;)V flags 401\n+method name getValue descriptor ()Ljava\/lang\/String; flags 401\n+method name clone descriptor ()Ljava\/lang\/Object; thrownTypes java\/lang\/CloneNotSupportedException flags 11\n+\n","filename":"make\/data\/symbols\/jdk.jfr-B.sym.txt","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,3 @@\n+module name jdk.jfr\n+header exports jdk\/jfr,jdk\/jfr\/consumer requires name\\u0020;java.base\\u0020;flags\\u0020;8000 target linux-amd64 flags 8000\n+\n@@ -51,0 +54,2 @@\n+-class name jdk\/jfr\/internal\/Control\n+\n","filename":"make\/data\/symbols\/jdk.jfr-G.sym.txt","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import build.tools.symbolgenerator.CreateSymbols.ModuleHeaderDescription.ExportsDescription;\n@@ -125,0 +126,1 @@\n+import com.sun.tools.classfile.ModulePackages_attribute;\n@@ -247,1 +249,8 @@\n-                mhd.exports.stream().forEach(pkg -> {\n+                List<String> packages = new ArrayList<>();\n+                mhd.exports.stream()\n+                           .map(ExportsDescription::packageName)\n+                           .forEach(packages::add);\n+                if (mhd.extraModulePackages != null) {\n+                    packages.addAll(mhd.extraModulePackages);\n+                }\n+                packages.stream().forEach(pkg -> {\n@@ -977,1 +986,1 @@\n-                                         ? addInt(cp, r.version)\n+                                         ? addString(cp, r.version)\n@@ -982,2 +991,10 @@\n-                                                   String e) {\n-        return new ExportsEntry(addPackageName(cp, e), 0, new int[0]);\n+                                                   ExportsDescription export) {\n+        int[] to;\n+        if (export.isQualified()) {\n+            to = export.to.stream()\n+                          .mapToInt(module -> addModuleName(cp, module))\n+                          .toArray();\n+        } else {\n+            to = new int[0];\n+        }\n+        return new ExportsEntry(addPackageName(cp, export.packageName()), 0, to);\n@@ -1408,1 +1425,1 @@\n-        private static final String DO_NO_MODIFY =\n+        public static String DO_NOT_MODIFY =\n@@ -1480,0 +1497,2 @@\n+            Set<String> privateIncludes =\n+                    enhancedIncludesListBasedOnClassHeaders(classes, classData);\n@@ -1483,1 +1502,3 @@\n-                md.header.get(0).exports.stream().map(e -> e + '\/')\n+                md.header.get(0).exports.stream()\n+                                        .filter(e -> !e.isQualified())\n+                                        .map(e -> e.packageName + '\/')\n@@ -1488,0 +1509,1 @@\n+                                                   privateIncludes,\n@@ -1510,1 +1532,3 @@\n-                               .contains(cd.packge().replace('.', '\/'))) {\n+                               .stream()\n+                               .map(ed -> ed.packageName)\n+                               .anyMatch(pack -> pack.equals(cd.packge().replace('.', '\/')))) {\n@@ -1532,1 +1556,1 @@\n-                if (includeEffectiveAccess(currentVersionClasses, clazz)) {\n+                if (includeEffectiveAccess(currentVersionClasses, clazz) && currentEIList.accepts(clazz.name, false)) {\n@@ -1558,0 +1582,2 @@\n+        Set<String> allIncludedPackages = new HashSet<>();\n+\n@@ -1598,0 +1624,2 @@\n+\n+            allIncludedPackages.add(clazz.packge().replace('.', '\/'));\n@@ -1614,0 +1642,7 @@\n+            header.exports.removeIf(ed -> ed.isQualified() &&\n+                                          !allIncludedPackages.contains(ed.packageName()));\n+\n+            if (header.extraModulePackages != null) {\n+                header.extraModulePackages.retainAll(allIncludedPackages);\n+            }\n+\n@@ -1645,1 +1680,10 @@\n-                  .flatMap(h -> h.exports.stream())\n+                  .flatMap(h -> {\n+                      List<String> packages = new ArrayList<>();\n+                      h.exports.stream()\n+                               .map(ExportsDescription::packageName)\n+                               .forEach(packages::add);\n+                      if (h.extraModulePackages != null) {\n+                          packages.addAll(h.extraModulePackages);\n+                      }\n+                      return packages.stream();\n+                  })\n@@ -1721,1 +1765,1 @@\n-                                int yearPos = DO_NO_MODIFY.indexOf(\"{YEAR}\");\n+                                int yearPos = DO_NOT_MODIFY.indexOf(\"{YEAR}\");\n@@ -1723,1 +1767,1 @@\n-                                        Pattern.quote(DO_NO_MODIFY.substring(0, yearPos)) +\n+                                        Pattern.quote(DO_NOT_MODIFY.substring(0, yearPos)) +\n@@ -1725,1 +1769,1 @@\n-                                        Pattern.quote(DO_NO_MODIFY.substring(yearPos + \"{YEAR}\".length()));\n+                                        Pattern.quote(DO_NOT_MODIFY.substring(yearPos + \"{YEAR}\".length()));\n@@ -1742,1 +1786,1 @@\n-                                    out.append(DO_NO_MODIFY.replace(\"{YEAR}\", yearSpec));\n+                                    out.append(DO_NOT_MODIFY.replace(\"{YEAR}\", yearSpec));\n@@ -1753,1 +1797,1 @@\n-            symbolsOut.append(DO_NO_MODIFY.replace(\"{YEAR}\", \"2015, \" + year));\n+            symbolsOut.append(DO_NOT_MODIFY.replace(\"{YEAR}\", \"2015, \" + year));\n@@ -1926,1 +1970,1 @@\n-        if (!excludesIncludes.accepts(cf.getName())) {\n+        if (!excludesIncludes.accepts(cf.getName(), true)) {\n@@ -2022,0 +2066,39 @@\n+    private Set<String> enhancedIncludesListBasedOnClassHeaders(ClassList classes,\n+                                                                Iterable<byte[]> classData) {\n+        Set<String> additionalIncludes = new HashSet<>();\n+\n+        for (byte[] classFileData : classData) {\n+            try (InputStream in = new ByteArrayInputStream(classFileData)) {\n+                ClassFile cf = ClassFile.read(in);\n+\n+                if (cf.access_flags.is(AccessFlags.ACC_MODULE)) {\n+                    continue;\n+                }\n+\n+                Set<String> additionalClasses = new HashSet<>();\n+\n+                if (cf.super_class != 0) {\n+                    additionalClasses.add(cf.getSuperclassName());\n+                }\n+                for (int i = 0; i < cf.interfaces.length; i++) {\n+                    additionalClasses.add(cf.getInterfaceName(i));\n+                }\n+\n+                for (String additional : additionalClasses) {\n+                    int dollar;\n+\n+                    additionalIncludes.add(additional);\n+\n+                    while ((dollar = additional.lastIndexOf('$')) != (-1)) {\n+                        additional = additional.substring(0, dollar);\n+                        additionalIncludes.add(additional);\n+                    }\n+                }\n+            } catch (IOException | ConstantPoolException ex) {\n+                throw new IllegalStateException(ex);\n+            }\n+        }\n+\n+        return additionalIncludes;\n+    }\n+\n@@ -2207,2 +2290,1 @@\n-                              .filter(ee -> ee.exports_to_count == 0)\n-                              .map(ee -> getPackageName(cf, ee.exports_index))\n+                              .map(ee -> ExportsDescription.create(cf, ee))\n@@ -2210,0 +2292,3 @@\n+                if (header.extraModulePackages != null) {\n+                    header.exports.forEach(ed -> header.extraModulePackages.remove(ed.packageName()));\n+                }\n@@ -2245,0 +2330,14 @@\n+                assert feature instanceof ModuleHeaderDescription;\n+                ModuleHeaderDescription header =\n+                        (ModuleHeaderDescription) feature;\n+                ModulePackages_attribute mod =\n+                        (ModulePackages_attribute) attr;\n+                header.extraModulePackages = new ArrayList<>();\n+                for (int i = 0; i < mod.packages_count; i++) {\n+                    String packageName = getPackageName(cf, mod.packages_index[i]);\n+                    if (header.exports == null ||\n+                        header.exports.stream().noneMatch(ed -> ed.packageName().equals(packageName))) {\n+                        header.extraModulePackages.add(packageName);\n+                    }\n+                }\n+                break;\n@@ -2355,1 +2454,6 @@\n-    private static Integer getVersion(ClassFile cf, int idx) {\n+    public static String INJECTED_VERSION = null;\n+\n+    private static String getVersion(ClassFile cf, int idx) {\n+        if (INJECTED_VERSION != null) {\n+            return INJECTED_VERSION;\n+        }\n@@ -2359,1 +2463,1 @@\n-            return ((CONSTANT_Integer_info) cf.constant_pool.get(idx)).value;\n+            return ((CONSTANT_Utf8_info) cf.constant_pool.get(idx)).value;\n@@ -2473,0 +2577,6 @@\n+        ClassDescription desc = classes.find(clazzName, true);\n+\n+        if (desc == null) {\n+            return false;\n+        }\n+\n@@ -2475,1 +2585,1 @@\n-        for (ClassDescription outer : classes.enclosingClasses(classes.find(clazzName, true))) {\n+        for (ClassDescription outer : classes.enclosingClasses(desc)) {\n@@ -2517,0 +2627,1 @@\n+        public final Set<String> privateIncludeList;\n@@ -2520,0 +2631,5 @@\n+            this(includeList, Set.of(), excludeList);\n+        }\n+\n+        protected ExcludeIncludeList(Set<String> includeList, Set<String> privateIncludeList,\n+                                     Set<String> excludeList) {\n@@ -2521,0 +2637,1 @@\n+            this.privateIncludeList = privateIncludeList;\n@@ -2540,2 +2657,4 @@\n-        public boolean accepts(String className) {\n-            return matches(includeList, className) && !matches(excludeList, className);\n+        public boolean accepts(String className, boolean includePrivateClasses) {\n+            return (matches(includeList, className) ||\n+                    (includePrivateClasses && matches(privateIncludeList, className))) &&\n+                   !matches(excludeList, className);\n@@ -2741,1 +2860,1 @@\n-        List<String> exports = new ArrayList<>();\n+        List<ExportsDescription> exports = new ArrayList<>();\n@@ -2743,0 +2862,1 @@\n+        List<String> extraModulePackages = new ArrayList<>();\n@@ -2756,0 +2876,1 @@\n+            hash = 83 * hash + Objects.hashCode(this.extraModulePackages);\n@@ -2784,0 +2905,3 @@\n+            if (!listEquals(this.extraModulePackages, other.extraModulePackages)) {\n+                return false;\n+            }\n@@ -2815,2 +2939,7 @@\n-            if (exports != null && !exports.isEmpty())\n-                output.append(\" exports \" + serializeList(exports));\n+            if (exports != null && !exports.isEmpty()) {\n+                List<String> exportsList =\n+                        exports.stream()\n+                               .map(exp -> exp.serialize())\n+                               .collect(Collectors.toList());\n+                output.append(\" exports \" + serializeList(exportsList));\n+            }\n@@ -2819,0 +2948,2 @@\n+            if (extraModulePackages != null && !extraModulePackages.isEmpty())\n+                output.append(\" extraModulePackages \" + serializeList(extraModulePackages));\n@@ -2865,1 +2996,4 @@\n-            exports = deserializeList(reader.attributes.get(\"exports\"));\n+            List<String> exportsList = deserializeList(reader.attributes.get(\"exports\"), false);\n+            exports = exportsList.stream()\n+                                 .map(ExportsDescription::deserialize)\n+                                 .collect(Collectors.toList());\n@@ -2867,0 +3001,1 @@\n+            extraModulePackages = deserializeList(reader.attributes.get(\"extraModulePackages\"));\n@@ -2896,0 +3031,40 @@\n+        record ExportsDescription(String packageName, List<String> to) {\n+            public String serialize() {\n+                return packageName +\n+                       (isQualified() ? \"[\" + quote(serializeList(to), true, true) + \"]\"\n+                                      : \"\");\n+            }\n+\n+            public static ExportsDescription deserialize(String data) {\n+                int bracket = data.indexOf(\"[\");\n+                String packageName;\n+                List<String> to;\n+                if (bracket != (-1)) {\n+                    packageName = data.substring(0, bracket);\n+                    to = deserializeList(unquote(data.substring(bracket + 1, data.length() - 1)));\n+                } else {\n+                    packageName = data;\n+                    to = null;\n+                }\n+\n+                return new ExportsDescription(packageName, to);\n+            }\n+\n+            public static ExportsDescription create(ClassFile cf,\n+                                                    ExportsEntry ee) {\n+                String packageName = getPackageName(cf, ee.exports_index);\n+                List<String> to = null;\n+                if (ee.exports_to_count > 0) {\n+                    to = new ArrayList<>();\n+                    for (int moduleIndex : ee.exports_to_index) {\n+                        to.add(getModuleName(cf, moduleIndex));\n+                    }\n+                }\n+                return new ExportsDescription(packageName, to);\n+            }\n+\n+            public boolean isQualified() {\n+                return to != null && !to.isEmpty();\n+            }\n+        }\n+\n@@ -2899,1 +3074,1 @@\n-            final Integer version;\n+            final String version;\n@@ -2902,1 +3077,1 @@\n-                                       Integer version) {\n+                                       String version) {\n@@ -2910,1 +3085,1 @@\n-                        ? \" version \" + quote(String.valueOf(version), true)\n+                        ? \" version \" + quote(version, true)\n@@ -2920,2 +3095,2 @@\n-                Integer ver = attributes.containsKey(\"version\")\n-                        ? Integer.parseInt(attributes.get(\"version\"))\n+                String ver = attributes.containsKey(\"version\")\n+                        ? attributes.get(\"version\")\n@@ -2932,1 +3107,1 @@\n-                Integer ver = getVersion(cf, req.requires_version_index);\n+                String ver = getVersion(cf, req.requires_version_index);\n@@ -3074,1 +3249,13 @@\n-                field.write(output, baselineVersion, version);\n+                if (!field.versions.contains(version)) {\n+                    field.write(output, baselineVersion, version);\n+                }\n+            }\n+            for (MethodDescription method : methods) {\n+                if (!method.versions.contains(version)) {\n+                    method.write(output, baselineVersion, version);\n+                }\n+            }\n+            for (FieldDescription field : fields) {\n+                if (field.versions.contains(version)) {\n+                    field.write(output, baselineVersion, version);\n+                }\n@@ -3077,1 +3264,3 @@\n-                method.write(output, baselineVersion, version);\n+                if (method.versions.contains(version)) {\n+                    method.write(output, baselineVersion, version);\n+                }\n@@ -3160,0 +3349,6 @@\n+\n+        @Override\n+        public String toString() {\n+            return name;\n+        }\n+\n@@ -3268,0 +3463,1 @@\n+\n@@ -3273,1 +3469,0 @@\n-\n@@ -4123,2 +4318,5 @@\n-                    for (String pack : header.get().exports) {\n-                        w.write(pack.replace('\/', '.'));\n+                    for (ExportsDescription export : header.get().exports) {\n+                        if (export.isQualified()) {\n+                            continue;\n+                        }\n+                        w.write(export.packageName.replace('\/', '.'));\n","filename":"make\/langtools\/src\/classes\/build\/tools\/symbolgenerator\/CreateSymbols.java","additions":235,"deletions":37,"binary":false,"changes":272,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277106\n+ * @summary Verify no error is when compiling a class whose supertype is not exported.\n+ * @modules jdk.compiler\n+ *          jdk.jfr\n+ * @compile --release 17 NonExportedSuperTypes.java\n+ *\/\n+\n+import jdk.jfr.Event;\n+\n+public class NonExportedSuperTypes {\n+\n+    public void evt(Event evt) {\n+        evt.toString();\n+    }\n+\n+}\n","filename":"test\/langtools\/tools\/javac\/platform\/NonExportedSuperTypes.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8072480\n+ * @bug 8072480 8277106\n","filename":"test\/langtools\/tools\/javac\/platform\/createsymbols\/CreateSymbolsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+import java.util.ArrayList;\n+import java.util.HashMap;\n@@ -32,0 +34,1 @@\n+import java.util.Map;\n@@ -33,0 +36,3 @@\n+import java.io.OutputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.DirectoryStream;\n@@ -55,0 +61,8 @@\n+import com.sun.tools.classfile.Attribute;\n+import com.sun.tools.classfile.Attributes;\n+import com.sun.tools.classfile.ClassFile;\n+import com.sun.tools.classfile.ClassWriter;\n+import com.sun.tools.classfile.ConstantPool;\n+import com.sun.tools.classfile.ConstantPool.CPInfo;\n+import com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info;\n+import com.sun.tools.classfile.ModulePackages_attribute;\n@@ -644,0 +658,300 @@\n+    @Test\n+    void testNonExportedSuperclass() throws Exception {\n+        doTestComplex(\"api.Api\",\n+                      \"\"\"\n+                      package api;\n+\n+                      public class Api extends nonapi.Impl.Nested.Exp {\n+\n+                        public Api();\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      import api.Api;\n+                      public class Test {\n+                          private void t(Api api) {\n+                            api.run();\n+                          }\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      import api.Api;\n+                      public class Test {\n+                          private void t(Api api) {\n+                              fail\n+                          }\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      module m {\n+                          exports api;\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      package api;\n+                      import nonapi.Impl;\n+                      public class Api extends Impl.Nested.Exp {\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      package api;\n+                      public @interface Ann {\n+                      }\n+                      \"\"\",\n+                      \"\"\"\n+                      package nonapi;\n+                      import api.Ann;\n+                      public class Impl {\n+                          public static final String C = \"\";\n+                          public void test() {}\n+                          @Ann\n+                          public static class Nested {\n+                              public static class Exp extends Nested implements Runnable {\n+                                  public void run() {}\n+                                  public OtherNested get() { return null; }\n+                              }\n+                          }\n+                          public static class OtherNested {}\n+                      }\n+                      \"\"\");\n+    }\n+\n+    void doTestComplex(String printClass,\n+                      String expected,\n+                      String depSuccess,\n+                      String depFailure,\n+                      String... code) throws Exception {\n+        ToolBox tb = new ToolBox();\n+        String testClasses = System.getProperty(\"test.classes\");\n+        Path output = Paths.get(testClasses, \"test-data\" + i++);\n+        deleteRecursively(output);\n+        Files.createDirectories(output);\n+        Path ver9Jar = output.resolve(\"9.jar\");\n+        compileAndPack(output,\n+                       ver9Jar,\n+                       code);\n+\n+\n+        Path ctSym = output.resolve(\"ct.sym\");\n+\n+        deleteRecursively(ctSym);\n+\n+        CreateSymbols.ALLOW_NON_EXISTING_CLASSES = true;\n+        CreateSymbols.EXTENSION = \".class\";\n+\n+        deleteRecursively(ctSym);\n+\n+        List<VersionDescription> versions =\n+                Arrays.asList(new VersionDescription(ver9Jar.toAbsolutePath().toString(), \"9\", null));\n+\n+        ExcludeIncludeList acceptAll = new ExcludeIncludeList(null, null) {\n+            @Override public boolean accepts(String className, boolean includePrivateClasses) {\n+                return true;\n+            }\n+        };\n+        new CreateSymbols().createBaseLine(versions, acceptAll, ctSym, new String[0]);\n+        Path symbolsDesc = ctSym.resolve(\"symbols\");\n+        Path systemModules = ctSym.resolve(\"systemModules\");\n+\n+        Files.newBufferedWriter(systemModules).close();\n+\n+        Path classesZip = output.resolve(\"classes.zip\");\n+        Path classesDir = output.resolve(\"classes\");\n+\n+        new CreateSymbols().createSymbols(null, symbolsDesc.toAbsolutePath().toString(), classesZip.toAbsolutePath().toString(), 0, \"9\", systemModules.toString());\n+\n+        try (JarFile jf = new JarFile(classesZip.toFile())) {\n+            Enumeration<JarEntry> en = jf.entries();\n+\n+            while (en.hasMoreElements()) {\n+                JarEntry je = en.nextElement();\n+                if (je.isDirectory()) continue;\n+                Path target = classesDir.resolve(je.getName());\n+                Files.createDirectories(target.getParent());\n+                Files.copy(jf.getInputStream(je), target);\n+            }\n+        }\n+\n+        Path classes = classesDir;\n+        Path scratch = output.resolve(\"scratch\");\n+\n+        Files.createDirectories(scratch);\n+\n+        String modulePath;\n+\n+        try (Stream<Path> elements = Files.list(classes)) {\n+            modulePath = elements.filter(el -> el.getFileName().toString().contains(\"9\"))\n+                            .map(el -> el.resolve(\"m\"))\n+                            .map(el -> el.toAbsolutePath().toString())\n+                            .collect(Collectors.joining(File.pathSeparator));\n+        }\n+\n+        {\n+            String out = new JavacTask(tb, Task.Mode.CMDLINE)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", modulePath,\n+                             \"--add-modules\", \"m\",  \"-Xprint\", \"api.Api\")\n+                    .run(Expect.SUCCESS)\n+                    .getOutput(Task.OutputKind.STDOUT)\n+                    .replaceAll(\"\\\\R\", \"\\n\");\n+\n+            if (!out.equals(expected)) {\n+                throw new AssertionError(\"out=\" + out + \"; expected=\" + expected);\n+            }\n+        }\n+\n+        {\n+            new JavacTask(tb)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", modulePath,\n+                             \"--add-modules\", \"m\")\n+                    .sources(depSuccess)\n+                    .run(Expect.SUCCESS)\n+                    .writeAll();\n+        }\n+\n+        {\n+            String expectedFailure = new JavacTask(tb)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", output.resolve(\"temp\").toString(),\n+                             \"--add-modules\", \"m\", \"-XDrawDiagnostics\")\n+                    .sources(depFailure)\n+                    .run(Expect.FAIL)\n+                    .getOutput(Task.OutputKind.DIRECT)\n+                    .replaceAll(\"\\\\R\", \"\\n\");\n+\n+            String out = new JavacTask(tb)\n+                    .options(\"-d\", scratch.toAbsolutePath().toString(), \"--module-path\", modulePath,\n+                             \"--add-modules\", \"m\", \"-XDrawDiagnostics\")\n+                    .sources(depFailure)\n+                    .run(Expect.FAIL)\n+                    .getOutput(Task.OutputKind.DIRECT)\n+                    .replaceAll(\"\\\\R\", \"\\n\");\n+\n+            if (!out.equals(expectedFailure)) {\n+                throw new AssertionError(\"out=\" + out + \"; expected=\" + expectedFailure);\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testExtendsInternalData1() throws Exception {\n+        doTestData(\"\"\"\n+                   module name m\n+                   header exports api,nonapi[java.base] requires name\\\\u0020;java.base\\\\u0020;flags\\\\u0020;8000\\\\u0020;version\\\\u0020;0 flags 8000\n+\n+                   class name api\/Ann\n+                   header extends java\/lang\/Object implements java\/lang\/annotation\/Annotation flags 2601\n+\n+                   class name api\/Api\n+                   header extends nonapi\/Impl$Nested$Exp flags 21\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   method name <init> descriptor ()V flags 1\n+\n+                   class name nonapi\/Impl\n+                   header extends java\/lang\/Object nestMembers nonapi\/Impl$Nested,nonapi\/Impl$Nested$Exp flags 21\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   field name C descriptor Ljava\/lang\/String; constantValue  flags 19\n+                   method name <init> descriptor ()V flags 1\n+                   method name test descriptor ()V flags 1\n+\n+                   class name nonapi\/Impl$Nested\n+                   header extends java\/lang\/Object nestHost nonapi\/Impl flags 21 classAnnotations @Lapi\/Ann;\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   method name <init> descriptor ()V flags 1\n+\n+                   class name nonapi\/Impl$Nested$Exp\n+                   header extends nonapi\/Impl$Nested implements java\/lang\/Runnable nestHost nonapi\/Impl flags 21\n+                   innerclass innerClass nonapi\/Impl$Nested outerClass nonapi\/Impl innerClassName Nested flags 9\n+                   innerclass innerClass nonapi\/Impl$Nested$Exp outerClass nonapi\/Impl$Nested innerClassName Exp flags 9\n+                   method name <init> descriptor ()V flags 1\n+                   method name run descriptor ()V flags 1\n+                   method name get descriptor ()Lnonapi\/Impl$OtherNested; flags 1\n+\n+                   \"\"\",\n+                   \"\"\"\n+                   module m {\n+                       exports api;\n+                       exports nonapi to java.base;\n+                   }\n+                   \"\"\",\n+                   \"\"\"\n+                   package api;\n+                   import nonapi.Impl;\n+                   public class Api extends Impl.Nested.Exp {\n+                   }\n+                   \"\"\",\n+                   \"\"\"\n+                   package api;\n+                   public @interface Ann {\n+                   }\n+                   \"\"\",\n+                   \"\"\"\n+                   package nonapi;\n+                   import api.Ann;\n+                   public class Impl {\n+                       public static final String C = \"\";\n+                       public void test() {}\n+                       @Ann\n+                       public static class Nested {\n+                           public static class Exp extends Nested implements Runnable {\n+                               public void run() {}\n+                               public OtherNested get() { return null; }\n+                           }\n+                       }\n+                       public static class OtherNested {}\n+                   }\n+                   \"\"\");\n+    }\n+\n+    void doTestData(String data,\n+                          String... code) throws Exception {\n+        String testClasses = System.getProperty(\"test.classes\");\n+        Path output = Paths.get(testClasses, \"test-data\" + i++);\n+        deleteRecursively(output);\n+        Files.createDirectories(output);\n+        Path ver9Jar = output.resolve(\"9.jar\");\n+        compileAndPack(output,\n+                       ver9Jar,\n+                       code);\n+\n+        Path ctSym = output.resolve(\"ct.sym\");\n+\n+        deleteRecursively(ctSym);\n+\n+        CreateSymbols.ALLOW_NON_EXISTING_CLASSES = true;\n+        CreateSymbols.DO_NOT_MODIFY = \"\";\n+        CreateSymbols.EXTENSION = \".class\";\n+        CreateSymbols.INJECTED_VERSION = \"0\";\n+\n+        deleteRecursively(ctSym);\n+\n+        List<VersionDescription> versions =\n+                Arrays.asList(new VersionDescription(ver9Jar.toAbsolutePath().toString(), \"9\", null));\n+\n+        ExcludeIncludeList acceptAll = new ExcludeIncludeList(null, null) {\n+            @Override public boolean accepts(String className, boolean includePrivateClasses) {\n+                return true;\n+            }\n+        };\n+        new CreateSymbols().createBaseLine(versions, acceptAll, ctSym, new String[0]);\n+\n+        Path symFile = null;\n+\n+        try (DirectoryStream<Path> ds = Files.newDirectoryStream(ctSym)) {\n+            for (Path p : ds) {\n+                if (p.toString().endsWith(\".sym.txt\")) {\n+                    if (symFile != null) {\n+                        throw new IllegalStateException(\"Multiple sym files!\");\n+                    } else {\n+                        symFile = p;\n+                    }\n+                }\n+            }\n+        }\n+        String acutalContent = new String(Files.readAllBytes(symFile), StandardCharsets.UTF_8);\n+        if (!acutalContent.equals(data)) {\n+            throw new AssertionError(\"out=\" + acutalContent + \"; expected=\" + data);\n+        }\n+    }\n+\n@@ -715,1 +1029,1 @@\n-            @Override public boolean accepts(String className) {\n+            @Override public boolean accepts(String className, boolean includePrivateClasses) {\n@@ -746,0 +1060,30 @@\n+        Path moduleInfo = scratch.resolve(\"module-info.class\");\n+        if (Files.exists(moduleInfo)) {\n+            Set<String> packages = new HashSet<>();\n+            for (String cf : classFiles) {\n+                int sep = cf.lastIndexOf(scratch.getFileSystem().getSeparator());\n+                if (sep != (-1)) {\n+                    packages.add(cf.substring(0, sep));\n+                }\n+            }\n+            ClassFile cf = ClassFile.read(moduleInfo);\n+            List<CPInfo> cp = new ArrayList<>();\n+            cp.add(null);\n+            cf.constant_pool.entries().forEach(cp::add);\n+            Map<String, Attribute> attrs = new HashMap<>(cf.attributes.map);\n+            int[] encodedPackages = new int[packages.size()];\n+            int i = 0;\n+            for (String p : packages) {\n+                int nameIndex = cp.size();\n+                cp.add(new CONSTANT_Utf8_info(p));\n+                encodedPackages[i++] = cp.size();\n+                cp.add(new ConstantPool.CONSTANT_Package_info(null, nameIndex));\n+            }\n+            int attrName = cp.size();\n+            cp.add(new CONSTANT_Utf8_info(Attribute.ModulePackages));\n+            attrs.put(Attribute.ModulePackages, new ModulePackages_attribute(attrName, encodedPackages));\n+            ClassFile newFile = new ClassFile(cf.magic, cf.minor_version, cf.major_version, new ConstantPool(cp.toArray(new CPInfo[0])), cf.access_flags, cf.this_class, cf.super_class, cf.interfaces, cf.fields, cf.methods, new Attributes(attrs));\n+            try (OutputStream out = Files.newOutputStream(moduleInfo)) {\n+                new ClassWriter().write(newFile, out);\n+            }\n+        }\n","filename":"test\/langtools\/tools\/javac\/platform\/createsymbols\/CreateSymbolsTestImpl.java","additions":345,"deletions":1,"binary":false,"changes":346,"status":"modified"}]}