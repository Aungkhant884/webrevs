{"files":[{"patch":"@@ -471,0 +471,13 @@\n+            if (!name.startsWith(\"\/modules\/\")) {\n+                return null;\n+            }\n+            \/\/ Make sure that the thing that follows \"\/modules\/\" is a module name.\n+            int moduleEndIndex = name.indexOf('\/', \"\/modules\/\".length());\n+            if (moduleEndIndex == -1) {\n+                return null;\n+            }\n+            ImageLocation moduleLoc = findLocation(name.substring(0, moduleEndIndex));\n+            if (moduleLoc == null || moduleLoc.getModuleOffset() == 0) {\n+                return null;\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/ImageReader.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -247,2 +247,2 @@\n-    @DataProvider(name = \"topLevelPkgDirs\")\n-    private Object[][] topLevelPkgDirs() {\n+    @DataProvider(name = \"topLevelNonExistingDirs\")\n+    private Object[][] topLevelNonExistingDirs() {\n@@ -254,0 +254,8 @@\n+            { \"\/modules\/modules\"  },\n+            { \"\/modules\/modules\/\"  },\n+            { \"\/modules\/modules\/java.base\"  },\n+            { \"\/modules\/modules\/java.base\/\"  },\n+            { \"\/modules\/modules\/java.base\/java\/lang\/Object.class\"  },\n+            { \"\/modules\/modules\/javax.scripting\"  },\n+            { \"\/modules\/modules\/javax.scripting\/\"  },\n+            { \"\/modules\/modules\/javax.scripting\/javax\/script\/ScriptEngine.class\"  },\n@@ -257,1 +265,1 @@\n-    @Test(dataProvider = \"topLevelPkgDirs\")\n+    @Test(dataProvider = \"topLevelNonExistingDirs\")\n@@ -262,1 +270,1 @@\n-        \/\/ package directories should not be there at top level\n+        \/\/ These directories should not be there at top level\n@@ -759,0 +767,10 @@\n+\n+    \/\/ @bug 8266291: (jrtfs) Calling Files.exists may break the JRT filesystem\n+    @Test\n+    public void fileExistsCallBreaksFileSystem() throws Exception {\n+        Path p = FileSystems.getFileSystem(URI.create(\"jrt:\/\")).getPath(\"modules\");\n+        boolean wasDirectory = Files.isDirectory(p);\n+        Path m = p.resolve(\"modules\");\n+        Files.exists(m);\n+        assertTrue(wasDirectory == Files.isDirectory(p));\n+    }\n","filename":"test\/jdk\/jdk\/internal\/jrtfs\/Basic.java","additions":22,"deletions":4,"binary":false,"changes":26,"status":"modified"}]}