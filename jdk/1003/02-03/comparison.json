{"files":[{"patch":"@@ -100,2 +100,1 @@\n-    assert(!carry_dependency, \"carry dependency not supported\");\n-    Node* cast = new CastLLNode(n, t);\n+    Node* cast = new CastLLNode(n, t, carry_dependency);\n","filename":"src\/hotspot\/share\/opto\/castnode.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -98,2 +98,2 @@\n-  CastLLNode(Node* n, const Type* t)\n-          : ConstraintCastNode(n, t, false){\n+  CastLLNode(Node* n, const Type* t, bool carry_dependency = false)\n+          : ConstraintCastNode(n, t, carry_dependency){\n","filename":"src\/hotspot\/share\/opto\/castnode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1979,0 +1979,2 @@\n+      } else if (phi_type->isa_long()) {\n+        cast = ConstraintCastNode::make_cast(Op_CastLL, r, uin, phi_type, true);\n","filename":"src\/hotspot\/share\/opto\/cfgnode.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}