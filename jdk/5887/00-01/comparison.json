{"files":[{"patch":"@@ -104,1 +104,1 @@\n-     * @implSpec the default implementation of this method always throws {@code SocketException}\n+     * @implSpec The default implementation of this method throws {@code SocketException}.\n@@ -119,1 +119,1 @@\n-     * @implSpec The default implementation of this method always throws {@code UncheckedIOException}.\n+     * @implSpec The default implementation of this method throws {@code UncheckedIOException}.\n","filename":"src\/java.base\/share\/classes\/java\/net\/DatagramSocketImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -342,1 +342,0 @@\n-                        String peekAd = null;\n@@ -347,1 +346,1 @@\n-                        peekAd = peekPacket.getAddress().getHostAddress();\n+                        String peekAd = peekPacket.getAddress().getHostAddress();\n@@ -379,2 +378,0 @@\n-                    InetAddress peekAddress = null;\n-                    int peekPort = -1;\n@@ -383,4 +380,3 @@\n-                    peekPort = getImpl().peekData(peekPacket);\n-                    peekAddress = peekPacket.getAddress();\n-                    if ((!connectedAddress.equals(peekAddress)) ||\n-                            (connectedPort != peekPort)) {\n+                    int peekPort = getImpl().peekData(peekPacket);\n+                    InetAddress peekAddress = peekPacket.getAddress();\n+                    if ((!connectedAddress.equals(peekAddress)) || (connectedPort != peekPort)) {\n","filename":"src\/java.base\/share\/classes\/java\/net\/NetMulticastSocket.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-\n@@ -165,2 +164,1 @@\n-    private class OldDatagramSocketImplWithValidConnect extends DatagramSocketImpl implements AutoCloseable {\n-\n+    private class OldDatagramSocketImplWithValidConnect extends OldDatagramSocketImpl implements AutoCloseable {\n@@ -169,61 +167,0 @@\n-\n-        @Override\n-        protected void create() throws SocketException { }\n-\n-        @Override\n-        protected void bind(int lport, InetAddress laddr) throws SocketException { }\n-\n-        @Override\n-        protected void send(DatagramPacket p) throws IOException { }\n-\n-        @Override\n-        protected int peek(InetAddress i) throws IOException {\n-            return 0;\n-        }\n-\n-        @Override\n-        protected int peekData(DatagramPacket p) throws IOException {\n-            return 0;\n-        }\n-\n-        @Override\n-        protected void receive(DatagramPacket p) throws IOException { }\n-\n-        @Override\n-        protected void setTTL(byte ttl) throws IOException { }\n-\n-        @Override\n-        protected byte getTTL() throws IOException {\n-            return 0;\n-        }\n-\n-        @Override\n-        protected void setTimeToLive(int ttl) throws IOException { }\n-\n-        @Override\n-        protected int getTimeToLive() throws IOException {\n-            return 0;\n-        }\n-\n-        @Override\n-        protected void join(InetAddress inetaddr) throws IOException { }\n-\n-        @Override\n-        protected void leave(InetAddress inetaddr) throws IOException { }\n-\n-        @Override\n-        protected void joinGroup(SocketAddress mcastaddr, NetworkInterface netIf) throws IOException { }\n-\n-        @Override\n-        protected void leaveGroup(SocketAddress mcastaddr, NetworkInterface netIf) throws IOException { }\n-\n-        @Override\n-        public void close() { }\n-\n-        @Override\n-        public void setOption(int optID, Object value) throws SocketException { }\n-\n-        @Override\n-        public Object getOption(int optID) throws SocketException {\n-            return null;\n-        }\n@@ -231,1 +168,2 @@\n-\n+    \/\/ Overriding connect() to make it public so that it can be called\n+    \/\/ directly from the test code\n@@ -235,1 +173,2 @@\n-\n+    \/\/ Overriding disconnect() to make it public so that it can be called\n+    \/\/ directly from the test code\n@@ -239,1 +178,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/net\/DatagramSocket\/OldDatagramSocketImplTest.java","additions":6,"deletions":67,"binary":false,"changes":73,"status":"modified"}]}