{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Objects;\n@@ -1546,1 +1547,2 @@\n-                && utils.containingPackage(currentPageElement) == utils.containingPackage(element);\n+                && Objects.equals(utils.containingPackage(currentPageElement),\n+                utils.containingPackage(element));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -298,1 +298,1 @@\n-            if (inheritedClass == typeElement) {\n+            if (Objects.equals(inheritedClass, typeElement)) {\n@@ -306,1 +306,1 @@\n-                    .filter(e -> utils.getEnclosingTypeElement(e) == inheritedClass)\n+                    .filter(e -> Objects.equals(utils.getEnclosingTypeElement(e), inheritedClass))\n@@ -321,1 +321,1 @@\n-    private void addSummaryFootNote(TypeElement inheritedClass, SortedSet<Element> inheritedMembers,\n+    private void addSummaryFootNote(TypeElement inheritedClass, Iterable<Element> inheritedMembers,\n@@ -323,1 +323,3 @@\n-        for (Element member : inheritedMembers) {\n+        boolean isFirst = true;\n+        for (var iterator = inheritedMembers.iterator(); iterator.hasNext(); ) {\n+            var member = iterator.next();\n@@ -326,2 +328,2 @@\n-            writer.addInheritedMemberSummary(t, member, inheritedMembers.first() == member,\n-                    inheritedMembers.last() == member, links);\n+            writer.addInheritedMemberSummary(t, member, isFirst, !iterator.hasNext(), links);\n+            isFirst = false;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+import java.util.Collection;\n+import java.util.Iterator;\n@@ -266,6 +268,3 @@\n-        SortedSet<ExecutableElement> members = utils.serializationMethods(currentTypeElement);\n-        if (!members.isEmpty()) {\n-            for (ExecutableElement member : members) {\n-                currentMember = member;\n-                Content methodsContent = methodWriter.getMethodsContentHeader(\n-                        currentMember == members.last());\n+        for (var i = utils.serializationMethods(currentTypeElement).iterator(); i.hasNext(); ) {\n+            currentMember = i.next();\n+            Content methodsContent = methodWriter.getMethodsContentHeader(!i.hasNext());\n@@ -273,3 +272,3 @@\n-                buildMethodSubHeader(methodsContent);\n-                buildDeprecatedMethodInfo(methodsContent);\n-                buildMethodInfo(methodsContent);\n+            buildMethodSubHeader(methodsContent);\n+            buildDeprecatedMethodInfo(methodsContent);\n+            buildMethodInfo(methodsContent);\n@@ -277,2 +276,1 @@\n-                serializableMethodsHeader.add(methodsContent);\n-            }\n+            serializableMethodsHeader.add(methodsContent);\n@@ -403,1 +401,1 @@\n-        SortedSet<VariableElement> members = utils.serializableFields(currentTypeElement);\n+        Collection<VariableElement> members = utils.serializableFields(currentTypeElement);\n@@ -406,2 +404,2 @@\n-            for (VariableElement ve : members) {\n-                currentMember = ve;\n+            for (var i = members.iterator(); i.hasNext();) {\n+                currentMember = i.next();\n@@ -409,2 +407,1 @@\n-                    Content fieldsContent = fieldWriter.getFieldsContentHeader(\n-                            currentMember == members.last());\n+                    Content fieldsContent = fieldWriter.getFieldsContentHeader(!i.hasNext());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/SerializedFormBuilder.java","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -421,1 +421,1 @@\n-        return amirror.getAnnotationType().equals(getFunctionalInterface()) &&\n+        return typeUtils.isSameType(amirror.getAnnotationType(), getFunctionalInterface()) &&\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,1 @@\n+import java.util.Objects;\n@@ -245,1 +246,1 @@\n-            return encl == te || utils.isUndocumentedEnclosure(encl);\n+            return Objects.equals(encl, te) || utils.isUndocumentedEnclosure(encl);\n@@ -258,1 +259,1 @@\n-        Predicate<Element> onlyLocallyDeclaredMembers = e -> utils.getEnclosingTypeElement(e) == te;\n+        Predicate<Element> onlyLocallyDeclaredMembers = e -> Objects.equals(utils.getEnclosingTypeElement(e), te);\n@@ -907,1 +908,1 @@\n-                .filter(e -> utils.getEnclosingTypeElement(e) == te)\n+                .filter(e -> Objects.equals(utils.getEnclosingTypeElement(e), te))\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}