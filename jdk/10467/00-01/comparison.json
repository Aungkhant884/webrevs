{"files":[{"patch":"@@ -158,4 +158,0 @@\n-const constexpr u1 global_context = 0;\n-const constexpr u1 thread_local_context = 1;\n-const constexpr u1 virtual_thread_local_context = 2;\n-\n@@ -164,1 +160,1 @@\n-  return buffer->context() == global_context;\n+  return buffer->context() == JFR_GLOBAL;\n@@ -169,1 +165,1 @@\n-  return buffer->context() == thread_local_context;\n+  return buffer->context() == JFR_THREADLOCAL;\n@@ -174,1 +170,1 @@\n-  return buffer->context() == virtual_thread_local_context;\n+  return buffer->context() == JFR_VIRTUAL_THREADLOCAL;\n@@ -201,1 +197,1 @@\n-  buffer->set_context(thread_local_context);\n+  buffer->set_context(JFR_THREADLOCAL);\n@@ -225,1 +221,1 @@\n-  buffer->set_context(virtual_thread_local_context);\n+  buffer->set_context(JFR_VIRTUAL_THREADLOCAL);\n@@ -263,12 +259,0 @@\n-static inline JfrCheckpointBufferKind kind(ConstBufferPtr old) {\n-  assert(old != nullptr, \"invariant\");\n-  if (is_virtual_thread_local(old)) {\n-    return JFR_VIRTUAL_THREADLOCAL;\n-  }\n-  if (is_thread_local(old)) {\n-    return JFR_THREADLOCAL;\n-  }\n-  assert(is_global(old), \"invariant\");\n-  return JFR_GLOBAL;\n-}\n-\n@@ -296,0 +280,5 @@\n+static inline JfrCheckpointBufferKind kind(ConstBufferPtr buffer) {\n+  assert(buffer != nullptr, \"invariant\");\n+  return static_cast<JfrCheckpointBufferKind>(buffer->context());\n+}\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/jfrCheckpointManager.cpp","additions":10,"deletions":21,"binary":false,"changes":31,"status":"modified"}]}