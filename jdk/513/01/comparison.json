{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -299,2 +299,2 @@\n-     * <code>{@link InputStream#read(byte[], int, int) read}<\/code> method of\n-     * the <code>{@link InputStream}<\/code> class.  As an additional\n+     * {@link InputStream#read(byte[], int, int) read} method of\n+     * the {@link InputStream} class.  As an additional\n@@ -397,2 +397,2 @@\n-     * the buffer (<code>count&nbsp;- pos<\/code>) and the result of calling the\n-     * {@link java.io.FilterInputStream#in in}.available().\n+     * the buffer ({@code count - pos}) and the result of calling the\n+     * {@link java.io.FilterInputStream#in in}{@code .available()}.\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -235,2 +235,2 @@\n-     * <code>{@link Reader#read(char[], int, int) read}<\/code> method of the\n-     * <code>{@link Reader}<\/code> class.  As an additional convenience, it\n+     * {@link Reader#read(char[], int, int) read} method of the\n+     * {@link Reader} class.  As an additional convenience, it\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-     * <code>{@link java.lang.Throwable#getMessage}<\/code> method of class\n+     * {@link java.lang.Throwable#getMessage} method of class\n","filename":"src\/java.base\/share\/classes\/java\/io\/EOFException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,3 +32,3 @@\n- * <p> Instances of this interface may be passed to the <code>{@link\n- * File#listFiles(java.io.FileFilter) listFiles(FileFilter)}<\/code> method\n- * of the <code>{@link java.io.File}<\/code> class.\n+ * <p> Instances of this interface may be passed to the\n+ * {@link File#listFiles(java.io.FileFilter) listFiles(FileFilter)} method\n+ * of the {@link java.io.File} class.\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileFilter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-     * <code>{@link java.lang.Throwable#getMessage}<\/code>\n+     * {@link java.lang.Throwable#getMessage}\n","filename":"src\/java.base\/share\/classes\/java\/io\/FileNotFoundException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-     * <code>{@link java.lang.Throwable#getMessage}<\/code>\n+     * {@link java.lang.Throwable#getMessage}\n","filename":"src\/java.base\/share\/classes\/java\/io\/InterruptedIOException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,2 +82,2 @@\n-     * piped output stream. <code>in&lt;0<\/code> implies the buffer is empty,\n-     * {@code in==out} implies the buffer is full\n+     * piped output stream. {@code in < 0} implies the buffer is empty,\n+     * {@code in == out} implies the buffer is full\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedInputStream.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-     * piped writer. <code>in&lt;0<\/code> implies the buffer is empty,\n-     * {@code in==out} implies the buffer is full\n+     * piped writer. {@code in < 0} implies the buffer is empty,\n+     * {@code in == out} implies the buffer is full\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -695,1 +695,1 @@\n-     * <code>0&nbsp;&lt;=&nbsp;b&nbsp;&lt;=&nbsp;255<\/code>,\n+     * {@code 0 <= b <= 255},\n@@ -769,1 +769,1 @@\n-     * <code>0&nbsp;&lt;=&nbsp;b1, b2&nbsp;&lt;=&nbsp;255<\/code>,\n+     * {@code 0 <= b1, b2 <= 255},\n@@ -797,1 +797,1 @@\n-     * <code>0&nbsp;&lt;=&nbsp;b1,&nbsp;b2&nbsp;&lt;=&nbsp;255<\/code>,\n+     * {@code 0 <= b1, b2 <= 255},\n@@ -825,1 +825,1 @@\n-     * <code>0&nbsp;&lt;=&nbsp;b1, b2, b3, b4&nbsp;&lt;=&nbsp;255<\/code>,\n+     * {@code 0 <= b1, b2, b3, b4 <= 255},\n","filename":"src\/java.base\/share\/classes\/java\/io\/RandomAccessFile.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * use <code>&#64;Serial<\/code> annotations to help a compiler catch\n+ * use {@code @Serial} annotations to help a compiler catch\n@@ -63,1 +63,1 @@\n- * <code>&#64;Serial<\/code> annotation is one of the defined serialization-related\n+ * {@code @Serial} annotation is one of the defined serialization-related\n","filename":"src\/java.base\/share\/classes\/java\/io\/Serial.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,1 +267,1 @@\n-     * <code>low&nbsp;&lt;=&nbsp;<i>c<\/i>&nbsp;&lt;=&nbsp;high<\/code>\n+     * {@code low <= c <= high}\n@@ -285,1 +285,1 @@\n-     * <code>low&nbsp;&lt;=&nbsp;<i>c<\/i>&nbsp;&lt;=&nbsp;high<\/code>\n+     * {@code low <= c <= high}\n@@ -306,1 +306,1 @@\n-     * <code>low&nbsp;&lt;=&nbsp;<i>c<\/i>&nbsp;&lt;=&nbsp;high<\/code>\n+     * {@code low <= c <= high}\n","filename":"src\/java.base\/share\/classes\/java\/io\/StreamTokenizer.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -156,1 +156,1 @@\n-     * @return     the value of <code>count&nbsp;-&nbsp;pos<\/code>, which is the\n+     * @return     the value of {@code count - pos}, which is the\n","filename":"src\/java.base\/share\/classes\/java\/io\/StringBufferInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-     * <code>{@link java.lang.Throwable#getMessage}<\/code>\n+     * {@link java.lang.Throwable#getMessage}\n","filename":"src\/java.base\/share\/classes\/java\/io\/UTFDataFormatException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}