{"files":[{"patch":"@@ -1264,4 +1264,0 @@\n-inline void validate_end_not_null(BlockBegin* block) {\n-  assert(block->end() != NULL, \"Expect block end to exist.\");\n-}\n-\n@@ -1271,1 +1267,1 @@\n-    validate_end_not_null(block);\n+    assert(block->end() != NULL, \"Expect block end to exist.\");\n@@ -1277,9 +1273,0 @@\n-void verify_successor_xentry_flag(const BlockBegin* block) {\n-  for (int i = 0; i < block->end()->number_of_sux(); i++) {\n-    assert(!block->end()->sux_at(i)->is_set(BlockBegin::exception_entry_flag), \"must not be xhandler\");\n-  }\n-  for (int i = 0; i < block->number_of_exception_handlers(); i++) {\n-    assert(block->exception_handler_at(i)->is_set(BlockBegin::exception_entry_flag), \"must be xhandler\");\n-  }\n-}\n-\n@@ -1289,1 +1276,6 @@\n-    verify_successor_xentry_flag(block);\n+    for (int i = 0; i < block->end()->number_of_sux(); i++) {\n+      assert(!block->end()->sux_at(i)->is_set(BlockBegin::exception_entry_flag), \"must not be xhandler\");\n+    }\n+    for (int i = 0; i < block->number_of_exception_handlers(); i++) {\n+      assert(block->exception_handler_at(i)->is_set(BlockBegin::exception_entry_flag), \"must be xhandler\");\n+    }\n@@ -1294,4 +1286,4 @@\n-\/\/ * code() length == blocks length\n-\/\/ * code() contents == blocks content\n-\/\/ * Each block's computed predecessors match sux lists (length)\n-\/\/ * Each block's computed predecessors match sux lists (set content)\n+\/\/ - code() length == blocks length\n+\/\/ - code() contents == blocks content\n+\/\/ - Each block's computed predecessors match sux lists (length)\n+\/\/ - Each block's computed predecessors match sux lists (set content)\n@@ -1373,6 +1365,0 @@\n-inline void verify_block_begin_field(BlockBegin* block) {\n-  for ( Instruction *cur = block; cur != NULL; cur = cur->next()) {\n-    assert(cur->block() == block, \"Block begin is not correct\");\n-  }\n-}\n-\n@@ -1382,1 +1368,3 @@\n-    verify_block_begin_field(block);\n+    for (Instruction* cur = block; cur != NULL; cur = cur->next()) {\n+      assert(cur->block() == block, \"Block begin is not correct\");\n+    }\n@@ -1386,18 +1374,0 @@\n-void validate_edge_mutuality(BlockBegin* block) {\n-  for (int i = 0; i < block->end()->number_of_sux(); i++) {\n-    assert(block->end()->sux_at(i)->is_predecessor(block), \"Block's successor should have it as predecessor\");\n-  }\n-\n-  for (int i = 0; i < block->number_of_exception_handlers(); i++) {\n-    assert(block->exception_handler_at(i)->is_predecessor(block), \"Block's exception handler should have it as predecessor\");\n-  }\n-\n-  for (int i = 0; i < block->number_of_preds(); i++) {\n-    assert(block->pred_at(i) != NULL, \"Predecessor must exist\");\n-    assert(block->pred_at(i)->end() != NULL, \"Predecessor end must exist\");\n-    bool is_sux      = block->pred_at(i)->end()->is_sux(block);\n-    bool is_xhandler = block->pred_at(i)->is_exception_handler(block);\n-    assert(is_sux || is_xhandler, \"Block's predecessor should have it as successor or xhandler\");\n-  }\n-}\n-\n@@ -1407,1 +1377,15 @@\n-    validate_edge_mutuality(block);\n+    for (int i = 0; i < block->end()->number_of_sux(); i++) {\n+      assert(block->end()->sux_at(i)->is_predecessor(block), \"Block's successor should have it as predecessor\");\n+    }\n+\n+    for (int i = 0; i < block->number_of_exception_handlers(); i++) {\n+      assert(block->exception_handler_at(i)->is_predecessor(block), \"Block's exception handler should have it as predecessor\");\n+    }\n+\n+    for (int i = 0; i < block->number_of_preds(); i++) {\n+      assert(block->pred_at(i) != NULL, \"Predecessor must exist\");\n+      assert(block->pred_at(i)->end() != NULL, \"Predecessor end must exist\");\n+      bool is_sux      = block->pred_at(i)->end()->is_sux(block);\n+      bool is_xhandler = block->pred_at(i)->is_exception_handler(block);\n+      assert(is_sux || is_xhandler, \"Block's predecessor should have it as successor or xhandler\");\n+    }\n@@ -1417,1 +1401,1 @@\n-      if (blocks.contains(block->end()->sux_at(i))) continue;\n+      if (blocks.contains(block->end()->sux_at(i))) { continue; }\n@@ -1422,1 +1406,1 @@\n-      if (blocks.contains(block->pred_at(i))) continue;\n+      if (blocks.contains(block->pred_at(i))) { continue; }\n@@ -1427,1 +1411,1 @@\n-      if (blocks.contains(block->exception_handler_at(i))) continue;\n+      if (blocks.contains(block->exception_handler_at(i))) { continue; }\n@@ -1434,1 +1418,0 @@\n-#ifdef ASSERT\n@@ -1443,1 +1426,0 @@\n-#endif \/\/ ASSERT\n@@ -1447,1 +1429,0 @@\n-#ifdef ASSERT\n@@ -1449,1 +1430,1 @@\n-  this->iterate_postorder(&xe);\n+  iterate_postorder(&xe);\n@@ -1454,1 +1435,1 @@\n-  this->iterate_postorder(&ennv);\n+  iterate_postorder(&ennv);\n@@ -1457,1 +1438,1 @@\n-  this->iterate_postorder(&vem);\n+  iterate_postorder(&vem);\n@@ -1460,2 +1441,1 @@\n-  this->iterate_postorder(&verifier);\n-#endif \/\/ ASSERT\n+  iterate_postorder(&verifier);\n","filename":"src\/hotspot\/share\/c1\/c1_IR.cpp","additions":36,"deletions":56,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -341,1 +341,1 @@\n-  void expand_with_neighborhood(BlockList& blocks);\n+  void expand_with_neighborhood(BlockList& blocks)                            PRODUCT_RETURN;\n","filename":"src\/hotspot\/share\/c1\/c1_IR.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-#ifdef ASSERT\n+#ifndef PRODUCT\n@@ -190,1 +190,1 @@\n-#endif \/\/ASSERT\n+#endif \/\/ PRODUCT\n@@ -260,1 +260,1 @@\n-#ifdef ASSERT\n+#ifndef PRODUCT\n@@ -262,1 +262,1 @@\n-#endif \/\/ ASSERT\n+#endif \/\/ PRODUCT\n@@ -402,10 +402,1 @@\n-#ifdef ASSERT\n-    {\n-      BlockList b;\n-      b.append(block);\n-      b.append(sux);\n-      _hir->verify_local(b);\n-    }\n-#endif \/\/ ASSERT\n-\n-#ifdef ASSERT\n+#ifndef PRODUCT\n@@ -415,1 +406,1 @@\n-#endif \/\/ASSERT\n+#endif \/\/ PRODUCT\n@@ -426,3 +417,1 @@\n-#ifdef ASSERT\n-    blocks_to_verify_later.remove(sux); \/\/ Sux is not part of graph anymore\n-#endif \/\/ASSERT\n+    NOT_PRODUCT(blocks_to_verify_later.remove(sux)); \/\/ Sux is not part of graph anymore\n@@ -453,1 +442,1 @@\n-#ifdef ASSERT\n+#ifndef PRODUCT\n@@ -455,1 +444,1 @@\n-#endif \/\/ ASSERT\n+#endif \/\/ PRODUCT\n@@ -505,3 +494,1 @@\n-#ifdef ASSERT\n-              _hir->verify_local(blocks_to_verify_later);\n-#endif \/\/ ASSERT\n+              NOT_PRODUCT(_hir->verify_local(blocks_to_verify_later));\n","filename":"src\/hotspot\/share\/c1\/c1_Optimizer.cpp","additions":10,"deletions":23,"binary":false,"changes":33,"status":"modified"}]}