{"files":[{"patch":"@@ -404,1 +404,3 @@\n-        if (od <= 255) {\n+        if (LoadableConstant.isLongOrDouble(constant)) {\n+            emitop2(ldc2w, od, constant);\n+        } else if (od <= 255) {\n@@ -406,2 +408,1 @@\n-        }\n-        else {\n+        } else {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Code.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import com.sun.tools.javac.code.Symbol.DynamicVarSymbol;\n@@ -29,0 +30,1 @@\n+import com.sun.tools.javac.code.TypeTag;\n@@ -31,0 +33,1 @@\n+import com.sun.tools.javac.jvm.PoolConstant.LoadableConstant.BasicConstant;\n@@ -120,0 +123,12 @@\n+\n+        static boolean isLongOrDouble(LoadableConstant constant) {\n+            return switch (constant) {\n+                case DynamicVarSymbol dynamicVar ->\n+                        dynamicVar.type.hasTag(TypeTag.LONG) ||\n+                                dynamicVar.type.hasTag(TypeTag.DOUBLE);\n+                case BasicConstant bc ->\n+                        bc.tag == ClassFile.CONSTANT_Long ||\n+                                bc.tag == ClassFile.CONSTANT_Double;\n+                default -> false;\n+            };\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/PoolConstant.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -84,8 +84,8 @@\n-        STRING(\"String\", \"Ljava\/lang\/String;\"),\n-        CLASS(\"Class<?>\", \"Ljava\/lang\/Class;\"),\n-        INTEGER(\"int\", \"I\"),\n-        LONG(\"long\", \"J\"),\n-        FLOAT(\"float\", \"F\"),\n-        DOUBLE(\"double\", \"D\"),\n-        METHOD_HANDLE(\"MethodHandle\", \"Ljava\/lang\/invoke\/MethodHandle;\"),\n-        METHOD_TYPE(\"MethodType\", \"Ljava\/lang\/invoke\/MethodType;\");\n+        STRING(\"String\", \"Ljava\/lang\/String;\", Opcode.LDC),\n+        CLASS(\"Class<?>\", \"Ljava\/lang\/Class;\", Opcode.LDC),\n+        INTEGER(\"int\", \"I\", Opcode.LDC),\n+        LONG(\"long\", \"J\", Opcode.LDC2_W),\n+        FLOAT(\"float\", \"F\", Opcode.LDC),\n+        DOUBLE(\"double\", \"D\", Opcode.LDC2_W),\n+        METHOD_HANDLE(\"MethodHandle\", \"Ljava\/lang\/invoke\/MethodHandle;\", Opcode.LDC),\n+        METHOD_TYPE(\"MethodType\", \"Ljava\/lang\/invoke\/MethodType;\", Opcode.LDC);\n@@ -95,0 +95,1 @@\n+        Opcode opcode;\n@@ -96,1 +97,1 @@\n-        ConstantType(String sourceTypeStr, String bytecodeTypeStr) {\n+        ConstantType(String sourceTypeStr, String bytecodeTypeStr, Opcode opcode) {\n@@ -99,0 +100,1 @@\n+            this.opcode = opcode;\n@@ -207,0 +209,4 @@\n+                    }\n+                    if (lci.opcode() != type.opcode) {\n+                        fail(\"unexpected opcode for constant value: \" + lci.opcode());\n+                        return;\n","filename":"test\/langtools\/tools\/javac\/T8222949\/TestConstantDynamic.java","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"}]}