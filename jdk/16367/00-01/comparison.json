{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import static com.sun.tools.javac.code.TypeTag.DOUBLE;\n@@ -39,0 +40,1 @@\n+import static com.sun.tools.javac.code.TypeTag.LONG;\n@@ -404,1 +406,2 @@\n-        if (LoadableConstant.isLongOrDouble(constant)) {\n+        Type constantType = types.constantType(constant);\n+        if (constantType.hasTag(LONG) || constantType.hasTag(DOUBLE)) {\n@@ -1066,0 +1069,1 @@\n+        case ldc2:\n@@ -1073,3 +1077,0 @@\n-        case ldc2:\n-            state.push(types.constantType((LoadableConstant)data));\n-            break;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Code.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import com.sun.tools.javac.code.Symbol.DynamicVarSymbol;\n@@ -30,1 +29,0 @@\n-import com.sun.tools.javac.code.TypeTag;\n@@ -33,1 +31,0 @@\n-import com.sun.tools.javac.jvm.PoolConstant.LoadableConstant.BasicConstant;\n@@ -123,12 +120,0 @@\n-\n-        static boolean isLongOrDouble(LoadableConstant constant) {\n-            return switch (constant) {\n-                case DynamicVarSymbol dynamicVar ->\n-                        dynamicVar.type.hasTag(TypeTag.LONG) ||\n-                                dynamicVar.type.hasTag(TypeTag.DOUBLE);\n-                case BasicConstant bc ->\n-                        bc.tag == ClassFile.CONSTANT_Long ||\n-                                bc.tag == ClassFile.CONSTANT_Double;\n-                default -> false;\n-            };\n-        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/PoolConstant.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}