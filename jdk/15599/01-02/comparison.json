{"files":[{"patch":"@@ -186,2 +186,1 @@\n-        \/\/ TODO: Check if AIX needs 4 Byte offset\n-        __ stfs(as_FloatRegister(from_reg), reg2offset(to_reg, out_stk_bias), R1_SP);\n+        __ stfs(as_FloatRegister(from_reg), reg2offset(to_reg, out_stk_bias) + float_on_stack_offset_in_bytes, R1_SP);\n@@ -211,1 +210,1 @@\n-        case 4: __ lfs(as_FloatRegister(to_reg), reg2offset(from_reg, in_stk_bias), callerSP); break;\n+        case 4: __ lfs(as_FloatRegister(to_reg), reg2offset(from_reg, in_stk_bias) + float_on_stack_offset_in_bytes, callerSP); break;\n","filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -34,0 +34,9 @@\n+#ifdef VM_LITTLE_ENDIAN\n+  \/\/ Floats are in the least significant word of an argument slot.\n+  const int float_on_stack_offset_in_bytes = 0;\n+#else\n+  \/\/ Although AIX runs on big endian CPU, float is in the most\n+  \/\/ significant word of an argument slot.\n+  const int float_on_stack_offset_in_bytes = AIX_ONLY(0) NOT_AIX(4);\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/ppc\/globalDefinitions_ppc.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -786,9 +786,1 @@\n-\n-#ifdef VM_LITTLE_ENDIAN\n-  \/\/ Floats are in the least significant word of an argument slot.\n-  const int float_offset_in_slots = 0;\n-#else\n-  \/\/ Although AIX runs on big endian CPU, float is in the most\n-  \/\/ significant word of an argument slot.\n-  const int float_offset_in_slots = AIX_ONLY(0) NOT_AIX(1);\n-#endif\n+  const int float_offset_in_slots = float_on_stack_offset_in_bytes \/ VMRegImpl::stack_slot_size;\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -292,15 +292,1 @@\n-#if defined(LINUX)\n-  \/\/ Linux uses ELF ABI. Both original ELF and ELFv2 ABIs have float\n-  \/\/ in the least significant word of an argument slot.\n-#if defined(VM_LITTLE_ENDIAN)\n-  __ stfs(floatSlot, 0, arg_c);\n-#else\n-  __ stfs(floatSlot, 4, arg_c);\n-#endif\n-#elif defined(AIX)\n-  \/\/ Although AIX runs on big endian CPU, float is in most significant\n-  \/\/ word of an argument slot.\n-  __ stfs(floatSlot, 0, arg_c);\n-#else\n-#error \"unknown OS\"\n-#endif\n+  __ stfs(floatSlot, float_on_stack_offset_in_bytes, arg_c);\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":1,"deletions":15,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -208,7 +208,1 @@\n-            VMStorage stack;\n-            if (!useABIv2 && is32Bit) {\n-                stackAlloc(4, STACK_SLOT_SIZE); \/\/ Skip first half of stack slot.\n-                stack = stackAlloc(4, 4);\n-            } else {\n-                stack = stackAlloc(is32Bit ? 4 : 8, STACK_SLOT_SIZE);\n-            }\n+            VMStorage stack = stackAlloc(is32Bit ? 4 : 8, STACK_SLOT_SIZE);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ppc64\/CallArranger.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}