{"files":[{"patch":"@@ -186,1 +186,2 @@\n-        __ stfs(as_FloatRegister(from_reg), reg2offset(to_reg, out_stk_bias) + Argument::float_on_stack_offset_in_bytes_c, R1_SP);\n+        \/\/ Note: Argument::float_on_stack_offset_in_bytes_c is handled by CallArranger\n+        __ stfs(as_FloatRegister(from_reg), reg2offset(to_reg, out_stk_bias), R1_SP);\n@@ -210,1 +211,2 @@\n-        case 4: __ lfs(as_FloatRegister(to_reg), reg2offset(from_reg, in_stk_bias) + Argument::float_on_stack_offset_in_bytes_c, callerSP); break;\n+        \/\/ Note: Argument::float_on_stack_offset_in_bytes_c is handled by CallArranger\n+        case 4: __ lfs(as_FloatRegister(to_reg), reg2offset(from_reg, in_stk_bias), callerSP); break;\n","filename":"src\/hotspot\/cpu\/ppc\/foreignGlobals_ppc.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -208,1 +208,7 @@\n-            VMStorage stack = stackAlloc(is32Bit ? 4 : 8, STACK_SLOT_SIZE);\n+            VMStorage stack;\n+            if (!useABIv2 && is32Bit) {\n+                stackAlloc(4, STACK_SLOT_SIZE); \/\/ Skip first half of stack slot.\n+                stack = stackAlloc(4, 4);\n+            } else {\n+                stack = stackAlloc(is32Bit ? 4 : 8, STACK_SLOT_SIZE);\n+            }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ppc64\/CallArranger.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}