{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -299,0 +299,7 @@\n+    private boolean typeEquals(String t1, String t2) {\n+        if (t1.equals(\"int64_t\") && t2.equals(\"intx\")) {\n+            return true;\n+        }\n+        return t1.equals(t2);\n+    }\n+\n@@ -318,1 +325,1 @@\n-        if (cppType != null && !cppType.equals(entry.type)) {\n+        if (cppType != null && !typeEquals(cppType, entry.type)) {\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotVMConfigAccess.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,3 @@\n+    \/\/ Check field with intx declaration is the same as int64_t.\n+    public final int heldMonitorCountOffset = getFieldOffset(\"JavaThread::_held_monitor_count\", Integer.class, \"int64_t\");\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestHotSpotVMConfig.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}