{"files":[{"patch":"@@ -79,0 +79,8 @@\n+  if test \"x$TOOLCHAIN_TYPE\" = xgcc || test \"x$TOOLCHAIN_TYPE\" = xclang; then\n+    # Force preprocessor to run, just to make sure\n+    BASIC_ASFLAGS=\"-x assembler-with-cpp\"\n+  elif test \"x$TOOLCHAIN_TYPE\" = xmicrosoft; then\n+    BASIC_ASFLAGS=\"-nologo -c\"\n+  fi\n+  AC_SUBST(BASIC_ASFLAGS)\n+\n@@ -80,1 +88,1 @@\n-    JVM_BASIC_ASFLAGS=\"-x assembler-with-cpp -mno-omit-leaf-frame-pointer -mstack-alignment=16\"\n+    JVM_BASIC_ASFLAGS=\"-mno-omit-leaf-frame-pointer -mstack-alignment=16\"\n","filename":"make\/autoconf\/flags-other.m4","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -363,1 +363,1 @@\n-    C_FLAG_DEPS=\"-MMD -MF\"\n+    GENDEPS_FLAGS=\"-MMD -MF\"\n@@ -365,1 +365,1 @@\n-    C_FLAG_DEPS=\"-MMD -MF\"\n+    GENDEPS_FLAGS=\"-MMD -MF\"\n@@ -367,1 +367,1 @@\n-    C_FLAG_DEPS=\"-qmakedep=gcc -MF\"\n+    GENDEPS_FLAGS=\"-qmakedep=gcc -MF\"\n@@ -369,3 +369,1 @@\n-  CXX_FLAG_DEPS=\"$C_FLAG_DEPS\"\n-  AC_SUBST(C_FLAG_DEPS)\n-  AC_SUBST(CXX_FLAG_DEPS)\n+  AC_SUBST(GENDEPS_FLAGS)\n","filename":"make\/autoconf\/flags.m4","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -480,2 +480,1 @@\n-C_FLAG_DEPS:=@C_FLAG_DEPS@\n-CXX_FLAG_DEPS:=@CXX_FLAG_DEPS@\n+GENDEPS_FLAGS := @GENDEPS_FLAGS@\n@@ -513,0 +512,2 @@\n+BASIC_ASFLAGS := @BASIC_ASFLAGS@\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -699,2 +699,7 @@\n-    # On windows, the assember is \"ml.exe\"\n-    UTIL_LOOKUP_TOOLCHAIN_PROGS(AS, ml)\n+    if test \"x$OPENJDK_TARGET_CPU_BITS\" = \"x64\"; then\n+      # On 64 bit windows, the assember is \"ml64.exe\"\n+      UTIL_LOOKUP_TOOLCHAIN_PROGS(AS, ml64)\n+    else\n+      # otherwise, the assember is \"ml.exe\"\n+      UTIL_LOOKUP_TOOLCHAIN_PROGS(AS, ml)\n+    fi\n@@ -882,1 +887,7 @@\n-      UTIL_LOOKUP_PROGS(BUILD_AS, ml, [$VS_PATH])\n+      if test \"x$OPENJDK_BUILD_CPU_BITS\" = \"x64\"; then\n+        # On 64 bit windows, the assember is \"ml64.exe\"\n+        UTIL_LOOKUP_PROGS(BUILD_AS, ml64, [$VS_PATH])\n+      else\n+        # otherwise the assember is \"ml.exe\"\n+        UTIL_LOOKUP_PROGS(BUILD_AS, ml, [$VS_PATH])\n+      fi\n","filename":"make\/autoconf\/toolchain.m4","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,1 +166,1 @@\n-NATIVE_SOURCE_EXTENSIONS := %.s %.S %.c %.cpp %.cc %.m %.mm\n+NATIVE_SOURCE_EXTENSIONS := %.S %.c %.cpp %.cc %.m %.mm\n@@ -352,1 +352,0 @@\n-      $1_DEP_FLAG := $(C_FLAG_DEPS)\n@@ -358,4 +357,3 @@\n-      $1_DEP_FLAG := $(C_FLAG_DEPS)\n-    else ifneq ($$(filter %.s %.S, $$($1_FILENAME)), )\n-      # Compile as assembler file\n-      $1_FLAGS := $$($1_BASE_ASFLAGS)\n+    else ifneq ($$(filter %.S, $$($1_FILENAME)), )\n+      # Compile as preprocessed assembler file\n+      $1_FLAGS := $(BASIC_ASFLAGS) $$($1_BASE_ASFLAGS)\n@@ -363,1 +361,0 @@\n-      $1_DEP_FLAG :=\n@@ -369,1 +366,0 @@\n-      $1_DEP_FLAG := $(CXX_FLAG_DEPS)\n@@ -374,14 +370,12 @@\n-    ifeq ($$(filter %.s %.S, $$($1_FILENAME)), )\n-      # And this is the dependency file for this obj file.\n-      $1_DEPS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d,$$($1_OBJ))\n-      # The dependency target file lists all dependencies as empty targets to\n-      # avoid make error \"No rule to make target\" for removed files\n-      $1_DEPS_TARGETS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d.targets,$$($1_OBJ))\n-\n-      # Only try to load individual dependency information files if the global\n-      # file hasn't been loaded (could happen if make was interrupted).\n-      ifneq ($$($$($1_BASE)_DEPS_FILE_LOADED), true)\n-        # Include previously generated dependency information. (if it exists)\n-        -include $$($1_DEPS_FILE)\n-        -include $$($1_DEPS_TARGETS_FILE)\n-      endif\n+    # And this is the dependency file for this obj file.\n+    $1_DEPS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d,$$($1_OBJ))\n+    # The dependency target file lists all dependencies as empty targets to\n+    # avoid make error \"No rule to make target\" for removed files\n+    $1_DEPS_TARGETS_FILE := $$(patsubst %$(OBJ_SUFFIX),%.d.targets,$$($1_OBJ))\n+\n+    # Only try to load individual dependency information files if the global\n+    # file hasn't been loaded (could happen if make was interrupted).\n+    ifneq ($$($$($1_BASE)_DEPS_FILE_LOADED), true)\n+      # Include previously generated dependency information. (if it exists)\n+      -include $$($1_DEPS_FILE)\n+      -include $$($1_DEPS_TARGETS_FILE)\n@@ -408,1 +402,1 @@\n-\t      $$($1_COMPILER) $$($1_DEP_FLAG) \\\n+\t      $$($1_COMPILER) $$(GENDEPS_FLAGS) \\\n@@ -427,9 +421,19 @@\n-\t  $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n-\t      $$($1_COMPILER) -showIncludes $$($1_COMPILE_OPTIONS))) \\\n-\t      | $(TR) -d '\\r' | $(GREP) -v -e \"^Note: including file:\" \\\n-\t          -e \"^$$($1_FILENAME)$$$$\" || test \"$$$$?\" = \"1\" ; \\\n-\t  $(ECHO) $$@: \\\\ > $$($1_DEPS_FILE) ; \\\n-\t  $(SED) $(WINDOWS_SHOWINCLUDE_SED_PATTERN) $$($1_OBJ).log \\\n-\t      | $(SORT) -u >> $$($1_DEPS_FILE) ; \\\n-\t  $(ECHO) >> $$($1_DEPS_FILE) ; \\\n-\t  $(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_DEPS_FILE) > $$($1_DEPS_TARGETS_FILE)\n+          ifeq ($$(filter %.S, $$($1_FILENAME)), )\n+\t    $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n+\t        $$($1_COMPILER) -showIncludes $$($1_COMPILE_OPTIONS))) \\\n+\t        | $(TR) -d '\\r' | $(GREP) -v -e \"^Note: including file:\" \\\n+\t            -e \"^$$($1_FILENAME)$$$$\" || test \"$$$$?\" = \"1\" ; \\\n+\t    $(ECHO) $$@: \\\\ > $$($1_DEPS_FILE) ; \\\n+\t    $(SED) $(WINDOWS_SHOWINCLUDE_SED_PATTERN) $$($1_OBJ).log \\\n+\t        | $(SORT) -u >> $$($1_DEPS_FILE) ; \\\n+\t    $(ECHO) >> $$($1_DEPS_FILE) ; \\\n+\t    $(SED) $(DEPENDENCY_TARGET_SED_PATTERN) $$($1_DEPS_FILE) > $$($1_DEPS_TARGETS_FILE)\n+          else\n+            # For assembler calls just create empty dependency lists\n+\t    $$(call ExecuteWithLog, $$@, $$(call MakeCommandRelative, \\\n+\t        $$($1_COMPILER) $$($1_FLAGS) \\\n+\t        $(CC_OUT_OPTION)$$($1_OBJ) -Ta $$($1_SRC_FILE))) \\\n+\t        | $(TR) -d '\\r' | $(GREP) -v -e \"Assembling:\" || test \"$$$$?\" = \"1\" ; \\\n+\t    $(ECHO) > $$($1_DEPS_FILE) ; \\\n+\t    $(ECHO) > $$($1_DEPS_TARGETS_FILE)\n+          endif\n@@ -817,1 +821,1 @@\n-            $$($1_OPT_CFLAGS) -x c++-header -c $(C_FLAG_DEPS) \\\n+            $$($1_OPT_CFLAGS) -x c++-header -c $(GENDEPS_FLAGS) \\\n","filename":"make\/common\/NativeCompilation.gmk","additions":38,"deletions":34,"binary":false,"changes":72,"status":"modified"},{"patch":"","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_32.S","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_32.s","status":"renamed"},{"patch":"","filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_64.S","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/hotspot\/os_cpu\/bsd_x86\/bsd_x86_64.s","status":"renamed"},{"patch":"","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/copy_linux_aarch64.S","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/hotspot\/os_cpu\/linux_aarch64\/copy_linux_aarch64.s","status":"renamed"},{"patch":"","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.S","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/hotspot\/os_cpu\/linux_aarch64\/threadLS_linux_aarch64.s","status":"renamed"},{"patch":"","filename":"src\/hotspot\/os_cpu\/linux_arm\/linux_arm_32.S","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/hotspot\/os_cpu\/linux_arm\/linux_arm_32.s","status":"renamed"},{"patch":"@@ -482,0 +482,1 @@\n+        \/*\n@@ -492,0 +493,1 @@\n+        *\/\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_32.S","additions":2,"deletions":0,"binary":false,"changes":2,"previous_filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_32.s","status":"renamed"},{"patch":"","filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_64.S","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/hotspot\/os_cpu\/linux_x86\/linux_x86_64.s","status":"renamed"}]}