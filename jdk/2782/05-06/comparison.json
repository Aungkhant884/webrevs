{"files":[{"patch":"@@ -3355,1 +3355,2 @@\n-    _pss.state_for_worker(index(worker_id))->set_ref_discoverer(nullptr);\n+    uint index = (_tm == RefProcThreadModel::Single) ? 0 : worker_id;\n+    _pss.state_for_worker(index)->set_ref_discoverer(nullptr);\n@@ -3357,2 +3358,2 @@\n-    G1CopyingKeepAliveClosure keep_alive(&_g1h, _pss.state_for_worker(index(worker_id)));\n-    G1ParEvacuateFollowersClosure complete_gc(&_g1h, _pss.state_for_worker(index(worker_id)), &_task_queues, _tm == RefProcThreadModel::Single ? nullptr : &_terminator, G1GCPhaseTimes::ObjCopy);\n+    G1CopyingKeepAliveClosure keep_alive(&_g1h, _pss.state_for_worker(index));\n+    G1ParEvacuateFollowersClosure complete_gc(&_g1h, _pss.state_for_worker(index), &_task_queues, _tm == RefProcThreadModel::Single ? nullptr : &_terminator, G1GCPhaseTimes::ObjCopy);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1475,2 +1475,3 @@\n-    G1CMKeepAliveAndDrainClosure keep_alive(&_cm, _cm.task(index(worker_id)), _tm == RefProcThreadModel::Single);\n-    G1CMDrainMarkingStackClosure complete_gc(&_cm, _cm.task(index(worker_id)), _tm == RefProcThreadModel::Single);\n+    uint index = (_tm == RefProcThreadModel::Single) ? 0 : worker_id;\n+    G1CMKeepAliveAndDrainClosure keep_alive(&_cm, _cm.task(index), _tm == RefProcThreadModel::Single);\n+    G1CMDrainMarkingStackClosure complete_gc(&_cm, _cm.task(index), _tm == RefProcThreadModel::Single);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -255,2 +255,3 @@\n-    G1FullKeepAliveClosure keep_alive(_collector.marker(index(worker_id)));\n-    G1FollowStackClosure* complete_gc = _collector.marker(index(worker_id))->stack_closure();\n+    uint index = (_tm == RefProcThreadModel::Single) ? 0 : worker_id;\n+    G1FullKeepAliveClosure keep_alive(_collector.marker(index));\n+    G1FollowStackClosure* complete_gc = _collector.marker(index)->stack_closure();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -640,4 +640,0 @@\n-\n-  uint index(uint id) const {\n-    return (_tm == RefProcThreadModel::Single) ? 0 : id;\n-  }\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}