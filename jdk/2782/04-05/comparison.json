{"files":[{"patch":"@@ -42,1 +42,0 @@\n-  friend class CompactionWithStealingTask;\n@@ -48,1 +47,0 @@\n-  friend class UpdateAndFillClosure;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-    RefProcTotalPhaseTimesTracker tt(RefPhase1, &phase_times, this);\n+    RefProcTotalPhaseTimesTracker tt(RefPhase1, &phase_times);\n@@ -231,1 +231,1 @@\n-    RefProcTotalPhaseTimesTracker tt(RefPhase2, &phase_times, this);\n+    RefProcTotalPhaseTimesTracker tt(RefPhase2, &phase_times);\n@@ -236,1 +236,1 @@\n-    RefProcTotalPhaseTimesTracker tt(RefPhase3, &phase_times, this);\n+    RefProcTotalPhaseTimesTracker tt(RefPhase3, &phase_times);\n@@ -241,1 +241,1 @@\n-    RefProcTotalPhaseTimesTracker tt(RefPhase4, &phase_times, this);\n+    RefProcTotalPhaseTimesTracker tt(RefPhase4, &phase_times);\n@@ -778,2 +778,0 @@\n-  WorkGang* gang = Universe::heap()->safepoint_workers();\n-  assert(gang != NULL || !processing_is_mt(), \"can not dispatch multi threaded without a work gang\");\n@@ -786,1 +784,3 @@\n-  if (gang != NULL && processing_is_mt()) {\n+  if (processing_is_mt()) {\n+    WorkGang* gang = Universe::heap()->safepoint_workers();\n+    assert(gang != NULL, \"can not dispatch multi threaded without a work gang\");\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -591,0 +591,6 @@\n+\/*\n+ * This is the (base) task that handles reference processing that does not depend on\n+ * the chosen GC (Serial, Parallel or G1). This RefProcTask will be called from a subclass\n+ * of RefProcProxyTask. The RefProcProxyTask will give the behaviour of the selected GC by\n+ * calling rp_work with the gc-specific closures.\n+ *\/\n@@ -608,0 +614,6 @@\n+\/*\n+ * This is the (base) task that handles reference processing that do depend on\n+ * the chosen GC (Serial, Parallel or G1). This RefProcProxyTask will call a subclass\n+ * of RefProcTask that will handle reference processing in a generic way for Serial,\n+ * Parallel and G1. This proxy will add the relevant closures, task terminators etc.\n+ *\/\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -167,3 +167,2 @@\n-                                                             ReferenceProcessorPhaseTimes* phase_times,\n-                                                             ReferenceProcessor* rp) :\n-  RefProcPhaseTimeBaseTracker(phase_enum_2_phase_string(phase_number), phase_number, phase_times), _rp(rp) {\n+                                                             ReferenceProcessorPhaseTimes* phase_times) :\n+  RefProcPhaseTimeBaseTracker(phase_enum_2_phase_string(phase_number), phase_number, phase_times) {\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorPhaseTimes.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -163,1 +163,0 @@\n-  ReferenceProcessor* _rp;\n@@ -166,2 +165,1 @@\n-                                ReferenceProcessorPhaseTimes* phase_times,\n-                                ReferenceProcessor* rp);\n+                                ReferenceProcessorPhaseTimes* phase_times);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorPhaseTimes.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}