{"files":[{"patch":"@@ -93,1 +93,1 @@\n-         (callee_locals - callee_params) +\n+         (callee_locals - callee_params) * Interpreter::stackElementWords +\n","filename":"src\/hotspot\/cpu\/aarch64\/abstractInterpreter_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -145,2 +145,2 @@\n-\/\/ monitors allocated on stack\n-REGISTER_DECLARATION(Register, rmonitors, r25);\n+\/\/ r25 is a callee-saved temp\n+\/\/ REGISTER_DECLARATION(Register, unused, r25);\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -679,0 +679,2 @@\n+  DESCRIBE_FP_OFFSET(interpreter_frame_extended_sp);\n+  DESCRIBE_FP_OFFSET(interpreter_frame_mirror);\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,6 +98,6 @@\n-      Label L;\n-      ldr(rscratch1, Address(rfp, frame::interpreter_frame_extended_sp_offset * wordSize));\n-      cmp(sp, rscratch1);\n-      br(EQ, L);\n-      stop(msg);\n-      bind(L);\n+    Label L;\n+    ldr(rscratch1, Address(rfp, frame::interpreter_frame_extended_sp_offset * wordSize));\n+    cmp(sp, rscratch1);\n+    br(EQ, L);\n+    stop(msg);\n+    bind(L);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -286,1 +286,1 @@\n-  Register temp3 = r14;  \/\/ r13 is live by this point: it contains the sender SP\n+  Register temp3 = r14;\n@@ -359,1 +359,1 @@\n-    \/\/  r13 - interpreter linkage (if interpreted)  ??? FIXME\n+    \/\/  r19 - interpreter linkage (if interpreted)\n","filename":"src\/hotspot\/cpu\/aarch64\/methodHandles_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,5 +47,3 @@\n-    \"rscratch1\", \"rscratch2\",\n-    \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\", \"r16\",\n-    \"r17\", \"r18_tls\", \"r19\",\n-    \"resp\", \"rdispatch\", \"rbcp\", \"r23\", \"rlocals\", \"rmonitors\", \"rcpool\", \"rheapbase\",\n-    \"rthread\", \"rfp\", \"lr\", \"sp\"\n+    \"rscratch1\", \"rscratch2\", \"r10\", \"r11\", \"r12\", \"r13\", \"r14\", \"r15\",\n+    \"r16\", \"r17\", \"r18_tls\", \"r19\", \"resp\", \"rdispatch\", \"rbcp\", \"r23\",\n+    \"rlocals\", \"r25\", \"rcpool\", \"rheapbase\", \"rthread\", \"rfp\", \"lr\", \"sp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/register_aarch64.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -194,2 +194,2 @@\n-    __ mov(r19, lr);\n-    continuation = r19;  \/\/ The first callee-saved register\n+    __ mov(r23, lr);\n+    continuation = r23;  \/\/ The first free callee-saved register\n@@ -200,2 +200,2 @@\n-    __ mov(r19, lr);\n-    continuation = r19;\n+    __ mov(r23, lr);\n+    continuation = r23;\n@@ -1429,3 +1429,0 @@\n-  \/\/ Restore SP (drop native parameters area), to keep SP in sync with extended_sp in frame\n-  \/\/ __ restore_sp_after_call();\n-\n@@ -1529,1 +1526,1 @@\n-  \/\/ resture sender sp\n+  \/\/ restore sender sp\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}