{"files":[{"patch":"@@ -608,1 +608,4 @@\n-    @Stable private Boolean callerSensitive;       \/\/ lazily initialize\n+    \/\/  0 = not initialized (@Stable contract)\n+    \/\/  1 = initialized, CS\n+    \/\/ -1 = initialized, not CS\n+    @Stable private byte callerSensitive;\n@@ -610,3 +613,3 @@\n-        Boolean cs = callerSensitive;\n-        if (cs == null) {\n-            callerSensitive = cs = Reflection.isCallerSensitive(this);\n+        byte cs = callerSensitive;\n+        if (cs == 0) {\n+            callerSensitive = cs = (byte)(Reflection.isCallerSensitive(this) ? 1 : -1);\n@@ -614,1 +617,1 @@\n-        return cs;\n+        return (cs > 0);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"}]}