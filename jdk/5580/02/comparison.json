{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -510,4 +510,4 @@\n-            for (int i = 0; i < queryArgs.length; i++) {\n-                if (queryArgs[i].startsWith(\"mode=\")) {\n-                    int index = queryArgs[i].indexOf('=');\n-                    return queryArgs[i].substring(index+1);\n+            for (String queryArg : queryArgs) {\n+                if (queryArg.startsWith(\"mode=\")) {\n+                    int index = queryArg.indexOf('=');\n+                    return queryArg.substring(index + 1);\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/monitor\/HostIdentifier.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -388,4 +388,4 @@\n-            for (int i = 0; i < queryArgs.length; i++) {\n-                if (queryArgs[i].startsWith(\"mode=\")) {\n-                    int index = queryArgs[i].indexOf('=');\n-                    return queryArgs[i].substring(index+1);\n+            for (String queryArg : queryArgs) {\n+                if (queryArg.startsWith(\"mode=\")) {\n+                    int index = queryArg.indexOf('=');\n+                    return queryArg.substring(index + 1);\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/monitor\/VmIdentifier.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -208,2 +208,1 @@\n-                for (Iterator<String> i = al.iterator(); i.hasNext() && m == null; ) {\n-                    String alias = i.next();\n+                for (String alias : al) {\n@@ -211,0 +210,3 @@\n+                    if (m != null) {\n+                        break;\n+                    }\n@@ -296,2 +298,1 @@\n-        for (Iterator<Map.Entry<String, Monitor>> i = monitorSet.iterator(); i.hasNext(); \/* empty *\/) {\n-            Map.Entry<String, Monitor> me = i.next();\n+        for (Map.Entry<String, Monitor> me : monitorSet) {\n@@ -306,1 +307,1 @@\n-                 matches.add(me.getValue());\n+                matches.add(me.getValue());\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/PerfDataBufferImpl.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.lang.reflect.*;\n-import java.io.*;\n@@ -155,2 +153,1 @@\n-        for (Iterator<VmListener> i = registered.iterator(); i.hasNext(); \/* empty *\/) {\n-            VmListener l = i.next();\n+        for (VmListener l : registered) {\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/protocol\/local\/LocalMonitoredVm.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import sun.jvmstat.monitor.*;\n-import sun.jvmstat.monitor.event.*;\n@@ -108,2 +106,2 @@\n-            for (int i = 0 ; i < dirs.length; i ++) {\n-                if (!dirs[i].isDirectory()) {\n+            for (File subDir : dirs) {\n+                if (!subDir.isDirectory()) {\n@@ -114,1 +112,1 @@\n-                File[] files = dirs[i].listFiles(userDirFileFilter);\n+                File[] files = subDir.listFiles(userDirFileFilter);\n@@ -116,3 +114,3 @@\n-                    for (int j = 0; j < files.length; j++) {\n-                        if (files[j].isFile() && files[j].canRead()) {\n-                            int vmid = PerfDataFile.getLocalVmId(files[j]);\n+                    for (File file : files) {\n+                        if (file.isFile() && file.canRead()) {\n+                            int vmid = PerfDataFile.getLocalVmId(file);\n@@ -120,1 +118,1 @@\n-                              jvmSet.add(vmid);\n+                                jvmSet.add(vmid);\n@@ -130,3 +128,3 @@\n-                for (int j = 0; j < files.length; j++) {\n-                    if (files[j].isFile() && files[j].canRead()) {\n-                        int vmid = PerfDataFile.getLocalVmId(files[j]);\n+                for (File file : files) {\n+                    if (file.isFile() && file.canRead()) {\n+                        int vmid = PerfDataFile.getLocalVmId(file);\n@@ -134,1 +132,1 @@\n-                          jvmSet.add(vmid);\n+                            jvmSet.add(vmid);\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/protocol\/local\/LocalVmManager.java","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,2 +173,1 @@\n-        for (Iterator<HostListener> i = registered.iterator(); i.hasNext(); \/* empty *\/) {\n-            HostListener l = i.next();\n+        for (HostListener l : registered) {\n@@ -201,2 +200,1 @@\n-            for (Iterator<Integer> i = activeVms.iterator(); i.hasNext(); \/* empty *\/) {\n-                Integer vmid = i.next();\n+            for (Integer vmid : activeVms) {\n@@ -209,3 +207,1 @@\n-            for (Iterator<Integer> i = lastActiveVms.iterator(); i.hasNext();\n-                    \/* empty *\/) {\n-                Integer o = i.next();\n+            for (Integer o : lastActiveVms) {\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/protocol\/local\/MonitoredHostProvider.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,3 +84,3 @@\n-        for (int j = 0; j < basicTypes.length; j++) {\n-            if (basicTypes[j].value == c) {\n-                return (basicTypes[j]);\n+        for (TypeCode basicType : basicTypes) {\n+            if (basicType.value == c) {\n+                return basicType;\n","filename":"src\/jdk.internal.jvmstat\/share\/classes\/sun\/jvmstat\/perfdata\/monitor\/v2_0\/TypeCode.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}