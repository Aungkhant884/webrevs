{"files":[{"patch":"@@ -420,1 +420,1 @@\n-  if (_thread->get_threads_hazard_ptr() == NULL) {\n+  if (_thread->get_threads_hazard_ptr() == NULL && _previous == NULL) {\n@@ -487,2 +487,0 @@\n-  assert(_thread->get_threads_hazard_ptr() != NULL,\n-         \"cannot have a NULL regular hazard ptr when acquiring a nested hazard ptr\");\n@@ -509,1 +507,1 @@\n-  Atomic::store(&_thread->_threads_hazard_ptr, (ThreadsList*)NULL);\n+  _thread->set_threads_hazard_ptr(NULL);\n@@ -526,2 +524,0 @@\n-  assert(_thread->get_threads_hazard_ptr() != NULL, \"sanity check\");\n-  assert(_thread->get_threads_hazard_ptr() == _list, \"sanity check\");\n@@ -531,0 +527,17 @@\n+  \/\/ We're releasing either a leaf or nested ThreadsListHandle. In either\n+  \/\/ case, we set this thread's hazard ptr back to NULL and we do it before\n+  \/\/ _nested_handle_cnt is decremented below.\n+  _thread->set_threads_hazard_ptr(NULL);\n+  if (_previous != NULL) {\n+    \/\/ The ThreadsListHandle being released is a nested ThreadsListHandle.\n+    if (EnableThreadSMRStatistics) {\n+      _thread->dec_nested_threads_hazard_ptr_cnt();\n+    }\n+    \/\/ The previous ThreadsList is stable because the _nested_handle_cnt is\n+    \/\/ > 0, but we cannot safely make it this thread's hazard ptr again.\n+    \/\/ The protocol for installing and verifying a ThreadsList as a\n+    \/\/ thread's hazard ptr is handled by acquire_stable_list_fast_path().\n+    \/\/ And that protocol cannot be properly done with a ThreadsList that\n+    \/\/ might not be the current system ThreadsList.\n+    assert(_previous->_list->_nested_handle_cnt > 0, \"must be > zero\");\n+  }\n@@ -539,17 +552,0 @@\n-  if (_previous == NULL) {\n-    \/\/ The ThreadsListHandle being released is a leaf ThreadsListHandle.\n-    \/\/ This is the \"normal\" case and this is where we set this thread's\n-    \/\/ hazard ptr back to NULL.\n-    _thread->set_threads_hazard_ptr(NULL);\n-  } else {\n-    \/\/ The ThreadsListHandle being released is a nested ThreadsListHandle.\n-    if (EnableThreadSMRStatistics) {\n-      _thread->dec_nested_threads_hazard_ptr_cnt();\n-    }\n-    \/\/ The previous ThreadsList becomes this thread's hazard ptr again.\n-    \/\/ It is a stable ThreadsList since the non-zero _nested_handle_cnt\n-    \/\/ keeps it from being freed so we can just set the thread's hazard\n-    \/\/ ptr without going through the stabilization\/tagging protocol.\n-    assert(_previous->_list->_nested_handle_cnt > 0, \"must be > than zero\");\n-    _thread->set_threads_hazard_ptr(_previous->_list);\n-  }\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.cpp","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -216,3 +216,4 @@\n-    \/\/ Verify the current thread refers to tlh1:\n-    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), tlh1.list())\n-        << \"thr->_threads_hazard_ptr must match tlh1.list()\";\n+    \/\/ Verify the current thread's hazard ptr is NULL:\n+    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), (ThreadsList*)NULL)\n+        << \"thr->_threads_hazard_ptr must be NULL\";\n+    \/\/ Verify the current thread's threads list ptr refers to tlh1:\n@@ -399,3 +400,4 @@\n-      \/\/ Verify the current thread refers to tlh2:\n-      EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), tlh2.list())\n-          << \"thr->_threads_hazard_ptr must match tlh2.list()\";\n+      \/\/ Verify the current thread's hazard ptr is NULL:\n+      EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), (ThreadsList*)NULL)\n+          << \"thr->_threads_hazard_ptr must be NULL\";\n+      \/\/ Verify the current thread's threads list ptr refers to tlh2:\n@@ -446,3 +448,4 @@\n-    \/\/ Verify the current thread refers to tlh1:\n-    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), tlh1.list())\n-        << \"thr->_threads_hazard_ptr must match tlh1.list()\";\n+    \/\/ Verify the current thread's hazard ptr is NULL:\n+    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), (ThreadsList*)NULL)\n+        << \"thr->_threads_hazard_ptr must be NULL\";\n+    \/\/ Verify the current thread's threads list ptr refers to tlh1:\n@@ -565,3 +568,4 @@\n-    \/\/ Verify the current thread refers to tlh1:\n-    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), tlh1.list())\n-        << \"thr->_threads_hazard_ptr must match tlh1.list()\";\n+    \/\/ Verify the current thread's hazard ptr is NULL:\n+    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), (ThreadsList*)NULL)\n+        << \"thr->_threads_hazard_ptr must be NULL\";\n+    \/\/ Verify the current thread's threads list ptr refers to tlh1:\n@@ -642,3 +646,4 @@\n-    \/\/ Verify the current thread refers to tlh1:\n-    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), tlh1.list())\n-        << \"thr->_threads_hazard_ptr must match tlh1.list()\";\n+    \/\/ Verify the current thread's hazard ptr is NULL:\n+    EXPECT_EQ(ThreadsListHandleTest::get_Thread_threads_hazard_ptr(thr), (ThreadsList*)NULL)\n+        << \"thr->_threads_hazard_ptr must be NULL\";\n+    \/\/ Verify the current thread's threads list ptr refers to tlh1:\n","filename":"test\/hotspot\/gtest\/runtime\/test_ThreadsListHandle.cpp","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -101,2 +101,2 @@\n-        \/\/ should show a hazard ptr and a nested hazard ptr:\n-        Pattern.compile(\"=>.* JavaThread \\\"main\\\" .* _threads_hazard_ptr=0x[0-9A-Fa-f][0-9A-Fa-f]*, _nested_threads_hazard_ptr_cnt=1, _nested_threads_hazard_ptr=0x[0-9A-Fa-f][0-9A-Fa-f]*.*\"),\n+        \/\/ should show a nested hazard ptr:\n+        Pattern.compile(\"=>.* JavaThread \\\"main\\\" .*, _nested_threads_hazard_ptr_cnt=1, _nested_threads_hazard_ptr=0x[0-9A-Fa-f][0-9A-Fa-f]*.*\"),\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/NestedThreadsListHandleInErrorHandlingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,2 +101,2 @@\n-        \/\/ should show a hazard ptr and no nested hazard ptrs:\n-        Pattern.compile(\"=>.* JavaThread \\\"main\\\" .* _threads_hazard_ptr=0x[0-9A-Fa-f][0-9A-Fa-f]*, _nested_threads_hazard_ptr_cnt=0.*\"),\n+        \/\/ should show no nested hazard ptrs:\n+        Pattern.compile(\"=>.* JavaThread \\\"main\\\" .*, _nested_threads_hazard_ptr_cnt=0.*\"),\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ThreadsListHandleInErrorHandlingTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}