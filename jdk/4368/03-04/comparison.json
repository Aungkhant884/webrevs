{"files":[{"patch":"@@ -5977,1 +5977,1 @@\n-    Label L_process256, L_process64, L_exit, L_processdata, L_loadURL;\n+    Label L_process256, L_process64, L_process64Loop, L_exit, L_processdata, L_loadURL;\n@@ -6057,1 +6057,1 @@\n-      \/\/ Check if there was an error - if so, try 64-byte chunks - may be MIME\n+      \/\/ Check if there was an error - if so, try 64-byte chunks\n@@ -6106,0 +6106,4 @@\n+      __ BIND(L_process64);\n+\n+      __ evmovdquq(pack24bits, ExternalAddress(StubRoutines::x86::base64_vbmi_pack_vec_addr()), Assembler::AVX_512bit, r13);\n+\n@@ -6110,1 +6114,1 @@\n-      __ BIND(L_process64);\n+      __ BIND(L_process64Loop);\n@@ -6125,2 +6129,1 @@\n-      __ evmovdquq(pack24bits, ExternalAddress(StubRoutines::x86::base64_vbmi_pack_vec_addr()), Assembler::AVX_512bit, r13);\n-\n+      \/\/ Pack output register, selecting correct byte ordering\n@@ -6138,1 +6141,1 @@\n-      __ jcc(Assembler::greaterEqual, L_process64);\n+      __ jcc(Assembler::greaterEqual, L_process64Loop);\n@@ -6144,1 +6147,1 @@\n-      \/\/ Now have < 64 bytes left to decode\n+      \/\/ Now have 1 to 63 bytes left to decode\n@@ -6154,2 +6157,0 @@\n-      __ evmovdquq(pack24bits, ExternalAddress(StubRoutines::x86::base64_vbmi_pack_vec_addr()), Assembler::AVX_512bit, r13);\n-\n@@ -6161,0 +6162,1 @@\n+      \/\/ Strip pad characters, if any, and adjust length and mask\n@@ -6166,0 +6168,1 @@\n+      \/\/ Output size is (64 - output_size), output mask is (all 1s >> output_size).\n@@ -6171,0 +6174,3 @@\n+\n+      \/\/ Load initial input with all valid base64 characters.  Will be used\n+      \/\/ in merging source bytes to avoid masking when determining if an error occurred.\n@@ -6173,0 +6179,2 @@\n+\n+      \/\/ A register containing all invalid base64 decoded values\n@@ -6190,0 +6198,1 @@\n+      \/\/ Load only the bytes from source, merging into our \"fully-valid\" register\n@@ -6192,0 +6201,1 @@\n+      \/\/ Decode all bytes within our merged input\n@@ -6196,1 +6206,2 @@\n-      \/\/ Check for error\n+      \/\/ Check for error.  Compare (decoded | initial) to all invalid.\n+      \/\/ If any bytes have their high-order bit set, then we have an error.\n@@ -6199,1 +6210,0 @@\n-      __ jcc(Assembler::notZero, L_exit);\n@@ -6201,0 +6211,4 @@\n+      \/\/ If we have an error, use the brute force loop to decode what we can (4-byte chunks).\n+      __ jcc(Assembler::notZero, L_bruteForce);\n+\n+      \/\/ Shuffle output bytes\n@@ -6270,2 +6284,2 @@\n-    const Register byte3 = WINDOWS_ONLY(r12) NOT_WINDOWS(r8);\n-    const Register byte4 = WINDOWS_ONLY(rdx) NOT_WINDOWS(rsi);\n+    const Register byte3 = WINDOWS_ONLY(r12) NOT_WINDOWS(rdx);\n+    const Register byte4 = WINDOWS_ONLY(rdx) NOT_WINDOWS(r9);\n@@ -6277,6 +6291,0 @@\n-    \/\/ Set up src and dst pointers properly\n-    __ addptr(source, start_offset);     \/\/ Initial offset\n-    __ addptr(dest, dp);\n-    __ pop(byte2);    \/\/ Clear old dest from stack\n-    __ push(dest);\n-\n@@ -6300,1 +6308,1 @@\n-    __ movb(Address(dest, 2), byte1);\n+    __ movb(Address(dest, dp, Address::times_1, 2), byte1);\n@@ -6302,1 +6310,1 @@\n-    __ movb(Address(dest, 1), byte1);\n+    __ movb(Address(dest, dp, Address::times_1, 1), byte1);\n@@ -6304,1 +6312,1 @@\n-    __ movb(Address(dest, 0), byte1);\n+    __ movb(Address(dest, dp, Address::times_1, 0), byte1);\n@@ -6311,2 +6319,2 @@\n-    __ load_signed_byte(byte1, Address(source, 0));\n-    __ load_signed_byte(byte2, Address(source, 1));\n+    __ load_signed_byte(byte1, Address(source, start_offset, Address::times_1, 0x00));\n+    __ load_signed_byte(byte2, Address(source, start_offset, Address::times_1, 0x01));\n@@ -6315,2 +6323,2 @@\n-    __ load_signed_byte(byte3, Address(source, 2));\n-    __ load_signed_byte(byte4, Address(source, 3));\n+    __ load_signed_byte(byte3, Address(source, start_offset, Address::times_1, 0x02));\n+    __ load_signed_byte(byte4, Address(source, start_offset, Address::times_1, 0x03));\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":34,"deletions":26,"binary":false,"changes":60,"status":"modified"}]}