{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    char* s2 = os::strdup(s);\n+    char* s2 = ::strdup(s);\n","filename":"src\/hotspot\/os\/aix\/loadlib_aix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -37,2 +38,0 @@\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fopen);\n-\n@@ -75,1 +74,1 @@\n-  FILE* fd = fopen(PROC_SELF_MOUNTINFO, \"r\");\n+  FILE* fd = os::fopen(PROC_SELF_MOUNTINFO, \"r\");\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zMountPoint_linux.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-    phase_names->append(use_strdup ? os::strdup(phase_name) : phase_name);\n+    phase_names->append(use_strdup ? strdup(phase_name) : phase_name);\n","filename":"src\/hotspot\/share\/compiler\/compilerEvent.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-    DEBUG_ONLY(debug_message = os::strdup(_temp->base()));\n+    DEBUG_ONLY(debug_message = strdup(_temp->base()));\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLogPrecious.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-    _shared_library_path = os::strdup(path);\n+    _shared_library_path = strdup(path);\n","filename":"src\/hotspot\/share\/jvmci\/jvmci.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -511,1 +511,1 @@\n-    char* name = os::strdup(jvmci_env()->as_utf8_string(stubName));\n+    char* name = strdup(jvmci_env()->as_utf8_string(stubName));\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,2 +93,0 @@\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fopen); \/\/ prevents compiler warnings for all functions\n-\n@@ -1345,0 +1343,2 @@\n+PRAGMA_DIAG_PUSH\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fopen);\n@@ -1346,0 +1346,1 @@\n+PRAGMA_DIAG_POP\n@@ -1365,0 +1366,2 @@\n+PRAGMA_DIAG_PUSH\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(read);\n@@ -1366,0 +1369,1 @@\n+PRAGMA_DIAG_POP\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,6 +30,0 @@\n-#if __GNUC__ >= 9\n-#include <dirent.h>\n-#include <sys\/socket.h>\n-#include <stdio.h>\n-#endif\n-\n@@ -79,0 +73,2 @@\n+#endif \/\/ SHARE_UTILITIES_COMPILERWARNINGS_HPP\n+\n@@ -81,0 +77,4 @@\n+#include <dirent.h>\n+#include <sys\/socket.h>\n+#include <stdio.h>\n+\n@@ -105,1 +105,0 @@\n-FORBID_C_FUNCTION(char *strdup(const char*),                   \"use os::strdup\");\n@@ -117,2 +116,0 @@\n-\n-#endif \/\/ SHARE_UTILITIES_COMPILERWARNINGS_HPP\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings.hpp","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"runtime\/os.hpp\"\n@@ -29,2 +30,0 @@\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(strdup);\n-\n@@ -84,1 +83,1 @@\n-    char* name_cpy = strdup(name);\n+    char* name_cpy = os::strdup(name);\n@@ -87,1 +86,1 @@\n-    free(name_cpy);\n+    os::free(name_cpy);\n@@ -104,1 +103,1 @@\n-    char* abbr_cpy = strdup(abbr);\n+    char* abbr_cpy = os::strdup(abbr);\n@@ -107,1 +106,1 @@\n-    free(abbr_cpy);\n+    os::free(abbr_cpy);\n","filename":"test\/hotspot\/gtest\/logging\/test_logDecorators.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"}]}