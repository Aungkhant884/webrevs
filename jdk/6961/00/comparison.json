{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,1 +438,1 @@\n-  FILE* fp = fopen(info_file, \"r\");\n+  FILE* fp = os::fopen(info_file, \"r\");\n","filename":"src\/hotspot\/cpu\/ppc\/vm_version_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -233,1 +233,1 @@\n-    ::close(listener);\n+    os::close(listener);\n@@ -251,1 +251,1 @@\n-    ::close(listener);\n+    os::close(listener);\n@@ -378,1 +378,1 @@\n-      ::close(listener());\n+      os::close(listener());\n@@ -384,1 +384,1 @@\n-      ::close(listener());\n+      os::close(listener());\n@@ -394,1 +394,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -401,1 +401,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -408,1 +408,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -456,1 +456,1 @@\n-  ::close(this->socket());\n+  os::close(this->socket());\n","filename":"src\/hotspot\/os\/aix\/attachListener_aix.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    char* s2 = ::strdup(s);\n+    char* s2 = os::strdup(s);\n","filename":"src\/hotspot\/os\/aix\/loadlib_aix.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,0 +111,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(close); \/\/ prevents compiler warnings for all functions\n+\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -242,1 +242,1 @@\n-  if ((f = fopen(procfile, \"r\")) == NULL) {\n+  if ((f = os::fopen(procfile, \"r\")) == NULL) {\n@@ -618,1 +618,1 @@\n-  ret_val = stat(name, &mystat);\n+  ret_val = os::stat(name, &mystat);\n@@ -665,1 +665,1 @@\n-  if ((fp = fopen(buffer, \"r\")) != NULL) {\n+  if ((fp = os::fopen(buffer, \"r\")) != NULL) {\n@@ -693,1 +693,1 @@\n-  if ((fp = fopen(buffer, \"r\")) != NULL) {\n+  if ((fp = os::fopen(buffer, \"r\")) != NULL) {\n","filename":"src\/hotspot\/os\/aix\/os_perf_aix.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -201,1 +201,1 @@\n-  listener = ::socket(PF_UNIX, SOCK_STREAM, 0);\n+  listener = os::socket(PF_UNIX, SOCK_STREAM, 0);\n@@ -214,1 +214,1 @@\n-    ::close(listener);\n+    os::close(listener);\n@@ -233,1 +233,1 @@\n-    ::close(listener);\n+    os::close(listener);\n@@ -363,1 +363,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -370,1 +370,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -377,1 +377,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -424,1 +424,1 @@\n-  ::close(this->socket());\n+  os::close(this->socket());\n@@ -476,1 +476,1 @@\n-  ret = stat(BsdAttachListener::path(), &st);\n+  ret = os::stat(BsdAttachListener::path(), &st);\n","filename":"src\/hotspot\/os\/bsd\/attachListener_bsd.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -110,0 +110,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(close); \/\/ prevents compiler warnings for all functions\n+\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,1 +170,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -202,1 +202,1 @@\n-  listener = ::socket(PF_UNIX, SOCK_STREAM, 0);\n+  listener = os::socket(PF_UNIX, SOCK_STREAM, 0);\n@@ -215,1 +215,1 @@\n-    ::close(listener);\n+    os::close(listener);\n@@ -233,1 +233,1 @@\n-    ::close(listener);\n+    os::close(listener);\n@@ -274,1 +274,1 @@\n-    RESTARTABLE(read(s, buf+off, left), n);\n+    RESTARTABLE(os::read(s, buf+off, left), n);\n@@ -363,1 +363,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -370,1 +370,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -377,1 +377,1 @@\n-      ::close(s);\n+      os::close(s);\n@@ -388,1 +388,1 @@\n-    int n = ::write(s, buf, len);\n+    int n = os::write(s, buf, len);\n@@ -424,1 +424,1 @@\n-  ::close(this->socket());\n+  os::close(this->socket());\n","filename":"src\/hotspot\/os\/linux\/attachListener_linux.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-  cgroups = fopen(proc_cgroups, \"r\");\n+  cgroups = os::fopen(proc_cgroups, \"r\");\n@@ -217,1 +217,1 @@\n-  cgroup = fopen(proc_self_cgroup, \"r\");\n+  cgroup = os::fopen(proc_self_cgroup, \"r\");\n@@ -272,1 +272,1 @@\n-  mntinfo = fopen(proc_self_mountinfo, \"r\");\n+  mntinfo = os::fopen(proc_self_mountinfo, \"r\");\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-  fp = fopen(file, \"r\");\n+  fp = os::fopen(file, \"r\");\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-  FILE* file = fopen(filepath, \"r\");\n+  FILE* file = os::fopen(filepath, \"r\");\n","filename":"src\/hotspot\/os\/linux\/decoder_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fopen);\n+\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zMountPoint_linux.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -133,1 +133,1 @@\n-  while (ftruncate(_fd, max_capacity) == -1) {\n+  while (os::ftruncate(_fd, max_capacity) == -1) {\n@@ -332,1 +332,1 @@\n-  FILE* const file = fopen(filename, \"r\");\n+  FILE* const file = os::fopen(filename, \"r\");\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,0 +153,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(closedir);  \/\/ prevents compiler warning for all functions\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-  if ((f = fopen(procfile, \"r\")) == NULL) {\n+  if ((f = os::fopen(procfile, \"r\")) == NULL) {\n@@ -274,1 +274,1 @@\n-  if ((f = fopen(\"\/proc\/stat\", \"r\")) == NULL) {\n+  if ((f = os::fopen(\"\/proc\/stat\", \"r\")) == NULL) {\n@@ -292,1 +292,1 @@\n-  if ((taskDir = opendir(\"\/proc\/self\/task\")) == NULL) {\n+  if ((taskDir = os::opendir(\"\/proc\/self\/task\")) == NULL) {\n@@ -296,1 +296,1 @@\n-    closedir(taskDir);\n+    os::closedir(taskDir);\n@@ -678,1 +678,1 @@\n-  ret_val = stat(name, &mystat);\n+  ret_val = os::stat(name, &mystat);\n@@ -691,1 +691,1 @@\n-  if (stat(name, &fbuf) < 0) {\n+  if (os::stat(name, &fbuf) < 0) {\n@@ -725,1 +725,1 @@\n-  if ((fp = fopen(buffer, \"r\")) != NULL) {\n+  if ((fp = os::fopen(buffer, \"r\")) != NULL) {\n@@ -753,1 +753,1 @@\n-  if ((fp = fopen(buffer, \"r\")) != NULL) {\n+  if ((fp = os::fopen(buffer, \"r\")) != NULL) {\n@@ -995,2 +995,2 @@\n-  ssize_t num_bytes = read(fd, buf, sizeof(buf));\n-  close(fd);\n+  ssize_t num_bytes = os::read(fd, buf, sizeof(buf));\n+  os::close(fd);\n","filename":"src\/hotspot\/os\/linux\/os_perf_linux.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,0 +93,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(closedir); \/\/ prevents compiler warnings for all functions\n+\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-      RESTARTABLE(::write(fd, addr, remaining), result);\n+      RESTARTABLE(os::write(fd, addr, remaining), result);\n@@ -128,1 +128,1 @@\n-    result = ::close(fd);\n+    result = os::close(fd);\n@@ -339,1 +339,1 @@\n-  dirp = ::opendir(dirname);\n+  dirp = os::opendir(dirname);\n@@ -398,1 +398,1 @@\n-      ::close(*saved_cwd_fd);\n+      os::close(*saved_cwd_fd);\n@@ -417,1 +417,1 @@\n-    ::close(saved_cwd_fd);\n+    os::close(saved_cwd_fd);\n@@ -868,1 +868,1 @@\n-    ::close(fd);\n+    os::close(fd);\n@@ -873,1 +873,1 @@\n-  RESTARTABLE(::ftruncate(fd, (off_t)0), result);\n+  RESTARTABLE(os::ftruncate(fd, (off_t)0), result);\n@@ -878,1 +878,1 @@\n-    ::close(fd);\n+    os::close(fd);\n@@ -882,1 +882,1 @@\n-  RESTARTABLE(::ftruncate(fd, (off_t)size), result);\n+  RESTARTABLE(os::ftruncate(fd, (off_t)size), result);\n@@ -887,1 +887,1 @@\n-    ::close(fd);\n+    os::close(fd);\n@@ -898,1 +898,1 @@\n-    RESTARTABLE(::write(fd, &zero_int, 1), result);\n+    RESTARTABLE(os::write(fd, &zero_int, 1), result);\n@@ -910,1 +910,1 @@\n-    ::close(fd);\n+    os::close(fd);\n@@ -942,1 +942,1 @@\n-    ::close(fd);\n+    os::close(fd);\n@@ -1003,1 +1003,1 @@\n-  result = ::close(fd);\n+  result = os::close(fd);\n@@ -1186,1 +1186,1 @@\n-    ::close(fd);\n+    os::close(fd);\n@@ -1200,1 +1200,1 @@\n-  result = ::close(fd);\n+  result = os::close(fd);\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,0 +105,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(close); \/\/ prevents compiler warnings for all functions\n+\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,1 @@\n-  if (FILE *f = fopen(\"\/proc\/cpuinfo\", \"r\")) {\n+  if (FILE *f = os::fopen(\"\/proc\/cpuinfo\", \"r\")) {\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -465,1 +465,1 @@\n-  FILE *fp = fopen(\"\/proc\/cpuinfo\", \"r\");\n+  FILE *fp = os::fopen(\"\/proc\/cpuinfo\", \"r\");\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -706,1 +706,1 @@\n-  fileStream stream(fopen(\"c1_compile_only\", \"wt\"));\n+  fileStream stream(os::fopen(\"c1_compile_only\", \"wt\"));\n@@ -720,1 +720,1 @@\n-  fileStream stream(fopen(\".hotspot_compiler\", \"at\"));\n+  fileStream stream(os::fopen(\".hotspot_compiler\", \"at\"));\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1083,1 +1083,1 @@\n-    lseek(fd, 0, SEEK_SET);\n+    os::lseek(fd, 0, SEEK_SET);\n@@ -1111,1 +1111,1 @@\n-    lseek(fd, 0, SEEK_SET);\n+    os::lseek(fd, 0, SEEK_SET);\n@@ -1279,1 +1279,1 @@\n-  lseek(fd, 0, SEEK_SET); \/\/ reset to begin of the archive\n+  os::lseek(fd, 0, SEEK_SET); \/\/ reset to begin of the archive\n@@ -1329,1 +1329,1 @@\n-    size_t len = lseek(fd, 0, SEEK_END);\n+    size_t len = os::lseek(fd, 0, SEEK_END);\n@@ -1342,1 +1342,1 @@\n-  if (lseek(_fd, (long)pos, SEEK_SET) < 0) {\n+  if (os::lseek(_fd, (long)pos, SEEK_SET) < 0) {\n@@ -1662,1 +1662,1 @@\n-    if (::close(_fd) < 0) {\n+    if (os::close(_fd) < 0) {\n@@ -1753,1 +1753,1 @@\n-  if (lseek(_fd, (long)si->file_offset(), SEEK_SET) != (int)si->file_offset() ||\n+  if (os::lseek(_fd, (long)si->file_offset(), SEEK_SET) != (int)si->file_offset() ||\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-    _stream = fopen(filename, \"rt\");\n+    _stream = os::fopen(filename, \"rt\");\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-    close(_fd);\n+    os::close(_fd);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2006,1 +2006,1 @@\n-      fp = fopen(file_name, \"wt\");\n+      fp = os::fopen(file_name, \"wt\");\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -228,1 +228,1 @@\n-        bytes_read = read(partial_fd, buf, (int)nr);\n+        bytes_read = os::read(partial_fd, buf, (int)nr);\n@@ -238,1 +238,1 @@\n-      while ((bytes_read = read(partial_fd, buf, buflen-1)) > 0) {\n+      while ((bytes_read = os::read(partial_fd, buf, buflen-1)) > 0) {\n@@ -288,1 +288,1 @@\n-      close(partial_fd);\n+      os::close(partial_fd);\n","filename":"src\/hotspot\/share\/compiler\/compileLog.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-    phase_names->append(use_strdup ? strdup(phase_name) : phase_name);\n+    phase_names->append(use_strdup ? os::strdup(phase_name) : phase_name);\n","filename":"src\/hotspot\/share\/compiler\/compilerEvent.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -935,1 +935,1 @@\n-  FILE* stream = fopen(cc_file(), \"rt\");\n+  FILE* stream = os::fopen(cc_file(), \"rt\");\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,1 +270,1 @@\n-        if ((fp = fopen(file, \"r\")) == NULL) {\n+        if ((fp = os::fopen(file, \"r\")) == NULL) {\n","filename":"src\/hotspot\/share\/compiler\/disassembler.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-    DEBUG_ONLY(debug_message = strdup(_temp->base()));\n+    DEBUG_ONLY(debug_message = os::strdup(_temp->base()));\n","filename":"src\/hotspot\/share\/gc\/shared\/gcLogPrecious.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-    _shared_library_path = strdup(path);\n+    _shared_library_path = os::strdup(path);\n","filename":"src\/hotspot\/share\/jvmci\/jvmci.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -511,1 +511,1 @@\n-    char* name = strdup(jvmci_env()->as_utf8_string(stubName));\n+    char* name = os::strdup(jvmci_env()->as_utf8_string(stubName));\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2839,1 +2839,1 @@\n-    size_t count = ::write(defaultStream::output_fd(), s, (int)len);\n+    size_t count = os::write(defaultStream::output_fd(), s, (int)len);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -321,1 +321,1 @@\n-  FILE* fp = fopen(filename, \"r\");\n+  FILE* fp = os::fopen(filename, \"r\");\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1247,1 +1247,1 @@\n-  FILE* stream = fopen(file_name, \"rb\");\n+  FILE* stream = os::fopen(file_name, \"rb\");\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,0 +93,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fopen); \/\/ prevents compiler warnings for all functions\n+\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,6 @@\n+#if __GNUC__ >= 9\n+#include <dirent.h>\n+#include <sys\/socket.h>\n+#include <stdio.h>\n+#endif\n+\n@@ -73,0 +79,39 @@\n+#if __GNUC__ >= 9\n+\n+#define FORBID_C_FUNCTION(signature, alternative) \\\n+  extern \"C\" signature __attribute__((__warning__(alternative)))\n+\n+#define PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(name) \\\n+  PRAGMA_DISABLE_GCC_WARNING(\"-Wattribute-warning\")\n+\n+FORBID_C_FUNCTION(void abort(void),                            \"use os::abort\");\n+FORBID_C_FUNCTION(int close(int),                              \"use os::close\");\n+FORBID_C_FUNCTION(int closedir(DIR *),                         \"use os::closedir\");\n+FORBID_C_FUNCTION(int connect(int, const struct sockaddr*, socklen_t), \"use os::connect\");\n+FORBID_C_FUNCTION(void flockfile(FILE*),                       \"use os::flockfile\");\n+FORBID_C_FUNCTION(FILE *fopen(const char *, const char *),     \"use os::fopen\");\n+FORBID_C_FUNCTION(int fsync(int),                              \"use os::fsync\");\n+FORBID_C_FUNCTION(int ftruncate(int, off_t),                   \"use os::ftruncate\");\n+FORBID_C_FUNCTION(void funlockfile(FILE *),                    \"use os::funlockfile\");\n+FORBID_C_FUNCTION(off_t lseek(int, off_t, int),                \"use os::lseek\");\n+FORBID_C_FUNCTION(DIR *opendir(const char *),                  \"use os::opendir\");\n+FORBID_C_FUNCTION(long int random(void),                       \"use os::random\");\n+FORBID_C_FUNCTION(ssize_t read(int, void*, size_t),            \"use os::read\");\n+FORBID_C_FUNCTION(struct dirent* readdir(DIR*),                \"use os::readdir\");\n+FORBID_C_FUNCTION(ssize_t recv(int, void*, size_t, int),       \"use os::recv\");\n+FORBID_C_FUNCTION(int stat(const char*, struct stat*),         \"use os::stat\");\n+FORBID_C_FUNCTION(ssize_t send(int, const void*, size_t, int), \"use os::send\");\n+FORBID_C_FUNCTION(int socket(int, int, int),                   \"use os::socket\");\n+FORBID_C_FUNCTION(char *strdup(const char*),                   \"use os::strdup\");\n+FORBID_C_FUNCTION(char* strerror(int),                         \"use os::strerror\");\n+FORBID_C_FUNCTION(ssize_t write(int, const void*, size_t),     \"use os::write\");\n+\n+FORBID_C_FUNCTION(char *strtok(char*, const char*),            \"use strtok_r\");\n+\n+#else\n+\n+#define FORBID_C_FUNCTION(signature, alternative)\n+#define PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(name)\n+\n+#endif \/\/ __GNUC__ >= 9\n+\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings.hpp","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,1 +171,1 @@\n-  _file = fopen(filepath, \"r\");\n+  _file = os::fopen(filepath, \"r\");\n","filename":"src\/hotspot\/share\/utilities\/elfFile.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -548,1 +548,1 @@\n-  _file = fopen(file_name, \"w\");\n+  _file = os::fopen(file_name, \"w\");\n@@ -558,1 +558,1 @@\n-  _file = fopen(file_name, opentype);\n+  _file = os::fopen(file_name, opentype);\n@@ -617,1 +617,1 @@\n-    size_t count = ::write(_fd, s, (int)len);\n+    size_t count = os::write(_fd, s, (int)len);\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1657,1 +1657,1 @@\n-      close(fd_log);\n+      os::close(fd_log);\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,1 +281,1 @@\n-      abort();\n+      os::abort();\n","filename":"test\/hotspot\/gtest\/gtestMain.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,2 +141,2 @@\n-  FILE* fp = fopen(filename, \"r\");\n-  assert(fp != NULL, \"error opening file %s: %s\", filename, strerror(errno));\n+  FILE* fp = os::fopen(filename, \"r\");\n+  assert(fp != NULL, \"error opening file %s: %s\", filename, os::strerror(errno));\n","filename":"test\/hotspot\/gtest\/logging\/logTestUtils.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +89,1 @@\n-    FILE* f = fopen(TestLogFileName, \"w\");\n+    FILE* f = os::fopen(TestLogFileName, \"w\");\n","filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-  FILE* fp = fopen(TestLogFileName, \"r\");\n+  FILE* fp = os::fopen(TestLogFileName, \"r\");\n","filename":"test\/hotspot\/gtest\/logging\/test_log.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,2 @@\n+PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(strdup);\n+\n","filename":"test\/hotspot\/gtest\/logging\/test_logDecorators.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-  FILE* fp = fopen(filename, \"w+\");\n+  FILE* fp = os::fopen(filename, \"w+\");\n","filename":"test\/hotspot\/gtest\/logging\/test_logTagSetDescriptions.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}