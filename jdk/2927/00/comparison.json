{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -358,1 +358,1 @@\n-            getEventSet();\n+            waitThreadStart(\"thread2\");\n@@ -373,1 +373,1 @@\n-            getEventSet();\n+            waitThreadDeath(\"thread2\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/request\/request001.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import com.sun.jdi.event.ThreadDeathEvent;\n+import com.sun.jdi.event.ThreadStartEvent;\n@@ -167,0 +169,42 @@\n+    \/\/ Waiting for ThreadStart and ThreadDeath event we can get events from system threads,\n+    \/\/ so need to ensure we get the event from the desired thread.\n+    protected void waitThreadStart(String threadName) throws JDITestRuntimeException {\n+        while (true) {\n+            getEventSet();\n+            Event event = eventIterator.nextEvent();\n+            if (event instanceof ThreadStartEvent) {\n+                ThreadStartEvent evt = (ThreadStartEvent)event;\n+                if (evt.thread().name().equals(threadName)) {\n+                    break;\n+                }\n+            } else if (!(event instanceof ThreadDeathEvent)) {\n+                \/\/ unexpected event. let the test handle it\n+                break;\n+            }\n+            \/\/ log the event and wait for next one\n+            log2(\"Waiting for ThreadStartEvent, got \" + event);\n+        }\n+        \/\/ reset the iterator\n+        eventIterator = eventSet.eventIterator();\n+    }\n+\n+    protected void waitThreadDeath(String threadName) throws JDITestRuntimeException {\n+        while (true) {\n+            getEventSet();\n+            Event event = eventIterator.nextEvent();\n+            if (event instanceof ThreadDeathEvent) {\n+                ThreadDeathEvent evt = (ThreadDeathEvent)event;\n+                if (evt.thread().name().equals(threadName)) {\n+                    break;\n+                }\n+            } else if (!(event instanceof ThreadStartEvent)) {\n+                \/\/ unexpected event. let the test handle it\n+                break;\n+            }\n+            \/\/ log the event and wait for next one\n+            log2(\"Waiting for ThreadStartEvent, got \" + event);\n+        }\n+        \/\/ reset the iterator\n+        eventIterator = eventSet.eventIterator();\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/JDIBase.java","additions":45,"deletions":1,"binary":false,"changes":46,"status":"modified"}]}