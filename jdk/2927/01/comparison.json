{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -358,1 +358,1 @@\n-            getEventSet();\n+            getEventSetForThreadStartDeath(\"thread2\");\n@@ -373,1 +373,1 @@\n-            getEventSet();\n+            getEventSetForThreadStartDeath(\"thread2\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/request\/request001.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,2 @@\n+import com.sun.jdi.event.ThreadDeathEvent;\n+import com.sun.jdi.event.ThreadStartEvent;\n@@ -153,0 +155,32 @@\n+    \/\/ Special version of getEventSet for ThreadStartEvent\/ThreadDeathEvent.\n+    \/\/ When ThreadStartRequest and\/or ThreadDeathRequest are enabled, we can get the events from system threads\n+    \/\/ unexpected for tests.\n+    \/\/ The method skips ThreadStartEvent\/ThreadDeathEvent events for all threads except the expected one.\n+    protected void getEventSetForThreadStartDeath(String threadName) throws JDITestRuntimeException {\n+        boolean gotDesiredEvent = false;\n+        while (!gotDesiredEvent) {\n+            getEventSet();\n+            Event event = eventIterator.nextEvent();\n+            if (event instanceof ThreadStartEvent) {\n+                ThreadStartEvent evt = (ThreadStartEvent)event;\n+                if (evt.thread().name().equals(threadName)) {\n+                    gotDesiredEvent = true;\n+                } else {\n+                    log2(\"Got ThreadStartEvent for wrong thread: \" + event);\n+                }\n+            } else if (event instanceof ThreadDeathEvent) {\n+                ThreadDeathEvent evt = (ThreadDeathEvent)event;\n+                if (evt.thread().name().equals(threadName)) {\n+                    gotDesiredEvent = true;\n+                } else {\n+                    log2(\"Got ThreadDeathEvent for wrong thread: \" + event);\n+                }\n+            } else {\n+                \/\/ not ThreadStartEvent nor ThreadDeathEvent\n+                gotDesiredEvent = true;\n+            }\n+        }\n+        \/\/ reset the iterator before return\n+        eventIterator = eventSet.eventIterator();\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/JDIBase.java","additions":35,"deletions":1,"binary":false,"changes":36,"status":"modified"}]}