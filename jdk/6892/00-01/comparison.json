{"files":[{"patch":"@@ -1445,3 +1445,2 @@\n-  Node* remix_address_expressions(Node *n);\n-  Node* remix_address_expressions_helper(Node* n, IdealLoopTree* n_loop, Node* n_ctrl, BasicType bt);\n-  bool remix_address_expressions_verif(Node* n, IdealLoopTree* n_loop, Node* n_ctrl);\n+  Node* remix_address_expressions(Node* n);\n+  Node* remix_address_expressions_add_left_shift(Node* n, IdealLoopTree* n_loop, Node* n_ctrl, BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -356,1 +356,3 @@\n-Node* PhaseIdealLoop::remix_address_expressions_helper(Node* n, IdealLoopTree* n_loop, Node* n_ctrl, BasicType bt) {\n+\/\/ Replace expressions like ((V+I) << 2) with (V<<2 + I<<2).\n+Node* PhaseIdealLoop::remix_address_expressions_add_left_shift(Node* n, IdealLoopTree* n_loop, Node* n_ctrl, BasicType bt) {\n+  assert(bt == T_INT || bt == T_LONG, \"only for integers\");\n@@ -359,1 +361,0 @@\n-  \/\/ Replace expressions like ((V+I) << 2) with (V<<2 + I<<2).\n@@ -361,1 +362,0 @@\n-    assert(n_op == Op_LShiftI || n_op == Op_LShiftL, \"\");\n@@ -378,1 +378,3 @@\n-    if (n_loop != add_loop) return NULL;  \/\/ happens w\/ evil ZKM loops\n+    if (n_loop != add_loop) {\n+      return NULL;  \/\/ happens w\/ evil ZKM loops\n+    }\n@@ -400,2 +402,1 @@\n-    if (add_var_loop == n_loop) {\n-    } else if (add_invar_loop == n_loop) {\n+    if (add_invar_loop == n_loop) {\n@@ -407,3 +408,1 @@\n-      Node *add_var_ctrl = get_ctrl(add_var);\n-      IdealLoopTree *add_var_loop = get_loop(add_var_ctrl);\n-    } else {                     \/\/ Else neither input is loop invariant\n+    } else if (add_var_loop != n_loop) { \/\/ Else neither input is loop invariant\n@@ -468,3 +467,1 @@\n-  int n_op = n->Opcode();\n-\n-  Node* res = remix_address_expressions_helper(n, n_loop, n_ctrl, T_INT);\n+  Node* res = remix_address_expressions_add_left_shift(n, n_loop, n_ctrl, T_INT);\n@@ -474,1 +471,1 @@\n-  res = remix_address_expressions_helper(n, n_loop, n_ctrl, T_LONG);\n+  res = remix_address_expressions_add_left_shift(n, n_loop, n_ctrl, T_LONG);\n@@ -479,0 +476,1 @@\n+  int n_op = n->Opcode();\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"}]}