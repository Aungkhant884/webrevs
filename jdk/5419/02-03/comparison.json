{"files":[{"patch":"@@ -632,1 +632,1 @@\n-void G1Policy::record_young_collection_end(bool concurrent_operation_is_full_mark, bool update_stats) {\n+void G1Policy::record_young_collection_end(bool concurrent_operation_is_full_mark, bool evacuation_failure) {\n@@ -655,0 +655,4 @@\n+  \/\/ Evacuation failures skew the timing too much to be considered for some statistics updates.\n+  \/\/ We make the assumption that these are rare.\n+  bool update_stats = !evacuation_failure;\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -319,1 +319,1 @@\n-  void record_young_collection_end(bool concurrent_operation_is_full_mark, bool update_stats);\n+  void record_young_collection_end(bool concurrent_operation_is_full_mark, bool evacuation_failure);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1130,3 +1130,1 @@\n-    \/\/ Evacuation failures skew the timing too much to be considered for some statistics updates.\n-    \/\/ We make the assumption that these are rare.\n-    policy()->record_young_collection_end(_concurrent_operation_is_full_mark, !evacuation_failed());\n+    policy()->record_young_collection_end(_concurrent_operation_is_full_mark, evacuation_failed());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}