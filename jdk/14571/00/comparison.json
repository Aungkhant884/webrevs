{"files":[{"patch":"@@ -820,1 +820,1 @@\n-    mirror()->byte_field_put(fd->offset(), checked_cast<jbyte>(fd->int_initial_value()));\n+    mirror()->byte_field_put(fd->offset(), (jbyte)(fd->int_initial_value()));\n@@ -823,1 +823,1 @@\n-    mirror()->bool_field_put(fd->offset(), checked_cast<jboolean>(fd->int_initial_value()));\n+    mirror()->bool_field_put(fd->offset(), (jboolean)(fd->int_initial_value()));\n@@ -826,1 +826,1 @@\n-    mirror()->char_field_put(fd->offset(), checked_cast<jchar>(fd->int_initial_value()));\n+    mirror()->char_field_put(fd->offset(), (jchar)(fd->int_initial_value()));\n@@ -829,1 +829,1 @@\n-    mirror()->short_field_put(fd->offset(), checked_cast<jshort>(fd->int_initial_value()));\n+    mirror()->short_field_put(fd->offset(), (jshort)(fd->int_initial_value()));\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8310297\n+ * @summary Negative fields shorter than an int may not be sign extended in cpool\n+ *          but should in static field initializers. javac gives an error for this but\n+ *          not other sources of bytecodes.  With checked_cast<> this crashes.\n+ * @compile CompatByteFieldInit.jasm\n+ * @run main ByteFieldInitTest\n+ *\/\n+\n+import java.lang.reflect.Field;\n+\n+public class ByteFieldInitTest {\n+\n+    final static byte b = -128;     \/\/ compare with 0x80\n+    final static short s = -32768;  \/\/ compare with 0x8000\n+\n+    public static void main(java.lang.String[] unused) throws Exception {\n+        \/\/ javac is smart enough to complain about the other class's byte and short values when referred\n+        \/\/ to directly.  With checked_cast<> loading this class should fail.\n+        Class<?> c = Class.forName(\"CompatByteFieldInit\");\n+        Field cb = c.getDeclaredField(\"b\");\n+        Field cs = c.getDeclaredField(\"s\");\n+        if (b != cb.getByte(null) || s != cs.getShort(null)) {\n+            throw new RuntimeException(\"constant pool init not compatible \" + cb.getByte(null) + \" \" + cs.getShort(null));\n+        } else {\n+            System.out.println(\"Fields are same test passed\");\n+        }\n+    }\n+}\n+\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/ConstantPool\/ByteFieldInitTest.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -0,0 +1,38 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+super class CompatByteFieldInit\n+\tversion 65:0\n+{\n+  public static final Field b:B\t= int 0x80;\n+  public static final Field s:S\t= int 0x8000;\n+\n+  Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+} \/\/ end Class CompatByteFieldInit\n","filename":"test\/hotspot\/jtreg\/runtime\/ConstantPool\/CompatByteFieldInit.jasm","additions":38,"deletions":0,"binary":false,"changes":38,"status":"added"}]}