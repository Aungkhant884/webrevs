{"files":[{"patch":"@@ -63,1 +63,1 @@\n-    @Test(dataProvider = \"availableLookAndFeels\", dataProviderClass = TestHelpers.class)\n+    @Test(dataProvider = \"lookAndFeelListExcludingWinLookAndFeel\", dataProviderClass = TestHelpers.class)\n","filename":"test\/jdk\/sanity\/client\/SwingSet\/src\/ButtonDemoScreenshotTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n@@ -90,0 +93,13 @@\n+    @DataProvider(name = \"lookAndFeelListExcludingWinLookAndFeel\")\n+    public static Object[][] lookAndFeelProvider() {\n+        UIManager.LookAndFeelInfo lookAndFeelInfos[] = UIManager.getInstalledLookAndFeels();\n+\n+        ArrayList<UIManager.LookAndFeelInfo> listLookAndFeel = new ArrayList<>(Arrays.asList(lookAndFeelInfos));\n+\n+        UIManager.LookAndFeelInfo lookAndFeelFilteredInfos[] = listLookAndFeel.stream().filter(lf -> !lf.getName().equals(\"Windows\")).collect(Collectors.toList()).toArray(new UIManager.LookAndFeelInfo[0]);\n+        Object[][] lookAndFeels = new Object[lookAndFeelFilteredInfos.length][1];\n+        for (int i = 0; i < lookAndFeelFilteredInfos.length; i++) {\n+            lookAndFeels[i][0] = lookAndFeelFilteredInfos[i].getClassName();\n+        }\n+        return lookAndFeels;\n+    }\n","filename":"test\/jdk\/sanity\/client\/SwingSet\/src\/TestHelpers.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}