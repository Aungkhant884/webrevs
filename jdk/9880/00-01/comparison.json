{"files":[{"patch":"@@ -71,1 +71,1 @@\n-  } else if (mem_limit >= host_memory) {\n+  } else if (log_is_enabled(Trace, os, container) && mem_limit >= host_memory) {\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -227,2 +227,10 @@\n-    log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value\",\n-                            mem_limit == OSCONTAINER_ERROR ? \"failed\" : \"unlimited\", mem_limit);\n+    if (mem_limit >= phys_mem) {\n+      log_debug(os, container)(\"container memory limit ignored: \" JLONG_FORMAT \", using host value \"\n+                               JLONG_FORMAT, mem_limit, phys_mem);\n+    } else if (OSCONTAINER_ERROR == mem_limit) {\n+      log_debug(os, container)(\"container memory limit failed: \" JLONG_FORMAT \", using host value \"\n+                               JLONG_FORMAT, mem_limit, phys_mem);\n+    } else {\n+      log_debug(os, container)(\"container memory limit unlimited: \" JLONG_FORMAT \", using host value \"\n+                               JLONG_FORMAT, mem_limit, phys_mem);\n+    }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"}]}