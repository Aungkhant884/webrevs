{"files":[{"patch":"@@ -561,0 +561,2 @@\n+  jlong phys_mem = os::Linux::physical_memory();\n+  log_trace(os, container)(\"total physical memory: \" JLONG_FORMAT, phys_mem);\n@@ -562,0 +564,16 @@\n+\n+  \/\/ sanity checking\n+  if (mem_limit <= 0 || mem_limit >= phys_mem) {\n+    const char *reason;\n+    if (mem_limit >= phys_mem) {\n+      reason = \"ignored\";\n+    } else if (OSCONTAINER_ERROR == mem_limit) {\n+      reason = \"failed\";\n+    } else {\n+      reason = \"unlimited\";\n+    }\n+    log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value \" JLONG_FORMAT,\n+                             reason, mem_limit, phys_mem);\n+    mem_limit = mem_limit == -2 ? -2 : -1;\n+  }\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -197,5 +197,4 @@\n-    jlong mem_limit, mem_usage, host_mem;\n-    host_mem = Linux::physical_memory();\n-    mem_limit = OSContainer::memory_limit_in_bytes();\n-    if (mem_limit > host_mem) {\n-      mem_limit = -1; \/\/ bail out of container code\n+    jlong mem_limit, mem_usage;\n+    if ((mem_limit = OSContainer::memory_limit_in_bytes()) < 1) {\n+      log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value\",\n+                             mem_limit == OSCONTAINER_ERROR ? \"failed\" : \"unlimited\", mem_limit);\n@@ -203,9 +202,7 @@\n-    if (mem_limit > 0) {\n-      if (mem_usage = OSContainer::memory_usage_in_bytes() < 1) {\n-        log_debug(os, container)(\"container memory usage failed: \" JLONG_FORMAT \", using host value\", mem_usage);\n-      }\n-      if (mem_usage > 0) {\n-        avail_mem = mem_limit > mem_usage ? (julong)mem_limit - (julong)mem_usage : 0;\n-        log_trace(os)(\"available container memory: \" JULONG_FORMAT, avail_mem);\n-        return avail_mem;\n-      }\n+    if (mem_limit > 0 && (mem_usage = OSContainer::memory_usage_in_bytes()) < 1) {\n+      log_debug(os, container)(\"container memory usage failed: \" JLONG_FORMAT \", using host value\", mem_usage);\n+    }\n+    if (mem_limit > 0 && mem_usage > 0 ) {\n+      avail_mem = mem_limit > mem_usage ? (julong)mem_limit - (julong)mem_usage : 0;\n+      log_trace(os)(\"available container memory: \" JULONG_FORMAT, avail_mem);\n+      return avail_mem;\n@@ -222,3 +219,1 @@\n-  jlong phys_mem = Linux::physical_memory();\n-  log_debug(os, container)(\"total physical memory: \" JLONG_FORMAT, phys_mem);\n-\n+  jlong phys_mem = 0;\n@@ -226,3 +221,2 @@\n-    const char *reason;\n-    jlong mem_limit = OSContainer::memory_limit_in_bytes();\n-    if (mem_limit > 0 && mem_limit < phys_mem) {\n+    jlong mem_limit;\n+    if ((mem_limit = OSContainer::memory_limit_in_bytes()) > 0) {\n@@ -232,9 +226,0 @@\n-    if (mem_limit >= phys_mem) {\n-      reason = \"ignored\";\n-    } else if (OSCONTAINER_ERROR == mem_limit) {\n-      reason = \"failed\";\n-    } else {\n-      reason = \"unlimited\";\n-    }\n-    log_debug(os, container)(\"container memory limit %s: \" JLONG_FORMAT \", using host value \" JLONG_FORMAT,\n-                             reason, mem_limit, phys_mem);\n@@ -243,0 +228,1 @@\n+  phys_mem = Linux::physical_memory();\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":15,"deletions":29,"binary":false,"changes":44,"status":"modified"}]}