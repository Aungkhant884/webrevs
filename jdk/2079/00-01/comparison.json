{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,0 +125,5 @@\n+  if (JNI_TRUE == sampleThreads) {\n+    JfrThreadSampling::enroll_thread_sampler();\n+  } else {\n+    JfrThreadSampling::disenroll_thread_sampler();\n+  }\n","filename":"src\/hotspot\/share\/jfr\/jni\/jfrJniMethod.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -518,4 +518,0 @@\n-  if (!JfrOptionSet::sample_threads()) {\n-    return;\n-  }\n-\n@@ -652,0 +648,14 @@\n+\n+void JfrThreadSampling::enroll_thread_sampler() {\n+  if (_instance == NULL) {\n+    return;\n+  }\n+  instance()._sampler->enroll();\n+}\n+\n+void JfrThreadSampling::disenroll_thread_sampler() {\n+  if (_instance == NULL) {\n+    return;\n+  }\n+  instance()._sampler->disenroll();\n+}\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.cpp","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,2 @@\n+  static void enroll_thread_sampler();\n+  static void disenroll_thread_sampler();\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}