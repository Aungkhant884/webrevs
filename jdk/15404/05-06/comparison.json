{"files":[{"patch":"@@ -80,1 +80,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/logger\/LazyLoggers.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-     * This test triggers recursion by calling `System.getLogger` in the class init\n+     * This test triggers recursion by calling `System.getLogger` in the class init and constructor\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/RecursiveLoading\/PlatformRecursiveLoadingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-     * This test triggers recursion by calling `System.getLogger` in the class init\n+     * This test triggers recursion by calling `System.getLogger` in the class init and constructor\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/RecursiveLoading\/RecursiveLoadingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-            boolean mutliThreadLoad = Boolean.getBoolean(\"mutliThreadLoad\");\n+            boolean multiThreadLoad = Boolean.getBoolean(\"multiThreadLoad\");\n@@ -110,1 +110,1 @@\n-            if (mutliThreadLoad) {\n+            if (multiThreadLoad) {\n@@ -140,11 +140,4 @@\n-                if (signJars) {\n-                    assertEquals(System.LoggerFinder.getLoggerFinder().getClass().getName(),\n-                            INTERNAL_LOGGER_FINDER_NAME);\n-                    System.Logger testLogger = System.getLogger(\"jdk.event.security\");\n-                    assertEquals(testLogger.getClass().getName(), INTERNAL_LOGGER_FINDER_NAME);\n-                } else {\n-                    assertEquals(System.LoggerFinder.getLoggerFinder().getClass().getName(),\n-                            INTERNAL_LOGGER_FINDER_NAME);\n-                    System.Logger testLogger = System.getLogger(\"jdk.event.security\");\n-                    assertEquals(testLogger.getClass().getName(), INTERNAL_LOGGER_NAME);\n-                }\n+                assertEquals(System.LoggerFinder.getLoggerFinder().getClass().getName(),\n+                        INTERNAL_LOGGER_FINDER_NAME);\n+                System.Logger testLogger = System.getLogger(\"jdk.event.security\");\n+                assertEquals(testLogger.getClass().getName(), INTERNAL_LOGGER_NAME);\n@@ -161,1 +154,1 @@\n-    private static void launchTest(boolean mutliThreadLoad, boolean withCustomLoggerFinder) {\n+    private static void launchTest(boolean multiThreadLoad, boolean withCustomLoggerFinder) {\n@@ -184,2 +177,2 @@\n-        if (mutliThreadLoad) {\n-            cmds.add(\"-DmutliThreadLoad=true\");\n+        if (multiThreadLoad) {\n+            cmds.add(\"-DmultiThreadLoad=true\");\n","filename":"test\/jdk\/java\/lang\/System\/LoggerFinder\/SignedLoggerFinderTest\/SignedLoggerFinderTest.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"}]}