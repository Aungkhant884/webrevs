{"files":[{"patch":"@@ -37,7 +37,0 @@\n-    \/**\n-     *  Print a message directly to stderr, bypassing all character conversion\n-     *  methods.\n-     *  @param msg  message to print\n-     *\/\n-    private static native void err(String msg);\n-\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringCoding.java","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,75 +0,0 @@\n-\/*\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include <stdlib.h>\n-#include <jni.h>\n-#include <jni_util.h>\n-#include <stdio.h>\n-#include <jvm.h>\n-\n-#include \"java_lang_StringCoding.h\"\n-\n-static void\n-printToFile(JNIEnv *env, jstring s, FILE *file)\n-{\n-    char *sConverted;\n-    int length = 0;\n-    int i;\n-    const jchar *sAsArray;\n-\n-    if (s == NULL) {\n-        JNU_ThrowNullPointerException(env, NULL);\n-        return;\n-    }\n-\n-    sAsArray = (*env)->GetStringChars(env, s, NULL);\n-    if (!sAsArray)\n-        return;\n-    length = (*env)->GetStringLength(env, s);\n-    if (length == 0) {\n-        (*env)->ReleaseStringChars(env, s, sAsArray);\n-        return;\n-    }\n-    sConverted = (char *) malloc(length + 1);\n-    if (!sConverted) {\n-        (*env)->ReleaseStringChars(env, s, sAsArray);\n-        JNU_ThrowOutOfMemoryError(env, NULL);\n-        return;\n-    }\n-\n-    for(i = 0; i < length; i++) {\n-        sConverted[i] = (0x7f & sAsArray[i]);\n-    }\n-    sConverted[length] = '\\0';\n-    jio_fprintf(file, \"%s\", sConverted);\n-    (*env)->ReleaseStringChars(env, s, sAsArray);\n-    free(sConverted);\n-}\n-\n-JNIEXPORT void JNICALL\n-Java_java_lang_StringCoding_err(JNIEnv *env, jclass cls, jstring s)\n-{\n-    printToFile(env, s, stderr);\n-}\n","filename":"src\/java.base\/share\/native\/libjava\/StringCoding.c","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"}]}