{"files":[{"patch":"@@ -67,1 +67,1 @@\n-  if (!thread->is_in_full_stack_checked(unextended_sp)) {\n+  if (!thread->is_in_stack_range_incl(unextended_sp, sp)) {\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-  \/\/ unextended sp must be within the stack\n-  if (!thread->is_in_full_stack_checked(unextended_sp)) {\n+  \/\/ unextended sp must be within the stack and above or equal sp\n+  if (!thread->is_in_stack_range_incl(unextended_sp, sp)) {\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"utilities\/macros.hpp\"\n@@ -314,0 +315,3 @@\n+    \/\/ Adjust sender SP for callee, for proper stack walking.\n+    \/\/ Note: the caller canâ€™t be compiled as MH intrinsics always have native wrappers.\n+    __ addptr(LP64_ONLY(r13) NOT_LP64(rsi), Interpreter::stackElementSize);\n","filename":"src\/hotspot\/cpu\/x86\/methodHandles_x86.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}