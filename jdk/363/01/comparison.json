{"files":[{"patch":"@@ -5351,2 +5351,2 @@\n-                log.warning(LintCategory.SERIAL,\n-                        tree.pos(), Warnings.MissingSVUID(c));\n+                if (!c.isRecord())\n+                    log.warning(LintCategory.SERIAL, tree.pos(), Warnings.MissingSVUID(c));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * @test 8250629 8252307 8247352\n+ * @test 8250629 8252307 8247352 8241151\n@@ -148,0 +148,2 @@\n+    boolean useAP;\n+\n@@ -149,1 +151,1 @@\n-        boolean useAP = System.getProperty(\"useAP\") == null ? false : System.getProperty(\"useAP\").equals(\"true\");\n+        useAP = System.getProperty(\"useAP\", \"false\").equals(\"true\");\n@@ -1667,0 +1669,16 @@\n+\n+    public void testNoWarningForSerializableRecords() {\n+        if (!useAP) {\n+            \/* dont execute this test when the default annotation processor is on as it will fail due to\n+             * spurious warnings\n+             *\/\n+            appendCompileOptions(\"-Werror\", \"-Xlint:serial\");\n+            assertOK(\n+                    \"\"\"\n+                    import java.io.*;\n+                    record R() implements java.io.Serializable {}\n+                    \"\"\"\n+            );\n+            removeLastCompileOptions(2);\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"}]}