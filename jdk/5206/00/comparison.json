{"files":[{"patch":"@@ -48,0 +48,2 @@\n+import javax.lang.model.element.NestingKind;\n+import javax.lang.model.element.TypeElement;\n@@ -51,0 +53,1 @@\n+import javax.lang.model.util.Elements;\n@@ -191,1 +194,1 @@\n-                } else if (!isOverridingMethod) {\n+                } else if (!isOverridingMethod && !isSynthetic() && !isAnonymous()) {\n@@ -1161,0 +1164,9 @@\n+    private boolean isSynthetic() {\n+        return env.elements.getOrigin(env.currElement) == Elements.Origin.SYNTHETIC;\n+    }\n+\n+    private boolean isAnonymous() {\n+        return (env.currElement instanceof TypeElement te)\n+                && te.getNestingKind() == NestingKind.ANONYMOUS;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.doclint\n+ * @build DocLintTester\n+ * @run main DocLintTester -Xmsgs:-missing AnonClassTest.java\n+ * @run main DocLintTester -Xmsgs:missing -ref AnonClassTest.out AnonClassTest.java\n+ *\/\n+\n+\/** Class comment. *\/\n+public enum AnonClassTest {\n+\n+    \/**\n+     * E1 comment.\n+     * This member uses an anonymous class, which should not trigger a warning.\n+     *\/\n+    E1 {\n+        \/\/ no comment: should give warning\n+        int field;\n+\n+        \/\/ no comment: should give warning\n+        void m() { }\n+\n+        \/\/ no comment required: should not give warning\n+        @java.lang.Override\n+        public void m1() { }\n+    },\n+\n+    \/\/ This member also uses an anonymous class,\n+    \/\/ but there should only be a single warning for the member itself.\n+    E2 { },\n+\n+    \/** E3 comment. This member does not use an anonymous class. *\/\n+    E3;\n+\n+    \/** Method comment. *\/\n+    public void m1() { }\n+}\n","filename":"test\/langtools\/tools\/doclint\/AnonClassTest.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,10 @@\n+AnonClassTest.java:18: warning: no comment\n+        int field;\n+            ^\n+AnonClassTest.java:21: warning: no comment\n+        void m() { }\n+             ^\n+AnonClassTest.java:30: warning: no comment\n+    E2 { },\n+    ^\n+3 warnings\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/doclint\/AnonClassTest.out","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"}]}