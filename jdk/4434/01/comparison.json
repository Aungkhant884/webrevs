{"files":[{"patch":"@@ -959,13 +959,0 @@\n-\/\/ Load a class for boot loader from the shared spaces. This also\n-\/\/ forces the superclass and all interfaces to be loaded.\n-InstanceKlass* SystemDictionary::load_shared_boot_class(Symbol* class_name,\n-                                                        PackageEntry* pkg_entry,\n-                                                        TRAPS) {\n-  assert(UseSharedSpaces, \"Sanity check\");\n-  InstanceKlass* ik = SystemDictionaryShared::find_builtin_class(class_name);\n-  if (ik != NULL && ik->is_shared_boot_class()) {\n-    return load_shared_class(ik, Handle(), Handle(), NULL, pkg_entry, THREAD);\n-  }\n-  return NULL;\n-}\n-\n@@ -1292,1 +1279,5 @@\n-      k = load_shared_boot_class(class_name, pkg_entry, THREAD);\n+      InstanceKlass* ik = SystemDictionaryShared::find_builtin_class(class_name);\n+      if (ik != NULL && ik->is_shared_boot_class() && !ik->shared_loading_failed()) {\n+        SharedClassLoadingMark slm(THREAD, ik);\n+        k = load_shared_class(ik, class_loader, Handle(), NULL,  pkg_entry, CHECK_NULL);\n+      }\n@@ -1304,0 +1295,3 @@\n+#if INCLUDE_CDS\n+      SharedClassLoadingMark slm(THREAD, k);\n+#endif\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -379,3 +379,0 @@\n-  static InstanceKlass* load_shared_boot_class(Symbol* class_name,\n-                                               PackageEntry* pkg_entry,\n-                                               TRAPS);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1021,0 +1021,1 @@\n+        SharedClassLoadingMark slm(THREAD, k);\n@@ -1050,5 +1051,4 @@\n-  if (ik != NULL) {\n-    if ((ik->is_shared_app_class() &&\n-         SystemDictionary::is_system_class_loader(class_loader()))  ||\n-        (ik->is_shared_platform_class() &&\n-         SystemDictionary::is_platform_class_loader(class_loader()))) {\n+  if (ik != NULL && !ik->shared_loading_failed()) {\n+    if ((SystemDictionary::is_system_class_loader(class_loader()) && ik->is_shared_app_class())  ||\n+        (SystemDictionary::is_platform_class_loader(class_loader()) && ik->is_shared_platform_class())) {\n+      SharedClassLoadingMark slm(THREAD, ik);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -115,0 +115,17 @@\n+class SharedClassLoadingMark {\n+ private:\n+  Thread* THREAD;\n+  InstanceKlass* _klass;\n+ public:\n+  SharedClassLoadingMark(Thread* current, InstanceKlass* ik) : THREAD(current), _klass(ik) {}\n+  ~SharedClassLoadingMark() {\n+    assert(THREAD != NULL, \"Current thread is NULL\");\n+    assert(_klass != NULL, \"InstanceKlass is NULL\");\n+    if (HAS_PENDING_EXCEPTION) {\n+      if (_klass->is_shared()) {\n+        _klass->set_shared_loading_failed();\n+      }\n+    }\n+  }\n+};\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2499,0 +2499,1 @@\n+  assert(!shared_loading_failed(), \"Must not try to load failed class again\");\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -210,4 +210,3 @@\n-  int             _static_field_size;    \/\/ number words used by static fields (oop and non-oop) in this klass\n-\n-  int             _nonstatic_oop_map_size;\/\/ size in words of nonstatic oop map blocks\n-  int             _itable_len;           \/\/ length of Java itable (in words)\n+  int             _static_field_size;       \/\/ number words used by static fields (oop and non-oop) in this klass\n+  int             _nonstatic_oop_map_size;  \/\/ size in words of nonstatic oop map blocks\n+  int             _itable_len;              \/\/ length of Java itable (in words)\n@@ -218,4 +217,3 @@\n-  u2              _this_class_index;              \/\/ constant pool entry\n-\n-  u2              _static_oop_field_count;\/\/ number of static oop fields in this klass\n-  u2              _java_fields_count;    \/\/ The number of declared Java fields\n+  u2              _this_class_index;        \/\/ constant pool entry\n+  u2              _static_oop_field_count;  \/\/ number of static oop fields in this klass\n+  u2              _java_fields_count;       \/\/ The number of declared Java fields\n@@ -223,1 +221,1 @@\n-  volatile u2     _idnum_allocated_count;         \/\/ JNI\/JVMTI: increments with the addition of methods, old ids don't change\n+  volatile u2     _idnum_allocated_count;   \/\/ JNI\/JVMTI: increments with the addition of methods, old ids don't change\n@@ -227,1 +225,1 @@\n-  bool            _is_marked_dependent;  \/\/ used for marking during flushing and deoptimization\n+  bool            _is_marked_dependent;     \/\/ used for marking during flushing and deoptimization\n@@ -232,1 +230,1 @@\n-  u1              _init_state;                    \/\/ state of class\n+  u1              _init_state;              \/\/ state of class\n@@ -253,1 +251,1 @@\n-    _unused                                   = 1 << 8,  \/\/\n+    _misc_shared_loading_failed               = 1 << 8,  \/\/ class has been loaded from shared archive\n@@ -358,0 +356,12 @@\n+  bool shared_loading_failed() const {\n+    return (_misc_flags & _misc_shared_loading_failed) != 0;\n+  }\n+\n+  void set_shared_loading_failed() {\n+    _misc_flags |= _misc_shared_loading_failed;\n+  }\n+\n+  void clear_shared_loading_failed() {\n+    _misc_flags &= ~_misc_shared_loading_failed;\n+  }\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n-runtime\/cds\/appcds\/dynamicArchive\/TestDynamicDumpAtOom.java 8267954 linux-x64\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}