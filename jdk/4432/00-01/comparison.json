{"files":[{"patch":"@@ -40,1 +40,0 @@\n-import java.io.PrintWriter;\n@@ -48,0 +47,1 @@\n+import java.nio.charset.Charset;\n@@ -116,3 +116,1 @@\n-                    if(inputStream != null) {\n-                        reqbody = new String(inputStream.readAllBytes());\n-                    }\n+                    reqbody = new String(inputStream.readAllBytes(), Charset.forName(\"ISO8859_1\"));\n@@ -133,2 +131,2 @@\n-                try (PrintWriter pw = new PrintWriter(req.getResponseBody())) {\n-                    pw.print(reqbody);\n+                try (OutputStream os = req.getResponseBody()) {\n+                    os.write(reqbody.getBytes(Charset.forName(\"ISO8859_1\")));\n@@ -138,1 +136,1 @@\n-                reqbody = new String(req.getRequestBody().readAllBytes());\n+                reqbody = new String(req.getRequestBody().readAllBytes(), Charset.forName(\"ISO8859_1\"));\n@@ -150,2 +148,2 @@\n-                try (PrintWriter pw = new PrintWriter(req.getResponseBody())) {\n-                    pw.print(reqbody);\n+                try (OutputStream os = req.getResponseBody()) {\n+                    os.write(reqbody.getBytes(Charset.forName(\"ISO8859_1\")));\n@@ -161,1 +159,1 @@\n-                reqbody = new String(req.getRequestBody().readAllBytes());\n+                reqbody = new String(req.getRequestBody().readAllBytes(), Charset.forName(\"ISO8859_1\"));\n@@ -217,1 +215,1 @@\n-        os.write(str1.getBytes());\n+        os.write(str1.getBytes(Charset.forName(\"ISO8859_1\")));\n@@ -234,1 +232,1 @@\n-        os.write (str2.getBytes());\n+        os.write (str2.getBytes(Charset.forName(\"ISO8859_1\")));\n@@ -251,1 +249,1 @@\n-        os.write(str2.getBytes());\n+        os.write(str2.getBytes(Charset.forName(\"ISO8859_1\")));\n@@ -269,1 +267,1 @@\n-            os.write(str2.getBytes());\n+            os.write(str2.getBytes(Charset.forName(\"ISO8859_1\")));\n@@ -284,1 +282,1 @@\n-        os.write(str1.getBytes());\n+        os.write(str1.getBytes(Charset.forName(\"ISO8859_1\")));\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/ChunkedOutputStream.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-\n+            \n@@ -94,4 +94,0 @@\n-\n-            if (httpTrans.hasBadRequest) {\n-                throw new RuntimeException(\"Test failed : bad http request\");\n-            }\n@@ -191,0 +187,4 @@\n+        if(uc.getResponseCode() == 400) {\n+            uc.disconnect();\n+            throw new RuntimeException(\"Test failed : bad http request\");\n+        }\n@@ -202,1 +202,0 @@\n-    public boolean hasBadRequest = false;\n@@ -216,10 +215,1 @@\n-                \/\/ if the bug exsits, it'll send 2 GET commands\n-                \/\/ check 2nd GET here\n-                String duplicatedGet = trans.getRequestHeaders().getFirst(null);\n-                if (duplicatedGet != null &&\n-                    duplicatedGet.toUpperCase().indexOf(\"GET\") >= 0) {\n-                    trans.sendResponseHeaders(400, -1);\n-                    hasBadRequest = true;\n-                } else {\n-                    trans.sendResponseHeaders(200, -1);\n-                }\n+                trans.sendResponseHeaders(200, -1);\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/https\/HttpsURLConnection\/B6216082.java","additions":6,"deletions":16,"binary":false,"changes":22,"status":"modified"}]}