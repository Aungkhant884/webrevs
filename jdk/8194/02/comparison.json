{"files":[{"patch":"@@ -56,0 +56,1 @@\n+#include <locale.h>\n@@ -551,0 +552,27 @@\n+\/\/ Print all active locale categories, one line each\n+void os::Posix::print_active_locale(outputStream* st) {\n+  st->print_cr(\"Active Locale:\");\n+  \/\/ Posix is quiet about how exactly LC_ALL is implemented.\n+  \/\/ Just print it out too, in case LC_ALL is held separately\n+  \/\/ from the individual categories.\n+  #define LOCALE_CAT_DO(f) \\\n+    f(LC_ALL) \\\n+    f(LC_COLLATE) \\\n+    f(LC_CTYPE) \\\n+    f(LC_MESSAGES) \\\n+    f(LC_MONETARY) \\\n+    f(LC_NUMERIC) \\\n+    f(LC_TIME)\n+  #define XX(cat) { cat, #cat },\n+  const struct { int c; const char* name; } categories[] = {\n+      LOCALE_CAT_DO(XX)\n+      { -1, NULL }\n+  };\n+  #undef XX\n+  #undef LOCALE_CAT_DO\n+  for (int i = 0; categories[i].c != -1; i ++) {\n+    const char* locale = setlocale(categories[i].c, NULL);\n+    st->print_cr(\"%s=%s\", categories[i].name,\n+                 ((locale != NULL) ? locale : \"<unknown>\"));\n+  }\n+}\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,0 +107,2 @@\n+\n+  static void print_active_locale(outputStream* st);\n","filename":"src\/hotspot\/os\/posix\/os_posix.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1142,0 +1142,9 @@\n+#ifndef _WIN32\n+  STEP(\"printing locale settings\")\n+\n+     if (_verbose) {\n+       os::Posix::print_active_locale(st);\n+       st->cr();\n+     }\n+#endif\n+\n@@ -1323,0 +1332,6 @@\n+  \/\/ STEP(\"printing locale settings\")\n+#ifndef _WIN32\n+  os::Posix::print_active_locale(st);\n+  st->cr();\n+#endif\n+\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}