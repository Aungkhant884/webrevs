{"files":[{"patch":"@@ -24,0 +24,2 @@\n+\/compile_commands.json\n+\/.cache\n","filename":".gitignore","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,0 +137,2 @@\n+<li><a href=\"#building-for-risc-v\" id=\"toc-building-for-risc-v\">Building\n+for RISC-V<\/a><\/li>\n@@ -1379,4 +1381,4 @@\n-<code>qemu-deboostrap<\/code> to create the <em>target<\/em> system\n-chroot, which would have the native libraries and headers specific to\n-that <em>target<\/em> system. After that, we can use the cross-compiler\n-on the <em>build<\/em> system, pointing into chroot to get the build\n+<code>debootstrap<\/code> to create the <em>target<\/em> system chroot,\n+which would have the native libraries and headers specific to that\n+<em>target<\/em> system. After that, we can use the cross-compiler on the\n+<em>build<\/em> system, pointing into chroot to get the build\n@@ -1392,1 +1394,1 @@\n-<code>sudo qemu-debootstrap \\       --arch=arm64 \\       --verbose \\       --include=fakeroot,symlinks,build-essential,libx11-dev,libxext-dev,libxrender-dev,libxrandr-dev,libxtst-dev,libxt-dev,libcups2-dev,libfontconfig1-dev,libasound2-dev,libfreetype6-dev,libpng-dev,libffi-dev \\       --resolve-deps \\       buster \\       ~\/sysroot-arm64 \\       http:\/\/httpredir.debian.org\/debian\/<\/code><\/p><\/li>\n+<code>sudo debootstrap \\       --arch=arm64 \\       --verbose \\       --include=fakeroot,symlinks,build-essential,libx11-dev,libxext-dev,libxrender-dev,libxrandr-dev,libxtst-dev,libxt-dev,libcups2-dev,libfontconfig1-dev,libasound2-dev,libfreetype6-dev,libpng-dev,libffi-dev \\       --resolve-deps \\       buster \\       ~\/sysroot-arm64 \\       http:\/\/httpredir.debian.org\/debian\/     # If the target architecture is `riscv64`,     # the path should be `debian-ports` instead of `debian`.<\/code><\/p><\/li>\n@@ -1519,0 +1521,7 @@\n+<tr class=\"even\">\n+<td style=\"text-align: left;\">riscv64<\/td>\n+<td style=\"text-align: left;\">sid<\/td>\n+<td style=\"text-align: left;\">riscv64<\/td>\n+<td style=\"text-align: left;\">riscv64-linux-gnu<\/td>\n+<td>(all)<\/td>\n+<\/tr>\n@@ -1528,0 +1537,15 @@\n+<h3 id=\"building-for-risc-v\">Building for RISC-V<\/h3>\n+<p>The RISC-V community provides a basic <a\n+href=\"https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain\">GNU compiler\n+toolchain<\/a>, but the <a href=\"#External-Library-Requirements\">external\n+libraries<\/a> required by OpenJDK complicate the building process. The\n+placeholder <code>&lt;toolchain-installed-path&gt;<\/code> shown below is\n+the path where you want to install the toolchain.<\/p>\n+<ul>\n+<li><p>Install the RISC-V GNU compiler toolchain:\n+<code>git clone --recursive https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain     cd riscv-gnu-toolchain     .\/configure --prefix=&lt;toolchain-installed-path&gt;     make linux     export PATH=&lt;toolchain-installed-path&gt;\/bin:$PATH<\/code><\/p><\/li>\n+<li><p>Cross-compile all the required libraries:\n+<code># An example for libffi     git clone https:\/\/github.com\/libffi\/libffi     cd libffi     .\/configure --host=riscv64-unknown-linux-gnu --prefix=&lt;toolchain-installed-path&gt;\/sysroot\/usr     make     make install<\/code><\/p><\/li>\n+<li><p>Configure and build OpenJDK:\n+<code>bash configure \\       --with-boot-jdk=$BOOT_JDK \\       --openjdk-target=riscv64-linux-gnu \\       --with-sysroot=&lt;toolchain-installed-path&gt;\/sysroot \\       --with-toolchain-path=&lt;toolchain-installed-path&gt;\/bin \\       --with-extra-path=&lt;toolchain-installed-path&gt;\/bin     make images<\/code><\/p><\/li>\n+<\/ul>\n","filename":"doc\/building.html","additions":29,"deletions":5,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1150,1 +1150,1 @@\n-provided by your OS. On Debian\/Ubuntu systems, one could use `qemu-deboostrap` to\n+provided by your OS. On Debian\/Ubuntu systems, one could use `debootstrap` to\n@@ -1165,1 +1165,1 @@\n-    sudo qemu-debootstrap \\\n+    sudo debootstrap \\\n@@ -1173,0 +1173,2 @@\n+    # If the target architecture is `riscv64`,\n+    # the path should be `debian-ports` instead of `debian`.\n@@ -1220,0 +1222,1 @@\n+  riscv64       sid          riscv64       riscv64-linux-gnu        (all)\n@@ -1229,0 +1232,38 @@\n+### Building for RISC-V\n+\n+The RISC-V community provides a basic\n+[GNU compiler toolchain](https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain),\n+but the [external libraries](#External-Library-Requirements) required by OpenJDK\n+complicate the building process. The placeholder `<toolchain-installed-path>`\n+shown below is the path where you want to install the toolchain.\n+\n+  * Install the RISC-V GNU compiler toolchain:\n+    ```\n+    git clone --recursive https:\/\/github.com\/riscv-collab\/riscv-gnu-toolchain\n+    cd riscv-gnu-toolchain\n+    .\/configure --prefix=<toolchain-installed-path>\n+    make linux\n+    export PATH=<toolchain-installed-path>\/bin:$PATH\n+    ```\n+\n+  * Cross-compile all the required libraries:\n+    ```\n+    # An example for libffi\n+    git clone https:\/\/github.com\/libffi\/libffi\n+    cd libffi\n+    .\/configure --host=riscv64-unknown-linux-gnu --prefix=<toolchain-installed-path>\/sysroot\/usr\n+    make\n+    make install\n+    ```\n+\n+  * Configure and build OpenJDK:\n+    ```\n+    bash configure \\\n+      --with-boot-jdk=$BOOT_JDK \\\n+      --openjdk-target=riscv64-linux-gnu \\\n+      --with-sysroot=<toolchain-installed-path>\/sysroot \\\n+      --with-toolchain-path=<toolchain-installed-path>\/bin \\\n+      --with-extra-path=<toolchain-installed-path>\/bin\n+    make images\n+    ```\n+\n","filename":"doc\/building.md","additions":43,"deletions":2,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -1,24 +0,0 @@\n-main.dir=${basedir}\/..\/..\/..\/jfc\/SwingApplet\n-\n-src.dir=${main.dir}\/src\n-\n-build.dir=build\n-classes.dir=${build.dir}\/classes\n-jar=${main.dir}\/SwingApplet.jar\n-javadoc.dir=${build.dir}\/javadoc\n-\n-build.sysclasspath=ignore\n-# E.g.: cp=lib\/x.jar:lib\/y.jar\n-cp=\n-extra.run.cp=\n-\n-#main.class=\n-\n-run.cp=${cp}:${classes.dir}:${extra.run.cp}\n-\n-debug=true\n-deprecation=false\n-\n-nbjdk.home=${basedir}\/..\/..\/..\/..\n-\n-applet.html=${main.dir}\/SwingApplet.html\n","filename":"src\/demo\/share\/nbproject\/jfc\/SwingApplet\/build.properties","additions":0,"deletions":24,"binary":false,"changes":24,"status":"deleted"},{"patch":"@@ -1,100 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"SwingApplet\" basedir=\".\" default=\"jar\">\n-\n-    <import file=\"nbproject\/jdk.xml\"\/>\n-    \n-    <target name=\"-prop-init\">\n-        <property file=\"user.build.properties\"\/>\n-        <property file=\"build.properties\"\/>\n-    <\/target>\n-\n-    <target name=\"-init\" depends=\"-prop-init,-jdk-init\"\/>\n-\n-    <target name=\"compile\" depends=\"-init\" description=\"Compile main sources.\">\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-        <copy todir=\"${classes.dir}\">\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/copy>\n-    <\/target>\n-\n-    <target name=\"jar\" depends=\"compile\" description=\"Build JAR file for main sources.\">\n-        <jar jarfile=\"${jar}\" compress=\"true\">\n-            <manifest>\n-                <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-            <\/manifest>\n-            <fileset dir=\"${classes.dir}\"\/>\n-        <\/jar>\n-    <\/target>\n-\n-    <target name=\"run\" depends=\"compile\" description=\"Run application.\">\n-        <fail unless=\"main.class\">Must set property 'main.class' (e.g. in build.properties)<\/fail>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/java>\n-    <\/target>\n-\n-    <target name=\"run-applet\" depends=\"jar\" description=\"Run applet.\">\n-        <exec executable=\"${nbjdk.appletviewer}\">\n-            <arg file=\"${applet.html}\"\/>\n-        <\/exec>\n-        <!-- To view in regular web browser instead:\n-        <nbbrowse file=\"${applet.html}\"\/>\n-        -->\n-    <\/target>\n-    \n-    <target name=\"javadoc\" depends=\"-init\" description=\"Build Javadoc.\">\n-        <mkdir dir=\"${javadoc.dir}\"\/>\n-        <javadoc destdir=\"${javadoc.dir}\">\n-            <classpath path=\"${cp}\"\/>\n-            <sourcepath>\n-                <pathelement location=\"${src.dir}\"\/>\n-            <\/sourcepath>\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/javadoc>\n-    <\/target>\n-\n-    <target name=\"clean\" depends=\"-init\" description=\"Clean build products.\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete file=\"${jar}\"\/>\n-    <\/target>\n-\n-    <target name=\"profile\">\n-        <ant antfile=\"nbproject\/netbeans-targets.xml\" target=\"profile\"\/>\n-    <\/target>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/jfc\/SwingApplet\/build.xml","additions":0,"deletions":100,"binary":false,"changes":100,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"SwingApplet\/file\">\n-    \n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"compile-selected\" depends=\"-init\">\n-        <fail unless=\"includes\">Must set property 'includes'<\/fail>\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\" includes=\"${includes}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/jfc\/SwingApplet\/nbproject\/file-targets.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,98 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"jdk\" basedir=\".\">\n-\n-    <target name=\"-jdk-preinit\">\n-        <condition property=\".exe\" value=\".exe\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <property name=\".exe\" value=\"\"\/>\n-        <property name=\"nbjdk.javac\" value=\"${nbjdk.home}\/bin\/javac${.exe}\"\/>\n-        <property name=\"nbjdk.java\" value=\"${nbjdk.home}\/bin\/java${.exe}\"\/>\n-        <property name=\"nbjdk.javadoc\" value=\"${nbjdk.home}\/bin\/javadoc${.exe}\"\/>\n-        <property name=\"nbjdk.appletviewer\" value=\"${nbjdk.home}\/bin\/appletviewer${.exe}\"\/>\n-        <property name=\"nbjdk.bootclasspath\" value=\"${nbjdk.home}\/jre\/lib\/rt.jar\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-basic\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.basic.done\">\n-        <macrodef name=\"javac-presetdef\">\n-            <attribute name=\"javacval\"\/>\n-            <sequential>\n-                <presetdef name=\"javac\">\n-                    <javac fork=\"yes\" executable=\"@{javacval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javac-presetdef javacval=\"${nbjdk.javac}\"\/>\n-        <macrodef name=\"java-presetdef\">\n-            <attribute name=\"javaval\"\/>\n-            <sequential>\n-                <presetdef name=\"java\">\n-                    <java fork=\"yes\" jvm=\"@{javaval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <java-presetdef javaval=\"${nbjdk.java}\"\/>\n-        <macrodef name=\"javadoc-presetdef\">\n-            <attribute name=\"javadocval\"\/>\n-            <sequential>\n-                <presetdef name=\"javadoc\">\n-                    <javadoc executable=\"@{javadocval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javadoc-presetdef javadocval=\"${nbjdk.javadoc}\"\/>\n-        <property name=\"nbjdk.presetdef.basic.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-nbjpdastart\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.nbjpdastart.done\">\n-        <macrodef name=\"nbjpdastart-presetdef\">\n-            <attribute name=\"bootcpval\"\/>\n-            <sequential>\n-                <presetdef name=\"nbjpdastart\">\n-                    <nbjpdastart>\n-                        <bootclasspath>\n-                            <path path=\"@{bootcpval}\"\/>\n-                        <\/bootclasspath>\n-                    <\/nbjpdastart>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <nbjpdastart-presetdef bootcpval=\"${nbjdk.bootclasspath}\"\/>\n-        <property name=\"nbjdk.presetdef.nbjpdastart.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-init\" depends=\"-jdk-preinit,-jdk-presetdef-basic\"\/>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/jfc\/SwingApplet\/nbproject\/jdk.xml","additions":0,"deletions":98,"binary":false,"changes":98,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"SwingApplet\/NB\">\n-\n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"debug\" depends=\"compile,-jdk-presetdef-nbjpdastart\">\n-        <nbjpdastart addressproperty=\"jpda.address\" name=\"SwingApplet\" transport=\"dt_socket\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbjpdastart>\n-        <java classname=\"${main.class}\" failonerror=\"true\" fork=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"-Xdebug\"\/>\n-            <jvmarg value=\"-Xnoagent\"\/>\n-            <jvmarg value=\"-Djava.compiler=none\"\/>\n-            <jvmarg value=\"-Xrunjdwp:transport=dt_socket,address=${jpda.address}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-    <target name=\"debug-fix\" depends=\"-init\">\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"true\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-            <include name=\"${class}.java\"\/>\n-        <\/javac>\n-        <nbjpdareload>\n-            <fileset dir=\"${classes.dir}\">\n-                <include name=\"${class}.class\"\/>\n-            <\/fileset>\n-        <\/nbjpdareload>\n-    <\/target>\n-    \n-    <target name=\"show-javadoc\" depends=\"javadoc\">\n-        <nbbrowse file=\"${javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    \n-    <target name=\"profile\" depends=\"compile\">\n-        <nbprofiledirect>\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbprofiledirect>\n-        <property environment=\"env\"\/>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\" dir=\"${profiler.session.working.dir}\" jvm=\"${profiler.info.jvm}\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <env key=\"LD_LIBRARY_PATH\" path=\"${profiler.info.agentpath}:${env.LD_LIBRARY_PATH}\"\/>\n-            <env key=\"Path\" path=\"${profiler.info.agentpath}:${env.Path}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/jfc\/SwingApplet\/nbproject\/netbeans-targets.xml","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,180 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.ant.freeform<\/type>\n-    <configuration>\n-        <general-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project\/1\">\n-            <name>SwingApplet<\/name>\n-            <properties>\n-                <property-file>user.build.properties<\/property-file>\n-                <property-file>build.properties<\/property-file>\n-                <property name=\"nbjdk.bootclasspath\">${nbjdk.home}\/jre\/lib\/rt.jar<\/property>\n-            <\/properties>\n-            <folders>\n-                <source-folder>\n-                    <label>JDK Demo<\/label>\n-                    <location>${main.dir}<\/location>\n-                <\/source-folder>\n-                <source-folder>\n-                    <label>Sources<\/label>\n-                    <type>java<\/type>\n-                    <location>${src.dir}<\/location>\n-                <\/source-folder>\n-                <build-folder>\n-                    <location>${build.dir}<\/location>\n-                <\/build-folder>\n-            <\/folders>\n-            <ide-actions>\n-                <action name=\"build\">\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"clean\">\n-                    <target>clean<\/target>\n-                <\/action>\n-                <action name=\"rebuild\">\n-                    <target>clean<\/target>\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"run\">\n-                    <target>run<\/target>\n-                <\/action>\n-                <action name=\"javadoc\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>show-javadoc<\/target>\n-                <\/action>\n-                <action name=\"debug\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                <\/action>\n-                <action name=\"compile.single\">\n-                    <script>nbproject\/file-targets.xml<\/script>\n-                    <target>compile-selected<\/target>\n-                    <context>\n-                        <property>includes<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path<\/format>\n-                        <arity>\n-                            <separated-files>,<\/separated-files>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"run.single\">\n-                    <target>run<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.single\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.fix\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug-fix<\/target>\n-                    <context>\n-                        <property>class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path-noext<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-            <\/ide-actions>\n-            <export>\n-                <type>jar<\/type>\n-                <location>${jar}<\/location>\n-                <build-target>jar<\/build-target>\n-                <clean-target>clean<\/clean-target>\n-            <\/export>\n-            <view>\n-                <items>\n-                    <source-folder style=\"packages\">\n-                        <label>Sources<\/label>\n-                        <location>${src.dir}<\/location>\n-                    <\/source-folder>\n-                    <source-file>\n-                        <location>${applet.html}<\/location>\n-                    <\/source-file>\n-                    <source-file>\n-                        <location>${main.dir}\/README.txt<\/location>\n-                    <\/source-file>\n-                <\/items>\n-                <context-menu>\n-                    <ide-action name=\"build\"\/>\n-                    <ide-action name=\"rebuild\"\/>\n-                    <ide-action name=\"clean\"\/>\n-                    <ide-action name=\"javadoc\"\/>\n-                    <separator\/>\n-                    <ide-action name=\"run\"\/>\n-                    <action>\n-                        <label>Run Project as Applet<\/label>\n-                        <target>run-applet<\/target>\n-                    <\/action>\n-                    <ide-action name=\"debug\"\/>\n-                <\/context-menu>\n-            <\/view>\n-            <subprojects\/>\n-        <\/general-data>\n-        <java-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project-java\/2\">\n-            <compilation-unit>\n-                <package-root>${src.dir}<\/package-root>\n-                <classpath mode=\"compile\">${cp}<\/classpath>\n-                <classpath mode=\"execute\">${run.cp}<\/classpath>\n-                <classpath mode=\"boot\">${nbjdk.bootclasspath}<\/classpath>\n-                <built-to>${classes.dir}<\/built-to>\n-                <built-to>${jar}<\/built-to>\n-                <javadoc-built-to>${javadoc.dir}<\/javadoc-built-to>\n-                <source-level>1.5<\/source-level>\n-            <\/compilation-unit>\n-        <\/java-data>\n-    <\/configuration>\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/jfc\/SwingApplet\/nbproject\/project.xml","additions":0,"deletions":180,"binary":false,"changes":180,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-main.dir=${basedir}\/..\/..\/..\/management\/FullThreadDump\n-\n-src.dir=${main.dir}\/src\n-\n-build.dir=build\n-classes.dir=${build.dir}\/classes\n-jar=${main.dir}\/FullThreadDump.jar\n-javadoc.dir=${build.dir}\/javadoc\n-\n-build.sysclasspath=ignore\n-# E.g.: cp=lib\/x.jar:lib\/y.jar\n-cp=\n-extra.run.cp=\n-\n-main.class=FullThreadDump\n-\n-run.cp=${cp}:${classes.dir}:${extra.run.cp}\n-\n-debug=true\n-deprecation=false\n-\n-nbjdk.home=${basedir}\/..\/..\/..\/..\n","filename":"src\/demo\/share\/nbproject\/management\/FullThreadDump\/build.properties","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,91 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"FullThreadDump\" basedir=\".\" default=\"jar\">\n-\n-    <import file=\"nbproject\/jdk.xml\"\/>\n-    \n-    <target name=\"-prop-init\">\n-        <property file=\"user.build.properties\"\/>\n-        <property file=\"build.properties\"\/>\n-    <\/target>\n-\n-    <target name=\"-init\" depends=\"-prop-init,-jdk-init\"\/>\n-\n-    <target name=\"compile\" depends=\"-init\" description=\"Compile main sources.\">\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-        <copy todir=\"${classes.dir}\">\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/copy>\n-    <\/target>\n-\n-    <target name=\"jar\" depends=\"compile\" description=\"Build JAR file for main sources.\">\n-        <jar jarfile=\"${jar}\" compress=\"true\">\n-            <manifest>\n-                <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-            <\/manifest>\n-            <fileset dir=\"${classes.dir}\"\/>\n-        <\/jar>\n-    <\/target>\n-\n-    <target name=\"run\" depends=\"compile\" description=\"Run application.\">\n-        <fail unless=\"main.class\">Must set property 'main.class' (e.g. in build.properties)<\/fail>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/java>\n-    <\/target>\n-\n-    <target name=\"javadoc\" depends=\"-init\" description=\"Build Javadoc.\">\n-        <mkdir dir=\"${javadoc.dir}\"\/>\n-        <javadoc destdir=\"${javadoc.dir}\">\n-            <classpath path=\"${cp}\"\/>\n-            <sourcepath>\n-                <pathelement location=\"${src.dir}\"\/>\n-            <\/sourcepath>\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/javadoc>\n-    <\/target>\n-\n-    <target name=\"clean\" depends=\"-init\" description=\"Clean build products.\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete file=\"${jar}\"\/>\n-    <\/target>\n-\n-    <target name=\"profile\">\n-        <ant antfile=\"nbproject\/netbeans-targets.xml\" target=\"profile\"\/>\n-    <\/target>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/FullThreadDump\/build.xml","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"FullThreadDump\/file\">\n-    \n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"compile-selected\" depends=\"-init\">\n-        <fail unless=\"includes\">Must set property 'includes'<\/fail>\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\" includes=\"${includes}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/FullThreadDump\/nbproject\/file-targets.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,98 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"jdk\" basedir=\".\">\n-\n-    <target name=\"-jdk-preinit\">\n-        <condition property=\".exe\" value=\".exe\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <property name=\".exe\" value=\"\"\/>\n-        <property name=\"nbjdk.javac\" value=\"${nbjdk.home}\/bin\/javac${.exe}\"\/>\n-        <property name=\"nbjdk.java\" value=\"${nbjdk.home}\/bin\/java${.exe}\"\/>\n-        <property name=\"nbjdk.javadoc\" value=\"${nbjdk.home}\/bin\/javadoc${.exe}\"\/>\n-        <property name=\"nbjdk.appletviewer\" value=\"${nbjdk.home}\/bin\/appletviewer${.exe}\"\/>\n-        <property name=\"nbjdk.bootclasspath\" value=\"${nbjdk.home}\/jre\/lib\/rt.jar\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-basic\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.basic.done\">\n-        <macrodef name=\"javac-presetdef\">\n-            <attribute name=\"javacval\"\/>\n-            <sequential>\n-                <presetdef name=\"javac\">\n-                    <javac fork=\"yes\" executable=\"@{javacval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javac-presetdef javacval=\"${nbjdk.javac}\"\/>\n-        <macrodef name=\"java-presetdef\">\n-            <attribute name=\"javaval\"\/>\n-            <sequential>\n-                <presetdef name=\"java\">\n-                    <java fork=\"yes\" jvm=\"@{javaval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <java-presetdef javaval=\"${nbjdk.java}\"\/>\n-        <macrodef name=\"javadoc-presetdef\">\n-            <attribute name=\"javadocval\"\/>\n-            <sequential>\n-                <presetdef name=\"javadoc\">\n-                    <javadoc executable=\"@{javadocval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javadoc-presetdef javadocval=\"${nbjdk.javadoc}\"\/>\n-        <property name=\"nbjdk.presetdef.basic.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-nbjpdastart\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.nbjpdastart.done\">\n-        <macrodef name=\"nbjpdastart-presetdef\">\n-            <attribute name=\"bootcpval\"\/>\n-            <sequential>\n-                <presetdef name=\"nbjpdastart\">\n-                    <nbjpdastart>\n-                        <bootclasspath>\n-                            <path path=\"@{bootcpval}\"\/>\n-                        <\/bootclasspath>\n-                    <\/nbjpdastart>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <nbjpdastart-presetdef bootcpval=\"${nbjdk.bootclasspath}\"\/>\n-        <property name=\"nbjdk.presetdef.nbjpdastart.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-init\" depends=\"-jdk-preinit,-jdk-presetdef-basic\"\/>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/FullThreadDump\/nbproject\/jdk.xml","additions":0,"deletions":98,"binary":false,"changes":98,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"FullThreadDump\/NB\">\n-\n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"debug\" depends=\"compile,-jdk-presetdef-nbjpdastart\">\n-        <nbjpdastart addressproperty=\"jpda.address\" name=\"FullThreadDump\" transport=\"dt_socket\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbjpdastart>\n-        <java classname=\"${main.class}\" failonerror=\"true\" fork=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"-Xdebug\"\/>\n-            <jvmarg value=\"-Xnoagent\"\/>\n-            <jvmarg value=\"-Djava.compiler=none\"\/>\n-            <jvmarg value=\"-Xrunjdwp:transport=dt_socket,address=${jpda.address}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-    <target name=\"debug-fix\" depends=\"-init\">\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"true\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-            <include name=\"${class}.java\"\/>\n-        <\/javac>\n-        <nbjpdareload>\n-            <fileset dir=\"${classes.dir}\">\n-                <include name=\"${class}.class\"\/>\n-            <\/fileset>\n-        <\/nbjpdareload>\n-    <\/target>\n-    \n-    <target name=\"show-javadoc\" depends=\"javadoc\">\n-        <nbbrowse file=\"${javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    \n-    <target name=\"profile\" depends=\"compile\">\n-        <nbprofiledirect>\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbprofiledirect>\n-        <property environment=\"env\"\/>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\" dir=\"${profiler.session.working.dir}\" jvm=\"${profiler.info.jvm}\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <env key=\"LD_LIBRARY_PATH\" path=\"${profiler.info.agentpath}:${env.LD_LIBRARY_PATH}\"\/>\n-            <env key=\"Path\" path=\"${profiler.info.agentpath}:${env.Path}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/FullThreadDump\/nbproject\/netbeans-targets.xml","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,173 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.ant.freeform<\/type>\n-    <configuration>\n-        <general-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project\/1\">\n-            <name>FullThreadDump<\/name>\n-            <properties>\n-                <property-file>user.build.properties<\/property-file>\n-                <property-file>build.properties<\/property-file>\n-                <property name=\"nbjdk.bootclasspath\">${nbjdk.home}\/jre\/lib\/rt.jar<\/property>\n-            <\/properties>\n-            <folders>\n-                <source-folder>\n-                    <label>JDK Demo<\/label>\n-                    <location>${main.dir}<\/location>\n-                <\/source-folder>\n-                <source-folder>\n-                    <label>Sources<\/label>\n-                    <type>java<\/type>\n-                    <location>${src.dir}<\/location>\n-                <\/source-folder>\n-                <build-folder>\n-                    <location>${build.dir}<\/location>\n-                <\/build-folder>\n-            <\/folders>\n-            <ide-actions>\n-                <action name=\"build\">\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"clean\">\n-                    <target>clean<\/target>\n-                <\/action>\n-                <action name=\"rebuild\">\n-                    <target>clean<\/target>\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"run\">\n-                    <target>run<\/target>\n-                <\/action>\n-                <action name=\"javadoc\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>show-javadoc<\/target>\n-                <\/action>\n-                <action name=\"debug\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                <\/action>\n-                <action name=\"compile.single\">\n-                    <script>nbproject\/file-targets.xml<\/script>\n-                    <target>compile-selected<\/target>\n-                    <context>\n-                        <property>includes<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path<\/format>\n-                        <arity>\n-                            <separated-files>,<\/separated-files>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"run.single\">\n-                    <target>run<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.single\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.fix\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug-fix<\/target>\n-                    <context>\n-                        <property>class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path-noext<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-            <\/ide-actions>\n-            <export>\n-                <type>jar<\/type>\n-                <location>${jar}<\/location>\n-                <build-target>jar<\/build-target>\n-                <clean-target>clean<\/clean-target>\n-            <\/export>\n-            <view>\n-                <items>\n-                    <source-folder style=\"packages\">\n-                        <label>Sources<\/label>\n-                        <location>${src.dir}<\/location>\n-                    <\/source-folder>\n-                    <source-file>\n-                        <location>${main.dir}\/README.txt<\/location>\n-                    <\/source-file>\n-                <\/items>\n-                <context-menu>\n-                    <ide-action name=\"build\"\/>\n-                    <ide-action name=\"rebuild\"\/>\n-                    <ide-action name=\"clean\"\/>\n-                    <ide-action name=\"javadoc\"\/>\n-                    <separator\/>\n-                    <ide-action name=\"run\"\/>\n-                    <ide-action name=\"debug\"\/>\n-                <\/context-menu>\n-            <\/view>\n-            <subprojects\/>\n-        <\/general-data>\n-        <java-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project-java\/2\">\n-            <compilation-unit>\n-                <package-root>${src.dir}<\/package-root>\n-                <classpath mode=\"compile\">${cp}<\/classpath>\n-                <classpath mode=\"execute\">${run.cp}<\/classpath>\n-                <classpath mode=\"boot\">${nbjdk.bootclasspath}<\/classpath>\n-                <built-to>${classes.dir}<\/built-to>\n-                <built-to>${jar}<\/built-to>\n-                <javadoc-built-to>${javadoc.dir}<\/javadoc-built-to>\n-                <source-level>1.5<\/source-level>\n-            <\/compilation-unit>\n-        <\/java-data>\n-    <\/configuration>\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/FullThreadDump\/nbproject\/project.xml","additions":0,"deletions":173,"binary":false,"changes":173,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-main.dir=${basedir}\/..\/..\/..\/management\/JTop\n-\n-src.dir=${main.dir}\/src\n-\n-build.dir=build\n-classes.dir=${build.dir}\/classes\n-jar=${main.dir}\/JTop.jar\n-javadoc.dir=${build.dir}\/javadoc\n-\n-build.sysclasspath=ignore\n-\n-nbjdk.home=${basedir}\/..\/..\/..\/..\n-# E.g.: cp=lib\/x.jar:lib\/y.jar\n-cp=${nbjdk.home}\/lib\/jconsole.jar\n-extra.run.cp=\n-\n-main.class=JTop\n-\n-run.cp=${cp}:${classes.dir}:${extra.run.cp}\n-\n-debug=true\n-deprecation=false\n","filename":"src\/demo\/share\/nbproject\/management\/JTop\/build.properties","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,91 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"JTop\" basedir=\".\" default=\"jar\">\n-\n-    <import file=\"nbproject\/jdk.xml\"\/>\n-    \n-    <target name=\"-prop-init\">\n-        <property file=\"user.build.properties\"\/>\n-        <property file=\"build.properties\"\/>\n-    <\/target>\n-\n-    <target name=\"-init\" depends=\"-prop-init,-jdk-init\"\/>\n-\n-    <target name=\"compile\" depends=\"-init\" description=\"Compile main sources.\">\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-        <copy todir=\"${classes.dir}\">\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/copy>\n-    <\/target>\n-\n-    <target name=\"jar\" depends=\"compile\" description=\"Build JAR file for main sources.\">\n-        <jar jarfile=\"${jar}\" compress=\"true\">\n-            <manifest>\n-                <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-            <\/manifest>\n-            <fileset dir=\"${classes.dir}\"\/>\n-        <\/jar>\n-    <\/target>\n-\n-    <target name=\"run\" depends=\"compile\" description=\"Run application.\">\n-        <fail unless=\"main.class\">Must set property 'main.class' (e.g. in build.properties)<\/fail>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/java>\n-    <\/target>\n-\n-    <target name=\"javadoc\" depends=\"-init\" description=\"Build Javadoc.\">\n-        <mkdir dir=\"${javadoc.dir}\"\/>\n-        <javadoc destdir=\"${javadoc.dir}\">\n-            <classpath path=\"${cp}\"\/>\n-            <sourcepath>\n-                <pathelement location=\"${src.dir}\"\/>\n-            <\/sourcepath>\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/javadoc>\n-    <\/target>\n-\n-    <target name=\"clean\" depends=\"-init\" description=\"Clean build products.\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete file=\"${jar}\"\/>\n-    <\/target>\n-\n-    <target name=\"profile\">\n-        <ant antfile=\"nbproject\/netbeans-targets.xml\" target=\"profile\"\/>\n-    <\/target>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/JTop\/build.xml","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"JTop\/file\">\n-    \n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"compile-selected\" depends=\"-init\">\n-        <fail unless=\"includes\">Must set property 'includes'<\/fail>\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\" includes=\"${includes}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/JTop\/nbproject\/file-targets.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,98 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"jdk\" basedir=\".\">\n-\n-    <target name=\"-jdk-preinit\">\n-        <condition property=\".exe\" value=\".exe\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <property name=\".exe\" value=\"\"\/>\n-        <property name=\"nbjdk.javac\" value=\"${nbjdk.home}\/bin\/javac${.exe}\"\/>\n-        <property name=\"nbjdk.java\" value=\"${nbjdk.home}\/bin\/java${.exe}\"\/>\n-        <property name=\"nbjdk.javadoc\" value=\"${nbjdk.home}\/bin\/javadoc${.exe}\"\/>\n-        <property name=\"nbjdk.appletviewer\" value=\"${nbjdk.home}\/bin\/appletviewer${.exe}\"\/>\n-        <property name=\"nbjdk.bootclasspath\" value=\"${nbjdk.home}\/jre\/lib\/rt.jar\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-basic\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.basic.done\">\n-        <macrodef name=\"javac-presetdef\">\n-            <attribute name=\"javacval\"\/>\n-            <sequential>\n-                <presetdef name=\"javac\">\n-                    <javac fork=\"yes\" executable=\"@{javacval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javac-presetdef javacval=\"${nbjdk.javac}\"\/>\n-        <macrodef name=\"java-presetdef\">\n-            <attribute name=\"javaval\"\/>\n-            <sequential>\n-                <presetdef name=\"java\">\n-                    <java fork=\"yes\" jvm=\"@{javaval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <java-presetdef javaval=\"${nbjdk.java}\"\/>\n-        <macrodef name=\"javadoc-presetdef\">\n-            <attribute name=\"javadocval\"\/>\n-            <sequential>\n-                <presetdef name=\"javadoc\">\n-                    <javadoc executable=\"@{javadocval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javadoc-presetdef javadocval=\"${nbjdk.javadoc}\"\/>\n-        <property name=\"nbjdk.presetdef.basic.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-nbjpdastart\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.nbjpdastart.done\">\n-        <macrodef name=\"nbjpdastart-presetdef\">\n-            <attribute name=\"bootcpval\"\/>\n-            <sequential>\n-                <presetdef name=\"nbjpdastart\">\n-                    <nbjpdastart>\n-                        <bootclasspath>\n-                            <path path=\"@{bootcpval}\"\/>\n-                        <\/bootclasspath>\n-                    <\/nbjpdastart>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <nbjpdastart-presetdef bootcpval=\"${nbjdk.bootclasspath}\"\/>\n-        <property name=\"nbjdk.presetdef.nbjpdastart.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-init\" depends=\"-jdk-preinit,-jdk-presetdef-basic\"\/>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/JTop\/nbproject\/jdk.xml","additions":0,"deletions":98,"binary":false,"changes":98,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"JTop\/NB\">\n-\n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"debug\" depends=\"compile,-jdk-presetdef-nbjpdastart\">\n-        <nbjpdastart addressproperty=\"jpda.address\" name=\"JTop\" transport=\"dt_socket\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbjpdastart>\n-        <java classname=\"${main.class}\" failonerror=\"true\" fork=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"-Xdebug\"\/>\n-            <jvmarg value=\"-Xnoagent\"\/>\n-            <jvmarg value=\"-Djava.compiler=none\"\/>\n-            <jvmarg value=\"-Xrunjdwp:transport=dt_socket,address=${jpda.address}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-    <target name=\"debug-fix\" depends=\"-init\">\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"true\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-            <include name=\"${class}.java\"\/>\n-        <\/javac>\n-        <nbjpdareload>\n-            <fileset dir=\"${classes.dir}\">\n-                <include name=\"${class}.class\"\/>\n-            <\/fileset>\n-        <\/nbjpdareload>\n-    <\/target>\n-    \n-    <target name=\"show-javadoc\" depends=\"javadoc\">\n-        <nbbrowse file=\"${javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    \n-    <target name=\"profile\" depends=\"compile\">\n-        <nbprofiledirect>\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbprofiledirect>\n-        <property environment=\"env\"\/>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\" dir=\"${profiler.session.working.dir}\" jvm=\"${profiler.info.jvm}\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <env key=\"LD_LIBRARY_PATH\" path=\"${profiler.info.agentpath}:${env.LD_LIBRARY_PATH}\"\/>\n-            <env key=\"Path\" path=\"${profiler.info.agentpath}:${env.Path}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/JTop\/nbproject\/netbeans-targets.xml","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,173 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.ant.freeform<\/type>\n-    <configuration>\n-        <general-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project\/1\">\n-            <name>JTop<\/name>\n-            <properties>\n-                <property-file>user.build.properties<\/property-file>\n-                <property-file>build.properties<\/property-file>\n-                <property name=\"nbjdk.bootclasspath\">${nbjdk.home}\/jre\/lib\/rt.jar<\/property>\n-            <\/properties>\n-            <folders>\n-                <source-folder>\n-                    <label>JDK Demo<\/label>\n-                    <location>${main.dir}<\/location>\n-                <\/source-folder>\n-                <source-folder>\n-                    <label>Sources<\/label>\n-                    <type>java<\/type>\n-                    <location>${src.dir}<\/location>\n-                <\/source-folder>\n-                <build-folder>\n-                    <location>${build.dir}<\/location>\n-                <\/build-folder>\n-            <\/folders>\n-            <ide-actions>\n-                <action name=\"build\">\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"clean\">\n-                    <target>clean<\/target>\n-                <\/action>\n-                <action name=\"rebuild\">\n-                    <target>clean<\/target>\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"run\">\n-                    <target>run<\/target>\n-                <\/action>\n-                <action name=\"javadoc\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>show-javadoc<\/target>\n-                <\/action>\n-                <action name=\"debug\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                <\/action>\n-                <action name=\"compile.single\">\n-                    <script>nbproject\/file-targets.xml<\/script>\n-                    <target>compile-selected<\/target>\n-                    <context>\n-                        <property>includes<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path<\/format>\n-                        <arity>\n-                            <separated-files>,<\/separated-files>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"run.single\">\n-                    <target>run<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.single\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.fix\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug-fix<\/target>\n-                    <context>\n-                        <property>class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path-noext<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-            <\/ide-actions>\n-            <export>\n-                <type>jar<\/type>\n-                <location>${jar}<\/location>\n-                <build-target>jar<\/build-target>\n-                <clean-target>clean<\/clean-target>\n-            <\/export>\n-            <view>\n-                <items>\n-                    <source-folder style=\"packages\">\n-                        <label>Sources<\/label>\n-                        <location>${src.dir}<\/location>\n-                    <\/source-folder>\n-                    <source-file>\n-                        <location>${main.dir}\/README.txt<\/location>\n-                    <\/source-file>\n-                <\/items>\n-                <context-menu>\n-                    <ide-action name=\"build\"\/>\n-                    <ide-action name=\"rebuild\"\/>\n-                    <ide-action name=\"clean\"\/>\n-                    <ide-action name=\"javadoc\"\/>\n-                    <separator\/>\n-                    <ide-action name=\"run\"\/>\n-                    <ide-action name=\"debug\"\/>\n-                <\/context-menu>\n-            <\/view>\n-            <subprojects\/>\n-        <\/general-data>\n-        <java-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project-java\/2\">\n-            <compilation-unit>\n-                <package-root>${src.dir}<\/package-root>\n-                <classpath mode=\"compile\">${cp}<\/classpath>\n-                <classpath mode=\"execute\">${run.cp}<\/classpath>\n-                <classpath mode=\"boot\">${nbjdk.bootclasspath}<\/classpath>\n-                <built-to>${classes.dir}<\/built-to>\n-                <built-to>${jar}<\/built-to>\n-                <javadoc-built-to>${javadoc.dir}<\/javadoc-built-to>\n-                <source-level>1.5<\/source-level>\n-            <\/compilation-unit>\n-        <\/java-data>\n-    <\/configuration>\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/JTop\/nbproject\/project.xml","additions":0,"deletions":173,"binary":false,"changes":173,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-main.dir=${basedir}\/..\/..\/..\/management\/MemoryMonitor\n-\n-src.dir=${main.dir}\/src\n-\n-build.dir=build\n-classes.dir=${build.dir}\/classes\n-jar=${main.dir}\/MemoryMonitor.jar\n-javadoc.dir=${build.dir}\/javadoc\n-\n-build.sysclasspath=ignore\n-# E.g.: cp=lib\/x.jar:lib\/y.jar\n-cp=\n-extra.run.cp=\n-\n-main.class=MemoryMonitor\n-\n-run.cp=${cp}:${classes.dir}:${extra.run.cp}\n-\n-debug=true\n-deprecation=false\n-\n-nbjdk.home=${basedir}\/..\/..\/..\/..\n","filename":"src\/demo\/share\/nbproject\/management\/MemoryMonitor\/build.properties","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,91 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"MemoryMonitor\" basedir=\".\" default=\"jar\">\n-\n-    <import file=\"nbproject\/jdk.xml\"\/>\n-    \n-    <target name=\"-prop-init\">\n-        <property file=\"user.build.properties\"\/>\n-        <property file=\"build.properties\"\/>\n-    <\/target>\n-\n-    <target name=\"-init\" depends=\"-prop-init,-jdk-init\"\/>\n-\n-    <target name=\"compile\" depends=\"-init\" description=\"Compile main sources.\">\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-        <copy todir=\"${classes.dir}\">\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/copy>\n-    <\/target>\n-\n-    <target name=\"jar\" depends=\"compile\" description=\"Build JAR file for main sources.\">\n-        <jar jarfile=\"${jar}\" compress=\"true\">\n-            <manifest>\n-                <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-            <\/manifest>\n-            <fileset dir=\"${classes.dir}\"\/>\n-        <\/jar>\n-    <\/target>\n-\n-    <target name=\"run\" depends=\"compile\" description=\"Run application.\">\n-        <fail unless=\"main.class\">Must set property 'main.class' (e.g. in build.properties)<\/fail>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/java>\n-    <\/target>\n-\n-    <target name=\"javadoc\" depends=\"-init\" description=\"Build Javadoc.\">\n-        <mkdir dir=\"${javadoc.dir}\"\/>\n-        <javadoc destdir=\"${javadoc.dir}\">\n-            <classpath path=\"${cp}\"\/>\n-            <sourcepath>\n-                <pathelement location=\"${src.dir}\"\/>\n-            <\/sourcepath>\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/javadoc>\n-    <\/target>\n-\n-    <target name=\"clean\" depends=\"-init\" description=\"Clean build products.\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete file=\"${jar}\"\/>\n-    <\/target>\n-\n-    <target name=\"profile\">\n-        <ant antfile=\"nbproject\/netbeans-targets.xml\" target=\"profile\"\/>\n-    <\/target>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/MemoryMonitor\/build.xml","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"MemoryMonitor\/file\">\n-    \n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"compile-selected\" depends=\"-init\">\n-        <fail unless=\"includes\">Must set property 'includes'<\/fail>\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\" includes=\"${includes}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/MemoryMonitor\/nbproject\/file-targets.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,98 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"jdk\" basedir=\".\">\n-\n-    <target name=\"-jdk-preinit\">\n-        <condition property=\".exe\" value=\".exe\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <property name=\".exe\" value=\"\"\/>\n-        <property name=\"nbjdk.javac\" value=\"${nbjdk.home}\/bin\/javac${.exe}\"\/>\n-        <property name=\"nbjdk.java\" value=\"${nbjdk.home}\/bin\/java${.exe}\"\/>\n-        <property name=\"nbjdk.javadoc\" value=\"${nbjdk.home}\/bin\/javadoc${.exe}\"\/>\n-        <property name=\"nbjdk.appletviewer\" value=\"${nbjdk.home}\/bin\/appletviewer${.exe}\"\/>\n-        <property name=\"nbjdk.bootclasspath\" value=\"${nbjdk.home}\/jre\/lib\/rt.jar\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-basic\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.basic.done\">\n-        <macrodef name=\"javac-presetdef\">\n-            <attribute name=\"javacval\"\/>\n-            <sequential>\n-                <presetdef name=\"javac\">\n-                    <javac fork=\"yes\" executable=\"@{javacval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javac-presetdef javacval=\"${nbjdk.javac}\"\/>\n-        <macrodef name=\"java-presetdef\">\n-            <attribute name=\"javaval\"\/>\n-            <sequential>\n-                <presetdef name=\"java\">\n-                    <java fork=\"yes\" jvm=\"@{javaval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <java-presetdef javaval=\"${nbjdk.java}\"\/>\n-        <macrodef name=\"javadoc-presetdef\">\n-            <attribute name=\"javadocval\"\/>\n-            <sequential>\n-                <presetdef name=\"javadoc\">\n-                    <javadoc executable=\"@{javadocval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javadoc-presetdef javadocval=\"${nbjdk.javadoc}\"\/>\n-        <property name=\"nbjdk.presetdef.basic.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-nbjpdastart\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.nbjpdastart.done\">\n-        <macrodef name=\"nbjpdastart-presetdef\">\n-            <attribute name=\"bootcpval\"\/>\n-            <sequential>\n-                <presetdef name=\"nbjpdastart\">\n-                    <nbjpdastart>\n-                        <bootclasspath>\n-                            <path path=\"@{bootcpval}\"\/>\n-                        <\/bootclasspath>\n-                    <\/nbjpdastart>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <nbjpdastart-presetdef bootcpval=\"${nbjdk.bootclasspath}\"\/>\n-        <property name=\"nbjdk.presetdef.nbjpdastart.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-init\" depends=\"-jdk-preinit,-jdk-presetdef-basic\"\/>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/MemoryMonitor\/nbproject\/jdk.xml","additions":0,"deletions":98,"binary":false,"changes":98,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"MemoryMonitor\/NB\">\n-\n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"debug\" depends=\"compile,-jdk-presetdef-nbjpdastart\">\n-        <nbjpdastart addressproperty=\"jpda.address\" name=\"MemoryMonitor\" transport=\"dt_socket\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbjpdastart>\n-        <java classname=\"${main.class}\" failonerror=\"true\" fork=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"-Xdebug\"\/>\n-            <jvmarg value=\"-Xnoagent\"\/>\n-            <jvmarg value=\"-Djava.compiler=none\"\/>\n-            <jvmarg value=\"-Xrunjdwp:transport=dt_socket,address=${jpda.address}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-    <target name=\"debug-fix\" depends=\"-init\">\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"true\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-            <include name=\"${class}.java\"\/>\n-        <\/javac>\n-        <nbjpdareload>\n-            <fileset dir=\"${classes.dir}\">\n-                <include name=\"${class}.class\"\/>\n-            <\/fileset>\n-        <\/nbjpdareload>\n-    <\/target>\n-    \n-    <target name=\"show-javadoc\" depends=\"javadoc\">\n-        <nbbrowse file=\"${javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    \n-    <target name=\"profile\" depends=\"compile\">\n-        <nbprofiledirect>\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbprofiledirect>\n-        <property environment=\"env\"\/>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\" dir=\"${profiler.session.working.dir}\" jvm=\"${profiler.info.jvm}\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <env key=\"LD_LIBRARY_PATH\" path=\"${profiler.info.agentpath}:${env.LD_LIBRARY_PATH}\"\/>\n-            <env key=\"Path\" path=\"${profiler.info.agentpath}:${env.Path}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/MemoryMonitor\/nbproject\/netbeans-targets.xml","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,173 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.ant.freeform<\/type>\n-    <configuration>\n-        <general-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project\/1\">\n-            <name>MemoryMonitor<\/name>\n-            <properties>\n-                <property-file>user.build.properties<\/property-file>\n-                <property-file>build.properties<\/property-file>\n-                <property name=\"nbjdk.bootclasspath\">${nbjdk.home}\/jre\/lib\/rt.jar<\/property>\n-            <\/properties>\n-            <folders>\n-                <source-folder>\n-                    <label>JDK Demo<\/label>\n-                    <location>${main.dir}<\/location>\n-                <\/source-folder>\n-                <source-folder>\n-                    <label>Sources<\/label>\n-                    <type>java<\/type>\n-                    <location>${src.dir}<\/location>\n-                <\/source-folder>\n-                <build-folder>\n-                    <location>${build.dir}<\/location>\n-                <\/build-folder>\n-            <\/folders>\n-            <ide-actions>\n-                <action name=\"build\">\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"clean\">\n-                    <target>clean<\/target>\n-                <\/action>\n-                <action name=\"rebuild\">\n-                    <target>clean<\/target>\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"run\">\n-                    <target>run<\/target>\n-                <\/action>\n-                <action name=\"javadoc\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>show-javadoc<\/target>\n-                <\/action>\n-                <action name=\"debug\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                <\/action>\n-                <action name=\"compile.single\">\n-                    <script>nbproject\/file-targets.xml<\/script>\n-                    <target>compile-selected<\/target>\n-                    <context>\n-                        <property>includes<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path<\/format>\n-                        <arity>\n-                            <separated-files>,<\/separated-files>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"run.single\">\n-                    <target>run<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.single\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.fix\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug-fix<\/target>\n-                    <context>\n-                        <property>class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path-noext<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-            <\/ide-actions>\n-            <export>\n-                <type>jar<\/type>\n-                <location>${jar}<\/location>\n-                <build-target>jar<\/build-target>\n-                <clean-target>clean<\/clean-target>\n-            <\/export>\n-            <view>\n-                <items>\n-                    <source-folder style=\"packages\">\n-                        <label>Sources<\/label>\n-                        <location>${src.dir}<\/location>\n-                    <\/source-folder>\n-                    <source-file>\n-                        <location>${main.dir}\/README.txt<\/location>\n-                    <\/source-file>\n-                <\/items>\n-                <context-menu>\n-                    <ide-action name=\"build\"\/>\n-                    <ide-action name=\"rebuild\"\/>\n-                    <ide-action name=\"clean\"\/>\n-                    <ide-action name=\"javadoc\"\/>\n-                    <separator\/>\n-                    <ide-action name=\"run\"\/>\n-                    <ide-action name=\"debug\"\/>\n-                <\/context-menu>\n-            <\/view>\n-            <subprojects\/>\n-        <\/general-data>\n-        <java-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project-java\/2\">\n-            <compilation-unit>\n-                <package-root>${src.dir}<\/package-root>\n-                <classpath mode=\"compile\">${cp}<\/classpath>\n-                <classpath mode=\"execute\">${run.cp}<\/classpath>\n-                <classpath mode=\"boot\">${nbjdk.bootclasspath}<\/classpath>\n-                <built-to>${classes.dir}<\/built-to>\n-                <built-to>${jar}<\/built-to>\n-                <javadoc-built-to>${javadoc.dir}<\/javadoc-built-to>\n-                <source-level>1.5<\/source-level>\n-            <\/compilation-unit>\n-        <\/java-data>\n-    <\/configuration>\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/MemoryMonitor\/nbproject\/project.xml","additions":0,"deletions":173,"binary":false,"changes":173,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-main.dir=${basedir}\/..\/..\/..\/management\/VerboseGC\n-\n-src.dir=${main.dir}\/src\n-\n-build.dir=build\n-classes.dir=${build.dir}\/classes\n-jar=${main.dir}\/VerboseGC.jar\n-javadoc.dir=${build.dir}\/javadoc\n-\n-build.sysclasspath=ignore\n-# E.g.: cp=lib\/x.jar:lib\/y.jar\n-cp=\n-extra.run.cp=\n-\n-main.class=VerboseGC\n-\n-run.cp=${cp}:${classes.dir}:${extra.run.cp}\n-\n-debug=true\n-deprecation=false\n-\n-nbjdk.home=${basedir}\/..\/..\/..\/..\n","filename":"src\/demo\/share\/nbproject\/management\/VerboseGC\/build.properties","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,91 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"VerboseGC\" basedir=\".\" default=\"jar\">\n-\n-    <import file=\"nbproject\/jdk.xml\"\/>\n-    \n-    <target name=\"-prop-init\">\n-        <property file=\"user.build.properties\"\/>\n-        <property file=\"build.properties\"\/>\n-    <\/target>\n-\n-    <target name=\"-init\" depends=\"-prop-init,-jdk-init\"\/>\n-\n-    <target name=\"compile\" depends=\"-init\" description=\"Compile main sources.\">\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-        <copy todir=\"${classes.dir}\">\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/copy>\n-    <\/target>\n-\n-    <target name=\"jar\" depends=\"compile\" description=\"Build JAR file for main sources.\">\n-        <jar jarfile=\"${jar}\" compress=\"true\">\n-            <manifest>\n-                <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-            <\/manifest>\n-            <fileset dir=\"${classes.dir}\"\/>\n-        <\/jar>\n-    <\/target>\n-\n-    <target name=\"run\" depends=\"compile\" description=\"Run application.\">\n-        <fail unless=\"main.class\">Must set property 'main.class' (e.g. in build.properties)<\/fail>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/java>\n-    <\/target>\n-\n-    <target name=\"javadoc\" depends=\"-init\" description=\"Build Javadoc.\">\n-        <mkdir dir=\"${javadoc.dir}\"\/>\n-        <javadoc destdir=\"${javadoc.dir}\">\n-            <classpath path=\"${cp}\"\/>\n-            <sourcepath>\n-                <pathelement location=\"${src.dir}\"\/>\n-            <\/sourcepath>\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/javadoc>\n-    <\/target>\n-\n-    <target name=\"clean\" depends=\"-init\" description=\"Clean build products.\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete file=\"${jar}\"\/>\n-    <\/target>\n-\n-    <target name=\"profile\">\n-        <ant antfile=\"nbproject\/netbeans-targets.xml\" target=\"profile\"\/>\n-    <\/target>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/VerboseGC\/build.xml","additions":0,"deletions":91,"binary":false,"changes":91,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"VerboseGC\/file\">\n-    \n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"compile-selected\" depends=\"-init\">\n-        <fail unless=\"includes\">Must set property 'includes'<\/fail>\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\" includes=\"${includes}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/VerboseGC\/nbproject\/file-targets.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,98 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"jdk\" basedir=\".\">\n-\n-    <target name=\"-jdk-preinit\">\n-        <condition property=\".exe\" value=\".exe\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <property name=\".exe\" value=\"\"\/>\n-        <property name=\"nbjdk.javac\" value=\"${nbjdk.home}\/bin\/javac${.exe}\"\/>\n-        <property name=\"nbjdk.java\" value=\"${nbjdk.home}\/bin\/java${.exe}\"\/>\n-        <property name=\"nbjdk.javadoc\" value=\"${nbjdk.home}\/bin\/javadoc${.exe}\"\/>\n-        <property name=\"nbjdk.appletviewer\" value=\"${nbjdk.home}\/bin\/appletviewer${.exe}\"\/>\n-        <property name=\"nbjdk.bootclasspath\" value=\"${nbjdk.home}\/jre\/lib\/rt.jar\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-basic\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.basic.done\">\n-        <macrodef name=\"javac-presetdef\">\n-            <attribute name=\"javacval\"\/>\n-            <sequential>\n-                <presetdef name=\"javac\">\n-                    <javac fork=\"yes\" executable=\"@{javacval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javac-presetdef javacval=\"${nbjdk.javac}\"\/>\n-        <macrodef name=\"java-presetdef\">\n-            <attribute name=\"javaval\"\/>\n-            <sequential>\n-                <presetdef name=\"java\">\n-                    <java fork=\"yes\" jvm=\"@{javaval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <java-presetdef javaval=\"${nbjdk.java}\"\/>\n-        <macrodef name=\"javadoc-presetdef\">\n-            <attribute name=\"javadocval\"\/>\n-            <sequential>\n-                <presetdef name=\"javadoc\">\n-                    <javadoc executable=\"@{javadocval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javadoc-presetdef javadocval=\"${nbjdk.javadoc}\"\/>\n-        <property name=\"nbjdk.presetdef.basic.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-nbjpdastart\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.nbjpdastart.done\">\n-        <macrodef name=\"nbjpdastart-presetdef\">\n-            <attribute name=\"bootcpval\"\/>\n-            <sequential>\n-                <presetdef name=\"nbjpdastart\">\n-                    <nbjpdastart>\n-                        <bootclasspath>\n-                            <path path=\"@{bootcpval}\"\/>\n-                        <\/bootclasspath>\n-                    <\/nbjpdastart>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <nbjpdastart-presetdef bootcpval=\"${nbjdk.bootclasspath}\"\/>\n-        <property name=\"nbjdk.presetdef.nbjpdastart.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-init\" depends=\"-jdk-preinit,-jdk-presetdef-basic\"\/>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/VerboseGC\/nbproject\/jdk.xml","additions":0,"deletions":98,"binary":false,"changes":98,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"VerboseGC\/NB\">\n-\n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"debug\" depends=\"compile,-jdk-presetdef-nbjpdastart\">\n-        <nbjpdastart addressproperty=\"jpda.address\" name=\"VerboseGC\" transport=\"dt_socket\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbjpdastart>\n-        <java classname=\"${main.class}\" failonerror=\"true\" fork=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"-Xdebug\"\/>\n-            <jvmarg value=\"-Xnoagent\"\/>\n-            <jvmarg value=\"-Djava.compiler=none\"\/>\n-            <jvmarg value=\"-Xrunjdwp:transport=dt_socket,address=${jpda.address}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-    <target name=\"debug-fix\" depends=\"-init\">\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"true\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-            <include name=\"${class}.java\"\/>\n-        <\/javac>\n-        <nbjpdareload>\n-            <fileset dir=\"${classes.dir}\">\n-                <include name=\"${class}.class\"\/>\n-            <\/fileset>\n-        <\/nbjpdareload>\n-    <\/target>\n-    \n-    <target name=\"show-javadoc\" depends=\"javadoc\">\n-        <nbbrowse file=\"${javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    \n-    <target name=\"profile\" depends=\"compile\">\n-        <nbprofiledirect>\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbprofiledirect>\n-        <property environment=\"env\"\/>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\" dir=\"${profiler.session.working.dir}\" jvm=\"${profiler.info.jvm}\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <env key=\"LD_LIBRARY_PATH\" path=\"${profiler.info.agentpath}:${env.LD_LIBRARY_PATH}\"\/>\n-            <env key=\"Path\" path=\"${profiler.info.agentpath}:${env.Path}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/VerboseGC\/nbproject\/netbeans-targets.xml","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,173 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.ant.freeform<\/type>\n-    <configuration>\n-        <general-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project\/1\">\n-            <name>VerboseGC<\/name>\n-            <properties>\n-                <property-file>user.build.properties<\/property-file>\n-                <property-file>build.properties<\/property-file>\n-                <property name=\"nbjdk.bootclasspath\">${nbjdk.home}\/jre\/lib\/rt.jar<\/property>\n-            <\/properties>\n-            <folders>\n-                <source-folder>\n-                    <label>JDK Demo<\/label>\n-                    <location>${main.dir}<\/location>\n-                <\/source-folder>\n-                <source-folder>\n-                    <label>Sources<\/label>\n-                    <type>java<\/type>\n-                    <location>${src.dir}<\/location>\n-                <\/source-folder>\n-                <build-folder>\n-                    <location>${build.dir}<\/location>\n-                <\/build-folder>\n-            <\/folders>\n-            <ide-actions>\n-                <action name=\"build\">\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"clean\">\n-                    <target>clean<\/target>\n-                <\/action>\n-                <action name=\"rebuild\">\n-                    <target>clean<\/target>\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"run\">\n-                    <target>run<\/target>\n-                <\/action>\n-                <action name=\"javadoc\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>show-javadoc<\/target>\n-                <\/action>\n-                <action name=\"debug\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                <\/action>\n-                <action name=\"compile.single\">\n-                    <script>nbproject\/file-targets.xml<\/script>\n-                    <target>compile-selected<\/target>\n-                    <context>\n-                        <property>includes<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path<\/format>\n-                        <arity>\n-                            <separated-files>,<\/separated-files>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"run.single\">\n-                    <target>run<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.single\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug<\/target>\n-                    <context>\n-                        <property>main.class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>java-name<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.fix\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug-fix<\/target>\n-                    <context>\n-                        <property>class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path-noext<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-            <\/ide-actions>\n-            <export>\n-                <type>jar<\/type>\n-                <location>${jar}<\/location>\n-                <build-target>jar<\/build-target>\n-                <clean-target>clean<\/clean-target>\n-            <\/export>\n-            <view>\n-                <items>\n-                    <source-folder style=\"packages\">\n-                        <label>Sources<\/label>\n-                        <location>${src.dir}<\/location>\n-                    <\/source-folder>\n-                    <source-file>\n-                        <location>${main.dir}\/README.txt<\/location>\n-                    <\/source-file>\n-                <\/items>\n-                <context-menu>\n-                    <ide-action name=\"build\"\/>\n-                    <ide-action name=\"rebuild\"\/>\n-                    <ide-action name=\"clean\"\/>\n-                    <ide-action name=\"javadoc\"\/>\n-                    <separator\/>\n-                    <ide-action name=\"run\"\/>\n-                    <ide-action name=\"debug\"\/>\n-                <\/context-menu>\n-            <\/view>\n-            <subprojects\/>\n-        <\/general-data>\n-        <java-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project-java\/2\">\n-            <compilation-unit>\n-                <package-root>${src.dir}<\/package-root>\n-                <classpath mode=\"compile\">${cp}<\/classpath>\n-                <classpath mode=\"execute\">${run.cp}<\/classpath>\n-                <classpath mode=\"boot\">${nbjdk.bootclasspath}<\/classpath>\n-                <built-to>${classes.dir}<\/built-to>\n-                <built-to>${jar}<\/built-to>\n-                <javadoc-built-to>${javadoc.dir}<\/javadoc-built-to>\n-                <source-level>1.5<\/source-level>\n-            <\/compilation-unit>\n-        <\/java-data>\n-    <\/configuration>\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/management\/VerboseGC\/nbproject\/project.xml","additions":0,"deletions":173,"binary":false,"changes":173,"status":"deleted"},{"patch":"@@ -1,23 +0,0 @@\n-main.dir=${basedir}\/..\/..\/..\/scripting\/jconsole-plugin\n-\n-src.dir=${main.dir}\/src\n-\n-build.dir=build\n-classes.dir=${build.dir}\/classes\n-jar=${main.dir}\/jconsole-plugin.jar\n-javadoc.dir=${build.dir}\/javadoc\n-\n-build.sysclasspath=ignore\n-\n-nbjdk.home=${basedir}\/..\/..\/..\/..\n-\n-# E.g.: cp=lib\/x.jar:lib\/y.jar\n-cp=${nbjdk.home}\/lib\/jconsole.jar\n-extra.run.cp=\n-\n-main.class=jconsole-plugin\n-\n-run.cp=${cp}:${classes.dir}:${extra.run.cp}\n-\n-debug=true\n-deprecation=false\n","filename":"src\/demo\/share\/nbproject\/scripting\/jconsole-plugin\/build.properties","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,98 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"jconsole-plugin\" basedir=\".\" default=\"jar\">\n-\n-    <import file=\"nbproject\/jdk.xml\"\/>\n-    \n-    <target name=\"-prop-init\">\n-        <property file=\"user.build.properties\"\/>\n-        <property file=\"build.properties\"\/>\n-    <\/target>\n-\n-    <target name=\"-init\" depends=\"-prop-init,-jdk-init\"\/>\n-\n-    <target name=\"compile\" depends=\"-init\" description=\"Compile main sources.\">\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-        <copy todir=\"${classes.dir}\">\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/copy>\n-    <\/target>\n-\n-    <target name=\"jar\" depends=\"compile\" description=\"Build JAR file for main sources.\">\n-        <jar jarfile=\"${jar}\" compress=\"true\">\n-            <manifest>\n-                <attribute name=\"Main-Class\" value=\"${main.class}\"\/>\n-            <\/manifest>\n-            <fileset dir=\"${classes.dir}\"\/>\n-        <\/jar>\n-    <\/target>\n-\n-    <target name=\"run\" depends=\"compile\" description=\"Run application.\">\n-        <fail unless=\"main.class\">Must set property 'main.class' (e.g. in build.properties)<\/fail>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/java>\n-    <\/target>\n-\n-    <target name=\"run-jconsole\" depends=\"jar\" description=\"Run JConsole.\">\n-        <exec executable=\"${nbjdk.jconsole}\">\n-            <arg value=\"-pluginpath\"\/>\n-            <arg file=\"${jar}\"\/>\n-        <\/exec>\n-    <\/target>\n-    \n-    <target name=\"javadoc\" depends=\"-init\" description=\"Build Javadoc.\">\n-        <mkdir dir=\"${javadoc.dir}\"\/>\n-        <javadoc destdir=\"${javadoc.dir}\">\n-            <classpath path=\"${cp}\"\/>\n-            <sourcepath>\n-                <pathelement location=\"${src.dir}\"\/>\n-            <\/sourcepath>\n-            <fileset dir=\"${src.dir}\"\/>\n-        <\/javadoc>\n-    <\/target>\n-\n-    <target name=\"clean\" depends=\"-init\" description=\"Clean build products.\">\n-        <delete dir=\"${build.dir}\"\/>\n-        <delete file=\"${jar}\"\/>\n-    <\/target>\n-\n-    <target name=\"profile\">\n-        <ant antfile=\"nbproject\/netbeans-targets.xml\" target=\"profile\"\/>\n-    <\/target>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/scripting\/jconsole-plugin\/build.xml","additions":0,"deletions":98,"binary":false,"changes":98,"status":"deleted"},{"patch":"@@ -1,46 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"jconsole-plugin\/file\">\n-    \n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"compile-selected\" depends=\"-init\">\n-        <fail unless=\"includes\">Must set property 'includes'<\/fail>\n-        <mkdir dir=\"${classes.dir}\"\/>\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"${debug}\" deprecation=\"${deprecation}\" includes=\"${includes}\">\n-            <classpath path=\"${cp}\"\/>\n-        <\/javac>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/scripting\/jconsole-plugin\/nbproject\/file-targets.xml","additions":0,"deletions":46,"binary":false,"changes":46,"status":"deleted"},{"patch":"@@ -1,99 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project name=\"jdk\" basedir=\".\">\n-\n-    <target name=\"-jdk-preinit\">\n-        <condition property=\".exe\" value=\".exe\">\n-            <os family=\"windows\"\/>\n-        <\/condition>\n-        <property name=\".exe\" value=\"\"\/>\n-        <property name=\"nbjdk.javac\" value=\"${nbjdk.home}\/bin\/javac${.exe}\"\/>\n-        <property name=\"nbjdk.java\" value=\"${nbjdk.home}\/bin\/java${.exe}\"\/>\n-        <property name=\"nbjdk.javadoc\" value=\"${nbjdk.home}\/bin\/javadoc${.exe}\"\/>\n-        <property name=\"nbjdk.appletviewer\" value=\"${nbjdk.home}\/bin\/appletviewer${.exe}\"\/>\n-        <property name=\"nbjdk.jconsole\" value=\"${nbjdk.home}\/bin\/jconsole${.exe}\"\/>\n-        <property name=\"nbjdk.bootclasspath\" value=\"${nbjdk.home}\/jre\/lib\/rt.jar\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-basic\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.basic.done\">\n-        <macrodef name=\"javac-presetdef\">\n-            <attribute name=\"javacval\"\/>\n-            <sequential>\n-                <presetdef name=\"javac\">\n-                    <javac fork=\"yes\" executable=\"@{javacval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javac-presetdef javacval=\"${nbjdk.javac}\"\/>\n-        <macrodef name=\"java-presetdef\">\n-            <attribute name=\"javaval\"\/>\n-            <sequential>\n-                <presetdef name=\"java\">\n-                    <java fork=\"yes\" jvm=\"@{javaval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <java-presetdef javaval=\"${nbjdk.java}\"\/>\n-        <macrodef name=\"javadoc-presetdef\">\n-            <attribute name=\"javadocval\"\/>\n-            <sequential>\n-                <presetdef name=\"javadoc\">\n-                    <javadoc executable=\"@{javadocval}\"\/>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <javadoc-presetdef javadocval=\"${nbjdk.javadoc}\"\/>\n-        <property name=\"nbjdk.presetdef.basic.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-presetdef-nbjpdastart\" depends=\"-jdk-preinit\" unless=\"nbjdk.presetdef.nbjpdastart.done\">\n-        <macrodef name=\"nbjpdastart-presetdef\">\n-            <attribute name=\"bootcpval\"\/>\n-            <sequential>\n-                <presetdef name=\"nbjpdastart\">\n-                    <nbjpdastart>\n-                        <bootclasspath>\n-                            <path path=\"@{bootcpval}\"\/>\n-                        <\/bootclasspath>\n-                    <\/nbjpdastart>\n-                <\/presetdef>\n-            <\/sequential>\n-        <\/macrodef>\n-        <nbjpdastart-presetdef bootcpval=\"${nbjdk.bootclasspath}\"\/>\n-        <property name=\"nbjdk.presetdef.nbjpdastart.done\" value=\"true\"\/>\n-    <\/target>\n-\n-    <target name=\"-jdk-init\" depends=\"-jdk-preinit,-jdk-presetdef-basic\"\/>\n-\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/scripting\/jconsole-plugin\/nbproject\/jdk.xml","additions":0,"deletions":99,"binary":false,"changes":99,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project basedir=\"..\" name=\"jconsole-plugin\/NB\">\n-\n-    <import file=\"..\/build.xml\"\/>\n-    \n-    <target name=\"debug\" depends=\"compile,-jdk-presetdef-nbjpdastart\">\n-        <nbjpdastart addressproperty=\"jpda.address\" name=\"jconsole-plugin\" transport=\"dt_socket\">\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbjpdastart>\n-        <java classname=\"${main.class}\" failonerror=\"true\" fork=\"true\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"-Xdebug\"\/>\n-            <jvmarg value=\"-Xnoagent\"\/>\n-            <jvmarg value=\"-Djava.compiler=none\"\/>\n-            <jvmarg value=\"-Xrunjdwp:transport=dt_socket,address=${jpda.address}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-    <target name=\"debug-fix\" depends=\"-init\">\n-        <javac srcdir=\"${src.dir}\" destdir=\"${classes.dir}\" debug=\"true\" deprecation=\"${deprecation}\">\n-            <classpath path=\"${cp}\"\/>\n-            <include name=\"${class}.java\"\/>\n-        <\/javac>\n-        <nbjpdareload>\n-            <fileset dir=\"${classes.dir}\">\n-                <include name=\"${class}.class\"\/>\n-            <\/fileset>\n-        <\/nbjpdareload>\n-    <\/target>\n-    \n-    <target name=\"show-javadoc\" depends=\"javadoc\">\n-        <nbbrowse file=\"${javadoc.dir}\/index.html\"\/>\n-    <\/target>\n-    \n-    <target name=\"profile\" depends=\"compile\">\n-        <nbprofiledirect>\n-            <classpath path=\"${run.cp}\"\/>\n-        <\/nbprofiledirect>\n-        <property environment=\"env\"\/>\n-        <java classname=\"${main.class}\" fork=\"true\" failonerror=\"true\" dir=\"${profiler.session.working.dir}\" jvm=\"${profiler.info.jvm}\">\n-            <classpath path=\"${run.cp}\"\/>\n-            <jvmarg value=\"${profiler.info.jvmargs.agent}\"\/>\n-            <jvmarg line=\"${profiler.info.jvmargs}\"\/>\n-            <env key=\"LD_LIBRARY_PATH\" path=\"${profiler.info.agentpath}:${env.LD_LIBRARY_PATH}\"\/>\n-            <env key=\"Path\" path=\"${profiler.info.agentpath}:${env.Path}\"\/>\n-        <\/java>\n-    <\/target>\n-    \n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/scripting\/jconsole-plugin\/nbproject\/netbeans-targets.xml","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,143 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<!--\n- Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project xmlns=\"http:\/\/www.netbeans.org\/ns\/project\/1\">\n-    <type>org.netbeans.modules.ant.freeform<\/type>\n-    <configuration>\n-        <general-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project\/1\">\n-            <name>jconsole-plugin<\/name>\n-            <properties>\n-                <property-file>user.build.properties<\/property-file>\n-                <property-file>build.properties<\/property-file>\n-                <property name=\"nbjdk.bootclasspath\">${nbjdk.home}\/jre\/lib\/rt.jar<\/property>\n-            <\/properties>\n-            <folders>\n-                <source-folder>\n-                    <label>JDK Demo<\/label>\n-                    <location>${main.dir}<\/location>\n-                <\/source-folder>\n-                <source-folder>\n-                    <label>Sources<\/label>\n-                    <type>java<\/type>\n-                    <location>${src.dir}<\/location>\n-                <\/source-folder>\n-                <build-folder>\n-                    <location>${build.dir}<\/location>\n-                <\/build-folder>\n-            <\/folders>\n-            <ide-actions>\n-                <action name=\"build\">\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"clean\">\n-                    <target>clean<\/target>\n-                <\/action>\n-                <action name=\"rebuild\">\n-                    <target>clean<\/target>\n-                    <target>jar<\/target>\n-                <\/action>\n-                <action name=\"javadoc\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>show-javadoc<\/target>\n-                <\/action>\n-                <action name=\"compile.single\">\n-                    <script>nbproject\/file-targets.xml<\/script>\n-                    <target>compile-selected<\/target>\n-                    <context>\n-                        <property>includes<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path<\/format>\n-                        <arity>\n-                            <separated-files>,<\/separated-files>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-                <action name=\"debug.fix\">\n-                    <script>nbproject\/netbeans-targets.xml<\/script>\n-                    <target>debug-fix<\/target>\n-                    <context>\n-                        <property>class<\/property>\n-                        <folder>${src.dir}<\/folder>\n-                        <pattern>\\.java$<\/pattern>\n-                        <format>relative-path-noext<\/format>\n-                        <arity>\n-                            <one-file-only\/>\n-                        <\/arity>\n-                    <\/context>\n-                <\/action>\n-            <\/ide-actions>\n-            <export>\n-                <type>jar<\/type>\n-                <location>${jar}<\/location>\n-                <build-target>jar<\/build-target>\n-                <clean-target>clean<\/clean-target>\n-            <\/export>\n-            <view>\n-                <items>\n-                    <source-folder style=\"packages\">\n-                        <label>Sources<\/label>\n-                        <location>${src.dir}<\/location>\n-                    <\/source-folder>\n-                    <source-file>\n-                        <location>${main.dir}\/README.txt<\/location>\n-                    <\/source-file>\n-                <\/items>\n-                <context-menu>\n-                    <ide-action name=\"build\"\/>\n-                    <ide-action name=\"rebuild\"\/>\n-                    <ide-action name=\"clean\"\/>\n-                    <ide-action name=\"javadoc\"\/>\n-                    <separator\/>\n-                    <action>\n-                        <label>Run JConsole<\/label>\n-                        <target>run-jconsole<\/target>\n-                    <\/action>\n-                <\/context-menu>\n-            <\/view>\n-            <subprojects\/>\n-        <\/general-data>\n-        <java-data xmlns=\"http:\/\/www.netbeans.org\/ns\/freeform-project-java\/2\">\n-            <compilation-unit>\n-                <package-root>${src.dir}<\/package-root>\n-                <classpath mode=\"compile\">${cp}<\/classpath>\n-                <classpath mode=\"execute\">${run.cp}<\/classpath>\n-                <classpath mode=\"boot\">${nbjdk.bootclasspath}<\/classpath>\n-                <built-to>${classes.dir}<\/built-to>\n-                <built-to>${jar}<\/built-to>\n-                <javadoc-built-to>${javadoc.dir}<\/javadoc-built-to>\n-                <source-level>1.5<\/source-level>\n-            <\/compilation-unit>\n-        <\/java-data>\n-    <\/configuration>\n-<\/project>\n","filename":"src\/demo\/share\/nbproject\/scripting\/jconsole-plugin\/nbproject\/project.xml","additions":0,"deletions":143,"binary":false,"changes":143,"status":"deleted"},{"patch":"@@ -151,1 +151,1 @@\n-  cas_for_lock_release(Rmark, Rbox, Roop, Rscratch, done, allow_fallthrough_on_failure, one_shot);\n+  cas_for_lock_release(Rbox, Rmark, Roop, Rscratch, done, allow_fallthrough_on_failure, one_shot);\n","filename":"src\/hotspot\/cpu\/arm\/c2_MacroAssembler_arm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1636,1 +1636,1 @@\n-    __ andi(t0, tmp, TypeEntries::type_unknown);\n+    __ test_bit(t0, tmp, exact_log2(TypeEntries::type_unknown));\n@@ -1658,1 +1658,1 @@\n-    __ andi(t0, tmp, TypeEntries::type_unknown);\n+    __ test_bit(t0, tmp, exact_log2(TypeEntries::type_unknown));\n@@ -1713,1 +1713,1 @@\n-    __ andi(t0, tmp, TypeEntries::type_unknown);\n+    __ test_bit(t0, tmp, exact_log2(TypeEntries::type_unknown));\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    andi(t0, hdr, JVM_ACC_IS_VALUE_BASED_CLASS);\n+    test_bit(t0, hdr, exact_log2(JVM_ACC_IS_VALUE_BASED_CLASS));\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -806,1 +806,1 @@\n-        __ andi(t0, t, JVM_ACC_HAS_FINALIZER);\n+        __ test_bit(t0, t, exact_log2(JVM_ACC_HAS_FINALIZER));\n","filename":"src\/hotspot\/cpu\/riscv\/c1_Runtime1_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1162,1 +1162,1 @@\n-  andi(t0, cnt1, 4);\n+  test_bit(t0, cnt1, 2);\n@@ -1174,1 +1174,1 @@\n-  andi(t0, cnt1, 2);\n+  test_bit(t0, cnt1, 1);\n@@ -1187,1 +1187,1 @@\n-    andi(t0, cnt1, 1);\n+    test_bit(t0, cnt1, 0);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-        __ andi(t0, t0, ShenandoahHeap::HAS_FORWARDED);\n+        __ test_bit(t0, t0, ShenandoahHeap::HAS_FORWARDED_BITPOS);\n@@ -250,1 +250,1 @@\n-    __ andi(t1, t1, ShenandoahHeap::HAS_FORWARDED);\n+    __ test_bit(t1, t1, ShenandoahHeap::HAS_FORWARDED_BITPOS);\n@@ -254,1 +254,1 @@\n-    __ andi(t0, t1, ShenandoahHeap::WEAK_ROOTS);\n+    __ test_bit(t0, t1, ShenandoahHeap::WEAK_ROOTS_BITPOS);\n@@ -256,1 +256,1 @@\n-    __ andi(t0, t1, ShenandoahHeap::HAS_FORWARDED);\n+    __ test_bit(t0, t1, ShenandoahHeap::HAS_FORWARDED_BITPOS);\n@@ -280,1 +280,1 @@\n-    __ andi(t0, t1, 1);\n+    __ test_bit(t0, t1, 0);\n@@ -452,1 +452,1 @@\n-  __ andi(t0, t1, ShenandoahHeap::EVACUATION);\n+  __ test_bit(t0, t1, ShenandoahHeap::EVACUATION_BITPOS);\n@@ -645,1 +645,1 @@\n-  __ andi(tmp, tmp, ShenandoahHeap::MARKING);\n+  __ test_bit(tmp, tmp, ShenandoahHeap::MARKING_BITPOS);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shenandoah\/shenandoahBarrierSetAssembler_riscv.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-    andi(t0, t1, JavaThread::popframe_pending_bit);\n+    test_bit(t0, t1, exact_log2(JavaThread::popframe_pending_bit));\n@@ -104,1 +104,1 @@\n-    andi(t0, t1, JavaThread::popframe_processing_bit);\n+    test_bit(t0, t1, exact_log2(JavaThread::popframe_processing_bit));\n@@ -526,1 +526,1 @@\n-    andi(t1, t1, SafepointMechanism::poll_bit());\n+    test_bit(t1, t1, exact_log2(SafepointMechanism::poll_bit()));\n@@ -623,1 +623,1 @@\n-  andi(t0, x12, JVM_ACC_SYNCHRONIZED);\n+  test_bit(t0, x12, exact_log2(JVM_ACC_SYNCHRONIZED));\n@@ -808,1 +808,1 @@\n-      andi(tmp, tmp, JVM_ACC_IS_VALUE_BASED_CLASS);\n+      test_bit(tmp, tmp, exact_log2(JVM_ACC_IS_VALUE_BASED_CLASS));\n@@ -1676,1 +1676,1 @@\n-  andi(t0, obj, TypeEntries::type_unknown);\n+  test_bit(t0, obj, exact_log2(TypeEntries::type_unknown));\n@@ -1944,1 +1944,1 @@\n-void InterpreterMacroAssembler::verify_access_flags(Register access_flags, uint32_t flag_bits,\n+void InterpreterMacroAssembler::verify_access_flags(Register access_flags, uint32_t flag,\n@@ -1947,1 +1947,1 @@\n-  andi(t0, access_flags, flag_bits);\n+  test_bit(t0, access_flags, exact_log2(flag));\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-  void verify_access_flags(Register access_flags, uint32_t flag_bits,\n+  void verify_access_flags(Register access_flags, uint32_t flag,\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-  __ andi(t0, rcounter, 1);\n+  __ test_bit(t0, rcounter, 0);\n","filename":"src\/hotspot\/cpu\/riscv\/jniFastGetField_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -575,1 +575,1 @@\n-  andi(t0, value, JNIHandles::TypeTag::weak_global);\n+  test_bit(t0, value, exact_log2(JNIHandles::TypeTag::weak_global));\n@@ -601,1 +601,1 @@\n-    andi(t0, value, JNIHandles::TypeTag::global); \/\/ Test for global tag.\n+    test_bit(t0, value, exact_log2(JNIHandles::TypeTag::global)); \/\/ Test for global tag.\n@@ -2421,1 +2421,1 @@\n-    andi(t0, t0, SafepointMechanism::poll_bit());\n+    test_bit(t0, t0, exact_log2(SafepointMechanism::poll_bit()));\n@@ -3672,1 +3672,1 @@\n-    andi(t0, t0, 0x1);\n+    test_bit(t0, t0, 0);\n@@ -3913,1 +3913,1 @@\n-    andi(t0, cnt, i);\n+    test_bit(t0, cnt, exact_log2(i));\n@@ -3923,1 +3923,1 @@\n-    andi(t0, cnt, 1);\n+    test_bit(t0, cnt, 0);\n@@ -4481,0 +4481,9 @@\n+\n+void MacroAssembler::test_bit(Register Rd, Register Rs, uint32_t bit_pos, Register tmp) {\n+  assert(bit_pos < 64, \"invalid bit range\");\n+  if (UseZbs) {\n+    bexti(Rd, Rs, bit_pos);\n+    return;\n+  }\n+  andi(Rd, Rs, 1UL << bit_pos, tmp);\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1213,0 +1213,3 @@\n+  \/\/ test single bit in Rs, result is set to Rd\n+  void test_bit(Register Rd, Register Rs, uint32_t bit_pos, Register tmp = t0);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2409,1 +2409,1 @@\n-      __ andi(flag, flag, JVM_ACC_IS_VALUE_BASED_CLASS, tmp \/* tmp *\/);\n+      __ test_bit(flag, flag, exact_log2(JVM_ACC_IS_VALUE_BASED_CLASS), tmp \/* tmp *\/);\n@@ -2414,1 +2414,1 @@\n-    __ andi(t0, disp_hdr, markWord::monitor_value);\n+    __ test_bit(t0, disp_hdr, exact_log2(markWord::monitor_value));\n@@ -2513,1 +2513,1 @@\n-    __ andi(t0, tmp, markWord::monitor_value);\n+    __ test_bit(t0, tmp, exact_log2(markWord::monitor_value));\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -668,1 +668,1 @@\n-      __ andi(t1, t0, JVM_ACC_STATIC);\n+      __ test_bit(t1, t0, exact_log2(JVM_ACC_STATIC));\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -810,1 +810,1 @@\n-      __ andi(t0, count, 4);\n+      __ test_bit(t0, count, 2);\n@@ -832,1 +832,1 @@\n-      __ andi(t0, count, 2);\n+      __ test_bit(t0, count, 1);\n@@ -1698,1 +1698,1 @@\n-    __ andi(t0, t0, 1);\n+    __ test_bit(t0, t0, 0);\n@@ -1779,1 +1779,1 @@\n-    __ andi(t0, src_pos, 1UL << 31);\n+    __ test_bit(t0, src_pos, 31);\n@@ -1787,1 +1787,1 @@\n-    __ andi(t0, dst_pos, 1UL << 31);\n+    __ test_bit(t0, dst_pos, 31);\n@@ -1798,1 +1798,1 @@\n-    __ andi(t0, scratch_length, 1UL << 31);\n+    __ test_bit(t0, scratch_length, 31);\n@@ -1838,1 +1838,1 @@\n-    __ andi(t0, lh, 1UL << 31);\n+    __ test_bit(t0, lh, 31);\n@@ -1889,1 +1889,1 @@\n-    __ andi(t0, x22_elsize, 2);\n+    __ test_bit(t0, x22_elsize, 1);\n@@ -1891,1 +1891,1 @@\n-    __ andi(t0, x22_elsize, 1);\n+    __ test_bit(t0, x22_elsize, 0);\n@@ -1905,1 +1905,1 @@\n-    __ andi(t0, x22_elsize, 1);\n+    __ test_bit(t0, x22_elsize, 0);\n@@ -2080,1 +2080,1 @@\n-          __ andi(t0, to, 1);\n+          __ test_bit(t0, to, 0);\n@@ -2089,1 +2089,1 @@\n-          __ andi(t0, to, 2);\n+          __ test_bit(t0, to, 1);\n@@ -2098,1 +2098,1 @@\n-          __ andi(t0, to, 4);\n+          __ test_bit(t0, to, 2);\n@@ -2142,1 +2142,1 @@\n-        __ andi(t0, count, 1);\n+        __ test_bit(t0, count, 0);\n@@ -2147,1 +2147,1 @@\n-        __ andi(t0, count, 2);\n+        __ test_bit(t0, count, 1);\n@@ -2152,1 +2152,1 @@\n-        __ andi(t0, count, 4);\n+        __ test_bit(t0, count, 2);\n@@ -2157,1 +2157,1 @@\n-        __ andi(t0, count, 1);\n+        __ test_bit(t0, count, 0);\n@@ -2162,1 +2162,1 @@\n-        __ andi(t0, count, 2);\n+        __ test_bit(t0, count, 1);\n@@ -3094,1 +3094,1 @@\n-      andi(t0, count, 0x1);\n+      test_bit(t0, count, 0);\n@@ -3110,1 +3110,1 @@\n-      andi(tmp, count, 0x1);\n+      test_bit(tmp, count, 0);\n@@ -3362,1 +3362,1 @@\n-      andi(t0, i, 0x1);\n+      test_bit(t0, i, 0);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    __ andi(t0, c_rarg3, 1UL << i);\n+    __ test_bit(t0, c_rarg3, i);\n@@ -1084,1 +1084,1 @@\n-    __ andi(t0, t, JVM_ACC_STATIC);\n+    __ test_bit(t0, t, exact_log2(JVM_ACC_STATIC));\n@@ -1273,1 +1273,1 @@\n-    __ andi(t0, t, JVM_ACC_SYNCHRONIZED);\n+    __ test_bit(t0, t, exact_log2(JVM_ACC_SYNCHRONIZED));\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1107,1 +1107,1 @@\n-  __ andi(t0, x12, Klass::layout_helper_boolean_diffbit());\n+  __ test_bit(t0, x12, exact_log2(Klass::layout_helper_boolean_diffbit()));\n@@ -2089,1 +2089,1 @@\n-    __ andi(t0, x13, JVM_ACC_HAS_FINALIZER);\n+    __ test_bit(t0, x13, exact_log2(JVM_ACC_HAS_FINALIZER));\n@@ -2259,1 +2259,1 @@\n-  __ andi(t0, index, 1UL << ResolvedIndyEntry::has_appendix_shift);\n+  __ test_bit(t0, index, ResolvedIndyEntry::has_appendix_shift);\n@@ -2522,1 +2522,1 @@\n-  __ andi(t0, raw_flags, 1UL << ConstantPoolCacheEntry::is_volatile_shift);\n+  __ test_bit(t0, raw_flags, ConstantPoolCacheEntry::is_volatile_shift);\n@@ -2621,1 +2621,1 @@\n-    __ andi(t0, x15, 1UL << ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x15, ConstantPoolCacheEntry::is_volatile_shift);\n@@ -2831,1 +2831,1 @@\n-    __ andi(t0, x15, 1UL << ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x15, ConstantPoolCacheEntry::is_volatile_shift);\n@@ -2932,1 +2932,1 @@\n-    __ andi(t0, x13, 1UL << ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n@@ -2980,1 +2980,1 @@\n-    __ andi(t0, x13, 1UL << ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n@@ -3066,1 +3066,1 @@\n-    __ andi(t0, x13, 1UL << ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n@@ -3110,1 +3110,1 @@\n-    __ andi(t0, x13, 1UL << ConstantPoolCacheEntry::is_volatile_shift);\n+    __ test_bit(t0, x13, ConstantPoolCacheEntry::is_volatile_shift);\n@@ -3159,1 +3159,1 @@\n-    __ andi(t0, flags, 1UL << ConstantPoolCacheEntry::has_appendix_shift);\n+    __ test_bit(t0, flags, ConstantPoolCacheEntry::has_appendix_shift);\n@@ -3200,1 +3200,1 @@\n-  __ andi(t0, flags, 1UL << ConstantPoolCacheEntry::is_vfinal_shift);\n+  __ test_bit(t0, flags, ConstantPoolCacheEntry::is_vfinal_shift);\n@@ -3292,1 +3292,1 @@\n-  __ andi(t0, x13, 1UL << ConstantPoolCacheEntry::is_forced_virtual_shift);\n+  __ test_bit(t0, x13, ConstantPoolCacheEntry::is_forced_virtual_shift);\n@@ -3302,1 +3302,1 @@\n-  __ andi(t0, x13, 1UL << ConstantPoolCacheEntry::is_vfinal_shift);\n+  __ test_bit(t0, x13, ConstantPoolCacheEntry::is_vfinal_shift);\n@@ -3471,1 +3471,1 @@\n-  __ andi(t0, x13, Klass::_lh_instance_slow_path_bit);\n+  __ test_bit(t0, x13, exact_log2(Klass::_lh_instance_slow_path_bit));\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1501,1 +1501,0 @@\n-int java_lang_Thread_Constants::_static_NOT_SUPPORTED_CLASSLOADER_offset = 0;\n@@ -1504,2 +1503,1 @@\n-  macro(_static_VTHREAD_GROUP_offset,             k, \"VTHREAD_GROUP\",             threadgroup_signature, true); \\\n-  macro(_static_NOT_SUPPORTED_CLASSLOADER_offset, k, \"NOT_SUPPORTED_CLASSLOADER\", classloader_signature, true);\n+  macro(_static_VTHREAD_GROUP_offset,             k, \"VTHREAD_GROUP\",             threadgroup_signature, true);\n@@ -1526,5 +1524,0 @@\n-oop java_lang_Thread_Constants::get_NOT_SUPPORTED_CLASSLOADER() {\n-  InstanceKlass* k = vmClasses::Thread_Constants_klass();\n-  oop base = k->static_field_base_raw();\n-  return base->obj_field(_static_NOT_SUPPORTED_CLASSLOADER_offset);\n-}\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -478,1 +478,0 @@\n-  static oop get_NOT_SUPPORTED_CLASSLOADER();\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -441,1 +441,1 @@\n-  MutexLocker ml(current, UnregisteredClassesTable_lock);\n+  MutexLocker ml(current, UnregisteredClassesTable_lock, Mutex::_no_safepoint_check_flag);\n@@ -525,8 +525,10 @@\n-  if (_unregistered_classes_table != nullptr) {\n-    \/\/ Remove the class from _unregistered_classes_table: keep the entry but\n-    \/\/ set it to null. This ensure no classes with the same name can be\n-    \/\/ added again.\n-    MutexLocker ml(Thread::current(), UnregisteredClassesTable_lock);\n-    InstanceKlass** v = _unregistered_classes_table->get(klass->name());\n-    if (v != nullptr) {\n-      *v = nullptr;\n+  if (Arguments::is_dumping_archive() || ClassListWriter::is_enabled()) {\n+    MutexLocker ml(Thread::current(), UnregisteredClassesTable_lock, Mutex::_no_safepoint_check_flag);\n+    if (_unregistered_classes_table != nullptr) {\n+      \/\/ Remove the class from _unregistered_classes_table: keep the entry but\n+      \/\/ set it to null. This ensure no classes with the same name can be\n+      \/\/ added again.\n+      InstanceKlass** v = _unregistered_classes_table->get(klass->name());\n+      if (v != nullptr) {\n+        *v = nullptr;\n+      }\n@@ -534,0 +536,2 @@\n+  } else {\n+    assert(_unregistered_classes_table == nullptr, \"must not be used\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-    int index = trim_index(_head_index + i);\n+    int index = trim_index(_head_index - i);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MMUTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -511,1 +511,1 @@\n-    survivor_regions_evac_time += predict_region_copy_time_ms(*it);\n+    survivor_regions_evac_time += predict_region_copy_time_ms(*it, _g1h->collector_state()->in_young_only_phase());\n@@ -1037,1 +1037,1 @@\n-double G1Policy::predict_region_copy_time_ms(HeapRegion* hr) const {\n+double G1Policy::predict_region_copy_time_ms(HeapRegion* hr, bool for_young_only_phase) const {\n@@ -1039,1 +1039,1 @@\n-  return _analytics->predict_object_copy_time_ms(bytes_to_copy, collector_state()->in_young_only_phase());\n+  return _analytics->predict_object_copy_time_ms(bytes_to_copy, for_young_only_phase);\n@@ -1047,2 +1047,2 @@\n-    _analytics->predict_card_merge_time_ms(rs_length, collector_state()->in_young_only_phase()) +\n-    _analytics->predict_card_scan_time_ms(scan_card_num, collector_state()->in_young_only_phase());\n+    _analytics->predict_card_merge_time_ms(rs_length, for_young_only_phase) +\n+    _analytics->predict_card_scan_time_ms(scan_card_num, for_young_only_phase);\n@@ -1066,1 +1066,3 @@\n-  return predict_region_non_copy_time_ms(hr, for_young_only_phase) + predict_region_copy_time_ms(hr);\n+  return\n+    predict_region_non_copy_time_ms(hr, for_young_only_phase) +\n+    predict_region_copy_time_ms(hr, for_young_only_phase);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-  double predict_region_copy_time_ms(HeapRegion* hr) const;\n+  double predict_region_copy_time_ms(HeapRegion* hr, bool for_young_only_phase) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -430,1 +430,1 @@\n-    return Atomic::fetch_and_add(&_card_table_scan_state[region], increment);\n+    return Atomic::fetch_and_add(&_card_table_scan_state[region], increment, memory_order_relaxed);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1488,1 +1488,5 @@\n-C2V_VMENTRY(void, resolveInvokeDynamicInPool, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint index))\n+C2V_VMENTRY_0(int, resolveInvokeDynamicInPool, (JNIEnv* env, jobject, ARGUMENT_PAIR(cp), jint index))\n+  if (!ConstantPool::is_invokedynamic_index(index)) {\n+    JVMCI_THROW_MSG_0(IllegalStateException, err_msg(\"not an invokedynamic index %d\", index));\n+  }\n+\n@@ -1491,2 +1495,4 @@\n-  LinkResolver::resolve_invoke(callInfo, Handle(), cp, index, Bytecodes::_invokedynamic, CHECK);\n-  cp->cache()->set_dynamic_call(callInfo, index); \/\/ Index already decoded\n+  LinkResolver::resolve_invoke(callInfo, Handle(), cp, index, Bytecodes::_invokedynamic, CHECK_0);\n+  int indy_index = cp->decode_invokedynamic_index(index);\n+  cp->cache()->set_dynamic_call(callInfo, indy_index);\n+  return cp->resolved_indy_entry_at(indy_index)->constant_pool_index();\n@@ -2892,1 +2898,1 @@\n-  {CC \"resolveInvokeDynamicInPool\",                   CC \"(\" HS_CONSTANT_POOL2 \"I)V\",                                                       FN_PTR(resolveInvokeDynamicInPool)},\n+  {CC \"resolveInvokeDynamicInPool\",                   CC \"(\" HS_CONSTANT_POOL2 \"I)I\",                                                       FN_PTR(resolveInvokeDynamicInPool)},\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1034,4 +1034,8 @@\n-      assert(strncmp(name, \"_multianewarray\", 15) == 0, \"TODO: add failed case check\");\n-      \/\/ Returns a newly allocated non-escaped object.\n-      add_java_object(call, PointsToNode::NoEscape);\n-      set_not_scalar_replaceable(ptnode_adr(call_idx) NOT_PRODUCT(COMMA \"is result of multinewarray\"));\n+      if (strncmp(name, \"_notify_jvmti_object_alloc\", 26) == 0) { \/\/ Object escapes to JVMTI\n+        add_java_object(call, PointsToNode::GlobalEscape);\n+      } else {\n+        assert(strncmp(name, \"_multianewarray\", 15) == 0, \"TODO: add failed case check\");\n+        \/\/ Returns a newly allocated non-escaped object.\n+        add_java_object(call, PointsToNode::NoEscape);\n+        set_not_scalar_replaceable(ptnode_adr(call_idx) NOT_PRODUCT(COMMA \"is result of multinewarray\"));\n+      }\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n@@ -2831,1 +2832,0 @@\n-\n@@ -2833,0 +2833,22 @@\n+#if INCLUDE_JVMTI\n+  \/\/ Check if JvmtiExport::_should_notify_object_alloc is enabled and post notifications\n+  IdealKit ideal(this);\n+  IdealVariable result(ideal); ideal.declarations_done();\n+  Node* ONE = ideal.ConI(1);\n+  Node* addr = makecon(TypeRawPtr::make((address) &JvmtiExport::_should_notify_object_alloc));\n+  Node* should_post_vm_object_alloc = ideal.load(ideal.ctrl(), addr, TypeInt::BOOL, T_BOOLEAN, Compile::AliasIdxRaw);\n+\n+  ideal.sync_kit(this);\n+  ideal.if_then(should_post_vm_object_alloc, BoolTest::eq, ONE); {\n+    const TypeFunc *tf = OptoRuntime::notify_jvmti_object_alloc_Type();\n+    address funcAddr = OptoRuntime::notify_jvmti_object_alloc();\n+    sync_kit(ideal);\n+    Node* call = make_runtime_call(RC_NO_LEAF, tf, funcAddr, \"_notify_jvmti_object_alloc\", TypePtr::BOTTOM, obj);\n+    ideal.sync_kit(this);\n+    ideal.set(result,_gvn.transform(new ProjNode(call, TypeFunc::Parms+0)));\n+  } ideal.else_(); {\n+    ideal.set(result,obj);\n+  } ideal.end_if();\n+  final_sync(ideal);\n+  obj = ideal.value(result);\n+#endif \/\/INCLUDE_JVMTI\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+address OptoRuntime::_notify_jvmti_object_alloc                   = nullptr;\n@@ -156,0 +157,1 @@\n+  gen(env, _notify_jvmti_object_alloc      , notify_jvmti_object_alloc_Type, SharedRuntime::notify_jvmti_object_alloc, 0, true, false);\n@@ -477,0 +479,16 @@\n+#if INCLUDE_JVMTI\n+const TypeFunc *OptoRuntime::notify_jvmti_object_alloc_Type() {\n+  \/\/ create input type (domain)\n+  const Type **fields = TypeTuple::fields(1);\n+  fields[TypeFunc::Parms+0] = TypeInstPtr::NOTNULL;\n+  const TypeTuple *domain = TypeTuple::make(TypeFunc::Parms+1, fields);\n+\n+   \/\/ create result type (range)\n+   fields = TypeTuple::fields(1);\n+   fields[TypeFunc::Parms+0] = TypeInstPtr::NOTNULL; \/\/ Returned oop\n+\n+   const TypeTuple *range = TypeTuple::make(TypeFunc::Parms+1, fields);\n+\n+   return TypeFunc::make(domain, range);\n+}\n+#endif\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -139,0 +139,1 @@\n+  static address _notify_jvmti_object_alloc;\n@@ -216,0 +217,1 @@\n+  static address notify_jvmti_object_alloc()             { return _notify_jvmti_object_alloc; }\n@@ -306,0 +308,1 @@\n+  static const TypeFunc* notify_jvmti_object_alloc_Type();\n","filename":"src\/hotspot\/share\/opto\/runtime.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"opto\/rootnode.hpp\"\n@@ -204,1 +205,0 @@\n-  ResourceMark rm;\n@@ -4251,13 +4251,1 @@\n-    Node* invar_scale = align_to_ref_p.invar_scale();\n-    if (invar_scale != nullptr) {\n-      invar = new LShiftINode(invar, invar_scale);\n-      _igvn.register_new_node_with_optimizer(invar);\n-    }\n-    Node* aref = new URShiftINode(invar, log2_elt);\n-    _igvn.register_new_node_with_optimizer(aref);\n-    _phase->set_ctrl(aref, pre_ctrl);\n-    if (align_to_ref_p.negate_invar()) {\n-      e = new SubINode(e, aref);\n-    } else {\n-      e = new AddINode(e, aref);\n-    }\n+    e = new URShiftINode(invar, log2_elt);\n@@ -4443,3 +4431,5 @@\n-  _mem(mem), _slp(slp),  _base(nullptr),  _adr(nullptr),\n-  _scale(0), _offset(0), _invar(nullptr), _negate_invar(false),\n-  _invar_scale(nullptr),\n+  _mem(mem), _slp(slp), _base(nullptr), _adr(nullptr),\n+  _scale(0), _offset(0), _invar(nullptr),\n+#ifdef ASSERT\n+  _debug_invar(nullptr), _debug_negate_invar(false), _debug_invar_scale(nullptr),\n+#endif\n@@ -4476,1 +4466,1 @@\n-  for (i = 0; i < 3; i++) {\n+  for (i = 0; ; i++) {\n@@ -4512,3 +4502,5 @@\n-  _mem(p->_mem), _slp(p->_slp),  _base(nullptr),  _adr(nullptr),\n-  _scale(0), _offset(0), _invar(nullptr), _negate_invar(false),\n-  _invar_scale(nullptr),\n+  _mem(p->_mem), _slp(p->_slp), _base(nullptr), _adr(nullptr),\n+  _scale(0), _offset(0), _invar(nullptr),\n+#ifdef ASSERT\n+  _debug_invar(nullptr), _debug_negate_invar(false), _debug_invar_scale(nullptr),\n+#endif\n@@ -4628,1 +4620,1 @@\n-    if (!has_iv() && _invar == nullptr) {\n+    if (!has_iv()) {\n@@ -4640,4 +4632,7 @@\n-        _invar = tmp._invar;\n-        if (_invar != nullptr) {\n-          _negate_invar = tmp._negate_invar;\n-          _invar_scale = n->in(2);\n+        if (tmp._invar != nullptr) {\n+          BasicType bt = tmp._invar->bottom_type()->basic_type();\n+          assert(bt == T_INT || bt == T_LONG, \"\");\n+          maybe_add_to_invar(register_if_new(LShiftNode::make(tmp._invar, n->in(2), bt)), false);\n+#ifdef ASSERT\n+          _debug_invar_scale = n->in(2);\n+#endif\n@@ -4645,1 +4640,1 @@\n-        NOT_PRODUCT(_tracer.scaled_iv_9(n, _scale, _offset, _invar, _negate_invar);)\n+        NOT_PRODUCT(_tracer.scaled_iv_9(n, _scale, _offset, _invar);)\n@@ -4679,4 +4674,1 @@\n-  if (_invar != nullptr) { \/\/ already has an invariant\n-    NOT_PRODUCT(_tracer.offset_plus_k_5(n, _invar);)\n-    return false;\n-  }\n+  assert((_debug_invar == nullptr) == (_invar == nullptr), \"\");\n@@ -4689,2 +4681,1 @@\n-      _negate_invar = negate;\n-      _invar = n->in(1);\n+      maybe_add_to_invar(n->in(1), negate);\n@@ -4692,1 +4683,1 @@\n-      NOT_PRODUCT(_tracer.offset_plus_k_6(n, _invar, _negate_invar, _offset);)\n+      NOT_PRODUCT(_tracer.offset_plus_k_6(n, _invar, negate, _offset);)\n@@ -4696,3 +4687,2 @@\n-      _negate_invar = negate;\n-      _invar = n->in(2);\n-      NOT_PRODUCT(_tracer.offset_plus_k_7(n, _invar, _negate_invar, _offset);)\n+      maybe_add_to_invar(n->in(2), negate);\n+      NOT_PRODUCT(_tracer.offset_plus_k_7(n, _invar, negate, _offset);)\n@@ -4704,2 +4694,1 @@\n-      _negate_invar = negate;\n-      _invar = n->in(1);\n+      maybe_add_to_invar(n->in(1), negate);\n@@ -4707,1 +4696,1 @@\n-      NOT_PRODUCT(_tracer.offset_plus_k_8(n, _invar, _negate_invar, _offset);)\n+      NOT_PRODUCT(_tracer.offset_plus_k_8(n, _invar, negate, _offset);)\n@@ -4711,3 +4700,2 @@\n-      _negate_invar = !negate;\n-      _invar = n->in(2);\n-      NOT_PRODUCT(_tracer.offset_plus_k_9(n, _invar, _negate_invar, _offset);)\n+      maybe_add_to_invar(n->in(2), !negate);\n+      NOT_PRODUCT(_tracer.offset_plus_k_9(n, _invar, !negate, _offset);)\n@@ -4730,3 +4718,2 @@\n-      _negate_invar = negate;\n-      _invar = n;\n-      NOT_PRODUCT(_tracer.offset_plus_k_10(n, _invar, _negate_invar, _offset);)\n+      maybe_add_to_invar(n, negate);\n+      NOT_PRODUCT(_tracer.offset_plus_k_10(n, _invar, negate, _offset);)\n@@ -4741,0 +4728,61 @@\n+Node* SWPointer::maybe_negate_invar(bool negate, Node* invar) {\n+#ifdef ASSERT\n+  _debug_negate_invar = negate;\n+#endif\n+  if (negate) {\n+    BasicType bt = invar->bottom_type()->basic_type();\n+    assert(bt == T_INT || bt == T_LONG, \"\");\n+    PhaseIterGVN& igvn = phase()->igvn();\n+    Node* zero = igvn.zerocon(bt);\n+    phase()->set_ctrl(zero, phase()->C->root());\n+    Node* sub = SubNode::make(zero, invar, bt);\n+    invar = register_if_new(sub);\n+  }\n+  return invar;\n+}\n+\n+Node* SWPointer::register_if_new(Node* n) const {\n+  PhaseIterGVN& igvn = phase()->igvn();\n+  Node* prev = igvn.hash_find_insert(n);\n+  if (prev != nullptr) {\n+    n->destruct(&igvn);\n+    n = prev;\n+  } else {\n+    Node* c = phase()->get_early_ctrl(n);\n+    phase()->register_new_node(n, c);\n+  }\n+  return n;\n+}\n+\n+void SWPointer::maybe_add_to_invar(Node* new_invar, bool negate) {\n+  new_invar = maybe_negate_invar(negate, new_invar);\n+  if (_invar == nullptr) {\n+    _invar = new_invar;\n+#ifdef ASSERT\n+    _debug_invar = new_invar;\n+#endif\n+    return;\n+  }\n+#ifdef ASSERT\n+  _debug_invar = NodeSentinel;\n+#endif\n+  BasicType new_invar_bt = new_invar->bottom_type()->basic_type();\n+  assert(new_invar_bt == T_INT || new_invar_bt == T_LONG, \"\");\n+  BasicType invar_bt = _invar->bottom_type()->basic_type();\n+  assert(invar_bt == T_INT || invar_bt == T_LONG, \"\");\n+\n+  BasicType bt = (new_invar_bt == T_LONG || invar_bt == T_LONG) ? T_LONG : T_INT;\n+  Node* current_invar = _invar;\n+  if (invar_bt != bt) {\n+    assert(bt == T_LONG && invar_bt == T_INT, \"\");\n+    assert(new_invar_bt == bt, \"\");\n+    current_invar = register_if_new(new ConvI2LNode(current_invar));\n+  } else if (new_invar_bt != bt) {\n+    assert(bt == T_LONG && new_invar_bt == T_INT, \"\");\n+    assert(invar_bt == bt, \"\");\n+    new_invar = register_if_new(new ConvI2LNode(new_invar));\n+  }\n+  Node* add = AddNode::make(current_invar, new_invar, bt);\n+  _invar = register_if_new(add);\n+}\n+\n@@ -4777,1 +4825,1 @@\n-    tty->print(\"  invar: %c[%d] << [%d]\", _negate_invar?'-':'+', _invar->_idx, _invar_scale->_idx);\n+    tty->print(\"  invar: [%d]\", _invar->_idx);\n@@ -4967,1 +5015,1 @@\n-void SWPointer::Tracer::scaled_iv_9(Node* n, int scale, int offset, Node* invar, bool negate_invar) {\n+void SWPointer::Tracer::scaled_iv_9(Node* n, int scale, int offset, Node* invar) {\n@@ -4973,1 +5021,1 @@\n-      print_depth(); tty->print_cr(\"  \\\\ SWPointer::scaled_iv: scaled invariant: %c[%d]\", (negate_invar?'-':'+'), invar->_idx);\n+      print_depth(); tty->print_cr(\"  \\\\ SWPointer::scaled_iv: scaled invariant: [%d]\", invar->_idx);\n@@ -5025,1 +5073,1 @@\n-    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_AddI PASSED, setting _negate_invar = %d, _invar = %d, _offset = %d\",\n+    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_AddI PASSED, setting _debug_negate_invar = %d, _invar = %d, _offset = %d\",\n@@ -5034,1 +5082,1 @@\n-    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_AddI PASSED, setting _negate_invar = %d, _invar = %d, _offset = %d\",\n+    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_AddI PASSED, setting _debug_negate_invar = %d, _invar = %d, _offset = %d\",\n@@ -5043,1 +5091,1 @@\n-    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_SubI is PASSED, setting _negate_invar = %d, _invar = %d, _offset = %d\",\n+    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_SubI is PASSED, setting _debug_negate_invar = %d, _invar = %d, _offset = %d\",\n@@ -5052,1 +5100,1 @@\n-    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_SubI PASSED, setting _negate_invar = %d, _invar = %d, _offset = %d\", n->_idx, _negate_invar, _invar->_idx, _offset);\n+    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: Op_SubI PASSED, setting _debug_negate_invar = %d, _invar = %d, _offset = %d\", n->_idx, _negate_invar, _invar->_idx, _offset);\n@@ -5060,1 +5108,1 @@\n-    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: PASSED, setting _negate_invar = %d, _invar = %d, _offset = %d\", n->_idx, _negate_invar, _invar->_idx, _offset);\n+    print_depth(); tty->print_cr(\" %d SWPointer::offset_plus_k: PASSED, setting _debug_negate_invar = %d, _invar = %d, _offset = %d\", n->_idx, _negate_invar, _invar->_idx, _offset);\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":102,"deletions":54,"binary":false,"changes":156,"status":"modified"},{"patch":"@@ -658,2 +658,5 @@\n-  bool  _negate_invar;       \/\/ if true then use: (0 - _invar)\n-  Node* _invar_scale;        \/\/ multiplier for invariant\n+#ifdef ASSERT\n+  Node* _debug_invar;\n+  bool  _debug_negate_invar;       \/\/ if true then use: (0 - _invar)\n+  Node* _debug_invar_scale;        \/\/ multiplier for invariant\n+#endif\n@@ -701,2 +704,0 @@\n-  bool  negate_invar()     { return _negate_invar; }\n-  Node* invar_scale()      { return _invar_scale; }\n@@ -709,3 +710,5 @@\n-      return (_invar        == q._invar   &&\n-              _invar_scale  == q._invar_scale &&\n-              _negate_invar == q._negate_invar);\n+    assert(_debug_invar == NodeSentinel || q._debug_invar == NodeSentinel ||\n+           (_invar == q._invar) == (_debug_invar == q._debug_invar &&\n+                                    _debug_invar_scale == q._debug_invar_scale &&\n+                                    _debug_negate_invar == q._debug_negate_invar), \"\");\n+    return _invar == q._invar;\n@@ -789,1 +792,1 @@\n-    void scaled_iv_9(Node* n, int _scale, int _offset, Node* _invar, bool _negate_invar);\n+    void scaled_iv_9(Node* n, int _scale, int _offset, Node* _invar);\n@@ -806,0 +809,6 @@\n+\n+  Node* maybe_negate_invar(bool negate, Node* invar);\n+\n+  void maybe_add_to_invar(Node* new_invar, bool negate);\n+\n+  Node* register_if_new(Node* n) const;\n","filename":"src\/hotspot\/share\/opto\/superword.hpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-static jint CurrentVersion = JNI_VERSION_20;\n+static jint CurrentVersion = JNI_VERSION_21;\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1727,1 +1727,1 @@\n-    <function id=\"SuspendAllVirtualThreads\" num=\"118\" since=\"19\">\n+    <function id=\"SuspendAllVirtualThreads\" num=\"118\" since=\"21\">\n@@ -1730,4 +1730,0 @@\n-        <b> SuspendAllVirtualThreads is a preview API of the Java platform. <\/b>\n-        <i>Preview features may be removed in a future release, or upgraded to\n-        permanent features of the Java platform.<\/i>\n-        <p\/>\n@@ -1853,1 +1849,1 @@\n-   <function id=\"ResumeAllVirtualThreads\" num=\"119\" since=\"19\">\n+   <function id=\"ResumeAllVirtualThreads\" num=\"119\" since=\"21\">\n@@ -1856,4 +1852,0 @@\n-        <b> ResumeAllVirtualThreads is a preview API of the Java platform. <\/b>\n-        <i>Preview features may be removed in a future release, or upgraded to\n-        permanent features of the Java platform.<\/i>\n-        <p\/>\n@@ -10653,1 +10645,1 @@\n-      <capabilityfield id=\"can_support_virtual_threads\" since=\"19\">\n+      <capabilityfield id=\"can_support_virtual_threads\" since=\"21\">\n@@ -10655,4 +10647,0 @@\n-          <b> can_support_virtual_threads is a preview API of the Java platform. <\/b>\n-          <i>Preview features may be removed in a future release, or upgraded to\n-          permanent features of the Java platform.<\/i>\n-          <p\/>\n@@ -13041,1 +13029,1 @@\n-         id=\"VirtualThreadStart\" const=\"JVMTI_EVENT_VIRTUAL_THREAD_START\" filtered=\"thread\" num=\"87\" phase=\"start\" since=\"19\">\n+         id=\"VirtualThreadStart\" const=\"JVMTI_EVENT_VIRTUAL_THREAD_START\" filtered=\"thread\" num=\"87\" phase=\"start\" since=\"21\">\n@@ -13043,4 +13031,0 @@\n-      <b> VirtualThreadStart is a preview API of the Java platform. <\/b>\n-      <i>Preview features may be removed in a future release, or upgraded to\n-      permanent features of the Java platform.<\/i>\n-      <p\/>\n@@ -13074,1 +13058,1 @@\n-         id=\"VirtualThreadEnd\" const=\"JVMTI_EVENT_VIRTUAL_THREAD_END\" filtered=\"thread\" num=\"88\" phase=\"start\" since=\"19\">\n+         id=\"VirtualThreadEnd\" const=\"JVMTI_EVENT_VIRTUAL_THREAD_END\" filtered=\"thread\" num=\"88\" phase=\"start\" since=\"21\">\n@@ -13076,4 +13060,0 @@\n-      <b> VirtualThreadEnd is a preview API of the Java platform. <\/b>\n-      <i>Preview features may be removed in a future release, or upgraded to\n-      permanent features of the Java platform.<\/i>\n-      <p\/>\n","filename":"src\/hotspot\/share\/prims\/jvmti.xml","additions":6,"deletions":26,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1314,7 +1314,0 @@\n-  if (loader != nullptr) {\n-    \/\/ Do the same as Thread.getContextClassLoader and set context_class_loader to be\n-    \/\/ the system class loader when the field value is the \"not supported\" placeholder.\n-    if (loader == java_lang_Thread_Constants::get_NOT_SUPPORTED_CLASSLOADER()) {\n-      loader = SystemDictionary::java_system_loader();\n-    }\n-  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -727,0 +727,1 @@\n+    JvmtiExport::_should_notify_object_alloc = JvmtiExport::should_post_vm_object_alloc();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1049,0 +1049,4 @@\n+\/\/ This flag is read by C2 during VM internal objects allocation\n+bool JvmtiExport::_should_notify_object_alloc = false;\n+\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -399,0 +399,3 @@\n+  \/\/ Used by C2 to post vm_object_alloc\n+  static bool _should_notify_object_alloc;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,0 +119,1 @@\n+    JVMTI_VERSION_21  = 0x30150000,\n","filename":"src\/hotspot\/share\/prims\/jvmtiH.xsl","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1144,1 +1144,0 @@\n-  \/\/ disabled if vritual threads are enabled with --enable-preview\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -176,0 +176,6 @@\n+    if (stream.continuation() != nullptr && stream.continuation() != stream.reg_map()->cont()) {\n+      \/\/ The code in StackStreamFactory.java has failed to set the continuation because frameBuffer.isAtBottom()\n+      \/\/ returns false if the end of a continuation falls precisely at the end of the batch.\n+      \/\/ By breaking here, we're signalling the Java code to set the continuation to the parent.\n+      break;\n+    }\n@@ -193,0 +199,2 @@\n+        \/\/ We end a batch on continuation bottom to let the Java side skip top frames of the next one\n+        if (stream.continuation() != nullptr && method->intrinsic_id() == vmIntrinsics::_Continuation_enter) break;\n@@ -579,1 +587,1 @@\n-      if (n < 1) {\n+      if (n < 1 && !skip_hidden_frames(mode)) {\n","filename":"src\/hotspot\/share\/prims\/stackwalk.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -327,0 +327,1 @@\n+  MUTEX_DEFN(UnregisteredClassesTable_lock   , PaddedMutex  , nosafepoint-1);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -631,0 +631,8 @@\n+JRT_ENTRY(void, SharedRuntime::notify_jvmti_object_alloc(oopDesc* o, JavaThread* current))\n+  Handle h = Handle(current, o);\n+  if (JvmtiExport::should_post_vm_object_alloc()) {\n+    JvmtiExport::post_vm_object_alloc(current, o);\n+  }\n+  current->set_vm_result(h());\n+JRT_END\n+\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -268,0 +268,1 @@\n+  static void notify_jvmti_object_alloc(oopDesc* o, JavaThread* current);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1162,0 +1162,1 @@\n+  if (version == JNI_VERSION_21) return JNI_TRUE;\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -196,10 +196,0 @@\n-      JavaPermission p = factory->permission();\n-      if(p._class != nullptr) {\n-        if(p._action != nullptr) {\n-          output()->print_cr(\"\\nPermission: %s(%s, %s)\",\n-                  p._class, p._name == nullptr ? \"null\" : p._name, p._action);\n-        } else {\n-          output()->print_cr(\"\\nPermission: %s(%s)\",\n-                  p._class, p._name == nullptr ? \"null\" : p._name);\n-        }\n-      }\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import java.util.regex.Pattern;\n@@ -108,12 +107,0 @@\n-    \/\/ get kernel version as a three element array {major, minor, micro}\n-    private static int[] getKernelVersion() {\n-        Pattern pattern = Pattern.compile(\"\\\\D+\");\n-        String[] matches = pattern.split(System.getProperty(\"os.version\"));\n-        int[] majorMinorMicro = new int[3];\n-        int length = Math.min(matches.length, majorMinorMicro.length);\n-        for (int i = 0; i < length; i++) {\n-            majorMinorMicro[i] = Integer.parseInt(matches[i]);\n-        }\n-        return majorMinorMicro;\n-    }\n-\n@@ -145,2 +132,1 @@\n-            \/\/ know that extended attributes are enabled by default for\n-            \/\/ kernel version >= 2.6.39\n+            \/\/ know that extended attributes are enabled by default\n@@ -148,10 +134,1 @@\n-                if (!xattrChecked) {\n-                    \/\/ check kernel version\n-                    int[] kernelVersion = getKernelVersion();\n-                    xattrEnabled = kernelVersion[0] > 2 ||\n-                        (kernelVersion[0] == 2 && kernelVersion[1] > 6) ||\n-                        (kernelVersion[0] == 2 && kernelVersion[1] == 6 &&\n-                            kernelVersion[2] >= 39);\n-                    xattrChecked = true;\n-                }\n-                return xattrEnabled;\n+                return true;\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxFileStore.java","additions":3,"deletions":26,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -588,1 +588,1 @@\n-     * NullReferenceException in classes that contain references to the\n+     * {@link NullPointerException} in classes that contain references to the\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,105 +0,0 @@\n-\/*\n- * Copyright (c) 1995, 2016, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package java.lang;\n-\n-\/**\n- * The {@code Compiler} class is provided to support Java-to-native-code\n- * compilers and related services. By design, the {@code Compiler} class does\n- * nothing; it serves as a placeholder for a JIT compiler implementation.\n- * If no compiler is available, these methods do nothing.\n- *\n- * @deprecated JIT compilers and their technologies vary too widely to\n- * be controlled effectively by a standardized interface. As such, many\n- * JIT compiler implementations ignore this interface, and are instead\n- * controllable by implementation-specific mechanisms such as command-line\n- * options. This class is subject to removal in a future version of Java SE.\n- *\n- * @author  Frank Yellin\n- * @since   1.0\n- *\/\n-@Deprecated(since=\"9\", forRemoval=true)\n-public final class Compiler  {\n-    private Compiler() {}               \/\/ don't make instances\n-\n-    \/**\n-     * Compiles the specified class.\n-     *\n-     * @param  clazz\n-     *         A class\n-     *\n-     * @return  {@code true} if the compilation succeeded; {@code false} if the\n-     *          compilation failed or no compiler is available\n-     *\n-     * @throws  NullPointerException\n-     *          If {@code clazz} is {@code null}\n-     *\/\n-    public static boolean compileClass(Class<?> clazz) {\n-        return false;\n-    }\n-\n-    \/**\n-     * Compiles all classes whose name matches the specified string.\n-     *\n-     * @param  string\n-     *         The name of the classes to compile\n-     *\n-     * @return  {@code true} if the compilation succeeded; {@code false} if the\n-     *          compilation failed or no compiler is available\n-     *\n-     * @throws  NullPointerException\n-     *          If {@code string} is {@code null}\n-     *\/\n-    public static boolean compileClasses(String string) {\n-        return false;\n-    }\n-\n-    \/**\n-     * Examines the argument type and its fields and perform some documented\n-     * operation.  No specific operations are required.\n-     *\n-     * @param  any\n-     *         An argument\n-     *\n-     * @return  A compiler-specific value, or {@code null} if no compiler is\n-     *          available\n-     *\n-     * @throws  NullPointerException\n-     *          If {@code any} is {@code null}\n-     *\/\n-    public static Object command(Object any) {\n-        return null;\n-    }\n-\n-    \/**\n-     * Cause the Compiler to resume operation.\n-     *\/\n-    public static void enable() { }\n-\n-    \/**\n-     * Cause the Compiler to cease operation.\n-     *\/\n-    public static void disable() { }\n-}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Compiler.java","additions":0,"deletions":105,"binary":false,"changes":105,"status":"deleted"},{"patch":"@@ -92,1 +92,0 @@\n-import jdk.internal.vm.annotation.ChangesCurrentThread;\n@@ -2570,1 +2569,0 @@\n-            @ChangesCurrentThread\n@@ -2572,9 +2570,2 @@\n-                Thread thread = Thread.currentThread();\n-                if (thread.isVirtual()) {\n-                    Thread carrier = Thread.currentCarrierThread();\n-                    carrier.setCurrentThread(carrier);\n-                    try {\n-                        return task.call();\n-                    } finally {\n-                        carrier.setCurrentThread(thread);\n-                    }\n+                if (Thread.currentThread() instanceof VirtualThread vthread) {\n+                    return vthread.executeOnCarrierThread(task);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -41,2 +41,0 @@\n-import java.util.function.Predicate;\n-import java.util.stream.Stream;\n@@ -44,2 +42,0 @@\n-import jdk.internal.javac.PreviewFeature;\n-import jdk.internal.misc.PreviewFeatures;\n@@ -59,0 +55,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -87,5 +84,5 @@\n- * a value that is independent of the value set by other threads. Thread also supports\n- * {@link InheritableThreadLocal} variables that are thread local variables that are\n- * inherited at Thread creation time from the parent Thread. Thread supports a special\n- * inheritable thread local for the thread {@linkplain #getContextClassLoader()\n- * context-class-loader}.\n+ * a value that is independent of the value set by other threads. {@code Thread} also\n+ * supports {@link InheritableThreadLocal} variables that are thread local variables\n+ * that are inherited at thread creation time from the parent {@code Thread}.\n+ * {@code Thread} supports a special inheritable thread local for the thread\n+ * {@linkplain #getContextClassLoader() context-class-loader}.\n@@ -282,1 +279,2 @@\n-     * by the ThreadLocal class. *\/\n+     * by the ThreadLocal class.\n+     *\/\n@@ -453,0 +451,30 @@\n+    \/**\n+     * Called before sleeping to create a jdk.ThreadSleep event.\n+     *\/\n+    private static ThreadSleepEvent beforeSleep(long nanos) {\n+        ThreadSleepEvent event = null;\n+        if (ThreadSleepEvent.isTurnedOn()) {\n+            try {\n+                event = new ThreadSleepEvent();\n+                event.time = nanos;\n+                event.begin();\n+            } catch (OutOfMemoryError e) {\n+                event = null;\n+            }\n+        }\n+        return event;\n+    }\n+\n+    \/**\n+     * Called after sleeping to commit the jdk.ThreadSleep event.\n+     *\/\n+    private static void afterSleep(ThreadSleepEvent event) {\n+        if (event != null) {\n+            try {\n+                event.commit();\n+            } catch (OutOfMemoryError e) {\n+                \/\/ ignore\n+            }\n+        }\n+    }\n+\n@@ -475,11 +503,6 @@\n-        if (currentThread() instanceof VirtualThread vthread) {\n-            long nanos = MILLISECONDS.toNanos(millis);\n-            vthread.sleepNanos(nanos);\n-            return;\n-        }\n-\n-        if (ThreadSleepEvent.isTurnedOn()) {\n-            ThreadSleepEvent event = new ThreadSleepEvent();\n-            try {\n-                event.time = MILLISECONDS.toNanos(millis);\n-                event.begin();\n+        long nanos = MILLISECONDS.toNanos(millis);\n+        ThreadSleepEvent event = beforeSleep(nanos);\n+        try {\n+            if (currentThread() instanceof VirtualThread vthread) {\n+                vthread.sleepNanos(nanos);\n+            } else {\n@@ -487,2 +510,0 @@\n-            } finally {\n-                event.commit();\n@@ -490,2 +511,2 @@\n-        } else {\n-            sleep0(millis);\n+        } finally {\n+            afterSleep(event);\n@@ -528,7 +549,3 @@\n-        if (currentThread() instanceof VirtualThread vthread) {\n-            \/\/ total sleep time, in nanoseconds\n-            long totalNanos = MILLISECONDS.toNanos(millis);\n-            totalNanos += Math.min(Long.MAX_VALUE - totalNanos, nanos);\n-            vthread.sleepNanos(totalNanos);\n-            return;\n-        }\n+        \/\/ total sleep time, in nanoseconds\n+        long totalNanos = MILLISECONDS.toNanos(millis);\n+        totalNanos += Math.min(Long.MAX_VALUE - totalNanos, nanos);\n@@ -536,2 +553,13 @@\n-        if (nanos > 0 && millis < Long.MAX_VALUE) {\n-            millis++;\n+        ThreadSleepEvent event = beforeSleep(totalNanos);\n+        try {\n+            if (currentThread() instanceof VirtualThread vthread) {\n+                vthread.sleepNanos(totalNanos);\n+            } else {\n+                \/\/ millisecond precision\n+                if (nanos > 0 && millis < Long.MAX_VALUE) {\n+                    millis++;\n+                }\n+                sleep0(millis);\n+            }\n+        } finally {\n+            afterSleep(event);\n@@ -539,1 +567,0 @@\n-        sleep(millis);\n@@ -560,5 +587,1 @@\n-        if (nanos < 0)\n-            return;\n-\n-        if (currentThread() instanceof VirtualThread vthread) {\n-            vthread.sleepNanos(nanos);\n+        if (nanos < 0) {\n@@ -568,4 +591,14 @@\n-        \/\/ convert to milliseconds\n-        long millis = MILLISECONDS.convert(nanos, NANOSECONDS);\n-        if (nanos > NANOSECONDS.convert(millis, MILLISECONDS)) {\n-            millis += 1L;\n+        ThreadSleepEvent event = beforeSleep(nanos);\n+        try {\n+            if (currentThread() instanceof VirtualThread vthread) {\n+                vthread.sleepNanos(nanos);\n+            } else {\n+                \/\/ millisecond precision\n+                long millis = NANOSECONDS.toMillis(nanos);\n+                if (nanos > MILLISECONDS.toNanos(millis)) {\n+                    millis += 1L;\n+                }\n+                sleep0(millis);\n+            }\n+        } finally {\n+            afterSleep(event);\n@@ -573,1 +606,0 @@\n-        sleep(millis);\n@@ -615,7 +647,0 @@\n-    \/**\n-     * Characteristic value signifying that the thread cannot set values for its\n-     * copy of {@link ThreadLocal thread-locals}.\n-     * See Thread initialization.\n-     *\/\n-    static final int NO_THREAD_LOCALS = 1 << 1;\n-\n@@ -661,2 +686,1 @@\n-            ClassLoader cl = parent.contextClassLoader;\n-            return (isSupportedClassLoader(cl)) ? cl : ClassLoader.getSystemClassLoader();\n+            return parent.contextClassLoader;\n@@ -731,5 +755,1 @@\n-            if ((characteristics & NO_THREAD_LOCALS) != 0) {\n-                this.threadLocals = ThreadLocal.ThreadLocalMap.NOT_SUPPORTED;\n-                this.inheritableThreadLocals = ThreadLocal.ThreadLocalMap.NOT_SUPPORTED;\n-                this.contextClassLoader = Constants.NOT_SUPPORTED_CLASSLOADER;\n-            } else if ((characteristics & NO_INHERIT_THREAD_LOCALS) == 0) {\n+            if ((characteristics & NO_INHERIT_THREAD_LOCALS) == 0) {\n@@ -737,3 +757,1 @@\n-                if (parentMap != null\n-                        && parentMap != ThreadLocal.ThreadLocalMap.NOT_SUPPORTED\n-                        && parentMap.size() > 0) {\n+                if (parentMap != null && parentMap.size() > 0) {\n@@ -742,6 +760,2 @@\n-                ClassLoader parentLoader = contextClassLoader(parent);\n-                if (VM.isBooted() && !isSupportedClassLoader(parentLoader)) {\n-                    \/\/ parent does not support thread locals so no CCL to inherit\n-                    this.contextClassLoader = ClassLoader.getSystemClassLoader();\n-                } else {\n-                    this.contextClassLoader = parentLoader;\n+                if (VM.isBooted()) {\n+                    this.contextClassLoader = contextClassLoader(parent);\n@@ -755,1 +769,1 @@\n-        \/\/ Special value to indicate this is a newly-created Thread\n+        \/\/ special value to indicate this is a newly-created Thread\n@@ -773,5 +787,1 @@\n-        if ((characteristics & NO_THREAD_LOCALS) != 0) {\n-            this.threadLocals = ThreadLocal.ThreadLocalMap.NOT_SUPPORTED;\n-            this.inheritableThreadLocals = ThreadLocal.ThreadLocalMap.NOT_SUPPORTED;\n-            this.contextClassLoader = Constants.NOT_SUPPORTED_CLASSLOADER;\n-        } else if ((characteristics & NO_INHERIT_THREAD_LOCALS) == 0) {\n+        if ((characteristics & NO_INHERIT_THREAD_LOCALS) == 0) {\n@@ -780,3 +790,1 @@\n-            if (parentMap != null\n-                    && parentMap != ThreadLocal.ThreadLocalMap.NOT_SUPPORTED\n-                    && parentMap.size() > 0) {\n+            if (parentMap != null && parentMap.size() > 0) {\n@@ -785,7 +793,1 @@\n-            ClassLoader parentLoader = contextClassLoader(parent);\n-            if (isSupportedClassLoader(parentLoader)) {\n-                this.contextClassLoader = parentLoader;\n-            } else {\n-                \/\/ parent does not support thread locals so no CCL to inherit\n-                this.contextClassLoader = ClassLoader.getSystemClassLoader();\n-            }\n+            this.contextClassLoader = contextClassLoader(parent);\n@@ -797,1 +799,1 @@\n-        \/\/ Special value to indicate this is a newly-created Thread\n+        \/\/ special value to indicate this is a newly-created Thread\n@@ -840,1 +842,1 @@\n-     * @since 19\n+     * @since 21\n@@ -842,1 +844,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -861,2 +862,1 @@\n-     * @throws UnsupportedOperationException if preview features are not enabled\n-     * @since 19\n+     * @since 21\n@@ -864,1 +864,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -866,1 +865,0 @@\n-        PreviewFeatures.ensureEnabled();\n@@ -896,1 +894,1 @@\n-     * @since 19\n+     * @since 21\n@@ -898,1 +896,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -900,4 +897,1 @@\n-            permits Builder.OfPlatform,\n-                    Builder.OfVirtual,\n-                    ThreadBuilders.BaseThreadBuilder {\n-\n+            permits Builder.OfPlatform, Builder.OfVirtual {\n@@ -939,22 +933,0 @@\n-        \/**\n-         * Sets whether the thread is allowed to set values for its copy of {@linkplain\n-         * ThreadLocal thread-local} variables. The default is to allow. If not allowed,\n-         * then any attempt by the thread to set a value for a thread-local with the\n-         * {@link ThreadLocal#set(Object)} method throws {@code\n-         * UnsupportedOperationException}. Any attempt to set the thread's context\n-         * class loader with {@link Thread#setContextClassLoader(ClassLoader)\n-         * setContextClassLoader} also throws. The {@link ThreadLocal#get()} method\n-         * always returns the {@linkplain ThreadLocal#initialValue() initial-value}\n-         * when thread locals are not allowed.\n-         *\n-         * @apiNote This method is intended for cases where there are a large number of\n-         * threads and where potentially unbounded memory usage due to thread locals is\n-         * a concern. Disallowing a thread to set its copy of thread-local variables\n-         * creates the potential for exceptions at run-time so great care is required\n-         * when the thread is used to invoke arbitrary code.\n-         *\n-         * @param allow {@code true} to allow, {@code false} to disallow\n-         * @return this builder\n-         *\/\n-        Builder allowSetThreadLocals(boolean allow);\n-\n@@ -966,4 +938,0 @@\n-         * <p> The initial values of {@code InheritableThreadLocal}s are never inherited\n-         * when {@link #allowSetThreadLocals(boolean)} is used to disallow the thread\n-         * to have its own copy of thread-local variables.\n-         *\n@@ -1028,1 +996,1 @@\n-         * @since 19\n+         * @since 21\n@@ -1030,1 +998,0 @@\n-        @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -1041,1 +1008,0 @@\n-            @Override OfPlatform allowSetThreadLocals(boolean allow);\n@@ -1104,1 +1070,1 @@\n-         * @since 19\n+         * @since 21\n@@ -1106,1 +1072,0 @@\n-        @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -1117,1 +1082,0 @@\n-            @Override OfVirtual allowSetThreadLocals(boolean allow);\n@@ -1535,1 +1499,0 @@\n-     * @throws UnsupportedOperationException if preview features are not enabled\n@@ -1537,1 +1500,1 @@\n-     * @since 19\n+     * @since 21\n@@ -1539,1 +1502,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -1542,1 +1504,0 @@\n-        PreviewFeatures.ensureEnabled();\n@@ -1554,1 +1515,1 @@\n-     * @since 19\n+     * @since 21\n@@ -1556,1 +1517,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -1591,0 +1551,2 @@\n+            if (this.container != null)\n+                throw new IllegalThreadStateException();\n@@ -1665,9 +1627,11 @@\n-        \/\/ pop any remaining scopes from the stack, this may block\n-        if (headStackableScopes != null) {\n-            StackableScope.popAll();\n-        }\n-\n-        \/\/ notify container that thread is exiting\n-        ThreadContainer container = threadContainer();\n-        if (container != null) {\n-            container.onExit(this);\n+        try {\n+            \/\/ pop any remaining scopes from the stack, this may block\n+            if (headStackableScopes != null) {\n+                StackableScope.popAll();\n+            }\n+        } finally {\n+            \/\/ notify container that thread is exiting\n+            ThreadContainer container = threadContainer();\n+            if (container != null) {\n+                container.onExit(this);\n+            }\n@@ -2386,2 +2350,0 @@\n-        if (!isSupportedClassLoader(cl))\n-            cl = ClassLoader.getSystemClassLoader();\n@@ -2403,4 +2365,0 @@\n-     * <p> The context {@code ClassLoader} cannot be set when the thread is\n-     * {@linkplain Thread.Builder#allowSetThreadLocals(boolean) not allowed} to have\n-     * its own copy of thread local variables.\n-     *\n@@ -2417,3 +2375,0 @@\n-     * @throws  UnsupportedOperationException if this thread is not allowed\n-     *          to set values for its copy of thread-local variables\n-     *\n@@ -2431,4 +2386,0 @@\n-        if (!isSupportedClassLoader(contextClassLoader)) {\n-            throw new UnsupportedOperationException(\n-                \"The context class loader cannot be set\");\n-        }\n@@ -2438,14 +2389,0 @@\n-    \/**\n-     * Returns true if the given ClassLoader is a \"supported\" class loader. All\n-     * class loaders, except ClassLoaders.NOT_SUPPORTED, are considered supported.\n-     * This method allows the initialization of ClassLoaders to be delayed until\n-     * it is required.\n-     *\/\n-    private static boolean isSupportedClassLoader(ClassLoader loader) {\n-        if (loader == null)\n-            return true;\n-        if (loader == jdk.internal.loader.ClassLoaders.appClassLoader())\n-            return true;\n-        return loader != Constants.NOT_SUPPORTED_CLASSLOADER;\n-    }\n-\n@@ -2988,3 +2925,0 @@\n-        \/\/ Placeholder TCCL when thread locals not supported\n-        static final ClassLoader NOT_SUPPORTED_CLASSLOADER;\n-\n@@ -3008,10 +2942,0 @@\n-\n-            var createClassLoader = new PrivilegedAction<ClassLoader>() {\n-                @Override\n-                public ClassLoader run() {\n-                    return new ClassLoader(null) { };\n-                }\n-            };\n-            @SuppressWarnings(\"removal\")\n-            ClassLoader loader = AccessController.doPrivileged(createClassLoader);\n-            NOT_SUPPORTED_CLASSLOADER = loader;\n@@ -3043,1 +2967,1 @@\n-    private volatile ThreadContainer container;  \/\/ @Stable candidate?\n+    private @Stable ThreadContainer container;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":109,"deletions":185,"binary":false,"changes":294,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.lang.Thread.Builder;\n@@ -44,0 +43,1 @@\n+    private ThreadBuilders() { }\n@@ -46,1 +46,1 @@\n-     * Base implementation of ThreadBuilder.\n+     * Base class for Thread.Builder implementations.\n@@ -48,2 +48,1 @@\n-    static abstract non-sealed\n-    class BaseThreadBuilder<T extends Builder> implements Builder {\n+    private static class BaseThreadBuilder {\n@@ -79,3 +78,1 @@\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public T name(String name) {\n+        void setName(String name) {\n@@ -84,1 +81,0 @@\n-            return (T) this;\n@@ -87,3 +83,1 @@\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public T name(String prefix, long start) {\n+        void setName(String prefix, long start) {\n@@ -95,1 +89,0 @@\n-            return (T) this;\n@@ -98,14 +91,1 @@\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public T allowSetThreadLocals(boolean allow) {\n-            if (allow) {\n-                characteristics &= ~Thread.NO_THREAD_LOCALS;\n-            } else {\n-                characteristics |= Thread.NO_THREAD_LOCALS;\n-            }\n-            return (T) this;\n-        }\n-\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public T inheritInheritableThreadLocals(boolean inherit) {\n+        void setInheritInheritableThreadLocals(boolean inherit) {\n@@ -117,1 +97,0 @@\n-            return (T) this;\n@@ -120,3 +99,1 @@\n-        @Override\n-        @SuppressWarnings(\"unchecked\")\n-        public T uncaughtExceptionHandler(UncaughtExceptionHandler ueh) {\n+        void setUncaughtExceptionHandler(UncaughtExceptionHandler ueh) {\n@@ -124,1 +101,0 @@\n-            return (T) this;\n@@ -132,1 +108,1 @@\n-            extends BaseThreadBuilder<OfPlatform> implements OfPlatform {\n+            extends BaseThreadBuilder implements OfPlatform {\n@@ -148,0 +124,24 @@\n+        @Override\n+        public OfPlatform name(String name) {\n+            setName(name);\n+            return this;\n+        }\n+\n+        @Override\n+        public OfPlatform name(String prefix, long start) {\n+            setName(prefix, start);\n+            return this;\n+        }\n+\n+        @Override\n+        public OfPlatform inheritInheritableThreadLocals(boolean inherit) {\n+            setInheritInheritableThreadLocals(inherit);\n+            return this;\n+        }\n+\n+        @Override\n+        public OfPlatform uncaughtExceptionHandler(UncaughtExceptionHandler ueh) {\n+            setUncaughtExceptionHandler(ueh);\n+            return this;\n+        }\n+\n@@ -211,1 +211,1 @@\n-            extends BaseThreadBuilder<OfVirtual> implements OfVirtual {\n+            extends BaseThreadBuilder implements OfVirtual {\n@@ -224,0 +224,24 @@\n+        @Override\n+        public OfVirtual name(String name) {\n+            setName(name);\n+            return this;\n+        }\n+\n+        @Override\n+        public OfVirtual name(String prefix, long start) {\n+            setName(prefix, start);\n+            return this;\n+        }\n+\n+        @Override\n+        public OfVirtual inheritInheritableThreadLocals(boolean inherit) {\n+            setInheritInheritableThreadLocals(inherit);\n+            return this;\n+        }\n+\n+        @Override\n+        public OfVirtual uncaughtExceptionHandler(UncaughtExceptionHandler ueh) {\n+            setUncaughtExceptionHandler(ueh);\n+            return this;\n+        }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ThreadBuilders.java","additions":58,"deletions":34,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.stream.Collectors;\n@@ -35,0 +36,1 @@\n+import sun.security.action.GetPropertyAction;\n@@ -80,0 +82,2 @@\n+    private static final boolean TRACE_VTHREAD_LOCALS = traceVirtualThreadLocals();\n+\n@@ -164,2 +168,0 @@\n-     * If the current thread does not support thread locals then\n-     * this method returns its {@link #initialValue}.\n@@ -168,1 +170,0 @@\n-     * @see Thread.Builder#allowSetThreadLocals(boolean)\n@@ -186,9 +187,5 @@\n-            if (map == ThreadLocalMap.NOT_SUPPORTED) {\n-                return initialValue();\n-            } else {\n-                ThreadLocalMap.Entry e = map.getEntry(this);\n-                if (e != null) {\n-                    @SuppressWarnings(\"unchecked\")\n-                    T result = (T) e.value;\n-                    return result;\n-                }\n+            ThreadLocalMap.Entry e = map.getEntry(this);\n+            if (e != null) {\n+                @SuppressWarnings(\"unchecked\")\n+                T result = (T) e.value;\n+                return result;\n@@ -214,1 +211,1 @@\n-        if (map != null && map != ThreadLocalMap.NOT_SUPPORTED) {\n+        if (map != null) {\n@@ -230,1 +227,0 @@\n-        assert map != ThreadLocalMap.NOT_SUPPORTED;\n@@ -239,0 +235,3 @@\n+        if (TRACE_VTHREAD_LOCALS) {\n+            dumpStackIfVirtualThread();\n+        }\n@@ -250,5 +249,0 @@\n-     *\n-     * @throws UnsupportedOperationException if the current thread is not\n-     *         allowed to set its copy of thread-local variables\n-     *\n-     * @see Thread.Builder#allowSetThreadLocals(boolean)\n@@ -258,0 +252,3 @@\n+        if (TRACE_VTHREAD_LOCALS) {\n+            dumpStackIfVirtualThread();\n+        }\n@@ -267,3 +264,0 @@\n-        if (map == ThreadLocalMap.NOT_SUPPORTED) {\n-            throw new UnsupportedOperationException();\n-        }\n@@ -299,1 +293,1 @@\n-         if (m != null && m != ThreadLocalMap.NOT_SUPPORTED) {\n+         if (m != null) {\n@@ -397,3 +391,0 @@\n-        \/\/ Placeholder when thread locals not supported\n-        static final ThreadLocalMap NOT_SUPPORTED = new ThreadLocalMap();\n-\n@@ -810,0 +801,39 @@\n+\n+\n+    \/**\n+     * Reads the value of the jdk.traceVirtualThreadLocals property to determine if\n+     * a stack trace should be printed when a virtual thread sets a thread local.\n+     *\/\n+    private static boolean traceVirtualThreadLocals() {\n+        String propValue = GetPropertyAction.privilegedGetProperty(\"jdk.traceVirtualThreadLocals\");\n+        return (propValue != null)\n+                && (propValue.isEmpty() || Boolean.parseBoolean(propValue));\n+    }\n+\n+    \/**\n+     * Print a stack trace if the current thread is a virtual thread.\n+     *\/\n+    static void dumpStackIfVirtualThread() {\n+        if (Thread.currentThread() instanceof VirtualThread vthread) {\n+            try {\n+                var stack = StackWalkerHolder.STACK_WALKER.walk(s ->\n+                        s.skip(1)  \/\/ skip caller\n+                         .collect(Collectors.toList()));\n+\n+                \/\/ switch to carrier thread to avoid recursive use of thread-locals\n+                vthread.executeOnCarrierThread(() -> {\n+                    System.out.println(vthread);\n+                    for (StackWalker.StackFrame frame : stack) {\n+                        System.out.format(\"    %s%n\", frame.toStackTraceElement());\n+                    }\n+                    return null;\n+                });\n+            } catch (Exception e) {\n+                throw new InternalError(e);\n+            }\n+        }\n+    }\n+\n+    private static class StackWalkerHolder {\n+        static final StackWalker STACK_WALKER = StackWalker.getInstance();\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ThreadLocal.java","additions":56,"deletions":26,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+import java.util.concurrent.Callable;\n@@ -43,1 +44,0 @@\n-import jdk.internal.event.ThreadSleepEvent;\n@@ -61,0 +61,1 @@\n+import jdk.internal.vm.annotation.ReservedStackAccess;\n@@ -178,1 +179,1 @@\n-            super(VTHREAD_SCOPE, () -> vthread.run(task));\n+            super(VTHREAD_SCOPE, wrap(vthread, task));\n@@ -187,0 +188,8 @@\n+        private static Runnable wrap(VirtualThread vthread, Runnable task) {\n+            return new Runnable() {\n+                @Hidden\n+                public void run() {\n+                    vthread.run(task);\n+                }\n+            };\n+        }\n@@ -214,1 +223,1 @@\n-        notifyJvmtiMount(true, firstRun);\n+        notifyJvmtiMount(\/*hide*\/true, firstRun);\n@@ -220,1 +229,1 @@\n-                afterTerminate(\/*executed*\/ true);\n+                afterTerminate();\n@@ -294,1 +303,1 @@\n-        notifyJvmtiMount(false, true);\n+        notifyJvmtiMount(\/*hide*\/false, \/*first*\/true);\n@@ -322,1 +331,1 @@\n-                notifyJvmtiUnmount(true, true);\n+                notifyJvmtiUnmount(\/*hide*\/true, \/*last*\/true);\n@@ -344,0 +353,1 @@\n+    @ReservedStackAccess\n@@ -370,0 +380,1 @@\n+    @ReservedStackAccess\n@@ -407,0 +418,14 @@\n+    \/**\n+     * Executes the given value returning task on the current carrier thread.\n+     *\/\n+    @ChangesCurrentThread\n+    <V> V executeOnCarrierThread(Callable<V> task) throws Exception {\n+        assert Thread.currentThread() == this;\n+        switchToCarrierThread();\n+        try {\n+            return task.call();\n+        } finally {\n+            switchToVirtualThread(this);\n+        }\n+     }\n+\n@@ -412,0 +437,1 @@\n+    @Hidden\n@@ -415,1 +441,1 @@\n-        notifyJvmtiUnmount(true, false);\n+        notifyJvmtiUnmount(\/*hide*\/true, \/*last*\/false);\n@@ -422,1 +448,1 @@\n-            notifyJvmtiMount(false, false);\n+            notifyJvmtiMount(\/*hide*\/false, \/*first*\/false);\n@@ -439,1 +465,1 @@\n-            notifyJvmtiUnmount(false, false);\n+            notifyJvmtiUnmount(\/*hide*\/false, \/*last*\/false);\n@@ -455,1 +481,1 @@\n-            notifyJvmtiUnmount(false, false);\n+            notifyJvmtiUnmount(\/*hide*\/false, \/*last*\/false);\n@@ -466,0 +492,8 @@\n+    \/**\n+     * Invoked after the thread terminates execution. It notifies anyone\n+     * waiting for the thread to terminate.\n+     *\/\n+    private void afterTerminate() {\n+        afterTerminate(true, true);\n+    }\n+\n@@ -470,0 +504,1 @@\n+     * @param notifyContainer true if its container should be notified\n@@ -472,1 +507,1 @@\n-    private void afterTerminate(boolean executed) {\n+    private void afterTerminate(boolean notifyContainer, boolean executed) {\n@@ -476,1 +511,1 @@\n-            notifyJvmtiUnmount(false, true);\n+            notifyJvmtiUnmount(\/*hide*\/false, \/*last*\/true);\n@@ -486,2 +521,2 @@\n-        if (executed) {\n-            \/\/ notify container if thread executed\n+        \/\/ notify container\n+        if (notifyContainer) {\n@@ -489,3 +524,0 @@\n-\n-            \/\/ clear references to thread locals\n-            clearReferences();\n@@ -493,0 +525,3 @@\n+\n+        \/\/ clear references to thread locals\n+        clearReferences();\n@@ -509,0 +544,1 @@\n+        assert threadContainer() == null;\n@@ -512,0 +548,1 @@\n+        boolean addedToContainer = false;\n@@ -513,1 +550,0 @@\n-        container.onStart(this); \/\/ may throw\n@@ -515,0 +551,3 @@\n+            container.onStart(this);  \/\/ may throw\n+            addedToContainer = true;\n+\n@@ -524,2 +563,1 @@\n-                container.onExit(this);\n-                afterTerminate(\/*executed*\/ false);\n+                afterTerminate(addedToContainer, \/*executed*\/false);\n@@ -554,0 +592,1 @@\n+        boolean yielded = false;\n@@ -556,4 +595,1 @@\n-            if (!yieldContinuation()) {\n-                \/\/ park on the carrier thread when pinned\n-                parkOnCarrierThread(false, 0);\n-            }\n+            yielded = yieldContinuation();  \/\/ may throw\n@@ -561,1 +597,10 @@\n-            assert (Thread.currentThread() == this) && (state() == RUNNING);\n+            assert (Thread.currentThread() == this) && (yielded == (state() == RUNNING));\n+            if (!yielded) {\n+                assert state() == PARKING;\n+                setState(RUNNING);\n+            }\n+        }\n+\n+        \/\/ park on the carrier thread when pinned\n+        if (!yielded) {\n+            parkOnCarrierThread(false, 0);\n@@ -585,1 +630,1 @@\n-            boolean yielded;\n+            boolean yielded = false;\n@@ -589,1 +634,1 @@\n-                yielded = yieldContinuation();\n+                yielded = yieldContinuation();  \/\/ may throw\n@@ -591,2 +636,5 @@\n-                assert (Thread.currentThread() == this)\n-                        && (state() == RUNNING || state() == PARKING);\n+                assert (Thread.currentThread() == this) && (yielded == (state() == RUNNING));\n+                if (!yielded) {\n+                    assert state() == PARKING;\n+                    setState(RUNNING);\n+                }\n@@ -614,1 +662,1 @@\n-        assert state() == PARKING;\n+        assert state() == RUNNING;\n@@ -616,2 +664,7 @@\n-        var pinnedEvent = new VirtualThreadPinnedEvent();\n-        pinnedEvent.begin();\n+        VirtualThreadPinnedEvent event;\n+        try {\n+            event = new VirtualThreadPinnedEvent();\n+            event.begin();\n+        } catch (OutOfMemoryError e) {\n+            event = null;\n+        }\n@@ -635,1 +688,7 @@\n-        pinnedEvent.commit();\n+        if (event != null) {\n+            try {\n+                event.commit();\n+            } catch (OutOfMemoryError e) {\n+                \/\/ ignore\n+            }\n+        }\n@@ -710,0 +769,1 @@\n+        boolean yielded = false;\n@@ -711,1 +771,1 @@\n-            yieldContinuation();\n+            yielded = yieldContinuation();  \/\/ may throw\n@@ -713,2 +773,2 @@\n-            assert Thread.currentThread() == this;\n-            if (state() != RUNNING) {\n+            assert (Thread.currentThread() == this) && (yielded == (state() == RUNNING));\n+            if (!yielded) {\n@@ -721,24 +781,0 @@\n-    \/**\n-     * Sleep the current virtual thread for the given sleep time.\n-     *\n-     * @param nanos the maximum number of nanoseconds to sleep\n-     * @throws InterruptedException if interrupted while sleeping\n-     *\/\n-    void sleepNanos(long nanos) throws InterruptedException {\n-        assert Thread.currentThread() == this;\n-        if (nanos >= 0) {\n-            if (ThreadSleepEvent.isTurnedOn()) {\n-                ThreadSleepEvent event = new ThreadSleepEvent();\n-                try {\n-                    event.time = nanos;\n-                    event.begin();\n-                    doSleepNanos(nanos);\n-                } finally {\n-                    event.commit();\n-                }\n-            } else {\n-                doSleepNanos(nanos);\n-            }\n-        }\n-    }\n-\n@@ -754,0 +790,3 @@\n+     *\n+     * @param nanos the maximum number of nanoseconds to sleep\n+     * @throws InterruptedException if interrupted while sleeping\n@@ -755,2 +794,2 @@\n-    private void doSleepNanos(long nanos) throws InterruptedException {\n-        assert nanos >= 0;\n+    void sleepNanos(long nanos) throws InterruptedException {\n+        assert Thread.currentThread() == this && nanos >= 0;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/VirtualThread.java","additions":102,"deletions":63,"binary":false,"changes":165,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,2 +61,2 @@\n-        MethodHandle handle = (MethodHandle) underlying.resolveConstantDesc(lookup);\n-        MethodType methodType = (MethodType) type.resolveConstantDesc(lookup);\n+        MethodHandle handle = underlying.resolveConstantDesc(lookup);\n+        MethodType methodType = type.resolveConstantDesc(lookup);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/AsTypeMethodHandleDesc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.lang.invoke.MethodHandles;\n@@ -365,0 +366,3 @@\n+    @Override\n+    Class<?> resolveConstantDesc(MethodHandles.Lookup lookup) throws ReflectiveOperationException;\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ClassDesc.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,3 +102,3 @@\n-     * @apiNote {@linkplain MethodTypeDesc} can represent method type descriptors\n-     * that are not representable by {@linkplain MethodType}, such as methods with\n-     * more than 255 parameter slots, so attempts to resolve these may result in errors.\n+     * @apiNote Some constant descriptors, such as {@linkplain MethodTypeDesc}, can represent\n+     * a value that is not representable by run-time entities. Attempts to resolve these may\n+     * result in errors.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ConstantDesc.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -215,1 +215,1 @@\n-    \/** {@link MethodHandleDesc} representing {@link ConstantBootstraps#staticFieldVarHandle(Lookup, String, Class, Class, Class) ConstantBootstraps.staticVarHandle} *\/\n+    \/** {@link MethodHandleDesc} representing {@link ConstantBootstraps#staticFieldVarHandle(Lookup, String, Class, Class, Class) ConstantBootstraps.staticFieldVarHandle} *\/\n@@ -231,1 +231,1 @@\n-     * {@link MethodHandleDesc} representing {@link ConstantBootstraps#explicitCast(Lookup, String, Class, Object)} ConstantBootstraps.explicitCast}\n+     * {@link MethodHandleDesc} representing {@link ConstantBootstraps#explicitCast(Lookup, String, Class, Object) ConstantBootstraps.explicitCast}\n@@ -266,1 +266,1 @@\n-     * {@link MethodHandleDesc} representing {@link MethodHandles#classData(Lookup, String, Class)} MethodHandles.classData}\n+     * {@link MethodHandleDesc} representing {@link MethodHandles#classData(Lookup, String, Class) MethodHandles.classData}\n@@ -274,1 +274,1 @@\n-     * {@link MethodHandleDesc} representing {@link MethodHandles#classDataAt(Lookup, String, Class, int)} MethodHandles.classDataAt}\n+     * {@link MethodHandleDesc} representing {@link MethodHandles#classDataAt(Lookup, String, Class, int) MethodHandles.classDataAt}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/ConstantDescs.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,2 +155,2 @@\n-        Class<?> resolvedOwner = (Class<?>) owner.resolveConstantDesc(lookup);\n-        MethodType invocationType = (MethodType) this.invocationType().resolveConstantDesc(lookup);\n+        Class<?> resolvedOwner = owner.resolveConstantDesc(lookup);\n+        MethodType invocationType = this.invocationType().resolveConstantDesc(lookup);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/DirectMethodHandleDescImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-        MethodHandle bsm = (MethodHandle) bootstrapMethod.resolveConstantDesc(lookup);\n+        MethodHandle bsm = bootstrapMethod.resolveConstantDesc(lookup);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/DynamicCallSiteDesc.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n-            MethodHandle bsm = (MethodHandle) bootstrapMethod.resolveConstantDesc(lookup);\n+            MethodHandle bsm = bootstrapMethod.resolveConstantDesc(lookup);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/DynamicConstantDesc.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -207,0 +207,3 @@\n+    @Override\n+    MethodHandle resolveConstantDesc(MethodHandles.Lookup lookup) throws ReflectiveOperationException;\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/MethodHandleDesc.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import java.lang.invoke.MethodHandles;\n@@ -191,0 +192,10 @@\n+    \/**\n+     * {@inheritDoc}\n+     *\n+     * @apiNote {@linkplain MethodTypeDesc} can represent method type descriptors\n+     * that are not representable by {@linkplain MethodType}, such as methods with\n+     * more than 255 parameter slots, so attempts to resolve these may result in errors.\n+     *\/\n+    @Override\n+    MethodType resolveConstantDesc(MethodHandles.Lookup lookup) throws ReflectiveOperationException;\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/MethodTypeDesc.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -430,1 +430,1 @@\n-    public static String getDefaultType() {\n+    public static final String getDefaultType() {\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/CertStore.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -462,3 +462,5 @@\n-     * of the week.  This field takes values {@code SUNDAY},\n-     * {@code MONDAY}, {@code TUESDAY}, {@code WEDNESDAY},\n-     * {@code THURSDAY}, {@code FRIDAY}, and {@code SATURDAY}.\n+     * of the week. If the calendar is non-lenient, this field takes values\n+     * {@code SUNDAY}, {@code MONDAY}, {@code TUESDAY}, {@code WEDNESDAY},\n+     * {@code THURSDAY}, {@code FRIDAY}, and {@code SATURDAY}. Otherwise, any\n+     * int values are accepted and normalized to one of the previously\n+     * mentioned values.\n@@ -1635,0 +1637,1 @@\n+     * @throws NullPointerException if {@code zone} is {@code null}\n@@ -1652,0 +1655,1 @@\n+     * @throws NullPointerException if {@code aLocale} is {@code null}\n@@ -1666,0 +1670,1 @@\n+     * @throws NullPointerException if {@code zone} or {@code aLocale} is {@code null}\n","filename":"src\/java.base\/share\/classes\/java\/util\/Calendar.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -602,0 +602,1 @@\n+     * @throws NullPointerException if {@code zone} is {@code null}\n@@ -612,0 +613,1 @@\n+     * @throws NullPointerException if {@code aLocale} is {@code null}\n@@ -624,0 +626,1 @@\n+     * @throws NullPointerException if {@code zone} or {@code aLocale} is {@code null}\n","filename":"src\/java.base\/share\/classes\/java\/util\/GregorianCalendar.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,1 +49,0 @@\n-import jdk.internal.javac.PreviewFeature;\n@@ -252,1 +251,1 @@\n-     * @since 19\n+     * @since 21\n@@ -254,1 +253,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n@@ -268,2 +266,1 @@\n-     * @throws UnsupportedOperationException if preview features are not enabled\n-     * @since 19\n+     * @since 21\n@@ -271,1 +268,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/Executors.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -328,1 +328,1 @@\n-            extends CompletableFuture<T> implements Runnable {\n+            extends FutureTask<T> implements Runnable {\n@@ -331,1 +331,0 @@\n-        final Callable<T> task;\n@@ -335,0 +334,1 @@\n+            super(task);\n@@ -336,1 +336,0 @@\n-            this.task = task;\n@@ -345,22 +344,2 @@\n-        public void run() {\n-            if (Thread.currentThread() != thread) {\n-                \/\/ should not happen except where something casts this object\n-                \/\/ to a Runnable and invokes the run method.\n-                throw new WrongThreadException();\n-            }\n-            try {\n-                T result = task.call();\n-                complete(result);\n-            } catch (Throwable e) {\n-                completeExceptionally(e);\n-            } finally {\n-                executor.taskComplete(thread);\n-            }\n-        }\n-\n-        @Override\n-        public boolean cancel(boolean mayInterruptIfRunning) {\n-            boolean cancelled = super.cancel(mayInterruptIfRunning);\n-            if (cancelled && mayInterruptIfRunning)\n-                thread.interrupt();\n-            return cancelled;\n+        protected void done() {\n+            executor.taskComplete(thread);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ThreadPerTaskExecutor.java","additions":5,"deletions":26,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,0 +210,7 @@\n+    \/**\n+     * The 'JAR index' feature has been removed, but JarInputStream and\n+     * JarVerifier's verification of signed jars still need to be\n+     * able to skip this entry.\n+     *\/\n+    static final String INDEX_NAME = \"META-INF\/INDEX.LIST\";\n+\n@@ -215,1 +222,0 @@\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarFile.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import jdk.internal.util.jar.JarIndex;\n@@ -188,1 +187,1 @@\n-            if (first.getName().equalsIgnoreCase(JarIndex.INDEX_NAME))\n+            if (first.getName().equalsIgnoreCase(JarFile.INDEX_NAME))\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarInputStream.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-import jdk.internal.util.jar.JarIndex;\n@@ -149,1 +148,1 @@\n-                        uname.equals(JarIndex.INDEX_NAME)) {\n+                        uname.equals(JarFile.INDEX_NAME)) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarVerifier.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    public static String getDefaultAlgorithm() {\n+    public static final String getDefaultAlgorithm() {\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/KeyManagerFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,1 +78,1 @@\n-    public static String getDefaultAlgorithm() {\n+    public static final String getDefaultAlgorithm() {\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/TrustManagerFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-        @JEP(number=436, title=\"Virtual Threads\", status=\"Second Preview\")\n+        \/\/ not used\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/javac\/PreviewFeature.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,2 +74,0 @@\n-import jdk.internal.util.jar.InvalidJarIndexError;\n-import jdk.internal.util.jar.JarIndex;\n@@ -94,1 +92,0 @@\n-    private static final boolean ENABLE_JAR_INDEX;\n@@ -114,3 +111,0 @@\n-\n-        p = props.getProperty(\"jdk.net.URLClassPath.enableJarIndex\");\n-        ENABLE_JAR_INDEX = p != null ? p.equals(\"true\") || p.isEmpty() : false;\n@@ -717,1 +711,0 @@\n-        private JarIndex index;\n@@ -782,25 +775,0 @@\n-                                if (!ENABLE_JAR_INDEX) {\n-                                    return null;\n-                                }\n-                                index = JarIndex.getJarIndex(jar);\n-                                if (index != null) {\n-                                    String[] jarfiles = index.getJarFiles();\n-                                \/\/ Add all the dependent URLs to the lmap so that loaders\n-                                \/\/ will not be created for them by URLClassPath.getLoader(int)\n-                                \/\/ if the same URL occurs later on the main class path.  We set\n-                                \/\/ Loader to null here to avoid creating a Loader for each\n-                                \/\/ URL until we actually need to try to load something from them.\n-                                    for (int i = 0; i < jarfiles.length; i++) {\n-                                        try {\n-                                            @SuppressWarnings(\"deprecation\")\n-                                            URL jarURL = new URL(csu, jarfiles[i]);\n-                                            \/\/ If a non-null loader already exists, leave it alone.\n-                                            String urlNoFragString = URLUtil.urlNoFragString(jarURL);\n-                                            if (!lmap.containsKey(urlNoFragString)) {\n-                                                lmap.put(urlNoFragString, null);\n-                                            }\n-                                        } catch (MalformedURLException e) {\n-                                            continue;\n-                                        }\n-                                    }\n-                                }\n@@ -850,12 +818,0 @@\n-        \/*\n-         * Returns the index of this JarLoader if it exists.\n-         *\/\n-        JarIndex getIndex() {\n-            try {\n-                ensureOpen();\n-            } catch (IOException e) {\n-                throw new InternalError(e);\n-            }\n-            return index;\n-        }\n-\n@@ -971,105 +927,0 @@\n-            if (index == null)\n-                return null;\n-\n-            HashSet<String> visited = new HashSet<>();\n-            return getResource(name, check, visited);\n-        }\n-\n-        \/*\n-         * Version of getResource() that tracks the jar files that have been\n-         * visited by linking through the index files. This helper method uses\n-         * a HashSet to store the URLs of jar files that have been searched and\n-         * uses it to avoid going into an infinite loop, looking for a\n-         * non-existent resource.\n-         *\/\n-        @SuppressWarnings(\"removal\")\n-        Resource getResource(final String name, boolean check,\n-                             Set<String> visited) {\n-            Resource res;\n-            String[] jarFiles;\n-            int count = 0;\n-            List<String> jarFilesList;\n-\n-            \/* If there no jar files in the index that can potential contain\n-             * this resource then return immediately.\n-             *\/\n-            if ((jarFilesList = index.get(name)) == null)\n-                return null;\n-\n-            do {\n-                int size = jarFilesList.size();\n-                jarFiles = jarFilesList.toArray(new String[size]);\n-                \/* loop through the mapped jar file list *\/\n-                while (count < size) {\n-                    String jarName = jarFiles[count++];\n-                    JarLoader newLoader;\n-                    final URL url;\n-\n-                    try{\n-                        @SuppressWarnings(\"deprecation\")\n-                        var _unused = url = new URL(csu, jarName);\n-                        String urlNoFragString = URLUtil.urlNoFragString(url);\n-                        if ((newLoader = (JarLoader)lmap.get(urlNoFragString)) == null) {\n-                            \/* no loader has been set up for this jar file\n-                             * before\n-                             *\/\n-                            newLoader = AccessController.doPrivileged(\n-                                new PrivilegedExceptionAction<>() {\n-                                    public JarLoader run() throws IOException {\n-                                        return new JarLoader(url, handler,\n-                                            lmap, acc);\n-                                    }\n-                                }, acc);\n-\n-                            \/* this newly opened jar file has its own index,\n-                             * merge it into the parent's index, taking into\n-                             * account the relative path.\n-                             *\/\n-                            JarIndex newIndex = newLoader.getIndex();\n-                            if (newIndex != null) {\n-                                int pos = jarName.lastIndexOf('\/');\n-                                newIndex.merge(this.index, (pos == -1 ?\n-                                    null : jarName.substring(0, pos + 1)));\n-                            }\n-\n-                            \/* put it in the global hashtable *\/\n-                            lmap.put(urlNoFragString, newLoader);\n-                        }\n-                    } catch (PrivilegedActionException | MalformedURLException e) {\n-                        continue;\n-                    }\n-\n-                    \/* Note that the addition of the url to the list of visited\n-                     * jars incorporates a check for presence in the hashmap\n-                     *\/\n-                    boolean visitedURL = !visited.add(URLUtil.urlNoFragString(url));\n-                    if (!visitedURL) {\n-                        try {\n-                            newLoader.ensureOpen();\n-                        } catch (IOException e) {\n-                            throw new InternalError(e);\n-                        }\n-                        final JarEntry entry = newLoader.jar.getJarEntry(name);\n-                        if (entry != null) {\n-                            return newLoader.checkResource(name, check, entry);\n-                        }\n-\n-                        \/* Verify that at least one other resource with the\n-                         * same package name as the lookedup resource is\n-                         * present in the new jar\n-                         *\/\n-                        if (!newLoader.validIndex(name)) {\n-                            \/* the mapping is wrong *\/\n-                            throw new InvalidJarIndexError(\"Invalid index\");\n-                        }\n-                    }\n-\n-                    \/* If newLoader is the current loader or if it is a\n-                     * loader that has already been searched or if the new\n-                     * loader does not have an index then skip it\n-                     * and move on to the next loader.\n-                     *\/\n-                    if (visitedURL || newLoader == this ||\n-                            newLoader.getIndex() == null) {\n-                        continue;\n-                    }\n@@ -1077,13 +928,0 @@\n-                    \/* Process the index of the new loader\n-                     *\/\n-                    if ((res = newLoader.getResource(name, check, visited))\n-                            != null) {\n-                        return res;\n-                    }\n-                }\n-                \/\/ Get the list of jar files again as the list could have grown\n-                \/\/ due to merging of index files.\n-                jarFilesList = index.get(name);\n-\n-            \/\/ If the count is unchanged, we are done.\n-            } while (count < jarFilesList.size());\n@@ -1093,1 +931,0 @@\n-\n@@ -1099,4 +936,0 @@\n-            if (index != null) {\n-                return null;\n-            }\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/URLClassPath.java","additions":1,"deletions":168,"binary":false,"changes":169,"status":"modified"},{"patch":"@@ -1,55 +0,0 @@\n-\/*\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.util.jar;\n-\n-\/**\n- * Thrown if the URLClassLoader finds the INDEX.LIST file of\n- * a jar file contains incorrect information.\n- *\n- * @since 9\n- *\/\n-\n-public class InvalidJarIndexError extends Error {\n-\n-    @java.io.Serial\n-    static final long serialVersionUID = 0L;\n-\n-    \/**\n-     * Constructs an {@code InvalidJarIndexError} with no detail message.\n-     *\/\n-    public InvalidJarIndexError() {\n-        super();\n-    }\n-\n-    \/**\n-     * Constructs an {@code InvalidJarIndexError} with the specified detail message.\n-     *\n-     * @param   s   the detail message.\n-     *\/\n-    public InvalidJarIndexError(String s) {\n-        super(s);\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/InvalidJarIndexError.java","additions":0,"deletions":55,"binary":false,"changes":55,"status":"deleted"},{"patch":"@@ -1,333 +0,0 @@\n-\/*\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.internal.util.jar;\n-\n-import sun.nio.cs.UTF_8;\n-\n-import java.io.*;\n-import java.util.*;\n-import java.util.jar.*;\n-import java.util.zip.*;\n-\n-import static sun.security.action.GetPropertyAction.privilegedGetProperty;\n-\n-\/**\n- * This class is used to maintain mappings from packages, classes\n- * and resources to their enclosing JAR files. Mappings are kept\n- * at the package level except for class or resource files that\n- * are located at the root directory. URLClassLoader uses the mapping\n- * information to determine where to fetch an extension class or\n- * resource from.\n- *\n- * @author  Zhenghua Li\n- * @since   1.3\n- *\/\n-\n-public class JarIndex {\n-\n-    \/**\n-     * The hash map that maintains mappings from\n-     * package\/class\/resource to jar file list(s)\n-     *\/\n-    private final HashMap<String, List<String>> indexMap;\n-\n-    \/**\n-     * The hash map that maintains mappings from\n-     * jar file to package\/class\/resource lists\n-     *\/\n-    private final HashMap<String, List<String>> jarMap;\n-\n-    \/*\n-     * An ordered list of jar file names.\n-     *\/\n-    private String[] jarFiles;\n-\n-    \/**\n-     * The index file name.\n-     *\/\n-    public static final String INDEX_NAME = \"META-INF\/INDEX.LIST\";\n-\n-    \/**\n-     * true if, and only if, sun.misc.JarIndex.metaInfFilenames is set to true.\n-     * If true, the names of the files in META-INF, and its subdirectories, will\n-     * be added to the index. Otherwise, just the directory names are added.\n-     *\/\n-    private static final boolean metaInfFilenames =\n-        \"true\".equals(privilegedGetProperty(\"sun.misc.JarIndex.metaInfFilenames\"));\n-\n-    \/**\n-     * Constructs a new, empty jar index.\n-     *\/\n-    public JarIndex() {\n-        indexMap = new HashMap<>();\n-        jarMap = new HashMap<>();\n-    }\n-\n-    \/**\n-     * Constructs a new index from the specified input stream.\n-     *\n-     * @param is the input stream containing the index data\n-     *\/\n-    public JarIndex(InputStream is) throws IOException {\n-        this();\n-        read(is);\n-    }\n-\n-    \/**\n-     * Constructs a new index for the specified list of jar files.\n-     *\n-     * @param files the list of jar files to construct the index from.\n-     *\/\n-    public JarIndex(String[] files) throws IOException {\n-        this();\n-        this.jarFiles = files;\n-        parseJars(files);\n-    }\n-\n-    \/**\n-     * Returns the jar index, or <code>null<\/code> if none.\n-     *\n-     * @param jar the JAR file to get the index from.\n-     * @exception IOException if an I\/O error has occurred.\n-     *\/\n-    public static JarIndex getJarIndex(JarFile jar) throws IOException {\n-        JarIndex index = null;\n-        JarEntry e = jar.getJarEntry(INDEX_NAME);\n-        \/\/ if found, then load the index\n-        if (e != null) {\n-            index = new JarIndex(jar.getInputStream(e));\n-        }\n-        return index;\n-    }\n-\n-    \/**\n-     * Returns the jar files that are defined in this index.\n-     *\/\n-    public String[] getJarFiles() {\n-        return jarFiles;\n-    }\n-\n-    \/*\n-     * Add the key, value pair to the hashmap, the value will\n-     * be put in a list which is created if necessary.\n-     *\/\n-    private void addToList(String key, String value,\n-                           HashMap<String, List<String>> t) {\n-        List<String> list = t.get(key);\n-        if (list == null) {\n-            list = new ArrayList<>(1);\n-            list.add(value);\n-            t.put(key, list);\n-        } else if (!list.contains(value)) {\n-            list.add(value);\n-        }\n-    }\n-\n-    \/**\n-     * Returns the list of jar files that are mapped to the file.\n-     *\n-     * @param fileName the key of the mapping\n-     *\/\n-    public List<String> get(String fileName) {\n-        List<String> jarFiles;\n-        if ((jarFiles = indexMap.get(fileName)) == null) {\n-            \/* try the package name again *\/\n-            int pos;\n-            if((pos = fileName.lastIndexOf('\/')) != -1) {\n-                jarFiles = indexMap.get(fileName.substring(0, pos));\n-            }\n-        }\n-        return jarFiles;\n-    }\n-\n-    \/**\n-     * Add the mapping from the specified file to the specified\n-     * jar file. If there were no mapping for the package of the\n-     * specified file before, a new list will be created,\n-     * the jar file is added to the list and a new mapping from\n-     * the package to the jar file list is added to the hashmap.\n-     * Otherwise, the jar file will be added to the end of the\n-     * existing list.\n-     *\n-     * @param fileName the file name\n-     * @param jarName the jar file that the file is mapped to\n-     *\n-     *\/\n-    public void add(String fileName, String jarName) {\n-        String packageName;\n-        int pos;\n-        if((pos = fileName.lastIndexOf('\/')) != -1) {\n-            packageName = fileName.substring(0, pos);\n-        } else {\n-            packageName = fileName;\n-        }\n-\n-        addMapping(packageName, jarName);\n-    }\n-\n-    \/**\n-     * Same as add(String,String) except that it doesn't strip off from the\n-     * last index of '\/'. It just adds the jarItem (filename or package)\n-     * as it is received.\n-     *\/\n-    private void addMapping(String jarItem, String jarName) {\n-        \/\/ add the mapping to indexMap\n-        addToList(jarItem, jarName, indexMap);\n-\n-        \/\/ add the mapping to jarMap\n-        addToList(jarName, jarItem, jarMap);\n-     }\n-\n-    \/**\n-     * Go through all the jar files and construct the\n-     * index table.\n-     *\/\n-    private void parseJars(String[] files) throws IOException {\n-        if (files == null) {\n-            return;\n-        }\n-\n-        String currentJar = null;\n-\n-        for (int i = 0; i < files.length; i++) {\n-            currentJar = files[i];\n-            ZipFile zrf = new ZipFile(currentJar.replace\n-                                      ('\/', File.separatorChar));\n-\n-            Enumeration<? extends ZipEntry> entries = zrf.entries();\n-            while(entries.hasMoreElements()) {\n-                ZipEntry entry = entries.nextElement();\n-                String fileName = entry.getName();\n-\n-                \/\/ Skip the META-INF directory, the index, and manifest.\n-                \/\/ Any files in META-INF\/ will be indexed explicitly\n-                if (fileName.equals(\"META-INF\/\") ||\n-                    fileName.equals(INDEX_NAME) ||\n-                    fileName.equals(JarFile.MANIFEST_NAME) ||\n-                    fileName.startsWith(\"META-INF\/versions\/\"))\n-                    continue;\n-\n-                if (!metaInfFilenames || !fileName.startsWith(\"META-INF\/\")) {\n-                    add(fileName, currentJar);\n-                } else if (!entry.isDirectory()) {\n-                        \/\/ Add files under META-INF explicitly so that certain\n-                        \/\/ services, like ServiceLoader, etc, can be located\n-                        \/\/ with greater accuracy. Directories can be skipped\n-                        \/\/ since each file will be added explicitly.\n-                        addMapping(fileName, currentJar);\n-                }\n-            }\n-\n-            zrf.close();\n-        }\n-    }\n-\n-    \/**\n-     * Writes the index to the specified OutputStream\n-     *\n-     * @param out the output stream\n-     * @exception IOException if an I\/O error has occurred\n-     *\/\n-    public void write(OutputStream out) throws IOException {\n-        BufferedWriter bw = new BufferedWriter\n-            (new OutputStreamWriter(out, UTF_8.INSTANCE));\n-        bw.write(\"JarIndex-Version: 1.0\\n\\n\");\n-\n-        if (jarFiles != null) {\n-            for (int i = 0; i < jarFiles.length; i++) {\n-                \/* print out the jar file name *\/\n-                String jar = jarFiles[i];\n-                bw.write(jar + \"\\n\");\n-                List<String> jarlist = jarMap.get(jar);\n-                if (jarlist != null) {\n-                    for (String s : jarlist) {\n-                        bw.write(s + \"\\n\");\n-                    }\n-                }\n-                bw.write(\"\\n\");\n-            }\n-            bw.flush();\n-        }\n-    }\n-\n-\n-    \/**\n-     * Reads the index from the specified InputStream.\n-     *\n-     * @param is the input stream\n-     * @exception IOException if an I\/O error has occurred\n-     *\/\n-    public void read(InputStream is) throws IOException {\n-        BufferedReader br = new BufferedReader\n-            (new InputStreamReader(is, UTF_8.INSTANCE));\n-        String line;\n-        String currentJar = null;\n-\n-        \/* an ordered list of jar file names *\/\n-        ArrayList<String> jars = new ArrayList<>();\n-\n-        \/* read until we see a .jar line *\/\n-        while((line = br.readLine()) != null && !line.endsWith(\".jar\"));\n-\n-        for(;line != null; line = br.readLine()) {\n-            if (line.isEmpty())\n-                continue;\n-\n-            if (line.endsWith(\".jar\")) {\n-                currentJar = line;\n-                jars.add(currentJar);\n-            } else {\n-                String name = line;\n-                addMapping(name, currentJar);\n-            }\n-        }\n-\n-        jarFiles = jars.toArray(new String[jars.size()]);\n-    }\n-\n-    \/**\n-     * Merges the current index into another index, taking into account\n-     * the relative path of the current index.\n-     *\n-     * @param toIndex The destination index which the current index will\n-     *                merge into.\n-     * @param path    The relative path of the this index to the destination\n-     *                index.\n-     *\n-     *\/\n-    public void merge(JarIndex toIndex, String path) {\n-        for (Map.Entry<String, List<String>> e : indexMap.entrySet()) {\n-            String packageName = e.getKey();\n-            List<String> from_list = e.getValue();\n-            for (String jarName : from_list) {\n-                if (path != null) {\n-                    jarName = path.concat(jarName);\n-                }\n-                toIndex.addMapping(packageName, jarName);\n-            }\n-        }\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/jar\/JarIndex.java","additions":0,"deletions":333,"binary":false,"changes":333,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import jdk.internal.misc.PreviewFeatures;\n@@ -39,0 +38,1 @@\n+import jdk.internal.vm.annotation.Hidden;\n@@ -50,1 +50,0 @@\n-        PreviewFeatures.ensureEnabled();\n@@ -306,0 +305,1 @@\n+    @Hidden\n@@ -318,0 +318,1 @@\n+    @Hidden\n@@ -319,1 +320,1 @@\n-      target.run();\n+        target.run();\n@@ -341,0 +342,1 @@\n+    @Hidden\n@@ -352,0 +354,1 @@\n+    @Hidden\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/Continuation.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,1 +151,0 @@\n-        java.management, \/\/ participates in preview features\n@@ -153,1 +152,0 @@\n-        jdk.incubator.concurrent, \/\/ participates in preview features\n@@ -156,4 +154,1 @@\n-        jdk.jdi,\n-        jdk.jfr,\n-        jdk.jshell,\n-        jdk.management;\n+        jdk.jshell;\n@@ -277,2 +272,0 @@\n-    exports jdk.internal.util.jar to\n-        jdk.jartool;\n@@ -286,1 +279,6 @@\n-        java.desktop;\n+        java.desktop,\n+        java.prefs,\n+        java.security.jgss,\n+        java.smartcardio,\n+        jdk.charsets,\n+        jdk.net;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-public class PKCS8Key implements PrivateKey {\n+public class PKCS8Key implements PrivateKey, InternalPrivateKey {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS8Key.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -266,0 +266,6 @@\n+            if (contentLen == 0) {\n+                \/\/ From RFC 8446: \"Implementations MUST NOT send zero-length fragments\n+                \/\/ of Handshake types, even if those fragments contain padding.\"\n+                throw new SSLProtocolException(\"Handshake packets must not be zero-length\");\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineInputRecord.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -287,0 +287,6 @@\n+            if (contentLen == 0) {\n+                \/\/ From RFC 8446: \"Implementations MUST NOT send zero-length fragments\n+                \/\/ of Handshake types, even if those fragments contain padding.\"\n+                throw new SSLProtocolException(\"Handshake fragments must not be zero length.\");\n+            }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package sun.security.util;\n+\n+import java.security.PublicKey;\n+\n+\/**\n+ * Extra private methods on a private key.\n+ *\/\n+public interface InternalPrivateKey {\n+    \/**\n+     * Calculates a matching public key.\n+     * @return the public key\n+     * @throws UnsupportedOperationException if not supported\n+     *\/\n+    default PublicKey calculatePublicKey() {\n+        throw new UnsupportedOperationException();\n+    }\n+}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/InternalPrivateKey.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -53,0 +53,2 @@\n+    permission java.lang.RuntimePermission\n+                   \"accessClassInPackage.jdk.internal.util\";\n@@ -121,0 +123,2 @@\n+    permission java.lang.RuntimePermission\n+                   \"accessClassInPackage.jdk.internal.util\";\n","filename":"src\/java.base\/share\/lib\/security\/default.policy","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1995,0 +1995,1 @@\n+#define JNI_VERSION_21  0x00150000\n","filename":"src\/java.base\/share\/native\/include\/jni.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -817,1 +817,1 @@\n-InitLauncher(boolean javaw)\n+InitLauncher(jboolean javaw)\n","filename":"src\/java.base\/windows\/native\/libjli\/java_md.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,6 @@\n+- (void) createDisplayLink {\n+    CVDisplayLinkCreateWithActiveCGDisplays(&displayLink);\n+    CVDisplayLinkSetOutputCallback(displayLink, &displayLinkCallback, (__bridge void*)self);\n+    self.displayLinkCount = 0;\n+}\n+\n@@ -77,3 +83,12 @@\n-    CVDisplayLinkCreateWithActiveCGDisplays(&displayLink);\n-    CVDisplayLinkSetOutputCallback(displayLink, &displayLinkCallback, (__bridge void*)self);\n-    self.displayLinkCount = 0;\n+    [self createDisplayLink];\n+\n+    [[[NSWorkspace sharedWorkspace] notificationCenter]\n+        addObserver : self\n+           selector : @selector(onScreenSleep)\n+               name : NSWorkspaceScreensDidSleepNotification object: NULL];\n+\n+    [[[NSWorkspace sharedWorkspace] notificationCenter]\n+        addObserver : self\n+           selector : @selector(onScreenWakeup)\n+               name : NSWorkspaceScreensDidWakeNotification object: NULL];\n+\n@@ -83,0 +98,17 @@\n+- (void) onScreenSleep {\n+    J2dTraceLn(J2D_TRACE_VERBOSE, \"MTLLayer.onScreenSleep ---  received screen sleep notification.\");\n+\n+    [self stopDisplayLink];\n+}\n+\n+- (void) onScreenWakeup {\n+    J2dTraceLn(J2D_TRACE_VERBOSE, \"MTLLayer.onScreenWakeup ---  received screen wakeup notification.\");\n+    [self stopDisplayLink];\n+    CVDisplayLinkRelease(self.displayLink);\n+    self.displayLink = nil;\n+\n+    [self createDisplayLink];\n+\n+    [self startDisplayLink];\n+}\n+\n@@ -151,0 +183,3 @@\n+\n+    [[[NSWorkspace sharedWorkspace] notificationCenter] removeObserver:self];\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLLayer.m","additions":38,"deletions":3,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -209,1 +209,6 @@\n-        int newExtent = Math.min(newMax - newValue, extent);\n+        int newExtent = 0;\n+        if (((long)newMax - (long)newValue) > (long)newMax) {\n+            newExtent = extent;\n+        } else {\n+            newExtent = Math.min(newMax - newValue, extent);\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DefaultBoundedRangeModel.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -234,1 +234,3 @@\n-    private static final ReentrantLock AWT_LOCK = new ReentrantLock();\n+    @SuppressWarnings(\"removal\")\n+    private static final ReentrantLock AWT_LOCK = new ReentrantLock(\n+            AccessController.doPrivileged(new GetBooleanAction(\"awt.lock.fair\")));\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/SunToolkit.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2640,1 +2640,1 @@\n-     boolean glyphCodes, jfloat x, jfloat y, jfloatArray positions)\n+     jboolean glyphCodes, jfloat x, jfloat y, jfloatArray positions)\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-import jdk.internal.javac.ParticipatesInPreview;\n-\n@@ -40,1 +38,0 @@\n-@ParticipatesInPreview\n","filename":"src\/java.management\/share\/classes\/module-info.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-JavaVM* jvm = NULL;\n+static JavaVM* jvm = NULL;\n","filename":"src\/java.management\/share\/native\/libmanagement\/management.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -662,1 +662,1 @@\n-JNIEXPORT Boolean JNICALL\n+JNIEXPORT jboolean JNICALL\n@@ -685,1 +685,1 @@\n-    Boolean beforeAdd = false;\n+    jboolean beforeAdd = JNI_FALSE;\n@@ -695,1 +695,1 @@\n-    beforeAdd = CFDictionaryContainsKey(parent, child);\n+    beforeAdd = CFDictionaryContainsKey(parent, child) ? JNI_TRUE : JNI_FALSE;\n@@ -698,1 +698,1 @@\n-        beforeAdd = CFDictionaryContainsKey(parent, child);\n+        beforeAdd = CFDictionaryContainsKey(parent, child) ? JNI_TRUE : JNI_FALSE;\n@@ -700,1 +700,1 @@\n-        beforeAdd = false;\n+        beforeAdd = JNI_FALSE;\n","filename":"src\/java.prefs\/macosx\/native\/libprefs\/MacOSXPreferencesFile.m","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -295,9 +297,5 @@\n-        String osName = System.getProperty(\"os.name\");\n-        String platformFactory;\n-        if (osName.startsWith(\"Windows\")) {\n-            platformFactory = \"java.util.prefs.WindowsPreferencesFactory\";\n-        } else if (osName.contains(\"OS X\")) {\n-            platformFactory = \"java.util.prefs.MacOSXPreferencesFactory\";\n-        } else {\n-            platformFactory = \"java.util.prefs.FileSystemPreferencesFactory\";\n-        }\n+        String platformFactory = switch (OperatingSystem.current()) {\n+            case WINDOWS -> \"java.util.prefs.WindowsPreferencesFactory\";\n+            case MACOS -> \"java.util.prefs.MacOSXPreferencesFactory\";\n+            default -> \"java.util.prefs.FileSystemPreferencesFactory\";\n+        };\n","filename":"src\/java.prefs\/share\/classes\/java\/util\/prefs\/Preferences.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -2159,4 +2159,0 @@\n-        \"<b>IsVirtual is a preview API of the Java platform.<\/b> \"\n-        \"<em>Preview features may be removed in a future release, or upgraded to \"\n-        \"permanent features of the Java platform.<\/em> Since JDWP version 19.\"\n-        \"<p>\"\n@@ -2165,0 +2161,1 @@\n+        \"<p>Since JDWP version 21.\"\n@@ -2540,4 +2537,0 @@\n-                        \"<b>PlatformThreadsOnly is a preview API of the Java platform.<\/b> \"\n-                        \"<em>Preview features may be removed in a future release, or upgraded to \"\n-                        \"permanent features of the Java platform.<\/em> Since JDWP version 19.\"\n-                        \"<p>\"\n@@ -2546,0 +2539,1 @@\n+                        \"<p>Since JDWP version 21.\"\n","filename":"src\/java.se\/share\/data\/jdwp\/jdwp.spec","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,0 +33,3 @@\n+\n+import jdk.internal.util.OperatingSystem;\n+import jdk.internal.util.StaticProperty;\n@@ -90,6 +93,5 @@\n-                            String osname = System.getProperty(\"os.name\");\n-                            if (osname.startsWith(\"Linux\")) {\n-                                gssLibs = new String[]{\n-                                    \"libgssapi.so\",\n-                                    \"libgssapi_krb5.so\",\n-                                    \"libgssapi_krb5.so.2\",\n+                            gssLibs = switch (OperatingSystem.current()) {\n+                                case LINUX -> new String[]{\n+                                        \"libgssapi.so\",\n+                                        \"libgssapi_krb5.so\",\n+                                        \"libgssapi_krb5.so.2\",\n@@ -97,12 +99,10 @@\n-                            } else if (osname.contains(\"OS X\")) {\n-                                gssLibs = new String[]{\n-                                    \"libgssapi_krb5.dylib\",\n-                                    \"\/usr\/lib\/sasl2\/libgssapiv2.2.so\",\n-                               };\n-                            } else if (osname.contains(\"Windows\")) {\n-                                \/\/ Full path needed, DLL is in jre\/bin\n-                                gssLibs = new String[]{ System.getProperty(\"java.home\")\n-                                        + \"\\\\bin\\\\sspi_bridge.dll\" };\n-                            } else {\n-                                gssLibs = new String[0];\n-                            }\n+                                case MACOS -> new String[]{\n+                                        \"libgssapi_krb5.dylib\",\n+                                        \"\/usr\/lib\/sasl2\/libgssapiv2.2.so\",\n+                                };\n+                                case WINDOWS -> new String[]{\n+                                        \/\/ Full path needed, DLL is in jre\/bin\n+                                        StaticProperty.javaHome() + \"\\\\bin\\\\sspi_bridge.dll\",\n+                                };\n+                                default -> new String[0];\n+                            };\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/wrapper\/SunNativeProvider.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -162,2 +163,1 @@\n-        String osname = GetPropertyAction.privilegedGetProperty(\"os.name\");\n-        if (!osname.contains(\"OS X\")) {\n+        if (!OperatingSystem.isMacOS()) {\n@@ -895,2 +895,1 @@\n-        String osname = GetPropertyAction.privilegedGetProperty(\"os.name\");\n-        if (osname.startsWith(\"Windows\")) {\n+        if (OperatingSystem.isWindows()) {\n@@ -929,1 +928,1 @@\n-        } else if (osname.contains(\"OS X\")) {\n+        } else if (OperatingSystem.isMacOS()) {\n@@ -1196,2 +1195,1 @@\n-                    String osname = System.getProperty(\"os.name\");\n-                    if (osname.startsWith(\"Windows\")) {\n+                    if (OperatingSystem.isWindows()) {\n@@ -1244,2 +1242,1 @@\n-                    String osname = System.getProperty(\"os.name\");\n-                    if (osname.startsWith(\"Windows\")) {\n+                    if (OperatingSystem.isWindows()) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Config.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-import sun.security.action.GetPropertyAction;\n+import jdk.internal.util.OperatingSystem;\n@@ -42,1 +42,0 @@\n-import java.util.Locale;\n@@ -330,3 +329,2 @@\n-            String os = GetPropertyAction.privilegedGetProperty(\"os.name\");\n-            if (os.toUpperCase(Locale.ENGLISH).startsWith(\"WINDOWS\") ||\n-                    os.toUpperCase(Locale.ENGLISH).contains(\"OS X\")) {\n+            if (OperatingSystem.isWindows() ||\n+                    OperatingSystem.isMacOS()) {\n@@ -533,1 +531,1 @@\n-                                if (System.getProperty(\"os.name\").contains(\"OS X\")) {\n+                                if (OperatingSystem.isMacOS()) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Credentials.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,2 @@\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -50,2 +52,1 @@\n-                    String osname = System.getProperty(\"os.name\");\n-                    if (osname.contains(\"OS X\")) {\n+                    if (OperatingSystem.isMacOS()) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/SCDynamicStoreConfig.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -468,3 +469,0 @@\n-        \/\/ get cache name from system.property\n-        String osname = GetPropertyAction.privilegedGetProperty(\"os.name\");\n-\n@@ -482,1 +480,1 @@\n-        if (osname != null && !osname.startsWith(\"Windows\")) {\n+        if (!OperatingSystem.isWindows()) {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/ccache\/FileCredentialsCache.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,2 @@\n-import java.nio.ByteBuffer;\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n+import jdk.internal.util.OperatingSystem;\n+\n@@ -65,10 +64,0 @@\n-    \/\/ used for platform specific logic\n-    private static final boolean isWindows;\n-\n-    static {\n-        @SuppressWarnings(\"removal\")\n-        final String osName = AccessController.doPrivileged(\n-            (PrivilegedAction<String>) () -> System.getProperty(\"os.name\"));\n-        isWindows = osName.startsWith(\"Windows\");\n-    }\n-\n@@ -91,1 +80,1 @@\n-            connectProtocol = isWindows ? 0 : SCARD_PROTOCOL_RAW;\n+            connectProtocol = OperatingSystem.isWindows() ? 0 : SCARD_PROTOCOL_RAW;\n","filename":"src\/java.smartcardio\/share\/classes\/sun\/security\/smartcardio\/CardImpl.java","additions":4,"deletions":15,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -43,0 +41,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -96,3 +95,0 @@\n-        @SuppressWarnings(\"removal\")\n-        private static final String osName = AccessController.doPrivileged(\n-            (PrivilegedAction<String>) () -> System.getProperty(\"os.name\"));\n@@ -229,1 +225,1 @@\n-            if (osName.startsWith(\"Windows\"))\n+            if (OperatingSystem.isWindows())\n","filename":"src\/jdk.charsets\/share\/classes\/sun\/nio\/cs\/ext\/JISAutoDetect.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-JavaVM* jvm = NULL;\n+JavaVM* jvm_j2pkcs11 = NULL;\n@@ -81,1 +81,1 @@\n-    jvm = vm;\n+    jvm_j2pkcs11 = vm;\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_general.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -218,1 +218,1 @@\n-    if (jvm == NULL) { return rv ;} \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ;} \/* there is no VM running *\/\n@@ -221,1 +221,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -225,1 +225,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -232,1 +232,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -278,1 +278,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n@@ -294,1 +294,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -311,1 +311,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -314,1 +314,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -318,1 +318,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -325,1 +325,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -370,1 +370,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n@@ -386,1 +386,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -403,1 +403,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -406,1 +406,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -410,1 +410,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -417,1 +417,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -458,1 +458,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n@@ -474,1 +474,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -491,1 +491,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -494,1 +494,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -498,1 +498,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -505,1 +505,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -546,1 +546,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_mutex.c","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -643,1 +643,1 @@\n-    extern JavaVM *jvm;\n+    extern JavaVM *jvm_j2pkcs11;\n@@ -661,1 +661,1 @@\n-    if (jvm == NULL) { return rv ; } \/* there is no VM running *\/\n+    if (jvm_j2pkcs11 == NULL) { return rv ; } \/* there is no VM running *\/\n@@ -664,1 +664,1 @@\n-    returnValue = (*jvm)->GetEnv(jvm, (void **) &env, JNI_VERSION_1_2);\n+    returnValue = (*jvm_j2pkcs11)->GetEnv(jvm_j2pkcs11, (void **) &env, JNI_VERSION_1_2);\n@@ -668,1 +668,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -675,1 +675,1 @@\n-        returnValue = (*jvm)->AttachCurrentThread(jvm, (void **) &env, NULL);\n+        returnValue = (*jvm_j2pkcs11)->AttachCurrentThread(jvm_j2pkcs11, (void **) &env, NULL);\n@@ -710,1 +710,1 @@\n-        returnValue = (*jvm)->DetachCurrentThread(jvm);\n+        returnValue = (*jvm_j2pkcs11)->DetachCurrentThread(jvm_j2pkcs11);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_sessmgmt.c","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -194,4 +194,1 @@\n-        Point pub = ops.multiply(ecParams.getGenerator(), privArr);\n-        AffinePoint affPub = pub.asAffine();\n-\n-        PrivateKey privateKey = new ECPrivateKeyImpl(privArr, ecParams);\n+        ECPrivateKeyImpl privateKey = new ECPrivateKeyImpl(privArr, ecParams);\n@@ -200,3 +197,1 @@\n-        ECPoint w = new ECPoint(affPub.getX().asBigInteger(),\n-            affPub.getY().asBigInteger());\n-        PublicKey publicKey = new ECPublicKeyImpl(w, ecParams);\n+        PublicKey publicKey = privateKey.calculatePublicKey();\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECKeyPairGenerator.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+import sun.security.ec.point.AffinePoint;\n+import sun.security.ec.point.MutablePoint;\n@@ -151,1 +153,1 @@\n-    public byte[] getArrayS() {\n+    private byte[] getArrayS0() {\n@@ -155,1 +157,5 @@\n-        return arrayS.clone();\n+        return arrayS;\n+    }\n+\n+    public byte[] getArrayS() {\n+        return getArrayS0().clone();\n@@ -198,0 +204,17 @@\n+\n+    @Override\n+    public PublicKey calculatePublicKey() {\n+        ECParameterSpec ecParams = getParams();\n+        ECOperations ops = ECOperations.forParameters(ecParams)\n+                .orElseThrow(ProviderException::new);\n+        MutablePoint pub = ops.multiply(ecParams.getGenerator(), getArrayS0());\n+        AffinePoint affPub = pub.asAffine();\n+        ECPoint w = new ECPoint(affPub.getX().asBigInteger(),\n+                affPub.getY().asBigInteger());\n+        try {\n+            return new ECPublicKeyImpl(w, ecParams);\n+        } catch (InvalidKeyException e) {\n+            throw new ProviderException(\n+                    \"Unexpected error calculating public key\", e);\n+        }\n+    }\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECPrivateKeyImpl.java","additions":26,"deletions":3,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    private final AlgorithmParameterSpec paramSpec;\n+    private final NamedParameterSpec paramSpec;\n@@ -103,0 +103,14 @@\n+\n+    @Override\n+    public PublicKey calculatePublicKey() {\n+        XECParameters params = paramSpec.getName().equals(\"X25519\")\n+                ? XECParameters.X25519\n+                : XECParameters.X448;\n+        try {\n+            return new XDHPublicKeyImpl(params,\n+                    new XECOperations(params).computePublic(k.clone()));\n+        } catch (InvalidKeyException e) {\n+            throw new ProviderException(\n+                    \"Unexpected error calculating public key\", e);\n+        }\n+    }\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XDHPrivateKeyImpl.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -42,0 +42,3 @@\n+    static final XECParameters X25519;\n+    static final XECParameters X448;\n+\n@@ -117,9 +120,3 @@\n-        try {\n-            BigInteger p = TWO.pow(255).subtract(BigInteger.valueOf(19));\n-            addParameters(255, p, 121665, (byte)0x09, 3,\n-                KnownOIDs.X25519.value(), NamedParameterSpec.X25519.getName(),\n-                bySize, byOid, byName);\n-\n-        } catch (IOException ex) {\n-            \/\/ Unable to set X25519 parameters---it will be disabled\n-        }\n+        BigInteger p2 = TWO.pow(255).subtract(BigInteger.valueOf(19));\n+        X25519 = addParameters(255, p2, 121665, (byte)0x09, 3,\n+            KnownOIDs.X25519, NamedParameterSpec.X25519.getName());\n@@ -128,10 +125,4 @@\n-        try {\n-            BigInteger p = TWO.pow(448).subtract(TWO.pow(224))\n-                .subtract(BigInteger.ONE);\n-            addParameters(448, p, 39081, (byte)0x05, 2,\n-                KnownOIDs.X448.value(), NamedParameterSpec.X448.getName(),\n-                bySize, byOid, byName);\n-\n-        } catch (IOException ex) {\n-            \/\/ Unable to set X448 parameters---it will be disabled\n-        }\n+        BigInteger p4 = TWO.pow(448).subtract(TWO.pow(224))\n+            .subtract(BigInteger.ONE);\n+        X448 = addParameters(448, p4, 39081, (byte)0x05, 2,\n+            KnownOIDs.X448, NamedParameterSpec.X448.getName());\n@@ -142,5 +133,2 @@\n-    private static void addParameters(int bits, BigInteger p, int a24,\n-        byte basePoint, int logCofactor, String objectId, String name,\n-        Map<Integer, XECParameters> bySize,\n-        Map<ObjectIdentifier, XECParameters> byOid,\n-        Map<String, XECParameters> byName) throws IOException {\n+    private static XECParameters addParameters(int bits, BigInteger p, int a24,\n+        byte basePoint, int logCofactor, KnownOIDs koid, String name) {\n@@ -148,1 +136,1 @@\n-        ObjectIdentifier oid = ObjectIdentifier.of(objectId);\n+        ObjectIdentifier oid = ObjectIdentifier.of(koid);\n@@ -152,0 +140,1 @@\n+        return params;\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XECParameters.java","additions":14,"deletions":25,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-import jdk.internal.misc.PreviewFeatures;\n@@ -338,2 +337,0 @@\n-     *\n-     * @throws UnsupportedOperationException if preview features are not enabled\n@@ -342,1 +339,0 @@\n-        PreviewFeatures.ensureEnabled();\n","filename":"src\/jdk.incubator.concurrent\/share\/classes\/jdk\/incubator\/concurrent\/StructuredTaskScope.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-import jdk.internal.javac.ParticipatesInPreview;\n-\n@@ -34,1 +32,0 @@\n-@ParticipatesInPreview\n","filename":"src\/jdk.incubator.concurrent\/share\/classes\/module-info.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -379,2 +379,2 @@\n-     * The behavior of this method is undefined if {@code cpi} does not denote a\n-     * {@code JVM_CONSTANT_InvokeDynamic} entry.\n+     * @throws IllegalArgumentException if {@code cpi} is not an invokedynamic index\n+     * @return the invokedynamic index\n@@ -382,2 +382,2 @@\n-    void resolveInvokeDynamicInPool(HotSpotConstantPool constantPool, int cpi) {\n-        resolveInvokeDynamicInPool(constantPool, constantPool.getConstantPoolPointer(), cpi);\n+    int resolveInvokeDynamicInPool(HotSpotConstantPool constantPool, int cpi) {\n+        return resolveInvokeDynamicInPool(constantPool, constantPool.getConstantPoolPointer(), cpi);\n@@ -386,1 +386,1 @@\n-    private native void resolveInvokeDynamicInPool(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi);\n+    private native int resolveInvokeDynamicInPool(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/CompilerToVM.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -280,16 +280,0 @@\n-    \/**\n-     * Decode a constant pool cache index to a constant pool index.\n-     *\n-     * See {@code ConstantPool::decode_cpcache_index}.\n-     *\n-     * @param index constant pool cache index\n-     * @return decoded index\n-     *\/\n-    private static int decodeConstantPoolCacheIndex(int index) {\n-        if (isInvokedynamicIndex(index)) {\n-            return decodeInvokedynamicIndex(index);\n-        } else {\n-            return index - config().constantPoolCpCacheIndexTag;\n-        }\n-    }\n-\n@@ -880,3 +864,2 @@\n-                index = decodeConstantPoolCacheIndex(cpi);\n-                if (isInvokedynamicIndex(cpi)) {\n-                    compilerToVM().resolveInvokeDynamicInPool(this, index);\n+                if (!isInvokedynamicIndex(cpi)) {\n+                    throw new IllegalArgumentException(\"must use invokedynamic index but got \" + cpi);\n@@ -884,0 +867,1 @@\n+                index = compilerToVM().resolveInvokeDynamicInPool(this, cpi);\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,215 @@\n+\/*\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.tools.jar;\n+\n+\n+import java.io.*;\n+import java.nio.charset.StandardCharsets;\n+import java.util.*;\n+import java.util.jar.*;\n+import java.util.zip.*;\n+\n+\n+\/**\n+ * This class is used to maintain mappings from packages, classes\n+ * and resources to their enclosing JAR files. Mappings are kept\n+ * at the package level except for class or resource files that\n+ * are located at the root directory.\n+ *\n+ * @author Zhenghua Li\n+ * @since 1.3\n+ *\/\n+\n+class JarIndex {\n+\n+    \/**\n+     * The hash map that maintains mappings from\n+     * package\/class\/resource to jar file list(s)\n+     *\/\n+    private final HashMap<String, List<String>> indexMap;\n+\n+    \/**\n+     * The hash map that maintains mappings from\n+     * jar file to package\/class\/resource lists\n+     *\/\n+    private final HashMap<String, List<String>> jarMap;\n+\n+    \/*\n+     * An ordered list of jar file names.\n+     *\/\n+    private String[] jarFiles;\n+\n+    \/**\n+     * The index file name.\n+     *\/\n+    static final String INDEX_NAME = \"META-INF\/INDEX.LIST\";\n+\n+    \/**\n+     * true if, and only if, sun.misc.JarIndex.metaInfFilenames is set to true.\n+     * If true, the names of the files in META-INF, and its subdirectories, will\n+     * be added to the index. Otherwise, just the directory names are added.\n+     *\/\n+    private static final boolean metaInfFilenames =\n+            \"true\".equals(System.getProperty(\"sun.misc.JarIndex.metaInfFilenames\"));\n+\n+    \/**\n+     * Constructs a new index for the specified list of jar files.\n+     *\n+     * @param files the list of jar files to construct the index from.\n+     *\/\n+    public JarIndex(String[] files) throws IOException {\n+        this.indexMap = new HashMap<>();\n+        this.jarMap = new HashMap<>();\n+        this.jarFiles = files;\n+        parseJars(files);\n+    }\n+\n+    \/*\n+     * Add the key, value pair to the hashmap, the value will\n+     * be put in a list which is created if necessary.\n+     *\/\n+    private void addToList(String key, String value,\n+                           HashMap<String, List<String>> t) {\n+        List<String> list = t.get(key);\n+        if (list == null) {\n+            list = new ArrayList<>(1);\n+            list.add(value);\n+            t.put(key, list);\n+        } else if (!list.contains(value)) {\n+            list.add(value);\n+        }\n+    }\n+\n+    \/**\n+     * Add the mapping from the specified file to the specified\n+     * jar file. If there were no mapping for the package of the\n+     * specified file before, a new list will be created,\n+     * the jar file is added to the list and a new mapping from\n+     * the package to the jar file list is added to the hashmap.\n+     * Otherwise, the jar file will be added to the end of the\n+     * existing list.\n+     *\n+     * @param fileName the file name\n+     * @param jarName the jar file that the file is mapped to\n+     *\n+     *\/\n+    private void add(String fileName, String jarName) {\n+        String packageName;\n+        int pos;\n+        if ((pos = fileName.lastIndexOf('\/')) != -1) {\n+            packageName = fileName.substring(0, pos);\n+        } else {\n+            packageName = fileName;\n+        }\n+\n+        addMapping(packageName, jarName);\n+    }\n+\n+    \/**\n+     * Same as add(String,String) except that it doesn't strip off from the\n+     * last index of '\/'. It just adds the jarItem (filename or package)\n+     * as it is received.\n+     *\/\n+    private void addMapping(String jarItem, String jarName) {\n+        \/\/ add the mapping to indexMap\n+        addToList(jarItem, jarName, indexMap);\n+\n+        \/\/ add the mapping to jarMap\n+        addToList(jarName, jarItem, jarMap);\n+     }\n+\n+    \/**\n+     * Go through all the jar files and construct the\n+     * index table.\n+     *\/\n+    private void parseJars(String[] files) throws IOException {\n+        if (files == null) {\n+            return;\n+        }\n+\n+        String currentJar = null;\n+\n+        for (int i = 0; i < files.length; i++) {\n+            currentJar = files[i];\n+            ZipFile zrf = new ZipFile(currentJar.replace\n+                                      ('\/', File.separatorChar));\n+\n+            Enumeration<? extends ZipEntry> entries = zrf.entries();\n+            while(entries.hasMoreElements()) {\n+                ZipEntry entry = entries.nextElement();\n+                String fileName = entry.getName();\n+\n+                \/\/ Skip the META-INF directory, the index, and manifest.\n+                \/\/ Any files in META-INF\/ will be indexed explicitly\n+                if (fileName.equals(\"META-INF\/\") ||\n+                    fileName.equals(INDEX_NAME) ||\n+                    fileName.equals(JarFile.MANIFEST_NAME) ||\n+                    fileName.startsWith(\"META-INF\/versions\/\"))\n+                    continue;\n+\n+                if (!metaInfFilenames || !fileName.startsWith(\"META-INF\/\")) {\n+                    add(fileName, currentJar);\n+                } else if (!entry.isDirectory()) {\n+                        \/\/ Add files under META-INF explicitly so that certain\n+                        \/\/ services, like ServiceLoader, etc, can be located\n+                        \/\/ with greater accuracy. Directories can be skipped\n+                        \/\/ since each file will be added explicitly.\n+                        addMapping(fileName, currentJar);\n+                }\n+            }\n+\n+            zrf.close();\n+        }\n+    }\n+\n+    \/**\n+     * Writes the index to the specified OutputStream\n+     *\n+     * @param out the output stream\n+     * @exception IOException if an I\/O error has occurred\n+     *\/\n+    public void write(OutputStream out) throws IOException {\n+        BufferedWriter bw = new BufferedWriter\n+                (new OutputStreamWriter(out, StandardCharsets.UTF_8));\n+        bw.write(\"JarIndex-Version: 1.0\\n\\n\");\n+\n+        if (jarFiles != null) {\n+            for (int i = 0; i < jarFiles.length; i++) {\n+                \/* print out the jar file name *\/\n+                String jar = jarFiles[i];\n+                bw.write(jar + \"\\n\");\n+                List<String> jarlist = jarMap.get(jar);\n+                if (jarlist != null) {\n+                    for (String s : jarlist) {\n+                        bw.write(s + \"\\n\");\n+                    }\n+                }\n+                bw.write(\"\\n\");\n+            }\n+            bw.flush();\n+        }\n+    }\n+}\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/JarIndex.java","additions":215,"deletions":0,"binary":false,"changes":215,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.time.LocalDateTime;\n@@ -63,1 +64,1 @@\n-import java.util.concurrent.TimeUnit;\n+\n@@ -72,3 +73,0 @@\n-import jdk.internal.util.jar.JarIndex;\n-import java.time.LocalDateTime;\n-import java.time.ZoneOffset;\n@@ -79,1 +77,1 @@\n-import static jdk.internal.util.jar.JarIndex.INDEX_NAME;\n+import static sun.tools.jar.JarIndex.INDEX_NAME;\n@@ -400,0 +398,4 @@\n+                if (!suppressDeprecateMsg) {\n+                    warn(getMsg(\"warn.index.is.ignored\"));\n+                    warn(formatMsg(\"warn.flag.is.deprecated\", \"--generate-index\/-i\"));\n+                }\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/Main.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -142,0 +142,2 @@\n+warn.index.is.ignored=\\\n+        The JAR index (META-INF\/INDEX.LIST) is ignored at run-time since JDK 18\n@@ -143,1 +145,1 @@\n-        Warning: The {0} option is deprecated, and is planned for removal in a future JDK release\\n\n+        Warning: The {0} option is deprecated, and may be ignored or removed in a future release\\n\n@@ -239,1 +241,2 @@\n-\\                             archives\n+\\                             archives. This option is deprecated and may be \\n\\\n+\\                             removed in a future release.\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/tools\/jar\/resources\/jar.properties","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,0 +111,1 @@\n+This option is deprecated and may be removed in a future release.\n","filename":"src\/jdk.jartool\/share\/man\/jar.1","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-                String title = st.getTitle().toString();\n+                String title = ii.getLabel(); \/\/ normalized form of  st.getTitle()\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ExternalSpecsWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -225,2 +225,1 @@\n-            tagText = tagText.substring(1, tagText.length() - 1)\n-                             .replaceAll(\"\\\\s+\", \" \");\n+            tagText = tagText.substring(1, tagText.length() - 1);\n@@ -228,0 +227,1 @@\n+        tagText = tagText.replaceAll(\"\\\\s+\", \" \");\n@@ -774,1 +774,2 @@\n-        return getExternalSpecContent(holder, specTree, specTreeURL, textOf(specTreeLabel), label);\n+        return getExternalSpecContent(holder, specTree, specTreeURL,\n+                textOf(specTreeLabel).replaceAll(\"\\\\s+\", \" \"), label);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,2 +172,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -181,2 +179,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -190,2 +186,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -199,2 +193,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -209,2 +201,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -222,2 +212,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -231,2 +219,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -240,2 +226,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -250,2 +234,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -276,2 +258,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -287,2 +267,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -317,2 +295,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -652,2 +628,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(control)\\f[R]\n-.PP\n@@ -668,2 +642,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -773,2 +745,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -789,2 +759,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -798,2 +766,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(control)\\f[R]\n@@ -808,2 +774,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -831,2 +795,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -860,2 +822,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -883,2 +843,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -897,2 +855,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -927,2 +883,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -936,2 +890,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -946,2 +898,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -970,2 +920,0 @@\n-.PP\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n@@ -981,2 +929,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(control)\\f[R]\n-.PP\n@@ -1021,2 +967,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -1040,2 +984,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -1082,2 +1024,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -1135,2 +1075,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(control)\\f[R]\n-.PP\n@@ -1152,2 +1090,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -1171,2 +1107,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -1190,2 +1124,0 @@\n-Permission: \\f[V]java.lang.management.ManagementPermission(monitor)\\f[R]\n-.PP\n@@ -1208,2 +1140,0 @@\n-.PP\n-Permission: \\f[V]java.util.PropertyPermission(*, read)\\f[R]\n@@ -1234,3 +1164,0 @@\n-.PP\n-Permission:\n-\\f[V]java.util.PropertyPermission(java.vm.version, read)\\f[R]\n","filename":"src\/jdk.jcmd\/share\/man\/jcmd.1","additions":1,"deletions":74,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import jdk.internal.javac.PreviewFeature;\n@@ -519,1 +518,1 @@\n-     * @since 19\n+     * @since 21\n@@ -521,1 +520,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS, reflective = true)\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/ThreadReference.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import jdk.internal.javac.PreviewFeature;\n@@ -73,1 +72,1 @@\n-     * @since 19\n+     * @since 21\n@@ -75,1 +74,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS, reflective = true)\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/request\/ThreadDeathRequest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import jdk.internal.javac.PreviewFeature;\n@@ -73,1 +72,1 @@\n-     * @since 19\n+     * @since 21\n@@ -75,1 +74,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS, reflective = true)\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/request\/ThreadStartRequest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -480,1 +480,0 @@\n-             \"                      Virtual threads are a preview feature of the Java platform.\\n\" +\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/TTYResources.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2010, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-sun.include_virtualthreads = List of all threads includes virtual threads as well as platform threads. Virtual threads are a preview feature of the Java platform.\n+sun.include_virtualthreads = List of all threads includes virtual threads as well as platform threads.\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/resources\/jdi.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -218,1 +218,0 @@\n-Virtual threads are a preview feature of the Java platform.\n@@ -255,4 +254,0 @@\n-Virtual threads are a preview feature of the Java platform.\n-Preview features may be removed in a future release, or upgraded to\n-permanent features of the Java platform.\n-.PP\n","filename":"src\/jdk.jdi\/share\/man\/jdb.1","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -830,1 +830,0 @@\n- \"                                 Virtual threads are a preview feature of the Java platform.\\n\"\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/debugInit.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-            \/* The thread better not be on runningThreads if the TLS lookup failed. *\/\n+            \/* The thread better not be on either list if the TLS lookup failed. *\/\n@@ -258,0 +258,1 @@\n+            JDI_ASSERT(!nonTlsSearch(getEnv(), &runningVThreads, thread));\n@@ -260,2 +261,3 @@\n-             * Search the runningThreads list. The TLS lookup may have failed because the\n-             * thread has terminated, but we never got the THREAD_END event.\n+             * Search the runningThreads and runningVThreads lists. The TLS lookup may have\n+             * failed because the thread has terminated, but we never got the THREAD_END event.\n+             * The big comment above explains why this can happen.\n@@ -267,0 +269,5 @@\n+                if ( node == NULL ) {\n+                    if ( list == NULL || list == &runningVThreads ) {\n+                        node = nonTlsSearch(getEnv(), &runningVThreads, thread);\n+                    }\n+                }\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import jdk.internal.javac.PreviewFeature;\n@@ -116,1 +115,1 @@\n-     * @since 19\n+     * @since 21\n@@ -118,1 +117,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS, reflective = true)\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedThread.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,3 +41,0 @@\n-import java.util.jar.Attributes;\n-import java.util.jar.JarFile;\n-import java.util.jar.Manifest;\n@@ -510,9 +507,0 @@\n-            if (hasMainJar && !hasMainClass) {\n-                \/\/ try to get main-class from manifest\n-                String mainClass = getMainClassFromManifest();\n-                if (mainClass != null) {\n-                    CLIOptions.setOptionValue(\n-                            CLIOptions.APPCLASS.getId(), mainClass);\n-                }\n-            }\n-\n@@ -828,23 +816,0 @@\n-\n-    private String getMainClassFromManifest() {\n-        if (mainJarPath == null ||\n-            input == null ) {\n-            return null;\n-        }\n-\n-        JarFile jf;\n-        try {\n-            Path file = Path.of(input, mainJarPath);\n-            if (!Files.exists(file)) {\n-                return null;\n-            }\n-            jf = new JarFile(file.toFile());\n-            Manifest m = jf.getManifest();\n-            Attributes attrs = (m != null) ? m.getMainAttributes() : null;\n-            if (attrs != null) {\n-                return attrs.getValue(Attributes.Name.MAIN_CLASS);\n-            }\n-        } catch (IOException ignore) {}\n-        return null;\n-    }\n-\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":1,"deletions":36,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,3 +69,0 @@\n-            \/\/ If the app is contained in an unnamed jar then launch it the\n-            \/\/ legacy way and the main class string must be\n-            \/\/ of the format com\/foo\/Main\n@@ -73,3 +70,13 @@\n-                content.add(Map.entry(\"app.classpath\",\n-                        appCfgLayout.appDirectory().resolve(\n-                                launcherData.mainJarName())));\n+                Path mainJarPath = appCfgLayout.appDirectory().resolve(\n+                        launcherData.mainJarName());\n+\n+                if (launcherData.isClassNameFromMainJar()) {\n+                    content.add(Map.entry(\"app.mainjar\", mainJarPath));\n+                } else {\n+                    content.add(Map.entry(\"app.classpath\", mainJarPath));\n+                }\n+            }\n+\n+            if (!launcherData.isClassNameFromMainJar()) {\n+                content.add(Map.entry(\"app.mainclass\",\n+                        launcherData.qualifiedClassName()));\n@@ -77,2 +84,0 @@\n-            content.add(Map.entry(\"app.mainclass\",\n-                    launcherData.qualifiedClassName()));\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CfgFile.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,4 @@\n+    boolean isClassNameFromMainJar() {\n+        return jarMainClass != null;\n+    }\n+\n@@ -212,0 +216,1 @@\n+                    launcherData.jarMainClass = launcherData.qualifiedClassName;\n@@ -318,0 +323,1 @@\n+    private String jarMainClass;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherData.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import jdk.internal.javac.PreviewFeature;\n@@ -150,1 +149,1 @@\n-     * @since 19\n+     * @since 21\n@@ -152,1 +151,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS, reflective = true)\n@@ -159,1 +157,1 @@\n-     * @since 19\n+     * @since 21\n@@ -161,1 +159,0 @@\n-    @PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS, reflective = true)\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/HotSpotDiagnosticMXBean.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-JavaVM* jvm = NULL;\n+static JavaVM* jvm = NULL;\n","filename":"src\/jdk.management\/share\/native\/libmanagement_ext\/management_ext.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,2 +32,0 @@\n-import java.security.AccessController;\n-import java.security.PrivilegedAction;\n@@ -39,0 +37,1 @@\n+import jdk.internal.util.OperatingSystem;\n@@ -403,16 +402,6 @@\n-            @SuppressWarnings(\"removal\")\n-            String osname = AccessController.doPrivileged(\n-                    new PrivilegedAction<String>() {\n-                        public String run() {\n-                            return System.getProperty(\"os.name\");\n-                        }\n-                    });\n-            if (\"Linux\".equals(osname)) {\n-                return newInstance(\"jdk.net.LinuxSocketOptions\");\n-            } else if (osname.startsWith(\"Mac\")) {\n-                return newInstance(\"jdk.net.MacOSXSocketOptions\");\n-            } else if (osname.startsWith(\"Windows\")) {\n-                return newInstance(\"jdk.net.WindowsSocketOptions\");\n-            } else {\n-                return new PlatformSocketOptions();\n-            }\n+            return switch (OperatingSystem.current()) {\n+                case LINUX -> newInstance(\"jdk.net.LinuxSocketOptions\");\n+                case MACOS -> newInstance(\"jdk.net.MacOSXSocketOptions\");\n+                case WINDOWS -> newInstance(\"jdk.net.WindowsSocketOptions\");\n+                default -> new PlatformSocketOptions();\n+            };\n","filename":"src\/jdk.net\/share\/classes\/jdk\/net\/ExtendedSocketOptions.java","additions":8,"deletions":19,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,4 +44,0 @@\n-    @SuppressWarnings(\"removal\")\n-    private static final String osName = AccessController.doPrivileged(\n-        (PrivilegedAction<String>) () -> System.getProperty(\"os.name\"));\n-\n@@ -353,1 +349,0 @@\n-\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpNet.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1336,2 +1336,2 @@\n-            if (inodes.containsKey(lookup)) {\n-                parent = inodes.get(lookup);\n+            parent = inodes.get(lookup);\n+            if (parent != null) {\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -885,1 +885,1 @@\n-#if !defined(_WIN32) && !defined(ZERO)\n+#if !defined(_WIN32) && !defined(ZERO) && !defined(__thumb__)\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach022\/TestDescription.java 8277573 generic-all\n@@ -41,2 +40,0 @@\n-serviceability\/jvmti\/VMObjectAlloc\/VMObjectAllocTest.java 8288430 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -100,0 +100,1 @@\n+runtime\/CompressedOops\/CompressedClassPointers.java 8305765 generic-all\n@@ -149,1 +150,0 @@\n-vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002a\/TestDescription.java 8277573 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,131 @@\n+\/*\n+ * Copyright (c) 2023, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.c2.irTests;\n+\n+import compiler.lib.ir_framework.*;\n+import jdk.test.lib.Utils;\n+import jdk.internal.misc.Unsafe;\n+import java.util.Objects;\n+import java.util.Random;\n+\n+\/*\n+ * @test\n+ * @bug 8300257\n+ * @requires (os.simpleArch == \"x64\") | (os.simpleArch == \"aarch64\")\n+ * @summary C2: vectorization fails on some simple Memory Segment loops\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib \/\n+ * @run driver compiler.c2.irTests.TestVectorizationMultiInvar\n+ *\/\n+\n+public class TestVectorizationMultiInvar {\n+    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n+\n+    public static void main(String[] args) {\n+        TestFramework.runWithFlags(\"--add-modules\", \"java.base\", \"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\");\n+    }\n+\n+    static int size = 1024;\n+    static byte[] byteArray = new byte[size * 8];\n+    static int[] intArray = new int[size];\n+    static long[] longArray = new long[size];\n+    static long baseOffset = 0;\n+\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR, \">=1\", IRNode.STORE_VECTOR, \">=1\" })\n+    public static void testByteLong1(byte[] dest, long[] src) {\n+        for (int i = 0; i < src.length; i++) {\n+            long j = Objects.checkIndex(i * 8, (long)(src.length * 8));\n+            UNSAFE.putLongUnaligned(dest, baseOffset + j, src[i]);\n+        }\n+    }\n+\n+    @Run(test = \"testByteLong1\")\n+    public static void testByteLong1_runner() {\n+        baseOffset = UNSAFE.ARRAY_BYTE_BASE_OFFSET;\n+        testByteLong1(byteArray, longArray);\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR, \">=1\", IRNode.STORE_VECTOR, \">=1\" })\n+    public static void testLoopNest1(byte[] dest, byte[] src,\n+                                     long start1, long stop1,\n+                                     long start2, long stop2,\n+                                     long start3, long stop3,\n+                                     long start4, long stop4,\n+                                     long start5, long stop5) {\n+        if (src == null || dest == null) {\n+        }\n+        for (long i = start1; i < stop1; i++) {\n+            for (long j = start2; j < stop2; j++) {\n+                for (long k = start3; k < stop3; k++) {\n+                    for (long l = start4; l < stop4; l++) {\n+                        for (long m = start5; m < stop5; m++) {\n+                            long invar = i + j + k + l + m;\n+                            for (int n = 0; n < src.length - (int)invar; n++) {\n+                                UNSAFE.putByte(dest, UNSAFE.ARRAY_BYTE_BASE_OFFSET + n + invar, UNSAFE.getByte(src, UNSAFE.ARRAY_BYTE_BASE_OFFSET + n + invar));\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    @Run(test = \"testLoopNest1\")\n+    public static void testLoopNest1_runner() {\n+        testLoopNest1(byteArray, byteArray, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2);\n+    }\n+\n+    @Test\n+    @IR(counts = { IRNode.LOAD_VECTOR, \">=1\", IRNode.STORE_VECTOR, \">=1\" })\n+    public static void testLoopNest2(int[] dest, int[] src,\n+                                     long start1, long stop1,\n+                                     long start2, long stop2,\n+                                     long start3, long stop3,\n+                                     long start4, long stop4,\n+                                     long start5, long stop5) {\n+        if (src == null || dest == null) {\n+        }\n+        for (long i = start1; i < stop1; i++) {\n+            for (long j = start2; j < stop2; j++) {\n+                for (long k = start3; k < stop3; k++) {\n+                    for (long l = start4; l < stop4; l++) {\n+                        for (long m = start5; m < stop5; m++) {\n+                            long invar = i + j + k + l + m;\n+                            for (int n = 0; n < src.length - (int)invar; n++) {\n+                                UNSAFE.putInt(dest, UNSAFE.ARRAY_INT_BASE_OFFSET + (n + invar) * UNSAFE.ARRAY_INT_INDEX_SCALE, UNSAFE.getInt(src, UNSAFE.ARRAY_INT_BASE_OFFSET + (n + invar) * UNSAFE.ARRAY_INT_INDEX_SCALE));\n+                            }\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    @Run(test = \"testLoopNest2\")\n+    public static void testLoopNest2_runner() {\n+        testLoopNest2(intArray, intArray, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestVectorizationMultiInvar.java","additions":131,"deletions":0,"binary":false,"changes":131,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,20 +68,1 @@\n-        \/\/ After virtual thread Preview:\n-        \/\/ return (virtual ? Thread.ofVirtual() : Thread.ofPlatform().daemon()).factory();\n-        if (virtual) {\n-            return virtualThreadFactory();\n-        } else {\n-            return runnable -> {\n-                Thread t = new Thread(runnable);\n-                t.setDaemon(true);\n-                return t;\n-            };\n-        }\n-    }\n-\n-    private static ThreadFactory virtualThreadFactory() {\n-        try {\n-            return (ThreadFactory)Class.forName(\"java.lang.Thread$Builder\").getMethod(\"factory\")\n-                .invoke(Thread.class.getMethod(\"ofVirtual\").invoke(null));\n-        } catch (ReflectiveOperationException ex) {\n-            throw new AssertionError(ex);\n-        }\n+        return (virtual ? Thread.ofVirtual() : Thread.ofPlatform().daemon()).factory();\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/Helper.java","additions":2,"deletions":21,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -39,0 +39,3 @@\n+ *                   -XX:CompileCommand=exclude,java.lang.Thread::beforeSleep\n+ *                   -XX:CompileCommand=exclude,java.lang.Thread::afterSleep\n+ *                   -XX:CompileCommand=exclude,java.lang.Math::min\n@@ -48,0 +51,3 @@\n+ *                   -XX:CompileCommand=exclude,java.lang.Thread::beforeSleep\n+ *                   -XX:CompileCommand=exclude,java.lang.Thread::afterSleep\n+ *                   -XX:CompileCommand=exclude,java.lang.Math::min\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/OverloadCompileQueueTest.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- *                   --enable-preview -DhelperVirtualThread=true\n+ *                   -DhelperVirtualThread=true\n@@ -58,1 +58,1 @@\n- *                   --enable-preview -DhelperVirtualThread=true\n+ *                   -DhelperVirtualThread=true\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/UnexpectedDeoptimizationAllTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- *                   --enable-preview -DhelperVirtualThread=true\n+ *                   -DhelperVirtualThread=true\n@@ -58,1 +58,1 @@\n- *                   --enable-preview -DhelperVirtualThread=true\n+ *                   -DhelperVirtualThread=true\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/UnexpectedDeoptimizationTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-            Object[] bsmArgs = {recipe};\n+            Object[] bsmArgs = {recipe, condy};\n@@ -319,0 +319,17 @@\n+\n+        testLoadReferencedType(concat);\n+    }\n+\n+    private static int beS4(byte[] data, int bci) {\n+        return (data[bci] << 24) | ((data[bci + 1] & 0xff) << 16) | ((data[bci + 2] & 0xff) << 8) | (data[bci + 3] & 0xff);\n+    }\n+\n+    private static final int LDC2_W = 20;\n+    private static void testLoadReferencedType(ResolvedJavaMethod method) {\n+        \/\/ Make sure that loadReferencedType for an invokedynamic call site works.\n+        byte[] code = method.getCode();\n+        Assert.assertTrue(code[0] == LDC || code[0] == LDC2_W, \"unexpected ldc sequence\");\n+        int bci = code[0] == LDC ? 2 : 3;\n+        Assert.assertTrue((code[bci] & 0xff) == INVOKEDYNAMIC, \"unexpected bytecode\");\n+        int cpi = beS4(code, bci + 1);\n+        method.getConstantPool().loadReferencedType(cpi, INVOKEDYNAMIC, false);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/TestDynamicConstant.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n-    public static final int JNI_VERSION_20 = 0x00140000;\n+    public static final int JNI_VERSION_21 = 0x00150000;\n@@ -35,1 +35,1 @@\n-        if (res != JNI_VERSION_20) {\n+        if (res != JNI_VERSION_21) {\n","filename":"test\/hotspot\/jtreg\/native_sanity\/JniVersion.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,2 +36,1 @@\n- * @enablePreview\n- * @run main\/othervm\/timeout=180000 --enable-preview SyncOnValueBasedClassTest\n+ * @run main\/othervm\/timeout=180000 SyncOnValueBasedClassTest\n@@ -66,1 +65,1 @@\n-        String[] commonFatalTestsFlags = {\"--enable-preview\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-CreateCoredumpOnCrash\", \"-XX:DiagnoseSyncOnValueBasedClasses=1\"};\n+        String[] commonFatalTestsFlags = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-CreateCoredumpOnCrash\", \"-XX:DiagnoseSyncOnValueBasedClasses=1\"};\n@@ -76,1 +75,1 @@\n-        String[] commonLogTestsFlags = {\"--enable-preview\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:DiagnoseSyncOnValueBasedClasses=2\"};\n+        String[] commonLogTestsFlags = {\"-XX:+UnlockDiagnosticVMOptions\", \"-XX:DiagnoseSyncOnValueBasedClasses=2\"};\n@@ -171,1 +170,1 @@\n-        final String[] vtTest = { \"--enable-preview\", \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-CreateCoredumpOnCrash\",\n+        final String[] vtTest = { \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:-CreateCoredumpOnCrash\",\n@@ -174,1 +173,1 @@\n-        vtTest[3] = \"-XX:DiagnoseSyncOnValueBasedClasses=1\";\n+        vtTest[2] = \"-XX:DiagnoseSyncOnValueBasedClasses=1\";\n@@ -182,1 +181,1 @@\n-        vtTest[3] = \"-XX:DiagnoseSyncOnValueBasedClasses=2\";\n+        vtTest[2] = \"-XX:DiagnoseSyncOnValueBasedClasses=2\";\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/SyncOnValueBasedClassTest.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * @compile --enable-preview -source ${jdk.version} RedefineRunningMethods_SharedHelper.java\n+ * @compile RedefineRunningMethods_SharedHelper.java\n@@ -62,2 +62,1 @@\n-                            use_whitebox_jar,\n-                            \"--enable-preview\");\n+                            use_whitebox_jar);\n@@ -72,1 +71,0 @@\n-                                 \"--enable-preview\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/redefineClass\/RedefineRunningMethods_Shared.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n@@ -37,1 +36,0 @@\n- * @enablePreview\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/IsVirtualThread\/IsVirtualThread.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n- * @enablePreview\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/checked\/TestPrimitiveArrayCriticalWithBadParam.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,2 @@\n- * @compile --enable-preview -source ${jdk.version} JNIMonitor.java\n- * @run main\/native\/othervm --enable-preview JNIMonitor\n+ * @compile JNIMonitor.java\n+ * @run main\/native\/othervm JNIMonitor\n","filename":"test\/hotspot\/jtreg\/runtime\/vthread\/JNIMonitor\/JNIMonitor.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} RedefineClass.java\n- * @run main\/othervm --enable-preview -Djdk.attach.allowAttachSelf RedefineClass\n+ * @compile RedefineClass.java\n+ * @run main\/othervm -Djdk.attach.allowAttachSelf RedefineClass\n","filename":"test\/hotspot\/jtreg\/runtime\/vthread\/RedefineClass.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n- * @compile --enable-preview -source ${jdk.version} TestObjectAllocationSampleEvent.java\n- * @run main\/othervm --enable-preview TestObjectAllocationSampleEvent\n+ * @compile TestObjectAllocationSampleEvent.java\n+ * @run main\/othervm TestObjectAllocationSampleEvent\n","filename":"test\/hotspot\/jtreg\/runtime\/vthread\/TestObjectAllocationSampleEvent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n- * @enablePreview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetLocalVariable\/GetSetLocalUnsuspended.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n- * @compile --enable-preview -source ${jdk.version} GetOwnedMonitorInfoTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:GetOwnedMonitorInfoTest GetOwnedMonitorInfoTest\n+ * @compile GetOwnedMonitorInfoTest.java\n+ * @run main\/othervm\/native -agentlib:GetOwnedMonitorInfoTest GetOwnedMonitorInfoTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetOwnedMonitorInfo\/GetOwnedMonitorInfoTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,2 +30,2 @@\n- * @compile --enable-preview -source ${jdk.version} GetOwnedMonitorStackDepthInfoTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:GetOwnedMonitorStackDepthInfoTest GetOwnedMonitorStackDepthInfoTest\n+ * @compile GetOwnedMonitorStackDepthInfoTest.java\n+ * @run main\/othervm\/native -agentlib:GetOwnedMonitorStackDepthInfoTest GetOwnedMonitorStackDepthInfoTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/GetOwnedMonitorStackDepthInfo\/GetOwnedMonitorStackDepthInfoTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,3 +50,2 @@\n- * @compile --enable-preview -source ${jdk.version} HeapMonitorVMEventsTest.java\n- * @run main\/othervm\/native --enable-preview\n- *                          -XX:+UnlockDiagnosticVMOptions\n+ * @compile HeapMonitorVMEventsTest.java\n+ * @run main\/othervm\/native -XX:+UnlockDiagnosticVMOptions\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/HeapMonitor\/MyPackage\/HeapMonitorVMEventsTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n- * @compile --enable-preview -source ${jdk.version} RedefineRunningMethods.java\n+ * @compile RedefineRunningMethods.java\n@@ -37,1 +37,0 @@\n- *         --enable-preview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineRunningMethods.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,3 +35,3 @@\n- * @compile --enable-preview -source ${jdk.version} RedefineRunningMethodsWithBacktrace.java\n- * @run main\/othervm --enable-preview -javaagent:redefineagent.jar RedefineRunningMethodsWithBacktrace platform\n- * @run main\/othervm --enable-preview -javaagent:redefineagent.jar RedefineRunningMethodsWithBacktrace virtual\n+ * @compile RedefineRunningMethodsWithBacktrace.java\n+ * @run main\/othervm -javaagent:redefineagent.jar RedefineRunningMethodsWithBacktrace platform\n+ * @run main\/othervm -javaagent:redefineagent.jar RedefineRunningMethodsWithBacktrace virtual\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/RedefineClasses\/RedefineRunningMethodsWithBacktrace.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n- * @compile --enable-preview -source ${jdk.version} -g:lines,source,vars breakpoint01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:breakpoint01 breakpoint01\n+ * @compile -g:lines,source,vars breakpoint01.java\n+ * @run main\/othervm\/native -agentlib:breakpoint01 breakpoint01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/Breakpoint\/breakpoint01\/breakpoint01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,2 +46,2 @@\n- * @compile --enable-preview -source ${jdk.version} classload01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:classload01 classload01\n+ * @compile classload01.java\n+ * @run main\/othervm\/native -agentlib:classload01 classload01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ClassLoad\/classload01\/classload01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} classprep01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:classprep01 classprep01\n+ * @compile classprep01.java\n+ * @run main\/othervm\/native -agentlib:classprep01 classprep01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ClassPrepare\/classprep01\/classprep01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n- * @compile --enable-preview -source ${jdk.version} exception01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:exception01 exception01\n+ * @compile exception01.java\n+ * @run main\/othervm\/native -agentlib:exception01 exception01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/Exception\/exception01\/exception01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n- * @compile --enable-preview -source ${jdk.version} excatch01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:excatch01 excatch01\n+ * @compile excatch01.java\n+ * @run main\/othervm\/native -agentlib:excatch01 excatch01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/ExceptionCatch\/excatch01\/excatch01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n- * @compile --enable-preview -source ${jdk.version} fieldacc01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:fieldacc01 fieldacc01\n+ * @compile fieldacc01.java\n+ * @run main\/othervm\/native -agentlib:fieldacc01 fieldacc01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc01\/fieldacc01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n- * @compile --enable-preview -source ${jdk.version} fieldacc02.java\n- * @run main\/othervm\/native --enable-preview -agentlib:fieldacc02 fieldacc02\n+ * @compile fieldacc02.java\n+ * @run main\/othervm\/native -agentlib:fieldacc02 fieldacc02\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc02\/fieldacc02.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n- * @compile --enable-preview -source ${jdk.version} fieldacc03.java\n- * @run main\/othervm\/native --enable-preview -agentlib:fieldacc03 fieldacc03\n+ * @compile fieldacc03.java\n+ * @run main\/othervm\/native -agentlib:fieldacc03 fieldacc03\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc03\/fieldacc03.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n- * @compile --enable-preview -source ${jdk.version} fieldacc04.java\n- * @run main\/othervm\/native --enable-preview -agentlib:fieldacc04 fieldacc04\n+ * @compile fieldacc04.java\n+ * @run main\/othervm\/native -agentlib:fieldacc04 fieldacc04\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldAccess\/fieldacc04\/fieldacc04.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} fieldmod01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:fieldmod01 fieldmod01\n+ * @compile fieldmod01.java\n+ * @run main\/othervm\/native -agentlib:fieldmod01 fieldmod01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldModification\/fieldmod01\/fieldmod01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,2 @@\n- * @compile --enable-preview -source ${jdk.version} fieldmod02.java\n- * @run main\/othervm\/native --enable-preview -agentlib:fieldmod02 fieldmod02\n+ * @compile fieldmod02.java\n+ * @run main\/othervm\/native -agentlib:fieldmod02 fieldmod02\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FieldModification\/fieldmod02\/fieldmod02.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n- * @compile --enable-preview -source ${jdk.version} framepop01a.java\n- * @run main\/othervm\/native --enable-preview -agentlib:framepop01 framepop01\n+ * @compile framepop01a.java\n+ * @run main\/othervm\/native -agentlib:framepop01 framepop01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FramePop\/framepop01\/framepop01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n- * @compile --enable-preview -source ${jdk.version} framepop02.java\n- * @run main\/othervm\/native --enable-preview -agentlib:framepop02 framepop02 platform\n+ * @compile framepop02.java\n+ * @run main\/othervm\/native -agentlib:framepop02 framepop02 platform\n@@ -48,2 +48,2 @@\n- * @compile --enable-preview -source ${jdk.version} framepop02.java\n- * @run main\/othervm\/native --enable-preview -agentlib:framepop02 framepop02 virtual\n+ * @compile framepop02.java\n+ * @run main\/othervm\/native -agentlib:framepop02 framepop02 virtual\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/FramePop\/framepop02\/framepop02.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,2 @@\n- * @compile --enable-preview -source ${jdk.version} mentry01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:mentry01 mentry01\n+ * @compile mentry01.java\n+ * @run main\/othervm\/native -agentlib:mentry01 mentry01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodEntry\/mentry01\/mentry01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} mentry02.java\n- * @run main\/othervm\/native --enable-preview -agentlib:mentry02 mentry02\n+ * @compile mentry02.java\n+ * @run main\/othervm\/native -agentlib:mentry02 mentry02\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodEntry\/mentry02\/mentry02.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n- * @compile --enable-preview -source ${jdk.version} mexit01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:mexit01 mexit01\n+ * @compile mexit01.java\n+ * @run main\/othervm\/native -agentlib:mexit01 mexit01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodExit\/mexit01\/mexit01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n- * @compile --enable-preview -source ${jdk.version} mexit02.java\n- * @run main\/othervm\/native --enable-preview -agentlib:mexit02 mexit02\n+ * @compile mexit02.java\n+ * @run main\/othervm\/native -agentlib:mexit02 mexit02\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MethodExit\/mexit02\/mexit02.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,3 +45,3 @@\n- * @compile --enable-preview -source ${jdk.version} mcontenter01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:mcontenter01 mcontenter01 platform\n- * @run main\/othervm\/native --enable-preview -agentlib:mcontenter01 mcontenter01 virtual\n+ * @compile mcontenter01.java\n+ * @run main\/othervm\/native -agentlib:mcontenter01 mcontenter01 platform\n+ * @run main\/othervm\/native -agentlib:mcontenter01 mcontenter01 virtual\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEnter\/mcontenter01\/mcontenter01.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,3 @@\n- * @compile --enable-preview -source ${jdk.version} mcontentered01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:mcontentered01 mcontentered01 platform\n- * @run main\/othervm\/native --enable-preview -agentlib:mcontentered01 mcontentered01 virtual\n+ * @compile mcontentered01.java\n+ * @run main\/othervm\/native -agentlib:mcontentered01 mcontentered01 platform\n+ * @run main\/othervm\/native -agentlib:mcontentered01 mcontentered01 virtual\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorContendedEntered\/mcontentered01\/mcontentered01.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,3 @@\n- * @compile --enable-preview -source ${jdk.version} monitorwait01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:monitorwait01 monitorwait01 platform\n- * @run main\/othervm\/native --enable-preview -agentlib:monitorwait01 monitorwait01 virtual\n+ * @compile monitorwait01.java\n+ * @run main\/othervm\/native -agentlib:monitorwait01 monitorwait01 platform\n+ * @run main\/othervm\/native -agentlib:monitorwait01 monitorwait01 virtual\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWait\/monitorwait01\/monitorwait01.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,3 @@\n- * @compile --enable-preview -source ${jdk.version} monitorwaited01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:monitorwaited01 monitorwaited01 platform\n- * @run main\/othervm\/native --enable-preview -agentlib:monitorwaited01 monitorwaited01 virtual\n+ * @compile monitorwaited01.java\n+ * @run main\/othervm\/native -agentlib:monitorwaited01 monitorwaited01 platform\n+ * @run main\/othervm\/native -agentlib:monitorwaited01 monitorwaited01 virtual\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/MonitorWaited\/monitorwaited01\/monitorwaited01.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,2 +48,2 @@\n- * @compile --enable-preview -source ${jdk.version} singlestep01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:singlestep01 singlestep01\n+ * @compile singlestep01.java\n+ * @run main\/othervm\/native -agentlib:singlestep01 singlestep01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep01\/singlestep01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,3 +47,3 @@\n- * @compile --enable-preview -source ${jdk.version} singlestep03.java\n- * @run main\/othervm\/native --enable-preview -agentlib:singlestep03 singlestep03 platform\n- * @run main\/othervm\/native --enable-preview -agentlib:singlestep03 singlestep03 virtual\n+ * @compile singlestep03.java\n+ * @run main\/othervm\/native -agentlib:singlestep03 singlestep03 platform\n+ * @run main\/othervm\/native -agentlib:singlestep03 singlestep03 virtual\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/events\/SingleStep\/singlestep03\/singlestep03.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} GetStackTraceNotSuspendedStressTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:GetStackTraceNotSuspendedStress GetStackTraceNotSuspendedStressTest\n+ * @compile GetStackTraceNotSuspendedStressTest.java\n+ * @run main\/othervm\/native -agentlib:GetStackTraceNotSuspendedStress GetStackTraceNotSuspendedStressTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/StackTrace\/NotSuspended\/GetStackTraceNotSuspendedStressTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} GetStackTraceSuspendedStressTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:GetStackTraceSuspendedStress GetStackTraceSuspendedStressTest\n+ * @compile GetStackTraceSuspendedStressTest.java\n+ * @run main\/othervm\/native -agentlib:GetStackTraceSuspendedStress GetStackTraceSuspendedStressTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/StackTrace\/Suspended\/GetStackTraceSuspendedStressTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,2 +43,2 @@\n- * @compile --enable-preview -source ${jdk.version} SetGetThreadLocalStorageStressTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:SetGetThreadLocalStorageStress SetGetThreadLocalStorageStressTest\n+ * @compile SetGetThreadLocalStorageStressTest.java\n+ * @run main\/othervm\/native -agentlib:SetGetThreadLocalStorageStress SetGetThreadLocalStorageStressTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/stress\/ThreadLocalStorage\/SetGetThreadLocalStorageStressTest\/SetGetThreadLocalStorageStressTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} allthr01.java\n- * @run main\/othervm\/native --enable-preview -Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -agentlib:allthr01 allthr01\n+ * @compile allthr01.java\n+ * @run main\/othervm\/native -Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -agentlib:allthr01 allthr01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetAllThreads\/allthr01\/allthr01.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,2 +63,2 @@\n- * @compile --enable-preview -source ${jdk.version} contmon01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:contmon01 contmon01\n+ * @compile contmon01.java\n+ * @run main\/othervm\/native -agentlib:contmon01 contmon01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetCurrentContendedMonitor\/contmon01\/contmon01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n- * @compile --enable-preview -source ${jdk.version} contmon02.java\n- * @run main\/othervm\/native --enable-preview -agentlib:contmon02 contmon02\n+ * @compile contmon02.java\n+ * @run main\/othervm\/native -agentlib:contmon02 contmon02\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetCurrentContendedMonitor\/contmon02\/contmon02.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n- * @compile --enable-preview -source ${jdk.version} framecnt01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:framecnt01 framecnt01\n+ * @compile framecnt01.java\n+ * @run main\/othervm\/native -agentlib:framecnt01 framecnt01\n@@ -82,1 +82,1 @@\n-        checkFrames(vThread1, false, 15);\n+        checkFrames(vThread1, false, 14);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetFrameCount\/framecnt01\/framecnt01.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n- * @compile --enable-preview -source ${jdk.version} GetStackTraceCurrentThreadTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:GetStackTraceCurrentThreadTest GetStackTraceCurrentThreadTest\n+ * @compile GetStackTraceCurrentThreadTest.java\n+ * @run main\/othervm\/native -agentlib:GetStackTraceCurrentThreadTest GetStackTraceCurrentThreadTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/GetStackTraceCurrentThreadTest\/GetStackTraceCurrentThreadTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} getstacktr03.java\n- * @run main\/othervm\/native --enable-preview -agentlib:getstacktr03 getstacktr03\n+ * @compile getstacktr03.java\n+ * @run main\/othervm\/native -agentlib:getstacktr03 getstacktr03\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr03\/getstacktr03.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,2 +49,1 @@\n-    {\"Ljava\/lang\/VirtualThread$VThreadContinuation;\", \"lambda$new$0\", \"(Ljava\/lang\/VirtualThread;Ljava\/lang\/Runnable;)V\"},\n-    {\"Ljava\/lang\/VirtualThread$VThreadContinuation$$Lambda.0x0000000800098810;\", \"run\", \"()V\"},\n+    {\"Ljava\/lang\/VirtualThread$VThreadContinuation$1;\", \"run\", \"()V\"},\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr03\/libgetstacktr03.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,2 @@\n- * @compile --enable-preview -source ${jdk.version} getstacktr04.java\n- * @run main\/othervm\/native --enable-preview -agentlib:getstacktr04 getstacktr04\n+ * @compile getstacktr04.java\n+ * @run main\/othervm\/native -agentlib:getstacktr04 getstacktr04\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr04\/getstacktr04.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} getstacktr05.java\n- * @run main\/othervm\/native --enable-preview -agentlib:getstacktr05 getstacktr05\n+ * @compile getstacktr05.java\n+ * @run main\/othervm\/native -agentlib:getstacktr05 getstacktr05\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr05\/getstacktr05.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,2 +54,1 @@\n-    {\"Ljava\/lang\/VirtualThread$VThreadContinuation;\", \"lambda$new$0\", \"(Ljava\/lang\/VirtualThread;Ljava\/lang\/Runnable;)V\"},\n-    {\"Ljava\/lang\/VirtualThread$VThreadContinuation$$Lambda;\", \"run\", \"()V\"},\n+    {\"Ljava\/lang\/VirtualThread$VThreadContinuation$1;\", \"run\", \"()V\"},\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr05\/libgetstacktr05.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n- * @compile --enable-preview -source ${jdk.version} getstacktr06.java\n- * @run main\/othervm\/native --enable-preview -agentlib:getstacktr06 getstacktr06\n+ * @compile getstacktr06.java\n+ * @run main\/othervm\/native -agentlib:getstacktr06 getstacktr06\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr06\/getstacktr06.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} getstacktr07.java\n- * @run main\/othervm\/native --enable-preview -agentlib:getstacktr07 getstacktr07\n+ * @compile getstacktr07.java\n+ * @run main\/othervm\/native -agentlib:getstacktr07 getstacktr07\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr07\/getstacktr07.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,2 +49,2 @@\n- * @compile --enable-preview -source ${jdk.version} getstacktr08.java\n- * @run main\/othervm\/native --enable-preview -agentlib:getstacktr08 getstacktr08\n+ * @compile getstacktr08.java\n+ * @run main\/othervm\/native -agentlib:getstacktr08 getstacktr08\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetStackTrace\/getstacktr08\/getstacktr08.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,2 +45,2 @@\n- * @compile --enable-preview -source ${jdk.version} thrinfo01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:thrinfo01 thrinfo01\n+ * @compile thrinfo01.java\n+ * @run main\/othervm\/native -agentlib:thrinfo01 thrinfo01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadInfo\/thrinfo01\/thrinfo01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,2 +76,2 @@\n- * @compile --enable-preview -source ${jdk.version} thrstat01.java\n- * @run main\/othervm\/native --enable-preview -agentlib:thrstat01 thrstat01\n+ * @compile thrstat01.java\n+ * @run main\/othervm\/native -agentlib:thrstat01 thrstat01\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat01\/thrstat01.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n- * @compile --enable-preview -source ${jdk.version} thrstat03.java\n- * @run main\/othervm\/native --enable-preview  -agentlib:thrstat03 thrstat03 5\n+ * @compile thrstat03.java\n+ * @run main\/othervm\/native  -agentlib:thrstat03 thrstat03 5\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat03\/thrstat03.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,2 +59,2 @@\n- * @compile --enable-preview -source ${jdk.version} thrstat05.java\n- * @run main\/othervm\/native --enable-preview -agentlib:thrstat05 thrstat05\n+ * @compile thrstat05.java\n+ * @run main\/othervm\/native -agentlib:thrstat05 thrstat05\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/thread\/GetThreadState\/thrstat05\/thrstat05.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/BoundVThreadTest\/BoundVThreadTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} BreakpointInYieldTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:BreakpointInYieldTest -Djdk.defaultScheduler.parallelism=2 BreakpointInYieldTest\n+ * @compile BreakpointInYieldTest.java\n+ * @run main\/othervm\/native -agentlib:BreakpointInYieldTest -Djdk.defaultScheduler.parallelism=2 BreakpointInYieldTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/BreakpointInYieldTest\/BreakpointInYieldTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run main\/othervm\/native --enable-preview -agentlib:ContFramePopTest ContFramePopTest\n+ * @run main\/othervm\/native -agentlib:ContFramePopTest ContFramePopTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContFramePopTest\/ContFramePopTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run main\/othervm\/native --enable-preview -agentlib:ContStackDepthTest ContStackDepthTest\n+ * @run main\/othervm\/native -agentlib:ContStackDepthTest ContStackDepthTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContStackDepthTest\/ContStackDepthTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run main\/othervm\/native --enable-preview -agentlib:ContYieldBreakPointTest ContYieldBreakPointTest\n+ * @run main\/othervm\/native -agentlib:ContYieldBreakPointTest ContYieldBreakPointTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContYieldBreakPointTest\/ContYieldBreakPointTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run main\/othervm\/native --enable-preview -agentlib:ContinuationTest ContinuationTest\n+ * @run main\/othervm\/native -agentlib:ContinuationTest ContinuationTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/ContinuationTest\/ContinuationTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n- * @compile --enable-preview -source ${jdk.version} GetSetLocalTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:GetSetLocalTest GetSetLocalTest\n+ * @compile GetSetLocalTest.java\n+ * @run main\/othervm\/native -agentlib:GetSetLocalTest GetSetLocalTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetSetLocalTest\/GetSetLocalTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} InterruptThreadTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:InterruptThreadTest InterruptThreadTest\n+ * @compile InterruptThreadTest.java\n+ * @run main\/othervm\/native -agentlib:InterruptThreadTest InterruptThreadTest\n@@ -34,2 +34,2 @@\n- * @compile --enable-preview -source ${jdk.version} InterruptThreadTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:InterruptThreadTest -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations InterruptThreadTest\n+ * @compile InterruptThreadTest.java\n+ * @run main\/othervm\/native -agentlib:InterruptThreadTest -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations InterruptThreadTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/InterruptThreadTest\/InterruptThreadTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} MethodExitTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:MethodExitTest -Djdk.defaultScheduler.parallelism=2 MethodExitTest 150\n+ * @compile MethodExitTest.java\n+ * @run main\/othervm\/native -agentlib:MethodExitTest -Djdk.defaultScheduler.parallelism=2 MethodExitTest 150\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/MethodExitTest\/MethodExitTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} NullAsCurrentThreadTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:NullAsCurrentThreadTest=EnableVirtualThreadSupport NullAsCurrentThreadTest\n+ * @compile NullAsCurrentThreadTest.java\n+ * @run main\/othervm\/native -agentlib:NullAsCurrentThreadTest=EnableVirtualThreadSupport NullAsCurrentThreadTest\n@@ -34,2 +34,2 @@\n- * @compile --enable-preview -source ${jdk.version} NullAsCurrentThreadTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:NullAsCurrentThreadTest=EnableVirtualThreadSupport -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations NullAsCurrentThreadTest\n+ * @compile NullAsCurrentThreadTest.java\n+ * @run main\/othervm\/native -agentlib:NullAsCurrentThreadTest=EnableVirtualThreadSupport -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations NullAsCurrentThreadTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/NullAsCurrentThreadTest\/NullAsCurrentThreadTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,2 @@\n- * @compile --enable-preview -source ${jdk.version} PinnedTaskTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:PinnedTaskTest PinnedTaskTest\n+ * @compile PinnedTaskTest.java\n+ * @run main\/othervm\/native -agentlib:PinnedTaskTest PinnedTaskTest\n@@ -34,2 +34,2 @@\n- * @compile --enable-preview -source ${jdk.version} PinnedTaskTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:PinnedTaskTest -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations PinnedTaskTest\n+ * @compile PinnedTaskTest.java\n+ * @run main\/othervm\/native -agentlib:PinnedTaskTest -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations PinnedTaskTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/PinnedTaskTest\/PinnedTaskTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} RawMonitorTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:RawMonitorTest RawMonitorTest\n+ * @compile RawMonitorTest.java\n+ * @run main\/othervm\/native -agentlib:RawMonitorTest RawMonitorTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/RawMonitorTest\/RawMonitorTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @run main\/othervm\/timeout=180 -Xint --enable-preview -javaagent:redefineagent.jar\n+ * @run main\/othervm\/timeout=180 -Xint -javaagent:redefineagent.jar\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/RedefineClasses\/RedefineRunningMethods.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} SelfSuspendDisablerTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:SelfSuspendDisablerTest SelfSuspendDisablerTest\n+ * @compile SelfSuspendDisablerTest.java\n+ * @run main\/othervm\/native -agentlib:SelfSuspendDisablerTest SelfSuspendDisablerTest\n@@ -36,2 +36,2 @@\n- * @compile --enable-preview -source ${jdk.version} SelfSuspendDisablerTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:SelfSuspendDisablerTest -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations SelfSuspendDisablerTest\n+ * @compile SelfSuspendDisablerTest.java\n+ * @run main\/othervm\/native -agentlib:SelfSuspendDisablerTest -XX:+UnlockExperimentalVMOptions -XX:-VMContinuations SelfSuspendDisablerTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SelfSuspendDisablerTest\/SelfSuspendDisablerTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n- * @compile --enable-preview -source ${jdk.version} SuspendResume1.java\n+ * @compile SuspendResume1.java\n@@ -32,1 +32,0 @@\n- *      --enable-preview\n@@ -42,1 +41,1 @@\n- * @compile --enable-preview -source ${jdk.version} SuspendResume1.java\n+ * @compile SuspendResume1.java\n@@ -45,1 +44,0 @@\n- *      --enable-preview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResume1\/SuspendResume1.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @compile --enable-preview -source ${jdk.version} SuspendResume2.java\n+ * @compile SuspendResume2.java\n@@ -31,1 +31,0 @@\n- *      --enable-preview\n@@ -41,1 +40,1 @@\n- * @compile --enable-preview -source ${jdk.version} SuspendResume2.java\n+ * @compile SuspendResume2.java\n@@ -44,1 +43,0 @@\n- *      --enable-preview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResume2\/SuspendResume2.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @compile --enable-preview -source ${jdk.version} SuspendResumeAll.java\n+ * @compile SuspendResumeAll.java\n@@ -31,1 +31,0 @@\n- *      --enable-preview\n@@ -41,1 +40,1 @@\n- * @compile --enable-preview -source ${jdk.version} SuspendResumeAll.java\n+ * @compile SuspendResumeAll.java\n@@ -44,1 +43,0 @@\n- *      --enable-preview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/SuspendResumeAll\/SuspendResumeAll.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,2 @@\n- * @compile --enable-preview -source ${jdk.version} VThreadMonitorTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:VThreadMonitorTest VThreadMonitorTest\n+ * @compile VThreadMonitorTest.java\n+ * @run main\/othervm\/native -agentlib:VThreadMonitorTest VThreadMonitorTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadMonitorTest\/VThreadMonitorTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -40,1 +39,0 @@\n- * @enablePreview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadNotifyFramePopTest\/VThreadNotifyFramePopTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} VThreadTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:VThreadTest VThreadTest\n+ * @compile VThreadTest.java\n+ * @run main\/othervm\/native -agentlib:VThreadTest VThreadTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTest\/VThreadTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,2 @@\n- * @compile --enable-preview -source ${jdk.version} VThreadUnsupportedTest.java\n- * @run main\/othervm\/native --enable-preview -agentlib:VThreadUnsupportedTest VThreadUnsupportedTest\n+ * @compile VThreadUnsupportedTest.java\n+ * @run main\/othervm\/native -agentlib:VThreadUnsupportedTest VThreadUnsupportedTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadUnsupportedTest\/VThreadUnsupportedTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -36,1 +35,0 @@\n- * @enablePreview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VirtualStackTraceTest\/VirtualStackTraceTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -38,1 +37,0 @@\n- * @enablePreview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VirtualThreadStartTest\/VirtualThreadStartTest.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n- * @compile --enable-preview -source ${jdk.version} WaitNotifySuspendedVThreadTest.java\n+ * @compile WaitNotifySuspendedVThreadTest.java\n@@ -46,1 +46,0 @@\n- *     --enable-preview\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/WaitNotifySuspendedVThreadTest\/WaitNotifySuspendedVThreadTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @compile --enable-preview -source ${jdk.version} AgentWithVThread.java AgentWithVThreadTest.java\n+ * @compile AgentWithVThread.java AgentWithVThreadTest.java\n@@ -40,1 +40,1 @@\n-        ProcessBuilder pb = ProcessTools.createTestJvm(\"--enable-preview\", \"-javaagent:agent.jar\",  \"-version\");\n+        ProcessBuilder pb = ProcessTools.createTestJvm(\"-javaagent:agent.jar\",  \"-version\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/premain\/AgentWithVThreadTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+dist\/\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/.gitignore","additions":1,"deletions":0,"binary":false,"changes":1,"status":"added"},{"patch":"@@ -51,0 +51,2 @@\n+WB_CLASS_FILES := $(subst $(TESTLIBRARY_DIR)\/,,$(WB_SRC_FILES))\n+WB_CLASS_FILES := $(patsubst %.java,%.class,$(WB_CLASS_FILES))\n@@ -61,1 +63,2 @@\n-MAIN_CLASS = sun.hotspot.tools.ctw.CompileTheWorld\n+CTW_MAIN_CLASS = sun.hotspot.tools.ctw.CompileTheWorld\n+CTWRUNNER_MAIN_CLASS = sun.hotspot.tools.ctw.CtwRunner\n@@ -81,0 +84,4 @@\n+$(DST_DIR)\/ctwrunner.sh: $(DST_DIR)\n+\techo '$${JAVA_HOME}\/bin\/java $${JAVA_OPTIONS} -Dtest.jdk=$${JAVA_HOME} -cp ctw.jar $(CTWRUNNER_MAIN_CLASS) $$@' > $@\n+\tchmod a+x $@\n+\n@@ -84,1 +91,1 @@\n-\t$(JAR) --create --file=$@ --main-class $(MAIN_CLASS) -C $(OUTPUT_DIR) .\n+\t$(JAR) --create --file=$@ --main-class $(CTW_MAIN_CLASS) -C $(OUTPUT_DIR) .\n@@ -88,1 +95,0 @@\n-\t@mkdir -p $(OUTPUT_DIR)\n@@ -90,1 +96,1 @@\n-\t\t-d $(OUTPUT_DIR) \\\n+\t\t-d $(DST_DIR) \\\n@@ -93,2 +99,1 @@\n-\t$(JAR) --create --file=$@ -C $(OUTPUT_DIR) .\n-\t@rm -rf $(OUTPUT_DIR)\n+\tcd $(DST_DIR); $(JAR) --create --file=wb.jar $(WB_CLASS_FILES)\n@@ -96,1 +101,1 @@\n-$(DST_DIR)\/ctw.zip: $(DST_DIR)\/ctw.sh $(DST_DIR)\/wb.jar $(DST_DIR)\/ctw.jar\n+$(DST_DIR)\/ctw.zip: $(DST_DIR)\/ctw.sh $(DST_DIR)\/ctwrunner.sh $(DST_DIR)\/wb.jar $(DST_DIR)\/ctw.jar $(DST_DIR)\/ctwrunner.sh\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/Makefile","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+import java.util.Arrays;\n@@ -55,0 +56,8 @@\n+    \/**\n+     * Value of {@code -Dsun.hotspot.tools.ctwrunner.ctw_extra_args}. Extra\n+     * comma-separated arguments to pass to CTW subprocesses.\n+     *\/\n+    private static final String CTW_EXTRA_ARGS\n+            = System.getProperty(\"sun.hotspot.tools.ctwrunner.ctw_extra_args\", \"\");\n+\n+\n@@ -261,0 +270,43 @@\n+\n+        ArrayList<String> Args = new ArrayList<String>(Arrays.asList(\n+                \"-Xbatch\",\n+                \"-XX:-UseCounterDecay\",\n+                \"-XX:-ShowMessageBoxOnError\",\n+                \"-XX:+UnlockDiagnosticVMOptions\",\n+                \/\/ redirect VM output to cerr so it won't collide w\/ ctw output\n+                \"-XX:+DisplayVMOutputToStderr\",\n+                \/\/ define phase start\n+                \"-DCompileTheWorldStartAt=\" + classStart,\n+                \"-DCompileTheWorldStopAt=\" + classStop,\n+                \/\/ CTW library uses WhiteBox API\n+                \"-XX:+WhiteBoxAPI\", \"-Xbootclasspath\/a:.\",\n+                \/\/ export jdk.internal packages used by CTW library\n+                \"--add-exports\", \"java.base\/jdk.internal.jimage=ALL-UNNAMED\",\n+                \"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\",\n+                \"--add-exports\", \"java.base\/jdk.internal.reflect=ALL-UNNAMED\",\n+                \"--add-exports\", \"java.base\/jdk.internal.access=ALL-UNNAMED\",\n+                \/\/ enable diagnostic logging\n+                \"-XX:+LogCompilation\",\n+                \/\/ use phase specific log, hs_err and ciReplay files\n+                String.format(\"-XX:LogFile=hotspot_%s_%%p.log\", phase),\n+                String.format(\"-XX:ErrorFile=hs_err_%s_%%p.log\", phase),\n+                String.format(\"-XX:ReplayDataFile=replay_%s_%%p.log\", phase),\n+                \/\/ MethodHandle MUST NOT be compiled\n+                \"-XX:CompileCommand=exclude,java\/lang\/invoke\/MethodHandle.*\",\n+                \/\/ Stress* are c2-specific stress flags, so IgnoreUnrecognizedVMOptions is needed\n+                \"-XX:+IgnoreUnrecognizedVMOptions\",\n+                \"-XX:+StressLCM\",\n+                \"-XX:+StressGCM\",\n+                \"-XX:+StressIGVN\",\n+                \"-XX:+StressCCP\",\n+                \/\/ StressSeed is uint\n+                \"-XX:StressSeed=\" + Math.abs(rng.nextInt())));\n+\n+        for (String arg : CTW_EXTRA_ARGS.split(\",\")) {\n+            Args.add(arg);\n+        }\n+\n+        \/\/ CTW entry point\n+        Args.add(CompileTheWorld.class.getName());\n+        Args.add(target);\n+\n@@ -262,36 +314,1 @@\n-            Files.write(file, List.of(\n-                    \"-Xbatch\",\n-                    \"-XX:-UseCounterDecay\",\n-                    \"-XX:-ShowMessageBoxOnError\",\n-                    \"-XX:+UnlockDiagnosticVMOptions\",\n-                    \/\/ redirect VM output to cerr so it won't collide w\/ ctw output\n-                    \"-XX:+DisplayVMOutputToStderr\",\n-                    \/\/ define phase start\n-                    \"-DCompileTheWorldStartAt=\" + classStart,\n-                    \"-DCompileTheWorldStopAt=\" + classStop,\n-                    \/\/ CTW library uses WhiteBox API\n-                    \"-XX:+WhiteBoxAPI\", \"-Xbootclasspath\/a:.\",\n-                    \/\/ export jdk.internal packages used by CTW library\n-                    \"--add-exports\", \"java.base\/jdk.internal.jimage=ALL-UNNAMED\",\n-                    \"--add-exports\", \"java.base\/jdk.internal.misc=ALL-UNNAMED\",\n-                    \"--add-exports\", \"java.base\/jdk.internal.reflect=ALL-UNNAMED\",\n-                    \"--add-exports\", \"java.base\/jdk.internal.access=ALL-UNNAMED\",\n-                    \/\/ enable diagnostic logging\n-                    \"-XX:+LogCompilation\",\n-                    \/\/ use phase specific log, hs_err and ciReplay files\n-                    String.format(\"-XX:LogFile=hotspot_%s_%%p.log\", phase),\n-                    String.format(\"-XX:ErrorFile=hs_err_%s_%%p.log\", phase),\n-                    String.format(\"-XX:ReplayDataFile=replay_%s_%%p.log\", phase),\n-                    \/\/ MethodHandle MUST NOT be compiled\n-                    \"-XX:CompileCommand=exclude,java\/lang\/invoke\/MethodHandle.*\",\n-                    \/\/ Stress* are c2-specific stress flags, so IgnoreUnrecognizedVMOptions is needed\n-                    \"-XX:+IgnoreUnrecognizedVMOptions\",\n-                    \"-XX:+StressLCM\",\n-                    \"-XX:+StressGCM\",\n-                    \"-XX:+StressIGVN\",\n-                    \"-XX:+StressCCP\",\n-                    \/\/ StressSeed is uint\n-                    \"-XX:StressSeed=\" + Math.abs(rng.nextInt()),\n-                    \/\/ CTW entry point\n-                    CompileTheWorld.class.getName(),\n-                    target));\n+            Files.write(file, Args);\n","filename":"test\/hotspot\/jtreg\/testlibrary\/ctw\/src\/sun\/hotspot\/tools\/ctw\/CtwRunner.java","additions":54,"deletions":37,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -202,10 +202,1 @@\n-        try {\n-            Object builder = Thread.class.getMethod(\"ofVirtual\").invoke(null);\n-            Class<?> clazz = Class.forName(\"java.lang.Thread$Builder\");\n-            java.lang.reflect.Method factory = clazz.getMethod(\"factory\");\n-            return (ThreadFactory) factory.invoke(builder);\n-        } catch (RuntimeException | Error e) {\n-            throw e;\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        return Thread.ofVirtual().factory();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/StressRedefine.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n- *      --enable-preview\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/RedefineClasses\/StressRedefineVirtual\/StressRedefineVirtual.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,10 +81,1 @@\n-        try {\n-            Object builder = Thread.class.getMethod(\"ofVirtual\").invoke(null);\n-            Class<?> clazz = Class.forName(\"java.lang.Thread$Builder\");\n-            Method unstarted = clazz.getMethod(\"unstarted\", Runnable.class);\n-            return (Thread) unstarted.invoke(builder, task);\n-        } catch (RuntimeException | Error e) {\n-            throw e;\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        return Thread.ofVirtual().unstarted(task);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/MainWrapper.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,2 +168,0 @@\n-                \/* Need --enable-preview on the debuggee in order to support virtual threads. *\/\n-                args.add(\"-R--enable-preview\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/Launcher.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -756,2 +756,0 @@\n-            \/* Need --enable-preview on the debuggee in order to support virtual threads. *\/\n-            vmArgs += \" --enable-preview\";\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/Binder.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,10 +56,1 @@\n-        try {\n-            Object builder = Thread.class.getMethod(\"ofVirtual\").invoke(null);\n-            Class<?> clazz = Class.forName(\"java.lang.Thread$Builder\");\n-            java.lang.reflect.Method factory = clazz.getMethod(\"factory\");\n-            return (ThreadFactory) factory.invoke(builder);\n-        } catch (RuntimeException | Error e) {\n-            throw e;\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+        return Thread.ofVirtual().factory();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/JDIThreadFactory.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -316,6 +316,0 @@\n-        \/* Need --enable-preview on the debuggee in order to support virtual threads. *\/\n-        boolean vthreadMode = \"Virtual\".equals(System.getProperty(\"main.wrapper\"));\n-        if (vthreadMode) {\n-            args.add(\"--enable-preview\");\n-        }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jpda\/DebugeeBinder.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,10 +89,1 @@\n-            try {\n-                Object builder = Thread.class.getMethod(\"ofVirtual\").invoke(null);\n-                Class<?> clazz = Class.forName(\"java.lang.Thread$Builder\");\n-                java.lang.reflect.Method unstarted = clazz.getMethod(\"unstarted\", Runnable.class);\n-                return (Thread) unstarted.invoke(builder, task);\n-            } catch (RuntimeException | Error e) {\n-                throw e;\n-            } catch (Exception e) {\n-                throw new RuntimeException(e);\n-            }\n+            return Thread.ofVirtual().unstarted(task);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/runner\/ThreadsRunner.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -273,1 +273,2 @@\n-    com\/sun\/management\/HotSpotDiagnosticMXBean\/ \\\n+    com\/sun\/management\/HotSpotDiagnosticMXBean \\\n+    com\/sun\/management\/ThreadMXBean \\\n","filename":"test\/jdk\/TEST.groups","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -38,1 +37,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/com\/sun\/jdi\/SuspendAfterDeath.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -469,1 +469,0 @@\n-            argInfo.targetVMArgs += \"--enable-preview \";\n@@ -713,0 +712,15 @@\n+\n+        \/\/ Make sure debuggee exits with no errors. Otherwise failures might go unnoticed.\n+        Process p = vm.process();\n+        try {\n+            p.waitFor();\n+        } catch (InterruptedException e) {\n+            throw new RuntimeException(e);\n+        }\n+        int res = p.exitValue();\n+        \/\/ Some tests purposefully exit with an exception, which produces exitValue\n+        \/\/ 1, so we have to allow it also.\n+        if (res != 0 && res != 1) {\n+            throw new RuntimeException(\"Non-zero debuggee exitValue: \" + res);\n+        }\n+\n@@ -980,1 +994,1 @@\n-            threadFactory = r -> newVirtualThread(r);\n+            threadFactory = Thread.ofVirtual().factory();\n@@ -983,1 +997,1 @@\n-            Thread vthread = newVirtualThread(() -> {\n+            Thread vthread = Thread.ofVirtual().unstarted(() -> {\n@@ -1032,14 +1046,0 @@\n-    \/\/ Need to use reflection while virtual threads --enable-preview feature\n-    private static Thread newVirtualThread(Runnable task) {\n-        try {\n-            Object builder = Thread.class.getMethod(\"ofVirtual\").invoke(null);\n-            Class<?> clazz = Class.forName(\"java.lang.Thread$Builder\");\n-            java.lang.reflect.Method unstarted = clazz.getMethod(\"unstarted\", Runnable.class);\n-            return (Thread) unstarted.invoke(builder, task);\n-        } catch (RuntimeException | Error e) {\n-            throw e;\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n","filename":"test\/jdk\/com\/sun\/jdi\/TestScaffold.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-            Executors.defaultThreadFactory().newThread(() -> {\n+            TestScaffold.newThread(() -> {\n@@ -68,1 +68,7 @@\n-                        Thread.sleep(50);\n+                        String mainWrapper = System.getProperty(\"main.wrapper\");\n+                        \/\/ Virtual thread creation tends to overwhelm the debugger,\n+                        \/\/ leading to high memory use for all the unprocessed events\n+                        \/\/ that get queued up, so we need to slow it down a bit more\n+                        \/\/ than we do for platform threads to avoid getting OOME.\n+                        long timeToSleep = \"Virtual\".equals(mainWrapper) ? 100 : 50;\n+                        Thread.sleep(timeToSleep);\n","filename":"test\/jdk\/com\/sun\/jdi\/ThreadMemoryLeakTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/com\/sun\/management\/HotSpotDiagnosticMXBean\/DumpThreads.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -36,1 +35,0 @@\n- * @enablePreview\n@@ -119,1 +117,5 @@\n-            assertTrue(allocated[0] >= 0L);\n+            if (Thread.currentThread().isVirtual()) {\n+                assertEquals(-1L, allocated[0]);\n+            } else {\n+                assertTrue(allocated[0] >= 0L);\n+            }\n@@ -141,1 +143,5 @@\n-            assertTrue(cpuTimes[0] >= 0L);\n+            if (Thread.currentThread().isVirtual()) {\n+                assertEquals(-1L, cpuTimes[0]);\n+            } else {\n+                assertTrue(cpuTimes[0] >= 0L);\n+            }\n@@ -163,1 +169,5 @@\n-            assertTrue(userTimes[0] >= 0L);\n+            if (Thread.currentThread().isVirtual()) {\n+                assertEquals(-1L, userTimes[0]);\n+            } else {\n+                assertTrue(userTimes[0] >= 0L);\n+            }\n","filename":"test\/jdk\/com\/sun\/management\/ThreadMXBean\/VirtualThreads.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n@@ -576,30 +575,0 @@\n-    \/**\n-     * Test Thread.Builder creating threads that disallow or allow\n-     * thread locals.\n-     *\/\n-    @Test\n-    void testThreadLocals3() throws Exception {\n-        Thread.Builder builder = Thread.ofPlatform();\n-\n-        \/\/ disallow\n-        builder.allowSetThreadLocals(false);\n-        testNoThreadLocals(builder);\n-\n-        \/\/ allow\n-        builder.allowSetThreadLocals(true);\n-        testThreadLocals(builder);\n-    }\n-\n-    @Test\n-    void testThreadLocals4() throws Exception {\n-        Thread.Builder builder = Thread.ofVirtual();\n-\n-        \/\/ disallow\n-        builder.allowSetThreadLocals(false);\n-        testNoThreadLocals(builder);\n-\n-        \/\/ allow\n-        builder.allowSetThreadLocals(true);\n-        testThreadLocals(builder);\n-    }\n-\n@@ -702,40 +671,0 @@\n-    @Test\n-    void testInheritedThreadLocals3() throws Exception {\n-        Thread.Builder builder = Thread.ofPlatform();\n-\n-        \/\/ thread locals not allowed\n-        builder.allowSetThreadLocals(false);\n-        testNoInheritedThreadLocals(builder);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritedThreadLocals(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testNoInheritedThreadLocals(builder);\n-\n-        \/\/ thread locals allowed\n-        builder.allowSetThreadLocals(true);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritedThreadLocals(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testInheritedThreadLocals(builder);\n-    }\n-\n-    @Test\n-    void testInheritedThreadLocals4() throws Exception {\n-        Thread.Builder builder = Thread.ofVirtual();\n-\n-        \/\/ thread locals not allowed\n-        builder.allowSetThreadLocals(false);\n-        testNoInheritedThreadLocals(builder);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritedThreadLocals(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testNoInheritedThreadLocals(builder);\n-\n-        \/\/ thread locals allowed\n-        builder.allowSetThreadLocals(true);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritedThreadLocals(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testInheritedThreadLocals(builder);\n-    }\n-\n@@ -853,40 +782,0 @@\n-    @Test\n-    void testContextClassLoader3() throws Exception {\n-        Thread.Builder builder = Thread.ofPlatform();\n-\n-        \/\/ thread locals not allowed\n-        builder.allowSetThreadLocals(false);\n-        testNoInheritContextClassLoader(builder);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritContextClassLoader(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testNoInheritContextClassLoader(builder);\n-\n-        \/\/ thread locals allowed\n-        builder.allowSetThreadLocals(true);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritContextClassLoader(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testInheritContextClassLoader(builder);\n-    }\n-\n-    @Test\n-    void testContextClassLoader4() throws Exception {\n-        Thread.Builder builder = Thread.ofVirtual();\n-\n-        \/\/ thread locals not allowed\n-        builder.allowSetThreadLocals(false);\n-        testNoInheritContextClassLoader(builder);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritContextClassLoader(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testNoInheritContextClassLoader(builder);\n-\n-        \/\/ thread locals allowed\n-        builder.allowSetThreadLocals(true);\n-        builder.inheritInheritableThreadLocals(false);\n-        testNoInheritContextClassLoader(builder);\n-        builder.inheritInheritableThreadLocals(true);\n-        testInheritContextClassLoader(builder);\n-    }\n-\n","filename":"test\/jdk\/java\/lang\/Thread\/BuilderTest.java","additions":0,"deletions":111,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -0,0 +1,195 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test that Thread.sleep emits a JFR jdk.ThreadSleep event\n+ * @modules jdk.jfr\n+ * @run junit ThreadSleepEvent\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.time.Duration;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ThreadFactory;\n+import java.util.stream.IntStream;\n+import java.util.stream.LongStream;\n+import java.util.stream.Stream;\n+import static java.util.concurrent.TimeUnit.*;\n+\n+import jdk.jfr.Recording;\n+import jdk.jfr.consumer.RecordedEvent;\n+import jdk.jfr.consumer.RecordingFile;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class ThreadSleepEvent {\n+    private static final String THREAD_SLEEP_EVENT_NAME = \"jdk.ThreadSleep\";\n+\n+    static Stream<ThreadFactory> threadFactories() {\n+        return Stream.of(\n+                Thread.ofPlatform().factory(),\n+                Thread.ofVirtual().factory()\n+        );\n+    }\n+\n+    \/\/ Arguments.of(ThreadFactory, millis)\n+    static Stream<Arguments> threadFactoryAndMillis() {\n+        long[] millis = {0, 1000, Long.MAX_VALUE};\n+        return threadFactories()\n+                .flatMap(f -> LongStream.of(millis)\n+                        .mapToObj(ms -> Arguments.of(f, ms)));\n+    }\n+\n+    \/\/ Arguments.of(ThreadFactory, millis, nanos)\n+    static Stream<Arguments> threadFactoryAndMillisAndNanos() {\n+        int[] nanos = {0, 1000, 999_999};\n+        return threadFactoryAndMillis().flatMap(a -> IntStream.of(nanos)\n+                .mapToObj(ns -> Arguments.of(a.get()[0], a.get()[1], ns)));\n+    }\n+\n+    \/\/ Arguments.of(ThreadFactory, Duration)\n+    static Stream<Arguments> threadFactoryAndDuration() {\n+        Duration[] durations = {\n+                Duration.ofNanos(0),\n+                Duration.ofSeconds(1),\n+                Duration.ofSeconds(Long.MAX_VALUE, 999_999_999)\n+        };\n+        return threadFactories()\n+                .flatMap(f -> Stream.of(durations)\n+                        .map(d -> Arguments.of(f, d)));\n+    }\n+\n+    \/**\n+     * Test Thread.sleep(long) emits event.\n+     *\/\n+    @ParameterizedTest\n+    @MethodSource(\"threadFactoryAndMillis\")\n+    void testSleep(ThreadFactory factory, long millis) throws Exception {\n+        long expectedTime = MILLISECONDS.toNanos(millis);\n+        long recordedTime = testSleep(factory, () -> Thread.sleep(millis));\n+        assertEquals(expectedTime, recordedTime);\n+    }\n+\n+    \/**\n+     * Test Thread.sleep(long, int) emits event.\n+     *\/\n+    @ParameterizedTest\n+    @MethodSource(\"threadFactoryAndMillisAndNanos\")\n+    void testSleep(ThreadFactory factory, long millis, int nanos) throws Exception {\n+        long expectedTime = MILLISECONDS.toNanos(millis);\n+        expectedTime += Math.min(Long.MAX_VALUE - expectedTime, nanos);\n+        long recordedTime = testSleep(factory, () -> Thread.sleep(millis, nanos));\n+        assertEquals(expectedTime, recordedTime);\n+    }\n+\n+    \/**\n+     * Test Thread.sleep(Duration) emits event.\n+     *\/\n+    @ParameterizedTest\n+    @MethodSource(\"threadFactoryAndDuration\")\n+    void testSleep(ThreadFactory factory, Duration duration) throws Exception {\n+        long expectedTime = NANOSECONDS.convert(duration);\n+        long recordedTime = testSleep(factory, () -> Thread.sleep(duration));\n+        assertEquals(expectedTime, recordedTime);\n+    }\n+\n+    \/**\n+     * Test that sleeper emits event, returning the recorded sleep time.\n+     *\/\n+    long testSleep(ThreadFactory factory, Sleeper sleeper) throws Exception {\n+        try (Recording recording = new Recording()) {\n+            long tid;\n+\n+            recording.enable(THREAD_SLEEP_EVENT_NAME);\n+            recording.start();\n+            try {\n+\n+                \/\/ start thread to run sleeper task\n+                var latch = new CountDownLatch(1);\n+                Thread thread = factory.newThread(() -> {\n+                    latch.countDown();\n+                    try {\n+                        sleeper.run();\n+                    } catch (InterruptedException e) {\n+                        \/\/ ignore;\n+                    }\n+                });\n+                thread.start();\n+\n+                \/\/ wait for thread to execute\n+                latch.await();\n+\n+                \/\/ don't wait for the sleep time\n+                thread.interrupt();\n+\n+                thread.join();\n+                tid = thread.threadId();\n+            } finally {\n+                recording.stop();\n+            }\n+\n+            \/\/ find the ThreadSleep event recorded by the thread\n+            RecordedEvent event = find(recording, THREAD_SLEEP_EVENT_NAME, tid).orElseThrow();\n+            return event.getLong(\"time\");\n+        }\n+    }\n+\n+    private interface Sleeper {\n+        void run() throws InterruptedException;\n+    }\n+\n+    \/**\n+     * Find a recorded event with the given name and recorded by a thread with the\n+     * given thread ID.\n+     *\/\n+    private static Optional<RecordedEvent> find(Recording recording,\n+                                                String name,\n+                                                long tid) throws Exception {\n+        Path recordingFile = recordingFile(recording);\n+        List<RecordedEvent> events = RecordingFile.readAllEvents(recordingFile);\n+        return events.stream()\n+                .filter(e -> e.getEventType().getName().equals(name)\n+                        && e.getThread().getJavaThreadId() == tid)\n+                .findAny();\n+    }\n+\n+    \/**\n+     * Return the file path to the recording file.\n+     *\/\n+    private static Path recordingFile(Recording recording) throws Exception {\n+        Path recordingFile = recording.getDestination();\n+        if (recordingFile == null) {\n+            ProcessHandle h = ProcessHandle.current();\n+            recordingFile = Path.of(\"recording-\" + recording.getId() + \"-pid\" + h.pid() + \".jfr\");\n+            recording.dump(recordingFile);\n+        }\n+        return recordingFile;\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Thread\/ThreadSleepEvent.java","additions":195,"deletions":0,"binary":false,"changes":195,"status":"added"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test Thread.sleep when emitting the JFR jdk.ThreadSleep event throws OOME\n+ * @modules java.base\/jdk.internal.event\n+ * @compile\/module=java.base jdk\/internal\/event\/ThreadSleepEvent.java\n+ * @run junit ThreadSleepEventThrows\n+ *\/\n+\n+import jdk.internal.event.ThreadSleepEvent;\n+import static java.util.concurrent.TimeUnit.NANOSECONDS;\n+\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class ThreadSleepEventThrows {\n+\n+    \/**\n+     * Test Thread.sleep when creating the ThreadSleepEvent fails with OOME.\n+     *\/\n+    @Test\n+    void testThreadSleepEventCreateThrows() throws Exception {\n+        ThreadSleepEvent.setCreateThrows(true);\n+        try {\n+            testSleep();\n+        } finally {\n+            ThreadSleepEvent.setCreateThrows(false);\n+        }\n+    }\n+\n+    \/**\n+     * Test Thread.sleep when ThreadSleepEvent.begin fails with OOME.\n+     *\/\n+    @Test\n+    void testThreadSleepEventBeginThrows() throws Exception {\n+        ThreadSleepEvent.setBeginThrows(true);\n+        try {\n+            testSleep();\n+        } finally {\n+            ThreadSleepEvent.setBeginThrows(false);\n+        }\n+    }\n+\n+    \/**\n+     * Test Thread.sleep when ThreadSleepEvent.commit fails with OOME.\n+     *\/\n+    @Test\n+    void testThreadSleepEventCommitThrows() throws Exception {\n+        ThreadSleepEvent.setCommitThrows(true);\n+        try {\n+            testSleep();\n+        } finally {\n+            ThreadSleepEvent.setCommitThrows(false);\n+        }\n+    }\n+\n+    \/**\n+     * Test Thread.sleep takes a minimum duration and doesn't throw.\n+     *\/\n+    private void testSleep() throws Exception {\n+        long start = currentTimeMillis();\n+        Thread.sleep(SLEEP_TIME);\n+        long duration = currentTimeMillis() - start;\n+        assertTrue(duration >= MIN_EXPECTED_DURATION,\n+            \"Duration \" + duration + \"ms, expected >= \" + MIN_EXPECTED_DURATION + \"ms\");\n+    }\n+\n+    private static final int SLEEP_TIME = 2000;\n+    private static final int MIN_EXPECTED_DURATION = 1900;\n+\n+    private static long currentTimeMillis() {\n+        return NANOSECONDS.toMillis(System.nanoTime());\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Thread\/ThreadSleepEventThrows.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"},{"patch":"@@ -0,0 +1,71 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.event;\n+\n+\/**\n+ * ThreadSleepEvent to optionally throw OOME at create, begin or commit time.\n+ *\/\n+public class ThreadSleepEvent extends Event {\n+    private static boolean throwOnCreate;\n+    private static boolean throwOnBegin;\n+    private static boolean throwOnCommit;\n+\n+    public long time;\n+\n+    public static boolean isTurnedOn() {\n+        return true;\n+    }\n+\n+    public static void setCreateThrows(boolean value) {\n+        throwOnCreate = value;\n+    }\n+\n+    public static void setBeginThrows(boolean value) {\n+        throwOnBegin = value;\n+    }\n+\n+    public static void setCommitThrows(boolean value) {\n+        throwOnCommit = value;\n+    }\n+\n+    public ThreadSleepEvent() {\n+        if (throwOnCreate) {\n+            throw new OutOfMemoryError();\n+        }\n+    }\n+\n+    @Override\n+    public void begin() {\n+        if (throwOnBegin) {\n+            throw new OutOfMemoryError();\n+        }\n+    }\n+\n+    @Override\n+    public void commit() {\n+        if (throwOnCommit) {\n+            throw new OutOfMemoryError();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Thread\/java.base\/jdk\/internal\/event\/ThreadSleepEvent.java","additions":71,"deletions":0,"binary":false,"changes":71,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n- * @enablePreview\n@@ -34,1 +33,1 @@\n- *     -Djdk.virtualThreadScheduler.maxPoolSize=2 ActiviateSpareCarrier 100\n+ *     -Djdk.virtualThreadScheduler.maxPoolSize=2 ActivateSpareCarrier 100\n@@ -43,1 +42,1 @@\n-public class ActiviateSpareCarrier {\n+public class ActivateSpareCarrier {\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ActivateSpareCarrier.java","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ActiviateSpareCarrier.java","status":"renamed"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/Collectable.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/CustomScheduler.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n@@ -60,1 +59,1 @@\n-                \/\/ bottom-most frame of virtual thread should be Continuation.enter\n+                \/\/ bottom-most frame of virtual thread should be VirtualThread.run\n@@ -64,1 +63,1 @@\n-                assertEquals(\"enter\", vthreadStack[vthreadStack.length - 1].getMethodName());\n+                assertEquals(\"run\", vthreadStack[vthreadStack.length - 1].getMethodName());\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/GetStackTrace.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/GetStackTraceWhenRunnable.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n@@ -38,1 +37,0 @@\n- * @enablePreview\n@@ -58,0 +56,1 @@\n+import static org.junit.jupiter.api.Assumptions.*;\n@@ -91,0 +90,2 @@\n+        assumeFalse(Thread.currentThread().isVirtual(), \"Main thread must be platform thread\");\n+\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/HoldsLock.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/JfrEvents.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/Locking.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ParkWithFixedThreadPool.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/Parking.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,112 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * @test\n- * @summary Test that preview APIs throws exception when preview features not enabled\n- * @run junit\/othervm PreviewFeaturesNotEnabled\n- *\/\n-\n-import java.lang.reflect.Method;\n-import java.lang.reflect.InvocationTargetException;\n-import java.util.concurrent.Executors;\n-\n-import org.junit.jupiter.api.Test;\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-class PreviewFeaturesNotEnabled {\n-\n-    \/**\n-     * Thread.ofVirtual should fail with UOE.\n-     *\/\n-    @Test\n-    void testOfVirtual() throws Exception {\n-        Method ofVirtual = Thread.class.getDeclaredMethod(\"ofVirtual\");\n-        var exc = assertThrows(InvocationTargetException.class, () -> ofVirtual.invoke(null));\n-        assertTrue(exc.getCause() instanceof UnsupportedOperationException);\n-    }\n-\n-    \/**\n-     * Thread.startVirtualThread should fail with UOE.\n-     *\/\n-    @Test\n-    void testStartVirutalThread() throws Exception {\n-        Method startVirtualThread = Thread.class.getMethod(\"startVirtualThread\", Runnable.class);\n-        Runnable task = () -> { };\n-        var exc = assertThrows(InvocationTargetException.class,\n-                () -> startVirtualThread.invoke(null, task));\n-        assertTrue(exc.getCause() instanceof UnsupportedOperationException);\n-    }\n-\n-    \/**\n-     * Executors.newVirtualThreadPerTaskExecutor should fail with UOE.\n-     *\/\n-    @Test\n-    void testNewVirtualThreadPerTaskExecutor() throws Exception {\n-        Method newVirtualThreadPerTaskExecutor = Executors.class.getMethod(\"newVirtualThreadPerTaskExecutor\");\n-        var exc = assertThrows(InvocationTargetException.class,\n-                () -> newVirtualThreadPerTaskExecutor.invoke(null));\n-        assertTrue(exc.getCause() instanceof UnsupportedOperationException);\n-    }\n-\n-    \/**\n-     * Directly accessing internal Continuation class should fail with UOE.\n-     *\/\n-    @Test\n-    void testContinuationInitializer() throws Exception {\n-        var exc = assertThrows(ExceptionInInitializerError.class,\n-                () -> Class.forName(\"jdk.internal.vm.Continuation\"));\n-        assertTrue(exc.getCause() instanceof UnsupportedOperationException);\n-    }\n-\n-    \/**\n-     * Thread.isVirtual should not fail.\n-     *\/\n-    @Test\n-    void testIsVirtual() throws Exception {\n-        boolean isVirtual = isVirtual(Thread.currentThread());\n-        assertFalse(isVirtual);\n-    }\n-\n-    \/**\n-     * Thread.ofPlatform should not fail.\n-     *\/\n-    @Test\n-    void testOfPlatform() throws Exception {\n-        Method ofPlatform = Thread.class.getDeclaredMethod(\"ofPlatform\");\n-        Object builder = ofPlatform.invoke(null);\n-        Method startMethod = Class.forName(\"java.lang.Thread$Builder\")\n-                .getMethod(\"start\", Runnable.class);\n-        Runnable task = () -> { };\n-        Thread thread = (Thread) startMethod.invoke(builder, task);\n-    }\n-\n-    \/**\n-     * Invokes Thread::isVirtual reflectively to test if the given thread is a\n-     * virtual thread.\n-     *\/\n-    private static boolean isVirtual(Thread thread) throws Exception {\n-        Method isVirtualMethod = Thread.class.getDeclaredMethod(\"isVirtual\");\n-        return (boolean) isVirtualMethod.invoke(thread);\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/PreviewFeaturesNotEnabled.java","additions":0,"deletions":112,"binary":false,"changes":112,"status":"deleted"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/Reflection.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -40,1 +39,1 @@\n-            ProcessBuilder pb = createTestJvm(\"--enable-preview\", \"ShutdownHook\");\n+            ProcessBuilder pb = createTestJvm(\"ShutdownHook\");\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ShutdownHook.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/StackTraces.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -37,1 +36,0 @@\n- * @enablePreview\n@@ -1250,1 +1248,1 @@\n-            expectDuration(start, \/*min*\/900, \/*max*\/4000);\n+            expectDuration(start, \/*min*\/900, \/*max*\/20_000);\n@@ -1340,1 +1338,1 @@\n-            expectDuration(start, \/*min*\/900, \/*max*\/4000);\n+            expectDuration(start, \/*min*\/900, \/*max*\/20_000);\n@@ -1357,1 +1355,1 @@\n-                expectDuration(start, \/*min*\/900, \/*max*\/4000);\n+                expectDuration(start, \/*min*\/900, \/*max*\/20_000);\n@@ -1385,1 +1383,1 @@\n-            expectDuration(start, \/*min*\/900, \/*max*\/4000);\n+            expectDuration(start, \/*min*\/900, \/*max*\/20_000);\n@@ -1528,16 +1526,0 @@\n-    \/**\n-     * Test Thread.xxxContextClassLoader when thread locals not supported.\n-     *\/\n-    @Test\n-    void testContextClassLoader5() throws Exception {\n-        ClassLoader scl = ClassLoader.getSystemClassLoader();\n-        ClassLoader loader = new ClassLoader() { };\n-        VThreadRunner.run(VThreadRunner.NO_THREAD_LOCALS, () -> {\n-            Thread t = Thread.currentThread();\n-            assertTrue(t.getContextClassLoader() == scl);\n-            assertThrows(UnsupportedOperationException.class,\n-                         () -> t.setContextClassLoader(loader));\n-            assertTrue(t.getContextClassLoader() == scl);\n-        });\n-    }\n-\n@@ -1549,1 +1531,1 @@\n-    void testContextClassLoader6() throws Exception {\n+    void testContextClassLoader5() throws Exception {\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ThreadAPI.java","additions":5,"deletions":23,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -69,42 +68,0 @@\n-    \/**\n-     * Test Thread that cannot set values for its copy of thread-locals.\n-     *\/\n-    @Test\n-    void testThreadLocal3() throws Exception {\n-        Object INITIAL_VALUE = new Object();\n-        ThreadLocal<Object> LOCAL2 = new ThreadLocal<>() {\n-            @Override\n-            protected Object initialValue() {\n-                return INITIAL_VALUE;\n-            }\n-        };\n-        ThreadLocal<Object> INHERITED_LOCAL2 = new InheritableThreadLocal<>()  {\n-            @Override\n-            protected Object initialValue() {\n-                return INITIAL_VALUE;\n-            }\n-        };\n-\n-        VThreadRunner.run(VThreadRunner.NO_THREAD_LOCALS, () -> {\n-            assertThrows(UnsupportedOperationException.class, () -> LOCAL.set(null));\n-            assertThrows(UnsupportedOperationException.class, () -> LOCAL.set(new Object()));\n-            assertNull(LOCAL.get());\n-            LOCAL.remove();  \/\/ should not throw\n-\n-            assertThrows(UnsupportedOperationException.class, () -> LOCAL2.set(null));\n-            assertThrows(UnsupportedOperationException.class, () -> LOCAL2.set(new Object()));\n-            assertTrue(LOCAL2.get() == INITIAL_VALUE);\n-            LOCAL2.remove();  \/\/ should not throw\n-\n-            assertThrows(UnsupportedOperationException.class, () -> INHERITED_LOCAL.set(null));\n-            assertThrows(UnsupportedOperationException.class, () -> INHERITED_LOCAL.set(new Object()));\n-            assertNull(INHERITED_LOCAL.get());\n-            INHERITED_LOCAL.remove();  \/\/ should not throw\n-\n-            assertThrows(UnsupportedOperationException.class, () -> INHERITED_LOCAL2.set(null));\n-            assertThrows(UnsupportedOperationException.class, () -> INHERITED_LOCAL2.set(new Object()));\n-            assertTrue(INHERITED_LOCAL2.get() == INITIAL_VALUE);\n-            INHERITED_LOCAL2.remove();  \/\/ should not throw\n-        });\n-    }\n-\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/ThreadLocals.java","additions":0,"deletions":43,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n@@ -87,1 +86,1 @@\n-     * Runs a task in a virutal thread, returning a String with any output printed\n+     * Run a task in a virtual thread, returning a String with any output printed\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/TracePinnedThreads.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test diagnostic option for detecting a virtual thread using thread locals\n+ * @library \/test\/lib\n+ * @run junit\/othervm -Djdk.traceVirtualThreadLocals TraceVirtualThreadLocals\n+ * @run junit\/othervm -Djdk.traceVirtualThreadLocals=true TraceVirtualThreadLocals\n+ *\/\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+\n+import jdk.test.lib.thread.VThreadRunner;\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class TraceVirtualThreadLocals {\n+\n+    @Test\n+    void testInitialValue() throws Exception {\n+        String output = run(() -> {\n+            ThreadLocal<String> name = new ThreadLocal<>() {\n+                @Override\n+                protected String initialValue() {\n+                    return \"<unnamed>\";\n+                }\n+            };\n+            name.get();\n+        });\n+        assertContains(output, \"java.lang.ThreadLocal.setInitialValue\");\n+    }\n+\n+    @Test\n+    void testSet() throws Exception {\n+        String output = run(() -> {\n+            ThreadLocal<String> name = new ThreadLocal<>();\n+            name.set(\"duke\");\n+        });\n+        assertContains(output, \"java.lang.ThreadLocal.set\");\n+    }\n+\n+    \/**\n+     * Run a task in a virtual thread, returning a String with any output printed\n+     * to standard output.\n+     *\/\n+    private static String run(Runnable task) throws Exception {\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        PrintStream original = System.out;\n+        System.setOut(new PrintStream(baos, true));\n+        try {\n+            VThreadRunner.run(task::run);\n+        } finally {\n+            System.setOut(original);\n+        }\n+        String output = new String(baos.toByteArray());\n+        System.out.println(output);\n+        return output;\n+    }\n+\n+    \/**\n+     * Tests that s1 contains s2.\n+     *\/\n+    private static void assertContains(String s1, String s2) {\n+        assertTrue(s1.contains(s2), s2 + \" not found!!!\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/TraceVirtualThreadLocals.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @summary Test parking when pinned and emitting the JFR VirtualThreadPinnedEvent throws\n+ * @modules java.base\/jdk.internal.event\n+ * @compile\/module=java.base jdk\/internal\/event\/VirtualThreadPinnedEvent.java\n+ * @run junit VirtualThreadPinnedEventThrows\n+ *\/\n+\n+import java.lang.ref.Reference;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.locks.LockSupport;\n+import jdk.internal.event.VirtualThreadPinnedEvent;\n+\n+import org.junit.jupiter.api.Test;\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class VirtualThreadPinnedEventThrows {\n+\n+    \/**\n+     * Test parking when pinned and creating the VirtualThreadPinnedEvent fails with OOME.\n+     *\/\n+    @Test\n+    void testVirtualThreadPinnedEventCreateThrows() throws Exception {\n+        VirtualThreadPinnedEvent.setCreateThrows(true);\n+        try {\n+            testParkWhenPinned();\n+        } finally {\n+            VirtualThreadPinnedEvent.setCreateThrows(false);\n+        }\n+    }\n+\n+    \/**\n+     * Test parking when pinned and VirtualThreadPinnedEvent.begin fails with OOME.\n+     *\/\n+    @Test\n+    void testVirtualThreadPinnedEventBeginThrows() throws Exception {\n+        VirtualThreadPinnedEvent.setBeginThrows(true);\n+        try {\n+            testParkWhenPinned();\n+        } finally {\n+            VirtualThreadPinnedEvent.setBeginThrows(false);\n+        }\n+    }\n+\n+    \/**\n+     * Test parking when pinned and VirtualThreadPinnedEvent.commit fails with OOME.\n+     *\/\n+    @Test\n+    void testVirtualThreadPinnedEventCommitThrows() throws Exception {\n+        VirtualThreadPinnedEvent.setCommitThrows(true);\n+        try {\n+            testParkWhenPinned();\n+        } finally {\n+            VirtualThreadPinnedEvent.setCommitThrows(false);\n+        }\n+    }\n+\n+    \/**\n+     * Test parking a virtual thread when pinned.\n+     *\/\n+    private void testParkWhenPinned() throws Exception {\n+        Object lock = new Object();\n+        try {\n+            var completed = new AtomicBoolean();\n+            Thread thread = Thread.startVirtualThread(() -> {\n+                synchronized (lock) {\n+                    LockSupport.park();\n+                    completed.set(true);\n+                }\n+            });\n+\n+            \/\/ wait for thread to park\n+            Thread.State state;\n+            while ((state = thread.getState()) != Thread.State.WAITING) {\n+                assertTrue(state != Thread.State.TERMINATED);\n+                Thread.sleep(10);\n+            }\n+\n+            \/\/ unpark and check that thread completed without exception\n+            LockSupport.unpark(thread);\n+            thread.join();\n+            assertTrue(completed.get());\n+        } finally {\n+            Reference.reachabilityFence(lock);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/VirtualThreadPinnedEventThrows.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/WaitNotify.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/YieldQueuing.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.internal.event;\n+\n+\/**\n+ * VirtualThreadPinnedEvent to optionally throw OOME at create, begin or commit time.\n+ *\/\n+public class VirtualThreadPinnedEvent extends Event {\n+    private static boolean throwOnCreate;\n+    private static boolean throwOnBegin;\n+    private static boolean throwOnCommit;\n+\n+    public static void setCreateThrows(boolean value) {\n+        throwOnCreate = value;\n+    }\n+\n+    public static void setBeginThrows(boolean value) {\n+        throwOnBegin = value;\n+    }\n+\n+    public static void setCommitThrows(boolean value) {\n+        throwOnCommit = value;\n+    }\n+\n+    public VirtualThreadPinnedEvent() {\n+        if (throwOnCreate) {\n+            throw new OutOfMemoryError();\n+        }\n+    }\n+\n+    @Override\n+    public void begin() {\n+        if (throwOnBegin) {\n+            throw new OutOfMemoryError();\n+        }\n+    }\n+\n+    @Override\n+    public void commit() {\n+        if (throwOnCommit) {\n+            throw new OutOfMemoryError();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/java.base\/jdk\/internal\/event\/VirtualThreadPinnedEvent.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @enablePreview\n@@ -38,1 +37,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/GetStackTraceALot.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -35,1 +34,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/PinALot.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -36,1 +35,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/PingPong.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -36,1 +35,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/Skynet.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -35,1 +34,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/SleepALot.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/TimedGet.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -35,1 +34,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/Thread\/virtual\/stress\/YieldALot.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-            assertEquals(r, ((Class<?>) r.arrayType().resolveConstantDesc(LOOKUP)).getComponentType().describeConstable().orElseThrow());\n+            assertEquals(r, r.arrayType().resolveConstantDesc(LOOKUP).getComponentType().describeConstable().orElseThrow());\n@@ -64,1 +64,1 @@\n-            assertEquals(r, Array.newInstance(((Class<?>) r.resolveConstantDesc(LOOKUP)), 0).getClass().describeConstable().orElseThrow().componentType());\n+            assertEquals(r, Array.newInstance(r.resolveConstantDesc(LOOKUP), 0).getClass().describeConstable().orElseThrow().componentType());\n@@ -69,2 +69,2 @@\n-            assertEquals(r, ((Class<?>) r.resolveConstantDesc(LOOKUP)).getComponentType().describeConstable().orElseThrow().arrayType());\n-            assertEquals(r, Array.newInstance(((Class<?>) r.componentType().resolveConstantDesc(LOOKUP)), 0).getClass().describeConstable().orElseThrow());\n+            assertEquals(r, r.resolveConstantDesc(LOOKUP).getComponentType().describeConstable().orElseThrow().arrayType());\n+            assertEquals(r, Array.newInstance(r.componentType().resolveConstantDesc(LOOKUP), 0).getClass().describeConstable().orElseThrow());\n@@ -91,1 +91,1 @@\n-                    Class c = (Class)cr.resolveConstantDesc(MethodHandles.lookup());\n+                    Class<?> c = cr.resolveConstantDesc(MethodHandles.lookup());\n@@ -109,1 +109,1 @@\n-                                           (ClassDesc) p.clazz.describeConstable().orElseThrow());\n+                                           p.clazz.describeConstable().orElseThrow());\n@@ -118,1 +118,1 @@\n-                    assertEquals(c, ((ClassDesc) p.arrayClass.describeConstable().orElseThrow()).componentType());\n+                    assertEquals(c, p.arrayClass.describeConstable().orElseThrow().componentType());\n@@ -231,3 +231,3 @@\n-            assertEquals(classToDescriptor((Class<?>) a0.resolveConstantDesc(LOOKUP)), a0.descriptorString());\n-            assertEquals(classToDescriptor((Class<?>) a1.resolveConstantDesc(LOOKUP)), a1.descriptorString());\n-            assertEquals(classToDescriptor((Class<?>) a2.resolveConstantDesc(LOOKUP)), a2.descriptorString());\n+            assertEquals(classToDescriptor(a0.resolveConstantDesc(LOOKUP)), a0.descriptorString());\n+            assertEquals(classToDescriptor(a1.resolveConstantDesc(LOOKUP)), a1.descriptorString());\n+            assertEquals(classToDescriptor(a2.resolveConstantDesc(LOOKUP)), a2.descriptorString());\n","filename":"test\/jdk\/java\/lang\/constant\/ClassDescTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-import java.lang.invoke.MethodHandle;\n@@ -52,1 +51,1 @@\n-\/**\n+\/*\n@@ -102,1 +101,1 @@\n-        String s = (String) ((MethodHandle) invoker.resolveConstantDesc(LOOKUP))\n+        String s = (String) invoker.resolveConstantDesc(LOOKUP)\n","filename":"test\/jdk\/java\/lang\/constant\/CondyDescTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-            assertEquals(r.invocationType().resolveConstantDesc(LOOKUP), ((MethodHandle) r.resolveConstantDesc(LOOKUP)).type());\n+            assertEquals(r.invocationType().resolveConstantDesc(LOOKUP), r.resolveConstantDesc(LOOKUP).type());\n@@ -117,1 +117,1 @@\n-        assertMHEquals(((MethodHandle) r.resolveConstantDesc(LOOKUP)), mh);\n+        assertMHEquals(r.resolveConstantDesc(LOOKUP), mh);\n@@ -182,1 +182,1 @@\n-        MethodHandle mh1 = (MethodHandle) takesInteger.resolveConstantDesc(LOOKUP);\n+        MethodHandle mh1 = takesInteger.resolveConstantDesc(LOOKUP);\n@@ -194,1 +194,1 @@\n-        MethodHandle mh2 = (MethodHandle) takesInt.resolveConstantDesc(LOOKUP);\n+        MethodHandle mh2 = takesInt.resolveConstantDesc(LOOKUP);\n@@ -244,2 +244,2 @@\n-        TestHelpers.TestClass instance = (TestHelpers.TestClass) ((MethodHandle)ctorDesc.resolveConstantDesc(LOOKUP)).invokeExact();\n-        TestHelpers.TestClass instance2 = (TestHelpers.TestClass) ((MethodHandle)ctorDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact();\n+        TestHelpers.TestClass instance = (TestHelpers.TestClass) ctorDesc.resolveConstantDesc(LOOKUP).invokeExact();\n+        TestHelpers.TestClass instance2 = (TestHelpers.TestClass) ctorDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact();\n@@ -250,4 +250,4 @@\n-        assertEquals(5, (int) ((MethodHandle)staticMethodDesc.resolveConstantDesc(LOOKUP)).invokeExact(5));\n-        assertEquals(5, (int) ((MethodHandle)staticMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(5));\n-        assertEquals(0, (int) ((MethodHandle)staticIMethodDesc.resolveConstantDesc(LOOKUP)).invokeExact(5));\n-        assertEquals(0, (int) ((MethodHandle)staticIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(5));\n+        assertEquals(5, (int) staticMethodDesc.resolveConstantDesc(LOOKUP).invokeExact(5));\n+        assertEquals(5, (int) staticMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(5));\n+        assertEquals(0, (int) staticIMethodDesc.resolveConstantDesc(LOOKUP).invokeExact(5));\n+        assertEquals(0, (int) staticIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(5));\n@@ -255,4 +255,4 @@\n-        assertEquals(5, (int) ((MethodHandle)instanceMethodDesc.resolveConstantDesc(LOOKUP)).invokeExact(instance, 5));\n-        assertEquals(5, (int) ((MethodHandle)instanceMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instance, 5));\n-        assertEquals(5, (int) ((MethodHandle)instanceIMethodDesc.resolveConstantDesc(LOOKUP)).invokeExact(instanceI, 5));\n-        assertEquals(5, (int) ((MethodHandle)instanceIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instanceI, 5));\n+        assertEquals(5, (int) instanceMethodDesc.resolveConstantDesc(LOOKUP).invokeExact(instance, 5));\n+        assertEquals(5, (int) instanceMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instance, 5));\n+        assertEquals(5, (int) instanceIMethodDesc.resolveConstantDesc(LOOKUP).invokeExact(instanceI, 5));\n+        assertEquals(5, (int) instanceIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instanceI, 5));\n@@ -262,1 +262,1 @@\n-        assertEquals(-1, (int) ((MethodHandle)superMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instance, 5));\n+        assertEquals(-1, (int) superMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instance, 5));\n@@ -266,1 +266,1 @@\n-        assertEquals(0, (int) ((MethodHandle)superIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instance, 5));\n+        assertEquals(0, (int) superIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instance, 5));\n@@ -270,1 +270,1 @@\n-        assertEquals(5, (int) ((MethodHandle)privateMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instance, 5));\n+        assertEquals(5, (int) privateMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instance, 5));\n@@ -274,2 +274,2 @@\n-        assertEquals(0, (int) ((MethodHandle)privateIMethodDesc.resolveConstantDesc(TestHelpers.TestInterface.LOOKUP)).invokeExact(instanceI, 5));\n-        assertEquals(0, (int) ((MethodHandle)privateIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invoke(instanceI, 5));\n+        assertEquals(0, (int) privateIMethodDesc.resolveConstantDesc(TestHelpers.TestInterface.LOOKUP).invokeExact(instanceI, 5));\n+        assertEquals(0, (int) privateIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invoke(instanceI, 5));\n@@ -279,1 +279,1 @@\n-        assertEquals(5, (int) ((MethodHandle)privateStaticMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(5));\n+        assertEquals(5, (int) privateStaticMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(5));\n@@ -283,2 +283,2 @@\n-        assertEquals(0, (int) ((MethodHandle)privateStaticIMethodDesc.resolveConstantDesc(TestHelpers.TestInterface.LOOKUP)).invokeExact(5));\n-        assertEquals(0, (int) ((MethodHandle)privateStaticIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(5));\n+        assertEquals(0, (int) privateStaticIMethodDesc.resolveConstantDesc(TestHelpers.TestInterface.LOOKUP).invokeExact(5));\n+        assertEquals(0, (int) privateStaticIMethodDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(5));\n@@ -295,16 +295,16 @@\n-        ((MethodHandle)staticSetterDesc.resolveConstantDesc(LOOKUP)).invokeExact(6); assertEquals(TestHelpers.TestClass.sf, 6);\n-        assertEquals(6, (int) ((MethodHandle)staticGetterDesc.resolveConstantDesc(LOOKUP)).invokeExact());\n-        assertEquals(6, (int) ((MethodHandle)staticGetterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact());\n-        ((MethodHandle)staticSetterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(7); assertEquals(TestHelpers.TestClass.sf, 7);\n-        assertEquals(7, (int) ((MethodHandle)staticGetterDesc.resolveConstantDesc(LOOKUP)).invokeExact());\n-        assertEquals(7, (int) ((MethodHandle)staticGetterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact());\n-\n-        assertEquals(3, (int) ((MethodHandle)staticGetterIDesc.resolveConstantDesc(LOOKUP)).invokeExact());\n-        assertEquals(3, (int) ((MethodHandle)staticGetterIDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact());\n-\n-        ((MethodHandle)setterDesc.resolveConstantDesc(LOOKUP)).invokeExact(instance, 6); assertEquals(instance.f, 6);\n-        assertEquals(6, (int) ((MethodHandle)getterDesc.resolveConstantDesc(LOOKUP)).invokeExact(instance));\n-        assertEquals(6, (int) ((MethodHandle)getterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instance));\n-        ((MethodHandle)setterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instance, 7); assertEquals(instance.f, 7);\n-        assertEquals(7, (int) ((MethodHandle)getterDesc.resolveConstantDesc(LOOKUP)).invokeExact(instance));\n-        assertEquals(7, (int) ((MethodHandle)getterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP)).invokeExact(instance));\n+        staticSetterDesc.resolveConstantDesc(LOOKUP).invokeExact(6); assertEquals(TestHelpers.TestClass.sf, 6);\n+        assertEquals(6, (int) staticGetterDesc.resolveConstantDesc(LOOKUP).invokeExact());\n+        assertEquals(6, (int) staticGetterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact());\n+        staticSetterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(7); assertEquals(TestHelpers.TestClass.sf, 7);\n+        assertEquals(7, (int) staticGetterDesc.resolveConstantDesc(LOOKUP).invokeExact());\n+        assertEquals(7, (int) staticGetterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact());\n+\n+        assertEquals(3, (int) staticGetterIDesc.resolveConstantDesc(LOOKUP).invokeExact());\n+        assertEquals(3, (int) staticGetterIDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact());\n+\n+        setterDesc.resolveConstantDesc(LOOKUP).invokeExact(instance, 6); assertEquals(instance.f, 6);\n+        assertEquals(6, (int) getterDesc.resolveConstantDesc(LOOKUP).invokeExact(instance));\n+        assertEquals(6, (int) getterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instance));\n+        setterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instance, 7); assertEquals(instance.f, 7);\n+        assertEquals(7, (int) getterDesc.resolveConstantDesc(LOOKUP).invokeExact(instance));\n+        assertEquals(7, (int) getterDesc.resolveConstantDesc(TestHelpers.TestClass.LOOKUP).invokeExact(instance));\n@@ -349,1 +349,1 @@\n-                    MethodHandle m = (MethodHandle)r.resolveConstantDesc(MethodHandles.lookup());\n+                    MethodHandle m = r.resolveConstantDesc(MethodHandles.lookup());\n","filename":"test\/jdk\/java\/lang\/constant\/MethodHandleDescTest.java","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,1 +103,1 @@\n-            testMethodTypeDesc(newDesc, mt.changeReturnType((Class<?>)rc.resolveConstantDesc(LOOKUP)));\n+            testMethodTypeDesc(newDesc, mt.changeReturnType(rc.resolveConstantDesc(LOOKUP)));\n@@ -122,1 +122,1 @@\n-                testMethodTypeDesc(newDesc, mt.changeParameterType(i, (Class<?>)pc.resolveConstantDesc(LOOKUP)));\n+                testMethodTypeDesc(newDesc, mt.changeParameterType(i, pc.resolveConstantDesc(LOOKUP)));\n@@ -149,1 +149,1 @@\n-                testMethodTypeDesc(newDesc, mt.insertParameterTypes(i, (Class<?>)p.resolveConstantDesc(LOOKUP)));\n+                testMethodTypeDesc(newDesc, mt.insertParameterTypes(i, p.resolveConstantDesc(LOOKUP)));\n","filename":"test\/jdk\/java\/lang\/constant\/MethodTypeDescTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-            MethodType mt = (MethodType)mtd.resolveConstantDesc(lookup);\n+            MethodType mt = mtd.resolveConstantDesc(lookup);\n@@ -78,1 +78,1 @@\n-            MethodType mt = (MethodType)mtd.resolveConstantDesc(lookup);\n+            MethodType mt = mtd.resolveConstantDesc(lookup);\n","filename":"test\/jdk\/java\/lang\/constant\/access_test\/pkg1\/MethodTypeDescriptorAccessTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,1 +90,1 @@\n-            MethodType mtype = (MethodType)mtd.resolveConstantDesc(lookup);\n+            MethodType mtype = mtd.resolveConstantDesc(lookup);\n@@ -97,1 +97,1 @@\n-            MethodType mtype = (MethodType)mtd.resolveConstantDesc(lookup);\n+            MethodType mtype = mtd.resolveConstantDesc(lookup);\n","filename":"test\/jdk\/java\/lang\/constant\/methodTypeDesc\/ResolveConstantDesc.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @compile --enable-preview -source ${jdk.version} ParallelTransformerLoaderTest.java\n+ * @compile ParallelTransformerLoaderTest.java\n@@ -41,2 +41,2 @@\n- * @run main\/othervm --enable-preview -javaagent:ParallelTransformerLoaderAgent.jar=Test.jar ParallelTransformerLoaderTest platform\n- * @run main\/othervm --enable-preview -javaagent:ParallelTransformerLoaderAgent.jar=Test.jar ParallelTransformerLoaderTest virtual\n+ * @run main\/othervm -javaagent:ParallelTransformerLoaderAgent.jar=Test.jar ParallelTransformerLoaderTest platform\n+ * @run main\/othervm -javaagent:ParallelTransformerLoaderAgent.jar=Test.jar ParallelTransformerLoaderTest virtual\n","filename":"test\/jdk\/java\/lang\/instrument\/ParallelTransformerLoaderTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @enablePreview\n@@ -40,1 +39,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreadDeadlocks.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -37,1 +36,0 @@\n- * @enablePreview\n@@ -81,2 +79,3 @@\n-            \/\/ current thread should be included\n-            assertTrue(tids.contains(Thread.currentThread().threadId()));\n+            \/\/ if current thread is a platform thread then it should be included\n+            boolean expected = !Thread.currentThread().isVirtual();\n+            assertEquals(expected, tids.contains(Thread.currentThread().threadId()));\n@@ -100,1 +99,2 @@\n-            \/\/ current thread should be included\n+            \/\/ if current thread is a platform thread then it should be included\n+            boolean expected = !Thread.currentThread().isVirtual();\n@@ -102,1 +102,1 @@\n-            assertTrue(Arrays.stream(tids).anyMatch(tid -> tid == currentTid));\n+            assertEquals(expected, Arrays.stream(tids).anyMatch(tid -> tid == currentTid));\n@@ -156,1 +156,5 @@\n-            assertEquals(tid0, infos[0].getThreadId());\n+            if (Thread.currentThread().isVirtual()) {\n+                assertNull(infos[0]);\n+            } else {\n+                assertEquals(tid0, infos[0].getThreadId());\n+            }\n@@ -177,1 +181,5 @@\n-            assertEquals(tid0, infos[0].getThreadId());\n+            if (Thread.currentThread().isVirtual()) {\n+                assertNull(infos[0]);\n+            } else {\n+                assertEquals(tid0, infos[0].getThreadId());\n+            }\n","filename":"test\/jdk\/java\/lang\/management\/ThreadMXBean\/VirtualThreads.java","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,2 +59,1 @@\n- * @enablePreview\n- * @compile -source ${jdk.version} CleanerTest.java\n+ * @compile CleanerTest.java\n","filename":"test\/jdk\/java\/lang\/ref\/CleanerTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/net\/Socket\/Timeouts.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -37,1 +36,0 @@\n- * @enablePreview\n@@ -45,1 +43,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/net\/vthread\/BlockingSocketOps.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/net\/vthread\/HttpALot.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/net\/vthread\/InterruptHttp.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/AdaptorAsyncCloseAfterReceive.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -37,1 +36,0 @@\n- * @enablePreview\n@@ -45,1 +43,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/nio\/channels\/vthread\/BlockingChannelOps.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/util\/concurrent\/ExecutorService\/CloseTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n@@ -33,1 +32,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/java\/util\/concurrent\/ThreadPerTaskExecutor\/ThreadPerTaskExecutorTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @modules jdk.jartool\/sun.tools.jar java.base\/jdk.internal.util.jar\n@@ -52,0 +51,1 @@\n+import java.util.spi.ToolProvider;\n@@ -252,2 +252,2 @@\n-        new sun.tools.jar.Main(System.out, System.err, \"jar\")\n-                .run(args.split(\" +\"));\n+        ToolProvider jar = ToolProvider.findFirst(\"jar\").orElseThrow();\n+        jar.run(System.out, System.err, args.split(\" +\"));\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/mrjar\/TestVersionedStream.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 4825182\n+ * @summary Verifies DefaultBoundedRangeModel.setMinimum() doesn't change extent\n+ * @run main RangeTest\n+ *\/\n+import javax.swing.DefaultBoundedRangeModel;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+\n+public class RangeTest implements ChangeListener {\n+\n+    DefaultBoundedRangeModel model;\n+\n+    static public void main(String s[]) {\n+        new RangeTest();\n+    }\n+\n+    public RangeTest() {\n+        model = new DefaultBoundedRangeModel(-32768, Integer.MAX_VALUE,\n+                                             Integer.MIN_VALUE,\n+                                             Integer.MAX_VALUE);\n+        model.addChangeListener(this);\n+        printState(\"Initial State\");\n+        System.out.println(\"Set min to -32768\");\n+        int extent = model.getExtent();\n+        model.setMinimum(-32768);\n+        if (model.getExtent() != extent) {\n+            throw new RuntimeException(\"extent is changed to \" + model.getExtent());\n+        }\n+    }\n+\n+    public void stateChanged(ChangeEvent e) {\n+        printState(\"... State Changed\");\n+    }\n+\n+    private void printState(String msg) {\n+        System.out.println(msg + \": value=\" + model.getValue()\n+                           + \", extent=\" + model.getExtent()\n+                           + \", min=\" + model.getMinimum()\n+                           + \", max=\" + model.getMaximum());\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/RangeTest.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/ScopedValue\/ManyBindings.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/ScopedValue\/ScopeValueAPI.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,4 +28,4 @@\n- * @compile --enable-preview -source ${jdk.version} StressStackOverflow.java\n- * @run main\/othervm\/timeout=300 -XX:-TieredCompilation --enable-preview StressStackOverflow\n- * @run main\/othervm\/timeout=300 -XX:TieredStopAtLevel=1 --enable-preview StressStackOverflow\n- * @run main\/othervm\/timeout=300 --enable-preview StressStackOverflow\n+ * @compile StressStackOverflow.java\n+ * @run main\/othervm\/timeout=300 -XX:-TieredCompilation StressStackOverflow\n+ * @run main\/othervm\/timeout=300 -XX:TieredStopAtLevel=1 StressStackOverflow\n+ * @run main\/othervm\/timeout=300 StressStackOverflow\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/ScopedValue\/StressStackOverflow.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,53 +0,0 @@\n-\/*\n- * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * @test\n- * @bug 8284199\n- * @summary Test StructuredTaskScope without --enable-preview\n- * @modules jdk.incubator.concurrent\n- * @run junit\/othervm PreviewFeaturesNotEnabled\n- *\/\n-\n-import jdk.incubator.concurrent.StructuredTaskScope;\n-import org.junit.jupiter.api.Test;\n-import static org.junit.jupiter.api.Assertions.*;\n-\n-class PreviewFeaturesNotEnabled {\n-    \/**\n-     * One-arg constructor needs --enable-preview.\n-     *\/\n-    @Test\n-    void testUnsupportedOperationException() {\n-        assertThrows(UnsupportedOperationException.class, StructuredTaskScope::new);\n-    }\n-\n-    \/**\n-     * Two-arg constructor does not need --enable-preview.\n-     *\/\n-    @Test\n-    void testNoUnsupportedOperationException() {\n-        try (var scope = new StructuredTaskScope<Object>(null, Thread::new)) {\n-        }\n-    }\n-}\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/StructuredTaskScope\/PreviewFeaturesNotEnabled.java","additions":0,"deletions":53,"binary":false,"changes":53,"status":"deleted"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -35,1 +34,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/StructuredTaskScope\/StructuredTaskScopeTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/StructuredTaskScope\/StructuredThreadDumpTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/incubator\/concurrent\/StructuredTaskScope\/WithScopedValue.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n- * @enablePreview\n@@ -143,1 +142,0 @@\n-                    .allowSetThreadLocals(false)\n","filename":"test\/jdk\/jdk\/internal\/misc\/TerminatingThreadLocal\/TestTerminatingThreadLocal.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n- * @enablePreview\n@@ -35,1 +34,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/internal\/misc\/ThreadFlock\/ThreadFlockTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/internal\/misc\/ThreadFlock\/WithScopedValue.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,1 @@\n-* @enablePreview\n-* @run testng\/othervm -Xint Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xint Basic\n@@ -36,5 +35,5 @@\n-* @run testng\/othervm -Xcomp -XX:TieredStopAtLevel=3 -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n-* @run testng\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n-* @run testng\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic -XX:CompileCommand=exclude,Basic.manyArgsDriver Basic\n-* @run testng\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic -XX:CompileCommand=exclude,jdk\/internal\/vm\/Continuation.enter Basic\n-* @run testng\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic -XX:CompileCommand=inline,jdk\/internal\/vm\/Continuation.run Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xcomp -XX:TieredStopAtLevel=3 -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic -XX:CompileCommand=exclude,Basic.manyArgsDriver Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic -XX:CompileCommand=exclude,jdk\/internal\/vm\/Continuation.enter Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic -XX:CompileCommand=inline,jdk\/internal\/vm\/Continuation.run Basic\n@@ -50,4 +49,3 @@\n-* @enablePreview\n-* @run testng\/othervm -XX:+VerifyStack -Xint Basic\n-* @run testng\/othervm -XX:+VerifyStack -Xcomp -XX:TieredStopAtLevel=3 -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n-* @run testng\/othervm -XX:+VerifyStack -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+VerifyStack -Xint Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+VerifyStack -Xcomp -XX:TieredStopAtLevel=3 -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n+* @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+VerifyStack -Xcomp -XX:-TieredCompilation -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Basic Basic\n@@ -97,1 +95,1 @@\n-            assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"bar\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\"));\n+            assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"bar\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\"));\n@@ -144,1 +142,1 @@\n-        List<String> baseFrames = List.of(\"bar\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\", \"run\", \"test1\");\n+        List<String> baseFrames = List.of(\"bar\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\", \"run\", \"test1\");\n@@ -155,1 +153,1 @@\n-        expected1.addAll(List.of(\"bar\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\"));\n+        expected1.addAll(List.of(\"bar\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\"));\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/Basic.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n- * @enablePreview\n@@ -37,1 +36,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -51,1 +50,0 @@\n- * @enablePreview\n@@ -58,1 +56,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -72,1 +70,0 @@\n- * @enablePreview\n@@ -79,1 +76,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -93,1 +90,0 @@\n- * @enablePreview\n@@ -100,1 +96,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -114,1 +110,0 @@\n- * @enablePreview\n@@ -121,1 +116,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -135,1 +130,0 @@\n- * @enablePreview\n@@ -142,1 +136,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -156,1 +150,0 @@\n- * @enablePreview\n@@ -163,1 +156,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -177,1 +170,0 @@\n- * @enablePreview\n@@ -184,1 +176,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -198,1 +190,0 @@\n- * @enablePreview\n@@ -205,1 +196,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -219,1 +210,0 @@\n- * @enablePreview\n@@ -226,1 +216,1 @@\n- * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/BasicExt.java","additions":10,"deletions":20,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-* @enablePreview\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/ClassUnloading.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n- * @run main\/othervm\/timeout=300 --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm\/timeout=300 -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n@@ -54,1 +54,1 @@\n- * @run main\/othervm\/timeout=300 --enable-preview -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n+ * @run main\/othervm\/timeout=300 -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -Xbootclasspath\/a:.\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/Fuzz.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-* @enablePreview\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/HumongousStack.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/LiveFramesDriver.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,2 +35,1 @@\n- * @run main\/othervm   --enable-preview\n- *                     -XX:+UnlockDiagnosticVMOptions   -XX:+WhiteBoxAPI\n+ * @run main\/othervm   -XX:+UnlockDiagnosticVMOptions   -XX:+WhiteBoxAPI\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/MovingCompWindow.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,3 +30,2 @@\n- * @enablePreview\n- * @run testng\/othervm -Xint Scoped\n- * @run testng\/othervm -Xcomp -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Scoped Scoped\n+ * @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xint Scoped\n+ * @run testng\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+ShowHiddenFrames -Xcomp -XX:CompileOnly=jdk\/internal\/vm\/Continuation,Scoped Scoped\n@@ -78,1 +77,1 @@\n-                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\"));\n@@ -82,1 +81,1 @@\n-                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\"));\n@@ -86,1 +85,1 @@\n-                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\"));\n@@ -90,1 +89,1 @@\n-                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"run\", \"enter0\", \"enter\"));\n@@ -94,1 +93,1 @@\n-                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\"));\n@@ -98,1 +97,1 @@\n-                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, cont.isDone() ? List.of() : Arrays.asList(\"yield\", \"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\"));\n@@ -123,1 +122,1 @@\n-                        assertEquals(frames.subList(0, 15), Arrays.asList(\"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\", \"run\", \"test1\"));\n+                        assertEquals(frames.subList(0, 18), Arrays.asList(\"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\", \"run\", \"test1\"));\n@@ -127,1 +126,1 @@\n-                        assertEquals(frames, Arrays.asList(\"lambda$bar$14\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, Arrays.asList(\"lambda$bar$14\", \"run\", \"enter0\", \"enter\"));\n@@ -131,1 +130,1 @@\n-                        assertEquals(frames, Arrays.asList(\"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, Arrays.asList(\"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\"));\n@@ -135,1 +134,1 @@\n-                        assertEquals(frames, Arrays.asList(\"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\"));\n+                        assertEquals(frames, Arrays.asList(\"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\"));\n@@ -139,1 +138,1 @@\n-                        assertEquals(frames.subList(0, 15), Arrays.asList(\"lambda$bar$14\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"enter0\", \"enter\", \"run\", \"test1\"));\n+                        assertEquals(frames.subList(0, 18), Arrays.asList(\"lambda$bar$14\", \"run\", \"enter0\", \"enter\", \"run\", \"bar\", \"lambda$foo$8\", \"run\", \"enter0\", \"enter\", \"run\", \"foo\", \"lambda$test1$0\", \"run\", \"enter0\", \"enter\", \"run\", \"test1\"));\n","filename":"test\/jdk\/jdk\/internal\/vm\/Continuation\/Scoped.java","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestThreadEndEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestThreadSleepEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestThreadStartEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestVirtualThreadEndEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestVirtualThreadStartEvent.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestThreadExclusion.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestVirtualThreadExclusion.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/threading\/TestDeepVirtualStackTrace.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/threading\/TestManyVirtualThreads.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n- * @enablePreview\n","filename":"test\/jdk\/jdk\/jfr\/threading\/TestNestedVirtualThreads.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,216 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug     6901992\n- * @summary InvalidJarIndexException due to bug in sun.misc.JarIndex.merge()\n- *          Test URLClassLoader usage of the merge method when using indexes\n- * @author  Diego Belfer\n- * @run main\/othervm -Djdk.net.URLClassPath.enableJarIndex=true JarIndexMergeForClassLoaderTest\n- *\/\n-import java.io.BufferedReader;\n-import java.io.File;\n-import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.util.jar.JarEntry;\n-import java.util.jar.JarOutputStream;\n-\n-public class JarIndexMergeForClassLoaderTest {\n-    static final String slash = File.separator;\n-    static final String testClassesDir = System.getProperty(\"test.classes\", \".\");\n-    static final String jar;\n-    static final boolean debug = true;\n-    static final File tmpFolder = new File(testClassesDir);\n-\n-    static {\n-        jar = System.getProperty(\"java.home\") + slash + \"bin\" + slash + \"jar\";\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-        \/\/ Create the jars file\n-        File jar1 = buildJar1();\n-        File jar2 = buildJar2();\n-        File jar3 = buildJar3();\n-\n-        \/\/ Index jar files in two levels: jar1 -> jar2 -> jar3\n-        createIndex(jar2.getName(), jar3.getName());\n-        createIndex(jar1.getName(), jar2.getName());\n-\n-        \/\/ Get root jar of the URLClassLoader\n-        URL url = jar1.toURI().toURL();\n-\n-        URLClassLoader classLoader = new URLClassLoader(new URL[] { url });\n-\n-        assertResource(classLoader, \"com\/jar1\/resource.file\", \"jar1\");\n-        assertResource(classLoader, \"com\/test\/resource1.file\", \"resource1\");\n-        assertResource(classLoader, \"com\/jar2\/resource.file\", \"jar2\");\n-        assertResource(classLoader, \"com\/test\/resource2.file\", \"resource2\");\n-        assertResource(classLoader, \"com\/test\/resource3.file\", \"resource3\");\n-\n-        \/*\n-         * The following two asserts failed before the fix of the bug 6901992\n-         *\/\n-        \/\/ Check that an existing file is found using the merged index\n-        assertResource(classLoader, \"com\/missing\/jar3\/resource.file\", \"jar3\");\n-        \/\/ Check that a non existent file in directory which does not contain\n-        \/\/ any file is not found and it does not throw InvalidJarIndexException\n-        assertResource(classLoader, \"com\/missing\/nofile\", null);\n-    }\n-\n-    private static File buildJar3() throws FileNotFoundException, IOException {\n-        JarBuilder jar3Builder = new JarBuilder(tmpFolder, \"jar3.jar\");\n-        jar3Builder.addResourceFile(\"com\/test\/resource3.file\", \"resource3\");\n-        jar3Builder.addResourceFile(\"com\/missing\/jar3\/resource.file\", \"jar3\");\n-        return jar3Builder.build();\n-    }\n-\n-    private static File buildJar2() throws FileNotFoundException, IOException {\n-        JarBuilder jar2Builder = new JarBuilder(tmpFolder, \"jar2.jar\");\n-        jar2Builder.addResourceFile(\"com\/jar2\/resource.file\", \"jar2\");\n-        jar2Builder.addResourceFile(\"com\/test\/resource2.file\", \"resource2\");\n-        return jar2Builder.build();\n-    }\n-\n-    private static File buildJar1() throws FileNotFoundException, IOException {\n-        JarBuilder jar1Builder = new JarBuilder(tmpFolder, \"jar1.jar\");\n-        jar1Builder.addResourceFile(\"com\/jar1\/resource.file\", \"jar1\");\n-        jar1Builder.addResourceFile(\"com\/test\/resource1.file\", \"resource1\");\n-        return jar1Builder.build();\n-    }\n-\n-    \/* create the index *\/\n-    static void createIndex(String parentJar, String childJar) {\n-        \/\/ ProcessBuilder is used so that the current directory can be set\n-        \/\/ to the directory that directly contains the jars.\n-        debug(\"Running jar to create the index for: \" + parentJar + \" and \"\n-                + childJar);\n-        ProcessBuilder pb = new ProcessBuilder(jar, \"-i\", parentJar, childJar);\n-\n-        pb.directory(tmpFolder);\n-        \/\/ pd.inheritIO();\n-        try {\n-            Process p = pb.start();\n-            if (p.waitFor() != 0)\n-                throw new RuntimeException(\"jar indexing failed\");\n-\n-            if (debug && p != null) {\n-                debugStream(p.getInputStream());\n-                debugStream(p.getErrorStream());\n-            }\n-        } catch (InterruptedException | IOException x) {\n-            throw new RuntimeException(x);\n-        }\n-    }\n-\n-    private static void debugStream(InputStream is) throws IOException {\n-        try (BufferedReader reader = new BufferedReader(new InputStreamReader(is))) {\n-            String line;\n-            while ((line = reader.readLine()) != null) {\n-                debug(line);\n-            }\n-        }\n-    }\n-\n-    private static void assertResource(URLClassLoader classLoader, String file,\n-            String expectedContent) throws IOException {\n-        InputStream fileStream = classLoader.getResourceAsStream(file);\n-\n-        if (fileStream == null && expectedContent == null) {\n-            return;\n-        }\n-        if (fileStream == null && expectedContent != null) {\n-            throw new RuntimeException(\n-                    buildMessage(file, expectedContent, null));\n-        }\n-        try {\n-            String actualContent = readAsString(fileStream);\n-\n-            if (fileStream != null && expectedContent == null) {\n-                throw new RuntimeException(buildMessage(file, null,\n-                        actualContent));\n-            }\n-            if (!expectedContent.equals(actualContent)) {\n-                throw new RuntimeException(buildMessage(file, expectedContent,\n-                        actualContent));\n-            }\n-        } finally {\n-            fileStream.close();\n-        }\n-    }\n-\n-    private static String buildMessage(String file, String expectedContent,\n-            String actualContent) {\n-        return \"Expected: \" + expectedContent + \" for: \" + file + \" was: \"\n-                + actualContent;\n-    }\n-\n-    private static String readAsString(InputStream fileStream)\n-            throws IOException {\n-        byte[] buffer = new byte[1024];\n-        int count, len = 0;\n-        while ((count = fileStream.read(buffer, len, buffer.length-len)) != -1)\n-                len += count;\n-        return new String(buffer, 0, len, \"ASCII\");\n-    }\n-\n-    static void debug(Object message) {\n-        if (debug)\n-            System.out.println(message);\n-    }\n-\n-    \/*\n-     * Helper class for building jar files\n-     *\/\n-    public static class JarBuilder {\n-        private JarOutputStream os;\n-        private File jarFile;\n-\n-        public JarBuilder(File tmpFolder, String jarName)\n-            throws FileNotFoundException, IOException\n-        {\n-            this.jarFile = new File(tmpFolder, jarName);\n-            this.os = new JarOutputStream(new FileOutputStream(jarFile));\n-        }\n-\n-        public void addResourceFile(String pathFromRoot, String content)\n-            throws IOException\n-        {\n-            JarEntry entry = new JarEntry(pathFromRoot);\n-            os.putNextEntry(entry);\n-            os.write(content.getBytes(\"ASCII\"));\n-            os.closeEntry();\n-        }\n-\n-        public File build() throws IOException {\n-            os.close();\n-            return jarFile;\n-        }\n-    }\n-}\n-\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/JarIndexMergeForClassLoaderTest.java","additions":0,"deletions":216,"binary":false,"changes":216,"status":"deleted"},{"patch":"@@ -1,117 +0,0 @@\n-\/*\n- * Copyright (c) 2012, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6901992\n- * @summary InvalidJarIndexException due to bug in sun.misc.JarIndex.merge()\n- * @modules java.base\/jdk.internal.util.jar\n- * @compile -XDignore.symbol.file JarIndexMergeTest.java\n- * @run main JarIndexMergeTest\n- * @author  Diego Belfer\n- *\/\n-\n-import java.io.File;\n-import java.io.FileNotFoundException;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.util.List;\n-import java.util.jar.JarEntry;\n-import java.util.jar.JarOutputStream;\n-\/\/ implementation specific API\n-import jdk.internal.util.jar.JarIndex;\n-\n-public class JarIndexMergeTest {\n-    static final String slash = File.separator;\n-    static final String testClassesDir = System.getProperty(\"test.classes\", \".\");\n-    static final File tmpFolder = new File(testClassesDir);\n-\n-    public static void main(String[] args) throws Exception {\n-        File jar1 = buildJar1();\n-        File jar2 = buildJar2();\n-\n-        JarIndex jarIndex1 = new JarIndex(new String[] { jar1.getAbsolutePath() });\n-        JarIndex jarIndex2 = new JarIndex(new String[] { jar2.getAbsolutePath() });\n-\n-        jarIndex1.merge(jarIndex2, null);\n-\n-        assertFileResolved(jarIndex2, \"com\/test1\/resource1.file\",\n-                           jar1.getAbsolutePath());\n-        assertFileResolved(jarIndex2, \"com\/test2\/resource2.file\",\n-                           jar2.getAbsolutePath());\n-    }\n-\n-    static void assertFileResolved(JarIndex jarIndex2, String file,\n-                                   String jarName) {\n-        @SuppressWarnings(\"unchecked\")\n-        List<String> jarLists = (List<String>)jarIndex2.get(file);\n-        if (jarLists == null || jarLists.size() == 0 ||\n-            !jarName.equals(jarLists.get(0))) {\n-            throw new RuntimeException(\n-                \"Unexpected result: the merged index must resolve file: \"\n-                + file);\n-        }\n-    }\n-\n-    private static File buildJar1() throws FileNotFoundException, IOException {\n-        JarBuilder jar1Builder = new JarBuilder(tmpFolder, \"jar1-merge.jar\");\n-        jar1Builder.addResourceFile(\"com\/test1\/resource1.file\", \"resource1\");\n-        return jar1Builder.build();\n-    }\n-\n-    private static File buildJar2() throws FileNotFoundException, IOException {\n-        JarBuilder jar2Builder = new JarBuilder(tmpFolder, \"jar2-merge.jar\");\n-        jar2Builder.addResourceFile(\"com\/test2\/resource2.file\", \"resource2\");\n-        return jar2Builder.build();\n-    }\n-\n-    \/*\n-     * Helper class for building jar files\n-     *\/\n-    public static class JarBuilder {\n-        private JarOutputStream os;\n-        private File jarFile;\n-\n-        public JarBuilder(File tmpFolder, String jarName)\n-            throws FileNotFoundException, IOException\n-        {\n-            this.jarFile = new File(tmpFolder, jarName);\n-            this.os = new JarOutputStream(new FileOutputStream(jarFile));\n-        }\n-\n-        public void addResourceFile(String pathFromRoot, String content)\n-            throws IOException\n-        {\n-            JarEntry entry = new JarEntry(pathFromRoot);\n-            os.putNextEntry(entry);\n-            os.write(content.getBytes(\"ASCII\"));\n-            os.closeEntry();\n-        }\n-\n-        public File build() throws IOException {\n-            os.close();\n-            return jarFile;\n-        }\n-    }\n-}\n-\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/JarIndexMergeTest.java","additions":0,"deletions":117,"binary":false,"changes":117,"status":"deleted"},{"patch":"@@ -1,406 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 6887710\n- * @summary Verify the impact of sun.misc.JarIndex.metaInfFilenames on ServiceLoader\n- * @modules jdk.jartool\/sun.tools.jar\n- *          jdk.httpserver\n- *          jdk.compiler\n- *          jdk.zipfs\n- * @run main\/othervm -Djdk.net.URLClassPath.enableJarIndex=true Basic\n- *\/\n-\n-import java.io.IOException;\n-import java.io.BufferedReader;\n-import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.io.OutputStream;\n-import java.net.InetSocketAddress;\n-import java.net.URI;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.util.Arrays;\n-import java.util.Iterator;\n-import java.util.ServiceLoader;\n-import com.sun.net.httpserver.Headers;\n-import com.sun.net.httpserver.HttpExchange;\n-import com.sun.net.httpserver.HttpHandler;\n-import com.sun.net.httpserver.HttpServer;\n-\n-\/**\n- * Verifies the impact of sun.misc.JarIndex.metaInfFilenames on ServiceLoader\n- * and on finding resources via Class.getResource.\n- *\n- * 1) Compile the test sources:\n- *   jarA:\n- *     META-INF\/services\/my.happy.land\n- *     com\/message\/spi\/MessageService.java\n- *     a\/A.java\n- *   jarB:\n- *     META-INF\/JAVA2.DS\n- *     META-INF\/services\/no.name.service\n- *     b\/B.java\n- *   jarC:\n- *     META-INF\/fonts.mf\n- *     META-INF\/fonts\/Company-corporate.ttf\n- *     META-INF\/fonts\/kidpr.ttf\n- *     META-INF\/services\/com.message.spi.MessageService\n- *     my\/impl\/StandardMessageService.java\n- *\n- * 2) Build three jar files a.jar, b.jar, c.jar\n- *\n- * 3) Create an index in a.jar (jar -i a.jar b.jar c.jar)\n- *      with sun.misc.JarIndex.metaInfFilenames=true\n- *\n- * 4) Start a HTTP server serving out the three jars.\n- *\n- * The test then tries to locate services\/resources within the jars using\n- * URLClassLoader. Each request to the HTTP server is recorded to ensure\n- * only the correct amount of requests are being made.\n- *\n- *\/\n-\n-public class Basic {\n-    static final String slash = File.separator;\n-    static final String[] testSources =  {\n-         \"jarA\" + slash + \"a\" + slash + \"A.java\",\n-         \"jarA\" + slash + \"com\" + slash + \"message\" + slash + \"spi\" + slash + \"MessageService.java\",\n-         \"jarB\" + slash + \"b\" + slash + \"B.java\",\n-         \"jarC\" + slash + \"my\" + slash + \"impl\" + slash + \"StandardMessageService.java\"};\n-\n-    static final String testSrc = System.getProperty(\"test.src\");\n-    static final String testSrcDir = testSrc != null ? testSrc : \".\";\n-    static final String testClasses = System.getProperty(\"test.classes\");\n-    static final String testClassesDir = testClasses != null ? testClasses : \".\";\n-\n-    static JarHttpServer httpServer;\n-\n-    public static void main(String[] args) throws Exception {\n-\n-        \/\/ Set global url cache to false so that we can track every jar request.\n-        (new URL(\"http:\/\/localhost\/\")).openConnection().setDefaultUseCaches(false);\n-\n-        buildTest();\n-\n-        try {\n-            httpServer = new JarHttpServer(testClassesDir);\n-            httpServer.start();\n-\n-            doTest(httpServer.getAddress());\n-\n-        } catch (IOException ioe) {\n-            ioe.printStackTrace();\n-        } finally {\n-            if (httpServer != null) { httpServer.stop(2); }\n-        }\n-    }\n-\n-    static void buildTest() {\n-        \/* compile the source that will be used to generate the jars *\/\n-        for (int i=0; i<testSources.length; i++)\n-            testSources[i] = testSrcDir + slash + testSources[i];\n-\n-        compile(\"-d\" , testClassesDir,\n-                \"-sourcepath\", testSrcDir,\n-                testSources[0], testSources[1], testSources[2], testSources[3]);\n-\n-        \/* build the 3 jar files *\/\n-        jar(\"-cf\", testClassesDir + slash + \"a.jar\",\n-            \"-C\", testClassesDir, \"a\",\n-            \"-C\", testClassesDir, \"com\",\n-            \"-C\", testSrcDir + slash + \"jarA\", \"META-INF\");\n-        jar(\"-cf\", testClassesDir + slash + \"b.jar\",\n-            \"-C\", testClassesDir, \"b\",\n-            \"-C\", testSrcDir + slash + \"jarB\", \"META-INF\");\n-        jar(\"-cf\", testClassesDir + slash + \"c.jar\",\n-            \"-C\", testClassesDir, \"my\",\n-            \"-C\", testSrcDir + slash + \"jarC\", \"META-INF\");\n-\n-        \/* Create an index in a.jar for b.jar and c.jar *\/\n-        createIndex(testClassesDir);\n-    }\n-\n-    \/* run jar <args> *\/\n-    static void jar(String... args) {\n-        debug(\"Running: jar \" + Arrays.toString(args));\n-        sun.tools.jar.Main jar = new sun.tools.jar.Main(System.out, System.err, \"jar\");\n-        if (!jar.run(args)) {\n-            throw new RuntimeException(\"jar failed: args=\" + Arrays.toString(args));\n-        }\n-    }\n-\n-    \/* run javac <args> *\/\n-    static void compile(String... args) {\n-        debug(\"Running: javac \" + Arrays.toString(args));\n-        if (com.sun.tools.javac.Main.compile(args) != 0) {\n-             throw new RuntimeException(\"javac failed: args=\" + Arrays.toString(args));\n-        }\n-    }\n-\n-    static String jar;\n-    static {\n-        jar = System.getProperty(\"java.home\") + slash+  \"bin\" + slash + \"jar\";\n-    }\n-\n-    \/* create the index *\/\n-    static void createIndex(String workingDir) {\n-        \/\/ ProcessBuilder is used so that the current directory can be set\n-        \/\/ to the directory that directly contains the jars.\n-        debug(\"Running jar to create the index\");\n-        ProcessBuilder pb = new ProcessBuilder(\n-           jar, \"-J-Dsun.misc.JarIndex.metaInfFilenames=true\", \"-i\", \"a.jar\", \"b.jar\", \"c.jar\");\n-        pb.directory(new File(workingDir));\n-        \/\/pd.inheritIO();\n-        try {\n-            Process p = pb.start();\n-            if(p.waitFor() != 0)\n-                throw new RuntimeException(\"jar indexing failed\");\n-\n-            if(debug && p != null) {\n-                String line = null;\n-                BufferedReader reader =\n-                         new BufferedReader(new InputStreamReader(p.getInputStream()));\n-                while((line = reader.readLine()) != null)\n-                    debug(line);\n-                reader = new BufferedReader(new InputStreamReader(p.getErrorStream()));\n-                while((line = reader.readLine()) != null)\n-                    debug(line);\n-            }\n-        } catch(InterruptedException ie) { throw new RuntimeException(ie);\n-        } catch(IOException e) { throw new RuntimeException(e); }\n-    }\n-\n-    static final boolean debug = true;\n-\n-    static void debug(Object message) { if (debug) System.out.println(message); }\n-\n-    \/* service define in c.jar *\/\n-    static final String messageService = \"com.message.spi.MessageService\";\n-\n-    \/* a service that is not defined in any of the jars *\/\n-    static final String unknownService = \"java.lang.Object\";\n-\n-    static void doTest(InetSocketAddress serverAddress) throws IOException {\n-        URL baseURL = new URL(\"http:\/\/localhost:\" + serverAddress.getPort() + \"\/\");\n-\n-        int failed = 0;\n-\n-        \/\/ Tests using java.util.SerivceLoader\n-        if (!javaUtilServiceLoaderTest(baseURL, messageService, true, false, true)) {\n-            System.out.println(\"Test: ServiceLoader looking for \" + messageService + \", failed\");\n-            failed++;\n-        }\n-        if (!javaUtilServiceLoaderTest(baseURL, unknownService, false, false, false)) {\n-            System.out.println(\"Test: ServiceLoader looking for \" + unknownService + \" failed\");\n-            failed++;\n-        }\n-\n-        \/\/ Tests using java.lang.Class (similar to the FontManager in javafx)\n-        if (!klassLoader(baseURL, \"\/META-INF\/fonts.mf\", true, false, true)) {\n-            System.out.println(\"Test: klassLoader looking for \/META-INF\/fonts.mf failed\");\n-            failed++;\n-        }\n-        if (!klassLoader(baseURL, \"\/META-INF\/unknown.mf\", false, false, false)) {\n-            System.out.println(\"Test: klassLoader looking for \/META-INF\/unknown.mf failed\");\n-            failed++;\n-        }\n-\n-        if (failed > 0)\n-            throw new RuntimeException(\"Failed: \" + failed + \" tests\");\n-    }\n-\n-    static boolean javaUtilServiceLoaderTest(URL baseURL,\n-                                             String serviceClass,\n-                                             boolean expectToFind,\n-                                             boolean expectbDotJar,\n-                                             boolean expectcDotJar) throws IOException {\n-        debug(\"----------------------------------\");\n-        debug(\"Running test with java.util.ServiceLoader looking for \" + serviceClass);\n-        URLClassLoader loader = getLoader(baseURL);\n-        httpServer.reset();\n-\n-        Class<?> messageServiceClass = null;\n-        try {\n-            messageServiceClass = loader.loadClass(serviceClass);\n-        } catch (ClassNotFoundException cnfe) {\n-            System.err.println(cnfe);\n-            throw new RuntimeException(\"Error in test: \" + cnfe);\n-        }\n-\n-        Iterator<?> iterator = (ServiceLoader.load(messageServiceClass, loader)).iterator();\n-        if (expectToFind && !iterator.hasNext()) {\n-            debug(messageServiceClass + \" NOT found.\");\n-            return false;\n-        }\n-\n-        while (iterator.hasNext()) {\n-            debug(\"found \" + iterator.next() + \" \" + messageService);\n-        }\n-\n-        debug(\"HttpServer: \" + httpServer);\n-\n-        if (!expectbDotJar && httpServer.bDotJar > 0) {\n-            debug(\"Unexpected request sent to the httpserver for b.jar\");\n-            return false;\n-        }\n-        if (!expectcDotJar && httpServer.cDotJar > 0) {\n-            debug(\"Unexpected request sent to the httpserver for c.jar\");\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    \/* Tries to find a resource in a similar way to the font manager in javafx\n-     * com.sun.javafx.scene.text.FontManager *\/\n-    static boolean klassLoader(URL baseURL,\n-                               String resource,\n-                               boolean expectToFind,\n-                               boolean expectbDotJar,\n-                               boolean expectcDotJar) throws IOException {\n-        debug(\"----------------------------------\");\n-        debug(\"Running test looking for \" + resource);\n-        URLClassLoader loader = getLoader(baseURL);\n-        httpServer.reset();\n-\n-        Class<?> ADotAKlass = null;\n-        try {\n-            ADotAKlass = loader.loadClass(\"a.A\");\n-        } catch (ClassNotFoundException cnfe) {\n-            System.err.println(cnfe);\n-            throw new RuntimeException(\"Error in test: \" + cnfe);\n-        }\n-\n-        URL u = ADotAKlass.getResource(resource);\n-        if (expectToFind && u == null) {\n-            System.out.println(\"Expected to find \" + resource + \" but didn't\");\n-            return false;\n-        }\n-\n-        debug(\"HttpServer: \" + httpServer);\n-\n-        if (!expectbDotJar && httpServer.bDotJar > 0) {\n-            debug(\"Unexpected request sent to the httpserver for b.jar\");\n-            return false;\n-        }\n-        if (!expectcDotJar && httpServer.cDotJar > 0) {\n-            debug(\"Unexpected request sent to the httpserver for c.jar\");\n-            return false;\n-        }\n-\n-        return true;\n-    }\n-\n-    static URLClassLoader getLoader(URL baseURL) throws IOException {\n-        ClassLoader loader = Basic.class.getClassLoader();\n-\n-        while (loader.getParent() != null)\n-            loader = loader.getParent();\n-\n-        return new URLClassLoader( new URL[]{\n-            new URL(baseURL, \"a.jar\"),\n-            new URL(baseURL, \"b.jar\"),\n-            new URL(baseURL, \"c.jar\")}, loader );\n-    }\n-\n-    \/**\n-     * HTTP Server to server the jar files.\n-     *\/\n-    static class JarHttpServer implements HttpHandler {\n-        final String docsDir;\n-        final HttpServer httpServer;\n-        int aDotJar, bDotJar, cDotJar;\n-\n-        JarHttpServer(String docsDir) throws IOException {\n-            this.docsDir = docsDir;\n-\n-            httpServer = HttpServer.create(new InetSocketAddress(0), 0);\n-            httpServer.createContext(\"\/\", this);\n-        }\n-\n-        void start() throws IOException {\n-            httpServer.start();\n-        }\n-\n-        void stop(int delay) {\n-            httpServer.stop(delay);\n-        }\n-\n-        InetSocketAddress getAddress() {\n-            return httpServer.getAddress();\n-        }\n-\n-        void reset() {\n-            aDotJar = bDotJar = cDotJar = 0;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            return \"aDotJar=\" + aDotJar + \", bDotJar=\" + bDotJar + \", cDotJar=\" + cDotJar;\n-        }\n-\n-        public void handle(HttpExchange t) throws IOException {\n-            InputStream is = t.getRequestBody();\n-            Headers map = t.getRequestHeaders();\n-            Headers rmap = t.getResponseHeaders();\n-            URI uri = t.getRequestURI();\n-\n-            debug(\"Server: received request for \" + uri);\n-            String path = uri.getPath();\n-            if (path.endsWith(\"a.jar\"))\n-                aDotJar++;\n-            else if (path.endsWith(\"b.jar\"))\n-                bDotJar++;\n-            else if (path.endsWith(\"c.jar\"))\n-                cDotJar++;\n-            else\n-                System.out.println(\"Unexpected resource request\" + path);\n-\n-            while (is.read() != -1);\n-            is.close();\n-\n-            File file = new File(docsDir, path);\n-            if (!file.exists())\n-                throw new RuntimeException(\"Error: request for \" + file);\n-            long clen = file.length();\n-            t.sendResponseHeaders (200, clen);\n-            OutputStream os = t.getResponseBody();\n-            FileInputStream fis = new FileInputStream(file);\n-            try {\n-                byte[] buf = new byte [16 * 1024];\n-                int len;\n-                while ((len=fis.read(buf)) != -1) {\n-                    os.write (buf, 0, len);\n-                }\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-            }\n-            fis.close();\n-            os.close();\n-        }\n-    }\n-}\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/Basic.java","additions":0,"deletions":406,"binary":false,"changes":406,"status":"deleted"},{"patch":"@@ -1,23 +0,0 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n- \n-# The contents of this file do not matter. It exists\n-# simply to have a service defined in META-INF\/services.\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarA\/META-INF\/services\/my.happy.land","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package a;\n-\n-public class A {\n-    public static void hello() throws Exception {\n-        System.out.println(\"Hello from a.A\");\n-    }\n-}\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarA\/a\/A.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,28 +0,0 @@\n-\/*\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package com.message.spi;\n-\n-public interface MessageService {\n-    String message();\n-}\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarA\/com\/message\/spi\/MessageService.java","additions":0,"deletions":28,"binary":false,"changes":28,"status":"deleted"},{"patch":"@@ -1,23 +0,0 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-# The contents of this file do not matter. It exists\n-# simply to have a file under META-INF.\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarB\/META-INF\/JAVA2.DS","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,23 +0,0 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-# The contents of this file do not matter. It exists\n-# simply to have a service defined in META-INF\/services.\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarB\/META-INF\/services\/no.name.service","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package b;\n-\n-public class B {\n-    public static void hello() {\n-        System.out.println(\"Hello from b.B\");\n-    }\n-}\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarB\/b\/B.java","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,23 +0,0 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-corporate=\/fonts\/Company-corporate.ttf\n-crazy-looking=\/fonts\/kidpr.ttf\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarC\/META-INF\/fonts.mf","additions":0,"deletions":23,"binary":false,"changes":23,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-This is not a real font.\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarC\/META-INF\/fonts\/Company-corporate.ttf","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-This is not a real font.\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarC\/META-INF\/fonts\/kidpr.ttf","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,22 +0,0 @@\n-# Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-\n-my.impl.StandardMessageService\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarC\/META-INF\/services\/com.message.spi.MessageService","additions":0,"deletions":22,"binary":false,"changes":22,"status":"deleted"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package my.impl;\n-\n-public class StandardMessageService implements com.message.spi.MessageService {\n-    @Override\n-    public String message() {\n-        return \"This is a message from the standard message service\";\n-    }\n-}\n","filename":"test\/jdk\/sun\/misc\/JarIndex\/metaInfFilenames\/jarC\/my\/impl\/StandardMessageService.java","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -0,0 +1,268 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8182621\n+ * @summary Verify the SSLEngine rejects empty Handshake, Alert, and ChangeCipherSpec messages.\n+ * @library \/javax\/net\/ssl\/templates\n+ * @run main SSLEngineEmptyFragments\n+ *\/\n+import java.nio.ByteBuffer;\n+import java.security.NoSuchAlgorithmException;\n+import javax.net.ssl.*;\n+\n+public class SSLEngineEmptyFragments extends SSLContextTemplate {\n+    private static final byte HANDSHAKE_TYPE = 22;\n+    private static final byte ALERT_TYPE = 21;\n+    private static final byte CHANGE_CIPHERSPEC_TYPE = 20;\n+    private static final String TLSv12 = \"TLSv1.2\";\n+    private static final String TLSv13 = \"TLSv1.3\";\n+\n+    private SSLEngine serverEngine;\n+    private SSLEngine clientEngine;\n+    private ByteBuffer clientIn;\n+    private ByteBuffer serverIn;\n+    private ByteBuffer clientToServer;\n+    private ByteBuffer serverToClient;\n+    private ByteBuffer clientOut;\n+    private ByteBuffer serverOut;\n+\n+    private final String protocol;\n+\n+    public SSLEngineEmptyFragments(String protocol) {\n+        this.protocol = protocol;\n+    }\n+\n+    private void initialize() throws Exception {\n+        initialize(null);\n+    }\n+\n+    private void initialize(String [] protocols) throws Exception {\n+        serverEngine = createServerSSLContext().createSSLEngine();\n+        clientEngine = createClientSSLContext().createSSLEngine();\n+\n+        serverEngine.setUseClientMode(false);\n+        clientEngine.setUseClientMode(true);\n+\n+        if (protocols != null) {\n+            clientEngine.setEnabledProtocols(protocols);\n+            serverEngine.setEnabledProtocols(protocols);\n+        }\n+\n+        \/\/ do one legitimate handshake packet, then send a zero-length alert.\n+        SSLSession session = clientEngine.getSession();\n+        int appBufferMax = session.getApplicationBufferSize();\n+        int netBufferMax = session.getPacketBufferSize();\n+\n+        \/\/ We'll make the input buffers a bit bigger than the max needed\n+        \/\/ size, so that unwrap()s following a successful data transfer\n+        \/\/ won't generate BUFFER_OVERFLOWS.\n+        \/\/\n+        \/\/ We'll use a mix of direct and indirect ByteBuffers for\n+        \/\/ tutorial purposes only.  In reality, only use direct\n+        \/\/ ByteBuffers when they give a clear performance enhancement.\n+        clientIn = ByteBuffer.allocate(appBufferMax + 50);\n+        serverIn = ByteBuffer.allocate(appBufferMax + 50);\n+\n+        clientToServer = ByteBuffer.allocateDirect(netBufferMax);\n+        serverToClient = ByteBuffer.allocateDirect(netBufferMax);\n+\n+        clientOut = ByteBuffer.wrap(\"Hi Server, I'm Client\".getBytes());\n+        serverOut = ByteBuffer.wrap(\"Hello Client, I'm Server\".getBytes());\n+    }\n+\n+    private void testAlertPacketNotHandshaking() throws Exception {\n+        log(\"**** Empty alert packet\/not handshaking\");\n+        initialize();\n+\n+        ByteBuffer alert = ByteBuffer.allocate(5);\n+        alert.put(new byte[]{ALERT_TYPE, 3, 3, 0, 0});\n+        alert.flip();\n+\n+        try {\n+            unwrap(serverEngine, alert, serverIn);\n+            throw new RuntimeException(\"Expected exception was not thrown.\");\n+        } catch (SSLHandshakeException exc) {\n+            log(\"Got the exception I wanted.\");\n+        }\n+    }\n+\n+    private void testAlertPacketMidHandshake() throws Exception {\n+        log(\"**** Empty alert packet during handshake.\");\n+        initialize(new String[]{protocol});\n+\n+        wrap(clientEngine, clientOut, clientToServer);\n+        runDelegatedTasks(clientEngine);\n+        clientToServer.flip();\n+\n+        unwrap(serverEngine, clientToServer, serverIn);\n+        runDelegatedTasks(serverEngine);\n+\n+        while(serverEngine.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.NEED_WRAP) {\n+            wrap(serverEngine, serverOut, serverToClient);\n+            runDelegatedTasks(serverEngine);\n+            serverToClient.flip();\n+        }\n+\n+        ByteBuffer alert = ByteBuffer.allocate(5);\n+        alert.put(new byte[]{ALERT_TYPE, 3, 3, 0, 0});\n+        alert.flip();\n+\n+        try {\n+            unwrap(serverEngine, alert, serverIn);\n+            log(\"Server unwrap was successful when it should have failed.\");\n+            throw new RuntimeException(\"Expected exception was not thrown.\");\n+        } catch (SSLHandshakeException exc) {\n+            log(\"Got the exception I wanted.\");\n+        }\n+    }\n+\n+    private void testHandshakePacket() throws NoSuchAlgorithmException, SSLException {\n+        log(\"**** Empty handshake package.\");\n+        SSLContext ctx = SSLContext.getDefault();\n+        SSLEngine engine = ctx.createSSLEngine();\n+        engine.setUseClientMode(false);\n+\n+        try {\n+            ByteBuffer bb = ByteBuffer.allocate(5);\n+            bb.put(new byte[]{HANDSHAKE_TYPE, 3, 3, 0, 0});\n+            bb.flip();\n+            ByteBuffer out = ByteBuffer.allocate(engine.getSession().getPacketBufferSize());\n+            engine.unwrap(bb, out);\n+            throw new RuntimeException(\"SSLEngine did not throw an exception for a zero-length fragment.\");\n+        } catch (SSLProtocolException exc) {\n+            log(\"Received expected exception\");\n+        }\n+    }\n+\n+    private void testEmptyChangeCipherSpec() throws Exception {\n+        initialize(new String[]{protocol});\n+\n+        boolean foundCipherSpecMsg = false;\n+        do {\n+            log(\"Client wrap\");\n+            wrap(clientEngine, clientOut, clientToServer);\n+            runDelegatedTasks(clientEngine);\n+\n+            if(clientToServer.get(0) == CHANGE_CIPHERSPEC_TYPE) {\n+                foundCipherSpecMsg = true;\n+                break;\n+            }\n+\n+            log(\"server wrap\");\n+            wrap(serverEngine, serverOut, serverToClient);\n+            runDelegatedTasks(serverEngine);\n+\n+            clientToServer.flip();\n+            serverToClient.flip();\n+\n+            log(\"client unwrap\");\n+            unwrap(clientEngine, serverToClient, clientIn);\n+            runDelegatedTasks(clientEngine);\n+\n+            log(\"server unwrap\");\n+            unwrap(serverEngine, clientToServer, serverIn);\n+            runDelegatedTasks(serverEngine);\n+\n+            clientToServer.compact();\n+            serverToClient.compact();\n+        } while(clientEngine.getHandshakeStatus() != SSLEngineResult.HandshakeStatus.FINISHED\n+            && serverEngine.getHandshakeStatus() != SSLEngineResult.HandshakeStatus.FINISHED);\n+\n+        if (!foundCipherSpecMsg) {\n+            \/\/ performed TLS handshaking but didn't catch change-cipherspec message.\n+            throw new RuntimeException(\"Did not intercept ChangeCipherSpec message.\");\n+        }\n+\n+        ByteBuffer changeCipher = ByteBuffer.allocate(5);\n+        changeCipher.put(new byte[]{CHANGE_CIPHERSPEC_TYPE, 3, 3, 0, 0});\n+        changeCipher.flip();\n+        try {\n+            unwrap(serverEngine, changeCipher, serverIn);\n+            throw new RuntimeException(\"Didn't get the expected SSL exception\");\n+        } catch (SSLProtocolException exc) {\n+            log(\"Received expected exception.\");\n+        }\n+    }\n+\n+    private SSLEngineResult wrap(SSLEngine engine, ByteBuffer src, ByteBuffer dst) throws SSLException {\n+        SSLEngineResult result = engine.wrap(src, dst);\n+        logEngineStatus(engine, result);\n+        return result;\n+    }\n+\n+    private SSLEngineResult unwrap(SSLEngine engine, ByteBuffer src, ByteBuffer dst) throws SSLException {\n+        SSLEngineResult result = engine.unwrap(src, dst);\n+        logEngineStatus(engine, result);\n+        return result;\n+    }\n+\n+    protected void runDelegatedTasks(SSLEngine engine) throws Exception {\n+        if (engine.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.NEED_TASK) {\n+            Runnable runnable;\n+            while ((runnable = engine.getDelegatedTask()) != null) {\n+                log(\"    running delegated task...\");\n+                runnable.run();\n+            }\n+            SSLEngineResult.HandshakeStatus hsStatus = engine.getHandshakeStatus();\n+            if (hsStatus == SSLEngineResult.HandshakeStatus.NEED_TASK) {\n+                throw new Exception(\n+                        \"handshake shouldn't need additional tasks\");\n+            }\n+            logEngineStatus(engine);\n+        }\n+    }\n+\n+    private void logEngineStatus(SSLEngine engine) {\n+        log(\"\\tCurrent HS State: \" + engine.getHandshakeStatus());\n+        log(\"\\tisInboundDone() : \" + engine.isInboundDone());\n+        log(\"\\tisOutboundDone(): \" + engine.isOutboundDone());\n+    }\n+\n+    private void logEngineStatus(\n+            SSLEngine engine, SSLEngineResult result) {\n+        log(\"\\tResult Status    : \" + result.getStatus());\n+        log(\"\\tResult HS Status : \" + result.getHandshakeStatus());\n+        log(\"\\tEngine HS Status : \" + engine.getHandshakeStatus());\n+        log(\"\\tisInboundDone()  : \" + engine.isInboundDone());\n+        log(\"\\tisOutboundDone() : \" + engine.isOutboundDone());\n+        log(\"\\tMore Result      : \" + result);\n+    }\n+\n+    private void log(String message) {\n+        System.err.println(message);\n+    }\n+\n+    public static void main(String [] args) throws Exception {\n+        SSLEngineEmptyFragments tests = new SSLEngineEmptyFragments(TLSv12);\n+        tests.testHandshakePacket();\n+        tests.testAlertPacketNotHandshaking();\n+        tests.testAlertPacketMidHandshake();\n+        tests.testEmptyChangeCipherSpec();\n+\n+        tests = new SSLEngineEmptyFragments(TLSv13);\n+        tests.testHandshakePacket();\n+        tests.testAlertPacketNotHandshaking();\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/SSLEngineEmptyFragments.java","additions":268,"deletions":0,"binary":false,"changes":268,"status":"added"},{"patch":"@@ -0,0 +1,366 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8182621\n+ * @summary Verify JSSE rejects empty Handshake, Alert, and ChangeCipherSpec messages.\n+ * @library \/javax\/net\/ssl\/templates\n+ * @run main SSLSocketEmptyFragments\n+ *\/\n+\n+import javax.net.ssl.*;\n+import java.io.*;\n+import java.net.InetAddress;\n+import java.net.Socket;\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.*;\n+import java.util.function.Consumer;\n+\n+public class SSLSocketEmptyFragments extends SSLContextTemplate {\n+    private static final boolean DEBUG = Boolean.getBoolean(\"test.debug\");\n+    private static final byte HANDSHAKE_TYPE = 22;\n+    private static final byte ALERT_TYPE = 21;\n+    private static final byte CHANGE_CIPHERSPEC_TYPE = 20;\n+\n+    private static final byte[] INVALID_ALERT = {ALERT_TYPE, 3, 3, 0, 0};\n+\n+    private static final byte[] INVALID_HANDSHAKE = {HANDSHAKE_TYPE, 3, 3, 0, 0};\n+    private static final int SERVER_WAIT_SEC = 5;\n+    private static final String TLSv13 = \"TLSv1.3\";\n+    private static final String TLSv12 = \"TLSv1.2\";\n+\n+    private final String protocol;\n+\n+    public SSLSocketEmptyFragments(String protocol) {\n+        this.protocol = protocol;\n+    }\n+\n+\n+    private void testEmptyHandshakeRecord(Socket client) {\n+        log(\"Sending bad handshake packet to server...\");\n+\n+        try {\n+            OutputStream os = client.getOutputStream();\n+            os.write(INVALID_HANDSHAKE);\n+            os.flush();\n+        } catch (IOException exc) {\n+            throw new RuntimeException(\"Unexpected IOException thrown by socket operations\", exc);\n+        }\n+    }\n+\n+\n+    private void testEmptyAlertNotHandshaking(Socket client) {\n+        log(\"Sending empty alert packet before handshaking starts.\");\n+\n+        try {\n+            OutputStream os = client.getOutputStream();\n+            os.write(INVALID_ALERT);\n+            os.flush();\n+        } catch (IOException exc) {\n+            throw new RuntimeException(\"Unexpected IOException thrown by socket operations.\", exc);\n+        }\n+    }\n+\n+    \/**\n+     * Runs a test where the server -- in a separate thread -- accepts a connection\n+     * and attempts to read from the remote side. Tests are successful if the\n+     * server thread returns true.\n+     *\n+     * @param clientConsumer Client-side test code that injects bad packets into the TLS handshake.\n+     * @param expectedException The exception that should be thrown by the server\n+     *\/\n+    private void executeTest(Consumer<Socket> clientConsumer,\n+                             final Class<?> expectedException) throws Exception {\n+        SSLContext serverContext = createServerSSLContext();\n+        SSLServerSocketFactory factory = serverContext.getServerSocketFactory();\n+\n+        try(ExecutorService threadPool = Executors.newFixedThreadPool(1);\n+            SSLServerSocket serverSocket = (SSLServerSocket) factory.createServerSocket()) {\n+            serverSocket.bind(null);\n+            int port = serverSocket.getLocalPort();\n+            InetAddress address = serverSocket.getInetAddress();\n+\n+            Future<Boolean> serverThread = threadPool.submit(() -> {\n+                try (SSLSocket socket = (SSLSocket) serverSocket.accept()) {\n+                    log(\"Server reading data from client.\");\n+                    socket.getInputStream().read();\n+                    log(\"The expected exception was not thrown.\");\n+                    return false;\n+\n+                } catch (Exception exc) {\n+                    if (expectedException.isAssignableFrom(exc.getClass())) {\n+                        log(\"Server thread received expected exception: \" + expectedException.getName());\n+                        return true;\n+                    } else {\n+                        log(\"Server thread threw an unexpected exception: \" + exc);\n+                        throw exc;\n+                    }\n+                }\n+            });\n+\n+            try(Socket socket = new Socket(address, port)) {\n+                clientConsumer.accept(socket);\n+                log(\"waiting for server to exit.\");\n+\n+                \/\/ wait for the server to exit, which should be quick if the test passes.\n+                if (!serverThread.get(SERVER_WAIT_SEC, TimeUnit.SECONDS)) {\n+                    throw new RuntimeException(\n+                            \"The server side of the connection did not throw the expected exception\");\n+                }\n+            }\n+        }\n+    }\n+\n+    \/**\n+     * Performs the client side of the TLS handshake, sending and receiving\n+     * packets over the given socket.\n+     * @param socket Connected socket to the server side.\n+     * @throws IOException\n+     *\/\n+    private void testEmptyAlertDuringHandshake(Socket socket) {\n+        log(\"**** Testing empty alert during handshake\");\n+\n+        try {\n+            SSLEngine engine = createClientSSLContext().createSSLEngine();\n+            engine.setUseClientMode(true);\n+            SSLSession session = engine.getSession();\n+\n+            int appBufferMax = session.getApplicationBufferSize();\n+            int netBufferMax = session.getPacketBufferSize();\n+\n+            ByteBuffer clientIn = ByteBuffer.allocate(appBufferMax + 50);\n+            ByteBuffer clientToServer = ByteBuffer.allocate(appBufferMax + 50);\n+            ByteBuffer clientOut = ByteBuffer.wrap(\"Hi Server, I'm Client\".getBytes());\n+\n+            wrap(engine, clientOut, clientToServer);\n+            runDelegatedTasks(engine);\n+            clientToServer.flip();\n+\n+            OutputStream socketOut = socket.getOutputStream();\n+            byte [] outbound = new byte[netBufferMax];\n+            clientToServer.get(outbound, 0, clientToServer.limit());\n+            socketOut.write(outbound, 0, clientToServer.limit());\n+            socketOut.flush();\n+\n+            processServerResponse(engine, clientIn, socket.getInputStream());\n+\n+            log(\"Sending invalid alert packet!\");\n+            socketOut.write(new byte[]{ALERT_TYPE, 3, 3, 0, 0});\n+            socketOut.flush();\n+\n+        } catch (Exception exc){\n+            throw new RuntimeException(\"An error occurred running the test.\", exc);\n+        }\n+    }\n+\n+    \/**\n+     * Performs TLS handshake until the client (this method) needs to send the\n+     * ChangeCipherSpec message. Then we send a packet with a zero-length fragment.\n+     *\/\n+    private void testEmptyChangeCipherSpecMessage(Socket socket) {\n+        log(\"**** Testing invalid ChangeCipherSpec message\");\n+\n+        try {\n+            socket.setSoTimeout(500);\n+            SSLEngine engine = createClientSSLContext().createSSLEngine();\n+            engine.setUseClientMode(true);\n+            SSLSession session = engine.getSession();\n+            int appBufferMax = session.getApplicationBufferSize();\n+\n+            ByteBuffer clientIn = ByteBuffer.allocate(appBufferMax + 50);\n+            ByteBuffer clientToServer = ByteBuffer.allocate(appBufferMax + 50);\n+\n+            ByteBuffer clientOut = ByteBuffer.wrap(\"Hi Server, I'm Client\".getBytes());\n+\n+            OutputStream outputStream = socket.getOutputStream();\n+\n+            boolean foundCipherSpecMsg = false;\n+\n+            byte[] outbound = new byte[8192];\n+            do {\n+                wrap(engine, clientOut, clientToServer);\n+                runDelegatedTasks(engine);\n+                clientToServer.flip();\n+\n+                if(clientToServer.get(0) == CHANGE_CIPHERSPEC_TYPE) {\n+                    foundCipherSpecMsg = true;\n+                    break;\n+                }\n+                clientToServer.get(outbound, 0, clientToServer.limit());\n+                debug(\"Writing \" + clientToServer.limit() + \" bytes to the server.\");\n+                outputStream.write(outbound, 0, clientToServer.limit());\n+                outputStream.flush();\n+\n+                processServerResponse(engine, clientIn, socket.getInputStream());\n+\n+                clientToServer.clear();\n+\n+            } while(engine.getHandshakeStatus() != SSLEngineResult.HandshakeStatus.FINISHED);\n+\n+            if (!foundCipherSpecMsg) {\n+                throw new RuntimeException(\"Didn't intercept the ChangeCipherSpec message.\");\n+            } else {\n+                log(\"Sending invalid ChangeCipherSpec message\");\n+                outputStream.write(new byte[]{CHANGE_CIPHERSPEC_TYPE, 3, 3, 0, 0});\n+                outputStream.flush();\n+            }\n+\n+        } catch (Exception exc) {\n+            throw new RuntimeException(\"An error occurred running the test.\", exc);\n+        }\n+    }\n+\n+    \/**\n+     * Processes TLS handshake messages received from the server.\n+     *\/\n+    private static void processServerResponse(SSLEngine engine, ByteBuffer clientIn,\n+                                      InputStream inputStream) throws IOException {\n+        byte [] inbound = new byte[8192];\n+        ByteBuffer serverToClient = ByteBuffer.allocate(\n+                engine.getSession().getApplicationBufferSize() + 50);\n+\n+        while(engine.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.NEED_UNWRAP) {\n+            log(\"reading data from server.\");\n+            int len = inputStream.read(inbound);\n+            if (len == -1) {\n+                throw new IOException(\"Could not read from server.\");\n+            }\n+\n+            dumpBytes(inbound, len);\n+\n+            serverToClient.put(inbound, 0, len);\n+            serverToClient.flip();\n+\n+            \/\/ unwrap packets in a loop because we sometimes get multiple\n+            \/\/ TLS messages in one read() operation.\n+            do {\n+                unwrap(engine, serverToClient, clientIn);\n+                runDelegatedTasks(engine);\n+                log(\"Status after running tasks: \" + engine.getHandshakeStatus());\n+            } while (serverToClient.hasRemaining());\n+            serverToClient.compact();\n+        }\n+    }\n+\n+    private static SSLEngineResult wrap(SSLEngine engine, ByteBuffer src, ByteBuffer dst) throws SSLException {\n+        debug(\"Wrapping...\");\n+        SSLEngineResult result = engine.wrap(src, dst);\n+        logEngineStatus(engine, result);\n+        return result;\n+    }\n+\n+    private static SSLEngineResult unwrap(SSLEngine engine, ByteBuffer src, ByteBuffer dst) throws SSLException {\n+        debug(\"Unwrapping\");\n+        SSLEngineResult result = engine.unwrap(src, dst);\n+        logEngineStatus(engine, result);\n+        return result;\n+    }\n+\n+    protected static void runDelegatedTasks(SSLEngine engine) {\n+        if (engine.getHandshakeStatus() == SSLEngineResult.HandshakeStatus.NEED_TASK) {\n+            Runnable runnable;\n+            while ((runnable = engine.getDelegatedTask()) != null) {\n+                debug(\"    running delegated task...\");\n+                runnable.run();\n+            }\n+            SSLEngineResult.HandshakeStatus hsStatus = engine.getHandshakeStatus();\n+            if (hsStatus == SSLEngineResult.HandshakeStatus.NEED_TASK) {\n+                throw new RuntimeException(\n+                        \"handshake shouldn't need additional tasks\");\n+            }\n+        }\n+    }\n+\n+\n+    @Override\n+    protected ContextParameters getClientContextParameters() {\n+        return getContextParameters();\n+    }\n+\n+    @Override\n+    protected ContextParameters getServerContextParameters() {\n+        return getContextParameters();\n+    }\n+\n+    private ContextParameters getContextParameters() {\n+        return new ContextParameters(protocol, \"PKIX\", \"NewSunX509\");\n+    }\n+\n+    private static void log(String message) {\n+        System.out.println(message);\n+        System.out.flush();\n+    }\n+\n+    private static void dumpBytes(byte[] buffer, int length) {\n+        int totalLength = Math.min(buffer.length, length);\n+        StringBuffer sb = new StringBuffer();\n+        int counter = 0;\n+        for (int idx = 0; idx < totalLength ; ++idx) {\n+            sb.append(String.format(\"%02x \", buffer[idx]));\n+            if (++counter == 16) {\n+                sb.append(\"\\n\");\n+                counter = 0;\n+            }\n+        }\n+        debug(sb.toString());\n+    }\n+\n+    private static void debug(String message) {\n+        if (DEBUG) {\n+            log(message);\n+        }\n+    }\n+\n+    private static FileWriter fw;\n+\n+    private static void logEngineStatus(\n+            SSLEngine engine, SSLEngineResult result) {\n+        debug(\"\\tResult Status    : \" + result.getStatus());\n+        debug(\"\\tResult HS Status : \" + result.getHandshakeStatus());\n+        debug(\"\\tEngine HS Status : \" + engine.getHandshakeStatus());\n+        debug(\"\\tisInboundDone()  : \" + engine.isInboundDone());\n+        debug(\"\\tisOutboundDone() : \" + engine.isOutboundDone());\n+        debug(\"\\tMore Result      : \" + result);\n+    }\n+\n+\n+    public static void main(String [] args) throws Exception {\n+        SSLSocketEmptyFragments tests = new SSLSocketEmptyFragments(TLSv12);\n+\n+        tests.executeTest(\n+                tests::testEmptyHandshakeRecord, SSLProtocolException.class);\n+        tests.executeTest(\n+                tests::testEmptyAlertNotHandshaking, SSLHandshakeException.class);\n+        tests.executeTest(\n+                tests::testEmptyAlertDuringHandshake, SSLHandshakeException.class);\n+        tests.executeTest(\n+                tests::testEmptyChangeCipherSpecMessage, SSLProtocolException.class);\n+\n+        tests = new SSLSocketEmptyFragments(TLSv13);\n+        tests.executeTest(\n+                tests::testEmptyHandshakeRecord, SSLProtocolException.class);\n+        tests.executeTest(\n+                tests::testEmptyAlertNotHandshaking, SSLHandshakeException.class);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketEmptyFragments.java","additions":366,"deletions":0,"binary":false,"changes":366,"status":"added"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import sun.security.util.InternalPrivateKey;\n+\n+import java.security.*;\n+import java.security.spec.ECGenParameterSpec;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+\/*\n+ * @test\n+ * @bug 8305310\n+ * @library \/test\/lib\n+ * @summary Calculate PublicKey from PrivateKey\n+ * @modules java.base\/sun.security.util\n+ *\/\n+public class Correctness {\n+    public static void main(String[] args) throws Exception {\n+        for (String alg : List.of(\"secp256r1\", \"secp384r1\", \"secp521r1\",\n+                \"X25519\", \"X448\")) {\n+            KeyPairGenerator g;\n+            if (alg.startsWith(\"X\")) {\n+                g = KeyPairGenerator.getInstance(alg);\n+            } else {\n+                g = KeyPairGenerator.getInstance(\"EC\");\n+                g.initialize(new ECGenParameterSpec(alg));\n+            }\n+            KeyPair kp = g.generateKeyPair();\n+            PublicKey p1 = kp.getPublic();\n+            PrivateKey s1 = kp.getPrivate();\n+\n+            if (s1 instanceof InternalPrivateKey ipk) {\n+                PublicKey p2 = ipk.calculatePublicKey();\n+                Asserts.assertTrue(Arrays.equals(p2.getEncoded(), p1.getEncoded()));\n+                Asserts.assertEQ(p2.getAlgorithm(), p1.getAlgorithm());\n+                Asserts.assertEQ(p2.getFormat(), p1.getFormat());\n+            } else {\n+                throw new RuntimeException(\"Not an InternalPrivateKey: \"\n+                        + s1.getClass());\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/util\/InternalPrivateKey\/Correctness.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -47,0 +47,1 @@\n+import jdk.jpackage.test.CfgFile;\n@@ -249,0 +250,33 @@\n+\n+        CfgFile cfg = cmd.readLauncherCfgFile();\n+        if (!cmd.hasArgument(\"--module\")) {\n+            verifyCfgFileForNonModularApp(cmd, cfg);\n+        }\n+    }\n+\n+    private static void verifyCfgFileForNonModularApp(JPackageCommand cmd,\n+            CfgFile cfg) {\n+        final List<String> mainJarProperties = List.of(\"app.mainjar\");\n+        final List<String> classPathProperties = List.of(\"app.mainclass\",\n+                \"app.classpath\");\n+\n+        final List<String> withProperties;\n+        final List<String> withoutProperties;\n+\n+        if (cmd.hasArgument(\"--main-jar\") && !cmd.hasArgument(\"--main-class\")) {\n+            withProperties = mainJarProperties;\n+            withoutProperties = classPathProperties;\n+        } else {\n+            withProperties = classPathProperties;\n+            withoutProperties = mainJarProperties;\n+        }\n+\n+        withProperties.forEach(prop -> {\n+            TKit.assertNotNull(cfg.getValue(\"Application\", prop), String.format(\n+                    \"Check \\\"%s\\\" property is set\", prop));\n+        });\n+\n+        withoutProperties.forEach(prop -> {\n+            TKit.assertNull(cfg.getValueUnchecked(\"Application\", prop),\n+                    String.format(\"Check \\\"%s\\\" property is NOT set\", prop));\n+        });\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/MainClassTest.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 6251738 8226279 8297802 8296546\n+ * @bug 6251738 8226279 8297802 8296546 8305407\n@@ -418,0 +418,45 @@\n+    @Test\n+    public void testDifferentWhitespaceTitlesForURL(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src, \"\"\"\n+                package p;\n+                \/** Class C. *\/\n+                public class C {\n+                    private C() { }\n+\n+                    \/**\n+                     * Method m1.\n+                     * @spec http:\/\/example.com\/index.html abc def\n+                     *\/\n+                     public void m1() { }\n+\n+                    \/**\n+                     * Method m2.\n+                     * @spec http:\/\/example.com\/index.html abc         def\n+                     *\/\n+                     public void m2() { }\n+                }\n+                \"\"\");\n+\n+        javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                \"--source-path\", src.toString(),\n+                \"p\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(Output.OUT, false, \"error\");\n+\n+        checkOutput(\"external-specs.html\", true,\n+                \"\"\"\n+                    <div class=\"summary-table two-column-summary\">\n+                    <div class=\"table-header col-first\">Specification<\/div>\n+                    <div class=\"table-header col-last\">Referenced In<\/div>\n+                    <div class=\"col-first even-row-color\"><a href=\"http:\/\/example.com\/index.html\">abc def<\/a><\/div>\n+                    <div class=\"col-last even-row-color\">\n+                    <ul class=\"ref-list\">\n+                    <li><code><a href=\"p\/C.html#abcdef\">p.C.m1()<\/a><\/code><\/li>\n+                    <li><code><a href=\"p\/C.html#abcdef-1\">p.C.m2()<\/a><\/code><\/li>\n+                    <\/ul>\n+                    <\/div>\n+                    <\/div>\"\"\");\n+    }\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSpecTag\/TestSpecTag.java","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,6 +37,0 @@\n-    \/**\n-     * Characteristic value signifying that the thread cannot set values for its\n-     * copy of thread-locals.\n-     *\/\n-    public static final int NO_THREAD_LOCALS = 1 << 1;\n-\n@@ -88,2 +82,0 @@\n-        if ((characteristics & NO_THREAD_LOCALS) != 0)\n-            builder.allowSetThreadLocals(false);\n","filename":"test\/lib\/jdk\/test\/lib\/thread\/VThreadRunner.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-        return (Class<?>) CLASS_OR_INTERFACE.resolveConstantDesc(LOOKUP);\n+        return CLASS_OR_INTERFACE.resolveConstantDesc(LOOKUP);\n@@ -64,1 +64,1 @@\n-        return (Class<?>) REFERENCE_ARRAY.resolveConstantDesc(LOOKUP);\n+        return REFERENCE_ARRAY.resolveConstantDesc(LOOKUP);\n@@ -69,1 +69,1 @@\n-        return (Class<?>) PRIMITIVE_ARRAY.resolveConstantDesc(LOOKUP);\n+        return PRIMITIVE_ARRAY.resolveConstantDesc(LOOKUP);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/constant\/ReferenceClassDescResolve.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}