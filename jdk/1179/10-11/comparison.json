{"files":[{"patch":"@@ -166,3 +166,5 @@\n-\/\/ Iterator of ControlIntrinsic\n-\/\/ if disable_all is true, it accepts DisableIntrinsic(deprecated) and all intrinsics\n-\/\/ appear in the list are to disable\n+\/\/ Iterator of ControlIntrinsic=+_id1,-_id2,+_id3,...\n+\/\/\n+\/\/ If disable_all is set, it accepts DisableIntrinsic and all intrinsic Ids\n+\/\/ appear in the list are disabled. Arguments don't have +\/- prefix. eg.\n+\/\/ DisableIntrinsic=_id1,_id2,_id3,...\n@@ -194,2 +196,2 @@\n-  ControlIntrinsicValidator(ccstrlist option, bool disabled_all) : _valid(true), _bad(nullptr) {\n-    for (ControlIntrinsicIter iter(option, disabled_all); *iter != NULL && _valid; ++iter) {\n+  ControlIntrinsicValidator(ccstrlist option, bool disable_all) : _valid(true), _bad(nullptr) {\n+    for (ControlIntrinsicIter iter(option, disable_all); *iter != NULL && _valid; ++iter) {\n@@ -199,1 +201,1 @@\n-        \/\/ strncpy always write len characters.if the source string is shorter, the function fills the remaining bytes with NULs.\n+        \/\/ strncpy always writes len characters. If the source string is shorter, the function fills the remaining bytes with NULLs.\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -330,2 +330,1 @@\n-        }\n-        else if (strncmp(option_key->name, \"DisableIntrinsic\", 16) == 0) {\n+        } else if (strncmp(option_key->name, \"DisableIntrinsic\", 16) == 0) {\n","filename":"src\/hotspot\/share\/compiler\/directivesParser.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}