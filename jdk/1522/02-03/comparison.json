{"files":[{"patch":"@@ -79,1 +79,1 @@\n-os::PagesizeSet   os::_page_sizes;\n+os::PageSizes     os::_page_sizes;\n@@ -1850,1 +1850,1 @@\n-\/\/\/\/\/\/ Implementation of PagesizeSet\n+\/\/\/\/\/\/ Implementation of PageSizes\n@@ -1852,2 +1852,2 @@\n-void os::PagesizeSet::add(size_t pagesize) {\n-  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" INTPTR_FORMAT, pagesize);\n+void os::PageSizes::add(size_t pagesize) {\n+  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" SIZE_FORMAT_HEX, pagesize);\n@@ -1857,2 +1857,2 @@\n-bool os::PagesizeSet::is_set(size_t pagesize) const {\n-  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" INTPTR_FORMAT, pagesize);\n+bool os::PageSizes::contains(size_t pagesize) const {\n+  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" SIZE_FORMAT_HEX, pagesize);\n@@ -1862,6 +1862,5 @@\n-size_t os::PagesizeSet::next_smaller(size_t pagesize) const {\n-  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" INTPTR_FORMAT, pagesize);\n-  \/\/ mask out all pages sizes >= pagesize:\n-  uintx v2 = _v & (pagesize - 1);\n-  if (v2 > 0) {\n-    return round_down_power_of_2(v2);\n+size_t os::PageSizes::next_smaller(size_t pagesize) const {\n+  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" SIZE_FORMAT_HEX, pagesize);\n+  size_t v2 = _v & (pagesize - 1);\n+  if (v2 == 0) {\n+    return 0;\n@@ -1869,1 +1868,1 @@\n-  return 0;\n+  return round_down_power_of_2(v2);\n@@ -1872,3 +1871,3 @@\n-size_t os::PagesizeSet::next_larger(size_t pagesize) const {\n-  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" INTPTR_FORMAT, pagesize);\n-  if (pagesize == max_power_of_2<uintx>()) { \/\/ Shift by 32\/64 would be UB\n+size_t os::PageSizes::next_larger(size_t pagesize) const {\n+  assert(is_power_of_2(pagesize), \"pagesize must be a power of 2: \" SIZE_FORMAT_HEX, pagesize);\n+  if (pagesize == max_power_of_2<size_t>()) { \/\/ Shift by 32\/64 would be UB\n@@ -1878,1 +1877,1 @@\n-  uintx v2 = _v >> l;\n+  size_t v2 = _v >> l;\n@@ -1885,3 +1884,3 @@\n-size_t os::PagesizeSet::largest() const {\n-  const size_t max = max_power_of_2<uintx>();\n-  if (is_set(max)) {\n+size_t os::PageSizes::largest() const {\n+  const size_t max = max_power_of_2<size_t>();\n+  if (contains(max)) {\n@@ -1893,1 +1892,1 @@\n-size_t os::PagesizeSet::smallest() const {\n+size_t os::PageSizes::smallest() const {\n@@ -1898,1 +1897,1 @@\n-void os::PagesizeSet::print_on(outputStream* st) const {\n+void os::PageSizes::print_on(outputStream* st) const {\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -105,2 +105,2 @@\n-  class PagesizeSet {\n-    uintx _v;\n+  class PageSizes {\n+    size_t _v; \/\/ actually a bitmap.\n@@ -108,1 +108,1 @@\n-    PagesizeSet() : _v(0) {}\n+    PageSizes() : _v(0) {}\n@@ -110,1 +110,1 @@\n-    bool is_set(size_t pagesize) const;\n+    bool contains(size_t pagesize) const;\n@@ -126,1 +126,1 @@\n-  static PagesizeSet        _page_sizes;\n+  static PageSizes        _page_sizes;\n@@ -290,1 +290,1 @@\n-  static const PagesizeSet& page_sizes() { return _page_sizes; }\n+  static const PageSizes& page_sizes() { return _page_sizes; }\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -603,1 +603,1 @@\n-    ASSERT_TRUE(os::page_sizes().is_set(os::large_page_size()));\n+    ASSERT_TRUE(os::page_sizes().contains(os::large_page_size()));\n@@ -618,1 +618,1 @@\n-      os::PagesizeSet pss;\n+      os::PageSizes pss;\n@@ -622,1 +622,1 @@\n-        ASSERT_FALSE(pss.is_set(s3));\n+        ASSERT_FALSE(pss.contains(s3));\n@@ -628,1 +628,1 @@\n-      ASSERT_TRUE(pss.is_set(s));\n+      ASSERT_TRUE(pss.contains(s));\n@@ -635,1 +635,1 @@\n-      ASSERT_TRUE(pss.is_set(s2));\n+      ASSERT_TRUE(pss.contains(s2));\n@@ -653,1 +653,1 @@\n-        ASSERT_EQ(s3 == s || s3 == s2, pss.is_set(s3));\n+        ASSERT_EQ(s3 == s || s3 == s2, pss.contains(s3));\n@@ -660,1 +660,1 @@\n-  os::PagesizeSet pss;\n+  os::PageSizes pss;\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}