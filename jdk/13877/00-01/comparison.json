{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,3 +148,8 @@\n-            for (TypeElement subNode : permittedSubclasses(node, exports)) {\n-                if (isInPublicApi(node, exports) && isInPublicApi(subNode, exports)) {\n-                    state.addEdge(node, subNode);\n+            if (!(node.getModifiers().contains(Modifier.SEALED) || node.getModifiers().contains(Modifier.FINAL))) {\n+                state.addNonSealedEdge(node);\n+            } else {\n+                for (TypeElement subNode : permittedSubclasses(node, exports)) {\n+                    if (isInPublicApi(node, exports) && isInPublicApi(subNode, exports)) {\n+                        state.addEdge(node, subNode);\n+                    }\n+                    traverse(state, subNode, exports);\n@@ -152,1 +157,0 @@\n-                traverse(state, subNode, exports);\n@@ -168,0 +172,2 @@\n+            private int nonSealedHierarchyCount = 0;\n+\n@@ -207,9 +213,1 @@\n-                var nodeName = node.getSimpleName().toString();\n-                StyleItem nodeLabel;\n-                if (!(node.getModifiers().contains(Modifier.SEALED) || node.getModifiers().contains(Modifier.FINAL))) {\n-                    \/\/ This indicates that the hierarchy is not closed\n-                    nodeLabel = new StyleItem.HtmlString(\"<I>\" + nodeName + \"<\/I>\");\n-                } else {\n-                    nodeLabel = new StyleItem.PlainString(nodeName);\n-                }\n-                styles.put(LABEL, nodeLabel);\n+                styles.put(LABEL, new StyleItem.PlainString(node.getSimpleName().toString()));\n@@ -246,0 +244,20 @@\n+            public void addNonSealedEdge(TypeElement node) {\n+                \/\/ prepare open node\n+                var openNodeId = \"open node #\" + nonSealedHierarchyCount++;\n+                var styles = nodeStyleMap.computeIfAbsent(openNodeId, n -> new LinkedHashMap<>());\n+                styles.put(LABEL, new StyleItem.HtmlString(\"<I>&lt;any&gt;<\/I>\"));\n+                styles.put(TOOLTIP, new StyleItem.PlainString(\"Non-sealed Hierarchy\"));\n+\n+                \/\/ add link to parent node\n+                builder.append(\"  \")\n+                        .append('\"')\n+                        .append(openNodeId)\n+                        .append('\"')\n+                        .append(\" -> \")\n+                        .append(quotedId(node))\n+                        .append(\" \")\n+                        .append(\"[style=\\\"dashed\\\"]\")\n+                        .append(\";\")\n+                        .append(lineSeparator());\n+            }\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/taglet\/SealedGraph.java","additions":32,"deletions":14,"binary":false,"changes":46,"status":"modified"}]}