{"files":[{"patch":"@@ -991,0 +991,2 @@\n+  static inline bool is_weak(oop ref);\n+  static inline bool is_soft(oop ref);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"memory\/referenceType.hpp\"\n@@ -135,1 +136,1 @@\n-  assert(!java_lang_ref_Reference::is_phantom(ref), \"must be Weak or Soft Reference\");\n+  assert(java_lang_ref_Reference::is_weak(ref) || java_lang_ref_Reference::is_soft(ref), \"must be Weak or Soft Reference\");\n@@ -140,1 +141,1 @@\n-  assert(!java_lang_ref_Reference::is_phantom(ref), \"must be Weak or Soft Reference\");\n+  assert(java_lang_ref_Reference::is_weak(ref) || java_lang_ref_Reference::is_soft(ref), \"must be Weak or Soft Reference\");\n@@ -201,0 +202,8 @@\n+bool java_lang_ref_Reference::is_weak(oop ref) {\n+  return InstanceKlass::cast(ref->klass())->reference_type() == REF_WEAK;\n+}\n+\n+bool java_lang_ref_Reference::is_soft(oop ref) {\n+  return InstanceKlass::cast(ref->klass())->reference_type() == REF_SOFT;\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.inline.hpp","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"}]}