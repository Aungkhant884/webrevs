{"files":[{"patch":"@@ -67,1 +67,1 @@\n-        return new MethodTypeDescImpl(returnDesc, ConstantUtils.EMPTY_CLASSDESC);\n+        return MethodTypeDescImpl.ofTrusted(returnDesc, ConstantUtils.EMPTY_CLASSDESC);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/MethodTypeDesc.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    MethodTypeDescImpl(ClassDesc returnType, ClassDesc[] validatedArgTypes) {\n+    private MethodTypeDescImpl(ClassDesc returnType, ClassDesc[] validatedArgTypes) {\n@@ -94,2 +94,0 @@\n-        ClassDesc returnType = ClassDesc.ofDescriptor(types.getFirst());\n-        MethodTypeDescImpl result;\n@@ -98,8 +96,3 @@\n-        if (paramCount > 0) {\n-            var paramTypes = new ClassDesc[paramCount];\n-            for (int i = 0; i < paramCount; i++) {\n-                paramTypes[i] = ClassDesc.ofDescriptor(types.get(i + 1));\n-            }\n-            result = ofTrusted(returnType, paramTypes);\n-        } else {\n-            result = new MethodTypeDescImpl(returnType, ConstantUtils.EMPTY_CLASSDESC);\n+        var paramTypes = paramCount > 0 ? new ClassDesc[paramCount] : ConstantUtils.EMPTY_CLASSDESC;\n+        for (int i = 0; i < paramCount; i++) {\n+            paramTypes[i] = ClassDesc.ofDescriptor(types.get(i + 1));\n@@ -108,0 +101,1 @@\n+        MethodTypeDescImpl result = ofTrusted(ClassDesc.ofDescriptor(types.getFirst()), paramTypes);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/MethodTypeDescImpl.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"}]}