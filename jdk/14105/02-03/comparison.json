{"files":[{"patch":"@@ -932,2 +932,5 @@\n-  if (stack_size >= os::Linux::default_large_page_size() && is_aligned(stack_size, os::Linux::default_large_page_size())) {\n-    stack_size += os::vm_page_size();\n+  size_t default_large_page_size = os::Linux::default_large_page_size();\n+  if (default_large_page_size != 0) {\n+    if (stack_size >= default_large_page_size && is_aligned(stack_size, default_large_page_size)) {\n+      stack_size += os::vm_page_size();\n+    }\n@@ -3754,1 +3757,1 @@\n-  \/\/ Scan default large page size\n+  \/\/ Always initialize the default large page size even if large pages are not being used.\n@@ -3758,2 +3761,1 @@\n-  \/\/ 1) Handle the case where we do not want to use huge pages and hence\n-  \/\/    there is no need to scan the OS for related info\n+  \/\/ 1) Handle the case where we do not want to use huge pages\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-\/\/ set default stack sizes < 2MB so as to prevent stacks from getting\n+\/\/ Set default stack sizes < 2MB so as to prevent stacks from getting\n@@ -36,1 +36,1 @@\n-\/\/ default huge page size. For non-JavaThreads, glibc adds an additional\n+\/\/ default huge page size. For non-JavaThreads, glibc may add an additional\n@@ -38,1 +38,3 @@\n-\/\/ for all the following flags, we set them to 2 pages less than 2MB.\n+\/\/ for all the following flags, we set them to 2 pages less than 2MB. On\n+\/\/ systems where 2MB is the default large page size, 4KB is most commonly\n+\/\/ the regular page size.\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/globals_linux_aarch64.hpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}