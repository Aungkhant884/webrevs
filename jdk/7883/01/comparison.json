{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @test\n+ * @test id=DefaultHeap\n@@ -46,0 +46,22 @@\n+\/*\n+ * @test id=LargeHeap\n+ * @bug 8254790\n+ * @requires vm.bits == \"64\" & os.maxMemory > 8G\n+ * @modules java.base\/jdk.internal.misc\n+ * @library \/test\/lib\n+ *\n+ * @build sun.hotspot.WhiteBox\n+ * @run driver jdk.test.lib.helpers.ClassFileInstaller sun.hotspot.WhiteBox\n+ *\n+ * @run main\/othervm\n+ *        -mx8G\n+ *        -Xbootclasspath\/a:.\n+ *        -Xmixed\n+ *        -XX:+UnlockDiagnosticVMOptions\n+ *        -XX:+WhiteBoxAPI\n+ *        -XX:+IgnoreUnrecognizedVMOptions\n+ *        -XX:MaxInlineSize=70\n+ *        -XX:MinInlineFrequencyRatio=0\n+ *        compiler.intrinsics.string.TestStringIntrinsics2 LargeHeap\n+ *\/\n+\n@@ -85,0 +107,1 @@\n+    private static int[] FILL_HEAP;\n@@ -118,0 +141,3 @@\n+        if (args.length != 0 && \"LargeHeap\".equals(args[0])) {\n+            FILL_HEAP = new int[Integer.MAX_VALUE \/ 2];\n+        }\n@@ -709,0 +735,14 @@\n+    static String longLatin1 = \"0123456789A\".repeat(100);\n+    static String longUTF = \"0123456789\\ubeef\".repeat(100);\n+\n+    @Test(role = Role.TEST_HELPER, compileAt = 4, warmup = 1, warmupArgs = { \"0123456789\", \"1\" })\n+    public static boolean indexOf_use_result_immediately(String a, String b) {\n+        char ch = b.charAt(0);\n+        return ch == a.charAt(a.indexOf(ch));\n+    }\n+\n+    @Test(role = Role.TEST_ENTRY)\n+    public static void test_indexOf_use_result_immediately() {\n+        assertTrue(indexOf_use_result_immediately(longLatin1, \"A\"));\n+        assertTrue(indexOf_use_result_immediately(longUTF, \"\\ubeef\"));\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/string\/TestStringIntrinsics2.java","additions":42,"deletions":2,"binary":false,"changes":44,"status":"modified"}]}