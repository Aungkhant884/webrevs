{"files":[{"patch":"@@ -2068,0 +2068,8 @@\n+                        \/\/ If sym.data == ElementKind.EXCEPTION_PARAMETER,\n+                        \/\/ set ret.data = ElementKind.EXCEPTION_PARAMETER too.\n+                        \/\/ Because method com.sun.tools.javac.jvm.Code.fillExceptionParameterPositions and\n+                        \/\/ com.sun.tools.javac.jvm.Code.fillLocalVarPosition would use it.\n+                        \/\/ See JDK-8257740 for more information.\n+                        if (((VarSymbol) sym).isExceptionParameter()) {\n+                            ((VarSymbol) ret).setData(ElementKind.EXCEPTION_PARAMETER);\n+                        }\n@@ -2072,0 +2080,4 @@\n+                        \/\/ Set ret.data. Same as case LOCAL_VAR above.\n+                        if (((VarSymbol) sym).isExceptionParameter()) {\n+                            ((VarSymbol) ret).setData(ElementKind.EXCEPTION_PARAMETER);\n+                        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8257740\n+ * @summary Compiler crash when compiling type annotation on uni-catch inside lambda\n+ * @run compile T8257740_1.java\n+ *\/\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+public class T8257740_1 {\n+    @Target(ElementType.TYPE_USE)\n+    @interface T8257740_1_Anno { }\n+\n+    void test() {\n+        Runnable r = () -> {\n+            try {\n+                System.out.println();\n+            } catch (@T8257740_1_Anno Exception e) { \/\/ uni-catch\n+                e.printStackTrace();\n+            }\n+        };\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8257740\/T8257740_1.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"},{"patch":"@@ -0,0 +1,47 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8257740\n+ * @summary Compiler crash when compiling type annotation on multi-catch inside lambda\n+ * @run compile T8257740_2.java\n+ *\/\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Target;\n+\n+public class T8257740_2 {\n+    @Target(ElementType.TYPE_USE)\n+    @interface T8257740_2_Anno { }\n+\n+    void test() {\n+        Runnable r = () -> {\n+            try {\n+                System.out.println();\n+            } catch (@T8257740_2_Anno Exception | Error e) { \/\/ multi-catch\n+                e.printStackTrace();\n+            }\n+        };\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8257740\/T8257740_2.java","additions":47,"deletions":0,"binary":false,"changes":47,"status":"added"}]}