{"files":[{"patch":"@@ -5729,1 +5729,1 @@\n-    __ sve_whilelow($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n+    __ sve_whileltw($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n@@ -5741,1 +5741,1 @@\n-    __ sve_whilelo($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n+    __ sve_whilelt($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n@@ -5765,1 +5765,1 @@\n-    __ sve_whilelo($pd$$PRegister, __ elemType_to_regVariant(bt), $src2$$Register, $src1$$Register);\n+    __ sve_whilelt($pd$$PRegister, __ elemType_to_regVariant(bt), $src2$$Register, $src1$$Register);\n@@ -6524,1 +6524,1 @@\n-    __ sve_whilelo(as_PRegister($dst$$reg), size, zr, rscratch1);\n+    __ sve_whilelt(as_PRegister($dst$$reg), size, zr, rscratch1);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -4093,1 +4093,1 @@\n-    __ sve_whilelow($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n+    __ sve_whileltw($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n@@ -4105,1 +4105,1 @@\n-    __ sve_whilelo($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n+    __ sve_whilelt($pd$$PRegister, __ elemType_to_regVariant(bt), zr, $src$$Register);\n@@ -4129,1 +4129,1 @@\n-    __ sve_whilelo($pd$$PRegister, __ elemType_to_regVariant(bt), $src2$$Register, $src1$$Register);\n+    __ sve_whilelt($pd$$PRegister, __ elemType_to_regVariant(bt), $src2$$Register, $src1$$Register);\n@@ -4855,1 +4855,1 @@\n-    __ sve_whilelo(as_PRegister($dst$$reg), size, zr, rscratch1);\n+    __ sve_whilelt(as_PRegister($dst$$reg), size, zr, rscratch1);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1766,1 +1766,1 @@\n-    \/\/ Encode to \"whilelow\" for the remaining cases.\n+    \/\/ Encode to \"whileltw\" for the remaining cases.\n@@ -1768,1 +1768,1 @@\n-    sve_whilelow(dst, size, zr, rscratch1);\n+    sve_whileltw(dst, size, zr, rscratch1);\n","filename":"src\/hotspot\/cpu\/aarch64\/c2_MacroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2023, Arm Limited. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8305524\n+ * @run main\/othervm -Xbatch compiler.arraycopy.TestArrayCopyMaskedWithSub\n+ *\/\n+\n+package compiler.arraycopy;\n+\n+public class TestArrayCopyMaskedWithSub {\n+    private static char[] src = {'A', 'A', 'A', 'A', 'A'};\n+    private static char[] dst = {'B', 'B', 'B', 'B', 'B'};\n+\n+    private static void copy(int nlen) {\n+      System.arraycopy(src, 0, dst, 0, -nlen);\n+    }\n+\n+    public static void main(String[] args) {\n+      for (int i = 0; i < 25000; i++) {\n+        copy(0);\n+      }\n+      copy(-5);\n+      for (char c : dst) {\n+        if (c != 'A') {\n+          throw new RuntimeException(\"Wrong value!\");\n+        }\n+      }\n+      System.out.println(\"PASS\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestArrayCopyMaskedWithSub.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"}]}