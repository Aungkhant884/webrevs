[{"commit":{"message":"small fix\n\nChange-Id: Iadff93a1d56647f9a21234af226b46492ad188e2"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"}],"sha":"dbc3d472d794c79b33d97ed9a18295d1ea769e73"},{"commit":{"message":"Refactor code\n\n- public elemBytes_to_Arrangement and make it more generalized since it\n  maybe useful in the future.\n- move neon_compare into macroAssembler.\n\nChange-Id: I7596de03abb066574cf430d935edd07cd627e14b"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"}],"sha":"23e0c7c4886f5d988a168f3c5d1908df87bf5729"},{"commit":{"message":"8267663: AArch64: Add unsigned comparison operators on AArch64\n\nThis patch implements unsigned vector comparison on AArch64. The\nperformance of unsigned comparison improves about 4x~5x in my local with\nByte128Vector.java[1].\n\nBefore:\nBenchmark                               Score(op\/ms)     Error\nByte128Vector.UNSIGNED_GE#size(1024)    99.953           6.17\nByte128Vector.UNSIGNED_GT#size(1024)    95.334           8.865\nByte128Vector.UNSIGNED_LE#size(1024)    76.908           24.332\nByte128Vector.UNSIGNED_LT#size(1024)    78.362           23.507\n\nAfter:\nBenchmark                               Score(op\/ms)     Error\nByte128Vector.UNSIGNED_GE#size(1024)    421.809          25.57\nByte128Vector.UNSIGNED_GT#size(1024)    420.653          26.779\nByte128Vector.UNSIGNED_LE#size(1024)    316.754          92.889\nByte128Vector.UNSIGNED_LT#size(1024)    423.683          26.508\n\n[Test]\n- All vector API test cases passed without new failure. 8265312[2] has\n  been implemented this on x86 and supplied sufficient test cases for\n  all kinds of vector.\n- No performance regression for other comparisons.\n- libjvm.so drops off about 200KB after this patch by combining those\n  vector compare rules.\n\n[1] https:\/\/github.com\/openjdk\/panama-vector\/blob\/vectorIntrinsics\/test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/jdk\/incubator\/vector\/Byte128Vector.java#L1198\n[2] https:\/\/github.com\/openjdk\/panama-vector\/pull\/68\n\nChange-Id: Id2634570641223492189fb8ba7fb71fcb1ddff74"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/matcher_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"58ab4eed1401ae8325fe69b7487af64d7128ac8d"}]