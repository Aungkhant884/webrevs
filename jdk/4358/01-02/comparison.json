{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,19 @@\n+Assembler::SIMD_Arrangement Assembler::_esize2arrangement_table[9][2] = {\n+  \/\/ esize        isQ:false             isQ:true\n+  \/*   0  *\/      {INVALID_ARRANGEMENT, INVALID_ARRANGEMENT},\n+  \/*   1  *\/      {T8B,                 T16B},\n+  \/*   2  *\/      {T4H,                 T8H},\n+  \/*   3  *\/      {INVALID_ARRANGEMENT, INVALID_ARRANGEMENT},\n+  \/*   4  *\/      {T2S,                 T4S},\n+  \/*   5  *\/      {INVALID_ARRANGEMENT, INVALID_ARRANGEMENT},\n+  \/*   6  *\/      {INVALID_ARRANGEMENT, INVALID_ARRANGEMENT},\n+  \/*   7  *\/      {INVALID_ARRANGEMENT, INVALID_ARRANGEMENT},\n+  \/*   8  *\/      {T1D,                 T2D}\n+  };\n+\n+\n+Assembler::SIMD_Arrangement Assembler::esize2arrangement(int esize, bool isQ) {\n+    guarantee(esize == 1 || esize == 2 || esize == 4 || esize == 8, \"unsupported element size\");\n+    return _esize2arrangement_table[esize][isQ];\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.cpp","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1536,0 +1536,8 @@\n+private:\n+\n+  static SIMD_Arrangement _esize2arrangement_table[9][2];\n+\n+public:\n+\n+  static SIMD_Arrangement esize2arrangement(int esize, bool isQ);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -5342,17 +5342,0 @@\n-Assembler::SIMD_Arrangement elemBytes_to_Arrangement(int esize, bool isQ) {\n-  switch(esize) {\n-    case 1:\n-      return isQ ? Assembler::T16B : Assembler::T8B;\n-    case 2:\n-      return isQ ? Assembler::T8H : Assembler::T4H;\n-    case 4:\n-      return isQ ? Assembler::T4S : Assembler::T2S;\n-    case 8:\n-      return isQ ? Assembler::T2D : Assembler::T1D;\n-    default:\n-      assert(false, \"unsupported\");\n-      ShouldNotReachHere();\n-  }\n-  return Assembler::INVALID_ARRANGEMENT;\n-}\n-\n@@ -5361,1 +5344,1 @@\n-  SIMD_Arrangement size = elemBytes_to_Arrangement(type2aelembytes(bt), isQ);\n+  SIMD_Arrangement size = esize2arrangement(type2aelembytes(bt), isQ);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":18,"binary":false,"changes":19,"status":"modified"}]}