{"files":[{"patch":"@@ -1692,3 +1692,0 @@\n-  const bool clear_all_soft_refs =\n-      heap->soft_ref_policy()->should_clear_all_soft_refs();\n-\n@@ -1696,1 +1693,1 @@\n-    PSScavenge::invoke_no_policy(clear_all_soft_refs || maximum_heap_compaction);\n+    PSScavenge::invoke_no_policy();\n@@ -1699,0 +1696,3 @@\n+  const bool clear_all_soft_refs =\n+    heap->soft_ref_policy()->should_clear_all_soft_refs();\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-  const bool scavenge_done = PSScavenge::invoke_no_policy(false);\n+  const bool scavenge_done = PSScavenge::invoke_no_policy();\n@@ -357,1 +357,1 @@\n-bool PSScavenge::invoke_no_policy(bool clear_all_soft_refs) {\n+bool PSScavenge::invoke_no_policy() {\n@@ -438,1 +438,1 @@\n-    reference_processor()->start_discovery(clear_all_soft_refs);\n+    reference_processor()->start_discovery(false \/* always_clear *\/);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-  static bool invoke_no_policy(bool clear_all_soft_refs);\n+  static bool invoke_no_policy();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI gc.gctests.WeakReference.weak006.weak006 -t 1\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+IgnoreUnrecognizedVMOptions -XX:-ScavengeBeforeFullGC gc.gctests.WeakReference.weak006.weak006 -t 1\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/gctests\/WeakReference\/weak006\/weak006.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}