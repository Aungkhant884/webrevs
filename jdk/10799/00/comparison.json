{"files":[{"patch":"@@ -4173,11 +4173,28 @@\n-            return diags.create(dkind, log.currentSource(), pos,\n-                      \"cant.apply.symbol\",\n-                      compactMethodDiags ?\n-                              d -> MethodResolutionDiagHelper.rewrite(diags, pos, log.currentSource(), dkind, c.snd) : null,\n-                      kindName(ws),\n-                      ws.name == names.init ? ws.owner.name : ws.name,\n-                      methodArguments(ws.type.getParameterTypes()),\n-                      methodArguments(argtypes),\n-                      kindName(ws.owner),\n-                      ws.owner.type,\n-                      c.snd);\n+\n+            \/\/ If the problem is due to type arguments, then the method parameters aren't relevant,\n+            \/\/ so use the error message that omits them to avoid confusion.\n+            switch (c.snd.getCode()) {\n+            case \"compiler.misc.wrong.number.type.args\":\n+            case \"compiler.misc.explicit.param.do.not.conform.to.bounds\":\n+                return diags.create(dkind, log.currentSource(), pos,\n+                          \"cant.apply.symbol.noargs\",\n+                          compactMethodDiags ?\n+                                  d -> MethodResolutionDiagHelper.rewrite(diags, pos, log.currentSource(), dkind, c.snd) : null,\n+                          kindName(ws),\n+                          ws.name == names.init ? ws.owner.name : ws.name,\n+                          kindName(ws.owner),\n+                          ws.owner.type,\n+                          c.snd);\n+            default:\n+                return diags.create(dkind, log.currentSource(), pos,\n+                          \"cant.apply.symbol\",\n+                          compactMethodDiags ?\n+                                  d -> MethodResolutionDiagHelper.rewrite(diags, pos, log.currentSource(), dkind, c.snd) : null,\n+                          kindName(ws),\n+                          ws.name == names.init ? ws.owner.name : ws.name,\n+                          methodArguments(ws.type.getParameterTypes()),\n+                          methodArguments(argtypes),\n+                          kindName(ws.owner),\n+                          ws.owner.type,\n+                          c.snd);\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java","additions":28,"deletions":11,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -236,0 +236,5 @@\n+# 0: symbol kind, 1: name, 2: symbol kind, 3: type, 4: message segment\n+compiler.err.cant.apply.symbol.noargs=\\\n+    {0} {1} in {2} {3} cannot be applied to given types;\\n\\\n+    reason: {4}\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,10 @@\n+\/**\n+ * @test \/nodynamiccopyright\/\n+ * @bug     8043251\n+ * @summary Confusing error message with wrong number of type parameters\n+ * @compile\/fail\/ref=T8043251.out -XDrawDiagnostics T8043251.java\n+ *\/\n+import java.util.function.Function;\n+class T8043251 {\n+    Function<String, String> f = Function.<String, String>identity();\n+}\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/8043251\/T8043251.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T8043251.java:9:42: compiler.err.cant.apply.symbol.noargs: kindname.method, identity, kindname.interface, java.util.function.Function<T,R>, (compiler.misc.wrong.number.type.args: 1)\n+1 error\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/8043251\/T8043251.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ key: compiler.err.cant.apply.symbol\n+\/\/ key: compiler.err.cant.apply.symbol.noargs\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/ExplicitParamsDoNotConformToBounds.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ key: compiler.err.cant.apply.symbol\n+\/\/ key: compiler.err.cant.apply.symbol.noargs\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/WrongNumberTypeArgsFragment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}