{"files":[{"patch":"@@ -34,12 +34,1 @@\n- * @run driver TestSigInfoInHsErrFile segv\n- *\/\n-\n-\/*\n- * @test fpe\n- * @summary Test that for a given crash situation we see the correct siginfo in the hs-err file\n- * @library \/test\/lib\n- * @requires vm.debug\n- * @requires os.family != \"windows\"\n- * @modules java.base\/jdk.internal.misc\n- *          java.management\n- * @run driver TestSigInfoInHsErrFile fpe\n+ * @run driver TestSigInfoInHsErrFile\n@@ -58,42 +47,0 @@\n-    if (args.length != 1) {\n-      throw new IllegalArgumentException(\"missing argument\");\n-    } else if (args[0].equals(\"segv\")) {\n-      testWithSEGV();\n-    } else if (args[0].equals(\"fpe\")) {\n-      testWithFPE();\n-    } else {\n-      throw new IllegalArgumentException(\"unknown argument\");\n-    }\n-  }\n-\n-  static void testWithFPE() throws Exception {\n-\n-    ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-            \"-XX:+UnlockDiagnosticVMOptions\",\n-            \"-Xmx100M\",\n-            \"-XX:-CreateCoredumpOnCrash\",\n-            \"-XX:ErrorHandlerTest=15\",\n-            \"-version\");\n-\n-    OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-    output.shouldNotHaveExitValue(0);\n-\n-    \/\/ we should have crashed with a SIGFPE\n-    output.shouldMatch(\"#.+SIGFPE.*\");\n-\n-    \/\/ extract hs-err file\n-    File f = HsErrFileUtils.openHsErrFileFromOutput(output);\n-\n-    ArrayList<Pattern> patterns = new ArrayList<>();\n-    patterns.add(Pattern.compile(\"# A fatal error has been detected.*\"));\n-    patterns.add(Pattern.compile(\"# *SIGFPE.*\"));\n-    patterns.add(Pattern.compile(\"# *Problematic frame.*\"));\n-    patterns.add(Pattern.compile(\"# .*VMError::controlled_crash.*\"));\n-\n-    patterns.add(Pattern.compile(\"siginfo: si_signo: \\\\d+ \\\\(SIGFPE\\\\), si_code: \\\\d+ \\\\(FPE_INTDIV\\\\).*\"));\n-\n-    HsErrFileUtils.checkHsErrFileContent(f, patterns.toArray(new Pattern[] {}), true);\n-\n-  }\n-\n-  static void testWithSEGV() throws Exception {\n@@ -111,1 +58,1 @@\n-    \/\/ we should have crashed with a SIGFPE\n+    \/\/ we should have crashed with a SIGSEGV\n@@ -125,1 +72,1 @@\n-    patterns.add(Pattern.compile(\"siginfo: si_signo: \\\\d+ \\\\(SIGSEGV\\\\), si_code: \\\\d+ \\\\(SEGV_MAPERR\\\\), si_addr: \" + crashAddress + \".*\"));\n+    patterns.add(Pattern.compile(\"siginfo: si_signo: \\\\d+ \\\\(SIGSEGV\\\\), si_code: \\\\d+ \\\\(SEGV_.*\\\\), si_addr: \" + crashAddress + \".*\"));\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestSigInfoInHsErrFile.java","additions":3,"deletions":56,"binary":false,"changes":59,"status":"modified"}]}