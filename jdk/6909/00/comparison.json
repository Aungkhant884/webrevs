{"files":[{"patch":"@@ -57,6 +57,4 @@\n-  markWord mark = obj->mark();\n-  if (obj->mark_must_be_preserved(mark) &&\n-      \/\/ It is not necessary to preserve marks for objects in regions we do not\n-      \/\/ compact because we do not change their headers (i.e. forward them).\n-      _collector->is_compacting(obj)) {\n-    preserved_stack()->push(obj, mark);\n+  if (_collector->is_compacting(obj)) {\n+    \/\/ It is not necessary to preserve marks for objects in regions we do not\n+    \/\/ compact because we do not change their headers (i.e. forward them).\n+    preserved_stack()->push_if_necessary(obj, obj->mark());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-  inline void push(oop obj, markWord m);\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,6 +38,0 @@\n-inline void PreservedMarks::push(oop obj, markWord m) {\n-  assert(should_preserve_mark(obj, m), \"pre-condition\");\n-  OopAndMarkWord elem(obj, m);\n-  _stack.push(elem);\n-}\n-\n@@ -46,1 +40,2 @@\n-    push(obj, m);\n+    OopAndMarkWord elem(obj, m);\n+    _stack.push(elem);\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.inline.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -71,2 +71,2 @@\n-  pm.push(o1.get_oop(), o1.mark());\n-  pm.push(o2.get_oop(), o2.mark());\n+  pm.push_if_necessary(o1.get_oop(), o1.mark());\n+  pm.push_if_necessary(o2.get_oop(), o2.mark());\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_preservedMarks.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}