{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n@@ -220,0 +221,74 @@\n+    @Test\n+    void testLookbehindLookaheadWithBackref() {\n+        char[] data = \"-1234abcxyz2348-\".toCharArray();\n+        Matcher m = Pattern.compile(\"(?<=(\\\\d{3}))\\\\D*(?=(\\\\1))\")\n+                .matcher(CharBuffer.wrap(data));\n+\n+        assertEquals(2, m.groupCount());\n+        assertTrue(m.find());\n+\n+        int start = m.start();\n+        int end = m.end();\n+        String group = m.group();\n+\n+        int prefixStart = m.start(1);\n+        int prefixEnd = m.end(1);\n+        String prefixGroup = m.group(1);\n+\n+        int suffixStart = m.start(2);\n+        int suffixEnd = m.end(2);\n+        String suffixGroup = m.group(2);\n+\n+        MatchResult mr = m.toMatchResult();\n+        Arrays.fill(data, '*');  \/\/ spoil original input\n+\n+        assertEquals(start, mr.start());\n+        assertEquals(end, mr.end());\n+        assertEquals(group, mr.group());\n+\n+        assertEquals(prefixStart, mr.start(1));\n+        assertEquals(prefixEnd, mr.end(1));\n+        assertEquals(prefixGroup, mr.group(1));\n+\n+        assertEquals(suffixStart, mr.start(2));\n+        assertEquals(suffixEnd, mr.end(2));\n+        assertEquals(suffixGroup, mr.group(2));\n+    }\n+\n+    @Test\n+    void testHegativeLookbehindLookahead() {\n+        char[] data = \"123abcxyz5678-\".toCharArray();\n+        Matcher m = Pattern.compile(\"(?<!(\\\\d{4}))\\\\D+(?=(\\\\d{4}))\")\n+                .matcher(CharBuffer.wrap(data));\n+\n+        assertEquals(2, m.groupCount());\n+        assertTrue(m.find());\n+\n+        int start = m.start();\n+        int end = m.end();\n+        String group = m.group();\n+\n+        int prefixStart = m.start(1);\n+        int prefixEnd = m.end(1);\n+        String prefixGroup = m.group(1);\n+\n+        int suffixStart = m.start(2);\n+        int suffixEnd = m.end(2);\n+        String suffixGroup = m.group(2);\n+\n+        MatchResult mr = m.toMatchResult();\n+        Arrays.fill(data, '*');  \/\/ spoil original input\n+\n+        assertEquals(start, mr.start());\n+        assertEquals(end, mr.end());\n+        assertEquals(group, mr.group());\n+\n+        assertEquals(prefixStart, mr.start(1));\n+        assertEquals(prefixEnd, mr.end(1));\n+        assertEquals(prefixGroup, mr.group(1));\n+\n+        assertEquals(suffixStart, mr.start(2));\n+        assertEquals(suffixEnd, mr.end(2));\n+        assertEquals(suffixGroup, mr.group(2));\n+    }\n+\n","filename":"test\/jdk\/java\/util\/regex\/ImmutableMatchResultTest.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"modified"}]}