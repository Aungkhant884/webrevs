{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -176,1 +176,2 @@\n-                    decoder.decode(ByteBuffer.wrap(encoded)).toString());\n+                    decoder.decode(ByteBuffer.wrap(encoded)).toString(),\n+                    IDN.USE_STD3_ASCII_RULES);\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SNIHostName.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,3 +26,3 @@\n- * @bug 8020842\n- * @summary SNIHostName does not throw IAE when hostname ends\n- *          with a trailing dot\n+ * @bug 8020842 8261969\n+ * @summary SNIHostName does not throw IAE when hostname doesn't conform to\n+ *          RFC 3490 or ends with a trailing dot\n@@ -32,0 +32,2 @@\n+import java.nio.charset.StandardCharsets;\n+import java.util.HexFormat;\n@@ -35,0 +37,20 @@\n+    private static void checkHostname(String hostname) throws Exception {\n+        try {\n+            new SNIHostName(hostname);\n+            throw new Exception(\"Expected to get IllegalArgumentException for \"\n+                    + hostname);\n+        } catch (IllegalArgumentException iae) {\n+            \/\/ That's the right behavior.\n+        }\n+    }\n+\n+    private static void checkHostname(byte[] encodedHostname) throws Exception {\n+        try {\n+            new SNIHostName(encodedHostname);\n+            throw new Exception(\"Expected to get IllegalArgumentException for \"\n+                    + HexFormat.ofDelimiter(\":\").formatHex(encodedHostname));\n+        } catch (IllegalArgumentException iae) {\n+            \/\/ That's the right behavior.\n+        }\n+    }\n+\n@@ -41,2 +63,3 @@\n-                \".\"\n-            };\n+                \".\",\n+                \"example^com\"\n+        };\n@@ -45,7 +68,2 @@\n-            try {\n-                SNIHostName hostname = new SNIHostName(name);\n-                throw new Exception(\n-                    \"Expected to get IllegalArgumentException for \" + name);\n-            } catch (IllegalArgumentException iae) {\n-                \/\/ That's the right behavior.\n-            }\n+            checkHostname(name);\n+            checkHostname(name.getBytes(StandardCharsets.UTF_8));\n","filename":"test\/jdk\/javax\/net\/ssl\/ServerName\/IllegalSNIName.java","additions":31,"deletions":13,"binary":false,"changes":44,"status":"modified"}]}