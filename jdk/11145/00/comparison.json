{"files":[{"patch":"@@ -818,0 +818,1 @@\n+    @Override\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotConstantPool.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,0 +52,18 @@\n+    \/**\n+     * Ensures that the type referenced by the specified constant pool entry is loaded. This can be\n+     * used to compile time resolve a type. It works for field, method, or type constant pool\n+     * entries.\n+     *\n+     * @param cpi the index of the constant pool entry that references the type\n+     * @param opcode the opcode of the instruction that references the type\n+     * @param initialize if {@code true}, the referenced type is either guaranteed to be initialized\n+     *            upon return or an initialization exception is thrown\n+     *\/\n+    default void loadReferencedType(int cpi, int opcode, boolean initialize) {\n+        if (initialize) {\n+            loadReferencedType(cpi, opcode);\n+        } else {\n+            throw new UnsupportedOperationException();\n+        }\n+    }\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.meta\/src\/jdk\/vm\/ci\/meta\/ConstantPool.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}