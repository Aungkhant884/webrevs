{"files":[{"patch":"@@ -193,1 +193,1 @@\n-    return _in_place_count;\n+    return Atomic::load(&_in_place_count);\n@@ -270,1 +270,1 @@\n-    return _in_place_count;\n+    return Atomic::load(&_in_place_count);\n@@ -281,0 +281,2 @@\n+  bool             _bulk_free_mode;\n+  static const int BULK_FREE_LEN = 64;\n@@ -282,2 +284,2 @@\n-  static inline bool should_bulk_free() {\n-    return std::is_same<Allocator, ZRelocateSmallAllocator>::value;\n+  inline bool should_bulk_free() {\n+    return std::is_same<Allocator, ZRelocateSmallAllocator>::value && _bulk_free_mode;\n@@ -307,0 +309,7 @@\n+  inline void bulk_free_mode_check() {\n+    if (_bulk_free_mode && _allocator->in_place_count() > 0) {\n+      _bulk_free_mode = false;\n+      bulk_free_relocated_page(0);\n+    }\n+  }\n+\n@@ -348,0 +357,1 @@\n+        bulk_free_mode_check();\n@@ -373,1 +383,3 @@\n-      _target(NULL) {}\n+      _target(NULL),\n+      _relocated_pages(BULK_FREE_LEN),\n+      _bulk_free_mode(true) {}\n@@ -412,1 +424,2 @@\n-        bulk_free_relocated_page(32);\n+        bulk_free_relocated_page(BULK_FREE_LEN);\n+        bulk_free_mode_check();\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"}]}