{"files":[{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/z\/zValue.inline.hpp\"\n@@ -145,0 +146,4 @@\n+static void free_pages(ZArray<ZPage*>* pages) {\n+  ZHeap::heap()->free_pages(pages, true \/* reclaimed *\/);\n+}\n+\n@@ -156,0 +161,14 @@\n+  static const int BULK_FREE_LIMIT = 64;\n+\n+  ZArray<ZPage*>* bulk_free_pages() {\n+    static ZPerWorker<ZArray<ZPage*>> _empty_pages;\n+    return _empty_pages.addr();\n+  }\n+\n+  void free_empty_pages(bool free_all) {\n+    if ((free_all && bulk_free_pages()->is_nonempty()) ||\n+        (bulk_free_pages()->length() == BULK_FREE_LIMIT)) {\n+      free_pages(bulk_free_pages());\n+      bulk_free_pages()->clear();\n+    }\n+  }\n@@ -162,0 +181,6 @@\n+    if (bulk_free_pages()->is_nonempty()) {\n+      ZPage* const page = bulk_free_pages()->pop();\n+      page->reset();\n+      return page;\n+    }\n+\n@@ -176,1 +201,1 @@\n-      free_page(page);\n+      bulk_free_pages()->push(page);\n@@ -178,0 +203,2 @@\n+\n+    free_empty_pages(true \/* free_all *\/);\n@@ -181,1 +208,3 @@\n-    free_page(page);\n+    bulk_free_pages()->push(page);\n+\n+    free_empty_pages(Atomic::load(&_in_place_count) > 0);\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":31,"deletions":2,"binary":false,"changes":33,"status":"modified"}]}