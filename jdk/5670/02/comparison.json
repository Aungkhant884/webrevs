{"files":[{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/z\/zValue.inline.hpp\"\n@@ -145,0 +146,4 @@\n+static void free_pages(ZArray<ZPage*>* pages) {\n+  ZHeap::heap()->free_pages(pages, true \/* reclaimed *\/);\n+}\n+\n@@ -156,0 +161,10 @@\n+  ZPerWorker<ZArray<ZPage*>> _empty_pages;\n+  static const int BULK_FREE_LIMIT = 64;\n+\n+  void free_empty_pages(bool free_all) {\n+    if ((free_all && _empty_pages.get().is_nonempty()) ||\n+        (_empty_pages.get().length() == BULK_FREE_LIMIT)) {\n+      free_pages(_empty_pages.addr());\n+      _empty_pages.get().clear();\n+    }\n+  }\n@@ -162,0 +177,6 @@\n+    if (_empty_pages.get().is_nonempty()) {\n+      ZPage* const page = _empty_pages.get().pop();\n+      page->reset();\n+      return page;\n+    }\n+\n@@ -176,1 +197,1 @@\n-      free_page(page);\n+      _empty_pages.get().push(page);\n@@ -178,0 +199,2 @@\n+\n+    free_empty_pages(true \/* free_all *\/);\n@@ -181,1 +204,3 @@\n-    free_page(page);\n+    _empty_pages.get().push(page);\n+\n+    free_empty_pages(Atomic::load(&_in_place_count) > 0);\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"}]}