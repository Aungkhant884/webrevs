{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -32,0 +31,1 @@\n+import java.util.Set;\n@@ -70,1 +70,1 @@\n-        this.options = (options == null) ? Collections.emptySet()\n+        this.options = (options == null) ? Set.of()\n@@ -72,1 +72,1 @@\n-        this.fileObjects = (fileObjects == null) ? Collections.emptySet()\n+        this.fileObjects = (fileObjects == null) ? Set.of()\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/api\/JavadocTaskImpl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.util.Collections;\n@@ -71,4 +70,0 @@\n- * @see java.util.Collections\n- * @see java.util.List\n- * @see java.util.ArrayList\n- * @see java.util.HashMap\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,0 @@\n-import java.util.Collections;\n@@ -216,1 +215,1 @@\n-        docletWriter.printHtmlDocument(Collections.emptyList(), null, localTagsContent, Collections.emptyList(), htmlContent);\n+        docletWriter.printHtmlDocument(List.of(), null, localTagsContent, List.of(), htmlContent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/DocFilesHandlerImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -414,1 +413,1 @@\n-        printHtmlDocument(metakeywords, description, new ContentBuilder(), Collections.emptyList(), body);\n+        printHtmlDocument(metakeywords, description, new ContentBuilder(), List.of(), body);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import java.util.Collections;\n+import java.util.List;\n@@ -81,1 +81,1 @@\n-                .setStylesheets(configuration.getMainStylesheet(), Collections.emptyList()) \/\/ avoid reference to default stylesheet\n+                .setStylesheets(configuration.getMainStylesheet(), List.of()) \/\/ avoid reference to default stylesheet\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexRedirectWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -267,1 +266,1 @@\n-        for (PackageElement pkg : utils.getModulePackageMap().getOrDefault(mdle, Collections.emptySet())) {\n+        for (PackageElement pkg : utils.getModulePackageMap().getOrDefault(mdle, Set.of())) {\n@@ -271,1 +270,1 @@\n-                    e.openedTo = Collections.emptySet();\n+                    e.openedTo = Set.of();\n@@ -332,1 +331,1 @@\n-                openPackages.addAll(utils.getModulePackageMap().getOrDefault(module, Collections.emptySet()));\n+                openPackages.addAll(utils.getModulePackageMap().getOrDefault(module, Set.of()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-import java.util.Collections;\n@@ -109,1 +108,1 @@\n-        private static final Set<String> previewModifiers = Collections.emptySet();\n+        private static final Set<String> previewModifiers = Set.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.util.Collections;\n@@ -41,1 +40,1 @@\n-    protected List<Content> contents = Collections.emptyList();\n+    protected List<Content> contents = List.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ContentBuilder.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-import java.util.Collections;\n@@ -64,1 +63,1 @@\n-    private List<DocPath> additionalStylesheets = Collections.emptyList();\n+    private List<DocPath> additionalStylesheets = List.of();\n@@ -69,1 +68,1 @@\n-    private List<DocPath> additionalScripts = Collections.emptyList();\n+    private List<DocPath> additionalScripts = List.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/Head.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-        modules.forEach(mdle -> modulePackages.computeIfAbsent(mdle, m -> Collections.emptySet()));\n+        modules.forEach(mdle -> modulePackages.computeIfAbsent(mdle, m -> Set.of()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseConfiguration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-import java.util.Collections;\n@@ -1031,1 +1030,1 @@\n-        return Collections.unmodifiableList(since);\n+        return List.copyOf(since);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import java.util.Collections;\n@@ -237,1 +236,1 @@\n-                sfm.setLocation(TAGLET_PATH, Collections.emptyList());\n+                sfm.setLocation(TAGLET_PATH, List.of());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletManager.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.Collections;\n@@ -38,1 +37,0 @@\n-import java.util.stream.Collectors;\n@@ -254,1 +252,1 @@\n-        return Collections.emptyMap();\n+        return Map.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -680,1 +679,1 @@\n-               return Collections.emptyList();\n+               return List.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/CommentHelper.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -200,1 +200,1 @@\n-        public List<? extends DocTree> inlineTags = Collections.emptyList();\n+        public List<? extends DocTree> inlineTags = List.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/DocFinder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,1 +120,1 @@\n-            return Arrays.asList(mdle.getQualifiedName() + \" \" + \"module\");\n+            return List.of(mdle.getQualifiedName() + \" \" + \"module\");\n@@ -122,1 +122,1 @@\n-            return Collections.emptyList();\n+            return List.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/MetaKeywords.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-import java.util.Collections;\n@@ -646,1 +645,1 @@\n-                return Collections.emptyList();\n+                return List.of();\n@@ -767,1 +766,1 @@\n-        return getDeclaredType(Collections.emptyList(), enclosing, target);\n+        return getDeclaredType(List.of(), enclosing, target);\n@@ -2264,1 +2263,1 @@\n-        return dcTree == null ? Collections.emptyList() : dcTree.getBlockTags();\n+        return dcTree == null ? List.of() : dcTree.getBlockTags();\n@@ -2483,1 +2482,1 @@\n-                ? Collections.emptyList()\n+                ? List.of()\n@@ -2490,1 +2489,1 @@\n-                    ? Collections.emptyList()\n+                    ? List.of()\n@@ -2497,1 +2496,1 @@\n-                ? Collections.emptyList()\n+                ? List.of()\n@@ -2552,1 +2551,1 @@\n-            return Collections.emptyList();\n+            return List.of();\n@@ -2652,1 +2651,1 @@\n-            return new PreviewSummary(Collections.emptySet(), Collections.emptySet(), Collections.emptySet());\n+            return new PreviewSummary(Set.of(), Set.of(), Set.of());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -224,1 +224,1 @@\n-        return visibleMembers.getOrDefault(kind, Collections.emptyList());\n+        return visibleMembers.getOrDefault(kind, List.of());\n@@ -237,1 +237,1 @@\n-        return visibleMembers.getOrDefault(kind, Collections.emptyList()).stream()\n+        return visibleMembers.getOrDefault(kind, List.of()).stream()\n@@ -802,1 +802,1 @@\n-                orderedMembers.computeIfAbsent(kind, t -> Collections.emptyList());\n+                orderedMembers.computeIfAbsent(kind, t -> List.of());\n@@ -805,1 +805,1 @@\n-                memberMap.computeIfAbsent(kind, t -> Collections.emptyMap());\n+                memberMap.computeIfAbsent(kind, t -> Map.of());\n@@ -843,1 +843,1 @@\n-            return map.getOrDefault(key, Collections.emptyList());\n+            return map.getOrDefault(key, List.of());\n@@ -848,1 +848,1 @@\n-            return map.getOrDefault(key, Collections.emptyList())\n+            return map.getOrDefault(key, List.of())\n@@ -904,1 +904,1 @@\n-        List<Element> list = visibleMembers.getOrDefault(Kind.METHODS, Collections.emptyList())\n+        List<Element> list = visibleMembers.getOrDefault(Kind.METHODS, List.of())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -365,1 +365,1 @@\n-        return Collections.emptyList();\n+        return List.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Env.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.util.Collections;\n@@ -557,1 +556,1 @@\n-        this(ElemKind.OK, blockType, endKind, Collections.emptySet(), attrMaps);\n+        this(ElemKind.OK, blockType, endKind, Set.of(), attrMaps);\n@@ -561,1 +560,1 @@\n-        this(elemKind, blockType, endKind, Collections.emptySet(), attrMaps);\n+        this(elemKind, blockType, endKind, Set.of(), attrMaps);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/HtmlTag.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -188,2 +188,2 @@\n-    private List<JCClassDecl> classDecList = Collections.emptyList();\n-    private List<String> classArgList = Collections.emptyList();\n+    private List<JCClassDecl> classDecList = List.of();\n+    private List<String> classArgList = List.of();\n@@ -840,1 +840,1 @@\n-            return Collections.emptyList();\n+            return List.of();\n@@ -868,1 +868,1 @@\n-            return Collections.singletonList(locations.get(0));\n+            return List.of(locations.get(0));\n@@ -877,1 +877,1 @@\n-            return Collections.emptyList();\n+            return List.of();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ElementsTable.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.util.Collections;\n@@ -352,1 +351,1 @@\n-        return begin(allArgs, Collections.emptySet());\n+        return begin(allArgs, Set.of());\n@@ -641,1 +640,1 @@\n-                            if (!opt.process(arg, Collections.singletonList(argVal))) {\n+                            if (!opt.process(arg, List.of(argVal))) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/Start.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}