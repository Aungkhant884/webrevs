{"files":[{"patch":"@@ -2207,0 +2207,14 @@\n+      if (loop_head->unrolled_count() == 1) {\n+        \/\/ The Opaque2 node created above (in the case of the first unrolling) hides the type of the loop limit.\n+        \/\/ As a result, if the iv Phi constant folds (because it captured the iteration range), the exit test won't\n+        \/\/ constant fold and the graph contains a broken counted loop.\n+        const Type* new_limit_t;\n+        if (stride_con > 0) {\n+          new_limit_t = TypeInt::make(min_jint, limit_type->_hi, limit_type->_widen);\n+        } else {\n+          assert(stride_con < 0, \"stride can't be 0\");\n+          new_limit_t = TypeInt::make(limit_type->_lo, max_jint, limit_type->_widen);\n+        }\n+        new_limit = new CastIINode(new_limit, new_limit_t);\n+        register_new_node(new_limit, ctrl);\n+      }\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8273115\n+ * @summary CountedLoopEndNode::stride_con crash in debug build with -XX:+TraceLoopOpts\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+TraceLoopOpts -Xcomp -XX:-TieredCompilation\n+ *                   -XX:CompileOnly=TestBadlyFormedCountedLoop.main TestBadlyFormedCountedLoop\n+ *\/\n+\n+public class TestBadlyFormedCountedLoop {\n+    static int y;\n+    static int[] A = new int[1];\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 10; i+=2) {\n+            int k;\n+            int j;\n+            for (j = 1; (j += 3) < 5; ) {\n+                A[0] = 0;\n+                for (k = j; k < 5; k++) {\n+                    y++;\n+                }\n+            }\n+            y = j;\n+        }\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestBadlyFormedCountedLoop.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}