{"files":[{"patch":"@@ -3017,3 +3017,4 @@\n-void Assembler::evmovdqub(XMMRegister dst, XMMRegister src, bool merge, int vector_len) {\n-  assert(VM_Version::supports_evex(), \"\");\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+void Assembler::evmovdqub(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+  assert(VM_Version::supports_avx512vlbw(), \"\");\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n+  attributes.set_embedded_opmask_register_specifier(mask);\n@@ -3024,2 +3025,1 @@\n-  int prefix = (_legacy_mode_bw) ? VEX_SIMD_F2 : VEX_SIMD_F3;\n-  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), (Assembler::VexSimdPrefix)prefix, VEX_OPCODE_0F, &attributes);\n+  int encode = vex_prefix_and_encode(dst->encoding(), 0, src->encoding(), VEX_SIMD_F2, VEX_OPCODE_0F, &attributes);\n@@ -3029,29 +3029,3 @@\n-void Assembler::evmovdqub(XMMRegister dst, Address src, bool merge, int vector_len) {\n-  assert(VM_Version::supports_evex(), \"\");\n-  InstructionMark im(this);\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n-  int prefix = (_legacy_mode_bw) ? VEX_SIMD_F2 : VEX_SIMD_F3;\n-  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_FVM, \/* input_size_in_bits *\/ EVEX_NObit);\n-  attributes.set_is_evex_instruction();\n-  if (merge) {\n-    attributes.reset_is_clear_context();\n-  }\n-  vex_prefix(src, 0, dst->encoding(), (Assembler::VexSimdPrefix)prefix, VEX_OPCODE_0F, &attributes);\n-  emit_int8(0x6F);\n-  emit_operand(dst, src);\n-}\n-\n-void Assembler::evmovdqub(Address dst, XMMRegister src, bool merge, int vector_len) {\n-  assert(VM_Version::supports_evex(), \"\");\n-  assert(src != xnoreg, \"sanity\");\n-  InstructionMark im(this);\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n-  int prefix = (_legacy_mode_bw) ? VEX_SIMD_F2 : VEX_SIMD_F3;\n-  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_FVM, \/* input_size_in_bits *\/ EVEX_NObit);\n-  attributes.set_is_evex_instruction();\n-  if (merge) {\n-    attributes.reset_is_clear_context();\n-  }\n-  vex_prefix(dst, 0, src->encoding(), (Assembler::VexSimdPrefix)prefix, VEX_OPCODE_0F, &attributes);\n-  emit_int8(0x7F);\n-  emit_operand(src, dst);\n+void Assembler::evmovdqub(XMMRegister dst, XMMRegister src, int vector_len) {\n+  \/\/ Unmasked instruction\n+  evmovdqub(dst, k0, src, \/*merge*\/ false, vector_len);\n@@ -3063,1 +3037,1 @@\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n@@ -3075,0 +3049,5 @@\n+void Assembler::evmovdqub(XMMRegister dst, Address src, int vector_len) {\n+  \/\/ Unmasked instruction\n+  evmovdqub(dst, k0, src, \/*merge*\/ false, vector_len);\n+}\n+\n@@ -3079,1 +3058,1 @@\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n@@ -3091,13 +3070,3 @@\n-void Assembler::evmovdquw(XMMRegister dst, Address src, bool merge, int vector_len) {\n-  assert(VM_Version::supports_evex(), \"\");\n-  InstructionMark im(this);\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ true, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n-  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_FVM, \/* input_size_in_bits *\/ EVEX_NObit);\n-  attributes.set_is_evex_instruction();\n-  if (merge) {\n-    attributes.reset_is_clear_context();\n-  }\n-  int prefix = (_legacy_mode_bw) ? VEX_SIMD_F2 : VEX_SIMD_F3;\n-  vex_prefix(src, 0, dst->encoding(), (Assembler::VexSimdPrefix)prefix, VEX_OPCODE_0F, &attributes);\n-  emit_int8(0x6F);\n-  emit_operand(dst, src);\n+void Assembler::evmovdquw(XMMRegister dst, Address src, int vector_len) {\n+  \/\/ Unmasked instruction\n+  evmovdquw(dst, k0, src, \/*merge*\/ false, vector_len);\n@@ -3109,1 +3078,1 @@\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ true, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ true, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n@@ -3121,14 +3090,3 @@\n-void Assembler::evmovdquw(Address dst, XMMRegister src, bool merge, int vector_len) {\n-  assert(VM_Version::supports_evex(), \"\");\n-  assert(src != xnoreg, \"sanity\");\n-  InstructionMark im(this);\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ true, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n-  attributes.set_address_attributes(\/* tuple_type *\/ EVEX_FVM, \/* input_size_in_bits *\/ EVEX_NObit);\n-  attributes.set_is_evex_instruction();\n-  if (merge) {\n-    attributes.reset_is_clear_context();\n-  }\n-  int prefix = (_legacy_mode_bw) ? VEX_SIMD_F2 : VEX_SIMD_F3;\n-  vex_prefix(dst, 0, src->encoding(), (Assembler::VexSimdPrefix)prefix, VEX_OPCODE_0F, &attributes);\n-  emit_int8(0x7F);\n-  emit_operand(src, dst);\n+void Assembler::evmovdquw(Address dst, XMMRegister src, int vector_len) {\n+  \/\/ Unmasked instruction\n+  evmovdquw(dst, k0, src, \/*merge*\/ false, vector_len);\n@@ -3141,1 +3099,1 @@\n-  InstructionAttr attributes(vector_len, \/* vex_w *\/ true, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* vex_w *\/ true, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ false, \/* uses_vl *\/ true);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":23,"deletions":65,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -1555,3 +1555,3 @@\n-  void evmovdqub(Address dst, XMMRegister src, bool merge, int vector_len);\n-  void evmovdqub(XMMRegister dst, Address src, bool merge, int vector_len);\n-  void evmovdqub(XMMRegister dst, XMMRegister src, bool merge, int vector_len);\n+  void evmovdqub(XMMRegister dst, XMMRegister src, int vector_len);\n+  void evmovdqub(XMMRegister dst, Address src, int vector_len);\n+  void evmovdqub(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n@@ -1560,3 +1560,4 @@\n-  void evmovdquw(Address dst, XMMRegister src, bool merge, int vector_len);\n-  void evmovdquw(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evmovdquw(XMMRegister dst, Address src, bool merge, int vector_len);\n+\n+  void evmovdquw(XMMRegister dst, Address src, int vector_len);\n+  void evmovdquw(Address dst, XMMRegister src, int vector_len);\n+  void evmovdquw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n@@ -1564,2 +1565,2 @@\n-  void evmovdqul(Address dst, XMMRegister src, int vector_len);\n-  void evmovdqul(XMMRegister dst, Address src, int vector_len);\n+  void evmovdquw(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+\n@@ -1567,2 +1568,3 @@\n-  void evmovdqul(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evmovdqul(XMMRegister dst, KRegister mask, Address src, bool merge, int vector_len);\n+  void evmovdqul(XMMRegister dst, Address src, int vector_len);\n+  void evmovdqul(Address dst, XMMRegister src, int vector_len);\n+\n@@ -1570,0 +1572,3 @@\n+  void evmovdqul(XMMRegister dst, KRegister mask, Address src, bool merge, int vector_len);\n+  void evmovdqul(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n+\n@@ -1573,2 +1578,1 @@\n-  void evmovdquq(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n-  void evmovdquq(XMMRegister dst, KRegister mask, Address src, bool merge, int vector_len);\n+\n@@ -1576,0 +1580,2 @@\n+  void evmovdquq(XMMRegister dst, KRegister mask, Address src, bool merge, int vector_len);\n+  void evmovdquq(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -1986,2 +1986,2 @@\n-void C2_MacroAssembler::evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, int vector_len) {\n-  MacroAssembler::evmovdqu(type, kmask, dst, src, vector_len);\n+void C2_MacroAssembler::evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, bool merge, int vector_len) {\n+  MacroAssembler::evmovdqu(type, kmask, dst, src, merge, vector_len);\n@@ -1990,2 +1990,2 @@\n-void C2_MacroAssembler::evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, int vector_len) {\n-  MacroAssembler::evmovdqu(type, kmask, dst, src, vector_len);\n+void C2_MacroAssembler::evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, bool merge, int vector_len) {\n+  MacroAssembler::evmovdqu(type, kmask, dst, src, merge, vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -122,2 +122,2 @@\n-  void evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, int vector_len);\n-  void evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, int vector_len);\n+  void evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, bool merge, int vector_len);\n+  void evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, bool merge, int vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2609,5 +2609,1 @@\n-    if (mask == k0) {\n-      Assembler::evmovdqub(dst, as_Address(src), merge, vector_len);\n-    } else {\n-      Assembler::evmovdqub(dst, mask, as_Address(src), merge, vector_len);\n-    }\n+    Assembler::evmovdqub(dst, mask, as_Address(src), merge, vector_len);\n@@ -2616,5 +2612,1 @@\n-    if (mask == k0) {\n-      Assembler::evmovdqub(dst, Address(scratch_reg, 0), merge, vector_len);\n-    } else {\n-      Assembler::evmovdqub(dst, mask, Address(scratch_reg, 0), merge, vector_len);\n-    }\n+    Assembler::evmovdqub(dst, mask, Address(scratch_reg, 0), merge, vector_len);\n@@ -5295,1 +5287,1 @@\n-        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_128bit);\n+        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, false, Assembler::AVX_128bit);\n@@ -5300,1 +5292,1 @@\n-        evmovdqu(T_LONG, mask, Address(base, disp), xtmp, Assembler::AVX_256bit);\n+        evmovdqu(T_LONG, mask, Address(base, disp), xtmp, true, Assembler::AVX_256bit);\n@@ -5303,1 +5295,1 @@\n-        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_256bit);\n+        evmovdqu(T_LONG, k0, Address(base, disp), xtmp, false, Assembler::AVX_256bit);\n@@ -5309,1 +5301,1 @@\n-          evmovdqu(T_LONG, mask, Address(base, disp), xtmp, Assembler::AVX_512bit);\n+          evmovdqu(T_LONG, mask, Address(base, disp), xtmp, true, Assembler::AVX_512bit);\n@@ -5311,1 +5303,1 @@\n-          evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_256bit);\n+          evmovdqu(T_LONG, k0, Address(base, disp), xtmp, false, Assembler::AVX_256bit);\n@@ -5319,1 +5311,1 @@\n-          evmovdqu(T_LONG, mask, Address(base, disp), xtmp, Assembler::AVX_512bit);\n+          evmovdqu(T_LONG, mask, Address(base, disp), xtmp, true, Assembler::AVX_512bit);\n@@ -5321,2 +5313,2 @@\n-          evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_256bit);\n-          evmovdqu(T_LONG, k0, Address(base, disp + 32), xtmp, Assembler::AVX_128bit);\n+          evmovdqu(T_LONG, k0, Address(base, disp), xtmp, false, Assembler::AVX_256bit);\n+          evmovdqu(T_LONG, k0, Address(base, disp + 32), xtmp, false, Assembler::AVX_128bit);\n@@ -5329,1 +5321,1 @@\n-          evmovdqu(T_LONG, mask, Address(base, disp), xtmp, Assembler::AVX_512bit);\n+          evmovdqu(T_LONG, mask, Address(base, disp), xtmp, true, Assembler::AVX_512bit);\n@@ -5331,1 +5323,1 @@\n-          evmovdqu(T_LONG, k0, Address(base, disp), xtmp, Assembler::AVX_256bit);\n+          evmovdqu(T_LONG, k0, Address(base, disp), xtmp, false, Assembler::AVX_256bit);\n@@ -5334,1 +5326,1 @@\n-          evmovdqu(T_LONG, mask, Address(base, disp + 32), xtmp, Assembler::AVX_256bit);\n+          evmovdqu(T_LONG, mask, Address(base, disp + 32), xtmp, true, Assembler::AVX_256bit);\n@@ -6306,1 +6298,1 @@\n-    evmovdqub(rymm0, Address(obja, result), false, Assembler::AVX_512bit);\n+    evmovdqub(rymm0, Address(obja, result), Assembler::AVX_512bit);\n@@ -8147,1 +8139,1 @@\n-    evmovdquw(tmp1Reg, Address(src, len, Address::times_2), \/*merge*\/ false, Assembler::AVX_512bit);\n+    evmovdquw(tmp1Reg, Address(src, len, Address::times_2), Assembler::AVX_512bit);\n@@ -8317,1 +8309,1 @@\n-    evmovdquw(Address(dst, len, Address::times_2), tmp1, \/*merge*\/ false, Assembler::AVX_512bit);\n+    evmovdquw(Address(dst, len, Address::times_2), tmp1, Assembler::AVX_512bit);\n@@ -8419,1 +8411,1 @@\n-void MacroAssembler::evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, int vector_len) {\n+void MacroAssembler::evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, bool merge, int vector_len) {\n@@ -8423,1 +8415,1 @@\n-      evmovdqub(dst, kmask, src, false, vector_len);\n+      evmovdqub(dst, kmask, src, merge, vector_len);\n@@ -8427,1 +8419,1 @@\n-      evmovdquw(dst, kmask, src, false, vector_len);\n+      evmovdquw(dst, kmask, src, merge, vector_len);\n@@ -8431,1 +8423,1 @@\n-      evmovdqul(dst, kmask, src, false, vector_len);\n+      evmovdqul(dst, kmask, src, merge, vector_len);\n@@ -8435,1 +8427,1 @@\n-      evmovdquq(dst, kmask, src, false, vector_len);\n+      evmovdquq(dst, kmask, src, merge, vector_len);\n@@ -8443,1 +8435,1 @@\n-void MacroAssembler::evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, int vector_len) {\n+void MacroAssembler::evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, bool merge, int vector_len) {\n@@ -8447,1 +8439,1 @@\n-      evmovdqub(dst, kmask, src, true, vector_len);\n+      evmovdqub(dst, kmask, src, merge, vector_len);\n@@ -8451,1 +8443,1 @@\n-      evmovdquw(dst, kmask, src, true, vector_len);\n+      evmovdquw(dst, kmask, src, merge, vector_len);\n@@ -8455,1 +8447,1 @@\n-      evmovdqul(dst, kmask, src, true, vector_len);\n+      evmovdqul(dst, kmask, src, merge, vector_len);\n@@ -8459,1 +8451,1 @@\n-      evmovdquq(dst, kmask, src, true, vector_len);\n+      evmovdquq(dst, kmask, src, merge, vector_len);\n@@ -8848,1 +8840,1 @@\n-  evmovdqu(bt, mask, dst, xmm, vec_enc);\n+  evmovdqu(bt, mask, dst, xmm, true, vec_enc);\n@@ -8973,1 +8965,1 @@\n-      evmovdqu(T_BYTE, k2, Address(to, 0), xtmp, Assembler::AVX_256bit);\n+      evmovdqu(T_BYTE, k2, Address(to, 0), xtmp, true, Assembler::AVX_256bit);\n@@ -9043,1 +9035,1 @@\n-      evmovdqu(T_BYTE, k2, Address(to, 0), xtmp, Assembler::AVX_512bit);\n+      evmovdqu(T_BYTE, k2, Address(to, 0), xtmp, true, Assembler::AVX_512bit);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":29,"deletions":37,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -1150,6 +1150,10 @@\n-  void evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src, int vector_len);\n-  void evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, int vector_len);\n-\n-  void evmovdqub(Address dst, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdqub(dst, src, merge, vector_len); }\n-  void evmovdqub(XMMRegister dst, Address src, bool merge, int vector_len) { Assembler::evmovdqub(dst, src, merge, vector_len); }\n-  void evmovdqub(XMMRegister dst, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdqub(dst, src, merge, vector_len); }\n+  void evmovdqu(BasicType type, KRegister kmask, Address dst, XMMRegister src,  bool merge, int vector_len);\n+  void evmovdqu(BasicType type, KRegister kmask, XMMRegister dst, Address src, bool merge, int vector_len);\n+\n+  void evmovdqub(XMMRegister dst, XMMRegister src, int vector_len) { Assembler::evmovdqub(dst, src, vector_len); }\n+  void evmovdqub(XMMRegister dst, Address src, int vector_len) { Assembler::evmovdqub(dst, src, vector_len); }\n+  void evmovdqub(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+    if (dst->encoding() != src->encoding() || mask != k0)  {\n+      Assembler::evmovdqub(dst, mask, src, merge, vector_len);\n+    }\n+  }\n@@ -1160,3 +1164,7 @@\n-  void evmovdquw(Address dst, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdquw(dst, src, merge, vector_len); }\n-  void evmovdquw(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdquw(dst, mask, src, merge, vector_len); }\n-  void evmovdquw(XMMRegister dst, Address src, bool merge, int vector_len) { Assembler::evmovdquw(dst, src, merge, vector_len); }\n+  void evmovdquw(XMMRegister dst, Address src, int vector_len) { Assembler::evmovdquw(dst, src, vector_len); }\n+  void evmovdquw(Address dst, XMMRegister src, int vector_len) { Assembler::evmovdquw(dst, src, vector_len); }\n+  void evmovdquw(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+    if (dst->encoding() != src->encoding() || mask != k0) {\n+      Assembler::evmovdquw(dst, mask, src, merge, vector_len);\n+    }\n+  }\n@@ -1164,0 +1172,1 @@\n+  void evmovdquw(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdquw(dst, mask, src, merge, vector_len); }\n@@ -1166,0 +1175,5 @@\n+  void evmovdqul(XMMRegister dst, XMMRegister src, int vector_len) {\n+     if (dst->encoding() != src->encoding()) {\n+       Assembler::evmovdqul(dst, src, vector_len);\n+     }\n+  }\n@@ -1168,3 +1182,5 @@\n-  void evmovdqul(XMMRegister dst, XMMRegister src, int vector_len) {\n-     if (dst->encoding() == src->encoding()) return;\n-     Assembler::evmovdqul(dst, src, vector_len);\n+\n+  void evmovdqul(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n+    if (dst->encoding() != src->encoding() || mask != k0)  {\n+      Assembler::evmovdqul(dst, mask, src, merge, vector_len);\n+    }\n@@ -1172,1 +1188,0 @@\n-  void evmovdqul(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdqul(dst, mask, src, merge, vector_len); }\n@@ -1174,4 +1189,1 @@\n-  void evmovdqul(XMMRegister dst, KRegister mask, XMMRegister src, bool merge, int vector_len) {\n-    if (dst->encoding() == src->encoding() && mask == k0) return;\n-    Assembler::evmovdqul(dst, mask, src, merge, vector_len);\n-   }\n+  void evmovdqul(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdqul(dst, mask, src, merge, vector_len); }\n@@ -1180,0 +1192,5 @@\n+  void evmovdquq(XMMRegister dst, XMMRegister src, int vector_len) {\n+    if (dst->encoding() != src->encoding()) {\n+      Assembler::evmovdquq(dst, src, vector_len);\n+    }\n+  }\n@@ -1183,6 +1200,1 @@\n-  void evmovdquq(XMMRegister dst, XMMRegister src, int vector_len) {\n-    if (dst->encoding() == src->encoding()) return;\n-    Assembler::evmovdquq(dst, src, vector_len);\n-  }\n-  void evmovdquq(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdquq(dst, mask, src, merge, vector_len); }\n-  void evmovdquq(XMMRegister dst, KRegister mask, Address src, bool merge, int vector_len) { Assembler::evmovdquq(dst, mask, src, merge, vector_len); }\n+\n@@ -1190,2 +1202,3 @@\n-    if (dst->encoding() == src->encoding() && mask == k0) return;\n-    Assembler::evmovdquq(dst, mask, src, merge, vector_len);\n+    if (dst->encoding() != src->encoding() || mask != k0) {\n+      Assembler::evmovdquq(dst, mask, src, merge, vector_len);\n+    }\n@@ -1193,0 +1206,2 @@\n+  void evmovdquq(XMMRegister dst, KRegister mask, Address src, bool merge, int vector_len) { Assembler::evmovdquq(dst, mask, src, merge, vector_len); }\n+  void evmovdquq(Address dst, KRegister mask, XMMRegister src, bool merge, int vector_len) { Assembler::evmovdquq(dst, mask, src, merge, vector_len); }\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":40,"deletions":25,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -202,2 +202,2 @@\n-    evmovdqu(type[shift], mask, xmm, Address(src, index, scale, offset), Assembler::AVX_512bit);\n-    evmovdqu(type[shift], mask, Address(dst, index, scale, offset), xmm, Assembler::AVX_512bit);\n+    evmovdqu(type[shift], mask, xmm, Address(src, index, scale, offset), true, Assembler::AVX_512bit);\n+    evmovdqu(type[shift], mask, Address(dst, index, scale, offset), xmm, true, Assembler::AVX_512bit);\n@@ -217,2 +217,2 @@\n-  evmovdqu(type[shift], mask, xmm, Address(src, index, scale, offset), Assembler::AVX_256bit);\n-  evmovdqu(type[shift], mask, Address(dst, index, scale, offset), xmm, Assembler::AVX_256bit);\n+  evmovdqu(type[shift], mask, xmm, Address(src, index, scale, offset), true, Assembler::AVX_256bit);\n+  evmovdqu(type[shift], mask, Address(dst, index, scale, offset), xmm, true, Assembler::AVX_256bit);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_arrayCopy_avx3.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -8784,1 +8784,1 @@\n-    __ evmovdqu(elmType, $mask$$KRegister, $dst$$XMMRegister, $mem$$Address, vector_len);\n+    __ evmovdqu(elmType, $mask$$KRegister, $dst$$XMMRegister, $mem$$Address, false, vector_len);\n@@ -8817,1 +8817,1 @@\n-    __ evmovdqu(elmType, $mask$$KRegister, $mem$$Address, $src$$XMMRegister, vector_len);\n+    __ evmovdqu(elmType, $mask$$KRegister, $mem$$Address, $src$$XMMRegister, true, vector_len);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}