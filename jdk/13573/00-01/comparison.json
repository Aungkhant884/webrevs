{"files":[{"patch":"@@ -51,0 +51,3 @@\n+    int xPos = 0;\n+    int yPos = 0;\n+    Point pMousePosition;\n@@ -78,1 +81,1 @@\n-    public void start() {\n+    public void start() throws Exception {\n@@ -83,3 +86,6 @@\n-            Point p = button.getLocationOnScreen();\n-            robot.mouseMove(p.x + button.getWidth() \/ 2, p.y + button.getHeight() \/ 2);\n-\n+            EventQueue.invokeAndWait(() -> {\n+                Point p = button.getLocationOnScreen();\n+                xPos = p.x + button.getWidth() \/ 2;\n+                yPos = p.y + button.getHeight() \/ 2\n+            });\n+            robot.mouseMove(xPos,yPos);\n@@ -88,13 +94,25 @@\n-            Point pMousePosition = frame.getMousePosition(false);\n-            if (pMousePosition != null) {\n-                throw new RuntimeException(\"Test failed: Container is overlapped by \" + \" child and it should be taken into account\");\n-            }\n-            System.out.println(\"Test stage completed: Container is overlapped by \" + \" child and it was taken into account\");\n-\n-            pMousePosition = frame.getMousePosition(true);\n-            if (pMousePosition == null) {\n-                throw new RuntimeException(\"Test failed: Container is overlapped by \" + \" child and it should not be taken into account\");\n-            }\n-            System.out.println(\"Test stage completed: Container is overlapped by \" + \" child and it should not be taken into account\");\n-\n-            robot.mouseMove(panel.getLocationOnScreen().x + POINT_WITHOUT_COMPONENTS.x, panel.getLocationOnScreen().y + POINT_WITHOUT_COMPONENTS.y);\n+            EventQueue.invokeAndWait(() -> {\n+                pMousePosition = frame.getMousePosition(false);\n+                if (pMousePosition != null) {\n+                    throw new RuntimeException(\"Test failed: Container is \" +\n+                            \"overlapped by \" + \" child and it should be taken \" +\n+                            \"into account\");\n+                }\n+                System.out.println(\"Test stage completed: Container is \" +\n+                        \"overlapped by \" + \" child and it was taken into \" +\n+                        \"account\");\n+\n+                pMousePosition = frame.getMousePosition(true);\n+                if (pMousePosition == null) {\n+                    throw new RuntimeException(\"Test failed: Container is \" +\n+                            \"overlapped by \" + \" child and it should not be \" +\n+                            \"taken into account\");\n+                }\n+                System.out.println(\"Test stage completed: Container is \" +\n+                        \"overlapped by \" + \" child and it should not be \" +\n+                        \"taken into account\");\n+                xPos = panel.getLocationOnScreen().x + POINT_WITHOUT_COMPONENTS.x;\n+                yPos = panel.getLocationOnScreen().y + POINT_WITHOUT_COMPONENTS.y;\n+            });\n+\n+            robot.mouseMove(xPos, yPos);\n@@ -104,13 +122,21 @@\n-            pMousePosition = panel.getMousePosition(true);\n-            if (pMousePosition == null) {\n-                throw new RuntimeException(\"Test failed: Pointer was outside of \" + \"the component so getMousePosition() should not return null\");\n-            }\n-            System.out.println(\"Test stage completed: Pointer was outside of \" + \"the component and getMousePosition() has not returned null\");\n-\n-            pMousePosition = panel.getMousePosition(false);\n-            if (pMousePosition == null) {\n-                throw new RuntimeException(\"Test failed: Pointer was outside of \" + \"the component so getMousePosition() should not return null\");\n-            }\n-            System.out.println(\"Test stage completed: Pointer was outside of \" + \"the component and getMousePosition() has not returned null\");\n-\n-            robot.mouseMove(frame.getLocationOnScreen().x + frame.getWidth() + POINT_WITHOUT_COMPONENTS.x, frame.getLocationOnScreen().y + frame.getHeight() + POINT_WITHOUT_COMPONENTS.y);\n+            EventQueue.invokeAndWait(() -> {\n+                pMousePosition = panel.getMousePosition(true);\n+                if (pMousePosition == null) {\n+                    throw new RuntimeException(\"Test failed: Pointer was \" +\n+                            \"outside of \" + \"the component so getMousePosition()\" +\n+                            \" should not return null\");\n+                }\n+                System.out.println(\"Test stage completed: Pointer was outside of \" +\n+                        \"the component and getMousePosition() has not returned null\");\n+\n+                pMousePosition = panel.getMousePosition(false);\n+                if (pMousePosition == null) {\n+                    throw new RuntimeException(\"Test failed: Pointer was outside of \" +\n+                            \"the component so getMousePosition() should not return null\");\n+                }\n+                System.out.println(\"Test stage completed: Pointer was outside of \" +\n+                        \"the component and getMousePosition() has not returned null\");\n+                xPos = frame.getLocationOnScreen().x + frame.getWidth() + POINT_WITHOUT_COMPONENTS.x;\n+                yPos = frame.getLocationOnScreen().y + frame.getHeight() + POINT_WITHOUT_COMPONENTS.y;\n+            });\n+            robot.mouseMove(xPos, yPos);\n@@ -120,12 +146,17 @@\n-            pMousePosition = frame.getMousePosition(true);\n-            if (pMousePosition != null) {\n-                throw new RuntimeException(\"Test failed: Pointer was outside of \" + \"the Frame widow and getMousePosition() should return null\");\n-            }\n-            System.out.println(\"Test stage completed: Pointer was outside of \" + \"the Frame widow and getMousePosition() returned null\");\n-\n-            pMousePosition = frame.getMousePosition(false);\n-            if (pMousePosition != null) {\n-                throw new RuntimeException(\"Test failed: Pointer was outside of \" + \"the Frame widow and getMousePosition() should return null\");\n-            }\n-            System.out.println(\"Test stage completed: Pointer was outside of \" + \"the Frame widow and getMousePosition() returned null\");\n-\n+            EventQueue.invokeAndWait(() -> {\n+                pMousePosition = frame.getMousePosition(true);\n+                if (pMousePosition != null) {\n+                    throw new RuntimeException(\"Test failed: Pointer was outside of \" +\n+                            \"the Frame widow and getMousePosition() should return null\");\n+                }\n+                System.out.println(\"Test stage completed: Pointer was outside of \" +\n+                        \"the Frame widow and getMousePosition() returned null\");\n+\n+                pMousePosition = frame.getMousePosition(false);\n+                if (pMousePosition != null) {\n+                    throw new RuntimeException(\"Test failed: Pointer was outside of \" +\n+                            \"the Frame widow and getMousePosition() should return null\");\n+                }\n+                System.out.println(\"Test stage completed: Pointer was outside of \" +\n+                        \"the Frame widow and getMousePosition() returned null\");\n+            });\n@@ -136,3 +167,5 @@\n-            if (frame != null) {\n-                frame.dispose();\n-            }\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n","filename":"test\/jdk\/java\/awt\/MouseInfo\/ContainerMousePositionTest.java","additions":78,"deletions":45,"binary":false,"changes":123,"status":"modified"}]}