{"files":[{"patch":"@@ -3,2 +3,2 @@\n-\/\/ If the bottom type is available, show it. If the phase type is available and\n-\/\/ differs from the bottom type, show it too (prefixed with 'P:').\n+\/\/ If the phase type is available, show it. If the bottom type is available and\n+\/\/ differs from the bottom type, show it too (prefixed with 'B:').\n@@ -7,1 +7,1 @@\n-\/\/   \"my\/package\/Class (package1\/Class1,package2\/Class2,..)\"\n+\/\/   \"[5:]my\/package\/Class (package1\/Class1,package2\/Class2,..)\"\n@@ -9,1 +9,1 @@\n-\/\/   \"Class\"\n+\/\/   \"[5:]Class\"\n@@ -17,3 +17,3 @@\n-  var m2 = \/.*\\\/(.*)\/.exec(type);\n-  if (m2 != null && typeof m2[1] != 'undefined') {\n-    type = m2[1];\n+  var m2 = \/(\\d+:)?.*\\\/(.*)\/.exec(type);\n+  if (m2 != null && typeof m2[2] != 'undefined') {\n+    type = (typeof m2[1] != 'undefined' ? m2[1] : \"\") + m2[2];\n@@ -30,1 +30,11 @@\n-    type = \"{\" + type.replace(\", \", \"\") + \"}\";\n+    prefix = \", \";\n+    if (type.startsWith(prefix)) {\n+      type = type.slice(prefix.length);\n+    }\n+    components = type.split(\", \");\n+    for (i = 0; i < components.length; i++) {\n+      components[i] = simplify_reference_type(components[i]);\n+    }\n+    type = \"{\" + components.join(\", \") + \"}\";\n+  } else {\n+    type = simplify_reference_type(type);\n@@ -32,1 +42,1 @@\n-  type = simplify_reference_type(type);\n+  type = type.replace(\">=\", \"≥\").replace(\"<=\", \"≤\");\n@@ -39,1 +49,1 @@\n-  if (bottom_type == null) {\n+  if (phase_type == null && bottom_type == null) {\n@@ -42,3 +52,12 @@\n-  type = simplifyType(bottom_type);\n-  if (phase_type != null && phase_type !== bottom_type) {\n-    type += \", P:\" + simplifyType(phase_type);\n+  type = \"\";\n+  \/\/ Always show phase type, if available.\n+  if (phase_type != null) {\n+    type += simplifyType(phase_type);\n+  }\n+  \/\/ Show bottom type, if available and different from phase type.\n+  if (bottom_type != null && bottom_type != phase_type) {\n+    if (phase_type != null) {\n+      type += \" | \";\n+    }\n+    type += \"B: \";\n+    type += simplifyType(bottom_type);\n@@ -50,2 +69,1 @@\n-editProperty(not(or([matches(\"name\", \"Start\"),\n-                     matches(\"bottom_type\", \"bottom\"),\n+editProperty(not(or([matches(\"bottom_type\", \"bottom\"),\n","filename":"src\/utils\/IdealGraphVisualizer\/ServerCompiler\/src\/main\/resources\/com\/sun\/hotspot\/igv\/servercompiler\/filters\/showTypes.filter","additions":33,"deletions":15,"binary":false,"changes":48,"status":"modified"}]}