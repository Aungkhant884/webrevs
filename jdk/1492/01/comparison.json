{"files":[{"patch":"@@ -1903,0 +1903,1 @@\n+      reasonable_initial = limit_by_allocatable_memory(reasonable_initial);\n@@ -1907,2 +1908,0 @@\n-      reasonable_initial = limit_by_allocatable_memory(reasonable_initial);\n-\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright (C) 2020 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc.ergonomics;\n+\n+\/*\n+ * @test TestMinHeapSize\n+ * @bug 8257230\n+ * @summary Check ergonomics decided on compatible initial and minimum heap sizes\n+ * @library \/test\/lib\n+ *\n+ * @comment Not run on AIX as it does not support ulimit -v\n+ * @requires os.family != \"aix\"\n+ * @run main\/othervm gc.ergonomics.TestMinHeapSize\n+ *\/\n+\n+import jdk.test.lib.Platform;\n+import jdk.test.lib.process.ProcessTools;\n+\n+\n+public class TestMinHeapSize {\n+\n+    public static void main(String[] args) throws Throwable {\n+        String cmd = ProcessTools.getCommandLine(ProcessTools.createTestJvm(\n+                \"-XX:MinHeapSize=\" + \"260m\", \"-version\"));\n+        cmd = escapeCmd(cmd);\n+\n+        int ulimitV = 524288; \/\/ 512M\n+        var pb = new ProcessBuilder(\n+                \"sh\", \"-c\",\n+                \"ulimit -v \" + ulimitV + \"; \" + cmd);\n+\n+        \/\/ lower MALLOC_ARENA_MAX b\/c we limited virtual memory, see JDK-8043516\n+        pb.environment().put(\"MALLOC_ARENA_MAX\", \"4\");\n+\n+        var oa = ProcessTools.executeCommand(pb);\n+\n+        oa.shouldNotContain(\"hs_err\")\n+          .shouldNotContain(\"Internal Error\");\n+    }\n+\n+    private static String escapeCmd(String cmd) {\n+        if (Platform.isWindows()) {\n+            return cmd.replace('\\\\', '\/')\n+                    .replace(\";\", \"\\\\;\")\n+                    .replace(\"|\", \"\\\\|\");\n+        }\n+        return cmd;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/ergonomics\/TestMinHeapSize.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}