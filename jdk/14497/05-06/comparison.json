{"files":[{"patch":"@@ -28,1 +28,4 @@\n-import java.awt.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n@@ -30,1 +33,10 @@\n-import javax.swing.*;\n+import javax.swing.ButtonModel;\n+import javax.swing.CellRendererPane;\n+import javax.swing.DefaultButtonModel;\n+import javax.swing.JButton;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JList;\n+import javax.swing.JPanel;\n+import javax.swing.ListCellRenderer;\n+import javax.swing.UIManager;\n@@ -34,1 +46,8 @@\n-import apple.laf.JRSUIConstants.*;\n+import apple.laf.JRSUIConstants.ArrowsOnly;\n+import apple.laf.JRSUIConstants.AlignmentHorizontal;\n+import apple.laf.JRSUIConstants.AlignmentVertical;\n+import apple.laf.JRSUIConstants.Focused;\n+import apple.laf.JRSUIConstants.IndicatorOnly;\n+import apple.laf.JRSUIConstants.Size;\n+import apple.laf.JRSUIConstants.State;\n+import apple.laf.JRSUIConstants.Widget;\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxButton.java","additions":22,"deletions":3,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -731,0 +731,32 @@\n+\n+    @Override\n+    public int getAccessibleChildrenCount(JComponent c) {\n+        return 2;\n+    }\n+\n+    @Override\n+    public Accessible getAccessibleChild(JComponent c, int i) {\n+        \/\/ 0 = the popup\n+        \/\/ 1 = the editor for editable combobox and the arrow button for non-editable combobox\n+        switch ( i ) {\n+            case 0:\n+                if (popup instanceof Accessible accessiblePopup) {\n+                    AccessibleContext ac = accessiblePopup.getAccessibleContext();\n+                    ac.setAccessibleParent(comboBox);\n+                    return accessiblePopup;\n+                }\n+                break;\n+            case 1:\n+                if (comboBox.isEditable()\n+                        && (editor instanceof Accessible accessibleEditor)) {\n+                    AccessibleContext ac = accessibleEditor.getAccessibleContext();\n+                    ac.setAccessibleParent(comboBox);\n+                    return accessibleEditor;\n+                } else if (!comboBox.isEditable()\n+                        && (arrowButton instanceof Accessible accessibleArrowButton)) {\n+                    return accessibleArrowButton;\n+                }\n+                break;\n+        }\n+        return null;\n+    }\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxUI.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -1121,1 +1121,6 @@\n-        return 2;\n+        if ( comboBox.isEditable() ) {\n+            return 2;\n+        }\n+        else {\n+            return 1;\n+        }\n@@ -1128,1 +1133,1 @@\n-        \/\/ 1 = the editor for editable combobox and the arrow button for non-editable combobox\n+        \/\/ 1 = the editor\n@@ -1130,18 +1135,15 @@\n-            case 0:\n-                if ( popup instanceof Accessible accessiblePopup) {\n-                    AccessibleContext ac = accessiblePopup.getAccessibleContext();\n-                    ac.setAccessibleParent(comboBox);\n-                    return accessiblePopup;\n-                }\n-                break;\n-            case 1:\n-                if (comboBox.isEditable()\n-                        && (editor instanceof Accessible accessibleEditor)) {\n-                    AccessibleContext ac = accessibleEditor.getAccessibleContext();\n-                    ac.setAccessibleParent(comboBox);\n-                    return accessibleEditor;\n-                } else if (!comboBox.isEditable()\n-                        && (arrowButton instanceof Accessible accessibleArrowButton)) {\n-                    return accessibleArrowButton;\n-                }\n-                break;\n+        case 0:\n+            if ( popup instanceof Accessible ) {\n+                AccessibleContext ac = ((Accessible) popup).getAccessibleContext();\n+                ac.setAccessibleParent(comboBox);\n+                return(Accessible) popup;\n+            }\n+            break;\n+        case 1:\n+            if ( comboBox.isEditable()\n+                 && (editor instanceof Accessible) ) {\n+                AccessibleContext ac = ((Accessible) editor).getAccessibleContext();\n+                ac.setAccessibleParent(comboBox);\n+                return(Accessible) editor;\n+            }\n+            break;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicComboBoxUI.java","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-                \"Select ( Enable Hover Text) \\n\\n\" +\n+                \"Select \\\"Enable Hover Text\\\"\\n\\n\" +\n@@ -52,1 +52,1 @@\n-                \"\\\"cmd\\\" button.\\n\\n\" +\n+                \"\\\"command\\\" button.\\n\\n\" +\n@@ -58,1 +58,1 @@\n-                \"JMenu Screen Magnifier Test Instructions\", INSTRUCTIONS, 5, 12, 40);\n+                \"JComboBox Screen Magnifier Test Instructions\", INSTRUCTIONS, 5, 12, 40);\n@@ -63,0 +63,1 @@\n+\n","filename":"test\/jdk\/javax\/accessibility\/JComboBox\/TestJComboBoxScreenMagnifier.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}