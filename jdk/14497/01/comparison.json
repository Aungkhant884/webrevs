{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,2 @@\n+import javax.accessibility.AccessibleContext;\n+\n@@ -157,0 +159,5 @@\n+\n+            AccessibleContext ac = this.getAccessibleContext();\n+            if (ac != null && (comboBox.getSelectedItem() != null)) {\n+                ac.setAccessibleName(comboBox.getSelectedItem().toString());\n+            }\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaComboBoxButton.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1121,6 +1121,1 @@\n-        if ( comboBox.isEditable() ) {\n-            return 2;\n-        }\n-        else {\n-            return 1;\n-        }\n+        return 2;\n@@ -1133,1 +1128,1 @@\n-        \/\/ 1 = the editor\n+        \/\/ 1 = the editor for editable combobox and the arrow button for non-editable combobox\n@@ -1135,15 +1130,18 @@\n-        case 0:\n-            if ( popup instanceof Accessible ) {\n-                AccessibleContext ac = ((Accessible) popup).getAccessibleContext();\n-                ac.setAccessibleParent(comboBox);\n-                return(Accessible) popup;\n-            }\n-            break;\n-        case 1:\n-            if ( comboBox.isEditable()\n-                 && (editor instanceof Accessible) ) {\n-                AccessibleContext ac = ((Accessible) editor).getAccessibleContext();\n-                ac.setAccessibleParent(comboBox);\n-                return(Accessible) editor;\n-            }\n-            break;\n+            case 0:\n+                if ( popup instanceof Accessible accessiblePopup) {\n+                    AccessibleContext ac = accessiblePopup.getAccessibleContext();\n+                    ac.setAccessibleParent(comboBox);\n+                    return accessiblePopup;\n+                }\n+                break;\n+            case 1:\n+                if (comboBox.isEditable()\n+                        && (editor instanceof Accessible accessibleEditor)) {\n+                    AccessibleContext ac = accessibleEditor.getAccessibleContext();\n+                    ac.setAccessibleParent(comboBox);\n+                    return accessibleEditor;\n+                } else if (!comboBox.isEditable()\n+                        && (arrowButton instanceof Accessible accessibleArrowButton)) {\n+                    return accessibleArrowButton;\n+                }\n+                break;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicComboBoxUI.java","additions":21,"deletions":23,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8283214\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"mac\")\n+ * @summary Verifies if JComboBox selected itemmagnifies using\n+ * screen magnifier a11y tool.\n+ * @run main\/manual TestJComboBoxScreenMagnifier\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.GridLayout;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+\n+public class TestJComboBoxScreenMagnifier {\n+    private static JFrame frame;\n+    private static final String INSTRUCTIONS =\n+            \"1) Enable Screen magnifier on theMac \\n\\n\" +\n+                \"System Preference -> Accessibility -> Zoom -> \" +\n+                \"Select ( Enable Hover Text) \\n\\n\" +\n+            \"2) Move the mouse over the combobox selected item by pressing  \" +\n+                \"\\\"cmd\\\" button.\\n\\n\" +\n+            \"3) If magnified label is visible, Press Pass else Fail.\";\n+\n+    public static void main(String[] args) throws InterruptedException,\n+             InvocationTargetException {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(\n+                \"JMenu Screen Magnifier Test Instructions\", INSTRUCTIONS, 5, 12, 40);\n+        try {\n+            SwingUtilities.invokeAndWait(\n+                    TestJComboBoxScreenMagnifier::createAndShowUI);\n+            passFailJFrame.awaitAndCheck();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"JComboBox A11Y Screen Magnifier Test\");\n+\n+        String[] fruits = new String[] {\"Apple\", \"Orange\",\n+                \"Mango\", \"Pine Apple\", \"Banana\"};\n+        JComboBox<String> comboBox = new JComboBox<String>(fruits);\n+        JPanel fruitPanel = new JPanel(new GridLayout(1,2));\n+        JLabel fruitLabel = new JLabel(\"Fruits : \", JLabel.CENTER);\n+        fruitLabel.getAccessibleContext().setAccessibleName(\"Fruits Label\");\n+        fruitPanel.add(fruitLabel);\n+        fruitPanel.add(comboBox);\n+        comboBox.getAccessibleContext().setAccessibleName(\"Fruit jCombobox\");\n+        frame.getContentPane().add(fruitPanel, BorderLayout.CENTER);\n+\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame,\n+                PassFailJFrame.Position.HORIZONTAL);\n+        frame.setLocationRelativeTo(null);\n+        frame.pack();\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/accessibility\/JComboBox\/TestJComboBoxScreenMagnifier.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"}]}