{"files":[{"patch":"@@ -67,5 +67,7 @@\n-      \/\/ Loads on nmethod oops are phantom strength. The intend of the load\n-      \/\/ is to just read the oop, and then explicitly keep it alive w.r.t.\n-      \/\/ concurrent marking. Using the keep alive side effects of a normal\n-      \/\/ phantom load is less explicit, and doesn't actually do anything\n-      \/\/ unless the returned value is used as an oop.\n+      \/\/ Loads on nmethod oops are phantom strength.\n+      \/\/\n+      \/\/ Note that we could have used NativeAccess<ON_PHANTOM_OOP_REF>::oop_load(p),\n+      \/\/ but that would have *required* us to convert the returned LoadOopProxy to an oop,\n+      \/\/ or else keep alive load barrier will never be called. It's the LoadOopProxy-to-oop\n+      \/\/ conversion that performs the load barriers. This is too subtle, so we instead\n+      \/\/ perform an explicit keep alive call.\n","filename":"src\/hotspot\/share\/gc\/shared\/barrierSetNMethod.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}