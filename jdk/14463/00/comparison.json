{"files":[{"patch":"@@ -170,0 +170,9 @@\n+    if (obj_or_subklass->bottom_type() == Type::TOP) {\n+      \/\/ The bottom type of obj_or_subklass is TOP, despite its recorded type\n+      \/\/ being an OOP or a klass pointer. This can happen for example in\n+      \/\/ transient scenarios where obj_or_subklass is a projection of the TOP\n+      \/\/ node. In such cases, skip verification to avoid violating the contract\n+      \/\/ of LoadKlassNode::make(). This does not weaken the effect of verify(),\n+      \/\/ as SubTypeCheck nodes with TOP obj_or_subklass inputs are dead anyway.\n+      return true;\n+    }\n","filename":"src\/hotspot\/share\/opto\/subtypenode.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}