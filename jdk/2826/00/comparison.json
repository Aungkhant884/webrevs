{"files":[{"patch":"@@ -173,1 +173,1 @@\n-        writeBuffer[1] = (byte)(v >>> 0);\n+        writeBuffer[1] = (byte) v;\n@@ -189,1 +189,1 @@\n-        writeBuffer[1] = (byte)(v >>> 0);\n+        writeBuffer[1] = (byte) v;\n@@ -207,1 +207,1 @@\n-        writeBuffer[3] = (byte)(v >>>  0);\n+        writeBuffer[3] = (byte) v;\n@@ -229,1 +229,1 @@\n-        writeBuffer[7] = (byte)(v >>>  0);\n+        writeBuffer[7] = (byte) v;\n@@ -304,1 +304,1 @@\n-            writeBuffer[1] = (byte)(v >>> 0);\n+            writeBuffer[1] = (byte) v;\n@@ -382,2 +382,2 @@\n-        bytearr[count++] = (byte) ((utflen >>> 8) & 0xFF);\n-        bytearr[count++] = (byte) ((utflen >>> 0) & 0xFF);\n+        bytearr[count++] = (byte) (utflen >>> 8);\n+        bytearr[count++] = (byte) utflen;\n@@ -399,1 +399,1 @@\n-                bytearr[count++] = (byte) (0x80 | ((c >>  0) & 0x3F));\n+                bytearr[count++] = (byte) (0x80 | (c & 0x3F));\n@@ -402,1 +402,1 @@\n-                bytearr[count++] = (byte) (0x80 | ((c >>  0) & 0x3F));\n+                bytearr[count++] = (byte) (0x80 | (c & 0x3F));\n","filename":"src\/java.base\/share\/classes\/java\/io\/DataOutputStream.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-        buffer[in++] = (byte)(b & 0xFF);\n+        buffer[in++] = (byte) b;\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-            buf[(int)(--indexCoder)] = (byte) (value & 0xFF);\n+            buf[(int)(--indexCoder)] = (byte) value;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -306,4 +306,4 @@\n-        addr[0] = (byte) ((address >>> 24) & 0xFF);\n-        addr[1] = (byte) ((address >>> 16) & 0xFF);\n-        addr[2] = (byte) ((address >>> 8) & 0xFF);\n-        addr[3] = (byte) (address & 0xFF);\n+        addr[0] = (byte) (address >>> 24);\n+        addr[1] = (byte) (address >>> 16);\n+        addr[2] = (byte) (address >>> 8);\n+        addr[3] = (byte) address;\n","filename":"src\/java.base\/share\/classes\/java\/net\/Inet4Address.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -107,3 +107,3 @@\n-        for( int i=0; i<src.length; i++ ) {\n-            dest[j++] = (byte)(src[i] >>> 8);\n-            dest[j++] = (byte)(src[i] & 0x00ff);\n+        for (char c : src) {\n+            dest[j++] = (byte) (c >>> 8);\n+            dest[j++] = (byte) c;\n","filename":"src\/java.base\/share\/classes\/java\/text\/RuleBasedCollationKey.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -911,1 +911,1 @@\n-            buf[0] = (byte)(b & 0xff);\n+            buf[0] = (byte) b;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Base64.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-            bb.put((byte) (x & 0xff));\n+            bb.put((byte) x);\n","filename":"src\/java.base\/share\/classes\/java\/util\/BitSet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,1 +186,1 @@\n-        buf[0] = (byte)(b & 0xff);\n+        buf[0] = (byte) b;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/DeflaterOutputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -222,2 +222,2 @@\n-        buf[offset] = (byte)(s & 0xff);\n-        buf[offset + 1] = (byte)((s >> 8) & 0xff);\n+        buf[offset] = (byte) s;\n+        buf[offset + 1] = (byte) (s >> 8);\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/GZIPOutputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,3 +57,3 @@\n-        emitByte((byte) ((val >> 16) & 0xFF));\n-        emitByte((byte) ((val >> 8) & 0xFF));\n-        emitByte((byte) (val & 0xFF));\n+        emitByte((byte) (val >> 16));\n+        emitByte((byte) (val >> 8));\n+        emitByte((byte) val);\n@@ -63,2 +63,2 @@\n-        emitByte((byte) ((val >> 8) & 0xFF));\n-        emitByte((byte) (val & 0xFF));\n+        emitByte((byte) (val >> 8));\n+        emitByte((byte) val);\n@@ -69,2 +69,2 @@\n-        vec.put(bci,     (byte) ((val >> 8) & 0xFF));\n-        vec.put(bci + 1, (byte) (val & 0xFF));\n+        vec.put(bci,     (byte) (val >> 8));\n+        vec.put(bci + 1, (byte) val);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/ClassFileAssembler.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-                res[0] = (byte) ((tmpValue >> 24) & 0xff);\n+                res[0] = (byte) ((tmpValue >> 24));\n@@ -120,1 +120,1 @@\n-                res[1] = (byte) ((tmpValue >> 16) & 0xff);\n+                res[1] = (byte) ((tmpValue >> 16));\n@@ -122,1 +122,1 @@\n-                res[2] = (byte) ((tmpValue >>  8) & 0xff);\n+                res[2] = (byte) ((tmpValue >>  8));\n@@ -124,1 +124,1 @@\n-                res[3] = (byte) ((tmpValue >>  0) & 0xff);\n+                res[3] = (byte) tmpValue;\n@@ -195,2 +195,2 @@\n-                dst[j++] = (byte) ((val >> 8) & 0xff);\n-                dst[j++] = (byte) (val & 0xff);\n+                dst[j++] = (byte) (val >> 8);\n+                dst[j++] = (byte) val;\n@@ -227,2 +227,2 @@\n-            dst[j++] = (byte) ((val >> 8) & 0xff);\n-            dst[j++] = (byte) (val & 0xff);\n+            dst[j++] = (byte) (val >> 8);\n+            dst[j++] = (byte) val;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/util\/IPAddressUtil.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -246,2 +246,2 @@\n-        byte b1 = (byte) ((port >> 8) & 0xff);\n-        byte b2 = (byte) ((port >> 0) & 0xff);\n+        byte b1 = (byte) (port >> 8);\n+        byte b2 = (byte) (port >> 0);\n@@ -319,4 +319,4 @@\n-        UNSAFE.putByte(address + 0, (byte) ((ipAddress >>> 24) & 0xFF));\n-        UNSAFE.putByte(address + 1, (byte) ((ipAddress >>> 16) & 0xFF));\n-        UNSAFE.putByte(address + 2, (byte) ((ipAddress >>> 8) & 0xFF));\n-        UNSAFE.putByte(address + 3, (byte) (ipAddress & 0xFF));\n+        UNSAFE.putByte(address + 0, (byte) (ipAddress >>> 24));\n+        UNSAFE.putByte(address + 1, (byte) (ipAddress >>> 16));\n+        UNSAFE.putByte(address + 2, (byte) (ipAddress >>> 8));\n+        UNSAFE.putByte(address + 3, (byte) ipAddress);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/NativeSocketAddress.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -347,4 +347,4 @@\n-        addr[0] = (byte) ((address >>> 24) & 0xFF);\n-        addr[1] = (byte) ((address >>> 16) & 0xFF);\n-        addr[2] = (byte) ((address >>> 8) & 0xFF);\n-        addr[3] = (byte) (address & 0xFF);\n+        addr[0] = (byte) (address >>> 24);\n+        addr[1] = (byte) (address >>> 16);\n+        addr[2] = (byte) (address >>> 8);\n+        addr[3] = (byte) address;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Net.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-            dst.put((byte)(c & 0xff));\n+            dst.put((byte)(c));\n@@ -63,1 +63,1 @@\n-            dst.put((byte)(c & 0xff));\n+            dst.put((byte)(c));\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/cs\/UnicodeEncoder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}