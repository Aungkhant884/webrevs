{"files":[{"patch":"@@ -1,2 +0,0 @@\n-# disabled till JDK-8252000 is fixed\n-allowSmartActionArgs=false\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/TEST.properties","additions":0,"deletions":2,"binary":false,"changes":2,"status":"deleted"},{"patch":"@@ -48,3 +48,2 @@\n- * @build nsk.jdb.caught_exception.caught_exception002.caught_exception002\n- *        nsk.jdb.caught_exception.caught_exception002.caught_exception002a\n- * @run main\/othervm PropertyResolvingWrapper\n+ * @build nsk.jdb.caught_exception.caught_exception002.caught_exception002a\n+ * @run main\/othervm\n@@ -64,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +67,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,5 +83,5 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.caught_exception.caught_exception002\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".caught_exception002\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.caught_exception.caught_exception002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".caught_exception002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -95,4 +95,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -101,1 +97,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -104,1 +100,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + PACKAGE_NAME + \".MyException\" + i);\n+            jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + PACKAGE_NAME + \".MyException\" + i);\n@@ -115,1 +111,1 @@\n-    private void checkCatch (String[] reply, int i) {\n+    private void checkCatch(String[] reply, int i) {\n@@ -118,2 +114,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/caught_exception\/caught_exception002\/caught_exception002.java","additions":19,"deletions":24,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n- * @build nsk.jdb.classes.classes001.classes001\n- *        nsk.jdb.classes.classes001.classes001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.classes.classes001.classes001\n+ * @build nsk.jdb.classes.classes001.classes001a\n+ * @run main\/othervm\n+ *      nsk.jdb.classes.classes001.classes001\n@@ -54,2 +54,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -57,2 +58,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -62,1 +62,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -66,2 +66,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -73,6 +73,5 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.classes.classes001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".classes001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String NOT_VALID_SAMPLE   = \"is not a valid\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.classes.classes001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".classes001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -81,20 +80,20 @@\n-        DEBUGGEE_CLASS,\n-        DEBUGGEE_CLASS + \"$Inner1\",\n-        DEBUGGEE_CLASS + \"$Inner2\",\n-        DEBUGGEE_CLASS + \"$Inner3\",\n-        DEBUGGEE_CLASS + \"$Inner4\",\n-        DEBUGGEE_CLASS + \"$Inner5\",\n-        DEBUGGEE_CLASS + \"$Inner6\",\n-        DEBUGGEE_CLASS + \"$Inner7\",\n-        DEBUGGEE_CLASS + \"$Inner8\",\n-        DEBUGGEE_CLASS + \"$InnerInt1\",\n-        DEBUGGEE_CLASS + \"$InnerInt2\",\n-        DEBUGGEE_CLASS + \"$InnerInt3\",\n-        DEBUGGEE_CLASS + \"$InnerInt4\",\n-        DEBUGGEE_CLASS + \"$InnerInt5\",\n-        PACKAGE_NAME + \".Outer1\",\n-        PACKAGE_NAME + \".Outer2\",\n-        PACKAGE_NAME + \".Outer3\",\n-        PACKAGE_NAME + \".OuterInt1\",\n-        PACKAGE_NAME + \".OuterInt2\"\n-                                      };\n+            DEBUGGEE_CLASS,\n+            DEBUGGEE_CLASS + \"$Inner1\",\n+            DEBUGGEE_CLASS + \"$Inner2\",\n+            DEBUGGEE_CLASS + \"$Inner3\",\n+            DEBUGGEE_CLASS + \"$Inner4\",\n+            DEBUGGEE_CLASS + \"$Inner5\",\n+            DEBUGGEE_CLASS + \"$Inner6\",\n+            DEBUGGEE_CLASS + \"$Inner7\",\n+            DEBUGGEE_CLASS + \"$Inner8\",\n+            DEBUGGEE_CLASS + \"$InnerInt1\",\n+            DEBUGGEE_CLASS + \"$InnerInt2\",\n+            DEBUGGEE_CLASS + \"$InnerInt3\",\n+            DEBUGGEE_CLASS + \"$InnerInt4\",\n+            DEBUGGEE_CLASS + \"$InnerInt5\",\n+            PACKAGE_NAME + \".Outer1\",\n+            PACKAGE_NAME + \".Outer2\",\n+            PACKAGE_NAME + \".Outer3\",\n+            PACKAGE_NAME + \".OuterInt1\",\n+            PACKAGE_NAME + \".OuterInt2\"\n+    };\n@@ -106,4 +105,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -112,1 +107,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -116,2 +111,2 @@\n-        for (int i = 0; i < checkedClasses.length; i++) {\n-            if (!checkClass(checkedClasses[i], reply)) {\n+        for (String checkedClass : checkedClasses) {\n+            if (!checkClass(checkedClass, reply)) {\n@@ -125,1 +120,1 @@\n-    private boolean checkClass (String className, String[] reply) {\n+    private boolean checkClass(String className, String[] reply) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classes\/classes001\/classes001.java","additions":39,"deletions":44,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -38,3 +38,3 @@\n- * @build nsk.jdb.classpath.classpath001.classpath001\n- *        nsk.jdb.classpath.classpath001.classpath001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.classpath.classpath001.classpath001\n+ * @build nsk.jdb.classpath.classpath001.classpath001a\n+ * @run main\/othervm\n+ *      nsk.jdb.classpath.classpath001.classpath001\n@@ -53,2 +53,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -56,2 +57,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -61,1 +61,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -65,2 +65,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -75,2 +75,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -81,2 +81,0 @@\n-        int count;\n-        Vector v;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classpath\/classpath001\/classpath001.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -40,3 +40,3 @@\n- * @build nsk.jdb.clear.clear002.clear002\n- *        nsk.jdb.clear.clear002.clear002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.clear.clear002.clear002\n+ * @build nsk.jdb.clear.clear002.clear002a\n+ * @run main\/othervm\n+ *      nsk.jdb.clear.clear002.clear002\n@@ -55,2 +55,4 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -58,2 +60,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -63,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -67,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -74,6 +76,6 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.clear.clear002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".clear002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String METHOD_TO_STOP   = DEBUGGEE_CLASS + \".func5\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.clear.clear002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".clear002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String METHOD_TO_STOP = DEBUGGEE_CLASS + \".func5\";\n@@ -82,1 +84,1 @@\n-    static final String REMOVED_SAMPLE   = \"Removed:\";\n+    static final String REMOVED_SAMPLE = \"Removed:\";\n@@ -85,1 +87,0 @@\n-        String[] reply;\n@@ -88,2 +89,0 @@\n-        Vector v;\n-        String found;\n@@ -100,1 +99,1 @@\n-        if (!checkClear (METHOD1_TO_CLEAR)) {\n+        if (!checkClear(METHOD1_TO_CLEAR)) {\n@@ -104,1 +103,1 @@\n-        if (!checkClear (METHOD2_TO_CLEAR)) {\n+        if (!checkClear(METHOD2_TO_CLEAR)) {\n@@ -118,1 +117,1 @@\n-        if (!checkBreakpoint (METHOD1_TO_CLEAR, grep)) {\n+        if (!checkBreakpoint(METHOD1_TO_CLEAR, grep)) {\n@@ -122,1 +121,1 @@\n-        if (!checkBreakpoint (METHOD2_TO_CLEAR, grep)) {\n+        if (!checkBreakpoint(METHOD2_TO_CLEAR, grep)) {\n@@ -127,1 +126,1 @@\n-    private boolean checkBreakpoint (String methodName, Paragrep grep) {\n+    private boolean checkBreakpoint(String methodName, Paragrep grep) {\n@@ -130,2 +129,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -133,1 +131,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -145,1 +143,1 @@\n-    private boolean checkClear (String methodName) {\n+    private boolean checkClear(String methodName) {\n@@ -150,2 +148,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -153,1 +150,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear002\/clear002.java","additions":29,"deletions":32,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -41,3 +41,3 @@\n- * @build nsk.jdb.clear.clear003.clear003\n- *        nsk.jdb.clear.clear003.clear003a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.clear.clear003.clear003\n+ * @build nsk.jdb.clear.clear003.clear003a\n+ * @run main\/othervm\n+ *      nsk.jdb.clear.clear003.clear003\n@@ -56,2 +56,4 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -59,2 +61,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -64,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -68,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,2 +79,2 @@\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -88,2 +89,0 @@\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear003\/clear003.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n- * @build nsk.jdb.clear.clear004.clear004\n- *        nsk.jdb.clear.clear004.clear004a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.clear.clear004.clear004\n+ * @build nsk.jdb.clear.clear004.clear004a\n+ * @run main\/othervm\n+ *      nsk.jdb.clear.clear004.clear004\n@@ -57,2 +57,4 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +62,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -65,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,10 +78,10 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.clear.clear004\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".clear004\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String[] BREAKPOINTS = new String[]\n-        { DEBUGGEE_CLASS + \":63\",\n-          DEBUGGEE_CLASS + \":67\",\n-          DEBUGGEE_CLASS + \":71\" };\n-    static final String REMOVED_SAMPLE   = \"Removed:\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.clear.clear004\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".clear004\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String[] BREAKPOINTS = new String[]{\n+            DEBUGGEE_CLASS + \":63\",\n+            DEBUGGEE_CLASS + \":67\",\n+            DEBUGGEE_CLASS + \":71\"};\n+    static final String REMOVED_SAMPLE = \"Removed:\";\n@@ -88,1 +90,0 @@\n-        String[] reply;\n@@ -91,2 +92,0 @@\n-        Vector v;\n-        String found;\n@@ -94,3 +93,3 @@\n-        for (int i = 0; i < BREAKPOINTS.length; i++) {\n-           log.display(\"Setting breakpoint at \" + BREAKPOINTS[i]);\n-           reply = jdb.receiveReplyFor(JdbCommand.stop_at + BREAKPOINTS[i]);\n+        for (String breakpoint : BREAKPOINTS) {\n+            log.display(\"Setting breakpoint at \" + breakpoint);\n+            jdb.receiveReplyFor(JdbCommand.stop_at + breakpoint);\n@@ -99,1 +98,1 @@\n-        if (!checkClear (BREAKPOINTS[1])) {\n+        if (!checkClear(BREAKPOINTS[1])) {\n@@ -113,1 +112,1 @@\n-        if (!checkBreakpoint (BREAKPOINTS[1], grep)) {\n+        if (!checkBreakpoint(BREAKPOINTS[1], grep)) {\n@@ -119,1 +118,1 @@\n-    private boolean checkBreakpoint (String breakpoint, Paragrep grep) {\n+    private boolean checkBreakpoint(String breakpoint, Paragrep grep) {\n@@ -122,2 +121,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -125,1 +123,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -137,1 +135,1 @@\n-    private boolean checkClear (String breakpoint) {\n+    private boolean checkClear(String breakpoint) {\n@@ -142,2 +140,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -145,1 +142,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear004\/clear004.java","additions":33,"deletions":36,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -45,3 +45,3 @@\n- * @build nsk.jdb.down.down002.down002\n- *        nsk.jdb.down.down002.down002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.down.down002.down002\n+ * @build nsk.jdb.down.down002.down002a\n+ * @run main\/othervm\n+ *      nsk.jdb.down.down002.down002\n@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -68,1 +69,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +73,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -79,15 +80,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.down.down002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".down002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-\n-    static final String[][] FRAMES = new String[][] {\n-        {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n-        {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n-        {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n-        {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n-        {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n-        {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n-        {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n-                                                };\n+    static final String PACKAGE_NAME = \"nsk.jdb.down.down002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".down002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n+            {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n+            {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n+            {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n+            {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n+            {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n+            {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n+    };\n@@ -99,2 +100,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -105,1 +105,1 @@\n-        for (int i = 0; i < (FRAMES.length-1); i++) {\n+        for (int i = 0; i < (FRAMES.length - 1); i++) {\n@@ -109,1 +109,1 @@\n-        for (int i = 0; i < (FRAMES.length-1); i++) {\n+        for (int i = 0; i < (FRAMES.length - 1); i++) {\n@@ -119,2 +119,2 @@\n-        for (int i = 1; i < (FRAMES.length-1); i++) {\n-            v = new Vector();\n+        for (int i = 1; i < (FRAMES.length - 1); i++) {\n+            v = new Vector<>();\n@@ -124,1 +124,1 @@\n-            if (count != (i+1)) {\n+            if (count != (i + 1)) {\n@@ -126,1 +126,1 @@\n-                    \"\\n\\texpected value : \" + (i+1) + \", got : \" + count);\n+                        \"\\n\\texpected value : \" + (i + 1) + \", got : \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/down\/down002\/down002.java","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n- * @build nsk.jdb.dump.dump002.dump002\n- *        nsk.jdb.dump.dump002.dump002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.dump.dump002.dump002\n+ * @build nsk.jdb.dump.dump002.dump002a\n+ * @run main\/othervm\n+ *      nsk.jdb.dump.dump002.dump002\n@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +73,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +77,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -92,26 +93,26 @@\n-        \"_dump002a\",\n-        \"iStatic\",\n-        \"iPrivate\",\n-        \"iProtect\",\n-        \"iPublic\",\n-        \"iFinal\",\n-        \"iTransient\",\n-        \"iVolatile\",\n-        \"iArray\",\n-        \"sStatic\",\n-        \"sPrivate\",\n-        \"sProtected\",\n-        \"sPublic\",\n-        \"sFinal\",\n-        \"sTransient\",\n-        \"sVolatile\",\n-        \"sArray\",\n-        \"fBoolean\",\n-        \"fByte\",\n-        \"fChar\",\n-        \"fDouble\",\n-        \"fFloat\",\n-        \"fInt\",\n-        \"fLong\",\n-        \"fShort\"\n-                                         };\n+            \"_dump002a\",\n+            \"iStatic\",\n+            \"iPrivate\",\n+            \"iProtect\",\n+            \"iPublic\",\n+            \"iFinal\",\n+            \"iTransient\",\n+            \"iVolatile\",\n+            \"iArray\",\n+            \"sStatic\",\n+            \"sPrivate\",\n+            \"sProtected\",\n+            \"sPublic\",\n+            \"sFinal\",\n+            \"sTransient\",\n+            \"sVolatile\",\n+            \"sArray\",\n+            \"fBoolean\",\n+            \"fByte\",\n+            \"fChar\",\n+            \"fDouble\",\n+            \"fFloat\",\n+            \"fInt\",\n+            \"fLong\",\n+            \"fShort\"\n+    };\n@@ -122,3 +123,1 @@\n-        int count;\n-        Vector v = new Vector();\n-        String found;\n+        Vector<String> v = new Vector<>();\n@@ -127,1 +126,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -131,1 +130,1 @@\n-        for (int i = 0; i < CHECKED_FIELDS.length; i++) {\n+        for (String field : CHECKED_FIELDS) {\n@@ -133,1 +132,1 @@\n-            v.add(CHECKED_FIELDS[i]);\n+            v.add(field);\n@@ -136,1 +135,1 @@\n-                failure(\"The field is not dumped : \" + CHECKED_FIELDS[i]);\n+                failure(\"The field is not dumped : \" + field);\n@@ -151,1 +150,1 @@\n-    void checkField (String[] reply, String fieldName) {\n+    void checkField(String[] reply, String fieldName) {\n@@ -153,1 +152,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/dump\/dump002\/dump002.java","additions":46,"deletions":47,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -55,1 +55,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.eval.eval001.eval001\n+ * @run main\/othervm\n+ *      nsk.jdb.eval.eval001.eval001\n@@ -68,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -71,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -76,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -80,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -90,2 +92,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,9 +96,9 @@\n-        { DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\" },\n-        { DEBUGGEE_CLASS + \"._eval001a.myInstanceField\", \"9223372036854775807\" },\n-        { DEBUGGEE_CLASS + \"._eval001a.myArrayField[0][0].toString()\", \"ABCDE\" },\n-        { DEBUGGEE_CLASS + \"._eval001a.myMethod()\", \"2147483647\" },\n-        { \"myClass.toString().equals(\\\"abcde\\\")\", \"true\"},\n-        { \"i + j + k\", \"777\"},\n-        { \"new java.lang.String(\\\"Hello, World\\\").length()\", \"12\"},\n-        { DEBUGGEE_CLASS + \"._eval001a.testPrimitiveArray(test)\", \"1.0\" }\n-                                          };\n+            {DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.myInstanceField\", \"9223372036854775807\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.myArrayField[0][0].toString()\", \"ABCDE\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.myMethod()\", \"2147483647\"},\n+            {\"myClass.toString().equals(\\\"abcde\\\")\", \"true\"},\n+            {\"i + j + k\", \"777\"},\n+            {\"new java.lang.String(\\\"Hello, World\\\").length()\", \"12\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.testPrimitiveArray(test)\", \"1.0\"}\n+    };\n@@ -105,6 +107,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -112,1 +108,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -115,1 +111,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -117,2 +113,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            if (!checkValue(checkedExpr[i][0], checkedExpr[i][1])) {\n+        for (String[] strings : checkedExpr) {\n+            if (!checkValue(strings[0], strings[1])) {\n@@ -126,1 +122,1 @@\n-    private boolean checkValue (String expr, String value) {\n+    private boolean checkValue(String expr, String value) {\n@@ -130,1 +126,0 @@\n-        Vector v;\n@@ -138,1 +133,1 @@\n-            log.complain(\"expected : \" + value + \" ;\\nreported: \" + (reply.length > 0? reply[0]: \"\"));\n+            log.complain(\"expected : \" + value + \" ;\\nreported: \" + (reply.length > 0 ? reply[0] : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/eval\/eval001\/eval001.java","additions":27,"deletions":32,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -61,3 +61,3 @@\n- * @build nsk.jdb.exclude.exclude001.exclude001\n- *        nsk.jdb.exclude.exclude001.exclude001a\n- * @run main\/othervm\/timeout=600 PropertyResolvingWrapper nsk.jdb.exclude.exclude001.exclude001\n+ * @build nsk.jdb.exclude.exclude001.exclude001a\n+ * @run main\/othervm\/timeout=600\n+ *      nsk.jdb.exclude.exclude001.exclude001\n@@ -76,2 +76,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -79,2 +80,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -84,1 +84,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -88,2 +88,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -95,6 +95,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.exclude.exclude001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".exclude001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.exclude.exclude001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".exclude001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -104,1 +104,1 @@\n-    static final String SUN_METHOD   = \"sun.util.calendar.Gregorian\";\n+    static final String SUN_METHOD = \"sun.util.calendar.Gregorian\";\n@@ -110,2 +110,0 @@\n-        Vector v;\n-        String found;\n@@ -144,1 +142,1 @@\n-                        reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n+                        jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n@@ -147,3 +145,2 @@\n-                        case 0: \/\/ block all\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,sun.*,com.sun.*,jdk.*\");\n-\n+                            case 0: \/\/ block all\n+                                jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,sun.*,com.sun.*,jdk.*\");\n@@ -151,2 +148,2 @@\n-                        case 1: \/\/ allow java.*\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + \"javax.*,sun.*,com.sun.*,jdk.*\");\n+                            case 1: \/\/ allow java.*\n+                                jdb.receiveReplyFor(JdbCommand.exclude + \"javax.*,sun.*,com.sun.*,jdk.*\");\n@@ -154,2 +151,2 @@\n-                        case 2: \/\/ allow sun.*\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,com.sun.*,jdk.*\");\n+                            case 2: \/\/ allow sun.*\n+                                jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,com.sun.*,jdk.*\");\n@@ -159,1 +156,1 @@\n-                        reply = jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[0]);\n+                        jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[0]);\n@@ -187,2 +184,2 @@\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + oldExclude);\n-                                reply = jdb.receiveReplyFor(JdbCommand.untrace + \"methods \"+ threads[0]);\n+                                jdb.receiveReplyFor(JdbCommand.exclude + oldExclude);\n+                                jdb.receiveReplyFor(JdbCommand.untrace + \"methods \" + threads[0]);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/exclude\/exclude001\/exclude001.java","additions":27,"deletions":30,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n- * @build nsk.jdb.fields.fields001.fields001\n- *        nsk.jdb.fields.fields001.fields001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.fields.fields001.fields001\n+ * @build nsk.jdb.fields.fields001.fields001a\n+ * @run main\/othervm\n+ *      nsk.jdb.fields.fields001.fields001\n@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -66,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,8 +78,7 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.fields.fields001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".fields001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS1    = DEBUGGEE_CLASS + \"$Inner\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$Extender\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String NOT_VALID_SAMPLE   = \"is not a valid\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.fields.fields001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".fields001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS1 = DEBUGGEE_CLASS + \"$Inner\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$Extender\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -87,11 +87,11 @@\n-        \"i_st\",    \"o_st\",\n-        \"i_pv\",    \"o_pv\",\n-        \"i_pt\",    \"o_pt\",\n-        \"i_pb\",    \"o_pb\",\n-        \"i_fn\",    \"o_fn\",\n-        \"i_tr\",    \"o_tr\",\n-        \"i_vl\",    \"o_vl\",\n-        \"i_a\",     \"o_a\",\n-        \"i_aa\",    \"o_aa\",\n-        \"i_aaa\",   \"o_aaa\"\n-                                      };\n+            \"i_st\", \"o_st\",\n+            \"i_pv\", \"o_pv\",\n+            \"i_pt\", \"o_pt\",\n+            \"i_pb\", \"o_pb\",\n+            \"i_fn\", \"o_fn\",\n+            \"i_tr\", \"o_tr\",\n+            \"i_vl\", \"o_vl\",\n+            \"i_a\", \"o_a\",\n+            \"i_aa\", \"o_aa\",\n+            \"i_aaa\", \"o_aaa\"\n+    };\n@@ -100,10 +100,10 @@\n-        \"ii_pv\",    \"oi_pv\",\n-        \"ii_pt\",    \"oi_pt\",\n-        \"ii_pb\",    \"oi_pb\",\n-        \"ii_fn\",    \"oi_fn\",\n-        \"ii_tr\",    \"oi_tr\",\n-        \"ii_vl\",    \"oi_vl\",\n-        \"ii_a\",     \"oi_a\",\n-        \"ii_aa\",    \"oi_aa\",\n-        \"ii_aaa\",   \"oi_aaa\"\n-                                      };\n+            \"ii_pv\", \"oi_pv\",\n+            \"ii_pt\", \"oi_pt\",\n+            \"ii_pb\", \"oi_pb\",\n+            \"ii_fn\", \"oi_fn\",\n+            \"ii_tr\", \"oi_tr\",\n+            \"ii_vl\", \"oi_vl\",\n+            \"ii_a\", \"oi_a\",\n+            \"ii_aa\", \"oi_aa\",\n+            \"ii_aaa\", \"oi_aaa\"\n+    };\n@@ -113,4 +113,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -119,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -139,1 +135,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -141,1 +137,0 @@\n-        String found;\n@@ -146,2 +141,2 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            count = grep.find(checkedFields[i]);\n+        for (String checkedField : checkedFields) {\n+            count = grep.find(checkedField);\n@@ -149,1 +144,1 @@\n-                log.complain(\"Failed to report field \" + checkedFields[i] + \" for class \" + className);\n+                log.complain(\"Failed to report field \" + checkedField + \" for class \" + className);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/fields\/fields001\/fields001.java","additions":44,"deletions":49,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -32,2 +32,1 @@\n- * @build nsk.jdb.hidden_class.hc001.hc001\n- *        nsk.jdb.hidden_class.hc001.hc001a\n+ * @build nsk.jdb.hidden_class.hc001.hc001a\n@@ -35,1 +34,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.hidden_class.hc001.hc001\n+ * @run main\/othervm\n+ *      nsk.jdb.hidden_class.hc001.hc001\n@@ -48,4 +48,5 @@\n-import java.io.*;\n-import java.util.*;\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n+\n+import java.io.PrintStream;\n@@ -54,3 +55,3 @@\n-    static final String DEBUGGEE_CLASS    = hc001a.class.getTypeName();\n-    static final String HC_NAME_FIELD     = DEBUGGEE_CLASS + \".hcName\";\n-    static final String MAIN_METHOD_NAME  = DEBUGGEE_CLASS + \".main\";\n+    static final String DEBUGGEE_CLASS = hc001a.class.getTypeName();\n+    static final String HC_NAME_FIELD = DEBUGGEE_CLASS + \".hcName\";\n+    static final String MAIN_METHOD_NAME = DEBUGGEE_CLASS + \".main\";\n@@ -58,3 +59,2 @@\n-    static final String HC_METHOD_NAME    = \"hcMethod\";\n-    static final String HC_FIELD_NAME     = \"hcField\";\n-    static final int    MAX_SLEEP_CNT     = 3;\n+    static final String HC_METHOD_NAME = \"hcMethod\";\n+    static final String HC_FIELD_NAME = \"hcField\";\n@@ -62,1 +62,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String[] argv) {\n@@ -66,1 +66,1 @@\n-    public static int run(String argv[], PrintStream out) {\n+    public static int run(String[] argv, PrintStream out) {\n@@ -73,3 +73,2 @@\n-        for (int idx = 0; idx < arr.length; idx++) {\n-            String str = arr[idx];\n-            if (str.indexOf(pattern) != -1) {\n+        for (String str : arr) {\n+            if (str.contains(pattern)) {\n@@ -93,1 +92,1 @@\n-        String[] reply = null;\n+        String[] reply;\n@@ -321,1 +320,0 @@\n-        String className = null;\n@@ -323,3 +321,3 @@\n-            \"xx.yyy\/0x111\/0x222\",\n-            \"xx.\/0x111.0x222\",\n-            \"xx.yyy.zzz\/\"\n+                \"xx.yyy\/0x111\/0x222\",\n+                \"xx.\/0x111.0x222\",\n+                \"xx.yyy.zzz\/\"\n@@ -331,2 +329,1 @@\n-        for (int idx = 0; idx < invClassNames.length; idx++) {\n-            className = invClassNames[idx];\n+        for (String className : invClassNames) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/hidden_class\/hc001\/hc001.java","additions":22,"deletions":25,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n- * @build nsk.jdb.ignore.ignore001.ignore001\n- *        nsk.jdb.ignore.ignore001.ignore001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.ignore.ignore001.ignore001\n+ * @build nsk.jdb.ignore.ignore001.ignore001a\n+ * @run main\/othervm\n+ *      nsk.jdb.ignore.ignore001.ignore001\n@@ -57,2 +57,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +61,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -65,1 +66,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +70,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,7 +77,7 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.ignore.ignore001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".ignore001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String EXCEPTION_SAMPLE   = \"Exception occurred:\";\n-    static final String REMOVED_SAMPLE     = \"Removed:\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.ignore.ignore001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".ignore001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String EXCEPTION_SAMPLE = \"Exception occurred:\";\n+    static final String REMOVED_SAMPLE = \"Removed:\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -88,2 +89,0 @@\n-        Vector v;\n-        String found;\n@@ -94,1 +93,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION);\n+        jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION);\n@@ -97,1 +96,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1);\n+        jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1);\n@@ -100,1 +99,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2);\n+        jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2);\n@@ -102,3 +101,3 @@\n-        for (;;) {\n-            if (!checkCatch(nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION)) {\n-               success = false;\n+        while (true) {\n+            if (!checkCatch(ignore001a.JAVA_EXCEPTION)) {\n+                success = false;\n@@ -106,2 +105,2 @@\n-            if (!checkCatch(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1)) {\n-               success = false;\n+            if (!checkCatch(ignore001a.USER_EXCEPTION1)) {\n+                success = false;\n@@ -109,2 +108,2 @@\n-            if (!checkCatch(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2)) {\n-               success = false;\n+            if (!checkCatch(ignore001a.USER_EXCEPTION2)) {\n+                success = false;\n@@ -113,2 +112,2 @@\n-            if (!checkIgnore(nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION)) {\n-               success = false;\n+            if (!checkIgnore(ignore001a.JAVA_EXCEPTION)) {\n+                success = false;\n@@ -116,2 +115,2 @@\n-            if (!checkIgnore(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1)) {\n-               success = false;\n+            if (!checkIgnore(ignore001a.USER_EXCEPTION1)) {\n+                success = false;\n@@ -119,2 +118,2 @@\n-            if (!checkIgnore(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2)) {\n-               success = false;\n+            if (!checkIgnore(ignore001a.USER_EXCEPTION2)) {\n+                success = false;\n@@ -137,1 +136,1 @@\n-    private boolean checkCatch (String exceptionName) {\n+    private boolean checkCatch(String exceptionName) {\n@@ -140,2 +139,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -148,1 +146,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -161,1 +159,1 @@\n-    private boolean checkIgnore (String exceptionName) {\n+    private boolean checkIgnore(String exceptionName) {\n@@ -164,2 +162,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -172,1 +169,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/ignore\/ignore001\/ignore001.java","additions":40,"deletions":43,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n- * @build nsk.jdb.interrupt.interrupt001.interrupt001\n- *        nsk.jdb.interrupt.interrupt001.interrupt001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.interrupt.interrupt001.interrupt001\n+ * @build nsk.jdb.interrupt.interrupt001.interrupt001a\n+ * @run main\/othervm\n+ *      nsk.jdb.interrupt.interrupt001.interrupt001\n@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,5 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n@@ -75,1 +79,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +83,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,6 +89,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.interrupt.interrupt001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".interrupt001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.interrupt.interrupt001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".interrupt001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -111,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -123,2 +127,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.interrupt + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.interrupt + thread);\n@@ -127,2 +131,2 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.threads);\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true);\n+        jdb.receiveReplyFor(JdbCommand.threads);\n+        jdb.receiveReplyFor(JdbCommand.cont, true);\n@@ -132,1 +136,1 @@\n-        found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n+        found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n@@ -134,4 +138,4 @@\n-            if (found.indexOf(DEBUGGEE_RESULT + \" = 0\") < 0) {\n-               log.complain(\"Not all \" + MYTHREAD + \"s were interrupted.\");\n-               log.complain(found);\n-               success = false;\n+            if (!found.contains(DEBUGGEE_RESULT + \" = 0\")) {\n+                log.complain(\"Not all \" + MYTHREAD + \"s were interrupted.\");\n+                log.complain(found);\n+                success = false;\n@@ -147,1 +151,0 @@\n-        String[] reply;\n@@ -154,12 +157,12 @@\n-            String[] thrdsRply = (String[])jdb.receiveReplyFor(JdbCommand.threads);\n-            waitingTids = Arrays.asList(thrdsRply).stream()\n-                .filter((r)-> r.endsWith(\"waiting\"))\n-                .map((r)->{\n-                    Matcher m = tidPattern.matcher(r);\n-                    if (m.find()) {\n-                        return m.group(1);\n-                    }\n-                    return null;\n-                })\n-                .filter((r)-> r != null)\n-                .collect(Collectors.toSet());\n+            String[] thrdsRply = jdb.receiveReplyFor(JdbCommand.threads);\n+            waitingTids = Arrays.stream(thrdsRply)\n+                    .filter((r) -> r.endsWith(\"waiting\"))\n+                    .map((r) -> {\n+                        Matcher m = tidPattern.matcher(r);\n+                        if (m.find()) {\n+                            return m.group(1);\n+                        }\n+                        return null;\n+                    })\n+                    .filter(Objects::nonNull)\n+                    .collect(Collectors.toSet());\n@@ -171,1 +174,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.set + DEBUGGEE_CLASS + \".allWorkersAreWaiting=true\");\n+                jdb.receiveReplyFor(JdbCommand.set + DEBUGGEE_CLASS + \".allWorkersAreWaiting=true\");\n@@ -174,1 +177,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.cont);\n+                jdb.receiveReplyFor(JdbCommand.cont);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/interrupt\/interrupt001\/interrupt001.java","additions":44,"deletions":41,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n- * @build nsk.jdb.kill.kill001.kill001\n- *        nsk.jdb.kill.kill001.kill001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.kill.kill001.kill001\n+ * @build nsk.jdb.kill.kill001.kill001a\n+ * @run main\/othervm\n+ *      nsk.jdb.kill.kill001.kill001\n@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +73,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +77,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -82,6 +83,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.kill.kill001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".kill001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.kill.kill001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".kill001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -97,2 +98,0 @@\n-        int count;\n-        Vector v;\n@@ -115,2 +114,2 @@\n-                                                       DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n-                                                       \"killed\");\n+                            DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n+                    \"killed\");\n@@ -131,1 +130,1 @@\n-                                                   DEBUGGEE_RESULT + \" =\");\n+                DEBUGGEE_RESULT + \" =\");\n@@ -133,1 +132,1 @@\n-        found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n+        found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n@@ -135,3 +134,3 @@\n-            if (found.indexOf(DEBUGGEE_RESULT + \" = 0\") < 0) {\n-               log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n-               success = false;\n+            if (!found.contains(DEBUGGEE_RESULT + \" = 0\")) {\n+                log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n+                success = false;\n@@ -144,1 +143,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.threads);\n+        jdb.receiveReplyFor(JdbCommand.threads);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill001\/kill001.java","additions":25,"deletions":26,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -45,3 +45,3 @@\n- * @build nsk.jdb.kill.kill002.kill002\n- *        nsk.jdb.kill.kill002.kill002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.kill.kill002.kill002\n+ * @build nsk.jdb.kill.kill002.kill002a\n+ * @run main\/othervm\n+ *      nsk.jdb.kill.kill002.kill002\n@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -68,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,6 +78,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.kill.kill002\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".kill002\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.kill.kill002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".kill002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -93,2 +93,0 @@\n-        int count;\n-        Vector v;\n@@ -99,1 +97,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -110,3 +108,3 @@\n-            reply = jdb.receiveReplyForWithMessageWait(JdbCommand.kill + threads[i] + \" \" +\n-                                                       DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n-                                                       \"killed\");\n+            jdb.receiveReplyForWithMessageWait(JdbCommand.kill + threads[i] + \" \" +\n+                            DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n+                    \"killed\");\n@@ -114,1 +112,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.threads);\n+        jdb.receiveReplyFor(JdbCommand.threads);\n@@ -125,1 +123,1 @@\n-                                            DEBUGGEE_RESULT + \" =\");\n+                DEBUGGEE_RESULT + \" =\");\n@@ -127,1 +125,1 @@\n-        found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n+        found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n@@ -129,3 +127,3 @@\n-            if (found.indexOf(DEBUGGEE_RESULT + \" = 0\") < 0) {\n-               log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n-               success = false;\n+            if (!found.contains(DEBUGGEE_RESULT + \" = 0\")) {\n+                log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n+                success = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill002\/kill002.java","additions":26,"deletions":28,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n- * @build nsk.jdb.klass.class001.class001\n- *        nsk.jdb.klass.class001.class001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.klass.class001.class001\n+ * @build nsk.jdb.klass.class001.class001a\n+ * @run main\/othervm\n+ *      nsk.jdb.klass.class001.class001\n@@ -57,2 +57,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +61,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -65,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,6 +76,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.klass.class001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".class001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String NOT_VALID_SAMPLE   = \"is not a valid\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.klass.class001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".class001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String NOT_VALID_SAMPLE = \"is not a valid\";\n@@ -84,9 +84,9 @@\n-        DEBUGGEE_CLASS,\n-        DEBUGGEE_CLASS + \"$InnerInt1\",\n-        DEBUGGEE_CLASS + \"$Inner2\",\n-        DEBUGGEE_CLASS + \"$Inner3\",\n-        DEBUGGEE_CLASS + \"$Inner4\",\n-        DEBUGGEE_CLASS + \"$Inner5\",\n-        DEBUGGEE_CLASS + \"$Inner6\",\n-        PACKAGE_NAME + \".Outer1\"\n-                                      };\n+            DEBUGGEE_CLASS,\n+            DEBUGGEE_CLASS + \"$InnerInt1\",\n+            DEBUGGEE_CLASS + \"$Inner2\",\n+            DEBUGGEE_CLASS + \"$Inner3\",\n+            DEBUGGEE_CLASS + \"$Inner4\",\n+            DEBUGGEE_CLASS + \"$Inner5\",\n+            DEBUGGEE_CLASS + \"$Inner6\",\n+            PACKAGE_NAME + \".Outer1\"\n+    };\n@@ -97,6 +97,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -104,1 +98,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -106,2 +100,2 @@\n-        for (int i = 0; i < checkedClasses.length; i++) {\n-            if (!checkClass(checkedClasses[i])) {\n+        for (String checkedClass : checkedClasses) {\n+            if (!checkClass(checkedClass)) {\n@@ -115,1 +109,1 @@\n-    private boolean checkClass (String className) {\n+    private boolean checkClass(String className) {\n@@ -118,1 +112,0 @@\n-        int count;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/klass\/class001\/class001.java","additions":29,"deletions":36,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -45,2 +45,1 @@\n- * @build nsk.jdb.list.list002.list002\n- *        nsk.jdb.list.list002.list002a\n+ * @build nsk.jdb.list.list002.list002a\n@@ -48,1 +47,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.list.list002.list002\n+ * @run main\/othervm\n+ *      nsk.jdb.list.list002.list002\n@@ -56,1 +56,1 @@\n- *      \"-jdb.option=-sourcepath src\/\"\n+ *      -jdb.option=\"-sourcepath src\/\"\n@@ -62,2 +62,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -65,2 +66,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -70,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -74,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -81,14 +81,14 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.list.list002\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".list002\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".runIt\";\n-    static final int    LINE_NUMBER     = 38;\n-\n-    final static String METHOD_SOURCE[] = new String[] {\n-        \"public int runIt(String args[], PrintStream out) {\",\n-        \"JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\",\n-        \"Log log = new Log(out, argumentHandler);\",\n-        \"log.display(\\\"Debuggee PASSED\\\");\",\n-        \"return list002.PASSED;\"\n-                                                    };\n+    static final String PACKAGE_NAME = \"nsk.jdb.list.list002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".list002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".runIt\";\n+    static final int LINE_NUMBER = 38;\n+\n+    final static String[] METHOD_SOURCE = new String[]{\n+            \"public int runIt(String args[], PrintStream out) {\",\n+            \"JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\",\n+            \"Log log = new Log(out, argumentHandler);\",\n+            \"log.display(\\\"Debuggee PASSED\\\");\",\n+            \"return list002.PASSED;\"\n+    };\n@@ -97,1 +97,1 @@\n-        \"System.exit(list002.JCK_STATUS_BASE + _list002a.runIt(args, System.out));\";\n+            \"System.exit(list002.JCK_STATUS_BASE + _list002a.runIt(args, System.out));\";\n@@ -104,3 +104,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -109,1 +106,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -116,4 +113,3 @@\n-            for (int i = 0; i < METHOD_SOURCE.length; i++) {\n-                if (grep.find(METHOD_SOURCE[i]) == 0) {\n-                    failure(\"Line is not found in method sources:\\n\\t\"+\n-                        METHOD_SOURCE[i]);\n+            for (String s : METHOD_SOURCE) {\n+                if (grep.find(s) == 0) {\n+                    failure(\"Line is not found in method sources:\\n\\t\" + s);\n@@ -130,2 +126,1 @@\n-                failure(\"Line \" + LINE_NUMBER + \" is not found:\\n\\t\"+\n-                    LINE_SOURCE);\n+                failure(\"Line \" + LINE_NUMBER + \" is not found:\\n\\t\" + LINE_SOURCE);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/list\/list002\/list002.java","additions":31,"deletions":36,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -55,1 +55,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.locals.locals002.locals002\n+ * @run main\/othervm\n+ *      nsk.jdb.locals.locals002.locals002\n@@ -68,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -71,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -76,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -80,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,2 +93,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,16 +96,16 @@\n-    static final int    BREAKPOINT_LINE1 = 84;\n-    static final int    BREAKPOINT_LINE2 = 100;\n-\n-    static final String LOCALS[][] = new String[][] {\n-       { \"boolVar\"  , \"true\"         , \"false\"         },\n-       { \"byteVar\"  , \"27\"           , \"12\"            },\n-       { \"charVar\"  , \"V\"            , \"A\"             },\n-       { \"shortVar\" , \"767\"          , \"327\"           },\n-       { \"intVar\"   , \"1474\"         , \"3647\"          },\n-       { \"longVar\"  , \"21345\"        , \"65789\"         },\n-       { \"floatVar\" , \"3.141\"        , \"4.852\"         },\n-       { \"doubleVar\", \"2.578\"        , \"3.8976\"        },\n-       { \"objVar\"   , \"objVarString\" , \"objArgString\"  },\n-       { \"arrVar\"   , \"int[5]\"       , \"int[3]\"        }\n-\n-                                                    };\n+    static final int BREAKPOINT_LINE1 = 84;\n+    static final int BREAKPOINT_LINE2 = 100;\n+\n+    static final String[][] LOCALS = new String[][]{\n+            {\"boolVar\", \"true\", \"false\"},\n+            {\"byteVar\", \"27\", \"12\"},\n+            {\"charVar\", \"V\", \"A\"},\n+            {\"shortVar\", \"767\", \"327\"},\n+            {\"intVar\", \"1474\", \"3647\"},\n+            {\"longVar\", \"21345\", \"65789\"},\n+            {\"floatVar\", \"3.141\", \"4.852\"},\n+            {\"doubleVar\", \"2.578\", \"3.8976\"},\n+            {\"objVar\", \"objVarString\", \"objArgString\"},\n+            {\"arrVar\", \"int[5]\", \"int[3]\"}\n+\n+    };\n@@ -114,3 +116,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -124,4 +124,4 @@\n-        for (int i = 0; i < LOCALS.length; i++) {\n-            v = new Vector();\n-            v.add(LOCALS[i][0]);\n-            v.add(LOCALS[i][2]);\n+        for (String[] local : LOCALS) {\n+            v = new Vector<>();\n+            v.add(local[0]);\n+            v.add(local[2]);\n@@ -129,2 +129,1 @@\n-                failure(\"Cannot find \" + LOCALS[0][0] +\n-                    \" with expected value: \" + LOCALS[i][2]);\n+                failure(\"Cannot find \" + LOCALS[0][0] + \" with expected value: \" + local[2]);\n@@ -137,4 +136,4 @@\n-        for (int i = 0; i < LOCALS.length; i++) {\n-            v = new Vector();\n-            v.add(LOCALS[i][0]);\n-            v.add(LOCALS[i][1]);\n+        for (String[] local : LOCALS) {\n+            v = new Vector<>();\n+            v.add(local[0]);\n+            v.add(local[1]);\n@@ -142,2 +141,1 @@\n-                failure(\"Cannot find \" + LOCALS[0][0] +\n-                    \" with expected value: \" + LOCALS[i][1]);\n+                failure(\"Cannot find \" + LOCALS[0][0] + \" with expected value: \" + local[1]);\n@@ -149,10 +147,0 @@\n-\n-    private boolean checkStop () {\n-        Paragrep grep;\n-        String[] reply;\n-        String found;\n-        Vector v;\n-        boolean result = true;\n-\n-        return result;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/locals\/locals002\/locals002.java","additions":39,"deletions":51,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -52,3 +52,3 @@\n- * @build nsk.jdb.methods.methods002.methods002\n- *        nsk.jdb.methods.methods002.methods002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.methods.methods002.methods002\n+ * @build nsk.jdb.methods.methods002.methods002a\n+ * @run main\/othervm\n+ *      nsk.jdb.methods.methods002.methods002\n@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,3 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.StringTokenizer;\n+import java.util.Vector;\n@@ -75,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -89,2 +91,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,4 +96,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -100,1 +98,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -106,1 +104,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass1, testedClass1 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass1, testedClass1);\n@@ -109,1 +107,1 @@\n-            checkMethod( reply, \"f\" + intToString(i), 1, testedClass1, testedClass1 );\n+            checkMethod(reply, \"f\" + intToString(i), 1, testedClass1, testedClass1);\n@@ -116,1 +114,1 @@\n-        checkMethod( reply1, \"<init>\", 4, testedClass2, testedClass2 );\n+        checkMethod(reply1, \"<init>\", 4, testedClass2, testedClass2);\n@@ -122,1 +120,1 @@\n-        checkMethod( reply1, \"m01\", 3, testedClass3, testedClass3 );\n+        checkMethod(reply1, \"m01\", 3, testedClass3, testedClass3);\n@@ -127,1 +125,1 @@\n-        checkMethod( reply, \"m01\", 1, testedClass4, testedClass4 );\n+        checkMethod(reply, \"m01\", 1, testedClass4, testedClass4);\n@@ -132,1 +130,1 @@\n-        checkMethod( reply, \"i01\", 1, testedClass5, testedClass5 );\n+        checkMethod(reply, \"i01\", 1, testedClass5, testedClass5);\n@@ -137,3 +135,3 @@\n-        checkMethod( reply, \"m01\", 1, testedClass4, testedClass6 );\n-        checkMethod( reply, \"i01\", 1, testedClass5, testedClass6 );\n-        checkMethod( reply, \"m01\", 1, testedClass6, testedClass6 );\n+        checkMethod(reply, \"m01\", 1, testedClass4, testedClass6);\n+        checkMethod(reply, \"i01\", 1, testedClass5, testedClass6);\n+        checkMethod(reply, \"m01\", 1, testedClass6, testedClass6);\n@@ -145,1 +143,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass1, testedClass7 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass1, testedClass7);\n@@ -148,1 +146,1 @@\n-            checkMethod( reply, \"f\" + intToString(i), 1, testedClass1, testedClass7 );\n+            checkMethod(reply, \"f\" + intToString(i), 1, testedClass1, testedClass7);\n@@ -155,1 +153,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass8, testedClass8 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass8, testedClass8);\n@@ -158,1 +156,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass1, testedClass8 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass1, testedClass8);\n@@ -161,1 +159,1 @@\n-            checkMethod( reply, \"f\" + intToString(i), 1, testedClass1, testedClass8 );\n+            checkMethod(reply, \"f\" + intToString(i), 1, testedClass1, testedClass8);\n@@ -167,7 +165,7 @@\n-    private void checkMethod (\n-        String[] reply,       \/* reply on 'methods' command *\/\n-        String methodName,    \/* method name *\/\n-        int expOccur,         \/* expected number of occurences of the method *\/\n-        String ownerClass,    \/* name of class defining method *\/\n-        String testedClass    \/* name of tested class *\/\n-                             ) {\n+    private void checkMethod(\n+            String[] reply,       \/* reply on 'methods' command *\/\n+            String methodName,    \/* method name *\/\n+            int expOccur,         \/* expected number of occurences of the method *\/\n+            String ownerClass,    \/* name of class defining method *\/\n+            String testedClass    \/* name of tested class *\/\n+    ) {\n@@ -176,1 +174,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -183,3 +181,3 @@\n-                \"\\n\\t of class \" + ownerClass +\n-                \"\\n\\t in class \" + testedClass +\n-                \"\\n\\t expected number: \" + expOccur + \" got: \" + j);\n+                    \"\\n\\t of class \" + ownerClass +\n+                    \"\\n\\t in class \" + testedClass +\n+                    \"\\n\\t expected number: \" + expOccur + \" got: \" + j);\n@@ -189,4 +187,4 @@\n-    private String[] toStringArray (String[] arr) {\n-        Vector v = new Vector();\n-        for (int i = 0; i < arr.length; i++) {\n-            StringTokenizer st = new StringTokenizer(arr[i], \"\\r\\n\");\n+    private String[] toStringArray(String[] arr) {\n+        Vector<String> v = new Vector<>();\n+        for (String s : arr) {\n+            StringTokenizer st = new StringTokenizer(s, \"\\r\\n\");\n@@ -200,1 +198,1 @@\n-            results[i] = (String)objects[i];\n+            results[i] = (String) objects[i];\n@@ -205,1 +203,1 @@\n-    private String intToString (int i) {\n+    private String intToString(int i) {\n@@ -207,1 +205,1 @@\n-        if (s.length()==1)\n+        if (s.length() == 1) {\n@@ -209,0 +207,1 @@\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/methods\/methods002\/methods002.java","additions":48,"deletions":49,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.monitor.monitor001.monitor001\n- *        nsk.jdb.monitor.monitor001.monitor001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.monitor.monitor001.monitor001\n+ * @build nsk.jdb.monitor.monitor001.monitor001a\n+ * @run main\/othervm\n+ *      nsk.jdb.monitor.monitor001.monitor001\n@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -71,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,3 +86,3 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    LINE_NUMBER        = 47;\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int LINE_NUMBER = 47;\n@@ -90,5 +91,5 @@\n-        JdbCommand.threads,\n-        JdbCommand.methods + DEBUGGEE_CLASS,\n-        JdbCommand.fields  + DEBUGGEE_CLASS,\n-        JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n-                                             };\n+            JdbCommand.threads,\n+            JdbCommand.methods + DEBUGGEE_CLASS,\n+            JdbCommand.fields + DEBUGGEE_CLASS,\n+            JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n+    };\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -103,1 +100,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n@@ -105,2 +102,2 @@\n-        for (int i = 0; i < CHECKED_COMMANDS.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[i]);\n+        for (String checkedCommand : CHECKED_COMMANDS) {\n+            jdb.receiveReplyFor(JdbCommand.monitor + checkedCommand);\n@@ -110,1 +107,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n+        jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n@@ -127,2 +124,0 @@\n-        String found;\n-        Vector v;\n@@ -133,3 +128,3 @@\n-        for (int i = 0; i < CHECKED_COMMANDS.length; i++) {\n-            if ((count = grep.find(CHECKED_COMMANDS[i])) != 1) {\n-                log.complain(\"Wrong number of monitor command: \" + CHECKED_COMMANDS[i]);\n+        for (String checkedCommand : CHECKED_COMMANDS) {\n+            if ((count = grep.find(checkedCommand)) != 1) {\n+                log.complain(\"Wrong number of monitor command: \" + checkedCommand);\n@@ -146,2 +141,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor001\/monitor001.java","additions":27,"deletions":33,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -44,3 +44,3 @@\n- * @build nsk.jdb.monitor.monitor002.monitor002\n- *        nsk.jdb.monitor.monitor002.monitor002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.monitor.monitor002.monitor002\n+ * @build nsk.jdb.monitor.monitor002.monitor002a\n+ * @run main\/othervm\n+ *      nsk.jdb.monitor.monitor002.monitor002\n@@ -59,2 +59,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -62,2 +63,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -67,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -71,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -81,3 +81,3 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    LINE_NUMBER        = 47;\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int LINE_NUMBER = 47;\n@@ -86,2 +86,2 @@\n-        JdbCommand.unmonitor + \"1\"\n-                                             };\n+            JdbCommand.unmonitor + \"1\"\n+    };\n@@ -91,4 +91,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -96,1 +92,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n@@ -98,2 +94,2 @@\n-        for (int i = 0; i < CHECKED_COMMANDS.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[i]);\n+        for (String checkedCommand : CHECKED_COMMANDS) {\n+            jdb.receiveReplyFor(JdbCommand.monitor + checkedCommand);\n@@ -103,1 +99,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n+        jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor002\/monitor002.java","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.next.next001.next001\n- *        nsk.jdb.next.next001.next001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.next.next001.next001\n+ * @build nsk.jdb.next.next001.next001a\n+ * @run main\/othervm\n+ *      nsk.jdb.next.next001.next001\n@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -71,1 +71,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +75,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -82,6 +82,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.next.next001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".next001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.next.next001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".next001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -94,5 +94,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-        String[] threads;\n@@ -102,1 +97,0 @@\n-        int breakCount = 0;\n@@ -107,2 +101,1 @@\n-                breakCount++;\n-                reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n+                jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n@@ -110,1 +103,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.next);\n+                jdb.receiveReplyFor(JdbCommand.next);\n@@ -129,1 +122,1 @@\n-    private boolean checkNext () {\n+    private boolean checkNext() {\n@@ -131,1 +124,0 @@\n-        String found;\n@@ -142,1 +134,1 @@\n-            result= false;\n+            result = false;\n@@ -148,1 +140,1 @@\n-            result= false;\n+            result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/next\/next001\/next001.java","additions":21,"deletions":29,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.options.connect.connect001.connect001\n- *        nsk.jdb.options.connect.connect001.connect001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.options.connect.connect001.connect001\n+ * @build nsk.jdb.options.connect.connect001.connect001a\n+ * @run main\/othervm\n+ *      nsk.jdb.options.connect.connect001.connect001\n@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect001\/connect001.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.options.connect.connect002.connect002\n- *        nsk.jdb.options.connect.connect002.connect002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.options.connect.connect002.connect002\n+ * @build nsk.jdb.options.connect.connect002.connect002a\n+ * @run main\/othervm\n+ *      nsk.jdb.options.connect.connect002.connect002\n@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect002\/connect002.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.options.connect.connect003.connect003\n- *        nsk.jdb.options.connect.connect003.connect003a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.options.connect.connect003.connect003\n+ * @build nsk.jdb.options.connect.connect003.connect003a\n+ * @run main\/othervm\n+ *      nsk.jdb.options.connect.connect003.connect003\n@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect003\/connect003.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.options.connect.connect004.connect004\n- *        nsk.jdb.options.connect.connect004.connect004a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.options.connect.connect004.connect004\n+ * @build nsk.jdb.options.connect.connect004.connect004a\n+ * @run main\/othervm\n+ *      nsk.jdb.options.connect.connect004.connect004\n@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect004\/connect004.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.options.connect.connect005.connect005\n- *        nsk.jdb.options.connect.connect005.connect005a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.options.connect.connect005.connect005\n+ * @build nsk.jdb.options.connect.connect005.connect005a\n+ * @run main\/othervm\n+ *      nsk.jdb.options.connect.connect005.connect005\n@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect005\/connect005.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -54,2 +54,1 @@\n- * @build nsk.jdb.options.listconnectors.listconnectors001.listconnectors001\n- * @run main\/othervm PropertyResolvingWrapper\n+ * @run main\/othervm\n@@ -70,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbTest;\n@@ -73,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -78,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -82,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -89,2 +89,0 @@\n-    static final String PACKAGE_NAME = \"nsk.jdb.options.connect\";\n-    static final String TEST_CLASS = PACKAGE_NAME + \".connect001\";\n@@ -92,2 +90,2 @@\n-    static final String FIRST_BREAK    = null;\n-    static final String LAST_BREAK     = null;\n+    static final String FIRST_BREAK = null;\n+    static final String LAST_BREAK = null;\n@@ -95,1 +93,0 @@\n-    static final String TESTED_OPTION = \"-listconnectors\";\n@@ -97,8 +94,8 @@\n-        \"com.sun.jdi.CommandLineLaunch\", \"dt_socket\",\n-        \"com.sun.jdi.CommandLineLaunch\", \"dt_shmem\",\n-        \"com.sun.jdi.RawCommandLineLaunch\", \"dt_socket\",\n-        \"com.sun.jdi.RawCommandLineLaunch\", \"dt_shmem\",\n-        \"com.sun.jdi.SocketAttach\", \"dt_socket\",\n-        \"com.sun.jdi.SocketListen\", \"dt_socket\",\n-        \"com.sun.jdi.SharedMemoryAttach\", \"dt_shmem\",\n-        \"com.sun.jdi.SharedMemoryListen\", \"dt_shmem\",\n+            \"com.sun.jdi.CommandLineLaunch\", \"dt_socket\",\n+            \"com.sun.jdi.CommandLineLaunch\", \"dt_shmem\",\n+            \"com.sun.jdi.RawCommandLineLaunch\", \"dt_socket\",\n+            \"com.sun.jdi.RawCommandLineLaunch\", \"dt_shmem\",\n+            \"com.sun.jdi.SocketAttach\", \"dt_socket\",\n+            \"com.sun.jdi.SocketListen\", \"dt_socket\",\n+            \"com.sun.jdi.SharedMemoryAttach\", \"dt_shmem\",\n+            \"com.sun.jdi.SharedMemoryListen\", \"dt_shmem\",\n@@ -130,2 +127,2 @@\n-            String connector = TESTED_CONNECTORS_LIST[i*2 + 0];\n-            String transport = TESTED_CONNECTORS_LIST[i*2 + 1];\n+            String connector = TESTED_CONNECTORS_LIST[i * 2];\n+            String transport = TESTED_CONNECTORS_LIST[i * 2 + 1];\n@@ -134,1 +131,1 @@\n-            Vector<String> v = new Vector<String>();\n+            Vector<String> v = new Vector<>();\n@@ -154,1 +151,1 @@\n-                            || argumentHandler.shouldPass(connector, transport)) {\n+                    || argumentHandler.shouldPass(connector, transport)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/listconnectors\/listconnectors001\/listconnectors001.java","additions":23,"deletions":26,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n- * @build nsk.jdb.pop.pop001.pop001\n- *        nsk.jdb.pop.pop001.pop001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.pop.pop001.pop001\n+ * @build nsk.jdb.pop.pop001.pop001a\n+ * @run main\/othervm\n+ *      nsk.jdb.pop.pop001.pop001\n@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +73,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +77,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,3 +86,3 @@\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -89,1 +90,1 @@\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -91,1 +92,0 @@\n-    static final String[] CHECKED_METHODS = {\"func1\", \"func2\", \"func3\", \"func4\", \"func5\"};\n@@ -96,3 +96,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -101,1 +98,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -112,1 +109,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n+            jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n@@ -114,1 +111,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n+            jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n@@ -118,1 +115,1 @@\n-                 success = false;\n+                success = false;\n@@ -120,1 +117,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n+            jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n@@ -127,1 +124,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.pop);\n+            jdb.receiveReplyFor(JdbCommand.pop);\n@@ -138,2 +135,2 @@\n-                for (int i = 0; i < reply.length; i++) {\n-                    log.complain(reply[i]);\n+                for (String s : reply) {\n+                    log.complain(s);\n@@ -150,1 +147,1 @@\n-    private boolean checkStack (String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean pop ) {\n+    private boolean checkStack(String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean pop) {\n@@ -152,2 +149,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -161,1 +157,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( pop? \"after 'pop' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (pop ? \"after 'pop' command\" : \"\"));\n@@ -168,1 +164,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( pop? \"after 'pop' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (pop ? \"after 'pop' command\" : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop\/pop001\/pop001.java","additions":27,"deletions":31,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -36,3 +36,2 @@\n- * @build nsk.jdb.pop_exception.pop_exception001.pop_exception001\n- *        nsk.jdb.pop_exception.pop_exception001.pop_exception001a\n- * @run main\/othervm PropertyResolvingWrapper\n+ * @build nsk.jdb.pop_exception.pop_exception001.pop_exception001a\n+ * @run main\/othervm\n@@ -52,2 +51,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -55,2 +55,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -60,5 +59,5 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.pop_exception.pop_exception001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".pop_exception001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.pop_exception.pop_exception001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".pop_exception001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -66,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,1 +77,0 @@\n-\n@@ -83,1 +81,1 @@\n-        \/\/exception\n+        \/\/ exception\n@@ -97,5 +95,5 @@\n-        String replyString = \"\";\n-        for(String s: jdbReply) {\n-            replyString += s;\n-            if(s.contains(\"line=\")){\n-                if(!s.contains(\"line=\" + pop_exception001a.expectedFinish)) {\n+        StringBuilder replyString = new StringBuilder();\n+        for (String s : jdbReply) {\n+            replyString.append(s);\n+            if (s.contains(\"line=\")) {\n+                if (!s.contains(\"line=\" + pop_exception001a.expectedFinish)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop_exception\/pop_exception001\/pop_exception001.java","additions":20,"deletions":22,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -55,1 +55,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.print.print002.print002\n+ * @run main\/othervm\n+ *      nsk.jdb.print.print002.print002\n@@ -68,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -71,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -76,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -80,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -90,2 +92,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,4 +96,4 @@\n-        { \"i + j\", \"8\"},\n-        { \"j - i\", \"4\"},\n-        { \"j * i\", \"12\"},\n-        { \"j \/ i\", \"3\"},\n+            {\"i + j\", \"8\"},\n+            {\"j - i\", \"4\"},\n+            {\"j * i\", \"12\"},\n+            {\"j \/ i\", \"3\"},\n@@ -106,2 +108,2 @@\n-        { \"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.s\", \"foo\" }\n-                                          };\n+            {\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.s\", \"foo\"}\n+    };\n@@ -110,6 +112,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -117,1 +113,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -120,1 +116,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -122,2 +118,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            if (!checkValue(checkedExpr[i][0], checkedExpr[i][1])) {\n+        for (String[] strings : checkedExpr) {\n+            if (!checkValue(strings[0], strings[1])) {\n@@ -131,1 +127,1 @@\n-    private boolean checkValue (String expr, String value) {\n+    private boolean checkValue(String expr, String value) {\n@@ -135,1 +131,0 @@\n-        Vector v;\n@@ -143,1 +138,1 @@\n-            log.complain(\"\\t expected : \" + value + \" ;\\n\\t reported: \" + (reply.length > 0? reply[0]: \"\"));\n+            log.complain(\"\\t expected : \" + value + \" ;\\n\\t reported: \" + (reply.length > 0 ? reply[0] : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/print\/print002\/print002.java","additions":24,"deletions":29,"binary":false,"changes":53,"status":"modified"},{"patch":"@@ -55,1 +55,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.read.read001.read001\n+ * @run main\/othervm\n+ *      nsk.jdb.read.read001.read001\n@@ -68,2 +69,0 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n@@ -71,0 +70,3 @@\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +74,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -77,1 +79,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +83,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,2 +93,2 @@\n-    static final String FIRST_BREAK    = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK     = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -103,1 +105,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -106,1 +108,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -121,2 +123,0 @@\n-        String found;\n-        Vector v = new Vector();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/read\/read001\/read001.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -48,2 +48,1 @@\n- * @build nsk.jdb.redefine.redefine001.redefine001\n- *        nsk.jdb.redefine.redefine001.redefine001a\n+ * @build nsk.jdb.redefine.redefine001.redefine001a\n@@ -52,2 +51,2 @@\n- * @build ExecDriver\n- * @run driver PropertyResolvingWrapper ExecDriver --cmd\n+ * @run driver\n+ *      ExecDriver --cmd\n@@ -60,1 +59,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.redefine.redefine001.redefine001\n+ * @run main\/othervm\n+ *      nsk.jdb.redefine.redefine001.redefine001\n@@ -73,2 +73,1 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n@@ -76,0 +75,2 @@\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -77,2 +78,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -82,1 +83,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -86,2 +87,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -96,2 +97,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -99,1 +100,1 @@\n-    static final String REDEFINED_CLASS    = PACKAGE_NAME + \".RedefinedClass\";\n+    static final String REDEFINED_CLASS = PACKAGE_NAME + \".RedefinedClass\";\n@@ -101,1 +102,1 @@\n-    static final String FIRST_REDEFINITION  = \"AFTER_REDEFINITION\";\n+    static final String FIRST_REDEFINITION = \"AFTER_REDEFINITION\";\n@@ -107,3 +108,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -112,1 +110,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -114,1 +112,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n+        jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n@@ -119,1 +117,1 @@\n-            log.complain(\"Wrong value of redefine001a.flag before redefinition: \" + (reply.length > 0? reply[0]: \"\"));\n+            log.complain(\"Wrong value of redefine001a.flag before redefinition: \" + (reply.length > 0 ? reply[0] : \"\"));\n@@ -126,1 +124,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile1);\n+            jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile1);\n@@ -128,1 +126,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -133,1 +131,1 @@\n-                log.complain(\"Wrong value of redefine001a.flag after first redefinition: \" + (reply.length > 0? reply[0]: \"\"));\n+                log.complain(\"Wrong value of redefine001a.flag after first redefinition: \" + (reply.length > 0 ? reply[0] : \"\"));\n@@ -143,1 +141,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile2);\n+            jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile2);\n@@ -145,1 +143,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -150,1 +148,1 @@\n-                log.complain(\"Wrong value of redefine001a.flag after second redefinition: \" + (reply.length > 0? reply[0]: \"\"));\n+                log.complain(\"Wrong value of redefine001a.flag after second redefinition: \" + (reply.length > 0 ? reply[0] : \"\"));\n@@ -160,10 +158,0 @@\n-\n-    private boolean checkStop () {\n-        Paragrep grep;\n-        String[] reply;\n-        String found;\n-        Vector v;\n-        boolean result = true;\n-\n-        return result;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/redefine\/redefine001\/redefine001.java","additions":26,"deletions":38,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.reenter.reenter001.reenter001\n- *        nsk.jdb.reenter.reenter001.reenter001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.reenter.reenter001.reenter001\n+ * @build nsk.jdb.reenter.reenter001.reenter001a\n+ * @run main\/othervm\n+ *      nsk.jdb.reenter.reenter001.reenter001\n@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -71,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -84,3 +85,3 @@\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -88,1 +89,1 @@\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -90,1 +91,0 @@\n-    static final String[] CHECKED_METHODS = {\"func1\", \"func2\", \"func3\", \"func4\", \"func5\"};\n@@ -95,3 +95,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -100,1 +97,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -111,1 +108,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n+            jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n@@ -113,1 +110,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n+            jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n@@ -120,1 +117,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n+            jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n@@ -127,1 +124,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.reenter);\n+            jdb.receiveReplyFor(JdbCommand.reenter);\n@@ -138,2 +135,2 @@\n-                for (int i = 0; i < reply.length; i++) {\n-                    log.complain(reply[i]);\n+                for (String s : reply) {\n+                    log.complain(s);\n@@ -150,1 +147,1 @@\n-    private boolean checkStack (String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean reenter ) {\n+    private boolean checkStack(String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean reenter) {\n@@ -152,2 +149,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -161,1 +157,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( reenter? \"after 'reenter' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (reenter ? \"after 'reenter' command\" : \"\"));\n@@ -168,1 +164,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( reenter? \"after 'reenter' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (reenter ? \"after 'reenter' command\" : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/reenter\/reenter001\/reenter001.java","additions":26,"deletions":30,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -97,2 +97,2 @@\n- * @build ExecDriver\n- * @run driver PropertyResolvingWrapper ExecDriver --cmd\n+ * @run driver\n+ *      ExecDriver --cmd\n@@ -104,1 +104,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.regression.b4689395.b4689395\n+ * @run main\/othervm\n+ *      nsk.jdb.regression.b4689395.b4689395\n@@ -117,2 +118,2 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.TestFailure;\n@@ -120,0 +121,2 @@\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -121,2 +124,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -125,6 +128,6 @@\n-        final static String TEST_CLASS     = b4689395.class.getName();\n-        final static String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n-        final static String FIRST_BREAK    = DEBUGGEE_CLASS + \".main\";\n-        final static String ERROR_MESSAGE  = \"ERROR_M\";\n-        final static int    LINE_NUMBER    = 54;\n-        private String classFile;\n+    final static String TEST_CLASS = b4689395.class.getName();\n+    final static String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    final static String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    final static String ERROR_MESSAGE = \"ERROR_M\";\n+    final static int LINE_NUMBER = 54;\n+    private String classFile;\n@@ -132,3 +135,3 @@\n-        public static void main (String argv[]) {\n-                System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-        }\n+    public static void main(String[] argv) {\n+        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n+    }\n@@ -136,5 +139,5 @@\n-        public static int run(String argv[], PrintStream out) {\n-                debuggeeClass =  DEBUGGEE_CLASS;\n-                firstBreak = FIRST_BREAK;\n-                return new b4689395().runTest(argv, out);\n-        }\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n+        firstBreak = FIRST_BREAK;\n+        return new b4689395().runTest(argv, out);\n+    }\n@@ -142,5 +145,5 @@\n-        public b4689395() {\n-                classFile = ClassLoadUtils.getRedefineClassFileName(DEBUGGEE_CLASS);\n-                if (classFile == null)\n-                        throw new TestFailure(\"Unable to find redefine class file in classpath for: \" + DEBUGGEE_CLASS);\n-        }\n+    public b4689395() {\n+        classFile = ClassLoadUtils.getRedefineClassFileName(DEBUGGEE_CLASS);\n+        if (classFile == null)\n+            throw new TestFailure(\"Unable to find redefine class file in classpath for: \" + DEBUGGEE_CLASS);\n+    }\n@@ -148,4 +151,4 @@\n-        protected void runCases() {\n-                String[] reply;\n-                reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n-                reply = jdb.receiveReplyFor(JdbCommand.cont);\n+    protected void runCases() {\n+        String[] reply;\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -153,4 +156,3 @@\n-                if (new File(classFile).exists()) {\n-                        reply = jdb.receiveReplyFor(JdbCommand.redefine + DEBUGGEE_CLASS\n-                                        + \" \" + classFile);\n-                        reply = jdb.receiveReplyFor(JdbCommand.next);\n+        if (new File(classFile).exists()) {\n+            jdb.receiveReplyFor(JdbCommand.redefine + DEBUGGEE_CLASS + \" \" + classFile);\n+            reply = jdb.receiveReplyFor(JdbCommand.next);\n@@ -158,12 +160,9 @@\n-                        Paragrep grep = new Paragrep(reply);\n-                        if (grep.find(ERROR_MESSAGE) != 0) {\n-                                log.complain(\"'\" + ERROR_MESSAGE + \"' is not expected to be \"\n-                                                + \"printed after 'next' command.\");\n-                                success = false;\n-                        }\n-                } else {\n-                        log.complain(\"File does not exist: \" + classFile);\n-                        success = false;\n-                }\n-\n-                jdb.contToExit(1);\n+            Paragrep grep = new Paragrep(reply);\n+            if (grep.find(ERROR_MESSAGE) != 0) {\n+                log.complain(\"'\" + ERROR_MESSAGE + \"' is not expected to be \"\n+                        + \"printed after 'next' command.\");\n+                success = false;\n+            }\n+        } else {\n+            log.complain(\"File does not exist: \" + classFile);\n+            success = false;\n@@ -171,0 +170,3 @@\n+\n+        jdb.contToExit(1);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/regression\/b4689395\/b4689395.java","additions":48,"deletions":46,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -52,3 +52,3 @@\n- * @build nsk.jdb.resume.resume002.resume002\n- *        nsk.jdb.resume.resume002.resume002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.resume.resume002.resume002\n+ * @build nsk.jdb.resume.resume002.resume002a\n+ * @run main\/othervm\n+ *      nsk.jdb.resume.resume002.resume002\n@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -75,1 +75,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +79,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -86,5 +86,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.resume.resume002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".resume002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.resume.resume002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".resume002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -92,1 +92,1 @@\n-    static final String THREAD_NAME      = \"MyThread\";\n+    static final String THREAD_NAME = \"MyThread\";\n@@ -97,3 +97,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/resume\/resume002\/resume002.java","additions":16,"deletions":19,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -46,3 +46,3 @@\n- * @build nsk.jdb.run.run002.run002\n- *        nsk.jdb.run.run002.run002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.run.run002.run002\n+ * @build nsk.jdb.run.run002.run002a\n+ * @run main\/othervm\n+ *      nsk.jdb.run.run002.run002\n@@ -61,2 +61,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -64,2 +65,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -69,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -73,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,2 +84,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -89,3 +90,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -98,1 +97,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/run\/run002\/run002.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.set.set001.set001\n+ * @run main\/othervm\n+ *      nsk.jdb.set.set001.set001\n@@ -69,2 +70,2 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +73,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -77,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,2 +91,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -97,3 +97,3 @@\n-        { DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\" },\n-        { DEBUGGEE_CLASS + \"._set001a.myInstanceField\", \"9223372036854775807\" },\n-                                          };\n+            {DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\"},\n+            {DEBUGGEE_CLASS + \"._set001a.myInstanceField\", \"9223372036854775807\"},\n+    };\n@@ -103,4 +103,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -109,1 +105,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -112,1 +108,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -115,2 +111,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.set + checkedExpr[i][0] + \" = \" + checkedExpr[i][1]);\n+        for (String[] strings : checkedExpr) {\n+            jdb.receiveReplyFor(JdbCommand.set + strings[0] + \" = \" + strings[1]);\n@@ -119,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -122,2 +118,2 @@\n-        \/\/if everything is OK reply will look like this\n-        \/\/  nsk.jdb.set.set001.set001a.errorMessage = \"\"\n+        \/\/ if everything is OK reply will look like this\n+        \/\/   nsk.jdb.set.set001.set001a.errorMessage = \"\"\n@@ -126,2 +122,2 @@\n-            for (int i = 0; i < reply.length; i++) {\n-                log.complain(reply[i]);\n+            for (String s : reply) {\n+                log.complain(s);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set001\/set001.java","additions":22,"deletions":26,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.set.set002.set002\n+ * @run main\/othervm\n+ *      nsk.jdb.set.set002.set002\n@@ -69,2 +70,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +74,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -77,1 +79,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +83,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -92,2 +94,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -98,3 +100,3 @@\n-        { DEBUGGEE_CLASS + \"._set002a.myArrayField[0][0].line\", \"\\\"ABCDE\\\"\" },\n-        { \"localInt\", \"java.lang.Integer.MIN_VALUE\"}\n-                                          };\n+            {DEBUGGEE_CLASS + \"._set002a.myArrayField[0][0].line\", \"\\\"ABCDE\\\"\"},\n+            {\"localInt\", \"java.lang.Integer.MIN_VALUE\"}\n+    };\n@@ -104,4 +106,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -110,1 +108,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -113,1 +111,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -116,2 +114,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.set + checkedExpr[i][0] + \" = \" + checkedExpr[i][1]);\n+        for (String[] strings : checkedExpr) {\n+            jdb.receiveReplyFor(JdbCommand.set + strings[0] + \" = \" + strings[1]);\n@@ -120,1 +118,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -124,2 +122,2 @@\n-        \/\/if everything is OK reply will look like this\n-        \/\/  nsk.jdb.set.set002.set002a.errorMessage = \"\"\n+        \/\/ if everything is OK reply will look like this\n+        \/\/   nsk.jdb.set.set002.set002a.errorMessage = \"\"\n@@ -128,2 +126,2 @@\n-            for (int i = 0; i < reply.length; i++) {\n-                log.complain(reply[i]);\n+            for (String s : reply) {\n+                log.complain(s);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set002\/set002.java","additions":24,"deletions":26,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -59,1 +59,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.step.step002.step002\n+ * @run main\/othervm\n+ *      nsk.jdb.step.step002.step002\n@@ -72,2 +73,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -75,2 +77,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -80,1 +81,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -84,2 +85,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,6 +92,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.step.step002\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".step002\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    BREAKPOINT_LINE = 50;\n+    static final String PACKAGE_NAME = \"nsk.jdb.step.step002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".step002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int BREAKPOINT_LINE = 50;\n@@ -101,4 +102,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n-        String[] threads;\n@@ -106,2 +103,2 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -110,1 +107,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -118,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -126,1 +123,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step\/step002\/step002.java","additions":20,"deletions":23,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -47,3 +47,3 @@\n- * @build nsk.jdb.step_up.step_up001.step_up001\n- *        nsk.jdb.step_up.step_up001.step_up001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.step_up.step_up001.step_up001\n+ * @build nsk.jdb.step_up.step_up001.step_up001a\n+ * @run main\/othervm\n+ *      nsk.jdb.step_up.step_up001.step_up001\n@@ -62,2 +62,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -65,2 +66,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -70,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -74,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -81,6 +81,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.step_up.step_up001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".step_up001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.step_up.step_up001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".step_up001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -93,5 +93,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-        String[] threads;\n@@ -101,1 +96,0 @@\n-        int breakCount = 0;\n@@ -106,2 +100,1 @@\n-                breakCount++;\n-                reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n+                jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n@@ -109,1 +102,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.step_up);\n+                jdb.receiveReplyFor(JdbCommand.step_up);\n@@ -128,1 +121,1 @@\n-    private boolean checkSteppedUp () {\n+    private boolean checkSteppedUp() {\n@@ -130,1 +123,0 @@\n-        String found;\n@@ -142,1 +134,1 @@\n-                result= false;\n+                result = false;\n@@ -149,1 +141,1 @@\n-            result= false;\n+            result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step_up\/step_up001\/step_up001.java","additions":21,"deletions":29,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n- * @build nsk.jdb.stop_at.stop_at002.stop_at002\n- *        nsk.jdb.stop_at.stop_at002.stop_at002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.stop_at.stop_at002.stop_at002\n+ * @build nsk.jdb.stop_at.stop_at002.stop_at002a\n+ * @run main\/othervm\n+ *      nsk.jdb.stop_at.stop_at002.stop_at002\n@@ -54,2 +54,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -57,2 +58,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -64,1 +64,0 @@\n- *\n@@ -69,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -73,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,2 +82,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -90,6 +89,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -107,1 +100,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002.java","additions":13,"deletions":20,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -51,3 +51,3 @@\n- * @build nsk.jdb.stop_at.stop_at003.stop_at003\n- *        nsk.jdb.stop_at.stop_at003.stop_at003a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.stop_at.stop_at003.stop_at003\n+ * @build nsk.jdb.stop_at.stop_at003.stop_at003a\n+ * @run main\/othervm\n+ *      nsk.jdb.stop_at.stop_at003.stop_at003\n@@ -66,2 +66,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -69,2 +70,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -76,1 +76,0 @@\n- *\n@@ -81,1 +80,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -85,2 +84,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -95,8 +94,8 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String[][] LOCATIONS = new String[][] {\n-        { PACKAGE_NAME + \".stop_at003b:61\", PACKAGE_NAME + \".stop_at003b.<clinit>()\" },\n-        { PACKAGE_NAME + \".stop_at003b:63\", PACKAGE_NAME + \".stop_at003b.<init>()\" },\n-        { PACKAGE_NAME + \".stop_at003b:66\", PACKAGE_NAME + \".stop_at003b.<init>()\" },\n-        { PACKAGE_NAME + \".stop_at003b:72\", PACKAGE_NAME + \".stop_at003b.foo()\" }\n-                                                   };\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String[][] LOCATIONS = new String[][]{\n+            {PACKAGE_NAME + \".stop_at003b:61\", PACKAGE_NAME + \".stop_at003b.<clinit>()\"},\n+            {PACKAGE_NAME + \".stop_at003b:63\", PACKAGE_NAME + \".stop_at003b.<init>()\"},\n+            {PACKAGE_NAME + \".stop_at003b:66\", PACKAGE_NAME + \".stop_at003b.<init>()\"},\n+            {PACKAGE_NAME + \".stop_at003b:72\", PACKAGE_NAME + \".stop_at003b.foo()\"}\n+    };\n@@ -107,4 +106,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -112,3 +107,3 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n-            if (!checkStop(LOCATIONS[i][0])) {\n-                failure(\"jdb failed to set line breakpoint at : \" + LOCATIONS[i][0]);\n+        for (String[] location : LOCATIONS) {\n+            if (!checkStop(location[0])) {\n+                failure(\"jdb failed to set line breakpoint at : \" + location[0]);\n@@ -118,1 +113,1 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n+        for (String[] location : LOCATIONS) {\n@@ -120,2 +115,2 @@\n-            if (!jdb.isAtBreakpoint(reply, LOCATIONS[i][1])) {\n-                failure(\"Missed breakpoint at : \" + LOCATIONS[i][0]);\n+            if (!jdb.isAtBreakpoint(reply, location[1])) {\n+                failure(\"Missed breakpoint at : \" + location[0]);\n@@ -128,1 +123,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at003\/stop_at003.java","additions":25,"deletions":30,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -52,3 +52,3 @@\n- * @build nsk.jdb.stop_in.stop_in002.stop_in002\n- *        nsk.jdb.stop_in.stop_in002.stop_in002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.stop_in.stop_in002.stop_in002\n+ * @build nsk.jdb.stop_in.stop_in002.stop_in002a\n+ * @run main\/othervm\n+ *      nsk.jdb.stop_in.stop_in002.stop_in002\n@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -82,1 +82,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -86,2 +86,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -96,9 +96,9 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String[] LOCATIONS = new String[] {\n-        PACKAGE_NAME + \".stop_in002b.<clinit>\",\n-        PACKAGE_NAME + \".stop_in002b.<init>\",\n-        PACKAGE_NAME + \".stop_in002b$StaticNested.m1\",\n-        PACKAGE_NAME + \".stop_in002b$Inner.m2\",\n-        PACKAGE_NAME + \".stop_in002b.foo\"\n-                                                   };\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String[] LOCATIONS = new String[]{\n+            PACKAGE_NAME + \".stop_in002b.<clinit>\",\n+            PACKAGE_NAME + \".stop_in002b.<init>\",\n+            PACKAGE_NAME + \".stop_in002b$StaticNested.m1\",\n+            PACKAGE_NAME + \".stop_in002b$Inner.m2\",\n+            PACKAGE_NAME + \".stop_in002b.foo\"\n+    };\n@@ -109,4 +109,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -114,3 +110,3 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n-            if (!checkStop(LOCATIONS[i])) {\n-                failure(\"jdb failed to set line breakpoint at : \" + LOCATIONS[i]);\n+        for (String location : LOCATIONS) {\n+            if (!checkStop(location)) {\n+                failure(\"jdb failed to set line breakpoint at : \" + location);\n@@ -120,1 +116,1 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n+        for (String location : LOCATIONS) {\n@@ -122,2 +118,2 @@\n-            if (!jdb.isAtBreakpoint(reply, LOCATIONS[i])) {\n-                failure(\"Missed breakpoint at : \" + LOCATIONS[i]);\n+            if (!jdb.isAtBreakpoint(reply, location)) {\n+                failure(\"Missed breakpoint at : \" + location);\n@@ -130,1 +126,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_in\/stop_in002\/stop_in002.java","additions":26,"deletions":30,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -48,3 +48,3 @@\n- * @build nsk.jdb.suspend.suspend001.suspend001\n- *        nsk.jdb.suspend.suspend001.suspend001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.suspend.suspend001.suspend001\n+ * @build nsk.jdb.suspend.suspend001.suspend001a\n+ * @run main\/othervm\n+ *      nsk.jdb.suspend.suspend001.suspend001\n@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -71,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,2 +86,2 @@\n-    static final String FIRST_BREAK    = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK     = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -88,1 +89,1 @@\n-    static final String SUSPENDED       = \"Suspended\";\n+    static final String SUSPENDED = \"Suspended\";\n@@ -95,2 +96,0 @@\n-        int count;\n-        Vector v;\n@@ -101,1 +100,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -111,1 +110,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.suspend + threads[0]);\n+            jdb.receiveReplyFor(JdbCommand.suspend + threads[0]);\n@@ -122,6 +121,6 @@\n-            found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n-            if (found.length() > 0 && found.indexOf(DEBUGGEE_RESULT + \" = null\") < 0) {\n-                if (found.indexOf(DEBUGGEE_RESULT + \" = 1\") < 0) {\n-                   log.complain(\"Wrong value of \" + DEBUGGEE_RESULT);\n-                   log.complain(found);\n-                   success = false;\n+            found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n+            if (found.length() > 0 && !found.contains(DEBUGGEE_RESULT + \" = null\")) {\n+                if (!found.contains(DEBUGGEE_RESULT + \" = 1\")) {\n+                    log.complain(\"Wrong value of \" + DEBUGGEE_RESULT);\n+                    log.complain(found);\n+                    success = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/suspend\/suspend001\/suspend001.java","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -45,3 +45,3 @@\n- * @build nsk.jdb.thread.thread002.thread002\n- *        nsk.jdb.thread.thread002.thread002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.thread.thread002.thread002\n+ * @build nsk.jdb.thread.thread002.thread002a\n+ * @run main\/othervm\n+ *      nsk.jdb.thread.thread002.thread002\n@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -68,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -79,5 +79,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.thread.thread002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".thread002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.thread.thread002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".thread002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -85,1 +85,1 @@\n-    static final String THREAD_NAME      = \"MyThread\";\n+    static final String THREAD_NAME = \"MyThread\";\n@@ -91,2 +91,0 @@\n-        Vector v;\n-        String found;\n@@ -111,1 +109,1 @@\n-                 failure(\"jdb failed to switch to thread: \" + threadIds[i]);\n+                failure(\"jdb failed to switch to thread: \" + threadIds[i]);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/thread\/thread002\/thread002.java","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n- * @build nsk.jdb.threadgroup.threadgroup002.threadgroup002\n- *        nsk.jdb.threadgroup.threadgroup002.threadgroup002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.threadgroup.threadgroup002.threadgroup002\n+ * @build nsk.jdb.threadgroup.threadgroup002.threadgroup002a\n+ * @run main\/othervm\n+ *      nsk.jdb.threadgroup.threadgroup002.threadgroup002\n@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -66,1 +66,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +70,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,5 +77,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.threadgroup.threadgroup002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".threadgroup002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.threadgroup.threadgroup002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".threadgroup002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -87,2 +87,0 @@\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroup\/threadgroup002\/threadgroup002.java","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n- * @build nsk.jdb.threadgroups.threadgroups002.threadgroups002\n- *        nsk.jdb.threadgroups.threadgroups002.threadgroups002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.threadgroups.threadgroups002.threadgroups002\n+ * @build nsk.jdb.threadgroups.threadgroups002.threadgroups002a\n+ * @run main\/othervm\n+ *      nsk.jdb.threadgroups.threadgroups002.threadgroups002\n@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -66,1 +66,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +70,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,5 +77,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.threadgroups.threadgroups002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".threadgroups002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.threadgroups.threadgroups002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".threadgroups002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -87,2 +87,0 @@\n-        Vector v;\n-        String found;\n@@ -96,1 +94,1 @@\n-        if (count != threadgroups002a.numThreadGroups ) {\n+        if (count != threadgroups002a.numThreadGroups) {\n@@ -98,1 +96,1 @@\n-                \"\\n\\texpected value: \" + threadgroups002a.numThreadGroups);\n+                    \"\\n\\texpected value: \" + threadgroups002a.numThreadGroups);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroups\/threadgroups002\/threadgroups002.java","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n- * @build nsk.jdb.threads.threads002.threads002\n- *        nsk.jdb.threads.threads002.threads002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.threads.threads002.threads002\n+ * @build nsk.jdb.threads.threads002.threads002a\n+ * @run main\/othervm\n+ *      nsk.jdb.threads.threads002.threads002\n@@ -57,2 +57,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +61,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -65,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,5 +76,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.threads.threads002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".threads002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.threads.threads002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".threads002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -82,1 +82,1 @@\n-    static final String THREAD_NAME      = PACKAGE_NAME + \".MyThread\";\n+    static final String THREAD_NAME = PACKAGE_NAME + \".MyThread\";\n@@ -88,2 +88,0 @@\n-        Vector v;\n-        String found;\n@@ -97,1 +95,1 @@\n-        if (count != threads002a.numThreads ) {\n+        if (count != threads002a.numThreads) {\n@@ -99,1 +97,1 @@\n-                \"\\n\\texpected value: \" + threads002a.numThreads);\n+                    \"\\n\\texpected value: \" + threads002a.numThreads);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads002\/threads002.java","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -49,3 +49,3 @@\n- * @build nsk.jdb.trace.trace001.trace001\n- *        nsk.jdb.trace.trace001.trace001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.trace.trace001.trace001\n+ * @build nsk.jdb.trace.trace001.trace001a\n+ * @run main\/othervm\n+ *      nsk.jdb.trace.trace001.trace001\n@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +73,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +77,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,6 +84,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.trace.trace001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".trace001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.trace.trace001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".trace001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -95,4 +96,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -102,1 +99,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -112,2 +109,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + thread);\n@@ -116,1 +113,1 @@\n-        jdb.contToExit(CHECKED_METHODS.length*threads.length*2 + 3);\n+        jdb.contToExit(CHECKED_METHODS.length * threads.length * 2 + 3);\n@@ -124,1 +121,1 @@\n-    private boolean checkTrace (String[] checkedMethods, String[] reply) {\n+    private boolean checkTrace(String[] checkedMethods, String[] reply) {\n@@ -126,1 +123,0 @@\n-        String found;\n@@ -128,1 +124,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -132,1 +128,1 @@\n-        for (int i = 0; i < checkedMethods.length; i++) {\n+        for (String checkedMethod : checkedMethods) {\n@@ -134,1 +130,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -138,1 +134,1 @@\n-                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -140,1 +136,1 @@\n-                result= false;\n+                result = false;\n@@ -144,1 +140,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -148,1 +144,1 @@\n-                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -150,1 +146,1 @@\n-                result= false;\n+                result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/trace\/trace001\/trace001.java","additions":30,"deletions":34,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n- * @run main\/othervm PropertyResolvingWrapper\n+ * @run main\/othervm\n@@ -69,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -77,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,2 +92,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,6 +95,1 @@\n-    static final String[] FRAMES = new String[] {\n-        DEBUGGEE_CLASS + \".func\",\n-        DEBUGGEE_CLASS + \".runIt\",\n-        DEBUGGEE_CLASS + \".main\"                };\n-\n-    public uncaught_exception002 (boolean debuggeeShouldFail) {\n+    public uncaught_exception002(boolean debuggeeShouldFail) {\n@@ -106,3 +102,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -117,1 +111,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -124,1 +118,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -129,1 +123,1 @@\n-                \"is not accessible\");\n+                    \"is not accessible\");\n@@ -132,10 +126,0 @@\n-\n-    private boolean checkStop () {\n-        Paragrep grep;\n-        String[] reply;\n-        String found;\n-        Vector v;\n-        boolean result = true;\n-\n-        return result;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/uncaught_exception\/uncaught_exception002\/uncaught_exception002.java","additions":16,"deletions":32,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -59,1 +59,2 @@\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.unmonitor.unmonitor001.unmonitor001\n+ * @run main\/othervm\n+ *      nsk.jdb.unmonitor.unmonitor001.unmonitor001\n@@ -72,2 +73,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -75,2 +77,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -80,1 +82,1 @@\n-    public static void main (String argv[])  {\n+    public static void main(String[] argv) {\n@@ -84,2 +86,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -94,3 +96,3 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    BREAKPOINT_LINE    = 47;\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int BREAKPOINT_LINE = 47;\n@@ -99,6 +101,6 @@\n-        JdbCommand.locals,\n-        JdbCommand.threads,\n-        JdbCommand.methods + DEBUGGEE_CLASS,\n-        JdbCommand.fields  + DEBUGGEE_CLASS,\n-        JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n-                                             };\n+            JdbCommand.locals,\n+            JdbCommand.threads,\n+            JdbCommand.methods + DEBUGGEE_CLASS,\n+            JdbCommand.fields + DEBUGGEE_CLASS,\n+            JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n+    };\n@@ -108,4 +110,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -113,1 +111,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n@@ -116,3 +114,3 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[0]);\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[1]);\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[2]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[0]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[1]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[2]);\n@@ -121,1 +119,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.unmonitor + \" 1\");\n+        jdb.receiveReplyFor(JdbCommand.unmonitor + \" 1\");\n@@ -124,2 +122,2 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[3]);\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[4]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[3]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[4]);\n@@ -128,1 +126,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n+        jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n@@ -148,2 +146,0 @@\n-        String found;\n-        Vector v;\n@@ -173,2 +169,1 @@\n-        String found;\n-        Vector v = new Vector();;\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unmonitor\/unmonitor001\/unmonitor001.java","additions":28,"deletions":33,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -56,3 +56,3 @@\n- * @build nsk.jdb.untrace.untrace001.untrace001\n- *        nsk.jdb.untrace.untrace001.untrace001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.untrace.untrace001.untrace001\n+ * @build nsk.jdb.untrace.untrace001.untrace001a\n+ * @run main\/othervm\n+ *      nsk.jdb.untrace.untrace001.untrace001\n@@ -71,2 +71,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -74,2 +75,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -79,1 +80,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -83,2 +84,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -90,6 +91,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.untrace.untrace001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".untrace001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.untrace.untrace001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".untrace001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -102,4 +103,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -109,1 +106,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -119,2 +116,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + thread);\n@@ -124,2 +121,2 @@\n-        for (int i = 0; i < (CHECKED_METHODS.length*threads.length*2 + 1); i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        for (int i = 0; i < (CHECKED_METHODS.length * threads.length * 2 + 1); i++) {\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -128,2 +125,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.untrace + \"methods \" + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.untrace + \"methods \" + thread);\n@@ -132,1 +129,1 @@\n-        jdb.contToExit(CHECKED_METHODS.length*threads.length*2 + 2);\n+        jdb.contToExit(CHECKED_METHODS.length * threads.length * 2 + 2);\n@@ -140,1 +137,1 @@\n-    private boolean checkTrace (String[] checkedMethods, String[] reply) {\n+    private boolean checkTrace(String[] checkedMethods, String[] reply) {\n@@ -142,1 +139,0 @@\n-        String found;\n@@ -144,1 +140,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -148,1 +144,1 @@\n-        for (int i = 0; i < checkedMethods.length; i++) {\n+        for (String checkedMethod : checkedMethods) {\n@@ -150,1 +146,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -154,1 +150,1 @@\n-                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -156,1 +152,1 @@\n-                result= false;\n+                result = false;\n@@ -160,1 +156,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -164,1 +160,1 @@\n-                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -166,1 +162,1 @@\n-                result= false;\n+                result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/untrace\/untrace001\/untrace001.java","additions":34,"deletions":38,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -52,3 +52,3 @@\n- * @build nsk.jdb.unwatch.unwatch001.unwatch001\n- *        nsk.jdb.unwatch.unwatch001.unwatch001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.unwatch.unwatch001.unwatch001\n+ * @build nsk.jdb.unwatch.unwatch001.unwatch001a\n+ * @run main\/othervm\n+ *      nsk.jdb.unwatch.unwatch001.unwatch001\n@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -75,1 +76,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +80,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -86,6 +87,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.unwatch.unwatch001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".unwatch001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.unwatch.unwatch001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".unwatch001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -93,2 +94,2 @@\n-    static String[] checkedFields  = { \"fS1\", \"FS0\" };\n-    static String[] checkedFields2 = { \"fP1\", \"fU1\", \"fR1\"};\n+    static String[] checkedFields = {\"fS1\", \"FS0\"};\n+    static String[] checkedFields2 = {\"fP1\", \"fU1\", \"fR1\"};\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -105,1 +102,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -109,2 +106,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -113,1 +110,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -116,2 +113,2 @@\n-        unwatchFields (DEBUGGEE_CLASS, checkedFields);\n-        unwatchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        unwatchFields(DEBUGGEE_CLASS, checkedFields);\n+        unwatchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -123,1 +120,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -126,1 +123,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -131,5 +128,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedField);\n@@ -137,1 +132,0 @@\n-\n@@ -140,5 +134,3 @@\n-    private void unwatchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.unwatch + \" access \" + className + \".\" + checkedFields[i]);\n+    private void unwatchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.unwatch + \" access \" + className + \".\" + checkedField);\n@@ -146,1 +138,0 @@\n-\n@@ -149,1 +140,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -151,1 +142,0 @@\n-        String found;\n@@ -154,1 +144,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -158,1 +148,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -161,1 +151,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -165,1 +155,1 @@\n-                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch001\/unwatch001.java","additions":39,"deletions":49,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -53,3 +53,3 @@\n- * @build nsk.jdb.unwatch.unwatch002.unwatch002\n- *        nsk.jdb.unwatch.unwatch002.unwatch002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.unwatch.unwatch002.unwatch002\n+ * @build nsk.jdb.unwatch.unwatch002.unwatch002a\n+ * @run main\/othervm\n+ *      nsk.jdb.unwatch.unwatch002.unwatch002\n@@ -68,2 +68,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -71,2 +72,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -76,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -80,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,7 +88,7 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.unwatch.unwatch002\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".unwatch002\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String expectedPrompt     = \"main[1]\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.unwatch.unwatch002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".unwatch002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String expectedPrompt = \"main[1]\";\n@@ -95,2 +96,2 @@\n-    static String[] checkedFields  = { \"FS1\" };\n-    static String[] checkedFields2 = { \"FT1\", \"FV1\" };\n+    static String[] checkedFields = {\"FS1\"};\n+    static String[] checkedFields2 = {\"FT1\", \"FV1\"};\n@@ -100,4 +101,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -109,1 +106,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -111,2 +108,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -115,2 +112,2 @@\n-        for (int i = 0; i < (checkedFields.length *2 + checkedFields2.length*2 + 2); i++) {\n-            reply = jdb.receiveReplyForWithMessageWait(JdbCommand.cont, expectedPrompt);\n+        for (int i = 0; i < (checkedFields.length * 2 + checkedFields2.length * 2 + 2); i++) {\n+            jdb.receiveReplyForWithMessageWait(JdbCommand.cont, expectedPrompt);\n@@ -119,2 +116,2 @@\n-        unwatchFields (DEBUGGEE_CLASS, checkedFields);\n-        unwatchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        unwatchFields(DEBUGGEE_CLASS, checkedFields);\n+        unwatchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -123,1 +120,1 @@\n-        jdb.contToExit(checkedFields.length*2 + checkedFields2.length*2 + 1);\n+        jdb.contToExit(checkedFields.length * 2 + checkedFields2.length * 2 + 1);\n@@ -126,1 +123,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -129,1 +126,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -134,5 +131,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedField);\n@@ -140,1 +135,0 @@\n-\n@@ -143,5 +137,3 @@\n-    private void unwatchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.unwatch + \" all \" + className + \".\" + checkedFields[i]);\n+    private void unwatchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.unwatch + \" all \" + className + \".\" + checkedField);\n@@ -149,1 +141,0 @@\n-\n@@ -152,1 +143,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -154,1 +145,0 @@\n-        String found;\n@@ -157,1 +147,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -161,1 +151,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -164,1 +154,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -168,1 +158,1 @@\n-                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedField);\n@@ -174,1 +164,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -179,1 +169,1 @@\n-                log.complain(\"jdb reported wrong number of modification of the field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"jdb reported wrong number of modification of the field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch002\/unwatch002.java","additions":44,"deletions":54,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -45,3 +45,3 @@\n- * @build nsk.jdb.up.up002.up002\n- *        nsk.jdb.up.up002.up002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.up.up002.up002\n+ * @build nsk.jdb.up.up002.up002a\n+ * @run main\/othervm\n+ *      nsk.jdb.up.up002.up002\n@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -68,1 +69,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +73,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -79,15 +80,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.up.up002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".up002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-\n-    static final String[][] FRAMES = new String[][] {\n-        {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n-        {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n-        {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n-        {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n-        {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n-        {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n-        {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n-                                                };\n+    static final String PACKAGE_NAME = \"nsk.jdb.up.up002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".up002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n+            {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n+            {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n+            {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n+            {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n+            {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n+            {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n+    };\n@@ -99,2 +100,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -115,2 +115,2 @@\n-        for (int i = 1; i < (FRAMES.length-1); i++) {\n-            v = new Vector();\n+        for (int i = 1; i < (FRAMES.length - 1); i++) {\n+            v = new Vector<>();\n@@ -120,1 +120,1 @@\n-            if (count != (i+1)) {\n+            if (count != (i + 1)) {\n@@ -122,1 +122,1 @@\n-                    \"\\n\\texpected value : \" + (i+1) + \", got : \" + count);\n+                        \"\\n\\texpected value : \" + (i + 1) + \", got : \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/up\/up002\/up002.java","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -45,3 +45,3 @@\n- * @build nsk.jdb.use.use001.use001\n- *        nsk.jdb.use.use001.use001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.use.use001.use001\n+ * @build nsk.jdb.use.use001.use001a\n+ * @run main\/othervm\n+ *      nsk.jdb.use.use001.use001\n@@ -60,2 +60,0 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n@@ -63,0 +61,3 @@\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -64,2 +65,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -69,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -73,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,2 +84,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -89,3 +90,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/use\/use001\/use001.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -50,3 +50,3 @@\n- * @build nsk.jdb.watch.watch001.watch001\n- *        nsk.jdb.watch.watch001.watch001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.watch.watch001.watch001\n+ * @build nsk.jdb.watch.watch001.watch001a\n+ * @run main\/othervm\n+ *      nsk.jdb.watch.watch001.watch001\n@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,6 +86,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.watch.watch001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".watch001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.watch.watch001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".watch001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -93,2 +94,2 @@\n-    static String[] checkedFields  = { \"fS0\", \"FS1\" };\n-    static String[] checkedFields2 = { \"FP0\", \"FU1\", \"FR0\", \"FT1\", \"FV0\" };\n+    static String[] checkedFields = {\"fS0\", \"FS1\"};\n+    static String[] checkedFields2 = {\"FP0\", \"FU1\", \"FR0\", \"FT1\", \"FV0\"};\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -105,1 +102,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -109,2 +106,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -115,1 +112,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -118,1 +115,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -123,5 +120,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedField);\n@@ -132,1 +127,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -136,2 +131,1 @@\n-        int count;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -141,1 +135,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -144,1 +138,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -148,1 +142,1 @@\n-                log.complain(\"Failed to report access to field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"Failed to report access to field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch001\/watch001.java","additions":33,"deletions":39,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -50,3 +50,3 @@\n- * @build nsk.jdb.watch.watch002.watch002\n- *        nsk.jdb.watch.watch002.watch002a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.watch.watch002.watch002\n+ * @build nsk.jdb.watch.watch002.watch002a\n+ * @run main\/othervm\n+ *      nsk.jdb.watch.watch002.watch002\n@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,6 +86,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.watch.watch002\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".watch002\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.watch.watch002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".watch002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -93,2 +94,2 @@\n-    static String[] checkedFields  = { \"FS0\", \"FS1\" };\n-    static String[] checkedFields2 = { \"FP1\", \"FU1\", \"FR1\", \"FT1\", \"FV1\" };\n+    static String[] checkedFields = {\"FS0\", \"FS1\"};\n+    static String[] checkedFields2 = {\"FP1\", \"FU1\", \"FR1\", \"FT1\", \"FV1\"};\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -105,1 +102,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -109,2 +106,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -112,1 +109,1 @@\n-        jdb.contToExit((checkedFields.length *2)  + (checkedFields2.length *2) + 2);\n+        jdb.contToExit((checkedFields.length * 2) + (checkedFields2.length * 2) + 2);\n@@ -115,1 +112,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -118,1 +115,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -123,5 +120,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedField);\n@@ -132,1 +127,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -136,2 +131,1 @@\n-        int count;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -141,1 +135,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -144,1 +138,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -148,1 +142,1 @@\n-                log.complain(\"Failed to report access to field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"Failed to report access to field \" + className + \".\" + checkedField);\n@@ -154,1 +148,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -158,1 +152,1 @@\n-                log.complain(\"Failed to report modification of field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"Failed to report modification of field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch002\/watch002.java","additions":36,"deletions":42,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n- * @build nsk.jdb.where.where004.where004\n- *        nsk.jdb.where.where004.where004a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.where.where004.where004\n+ * @build nsk.jdb.where.where004.where004a\n+ * @run main\/othervm\n+ *      nsk.jdb.where.where004.where004\n@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -66,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,5 +78,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.where.where004\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".where004\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.where.where004\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".where004\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {DEBUGGEE_CLASS + \".func5\", \"71\"},\n+            {DEBUGGEE_CLASS + \".func4\", \"67\"},\n+            {DEBUGGEE_CLASS + \".func3\", \"63\"},\n+            {DEBUGGEE_CLASS + \".func2\", \"59\"},\n+            {DEBUGGEE_CLASS + \".func1\", \"55\"},\n+            {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n+            {DEBUGGEE_CLASS + \".main\", \"39\"}\n+    };\n@@ -83,9 +94,0 @@\n-    static final String[][] FRAMES = new String[][] {\n-        {DEBUGGEE_CLASS + \".func5\", \"71\"},\n-        {DEBUGGEE_CLASS + \".func4\", \"67\"},\n-        {DEBUGGEE_CLASS + \".func3\", \"63\"},\n-        {DEBUGGEE_CLASS + \".func2\", \"59\"},\n-        {DEBUGGEE_CLASS + \".func1\", \"55\"},\n-        {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n-        {DEBUGGEE_CLASS + \".main\",  \"39\"}\n-                                                };\n@@ -96,2 +98,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -105,4 +106,4 @@\n-        for (int i = 0; i < FRAMES.length; i++) {\n-            v = new Vector();\n-            v.add(FRAMES[i][0]);\n-            v.add(FRAMES[i][1]);\n+        for (String[] frame : FRAMES) {\n+            v = new Vector<>();\n+            v.add(frame[0]);\n+            v.add(frame[1]);\n@@ -111,2 +112,2 @@\n-                failure(\"Unexpected number or location of the stack frame: \" + FRAMES[i][0] +\n-                    \"\\n\\texpected value : 1, got one: \" + count);\n+                failure(\"Unexpected number or location of the stack frame: \" + frame[0] +\n+                        \"\\n\\texpected value : 1, got one: \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where004\/where004.java","additions":33,"deletions":32,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -44,3 +44,3 @@\n- * @build nsk.jdb.where.where005.where005\n- *        nsk.jdb.where.where005.where005a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.where.where005.where005\n+ * @build nsk.jdb.where.where005.where005a\n+ * @run main\/othervm\n+ *      nsk.jdb.where.where005.where005\n@@ -59,2 +59,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -62,2 +63,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -67,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -71,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,1 +79,1 @@\n-    public where005 (boolean debuggeeShouldFail) {\n+    public where005(boolean debuggeeShouldFail) {\n@@ -82,5 +83,16 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.where.where005\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".where005\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.where.where005\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".where005\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {DEBUGGEE_CLASS + \".func6\", \"76\"},\n+            {DEBUGGEE_CLASS + \".func5\", \"71\"},\n+            {DEBUGGEE_CLASS + \".func4\", \"67\"},\n+            {DEBUGGEE_CLASS + \".func3\", \"63\"},\n+            {DEBUGGEE_CLASS + \".func2\", \"59\"},\n+            {DEBUGGEE_CLASS + \".func1\", \"55\"},\n+            {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n+            {DEBUGGEE_CLASS + \".main\", \"39\"}\n+    };\n@@ -88,10 +100,0 @@\n-    static final String[][] FRAMES = new String[][] {\n-        {DEBUGGEE_CLASS + \".func6\", \"76\"},\n-        {DEBUGGEE_CLASS + \".func5\", \"71\"},\n-        {DEBUGGEE_CLASS + \".func4\", \"67\"},\n-        {DEBUGGEE_CLASS + \".func3\", \"63\"},\n-        {DEBUGGEE_CLASS + \".func2\", \"59\"},\n-        {DEBUGGEE_CLASS + \".func1\", \"55\"},\n-        {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n-        {DEBUGGEE_CLASS + \".main\",  \"39\"}\n-                                                };\n@@ -102,2 +104,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -114,4 +115,4 @@\n-            for (int i = 0; i < FRAMES.length; i++) {\n-                v = new Vector();\n-                v.add(FRAMES[i][0]);\n-                v.add(FRAMES[i][1]);\n+            for (String[] frame : FRAMES) {\n+                v = new Vector<>();\n+                v.add(frame[0]);\n+                v.add(frame[1]);\n@@ -120,2 +121,2 @@\n-                    failure(\"Unexpected number or location of the stack frame: \" + FRAMES[i][0] +\n-                        \"\\n\\texpected value : 1, got one: \" + count);\n+                    failure(\"Unexpected number or location of the stack frame: \" + frame[0] +\n+                            \"\\n\\texpected value : 1, got one: \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where005\/where005.java","additions":35,"deletions":34,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -44,3 +44,3 @@\n- * @build nsk.jdb.where.where006.where006\n- *        nsk.jdb.where.where006.where006a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.where.where006.where006\n+ * @build nsk.jdb.where.where006.where006a\n+ * @run main\/othervm\n+ *      nsk.jdb.where.where006.where006\n@@ -59,2 +59,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -62,2 +63,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -67,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -71,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,14 +78,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.where.where006\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".where006\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-\n-    static final String[][] FRAMES = new String[][] {\n-        {PACKAGE_NAME + \".MyThread.func5\", \"111\"},\n-        {PACKAGE_NAME + \".MyThread.func4\", \"103\"},\n-        {PACKAGE_NAME + \".MyThread.func3\", \"99\"},\n-        {PACKAGE_NAME + \".MyThread.func2\", \"95\"},\n-        {PACKAGE_NAME + \".MyThread.func1\", \"91\"},\n-        {PACKAGE_NAME + \".MyThread.run\", \"85\"},\n-                                                };\n+    static final String PACKAGE_NAME = \"nsk.jdb.where.where006\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".where006\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {PACKAGE_NAME + \".MyThread.func5\", \"111\"},\n+            {PACKAGE_NAME + \".MyThread.func4\", \"103\"},\n+            {PACKAGE_NAME + \".MyThread.func3\", \"99\"},\n+            {PACKAGE_NAME + \".MyThread.func2\", \"95\"},\n+            {PACKAGE_NAME + \".MyThread.func1\", \"91\"},\n+            {PACKAGE_NAME + \".MyThread.run\", \"85\"},\n+    };\n+\n@@ -94,4 +95,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -116,1 +113,1 @@\n-    void checkFrames (String threadId, String[] reply, int expectedVal) {\n+    void checkFrames(String threadId, String[] reply, int expectedVal) {\n@@ -119,1 +116,0 @@\n-        Vector v;\n@@ -123,2 +119,2 @@\n-        for (int j = 0; j < FRAMES.length; j++) {\n-            count = grep.find(FRAMES[j][0]);\n+        for (String[] frame : FRAMES) {\n+            count = grep.find(frame[0]);\n@@ -126,3 +122,3 @@\n-                failure(\"Unexpected number of occurencies of the stack frame: \" + FRAMES[j][0] +\n-                    \" for thread \" + threadId +\n-                    \"\\n\\t Expected number of occurence: \" + expectedVal +\", got : \" + count);\n+                failure(\"Unexpected number of occurencies of the stack frame: \" + frame[0] +\n+                        \" for thread \" + threadId +\n+                        \"\\n\\t Expected number of occurence: \" + expectedVal + \", got : \" + count);\n@@ -130,5 +126,5 @@\n-                    found = grep.findFirst(FRAMES[j][0]);\n-                    if (found.indexOf(FRAMES[j][1]) < 0) {\n-                        failure(\"Unexpected location in the stack frame: \" + FRAMES[j][0] +\n-                            \" for thread \" + threadId +\n-                            \"\\n\\t Expected location: \" + FRAMES[j][1] + \", got :\\n\\t\" + found);\n+                    found = grep.findFirst(frame[0]);\n+                    if (!found.contains(frame[1])) {\n+                        failure(\"Unexpected location in the stack frame: \" + frame[0] +\n+                                \" for thread \" + threadId +\n+                                \"\\n\\t Expected location: \" + frame[1] + \", got :\\n\\t\" + found);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where006\/where006.java","additions":36,"deletions":40,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -39,3 +39,3 @@\n- * @build nsk.jdb.wherei.wherei001.wherei001\n- *        nsk.jdb.wherei.wherei001.wherei001a\n- * @run main\/othervm PropertyResolvingWrapper nsk.jdb.wherei.wherei001.wherei001\n+ * @build nsk.jdb.wherei.wherei001.wherei001a\n+ * @run main\/othervm\n+ *      nsk.jdb.wherei.wherei001.wherei001\n@@ -54,2 +54,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -57,2 +58,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -62,1 +62,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -66,2 +66,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -73,5 +73,5 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.wherei.wherei001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".wherei001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.wherei.wherei001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".wherei001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -81,5 +81,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -89,1 +84,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -99,2 +94,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            if (!checkStack(threads[i])) {\n+        for (String thread : threads) {\n+            if (!checkStack(thread)) {\n@@ -108,1 +103,1 @@\n-    private boolean checkStack (String threadId) {\n+    private boolean checkStack(String threadId) {\n@@ -111,1 +106,0 @@\n-        String found;\n@@ -113,1 +107,0 @@\n-        Vector v;\n@@ -115,1 +108,1 @@\n-        String[] func = { \"func5\", \"func4\", \"func3\", \"func2\", \"func1\", \"run\" };\n+        String[] func = {\"func5\", \"func4\", \"func3\", \"func2\", \"func1\", \"run\"};\n@@ -120,2 +113,2 @@\n-        for (int i = 0; i < func.length; i++) {\n-            count = grep.find(DEBUGGEE_THREAD + \".\" + func[i]);\n+        for (String s : func) {\n+            count = grep.find(DEBUGGEE_THREAD + \".\" + s);\n@@ -124,1 +117,1 @@\n-                log.complain(\"Searched for: \" + DEBUGGEE_THREAD + \".\" + func[i]);\n+                log.complain(\"Searched for: \" + DEBUGGEE_THREAD + \".\" + s);\n@@ -126,1 +119,1 @@\n-                result= false;\n+                result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/wherei\/wherei001\/wherei001.java","additions":24,"deletions":31,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,6 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.ArgumentHandler;\n-\n-import java.io.*;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -73,6 +69,4 @@\n-     * @param  args  Array of the raw command-line arguments.\n-     *\n-     * @throws  NullPointerException  If <code>args==null<\/code>.\n-     * @throws  IllegalArgumentException  If Binder or Log options\n-     *                                    are set incorrectly.\n-     *\n+     * @param args Array of the raw command-line arguments.\n+     * @throws NullPointerException     If <code>args==null<\/code>.\n+     * @throws IllegalArgumentException If Binder or Log options\n+     *                                  are set incorrectly.\n@@ -81,1 +75,1 @@\n-    public JdbArgumentHandler(String args[]) {\n+    public JdbArgumentHandler(String[] args) {\n@@ -91,2 +85,2 @@\n-     * @param value string representation of value (could be an empty string)\n-     *              null if this option has no value\n+     * @param value  string representation of value (could be an empty string)\n+     *               null if this option has no value\n@@ -94,2 +88,1 @@\n-     *         <i>false<\/i> if option is not admissible\n-     *\n+     * <i>false<\/i> if option is not admissible\n@@ -97,1 +90,0 @@\n-     *\n@@ -126,1 +118,1 @@\n-                    throw new BadOption(\"jdb option -listen is not admissible: \"  + value);\n+                    throw new BadOption(\"jdb option -listen is not admissible: \" + value);\n@@ -174,1 +166,0 @@\n-     *\n@@ -184,1 +175,2 @@\n-        return options.getProperty(\"jdb.option\", \"\");\n+        String value = options.getProperty(\"jdb.option\", \"\").trim();\n+        return removeSurroundingQuotes(value);\n@@ -205,3 +197,1 @@\n-        if (value.length() > 1 && value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n-            value = value.substring(1, value.length() - 1).trim();\n-        }\n+        value = removeSurroundingQuotes(value);\n@@ -222,41 +212,1 @@\n-        if (value.length() > 1 && value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n-            value = value.substring(1, value.length() - 1).trim();\n-        }\n-        return value;\n-    }\n-\n-    \/**\n-     * Remove \"<code>-server<\/code>\" or \"<code>-client<\/code>\" from options string,\n-     * if anything of them are presented.\n-     *\/\n-    public static String removeVMFlavorOption(String javaOptions) {\n-        StringBuffer result = new StringBuffer();\n-        StringTokenizer tokenizer = new StringTokenizer(javaOptions);\n-        while (tokenizer.hasMoreTokens()) {\n-            String option = tokenizer.nextToken();\n-            if (!option.equals(\"-server\") && !option.equals(\"-client\")) {\n-                result.append( (result.length() > 0 ? \" \" : \"\") + option);\n-            }\n-        };\n-        return result.toString();\n-    }\n-\n-    \/**\n-     * @return \"<code>-tserver<\/code>\" if \"<code>-server<\/code>\" is presented in options string.\n-     * @return \"<code>-tclient<\/code>\" if \"<code>-client<\/code>\" is presented in options string.\n-     * @return empty string otherwise.\n-     *\/\n-    public static String stripVMFlavorOption(String javaOptions) {\n-        String result = \"\";\n-        StringTokenizer tokenizer = new StringTokenizer(javaOptions);\n-        while (tokenizer.hasMoreTokens()) {\n-            String option = tokenizer.nextToken();\n-            if (option.equals(\"-server\")) {\n-                result = \"-tserver\";\n-                break;\n-            } else if (option.equals(\"-client\")) {\n-                result = \"-tclient\";\n-                break;\n-            }\n-        };\n-        return result;\n+        return removeSurroundingQuotes(value);\n@@ -269,1 +219,1 @@\n-        if (NO_SUBSTR_MATCH == value.indexOf(subString)) {\n+        if (!value.contains(subString)) {\n@@ -296,1 +246,1 @@\n-            throw new BadOption(value +  \" not correctly quoted\");\n+            throw new BadOption(value + \" not correctly quoted\");\n@@ -301,1 +251,6 @@\n-    private static final int NO_SUBSTR_MATCH = -1;\n+    private static String removeSurroundingQuotes(String value) {\n+        if (value.length() > 1 && value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n+            value = value.substring(1, value.length() - 1).trim();\n+        }\n+        return value;\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/JdbArgumentHandler.java","additions":24,"deletions":69,"binary":false,"changes":93,"status":"modified"}]}