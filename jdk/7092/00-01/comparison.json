{"files":[{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.NameClassCache;\n+\n+\/**\n+ * @test\n+ * @bug 8280041\n+ * @compile\/module=java.base java\/io\/NameClassCache.java\n+ * @run main ContinuousGCTest\n+ *\/\n+public class ContinuousGCTest {\n+    static final NameClassCache CACHE = new NameClassCache();\n+    static final String VALUE = \"ClassCache-ContinuousGCTest\";\n+\n+    public static void main(String... args) throws Throwable {\n+        for (int c = 0; c < 1000; c++) {\n+            test();\n+            System.gc();\n+        }\n+    }\n+\n+    public static void test() {\n+        String cached = CACHE.get(ContinuousGCTest.class);\n+        if (!cached.equals(VALUE)) {\n+            throw new IllegalStateException(\"Cache failure, got: \" + cached);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/ClassCache\/ContinuousGCTest.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"","filename":"test\/jdk\/java\/io\/ClassCache\/NullValueTest.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/java\/io\/Console\/CharsetTest.java","status":"copied"},{"patch":"@@ -0,0 +1,35 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.io;\n+\n+public class NameClassCache extends ClassCache<String> {\n+    protected String computeValue(Class<?> cl) {\n+        \/\/ Return string that is not interned and specific to class\n+        return \"ClassCache-\" + cl.getName();\n+    }\n+\n+    public String get(Class<?> cl) {\n+        return super.get(cl);\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/ClassCache\/java.base\/java\/io\/NameClassCache.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package java.io;\n+\n+public class NullClassCache extends ClassCache<Object> {\n+    protected Object computeValue(Class<?> cl) {\n+        return null;\n+    }\n+\n+    public Object get(Class<?> cl) {\n+        return super.get(cl);\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/ClassCache\/java.base\/java\/io\/NullClassCache.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"}]}