{"files":[{"patch":"@@ -29,0 +29,1 @@\n+ * @summary Sanity test for ClassCache under continuous GC\n","filename":"test\/jdk\/java\/io\/ClassCache\/ContinuousGCTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n@@ -24,6 +24,1 @@\n-import java.io.Console;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n+import java.io.NullClassCache;\n@@ -33,8 +28,4 @@\n- * @bug 8264208 8265918\n- * @summary Tests Console.charset() method. \"expect\" command in Windows\/Cygwin\n- *          does not work as expected. Ignoring tests on Windows.\n- * @requires (os.family == \"linux\") | (os.family == \"mac\")\n- * @library \/test\/lib\n- * @run main CharsetTest en_US.ISO8859-1 ISO-8859-1\n- * @run main CharsetTest en_US.US-ASCII US-ASCII\n- * @run main CharsetTest en_US.UTF-8 UTF-8\n+ * @bug 8280041\n+ * @summary Test that ClassCache throws on trying to pass null value\n+ * @compile\/module=java.base java\/io\/NullClassCache.java\n+ * @run main NullValueTest\n@@ -42,1 +33,1 @@\n-public class CharsetTest {\n+public class NullValueTest {\n@@ -44,30 +35,5 @@\n-        if (args.length == 0) {\n-            \/\/ no arg means child java process being tested.\n-            Console con = System.console();\n-            System.out.println(con.charset());\n-            return;\n-        } else {\n-            \/\/ check \"expect\" command availability\n-            var expect = Paths.get(\"\/usr\/bin\/expect\");\n-            if (!Files.exists(expect) || !Files.isExecutable(expect)) {\n-                System.out.println(\"'expect' command not found. Test ignored.\");\n-                return;\n-            }\n-\n-            \/\/ invoking \"expect\" command\n-            var testSrc = System.getProperty(\"test.src\", \".\");\n-            var testClasses = System.getProperty(\"test.classes\", \".\");\n-            var jdkDir = System.getProperty(\"test.jdk\");\n-            OutputAnalyzer output = ProcessTools.executeProcess(\n-                    \"expect\",\n-                    \"-n\",\n-                    testSrc + \"\/script.exp\",\n-                    jdkDir + \"\/bin\/java\",\n-                    args[0],\n-                    args[1],\n-                    testClasses);\n-            output.reportDiagnosticSummary();\n-            var eval = output.getExitValue();\n-            if (eval != 0) {\n-                throw new RuntimeException(\"Test failed. Exit value from 'expect' command: \" + eval);\n-            }\n+        try {\n+            new NullClassCache().get(Object.class);\n+            throw new IllegalStateException(\"Should have failed\");\n+        } catch (NullPointerException npe) {\n+            \/\/ Expected\n","filename":"test\/jdk\/java\/io\/ClassCache\/NullValueTest.java","additions":12,"deletions":46,"binary":false,"changes":58,"status":"modified"}]}