{"files":[{"patch":"@@ -98,1 +98,0 @@\n-        URI uri = req.uri();\n@@ -100,1 +99,1 @@\n-        String key = Http2Connection.keyFor(uri, proxy);\n+        String key = Http2Connection.keyFor(req.secure(), req.getAddress(), proxy);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2ClientImpl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -447,1 +447,1 @@\n-             keyFor(request.uri(), request.proxy()));\n+             keyFor(request.secure(), request.getAddress(), request.proxy()));\n@@ -579,6 +579,3 @@\n-    static String keyFor(URI uri, InetSocketAddress proxy) {\n-        boolean isSecure = uri.getScheme().equalsIgnoreCase(\"https\");\n-\n-        String host = uri.getHost();\n-        int port = uri.getPort();\n-        return keyString(isSecure, proxy, host, port);\n+    static String keyFor(final boolean secure, final InetSocketAddress reqTargetAddr,\n+                         final InetSocketAddress proxy) {\n+        return keyString(secure, proxy, reqTargetAddr.getHostString(), reqTargetAddr.getPort());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -33,0 +33,2 @@\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -108,6 +110,18 @@\n-        return Stream.of(\n-                \/\/ h2 over HTTPS\n-                Arguments.of(new URI(\"https:\/\/\" + https2_Server.serverAuthority() + \"\/\")),\n-                \/\/ h2 over HTTP\n-                Arguments.of(new URI(\"http:\/\/\" + http2_Server.serverAuthority() + \"\/\"))\n-        );\n+        final List<Arguments> arguments = new ArrayList<>();\n+        \/\/ h2 over HTTPS\n+        arguments.add(Arguments.of(new URI(\"https:\/\/\" + https2_Server.serverAuthority() + \"\/\")));\n+        \/\/ h2 over HTTP\n+        arguments.add(Arguments.of(new URI(\"http:\/\/\" + http2_Server.serverAuthority() + \"\/\")));\n+        if (IPSupport.preferIPv6Addresses()) {\n+            if (https2_Server.getAddress().getAddress().isLoopbackAddress()) {\n+                \/\/ h2 over HTTPS, use the short form of the host, in the request URI\n+                arguments.add(Arguments.of(new URI(\"https:\/\/[::1]:\" +\n+                        https2_Server.getAddress().getPort() + \"\/\")));\n+            }\n+            if (http2_Server.getAddress().getAddress().isLoopbackAddress()) {\n+                \/\/ h2 over HTTP, use the short form of the host, in the request URI\n+                arguments.add(Arguments.of(new URI(\"http:\/\/[::1]:\" +\n+                        http2_Server.getAddress().getPort() + \"\/\")));\n+            }\n+        }\n+        return arguments.stream();\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ConnectionReuseTest.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"}]}