{"files":[{"patch":"@@ -611,1 +611,0 @@\n-        host = Utils.wrapBracketsIfIPv6(host);\n@@ -613,1 +612,0 @@\n-            String proxyHost = Utils.wrapBracketsIfIPv6(proxy.getHostString());\n@@ -615,1 +613,1 @@\n-            key = key + \"P:\" + proxyHost + \":\" + proxy.getPort();\n+            key = key + \"P:\" + proxy.getHostString() + \":\" + proxy.getPort();\n@@ -620,1 +618,0 @@\n-            String proxyHost = Utils.wrapBracketsIfIPv6(proxy.getHostString());\n@@ -622,1 +619,1 @@\n-            key = key + \"T:H:\" + host + \":\" + port + \";P:\" + proxyHost + \":\" + proxy.getPort();\n+            key = key + \"T:H:\" + host + \":\" + port + \";P:\" + proxy.getHostString() + \":\" + proxy.getPort();\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1118,15 +1118,0 @@\n-\n-    \/**\n-     * Wraps the {@code hostAddr} in square brackets and returns that result, if the passed\n-     * address represents a IPv6 address, else return back the {@code hostAddr}\n-     *\/\n-    public static String wrapBracketsIfIPv6(final String hostAddr) {\n-        assert hostAddr != null : \"host address is null\";\n-        final boolean needBrackets = (hostAddr.contains(\":\")\n-                && !hostAddr.startsWith(\"[\")\n-                && !hostAddr.endsWith(\"]\"));\n-        if (!needBrackets) {\n-            return hostAddr;\n-        }\n-        return \"[\" + hostAddr + \"]\";\n-    }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/Utils.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"}]}