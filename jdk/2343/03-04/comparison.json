{"files":[{"patch":"@@ -1480,3 +1480,7 @@\n-        X509CertImpl certImpl;\n-        if (signerCert instanceof X509CertImpl) {\n-            certImpl = (X509CertImpl) signerCert;\n+        PublicKey subjectPubKey = req.getSubjectPublicKeyInfo();\n+        PublicKey issuerPubKey = signerCert.getPublicKey();\n+\n+        KeyIdentifier signerSubjectKeyId;\n+        if (subjectPubKey.equals(issuerPubKey)) {\n+            \/\/ No AKID for self-signed cert\n+            signerSubjectKeyId = null;\n@@ -1484,1 +1488,16 @@\n-            certImpl = new X509CertImpl(signerCert.getEncoded());\n+            X509CertImpl certImpl;\n+            if (signerCert instanceof X509CertImpl) {\n+                certImpl = (X509CertImpl) signerCert;\n+            } else {\n+                certImpl = new X509CertImpl(signerCert.getEncoded());\n+            }\n+\n+            \/\/ To enforce compliance with RFC 5280 section 4.2.1.1: \"Where a key\n+            \/\/ identifier has been previously established, the CA SHOULD use the\n+            \/\/ previously established identifier.\"\n+            \/\/ Use issuer's SKID to establish the AKID in createV3Extensions() method.\n+            signerSubjectKeyId = certImpl.getSubjectKeyId();\n+\n+            if (signerSubjectKeyId == null) {\n+                signerSubjectKeyId = new KeyIdentifier(issuerPubKey);\n+            }\n@@ -1486,1 +1505,0 @@\n-        KeyIdentifier signerSubjectKeyId = certImpl.getSubjectKeyId();\n@@ -1492,2 +1510,1 @@\n-                req.getSubjectPublicKeyInfo(),\n-                signerCert.getPublicKey(),\n+                subjectPubKey,\n@@ -1588,1 +1605,1 @@\n-        CertificateExtensions ext = createV3Extensions(null, null, v3ext, cert.getPublicKey(), null, null);\n+        CertificateExtensions ext = createV3Extensions(null, null, v3ext, cert.getPublicKey(), null);\n@@ -1914,1 +1931,0 @@\n-                null,\n@@ -2977,1 +2993,0 @@\n-                null,\n@@ -4247,1 +4262,0 @@\n-            PublicKey akey,\n@@ -4276,11 +4290,3 @@\n-            if (akey != null && !pkey.equals(akey)) {\n-                if (aSubjectKeyId == null) {\n-                    setExt(result, new AuthorityKeyIdentifierExtension(\n-                            new KeyIdentifier(akey), null, null));\n-                } else {\n-                    \/\/ To enforce compliance with RFC 5280 section 4.2.1.1: \"Where a key\n-                    \/\/ identifier has been previously established, the CA SHOULD use the\n-                    \/\/ previously established identifier.\"\n-                    setExt(result, new AuthorityKeyIdentifierExtension(\n-                            aSubjectKeyId, null, null));\n-                }\n+            if (aSubjectKeyId != null) {\n+                setExt(result, new AuthorityKeyIdentifierExtension(aSubjectKeyId,\n+                        null, null));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":28,"deletions":22,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -158,1 +158,0 @@\n-                PublicKey.class,\n@@ -202,1 +201,1 @@\n-                            null, null, List.of(option), pk, null, null);\n+                            null, null, List.of(option), pk, null);\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/ExtOptionCamelCase.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}