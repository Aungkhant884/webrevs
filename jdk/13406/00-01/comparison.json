{"files":[{"patch":"@@ -1,56 +0,0 @@\n-\/*\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/* @test\n- * @bug 8305324\n- * @summary C2: Wrong execution of vectorizing Interger.reverseBytes\n- * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.Test8305324::* compiler.c2.Test8305324\n- *\/\n-\n-package compiler.c2;\n-\n-public class Test8305324 {\n-\n-    static final int LEN = 33;\n-    static byte byteArray[] = new byte[LEN];\n-\n-    static void test() {\n-        for (int i = 0; i < LEN; i++) {\n-            byteArray[i] = (byte) Integer.reverseBytes(i);\n-        }\n-    }\n-\n-    public static void main(String[] strArr) {\n-        for (int i = 0; i < 2; i++) {\n-            test();\n-        }\n-        for (int i = 0; i < byteArray.length; i++) {\n-            if (byteArray[i] != 0) {\n-                System.err.println(\"FAILED: all the elements should be zero\");\n-                System.exit(1);\n-            }\n-        }\n-        System.out.println(\"PASSED\");\n-    }\n-\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test8305324.java","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8305324\n+ * @summary C2: Wrong execution of vectorizing Interger.reverseBytes\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.vectorization.TestNarrowedIntegerReverseBytes::* compiler.vectorization.TestNarrowedIntegerReverseBytes\n+ *\/\n+\n+package compiler.vectorization;\n+\n+public class TestNarrowedIntegerReverseBytes {\n+\n+    static final int LEN = 33;\n+    static byte byteArray[] = new byte[LEN];\n+\n+    static void test() {\n+        for (int i = 0; i < LEN; i++) {\n+            byteArray[i] = (byte) Integer.reverseBytes(i);\n+        }\n+    }\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 2; i++) {\n+            test();\n+        }\n+        for (int i = 0; i < byteArray.length; i++) {\n+            if (byteArray[i] != 0) {\n+                System.err.println(\"FAILED: all the elements should be zero\");\n+                System.exit(1);\n+            }\n+        }\n+        System.out.println(\"PASSED\");\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestNarrowedIntegerReverseBytes.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}