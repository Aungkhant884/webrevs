{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-    static final String DEBUGGEE_RESULT = DEBUGGEE_CLASS + \".notInterrupted.get()\";\n+    static final String DEBUGGEE_RESULT = DEBUGGEE_CLASS + \".notInterrupted\";\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/interrupt\/interrupt001\/interrupt001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-                    notInterrupted.decrementAndGet();\n@@ -61,0 +60,1 @@\n+                        notInterrupted--;\n@@ -86,1 +86,1 @@\n-    public static final AtomicInteger notInterrupted = new AtomicInteger(numThreads);\n+    public static volatile int notInterrupted = numThreads;\n@@ -126,1 +126,1 @@\n-            while (notInterrupted.get() > 0 && System.currentTimeMillis() - startTime <= waitTime) {\n+            while (notInterrupted > 0 && System.currentTimeMillis() - startTime <= waitTime) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/interrupt\/interrupt001\/interrupt001a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}