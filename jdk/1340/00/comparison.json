{"files":[{"patch":"@@ -201,19 +201,0 @@\n-uintptr_t ZBarrier::mark_barrier_on_root_oop_slow_path(uintptr_t addr) {\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at safepoint\");\n-  assert(during_mark(), \"Invalid phase\");\n-\n-  \/\/ Mark\n-  return mark<Follow, Strong, Publish>(addr);\n-}\n-\n-\/\/\n-\/\/ Relocate barrier\n-\/\/\n-uintptr_t ZBarrier::relocate_barrier_on_root_oop_slow_path(uintptr_t addr) {\n-  assert(SafepointSynchronize::is_at_safepoint(), \"Should be at safepoint\");\n-  assert(during_relocate(), \"Invalid phase\");\n-\n-  \/\/ Relocate\n-  return relocate(addr);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.cpp","additions":0,"deletions":19,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -76,3 +76,0 @@\n-  static uintptr_t mark_barrier_on_root_oop_slow_path(uintptr_t addr);\n-\n-  static uintptr_t relocate_barrier_on_root_oop_slow_path(uintptr_t addr);\n@@ -115,1 +112,0 @@\n-  static void mark_barrier_on_root_oop_field(oop* p);\n@@ -118,3 +114,0 @@\n-  \/\/ Relocate barrier\n-  static void relocate_barrier_on_root_oop_field(oop* p);\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -410,13 +410,0 @@\n-inline void ZBarrier::mark_barrier_on_root_oop_field(oop* p) {\n-  const oop o = *p;\n-  root_barrier<is_good_or_null_fast_path, mark_barrier_on_root_oop_slow_path>(p, o);\n-}\n-\n-\/\/\n-\/\/ Relocate barrier\n-\/\/\n-inline void ZBarrier::relocate_barrier_on_root_oop_field(oop* p) {\n-  const oop o = *p;\n-  root_barrier<is_good_or_null_fast_path, relocate_barrier_on_root_oop_slow_path>(p, o);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zBarrier.inline.hpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/z\/zRootsIterator.hpp\"\n@@ -56,5 +55,0 @@\n-class ZPhantomKeepAliveOopClosure : public OopClosure {\n-public:\n-  virtual void do_oop(oop* p);\n-  virtual void do_oop(narrowOop* p);\n-};\n","filename":"src\/hotspot\/share\/gc\/z\/zOopClosures.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -79,8 +79,0 @@\n-inline void ZPhantomKeepAliveOopClosure::do_oop(oop* p) {\n-  ZBarrier::keep_alive_barrier_on_phantom_oop_field(p);\n-}\n-\n-inline void ZPhantomKeepAliveOopClosure::do_oop(narrowOop* p) {\n-  ShouldNotReachHere();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zOopClosures.inline.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,2 +28,1 @@\n-#include \"gc\/z\/zHeap.hpp\"\n-#include \"gc\/z\/zOopClosures.inline.hpp\"\n+#include \"gc\/z\/zHeap.inline.hpp\"\n@@ -42,1 +41,0 @@\n-static const ZStatSubPhase ZSubPhasePauseRootsJVMTITagMap(\"Pause Roots JVMTITagMap\");\n@@ -47,11 +45,0 @@\n-class ZRelocateRootsIteratorClosure : public OopClosure {\n-public:\n-  virtual void do_oop(oop* p) {\n-    ZBarrier::relocate_barrier_on_root_oop_field(p);\n-  }\n-\n-  virtual void do_oop(narrowOop* p) {\n-    ShouldNotReachHere();\n-  }\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zRelocate.cpp","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shared\/threadLocalAllocBuffer.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zStackWatermark.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/z\/zRootsIterator.hpp\"\n","filename":"src\/hotspot\/share\/gc\/z\/zWeakRootsProcessor.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,1 +36,0 @@\n-  void process_weak_roots();\n","filename":"src\/hotspot\/share\/gc\/z\/zWeakRootsProcessor.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}