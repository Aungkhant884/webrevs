{"files":[{"patch":"@@ -542,4 +542,0 @@\n-java\/nio\/channels\/AsyncCloseAndInterrupt.java                   8305596 generic-all\n-\n-java\/nio\/channels\/FileChannel\/Transfer.java                     8305596 generic-all\n-\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -472,2 +472,3 @@\n-                } else if ((test == TEST_INTR) && (op == TRANSFER_FROM)) {\n-                    \/\/ Let this case pass -- CBIE applies to other channel\n+                } else if ((test == TEST_INTR || test == TEST_PREINTR)\n+                        && (op == TRANSFER_FROM)) {\n+                    \/\/ Let these cases pass -- CBIE applies to other channel\n","filename":"test\/jdk\/java\/nio\/channels\/AsyncCloseAndInterrupt.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,5 @@\n-        if (bytesWritten > 0)\n-            throw new RuntimeException(\"Wrote past file size\");\n+        if (bytesWritten > 10)\n+            throw new RuntimeException(\"Wrote too many bytes\");\n+\n+        if (sinkChannel.size() != 1000 + bytesWritten)\n+            throw new RuntimeException(\"Unexpected sink size\");\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/Transfer.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}