{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -225,2 +225,5 @@\n-  assert(ptr != NULL && *ptr != NULL, \"must have been allocated\");\n-  return *ptr;\n+  if (ptr != NULL) {\n+    return *ptr;\n+  } else {\n+    return NULL;\n+  }\n","filename":"src\/hotspot\/share\/classfile\/packageEntry.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1058,2 +1058,4 @@\n-  if (MetaspaceShared::use_full_module_graph() && ik->is_shared() &&\n-       ((pkg_entry == NULL) || MetaspaceShared::is_in_shared_metaspace(pkg_entry))) {\n+  if (MetaspaceShared::use_full_module_graph() && ik->is_shared() && pkg_entry != NULL) {\n+    assert(MetaspaceShared::is_in_shared_metaspace(pkg_entry), \"must be\");\n+    assert(!ik->is_shared_unregistered_class(), \"unexpected archived package entry for an unregistered class\");\n+    assert(ik->module()->is_named(), \"unexpected archived package entry for a class in an unnamed module\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"classfile\/packageEntry.hpp\"\n@@ -910,17 +909,0 @@\n-\n-#if INCLUDE_CDS_JAVA_HEAP\n-void ArchiveBuilder::update_package_entry() {\n-  for (int i = 0; i < klasses()->length(); i++) {\n-    Klass* k = klasses()->at(i);\n-    if (k->is_instance_klass()) {\n-      InstanceKlass* ik = InstanceKlass::cast(k);\n-      PackageEntry* entry = ik->package();\n-      PackageEntry* archived_entry = NULL;\n-      if (entry != NULL && !entry->in_unnamed_module()) {\n-        archived_entry = PackageEntry::get_archived_entry(entry);\n-      }\n-      ik->init_shared_package_entry(archived_entry);\n-    }\n-  }\n-}\n-#endif \/\/ INCLUDE_CDS_JAVA_HEAP\n","filename":"src\/hotspot\/share\/memory\/archiveBuilder.cpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -289,2 +289,0 @@\n-  void update_package_entry();\n-\n","filename":"src\/hotspot\/share\/memory\/archiveBuilder.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -787,7 +787,0 @@\n-#if INCLUDE_CDS_JAVA_HEAP\n-  if (MetaspaceShared::use_full_module_graph()) {\n-    log_info(cds)(\"Update package entries\");\n-    builder.update_package_entry();\n-  }\n-#endif\n-\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2552,7 +2552,1 @@\n-#if !INCLUDE_CDS_JAVA_HEAP\n-  _package_entry = NULL;\n-#else\n-  if (!MetaspaceShared::use_full_module_graph()) {\n-    _package_entry = NULL;\n-  }\n-#endif\n+  init_shared_package_entry();\n@@ -2571,0 +2565,21 @@\n+void InstanceKlass::init_shared_package_entry() {\n+#if !INCLUDE_CDS_JAVA_HEAP\n+  _package_entry = NULL;\n+#else\n+  if (!MetaspaceShared::use_full_module_graph()) {\n+    _package_entry = NULL;\n+  } else if (DynamicDumpSharedSpaces) {\n+    if (!MetaspaceShared::is_in_shared_metaspace(_package_entry)) {\n+      _package_entry = NULL;\n+    }\n+  } else {\n+    if (is_shared_unregistered_class()) {\n+      _package_entry = NULL;\n+    } else {\n+      _package_entry = PackageEntry::get_archived_entry(_package_entry);\n+    }\n+  }\n+  ArchivePtrMarker::mark_pointer((address**)&_package_entry);\n+#endif\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":22,"deletions":7,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1269,1 +1269,1 @@\n-  void init_shared_package_entry(PackageEntry* entry) { _package_entry = entry; }\n+  void init_shared_package_entry();\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}