{"files":[{"patch":"@@ -1543,6 +1543,5 @@\n-   *\n-   * @implSpec\n-   * The default implementation ignores the given observer since\n-   * {@code BufferedImage} {@linkplain #getRaster() single tile}\n-   * is always checked out for writing, so there is no event to\n-   * dispatch.\n+   * <p>\n+   * The default implementation ignores its parameters and does\n+   * nothing, since {@code BufferedImage} is always checked out\n+   * for writing and cannot be made read-only,\n+   * so there can never be events to dispatch.\n@@ -1559,4 +1558,3 @@\n-   *\n-   * @implSpec\n-   * The default implementation ignores the given observer since\n-   * {@link #addTileObserver(TileObserver)} adds none.\n+   * <p>\n+   * The default implementation ignores the given observer,\n+   * since {@link #addTileObserver(TileObserver)} adds none.\n@@ -1571,0 +1569,1 @@\n+     *\n@@ -1591,6 +1590,9 @@\n-     *\n-     * @implSpec\n-     * The default implementation unconditionally returns a single\n-     * point with (0,0) coordinates since {@code BufferedImage}\n-     * {@linkplain #getRaster() single tile} is always checked out\n-     * for writing.\n+     * <p>\n+     * Since a {@code BufferedImage} consists of a single tile,\n+     * and that tile is always checked out for writing, the\n+     * default implementation returns an array of one point.\n+     * Further, the offset shall be consistent with\n+     * {@link #getMinTileX()} and {@link #getMinTileY()},\n+     * which are always (0,0) in {@code BufferedImage}.\n+     * That will always be the coordinates of the single\n+     * returned {@code Point}.\n@@ -1626,2 +1628,1 @@\n-   *\n-   * @implSpec\n+   * <p>\n@@ -1650,2 +1651,1 @@\n-   *\n-   * @implSpec\n+   * <p>\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/BufferedImage.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"}]}