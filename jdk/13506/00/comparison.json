{"files":[{"patch":"@@ -1543,0 +1543,7 @@\n+   *\n+   * @implSpec\n+   * The default implementation ignores the given observer since\n+   * {@code BufferedImage} {@linkplain #getRaster() single tile}\n+   * is always checked out for writing, so there is no event to\n+   * dispatch.\n+   *\n@@ -1552,0 +1559,5 @@\n+   *\n+   * @implSpec\n+   * The default implementation ignores the given observer since\n+   * {@link #addTileObserver(TileObserver)} adds none.\n+   *\n@@ -1564,2 +1576,2 @@\n-     * @throws ArrayIndexOutOfBoundsException if both\n-     *          {@code tileX} and {@code tileY} are not equal\n+     * @throws IllegalArgumentException if either\n+     *          {@code tileX} or {@code tileY} is not equal\n@@ -1579,0 +1591,7 @@\n+     *\n+     * @implSpec\n+     * The default implementation unconditionally returns a single\n+     * point with (0,0) coordinates since {@code BufferedImage}\n+     * {@linkplain #getRaster() single tile} is always checked out\n+     * for writing.\n+     *\n@@ -1585,1 +1604,1 @@\n-        p[0] = new Point(0, 0);\n+        p[0] = new Point();         \/\/ Default to (0,0).\n@@ -1607,0 +1626,7 @@\n+   *\n+   * @implSpec\n+   * The default implementation unconditionally returns the\n+   * {@linkplain #getRaster() single tile} without checking\n+   * the passed values. No listeners are notified since the\n+   * returned tile is always checked out for writing.\n+   *\n@@ -1624,0 +1650,7 @@\n+   *\n+   * @implSpec\n+   * The default implementation is a no-op and immediately returns\n+   * without checking the passed values. No listeners are notified\n+   * since the {@linkplain #getRaster() single tile} is always\n+   * checked out for writing.\n+   *\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/BufferedImage.java","additions":36,"deletions":3,"binary":false,"changes":39,"status":"modified"}]}