[{"commit":{"message":"Update src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp\n\nCo-authored-by: Feilong Jiang <freedom.jfl@gmail.com>"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"}],"sha":"6c09f1f7935d7732e72e53d4f3b80896bb7c80e4"},{"commit":{"message":"refactor load_int_misaligned"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp"}],"sha":"129b68d6792007bae5a9afa72d104217af1dca5f"},{"commit":{"message":"Refactor call-site of load_long_misaligned"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp"}],"sha":"f8499d3042ffa22a773917aaffe01d964adf42ce"},{"commit":{"message":"cleanup string_equals"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"}],"sha":"c0073bb3193b7a1a3235ab9a1ac80597faa54bd2"},{"commit":{"message":"Create load_long_misaligned and start using it"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp"}],"sha":"cd777ded01f718c945cd4a3ee628676a0291e52e"},{"commit":{"message":"Update strings_equal comment"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"}],"sha":"2656ea74b3494fae4a305673f0b6e42142dd0ffa"},{"commit":{"message":"fix register name in branch"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"}],"sha":"626aed9d100b0517fb0eaab95eee0be354322658"},{"commit":{"message":"Redo string_equals patch"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"}],"sha":"76c0d5fc1affa6e19e1b709a6ca59faa34a566ec"},{"commit":{"message":"Revert \"Add strig_equals patch to prevent misaligned access there\"\n\nThis reverts commit 0335cd56b9ad101355b1b477938cbd741b964066."},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"}],"sha":"9fae30a99174d040154ce0ecda89896cfb9d602c"},{"commit":{"message":"Merge branch 'master' into LAM_SAM"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetNMethod_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp"}],"sha":"0c5ab1c601d48f626f400d5a110f0ede6717dd4f"},{"commit":{"message":"merge"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"}],"sha":"1de88ec52d570caee2a3fb421fdea252ba282db7"},{"commit":{"message":"Add strig_equals patch to prevent misaligned access there"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"}],"sha":"0335cd56b9ad101355b1b477938cbd741b964066"},{"commit":{"message":"rename helper function, add assertion"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"}],"sha":"90e78e0dac3b773558bff75b52dd381924ec6ee8"},{"commit":{"message":"Move misaligned lwu into macroAssembler_riscv.cpp"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"}],"sha":"26d60ccba2fbcab3b2db3cae0d64be956147d56f"},{"commit":{"message":"simplify sipush and branch"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"5a5217e085ca10a1a9593cd70b088ca6cc345ee9"},{"commit":{"message":"simpify branching in branch opcodes"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"33d5451aa9a66bdeeabe647772e9e9202b2791dc"},{"commit":{"message":"Remove unused macros"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"}],"sha":"8b9aa84c69326995dd8e63ea7f3c7ee61bc168b8"},{"commit":{"message":"spaces"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"8323870dc3c838d5ef5db34b789f6789473a4c1c"},{"commit":{"message":"fix nits"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"adbf3cbd83fcf45816cca74986906514dc6329e3"},{"commit":{"message":"clean up comments"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp"}],"sha":"00cfe09a2f2f8ea96a98203d2b8b0a9ceecfef32"},{"commit":{"message":"refix branch in interp"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"f2e0262cb6ba2ba17891176a4e12fa4b0e921e9c"},{"commit":{"message":"inline load_unsigned_short_at_bcp"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"6ed7262361e8e09bff962d726671047fd8a1d14c"},{"commit":{"message":"Fix risc-v"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"}],"sha":"5ba0436d22eb83d087bfffd9a240846bf98bba03"},{"commit":{"message":"merge"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/relocInfo_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"9a4ca3ef00b3a1009b587d2cbb321cfca510fd31"},{"commit":{"message":"revert codebuffer change in favor of upstream changes"},"files":[],"sha":"c33740a86778a777978d4010704e0187aa6846b0"},{"commit":{"message":"Fix issue with index being t1 in get_cache_index_at_bcp"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"7d6d2506780dc98ae1cf5533afffa79a481aee78"},{"commit":{"message":"Prevent misalligned memory access in code writer and Template Interp"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetNMethod_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp"},{"filename":"src\/hotspot\/cpu\/riscv\/relocInfo_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp"},{"filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp"}],"sha":"18d7f399ce1bc213b2495411193938d914d3f616"}]