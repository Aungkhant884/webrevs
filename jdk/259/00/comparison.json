{"files":[{"patch":"@@ -58,7 +58,0 @@\n-#ifdef TARGET_COMPILER_gcc\n-#ifdef ARM32\n-#undef BREAKPOINT\n-#define BREAKPOINT __asm__ volatile (\"bkpt\")\n-#endif\n-#endif\n-\n","filename":"src\/hotspot\/cpu\/arm\/globalDefinitions_arm.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,11 +28,0 @@\n-\/\/ Provide BREAKPOINT macro for requesting stop in the debugger.\n-\n-\/\/ We presently only have one non-default definition, so it's not\n-\/\/ worth going through the COMPILER_HEADER() dispatch, with all\n-\/\/ non-visCPP files being empty.\n-#ifdef TARGET_COMPILER_visCPP\n-#ifndef _WIN64\n-#define BREAKPOINT __asm { int 3 }\n-#endif \/\/ _WIN64\n-#endif \/\/  TARGET_COMPILER_visCPP\n-\n","filename":"src\/hotspot\/share\/utilities\/breakpoint.hpp","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"}]}