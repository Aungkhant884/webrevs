{"files":[{"patch":"@@ -65,12 +65,0 @@\n-template <typename T, void (T::*F)(ZRootsIteratorClosure*)>\n-ZSerialOopsDo<T, F>::ZSerialOopsDo(T* iter) :\n-    _iter(iter),\n-    _claimed(false) {}\n-\n-template <typename T, void (T::*F)(ZRootsIteratorClosure*)>\n-void ZSerialOopsDo<T, F>::oops_do(ZRootsIteratorClosure* cl) {\n-  if (!_claimed && Atomic::cmpxchg(&_claimed, false, true) == false) {\n-    (_iter->*F)(cl);\n-  }\n-}\n-\n@@ -104,15 +92,0 @@\n-template <typename T, void (T::*F)(BoolObjectClosure*, ZRootsIteratorClosure*)>\n-ZParallelWeakOopsDo<T, F>::ZParallelWeakOopsDo(T* iter) :\n-    _iter(iter),\n-    _completed(false) {}\n-\n-template <typename T, void (T::*F)(BoolObjectClosure*, ZRootsIteratorClosure*)>\n-void ZParallelWeakOopsDo<T, F>::weak_oops_do(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl) {\n-  if (!_completed) {\n-    (_iter->*F)(is_alive, cl);\n-    if (!_completed) {\n-      _completed = true;\n-    }\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.cpp","additions":0,"deletions":27,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-typedef OopStorage::ParState<true \/* concurrent *\/, false \/* is_const *\/> ZOopStorageIterator;\n@@ -42,11 +41,0 @@\n-template <typename T, void (T::*F)(ZRootsIteratorClosure*)>\n-class ZSerialOopsDo {\n-private:\n-  T* const      _iter;\n-  volatile bool _claimed;\n-\n-public:\n-  ZSerialOopsDo(T* iter);\n-  void oops_do(ZRootsIteratorClosure* cl);\n-};\n-\n@@ -75,11 +63,0 @@\n-template <typename T, void (T::*F)(BoolObjectClosure*, ZRootsIteratorClosure*)>\n-class ZParallelWeakOopsDo {\n-private:\n-  T* const      _iter;\n-  volatile bool _completed;\n-\n-public:\n-  ZParallelWeakOopsDo(T* iter);\n-  void weak_oops_do(BoolObjectClosure* is_alive, ZRootsIteratorClosure* cl);\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zRootsIterator.hpp","additions":0,"deletions":23,"binary":false,"changes":23,"status":"modified"}]}