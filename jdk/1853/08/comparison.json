{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-            byte bytes[] = getBytes(new BufferedInputStream(this));\n+            byte[] bytes = new BufferedInputStream(this).readAllBytes();\n@@ -105,12 +105,0 @@\n-    private byte[] getBytes(InputStream is)\n-        throws IOException\n-    {\n-        byte[] buffer = new byte[8192];\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream(2048);\n-        int n;\n-        while ((n = is.read(buffer, 0, buffer.length)) != -1) {\n-            baos.write(buffer, 0, n);\n-        }\n-        return baos.toByteArray();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarInputStream.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1220,1 +1220,0 @@\n-        int mtu = 1500;\n@@ -1230,7 +1229,2 @@\n-            InputStream remote = createInputStream(s.getInputStream());\n-            byte[] buf = new byte[mtu * 10];\n-            int l;\n-            while ((l = remote.read(buf)) >= 0) {\n-                if (l > 0) {\n-                    local.write(buf, 0, l);\n-                }\n+            try (InputStream remote = createInputStream(s.getInputStream())) {\n+                remote.transferTo(local);\n@@ -1238,1 +1232,0 @@\n-            remote.close();\n@@ -1242,7 +1235,2 @@\n-            InputStream remote = createInputStream(s.getInputStream());\n-            byte[] buf = new byte[mtu * 10];\n-            int l;\n-            while ((l = remote.read(buf)) >= 0) {\n-                if (l > 0) {\n-                    local.write(buf, 0, l);\n-                }\n+            try (InputStream remote = createInputStream(s.getInputStream())) {\n+                remote.transferTo(local);\n@@ -1250,1 +1238,0 @@\n-            remote.close();\n@@ -1347,1 +1334,0 @@\n-        int mtu = 1500;\n@@ -1350,7 +1336,2 @@\n-            OutputStream remote = createOutputStream(s.getOutputStream());\n-            byte[] buf = new byte[mtu * 10];\n-            int l;\n-            while ((l = local.read(buf)) >= 0) {\n-                if (l > 0) {\n-                    remote.write(buf, 0, l);\n-                }\n+            try (OutputStream remote = createOutputStream(s.getOutputStream())) {\n+                local.transferTo(remote);\n@@ -1358,1 +1339,0 @@\n-            remote.close();\n@@ -1376,1 +1356,0 @@\n-        int mtu = 1500;\n@@ -1378,7 +1357,2 @@\n-        OutputStream remote = createOutputStream(s.getOutputStream());\n-        byte[] buf = new byte[mtu * 10];\n-        int l;\n-        while ((l = local.read(buf)) >= 0) {\n-            if (l > 0) {\n-                remote.write(buf, 0, l);\n-            }\n+        try (OutputStream remote = createOutputStream(s.getOutputStream())) {\n+            local.transferTo(remote);\n@@ -1386,1 +1360,0 @@\n-        remote.close();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ftp\/impl\/FtpClient.java","additions":9,"deletions":36,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,18 +117,7 @@\n-            try {\n-                OutputStream os = new FileOutputStream(ofn);\n-                byte buf[] = new byte[2048];\n-                int i = 0;\n-                try {\n-                    while ((i = is.read(buf)) >= 0) {\n-                        os.write(buf, 0, i);\n-                    }\n-                } catch(IOException e) {\n-                  \/\/System.err.println(\"Exception in write loop \" + i);\n-                  \/\/e.printStackTrace();\n-                } finally {\n-                    os.close();\n-                    is.close();\n-                }\n-            } catch(IOException e) {\n-              \/\/System.err.println(\"Exception in input or output stream\");\n-              \/\/e.printStackTrace();\n+            try (OutputStream os = new FileOutputStream(ofn)) {\n+                is.transferTo(os);\n+            } catch (IOException e) {\n+                \/\/System.err.println(\"Exception in input or output stream\");\n+                \/\/e.printStackTrace();\n+            } finally {\n+                is.close();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MimeLauncher.java","additions":8,"deletions":19,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -188,1 +187,1 @@\n-            DerInputStream dis = new DerInputStream(readAllBytes(is));\n+            DerInputStream dis = new DerInputStream(is.readAllBytes());\n@@ -231,1 +230,1 @@\n-                is = new ByteArrayInputStream(readAllBytes(is));\n+                is = new ByteArrayInputStream(is.readAllBytes());\n@@ -254,16 +253,0 @@\n-    \/*\n-     * Reads the entire contents of an InputStream into a byte array.\n-     *\n-     * @param is the InputStream to read from\n-     * @return the bytes read from the InputStream\n-     *\/\n-    private static byte[] readAllBytes(InputStream is) throws IOException {\n-        byte[] buffer = new byte[8192];\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream(2048);\n-        int n;\n-        while ((n = is.read(buffer)) != -1) {\n-            baos.write(buffer, 0, n);\n-        }\n-        return baos.toByteArray();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/X509CertPath.java","additions":3,"deletions":20,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2457,7 +2457,1 @@\n-                ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-                byte[] b = new byte[4096];\n-                while (true) {\n-                    int len = in.read(b);\n-                    if (len < 0) break;\n-                    bout.write(b, 0, len);\n-                }\n+                byte[] bytes = in.readAllBytes();\n@@ -2465,1 +2459,1 @@\n-                        new ByteArrayInputStream(bout.toByteArray()));\n+                        new ByteArrayInputStream(bytes));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+import java.nio.file.StandardCopyOption;\n@@ -1147,10 +1148,1 @@\n-                     FileOutputStream fileOutput = new FileOutputStream(file);\n-                     try {\n-                         byte[] buf = new byte[4096];\n-                         int n;\n-                         while ((n = is.read(buf)) >= 0) {\n-                            fileOutput.write(buf, 0, n);\n-                         }\n-                     } finally {\n-                         fileOutput.close();\n-                     }\n+                     Files.copy(is, file.toPath(), StandardCopyOption.REPLACE_EXISTING);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLet.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,2 +29,0 @@\n-import java.io.FileInputStream;\n-import java.io.FileOutputStream;\n@@ -32,3 +30,0 @@\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.Writer;\n@@ -36,0 +31,2 @@\n+import java.nio.file.Files;\n+import java.nio.file.StandardCopyOption;\n@@ -110,7 +107,2 @@\n-                try (InputStream fin = new FileInputStream(src);\n-                     OutputStream fout = new FileOutputStream(dest)) {\n-                    byte[] buf = new byte[1024];\n-                    int len;\n-                    while ((len = fin.read(buf)) > 0){\n-                        fout.write(buf, 0, len);\n-                    }\n+                try {\n+                    Files.copy(src.toPath(), dest.toPath(), StandardCopyOption.REPLACE_EXISTING);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/CopyFile.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -80,1 +79,0 @@\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n@@ -82,5 +80,2 @@\n-        InputStream is = SecuritySupport.getResourceAsStream(name);\n-        int bytesRead;\n-        byte[] buffer = new byte[16384];\n-        while ((bytesRead = is.read(buffer, 0, buffer.length)) != -1) {\n-            baos.write(buffer, 0, bytesRead);\n+        try (InputStream is = SecuritySupport.getResourceAsStream(name)) {\n+            return is.readAllBytes();\n@@ -88,3 +83,0 @@\n-        baos.flush();\n-        is.close();\n-        return baos.toByteArray();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/instrument\/JIClassInstrumentation.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -970,5 +970,1 @@\n-                byte[] buf = new byte[8192];\n-                int n;\n-                while ((n = is.read(buf)) != -1) {\n-                    os.write(buf, 0, n);\n-                }\n+                is.transferTo(os);\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipPath.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}