{"files":[{"patch":"@@ -990,1 +990,5 @@\n-            stream.transferTo(data_chunk);\n+            byte[] buff = new byte[1024];\n+            int ret;\n+            while ((ret = stream.read(buff)) != -1) {\n+                data_chunk.write(buff, 0, ret);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/DLSSoundbank.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,2 @@\n+    private static final int BUFFER_SIZE = 16384; \/\/ number of bytes written each time to the source data line\n+\n@@ -360,3 +362,13 @@\n-        int totalBytesRead;\n-        try (as) {\n-            totalBytesRead = (int) as.transferTo(baos);\n+        byte[] buffer = new byte[16384];\n+        int bytesRead = 0;\n+        int totalBytesRead = 0;\n+\n+        \/\/ this loop may throw an IOException\n+        while( true ) {\n+            bytesRead = as.read(buffer, 0, buffer.length);\n+            if (bytesRead <= 0) {\n+                as.close();\n+                break;\n+            }\n+            totalBytesRead += bytesRead;\n+            baos.write(buffer, 0, bytesRead);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/JavaSoundAudioClip.java","additions":16,"deletions":4,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -204,1 +204,5 @@\n-                is.transferTo(out);\n+                byte[] buff = new byte[1024];\n+                int ret;\n+                while ((ret = is.read(buff)) != -1) {\n+                    out.write(buff, 0, ret);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/ModelByteBuffer.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,0 +71,1 @@\n+    private static final int bufferSize = 16384;  \/\/ buffersize for write\n@@ -119,0 +120,5 @@\n+        byte [] buffer = null;\n+\n+        int bytesRead = 0;\n+        long bytesWritten = 0;\n+\n@@ -124,1 +130,6 @@\n-        long bytesWritten = fileStream.transferTo(out);\n+        buffer = new byte[bufferSize];\n+\n+        while( (bytesRead = fileStream.read( buffer )) >= 0 ) {\n+            out.write( buffer, 0, bytesRead );\n+            bytesWritten += bytesRead;\n+        }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/StandardMidiFileWriter.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,5 @@\n-            stream.transferTo(data_chunk);\n+            byte[] buff = new byte[1024];\n+            int len;\n+            while ((len = stream.read(buff, 0, buff.length)) != -1) {\n+                data_chunk.write(buff, 0, len);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/WaveFloatFileWriter.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2083,2 +2083,8 @@\n-                        try (BufferedInputStream in = new BufferedInputStream(resource)) {\n-                            return in.readAllBytes();\n+                        BufferedInputStream in =\n+                            new BufferedInputStream(resource);\n+                        ByteArrayOutputStream out =\n+                            new ByteArrayOutputStream(1024);\n+                        byte[] buffer = new byte[1024];\n+                        int n;\n+                        while ((n = in.read(buffer)) > 0) {\n+                            out.write(buffer, 0, n);\n@@ -2086,0 +2092,4 @@\n+                        in.close();\n+                        out.flush();\n+                        buffer = out.toByteArray();\n+                        return buffer;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicLookAndFeel.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,12 @@\n-        in.transferTo(this);\n+        byte[] buf;\n+        int count;\n+\n+        buf = new byte[16384];\n+\n+        while(true) {\n+            count = in.read(buf);\n+            if (count < 0)\n+                break;\n+\n+            this.write(buf, 0, count);\n+        }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/rtf\/AbstractFilter.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -1981,1 +1981,10 @@\n-        return str.readAllBytes();\n+        try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n+            int len = 0;\n+            byte[] buf = new byte[8192];\n+\n+            while ((len = str.read(buf)) != -1) {\n+                baos.write(buf, 0, len);\n+            }\n+\n+            return baos.toByteArray();\n+        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/datatransfer\/DataTransferer.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,0 +61,1 @@\n+import java.io.ByteArrayOutputStream;\n@@ -1756,2 +1757,8 @@\n-                            try (BufferedInputStream in = new BufferedInputStream(resource)) {\n-                                return in.readAllBytes();\n+                try (BufferedInputStream in\n+                        = new BufferedInputStream(resource);\n+                        ByteArrayOutputStream out\n+                        = new ByteArrayOutputStream(1024)) {\n+                            byte[] buffer = new byte[1024];\n+                            int n;\n+                            while ((n = in.read(buffer)) > 0) {\n+                                out.write(buffer, 0, n);\n@@ -1759,0 +1766,3 @@\n+                            out.flush();\n+                            return out.toByteArray();\n+                }\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/SwingUtilities2.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -599,3 +599,12 @@\n-            try (BufferedInputStream bin = new BufferedInputStream(instream);\n-                 BufferedOutputStream bout = new BufferedOutputStream(output)) {\n-                bin.transferTo(bout);\n+            BufferedInputStream bin = new BufferedInputStream(instream);\n+            BufferedOutputStream bout = new BufferedOutputStream(output);\n+            byte[] buffer = new byte[1024];\n+            int bread = 0;\n+\n+            try {\n+                while ((bread = bin.read(buffer)) >= 0) {\n+                    bout.write(buffer, 0, bread);\n+                }\n+                bin.close();\n+                bout.flush();\n+                bout.close();\n@@ -604,1 +613,1 @@\n-                throw new PrintException(e);\n+                throw new PrintException (e);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintJob.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.io.BufferedOutputStream;\n@@ -31,0 +32,3 @@\n+import java.io.FileOutputStream;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n@@ -33,0 +37,1 @@\n+import java.io.FileNotFoundException;\n@@ -35,2 +40,0 @@\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n@@ -42,0 +45,1 @@\n+import javax.print.DocPrintJob;\n@@ -49,0 +53,1 @@\n+import javax.print.attribute.AttributeSet;\n@@ -435,1 +440,12 @@\n-                    Files.copy(instream, Path.of(mDestination));\n+                    FileOutputStream fos = new FileOutputStream(mDestination);\n+                    byte []buffer = new byte[1024];\n+                    int cread;\n+\n+                    while ((cread = instream.read(buffer, 0, buffer.length)) >=0) {\n+                        fos.write(buffer, 0, cread);\n+                    }\n+                    fos.flush();\n+                    fos.close();\n+                } catch (FileNotFoundException fnfe) {\n+                    notifyEvent(PrintJobEvent.JOB_FAILED);\n+                    throw new PrintException(fnfe.toString());\n","filename":"src\/java.desktop\/windows\/classes\/sun\/print\/Win32PrintJob.java","additions":20,"deletions":4,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1,4 +1,4 @@\n-# test hosts file for internal NameService \n-10.2.3.4 testHost.testDomain\n-10.5.6.7 testHost.testDomain\n-10.8.9.10 \n+# test hosts file for internal NameService \r\n+10.2.3.4 testHost.testDomain\r\n+10.5.6.7 testHost.testDomain\r\n+10.8.9.10 \r\n","filename":"test\/jdk\/java\/net\/InetAddress\/TestHosts","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-129.156.220.219 theclub\n-10.5.18.21 luster\n+129.156.220.219 theclub\r\n+10.5.18.21 luster\r\n","filename":"test\/jdk\/sun\/net\/InetAddress\/nameservice\/simple\/CacheTestHosts","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}