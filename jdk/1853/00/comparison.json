{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-            byte bytes[] = getBytes(new BufferedInputStream(this));\n+            byte[] bytes = new BufferedInputStream(this).readAllBytes();\n@@ -105,12 +105,0 @@\n-    private byte[] getBytes(InputStream is)\n-        throws IOException\n-    {\n-        byte[] buffer = new byte[8192];\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream(2048);\n-        int n;\n-        while ((n = is.read(buffer, 0, buffer.length)) != -1) {\n-            baos.write(buffer, 0, n);\n-        }\n-        return baos.toByteArray();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarInputStream.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -802,5 +802,1 @@\n-                byte[] buf = new byte[8192];\n-                int n;\n-                while ((n = is.read(buf)) != -1) {\n-                    os.write(buf, 0, n);\n-                }\n+                is.transferTo(os);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jrtfs\/JrtPath.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -61,1 +61,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -344,8 +343,2 @@\n-        try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {\n-            byte[] data = new byte[INPUT_STREAM_DATA_CHUNK_SIZE];\n-            int bytesRead;\n-            while ((bytesRead = inputStream.read(data, 0, data.length)) != -1) {\n-                outputStream.write(data, 0, bytesRead);\n-            }\n-            outputStream.flush();\n-            return outputStream.toByteArray();\n+        try {\n+            return inputStream.readAllBytes();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/ClassReader.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1220,1 +1220,0 @@\n-        int mtu = 1500;\n@@ -1230,7 +1229,2 @@\n-            InputStream remote = createInputStream(s.getInputStream());\n-            byte[] buf = new byte[mtu * 10];\n-            int l;\n-            while ((l = remote.read(buf)) >= 0) {\n-                if (l > 0) {\n-                    local.write(buf, 0, l);\n-                }\n+            try (InputStream remote = createInputStream(s.getInputStream())) {\n+                remote.transferTo(local);\n@@ -1238,1 +1232,0 @@\n-            remote.close();\n@@ -1242,7 +1235,2 @@\n-            InputStream remote = createInputStream(s.getInputStream());\n-            byte[] buf = new byte[mtu * 10];\n-            int l;\n-            while ((l = remote.read(buf)) >= 0) {\n-                if (l > 0) {\n-                    local.write(buf, 0, l);\n-                }\n+            try (InputStream remote = createInputStream(s.getInputStream())) {\n+                remote.transferTo(local);\n@@ -1250,1 +1238,0 @@\n-            remote.close();\n@@ -1347,1 +1334,0 @@\n-        int mtu = 1500;\n@@ -1350,7 +1336,2 @@\n-            OutputStream remote = createOutputStream(s.getOutputStream());\n-            byte[] buf = new byte[mtu * 10];\n-            int l;\n-            while ((l = local.read(buf)) >= 0) {\n-                if (l > 0) {\n-                    remote.write(buf, 0, l);\n-                }\n+            try (OutputStream remote = createOutputStream(s.getOutputStream())) {\n+                local.transferTo(remote);\n@@ -1358,1 +1339,0 @@\n-            remote.close();\n@@ -1376,1 +1356,0 @@\n-        int mtu = 1500;\n@@ -1378,7 +1357,2 @@\n-        OutputStream remote = createOutputStream(s.getOutputStream());\n-        byte[] buf = new byte[mtu * 10];\n-        int l;\n-        while ((l = local.read(buf)) >= 0) {\n-            if (l > 0) {\n-                remote.write(buf, 0, l);\n-            }\n+        try (OutputStream remote = createOutputStream(s.getOutputStream())) {\n+            local.transferTo(remote);\n@@ -1386,1 +1360,0 @@\n-        remote.close();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/ftp\/impl\/FtpClient.java","additions":8,"deletions":35,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 1998, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,18 +117,7 @@\n-            try {\n-                OutputStream os = new FileOutputStream(ofn);\n-                byte buf[] = new byte[2048];\n-                int i = 0;\n-                try {\n-                    while ((i = is.read(buf)) >= 0) {\n-                        os.write(buf, 0, i);\n-                    }\n-                } catch(IOException e) {\n-                  \/\/System.err.println(\"Exception in write loop \" + i);\n-                  \/\/e.printStackTrace();\n-                } finally {\n-                    os.close();\n-                    is.close();\n-                }\n-            } catch(IOException e) {\n-              \/\/System.err.println(\"Exception in input or output stream\");\n-              \/\/e.printStackTrace();\n+            try (OutputStream os = new FileOutputStream(ofn)) {\n+                is.transferTo(os);\n+            } catch (IOException e) {\n+                \/\/System.err.println(\"Exception in input or output stream\");\n+                \/\/e.printStackTrace();\n+            } finally {\n+                is.close();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MimeLauncher.java","additions":8,"deletions":19,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -188,1 +187,1 @@\n-            DerInputStream dis = new DerInputStream(readAllBytes(is));\n+            DerInputStream dis = new DerInputStream(is.readAllBytes());\n@@ -231,1 +230,1 @@\n-                is = new ByteArrayInputStream(readAllBytes(is));\n+                is = new ByteArrayInputStream(is.readAllBytes());\n@@ -254,16 +253,0 @@\n-    \/*\n-     * Reads the entire contents of an InputStream into a byte array.\n-     *\n-     * @param is the InputStream to read from\n-     * @return the bytes read from the InputStream\n-     *\/\n-    private static byte[] readAllBytes(InputStream is) throws IOException {\n-        byte[] buffer = new byte[8192];\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream(2048);\n-        int n;\n-        while ((n = is.read(buffer)) != -1) {\n-            baos.write(buffer, 0, n);\n-        }\n-        return baos.toByteArray();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/X509CertPath.java","additions":2,"deletions":19,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2457,7 +2457,1 @@\n-                ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-                byte[] b = new byte[4096];\n-                while (true) {\n-                    int len = in.read(b);\n-                    if (len < 0) break;\n-                    bout.write(b, 0, len);\n-                }\n+                byte[] bytes = in.readAllBytes();\n@@ -2465,1 +2459,1 @@\n-                        new ByteArrayInputStream(bout.toByteArray()));\n+                        new ByteArrayInputStream(bytes));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -990,5 +990,1 @@\n-            byte[] buff = new byte[1024];\n-            int ret;\n-            while ((ret = stream.read(buff)) != -1) {\n-                data_chunk.write(buff, 0, ret);\n-            }\n+            stream.transferTo(data_chunk);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/DLSSoundbank.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,2 +63,0 @@\n-    private static final int BUFFER_SIZE = 16384; \/\/ number of bytes written each time to the source data line\n-\n@@ -362,13 +360,3 @@\n-        byte[] buffer = new byte[16384];\n-        int bytesRead = 0;\n-        int totalBytesRead = 0;\n-\n-        \/\/ this loop may throw an IOException\n-        while( true ) {\n-            bytesRead = as.read(buffer, 0, buffer.length);\n-            if (bytesRead <= 0) {\n-                as.close();\n-                break;\n-            }\n-            totalBytesRead += bytesRead;\n-            baos.write(buffer, 0, bytesRead);\n+        int totalBytesRead;\n+        try (as) {\n+            totalBytesRead = (int) as.transferTo(baos);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/JavaSoundAudioClip.java","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -204,5 +204,1 @@\n-                byte[] buff = new byte[1024];\n-                int ret;\n-                while ((ret = is.read(buff)) != -1) {\n-                    out.write(buff, 0, ret);\n-                }\n+                is.transferTo(out);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/ModelByteBuffer.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,0 @@\n-    private static final int bufferSize = 16384;  \/\/ buffersize for write\n@@ -120,5 +119,0 @@\n-        byte [] buffer = null;\n-\n-        int bytesRead = 0;\n-        long bytesWritten = 0;\n-\n@@ -130,6 +124,1 @@\n-        buffer = new byte[bufferSize];\n-\n-        while( (bytesRead = fileStream.read( buffer )) >= 0 ) {\n-            out.write( buffer, 0, bytesRead );\n-            bytesWritten += bytesRead;\n-        }\n+        long bytesWritten = fileStream.transferTo(out);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/StandardMidiFileWriter.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,5 +83,1 @@\n-            byte[] buff = new byte[1024];\n-            int len;\n-            while ((len = stream.read(buff, 0, buff.length)) != -1) {\n-                data_chunk.write(buff, 0, len);\n-            }\n+            stream.transferTo(data_chunk);\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/media\/sound\/WaveFloatFileWriter.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2083,8 +2083,2 @@\n-                        BufferedInputStream in =\n-                            new BufferedInputStream(resource);\n-                        ByteArrayOutputStream out =\n-                            new ByteArrayOutputStream(1024);\n-                        byte[] buffer = new byte[1024];\n-                        int n;\n-                        while ((n = in.read(buffer)) > 0) {\n-                            out.write(buffer, 0, n);\n+                        try (BufferedInputStream in = new BufferedInputStream(resource)) {\n+                            return in.readAllBytes();\n@@ -2092,4 +2086,0 @@\n-                        in.close();\n-                        out.flush();\n-                        buffer = out.toByteArray();\n-                        return buffer;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicLookAndFeel.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,12 +96,1 @@\n-        byte[] buf;\n-        int count;\n-\n-        buf = new byte[16384];\n-\n-        while(true) {\n-            count = in.read(buf);\n-            if (count < 0)\n-                break;\n-\n-            this.write(buf, 0, count);\n-        }\n+        in.transferTo(this);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/rtf\/AbstractFilter.java","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -1981,10 +1981,1 @@\n-        try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n-            int len = 0;\n-            byte[] buf = new byte[8192];\n-\n-            while ((len = str.read(buf)) != -1) {\n-                baos.write(buf, 0, len);\n-            }\n-\n-            return baos.toByteArray();\n-        }\n+        return str.readAllBytes();\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/datatransfer\/DataTransferer.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -1757,8 +1756,2 @@\n-                try (BufferedInputStream in\n-                        = new BufferedInputStream(resource);\n-                        ByteArrayOutputStream out\n-                        = new ByteArrayOutputStream(1024)) {\n-                            byte[] buffer = new byte[1024];\n-                            int n;\n-                            while ((n = in.read(buffer)) > 0) {\n-                                out.write(buffer, 0, n);\n+                            try (BufferedInputStream in = new BufferedInputStream(resource)) {\n+                                return in.readAllBytes();\n@@ -1766,3 +1759,0 @@\n-                            out.flush();\n-                            return out.toByteArray();\n-                }\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/SwingUtilities2.java","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -599,12 +599,3 @@\n-            BufferedInputStream bin = new BufferedInputStream(instream);\n-            BufferedOutputStream bout = new BufferedOutputStream(output);\n-            byte[] buffer = new byte[1024];\n-            int bread = 0;\n-\n-            try {\n-                while ((bread = bin.read(buffer)) >= 0) {\n-                    bout.write(buffer, 0, bread);\n-                }\n-                bin.close();\n-                bout.flush();\n-                bout.close();\n+            try (BufferedInputStream bin = new BufferedInputStream(instream);\n+                 BufferedOutputStream bout = new BufferedOutputStream(output)) {\n+                bin.transferTo(bout);\n@@ -613,1 +604,1 @@\n-                throw new PrintException (e);\n+                throw new PrintException(e);\n","filename":"src\/java.desktop\/unix\/classes\/sun\/print\/UnixPrintJob.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -439,10 +439,2 @@\n-                try {\n-                    FileOutputStream fos = new FileOutputStream(mDestination);\n-                    byte []buffer = new byte[1024];\n-                    int cread;\n-\n-                    while ((cread = instream.read(buffer, 0, buffer.length)) >=0) {\n-                        fos.write(buffer, 0, cread);\n-                    }\n-                    fos.flush();\n-                    fos.close();\n+                try (FileOutputStream fos = new FileOutputStream(mDestination)) {\n+                    instream.transferTo(fos);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/print\/Win32PrintJob.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -1147,9 +1147,2 @@\n-                     FileOutputStream fileOutput = new FileOutputStream(file);\n-                     try {\n-                         byte[] buf = new byte[4096];\n-                         int n;\n-                         while ((n = is.read(buf)) >= 0) {\n-                            fileOutput.write(buf, 0, n);\n-                         }\n-                     } finally {\n-                         fileOutput.close();\n+                     try (FileOutputStream fileOutput = new FileOutputStream(file)) {\n+                         is.transferTo(fileOutput);\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLet.java","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -509,2 +509,0 @@\n-            byte[] buffer = new byte[4 * 1024];\n-            int bytesread = 0;\n@@ -512,3 +510,1 @@\n-                while ((bytesread = inputOctetStreamProxy.read(buffer)) != -1) {\n-                    diOs.write(buffer, 0, bytesread);\n-                }\n+                inputOctetStreamProxy.transferTo(diOs);\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/signature\/XMLSignatureInput.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,15 +60,1 @@\n-        byte refBytes[] = null;\n-\n-        try (InputStream inputStream = Files.newInputStream(Paths.get(fileName));\n-            UnsyncByteArrayOutputStream baos = new UnsyncByteArrayOutputStream()) {\n-            byte buf[] = new byte[1024];\n-            int len;\n-\n-            while ((len = inputStream.read(buf)) > 0) {\n-                baos.write(buf, 0, len);\n-            }\n-\n-            refBytes = baos.toByteArray();\n-        }\n-\n-        return refBytes;\n+        return Files.readAllBytes(Paths.get(fileName));\n@@ -106,8 +92,1 @@\n-        try (UnsyncByteArrayOutputStream baos = new UnsyncByteArrayOutputStream()) {\n-            byte buf[] = new byte[4 * 1024];\n-            int len;\n-            while ((len = inputStream.read(buf)) > 0) {\n-                baos.write(buf, 0, len);\n-            }\n-            return baos.toByteArray();\n-        }\n+        return inputStream.readAllBytes();\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/JavaUtils.java","additions":2,"deletions":23,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -25,1 +25,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -134,10 +133,1 @@\n-            try (ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-                InputStream inputStream = urlConnection.getInputStream()) {\n-                byte[] buf = new byte[4096];\n-                int read = 0;\n-                int summarized = 0;\n-\n-                while ((read = inputStream.read(buf)) >= 0) {\n-                    baos.write(buf, 0, read);\n-                    summarized += read;\n-                }\n+            try (InputStream inputStream = urlConnection.getInputStream()) {\n@@ -145,1 +135,2 @@\n-                LOG.debug(\"Fetched {} bytes from URI {}\", summarized, uriNew.toString());\n+                byte[] bytes = inputStream.readAllBytes();\n+                LOG.debug(\"Fetched {} bytes from URI {}\", bytes.length, uriNew.toString());\n@@ -147,1 +138,1 @@\n-                XMLSignatureInput result = new XMLSignatureInput(baos.toByteArray());\n+                XMLSignatureInput result = new XMLSignatureInput(bytes);\n","filename":"src\/java.xml.crypto\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/security\/utils\/resolver\/implementations\/ResolverDirectHTTP.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -50,14 +49,1 @@\n-        try (ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n-            byte[] buf = new byte[1024];\n-            while (true) {\n-                int read = is.read(buf);\n-                if (read == -1) { \/\/ EOF\n-                    break;\n-                }\n-                baos.write(buf, 0, read);\n-                if (read < 1024) {\n-                    break;\n-                }\n-            }\n-            return baos.toByteArray();\n-        }\n+        return is.readAllBytes();\n","filename":"src\/java.xml.crypto\/share\/classes\/org\/jcp\/xml\/dsig\/internal\/dom\/Utils.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -112,5 +112,1 @@\n-                    byte[] buf = new byte[1024];\n-                    int len;\n-                    while ((len = fin.read(buf)) > 0){\n-                        fout.write(buf, 0, len);\n-                    }\n+                    fin.transferTo(fout);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/sjavac\/CopyFile.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.ByteArrayOutputStream;\n@@ -80,1 +79,0 @@\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n@@ -82,5 +80,2 @@\n-        InputStream is = SecuritySupport.getResourceAsStream(name);\n-        int bytesRead;\n-        byte[] buffer = new byte[16384];\n-        while ((bytesRead = is.read(buffer, 0, buffer.length)) != -1) {\n-            baos.write(buffer, 0, bytesRead);\n+        try (InputStream is = SecuritySupport.getResourceAsStream(name)) {\n+            return is.readAllBytes();\n@@ -88,3 +83,0 @@\n-        baos.flush();\n-        is.close();\n-        return baos.toByteArray();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/instrument\/JIClassInstrumentation.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -970,5 +970,1 @@\n-                byte[] buf = new byte[8192];\n-                int n;\n-                while ((n = is.read(buf)) != -1) {\n-                    os.write(buf, 0, n);\n-                }\n+                is.transferTo(os);\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipPath.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}