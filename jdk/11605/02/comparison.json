{"files":[{"patch":"@@ -441,0 +441,3 @@\n+                if (minOnScreenInsets == null) {\n+                    minOnScreenInsets = new Insets(0, 0, 0, 0);\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicDesktopPaneUI.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,133 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 6603771\n+ * @summary  Verifies Nimbus L&F: Ctrl+F7 keybinding for Jinternal Frame throws a NPE\n+ * @run main JInternalFrameTest\n+ *\/\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JFrame;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JPanel;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class JInternalFrameTest {\n+    static JFrame jFrame;\n+    static JInternalFrame iFrame;\n+    static boolean isAquaLAF;\n+    static int controlKey;\n+\n+    volatile static boolean failed = false;\n+\n+     private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        EventQueue.invokeAndWait(\n+            () -> Thread.currentThread().setUncaughtExceptionHandler(\n+                (t, e) -> {\n+                    failed = true;\n+                }\n+        ));\n+        for (UIManager.LookAndFeelInfo laf :\n+                 UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing L&F: \" + laf.getClassName());\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            try {\n+                SwingUtilities.invokeAndWait(() -> createUI());\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+\n+                Point pt = iFrame.getLocationOnScreen();\n+                Rectangle dim = iFrame.getBounds();\n+                robot.mouseMove(pt.x + dim.width\/3, pt.y+10);\n+                robot.waitForIdle();\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                robot.keyPress(KeyEvent.VK_CONTROL);\n+                robot.keyPress(KeyEvent.VK_F7);\n+                robot.keyRelease(KeyEvent.VK_F7);\n+                robot.keyRelease(KeyEvent.VK_CONTROL);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                robot.keyPress(KeyEvent.VK_UP);\n+                robot.keyRelease(KeyEvent.VK_UP);\n+                robot.waitForIdle();\n+                robot.delay(1000);\n+                if (failed) {\n+                    throw new RuntimeException(\"Exception thrown\");\n+                }\n+            } finally {\n+                if (jFrame != null) {\n+                    SwingUtilities.invokeAndWait(() -> jFrame.dispose());\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void createUI() {\n+        jFrame = new JFrame();\n+\n+        JDesktopPane desktopPane = new JDesktopPane();\n+\n+        iFrame =  new JInternalFrame(\"Test\");\n+        iFrame.setTitle(\"InternalFrame\");\n+        iFrame.setLocation(50, 50);\n+        iFrame.setSize(200, 200);\n+        iFrame.setVisible(true);\n+\n+        desktopPane.add(iFrame);\n+\n+        JPanel panel = new JPanel();\n+        panel.setLayout(new BorderLayout());\n+        panel.add(desktopPane, BorderLayout.CENTER);\n+\n+        jFrame.add(panel, BorderLayout.CENTER);\n+        jFrame.setSize(400, 400);\n+        jFrame.setLocationRelativeTo(null);\n+        jFrame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/JInternalFrameTest.java","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"}]}