{"files":[{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -182,0 +182,9 @@\n+.B \\f[CB]Compiler.perfmap\\f[R] (Linux only)\n+Write map file for Linux perf tool.\n+.RS\n+.PP\n+Impact: Low\n+.PP\n+Permission: \\f[CB]java.lang.management.ManagementPermission(monitor)\\f[R]\n+.RE\n+.TP\n@@ -249,0 +258,8 @@\n+.IP \\[bu] 2\n+\\f[CB]\\-parallel\\f[R]: (Optional) Number of parallel threads to use for\n+heap inspection.\n+0 (the default) means let the VM determine the number of threads to use.\n+1 means use one thread (disable parallelism).\n+For any other value the VM will try to use the specified number of\n+threads, but might use fewer.\n+(INT, 0)\n@@ -278,0 +295,8 @@\n+.IP \\[bu] 2\n+\\f[CB]\\-gz\\f[R]: (Optional) If specified, the heap dump is written in\n+gzipped format using the given compression level.\n+1 (recommended) is the fastest, 9 the strongest compression.\n+(INT, 1)\n+.IP \\[bu] 2\n+\\f[CB]\\-overwrite\\f[R]: (Optional) If specified, the dump file will be\n+overwritten if it exists (BOOLEAN, false)\n@@ -444,2 +469,0 @@\n-If \\f[CB]%p\\f[R] and\/or \\f[CB]%t\\f[R] is specified in the filename, it\n-expands to the JVM\\[aq]s PID and the current timestamp, respectively.\n@@ -514,2 +537,0 @@\n-If \\f[CB]%p\\f[R] and\/or \\f[CB]%t\\f[R] is specified in the filename, it\n-expands to the JVM\\[aq]s PID and the current timestamp, respectively.\n@@ -607,2 +628,0 @@\n-If \\f[CB]%p\\f[R] and\/or \\f[CB]%t\\f[R] is specified in the filename, it\n-expands to the JVM\\[aq]s PID and the current timestamp, respectively.\n@@ -754,0 +773,9 @@\n+.B \\f[CB]System.trim_native_heap\\f[R] (Linux only)\n+Attempts to free up memory by trimming the C\\-heap.\n+.RS\n+.PP\n+Impact: Low\n+.PP\n+Permission: \\f[CB]java.lang.management.ManagementPermission(control)\\f[R]\n+.RE\n+.TP\n@@ -769,0 +797,3 @@\n+\\f[CB]\\-e\\f[R]: (Optional) Print extended thread information (BOOLEAN,\n+false)\n+.IP \\[bu] 2\n@@ -773,0 +804,42 @@\n+.B \\f[CB]VM.cds\\f[R] [\\f[I]arguments\\f[R]]\n+Dump a static or dynamic shared archive including all shareable classes.\n+.RS\n+.PP\n+Impact: Medium \\-\\-\\- pause time depends on number of loaded classes\n+.PP\n+Permission: \\f[CB]java.lang.management.ManagementPermission(monitor)\\f[R]\n+.PP\n+\\f[I]arguments\\f[R]:\n+.IP \\[bu] 2\n+\\f[CB]subcmd\\f[R]: \\f[CB]static_dump\\f[R] | \\f[CB]dynamic_dump\\f[R] (STRING,\n+no default value)\n+.IP \\[bu] 2\n+\\f[CB]filename\\f[R]: (Optional) Name of the shared archive to be dumped\n+(STRING, no default value)\n+.RE\n+.TP\n+.B \\f[CB]VM.classloaders\\f[R] [\\f[I]options\\f[R]]\n+Prints classloader hierarchy.\n+.RS\n+.PP\n+Impact: Medium \\-\\-\\- Depends on number of class loaders and classes\n+loaded.\n+.PP\n+Permission: \\f[CB]java.lang.management.ManagementPermission(monitor)\\f[R]\n+.PP\n+The following \\f[I]options\\f[R] must be specified using either\n+\\f[I]key\\f[R] or \\f[I]key\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R] syntax.\n+.PP\n+\\f[I]options\\f[R]:\n+.IP \\[bu] 2\n+\\f[CB]show\\-classes\\f[R]: (Optional) Print loaded classes.\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]verbose\\f[R]: (Optional) Print detailed information.\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]fold\\f[R]: (Optional) Show loaders of the same name and class as\n+one.\n+(BOOLEAN, true)\n+.RE\n+.TP\n@@ -834,0 +907,25 @@\n+.B \\f[CB]VM.events\\f[R] [\\f[I]options\\f[R]]\n+Print VM event logs\n+.RS\n+.PP\n+Impact: Low \\-\\-\\- Depends on event log size.\n+.PP\n+Permission: \\f[CB]java.lang.management.ManagementPermission(monitor)\\f[R]\n+.PP\n+\\f[I]options\\f[R]:\n+.PP\n+\\f[B]Note:\\f[R]\n+.PP\n+The following \\f[I]options\\f[R] must be specified using either\n+\\f[I]key\\f[R] or \\f[I]key\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R] syntax.\n+.IP \\[bu] 2\n+\\f[CB]log\\f[R]: (Optional) Name of log to be printed.\n+If omitted, all logs are printed.\n+(STRING, no default value)\n+.IP \\[bu] 2\n+\\f[CB]max\\f[R]: (Optional) Maximum number of events to be printed (newest\n+first).\n+If omitted, all events are printed.\n+(STRING, no default value)\n+.RE\n+.TP\n@@ -903,0 +1001,42 @@\n+.B \\f[CB]VM.metaspace\\f[R] [\\f[I]options\\f[R]]\n+Prints the statistics for the metaspace\n+.RS\n+.PP\n+Impact: Medium \\-\\-\\- Depends on number of classes loaded.\n+.PP\n+Permission: \\f[CB]java.lang.management.ManagementPermission(monitor)\\f[R]\n+.PP\n+\\f[B]Note:\\f[R]\n+.PP\n+The following \\f[I]options\\f[R] must be specified using either\n+\\f[I]key\\f[R] or \\f[I]key\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R] syntax.\n+.PP\n+\\f[I]options\\f[R]:\n+.IP \\[bu] 2\n+\\f[CB]basic\\f[R]: (Optional) Prints a basic summary (does not need a\n+safepoint).\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]show\\-loaders\\f[R]: (Optional) Shows usage by class loader.\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]show\\-classes\\f[R]: (Optional) If show\\-loaders is set, shows loaded\n+classes for each loader.\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]by\\-chunktype\\f[R]: (Optional) Break down numbers by chunk type.\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]by\\-spacetype\\f[R]: (Optional) Break down numbers by loader type.\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]vslist\\f[R]: (Optional) Shows details about the underlying virtual\n+space.\n+(BOOLEAN, false)\n+.IP \\[bu] 2\n+\\f[CB]scale\\f[R]: (Optional) Memory usage in which to scale.\n+Valid values are: 1, KB, MB or GB (fixed scale) or \"dynamic\" for a\n+dynamically chosen scale.\n+(STRING, dynamic)\n+.RE\n+.TP\n","filename":"src\/jdk.jcmd\/share\/man\/jcmd.1","additions":147,"deletions":7,"binary":false,"changes":154,"status":"modified"}]}