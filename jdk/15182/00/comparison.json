{"files":[{"patch":"@@ -29,1 +29,7 @@\n-import java.awt.*;\n+import java.awt.AWTError;\n+import java.awt.Component;\n+import java.awt.ComponentOrientation;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.Insets;\n+import java.awt.LayoutManager2;\n@@ -31,1 +37,0 @@\n-import java.io.Serializable;\n@@ -33,0 +38,1 @@\n+import java.io.Serializable;\n@@ -47,1 +53,2 @@\n- * vertical gives an effect similar to GridBagLayout, without the\n+ * vertical gives an effect similar to\n+ * {@link java.awt.GridBagLayout GridBagLayout}, without the\n@@ -51,1 +58,1 @@\n- * <p> The BoxLayout manager is constructed with an axis parameter that\n+ * <p> The {@code BoxLayout} manager is constructed with an axis parameter that\n@@ -54,2 +61,3 @@\n- * <blockquote><b>{@code X_AXIS}<\/b> - Components are laid out horizontally\n- * from left to right.<\/blockquote>\n+ * <ul>\n+ * <li><b>{@code X_AXIS}<\/b> - Components are laid out horizontally\n+ * from left to right.<\/li>\n@@ -57,2 +65,2 @@\n- * <blockquote><b>{@code Y_AXIS}<\/b> - Components are laid out vertically\n- * from top to bottom.<\/blockquote>\n+ * <li><b>{@code Y_AXIS}<\/b> - Components are laid out vertically\n+ * from top to bottom.<\/li>\n@@ -60,1 +68,1 @@\n- * <blockquote><b>{@code LINE_AXIS}<\/b> - Components are laid out the way\n+ * <li><b>{@code LINE_AXIS}<\/b> - Components are laid out the way\n@@ -68,1 +76,1 @@\n- * from top to bottom.<\/blockquote>\n+ * from top to bottom.<\/li>\n@@ -70,1 +78,1 @@\n- * <blockquote><b>{@code PAGE_AXIS}<\/b> - Components are laid out the way\n+ * <li><b>{@code PAGE_AXIS}<\/b> - Components are laid out the way\n@@ -78,1 +86,3 @@\n- * laid out from top to bottom.<\/blockquote>\n+ * laid out from top to bottom.<\/li>\n+ * <\/ul>\n+ *\n@@ -84,2 +94,3 @@\n- * at their preferred widths (for horizontal layout)\n- * or heights (for vertical layout).\n+ * at their preferred widths (for a horizontal layout)\n+ * or heights (for a vertical layout).\n+ * <p>\n@@ -91,1 +102,1 @@\n- * then BoxLayout aligns that component vertically,\n+ * then {@code BoxLayout} aligns that component vertically,\n@@ -99,1 +110,1 @@\n- * BoxLayout attempts to make all components in the column\n+ * {@code BoxLayout} attempts to make all components in the column\n@@ -106,1 +117,1 @@\n- * right and it means the right edge of the component otherwise.\n+ * right, and it means the right edge of the component otherwise.\n@@ -108,3 +119,5 @@\n- * Instead of using BoxLayout directly, many programs use the Box class.\n- * The Box class is a lightweight container that uses a BoxLayout.\n- * It also provides handy methods to help you use BoxLayout well.\n+ * Instead of using {@code BoxLayout} directly,\n+ * many programs use the {@link Box} class.\n+ * The {@code Box} class is a lightweight container that uses\n+ * the {@code BoxLayout} layout manager.\n+ * It also provides handy methods to help you use {@code BoxLayout} well.\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/BoxLayout.java","additions":33,"deletions":20,"binary":false,"changes":53,"status":"modified"}]}