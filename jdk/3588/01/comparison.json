{"files":[{"patch":"@@ -296,1 +296,1 @@\n-                throw new KeyStoreException(e.getMessage());\n+                throw new KeyStoreException(e.getMessage(), e);\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/JceKeyStore.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,0 +284,3 @@\n+        if (password == null) {\n+            throw new KeyStoreException(\"password can't be null\");\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/JavaKeyStore.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @bug 8048621 8133090 8167371\n+ * @bug 8048621 8133090 8167371 8236671\n@@ -166,0 +166,11 @@\n+        \/\/ unit test - test with null password\n+        try {\n+            ks.setKeyEntry(ALIAS_HEAD, privateKey, null,\n+                new Certificate[] { cert });\n+        } catch (KeyStoreException e) {\n+            if (!e.getMessage().contains(\"password can\\'t be null\")) {\n+                throw new RuntimeException(\"Unexpected message:\" + e.getMessage());\n+            }\n+            \/\/ expected\n+        }\n+\n","filename":"test\/jdk\/java\/security\/KeyStore\/TestKeyStoreBasic.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"}]}