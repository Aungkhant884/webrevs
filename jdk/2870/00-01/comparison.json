{"files":[{"patch":"@@ -29,1 +29,1 @@\n-G1GCType G1CollectorState::young_gc_pause_type(bool concurrent_operation_is_full_mark) const {\n+G1GCPauseType G1CollectorState::young_gc_pause_type(bool concurrent_operation_is_full_mark) const {\n@@ -48,1 +48,1 @@\n-G1YCPhase G1CollectorState::young_gc_phase() const {\n+G1GCYoungPhase G1CollectorState::young_gc_phase() const {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectorState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,2 +114,2 @@\n-  G1GCType young_gc_pause_type(bool concurrent_operation_is_full_mark) const;\n-  G1YCPhase young_gc_phase() const;\n+  G1GCPauseType young_gc_pause_type(bool concurrent_operation_is_full_mark) const;\n+  G1GCYoungPhase young_gc_phase() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectorState.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-enum G1YCPhase {\n+enum G1GCYoungPhase {\n@@ -35,1 +35,1 @@\n-  G1YCPhaseEndSentinel\n+  G1GCYoungPhaseEndSentinel\n@@ -38,1 +38,1 @@\n-enum G1GCType {\n+enum G1GCPauseType {\n@@ -47,1 +47,1 @@\n-  G1GCTypeEndSentinel\n+  G1GCPauseTypeEndSentinel\n@@ -53,1 +53,1 @@\n-  static bool is_young_only_pause(G1GCType type) {\n+  static void assert_is_young_pause(G1GCPauseType type) {\n@@ -57,0 +57,4 @@\n+  }\n+\n+  static bool is_young_only_pause(G1GCPauseType type) {\n+    assert_is_young_pause(type);\n@@ -63,4 +67,2 @@\n-  static bool is_mixed_pause(G1GCType type) {\n-    assert(type != FullGC, \"must be\");\n-    assert(type != Remark, \"must be\");\n-    assert(type != Cleanup, \"must be\");\n+  static bool is_mixed_pause(G1GCPauseType type) {\n+    assert_is_young_pause(type);\n@@ -70,1 +72,2 @@\n-  static bool is_last_young_pause(G1GCType type) {\n+  static bool is_last_young_pause(G1GCPauseType type) {\n+    assert_is_young_pause(type);\n@@ -74,1 +77,2 @@\n-  static bool is_concurrent_start_pause(G1GCType type) {\n+  static bool is_concurrent_start_pause(G1GCPauseType type) {\n+    assert_is_young_pause(type);\n@@ -78,1 +82,1 @@\n-  static const char* to_string(G1YCPhase type) {\n+  static const char* to_string(G1GCYoungPhase type) {\n@@ -87,1 +91,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCTypes.hpp","additions":16,"deletions":13,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -634,1 +634,1 @@\n-  G1GCType this_pause = collector_state()->young_gc_pause_type(concurrent_operation_is_full_mark);\n+  G1GCPauseType this_pause = collector_state()->young_gc_pause_type(concurrent_operation_is_full_mark);\n@@ -1160,1 +1160,1 @@\n-void G1Policy::update_gc_pause_time_ratios(G1GCType gc_type, double start_time_sec, double end_time_sec) {\n+void G1Policy::update_gc_pause_time_ratios(G1GCPauseType gc_type, double start_time_sec, double end_time_sec) {\n@@ -1175,1 +1175,1 @@\n-void G1Policy::record_pause(G1GCType gc_type,\n+void G1Policy::record_pause(G1GCPauseType gc_type,\n@@ -1190,1 +1190,1 @@\n-void G1Policy::update_time_to_mixed_tracking(G1GCType gc_type,\n+void G1Policy::update_time_to_mixed_tracking(G1GCPauseType gc_type,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -265,1 +265,1 @@\n-  void update_time_to_mixed_tracking(G1GCType gc_type, double start, double end);\n+  void update_time_to_mixed_tracking(G1GCPauseType gc_type, double start, double end);\n@@ -267,1 +267,1 @@\n-  void record_pause(G1GCType gc_type, double start, double end);\n+  void record_pause(G1GCPauseType gc_type, double start, double end);\n@@ -271,1 +271,1 @@\n-  void update_gc_pause_time_ratios(G1GCType gc_type, double start_sec, double end_sec);\n+  void update_gc_pause_time_ratios(G1GCPauseType gc_type, double start_sec, double end_sec);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    static const u4 nof_entries = G1YCPhaseEndSentinel;\n+    static const u4 nof_entries = G1GCYoungPhaseEndSentinel;\n@@ -56,1 +56,1 @@\n-      writer.write(G1GCTypeHelper::to_string((G1YCPhase)i));\n+      writer.write(G1GCTypeHelper::to_string((G1GCYoungPhase)i));\n@@ -75,1 +75,1 @@\n-void G1NewTracer::report_yc_phase(G1YCPhase phase) {\n+void G1NewTracer::report_yc_phase(G1GCYoungPhase phase) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Trace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  G1YCPhase _phase;\n+  G1GCYoungPhase _phase;\n@@ -38,2 +38,2 @@\n-  G1YoungGCInfo() : _phase(G1YCPhaseEndSentinel) {}\n-  void set_phase(G1YCPhase phase) {\n+  G1YoungGCInfo() : _phase(G1GCYoungPhaseEndSentinel) {}\n+  void set_phase(G1GCYoungPhase phase) {\n@@ -42,1 +42,1 @@\n-  G1YCPhase phase() const { return _phase; }\n+  G1GCYoungPhase phase() const { return _phase; }\n@@ -52,1 +52,1 @@\n-  void report_yc_phase(G1YCPhase phase);\n+  void report_yc_phase(G1GCYoungPhase phase);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Trace.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}