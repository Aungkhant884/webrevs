{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -352,0 +352,11 @@\n+# with selection: dir\/Test.java#selection -> Test.java#selection -> .java#selection -> #selection\n+# or without:     dir\/Test.java           -> Test.java           -> .java           -> <<empty string>>\n+TestID = \\\n+    $(subst .java,,$(subst .java,,$(suffix $(notdir $1))))\n+\n+# The test selector starting with a hash (#testid) will be stripped by all\n+# evals in ParseJtregTestSelectionInner and will be reinserted by calling\n+# TestID (if it is present).\n+ParseJtregTestSelection = \\\n+    $(call IfAppend, $(call ParseJtregTestSelectionInner, $1), $(call TestID, $1))\n+\n@@ -358,1 +369,1 @@\n-define ParseJtregTestSelection\n+define ParseJtregTestSelectionInner\n@@ -422,0 +433,9 @@\n+ParseTestSelection = \\\n+    $(strip $(or \\\n+      $(call ParseCustomTestSelection, $1) \\\n+      $(call ParseGtestTestSelection, $1) \\\n+      $(call ParseMicroTestSelection, $1) \\\n+      $(call ParseJtregTestSelection, $1) \\\n+      $(call ParseSpecialTestSelection, $1) \\\n+    ))\n+\n@@ -424,20 +444,2 @@\n-TESTS_TO_RUN :=\n-$(foreach test, $(TEST), \\\n-  $(eval PARSED_TESTS := $(call ParseCustomTestSelection, $(test))) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseGtestTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseMicroTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseJtregTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseSpecialTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval UNKNOWN_TEST := $(test)) \\\n-  ) \\\n-  $(eval TESTS_TO_RUN += $(PARSED_TESTS)) \\\n-)\n+TESTS_TO_RUN := $(strip $(foreach test, $(TEST), $(call ParseTestSelection, $(test))))\n+UNKNOWN_TEST := $(strip $(foreach test, $(TEST), $(if $(call ParseTestSelection, $(test)), , $(test))))\n@@ -451,3 +453,0 @@\n-TESTS_TO_RUN := $(strip $(TESTS_TO_RUN))\n-\n-\n","filename":"make\/RunTests.gmk","additions":24,"deletions":25,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,0 +71,6 @@\n+################################################################################\n+# Strip both arguments. Append the first argument to the second argument. If the\n+# first argument is empty, return the empty string.\n+IfAppend = \\\n+    $(if $(strip $1),$(strip $1)$(strip $2),)\n+\n","filename":"make\/common\/Utils.gmk","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}