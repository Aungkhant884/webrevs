{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -352,0 +352,5 @@\n+# with selection: dir\/Test.java#selection -> Test.java#selection -> .java#selection -> #selection\n+# or without:     dir\/Test.java           -> Test.java           -> .java           -> <<empty string>>\n+TestID = \\\n+    $(subst .java,,$(subst .java,,$(suffix $(notdir $1))))\n+\n@@ -359,13 +364,4 @@\n-  $(eval TEST_NAME := $(strip $(patsubst jtreg:%, %, $1))) \\\n-  $(if $(or $(findstring :, $(TEST_NAME)), $(findstring \/, $(TEST_NAME))), , \\\n-    $(eval TEST_NAME := :$(TEST_NAME)) \\\n-  ) \\\n-  $(if $(findstring :, $(TEST_NAME)), \\\n-    $(if $(filter :%, $(TEST_NAME)), \\\n-      $(eval TEST_GROUP := $(patsubst :%, %, $(TEST_NAME))) \\\n-      $(eval TEST_ROOTS := $(foreach test_root, $(JTREG_TESTROOTS), \\\n-          $(call CleanupJtregPath, $(test_root)))) \\\n-    , \\\n-      $(eval TEST_PATH := $(word 1, $(subst :, $(SPACE), $(TEST_NAME)))) \\\n-      $(eval TEST_GROUP := $(word 2, $(subst :, $(SPACE), $(TEST_NAME)))) \\\n-      $(eval TEST_ROOTS := $(call ExpandJtregRoot, $(TEST_PATH))) \\\n+  $(call IfAppend, \\\n+    $(eval TEST_NAME := $(strip $(patsubst jtreg:%, %, $1))) \\\n+    $(if $(or $(findstring :, $(TEST_NAME)), $(findstring \/, $(TEST_NAME))), , \\\n+      $(eval TEST_NAME := :$(TEST_NAME)) \\\n@@ -373,3 +369,5 @@\n-    $(foreach test_root, $(TEST_ROOTS), \\\n-      $(if $(filter \/%, $(test_root)), \\\n-        jtreg:$(test_root):$(TEST_GROUP) \\\n+    $(if $(findstring :, $(TEST_NAME)), \\\n+      $(if $(filter :%, $(TEST_NAME)), \\\n+        $(eval TEST_GROUP := $(patsubst :%, %, $(TEST_NAME))) \\\n+        $(eval TEST_ROOTS := $(foreach test_root, $(JTREG_TESTROOTS), \\\n+            $(call CleanupJtregPath, $(test_root)))) \\\n@@ -377,1 +375,6 @@\n-        $(if $(filter $(TEST_GROUP), $($(JTREG_TOPDIR)\/$(test_root)_JTREG_TEST_GROUPS)), \\\n+        $(eval TEST_PATH := $(word 1, $(subst :, $(SPACE), $(TEST_NAME)))) \\\n+        $(eval TEST_GROUP := $(word 2, $(subst :, $(SPACE), $(TEST_NAME)))) \\\n+        $(eval TEST_ROOTS := $(call ExpandJtregRoot, $(TEST_PATH))) \\\n+      ) \\\n+      $(foreach test_root, $(TEST_ROOTS), \\\n+        $(if $(filter \/%, $(test_root)), \\\n@@ -379,0 +382,4 @@\n+        , \\\n+          $(if $(filter $(TEST_GROUP), $($(JTREG_TOPDIR)\/$(test_root)_JTREG_TEST_GROUPS)), \\\n+            jtreg:$(test_root):$(TEST_GROUP) \\\n+          ) \\\n@@ -381,0 +388,5 @@\n+    , \\\n+      $(eval TEST_PATHS := $(call ExpandJtregPath, $(TEST_NAME))) \\\n+      $(foreach test_path, $(TEST_PATHS), \\\n+        jtreg:$(test_path) \\\n+      ) \\\n@@ -383,4 +395,1 @@\n-    $(eval TEST_PATHS := $(call ExpandJtregPath, $(TEST_NAME))) \\\n-    $(foreach test_path, $(TEST_PATHS), \\\n-      jtreg:$(test_path) \\\n-    ) \\\n+    $(call TestID, $1) \\\n@@ -422,0 +431,10 @@\n+define ParseTestSelection\n+  $(strip $(or \\\n+    $(call ParseCustomTestSelection, $1) \\\n+    $(call ParseGtestTestSelection, $1) \\\n+    $(call ParseMicroTestSelection, $1) \\\n+    $(call ParseJtregTestSelection, $1) \\\n+    $(call ParseSpecialTestSelection, $1) \\\n+  ))\n+endef\n+\n@@ -424,20 +443,2 @@\n-TESTS_TO_RUN :=\n-$(foreach test, $(TEST), \\\n-  $(eval PARSED_TESTS := $(call ParseCustomTestSelection, $(test))) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseGtestTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseMicroTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseJtregTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval PARSED_TESTS += $(call ParseSpecialTestSelection, $(test))) \\\n-  ) \\\n-  $(if $(strip $(PARSED_TESTS)), , \\\n-    $(eval UNKNOWN_TEST := $(test)) \\\n-  ) \\\n-  $(eval TESTS_TO_RUN += $(PARSED_TESTS)) \\\n-)\n+TESTS_TO_RUN := $(strip $(foreach test, $(TEST), $(call ParseTestSelection, $(test))))\n+UNKNOWN_TEST := $(strip $(foreach test, $(TEST), $(if $(call ParseTestSelection, $(test)), , $(test))))\n@@ -451,3 +452,0 @@\n-TESTS_TO_RUN := $(strip $(TESTS_TO_RUN))\n-\n-\n","filename":"make\/RunTests.gmk","additions":43,"deletions":45,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,0 +71,9 @@\n+################################################################################\n+# Strip both arguments. Concat (append or prepend) the first argument to the\n+# second argument. If the first argument is empty, return the empty string.\n+IfAppend = \\\n+    $(if $(strip $1),$(strip $1)$(strip $2),)\n+\n+IfPrepend = \\\n+    $(if $(strip $1),$(strip $2)$(strip $1),)\n+\n","filename":"make\/common\/Utils.gmk","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}