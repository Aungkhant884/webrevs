[{"commit":{"message":"Add regression test that exercises the relaxed assertion"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestCloneArrayWithDifferentLengthConstness.java"}],"sha":"b3109e30b113eb835b3f3a094ec165551dfcae38"},{"commit":{"message":"Relaxed assertion"},"files":[{"filename":"src\/hotspot\/share\/opto\/arraycopynode.cpp"}],"sha":"ae16d2fe17ae30053148bf7ce1f87150c94947a6"},{"commit":{"message":"Remove extra whitespace"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp"}],"sha":"a5188cf0ed117f96d1758220084cea9a4c2c4a9c"},{"commit":{"message":"Remove extra whitespace"},"files":[{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"7528dd58bd519ea5e12f2308924af5fa26d9e387"},{"commit":{"message":"Revert use of UseNewCode"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"68443dabe8589515aa7d13627a87126bd79660e2"},{"commit":{"message":"Revert \"TEMPORARY: add additional macro-assembly comments\"\n\nThis reverts commit eda6cf0e0f16ab10d206ebcc58e4bcf12824cf7a."},"files":[],"sha":"bce8cb17fbd9e03da32997c98df798e1a175ec06"},{"commit":{"message":"Revert \"TEMPORARY: set UseNewCode to true by default\"\n\nThis reverts commit ddbc11020ef5a10b3a0f076408cf4eb4f3db3a9d."},"files":[],"sha":"25f41518405335210a81f81901deb3255e861760"},{"commit":{"message":"Revert \"TEMPORARY: print only 'oop_disjoint_arraycopy_uninit' stub code\"\n\nThis reverts commit 5b73ae421e018b2c651a0991b42edfeb4b5935b4."},"files":[],"sha":"b62d01f72d1d2cf88774388d7166a6ca906f5535"},{"commit":{"message":"Require GenZGC in the test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestArrayCopyWithLargeObjectAlignment.java"}],"sha":"2675dd5174098e600c6f9f25d6f1f5a260e001f2"},{"commit":{"message":"Round up object size at the end of the computation"},"files":[{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"93bf59888e1b697422906b7619203f324e7e49d5"},{"commit":{"message":"Comment and rename for clarity"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/library_call.cpp"}],"sha":"57e6865e4a65cbb5869784ac159acedb15efe214"},{"commit":{"message":"Add a regression test"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/gcbarriers\/TestArrayCopyWithLargeObjectAlignment.java"}],"sha":"9766c4161ad179570d951a491dc7172e97b12fd4"},{"commit":{"message":"Remove unused variable"},"files":[{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"05e72ccae06674054bf75f3f090da44864e59c64"},{"commit":{"message":"Use more accurate names"},"files":[{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"89d4e0c360e22288a813213b3a97905e99b4b61c"},{"commit":{"message":"TEMPORARY: print only 'oop_disjoint_arraycopy_uninit' stub code"},"files":[],"sha":"8b98bbd73f44132076858c0e0a197427508f2df8"},{"commit":{"message":"TEMPORARY: set UseNewCode to true by default"},"files":[],"sha":"0128d79b39a45818b7fe74135f0759c7349b4695"},{"commit":{"message":"TEMPORARY: add additional macro-assembly comments"},"files":[],"sha":"2d600a66417e95110e5eec4da99956aaf68da6e9"},{"commit":{"message":"Rounding up payload size is only necessary for arrays"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp"}],"sha":"fa05b44460294f410db2577bb474dc21c099899b"},{"commit":{"message":"Round up number of 8-byte words"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/c2\/barrierSetC2.cpp"}],"sha":"99b66d6607396790564335f0826e6ef9154a6885"},{"commit":{"message":"Compute both sizes: rounded for AllocateArray and non-rounded for ArrayCopy"},"files":[{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"071921455cc3186567bb3ddf22a2a2e1d0268456"},{"commit":{"message":"Clarify that the currently computed size is rounded (aligned to MinObjAlignmentInBytes)"},"files":[{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"}],"sha":"ce6860614c8f5d6c5056c17a4bc6f634b86a6121"}]