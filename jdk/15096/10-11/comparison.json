{"files":[{"patch":"@@ -1350,0 +1350,6 @@\n+    JNI_CHECK_PEER_GOTO(self, ret);\n+    f = (AwtFrame *)pData;\n+    HWND hwnd;\n+    hwnd = f->GetHWnd();\n+    if (::IsWindow(hwnd)) {\n+        DASSERT(!IsBadReadPtr(f, sizeof(AwtFrame)));\n@@ -1351,40 +1357,2 @@\n-    {\n-        JNI_CHECK_PEER_GOTO(self, ret);\n-        f = (AwtFrame *)pData;\n-        HWND hwnd = f->GetHWnd();\n-        if (::IsWindow(hwnd)) {\n-            DASSERT(!IsBadReadPtr(f, sizeof(AwtFrame)));\n-\n-            BOOL iconify = (state & java_awt_Frame_ICONIFIED) != 0;\n-            BOOL zoom = (state & java_awt_Frame_MAXIMIZED_BOTH)\n-                            == java_awt_Frame_MAXIMIZED_BOTH;\n-\n-            DTRACE_PRINTLN4(\"WFramePeer.setState:%s%s ->%s%s\",\n-                      f->isIconic() ? \" iconic\" : \"\",\n-                      f->isZoomed() ? \" zoomed\" : \"\",\n-                      iconify       ? \" iconic\" : \"\",\n-                      zoom          ? \" zoomed\" : \"\");\n-\n-            if (::IsWindowVisible(hwnd)) {\n-                BOOL focusable = f->IsFocusableWindow();\n-\n-                WINDOWPLACEMENT wp;\n-                ::ZeroMemory(&wp, sizeof(wp));\n-                wp.length = sizeof(wp);\n-                ::GetWindowPlacement(hwnd, &wp);\n-\n-                \/\/ Iconify first.\n-                \/\/ If both iconify & zoom are TRUE, handle this case\n-                \/\/ with wp.flags field below.\n-                if (iconify) {\n-                    wp.showCmd = focusable ? SW_MINIMIZE : SW_SHOWMINNOACTIVE;\n-                } else if (zoom) {\n-                    wp.showCmd = focusable ? SW_SHOWMAXIMIZED : SW_MAXIMIZE;\n-                } else { \/\/ zoom == iconify == FALSE\n-                    wp.showCmd = focusable ? SW_RESTORE : SW_SHOWNOACTIVATE;\n-                }\n-                if (zoom && iconify) {\n-                    wp.flags |= WPF_RESTORETOMAXIMIZED;\n-                } else {\n-                    wp.flags &= ~WPF_RESTORETOMAXIMIZED;\n-                }\n+        BOOL iconify;\n+        BOOL zoom;\n@@ -1392,3 +1360,13 @@\n-                if (!zoom) {\n-                    f->m_forceResetZoomed = TRUE;\n-                }\n+        iconify = (state & java_awt_Frame_ICONIFIED) != 0;\n+        zoom = (state & java_awt_Frame_MAXIMIZED_BOTH)\n+                   == java_awt_Frame_MAXIMIZED_BOTH;\n+\n+        DTRACE_PRINTLN4(\"WFramePeer.setState:%s%s ->%s%s\",\n+                  f->isIconic() ? \" iconic\" : \"\",\n+                  f->isZoomed() ? \" zoomed\" : \"\",\n+                  iconify       ? \" iconic\" : \"\",\n+                  zoom          ? \" zoomed\" : \"\");\n+\n+        if (::IsWindowVisible(hwnd)) {\n+            BOOL focusable;\n+            focusable = f->IsFocusableWindow();\n@@ -1396,4 +1374,4 @@\n-                \/\/ The SetWindowPlacement() causes the WmSize() invocation\n-                \/\/  which, in turn, actually updates the m_iconic & m_zoomed flags\n-                \/\/  as well as sends Java event (WINDOW_STATE_CHANGED.)\n-                ::SetWindowPlacement(hwnd, &wp);\n+            WINDOWPLACEMENT wp;\n+            ::ZeroMemory(&wp, sizeof(wp));\n+            wp.length = sizeof(wp);\n+            ::GetWindowPlacement(hwnd, &wp);\n@@ -1401,1 +1379,12 @@\n-                f->m_forceResetZoomed = FALSE;\n+            \/\/ Iconify first.\n+            \/\/ If both iconify & zoom are TRUE, handle this case\n+            \/\/ with wp.flags field below.\n+            if (iconify) {\n+                wp.showCmd = focusable ? SW_MINIMIZE : SW_SHOWMINNOACTIVE;\n+            } else if (zoom) {\n+                wp.showCmd = focusable ? SW_SHOWMAXIMIZED : SW_MAXIMIZE;\n+            } else { \/\/ zoom == iconify == FALSE\n+                wp.showCmd = focusable ? SW_RESTORE : SW_SHOWNOACTIVATE;\n+            }\n+            if (zoom && iconify) {\n+                wp.flags |= WPF_RESTORETOMAXIMIZED;\n@@ -1403,1 +1392,2 @@\n-                DTRACE_PRINTLN(\"  not visible, just recording the requested state\");\n+                wp.flags &= ~WPF_RESTORETOMAXIMIZED;\n+            }\n@@ -1405,2 +1395,2 @@\n-                f->setIconic(iconify);\n-                f->setZoomed(zoom);\n+            if (!zoom) {\n+                f->m_forceResetZoomed = TRUE;\n@@ -1408,0 +1398,12 @@\n+\n+            \/\/ The SetWindowPlacement() causes the WmSize() invocation\n+            \/\/  which, in turn, actually updates the m_iconic & m_zoomed flags\n+            \/\/  as well as sends Java event (WINDOW_STATE_CHANGED.)\n+            ::SetWindowPlacement(hwnd, &wp);\n+\n+            f->m_forceResetZoomed = FALSE;\n+        } else {\n+            DTRACE_PRINTLN(\"  not visible, just recording the requested state\");\n+\n+            f->setIconic(iconify);\n+            f->setZoomed(zoom);\n@@ -1410,1 +1412,0 @@\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Frame.cpp","additions":53,"deletions":52,"binary":false,"changes":105,"status":"modified"}]}