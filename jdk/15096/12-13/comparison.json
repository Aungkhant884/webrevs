{"files":[{"patch":"@@ -1584,39 +1584,40 @@\n-    {\n-        JNI_CHECK_PEER_GOTO(peer, ret);\n-        AwtFrame *f = (AwtFrame *)pData;\n-\n-        \/\/ dialog here may be NULL, for example, if the blocker is a native dialog\n-        \/\/ however, we need to install\/unistall modal hooks anyway\n-        JNI_CHECK_PEER_GOTO(blockerPeer, ret);\n-        AwtDialog *d = (AwtDialog *)pData;\n-\n-        if ((f != NULL) && ::IsWindow(f->GetHWnd())) {\n-            \/\/ get an HWND of the toplevel window this embedded frame is within\n-            HWND fHWnd = f->GetHWnd();\n-            while (::GetParent(fHWnd) != NULL) {\n-                fHWnd = ::GetParent(fHWnd);\n-            }\n-            \/\/ we must get a toplevel hwnd here, however due to some strange\n-            \/\/ behaviour of Java Plugin (a bug?) when running in IE at\n-            \/\/ this moment the embedded frame hasn't been placed into the\n-            \/\/ browser yet and fHWnd is not a toplevel, so we shouldn't install\n-            \/\/ the hook here\n-            if ((::GetWindowLong(fHWnd, GWL_STYLE) & WS_CHILD) == 0) {\n-                \/\/ if this toplevel is created in another thread, we should install\n-                \/\/ the modal hook into it to track window activation and mouse events\n-                DWORD fThread = ::GetWindowThreadProcessId(fHWnd, NULL);\n-                if (fThread != AwtToolkit::GetInstance().MainThread()) {\n-                    \/\/ check if this thread has been already blocked\n-                    BlockedThreadStruct *blockedThread = (BlockedThreadStruct *)sm_BlockedThreads.get((void *)((intptr_t)fThread));\n-                    if (blocked) {\n-                        if (blockedThread == NULL) {\n-                            blockedThread = new BlockedThreadStruct;\n-                            blockedThread->framesCount = 1;\n-                            blockedThread->modalHook = ::SetWindowsHookEx(WH_CBT, (HOOKPROC)AwtDialog::ModalFilterProc,\n-                                                                          0, fThread);\n-                            blockedThread->mouseHook = ::SetWindowsHookEx(WH_MOUSE, (HOOKPROC)AwtDialog::MouseHookProc_NonTT,\n-                                                                          0, fThread);\n-                            sm_BlockedThreads.put((void *)((intptr_t)fThread), blockedThread);\n-                        } else {\n-                            blockedThread->framesCount++;\n-                        }\n+    JNI_CHECK_PEER_GOTO(peer, ret);\n+    AwtFrame *f;\n+    f = (AwtFrame *) pData;\n+\n+    \/\/ dialog here may be NULL, for example, if the blocker is a native dialog\n+    \/\/ however, we need to install\/unistall modal hooks anyway\n+    JNI_CHECK_PEER_GOTO(blockerPeer, ret);\n+    AwtDialog *d;\n+    d = (AwtDialog *) pData;\n+\n+    if ((f != NULL) && ::IsWindow(f->GetHWnd())) {\n+        \/\/ get an HWND of the toplevel window this embedded frame is within\n+        HWND fHWnd;\n+        fHWnd = f->GetHWnd();\n+        while (::GetParent(fHWnd) != NULL) {\n+            fHWnd = ::GetParent(fHWnd);\n+        }\n+        \/\/ we must get a toplevel hwnd here, however due to some strange\n+        \/\/ behaviour of Java Plugin (a bug?) when running in IE at\n+        \/\/ this moment the embedded frame hasn't been placed into the\n+        \/\/ browser yet and fHWnd is not a toplevel, so we shouldn't install\n+        \/\/ the hook here\n+        if ((::GetWindowLong(fHWnd, GWL_STYLE) & WS_CHILD) == 0) {\n+            \/\/ if this toplevel is created in another thread, we should install\n+            \/\/ the modal hook into it to track window activation and mouse events\n+            DWORD fThread;\n+            fThread = ::GetWindowThreadProcessId(fHWnd, NULL);\n+            if (fThread != AwtToolkit::GetInstance().MainThread()) {\n+                \/\/ check if this thread has been already blocked\n+                BlockedThreadStruct *blockedThread;\n+                blockedThread = (BlockedThreadStruct *) sm_BlockedThreads.get((void *)((intptr_t)fThread));\n+                if (blocked) {\n+                    if (blockedThread == NULL) {\n+                        blockedThread = new BlockedThreadStruct;\n+                        blockedThread->framesCount = 1;\n+                        blockedThread->modalHook = ::SetWindowsHookEx(WH_CBT, (HOOKPROC)AwtDialog::ModalFilterProc,\n+                                                                      0, fThread);\n+                        blockedThread->mouseHook = ::SetWindowsHookEx(WH_MOUSE, (HOOKPROC)AwtDialog::MouseHookProc_NonTT,\n+                                                                      0, fThread);\n+                        sm_BlockedThreads.put((void *)((intptr_t)fThread), blockedThread);\n@@ -1624,12 +1625,14 @@\n-                        \/\/ see the comment above: if Java Plugin behaviour when running in IE\n-                        \/\/ was right, blockedThread would be always not NULL here\n-                        if (blockedThread != NULL) {\n-                            DASSERT(blockedThread->framesCount > 0);\n-                            if ((blockedThread->framesCount) == 1) {\n-                                ::UnhookWindowsHookEx(blockedThread->modalHook);\n-                                ::UnhookWindowsHookEx(blockedThread->mouseHook);\n-                                sm_BlockedThreads.remove((void *)((intptr_t)fThread));\n-                                delete blockedThread;\n-                            } else {\n-                                blockedThread->framesCount--;\n-                            }\n+                        blockedThread->framesCount++;\n+                    }\n+                } else {\n+                    \/\/ see the comment above: if Java Plugin behaviour when running in IE\n+                    \/\/ was right, blockedThread would be always not NULL here\n+                    if (blockedThread != NULL) {\n+                        DASSERT(blockedThread->framesCount > 0);\n+                        if ((blockedThread->framesCount) == 1) {\n+                            ::UnhookWindowsHookEx(blockedThread->modalHook);\n+                            ::UnhookWindowsHookEx(blockedThread->mouseHook);\n+                            sm_BlockedThreads.remove((void *)((intptr_t)fThread));\n+                            delete blockedThread;\n+                        } else {\n+                            blockedThread->framesCount--;\n@@ -1642,1 +1645,0 @@\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Frame.cpp","additions":54,"deletions":52,"binary":false,"changes":106,"status":"modified"}]}