{"files":[{"patch":"@@ -135,1 +135,0 @@\n-java\/awt\/Focus\/FocusTraversalPolicy\/ButtonGroupLayoutTraversal\/ButtonGroupLayoutTraversalTest.java 8198619 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,11 +61,13 @@\n-        SwingUtilities.invokeAndWait(() -> changeLAF());\n-        SwingUtilities.invokeAndWait(() -> initLayout(nx, ny));\n-        Robot robot = new Robot();\n-        robot.setAutoDelay(100);\n-        robot.waitForIdle();\n-        robot.delay(200);\n-\n-        for (int i = 0; i < nx * ny - nx * ny \/ 2 - 1; i++) {\n-            robot.keyPress(KeyEvent.VK_RIGHT);\n-            robot.keyRelease(KeyEvent.VK_RIGHT);\n-        }\n+        try {\n+            SwingUtilities.invokeAndWait(() -> changeLAF());\n+            SwingUtilities.invokeAndWait(() -> initLayout(nx, ny));\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            for (int i = 0; i < nx * ny - nx * ny \/ 2 - 1; i++) {\n+                robot.keyPress(KeyEvent.VK_RIGHT);\n+                robot.keyRelease(KeyEvent.VK_RIGHT);\n+                robot.waitForIdle();\n+            }\n@@ -73,4 +75,5 @@\n-        for (int i = 0; i < nx * ny \/ 2; i++) {\n-            robot.keyPress(KeyEvent.VK_TAB);\n-            robot.keyRelease(KeyEvent.VK_TAB);\n-        }\n+            for (int i = 0; i < nx * ny \/ 2; i++) {\n+                robot.keyPress(KeyEvent.VK_TAB);\n+                robot.keyRelease(KeyEvent.VK_TAB);\n+                robot.waitForIdle();\n+            }\n@@ -78,2 +81,1 @@\n-        robot.waitForIdle();\n-        robot.delay(200);\n+            robot.delay(200);\n@@ -81,4 +83,3 @@\n-        for (int i = 0; i < nx * ny; i++) {\n-            if (focusCnt[i] < 1) {\n-                SwingUtilities.invokeLater(window::dispose);\n-                throw new RuntimeException(\"Component \" + i\n+            for (int i = 0; i < nx * ny; i++) {\n+                if (focusCnt[i] < 1) {\n+                    throw new RuntimeException(\"Component \" + i\n@@ -86,3 +87,2 @@\n-            } else if (focusCnt[i] > 1) {\n-                SwingUtilities.invokeLater(window::dispose);\n-                throw new RuntimeException(\"Component \" + i\n+                } else if (focusCnt[i] > 1) {\n+                    throw new RuntimeException(\"Component \" + i\n@@ -90,0 +90,15 @@\n+                }\n+            }\n+\n+            for (int i = 0; i < nx * ny \/ 2; i++) {\n+                robot.keyPress(KeyEvent.VK_SHIFT);\n+                robot.keyPress(KeyEvent.VK_TAB);\n+                robot.keyRelease(KeyEvent.VK_TAB);\n+                robot.keyRelease(KeyEvent.VK_SHIFT);\n+                robot.waitForIdle();\n+            }\n+\n+            for (int i = 0; i < nx * ny - nx * ny \/ 2 - 1; i++) {\n+                robot.keyPress(KeyEvent.VK_LEFT);\n+                robot.keyRelease(KeyEvent.VK_LEFT);\n+                robot.waitForIdle();\n@@ -91,1 +106,0 @@\n-        }\n@@ -93,1 +107,0 @@\n-        for (int i = 0; i < nx * ny \/ 2; i++) {\n@@ -98,11 +111,1 @@\n-        }\n-\n-        for (int i = 0; i < nx * ny - nx * ny \/ 2 - 1; i++) {\n-            robot.keyPress(KeyEvent.VK_LEFT);\n-            robot.keyRelease(KeyEvent.VK_LEFT);\n-        }\n-\n-        robot.keyPress(KeyEvent.VK_SHIFT);\n-        robot.keyPress(KeyEvent.VK_TAB);\n-        robot.keyRelease(KeyEvent.VK_TAB);\n-        robot.keyRelease(KeyEvent.VK_SHIFT);\n+            robot.waitForIdle();\n@@ -110,2 +113,1 @@\n-        robot.waitForIdle();\n-        robot.delay(200);\n+            robot.delay(200);\n@@ -113,4 +115,3 @@\n-        for (int i = 0; i < nx * ny; i++) {\n-            if (focusCnt[i] < 2) {\n-                SwingUtilities.invokeLater(window::dispose);\n-                throw new RuntimeException(\"Component \" + i\n+            for (int i = 0; i < nx * ny; i++) {\n+                if (focusCnt[i] < 2) {\n+                    throw new RuntimeException(\"Component \" + i\n@@ -118,3 +119,2 @@\n-            } else if (focusCnt[i] > 2) {\n-                SwingUtilities.invokeLater(window::dispose);\n-                throw new RuntimeException(\"Component \" + i\n+                } else if (focusCnt[i] > 2) {\n+                    throw new RuntimeException(\"Component \" + i\n@@ -122,0 +122,1 @@\n+                }\n@@ -123,0 +124,6 @@\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (window != null) {\n+                    window.dispose();\n+                }\n+            });\n@@ -124,2 +131,0 @@\n-\n-        SwingUtilities.invokeLater(window::dispose);\n@@ -182,0 +187,1 @@\n+        window.setLocationRelativeTo(null);\n","filename":"test\/jdk\/java\/awt\/Focus\/FocusTraversalPolicy\/ButtonGroupLayoutTraversal\/ButtonGroupLayoutTraversalTest.java","additions":55,"deletions":49,"binary":false,"changes":104,"status":"modified"}]}