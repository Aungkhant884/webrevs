{"files":[{"patch":"@@ -1544,0 +1544,4 @@\n+        @Override\n+        public void visitLambda(JCLambda tree) {\n+            \/\/skip\n+        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2021, Alphabet LLC. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8268592\n+ * @summary JDK-8262891 causes an NPE in Lint.augment\n+ * @modules java.compiler\n+ *          jdk.compiler\n+ * @compile T8268592.java\n+ *\/\n+\n+import java.util.Collection;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+\n+abstract class T {\n+\n+    abstract <T> T r(Function<String, Supplier<T>> x);\n+\n+    enum E {\n+        ONE\n+    }\n+\n+    abstract <T> Supplier<T> f(Function<T, Supplier<T>> x);\n+\n+    public void updateAcl(E e, Supplier<Void> v) {\n+        r(\n+                (String t) -> {\n+                    switch (e) {\n+                        case ONE:\n+                            return f(\n+                                    a -> {\n+                                        Collection<String> m = null;\n+                                        return v;\n+                                    });\n+                        default:\n+                            return v;\n+                    }\n+                });\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/T8268592\/T8268592.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}