{"files":[{"patch":"@@ -1960,1 +1960,1 @@\n-        \/\/ it after notify.\n+        \/\/ it after notify. Loop until method return is non-null.\n@@ -1980,1 +1980,2 @@\n-      _invoke_method_intrinsic_table.remove(key);\n+      bool removed = _invoke_method_intrinsic_table.remove(key);\n+      assert(removed, \"must be the owner\");\n@@ -1984,2 +1985,0 @@\n-      bool created = _invoke_method_intrinsic_table.put(key, m());\n-      assert(!created, \"must already be created when holding the lock above\");\n@@ -1989,0 +1988,1 @@\n+      *met = m(); \/\/ insert the element\n@@ -1994,6 +1994,4 @@\n-  if (throw_error) {\n-    \/\/ Throw VirtualMachineError or else the other error is in the thread.\n-    if (!HAS_PENDING_EXCEPTION) {\n-      THROW_MSG_NULL(vmSymbols::java_lang_VirtualMachineError(),\n-                     \"Out of space in CodeCache for method handle intrinsic\");\n-    }\n+  \/\/ Throw VirtualMachineError or the pending exception in the JavaThread\n+  if (throw_error && !HAS_PENDING_EXCEPTION) {\n+    THROW_MSG_NULL(vmSymbols::java_lang_VirtualMachineError(),\n+                   \"Out of space in CodeCache for method handle intrinsic\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"}]}