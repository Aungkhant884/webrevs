{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -258,1 +258,4 @@\n-  return __sync_val_compare_and_swap(dest, compare_value, exchange_value);\n+  T value = compare_value;\n+  __atomic_compare_exchange(dest, &value, &exchange_value, \/*weak*\/false,\n+                            __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST);\n+  return value;\n@@ -270,1 +273,5 @@\n-  return __sync_val_compare_and_swap(dest, compare_value, exchange_value);\n+\n+  T value = compare_value;\n+  __atomic_compare_exchange(dest, &value, &exchange_value, \/*weak*\/false,\n+                            __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST);\n+  return value;\n","filename":"src\/hotspot\/os_cpu\/bsd_zero\/atomic_bsd_zero.hpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -175,0 +175,1 @@\n+        StackOverflow* overflow_state = thread->stack_overflow_state();\n@@ -176,2 +177,2 @@\n-        if (thread->in_stack_yellow_reserved_zone(addr)) {\n-          thread->disable_stack_yellow_reserved_zone();\n+        if (overflow_state->in_stack_yellow_reserved_zone(addr)) {\n+          overflow_state->disable_stack_yellow_reserved_zone();\n@@ -180,2 +181,2 @@\n-        else if (thread->in_stack_red_zone(addr)) {\n-          thread->disable_stack_red_zone();\n+        else if (overflow_state->in_stack_red_zone(addr)) {\n+          overflow_state->disable_stack_red_zone();\n","filename":"src\/hotspot\/os_cpu\/bsd_zero\/os_bsd_zero.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,5 @@\n-  return __sync_val_compare_and_swap(dest, compare_value, exchange_value);\n+\n+  T value = compare_value;\n+  __atomic_compare_exchange(dest, &value, &exchange_value, \/*weak*\/false,\n+                            __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST);\n+  return value;\n@@ -116,1 +120,5 @@\n-  return __sync_val_compare_and_swap(dest, compare_value, exchange_value);\n+\n+  T value = compare_value;\n+  __atomic_compare_exchange(dest, &value, &exchange_value, \/*weak*\/false,\n+                            __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST);\n+  return value;\n","filename":"src\/hotspot\/os_cpu\/linux_zero\/atomic_linux_zero.hpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}