{"files":[{"patch":"@@ -715,2 +715,2 @@\n-            Collection<String> clientBlockedExtensions =\n-                    getBlockedExtensions(\"jdk.tls.client.blockedExtensions\");\n+            Collection<String> clientDisabledExtensions =\n+                    getDisabledExtensions(\"jdk.tls.client.disableExtensions\");\n@@ -720,1 +720,1 @@\n-                        !clientBlockedExtensions.contains(extension.name)) {\n+                        !clientDisabledExtensions.contains(extension.name)) {\n@@ -808,2 +808,2 @@\n-            Collection<String> serverBlockedExtensions =\n-                    getBlockedExtensions(\"jdk.tls.server.blockedExtensions\");\n+            Collection<String> serverDisabledExtensions =\n+                    getDisabledExtensions(\"jdk.tls.server.disableExtensions\");\n@@ -813,1 +813,1 @@\n-                        !serverBlockedExtensions.contains(extension.name)) {\n+                        !serverDisabledExtensions.contains(extension.name)) {\n@@ -822,2 +822,2 @@\n-    \/\/ Get blocked extensions, which could be customized with System Properties.\n-    private static Collection<String> getBlockedExtensions(\n+    \/\/ Get disabled extensions, which could be customized with System Properties.\n+    private static Collection<String> getDisabledExtensions(\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLExtension.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1,75 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8217633\n- * @library \/javax\/net\/ssl\/templates\n- * @summary Configurable extensions with system properties\n- * @run main\/othervm BlockedExtension supported_versions TLSv1.3 fail\n- * @run main\/othervm BlockedExtension supported_versions TLSv1.2\n- *\/\n-\n-import javax.net.ssl.SSLSocket;\n-import javax.net.ssl.SSLException;\n-\n-public class BlockedExtension extends SSLSocketTemplate {\n-\n-    private final String[] protocols;\n-\n-    public BlockedExtension(String[] protocols) {\n-        this.protocols = protocols;\n-    }\n-\n-    @Override\n-    protected void configureClientSocket(SSLSocket socket) {\n-        socket.setEnabledProtocols(protocols);\n-    }\n-\n-    \/\/ Run the test case.\n-    \/\/\n-    \/\/ Check that the extension could be blocked, and the impact may be\n-    \/\/ different for different protocols.\n-    public static void main(String[] args) throws Exception {\n-        System.setProperty(\"jdk.tls.client.blockedExtensions\", args[0]);\n-\n-        boolean shouldSuccess = (args.length != 3);\n-\n-        try {\n-            (new BlockedExtension(new String[] {args[1]})).run();\n-        } catch (SSLException | IllegalStateException ssle) {\n-            if (shouldSuccess) {\n-                throw new RuntimeException(\n-                        \"The extension \" + args[0] + \" is blocked\");\n-            }\n-\n-            return;\n-        }\n-\n-        if (!shouldSuccess) {\n-            throw new RuntimeException(\n-                    \"The extension \" + args[0] +\n-                    \" should be blocked and the connection should fail\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/BlockedExtension.java","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8217633\n+ * @library \/javax\/net\/ssl\/templates\n+ * @summary Configurable extensions with system properties\n+ * @run main\/othervm DisableExtensions supported_versions TLSv1.3 fail\n+ * @run main\/othervm DisableExtensions supported_versions TLSv1.2\n+ *\/\n+\n+import javax.net.ssl.SSLSocket;\n+import javax.net.ssl.SSLException;\n+\n+public class DisableExtensions extends SSLSocketTemplate {\n+\n+    private final String[] protocols;\n+\n+    public DisableExtensions(String[] protocols) {\n+        this.protocols = protocols;\n+    }\n+\n+    @Override\n+    protected void configureClientSocket(SSLSocket socket) {\n+        socket.setEnabledProtocols(protocols);\n+    }\n+\n+    \/\/ Run the test case.\n+    \/\/\n+    \/\/ Check that the extension could be disabled, and the impact may be\n+    \/\/ different for different protocols.\n+    public static void main(String[] args) throws Exception {\n+        System.setProperty(\"jdk.tls.client.disableExtensions\", args[0]);\n+\n+        boolean shouldSuccess = (args.length != 3);\n+\n+        try {\n+            (new DisableExtensions(new String[] {args[1]})).run();\n+        } catch (SSLException | IllegalStateException ssle) {\n+            if (shouldSuccess) {\n+                throw new RuntimeException(\n+                        \"The extension \" + args[0] + \" is disabled\");\n+            }\n+\n+            return;\n+        }\n+\n+        if (!shouldSuccess) {\n+            throw new RuntimeException(\n+                    \"The extension \" + args[0] +\n+                    \" should be disabled and the connection should fail\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/DisableExtensions.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"}]}