{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -103,15 +103,19 @@\n-        try (FileChannel fc = FileChannel.open(file, WRITE);) {\n-            long pos = 0L;\n-            \/\/ if the length exceeds 2 GB, skip the first 2 GB - 1 MB bytes\n-            if (length >= 2L*1024*1024*1024) {\n-                \/\/ write the last (length - 2GB - 1MB) bytes\n-                pos = 2047L*1024*1024;\n-            } else if (length > 0) {\n-                \/\/ write either the first or last bytes only\n-                long p = Math.min(Math.abs(RAND.nextLong()), length - 1);\n-                pos = RAND.nextBoolean() ? p : length - 1 - p;\n-            }\n-            fc.position(pos);\n-            int bufLength = Math.min(32768, (int)Math.min(length - pos, BIG_LENGTH));\n-            byte[] buf = new byte[bufLength];\n-            while (pos < length) {\n+        try (FileChannel fc = FileChannel.open(file, WRITE)) {\n+            if (length < 65536) {\n+                \/\/ if the length is less than 64k, write the entire file\n+                byte[] buf = new byte[(int)length];\n+                RAND.nextBytes(buf);\n+                ByteBuffer bb = ByteBuffer.wrap(buf);\n+                while (bb.hasRemaining()) {\n+                    fc.write(bb);\n+                }\n+            } else {\n+                \/\/ write the first and the last 32k only\n+                byte[] buf = new byte[32768];\n+                RAND.nextBytes(buf);\n+                ByteBuffer bb = ByteBuffer.wrap(buf);\n+                while (bb.hasRemaining()) {\n+                    fc.write(bb);\n+                }\n+                bb.clear();\n+                fc.position(length - buf.length);\n@@ -119,2 +123,3 @@\n-                int len = (int)Math.min(bufLength, length - pos);\n-                pos += fc.write(ByteBuffer.wrap(buf, 0, len));\n+                while (bb.hasRemaining()) {\n+                    fc.write(bb);\n+                }\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/ReadXBytes.java","additions":23,"deletions":18,"binary":false,"changes":41,"status":"modified"}]}