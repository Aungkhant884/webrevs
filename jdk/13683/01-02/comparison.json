{"files":[{"patch":"@@ -161,0 +161,1 @@\n+        The stream uses  Future<Void> task from StreamPumper.process() to check if output is complete.\n@@ -166,1 +167,1 @@\n-        final private Future<Void> task;\n+        private Future<Void> task;\n@@ -168,1 +169,1 @@\n-        public BufferOutputStream(Process p, Future<Void> task) {\n+        public BufferOutputStream(Process p) {\n@@ -170,1 +171,0 @@\n-            this.task = task;\n@@ -173,0 +173,3 @@\n+        synchronized void setTask(Future<Void> task) {\n+            this.task = task;\n+        }\n@@ -179,1 +182,1 @@\n-                if (!p.isAlive()) {\n+                if (!p.isAlive() && (task != null)) {\n@@ -181,2 +184,0 @@\n-                        \/\/ It is needed to  ensure that stream is flushed after\n-                        \/\/ process is completed.\n@@ -188,2 +189,1 @@\n-                        \/\/ continue execution, so wait(1) give a chance to write\n-                        \/\/ in this buffer by unlocking this synchronized method\n+                        \/\/ continue execution, so wait() give a chance to write\n@@ -208,2 +208,2 @@\n-        public BufferInputStream(Process p, Future<Void> task) {\n-            buffer = new BufferOutputStream(p, task);\n+        public BufferInputStream(Process p) {\n+            buffer = new BufferOutputStream(p);\n@@ -212,1 +212,1 @@\n-        OutputStream getOutputStream() {\n+        BufferOutputStream getOutputStream() {\n@@ -262,0 +262,6 @@\n+        BufferInputStream stdOut = new BufferInputStream(p);\n+        BufferInputStream stdErr = new BufferInputStream(p);\n+\n+        stdout.addOutputStream(stdOut.getOutputStream());\n+        stderr.addOutputStream(stdErr.getOutputStream());\n+\n@@ -273,1 +279,0 @@\n-\n@@ -293,1 +298,0 @@\n-\n@@ -297,5 +301,2 @@\n-        BufferInputStream stdOut = new BufferInputStream(p, stdoutTask);\n-        BufferInputStream stdErr = new BufferInputStream(p, stderrTask);\n-\n-        stdout.addOutputStream(stdOut.getOutputStream());\n-        stderr.addOutputStream(stdErr.getOutputStream());\n+        stdOut.getOutputStream().setTask(stdoutTask);\n+        stdErr.getOutputStream().setTask(stderrTask);\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":19,"deletions":18,"binary":false,"changes":37,"status":"modified"}]}