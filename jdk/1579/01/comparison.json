{"files":[{"patch":"@@ -1,66 +0,0 @@\n-#\n-# Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @summary Basic test of -Djava.security.manager to a class in named module.\n-\n-set -e\n-\n-if [ -z \"$TESTJAVA\" ]; then\n-  if [ $# -lt 1 ]; then exit 1; fi\n-  TESTJAVA=\"$1\"; shift\n-  COMPILEJAVA=\"${TESTJAVA}\"\n-  TESTSRC=`pwd`\n-  TESTCLASSES=`pwd`\n-fi\n-\n-OS=`uname -s`\n-case \"$OS\" in\n-  Windows*)\n-    PS=\";\"\n-    ;;\n-  CYGWIN* )\n-    PS=\";\"\n-    ;;\n-  * )\n-    PS=\":\"\n-    ;;\n-esac\n-\n-JAVAC=\"$COMPILEJAVA\/bin\/javac\"\n-JAVA=\"$TESTJAVA\/bin\/java ${TESTVMOPTS}\"\n-\n-mkdir -p mods\n-$JAVAC -d mods --module-source-path ${TESTSRC} `find ${TESTSRC}\/m -name \"*.java\"`\n-\n-mkdir -p classes\n-$JAVAC -d classes ${TESTSRC}\/Test.java\n-\n-$JAVA -cp classes --module-path mods --add-modules m \\\n-    -Djava.security.manager \\\n-    -Djava.security.policy=${TESTSRC}\/test.policy Test\n-$JAVA -cp classes --module-path mods --add-modules m \\\n-    -Djava.security.manager=p.CustomSecurityManager \\\n-    -Djava.security.policy=${TESTSRC}\/test.policy Test\n-\n-exit 0\n","filename":"test\/jdk\/java\/lang\/SecurityManager\/modules\/CustomSecurityManager.sh","additions":0,"deletions":66,"binary":false,"changes":66,"status":"deleted"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import org.testng.annotations.DataProvider;\n+import org.testng.annotations.Test;\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+\/*\n+ * @test\n+ * @summary Basic test of -Djava.security.manager to a class in named module.\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.process.*\n+ *        m\/*\n+ * @run testng\/othervm CustomSecurityManagerTest\n+ *\/\n+public class CustomSecurityManagerTest {\n+\n+    private static final String MODULE_PATH = Paths.get(Utils.TEST_CLASSES).resolve(\"modules\").toString();\n+    private static final String POLICY_PATH = Paths.get(Utils.TEST_SRC).resolve(\"test.policy\").toString();\n+\n+    @DataProvider\n+    public Object[][] testCases() {\n+        return new Object[][]{\n+            new Object[] { List.of(\n+                    \"--module-path\", MODULE_PATH,\n+                    \"--add-modules\", \"m\",\n+                    \"-Djava.security.manager\",\n+                    String.format(\"-Djava.security.policy=%s\", POLICY_PATH),\n+                    \"RunTest\"\n+            ) },\n+            new Object[] { List.of(\n+                    \"--module-path\", MODULE_PATH,\n+                    \"--add-modules\", \"m\",\n+                    \"-Djava.security.manager=p.CustomSecurityManager\",\n+                    String.format(\"-Djava.security.policy=%s\", POLICY_PATH),\n+                    \"RunTest\"\n+            ) }\n+        };\n+    }\n+\n+    @Test(dataProvider = \"testCases\")\n+    public void testProvider(List<String> args) throws Throwable {\n+        ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(args);\n+        OutputAnalyzer outputAnalyzer = ProcessTools.executeCommand(processBuilder);\n+        outputAnalyzer.shouldHaveExitValue(0);\n+    }\n+\n+}\n+\n+class RunTest {\n+    public static void main(String... args) {\n+        SecurityManager sm = System.getSecurityManager();\n+        Module module = sm.getClass().getModule();\n+        String s = System.getProperty(\"java.security.manager\");\n+        String expected = s.isEmpty() ? \"java.base\" : \"m\";\n+        if (!module.isNamed() || !module.getName().equals(expected)) {\n+            throw new RuntimeException(module + \" expected module m instead\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/SecurityManager\/modules\/CustomSecurityManagerTest.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-public class Test {\n-    public static void main(String... args) {\n-        SecurityManager sm = System.getSecurityManager();\n-        Module module = sm.getClass().getModule();\n-        String s = System.getProperty(\"java.security.manager\");\n-        String expected = s.isEmpty() ? \"java.base\" : \"m\";\n-        if (!module.isNamed() || !module.getName().equals(expected)) {\n-            throw new RuntimeException(module + \" expected module m instead\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/SecurityManager\/modules\/Test.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"}]}