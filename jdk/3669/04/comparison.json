{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,1 +106,1 @@\n-        agent.startServer(pid, serverID);\n+        agent.startServer(pid, serverID, null);\n@@ -110,1 +110,1 @@\n-        agent.startServer(javaExecutableName, coreFileName, serverID);\n+        agent.startServer(javaExecutableName, coreFileName, serverID, null);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/DebugServer.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+    private String serverName;\n@@ -206,1 +207,2 @@\n-                                         String uniqueID,\n+                                         String serverID,\n+                                         String serverName,\n@@ -214,1 +216,2 @@\n-        serverID = uniqueID;\n+        this.serverID = serverID;\n+        this.serverName = serverName;\n@@ -223,2 +226,2 @@\n-    public synchronized void startServer(int processID, String uniqueID) {\n-        startServer(processID, uniqueID, 0);\n+    public synchronized void startServer(int processID, String serverID, String serverName) {\n+        startServer(processID, serverID, serverName, 0);\n@@ -232,1 +235,1 @@\n-        startServer(processID, null);\n+        startServer(processID, null, null);\n@@ -242,1 +245,2 @@\n-                                         String uniqueID,\n+                                         String serverID,\n+                                         String serverName,\n@@ -254,1 +258,2 @@\n-        serverID = uniqueID;\n+        this.serverID = serverID;\n+        this.serverName = serverName;\n@@ -265,2 +270,3 @@\n-                                         String uniqueID) {\n-        startServer(javaExecutableName, coreFileName, uniqueID, 0);\n+                                         String serverID,\n+                                         String serverName) {\n+        startServer(javaExecutableName, coreFileName, serverID, serverName, 0);\n@@ -274,1 +280,1 @@\n-        startServer(javaExecutableName, coreFileName, null);\n+        startServer(javaExecutableName, coreFileName, null, null);\n@@ -305,1 +311,1 @@\n-                RMIHelper.unbind(serverID);\n+                RMIHelper.unbind(serverID, serverName);\n@@ -380,1 +386,1 @@\n-                RMIHelper.rebind(serverID, remote);\n+                RMIHelper.rebind(serverID, serverName, remote);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/HotSpotAgent.java","additions":18,"deletions":12,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.util.regex.*;\n@@ -35,0 +36,2 @@\n+    private static final Pattern CONNECT_PATTERN = Pattern.compile(\"^((?<serverid>.+?)@)?(?<host>.+?)(\/(?<servername>.+))?$\");\n+    private static final String DEFAULT_RMI_OBJECT_NAME = \"SARemoteDebugger\";\n@@ -36,1 +39,0 @@\n-    private static String serverNamePrefix;\n@@ -56,2 +58,0 @@\n-\n-        serverNamePrefix = System.getProperty(\"sun.jvm.hotspot.rmi.serverNamePrefix\", \"SARemoteDebugger\");\n@@ -60,2 +60,2 @@\n-    public static void rebind(String uniqueID, Remote object) throws DebuggerException {\n-        String name = getName(uniqueID);\n+    public static void rebind(String serverID, String serverName, Remote object) throws DebuggerException {\n+        String name = getName(serverID, serverName);\n@@ -81,2 +81,2 @@\n-    public static void unbind(String uniqueID) throws DebuggerException {\n-        String name = getName(uniqueID);\n+    public static void unbind(String serverID, String serverName) throws DebuggerException {\n+        String name = getName(serverID, serverName);\n@@ -90,3 +90,5 @@\n-    public static Remote lookup(String debugServerID) throws DebuggerException {\n-        \/\/ debugServerID follows the pattern [unique_id@]host[:port]\n-        \/\/ we have to transform this as \/\/host[:port]\/<serverNamePrefix>['_'<unique_id>]\n+    public static Remote lookup(String connectionString) throws DebuggerException {\n+        \/\/ connectionString follows the pattern [serverid@]host[:port][\/servername]\n+        \/\/ we have to transform this as \/\/host[:port]\/<servername>['_'<serverid>]\n+        Matcher matcher = CONNECT_PATTERN.matcher(connectionString);\n+        matcher.find();\n@@ -94,8 +96,9 @@\n-        int index = debugServerID.indexOf('@');\n-        StringBuilder nameBuf = new StringBuilder(\"\/\/\");\n-        String uniqueID = null;\n-        if (index != -1) {\n-            nameBuf.append(debugServerID.substring(index + 1));\n-            uniqueID = debugServerID.substring(0, index);\n-        } else {\n-            nameBuf.append(debugServerID);\n+        String serverNamePrefix = System.getProperty(\"sun.jvm.hotspot.rmi.serverNamePrefix\");\n+        String rmiObjectName = matcher.group(\"servername\");\n+        if (serverNamePrefix != null) {\n+            if (rmiObjectName == null) {\n+                System.err.println(\"WARNING: sun.jvm.hotspot.rmi.serverNamePrefix is deprecated. Please specify it in --connect.\");\n+                rmiObjectName = serverNamePrefix;\n+            } else {\n+                throw new DebuggerException(\"Cannot set both sun.jvm.hotspot.rmi.serverNamePrefix and servername in --connect together\");\n+            }\n@@ -103,1 +106,5 @@\n-\n+        if (rmiObjectName == null) {\n+            rmiObjectName = DEFAULT_RMI_OBJECT_NAME;\n+        }\n+        StringBuilder nameBuf = new StringBuilder(\"\/\/\");\n+        nameBuf.append(matcher.group(\"host\"));\n@@ -105,2 +112,2 @@\n-        nameBuf.append(serverNamePrefix);\n-        if (uniqueID != null) {\n+        nameBuf.append(rmiObjectName);\n+        if (matcher.group(\"serverid\") != null) {\n@@ -108,1 +115,1 @@\n-            nameBuf.append(uniqueID);\n+            nameBuf.append(matcher.group(\"serverid\"));\n@@ -118,6 +125,16 @@\n-    private static String getName(String uniqueID) {\n-        String name = null;\n-        if (uniqueID != null) {\n-           name = serverNamePrefix + \"_\" + uniqueID;\n-        } else {\n-           name = serverNamePrefix;\n+    private static String getName(String serverID, String serverName) {\n+        String name = serverName;\n+        String serverNamePrefix = System.getProperty(\"sun.jvm.hotspot.rmi.serverNamePrefix\");\n+        if (serverNamePrefix != null) {\n+            if (serverName == null) {\n+                System.err.println(\"WARNING: sun.jvm.hotspot.rmi.serverNamePrefix is deprecated. Please specify it with --servername.\");\n+                name = serverNamePrefix;\n+            } else {\n+                throw new DebuggerException(\"Cannot set both sun.jvm.hotspot.rmi.serverNamePrefix and --servername together\");\n+            }\n+        }\n+        if (name == null) {\n+            name = DEFAULT_RMI_OBJECT_NAME;\n+        }\n+        if (serverID != null) {\n+           name += \"_\" + serverID;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/RMIHelper.java","additions":45,"deletions":28,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-            System.out.println(\"    --connect [<id>@]<host>[:registryport] To connect to a remote debug server (debugd).\");\n+            System.out.println(\"    --connect [<serverid>@]<host>[:registryport][\/servername] To connect to a remote debug server (debugd).\");\n@@ -88,1 +88,1 @@\n-            System.out.println(\"          or  jhsdb \" + mode + \" --connect id@debugserver:1234\");\n+            System.out.println(\"          or  jhsdb \" + mode + \" --connect serverid@debugserver:1234\/servername\");\n@@ -94,3 +94,2 @@\n-        \/\/ [options] <pid> [server-id]\n-        \/\/ [options] <executable> <core> [server-id]\n-        System.out.println(\"    --serverid <id>         A unique identifier for this debug server.\");\n+        System.out.println(\"    --serverid <id>         A unique identifier for this debugd server.\");\n+        System.out.println(\"    --servername <name>     Instance name of debugd server.\");\n@@ -379,1 +378,2 @@\n-                \"hostname=\", \"hostname\");\n+                \"hostname=\", \"hostname\",\n+                \"servername=\", \"servername\");\n@@ -394,0 +394,1 @@\n+        String serverName = argMap.get(\"servername\");\n@@ -437,1 +438,1 @@\n-                agent.startServer(pid, serverID, rmiPort);\n+                agent.startServer(pid, serverID, serverName, rmiPort);\n@@ -449,1 +450,1 @@\n-                agent.startServer(javaExecutableName, coreFileName, serverID, rmiPort);\n+                agent.startServer(javaExecutableName, coreFileName, serverID, serverName, rmiPort);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/SALauncher.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-\\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host[:registryport]\\f[R]\\]\n+\\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R]\\]\n@@ -39,1 +39,1 @@\n-\\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host[:registryport]\\f[R]\\]\n+\\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R]\\]\n@@ -47,1 +47,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host[:registryport]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n@@ -52,1 +52,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host[:registryport]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n@@ -57,1 +57,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host[:registryport]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n@@ -62,1 +62,1 @@\n-| \\f[CB]\\-\\-connect\\f[R] \\f[I][server\\-id\\@]debugd\\-host[:registryport]\\f[R])\n+| \\f[CB]\\-\\-connect\\f[R] \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R])\n@@ -84,1 +84,1 @@\n-.B \\f[I][server\\-id\\@]debugd\\-host[:registryport]\\f[R]\n+.B \\f[I][serverid\\@]debugd\\-host[:registryport][\/servername]\\f[R]\n@@ -161,1 +161,1 @@\n-.B \\f[CB]\\-\\-serverid\\f[R] \\f[I]server\\-id\\f[R]\n+.B \\f[CB]\\-\\-serverid\\f[R] \\f[I]serverid\\f[R]\n@@ -163,1 +163,2 @@\n-This is required if multiple debug servers are run on the same machine.\n+This is required if multiple debug servers are run on the same server instance.\n+It would be added to RMI object name for server instance.\n@@ -201,0 +202,7 @@\n+.TP\n+.B \\f[CB]\\-\\-servername\\f[R] \\f[I]servername\\f[R]\n+Sets the instance name of debugd server to distinguish SA debugee.\n+It is used for RMI object name for server instance.\n+If not specified, \"SARemoteDebugger\" will be used.\n+.RS\n+.RE\n","filename":"src\/jdk.hotspot.agent\/share\/man\/jhsdb.1","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-            debugd = new DebugdUtils(null);\n+            debugd = new DebugdUtils();\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/ClhsdbAttachToDebugServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-            debugd = new DebugdUtils(null);\n+            debugd = new DebugdUtils();\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/ClhsdbTestConnectArgument.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-    private static OutputAnalyzer runJHSDB(String command, String id) throws IOException, InterruptedException {\n+    private static OutputAnalyzer runJHSDB(String command, String serverID) throws IOException, InterruptedException {\n@@ -52,2 +52,2 @@\n-        if (id != null) {\n-            jhsdbLauncher.addToolArg(id + \"@localhost\");\n+        if (serverID != null) {\n+            jhsdbLauncher.addToolArg(serverID + \"@localhost\");\n@@ -69,2 +69,2 @@\n-    private static void runJSTACK(String id) throws IOException, InterruptedException {\n-        OutputAnalyzer out = runJHSDB(\"jstack\", id);\n+    private static void runJSTACK(String serverID) throws IOException, InterruptedException {\n+        OutputAnalyzer out = runJHSDB(\"jstack\", serverID);\n@@ -77,2 +77,2 @@\n-    private static void runJMAP(String id) throws IOException, InterruptedException {\n-        OutputAnalyzer out = runJHSDB(\"jmap\", id);\n+    private static void runJMAP(String serverID) throws IOException, InterruptedException {\n+        OutputAnalyzer out = runJHSDB(\"jmap\", serverID);\n@@ -85,2 +85,2 @@\n-    private static void runJINFO(String id) throws IOException, InterruptedException {\n-        OutputAnalyzer out = runJHSDB(\"jinfo\", id);\n+    private static void runJINFO(String serverID) throws IOException, InterruptedException {\n+        OutputAnalyzer out = runJHSDB(\"jinfo\", serverID);\n@@ -93,2 +93,2 @@\n-    private static void runJSNAP(String id) throws IOException, InterruptedException {\n-        OutputAnalyzer out = runJHSDB(\"jsnap\", id);\n+    private static void runJSNAP(String serverID) throws IOException, InterruptedException {\n+        OutputAnalyzer out = runJHSDB(\"jsnap\", serverID);\n@@ -101,2 +101,5 @@\n-    private static void runTests(String id, long debuggeePid) throws IOException, InterruptedException {\n-        DebugdUtils debugd = new DebugdUtils(id);\n+    private static void runTests(String serverID, long debuggeePid) throws IOException, InterruptedException {\n+        DebugdUtils debugd = new DebugdUtils();\n+        if (serverID != null) {\n+            debugd.setServerID(serverID);\n+        }\n@@ -106,4 +109,4 @@\n-            runJSTACK(id);\n-            runJMAP(id);\n-            runJINFO(id);\n-            runJSNAP(id);\n+            runJSTACK(serverID);\n+            runJMAP(serverID);\n+            runJINFO(serverID);\n+            runJSNAP(serverID);\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/DebugdConnectTest.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final String id;\n+    private String serverID;\n@@ -37,1 +37,1 @@\n-    private String prefix;\n+    private String serverName;\n@@ -40,2 +40,2 @@\n-    public DebugdUtils(String id) {\n-        this.id = id;\n+    public DebugdUtils() {\n+        this.serverID = null;\n@@ -44,1 +44,1 @@\n-        this.prefix = null;\n+        this.serverName = null;\n@@ -56,2 +56,6 @@\n-    public void setPrefix(String prefix) {\n-        this.prefix = prefix;\n+    public void setServerID(String serverID) {\n+        this.serverID = serverID;\n+    }\n+\n+    public void setServerName(String serverName) {\n+        this.serverName = serverName;\n@@ -63,3 +67,0 @@\n-        if (prefix != null) {\n-            jhsdbLauncher.addToolArg(\"-J-Dsun.jvm.hotspot.rmi.serverNamePrefix=\" + prefix);\n-        }\n@@ -69,1 +70,1 @@\n-        if (id != null) {\n+        if (serverID != null) {\n@@ -71,1 +72,1 @@\n-            jhsdbLauncher.addToolArg(id);\n+            jhsdbLauncher.addToolArg(serverID);\n@@ -80,0 +81,4 @@\n+        if (serverName != null) {\n+            jhsdbLauncher.addToolArg(\"--servername\");\n+            jhsdbLauncher.addToolArg(serverName);\n+        }\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/DebugdUtils.java","additions":17,"deletions":12,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @bug 8263636\n+ * @bug 8263636 8263635\n@@ -49,2 +49,2 @@\n-    private static DebugdUtils attachWithDebugd(int pid, boolean disableRegistry, String prefix) throws IOException {\n-        var debugd = new DebugdUtils(null);\n+    private static DebugdUtils attachWithDebugd(int pid, boolean disableRegistry, String serverName) throws IOException {\n+        var debugd = new DebugdUtils();\n@@ -53,1 +53,1 @@\n-        debugd.setPrefix(prefix);\n+        debugd.setServerName(serverName);\n@@ -58,1 +58,3 @@\n-    private static void test(String prefix) throws IOException, InterruptedException {\n+    private static void test(String serverName) throws IOException, InterruptedException {\n+        assert serverName != null;\n+\n@@ -60,3 +62,0 @@\n-        if (prefix != null) {\n-            jhsdbLauncher.addToolArg(\"-J-Dsun.jvm.hotspot.rmi.serverNamePrefix=\" + prefix);\n-        }\n@@ -65,1 +64,1 @@\n-        jhsdbLauncher.addToolArg(\"localhost:\" + REGISTRY_PORT);\n+        jhsdbLauncher.addToolArg(\"localhost:\" + REGISTRY_PORT + \"\/\" + serverName);\n@@ -74,1 +73,1 @@\n-        out.shouldContain(\"Attaching to remote server localhost:10000, please wait...\");\n+        out.shouldContain(\"Attaching to remote server localhost:10000\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/DisableRegistryTest.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-            debugd = new DebugdUtils(null);\n+            debugd = new DebugdUtils();\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/PmapOnDebugdTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-            debugd = new DebugdUtils(null);\n+            debugd = new DebugdUtils();\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/sadebugd\/RunCommandOnServerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}