{"files":[{"patch":"@@ -75,12 +75,1 @@\n-  struct RemoveAll {\n-    bool do_entry(const JvmtiTagMapKey& entry, const jlong& tag) {\n-      return true;\n-    }\n-  } remove_all;\n-  \/\/ The unlink method of ResourceHashTable gets a pointer to a type whose 'do_entry(K,V)' method is callled\n-  \/\/ while iterating over all the elements of the table. If the do_entry() method returns true the element\n-  \/\/ will be removed.\n-  \/\/ In this case, we always return true from do_entry to clear all the elements.\n-  _table.unlink(&remove_all);\n-\n-  assert(_table.number_of_entries() == 0, \"should have removed all entries\");\n+  _table.unlink_all();\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMapTable.cpp","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -339,1 +339,1 @@\n-TEST_VM_F(SimpleResourceHashtableDeleteTest, simle_unlink_all) {\n+TEST_VM_F(SimpleResourceHashtableDeleteTest, simple_unlink_all) {\n","filename":"test\/hotspot\/gtest\/utilities\/test_resourceHash.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}