{"files":[{"patch":"@@ -217,1 +217,1 @@\n-        switch (p.getLeaf().getKind()) {\n+        implicitHeadingRank = switch (p.getLeaf().getKind()) {\n@@ -220,9 +220,2 @@\n-            case MODULE:\n-            case PACKAGE:\n-            case CLASS:\n-            case INTERFACE:\n-            case ENUM:\n-            case ANNOTATION_TYPE:\n-            case RECORD:\n-                implicitHeadingRank = 1;\n-                break;\n+            case MODULE, PACKAGE, CLASS, INTERFACE, ENUM, ANNOTATION_TYPE, RECORD -> 1;\n+\n@@ -233,3 +226,2 @@\n-            case COMPILATION_UNIT:\n-                implicitHeadingRank = fo.isNameCompatible(\"package\", JavaFileObject.Kind.HTML) ? 1 : 0;\n-                break;\n+            case COMPILATION_UNIT -> fo.isNameCompatible(\"package\", JavaFileObject.Kind.HTML) ? 1 : 0;\n+\n@@ -240,4 +232,1 @@\n-            case METHOD:\n-            case VARIABLE:\n-                implicitHeadingRank = 3;\n-                break;\n+            case METHOD, VARIABLE ->  3;\n@@ -245,3 +234,2 @@\n-            default:\n-                Assert.error(\"unexpected tree kind: \" + p.getLeaf().getKind() + \" \" + fo);\n-        }\n+            default -> throw new AssertionError(\"unexpected tree kind: \" + p.getLeaf().getKind() + \" \" + fo);\n+        };\n@@ -262,2 +250,1 @@\n-                    case VOID, NONE -> {\n-                    }\n+                    case VOID, NONE -> { }\n@@ -390,3 +377,1 @@\n-                case H1: case H2: case H3: case H4: case H5: case H6:\n-                    checkHeading(tree, t);\n-                    break;\n+                case H1, H2, H3, H4, H5, H6 -> checkHeading(tree, t);\n@@ -404,1 +389,1 @@\n-            \/\/ check for self closing tags, such as <a id=\"name\"\/>\n+            \/\/ check for self-closing tags, such as <a id=\"name\"\/>\n@@ -420,1 +405,1 @@\n-                    case CAPTION:\n+                    case CAPTION -> {\n@@ -423,1 +408,1 @@\n-                        break;\n+                    }\n@@ -425,1 +410,1 @@\n-                    case H1: case H2: case H3: case H4: case H5: case H6:\n+                    case H1, H2, H3, H4, H5, H6 -> {\n@@ -429,1 +414,1 @@\n-                        break;\n+                    }\n@@ -431,1 +416,1 @@\n-                    case IMG:\n+                    case IMG -> {\n@@ -434,1 +419,1 @@\n-                        break;\n+                    }\n@@ -456,1 +441,1 @@\n-            case BLOCK:\n+            case BLOCK -> {\n@@ -461,1 +446,1 @@\n-                    case START_ELEMENT: {\n+                    case START_ELEMENT -> {\n@@ -469,1 +454,0 @@\n-                    break;\n@@ -471,2 +455,1 @@\n-                    case LINK:\n-                    case LINK_PLAIN: {\n+                    case LINK, LINK_PLAIN -> {\n@@ -479,1 +462,1 @@\n-                break;\n+            }\n@@ -481,1 +464,1 @@\n-            case INLINE:\n+            case INLINE -> {\n@@ -484,1 +467,1 @@\n-                break;\n+            }\n@@ -486,2 +469,1 @@\n-            case LIST_ITEM:\n-            case TABLE_ITEM:\n+            case LIST_ITEM, TABLE_ITEM -> {\n@@ -494,1 +476,1 @@\n-                break;\n+            }\n@@ -496,1 +478,1 @@\n-            case OTHER:\n+            case OTHER -> {\n@@ -498,2 +480,2 @@\n-                    case SCRIPT:\n-                        \/\/ <script> may or may not be allowed, depending on --allow-script-in-comments\n+                    case SCRIPT -> {\n+                        \/\/ <script> may or may not be allowed, depending on --allow-script-in-comments,\n@@ -502,1 +484,1 @@\n-                        break;\n+                    }\n@@ -504,1 +486,1 @@\n-                    default:\n+                    default ->\n@@ -508,0 +490,1 @@\n+            }\n@@ -532,11 +515,11 @@\n-        if (tag == null)\n-            return implicitHeadingRank;\n-        switch (tag) {\n-            case H1: return 1;\n-            case H2: return 2;\n-            case H3: return 3;\n-            case H4: return 4;\n-            case H5: return 5;\n-            case H6: return 6;\n-            default: throw new IllegalArgumentException();\n-        }\n+        return (tag == null)\n+                ? implicitHeadingRank\n+                : switch (tag) {\n+                        case H1 -> 1;\n+                        case H2 -> 2;\n+                        case H3 -> 3;\n+                        case H4 -> 4;\n+                        case H5 -> 5;\n+                        case H6 -> 6;\n+                        default -> throw new IllegalArgumentException();\n+                    };\n@@ -559,1 +542,1 @@\n-                        case TABLE:\n+                        case TABLE -> {\n@@ -566,1 +549,1 @@\n-                            break;\n+                        }\n@@ -568,2 +551,1 @@\n-                        case SECTION:\n-                        case ARTICLE:\n+                        case SECTION, ARTICLE -> {\n@@ -573,1 +555,1 @@\n-                            break;\n+                        }\n@@ -650,3 +632,3 @@\n-                    case OK:\n-                        break;\n-                    case OBSOLETE:\n+                    case OK -> { }\n+\n+                    case OBSOLETE ->\n@@ -654,2 +636,2 @@\n-                        break;\n-                    case HTML4:\n+\n+                    case HTML4 ->\n@@ -657,2 +639,2 @@\n-                        break;\n-                    case INVALID:\n+\n+                    case INVALID ->\n@@ -660,1 +642,0 @@\n-                        break;\n@@ -666,1 +647,1 @@\n-                    case ID:\n+                    case ID -> {\n@@ -678,1 +659,1 @@\n-                        break;\n+                    }\n@@ -680,1 +661,1 @@\n-                    case HREF:\n+                    case HREF -> {\n@@ -696,1 +677,1 @@\n-                        break;\n+                    }\n@@ -698,1 +679,1 @@\n-                    case VALUE:\n+                    case VALUE -> {\n@@ -707,1 +688,1 @@\n-                        break;\n+                    }\n@@ -709,1 +690,1 @@\n-                    case BORDER:\n+                    case BORDER -> {\n@@ -729,1 +710,1 @@\n-                        break;\n+                    }\n@@ -731,1 +712,1 @@\n-                    case ROLE:\n+                    case ROLE -> {\n@@ -738,1 +719,1 @@\n-                        break;\n+                    }\n@@ -750,7 +731,2 @@\n-        Element e = getEnclosingPackageOrClass(env.currElement);\n-        if (e == null)\n-            return true;\n-        Set<String> set = foundAnchors.get(e);\n-        if (set == null)\n-            foundAnchors.put(e, set = new HashSet<>());\n-        return set.add(name);\n+        var e = getEnclosingPackageOrClass(env.currElement);\n+        return e == null || foundAnchors.computeIfAbsent(e, k -> new HashSet<>()).add(name);\n@@ -761,8 +737,2 @@\n-            switch (e.getKind()) {\n-                case CLASS:\n-                case ENUM:\n-                case INTERFACE:\n-                case PACKAGE:\n-                    return e;\n-                default:\n-                    e = e.getEnclosingElement();\n+            if (e.getKind().isDeclaredType() || e.getKind() == ElementKind.PACKAGE) {\n+                return e;\n@@ -770,0 +740,2 @@\n+\n+            e = e.getEnclosingElement();\n@@ -780,1 +752,1 @@\n-    private static final Pattern docRoot = Pattern.compile(\"(?i)(\\\\{@docRoot *\\\\}\/?)?(.*)\");\n+    private static final Pattern docRoot = Pattern.compile(\"(?i)(\\\\{@docRoot *}\/?)?(.*)\");\n@@ -801,1 +773,1 @@\n-            URI u = new URI(uri);\n+            new URI(uri);\n@@ -887,1 +859,0 @@\n-    @SuppressWarnings(\"fallthrough\")\n@@ -895,2 +866,4 @@\n-                case CLASS: case INTERFACE: {\n-                    if (!typaram) {\n+                case CLASS, INTERFACE -> {\n+                    if (typaram) {\n+                        env.messages.error(REFERENCE, nameTree, \"dc.param.name.not.found\");\n+                    } else {\n@@ -898,1 +871,0 @@\n-                        break;\n@@ -901,1 +873,2 @@\n-                case METHOD: case CONSTRUCTOR: {\n+\n+                case METHOD, CONSTRUCTOR, RECORD ->\n@@ -903,2 +876,0 @@\n-                    break;\n-                }\n@@ -906,1 +877,1 @@\n-                default:\n+                default ->\n@@ -908,1 +879,0 @@\n-                    break;\n@@ -1059,2 +1029,1 @@\n-                case CONSTRUCTOR:\n-                case METHOD:\n+                case CONSTRUCTOR, METHOD -> {\n@@ -1065,2 +1034,3 @@\n-                    break;\n-                default:\n+                }\n+\n+                default ->\n@@ -1077,6 +1047,4 @@\n-        switch (tm.getKind()) {\n-            case DECLARED:\n-            case TYPEVAR:\n-                return env.types.isAssignable(tm, env.java_lang_Throwable);\n-        }\n-        return false;\n+        return switch (tm.getKind()) {\n+            case DECLARED, TYPEVAR -> env.types.isAssignable(tm, env.java_lang_Throwable);\n+            default -> false;\n+        };\n@@ -1156,1 +1124,4 @@\n-        if (e == null)\n+        if (e != null && e.getKind() == ElementKind.FIELD) {\n+            Object value = ((VariableElement) e).getConstantValue();\n+            return (value != null); \/\/ can't distinguish \"not a constant\" from \"constant is null\"\n+        } else {\n@@ -1158,7 +1129,0 @@\n-\n-        switch (e.getKind()) {\n-            case FIELD:\n-                Object value = ((VariableElement) e).getConstantValue();\n-                return (value != null); \/\/ can't distinguish \"not a constant\" from \"constant is null\"\n-            default:\n-                return false;\n@@ -1202,6 +1166,7 @@\n-        switch (env.currElement.getKind()) {\n-            case CONSTRUCTOR:\n-                \/\/ A synthetic default constructor has the same pos as the\n-                \/\/ enclosing class\n-                TreePath p = env.currPath;\n-                return env.getPos(p) == env.getPos(p.getParentPath());\n+        if (env.currElement.getKind() == ElementKind.CONSTRUCTOR) {\n+            \/\/ A synthetic default constructor has the same pos as the\n+            \/\/ enclosing class\n+            TreePath p = env.currPath;\n+            return env.getPos(p) == env.getPos(p.getParentPath());\n+        } else {\n+            return false;\n@@ -1209,1 +1174,0 @@\n-        return false;\n@@ -1246,0 +1210,1 @@\n+    \/\/ for debug use\n@@ -1265,1 +1230,1 @@\n-                case TEXT:\n+                case TEXT -> {\n@@ -1268,2 +1233,3 @@\n-                    break;\n-                default:\n+                }\n+\n+                default -> {\n@@ -1271,0 +1237,1 @@\n+                }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":103,"deletions":136,"binary":false,"changes":239,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-RecordParamsTest.java:14: error: invalid use of @param\n+RecordParamsTest.java:14: error: @param name not found\n@@ -6,1 +6,1 @@\n-   ^\n+          ^\n","filename":"test\/langtools\/tools\/doclint\/RecordParamsTest.out","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}