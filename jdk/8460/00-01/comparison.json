{"files":[{"patch":"@@ -866,1 +866,1 @@\n-                case CLASS, ENUM, INTERFACE, ANNOTATION_TYPE -> {\n+                case CLASS, INTERFACE -> {\n@@ -1124,1 +1124,4 @@\n-        if (e == null)\n+        if (e != null && e.getKind() == ElementKind.FIELD) {\n+            Object value = ((VariableElement) e).getConstantValue();\n+            return (value != null); \/\/ can't distinguish \"not a constant\" from \"constant is null\"\n+        } else {\n@@ -1126,9 +1129,1 @@\n-\n-        return switch (e.getKind()) {\n-            case FIELD -> {\n-                Object value = ((VariableElement) e).getConstantValue();\n-                yield (value != null); \/\/ can't distinguish \"not a constant\" from \"constant is null\"\n-            }\n-\n-            default -> false;\n-        };\n+        }\n@@ -1171,9 +1166,8 @@\n-        return switch (env.currElement.getKind()) {\n-            case CONSTRUCTOR -> {\n-                \/\/ A synthetic default constructor has the same pos as the\n-                \/\/ enclosing class\n-                TreePath p = env.currPath;\n-                yield env.getPos(p) == env.getPos(p.getParentPath());\n-            }\n-            default -> false;\n-        };\n+        if (env.currElement.getKind() == ElementKind.CONSTRUCTOR) {\n+            \/\/ A synthetic default constructor has the same pos as the\n+            \/\/ enclosing class\n+            TreePath p = env.currPath;\n+            return env.getPos(p) == env.getPos(p.getParentPath());\n+        } else {\n+            return false;\n+        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"}]}