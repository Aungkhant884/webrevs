{"files":[{"patch":"@@ -234,17 +234,0 @@\n-Arena *Arena::move_contents(Arena *copy) {\n-  copy->destruct_contents();\n-  copy->_chunk = _chunk;\n-  copy->_hwm   = _hwm;\n-  copy->_max   = _max;\n-  copy->_first = _first;\n-\n-  \/\/ workaround rare racing condition, which could double count\n-  \/\/ the arena size by native memory tracking\n-  size_t size = size_in_bytes();\n-  set_size_in_bytes(0);\n-  copy->set_size_in_bytes(size);\n-  \/\/ Destroy original arena\n-  reset();\n-  return copy;            \/\/ Return Arena with contents\n-}\n-\n","filename":"src\/hotspot\/share\/memory\/arena.cpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -161,3 +161,0 @@\n-  \/\/ Move contents of this arena into an empty arena\n-  Arena *move_contents(Arena *empty_arena);\n-\n@@ -176,1 +173,1 @@\n-  void   reset(void) {\n+  void reset(void) {\n","filename":"src\/hotspot\/share\/memory\/arena.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -627,1 +627,1 @@\n-                  _dead_node_list(comp_arena()),\n+                  _unique(0),\n@@ -629,2 +629,4 @@\n-                  _node_arena(mtCompiler),\n-                  _old_arena(mtCompiler),\n+                  _dead_node_list(comp_arena()),\n+                  _node_arena_one(mtCompiler),\n+                  _node_arena_two(mtCompiler),\n+                  _node_arena(&_node_arena_one),\n@@ -916,1 +918,1 @@\n-    _dead_node_list(comp_arena()),\n+    _unique(0),\n@@ -918,2 +920,4 @@\n-    _node_arena(mtCompiler),\n-    _old_arena(mtCompiler),\n+    _dead_node_list(comp_arena()),\n+    _node_arena_one(mtCompiler),\n+    _node_arena_two(mtCompiler),\n+    _node_arena(&_node_arena_one),\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -342,0 +342,1 @@\n+  bool                  _clinit_barrier_on_entry; \/\/ True if clinit barrier is needed on nmethod entry\n@@ -344,1 +345,0 @@\n-  bool                  _clinit_barrier_on_entry; \/\/ True if clinit barrier is needed on nmethod entry\n@@ -372,1 +372,0 @@\n-  VectorSet             _dead_node_list;        \/\/ Set of dead nodes\n@@ -375,0 +374,1 @@\n+  VectorSet             _dead_node_list;        \/\/ Set of dead nodes\n@@ -378,2 +378,15 @@\n-  Arena                 _node_arena;            \/\/ Arena for new-space Nodes\n-  Arena                 _old_arena;             \/\/ Arena for old-space Nodes, lifetime during xform\n+  \/\/ Arenas for new-space and old-space nodes.\n+  \/\/ Swapped between using _node_arena.\n+  \/\/ The lifetime of the old-space nodes is during xform.\n+  Arena                 _node_arena_one;\n+  Arena                 _node_arena_two;\n+  Arena*                _node_arena;\n+public:\n+  Arena* swap_old_and_new() {\n+    Arena* filled_arena_ptr = _node_arena;\n+    Arena* old_arena_ptr = old_arena();\n+    old_arena_ptr->destruct_contents();\n+    _node_arena = old_arena_ptr;\n+    return filled_arena_ptr;\n+  }\n+private:\n@@ -798,2 +811,2 @@\n-  Arena*       node_arena()                { return &_node_arena; }\n-  Arena*       old_arena()                 { return &_old_arena; }\n+  Arena*       node_arena()                { return _node_arena; }\n+  Arena*       old_arena()                 { return &_node_arena_one == _node_arena ? &_node_arena_two : &_node_arena_one; }\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -338,1 +338,1 @@\n-  Arena *old = C->node_arena()->move_contents(C->old_arena());\n+  Arena *old = C->swap_old_and_new();\n","filename":"src\/hotspot\/share\/opto\/matcher.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}