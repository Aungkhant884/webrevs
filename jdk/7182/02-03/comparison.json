{"files":[{"patch":"@@ -153,1 +153,6 @@\n-            makeConfigurations();\n+            XToolkit.awtLock();\n+            try {\n+                makeConfigurations();\n+            } finally {\n+                XToolkit.awtUnlock();\n+            }\n@@ -159,11 +164,9 @@\n-        XToolkit.awtLock();\n-        try {\n-            if (configs == null) {\n-                int i = 1;  \/\/ Index 0 is always the default config\n-                int num = getNumConfigs(screen);\n-                GraphicsConfiguration[] ret = new GraphicsConfiguration[num];\n-                if (defaultConfig == null) {\n-                    ret[0] = getDefaultConfiguration();\n-                } else {\n-                    ret[0] = defaultConfig;\n-                }\n+        if (configs == null) {\n+            int i = 1;  \/\/ Index 0 is always the default config\n+            int num = getNumConfigs(screen);\n+            GraphicsConfiguration[] ret = new GraphicsConfiguration[num];\n+            if (defaultConfig == null) {\n+                ret[0] = getDefaultConfiguration();\n+            } else {\n+                ret[0] = defaultConfig;\n+            }\n@@ -171,2 +174,2 @@\n-                boolean glxSupported = X11GraphicsEnvironment.isGLXAvailable();\n-                boolean xrenderSupported = X11GraphicsEnvironment.isXRenderAvailable();\n+            boolean glxSupported = X11GraphicsEnvironment.isGLXAvailable();\n+            boolean xrenderSupported = X11GraphicsEnvironment.isXRenderAvailable();\n@@ -174,4 +177,10 @@\n-                boolean dbeSupported = isDBESupported();\n-                if (dbeSupported && doubleBufferVisuals == null) {\n-                    doubleBufferVisuals = new HashSet<>();\n-                    getDoubleBufferVisuals(screen);\n+            boolean dbeSupported = isDBESupported();\n+            if (dbeSupported && doubleBufferVisuals == null) {\n+                doubleBufferVisuals = new HashSet<>();\n+                getDoubleBufferVisuals(screen);\n+            }\n+            for (; i < num; i++) {\n+                int visNum = getConfigVisualId(i, screen);\n+                int depth = getConfigDepth(i, screen);\n+                if (glxSupported) {\n+                    ret[i] = GLXGraphicsConfig.getConfig(this, visNum);\n@@ -179,10 +188,4 @@\n-                for (; i < num; i++) {\n-                    int visNum = getConfigVisualId(i, screen);\n-                    int depth = getConfigDepth(i, screen);\n-                    if (glxSupported) {\n-                        ret[i] = GLXGraphicsConfig.getConfig(this, visNum);\n-                    }\n-                    if (ret[i] == null) {\n-                        boolean doubleBuffer =\n-                                (dbeSupported &&\n-                                        doubleBufferVisuals.contains(Integer.valueOf(visNum)));\n+                if (ret[i] == null) {\n+                    boolean doubleBuffer =\n+                            (dbeSupported &&\n+                                    doubleBufferVisuals.contains(Integer.valueOf(visNum)));\n@@ -190,8 +193,7 @@\n-                        if (xrenderSupported) {\n-                            ret[i] = XRGraphicsConfig.getConfig(this, visNum, depth,\n-                                    getConfigColormap(i, screen), doubleBuffer);\n-                        } else {\n-                            ret[i] = X11GraphicsConfig.getConfig(this, visNum, depth,\n-                                    getConfigColormap(i, screen),\n-                                    doubleBuffer);\n-                        }\n+                    if (xrenderSupported) {\n+                        ret[i] = XRGraphicsConfig.getConfig(this, visNum, depth,\n+                                getConfigColormap(i, screen), doubleBuffer);\n+                    } else {\n+                        ret[i] = X11GraphicsConfig.getConfig(this, visNum, depth,\n+                                getConfigColormap(i, screen),\n+                                doubleBuffer);\n@@ -200,1 +202,0 @@\n-                configs = ret;\n@@ -202,2 +203,1 @@\n-        } finally {\n-            XToolkit.awtUnlock();\n+            configs = ret;\n@@ -243,1 +243,6 @@\n-            makeDefaultConfiguration();\n+            XToolkit.awtLock();\n+            try {\n+                makeDefaultConfiguration();\n+            } finally {\n+                XToolkit.awtUnlock();\n+            }\n@@ -249,14 +254,9 @@\n-        XToolkit.awtLock();\n-        try {\n-            if (defaultConfig == null) {\n-                int visNum = getConfigVisualId(0, screen);\n-                if (X11GraphicsEnvironment.isGLXAvailable()) {\n-                    defaultConfig = GLXGraphicsConfig.getConfig(this, visNum);\n-                    if (X11GraphicsEnvironment.isGLXVerbose()) {\n-                        if (defaultConfig != null) {\n-                            System.out.print(\"OpenGL pipeline enabled\");\n-                        } else {\n-                            System.out.print(\"Could not enable OpenGL pipeline\");\n-                        }\n-                        System.out.println(\" for default config on screen \" +\n-                                screen);\n+        if (defaultConfig == null) {\n+            int visNum = getConfigVisualId(0, screen);\n+            if (X11GraphicsEnvironment.isGLXAvailable()) {\n+                defaultConfig = GLXGraphicsConfig.getConfig(this, visNum);\n+                if (X11GraphicsEnvironment.isGLXVerbose()) {\n+                    if (defaultConfig != null) {\n+                        System.out.print(\"OpenGL pipeline enabled\");\n+                    } else {\n+                        System.out.print(\"Could not enable OpenGL pipeline\");\n@@ -264,0 +264,12 @@\n+                    System.out.println(\" for default config on screen \" +\n+                            screen);\n+                }\n+            }\n+            if (defaultConfig == null) {\n+                int depth = getConfigDepth(0, screen);\n+                boolean doubleBuffer = false;\n+                if (isDBESupported() && doubleBufferVisuals == null) {\n+                    doubleBufferVisuals = new HashSet<>();\n+                    getDoubleBufferVisuals(screen);\n+                    doubleBuffer =\n+                            doubleBufferVisuals.contains(Integer.valueOf(visNum));\n@@ -265,9 +277,0 @@\n-                if (defaultConfig == null) {\n-                    int depth = getConfigDepth(0, screen);\n-                    boolean doubleBuffer = false;\n-                    if (isDBESupported() && doubleBufferVisuals == null) {\n-                        doubleBufferVisuals = new HashSet<>();\n-                        getDoubleBufferVisuals(screen);\n-                        doubleBuffer =\n-                                doubleBufferVisuals.contains(Integer.valueOf(visNum));\n-                    }\n@@ -275,11 +278,3 @@\n-                    if (X11GraphicsEnvironment.isXRenderAvailable()) {\n-                        if (X11GraphicsEnvironment.isXRenderVerbose()) {\n-                            System.out.println(\"XRender pipeline enabled\");\n-                        }\n-                        defaultConfig = XRGraphicsConfig.getConfig(this, visNum,\n-                                depth, getConfigColormap(0, screen),\n-                                doubleBuffer);\n-                    } else {\n-                        defaultConfig = X11GraphicsConfig.getConfig(this, visNum,\n-                                depth, getConfigColormap(0, screen),\n-                                doubleBuffer);\n+                if (X11GraphicsEnvironment.isXRenderAvailable()) {\n+                    if (X11GraphicsEnvironment.isXRenderVerbose()) {\n+                        System.out.println(\"XRender pipeline enabled\");\n@@ -287,0 +282,7 @@\n+                    defaultConfig = XRGraphicsConfig.getConfig(this, visNum,\n+                            depth, getConfigColormap(0, screen),\n+                            doubleBuffer);\n+                } else {\n+                    defaultConfig = X11GraphicsConfig.getConfig(this, visNum,\n+                            depth, getConfigColormap(0, screen),\n+                            doubleBuffer);\n@@ -289,2 +291,0 @@\n-        } finally {\n-            XToolkit.awtUnlock();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/X11GraphicsDevice.java","additions":76,"deletions":76,"binary":false,"changes":152,"status":"modified"}]}