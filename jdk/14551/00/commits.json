[{"commit":{"message":"8309109: AArch64: [TESTBUG] compiler\/intrinsics\/sha\/cli\/TestUseSHA3IntrinsicsOptionOnSupportedCPU.java fails on Neoverse N2 and V1\n\n`UseSHA3Intrinsics` was introduced in JDK-8252204, but it was not\nauto-enabled due to the lack of real hardware. In JDK-8297092, the\nintrinsic was evaluated on existing hardware with the support of SHA3\nfeature (including Neoverse N2\/V1 and Apple silicon), and it was\nauto-enabled by default on Apple silicon only. See the code [1].\n\nAs a result, test case `TestUseSHA3IntrinsicsOptionOnSupportedCPU.java`\nfails on Neoverse N2 and V1 with the following error message:\n\n```\nJavaTest Message: Test threw exception: java.lang.AssertionError: Option 'UseSHA3Intrinsics' is expected to have 'true' value\nOption 'UseSHA3Intrinsics' should be enabled by default\n```\n\nThe group of test cases `TestUseXXXIntrinsicsOptionOnSupportedCPU.java`\nare designed to verify that, option `UseXXXIntrinsics` should be enabled\nby default if the underlying hardware supports the corresponding CPU\nfeature.\n\nApparently this check condition doesn't work for `UseSHA3Intrinsics`.\nThe other expcetion case is `UseSHA512Intrinsics`. See JDK-8257796.\n\nFix: One `@requires` condition is added in this patch to limit that this\ntest case is only run on macOS on Apple silicon. Note that SHA3 feature\nis currently supported by AArch64 only.\n\nTest: this test case passed on Linux\/Neoverse N2, Linux\/Neoverse V1 and\nmacOS on Apple silicon.\n\n[1] https:\/\/github.com\/openjdk\/jdk\/pull\/11382\/files#diff-a87e260510f34ca7d9b0feb089ad982be8268c5c8aa5a71221f6738b051ea488R338-R345"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/sha\/cli\/TestUseSHA3IntrinsicsOptionOnSupportedCPU.java"}],"sha":"f41a2ebda2883a68ca801121d36ddc3819069d9f"}]