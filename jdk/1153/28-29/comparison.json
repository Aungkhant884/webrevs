{"files":[{"patch":"@@ -3735,10 +3735,12 @@\n-  \/\/ Populate large page sizes to _page_sizes. Add pages that\n-  \/\/ are less than or equal to LargePageSizeInBytes, except when LargePageSizeInBytes=0\n-  \/\/ or FLAG_IS_DEFAULT(LargePageSizeInBytes), add all sizes\n-  for (size_t page_size = all_large_pages.largest(); page_size != 0;\n-         page_size = all_large_pages.next_smaller(page_size)) {\n-    if (LargePageSizeInBytes != 0\n-        || !FLAG_IS_DEFAULT(LargePageSizeInBytes)) {\n-      if (page_size <= LargePageSizeInBytes){\n-        _page_sizes.add(page_size);\n-      }\n+  \/\/ Check LargePageSizeInBytes matches an available page size and if so set _large_page_size\n+  \/\/ using LargePageSizeInBytes as the maximum allowed large page size. If LargePageSizeInBytes\n+  \/\/ doesn't match an available page size set _large_page_size to default_large_page_size\n+  \/\/ and use it as the maximum.\n+  if (!FLAG_IS_DEFAULT(LargePageSizeInBytes) && LargePageSizeInBytes != default_large_page_size) {\n+    if (all_large_pages.contains(LargePageSizeInBytes)) {\n+      _large_page_size = LargePageSizeInBytes;\n+      log_info(pagesize)(\"Overriding default large page size ( \"\n+                         SIZE_FORMAT \" ) using LargePageSizeInBytes: \"\n+                         SIZE_FORMAT,\n+                         default_large_page_size,\n+                         LargePageSizeInBytes);\n@@ -3746,1 +3748,1 @@\n-      _page_sizes.add(page_size);\n+      _large_page_size = default_large_page_size;\n@@ -3748,0 +3750,9 @@\n+  } else {\n+    _large_page_size = default_large_page_size;\n+  }\n+\n+  \/\/ Populate _page_sizes with large page sizes less than or equal to\n+  \/\/ _large_page_size.\n+  for (size_t page_size = _large_page_size; page_size != 0;\n+         page_size = all_large_pages.next_smaller(page_size)) {\n+    _page_sizes.add(page_size);\n@@ -3757,12 +3768,0 @@\n-  \/\/ Handle LargePageSizeInBytes\n-  if (!FLAG_IS_DEFAULT(LargePageSizeInBytes) && LargePageSizeInBytes != default_large_page_size) {\n-    if (all_large_pages.contains(LargePageSizeInBytes)) {\n-      _large_page_size = LargePageSizeInBytes;\n-      log_info(os)(\"Overriding default large page size using LargePageSizeInBytes\");\n-    } else {\n-      _large_page_size = default_large_page_size;\n-    }\n-  } else {\n-    _large_page_size = default_large_page_size;\n-  }\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":22,"deletions":23,"binary":false,"changes":45,"status":"modified"}]}