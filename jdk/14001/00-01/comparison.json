{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/RegularHiddenClass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/redefineClass\/RedefineBasicTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import java.util.concurrent.Callable;\n@@ -186,2 +187,0 @@\n-        } catch (IOException ioe) {\n-            throw new RuntimeException(ioe);\n@@ -208,1 +207,1 @@\n-    private static class CloseableCompilationTask implements Closeable {\n+    private static class CloseableCompilationTask implements Closeable, Callable<Boolean> {\n@@ -231,2 +230,7 @@\n-        public void close() throws IOException {\n-            fileManager.close();\n+        @Override\n+        public void close() {\n+            try {\n+                fileManager.close();\n+            } catch (IOException ioe) {\n+                throw new RuntimeException(ioe);\n+            }\n@@ -235,0 +239,1 @@\n+        @Override\n","filename":"test\/lib\/jdk\/test\/lib\/compiler\/InMemoryJavaCompiler.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"}]}