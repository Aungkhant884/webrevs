{"files":[{"patch":"@@ -216,0 +216,3 @@\n+            \/\/ https:\/\/www.rfc-editor.org\/rfc\/rfc8017.html#section-8.2.2\n+            \/\/ Step 4: Compare the encoded message, not the decoded.\n+            byte[] encoded = RSAUtil.encodeSignature(digestOID, digest);\n@@ -218,2 +221,1 @@\n-            byte[] decodedDigest = RSAUtil.decodeSignature(digestOID, unpadded);\n-            return MessageDigest.isEqual(digest, decodedDigest);\n+            return MessageDigest.isEqual(unpadded, encoded);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSASignature.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import sun.security.util.DerInputStream;\n@@ -182,24 +181,0 @@\n-\n-    \/**\n-     * Decode the signature data. Verify that the object identifier matches\n-     * and return the message digest.\n-     *\/\n-    public static byte[] decodeSignature(ObjectIdentifier oid, byte[] sig)\n-            throws IOException {\n-        \/\/ Enforce strict DER checking for signatures\n-        DerInputStream in = new DerInputStream(sig, 0, sig.length, false);\n-        DerValue[] values = in.getSequence(2);\n-        if ((values.length != 2) || (in.available() != 0)) {\n-            throw new IOException(\"SEQUENCE length error\");\n-        }\n-        AlgorithmId algId = AlgorithmId.parse(values[0]);\n-        if (algId.getOID().equals(oid) == false) {\n-            throw new IOException(\"ObjectIdentifier mismatch: \"\n-                + algId.getOID());\n-        }\n-        if (algId.getEncodedParams() != null) {\n-            throw new IOException(\"Unexpected AlgorithmId parameters\");\n-        }\n-        byte[] digest = values[1].getOctetString();\n-        return digest;\n-    }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAUtil.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"}]}