{"files":[{"patch":"@@ -170,9 +170,0 @@\n-    Node* subklass = NULL;\n-    if (sub_t->isa_oopptr()) {\n-      Node* adr = phase->transform(new AddPNode(obj_or_subklass, obj_or_subklass, phase->MakeConX(oopDesc::klass_offset_in_bytes())));\n-      subklass  = phase->transform(LoadKlassNode::make(*phase, NULL, C->immutable_memory(), adr, TypeInstPtr::KLASS));\n-      record_for_cleanup(subklass, phase);\n-    } else {\n-      subklass = obj_or_subklass;\n-    }\n-\n@@ -182,1 +173,1 @@\n-        return verify_helper(phase, subklass, cached_t);\n+        return verify_helper(phase, load_klass(phase, obj_or_subklass), cached_t);\n@@ -192,0 +183,1 @@\n+          Node* subklass = load_klass(phase, obj_or_subklass);\n@@ -213,0 +205,14 @@\n+\n+Node* SubTypeCheckNode::load_klass(PhaseGVN* phase, Node* obj_or_subklass) const {\n+  const Type* sub_t = phase->type(obj_or_subklass);\n+  Node* subklass = NULL;\n+  if (sub_t->isa_oopptr()) {\n+    Node* adr = phase->transform(new AddPNode(obj_or_subklass, obj_or_subklass, phase->MakeConX(oopDesc::klass_offset_in_bytes())));\n+    subklass  = phase->transform(LoadKlassNode::make(*phase, NULL, phase->C->immutable_memory(), adr, TypeInstPtr::KLASS));\n+    record_for_cleanup(subklass, phase);\n+  } else {\n+    subklass = obj_or_subklass;\n+  }\n+  return subklass;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/subtypenode.cpp","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -60,0 +60,2 @@\n+\n+  Node* load_klass(PhaseGVN* phase, Node* obj_or_subklass) const;\n","filename":"src\/hotspot\/share\/opto\/subtypenode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}