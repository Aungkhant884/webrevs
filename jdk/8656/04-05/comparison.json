{"files":[{"patch":"@@ -66,2 +66,2 @@\n-    private static long codeLengthOf(char c) {\n-        return codes[c] & 0x00000000ffffffffL;\n+    private static int codeLengthOf(char c) {\n+        return (int) (codes[c] & 0x00000000ffffffffL);\n@@ -735,1 +735,2 @@\n-                    long len = codeLengthOf(c);\n+                    int len = codeLengthOf(c);\n+                    assert len >= 0;\n@@ -738,1 +739,1 @@\n-                        bufferLen += (int) len;\n+                        bufferLen += len;\n@@ -782,1 +783,1 @@\n-                len += (int) codeLengthOf(c);\n+                len += codeLengthOf(c);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/hpack\/QuickHuffman.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -218,0 +218,1 @@\n+                \/\/ Explicit cast required:\n@@ -230,3 +231,1 @@\n-                \/\/ The negation \"~\" sets the high order bits\n-                \/\/ so the value is more than 16 bits and the\n-                \/\/ compiler will emit a warning if not cast\n+                \/\/ Explicit cast required - see fin() above\n@@ -242,3 +241,1 @@\n-                \/\/ The negation \"~\" sets the high order bits\n-                \/\/ so the value is more than 16 bits and the\n-                \/\/ compiler will emit a warning if not cast\n+                \/\/ Explicit cast required - see fin() above\n@@ -254,3 +251,1 @@\n-                \/\/ The negation \"~\" sets the high order bits\n-                \/\/ so the value is more than 16 bits and the\n-                \/\/ compiler will emit a warning if not cast\n+                \/\/ Explicit cast required - see fin() above\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/Frame.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"}]}