{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    private int accumulatedBytes;\n+    private long accumulatedBytes;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/BufferingSubscriber.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,2 @@\n-    private static long codeLengthOf(char c) {\n-        return codes[c] & 0x00000000ffffffffL;\n+    private static int codeLengthOf(char c) {\n+        return (int) (codes[c] & 0x00000000ffffffffL);\n@@ -735,1 +735,2 @@\n-                    long len = codeLengthOf(c);\n+                    int len = codeLengthOf(c);\n+                    assert len >= 0;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/hpack\/QuickHuffman.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -218,1 +218,5 @@\n-                firstChar &= ~0b10000000_00000000;\n+                \/\/ Explicit cast required:\n+                \/\/ The negation \"~\" sets the high order bits\n+                \/\/ so the value is more than 16 bits and the\n+                \/\/ compiler will emit a warning if not cast\n+                firstChar &= (char) ~0b10000000_00000000;\n@@ -227,1 +231,2 @@\n-                firstChar &= ~0b01000000_00000000;\n+                \/\/ Explicit cast required - see fin() above\n+                firstChar &= (char) ~0b01000000_00000000;\n@@ -236,1 +241,2 @@\n-                firstChar &= ~0b00100000_00000000;\n+                \/\/ Explicit cast required - see fin() above\n+                firstChar &= (char) ~0b00100000_00000000;\n@@ -245,1 +251,2 @@\n-                firstChar &= ~0b00010000_00000000;\n+                \/\/ Explicit cast required - see fin() above\n+                firstChar &= (char) ~0b00010000_00000000;\n@@ -262,1 +269,1 @@\n-                firstChar |= payloadLen;\n+                firstChar |= (char) payloadLen;\n@@ -279,1 +286,4 @@\n-            firstChar &= ~0b00000000_10000000;\n+            \/\/ The negation \"~\" sets the high order bits\n+            \/\/ so the value is more than 16 bits and the\n+            \/\/ compiler will emit a warning if not cast\n+            firstChar &= (char) ~0b00000000_10000000;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/Frame.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"}]}