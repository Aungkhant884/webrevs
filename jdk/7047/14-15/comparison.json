{"files":[{"patch":"@@ -596,2 +596,1 @@\n-  inline bool mark_in_next_bitmap(uint worker_id, HeapRegion* const hr, oop const obj, bool mark_unconditionally = false);\n-  inline bool mark_in_next_bitmap_unconditionally(uint worker_id, oop const obj);\n+  inline bool mark_in_next_bitmap(uint worker_id, HeapRegion* const hr, oop const obj);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -64,6 +64,1 @@\n-inline bool G1ConcurrentMark::mark_in_next_bitmap_unconditionally(uint const worker_id, oop const obj) {\n-  HeapRegion* const hr = _g1h->heap_region_containing(obj);\n-  return mark_in_next_bitmap(worker_id, hr, obj, true);\n-}\n-\n-inline bool G1ConcurrentMark::mark_in_next_bitmap(uint const worker_id, HeapRegion* const hr, oop const obj, bool mark_unconditionally) {\n+inline bool G1ConcurrentMark::mark_in_next_bitmap(uint const worker_id, HeapRegion* const hr, oop const obj) {\n@@ -73,1 +68,1 @@\n-  if (!mark_unconditionally && hr->obj_allocated_since_next_marking(obj)) {\n+  if (hr->obj_allocated_since_next_marking(obj)) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.inline.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-      _cm->mark_in_next_bitmap_unconditionally(_worker_id, obj);\n+      _cm->mark_in_next_bitmap(_worker_id, obj);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}