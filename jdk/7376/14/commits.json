[{"commit":{"message":"remove one use check for long as well."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"91407ddf5a0b0d2d764705edbf9c605aab50dfaf"},{"commit":{"message":"remove one user check."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"}],"sha":"d7183474d22e809040a1336679ca09e1a9903a39"},{"commit":{"message":"merge master."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"bb904b5b1024af2d37ac4b84fd405e94325f11a7"},{"commit":{"message":"remove redundant tests."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestIRAddIdealNotXPlusC.java"}],"sha":"d9582136149a76d583b060905e39a3140788de59"},{"commit":{"message":"Use separate test classes for xor nodes."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorINodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/XorLNodeIdealizationTests.java"}],"sha":"262747045e039b2c22d420fe913f1b036ba41900"},{"commit":{"message":"move transformation to xornode and make it genealized."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java"}],"sha":"ec3360d4c14a09337d225b648ea2290435447721"},{"commit":{"message":"include microbenchmark."},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/NotOpTransformation.java"}],"sha":"1c238b8db45e8d96926a3109afed2dfb16a82753"},{"commit":{"message":"merge master."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"f7345fd943618d02b999ea58863b32c967b75c6a"},{"commit":{"message":"merge master."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"1a97ba26e0ca5a52941855d43dc4cd1c24462196"},{"commit":{"message":"clean."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"666be2d8d2d0c7b35b6873ffd51e2f5e75708794"},{"commit":{"message":"merge tests into XXXINodeIdealizationTests"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"3f0d6a505ba7da3d4be4a55c91c5023ccadabb3d"},{"commit":{"message":"clean."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"5f1939c919fbc745d611cf7ca451aeb0540016fb"},{"commit":{"message":"Merge branch 'master'."},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/AddLNodeIdealizationTests.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java"}],"sha":"51c98b5fbc5b9a2f2b29eea87a2451044fd9d080"},{"commit":{"message":"convert ~x into -1-x when ~x is part of Add and Sub."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"76bde38ed2249375d1f1a44669cd584e7fc7772e"},{"commit":{"message":"include bug id."},"files":[],"sha":"35abcb2d923fd2741e0a45209b35c4727eb6b45f"},{"commit":{"message":"include a microbenmark."},"files":[],"sha":"448a6d91cff13abf5eb5929934a85b74d1522fb3"},{"commit":{"message":"Convert c-(~x) into x+(c+1) in SubNode and convert ~(c-x) into x+(-c-1) in XorNode."},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"}],"sha":"d832fc03241477ae1428fc2f84d9c3f14e3157cc"}]