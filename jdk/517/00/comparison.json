{"files":[{"patch":"@@ -44,0 +44,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -254,1 +255,0 @@\n-        List<? extends DocTree> tags;\n@@ -260,1 +260,1 @@\n-            tags = utils.getBlockTags(element, DocTree.Kind.DEPRECATED);\n+            List<? extends DeprecatedTree> tags = utils.getDeprecatedTrees(element);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractIndexWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,0 +44,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -510,1 +511,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(typeElement, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(typeElement);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import com.sun.source.doctree.SerialTree;\n@@ -168,1 +169,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(field, DocTree.Kind.SERIAL);\n+        List<? extends SerialTree> tags = utils.getSerialTrees(field);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlSerialFieldWriter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -372,1 +372,1 @@\n-        utils.getBlockTags(mdle, DocTree.Kind.PROVIDES).forEach(tree -> {\n+        utils.getProvidesTrees(mdle).forEach(tree -> {\n@@ -379,1 +379,1 @@\n-        utils.getBlockTags(mdle, DocTree.Kind.USES).forEach(tree -> {\n+        utils.getUsesTrees(mdle).forEach(tree -> {\n@@ -818,1 +818,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(mdle, DocTree.Kind.DEPRECATED);\n+        List<? extends DocTree> deprs = utils.getDeprecatedTrees(mdle);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ModuleWriterImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -145,1 +146,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(packageElement, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(packageElement);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/PackageWriterImpl.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -111,1 +112,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(member, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(member);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/SubWriterHolderWriter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -42,0 +43,1 @@\n+import com.sun.source.doctree.LiteralTree;\n@@ -43,0 +45,2 @@\n+import com.sun.source.doctree.ReturnTree;\n+import com.sun.source.doctree.SeeTree;\n@@ -44,0 +48,1 @@\n+import com.sun.source.doctree.ThrowsTree;\n@@ -112,1 +117,1 @@\n-    protected Content indexTagOutput(Element element, DocTree tag) {\n+    protected Content indexTagOutput(Element element, IndexTree tag) {\n@@ -114,1 +119,0 @@\n-        IndexTree itt = (IndexTree)tag;\n@@ -116,1 +120,1 @@\n-        String tagText = ch.getText(itt.getSearchTerm());\n+        String tagText = ch.getText(tag.getSearchTerm());\n@@ -121,1 +125,1 @@\n-        String desc = ch.getText(itt.getDescription());\n+        String desc = ch.getText(tag.getDescription());\n@@ -140,1 +144,1 @@\n-        List<? extends DocTree> deprs = utils.getBlockTags(element, DocTree.Kind.DEPRECATED);\n+        List<? extends DeprecatedTree> deprs = utils.getDeprecatedTrees(element);\n@@ -174,1 +178,1 @@\n-    protected Content literalTagOutput(Element element, DocTree tag) {\n+    protected Content literalTagOutput(Element element, LiteralTree tag) {\n@@ -194,1 +198,1 @@\n-    public Content paramTagOutput(Element element, DocTree paramTag, String paramName) {\n+    public Content paramTagOutput(Element element, ParamTree paramTag, String paramName) {\n@@ -199,1 +203,1 @@\n-                && (paramTag instanceof ParamTree) && !((ParamTree) paramTag).isTypeParameter();\n+                && !paramTag.isTypeParameter();\n@@ -209,1 +213,1 @@\n-    public Content returnTagOutput(Element element, DocTree returnTag) {\n+    public Content returnTagOutput(Element element, ReturnTree returnTag) {\n@@ -218,1 +222,1 @@\n-    public Content seeTagOutput(Element holder, List<? extends DocTree> seeTags) {\n+    public Content seeTagOutput(Element holder, List<? extends SeeTree> seeTags) {\n@@ -282,3 +286,2 @@\n-    protected Content systemPropertyTagOutput(Element element, DocTree tag) {\n-        SystemPropertyTree itt = (SystemPropertyTree) tag;\n-        String tagText = itt.getPropertyName().toString();\n+    protected Content systemPropertyTagOutput(Element element, SystemPropertyTree tag) {\n+        String tagText = tag.getPropertyName().toString();\n@@ -295,1 +298,1 @@\n-    public Content throwsTagOutput(Element element, DocTree throwsTag, TypeMirror substituteType) {\n+    public Content throwsTagOutput(Element element, ThrowsTree throwsTag, TypeMirror substituteType) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import com.sun.source.doctree.SinceTree;\n@@ -338,1 +339,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(property, Kind.SINCE);\n+        List<? extends SinceTree> tags = utils.getBlockTags(property, Kind.SINCE, SinceTree.class);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import com.sun.source.doctree.IndexTree;\n@@ -49,1 +50,1 @@\n-        return writer.indexTagOutput(element, tag);\n+        return writer.indexTagOutput(element, (IndexTree) tag);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/IndexTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import com.sun.source.doctree.LiteralTree;\n@@ -55,1 +56,1 @@\n-        return writer.literalTagOutput(e, tag);\n+        return writer.literalTagOutput(e, (LiteralTree) tag);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/LiteralTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -168,1 +168,1 @@\n-            TagletWriter writer, List<? extends Element> formalParameters, List<? extends DocTree> paramTags) {\n+            TagletWriter writer, List<? extends Element> formalParameters, List<? extends ParamTree> paramTags) {\n@@ -213,1 +213,1 @@\n-                            inheritedDoc.holderTag,\n+                            (ParamTree) inheritedDoc.holderTag,\n@@ -243,1 +243,1 @@\n-            List<? extends DocTree> paramTags, Map<String, String> rankMap, TagletWriter writer,\n+            List<? extends ParamTree> paramTags, Map<String, String> rankMap, TagletWriter writer,\n@@ -249,1 +249,1 @@\n-            for (DocTree dt : paramTags) {\n+            for (ParamTree dt : paramTags) {\n@@ -297,1 +297,1 @@\n-            TagletWriter writer, DocTree paramTag, String name,\n+            TagletWriter writer, ParamTree paramTag, String name,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ParamTaglet.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import com.sun.source.doctree.ReturnTree;\n@@ -61,1 +62,1 @@\n-        List<? extends DocTree> tags = input.utils.getBlockTags(input.element, DocTree.Kind.RETURN);\n+        List<? extends ReturnTree> tags = input.utils.getReturnTrees(input.element);\n@@ -77,1 +78,1 @@\n-        List<? extends DocTree> tags = utils.getBlockTags(holder, DocTree.Kind.RETURN);\n+        List<? extends ReturnTree> tags = utils.getReturnTrees(holder);\n@@ -97,1 +98,1 @@\n-        return !ntags.isEmpty() ? writer.returnTagOutput(holder, ntags.get(0)) : null;\n+        return !ntags.isEmpty() ? writer.returnTagOutput(holder, (ReturnTree) ntags.get(0)) : null;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ReturnTaglet.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+import com.sun.source.doctree.SeeTree;\n@@ -71,1 +72,1 @@\n-        List<? extends DocTree> tags = utils.getSeeTrees(holder);\n+        List<? extends SeeTree> tags = utils.getSeeTrees(holder);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SeeTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import com.sun.source.doctree.SystemPropertyTree;\n@@ -53,1 +54,1 @@\n-        return writer.systemPropertyTagOutput(element, tag);\n+        return writer.systemPropertyTagOutput(element, (SystemPropertyTree) tag);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SystemPropertyTaglet.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,7 @@\n+import com.sun.source.doctree.IndexTree;\n+import com.sun.source.doctree.LiteralTree;\n+import com.sun.source.doctree.ParamTree;\n+import com.sun.source.doctree.ReturnTree;\n+import com.sun.source.doctree.SeeTree;\n+import com.sun.source.doctree.SystemPropertyTree;\n+import com.sun.source.doctree.ThrowsTree;\n@@ -88,1 +95,1 @@\n-    protected abstract Content indexTagOutput(Element element, DocTree tag);\n+    protected abstract Content indexTagOutput(Element element, IndexTree tag);\n@@ -114,1 +121,1 @@\n-    protected abstract Content literalTagOutput(Element element, DocTree tag);\n+    protected abstract Content literalTagOutput(Element element, LiteralTree tag);\n@@ -136,1 +143,1 @@\n-    protected abstract Content paramTagOutput(Element element, DocTree paramTag, String paramName);\n+    protected abstract Content paramTagOutput(Element element, ParamTree paramTag, String paramName);\n@@ -146,1 +153,1 @@\n-    protected abstract Content returnTagOutput(Element element, DocTree returnTag);\n+    protected abstract Content returnTagOutput(Element element, ReturnTree returnTag);\n@@ -156,1 +163,1 @@\n-    protected abstract Content seeTagOutput(Element element, List<? extends DocTree> seeTags);\n+    protected abstract Content seeTagOutput(Element element, List<? extends SeeTree> seeTags);\n@@ -177,1 +184,1 @@\n-    protected abstract Content systemPropertyTagOutput(Element element, DocTree systemPropertyTag);\n+    protected abstract Content systemPropertyTagOutput(Element element, SystemPropertyTree systemPropertyTag);\n@@ -195,1 +202,1 @@\n-    protected abstract Content throwsTagOutput(Element element, DocTree throwsTag, TypeMirror substituteType);\n+    protected abstract Content throwsTagOutput(Element element, ThrowsTree throwsTag, TypeMirror substituteType);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/TagletWriter.java","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+import java.util.stream.Collectors;\n@@ -46,0 +47,1 @@\n+import com.sun.source.doctree.ThrowsTree;\n@@ -132,1 +134,1 @@\n-            Map<List<? extends DocTree>, ExecutableElement> declaredExceptionTags = new LinkedHashMap<>();\n+            Map<List<? extends ThrowsTree>, ExecutableElement> declaredExceptionTags = new LinkedHashMap<>();\n@@ -146,1 +148,4 @@\n-                    declaredExceptionTags.put(inheritedDoc.tagList, (ExecutableElement)inheritedDoc.holder);\n+                    List<? extends ThrowsTree> inheritedTags = inheritedDoc.tagList.stream()\n+                            .map(t -> (ThrowsTree) t)\n+                            .collect(Collectors.toList());\n+                    declaredExceptionTags.put(inheritedTags, (ExecutableElement) inheritedDoc.holder);\n@@ -164,1 +169,1 @@\n-        Map<List<? extends DocTree>, ExecutableElement> tagsMap = new LinkedHashMap<>();\n+        Map<List<? extends ThrowsTree>, ExecutableElement> tagsMap = new LinkedHashMap<>();\n@@ -186,1 +191,1 @@\n-    protected Content throwsTagsOutput(Map<List<? extends DocTree>, ExecutableElement> throwTags,\n+    protected Content throwsTagsOutput(Map<List<? extends ThrowsTree>, ExecutableElement> throwTags,\n@@ -192,1 +197,1 @@\n-            for (Entry<List<? extends DocTree>, ExecutableElement> entry : throwTags.entrySet()) {\n+            for (Entry<List<? extends ThrowsTree>, ExecutableElement> entry : throwTags.entrySet()) {\n@@ -195,1 +200,1 @@\n-                for (DocTree dt : entry.getKey()) {\n+                for (ThrowsTree dt : entry.getKey()) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+import com.sun.source.doctree.DeprecatedTree;\n@@ -99,0 +100,6 @@\n+import com.sun.source.doctree.ProvidesTree;\n+import com.sun.source.doctree.ReturnTree;\n+import com.sun.source.doctree.SeeTree;\n+import com.sun.source.doctree.SerialDataTree;\n+import com.sun.source.doctree.SerialFieldTree;\n+import com.sun.source.doctree.SerialTree;\n@@ -101,0 +108,1 @@\n+import com.sun.source.doctree.ThrowsTree;\n@@ -102,0 +110,1 @@\n+import com.sun.source.doctree.UsesTree;\n@@ -949,2 +958,2 @@\n-    public List<? extends DocTree> getSerialDataTrees(ExecutableElement member) {\n-        return getBlockTags(member, SERIAL_DATA);\n+    public List<? extends SerialDataTree> getSerialDataTrees(ExecutableElement member) {\n+        return getBlockTags(member, SERIAL_DATA, SerialDataTree.class);\n@@ -2593,0 +2602,8 @@\n+    public <T extends DocTree> List<? extends T> getBlockTags(Element element, Predicate<DocTree> filter, Class<T> tClass) {\n+        return getBlockTags(element).stream()\n+                .filter(t -> t.getKind() != ERRONEOUS)\n+                .filter(filter)\n+                .map(t -> tClass.cast(t))\n+                .collect(Collectors.toList());\n+    }\n+\n@@ -2597,0 +2614,4 @@\n+    public <T extends DocTree> List<? extends T> getBlockTags(Element element, DocTree.Kind kind, Class<T> tClass) {\n+        return getBlockTags(element, t -> t.getKind() == kind, tClass);\n+    }\n+\n@@ -2662,1 +2683,1 @@\n-     * @see CommentUtils.dcInfoMap\n+     * @see CommentUtils#dcInfoMap\n@@ -2782,2 +2803,2 @@\n-    public List<? extends DocTree> getDeprecatedTrees(Element element) {\n-        return getBlockTags(element, DEPRECATED);\n+    public List<? extends DeprecatedTree> getDeprecatedTrees(Element element) {\n+        return getBlockTags(element, DEPRECATED, DeprecatedTree.class);\n@@ -2786,2 +2807,2 @@\n-    public List<? extends DocTree> getProvidesTrees(Element element) {\n-        return getBlockTags(element, PROVIDES);\n+    public List<? extends ProvidesTree> getProvidesTrees(Element element) {\n+        return getBlockTags(element, PROVIDES, ProvidesTree.class);\n@@ -2790,2 +2811,2 @@\n-    public List<? extends DocTree> getSeeTrees(Element element) {\n-        return getBlockTags(element, SEE);\n+    public List<? extends SeeTree> getSeeTrees(Element element) {\n+        return getBlockTags(element, SEE, SeeTree.class);\n@@ -2794,2 +2815,2 @@\n-    public List<? extends DocTree> getSerialTrees(Element element) {\n-        return getBlockTags(element, SERIAL);\n+    public List<? extends SerialTree> getSerialTrees(Element element) {\n+        return getBlockTags(element, SERIAL, SerialTree.class);\n@@ -2798,2 +2819,2 @@\n-    public List<? extends DocTree> getSerialFieldTrees(VariableElement field) {\n-        return getBlockTags(field, DocTree.Kind.SERIAL_FIELD);\n+    public List<? extends SerialFieldTree> getSerialFieldTrees(VariableElement field) {\n+        return getBlockTags(field, DocTree.Kind.SERIAL_FIELD, SerialFieldTree.class);\n@@ -2802,2 +2823,4 @@\n-    public List<? extends DocTree> getThrowsTrees(Element element) {\n-        return getBlockTags(element, DocTree.Kind.EXCEPTION, DocTree.Kind.THROWS);\n+    public List<? extends ThrowsTree> getThrowsTrees(Element element) {\n+        return getBlockTags(element,\n+                t -> switch (t.getKind()) { case EXCEPTION, THROWS -> true; default -> false; },\n+                ThrowsTree.class);\n@@ -2815,8 +2838,3 @@\n-        List<ParamTree> out = new ArrayList<>();\n-        for (DocTree dt : getBlockTags(element, PARAM)) {\n-            ParamTree pt = (ParamTree) dt;\n-            if (pt.isTypeParameter() == isTypeParameters) {\n-                out.add(pt);\n-            }\n-        }\n-        return out;\n+        return getBlockTags(element,\n+                t -> t.getKind() == PARAM && ((ParamTree) t).isTypeParameter() == isTypeParameters,\n+                ParamTree.class);\n@@ -2825,2 +2843,2 @@\n-    public  List<? extends DocTree> getReturnTrees(Element element) {\n-        return new ArrayList<>(getBlockTags(element, RETURN));\n+    public  List<? extends ReturnTree> getReturnTrees(Element element) {\n+        return new ArrayList<>(getBlockTags(element, RETURN, ReturnTree.class));\n@@ -2829,2 +2847,2 @@\n-    public List<? extends DocTree> getUsesTrees(Element element) {\n-        return getBlockTags(element, USES);\n+    public List<? extends UsesTree> getUsesTrees(Element element) {\n+        return getBlockTags(element, USES, UsesTree.class);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":45,"deletions":27,"binary":false,"changes":72,"status":"modified"}]}