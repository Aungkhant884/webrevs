{"files":[{"patch":"@@ -333,4 +333,3 @@\n-    \/\/ If we are returning to a compiled MethodHandle call site, the\n-    \/\/ saved_fp will in fact be a saved value of the unextended SP.  The\n-    \/\/ simplest way to tell whether we are returning to such a call site\n-    \/\/ is as follows:\n+    \/\/ Sites calling method handle intrinsics and lambda forms are\n+    \/\/ treated as any other call site. Therefore, no special action is\n+    \/\/ needed when we are returning to any of these call sites.\n@@ -341,12 +340,4 @@\n-      \/\/ If the sender PC is a deoptimization point, get the original\n-      \/\/ PC.  For MethodHandle call site the unextended_sp is stored in\n-      \/\/ saved_fp.\n-      if (senderNm.isDeoptMhEntry(getPC())) {\n-        \/\/ DEBUG_ONLY(verifyDeoptMhOriginalPc(senderNm, getFP()));\n-        raw_unextendedSP = getFP();\n-      }\n-      else if (senderNm.isDeoptEntry(getPC())) {\n-        \/\/ DEBUG_ONLY(verifyDeoptOriginalPc(senderNm, raw_unextendedSp));\n-      }\n-      else if (senderNm.isMethodHandleReturn(getPC())) {\n-        raw_unextendedSP = getFP();\n+      \/\/ If the sender PC is a deoptimization point, get the original PC.\n+      if (senderNm.isDeoptEntry(getPC()) ||\n+          senderNm.isDeoptMhEntry(getPC())) {\n+        \/\/ DEBUG_ONLY(verifyDeoptriginalPc(senderNm, raw_unextendedSp));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/aarch64\/AARCH64Frame.java","additions":7,"deletions":16,"binary":false,"changes":23,"status":"modified"}]}