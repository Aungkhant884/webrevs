{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -638,1 +638,1 @@\n-    st->print_cr(\" -     Method: \" INTPTR_FORMAT \" %s\", p2i(m), m != nullptr ? m->external_name() : nullptr);\n+    st->print_cr(\" - method: \" INTPTR_FORMAT \" %s\", p2i(m), m != nullptr ? m->external_name() : nullptr);\n@@ -640,3 +640,3 @@\n-               flag_state(), has_local_signature(), has_appendix(),\n-               is_forced_virtual(), is_final(), is_vfinal(),\n-               indy_resolution_failed(), parameter_size());\n+                 flag_state(), has_local_signature(), has_appendix(),\n+                 is_forced_virtual(), is_final(), is_vfinal(),\n+                 indy_resolution_failed(), parameter_size());\n@@ -644,8 +644,8 @@\n-          \" - has appendix: %01x\\n - forced virtual: %01x\\n\"\n-          \" - final: %01x\\n - virtual final: %01x\\n - resolution failed: %01x\\n\"\n-          \" - num parameters: %02x\",\n-               type2name(as_BasicType(flag_state())), has_local_signature(), has_appendix(),\n-               is_forced_virtual(), is_final(), is_vfinal(),\n-               indy_resolution_failed(), parameter_size());\n-    if ((bytecode_1() == Bytecodes::_invokehandle ||\n-       bytecode_1() == Bytecodes::_invokedynamic)) {\n+                 \" - has appendix: %01x\\n - forced virtual: %01x\\n\"\n+                 \" - final: %01x\\n - virtual final: %01x\\n - resolution failed: %01x\\n\"\n+                 \" - num parameters: %02x\",\n+                 type2name(as_BasicType(flag_state())), has_local_signature(), has_appendix(),\n+                 is_forced_virtual(), is_final(), is_vfinal(),\n+                 indy_resolution_failed(), parameter_size());\n+    if (bytecode_1() == Bytecodes::_invokehandle ||\n+        bytecode_1() == Bytecodes::_invokedynamic) {\n@@ -653,7 +653,0 @@\n-      if (m != nullptr) {\n-        st->print_cr(\"  Method%s: \" INTPTR_FORMAT \" %s.%s%s\",\n-                    m->is_native() ? \" (native)\" : \"\",\n-                    p2i(m),\n-                    m->method_holder()->name()->as_C_string(),\n-                    m->name()->as_C_string(), m->signature()->as_C_string());\n-      }\n@@ -671,1 +664,1 @@\n-               flag_state(), is_final(), is_volatile(), field_index());\n+                 flag_state(), is_final(), is_volatile(), field_index());\n@@ -673,1 +666,1 @@\n-          type2name(as_BasicType(flag_state())), is_final(), is_volatile(), field_index());\n+                 type2name(as_BasicType(flag_state())), is_final(), is_volatile(), field_index());\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":15,"deletions":22,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/hotspot\/gtest\/oops\/test_cpCache_output.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}