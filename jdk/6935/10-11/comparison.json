{"files":[{"patch":"@@ -40,1 +40,0 @@\n-import java.nio.file.StandardOpenOption;\n@@ -89,1 +88,2 @@\n-        assertThrows(NullPointerException.class, () -> inputStreamProvider.input().transferTo(null));\n+        assertThrows(NullPointerException.class,\n+                () -> inputStreamProvider.input().transferTo(null));\n@@ -92,1 +92,2 @@\n-        assertThrows(NullPointerException.class, () -> inputStreamProvider.input((byte) 1).transferTo(null));\n+        assertThrows(NullPointerException.class,\n+                () -> inputStreamProvider.input((byte) 1).transferTo(null));\n@@ -95,1 +96,2 @@\n-        assertThrows(NullPointerException.class, () -> inputStreamProvider.input((byte) 1, (byte) 2).transferTo(null));\n+        assertThrows(NullPointerException.class,\n+                () -> inputStreamProvider.input((byte) 1, (byte) 2).transferTo(null));\n@@ -111,1 +113,2 @@\n-        checkTransferredContents(inputStreamProvider, outputStreamProvider, new byte[0]);\n+        checkTransferredContents(inputStreamProvider,\n+                outputStreamProvider, new byte[0]);\n@@ -114,1 +117,2 @@\n-        checkTransferredContents(inputStreamProvider, outputStreamProvider, createRandomBytes(1024, 4096));\n+        checkTransferredContents(inputStreamProvider,\n+                outputStreamProvider, createRandomBytes(1024, 4096));\n@@ -118,1 +122,2 @@\n-        checkTransferredContents(inputStreamProvider, outputStreamProvider, createRandomBytes(16384, 16384));\n+        checkTransferredContents(inputStreamProvider,\n+                outputStreamProvider, createRandomBytes(16384, 16384));\n@@ -128,1 +133,2 @@\n-            checkTransferredContents(inputStreamProvider, outputStreamProvider, inBytes, posIn, posOut, bufferBytes, markAndReset);\n+            checkTransferredContents(inputStreamProvider,\n+                    outputStreamProvider, inBytes, posIn, posOut, bufferBytes, markAndReset);\n@@ -132,1 +138,2 @@\n-        checkTransferredContents(inputStreamProvider, outputStreamProvider, createRandomBytes(4096, 0), 4096, 0, 0, false);\n+        checkTransferredContents(inputStreamProvider,\n+                outputStreamProvider, createRandomBytes(4096, 0), 4096, 0, 0, false);\n@@ -135,1 +142,2 @@\n-        checkTransferredContents(inputStreamProvider, outputStreamProvider, createRandomBytes(4096, 0), 0, 4096, 0, false);\n+        checkTransferredContents(inputStreamProvider,\n+                outputStreamProvider, createRandomBytes(4096, 0), 0, 4096, 0, false);\n@@ -145,1 +153,2 @@\n-        checkTransferredContents(inputStreamProvider, outputStreamProvider, inBytes, 0, 0, 0, false);\n+        checkTransferredContents(inputStreamProvider,\n+                outputStreamProvider, inBytes, 0, 0, 0, false);\n@@ -154,1 +163,2 @@\n-            OutputStreamProvider outputStreamProvider, byte[] inBytes, int posIn, int posOut, int bufferBytes, boolean markAndReset) throws Exception {\n+            OutputStreamProvider outputStreamProvider, byte[] inBytes, int posIn,\n+            int posOut, int bufferBytes, boolean markAndReset) throws Exception {\n@@ -162,1 +172,1 @@\n-            \/\/ fill buffer by reading some bytes before transformTo\n+            \/\/ fill buffer by reading some bytes before transferTo\n@@ -176,1 +186,2 @@\n-            assertEquals(reported, expected, format(\"transferred %d bytes but should report %d\", reported, expected));\n+            assertEquals(reported, expected,\n+                    format(\"transferred %d bytes but should report %d\", reported, expected));\n@@ -179,2 +190,3 @@\n-            assertTrue(Arrays.equals(inBytes, posIn, posIn + count, outBytes, posOut, posOut + count),\n-                format(\"inBytes.length=%d, outBytes.length=%d\", count, outBytes.length));\n+            assertTrue(Arrays.equals(inBytes, posIn, posIn + count,\n+                    outBytes, posOut, posOut + count),\n+                    format(\"inBytes.length=%d, outBytes.length=%d\", count, outBytes.length));\n@@ -189,1 +201,2 @@\n-                assertEquals(reported, expected, format(\"replayed %d bytes but should report %d\", reported, expected));\n+                assertEquals(reported, expected,\n+                        format(\"replayed %d bytes but should report %d\", reported, expected));\n@@ -192,2 +205,5 @@\n-                assertTrue(Arrays.equals(inBytes, posIn + bufferBytes, inBytes.length, outBytes, posOut + count, outBytes.length),\n-                    format(\"inBytes.length=%d, outBytes.length=%d\", inBytes.length - posIn - bufferBytes, outBytes.length - posOut - count));\n+                assertTrue(Arrays.equals(inBytes, posIn + bufferBytes, inBytes.length,\n+                        outBytes, posOut + count, outBytes.length),\n+                        format(\"inBytes.length=%d, outBytes.length=%d\",\n+                                inBytes.length - posIn - bufferBytes,\n+                                outBytes.length - posOut - count));\n@@ -203,1 +219,2 @@\n-        byte[] bytes = new byte[min + (maxRandomAdditive == 0 ? 0 : RND.nextInt(maxRandomAdditive))];\n+        byte[] bytes = new byte[min +\n+                                (maxRandomAdditive == 0 ? 0 : RND.nextInt(maxRandomAdditive))];\n","filename":"test\/jdk\/java\/io\/BufferedInputStream\/TransferTo.java","additions":37,"deletions":20,"binary":false,"changes":57,"status":"modified"}]}