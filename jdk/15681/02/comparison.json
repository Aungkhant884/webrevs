{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-                LOGGER.info(\"Got ServiceConfigurationError: \" + sce);\n+                System.err.println(\"Got ServiceConfigurationError: \" + sce);\n@@ -81,2 +81,2 @@\n-            LOGGER.info(\"inetAddressResolverProvider permission is \" +\n-                        (permitInetAddressResolver ? \"granted\" : \"not granted\"));\n+            System.err.println(\"inetAddressResolverProvider permission is \" +\n+                               (permitInetAddressResolver ? \"granted\" : \"not granted\"));\n@@ -88,1 +88,0 @@\n-                LOGGER.info(\"Checking RuntimePermission: \" + permission);\n@@ -90,1 +89,1 @@\n-                    LOGGER.info(\"Denying '\" + RUNTIME_PERMISSION_NAME + \"' permission\");\n+                    System.err.println(\"Denying '\" + RUNTIME_PERMISSION_NAME + \"' permission\");\n@@ -92,1 +91,5 @@\n-                }\n+                } else {\n+                   \/\/ Do not do anything for non-matching Permission. Otherwise the test\n+                   \/\/ has a chance to re-enter here recursively, e.g. due to permission\n+                   \/\/ checks during class load. This would eventually overflow the stack.\n+               }\n@@ -98,1 +101,0 @@\n-    private static final Logger LOGGER = Logger.getLogger(RuntimePermissionTest.class.getName());\n","filename":"test\/jdk\/java\/net\/spi\/InetAddressResolverProvider\/RuntimePermissionTest.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"}]}