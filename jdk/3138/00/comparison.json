{"files":[{"patch":"@@ -103,1 +103,1 @@\n-        this.annotationValues = Utils.smallUnmodifiable(objects);\n+        this.annotationValues = List.copyOf(objects);\n@@ -206,1 +206,1 @@\n-        this.annotationValues = Utils.smallUnmodifiable(v);\n+        this.annotationValues = List.copyOf(v);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/AnnotationElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n@@ -193,1 +191,1 @@\n-            return new ArrayList<>();\n+            return List.of();\n@@ -195,1 +193,1 @@\n-        return Collections.unmodifiableList(JFC.getConfigurations());\n+        return List.copyOf(JFC.getConfigurations());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Configuration.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -100,0 +100,1 @@\n+    @Override\n@@ -108,0 +109,1 @@\n+    @Override\n@@ -119,0 +121,1 @@\n+    @Override\n@@ -129,0 +132,1 @@\n+    @Override\n@@ -142,0 +146,1 @@\n+    @Override\n@@ -167,0 +172,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Event.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Arrays;\n@@ -48,0 +47,1 @@\n+    private static final List<String> UNCATEGORIZED = List.of(\"Uncategorized\");\n@@ -49,1 +49,0 @@\n-    private final List<String> UNCATEGORIZED = Collections.singletonList(\"Uncategorized\");\n@@ -82,1 +81,1 @@\n-            Map<String, ValueDescriptor> newCache = new LinkedHashMap<String, ValueDescriptor>(fields.size());\n+            Map<String, ValueDescriptor> newCache = new LinkedHashMap<>(fields.size());\n@@ -86,1 +85,1 @@\n-            cache = newCache;\n+            cache = Map.copyOf(newCache);\n@@ -233,1 +232,1 @@\n-        return Collections.unmodifiableList(Arrays.asList(c.value()));\n+        return List.of(c.value());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import jdk.jfr.internal.LogLevel;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/FlightRecorder.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -112,2 +111,2 @@\n-            if (o instanceof AnnotationElement) {\n-                return ((AnnotationElement) o).getType();\n+            if (o instanceof AnnotationElement ae) {\n+                return ae.getType();\n@@ -115,2 +114,2 @@\n-            if (o instanceof EventType) {\n-                return ((EventType) o).getType();\n+            if (o instanceof EventType et) {\n+                return et.getType();\n@@ -118,2 +117,2 @@\n-            if (o instanceof ValueDescriptor) {\n-                return ((ValueDescriptor) o).getType();\n+            if (o instanceof ValueDescriptor vd) {\n+                return vd.getType();\n@@ -121,2 +120,2 @@\n-            if (o instanceof SettingDescriptor) {\n-                return ((SettingDescriptor) o).getType();\n+            if (o instanceof SettingDescriptor sd) {\n+                return sd.getType();\n@@ -179,1 +178,1 @@\n-            return new ValueDescriptor(type, name, Collections.emptyList(), true);\n+            return new ValueDescriptor(type, name, List.of(), true);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/FlightRecorderPermission.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-        this(new HashMap<String, String>());\n+        this(Map.of());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Recording.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -199,1 +198,1 @@\n-        return Collections.unmodifiableList(annotationConstruct.getUnmodifiableAnnotationElements());\n+        return annotationConstruct.getUnmodifiableAnnotationElements();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/SettingDescriptor.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.ArrayList;\n@@ -134,1 +133,1 @@\n-        this(type, name, new ArrayList<>(annotations), false);\n+        this(type, name, List.copyOf(annotations), false);\n@@ -292,1 +291,1 @@\n-            return Collections.emptyList();\n+            return List.of();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/ValueDescriptor.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -266,0 +266,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/EventStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -115,2 +115,2 @@\n-        this.removed = Collections.unmodifiableList(new ArrayList<>(previousSet.values()));\n-        this.added = Collections.unmodifiableList(added);\n+        this.removed = List.copyOf(previousSet.values());\n+        this.added = List.copyOf(added);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/MetadataEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,0 +123,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedEvent.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.util.function.Consumer;\n@@ -46,1 +45,0 @@\n-import jdk.jfr.internal.consumer.EventDirectoryStream;\n@@ -66,0 +64,1 @@\n+            @Override\n@@ -70,0 +69,1 @@\n+            @Override\n@@ -433,2 +433,2 @@\n-        if (o instanceof Boolean) {\n-            return ((Boolean) o).booleanValue();\n+        if (o instanceof Boolean b) {\n+            return b;\n@@ -460,2 +460,2 @@\n-        if (o instanceof Byte) {\n-            return ((Byte) o).byteValue();\n+        if (o instanceof Byte b) {\n+            return b;\n@@ -487,2 +487,2 @@\n-        if (o instanceof Character) {\n-            return ((Character) o).charValue();\n+        if (o instanceof Character c) {\n+            return c;\n@@ -522,2 +522,2 @@\n-        if (o instanceof Short) {\n-            return ((Short) o).shortValue();\n+        if (o instanceof Short s) {\n+            return s;\n@@ -525,2 +525,2 @@\n-        if (o instanceof Byte) {\n-            return ((Byte) o).byteValue();\n+        if (o instanceof Byte b) {\n+            return b;\n@@ -528,4 +528,4 @@\n-        if (o instanceof UnsignedValue) {\n-            Object u = ((UnsignedValue) o).value();\n-            if (u instanceof Short) {\n-                return ((Short) u).shortValue();\n+        if (o instanceof UnsignedValue unsigned) {\n+            Object u = unsigned.value();\n+            if (u instanceof Short s) {\n+                return s;\n@@ -533,2 +533,2 @@\n-            if (u instanceof Byte) {\n-                return (short) Byte.toUnsignedInt(((Byte) u));\n+            if (u instanceof Byte b) {\n+                return (short) Byte.toUnsignedInt(b);\n@@ -569,2 +569,2 @@\n-        if (o instanceof Integer) {\n-            return ((Integer) o).intValue();\n+        if (o instanceof Integer i) {\n+            return i;\n@@ -572,2 +572,2 @@\n-        if (o instanceof Short) {\n-            return ((Short) o).intValue();\n+        if (o instanceof Short s) {\n+            return s;\n@@ -575,2 +575,2 @@\n-        if (o instanceof Character) {\n-            return ((Character) o).charValue();\n+        if (o instanceof Character c) {\n+            return c;\n@@ -578,2 +578,2 @@\n-        if (o instanceof Byte) {\n-            return ((Byte) o).intValue();\n+        if (o instanceof Byte b) {\n+            return b;\n@@ -581,4 +581,4 @@\n-        if (o instanceof UnsignedValue) {\n-            Object u = ((UnsignedValue) o).value();\n-            if (u instanceof Integer) {\n-                return ((Integer) u).intValue();\n+        if (o instanceof UnsignedValue unsigned) {\n+            Object u = unsigned.value();\n+            if (u instanceof Integer i) {\n+                return i;\n@@ -586,2 +586,2 @@\n-            if (u instanceof Short) {\n-                return Short.toUnsignedInt(((Short) u));\n+            if (u instanceof Short s) {\n+                return Short.toUnsignedInt(s);\n@@ -589,2 +589,2 @@\n-            if (u instanceof Byte) {\n-                return Byte.toUnsignedInt(((Byte) u));\n+            if (u instanceof Byte b) {\n+                return Byte.toUnsignedInt(b);\n@@ -622,2 +622,2 @@\n-        if (o instanceof Float) {\n-            return ((Float) o).floatValue();\n+        if (o instanceof Float f) {\n+            return f;\n@@ -625,2 +625,2 @@\n-        if (o instanceof Long) {\n-            return ((Long) o).floatValue();\n+        if (o instanceof Long l) {\n+            return l;\n@@ -628,2 +628,2 @@\n-        if (o instanceof Integer) {\n-            return ((Integer) o).floatValue();\n+        if (o instanceof Integer i) {\n+            return i;\n@@ -631,2 +631,2 @@\n-        if (o instanceof Short) {\n-            return ((Short) o).floatValue();\n+        if (o instanceof Short s) {\n+            return s;\n@@ -634,2 +634,2 @@\n-        if (o instanceof Byte) {\n-            return ((Byte) o).byteValue();\n+        if (o instanceof Byte b) {\n+            return b;\n@@ -637,2 +637,2 @@\n-        if (o instanceof Character) {\n-            return ((Character) o).charValue();\n+        if (o instanceof Character c) {\n+            return c;\n@@ -672,2 +672,2 @@\n-        if (o instanceof Long) {\n-            return ((Long) o).longValue();\n+        if (o instanceof Long l) {\n+            return l;\n@@ -675,2 +675,2 @@\n-        if (o instanceof Integer) {\n-            return ((Integer) o).longValue();\n+        if (o instanceof Integer i) {\n+            return i;\n@@ -678,2 +678,2 @@\n-        if (o instanceof Short) {\n-            return ((Short) o).longValue();\n+        if (o instanceof Short s) {\n+            return s;\n@@ -681,2 +681,2 @@\n-        if (o instanceof Character) {\n-            return ((Character) o).charValue();\n+        if (o instanceof Character c) {\n+            return c;\n@@ -684,2 +684,2 @@\n-        if (o instanceof Byte) {\n-            return ((Byte) o).longValue();\n+        if (o instanceof Byte b) {\n+            return b.longValue();\n@@ -687,4 +687,4 @@\n-        if (o instanceof UnsignedValue) {\n-            Object u = ((UnsignedValue) o).value();\n-            if (u instanceof Integer) {\n-                return Integer.toUnsignedLong(((Integer) u));\n+        if (o instanceof UnsignedValue unsigned) {\n+            Object u = unsigned.value();\n+            if (u instanceof Integer i) {\n+                return Integer.toUnsignedLong(i);\n@@ -692,2 +692,2 @@\n-            if (u instanceof Short) {\n-                return Short.toUnsignedLong(((Short) u));\n+            if (u instanceof Short s) {\n+                return Short.toUnsignedLong(s);\n@@ -695,2 +695,2 @@\n-            if (u instanceof Byte) {\n-                return Byte.toUnsignedLong(((Byte) u));\n+            if (u instanceof Byte b) {\n+                return Byte.toUnsignedLong(b);\n@@ -728,2 +728,2 @@\n-        if (o instanceof Double) {\n-            return ((Double) o).doubleValue();\n+        if (o instanceof Double d) {\n+            return d.doubleValue();\n@@ -731,2 +731,2 @@\n-        if (o instanceof Float) {\n-            return ((Float) o).doubleValue();\n+        if (o instanceof Float f) {\n+            return f.doubleValue();\n@@ -734,2 +734,2 @@\n-        if (o instanceof Long) {\n-            return ((Long) o).doubleValue();\n+        if (o instanceof Long l) {\n+            return l.doubleValue();\n@@ -737,2 +737,2 @@\n-        if (o instanceof Integer) {\n-            return ((Integer) o).doubleValue();\n+        if (o instanceof Integer i) {\n+            return i.doubleValue();\n@@ -740,2 +740,2 @@\n-        if (o instanceof Short) {\n-            return ((Short) o).doubleValue();\n+        if (o instanceof Short s) {\n+            return s.doubleValue();\n@@ -743,2 +743,2 @@\n-        if (o instanceof Byte) {\n-            return ((Byte) o).byteValue();\n+        if (o instanceof Byte b) {\n+            return b.doubleValue();\n@@ -746,2 +746,2 @@\n-        if (o instanceof Character) {\n-            return ((Character) o).charValue();\n+        if (o instanceof Character c) {\n+            return c;\n@@ -800,2 +800,2 @@\n-        if (o instanceof Long) {\n-            return getDuration(((Long) o).longValue(), name);\n+        if (o instanceof Long l) {\n+            return getDuration(l, name);\n@@ -803,2 +803,2 @@\n-        if (o instanceof Integer) {\n-            return getDuration(((Integer) o).longValue(), name);\n+        if (o instanceof Integer i) {\n+            return getDuration(i, name);\n@@ -806,2 +806,2 @@\n-        if (o instanceof Short) {\n-            return getDuration(((Short) o).longValue(), name);\n+        if (o instanceof Short s) {\n+            return getDuration(s, name);\n@@ -809,2 +809,2 @@\n-        if (o instanceof Character) {\n-            return getDuration(((Character) o).charValue(), name);\n+        if (o instanceof Character c) {\n+            return getDuration(c, name);\n@@ -812,2 +812,2 @@\n-        if (o instanceof Byte) {\n-            return getDuration(((Byte) o).longValue(), name);\n+        if (o instanceof Byte b) {\n+            return getDuration(b, name);\n@@ -815,4 +815,4 @@\n-        if (o instanceof UnsignedValue) {\n-            Object u = ((UnsignedValue) o).value();\n-            if (u instanceof Integer) {\n-                return getDuration(Integer.toUnsignedLong((Integer) u), name);\n+        if (o instanceof UnsignedValue unsigned) {\n+            Object u = unsigned.value();\n+            if (u instanceof Integer i) {\n+                return getDuration(Integer.toUnsignedLong(i), name);\n@@ -820,2 +820,2 @@\n-            if (u instanceof Short) {\n-                return getDuration(Short.toUnsignedLong((Short) u), name);\n+            if (u instanceof Short s) {\n+                return getDuration(Short.toUnsignedLong(s), name);\n@@ -823,2 +823,2 @@\n-            if (u instanceof Byte) {\n-                return getDuration(Short.toUnsignedLong((Byte) u), name);\n+            if (u instanceof Byte b) {\n+                return getDuration(Short.toUnsignedLong(b), name);\n@@ -879,2 +879,2 @@\n-        if (o instanceof Long) {\n-            return getInstant(((Long) o).longValue(), name);\n+        if (o instanceof Long l) {\n+            return getInstant(l, name);\n@@ -882,2 +882,2 @@\n-        if (o instanceof Integer) {\n-            return getInstant(((Integer) o).longValue(), name);\n+        if (o instanceof Integer i) {\n+            return getInstant(i, name);\n@@ -885,2 +885,2 @@\n-        if (o instanceof Short) {\n-            return getInstant(((Short) o).longValue(), name);\n+        if (o instanceof Short s) {\n+            return getInstant(s, name);\n@@ -888,2 +888,2 @@\n-        if (o instanceof Character) {\n-            return getInstant(((Character) o).charValue(), name);\n+        if (o instanceof Character c) {\n+            return getInstant(c, name);\n@@ -891,2 +891,2 @@\n-        if (o instanceof Byte) {\n-            return getInstant(((Byte) o).longValue(), name);\n+        if (o instanceof Byte b) {\n+            return getInstant(b, name);\n@@ -894,4 +894,4 @@\n-        if (o instanceof UnsignedValue) {\n-            Object u = ((UnsignedValue) o).value();\n-            if (u instanceof Integer) {\n-                return getInstant(Integer.toUnsignedLong((Integer) u), name);\n+        if (o instanceof UnsignedValue unsigned) {\n+            Object u = unsigned.value();\n+            if (u instanceof Integer i) {\n+                return getInstant(Integer.toUnsignedLong(i), name);\n@@ -899,2 +899,2 @@\n-            if (u instanceof Short) {\n-                return getInstant(Short.toUnsignedLong((Short) u), name);\n+            if (u instanceof Short s) {\n+                return getInstant(Short.toUnsignedLong(s), name);\n@@ -902,2 +902,2 @@\n-            if (u instanceof Byte) {\n-                return getInstant(Short.toUnsignedLong((Byte) u), name);\n+            if (u instanceof Byte b) {\n+                return getInstant(Short.toUnsignedLong(b), name);\n@@ -985,2 +985,2 @@\n-        if (this instanceof RecordedEvent) {\n-            p.print((RecordedEvent) this);\n+        if (this instanceof RecordedEvent event) {\n+            p.print(event);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java","additions":116,"deletions":116,"binary":false,"changes":232,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.ArrayList;\n@@ -29,1 +30,0 @@\n-import java.util.Collections;\n@@ -54,1 +54,1 @@\n-            return Collections.EMPTY_LIST;\n+            return new ArrayList<>(0);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedStackTrace.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -196,0 +196,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordingFile.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n- * }\n+ *     }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import jdk.jfr.internal.Type;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/AbstractBufferStatisticsEvent.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,6 +43,2 @@\n-    public static final ThreadLocal<ActiveRecordingEvent> EVENT = new ThreadLocal<ActiveRecordingEvent>() {\n-        @Override\n-        protected ActiveRecordingEvent initialValue() {\n-            return new ActiveRecordingEvent();\n-        }\n-    };\n+    \/\/ To be accessed when holding recorder lock\n+    public static final ActiveRecordingEvent EVENT = new ActiveRecordingEvent();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/ActiveRecordingEvent.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.util.Collections;\n@@ -61,1 +60,1 @@\n-    private List<AnnotationElement> annotationElements = Collections.emptyList();\n+    private List<AnnotationElement> annotationElements;\n@@ -63,2 +62,2 @@\n-    public AnnotationConstruct(List<AnnotationElement> ann) {\n-        this.annotationElements = ann;\n+    public AnnotationConstruct(List<AnnotationElement> elements) {\n+        this.annotationElements = List.copyOf(elements);\n@@ -68,0 +67,1 @@\n+        this(List.of());\n@@ -71,1 +71,1 @@\n-        annotationElements = Utils.smallUnmodifiable(elements);\n+        annotationElements = List.copyOf(elements);\n@@ -103,5 +103,0 @@\n-    \/\/ package private\n-    boolean remove(AnnotationElement annotation) {\n-        return annotationElements.remove(annotation);\n-    }\n-\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/AnnotationConstruct.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-        ArrayList<AnnotationElement> aes = new ArrayList<>(eventType.getAnnotationElements());\n+        List<AnnotationElement> aes = new ArrayList<>(eventType.getAnnotationElements());\n@@ -105,1 +105,0 @@\n-        aes.trimToSize();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventControl.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-                        if (key instanceof String && value != null) {\n+                        if (key instanceof String keyName && value != null) {\n@@ -200,1 +200,0 @@\n-                                String keyName = (String) key;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventInstrumentation.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.util.function.Supplier;\n-\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Logger.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -255,0 +255,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/LongMap.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.BufferedInputStream;\n@@ -31,1 +30,0 @@\n-import java.io.InputStream;\n@@ -34,1 +32,0 @@\n-import java.util.Collection;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataLoader.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -127,2 +127,2 @@\n-            if (type instanceof PlatformEventType) {\n-                List<SettingDescriptor> settings = ((PlatformEventType) type).getAllSettings();\n+            if (type instanceof PlatformEventType pType) {\n+                List<SettingDescriptor> settings = pType.getAllSettings();\n@@ -224,2 +224,2 @@\n-            if (type instanceof PlatformEventType) {\n-                descriptor.eventTypes.add(PrivateAccess.getInstance().newEventType((PlatformEventType) type));\n+            if (type instanceof PlatformEventType pType) {\n+                descriptor.eventTypes.add(PrivateAccess.getInstance().newEventType(pType));\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataReader.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -73,2 +73,1 @@\n-            if (type instanceof PlatformEventType) {\n-                PlatformEventType pEventType = (PlatformEventType) type;\n+            if (type instanceof PlatformEventType pEventType) {\n@@ -294,3 +293,2 @@\n-                if (type instanceof PlatformEventType) {\n-                    if (!knownIds.contains(type.getId())) {\n-                        PlatformEventType pe = (PlatformEventType) type;\n+                if (type instanceof PlatformEventType pe) {\n+                    if (!knownIds.contains(pe.getId())) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -172,2 +172,2 @@\n-        if (type instanceof PlatformEventType) {\n-            for (SettingDescriptor v : ((PlatformEventType)type).getSettings()) {\n+        if (type instanceof PlatformEventType pType) {\n+            for (SettingDescriptor v : pType.getSettings()) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -442,1 +442,1 @@\n-            ActiveRecordingEvent event = ActiveRecordingEvent.EVENT.get();\n+            ActiveRecordingEvent event = ActiveRecordingEvent.EVENT;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.nio.file.Path;\n@@ -33,2 +32,0 @@\n-import java.time.LocalDateTime;\n-import java.time.ZonedDateTime;\n@@ -40,2 +37,0 @@\n-    private static final int MAX_CHUNK_NAMES = 100;\n-    private static final String FILE_EXTENSION = \".jfr\";\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/RepositoryChunk.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -175,0 +175,1 @@\n+        @Override\n@@ -186,2 +187,2 @@\n-            if(other != null && other instanceof SafePath){\n-                return this.toPath().equals(((SafePath) other).toPath());\n+            if(other != null && other instanceof SafePath s){\n+                return this.toPath().equals(s.toPath());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SecuritySupport.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -103,0 +103,1 @@\n+        @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/ShutdownHook.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.util.HashMap;\n@@ -215,2 +214,2 @@\n-        if (fields instanceof ArrayList) {\n-            ((ArrayList<ValueDescriptor>) fields).trimToSize();\n+        if (fields instanceof ArrayList<?> list) {\n+            list.trimToSize();\n@@ -294,2 +293,1 @@\n-        if (object instanceof Type) {\n-            Type that = (Type) object;\n+        if (object instanceof Type that) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Type.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.PrintWriter;\n@@ -61,1 +60,0 @@\n-import jdk.jfr.internal.tool.PrettyWriter;\n@@ -82,1 +80,1 @@\n-        List<AnnotationElement> annos = createStandardAnnotations(\"Start Time\", null);\n+        var annos = createStandardAnnotations(\"Start Time\", null);\n@@ -90,2 +88,1 @@\n-        List<AnnotationElement> annos = new ArrayList<>();\n-        annos = createStandardAnnotations(\"Stack Trace\", \"Stack Trace starting from the method the event was committed in\");\n+        var annos = createStandardAnnotations(\"Stack Trace\", \"Stack Trace starting from the method the event was committed in\");\n@@ -97,2 +94,1 @@\n-        List<AnnotationElement> annos = new ArrayList<>();\n-        annos = createStandardAnnotations(\"Event Thread\", \"Thread in which event was committed in\");\n+        var annos = createStandardAnnotations(\"Event Thread\", \"Thread in which event was committed in\");\n@@ -104,2 +100,1 @@\n-        List<AnnotationElement> annos = new ArrayList<>();\n-        annos = createStandardAnnotations(\"Duration\", null);\n+        var annos = createStandardAnnotations(\"Duration\", null);\n@@ -145,1 +140,0 @@\n-                aes.trimToSize();\n@@ -422,2 +416,2 @@\n-            if (type instanceof PlatformEventType) {\n-                if (((PlatformEventType) type).isRegistered()) {\n+            if (type instanceof PlatformEventType pType) {\n+                if (pType.isRegistered()) {\n@@ -475,2 +469,1 @@\n-                if (type instanceof PlatformEventType) {\n-                    PlatformEventType pe = (PlatformEventType) type;\n+                if (type instanceof PlatformEventType pe) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-import java.util.Collections;\n@@ -210,7 +209,7 @@\n-        NANOSECONDS(\"ns\", TimeUnit.NANOSECONDS, TimeUnit.SECONDS.toNanos(1), TimeUnit.SECONDS.toMillis(1)),\n-        MICROSECONDS(\"us\", TimeUnit.MICROSECONDS, TimeUnit.SECONDS.toNanos(1) \/ 1000, TimeUnit.SECONDS.toMillis(1)),\n-        MILLISECONDS(\"ms\", TimeUnit.MILLISECONDS, TimeUnit.SECONDS.toMillis(1), TimeUnit.SECONDS.toMillis(1)),\n-        SECONDS(\"s\", TimeUnit.SECONDS, 1, TimeUnit.SECONDS.toMillis(1)),\n-        MINUTES(\"m\", TimeUnit.MINUTES, 1, TimeUnit.MINUTES.toMillis(1)),\n-        HOUR(\"h\", TimeUnit.HOURS, 1, TimeUnit.HOURS.toMillis(1)),\n-        DAY(\"d\", TimeUnit.DAYS, 1, TimeUnit.DAYS.toMillis(1));\n+        NANOSECONDS(\"ns\", TimeUnit.SECONDS.toNanos(1), TimeUnit.SECONDS.toMillis(1)),\n+        MICROSECONDS(\"us\", TimeUnit.SECONDS.toNanos(1) \/ 1000, TimeUnit.SECONDS.toMillis(1)),\n+        MILLISECONDS(\"ms\", TimeUnit.SECONDS.toMillis(1), TimeUnit.SECONDS.toMillis(1)),\n+        SECONDS(\"s\", 1, TimeUnit.SECONDS.toMillis(1)),\n+        MINUTES(\"m\", 1, TimeUnit.MINUTES.toMillis(1)),\n+        HOUR(\"h\", 1, TimeUnit.HOURS.toMillis(1)),\n+        DAY(\"d\", 1, TimeUnit.DAYS.toMillis(1));\n@@ -219,1 +218,0 @@\n-        private final TimeUnit timeUnit;\n@@ -223,1 +221,1 @@\n-        ThrottleUnit(String t, TimeUnit u, long factor, long millis) {\n+        ThrottleUnit(String t, long factor, long millis) {\n@@ -225,1 +223,0 @@\n-            this.timeUnit = u;\n@@ -368,3 +365,1 @@\n-        List<Annotation> annos = new ArrayList<>();\n-        annos.add(a);\n-        return annos;\n+        return List.of(a);\n@@ -652,10 +647,0 @@\n-    public static <T> List<T> smallUnmodifiable(List<T> list) {\n-        if (list.isEmpty()) {\n-            return Collections.emptyList();\n-        }\n-        if (list.size() == 1) {\n-            return Collections.singletonList(list.get(0));\n-        }\n-        return Collections.unmodifiableList(list);\n-    }\n-\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Utils.java","additions":9,"deletions":24,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.util.Collections;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/AbstractEventStream.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -168,2 +168,1 @@\n-            if (p instanceof EventParser) {\n-                EventParser ep = (EventParser) p;\n+            if (p instanceof EventParser ep) {\n@@ -247,1 +246,1 @@\n-            if (p instanceof EventParser) {\n+            if (p instanceof EventParser ep) {\n@@ -249,1 +248,0 @@\n-                EventParser ep = (EventParser) p;\n@@ -401,2 +399,2 @@\n-        if (o instanceof String) {\n-            return \"\\\"\" + String.valueOf(o) + \"\\\"\";\n+        if (o instanceof String s) {\n+            return \"\\\"\" + s + \"\\\"\";\n@@ -487,2 +485,1 @@\n-                if (p instanceof EventParser) {\n-                    EventParser ep = (EventParser) p;\n+                if (p instanceof EventParser ep) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ChunkParser.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -63,0 +63,1 @@\n+        @Override\n@@ -140,2 +141,2 @@\n-        if (o instanceof Reference) {\n-            return resolve(((Reference) o).resolve());\n+        if (o instanceof Reference r) {\n+            return resolve(r.resolve());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ConstantMap.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.time.Duration;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/EventFileStream.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,2 +36,0 @@\n-import jdk.jfr.internal.consumer.Parser;\n-import jdk.jfr.internal.consumer.RecordingInput;\n@@ -113,0 +111,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/EventParser.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/FinishedStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.util.function.Consumer;\n@@ -35,1 +34,0 @@\n-import jdk.jfr.consumer.EventStream;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/JdkJfrConsumer.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,2 +146,2 @@\n-        if (value instanceof Object[]) {\n-            return createTyped(objectContext, id, (Object[]) value);\n+        if (value instanceof Object[] array) {\n+            return createTyped(objectContext, id, array);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ObjectFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.time.Instant;\n@@ -34,1 +33,0 @@\n-import jdk.jfr.internal.Utils;\n@@ -69,0 +67,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/OngoingStream.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-import jdk.jfr.internal.consumer.Parser;\n-import jdk.jfr.internal.consumer.RecordingInput;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ParserFactory.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/ParserFilter.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -61,2 +61,1 @@\n-                if (remoteAddress instanceof InetSocketAddress) {\n-                    InetSocketAddress isa = (InetSocketAddress) remoteAddress;\n+                if (remoteAddress instanceof InetSocketAddress isa) {\n@@ -104,2 +103,1 @@\n-                if (remoteAddress instanceof InetSocketAddress) {\n-                    InetSocketAddress isa = (InetSocketAddress) remoteAddress;\n+                if (remoteAddress instanceof InetSocketAddress isa) {\n@@ -148,2 +146,1 @@\n-                if (remoteAddress instanceof InetSocketAddress) {\n-                    InetSocketAddress isa = (InetSocketAddress) remoteAddress;\n+                if (remoteAddress instanceof InetSocketAddress isa) {\n@@ -189,2 +186,1 @@\n-                if (remoteAddress instanceof InetSocketAddress) {\n-                    InetSocketAddress isa = (InetSocketAddress) remoteAddress;\n+                if (remoteAddress instanceof InetSocketAddress isa) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/instrument\/SocketChannelImplInstrumentor.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.time.ZoneId;\n@@ -32,2 +31,0 @@\n-import java.util.HashSet;\n-import java.util.Set;\n@@ -36,1 +33,0 @@\n-import jdk.jfr.internal.SecuritySupport.SafePath;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/management\/ChunkFilename.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import java.util.ArrayList;\n@@ -57,1 +56,0 @@\n-import jdk.jfr.internal.consumer.JdkJfrConsumer;\n@@ -87,1 +85,1 @@\n-            return new ArrayList<>();\n+            return List.of();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/management\/ManagementSupport.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,2 +38,0 @@\n-import jdk.jfr.internal.consumer.FinishedStream;\n-import jdk.jfr.internal.consumer.OngoingStream;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/management\/StreamManager.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,6 +29,0 @@\n-import static java.util.concurrent.TimeUnit.MICROSECONDS;\n-import static java.util.concurrent.TimeUnit.MILLISECONDS;\n-import static java.util.concurrent.TimeUnit.NANOSECONDS;\n-import static java.util.concurrent.TimeUnit.SECONDS;\n-\n-import java.util.concurrent.TimeUnit;\n@@ -37,2 +31,0 @@\n-import java.util.regex.Pattern;\n-import java.util.regex.Matcher;\n@@ -44,1 +36,0 @@\n-import jdk.jfr.Timespan;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/settings\/ThrottleSetting.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-import java.nio.charset.Charset;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Command.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Collections;\n@@ -42,1 +41,1 @@\n-        return Collections.singletonList(\"[<command>]\");\n+        return List.of(\"[<command>]\");\n@@ -45,0 +44,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Help.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -93,2 +93,1 @@\n-            if (value instanceof Double) {\n-                Double dValue = (Double) value;\n+            if (value instanceof Double dValue) {\n@@ -102,2 +101,1 @@\n-            if (value instanceof Float) {\n-                Float fValue = (Float) value;\n+            if (value instanceof Float fValue) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/JSONWriter.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -296,2 +296,2 @@\n-            if (value instanceof RecordedThread) {\n-                printThread((RecordedThread) value, postFix);\n+            if (value instanceof RecordedThread rt) {\n+                printThread(rt, postFix);\n@@ -300,2 +300,2 @@\n-            if (value instanceof RecordedClass) {\n-                printClass((RecordedClass) value, postFix);\n+            if (value instanceof RecordedClass rc) {\n+                printClass(rc, postFix);\n@@ -304,2 +304,2 @@\n-            if (value instanceof RecordedClassLoader) {\n-                printClassLoader((RecordedClassLoader) value, postFix);\n+            if (value instanceof RecordedClassLoader rcl) {\n+                printClassLoader(rcl, postFix);\n@@ -308,2 +308,1 @@\n-            if (value instanceof RecordedFrame) {\n-                RecordedFrame frame = (RecordedFrame) value;\n+            if (value instanceof RecordedFrame frame) {\n@@ -315,2 +314,2 @@\n-            if (value instanceof RecordedMethod) {\n-                println(formatMethod((RecordedMethod) value));\n+            if (value instanceof RecordedMethod rm) {\n+                println(formatMethod(rm));\n@@ -331,2 +330,1 @@\n-        if (value instanceof Double) {\n-            Double d = (Double) value;\n+        if (value instanceof Double d) {\n@@ -338,2 +336,1 @@\n-        if (value instanceof Float) {\n-            Float f = (Float) value;\n+        if (value instanceof Float f) {\n@@ -345,2 +342,1 @@\n-        if (value instanceof Long) {\n-            Long l = (Long) value;\n+        if (value instanceof Long l) {\n@@ -352,2 +348,1 @@\n-        if (value instanceof Integer) {\n-            Integer i = (Integer) value;\n+        if (value instanceof Integer i) {\n@@ -555,2 +550,1 @@\n-        if (value instanceof Duration) {\n-            Duration d = (Duration) value;\n+        if (value instanceof Duration d) {\n@@ -564,2 +558,1 @@\n-        if (value instanceof OffsetDateTime) {\n-            OffsetDateTime odt = (OffsetDateTime) value;\n+        if (value instanceof OffsetDateTime odt) {\n@@ -575,2 +568,2 @@\n-            if (value instanceof Number) {\n-                double d = ((Number) value).doubleValue();\n+            if (value instanceof Number n) {\n+                double d = n.doubleValue();\n@@ -583,2 +576,1 @@\n-            if (value instanceof Number) {\n-                Number n = (Number) value;\n+            if (value instanceof Number n) {\n@@ -609,2 +601,2 @@\n-            if (value instanceof Number) {\n-                long d = ((Number) value).longValue();\n+            if (value instanceof Number n) {\n+                long d = n.longValue();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/PrettyWriter.java","additions":20,"deletions":28,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.File;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Print.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        return Collections.singletonList(\"<file>\");\n+        return List.of(\"<file>\");\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Summary.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+    @Override\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/tool\/Version.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}