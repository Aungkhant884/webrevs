{"files":[{"patch":"@@ -2417,0 +2417,5 @@\n+    case Op_VectorMaskCmp:\n+      if (vlen < 2 || bit_size < 64) {\n+        return false;\n+      }\n+      break;\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1810,0 +1810,5 @@\n+    case Op_VectorMaskCmp:\n+      if (vlen < 2 || size_in_bits < 64) {\n+        return false;\n+      }\n+      break;\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co. Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.IntVector;\n+import jdk.incubator.vector.VectorSpecies;\n+import jdk.incubator.vector.VectorShuffle;\n+\n+\/*\n+ * @test\n+ * @bug 8265907\n+ * @modules jdk.incubator.vector\n+ * @run main\/othervm compiler.vectorapi.TestVectorShuffleIota\n+ *\/\n+\n+public class TestVectorShuffleIota {\n+    static final VectorSpecies<Integer> SPECIESi = IntVector.SPECIES_128;\n+\n+    static final int INVOC_COUNT = 50000;\n+\n+    static int[] ai = {87, 65, 78, 71};\n+\n+    static void testShuffleI() {\n+        IntVector iv = (IntVector) VectorShuffle.iota(SPECIESi, 0, 2, false).toVector();\n+        iv.intoArray(ai, 0);\n+    }\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < INVOC_COUNT; i++) {\n+            testShuffleI();\n+        }\n+        for (int i = 0; i < ai.length; i++) {\n+            System.out.print(ai[i] + \", \");\n+        }\n+        System.out.println();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestVectorShuffleIota.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}