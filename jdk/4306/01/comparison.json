{"files":[{"patch":"@@ -663,2 +663,4 @@\n-    const tstring::size_type pos = path.rfind(_T(\".exe\"));\n-    if (pos == tstring::npos) {\n+    \/\/ allow for \".*\" (last dot beyond the last slash)\n+    const tstring::size_type pos = path.rfind(_T(\".\"));\n+    const tstring::size_type spos = path.rfind(_T(\"\\\\\/\"));\n+    if (pos == tstring::npos || (spos > pos && spos != tstring::npos)) {\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinFileUtils.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Files;\n+import jdk.jpackage.test.HelloApp;\n+import jdk.jpackage.test.TKit;\n+import jdk.jpackage.test.Functional.ThrowingConsumer;\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.Annotations.Test;\n+\n+\/*\n+ * @test\n+ * @summary jpackage test app can run after changing executable's extension\n+ * @library ..\/helpers\n+ * @key jpackagePlatformPackage\n+ * @build jdk.jpackage.test.*\n+ * @build WinRenameTest\n+ * @requires (os.family == \"windows\")\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @run main\/othervm\/timeout=360 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=WinRenameTest\n+ *\/\n+public class WinRenameTest {\n+\n+    @Test\n+    public static void test() throws IOException {\n+        String javaAppDesc = \"com.hello\/com.hello.Hello\";\n+        JPackageCommand cmd = JPackageCommand.helloAppImage(javaAppDesc);\n+\n+        cmd.executeAndAssertImageCreated();\n+\n+        Path launcherPath = cmd.appLauncherPath();\n+        HelloApp.assertApp(launcherPath).executeAndVerifyOutput();\n+\n+        String lp = launcherPath.toString();\n+        TKit.assertTrue(lp.endsWith(\".exe\"), \"UNexpected launcher path: \" + lp);\n+\n+        Path newLauncherPath = Path.of(lp.replaceAll(\".exe\", \".anything\"));\n+        Files.move(launcherPath, newLauncherPath);\n+\n+        HelloApp.assertApp(newLauncherPath).executeAndVerifyOutput();\n+    }\n+}\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinRenameTest.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}