{"files":[{"patch":"@@ -1390,3 +1390,0 @@\n-  \/\/ Generate a prefixed or non-prefixed add immediate instruction based on si34 value\n-  inline void paddi_or_addi(Register d, Register a, long si34);\n-  inline void pli_or_li(Register d, long si34);\n@@ -1524,6 +1521,3 @@\n-  static bool is_pli_prefix(int x) {\n-     return is_paddi_prefix(x) && inv_r_eo(x) == 0;\n-  }\n-  static bool is_pli_suffix(int x) {\n-     return is_paddi_suffix(x) && inv_ra_field(x) == 0;\n-  }\n+  \/\/ This function can skip a nop for 64-byte alignment and check the next word for a prefix.\n+  \/\/ Since the alignement nop is uncommon case, we will keep callers of this function simple,\n+  \/\/ as they which are often assertions and complex if-statement.\n@@ -1543,1 +1537,0 @@\n-  static bool is_pli(const int* p)   { return is_paddi(p, true); }\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp","additions":3,"deletions":10,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -157,8 +157,0 @@\n-inline void Assembler::paddi_or_addi(Register d, Register a, long si34) {\n-  if (is_simm(si34, 16)) {\n-    Assembler::addi(d, a, (int)si34);\n-  } else {\n-    Assembler::paddi(d, a, si34);\n-  }\n-}\n-\n@@ -209,8 +201,0 @@\n-inline void Assembler::pli_or_li(Register d, long si34) {\n-  if (is_simm(si34, 16)) {\n-    Assembler::li( d, (int)si34);\n-  } else {\n-    Assembler::pli(d, si34);\n-  }\n-}\n-\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.inline.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -5839,0 +5839,3 @@\n+  \/\/ This macro is valid only in Power 10 and up, but adding the following predicate here\n+  \/\/ caused build error. So we comment it out for now.\n+  \/\/ predicate(PowerArchitecturePPC64 >= 10);\n@@ -5924,0 +5927,3 @@\n+  \/\/ This macro is valid only in Power 10 and up, but adding the following predicate here\n+  \/\/ caused build error. So we comment it out for now.\n+  \/\/ predicate(PowerArchitecturePPC64 >= 10);\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}