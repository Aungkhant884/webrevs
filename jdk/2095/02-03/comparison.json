{"files":[{"patch":"@@ -63,1 +63,3 @@\n-  if (!thread->is_Compiler_thread())       return false;\n+  if (!thread->is_Compiler_thread()) {\n+    return false;\n+  }\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1113,4 +1113,4 @@\n-  static long inv_r_eo(     int        x)  { return  inv_opp_u_field(x, 11, 11); }\n-  static long inv_type(     int        x)  { return  inv_opp_u_field(x, 7,  6); }\n-  static long inv_st_x0(    int        x)  { return  inv_opp_u_field(x, 8,  8); }\n-  static long inv_st_x1(    int        x)  { return  inv_opp_u_field(x, 11,  8); }\n+  static long inv_r_eo(   int x)  { return  inv_opp_u_field(x, 11, 11); }\n+  static long inv_type(   int x)  { return  inv_opp_u_field(x,  7,  6); }\n+  static long inv_st_x0(  int x)  { return  inv_opp_u_field(x,  8,  8); }\n+  static long inv_st_x1(  int x)  { return  inv_opp_u_field(x, 11,  8); }\n@@ -1119,1 +1119,1 @@\n-  static long inv_d0_eo(    long       x)  { return  inv_opp_u_field(x, 31, 14); }\n+  static long inv_d0_eo( long x)  { return  inv_opp_u_field(x, 31, 14); }\n@@ -1122,3 +1122,3 @@\n-  static long inv_imm0_eo(  int        x)  { return  inv_opp_u_field(x, 31, 16); }\n-  static long inv_uimm_eo(  int        x)  { return  inv_opp_u_field(x, 31, 29); }\n-  static long inv_imm_eo(   int        x)  { return  inv_opp_u_field(x, 31, 24); }\n+  static long inv_imm0_eo(int x)  { return  inv_opp_u_field(x, 31, 16); }\n+  static long inv_uimm_eo(int x)  { return  inv_opp_u_field(x, 31, 29); }\n+  static long inv_imm_eo( int x)  { return  inv_opp_u_field(x, 31, 24); }\n@@ -1321,2 +1321,2 @@\n-  static inline int hi18_signed(  int x) { return hi16_signed(x); }\n-  static inline int hi18_signed( long x) { return (int)((x << 30) >> 46); }\n+  static inline int hi18_signed( int x) { return hi16_signed(x); }\n+  static inline int hi18_signed(long x) { return (int)((x << 30) >> 46); }\n@@ -1387,3 +1387,0 @@\n-  inline void pla(  Register d, long si34);\n-  inline void pla(  Register d, Register a, long si34);\n-  inline void psubi(Register d, Register a, long si34);\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.hpp","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  if(is_aligned(reinterpret_cast<uintptr_t>(pc()) + sizeof(int32_t), 64) ||\n+  if (is_aligned(reinterpret_cast<uintptr_t>(pc()) + sizeof(int32_t), 64) ||\n@@ -147,1 +147,1 @@\n-inline void Assembler::paddi(  Register d, Register a, long si34, bool r = false) {\n+inline void Assembler::paddi(Register d, Register a, long si34, bool r = false) {\n@@ -152,1 +152,1 @@\n-inline void Assembler::paddi_r0ok(  Register d, Register a, long si34, bool r = false) {\n+inline void Assembler::paddi_r0ok(Register d, Register a, long si34, bool r = false) {\n@@ -196,4 +196,1 @@\n-inline void Assembler::pli(  Register d, long si34)             { Assembler::paddi_r0ok( d, R0, si34, false); }\n-inline void Assembler::pla(  Register d, long si34)             { Assembler::paddi_r0ok( d, R0, si34, true); }\n-inline void Assembler::pla(  Register d, Register a, long si34) { Assembler::paddi( d, a, si34, false); }\n-inline void Assembler::psubi(Register d, Register a, long si34) { Assembler::paddi( d, a, -si34, false); }\n+inline void Assembler::pli(Register d, long si34) { Assembler::paddi_r0ok( d, R0, si34, false); }\n","filename":"src\/hotspot\/cpu\/ppc\/assembler_ppc.inline.hpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"}]}