{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        im007aThread01 thread = null;\n+        Thread thread = null;\n@@ -57,1 +57,1 @@\n-                thread = new im007aThread01(\"im007aThread01\");\n+                thread = JDIThreadFactory.newThread(new im007aThread01(\"im007aThread01\"));\n@@ -120,1 +120,1 @@\n-class im007aThread01 extends Thread {\n+class im007aThread01 extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod007a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-    private invokemethod011Thr thrs[] =\n-        new invokemethod011Thr[invokemethod011.THRDS_NUM-1];\n+    private invokemethod011Thr thrs011[] = new invokemethod011Thr[invokemethod011.THRDS_NUM-1];\n+    private Thread thrs[] = new Thread[invokemethod011.THRDS_NUM-1];\n@@ -106,2 +106,2 @@\n-            thrs[i] = new invokemethod011Thr(readyObj,\n-                invokemethod011.DEBUGGEE_THRNAMES[i+1]);\n+            thrs011[i] = new invokemethod011Thr(readyObj, invokemethod011.DEBUGGEE_THRNAMES[i+1]);\n+            thrs[i] = JDIThreadFactory.newThread(thrs011[i]);\n@@ -130,1 +130,1 @@\n-            thrs[i].doExit = true;\n+            thrs011[i].doExit = true;\n@@ -146,1 +146,1 @@\n-    class invokemethod011Thr extends Thread {\n+    class invokemethod011Thr extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod011t.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,2 +37,2 @@\n-    private invokemethod013Thr thrs[] =\n-        new invokemethod013Thr[invokemethod013.THRDS_NUM-1];\n+    private invokemethod013Thr thrs013[] = new invokemethod013Thr[invokemethod013.THRDS_NUM-1];\n+    private Thread thrs[] = new Thread[invokemethod013.THRDS_NUM-1];\n@@ -107,2 +107,2 @@\n-            thrs[i] = new invokemethod013Thr(readyObj,\n-                invokemethod013.DEBUGGEE_THRDS[i+1][0]);\n+            thrs013[i] = new invokemethod013Thr(readyObj, invokemethod013.DEBUGGEE_THRDS[i+1][0]);\n+            thrs[i] = JDIThreadFactory.newThread(thrs013[i]);\n@@ -132,1 +132,1 @@\n-            thrs[i].doExit = true;\n+            thrs013[i].doExit = true;\n@@ -148,1 +148,1 @@\n-    class invokemethod013Thr extends Thread {\n+    class invokemethod013Thr extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod013t.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-        im007aThread01 thread = null;\n+        Thread thread = null;\n@@ -57,1 +57,1 @@\n-                thread = new im007aThread01(\"im007aThread01\");\n+                thread = JDIThreadFactory.newThread(new im007aThread01(\"im007aThread01\"));\n@@ -123,1 +123,1 @@\n-class im007aThread01 extends Thread {\n+class im007aThread01 extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance007a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static disable001aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new disable001aThread1(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new disable001aThread1(\"thread1\"));\n@@ -205,1 +205,1 @@\n-class disable001aThread1 extends Thread {\n+class disable001aThread1 extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/disable\/disable001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static setenabled001aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new setenabled001aThread1(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new setenabled001aThread1(\"thread1\"));\n@@ -205,3 +205,1 @@\n-class setenabled001aThread1 extends Thread {\n-\n-    String tName = null;\n+class setenabled001aThread1 extends JDITask {\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        setenabled001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        setenabled001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        setenabled001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        setenabled001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/setEnabled\/setenabled001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static setenabled002aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new setenabled002aThread1(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new setenabled002aThread1(\"thread1\"));\n@@ -211,3 +211,1 @@\n-class setenabled002aThread1 extends Thread {\n-\n-    String tName = null;\n+class setenabled002aThread1 extends JDITask {\n@@ -217,1 +215,0 @@\n-        tName = threadName;\n@@ -221,1 +218,1 @@\n-        setenabled002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        setenabled002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -228,1 +225,1 @@\n-        setenabled002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        setenabled002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/setEnabled\/setenabled002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static filter_rt001aThread1 thread1 = new filter_rt001aThread1(\"thread1\");\n-    static filter_rt001aThread2 thread2 = new filter_rt001aThread2(\"thread2\");\n+    static Thread thread1 = JDIThreadFactory.newThread(new filter_rt001aThread1(\"thread1\"));\n+    static Thread thread2 = JDIThreadFactory.newThread(new filter_rt001aThread2(\"thread2\"));\n@@ -165,3 +165,1 @@\n-class filter_rt001aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt001aThread1 extends JDITask {\n@@ -171,1 +169,0 @@\n-        tName = threadName;\n@@ -175,1 +172,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -180,1 +177,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -185,1 +182,1 @@\n-class filter_rt001aThread2 extends Thread {\n+class filter_rt001aThread2 extends JDITask {\n@@ -203,2 +200,0 @@\n-    String tName = null;\n-\n@@ -207,1 +202,0 @@\n-        tName = threadName;\n@@ -211,1 +205,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -216,1 +210,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addClassFilter_rt\/filter_rt001a.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static filter_rt002aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new filter_rt002aThread1(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new filter_rt002aThread1(\"thread1\"));\n@@ -165,1 +165,1 @@\n-class filter_rt002aThread1 extends Thread {\n+class filter_rt002aThread1 extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addClassFilter_rt\/filter_rt002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static filter_rt003aThread1 thread1 = null;\n-    static filter_rt003aThread2 thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -87,2 +87,2 @@\n-        thread1 = new filter_rt003aThread1(\"thread1\");\n-        thread2 = new filter_rt003aThread2(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new filter_rt003aThread1(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new filter_rt003aThread2(\"thread2\"));\n@@ -170,3 +170,1 @@\n-class filter_rt003aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread1 extends JDITask {\n@@ -176,1 +174,0 @@\n-        tName = threadName;\n@@ -180,1 +177,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -185,1 +182,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -207,3 +204,1 @@\n-class filter_rt003aThread2 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread2 extends JDITask {\n@@ -213,1 +208,0 @@\n-        tName = threadName;\n@@ -217,1 +211,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +216,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addClassFilter_rt\/filter_rt003a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static filter_s001aThread1 thread1 = null;\n-    static filter_s001aThread2 thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -104,1 +104,1 @@\n-                    thread1 = new filter_s001aThread1(\"thread1\");\n+                    thread1 = JDIThreadFactory.newThread(new filter_s001aThread1(\"thread1\"));\n@@ -111,1 +111,1 @@\n-                    thread2 = new filter_s001aThread2(\"thread2\");\n+                    thread2 = JDIThreadFactory.newThread(new filter_s001aThread2(\"thread2\"));\n@@ -169,3 +169,1 @@\n-class filter_s001aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_s001aThread1 extends JDITask {\n@@ -175,1 +173,0 @@\n-        tName = threadName;\n@@ -179,1 +176,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -184,1 +181,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -189,1 +186,1 @@\n-class filter_s001aThread2 extends Thread {\n+class filter_s001aThread2 extends JDITask {\n@@ -207,2 +204,0 @@\n-    String tName = null;\n-\n@@ -211,1 +206,0 @@\n-        tName = threadName;\n@@ -215,1 +209,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -220,1 +214,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addClassFilter_s\/filter_s001a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static filter_s002aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -99,1 +99,1 @@\n-                            thread1 = new filter_s002aThread1(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new filter_s002aThread1(\"thread1\"));\n@@ -164,3 +164,1 @@\n-class filter_s002aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_s002aThread1 extends JDITask {\n@@ -170,1 +168,0 @@\n-        tName = threadName;\n@@ -174,1 +171,1 @@\n-        filter_s002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -179,1 +176,1 @@\n-        filter_s002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addClassFilter_s\/filter_s002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,2 +58,2 @@\n-    static instancefilter001aThread thread1 = null;\n-    static instancefilter001aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -104,2 +104,2 @@\n-                            thread1 = new instancefilter001aThread(\"thread1\");\n-                            thread2 = new instancefilter001aThread(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter001aThread(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new instancefilter001aThread(\"thread2\"));\n@@ -154,1 +154,1 @@\n-    static class instancefilter001aThread extends Thread {\n+    static class instancefilter001aThread extends JDITask {\n@@ -156,1 +156,0 @@\n-        String tName = null;\n@@ -161,1 +160,0 @@\n-            tName = threadName;\n@@ -168,1 +166,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +173,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -178,1 +176,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addInstanceFilter\/instancefilter001a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-    static instancefilter002aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new instancefilter002aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter002aThread(\"thread1\"));\n@@ -144,1 +144,0 @@\n-        String tName = null;\n@@ -149,1 +148,0 @@\n-            tName = threadName;\n@@ -156,1 +154,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addInstanceFilter\/instancefilter002a.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static threadfilter001aThread thread1 = null;\n-    static threadfilter001aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new threadfilter001aThread(\"thread1\");\n-                            thread2 = new threadfilter001aThread(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new threadfilter001aThread(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new threadfilter001aThread(\"thread2\"));\n@@ -151,1 +151,1 @@\n-    static class threadfilter001aThread extends Thread {\n+    static class threadfilter001aThread extends JDITask {\n@@ -153,1 +153,0 @@\n-        String tName = null;\n@@ -158,1 +157,0 @@\n-            tName = threadName;\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -174,1 +172,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addThreadFilter\/threadfilter001a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static threadfilter002aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new threadfilter002aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new threadfilter002aThread(\"thread1\"));\n@@ -139,1 +139,1 @@\n-    static class threadfilter002aThread extends Thread {\n+    static class threadfilter002aThread extends JDITask {\n@@ -141,1 +141,0 @@\n-        String tName = null;\n@@ -146,1 +145,0 @@\n-            tName = threadName;\n@@ -153,1 +151,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -162,1 +160,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addThreadFilter\/threadfilter002a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static threadfilter004aThread thread1 = null;\n-    static threadfilter004aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new threadfilter004aThread(\"thread1\");\n-                            thread2 = new threadfilter004aThread(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new threadfilter004aThread(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new threadfilter004aThread(\"thread2\"));\n@@ -154,1 +154,1 @@\n-    static class threadfilter004aThread extends Thread {\n+    static class threadfilter004aThread extends JDITask {\n@@ -156,1 +156,0 @@\n-        String tName = null;\n@@ -161,1 +160,0 @@\n-            tName = threadName;\n@@ -168,1 +166,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -177,1 +175,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addThreadFilter\/threadfilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -161,3 +161,0 @@\n-\n-    String tName = null;\n-\n@@ -166,1 +163,0 @@\n-        tName = threadName;\n@@ -170,1 +166,1 @@\n-        filter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +171,1 @@\n-        filter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addClassExclusionFilter\/filter001a.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static filter_rt001aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -107,1 +107,1 @@\n-                thread1 = new filter_rt001aThread1(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new filter_rt001aThread1(\"thread1\"));\n@@ -162,3 +162,1 @@\n-class filter_rt001aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt001aThread1 extends JDITask {\n@@ -168,1 +166,0 @@\n-        tName = threadName;\n@@ -172,1 +169,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +172,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addClassFilter_rt\/filter_rt001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,3 +166,1 @@\n-class filter_rt002aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt002aThread1 extends JDITask {\n@@ -172,1 +170,0 @@\n-        tName = threadName;\n@@ -176,1 +173,1 @@\n-        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -181,1 +178,1 @@\n-        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addClassFilter_rt\/filter_rt002a.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static filter_rt003aThread1 thread1 = null;\n-    static filter_rt003aThread2 thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -87,2 +87,2 @@\n-        thread1 = new filter_rt003aThread1(\"thread1\");\n-        thread2 = new filter_rt003aThread2(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new filter_rt003aThread1(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new filter_rt003aThread2(\"thread2\"));\n@@ -166,3 +166,1 @@\n-class filter_rt003aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread1 extends JDITask {\n@@ -172,1 +170,0 @@\n-        tName = threadName;\n@@ -176,1 +173,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -179,1 +176,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -196,3 +193,1 @@\n-class filter_rt003aThread2 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread2 extends JDITask {\n@@ -202,1 +197,0 @@\n-        tName = threadName;\n@@ -206,1 +200,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -208,1 +202,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addClassFilter_rt\/filter_rt003a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static instancefilter001aThread thread1 = null;\n-    static instancefilter001aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new instancefilter001aThread(\"thread1\");\n-        thread2 = new instancefilter001aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new instancefilter001aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new instancefilter001aThread(\"thread2\"));\n@@ -151,1 +151,1 @@\n-    static class instancefilter001aThread extends Thread {\n+    static class instancefilter001aThread extends JDITask {\n@@ -153,1 +153,0 @@\n-        String tName = null;\n@@ -158,1 +157,0 @@\n-            tName = threadName;\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -172,1 +170,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -175,1 +173,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addInstanceFilter\/instancefilter001a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static instancefilter002aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new instancefilter002aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter002aThread(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class instancefilter002aThread extends Thread {\n+    static class instancefilter002aThread extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addInstanceFilter\/instancefilter002a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static instancefilter003aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new instancefilter003aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter003aThread(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class instancefilter003aThread extends Thread {\n+    static class instancefilter003aThread extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addInstanceFilter\/instancefilter003a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static instancefilter004aThread thread1 = null;\n-    static instancefilter004aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new instancefilter004aThread(\"thread1\");\n-        thread2 = new instancefilter004aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new instancefilter004aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new instancefilter004aThread(\"thread2\"));\n@@ -150,1 +150,1 @@\n-    static class instancefilter004aThread extends Thread {\n+    static class instancefilter004aThread extends JDITask {\n@@ -152,1 +152,0 @@\n-        String tName = null;\n@@ -157,1 +156,0 @@\n-            tName = threadName;\n@@ -164,1 +162,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -171,1 +169,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -174,1 +172,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addInstanceFilter\/instancefilter004a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static threadfilter001aThread thread1 = null;\n-    static threadfilter001aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new threadfilter001aThread(\"thread1\");\n-        thread2 = new threadfilter001aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new threadfilter001aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new threadfilter001aThread(\"thread2\"));\n@@ -150,1 +150,1 @@\n-    static class threadfilter001aThread extends Thread {\n+    static class threadfilter001aThread extends JDITask {\n@@ -152,1 +152,0 @@\n-        String tName = null;\n@@ -157,1 +156,0 @@\n-            tName = threadName;\n@@ -164,1 +162,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +171,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addThreadFilter\/threadfilter001a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static threadfilter002aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new threadfilter002aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new threadfilter002aThread(\"thread1\"));\n@@ -139,1 +139,1 @@\n-    static class threadfilter002aThread extends Thread {\n+    static class threadfilter002aThread extends JDITask {\n@@ -141,1 +141,0 @@\n-        String tName = null;\n@@ -146,1 +145,0 @@\n-            tName = threadName;\n@@ -153,1 +151,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -162,1 +160,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addThreadFilter\/threadfilter002a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static threadfilter004aThread thread1 = null;\n-    static threadfilter004aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new threadfilter004aThread(\"thread1\");\n-        thread2 = new threadfilter004aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new threadfilter004aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new threadfilter004aThread(\"thread2\"));\n@@ -151,1 +151,1 @@\n-    static class threadfilter004aThread extends Thread {\n+    static class threadfilter004aThread extends JDITask {\n@@ -153,1 +153,0 @@\n-        String tName = null;\n@@ -158,1 +157,0 @@\n-            tName = threadName;\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -174,1 +172,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addThreadFilter\/threadfilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    static owningthread002aThread[] threads = new owningthread002aThread[threadCount];\n+    static Thread[] threads = new Thread[threadCount];\n@@ -96,1 +96,1 @@\n-                        threads[i] = new owningthread002aThread(threadNamePrefix + i);\n+                        threads[i] = JDIThreadFactory.newThread(new owningthread002aThread(threadNamePrefix + i));\n@@ -146,1 +146,1 @@\n-class owningthread002aThread extends Thread {\n+class owningthread002aThread extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/owningThread\/owningthread002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}