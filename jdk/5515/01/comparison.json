{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    Thready [] thrds = new Thready [threadCount];\n+    Thread[] thrds = new Thread[threadCount];\n@@ -79,1 +79,1 @@\n-            thrds[i] = new Thready(\"Thread-\" + (i+1));\n+            thrds[i] = JDIThreadFactory.newThread(new Thready(\"Thread-\" + (i+1)));\n@@ -93,1 +93,1 @@\n-    static class Thready extends Thread {\n+    static class Thready extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc01x001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    Thready [] thrds = new Thready [threadCount];\n+    Thread[] thrds = new Thread[threadCount];\n@@ -75,1 +75,1 @@\n-            thrds[i] = new Thready(\"Thread-\" + (i+1));\n+            thrds[i] = JDIThreadFactory.newThread(new Thready(\"Thread-\" + (i+1)));\n@@ -80,1 +80,1 @@\n-    static class Thready extends Thread {\n+    static class Thready extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc02x001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    Thready [] thrds = new Thready [threadCount];\n+    Thread[] thrds = new Thread[threadCount];\n@@ -77,1 +77,1 @@\n-            thrds[i] = new Thready(\"Thread-\" + (i+1));\n+            thrds[i] = JDIThreadFactory.newThread(new Thready(\"Thread-\" + (i+1)));\n@@ -82,1 +82,1 @@\n-    static class Thready extends Thread {\n+    static class Thready extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc02x002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-    Thready [] thrds = new Thready [threadCount];\n+    Thread[] thrds = new Thread[threadCount];\n@@ -77,1 +77,1 @@\n-            thrds[i] = new Thready(\"Thread-\" + (i+1));\n+            thrds[i] = JDIThreadFactory.newThread(new Thready(\"Thread-\" + (i+1)));\n@@ -82,1 +82,1 @@\n-    static class Thready extends Thread {\n+    static class Thready extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc02x003a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    Thready [] thrds = new Thready [threadCount];\n+    Thread[] thrds = new Thread[threadCount];\n@@ -61,1 +61,1 @@\n-            thrds[i] = new Thready(\"Thread-\" + (i+1));\n+            thrds[i] = JDIThreadFactory.newThread(new Thready(\"Thread-\" + (i+1)));\n@@ -66,1 +66,1 @@\n-    static class Thready extends Thread {\n+    static class Thready extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc02x004a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    Thready [] thrds = new Thready [threadCount];\n+    Thread[] thrds = new Thread[threadCount];\n@@ -77,1 +77,1 @@\n-            thrds[i] = new Thready(\"Thread-\" + (i+1));\n+            thrds[i] = JDIThreadFactory.newThread(new Thready(\"Thread-\" + (i+1)));\n@@ -82,1 +82,1 @@\n-    static class Thready extends Thread {\n+    static class Thready extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc03x001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    Thready [] thrds = new Thready [threadCount];\n+    Thread[] thrds = new Thread[threadCount];\n@@ -68,1 +68,1 @@\n-            thrds[i] = new Thready(\"Thread-\" + (i+1));\n+            thrds[i] = JDIThreadFactory.newThread(new Thready(\"Thread-\" + (i+1)));\n@@ -81,1 +81,1 @@\n-    static class Thready extends Thread {\n+    static class Thready extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BScenarios\/multithrd\/tc04x001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-class filters001b extends Thread {\n+class filters001b extends JDITask {\n@@ -71,1 +71,1 @@\n-        setName(nameObj);\n+        super(nameObj);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/_bounds_\/filters001a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter001a thread1 = null;\n-    static Threadinstancefilter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter001a(\"thread1\");\n-                            thread2 = new Threadinstancefilter001a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter001a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter001a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadinstancefilter001a extends Thread {\n+    static class Threadinstancefilter001a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +171,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addInstanceFilter\/instancefilter001a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadinstancefilter002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter002a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadinstancefilter002a extends Thread {\n+    static class Threadinstancefilter002a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addInstanceFilter\/instancefilter002a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    static Threadinstancefilter003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter003a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadinstancefilter003a extends Thread {\n+    static class Threadinstancefilter003a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addInstanceFilter\/instancefilter003a.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter004a thread1 = null;\n-    static Threadinstancefilter004a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter004a(\"thread1\");\n-                            thread2 = new Threadinstancefilter004a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter004a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter004a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadinstancefilter004a extends Thread {\n+    static class Threadinstancefilter004a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +171,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addInstanceFilter\/instancefilter004a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadthreadfilter001a thread1 = null;\n-    static Threadthreadfilter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadthreadfilter001a(\"thread1\");\n-                            thread2 = new Threadthreadfilter001a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadthreadfilter001a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadthreadfilter001a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadthreadfilter001a extends Thread {\n+    static class Threadthreadfilter001a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +173,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addThreadFilter\/threadfilter001a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadthreadfilter002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadthreadfilter002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadthreadfilter002a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadthreadfilter002a extends Thread {\n+    static class Threadthreadfilter002a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addThreadFilter\/threadfilter002a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-    static Threadthreadfilter003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadthreadfilter003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadthreadfilter003a(\"thread1\"));\n@@ -152,1 +152,1 @@\n-    static class Threadthreadfilter003a extends Thread {\n+    static class Threadthreadfilter003a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addThreadFilter\/threadfilter003a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadthreadfilter004a thread1 = null;\n-    static Threadthreadfilter004a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadthreadfilter004a(\"thread1\");\n-                            thread2 = new Threadthreadfilter004a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadthreadfilter004a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadthreadfilter004a(\"thread2\"));\n@@ -154,1 +154,1 @@\n-    static class Threadthreadfilter004a extends Thread {\n+    static class Threadthreadfilter004a extends JDITask {\n@@ -156,1 +156,0 @@\n-        String tName = null;\n@@ -161,1 +160,0 @@\n-            tName = threadName;\n@@ -168,1 +166,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -177,1 +175,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/addThreadFilter\/threadfilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadlocation001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadlocation001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadlocation001a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadlocation001a extends Thread {\n+    static class Threadlocation001a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/BreakpointRequest\/location\/location001a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1filter001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -104,1 +104,1 @@\n-                thread1 = new Thread1filter001a(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new Thread1filter001a(\"thread1\"));\n@@ -146,1 +146,1 @@\n-class Thread1filter001a extends Thread {\n+class Thread1filter001a extends JDITask {\n@@ -155,2 +155,0 @@\n-    String tName = null;\n-\n@@ -159,1 +157,0 @@\n-        tName = threadName;\n@@ -163,1 +160,1 @@\n-        filter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -165,1 +162,1 @@\n-        filter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareRequest\/addClassExclusionFilter\/filter001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1filter002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -104,1 +104,1 @@\n-                thread1 = new Thread1filter002a(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new Thread1filter002a(\"thread1\"));\n@@ -146,1 +146,1 @@\n-class Thread1filter002a extends Thread {\n+class Thread1filter002a extends JDITask {\n@@ -155,2 +155,0 @@\n-    String tName = null;\n-\n@@ -159,1 +157,0 @@\n-        tName = threadName;\n@@ -163,1 +160,1 @@\n-        filter002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -165,1 +162,1 @@\n-        filter002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareRequest\/addClassExclusionFilter\/filter002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,2 +101,2 @@\n-                            filter_rt001aThread1 thread1 = new filter_rt001aThread1(\"thread1\");\n-                            filter_rt001aThread2 thread2 = new filter_rt001aThread2(\"thread2\");\n+                            Thread thread1 = JDIThreadFactory.newThread(new filter_rt001aThread1(\"thread1\"));\n+                            Thread thread2 = JDIThreadFactory.newThread(new filter_rt001aThread2(\"thread2\"));\n@@ -158,3 +158,1 @@\n-class filter_rt001aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt001aThread1 extends JDITask {\n@@ -164,1 +162,0 @@\n-        tName = threadName;\n@@ -168,1 +165,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -170,1 +167,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -181,3 +178,1 @@\n-class filter_rt001aThread2 extends Thread {\n-\n-    String tName = null;\n+class filter_rt001aThread2 extends JDITask {\n@@ -187,1 +182,0 @@\n-        tName = threadName;\n@@ -191,1 +185,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -193,1 +187,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareRequest\/addClassFilter_rt\/filter_rt001a.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static filter_rt002aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new filter_rt002aThread1(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new filter_rt002aThread1(\"thread1\"));\n@@ -152,3 +152,1 @@\n-class filter_rt002aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt002aThread1 extends JDITask {\n@@ -158,1 +156,0 @@\n-        tName = threadName;\n@@ -162,1 +159,1 @@\n-        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -164,1 +161,1 @@\n-        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareRequest\/addClassFilter_rt\/filter_rt002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,2 +102,2 @@\n-                            filter_rt003aThread1 thread1 = new filter_rt003aThread1(\"thread1\");\n-                            filter_rt003aThread2 thread2 = new filter_rt003aThread2(\"thread2\");\n+                            Thread thread1 = JDIThreadFactory.newThread(new filter_rt003aThread1(\"thread1\"));\n+                            Thread thread2 = JDIThreadFactory.newThread(new filter_rt003aThread2(\"thread2\"));\n@@ -159,3 +159,1 @@\n-class filter_rt003aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread1 extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -171,1 +168,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -182,3 +179,1 @@\n-class filter_rt003aThread2 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread2 extends JDITask {\n@@ -188,1 +183,0 @@\n-        tName = threadName;\n@@ -192,1 +186,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -194,1 +188,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareRequest\/addClassFilter_rt\/filter_rt003a.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-                Thread1filter_s001a thread1 = new Thread1filter_s001a(\"thread1\");\n+                Thread thread1 = JDIThreadFactory.newThread(new Thread1filter_s001a(\"thread1\"));\n@@ -107,1 +107,1 @@\n-                Thread2filter_s001a thread2 = new Thread2filter_s001a(\"thread2\");\n+                Thread thread2 = JDIThreadFactory.newThread(new Thread2filter_s001a(\"thread2\"));\n@@ -149,1 +149,1 @@\n-class Thread1filter_s001a extends Thread {\n+class Thread1filter_s001a extends JDITask {\n@@ -158,2 +158,0 @@\n-    String tName = null;\n-\n@@ -162,1 +160,0 @@\n-        tName = threadName;\n@@ -166,1 +163,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -168,1 +165,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -173,3 +170,1 @@\n-class Thread2filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_s001a extends JDITask {\n@@ -179,1 +174,0 @@\n-        tName = threadName;\n@@ -183,1 +177,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -185,1 +179,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareRequest\/addClassFilter_s\/filter_s001a.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1filter_s002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -99,1 +99,1 @@\n-                            thread1 = new Thread1filter_s002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_s002a(\"thread1\"));\n@@ -145,1 +145,1 @@\n-class Thread1filter_s002a extends Thread {\n+class Thread1filter_s002a extends JDITask {\n@@ -154,3 +154,0 @@\n-\n-    String tName = null;\n-\n@@ -159,1 +156,0 @@\n-        tName = threadName;\n@@ -163,1 +159,1 @@\n-        filter_s002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -165,1 +161,1 @@\n-        filter_s002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassPrepareRequest\/addClassFilter_s\/filter_s002a.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,2 +102,2 @@\n-                         Threadinvokemethod001a test_thread =\n-                             new Threadinvokemethod001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadinvokemethod001a(\"testedThread\"));\n@@ -153,1 +153,1 @@\n-class Threadinvokemethod001a extends Thread {\n+class Threadinvokemethod001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/invokeMethod\/invokemethod001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n- *      Threadnewinstance002a extends Thread                    <BR>\n+ *      Threadnewinstance002a extends JDITask                    <BR>\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance001.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,2 +100,2 @@\n-                         Threadnewinstance001a test_thread =\n-                             new Threadnewinstance001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadnewinstance001a(\"testedThread\"));\n@@ -172,1 +172,1 @@\n-class Threadnewinstance001a extends Thread {\n+class Threadnewinstance001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ClassType\/newInstance\/newinstance001a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            Thread thread1 = new equals001aThread(\"thread1\");\n+            Thread thread1 = JDIThreadFactory.newThread(new equals001aThread(\"thread1\"));\n@@ -111,1 +111,1 @@\n-class equals001aThread extends Thread {\n+class equals001aThread extends JDITask {\n@@ -129,1 +129,1 @@\n-        equals001aThread1 thread2 = new equals001aThread1();\n+        Thread thread2 = JDIThreadFactory.newThread(new equals001aThread1());\n@@ -150,1 +150,1 @@\n-class equals001aThread1 extends Thread {\n+class equals001aThread1 implements Runnable {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/equals\/equals001a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            Thread thread1 = new hashcode001aThread(\"thread1\");\n+            Thread thread1 = JDIThreadFactory.newThread(new hashcode001aThread(\"thread1\"));\n@@ -111,1 +111,1 @@\n-class hashcode001aThread extends Thread {\n+class hashcode001aThread extends JDITask {\n@@ -129,1 +129,1 @@\n-        hashcode001aThread1 thread2 = new hashcode001aThread1();\n+        Thread thread2 = JDIThreadFactory.newThread(new hashcode001aThread1());\n@@ -150,1 +150,1 @@\n-class hashcode001aThread1 extends Thread {\n+class hashcode001aThread1 implements Runnable {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/hashCode\/hashcode001a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-                          thread2 = new Thread3request001a(\"thread2\");\n+                          thread2 = JDIThreadFactory.newThread(new Thread3request001a(\"thread2\"));\n@@ -122,1 +122,1 @@\n-                                  threads[n1] =  new Thread1request001a(threadNames[n1]);\n+                                  threads[n1] = JDIThreadFactory.newThread(new Thread1request001a(threadNames[n1]));\n@@ -124,1 +124,1 @@\n-                                  threads[n1] =  new Thread2request001a(threadNames[n1]);\n+                                  threads[n1] = JDIThreadFactory.newThread(new Thread2request001a(threadNames[n1]));\n@@ -186,1 +186,1 @@\n-    static class Thread1request001a extends Thread {\n+    static class Thread1request001a extends JDITask {\n@@ -217,1 +217,1 @@\n-    static class Thread2request001a extends Thread {\n+    static class Thread2request001a extends JDITask {\n@@ -252,3 +252,1 @@\n-    static class Thread3request001a extends Thread {\n-\n-        String tName = null;\n+    static class Thread3request001a extends JDITask {\n@@ -258,1 +256,0 @@\n-            tName = threadName;\n@@ -262,1 +259,1 @@\n-            log3(\"  'run': enter  :: threadName == \" + tName);\n+            log3(\"  'run': enter  :: threadName == \" + getName());\n@@ -266,1 +263,1 @@\n-            log3(\"  'run': exit   :: threadName == \" + tName);\n+            log3(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Event\/request\/request001a.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-                          thread2 = new Thread3nextevent001a(\"thread2\");\n+                          thread2 = JDIThreadFactory.newThread(new Thread3nextevent001a(\"thread2\"));\n@@ -121,1 +121,1 @@\n-                                  threads[n1] =  new Thread1nextevent001a(threadNames[n1]);\n+                                  threads[n1] =  JDIThreadFactory.newThread(new Thread1nextevent001a(threadNames[n1]));\n@@ -123,1 +123,1 @@\n-                                  threads[n1] =  new Thread2nextevent001a(threadNames[n1]);\n+                                  threads[n1] =  JDIThreadFactory.newThread(new Thread2nextevent001a(threadNames[n1]));\n@@ -185,1 +185,1 @@\n-    static class Thread1nextevent001a extends Thread {\n+    static class Thread1nextevent001a extends JDITask {\n@@ -216,1 +216,1 @@\n-    static class Thread2nextevent001a extends Thread {\n+    static class Thread2nextevent001a extends JDITask {\n@@ -251,3 +251,1 @@\n-    static class Thread3nextevent001a extends Thread {\n-\n-        String tName = null;\n+    static class Thread3nextevent001a extends JDITask {\n@@ -257,1 +255,0 @@\n-            tName = threadName;\n@@ -261,1 +258,1 @@\n-            log3(\"  'run': enter  :: threadName == \" + tName);\n+            log3(\"  'run': enter  :: threadName == \" + getName());\n@@ -265,1 +262,1 @@\n-            log3(\"  'run': exit   :: threadName == \" + tName);\n+            log3(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventIterator\/nextEvent\/nextevent001a.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1addcountfilter001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new Thread1addcountfilter001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1addcountfilter001a(\"thread1\"));\n@@ -205,3 +205,1 @@\n-class Thread1addcountfilter001a extends Thread {\n-\n-    String tName = null;\n+class Thread1addcountfilter001a extends JDITask {\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        addcountfilter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        addcountfilter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        addcountfilter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        addcountfilter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/addCountFilter\/addcountfilter001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -207,2 +207,0 @@\n-    String tName = null;\n-\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        disable001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        disable001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        disable001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        disable001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/disable\/disable001a.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -207,2 +207,0 @@\n-    String tName = null;\n-\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        disable002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        disable002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        disable002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        disable002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/disable\/disable002a.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -207,2 +207,0 @@\n-    String tName = null;\n-\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        enable001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        enable001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        enable001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        enable001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/enable\/enable001a.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -213,2 +213,0 @@\n-    String tName = null;\n-\n@@ -217,1 +215,0 @@\n-        tName = threadName;\n@@ -221,1 +218,1 @@\n-        enable002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        enable002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -228,1 +225,1 @@\n-        enable002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        enable002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/enable\/enable002a.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1getproperty001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new Thread1getproperty001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1getproperty001a(\"thread1\"));\n@@ -205,3 +205,1 @@\n-class Thread1getproperty001a extends Thread {\n-\n-    String tName = null;\n+class Thread1getproperty001a extends JDITask {\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        getproperty001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        getproperty001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        getproperty001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        getproperty001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/getProperty\/getproperty001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1isenabled001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new Thread1isenabled001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1isenabled001a(\"thread1\"));\n@@ -205,3 +205,1 @@\n-class Thread1isenabled001a extends Thread {\n-\n-    String tName = null;\n+class Thread1isenabled001a extends JDITask {\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        isenabled001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        isenabled001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        isenabled001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        isenabled001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/isEnabled\/isenabled001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1putproperty001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new Thread1putproperty001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1putproperty001a(\"thread1\"));\n@@ -205,3 +205,1 @@\n-class Thread1putproperty001a extends Thread {\n-\n-    String tName = null;\n+class Thread1putproperty001a extends JDITask {\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        putproperty001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        putproperty001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        putproperty001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        putproperty001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/putProperty\/putproperty001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1setenabled003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -99,1 +99,1 @@\n-                            thread1 = new Thread1setenabled003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1setenabled003a(\"thread1\"));\n@@ -155,3 +155,1 @@\n-class Thread1setenabled003a extends Thread {\n-\n-    String tName = null;\n+class Thread1setenabled003a extends JDITask {\n@@ -161,1 +159,0 @@\n-        tName = threadName;\n@@ -165,1 +162,1 @@\n-        setenabled003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        setenabled003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -171,1 +168,1 @@\n-            setenabled003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+            setenabled003a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/setEnabled\/setenabled003a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1setsuspendpolicy001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new Thread1setsuspendpolicy001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1setsuspendpolicy001a(\"thread1\"));\n@@ -205,3 +205,1 @@\n-class Thread1setsuspendpolicy001a extends Thread {\n-\n-    String tName = null;\n+class Thread1setsuspendpolicy001a extends JDITask {\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        setsuspendpolicy001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        setsuspendpolicy001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        setsuspendpolicy001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        setsuspendpolicy001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/setSuspendPolicy\/setsuspendpolicy001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1suspendpolicy001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new Thread1suspendpolicy001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1suspendpolicy001a(\"thread1\"));\n@@ -205,3 +205,1 @@\n-class Thread1suspendpolicy001a extends Thread {\n-\n-    String tName = null;\n+class Thread1suspendpolicy001a extends JDITask {\n@@ -211,1 +209,0 @@\n-        tName = threadName;\n@@ -215,1 +212,1 @@\n-        suspendpolicy001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        suspendpolicy001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +219,1 @@\n-        suspendpolicy001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        suspendpolicy001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequest\/suspendPolicy\/suspendpolicy001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1crstepreq002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1crstepreq002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1crstepreq002a(\"thread1\"));\n@@ -152,3 +152,1 @@\n-class Thread1crstepreq002a extends Thread {\n-\n-    String tName = null;\n+class Thread1crstepreq002a extends JDITask {\n@@ -158,1 +156,0 @@\n-        tName = threadName;\n@@ -162,1 +159,1 @@\n-        crstepreq002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        crstepreq002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -169,1 +166,1 @@\n-        crstepreq002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        crstepreq002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-                    Thread thread0 = new Thread0crstepreq003a(\"thread0\");\n+                    Thread thread0 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread0\"));\n@@ -82,1 +82,1 @@\n-                    Thread thread1 = new Thread0crstepreq003a(\"thread1\");\n+                    Thread thread1 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread1\"));\n@@ -89,1 +89,1 @@\n-                    Thread thread2 = new Thread0crstepreq003a(\"thread2\");\n+                    Thread thread2 = JDIThreadFactory.newThread(new Thread0crstepreq003a(\"thread2\"));\n@@ -163,1 +163,1 @@\n-class Thread0crstepreq003a extends Thread {\n+class Thread0crstepreq003a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq003a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,2 @@\n-        Thread thread1 = new Thread1crstepreq004a(\"thread1\");\n-        Thread thread2 = new Thread2crstepreq004a(\"thread2\");\n+        Thread thread1 = JDIThreadFactory.newThread(new Thread1crstepreq004a(\"thread1\"));\n+        Thread thread2 = JDIThreadFactory.newThread(new Thread2crstepreq004a(\"thread2\"));\n@@ -170,1 +170,1 @@\n-class Thread1crstepreq004a extends Thread {\n+class Thread1crstepreq004a extends JDITask {\n@@ -185,1 +185,1 @@\n-class Thread2crstepreq004a extends Thread {\n+class Thread2crstepreq004a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq004a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            thread1 = new Thread0crstepreq005a(testCase);\n+            thread1 = JDIThreadFactory.newThread(new Thread0crstepreq005a(testCase));\n@@ -128,1 +128,1 @@\n-class Thread0crstepreq005a extends Thread {\n+class Thread0crstepreq005a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq005a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            thread1 = new Thread0crstepreq006a(testCase);\n+            thread1 = JDIThreadFactory.newThread(new Thread0crstepreq006a(testCase));\n@@ -128,1 +128,1 @@\n-class Thread0crstepreq006a extends Thread {\n+class Thread0crstepreq006a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq006a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            thread1 = new Thread0crstepreq007a(testCase);\n+            thread1 = JDIThreadFactory.newThread(new Thread0crstepreq007a(testCase));\n@@ -128,1 +128,1 @@\n-class Thread0crstepreq007a extends Thread {\n+class Thread0crstepreq007a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq007a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            thread1 = new Thread0crstepreq008a(testCase);\n+            thread1 = JDIThreadFactory.newThread(new Thread0crstepreq008a(testCase));\n@@ -128,1 +128,1 @@\n-class Thread0crstepreq008a extends Thread {\n+class Thread0crstepreq008a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq008a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            thread1 = new Thread0crstepreq009a(testCase);\n+            thread1 = JDIThreadFactory.newThread(new Thread0crstepreq009a(testCase));\n@@ -128,1 +128,1 @@\n-class Thread0crstepreq009a extends Thread {\n+class Thread0crstepreq009a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq009a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-            thread1 = new Thread0crstepreq010a(testCase);\n+            thread1 = JDIThreadFactory.newThread(new Thread0crstepreq010a(testCase));\n@@ -128,1 +128,1 @@\n-class Thread0crstepreq010a extends Thread {\n+class Thread0crstepreq010a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/createStepRequest\/crstepreq010a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-    static Thread1delevtreq002a testField3 = null;\n+    static Thread testField3 = null;\n@@ -102,1 +102,1 @@\n-                                testField3 = new Thread1delevtreq002a(\"thread1\");\n+                                testField3 = JDIThreadFactory.newThread(new Thread1delevtreq002a(\"thread1\"));\n@@ -139,3 +139,1 @@\n-class Thread1delevtreq002a extends Thread {\n-\n-    String tName = null;\n+class Thread1delevtreq002a extends JDITask {\n@@ -145,1 +143,0 @@\n-        tName = threadName;\n@@ -149,1 +146,1 @@\n-        delevtreq002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        delevtreq002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -154,1 +151,1 @@\n-            delevtreq002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+            delevtreq002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/deleteEventRequest\/delevtreq002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    static Thread1delevtreqs002a testField3[] = new Thread1delevtreqs002a[10];\n+    static Thread testField3[] = new Thread[10];\n@@ -103,1 +103,1 @@\n-                                    testField3[ii] = new Thread1delevtreqs002a(\"thread\" + ii);\n+                                    testField3[ii] = JDIThreadFactory.newThread(new Thread1delevtreqs002a(\"thread\" + ii));\n@@ -141,3 +141,1 @@\n-class Thread1delevtreqs002a extends Thread {\n-\n-    String tName = null;\n+class Thread1delevtreqs002a extends JDITask {\n@@ -147,1 +145,0 @@\n-        tName = threadName;\n@@ -151,1 +148,1 @@\n-        delevtreqs002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        delevtreqs002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -156,1 +153,1 @@\n-            delevtreqs002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+            delevtreqs002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/deleteEventRequests\/delevtreqs002a.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,2 +64,2 @@\n-                thrs[i] = new stepreq001a(readyObj, lockObj,\n-                    stepreq001.DEBUGGEE_THRDS[i]);\n+                thrs[i] = JDIThreadFactory.newThread(new stepreq001a(readyObj, lockObj,\n+                    stepreq001.DEBUGGEE_THRDS[i]));\n@@ -113,1 +113,1 @@\n-    class stepreq001a extends Thread {\n+    class stepreq001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/stepRequests\/stepreq001t.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1stepreq002a testField[] = new Thread1stepreq002a[10];\n+    static Thread testField[] = new Thread[10];\n@@ -101,1 +101,1 @@\n-                                    testField[ii] = new Thread1stepreq002a(\"thread\" + ii);\n+                                    testField[ii] = JDIThreadFactory.newThread(new Thread1stepreq002a(\"thread\" + ii));\n@@ -140,3 +140,1 @@\n-class Thread1stepreq002a extends Thread {\n-\n-    String tName = null;\n+class Thread1stepreq002a extends JDITask {\n@@ -146,1 +144,0 @@\n-        tName = threadName;\n@@ -150,1 +147,1 @@\n-        stepreq002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        stepreq002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -155,1 +152,1 @@\n-            stepreq002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+            stepreq002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventRequestManager\/stepRequests\/stepreq002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-        thread2 = new Thread2eventiterator003a(\"thread2\");\n+        thread2 = JDIThreadFactory.newThread(new Thread2eventiterator003a(\"thread2\"));\n@@ -115,1 +115,1 @@\n-    static class Thread2eventiterator003a extends Thread {\n+    static class Thread2eventiterator003a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventSet\/eventIterator\/eventiterator003a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,3 +57,3 @@\n-    static Threadresume008a thread0 = null;\n-    static Threadresume008a thread1 = null;\n-    static Threadresume008a thread2 = null;\n+    static Thread thread0 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -99,1 +99,1 @@\n-                thread0 = new Threadresume008a(\"thread0\");\n+                thread0 = JDIThreadFactory.newThread(new Threadresume008a(\"thread0\"));\n@@ -102,1 +102,1 @@\n-                thread1 = new Threadresume008a(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new Threadresume008a(\"thread1\"));\n@@ -110,1 +110,1 @@\n-                thread2 = new Threadresume008a(\"thread2\");\n+                thread2 = JDIThreadFactory.newThread(new Threadresume008a(\"thread2\"));\n@@ -151,2 +151,2 @@\n-    static class Threadresume008a extends Thread {\n-        String tName = null;\n+    static class Threadresume008a extends JDITask {\n+\n@@ -155,1 +155,0 @@\n-            tName = threadName;\n@@ -158,1 +157,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -162,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventSet\/resume\/resume008a.java","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,3 +57,3 @@\n-    static Threadresume009a thread0 = null;\n-    static Threadresume009a thread1 = null;\n-    static Threadresume009a thread2 = null;\n+    static Thread thread0 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,1 +102,1 @@\n-                            thread0 = new Threadresume009a(\"thread0\");\n+                            thread0 = JDIThreadFactory.newThread(new Threadresume009a(\"thread0\"));\n@@ -107,1 +107,1 @@\n-                            thread1 = new Threadresume009a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadresume009a(\"thread1\"));\n@@ -117,1 +117,1 @@\n-                            thread2 = new Threadresume009a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Threadresume009a(\"thread2\"));\n@@ -170,3 +170,1 @@\n-    static class Threadresume009a extends Thread {\n-\n-        String tName = null;\n+    static class Threadresume009a extends JDITask {\n@@ -176,1 +174,0 @@\n-            tName = threadName;\n@@ -180,1 +177,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -184,1 +181,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventSet\/resume\/resume009a.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,7 +57,7 @@\n-    static Threadsuspendpolicy008a thread0 = null;\n-    static Threadsuspendpolicy008a thread1 = null;\n-    static Threadsuspendpolicy008a thread2 = null;\n-    static Threadsuspendpolicy008a thread3 = null;\n-    static Threadsuspendpolicy008a thread4 = null;\n-    static Threadsuspendpolicy008a thread5 = null;\n-    static Threadsuspendpolicy008a thread6 = null;\n+    static Thread thread0 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n+    static Thread thread3 = null;\n+    static Thread thread4 = null;\n+    static Thread thread5 = null;\n+    static Thread thread6 = null;\n@@ -108,1 +108,1 @@\n-                            thread0 = new Threadsuspendpolicy008a(\"thread0\");\n+                            thread0 = JDIThreadFactory.newThread(new Threadsuspendpolicy008a(\"thread0\"));\n@@ -113,1 +113,1 @@\n-                            thread1 = new Threadsuspendpolicy008a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadsuspendpolicy008a(\"thread1\"));\n@@ -120,1 +120,1 @@\n-                            thread2 = new Threadsuspendpolicy008a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Threadsuspendpolicy008a(\"thread2\"));\n@@ -127,1 +127,1 @@\n-                            thread3 = new Threadsuspendpolicy008a(\"thread3\");\n+                            thread3 = JDIThreadFactory.newThread(new Threadsuspendpolicy008a(\"thread3\"));\n@@ -134,1 +134,1 @@\n-                            thread4 = new Threadsuspendpolicy008a(\"thread4\");\n+                            thread4 = JDIThreadFactory.newThread(new Threadsuspendpolicy008a(\"thread4\"));\n@@ -141,1 +141,1 @@\n-                            thread5 = new Threadsuspendpolicy008a(\"thread5\");\n+                            thread5 = JDIThreadFactory.newThread(new Threadsuspendpolicy008a(\"thread5\"));\n@@ -148,1 +148,1 @@\n-                            thread6 = new Threadsuspendpolicy008a(\"thread6\");\n+                            thread6 = JDIThreadFactory.newThread(new Threadsuspendpolicy008a(\"thread6\"));\n@@ -183,3 +183,1 @@\n-    static class Threadsuspendpolicy008a extends Thread {\n-\n-        String tName = null;\n+    static class Threadsuspendpolicy008a extends JDITask {\n@@ -189,1 +187,0 @@\n-            tName = threadName;\n@@ -193,1 +190,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -197,1 +194,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventSet\/suspendPolicy\/suspendpolicy008a.java","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,7 +57,7 @@\n-    static Threadsuspendpolicy009a thread0 = null;\n-    static Threadsuspendpolicy009a thread1 = null;\n-    static Threadsuspendpolicy009a thread2 = null;\n-    static Threadsuspendpolicy009a thread3 = null;\n-    static Threadsuspendpolicy009a thread4 = null;\n-    static Threadsuspendpolicy009a thread5 = null;\n-    static Threadsuspendpolicy009a thread6 = null;\n+    static Thread thread0 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n+    static Thread thread3 = null;\n+    static Thread thread4 = null;\n+    static Thread thread5 = null;\n+    static Thread thread6 = null;\n@@ -108,1 +108,1 @@\n-                            thread0 = new Threadsuspendpolicy009a(\"thread0\");\n+                            thread0 = JDIThreadFactory.newThread(new Threadsuspendpolicy009a(\"thread0\"));\n@@ -116,1 +116,1 @@\n-                            thread1 = new Threadsuspendpolicy009a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadsuspendpolicy009a(\"thread1\"));\n@@ -126,1 +126,1 @@\n-                            thread2 = new Threadsuspendpolicy009a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Threadsuspendpolicy009a(\"thread2\"));\n@@ -136,1 +136,1 @@\n-                            thread3 = new Threadsuspendpolicy009a(\"thread3\");\n+                            thread3 = JDIThreadFactory.newThread(new Threadsuspendpolicy009a(\"thread3\"));\n@@ -146,1 +146,1 @@\n-                            thread4 = new Threadsuspendpolicy009a(\"thread4\");\n+                            thread4 = JDIThreadFactory.newThread(new Threadsuspendpolicy009a(\"thread4\"));\n@@ -156,1 +156,1 @@\n-                            thread5 = new Threadsuspendpolicy009a(\"thread5\");\n+                            thread5 = JDIThreadFactory.newThread(new Threadsuspendpolicy009a(\"thread5\"));\n@@ -166,1 +166,1 @@\n-                            thread6 = new Threadsuspendpolicy009a(\"thread6\");\n+                            thread6 = JDIThreadFactory.newThread(new Threadsuspendpolicy009a(\"thread6\"));\n@@ -204,3 +204,1 @@\n-    static class Threadsuspendpolicy009a extends Thread {\n-\n-        String tName = null;\n+    static class Threadsuspendpolicy009a extends JDITask {\n@@ -210,1 +208,0 @@\n-            tName = threadName;\n@@ -214,1 +211,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -218,1 +215,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/EventSet\/suspendPolicy\/suspendpolicy009a.java","additions":18,"deletions":21,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter001a thread1 = null;\n-    static Thread2filter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -104,1 +104,1 @@\n-                thread1 = new Thread1filter001a(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new Thread1filter001a(\"thread1\"));\n@@ -110,1 +110,1 @@\n-                thread2 = new Thread2filter001a(\"thread2\");\n+                thread2 = JDIThreadFactory.newThread(new Thread2filter001a(\"thread2\"));\n@@ -151,1 +151,1 @@\n-class Thread1filter001a extends Thread {\n+class Thread1filter001a extends JDITask {\n@@ -169,3 +169,0 @@\n-\n-    String tName = null;\n-\n@@ -174,1 +171,0 @@\n-        tName = threadName;\n@@ -178,1 +174,1 @@\n-        filter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -183,1 +179,1 @@\n-        filter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -188,1 +184,1 @@\n-class Thread2filter001a extends Thread {\n+class Thread2filter001a extends JDITask {\n@@ -206,2 +202,0 @@\n-    String tName = null;\n-\n@@ -210,1 +204,0 @@\n-        tName = threadName;\n@@ -214,1 +207,1 @@\n-        filter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -219,1 +212,1 @@\n-        filter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addClassExclusionFilter\/filter001a.java","additions":11,"deletions":18,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -167,2 +167,0 @@\n-    String tName = null;\n-\n@@ -171,1 +169,0 @@\n-        tName = threadName;\n@@ -175,1 +172,1 @@\n-        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -180,1 +177,1 @@\n-        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addClassFilter_rt\/filter_rt002a.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    static instancefilter003aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -103,1 +103,1 @@\n-                            thread1 = new instancefilter003aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter003aThread(\"thread1\"));\n@@ -142,1 +142,1 @@\n-    static class instancefilter003aThread extends Thread {\n+    static class instancefilter003aThread extends JDITask {\n@@ -144,1 +144,0 @@\n-        String tName = null;\n@@ -149,1 +148,0 @@\n-            tName = threadName;\n@@ -156,1 +154,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addInstanceFilter\/instancefilter003a.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,2 +58,2 @@\n-    static instancefilter004aThread thread1 = null;\n-    static instancefilter004aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -103,2 +103,2 @@\n-                            thread1 = new instancefilter004aThread(\"thread1\");\n-                            thread2 = new instancefilter004aThread(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter004aThread(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new instancefilter004aThread(\"thread2\"));\n@@ -153,1 +153,1 @@\n-    static class instancefilter004aThread extends Thread {\n+    static class instancefilter004aThread extends JDITask {\n@@ -155,1 +155,0 @@\n-        String tName = null;\n@@ -160,1 +159,0 @@\n-            tName = threadName;\n@@ -167,1 +165,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/addInstanceFilter\/instancefilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1notifycaught001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1notifycaught001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1notifycaught001a(\"thread1\"));\n@@ -163,3 +163,1 @@\n-class Thread1notifycaught001a extends Thread {\n-\n-    String tName = null;\n+class Thread1notifycaught001a extends JDITask {\n@@ -169,1 +167,0 @@\n-        tName = threadName;\n@@ -173,1 +170,1 @@\n-        notifycaught001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        notifycaught001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -178,1 +175,1 @@\n-        notifycaught001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        notifycaught001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/notifyCaught\/notifycaught001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1notifyuncaught001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1notifyuncaught001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1notifyuncaught001a(\"thread1\"));\n@@ -163,3 +163,1 @@\n-class Thread1notifyuncaught001a extends Thread {\n-\n-    String tName = null;\n+class Thread1notifyuncaught001a extends JDITask {\n@@ -169,1 +167,0 @@\n-        tName = threadName;\n@@ -173,1 +170,1 @@\n-        notifyuncaught001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        notifyuncaught001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -178,1 +175,1 @@\n-        notifyuncaught001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        notifyuncaught001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ExceptionRequest\/notifyUncaught\/notifyuncaught001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadisvisible001a thread2 =\n-                             new Threadisvisible001a(\"Thread2\");\n+                         Thread thread2 =\n+                             JDIThreadFactory.newThread(new Threadisvisible001a(\"Thread2\"));\n@@ -148,1 +148,1 @@\n-class Threadisvisible001a extends Thread {\n+class Threadisvisible001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/LocalVariable\/isVisible\/isvisible001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadlocation004a thread2 =\n-                             new Threadlocation004a(\"Thread2\");\n+                         Thread thread2 =\n+                             JDIThreadFactory.newThread(new Threadlocation004a(\"Thread2\"));\n@@ -148,1 +148,1 @@\n-class Threadlocation004a extends Thread {\n+class Threadlocation004a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Locatable\/location\/location004a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadlocation005a thread2 =\n-                             new Threadlocation005a(\"Thread2\");\n+                         Thread thread2 =\n+                             JDIThreadFactory.newThread(new Threadlocation005a(\"Thread2\"));\n@@ -148,1 +148,1 @@\n-class Threadlocation005a extends Thread {\n+class Threadlocation005a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/Locatable\/location\/location005a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-                                  threads[n1] =  new Thread1thread001a(threadNames[n1]);\n+                                  threads[n1] = JDIThreadFactory.newThread(new Thread1thread001a(threadNames[n1]));\n@@ -112,1 +112,1 @@\n-                                  threads[n1] =  new Thread2thread001a(threadNames[n1]);\n+                                  threads[n1] = JDIThreadFactory.newThread(new Thread2thread001a(threadNames[n1]));\n@@ -177,1 +177,1 @@\n-    static class Thread1thread001a extends Thread {\n+    static class Thread1thread001a extends JDITask {\n@@ -208,1 +208,1 @@\n-    static class Thread2thread001a extends Thread {\n+    static class Thread2thread001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/LocatableEvent\/thread\/thread001a.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1filter001a thread1 = new Thread1filter001a(\"thread1\");\n+    static Thread thread1 = JDIThreadFactory.newThread(new Thread1filter001a(\"thread1\"));\n@@ -143,1 +143,1 @@\n-class Thread1filter001a extends Thread {\n+class Thread1filter001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addClassExclusionFilter\/filter001a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_s001a thread1 = null;\n-    static Thread2filter_s001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -105,1 +105,1 @@\n-                thread1 = new Thread1filter_s001a(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new Thread1filter_s001a(\"thread1\"));\n@@ -112,1 +112,1 @@\n-                thread2 = new Thread2filter_s001a(\"thread2\");\n+                thread2 = JDIThreadFactory.newThread(new Thread2filter_s001a(\"thread2\"));\n@@ -165,3 +165,1 @@\n-class Thread1filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_s001a extends JDITask {\n@@ -171,1 +169,0 @@\n-        tName = threadName;\n@@ -175,1 +172,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -177,1 +174,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -182,3 +179,1 @@\n-class Thread2filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_s001a extends JDITask {\n@@ -188,1 +183,0 @@\n-        tName = threadName;\n@@ -192,1 +186,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -194,1 +188,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodEntryRequest\/addClassFilter_s\/filter_s001a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1filter001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -104,1 +104,1 @@\n-                            thread1 = new Thread1filter001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter001a(\"thread1\"));\n@@ -145,1 +145,1 @@\n-class Thread1filter001a extends Thread {\n+class Thread1filter001a extends JDITask {\n@@ -163,3 +163,0 @@\n-\n-    String tName = null;\n-\n@@ -168,1 +165,0 @@\n-        tName = threadName;\n@@ -172,1 +168,1 @@\n-        filter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -177,1 +173,1 @@\n-        filter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addClassExclusionFilter\/filter001a.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static filter_rt001aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -108,2 +108,1 @@\n-                            thread1 = new filter_rt001aThread1(\"thread1\");\n-\n+                            thread1 = JDIThreadFactory.newThread(new filter_rt001aThread1(\"thread1\"));\n@@ -163,3 +162,1 @@\n-class filter_rt001aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt001aThread1 extends JDITask {\n@@ -169,1 +166,0 @@\n-        tName = threadName;\n@@ -173,1 +169,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +172,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addClassFilter_rt\/filter_rt001a.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static filter_rt002aThread1 thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new filter_rt002aThread1(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new filter_rt002aThread1(\"thread1\"));\n@@ -166,3 +166,1 @@\n-class filter_rt002aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt002aThread1 extends JDITask {\n@@ -172,1 +170,0 @@\n-        tName = threadName;\n@@ -176,1 +173,1 @@\n-        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -181,1 +178,1 @@\n-        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addClassFilter_rt\/filter_rt002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static filter_rt003aThread1 thread1 = null;\n-    static filter_rt003aThread2 thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -87,2 +87,2 @@\n-        thread1 = new filter_rt003aThread1(\"thread1\");\n-        thread2 = new filter_rt003aThread2(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new filter_rt003aThread1(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new filter_rt003aThread2(\"thread2\"));\n@@ -166,3 +166,1 @@\n-class filter_rt003aThread1 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread1 extends JDITask {\n@@ -172,1 +170,0 @@\n-        tName = threadName;\n@@ -176,1 +173,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -179,1 +176,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -196,3 +193,1 @@\n-class filter_rt003aThread2 extends Thread {\n-\n-    String tName = null;\n+class filter_rt003aThread2 extends JDITask {\n@@ -202,1 +197,0 @@\n-        tName = threadName;\n@@ -206,1 +200,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -208,1 +202,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addClassFilter_rt\/filter_rt003a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_s001a thread1 = null;\n-    static Thread2filter_s001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -105,1 +105,1 @@\n-                thread1 = new Thread1filter_s001a(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new Thread1filter_s001a(\"thread1\"));\n@@ -112,1 +112,1 @@\n-                thread2 = new Thread2filter_s001a(\"thread2\");\n+                thread2 = JDIThreadFactory.newThread(new Thread2filter_s001a(\"thread2\"));\n@@ -165,3 +165,1 @@\n-class Thread1filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_s001a extends JDITask {\n@@ -171,1 +169,0 @@\n-        tName = threadName;\n@@ -175,1 +172,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -177,1 +174,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -182,3 +179,1 @@\n-class Thread2filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_s001a extends JDITask {\n@@ -188,1 +183,0 @@\n-        tName = threadName;\n@@ -192,1 +186,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -194,1 +188,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addClassFilter_s\/filter_s001a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static instancefilter001aThread thread1 = null;\n-    static instancefilter001aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new instancefilter001aThread(\"thread1\");\n-        thread2 = new instancefilter001aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new instancefilter001aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new instancefilter001aThread(\"thread2\"));\n@@ -151,1 +151,1 @@\n-    static class instancefilter001aThread extends Thread {\n+    static class instancefilter001aThread extends JDITask {\n@@ -153,1 +153,0 @@\n-        String tName = null;\n@@ -158,1 +157,0 @@\n-            tName = threadName;\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -172,1 +170,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -175,1 +173,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addInstanceFilter\/instancefilter001a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static instancefilter002aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new instancefilter002aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter002aThread(\"thread1\"));\n@@ -140,1 +140,2 @@\n-    static class instancefilter002aThread extends Thread {\n+    static class instancefilter002aThread extends JDITask {\n+\n@@ -142,1 +143,0 @@\n-        String tName = null;\n@@ -147,1 +147,0 @@\n-            tName = threadName;\n@@ -154,1 +153,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +162,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addInstanceFilter\/instancefilter002a.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static instancefilter003aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new instancefilter003aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new instancefilter003aThread(\"thread1\"));\n@@ -140,1 +140,2 @@\n-    static class instancefilter003aThread extends Thread {\n+    static class instancefilter003aThread extends JDITask {\n+\n@@ -142,1 +143,0 @@\n-        String tName = null;\n@@ -147,1 +147,0 @@\n-            tName = threadName;\n@@ -154,1 +153,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +162,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addInstanceFilter\/instancefilter003a.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static instancefilter004aThread thread1 = null;\n-    static instancefilter004aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new instancefilter004aThread(\"thread1\");\n-        thread2 = new instancefilter004aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new instancefilter004aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new instancefilter004aThread(\"thread2\"));\n@@ -150,1 +150,2 @@\n-    static class instancefilter004aThread extends Thread {\n+    static class instancefilter004aThread extends JDITask {\n+\n@@ -152,1 +153,0 @@\n-        String tName = null;\n@@ -157,1 +157,0 @@\n-            tName = threadName;\n@@ -164,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -171,1 +170,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -174,1 +173,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addInstanceFilter\/instancefilter004a.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static threadfilter001aThread thread1 = null;\n-    static threadfilter001aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new threadfilter001aThread(\"thread1\");\n-        thread2 = new threadfilter001aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new threadfilter001aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new threadfilter001aThread(\"thread2\"));\n@@ -150,1 +150,2 @@\n-    static class threadfilter001aThread extends Thread {\n+    static class threadfilter001aThread extends JDITask {\n+\n@@ -152,1 +153,0 @@\n-        String tName = null;\n@@ -157,1 +157,0 @@\n-            tName = threadName;\n@@ -164,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +172,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addThreadFilter\/threadfilter001a.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static threadfilter002aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new threadfilter002aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new threadfilter002aThread(\"thread1\"));\n@@ -139,1 +139,2 @@\n-    static class threadfilter002aThread extends Thread {\n+    static class threadfilter002aThread extends JDITask {\n+\n@@ -141,1 +142,0 @@\n-        String tName = null;\n@@ -146,1 +146,0 @@\n-            tName = threadName;\n@@ -153,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -162,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addThreadFilter\/threadfilter002a.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static threadfilter003aThread thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new threadfilter003aThread(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new threadfilter003aThread(\"thread1\"));\n@@ -151,1 +151,1 @@\n-    static class threadfilter003aThread extends Thread {\n+    static class threadfilter003aThread extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addThreadFilter\/threadfilter003a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static threadfilter004aThread thread1 = null;\n-    static threadfilter004aThread thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -86,2 +86,2 @@\n-        thread1 = new threadfilter004aThread(\"thread1\");\n-        thread2 = new threadfilter004aThread(\"thread2\");\n+        thread1 = JDIThreadFactory.newThread(new threadfilter004aThread(\"thread1\"));\n+        thread2 = JDIThreadFactory.newThread(new threadfilter004aThread(\"thread2\"));\n@@ -153,1 +153,1 @@\n-    static class threadfilter004aThread extends Thread {\n+    static class threadfilter004aThread extends JDITask {\n@@ -155,1 +155,0 @@\n-        String tName = null;\n@@ -160,1 +159,0 @@\n-            tName = threadName;\n@@ -167,1 +165,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/MethodExitRequest\/addThreadFilter\/threadfilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadgetvalue001a test_thread =\n-                             new Threadgetvalue001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadgetvalue001a(\"testedThread\"));\n@@ -148,1 +148,1 @@\n-class Threadgetvalue001a extends Thread {\n+class Threadgetvalue001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/getValue\/getvalue001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static Threadowningthread001a thread2 = null;\n+    private static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                         thread2 = new\n-                              Threadowningthread001a(\"Thread2\");\n+                         thread2 = JDIThreadFactory.newThread(new\n+                              Threadowningthread001a(\"Thread2\"));\n@@ -158,1 +158,1 @@\n-class Threadowningthread001a extends Thread {\n+class Threadowningthread001a extends JDITask {\n@@ -163,3 +163,0 @@\n-    public Threadowningthread001a(ThreadGroup groupName, String threadName) {\n-        super(groupName, threadName);\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ObjectReference\/owningThread\/owningthread001a.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadgetvalue001a test_thread =\n-                             new Threadgetvalue001a(\"testedThread\");\n+                         Thread test_thread =\n+                             JDIThreadFactory.newThread(new Threadgetvalue001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadgetvalue001a extends Thread {\n+class Threadgetvalue001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadgetvalue002a test_thread =\n-                             new Threadgetvalue002a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadgetvalue002a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadgetvalue002a extends Thread {\n+class Threadgetvalue002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValue\/getvalue002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadgetvalues001a test_thread =\n-                             new Threadgetvalues001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadgetvalues001a(\"testedThread\"));\n@@ -150,1 +150,1 @@\n-class Threadgetvalues001a extends Thread {\n+class Threadgetvalues001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadgetvalues002a test_thread =\n-                             new Threadgetvalues002a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadgetvalues002a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadgetvalues002a extends Thread {\n+class Threadgetvalues002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/getValues\/getvalues002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadlocation001a test_thread =\n-                             new Threadlocation001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadlocation001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadlocation001a extends Thread {\n+class Threadlocation001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/location\/location001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadsetvalue001a test_thread =\n-                             new Threadsetvalue001a(\"testedThread\");\n+                         Thread test_thread =\n+                             JDIThreadFactory.newThread(new Threadsetvalue001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadsetvalue001a extends Thread {\n+class Threadsetvalue001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue001\/setvalue001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    static public Threadsetvalue002a test_thread = null;\n+    static public Thread test_thread = null;\n@@ -101,1 +101,1 @@\n-                             new Threadsetvalue002a(\"testedThread\");\n+                                 JDIThreadFactory.newThread(new Threadsetvalue002a(\"testedThread\"));\n@@ -153,1 +153,1 @@\n-class Threadsetvalue002a extends Thread {\n+class Threadsetvalue002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue002\/setvalue002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,2 +96,2 @@\n-                         Threadsetvalue003a test_thread =\n-                             new Threadsetvalue003a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadsetvalue003a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadsetvalue003a extends Thread {\n+class Threadsetvalue003a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue003\/setvalue003a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,2 +96,2 @@\n-                         Threadsetvalue004a test_thread =\n-                             new Threadsetvalue004a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadsetvalue004a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadsetvalue004a extends Thread {\n+class Threadsetvalue004a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/setValue\/setvalue004\/setvalue004a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,2 @@\n-                         Threadthisobject002a test_thread =\n-                             new Threadthisobject002a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadthisobject002a(\"testedThread\"));\n@@ -151,1 +151,1 @@\n-class Threadthisobject002a extends Thread {\n+class Threadthisobject002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thisObject\/thisobject002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadthread001a test_thread =\n-                             new Threadthread001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadthread001a(\"testedThread\"));\n@@ -150,1 +150,1 @@\n-class Threadthread001a extends Thread {\n+class Threadthread001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/thread\/thread001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadvisiblevarbyname001a test_thread =\n-                             new Threadvisiblevarbyname001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadvisiblevarbyname001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadvisiblevarbyname001a extends Thread {\n+class Threadvisiblevarbyname001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariableByName\/visiblevarbyname001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadvisiblevarbyname002a test_thread =\n-                             new Threadvisiblevarbyname002a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadvisiblevarbyname002a(\"testedThread\"));\n@@ -148,1 +148,1 @@\n-class Threadvisiblevarbyname002a extends Thread {\n+class Threadvisiblevarbyname002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariableByName\/visiblevarbyname002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadvisiblevariables001a test_thread =\n-                             new Threadvisiblevariables001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadvisiblevariables001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadvisiblevariables001a extends Thread {\n+class Threadvisiblevariables001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariables\/visiblevariables001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadvisiblevariables002a test_thread =\n-                             new Threadvisiblevariables002a(\"testedThread\");\n+                         Thread test_thread =\n+                             JDIThreadFactory.newThread(new Threadvisiblevariables002a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadvisiblevariables002a extends Thread {\n+class Threadvisiblevariables002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StackFrame\/visibleVariables\/visiblevariables002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter001a thread1 = null;\n-    static Thread2filter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -99,1 +99,1 @@\n-                thread1 = new Thread1filter001a(\"thread1\");\n+                thread1 = JDIThreadFactory.newThread(new Thread1filter001a(\"thread1\"));\n@@ -114,1 +114,1 @@\n-                thread2 = new Thread2filter001a(\"thread2\");\n+                thread2 = JDIThreadFactory.newThread(new Thread2filter001a(\"thread2\"));\n@@ -164,1 +164,1 @@\n-class Thread1filter001a extends Thread {\n+class Thread1filter001a extends JDITask {\n@@ -183,2 +183,0 @@\n-    String tName = null;\n-\n@@ -187,1 +185,0 @@\n-        tName = threadName;\n@@ -191,1 +188,1 @@\n-        filter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -201,1 +198,1 @@\n-        filter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -206,1 +203,1 @@\n-class Thread2filter001a extends Thread {\n+class Thread2filter001a extends JDITask {\n@@ -224,1 +221,0 @@\n-    String tName = null;\n@@ -228,1 +224,0 @@\n-        tName = threadName;\n@@ -232,1 +227,1 @@\n-        filter001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -242,1 +237,1 @@\n-        filter001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassExclusionFilter\/filter001a.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,1 @@\n-\n-    static Thread1filter_rt001a thread1 = new Thread1filter_rt001a(\n+    static Thread1filter_rt001a thread1filter_rt001a = new Thread1filter_rt001a(\n@@ -65,1 +64,1 @@\n-    static Thread2filter_rt001a thread2 = new Thread2filter_rt001a(\n+    static Thread2filter_rt001a thread2filter_rt001a = new Thread2filter_rt001a(\n@@ -68,0 +67,3 @@\n+    static Thread thread1 = JDIThreadFactory.newThread(thread1filter_rt001a);\n+    static Thread thread2 = JDIThreadFactory.newThread(thread2filter_rt001a);\n+\n@@ -95,2 +97,2 @@\n-        thread1.getThreadState().waitForState(STATE_THREAD_STARTED);\n-        thread2.getThreadState().waitForState(STATE_THREAD_STARTED);\n+        thread1filter_rt001a.getThreadState().waitForState(STATE_THREAD_STARTED);\n+        thread2filter_rt001a.getThreadState().waitForState(STATE_THREAD_STARTED);\n@@ -118,2 +120,2 @@\n-                thread1.getThreadState().setState(STATE_JDI_INITED);\n-                thread2.getThreadState().setState(STATE_JDI_INITED);\n+                thread1filter_rt001a.getThreadState().setState(STATE_JDI_INITED);\n+                thread2filter_rt001a.getThreadState().setState(STATE_JDI_INITED);\n@@ -165,1 +167,1 @@\n-class Thread1filter_rt001a extends Thread {\n+class Thread1filter_rt001a extends JDITask {\n@@ -167,1 +169,0 @@\n-    private String tName = null;\n@@ -172,1 +173,0 @@\n-        tName = threadName;\n@@ -181,1 +181,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -184,1 +184,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -201,3 +201,2 @@\n-class Thread2filter_rt001a extends Thread {\n-\n-    private String tName = null;\n+class Thread2filter_rt001a extends JDITask {\n+;\n@@ -208,1 +207,0 @@\n-        tName = threadName;\n@@ -217,1 +215,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -220,1 +218,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt001a.java","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1filter_rt002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1filter_rt002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_rt002a(\"thread1\"));\n@@ -159,3 +159,1 @@\n-class Thread1filter_rt002a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_rt002a extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +173,1 @@\n-        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    static Thread1filter_rt003a thread1 = new Thread1filter_rt003a(\n+    static Thread1filter_rt003a thread1filter_rt003a = new Thread1filter_rt003a(\n@@ -65,1 +65,1 @@\n-    static Thread2filter_rt003a thread2 = new Thread2filter_rt003a(\n+    static Thread2filter_rt003a thread2filter_rt003a = new Thread2filter_rt003a(\n@@ -68,0 +68,3 @@\n+    static Thread thread1 = JDIThreadFactory.newThread(thread1filter_rt003a);\n+    static Thread thread2 = JDIThreadFactory.newThread(thread2filter_rt003a);\n+\n@@ -97,2 +100,2 @@\n-        thread1.getThreadState().waitForState(STATE_THREAD_STARTED);\n-        thread2.getThreadState().waitForState(STATE_THREAD_STARTED);\n+        thread1filter_rt003a.getThreadState().waitForState(STATE_THREAD_STARTED);\n+        thread2filter_rt003a.getThreadState().waitForState(STATE_THREAD_STARTED);\n@@ -120,2 +123,2 @@\n-                thread1.getThreadState().setState(STATE_JDI_INITED);\n-                thread2.getThreadState().setState(STATE_JDI_INITED);\n+                thread1filter_rt003a.getThreadState().setState(STATE_JDI_INITED);\n+                thread2filter_rt003a.getThreadState().setState(STATE_JDI_INITED);\n@@ -170,1 +173,1 @@\n-class Thread1filter_rt003a extends Thread {\n+class Thread1filter_rt003a extends JDITask {\n@@ -172,1 +175,0 @@\n-    private String tName = null;\n@@ -177,1 +179,0 @@\n-        tName = threadName;\n@@ -186,1 +187,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -189,1 +190,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -206,1 +207,1 @@\n-class Thread2filter_rt003a extends Thread {\n+class Thread2filter_rt003a extends JDITask {\n@@ -208,1 +209,0 @@\n-    private String tName = null;\n@@ -213,1 +213,0 @@\n-        tName = threadName;\n@@ -222,1 +221,1 @@\n-        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -225,1 +224,1 @@\n-        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt003a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_rt\/filter_rt003a.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_s001a thread1 = null;\n-    static Thread2filter_s001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -100,1 +100,1 @@\n-                            thread1 = new Thread1filter_s001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_s001a(\"thread1\"));\n@@ -115,1 +115,1 @@\n-                            thread2 = new Thread2filter_s001a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter_s001a(\"thread2\"));\n@@ -172,3 +172,1 @@\n-class Thread1filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_s001a extends JDITask {\n@@ -178,1 +176,0 @@\n-        tName = threadName;\n@@ -182,1 +179,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -189,1 +186,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -194,1 +191,1 @@\n-class Thread2filter_s001a extends Thread {\n+class Thread2filter_s001a extends JDITask {\n@@ -208,1 +205,0 @@\n-    String tName = null;\n@@ -212,1 +208,0 @@\n-        tName = threadName;\n@@ -216,1 +211,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -223,1 +218,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_s\/filter_s001a.java","additions":11,"deletions":16,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1filter_s002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1filter_s002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_s002a(\"thread1\"));\n@@ -149,1 +149,1 @@\n-    static class Thread1filter_s002a extends Thread {\n+    static class Thread1filter_s002a extends JDITask {\n@@ -151,1 +151,0 @@\n-        String tName = null;\n@@ -156,1 +155,0 @@\n-            tName = threadName;\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -174,1 +172,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addClassFilter_s\/filter_s002a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter001a thread1 = null;\n-    static Threadinstancefilter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter001a(\"thread1\");\n-                            thread2 = new Threadinstancefilter001a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter001a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter001a(\"thread2\"));\n@@ -155,1 +155,1 @@\n-    static class Threadinstancefilter001a extends Thread {\n+    static class Threadinstancefilter001a extends JDITask {\n@@ -157,1 +157,0 @@\n-        String tName = null;\n@@ -162,1 +161,0 @@\n-            tName = threadName;\n@@ -169,1 +167,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -180,1 +178,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addInstanceFilter\/instancefilter001a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadinstancefilter002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter002a(\"thread1\"));\n@@ -151,1 +151,1 @@\n-    static class Threadinstancefilter002a extends Thread {\n+    static class Threadinstancefilter002a extends JDITask {\n@@ -153,1 +153,0 @@\n-        String tName = null;\n@@ -158,1 +157,0 @@\n-            tName = threadName;\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -177,1 +175,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addInstanceFilter\/instancefilter002a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadinstancefilter003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter003a(\"thread1\"));\n@@ -151,1 +151,1 @@\n-    static class Threadinstancefilter003a extends Thread {\n+    static class Threadinstancefilter003a extends JDITask {\n@@ -153,1 +153,0 @@\n-        String tName = null;\n@@ -158,1 +157,0 @@\n-            tName = threadName;\n@@ -165,1 +163,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -177,1 +175,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addInstanceFilter\/instancefilter003a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter004a thread1 = null;\n-    static Threadinstancefilter004a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter004a(\"thread1\");\n-                            thread2 = new Threadinstancefilter004a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter004a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter004a(\"thread2\"));\n@@ -155,1 +155,1 @@\n-    static class Threadinstancefilter004a extends Thread {\n+    static class Threadinstancefilter004a extends JDITask {\n@@ -157,1 +157,0 @@\n-        String tName = null;\n@@ -162,1 +161,0 @@\n-            tName = threadName;\n@@ -169,1 +167,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -180,1 +178,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/addInstanceFilter\/instancefilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1depth001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1depth001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1depth001a(\"thread1\"));\n@@ -159,3 +159,1 @@\n-class Thread1depth001a extends Thread {\n-\n-    String tName = null;\n+class Thread1depth001a extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        depth001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        depth001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +173,1 @@\n-        depth001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        depth001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/depth\/depth001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1depth002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1depth002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1depth002a(\"thread1\"));\n@@ -159,3 +159,1 @@\n-class Thread1depth002a extends Thread {\n-\n-    String tName = null;\n+class Thread1depth002a extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        depth002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        depth002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +173,1 @@\n-        depth002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        depth002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/depth\/depth002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1depth003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1depth003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1depth003a(\"thread1\"));\n@@ -159,3 +159,1 @@\n-class Thread1depth003a extends Thread {\n-\n-    String tName = null;\n+class Thread1depth003a extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        depth003a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        depth003a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +173,1 @@\n-        depth003a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        depth003a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/depth\/depth003a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1size001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1size001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1size001a(\"thread1\"));\n@@ -159,3 +159,1 @@\n-class Thread1size001a extends Thread {\n-\n-    String tName = null;\n+class Thread1size001a extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        size001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        size001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +173,1 @@\n-        size001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        size001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/size\/size001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1size002a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1size002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1size002a(\"thread1\"));\n@@ -159,3 +159,1 @@\n-class Thread1size002a extends Thread {\n-\n-    String tName = null;\n+class Thread1size002a extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        size002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        size002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +173,1 @@\n-        size002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        size002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/size\/size002a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread1thread001a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Thread1thread001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1thread001a(\"thread1\"));\n@@ -159,3 +159,1 @@\n-class Thread1thread001a extends Thread {\n-\n-    String tName = null;\n+class Thread1thread001a extends JDITask {\n@@ -165,1 +163,0 @@\n-        tName = threadName;\n@@ -169,1 +166,1 @@\n-        thread001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        thread001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +173,1 @@\n-        thread001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        thread001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/StepRequest\/thread\/thread001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread2addthreadfilter001a thread2 = null;\n+    static Thread thread2 = null;\n@@ -102,1 +102,1 @@\n-                           thread2 = new Thread2addthreadfilter001a(\"thread2\");\n+                           thread2 = JDIThreadFactory.newThread(new Thread2addthreadfilter001a(\"thread2\"));\n@@ -141,3 +141,1 @@\n-    static class Thread2addthreadfilter001a extends Thread {\n-\n-        String tName = null;\n+    static class Thread2addthreadfilter001a extends JDITask {\n@@ -147,1 +145,0 @@\n-            tName = threadName;\n@@ -151,1 +148,1 @@\n-            log3(\"  'run': enter  :: threadName == \" + tName);\n+            log3(\"  'run': enter  :: threadName == \" + getName());\n@@ -155,1 +152,1 @@\n-            log3(\"  'run': exit   :: threadName == \" + tName);\n+            log3(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadDeathRequest\/addThreadFilter\/addthreadfilter001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter003a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadaddthreadfilter003a extends Thread {\n+    static class Threadaddthreadfilter003a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadDeathRequest\/addThreadFilter\/addthreadfilter003a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadaddthreadfilter004a thread1 = null;\n-    static Threadaddthreadfilter004a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadaddthreadfilter004a(\"thread1\");\n-                            thread2 = new Threadaddthreadfilter004a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter004a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadaddthreadfilter004a(\"thread2\"));\n@@ -174,1 +174,1 @@\n-    static class Threadaddthreadfilter004a extends Thread {\n+    static class Threadaddthreadfilter004a extends JDITask {\n@@ -176,1 +176,0 @@\n-        String tName = null;\n@@ -181,1 +180,0 @@\n-            tName = threadName;\n@@ -188,1 +186,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -197,1 +195,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadDeathRequest\/addThreadFilter\/addthreadfilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter005a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter005a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter005a(\"thread1\"));\n@@ -155,1 +155,1 @@\n-    static class Threadaddthreadfilter005a extends Thread {\n+    static class Threadaddthreadfilter005a extends JDITask {\n@@ -157,1 +157,0 @@\n-        String tName = null;\n@@ -162,1 +161,0 @@\n-            tName = threadName;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadDeathRequest\/addThreadFilter\/addthreadfilter005a.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-class Threadcurrentcm001a extends Thread {\n+class Threadcurrentcm001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/currentContendedMonitor\/currentcm001a.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadframe001a test_thread =\n-                             new Threadframe001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadframe001a(\"testedThread\"));\n@@ -148,1 +148,1 @@\n-class Threadframe001a extends Thread {\n+class Threadframe001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frame\/frame001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadframecount001a test_thread =\n-                             new Threadframecount001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadframecount001a(\"testedThread\"));\n@@ -148,1 +148,1 @@\n-class Threadframecount001a extends Thread {\n+class Threadframecount001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frameCount\/framecount001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadframes_ii001a test_thread =\n-                             new Threadframes_ii001a(\"testedThread\");\n+                         Thread test_thread =\n+                             JDIThreadFactory.newThread(new Threadframes_ii001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadframes_ii001a extends Thread {\n+class Threadframes_ii001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/frames_ii\/frames_ii001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadisatbreakpoint001a test_thread =\n-                             new Threadisatbreakpoint001a(\"testedThread\");\n+                         Thread test_thread =\n+                             JDIThreadFactory.newThread(new Threadisatbreakpoint001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadisatbreakpoint001a extends Thread {\n+class Threadisatbreakpoint001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isAtBreakpoint\/isatbreakpoint001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadissuspended001a test_thread =\n-                             new Threadissuspended001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadissuspended001a(\"testedThread\"));\n@@ -177,1 +177,1 @@\n-class Threadissuspended001a extends Thread {\n+class Threadissuspended001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,2 +95,2 @@\n-                    Threadissuspended002a test_thread =\n-                        new Threadissuspended002a(\"testedThread\");\n+                    Thread test_thread =\n+                            JDIThreadFactory.newThread(new Threadissuspended002a(\"testedThread\"));\n@@ -163,1 +163,1 @@\n-class Threadissuspended002a extends Thread {\n+class Threadissuspended002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadissuspended003a test_thread =\n-                             new Threadissuspended003a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadissuspended003a(\"testedThread\"));\n@@ -148,1 +148,1 @@\n-class Threadissuspended003a extends Thread {\n+class Threadissuspended003a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended003a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadissuspended004a test_thread =\n-                             new Threadissuspended004a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadissuspended004a(\"testedThread\"));\n@@ -148,1 +148,1 @@\n-class Threadissuspended004a extends Thread {\n+class Threadissuspended004a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/isSuspended\/issuspended004a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadname001a test_thread =\n-                             new Threadname001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadname001a(\"testedThread\"));\n@@ -148,1 +148,1 @@\n-class Threadname001a extends Thread {\n+class Threadname001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/name\/name001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadpopframes001a thread2 = null;\n+    static Thread thread2 = null;\n@@ -99,1 +99,1 @@\n-                               thread2 =  new Threadpopframes001a(\"thread2\");\n+                               thread2 = JDIThreadFactory.newThread(new Threadpopframes001a(\"thread2\"));\n@@ -161,1 +161,1 @@\n-    static class Threadpopframes001a extends Thread {\n+    static class Threadpopframes001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread2popframes002a thread2 = null;\n-    static Thread3popframes002a thread3 = null;\n+    static Thread thread2 = null;\n+    static Thread thread3 = null;\n@@ -92,1 +92,1 @@\n-                 thread2 =  new Thread2popframes002a(\"thread2\");\n+                 thread2 = JDIThreadFactory.newThread(new Thread2popframes002a(\"thread2\"));\n@@ -94,1 +94,1 @@\n-                 thread3 =  new Thread3popframes002a(\"thread3\");\n+                 thread3 = JDIThreadFactory.newThread(new Thread3popframes002a(\"thread3\"));\n@@ -167,1 +167,1 @@\n-    static class Thread2popframes002a extends Thread {\n+    static class Thread2popframes002a extends JDITask {\n@@ -192,1 +192,1 @@\n-    static class Thread3popframes002a extends Thread {\n+    static class Thread3popframes002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes002a.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread2popframes003a thread2 = null;\n-    static Thread3popframes003a thread3 = null;\n+    static Thread thread2 = null;\n+    static Thread thread3 = null;\n@@ -88,1 +88,1 @@\n-                 thread2 =  new Thread2popframes003a(\"thread2\");\n+                 thread2 = JDIThreadFactory.newThread(new Thread2popframes003a(\"thread2\"));\n@@ -90,1 +90,1 @@\n-                 thread3 =  new Thread3popframes003a(\"thread3\");\n+                 thread3 = JDIThreadFactory.newThread(new Thread3popframes003a(\"thread3\"));\n@@ -183,1 +183,1 @@\n-    static class Thread2popframes003a extends Thread {\n+    static class Thread2popframes003a extends JDITask {\n@@ -208,1 +208,1 @@\n-    static class Thread3popframes003a extends Thread {\n+    static class Thread3popframes003a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes003a.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-    static Thread2popframes004a thread2 = null;\n+    static Thread thread2 = null;\n@@ -97,1 +97,1 @@\n-                 thread2 =  new Thread2popframes004a(\"thread2\");\n+                 thread2 = JDIThreadFactory.newThread(new Thread2popframes004a(\"thread2\"));\n@@ -168,1 +168,1 @@\n-    static class Thread2popframes004a extends Thread {\n+    static class Thread2popframes004a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/popFrames\/popframes004a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadresume001a test_thread =\n-                             new Threadresume001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadresume001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadresume001a extends Thread {\n+class Threadresume001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/resume\/resume001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-    private static Threadstop001a thread2 = null;\n+    private static Thread thread2 = null;\n@@ -111,2 +111,2 @@\n-                         thread2 = new\n-                              Threadstop001a(\"Thread2\");\n+                         thread2 = JDIThreadFactory.newThread(new\n+                              Threadstop001a(\"Thread2\"));\n@@ -182,1 +182,1 @@\n-class Threadstop001a extends Thread {\n+class Threadstop001a extends JDITask {\n@@ -187,3 +187,0 @@\n-    public Threadstop001a(ThreadGroup groupName, String threadName) {\n-        super(groupName, threadName);\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/stop\/stop001a.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,2 +96,2 @@\n-                         Threadsuspend001a test_thread =\n-                             new Threadsuspend001a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threadsuspend001a(\"testedThread\"));\n@@ -147,1 +147,1 @@\n-class Threadsuspend001a extends Thread {\n+class Threadsuspend001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/suspend\/suspend001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadsuspendcount001a test_thread =\n-                             new Threadsuspendcount001a(\"testedThread\");\n+                         Thread test_thread =\n+                             JDIThreadFactory.newThread(new Threadsuspendcount001a(\"testedThread\"));\n@@ -149,1 +149,1 @@\n-class Threadsuspendcount001a extends Thread {\n+class Threadsuspendcount001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadReference\/suspendCount\/suspendcount001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,2 +59,2 @@\n-        threads[0] = new thread001aThread(\"Thread1\");\n-        threads[1] = new thread001aThread(\"Thread2\");\n+        threads[0] = JDIThreadFactory.newThread(new thread001aThread(\"Thread1\"));\n+        threads[1] = JDIThreadFactory.newThread(new thread001aThread(\"Thread2\"));\n@@ -105,1 +105,1 @@\n-class thread001aThread extends Thread {\n+class thread001aThread extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadStartEvent\/thread\/thread001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Thread2addthreadfilter001a thread2 = null;\n+    static Thread thread2 = null;\n@@ -102,1 +102,1 @@\n-                           thread2 = new Thread2addthreadfilter001a(\"thread2\");\n+                           thread2 = JDIThreadFactory.newThread(new Thread2addthreadfilter001a(\"thread2\"));\n@@ -137,3 +137,1 @@\n-    static class Thread2addthreadfilter001a extends Thread {\n-\n-        String tName = null;\n+    static class Thread2addthreadfilter001a extends JDITask {\n@@ -143,1 +141,0 @@\n-            tName = threadName;\n@@ -147,1 +144,1 @@\n-            log3(\"  'run': enter  :: threadName == \" + tName);\n+            log3(\"  'run': enter  :: threadName == \" + getName());\n@@ -151,1 +148,1 @@\n-            log3(\"  'run': exit   :: threadName == \" + tName);\n+            log3(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadStartRequest\/addThreadFilter\/addthreadfilter001a.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter003a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadaddthreadfilter003a extends Thread {\n+    static class Threadaddthreadfilter003a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadStartRequest\/addThreadFilter\/addthreadfilter003a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadaddthreadfilter004a thread1 = null;\n-    static Threadaddthreadfilter004a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadaddthreadfilter004a(\"thread1\");\n-                            thread2 = new Threadaddthreadfilter004a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter004a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadaddthreadfilter004a(\"thread2\"));\n@@ -153,1 +153,1 @@\n-    static class Threadaddthreadfilter004a extends Thread {\n+    static class Threadaddthreadfilter004a extends JDITask {\n@@ -155,1 +155,0 @@\n-        String tName = null;\n@@ -160,1 +159,0 @@\n-            tName = threadName;\n@@ -167,1 +165,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadStartRequest\/addThreadFilter\/addthreadfilter004a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter005a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter005a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter005a(\"thread1\"));\n@@ -155,1 +155,1 @@\n-    static class Threadaddthreadfilter005a extends Thread {\n+    static class Threadaddthreadfilter005a extends JDITask {\n@@ -157,1 +157,0 @@\n-        String tName = null;\n@@ -162,1 +161,0 @@\n-            tName = threadName;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/ThreadStartRequest\/addThreadFilter\/addthreadfilter005a.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,2 +97,2 @@\n-                         Threadallthreads001a test_thread =\n-                             new Threadallthreads001a(\"testedThread\");\n+                         Thread test_thread =\n+                             JDIThreadFactory.newThread(new Threadallthreads001a(\"testedThread\"));\n@@ -151,1 +151,1 @@\n-class Threadallthreads001a extends Thread {\n+class Threadallthreads001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/allThreads\/allthreads001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static Threadcangccm001a thread2 = null;\n+    private static Thread thread2 = null;\n@@ -100,2 +100,2 @@\n-                         thread2 = new\n-                              Threadcangccm001a(\"Thread2\");\n+                         thread2 = JDIThreadFactory.newThread(new\n+                              Threadcangccm001a(\"Thread2\"));\n@@ -157,1 +157,1 @@\n-class Threadcangccm001a extends Thread {\n+class Threadcangccm001a extends JDITask {\n@@ -162,3 +162,0 @@\n-    public Threadcangccm001a(ThreadGroup groupName, String threadName) {\n-        super(groupName, threadName);\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetCurrentContendedMonitor\/cangccm001a.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-    private static Threadcangetmonitorinfo001a thread2 = null;\n+    private static Thread thread2 = null;\n@@ -105,2 +105,2 @@\n-                         thread2 = new\n-                              Threadcangetmonitorinfo001a(\"Thread2\");\n+                         thread2 = JDIThreadFactory.newThread(new\n+                              Threadcangetmonitorinfo001a(\"Thread2\"));\n@@ -161,1 +161,1 @@\n-class Threadcangetmonitorinfo001a extends Thread {\n+class Threadcangetmonitorinfo001a extends JDITask {\n@@ -166,3 +166,0 @@\n-    public Threadcangetmonitorinfo001a(ThreadGroup groupName, String threadName) {\n-        super(groupName, threadName);\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetMonitorInfo\/cangetmonitorinfo001a.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-    private static Threadcangetinfo001a thread2 = null;\n+    private static Thread thread2 = null;\n@@ -100,2 +100,2 @@\n-                         thread2 = new\n-                              Threadcangetinfo001a(\"Thread2\");\n+                         thread2 = JDIThreadFactory.newThread(new\n+                              Threadcangetinfo001a(\"Thread2\"));\n@@ -157,1 +157,1 @@\n-class Threadcangetinfo001a extends Thread {\n+class Threadcangetinfo001a extends JDITask {\n@@ -162,3 +162,0 @@\n-    public Threadcangetinfo001a(ThreadGroup groupName, String threadName) {\n-        super(groupName, threadName);\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/canGetOwnedMonitorInfo\/cangetinfo001a.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,2 @@\n-                         Threaddispose002a test_thread =\n-                             new Threaddispose002a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threaddispose002a(\"testedThread\"));\n@@ -172,1 +172,1 @@\n-class Threaddispose002a extends Thread {\n+class Threaddispose002a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose002a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,2 @@\n-                         Threaddispose003a test_thread =\n-                             new Threaddispose003a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threaddispose003a(\"testedThread\"));\n@@ -173,1 +173,1 @@\n-class Threaddispose003a extends Thread {\n+class Threaddispose003a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose003a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,2 +99,2 @@\n-                         Threaddispose004a test_thread =\n-                             new Threaddispose004a(\"testedThread\");\n+                         Thread test_thread =\n+                                 JDIThreadFactory.newThread(new Threaddispose004a(\"testedThread\"));\n@@ -173,1 +173,1 @@\n-class Threaddispose004a extends Thread {\n+class Threaddispose004a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/dispose\/dispose004a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,2 +96,2 @@\n-                         VMsuspend001a thread2 =\n-                             new VMsuspend001a(\"Thread2\");\n+                         Thread thread2 =\n+                             JDIThreadFactory.newThread(new VMsuspend001a(\"Thread2\"));\n@@ -163,1 +163,1 @@\n-class VMsuspend001a extends Thread {\n+class VMsuspend001a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/suspend\/suspend001a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter001a thread1 = null;\n-    static Thread2filter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -110,1 +110,1 @@\n-                            thread1 = new Thread1filter001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter001a(\"thread1\"));\n@@ -117,1 +117,1 @@\n-                            thread2 = new Thread2filter001a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter001a(\"thread2\"));\n@@ -159,3 +159,1 @@\n-    static class Thread1filter001a extends Thread {\n-\n-        String tName = null;\n+    static class Thread1filter001a extends JDITask {\n@@ -165,1 +163,0 @@\n-            tName = threadName;\n@@ -169,1 +166,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +172,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -180,3 +177,1 @@\n-    static class Thread2filter001a extends Thread {\n-\n-        String tName = null;\n+    static class Thread2filter001a extends JDITask {\n@@ -186,1 +181,0 @@\n-            tName = threadName;\n@@ -190,1 +184,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -196,1 +190,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassExclusionFilter\/filter001a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter002a thread1 = null;\n-    static Thread2filter002a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -110,1 +110,1 @@\n-                            thread1 = new Thread1filter002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter002a(\"thread1\"));\n@@ -117,1 +117,1 @@\n-                            thread2 = new Thread2filter002a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter002a(\"thread2\"));\n@@ -159,3 +159,1 @@\n-    static class Thread1filter002a extends Thread {\n-\n-        String tName = null;\n+    static class Thread1filter002a extends JDITask {\n@@ -165,1 +163,0 @@\n-            tName = threadName;\n@@ -169,1 +166,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +172,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -180,3 +177,1 @@\n-    static class Thread2filter002a extends Thread {\n-\n-        String tName = null;\n+    static class Thread2filter002a extends JDITask {\n@@ -186,1 +181,0 @@\n-            tName = threadName;\n@@ -190,1 +184,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -196,1 +190,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassExclusionFilter\/filter002a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_rt001a thread1 = null;\n-    static Thread2filter_rt001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -111,1 +111,1 @@\n-                            thread1 = new Thread1filter_rt001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_rt001a(\"thread1\"));\n@@ -115,1 +115,1 @@\n-                            thread2 = new Thread2filter_rt001a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter_rt001a(\"thread2\"));\n@@ -185,3 +185,1 @@\n-class Thread1filter_rt001a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_rt001a extends JDITask {\n@@ -191,1 +189,0 @@\n-        tName = threadName;\n@@ -195,1 +192,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -201,1 +198,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -206,3 +203,1 @@\n-class Thread2filter_rt001a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_rt001a extends JDITask {\n@@ -212,1 +207,0 @@\n-        tName = threadName;\n@@ -216,1 +210,1 @@\n-        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +216,1 @@\n-        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassFilter_rt\/filter_rt001a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_rt002a thread1 = null;\n-    static Thread2filter_rt002a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -111,1 +111,1 @@\n-                            thread1 = new Thread1filter_rt002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_rt002a(\"thread1\"));\n@@ -115,1 +115,1 @@\n-                            thread2 = new Thread2filter_rt002a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter_rt002a(\"thread2\"));\n@@ -185,3 +185,1 @@\n-class Thread1filter_rt002a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_rt002a extends JDITask {\n@@ -191,1 +189,0 @@\n-        tName = threadName;\n@@ -195,1 +192,1 @@\n-        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -201,1 +198,1 @@\n-        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -206,3 +203,1 @@\n-class Thread2filter_rt002a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_rt002a extends JDITask {\n@@ -212,1 +207,0 @@\n-        tName = threadName;\n@@ -216,1 +210,1 @@\n-        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -222,1 +216,1 @@\n-        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassFilter_rt\/filter_rt002a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_rt005a thread1 = null;\n-    static Thread2filter_rt005a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -111,1 +111,1 @@\n-                            thread1 = new Thread1filter_rt005a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_rt005a(\"thread1\"));\n@@ -115,1 +115,1 @@\n-                            thread2 = new Thread2filter_rt005a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter_rt005a(\"thread2\"));\n@@ -185,3 +185,1 @@\n-class Thread1filter_rt005a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_rt005a extends JDITask {\n@@ -191,1 +189,0 @@\n-        tName = threadName;\n@@ -195,1 +192,1 @@\n-        filter_rt005a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt005a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -201,1 +198,1 @@\n-        filter_rt005a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt005a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -235,3 +232,1 @@\n-class Thread2filter_rt005a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_rt005a extends JDITask {\n@@ -241,1 +236,0 @@\n-        tName = threadName;\n@@ -245,1 +239,1 @@\n-        filter_rt005a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt005a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -251,1 +245,1 @@\n-        filter_rt005a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt005a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassFilter_rt\/filter_rt005a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_rt006a thread1 = null;\n-    static Thread2filter_rt006a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -111,1 +111,1 @@\n-                            thread1 = new Thread1filter_rt006a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_rt006a(\"thread1\"));\n@@ -115,1 +115,1 @@\n-                            thread2 = new Thread2filter_rt006a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter_rt006a(\"thread2\"));\n@@ -185,3 +185,1 @@\n-class Thread1filter_rt006a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_rt006a extends JDITask {\n@@ -191,1 +189,0 @@\n-        tName = threadName;\n@@ -195,1 +192,1 @@\n-        filter_rt006a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt006a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -201,1 +198,1 @@\n-        filter_rt006a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt006a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -235,3 +232,1 @@\n-class Thread2filter_rt006a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_rt006a extends JDITask {\n@@ -241,1 +236,0 @@\n-        tName = threadName;\n@@ -245,1 +239,1 @@\n-        filter_rt006a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_rt006a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -251,1 +245,1 @@\n-        filter_rt006a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_rt006a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassFilter_rt\/filter_rt006a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_s001a thread1 = null;\n-    static Thread2filter_s001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -111,1 +111,1 @@\n-                            thread1 = new Thread1filter_s001a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_s001a(\"thread1\"));\n@@ -119,1 +119,1 @@\n-                            thread2 = new Thread2filter_s001a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter_s001a(\"thread2\"));\n@@ -190,3 +190,1 @@\n-class Thread1filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_s001a extends JDITask {\n@@ -196,1 +194,0 @@\n-        tName = threadName;\n@@ -200,1 +197,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -206,1 +203,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -224,3 +221,1 @@\n-class Thread2filter_s001a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_s001a extends JDITask {\n@@ -230,1 +225,0 @@\n-        tName = threadName;\n@@ -234,1 +228,1 @@\n-        filter_s001a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -240,1 +234,1 @@\n-        filter_s001a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s001a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassFilter_s\/filter_s001a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Thread1filter_s002a thread1 = null;\n-    static Thread2filter_s002a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -111,1 +111,1 @@\n-                            thread1 = new Thread1filter_s002a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Thread1filter_s002a(\"thread1\"));\n@@ -119,1 +119,1 @@\n-                            thread2 = new Thread2filter_s002a(\"thread2\");\n+                            thread2 = JDIThreadFactory.newThread(new Thread2filter_s002a(\"thread2\"));\n@@ -190,3 +190,1 @@\n-class Thread1filter_s002a extends Thread {\n-\n-    String tName = null;\n+class Thread1filter_s002a extends JDITask {\n@@ -196,1 +194,0 @@\n-        tName = threadName;\n@@ -200,1 +197,1 @@\n-        filter_s002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -206,1 +203,1 @@\n-        filter_s002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': exit   :: threadName == \" + getName());\n@@ -224,3 +221,1 @@\n-class Thread2filter_s002a extends Thread {\n-\n-    String tName = null;\n+class Thread2filter_s002a extends JDITask {\n@@ -230,1 +225,0 @@\n-        tName = threadName;\n@@ -234,1 +228,1 @@\n-        filter_s002a.log1(\"  'run': enter  :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -240,1 +234,1 @@\n-        filter_s002a.log1(\"  'run': exit   :: threadName == \" + tName);\n+        filter_s002a.log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addClassFilter_s\/filter_s002a.java","additions":11,"deletions":17,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter001a thread1 = null;\n-    static Threadinstancefilter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter001a(\"thread1\");\n-                            thread2 = new Threadinstancefilter001a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter001a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter001a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadinstancefilter001a extends Thread {\n+    static class Threadinstancefilter001a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +171,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter001a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter002a thread1 = null;\n-    static Threadinstancefilter002a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter002a(\"thread1\");\n-                            thread2 = new Threadinstancefilter002a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter002a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter002a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadinstancefilter002a extends Thread {\n+    static class Threadinstancefilter002a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +171,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter002a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadinstancefilter003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter003a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadinstancefilter003a extends Thread {\n+    static class Threadinstancefilter003a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter003a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadinstancefilter004a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter004a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter004a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadinstancefilter004a extends Thread {\n+    static class Threadinstancefilter004a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter004a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadinstancefilter005a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter005a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter005a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadinstancefilter005a extends Thread {\n+    static class Threadinstancefilter005a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter005a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadinstancefilter006a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadinstancefilter006a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter006a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadinstancefilter006a extends Thread {\n+    static class Threadinstancefilter006a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter006a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter007a thread1 = null;\n-    static Threadinstancefilter007a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter007a(\"thread1\");\n-                            thread2 = new Threadinstancefilter007a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter007a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter007a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadinstancefilter007a extends Thread {\n+    static class Threadinstancefilter007a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +171,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter007a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadinstancefilter008a thread1 = null;\n-    static Threadinstancefilter008a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadinstancefilter008a(\"thread1\");\n-                            thread2 = new Threadinstancefilter008a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadinstancefilter008a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadinstancefilter008a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadinstancefilter008a extends Thread {\n+    static class Threadinstancefilter008a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -173,1 +171,1 @@\n-                log1(\" objTC[tNumber].method();  :: threadName == \" + tName + \"  tNumber == \" + tNumber);\n+                log1(\" objTC[tNumber].method();  :: threadName == \" + getName() + \"  tNumber == \" + tNumber);\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addInstanceFilter\/instancefilter008a.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadaddthreadfilter001a thread1 = null;\n-    static Threadaddthreadfilter001a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadaddthreadfilter001a(\"thread1\");\n-                            thread2 = new Threadaddthreadfilter001a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter001a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadaddthreadfilter001a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadaddthreadfilter001a extends Thread {\n+    static class Threadaddthreadfilter001a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +173,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter001a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadaddthreadfilter002a thread1 = null;\n-    static Threadaddthreadfilter002a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadaddthreadfilter002a(\"thread1\");\n-                            thread2 = new Threadaddthreadfilter002a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter002a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadaddthreadfilter002a(\"thread2\"));\n@@ -152,1 +152,1 @@\n-    static class Threadaddthreadfilter002a extends Thread {\n+    static class Threadaddthreadfilter002a extends JDITask {\n@@ -154,1 +154,0 @@\n-        String tName = null;\n@@ -159,1 +158,0 @@\n-            tName = threadName;\n@@ -166,1 +164,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -175,1 +173,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter002a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter003a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter003a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter003a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadaddthreadfilter003a extends Thread {\n+    static class Threadaddthreadfilter003a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter003a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter004a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter004a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter004a(\"thread1\"));\n@@ -140,1 +140,1 @@\n-    static class Threadaddthreadfilter004a extends Thread {\n+    static class Threadaddthreadfilter004a extends JDITask {\n@@ -142,1 +142,0 @@\n-        String tName = null;\n@@ -147,1 +146,0 @@\n-            tName = threadName;\n@@ -154,1 +152,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -163,1 +161,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter004a.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter005a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter005a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter005a(\"thread1\"));\n@@ -152,1 +152,1 @@\n-    static class Threadaddthreadfilter005a extends Thread {\n+    static class Threadaddthreadfilter005a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter005a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-    static Threadaddthreadfilter006a thread1 = null;\n+    static Thread thread1 = null;\n@@ -101,1 +101,1 @@\n-                            thread1 = new Threadaddthreadfilter006a(\"thread1\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter006a(\"thread1\"));\n@@ -152,1 +152,1 @@\n-    static class Threadaddthreadfilter006a extends Thread {\n+    static class Threadaddthreadfilter006a extends JDITask {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter006a.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadaddthreadfilter007a thread1 = null;\n-    static Threadaddthreadfilter007a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadaddthreadfilter007a(\"thread1\");\n-                            thread2 = new Threadaddthreadfilter007a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter007a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadaddthreadfilter007a(\"thread2\"));\n@@ -153,1 +153,1 @@\n-    static class Threadaddthreadfilter007a extends Thread {\n+    static class Threadaddthreadfilter007a extends JDITask {\n@@ -155,1 +155,0 @@\n-        String tName = null;\n@@ -160,1 +159,0 @@\n-            tName = threadName;\n@@ -167,1 +165,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter007a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    static Threadaddthreadfilter008a thread1 = null;\n-    static Threadaddthreadfilter008a thread2 = null;\n+    static Thread thread1 = null;\n+    static Thread thread2 = null;\n@@ -102,2 +102,2 @@\n-                            thread1 = new Threadaddthreadfilter008a(\"thread1\");\n-                            thread2 = new Threadaddthreadfilter008a(\"thread2\");\n+                            thread1 = JDIThreadFactory.newThread(new Threadaddthreadfilter008a(\"thread1\"));\n+                            thread2 = JDIThreadFactory.newThread(new Threadaddthreadfilter008a(\"thread2\"));\n@@ -153,1 +153,1 @@\n-    static class Threadaddthreadfilter008a extends Thread {\n+    static class Threadaddthreadfilter008a extends JDITask {\n@@ -155,1 +155,0 @@\n-        String tName = null;\n@@ -160,1 +159,0 @@\n-            tName = threadName;\n@@ -167,1 +165,1 @@\n-            log1(\"  'run': enter  :: threadName == \" + tName);\n+            log1(\"  'run': enter  :: threadName == \" + getName());\n@@ -176,1 +174,1 @@\n-            log1(\"  'run': exit   :: threadName == \" + tName);\n+            log1(\"  'run': exit   :: threadName == \" + getName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/WatchpointRequest\/addThreadFilter\/addthreadfilter008a.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,40 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package nsk.share.jdi;\n+\n+public abstract class JDITask implements Runnable {\n+    private String name;\n+\n+    public JDITask(String name) {\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public abstract void run();\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/JDITask.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package nsk.share.jdi;\n+\n+import java.util.concurrent.ThreadFactory;\n+\n+\/*\n+    This factory is used to run new threads in debuggee in JDI tests.\n+ *\/\n+\n+public class JDIThreadFactory {\n+\n+    private static ThreadFactory threadFactory = r -> new Thread(r);\n+\n+    public static Thread newThread(JDITask task) {\n+        Thread t = threadFactory.newThread(task);\n+        t.setName(task.getName());\n+        return t;\n+    }\n+\n+\n+    public static Thread newThread(Runnable task) {\n+        return threadFactory.newThread(task);\n+    }\n+\n+    public static Thread newThread(Runnable task, String name) {\n+        Thread t = threadFactory.newThread(task);\n+        t.setName(name);\n+        return t;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdi\/JDIThreadFactory.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"}]}