{"files":[{"patch":"@@ -5306,3 +5306,10 @@\n-                    boolean hasErrorSuper = types.directSupertypes(c.type)\n-                                                 .stream()\n-                                                 .anyMatch(s -> s.tsym.kind == Kind.ERR);\n+                    boolean hasErrorSuper = false;\n+\n+                    hasErrorSuper |= types.directSupertypes(c.type)\n+                                          .stream()\n+                                          .anyMatch(s -> s.tsym.kind == Kind.ERR);\n+\n+                    ClassType ct = (ClassType) c.type;\n+\n+                    hasErrorSuper |= !ct.isCompound() && ct.interfaces_field != ct.all_interfaces_field;\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8246353\n+ * @bug 8246353 8273257\n@@ -56,0 +56,10 @@\n+    public void testInterface() {\n+        TypeDeclSnippet base = classKey(\n+                assertEval(\"sealed interface I permits C {}\",\n+                           ste(MAIN_SNIPPET, Status.NONEXISTENT, Status.RECOVERABLE_NOT_DEFINED, false, null)));\n+        assertEval(\"final class C implements I {}\",\n+                   added(VALID),\n+                   ste(base, Status.RECOVERABLE_NOT_DEFINED, Status.VALID, true, null));\n+        assertEval(\"new C()\");\n+    }\n+\n@@ -66,0 +76,11 @@\n+\n+    public void testNonSealedInterface() {\n+        TypeDeclSnippet base = classKey(\n+                assertEval(\"sealed interface B permits C {}\",\n+                           ste(MAIN_SNIPPET, Status.NONEXISTENT, Status.RECOVERABLE_NOT_DEFINED, false, null)));\n+        assertEval(\"non-sealed class C implements B {}\",\n+                   added(VALID),\n+                   ste(base, Status.RECOVERABLE_NOT_DEFINED, Status.VALID, true, null));\n+        assertEval(\"class C2 extends C {}\");\n+        assertEval(\"new C2()\");\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/SealedClassesTest.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 8246353\n+ * @bug 8246353 8273257\n@@ -730,0 +730,12 @@\n+    public void testNonSealedErroneousSuperInterface() {\n+        assertFail(\"compiler.err.cant.resolve\",\n+                   d -> {\n+                       if (diags.keys().size() != 1) {\n+                           fail(\"Unexpected errors: \" + diags.toString());\n+                       }\n+                   },\n+                   \"\"\"\n+                   non-sealed class C implements Undefined {}\n+                   \"\"\");\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/sealed\/SealedCompilationTests.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}