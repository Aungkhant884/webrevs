{"files":[{"patch":"@@ -42,0 +42,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11AEADCipher.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Cipher.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyStore.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Mac.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11PSSSignature.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Signature.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SunPKCS11.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n@@ -388,1 +389,1 @@\n-                if (e.getErrorCode() != PKCS11Constants.CKR_MECHANISM_INVALID) {\n+                if (e.getErrorCode() != CKR_MECHANISM_INVALID) {\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Token.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,0 +60,1 @@\n+import static sun.security.pkcs11.wrapper.PKCS11Exception.*;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1046,124 +1046,1 @@\n-    public static final long  CKR_OK                 = 0x00000000L;\n-    public static final long  CKR_CANCEL             = 0x00000001L;\n-    public static final long  CKR_HOST_MEMORY        = 0x00000002L;\n-    public static final long  CKR_SLOT_ID_INVALID    = 0x00000003L;\n-\n-    public static final long  CKR_GENERAL_ERROR      = 0x00000005L;\n-    public static final long  CKR_FUNCTION_FAILED    = 0x00000006L;\n-\n-    public static final long  CKR_ARGUMENTS_BAD      = 0x00000007L;\n-    public static final long  CKR_NO_EVENT           = 0x00000008L;\n-    public static final long  CKR_NEED_TO_CREATE_THREADS\n-                                                     = 0x00000009L;\n-    public static final long  CKR_CANT_LOCK          = 0x0000000AL;\n-\n-    public static final long  CKR_ATTRIBUTE_READ_ONLY       = 0x00000010L;\n-    public static final long  CKR_ATTRIBUTE_SENSITIVE       = 0x00000011L;\n-    public static final long  CKR_ATTRIBUTE_TYPE_INVALID    = 0x00000012L;\n-    public static final long  CKR_ATTRIBUTE_VALUE_INVALID   = 0x00000013L;\n-    public static final long  CKR_ACTION_PROHIBITED         = 0x0000001BL;\n-\n-    public static final long  CKR_DATA_INVALID              = 0x00000020L;\n-    public static final long  CKR_DATA_LEN_RANGE            = 0x00000021L;\n-    public static final long  CKR_DEVICE_ERROR              = 0x00000030L;\n-    public static final long  CKR_DEVICE_MEMORY             = 0x00000031L;\n-    public static final long  CKR_DEVICE_REMOVED            = 0x00000032L;\n-    public static final long  CKR_ENCRYPTED_DATA_INVALID    = 0x00000040L;\n-    public static final long  CKR_ENCRYPTED_DATA_LEN_RANGE  = 0x00000041L;\n-    public static final long  CKR_AEAD_DECRYPT_FAILED       = 0x00000042L;\n-    public static final long  CKR_FUNCTION_CANCELED         = 0x00000050L;\n-    public static final long  CKR_FUNCTION_NOT_PARALLEL     = 0x00000051L;\n-\n-    public static final long  CKR_FUNCTION_NOT_SUPPORTED    = 0x00000054L;\n-\n-    public static final long  CKR_KEY_HANDLE_INVALID        = 0x00000060L;\n-\n-    public static final long  CKR_KEY_SIZE_RANGE            = 0x00000062L;\n-    public static final long  CKR_KEY_TYPE_INCONSISTENT     = 0x00000063L;\n-\n-    public static final long  CKR_KEY_NOT_NEEDED                 = 0x00000064L;\n-    public static final long  CKR_KEY_CHANGED                    = 0x00000065L;\n-    public static final long  CKR_KEY_NEEDED                     = 0x00000066L;\n-    public static final long  CKR_KEY_INDIGESTIBLE               = 0x00000067L;\n-    public static final long  CKR_KEY_FUNCTION_NOT_PERMITTED     = 0x00000068L;\n-    public static final long  CKR_KEY_NOT_WRAPPABLE              = 0x00000069L;\n-    public static final long  CKR_KEY_UNEXTRACTABLE              = 0x0000006AL;\n-\n-    public static final long  CKR_MECHANISM_INVALID              = 0x00000070L;\n-    public static final long  CKR_MECHANISM_PARAM_INVALID        = 0x00000071L;\n-\n-    public static final long  CKR_OBJECT_HANDLE_INVALID          = 0x00000082L;\n-    public static final long  CKR_OPERATION_ACTIVE               = 0x00000090L;\n-    public static final long  CKR_OPERATION_NOT_INITIALIZED      = 0x00000091L;\n-    public static final long  CKR_PIN_INCORRECT                  = 0x000000A0L;\n-    public static final long  CKR_PIN_INVALID                    = 0x000000A1L;\n-    public static final long  CKR_PIN_LEN_RANGE                  = 0x000000A2L;\n-\n-    public static final long  CKR_PIN_EXPIRED                    = 0x000000A3L;\n-    public static final long  CKR_PIN_LOCKED                     = 0x000000A4L;\n-\n-    public static final long  CKR_SESSION_CLOSED                 = 0x000000B0L;\n-    public static final long  CKR_SESSION_COUNT                  = 0x000000B1L;\n-    public static final long  CKR_SESSION_HANDLE_INVALID         = 0x000000B3L;\n-    public static final long  CKR_SESSION_PARALLEL_NOT_SUPPORTED = 0x000000B4L;\n-    public static final long  CKR_SESSION_READ_ONLY              = 0x000000B5L;\n-    public static final long  CKR_SESSION_EXISTS                 = 0x000000B6L;\n-\n-    public static final long  CKR_SESSION_READ_ONLY_EXISTS       = 0x000000B7L;\n-    public static final long  CKR_SESSION_READ_WRITE_SO_EXISTS   = 0x000000B8L;\n-\n-    public static final long  CKR_SIGNATURE_INVALID              = 0x000000C0L;\n-    public static final long  CKR_SIGNATURE_LEN_RANGE            = 0x000000C1L;\n-    public static final long  CKR_TEMPLATE_INCOMPLETE            = 0x000000D0L;\n-    public static final long  CKR_TEMPLATE_INCONSISTENT          = 0x000000D1L;\n-    public static final long  CKR_TOKEN_NOT_PRESENT              = 0x000000E0L;\n-    public static final long  CKR_TOKEN_NOT_RECOGNIZED           = 0x000000E1L;\n-    public static final long  CKR_TOKEN_WRITE_PROTECTED          = 0x000000E2L;\n-    public static final long  CKR_UNWRAPPING_KEY_HANDLE_INVALID  = 0x000000F0L;\n-    public static final long  CKR_UNWRAPPING_KEY_SIZE_RANGE      = 0x000000F1L;\n-    public static final long  CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT\n-                                                                 = 0x000000F2L;\n-    public static final long  CKR_USER_ALREADY_LOGGED_IN         = 0x00000100L;\n-    public static final long  CKR_USER_NOT_LOGGED_IN             = 0x00000101L;\n-    public static final long  CKR_USER_PIN_NOT_INITIALIZED       = 0x00000102L;\n-    public static final long  CKR_USER_TYPE_INVALID              = 0x00000103L;\n-\n-    public static final long  CKR_USER_ANOTHER_ALREADY_LOGGED_IN = 0x00000104L;\n-    public static final long  CKR_USER_TOO_MANY_TYPES            = 0x00000105L;\n-\n-    public static final long  CKR_WRAPPED_KEY_INVALID            = 0x00000110L;\n-    public static final long  CKR_WRAPPED_KEY_LEN_RANGE          = 0x00000112L;\n-    public static final long  CKR_WRAPPING_KEY_HANDLE_INVALID    = 0x00000113L;\n-    public static final long  CKR_WRAPPING_KEY_SIZE_RANGE        = 0x00000114L;\n-    public static final long  CKR_WRAPPING_KEY_TYPE_INCONSISTENT = 0x00000115L;\n-    public static final long  CKR_RANDOM_SEED_NOT_SUPPORTED      = 0x00000120L;\n-\n-    public static final long  CKR_RANDOM_NO_RNG                  = 0x00000121L;\n-\n-    public static final long  CKR_DOMAIN_PARAMS_INVALID          = 0x00000130L;\n-\n-    public static final long  CKR_CURVE_NOT_SUPPORTED            = 0x00000140L;\n-\n-    public static final long  CKR_BUFFER_TOO_SMALL               = 0x00000150L;\n-    public static final long  CKR_SAVED_STATE_INVALID            = 0x00000160L;\n-    public static final long  CKR_INFORMATION_SENSITIVE          = 0x00000170L;\n-    public static final long  CKR_STATE_UNSAVEABLE               = 0x00000180L;\n-\n-    public static final long  CKR_CRYPTOKI_NOT_INITIALIZED       = 0x00000190L;\n-    public static final long  CKR_CRYPTOKI_ALREADY_INITIALIZED   = 0x00000191L;\n-    public static final long  CKR_MUTEX_BAD                      = 0x000001A0L;\n-    public static final long  CKR_MUTEX_NOT_LOCKED               = 0x000001A1L;\n-\n-    public static final long  CKR_NEW_PIN_MODE                   = 0x000001B0L;\n-    public static final long  CKR_NEXT_OTP                       = 0x000001B1L;\n-\n-    public static final long  CKR_EXCEEDED_MAX_ITERATIONS        = 0x000001B5L;\n-    public static final long  CKR_FIPS_SELF_TEST_FAILED          = 0x000001B6L;\n-    public static final long  CKR_LIBRARY_LOAD_FAILED            = 0x000001B7L;\n-    public static final long  CKR_PIN_TOO_WEAK                   = 0x000001B8L;\n-    public static final long  CKR_PUBLIC_KEY_INVALID             = 0x000001B9L;\n-    public static final long  CKR_FUNCTION_REJECTED              = 0x00000200L;\n-    public static final long  CKR_TOKEN_RESOURCE_EXCEEDED        = 0x00000201L;\n-    public static final long  CKR_OPERATION_CANCEL_FAILED        = 0x00000202L;\n-\n-    public static final long  CKR_VENDOR_DEFINED                 = 0x80000000L;\n+    \/\/ These CKR_xxx constants are stored\/defined in PKCS11Exception class\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11Constants.java","additions":2,"deletions":125,"binary":false,"changes":127,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-    private static final long serialVersionUID = 4877072363729195L;\n+    private static final long serialVersionUID = 4077027363729192L;\n@@ -71,1 +71,1 @@\n-    protected long errorCode_;\n+    protected long errorCode;\n@@ -73,1 +73,1 @@\n-    private static final Map<Long,String> errorMap;\n+    protected String errorMsg;\n@@ -75,204 +75,134 @@\n-    static {\n-        long[] errorCodes = new long[] {\n-            CKR_OK,\n-            CKR_CANCEL,\n-            CKR_HOST_MEMORY,\n-            CKR_SLOT_ID_INVALID,\n-            CKR_GENERAL_ERROR,\n-            CKR_FUNCTION_FAILED,\n-            CKR_ARGUMENTS_BAD,\n-            CKR_NO_EVENT,\n-            CKR_NEED_TO_CREATE_THREADS,\n-            CKR_CANT_LOCK,\n-            CKR_ATTRIBUTE_READ_ONLY,\n-            CKR_ATTRIBUTE_SENSITIVE,\n-            CKR_ATTRIBUTE_TYPE_INVALID,\n-            CKR_ATTRIBUTE_VALUE_INVALID,\n-            CKR_ACTION_PROHIBITED,\n-            CKR_DATA_INVALID,\n-            CKR_DATA_LEN_RANGE,\n-            CKR_DEVICE_ERROR,\n-            CKR_DEVICE_MEMORY,\n-            CKR_DEVICE_REMOVED,\n-            CKR_ENCRYPTED_DATA_INVALID,\n-            CKR_ENCRYPTED_DATA_LEN_RANGE,\n-            CKR_AEAD_DECRYPT_FAILED,\n-            CKR_FUNCTION_CANCELED,\n-            CKR_FUNCTION_NOT_PARALLEL,\n-            CKR_FUNCTION_NOT_SUPPORTED,\n-            CKR_KEY_HANDLE_INVALID,\n-            CKR_KEY_SIZE_RANGE,\n-            CKR_KEY_TYPE_INCONSISTENT,\n-            CKR_KEY_NOT_NEEDED,\n-            CKR_KEY_CHANGED,\n-            CKR_KEY_NEEDED,\n-            CKR_KEY_INDIGESTIBLE,\n-            CKR_KEY_FUNCTION_NOT_PERMITTED,\n-            CKR_KEY_NOT_WRAPPABLE,\n-            CKR_KEY_UNEXTRACTABLE,\n-            CKR_MECHANISM_INVALID,\n-            CKR_MECHANISM_PARAM_INVALID,\n-            CKR_OBJECT_HANDLE_INVALID,\n-            CKR_OPERATION_ACTIVE,\n-            CKR_OPERATION_NOT_INITIALIZED,\n-            CKR_PIN_INCORRECT,\n-            CKR_PIN_INVALID,\n-            CKR_PIN_LEN_RANGE,\n-            CKR_PIN_EXPIRED,\n-            CKR_PIN_LOCKED,\n-            CKR_SESSION_CLOSED,\n-            CKR_SESSION_COUNT,\n-            CKR_SESSION_HANDLE_INVALID,\n-            CKR_SESSION_PARALLEL_NOT_SUPPORTED,\n-            CKR_SESSION_READ_ONLY,\n-            CKR_SESSION_EXISTS,\n-            CKR_SESSION_READ_ONLY_EXISTS,\n-            CKR_SESSION_READ_WRITE_SO_EXISTS,\n-            CKR_SIGNATURE_INVALID,\n-            CKR_SIGNATURE_LEN_RANGE,\n-            CKR_TEMPLATE_INCOMPLETE,\n-            CKR_TEMPLATE_INCONSISTENT,\n-            CKR_TOKEN_NOT_PRESENT,\n-            CKR_TOKEN_NOT_RECOGNIZED,\n-            CKR_TOKEN_WRITE_PROTECTED,\n-            CKR_UNWRAPPING_KEY_HANDLE_INVALID,\n-            CKR_UNWRAPPING_KEY_SIZE_RANGE,\n-            CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT,\n-            CKR_USER_ALREADY_LOGGED_IN,\n-            CKR_USER_NOT_LOGGED_IN,\n-            CKR_USER_PIN_NOT_INITIALIZED,\n-            CKR_USER_TYPE_INVALID,\n-            CKR_USER_ANOTHER_ALREADY_LOGGED_IN,\n-            CKR_USER_TOO_MANY_TYPES,\n-            CKR_WRAPPED_KEY_INVALID,\n-            CKR_WRAPPED_KEY_LEN_RANGE,\n-            CKR_WRAPPING_KEY_HANDLE_INVALID,\n-            CKR_WRAPPING_KEY_SIZE_RANGE,\n-            CKR_WRAPPING_KEY_TYPE_INCONSISTENT,\n-            CKR_RANDOM_SEED_NOT_SUPPORTED,\n-            CKR_RANDOM_NO_RNG,\n-            CKR_DOMAIN_PARAMS_INVALID,\n-            CKR_CURVE_NOT_SUPPORTED,\n-            CKR_BUFFER_TOO_SMALL,\n-            CKR_SAVED_STATE_INVALID,\n-            CKR_INFORMATION_SENSITIVE,\n-            CKR_STATE_UNSAVEABLE,\n-            CKR_CRYPTOKI_NOT_INITIALIZED,\n-            CKR_CRYPTOKI_ALREADY_INITIALIZED,\n-            CKR_MUTEX_BAD,\n-            CKR_MUTEX_NOT_LOCKED,\n-            CKR_NEW_PIN_MODE,\n-            CKR_NEXT_OTP,\n-            CKR_EXCEEDED_MAX_ITERATIONS,\n-            CKR_FIPS_SELF_TEST_FAILED,\n-            CKR_LIBRARY_LOAD_FAILED,\n-            CKR_PIN_TOO_WEAK,\n-            CKR_PUBLIC_KEY_INVALID,\n-            CKR_FUNCTION_REJECTED,\n-            CKR_TOKEN_RESOURCE_EXCEEDED,\n-            CKR_OPERATION_CANCEL_FAILED,\n-            CKR_VENDOR_DEFINED,\n-        };\n-        String[] errorMessages = new String[] {\n-            \"CKR_OK\",\n-            \"CKR_CANCEL\",\n-            \"CKR_HOST_MEMORY\",\n-            \"CKR_SLOT_ID_INVALID\",\n-            \"CKR_GENERAL_ERROR\",\n-            \"CKR_FUNCTION_FAILED\",\n-            \"CKR_ARGUMENTS_BAD\",\n-            \"CKR_NO_EVENT\",\n-            \"CKR_NEED_TO_CREATE_THREADS\",\n-            \"CKR_CANT_LOCK\",\n-            \"CKR_ATTRIBUTE_READ_ONLY\",\n-            \"CKR_ATTRIBUTE_SENSITIVE\",\n-            \"CKR_ATTRIBUTE_TYPE_INVALID\",\n-            \"CKR_ATTRIBUTE_VALUE_INVALID\",\n-            \"CKR_ACTION_PROHIBITED\",\n-            \"CKR_DATA_INVALID\",\n-            \"CKR_DATA_LEN_RANGE\",\n-            \"CKR_DEVICE_ERROR\",\n-            \"CKR_DEVICE_MEMORY\",\n-            \"CKR_DEVICE_REMOVED\",\n-            \"CKR_ENCRYPTED_DATA_INVALID\",\n-            \"CKR_ENCRYPTED_DATA_LEN_RANGE\",\n-            \"CKR_AEAD_DECRYPT_FAILED\",\n-            \"CKR_FUNCTION_CANCELED\",\n-            \"CKR_FUNCTION_NOT_PARALLEL\",\n-            \"CKR_FUNCTION_NOT_SUPPORTED\",\n-            \"CKR_KEY_HANDLE_INVALID\",\n-            \"CKR_KEY_SIZE_RANGE\",\n-            \"CKR_KEY_TYPE_INCONSISTENT\",\n-            \"CKR_KEY_NOT_NEEDED\",\n-            \"CKR_KEY_CHANGED\",\n-            \"CKR_KEY_NEEDED\",\n-            \"CKR_KEY_INDIGESTIBLE\",\n-            \"CKR_KEY_FUNCTION_NOT_PERMITTED\",\n-            \"CKR_KEY_NOT_WRAPPABLE\",\n-            \"CKR_KEY_UNEXTRACTABLE\",\n-            \"CKR_MECHANISM_INVALID\",\n-            \"CKR_MECHANISM_PARAM_INVALID\",\n-            \"CKR_OBJECT_HANDLE_INVALID\",\n-            \"CKR_OPERATION_ACTIVE\",\n-            \"CKR_OPERATION_NOT_INITIALIZED\",\n-            \"CKR_PIN_INCORRECT\",\n-            \"CKR_PIN_INVALID\",\n-            \"CKR_PIN_LEN_RANGE\",\n-            \"CKR_PIN_EXPIRED\",\n-            \"CKR_PIN_LOCKED\",\n-            \"CKR_SESSION_CLOSED\",\n-            \"CKR_SESSION_COUNT\",\n-            \"CKR_SESSION_HANDLE_INVALID\",\n-            \"CKR_SESSION_PARALLEL_NOT_SUPPORTED\",\n-            \"CKR_SESSION_READ_ONLY\",\n-            \"CKR_SESSION_EXISTS\",\n-            \"CKR_SESSION_READ_ONLY_EXISTS\",\n-            \"CKR_SESSION_READ_WRITE_SO_EXISTS\",\n-            \"CKR_SIGNATURE_INVALID\",\n-            \"CKR_SIGNATURE_LEN_RANGE\",\n-            \"CKR_TEMPLATE_INCOMPLETE\",\n-            \"CKR_TEMPLATE_INCONSISTENT\",\n-            \"CKR_TOKEN_NOT_PRESENT\",\n-            \"CKR_TOKEN_NOT_RECOGNIZED\",\n-            \"CKR_TOKEN_WRITE_PROTECTED\",\n-            \"CKR_UNWRAPPING_KEY_HANDLE_INVALID\",\n-            \"CKR_UNWRAPPING_KEY_SIZE_RANGE\",\n-            \"CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT\",\n-            \"CKR_USER_ALREADY_LOGGED_IN\",\n-            \"CKR_USER_NOT_LOGGED_IN\",\n-            \"CKR_USER_PIN_NOT_INITIALIZED\",\n-            \"CKR_USER_TYPE_INVALID\",\n-            \"CKR_USER_ANOTHER_ALREADY_LOGGED_IN\",\n-            \"CKR_USER_TOO_MANY_TYPES\",\n-            \"CKR_WRAPPED_KEY_INVALID\",\n-            \"CKR_WRAPPED_KEY_LEN_RANGE\",\n-            \"CKR_WRAPPING_KEY_HANDLE_INVALID\",\n-            \"CKR_WRAPPING_KEY_SIZE_RANGE\",\n-            \"CKR_WRAPPING_KEY_TYPE_INCONSISTENT\",\n-            \"CKR_RANDOM_SEED_NOT_SUPPORTED\",\n-            \"CKR_RANDOM_NO_RNG\",\n-            \"CKR_DOMAIN_PARAMS_INVALID\",\n-            \"CKR_CURVE_NOT_SUPPORTED\",\n-            \"CKR_BUFFER_TOO_SMALL\",\n-            \"CKR_SAVED_STATE_INVALID\",\n-            \"CKR_INFORMATION_SENSITIVE\",\n-            \"CKR_STATE_UNSAVEABLE\",\n-            \"CKR_CRYPTOKI_NOT_INITIALIZED\",\n-            \"CKR_CRYPTOKI_ALREADY_INITIALIZED\",\n-            \"CKR_MUTEX_BAD\",\n-            \"CKR_MUTEX_NOT_LOCKED\",\n-            \"CKR_NEW_PIN_MODE\",\n-            \"CKR_NEXT_OTP\",\n-            \"CKR_EXCEEDED_MAX_ITERATIONS\",\n-            \"CKR_FIPS_SELF_TEST_FAILED\",\n-            \"CKR_LIBRARY_LOAD_FAILED\",\n-            \"CKR_PIN_TOO_WEAK\",\n-            \"CKR_PUBLIC_KEY_INVALID\",\n-            \"CKR_FUNCTION_REJECTED\",\n-            \"CKR_TOKEN_RESOURCE_EXCEEDED\",\n-            \"CKR_OPERATION_CANCEL_FAILED\",\n-            \"CKR_VENDOR_DEFINED\",\n-        };\n-        errorMap = new HashMap<Long,String>();\n-        for (int i = 0; i < errorCodes.length; i++) {\n-            errorMap.put(Long.valueOf(errorCodes[i]), errorMessages[i]);\n+    public static final long CKR_GENERAL_ERROR = RV.CKR_GENERAL_ERROR.value;\n+    public static final long CKR_ATTRIBUTE_TYPE_INVALID =\n+            RV.CKR_ATTRIBUTE_TYPE_INVALID.value;\n+    public static final long CKR_DATA_LEN_RANGE = RV.CKR_DATA_LEN_RANGE.value;\n+    public static final long CKR_ENCRYPTED_DATA_INVALID =\n+            RV.CKR_ENCRYPTED_DATA_INVALID.value;\n+    public static final long CKR_ENCRYPTED_DATA_LEN_RANGE =\n+            RV.CKR_ENCRYPTED_DATA_LEN_RANGE.value;\n+    public static final long CKR_MECHANISM_INVALID =\n+            RV.CKR_MECHANISM_INVALID.value;\n+    public static final long CKR_MECHANISM_PARAM_INVALID =\n+            RV.CKR_MECHANISM_PARAM_INVALID.value;\n+    public static final long CKR_OPERATION_NOT_INITIALIZED =\n+            RV.CKR_OPERATION_NOT_INITIALIZED.value;\n+    public static final long CKR_PIN_INCORRECT =\n+            RV.CKR_PIN_INCORRECT.value;\n+    public static final long CKR_SIGNATURE_INVALID =\n+            RV.CKR_SIGNATURE_INVALID.value;\n+    public static final long CKR_SIGNATURE_LEN_RANGE =\n+            RV.CKR_SIGNATURE_LEN_RANGE.value;\n+    public static final long CKR_USER_ALREADY_LOGGED_IN =\n+            RV.CKR_USER_ALREADY_LOGGED_IN.value;\n+    public static final long CKR_USER_NOT_LOGGED_IN =\n+            RV.CKR_USER_NOT_LOGGED_IN.value;\n+    public static final long CKR_BUFFER_TOO_SMALL =\n+            RV.CKR_BUFFER_TOO_SMALL.value;\n+    public static final long CKR_CRYPTOKI_ALREADY_INITIALIZED =\n+            RV.CKR_CRYPTOKI_ALREADY_INITIALIZED.value;\n+\n+    \/\/ enum for all PKCS#11 return value\n+    static enum RV {\n+        CKR_OK(0x00000000L),\n+        CKR_CANCEL(0x00000001L),\n+        CKR_HOST_MEMORY(0x00000002L),\n+        CKR_SLOT_ID_INVALID(0x00000003L),\n+        CKR_GENERAL_ERROR(0x00000005L),\n+        CKR_FUNCTION_FAILED(0x00000006L),\n+        CKR_ARGUMENTS_BAD(0x00000007L),\n+        CKR_NO_EVENT(0x00000008L),\n+        CKR_NEED_TO_CREATE_THREADS(0x00000009L),\n+        CKR_CANT_LOCK(0x0000000AL),\n+        CKR_ATTRIBUTE_READ_ONLY(0x00000010L),\n+        CKR_ATTRIBUTE_SENSITIVE(0x00000011L),\n+        CKR_ATTRIBUTE_TYPE_INVALID(0x00000012L),\n+        CKR_ATTRIBUTE_VALUE_INVALID(0x00000013L),\n+        CKR_ACTION_PROHIBITED(0x0000001BL),\n+        CKR_DATA_INVALID(0x00000020L),\n+        CKR_DATA_LEN_RANGE(0x00000021L),\n+        CKR_DEVICE_ERROR(0x00000030L),\n+        CKR_DEVICE_MEMORY(0x00000031L),\n+        CKR_DEVICE_REMOVED(0x00000032L),\n+        CKR_ENCRYPTED_DATA_INVALID(0x00000040L),\n+        CKR_ENCRYPTED_DATA_LEN_RANGE(0x00000041L),\n+        CKR_AEAD_DECRYPT_FAILED(0x00000042L),\n+        CKR_FUNCTION_CANCELED(0x00000050L),\n+        CKR_FUNCTION_NOT_PARALLEL(0x00000051L),\n+        CKR_FUNCTION_NOT_SUPPORTED(0x00000054L),\n+        CKR_KEY_HANDLE_INVALID(0x00000060L),\n+        CKR_KEY_SIZE_RANGE(0x00000062L),\n+        CKR_KEY_TYPE_INCONSISTENT(0x00000063L),\n+        CKR_KEY_NOT_NEEDED(0x00000064L),\n+        CKR_KEY_CHANGED(0x00000065L),\n+        CKR_KEY_NEEDED(0x00000066L),\n+        CKR_KEY_INDIGESTIBLE(0x00000067L),\n+        CKR_KEY_FUNCTION_NOT_PERMITTED(0x00000068L),\n+        CKR_KEY_NOT_WRAPPABLE(0x00000069L),\n+        CKR_KEY_UNEXTRACTABLE(0x0000006AL),\n+        CKR_MECHANISM_INVALID(0x00000070L),\n+        CKR_MECHANISM_PARAM_INVALID(0x00000071L),\n+        CKR_OBJECT_HANDLE_INVALID(0x00000082L),\n+        CKR_OPERATION_ACTIVE(0x00000090L),\n+        CKR_OPERATION_NOT_INITIALIZED(0x00000091L),\n+        CKR_PIN_INCORRECT(0x000000A0L),\n+        CKR_PIN_INVALID(0x000000A1L),\n+        CKR_PIN_LEN_RANGE(0x000000A2L),\n+        CKR_PIN_EXPIRED(0x000000A3L),\n+        CKR_PIN_LOCKED(0x000000A4L),\n+        CKR_SESSION_CLOSED(0x000000B0L),\n+        CKR_SESSION_COUNT(0x000000B1L),\n+        CKR_SESSION_HANDLE_INVALID(0x000000B3L),\n+        CKR_SESSION_PARALLEL_NOT_SUPPORTED(0x000000B4L),\n+        CKR_SESSION_READ_ONLY(0x000000B5L),\n+        CKR_SESSION_EXISTS(0x000000B6L),\n+        CKR_SESSION_READ_ONLY_EXISTS(0x000000B7L),\n+        CKR_SESSION_READ_WRITE_SO_EXISTS(0x000000B8L),\n+        CKR_SIGNATURE_INVALID(0x000000C0L),\n+        CKR_SIGNATURE_LEN_RANGE(0x000000C1L),\n+        CKR_TEMPLATE_INCOMPLETE(0x000000D0L),\n+        CKR_TEMPLATE_INCONSISTENT(0x000000D1L),\n+        CKR_TOKEN_NOT_PRESENT(0x000000E0L),\n+        CKR_TOKEN_NOT_RECOGNIZED(0x000000E1L),\n+        CKR_TOKEN_WRITE_PROTECTED(0x000000E2L),\n+        CKR_UNWRAPPING_KEY_HANDLE_INVALID(0x000000F0L),\n+        CKR_UNWRAPPING_KEY_SIZE_RANGE(0x000000F1L),\n+        CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT(0x000000F2L),\n+        CKR_USER_ALREADY_LOGGED_IN(0x00000100L),\n+        CKR_USER_NOT_LOGGED_IN(0x00000101L),\n+        CKR_USER_PIN_NOT_INITIALIZED(0x00000102L),\n+        CKR_USER_TYPE_INVALID(0x00000103L),\n+        CKR_USER_ANOTHER_ALREADY_LOGGED_IN(0x00000104L),\n+        CKR_USER_TOO_MANY_TYPES(0x00000105L),\n+        CKR_WRAPPED_KEY_INVALID(0x00000110L),\n+        CKR_WRAPPED_KEY_LEN_RANGE(0x00000112L),\n+        CKR_WRAPPING_KEY_HANDLE_INVALID(0x00000113L),\n+        CKR_WRAPPING_KEY_SIZE_RANGE(0x00000114L),\n+        CKR_WRAPPING_KEY_TYPE_INCONSISTENT(0x00000115L),\n+        CKR_RANDOM_SEED_NOT_SUPPORTED(0x00000120L),\n+        CKR_RANDOM_NO_RNG(0x00000121L),\n+        CKR_DOMAIN_PARAMS_INVALID(0x00000130L),\n+        CKR_CURVE_NOT_SUPPORTED(0x00000140L),\n+        CKR_BUFFER_TOO_SMALL(0x00000150L),\n+        CKR_SAVED_STATE_INVALID(0x00000160L),\n+        CKR_INFORMATION_SENSITIVE(0x00000170L),\n+        CKR_STATE_UNSAVEABLE(0x00000180L),\n+        CKR_CRYPTOKI_NOT_INITIALIZED(0x00000190L),\n+        CKR_CRYPTOKI_ALREADY_INITIALIZED(0x00000191L),\n+        CKR_MUTEX_BAD(0x000001A0L),\n+        CKR_MUTEX_NOT_LOCKED(0x000001A1L),\n+        CKR_NEW_PIN_MODE(0x000001B0L),\n+        CKR_NEXT_OTP(0x000001B1L),\n+        CKR_EXCEEDED_MAX_ITERATIONS(0x000001B5L),\n+        CKR_FIPS_SELF_TEST_FAILED(0x000001B6L),\n+        CKR_LIBRARY_LOAD_FAILED(0x000001B7L),\n+        CKR_PIN_TOO_WEAK(0x000001B8L),\n+        CKR_PUBLIC_KEY_INVALID(0x000001B9L),\n+        CKR_FUNCTION_REJECTED(0x00000200L),\n+        CKR_TOKEN_RESOURCE_EXCEEDED(0x00000201L),\n+        CKR_OPERATION_CANCEL_FAILED(0x00000202L),\n+        CKR_VENDOR_DEFINED(0x80000000L);\n+\n+        private final long value;\n+\n+        RV(long value) {\n+            this.value = value;\n@@ -280,1 +210,1 @@\n-    }\n+    };\n@@ -282,0 +212,9 @@\n+    private static String lookup(long errorCode) {\n+        for (RV r : RV.values()) {\n+            if (r.value == errorCode) {\n+                return r.name();\n+            }\n+        }\n+        \/\/ for unknown PKCS11 return values, just use hex as its string\n+        return \"0x\" + Functions.toFullHexString((int)errorCode);\n+    }\n@@ -284,2 +223,2 @@\n-     * Constructor taking the error code as defined for the CKR_* constants\n-     * in PKCS#11.\n+     * Constructor taking the error code (the CKR_* constants in PKCS#11) and\n+     * extra info for error message.\n@@ -287,2 +226,6 @@\n-    public PKCS11Exception(long errorCode) {\n-        errorCode_ = errorCode;\n+    public PKCS11Exception(long errorCode, String extraInfo) {\n+        this.errorCode = errorCode;\n+        this.errorMsg = lookup(errorCode);\n+        if (extraInfo != null) {\n+            this.errorMsg += extraInfo;\n+        }\n@@ -302,5 +245,1 @@\n-        String message = errorMap.get(Long.valueOf(errorCode_));\n-        if (message == null) {\n-            message = \"0x\" + Functions.toFullHexString((int)errorCode_);\n-        }\n-        return message;\n+        return errorMsg;\n@@ -317,1 +256,1 @@\n-        return errorCode_ ;\n+        return errorCode;\n@@ -319,1 +258,0 @@\n-\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11Exception.java","additions":158,"deletions":220,"binary":false,"changes":378,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -221,0 +221,2 @@\n+    char* msg = NULL;\n+    char* temp1, *temp2;\n@@ -248,1 +250,23 @@\n-    if (ckAssertReturnValueOK(env, rv) != CK_ASSERT_OK) {\n+\n+    if (rv != CKR_OK) {\n+        if (rv == CKR_ATTRIBUTE_SENSITIVE || rv == CKR_ATTRIBUTE_TYPE_INVALID) {\n+            msg = malloc(80); \/\/ should be more than sufficient\n+            if (msg == NULL) {\n+                throwOutOfMemoryError(env, 0);\n+                free(ckpAttributes);\n+                return;\n+            }\n+            \/\/ format msg w\/ attribute(s) whose value is unavailable\n+            temp1 = msg;\n+            temp2 = msg + 80;\n+            for (i = 0; i < ckAttributesLength && temp1 < temp2; i++) {\n+                if (ckpAttributes[i].ulValueLen == CK_UNAVAILABLE_INFORMATION) {\n+                    temp1 += snprintf(temp1, (temp2-temp1), \" 0x%lX\",\n+                            ckpAttributes[i].type);\n+                }\n+            }\n+            ckAssertReturnValueOK2(env, rv, msg);\n+            free(msg);\n+        } else {\n+            ckAssertReturnValueOK(env, rv);\n+        }\n@@ -250,1 +274,1 @@\n-        return ;\n+        return;\n@@ -253,2 +277,2 @@\n-    \/* now, the ulValueLength field of each attribute should hold the exact buffer length needed\n-     * allocate the needed buffers accordingly\n+    \/* now, the ulValueLength field of each attribute should hold the exact\n+     * buffer length needed.\n@@ -267,2 +291,3 @@\n-    \/* now get the attributes with all values *\/\n-    rv = (*ckpFunctions->C_GetAttributeValue)(ckSessionHandle, ckObjectHandle, ckpAttributes, ckAttributesLength);\n+    \/* now get all attribute values *\/\n+    rv = (*ckpFunctions->C_GetAttributeValue)(ckSessionHandle,\n+            ckObjectHandle, ckpAttributes, ckAttributesLength);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_objmgmt.c","additions":32,"deletions":7,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,1 +98,1 @@\n- * already in the lsit, just override its old module data with the new one.\n+ * already in the list, just override its old module data with the new one.\n@@ -185,3 +185,3 @@\n- * This function generates a PKCS#11Exception with the returnValue as the errorcode\n- * if the returnValue is not CKR_OK. The functin returns 0, if the returnValue is\n- * CKR_OK. Otherwise, it returns the returnValue as a jLong.\n+ * This function generates a PKCS#11Exception with the returnValue as the\n+ * errorcode. If the returnValue is not CKR_OK. The function returns 0, if the\n+ * returnValue is CKR_OK. Otherwise, it returns the returnValue as a jLong.\n@@ -189,1 +189,1 @@\n- * @param env - used to call JNI funktions and to get the Exception class\n+ * @param env - used to call JNI functions and to get the Exception class\n@@ -192,2 +192,17 @@\n-jlong ckAssertReturnValueOK(JNIEnv *env, CK_RV returnValue)\n-{\n+jlong ckAssertReturnValueOK(JNIEnv *env, CK_RV returnValue) {\n+    return ckAssertReturnValueOK2(env, returnValue, NULL);\n+}\n+\n+\/*\n+ * function to convert a PKCS#11 return value and additional message into a\n+ * PKCS#11Exception\n+ *\n+ * This function generates a PKCS#11Exception with the returnValue as the\n+ * errorcode. If the returnValue is not CKR_OK. The function returns 0, if the\n+ * returnValue is CKR_OK. Otherwise, it returns the returnValue as a jLong.\n+ *\n+ * @param env - used to call JNI functions and to get the Exception class\n+ * @param returnValue - of the PKCS#11 function\n+ * @param msg - additional message for the generated PKCS11Exception\n+ *\/\n+jlong ckAssertReturnValueOK2(JNIEnv *env, CK_RV returnValue, const char* msg) {\n@@ -198,0 +213,1 @@\n+    jstring jMsg = NULL;\n@@ -203,1 +219,2 @@\n-            jConstructor = (*env)->GetMethodID(env, jPKCS11ExceptionClass, \"<init>\", \"(J)V\");\n+            jConstructor = (*env)->GetMethodID(env, jPKCS11ExceptionClass,\n+                    \"<init>\", \"(JLjava\/lang\/String;)V\");\n@@ -205,1 +222,5 @@\n-                jPKCS11Exception = (jthrowable) (*env)->NewObject(env, jPKCS11ExceptionClass, jConstructor, jErrorCode);\n+                if (msg != NULL) {\n+                    jMsg = (*env)->NewStringUTF(env, msg);\n+                }\n+                jPKCS11Exception = (jthrowable) (*env)->NewObject(env,\n+                        jPKCS11ExceptionClass, jConstructor, jErrorCode, jMsg);\n@@ -213,1 +234,1 @@\n-    return jErrorCode ;\n+    return jErrorCode;\n@@ -256,1 +277,1 @@\n- * @param env Used to call JNI funktions and to get the Exception class.\n+ * @param env Used to call JNI functions and to get the Exception class.\n@@ -268,1 +289,1 @@\n- * @param env Used to call JNI funktions and to get the Exception class.\n+ * @param env Used to call JNI functions and to get the Exception class.\n@@ -484,1 +505,1 @@\n- * @param env - used to call JNI funktions to get the array informtaion\n+ * @param env - used to call JNI functions to get the array informtaion\n@@ -526,1 +547,1 @@\n- * @param env - used to call JNI funktions to get the array informtaion\n+ * @param env - used to call JNI functions to get the array informtaion\n@@ -573,1 +594,1 @@\n- * @param env - used to call JNI funktions to get the array informtaion\n+ * @param env - used to call JNI functions to get the array informtaion\n@@ -615,1 +636,1 @@\n- * @param env - used to call JNI funktions to get the array informtaion\n+ * @param env - used to call JNI functions to get the array informtaion\n@@ -657,1 +678,1 @@\n- * @param env - used to call JNI funktions to get the array informtaion\n+ * @param env - used to call JNI functions to get the array informtaion\n@@ -699,1 +720,1 @@\n- * @param env - used to call JNI funktions to get the array informtaion\n+ * @param env - used to call JNI functions to get the array informtaion\n@@ -733,1 +754,1 @@\n- * @param env - used to call JNI funktions to get the array informtaion\n+ * @param env - used to call JNI functions to get the array informtaion\n@@ -779,1 +800,1 @@\n- * @param env - used to call JNI funktions to create the new Java array\n+ * @param env - used to call JNI functions to create the new Java array\n@@ -817,1 +838,1 @@\n- * @param env - used to call JNI funktions to create the new Java array\n+ * @param env - used to call JNI functions to create the new Java array\n@@ -848,1 +869,1 @@\n- * @param env - used to call JNI funktions to create the new Java array\n+ * @param env - used to call JNI functions to create the new Java array\n@@ -879,1 +900,1 @@\n- * @param env - used to call JNI funktions to create the new Java array\n+ * @param env - used to call JNI functions to create the new Java array\n@@ -928,1 +949,1 @@\n- * @param env - used to call JNI funktions to create the new Java object\n+ * @param env - used to call JNI functions to create the new Java object\n@@ -952,1 +973,1 @@\n- * @param env - used to call JNI funktions to create the new Java object\n+ * @param env - used to call JNI functions to create the new Java object\n@@ -977,1 +998,1 @@\n- * @param env - used to call JNI funktions to get the value out of the Java object\n+ * @param env - used to call JNI functions to get the value out of the Java object\n@@ -1007,1 +1028,1 @@\n- * @param env - used to call JNI funktions to get the value out of the Java object\n+ * @param env - used to call JNI functions to get the value out of the Java object\n@@ -1036,1 +1057,1 @@\n- * @param env - used to call JNI funktions to get the value out of the Java object\n+ * @param env - used to call JNI functions to get the value out of the Java object\n@@ -1065,1 +1086,1 @@\n- * @param env - used to call JNI funktions to get the value out of the Java object\n+ * @param env - used to call JNI functions to get the value out of the Java object\n@@ -1095,1 +1116,1 @@\n- * @param env - used to call JNI funktions to get the value out of the Java object\n+ * @param env - used to call JNI functions to get the value out of the Java object\n@@ -1125,1 +1146,1 @@\n- * @param env - used to call JNI funktions to get the Java classes and objects\n+ * @param env - used to call JNI functions to get the Java classes and objects\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_util.c","additions":53,"deletions":32,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -308,0 +308,1 @@\n+jlong ckAssertReturnValueOK2(JNIEnv *env, CK_RV returnValue, const char *msg);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/pkcs11wrapper.h","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}