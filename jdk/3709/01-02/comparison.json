{"files":[{"patch":"@@ -75,1 +75,28 @@\n-    private static final Map<Long,String> errorMap = new HashMap<>();\n+    public static final long CKR_GENERAL_ERROR = RV.CKR_GENERAL_ERROR.value();\n+    public static final long CKR_ATTRIBUTE_TYPE_INVALID =\n+            RV.CKR_ATTRIBUTE_TYPE_INVALID.value();\n+    public static final long CKR_DATA_LEN_RANGE = RV.CKR_DATA_LEN_RANGE.value();\n+    public static final long CKR_ENCRYPTED_DATA_INVALID =\n+            RV.CKR_ENCRYPTED_DATA_INVALID.value();\n+    public static final long CKR_ENCRYPTED_DATA_LEN_RANGE =\n+            RV.CKR_ENCRYPTED_DATA_LEN_RANGE.value();\n+    public static final long CKR_MECHANISM_INVALID =\n+            RV.CKR_MECHANISM_INVALID.value();\n+    public static final long CKR_MECHANISM_PARAM_INVALID =\n+            RV.CKR_MECHANISM_PARAM_INVALID.value();\n+    public static final long CKR_OPERATION_NOT_INITIALIZED =\n+            RV.CKR_OPERATION_NOT_INITIALIZED.value();\n+    public static final long CKR_PIN_INCORRECT =\n+            RV.CKR_PIN_INCORRECT.value();\n+    public static final long CKR_SIGNATURE_INVALID =\n+            RV.CKR_SIGNATURE_INVALID.value();\n+    public static final long CKR_SIGNATURE_LEN_RANGE =\n+            RV.CKR_SIGNATURE_LEN_RANGE.value();\n+    public static final long CKR_USER_ALREADY_LOGGED_IN =\n+            RV.CKR_USER_ALREADY_LOGGED_IN.value();\n+    public static final long CKR_USER_NOT_LOGGED_IN =\n+            RV.CKR_USER_NOT_LOGGED_IN.value();\n+    public static final long CKR_BUFFER_TOO_SMALL =\n+            RV.CKR_BUFFER_TOO_SMALL.value();\n+    public static final long CKR_CRYPTOKI_ALREADY_INITIALIZED =\n+            RV.CKR_CRYPTOKI_ALREADY_INITIALIZED.value();\n@@ -77,15 +104,100 @@\n-    public static final long CKR_GENERAL_ERROR = 0x00000005L;\n-    public static final long CKR_ATTRIBUTE_TYPE_INVALID = 0x00000012L;\n-    public static final long CKR_DATA_LEN_RANGE = 0x00000021L;\n-    public static final long CKR_ENCRYPTED_DATA_INVALID = 0x00000040L;\n-    public static final long CKR_ENCRYPTED_DATA_LEN_RANGE = 0x00000041L;\n-    public static final long CKR_MECHANISM_INVALID = 0x00000070L;\n-    public static final long CKR_MECHANISM_PARAM_INVALID = 0x00000071L;\n-    public static final long CKR_OPERATION_NOT_INITIALIZED = 0x00000091L;\n-    public static final long CKR_PIN_INCORRECT = 0x000000A0L;\n-    public static final long CKR_SIGNATURE_INVALID = 0x000000C0L;\n-    public static final long CKR_SIGNATURE_LEN_RANGE = 0x000000C1L;\n-    public static final long CKR_USER_ALREADY_LOGGED_IN = 0x00000100L;\n-    public static final long CKR_USER_NOT_LOGGED_IN = 0x00000101L;\n-    public static final long CKR_BUFFER_TOO_SMALL = 0x00000150L;\n-    public static final long CKR_CRYPTOKI_ALREADY_INITIALIZED = 0x00000191L;\n+    \/\/ enum for all PKCS#11 return value\n+    static enum RV {\n+        CKR_OK(0x00000000L),\n+        CKR_CANCEL(0x00000001L),\n+        CKR_HOST_MEMORY(0x00000002L),\n+        CKR_SLOT_ID_INVALID(0x00000003L),\n+        CKR_GENERAL_ERROR(0x00000005L),\n+        CKR_FUNCTION_FAILED(0x00000006L),\n+        CKR_ARGUMENTS_BAD(0x00000007L),\n+        CKR_NO_EVENT(0x00000008L),\n+        CKR_NEED_TO_CREATE_THREADS(0x00000009L),\n+        CKR_CANT_LOCK(0x0000000AL),\n+        CKR_ATTRIBUTE_READ_ONLY(0x00000010L),\n+        CKR_ATTRIBUTE_SENSITIVE(0x00000011L),\n+        CKR_ATTRIBUTE_TYPE_INVALID(0x00000012L),\n+        CKR_ATTRIBUTE_VALUE_INVALID(0x00000013L),\n+        CKR_ACTION_PROHIBITED(0x0000001BL),\n+        CKR_DATA_INVALID(0x00000020L),\n+        CKR_DATA_LEN_RANGE(0x00000021L),\n+        CKR_DEVICE_ERROR(0x00000030L),\n+        CKR_DEVICE_MEMORY(0x00000031L),\n+        CKR_DEVICE_REMOVED(0x00000032L),\n+        CKR_ENCRYPTED_DATA_INVALID(0x00000040L),\n+        CKR_ENCRYPTED_DATA_LEN_RANGE(0x00000041L),\n+        CKR_AEAD_DECRYPT_FAILED(0x00000042L),\n+        CKR_FUNCTION_CANCELED(0x00000050L),\n+        CKR_FUNCTION_NOT_PARALLEL(0x00000051L),\n+        CKR_FUNCTION_NOT_SUPPORTED(0x00000054L),\n+        CKR_KEY_HANDLE_INVALID(0x00000060L),\n+        CKR_KEY_SIZE_RANGE(0x00000062L),\n+        CKR_KEY_TYPE_INCONSISTENT(0x00000063L),\n+        CKR_KEY_NOT_NEEDED(0x00000064L),\n+        CKR_KEY_CHANGED(0x00000065L),\n+        CKR_KEY_NEEDED(0x00000066L),\n+        CKR_KEY_INDIGESTIBLE(0x00000067L),\n+        CKR_KEY_FUNCTION_NOT_PERMITTED(0x00000068L),\n+        CKR_KEY_NOT_WRAPPABLE(0x00000069L),\n+        CKR_KEY_UNEXTRACTABLE(0x0000006AL),\n+        CKR_MECHANISM_INVALID(0x00000070L),\n+        CKR_MECHANISM_PARAM_INVALID(0x00000071L),\n+        CKR_OBJECT_HANDLE_INVALID(0x00000082L),\n+        CKR_OPERATION_ACTIVE(0x00000090L),\n+        CKR_OPERATION_NOT_INITIALIZED(0x00000091L),\n+        CKR_PIN_INCORRECT(0x000000A0L),\n+        CKR_PIN_INVALID(0x000000A1L),\n+        CKR_PIN_LEN_RANGE(0x000000A2L),\n+        CKR_PIN_EXPIRED(0x000000A3L),\n+        CKR_PIN_LOCKED(0x000000A4L),\n+        CKR_SESSION_CLOSED(0x000000B0L),\n+        CKR_SESSION_COUNT(0x000000B1L),\n+        CKR_SESSION_HANDLE_INVALID(0x000000B3L),\n+        CKR_SESSION_PARALLEL_NOT_SUPPORTED(0x000000B4L),\n+        CKR_SESSION_READ_ONLY(0x000000B5L),\n+        CKR_SESSION_EXISTS(0x000000B6L),\n+        CKR_SESSION_READ_ONLY_EXISTS(0x000000B7L),\n+        CKR_SESSION_READ_WRITE_SO_EXISTS(0x000000B8L),\n+        CKR_SIGNATURE_INVALID(0x000000C0L),\n+        CKR_SIGNATURE_LEN_RANGE(0x000000C1L),\n+        CKR_TEMPLATE_INCOMPLETE(0x000000D0L),\n+        CKR_TEMPLATE_INCONSISTENT(0x000000D1L),\n+        CKR_TOKEN_NOT_PRESENT(0x000000E0L),\n+        CKR_TOKEN_NOT_RECOGNIZED(0x000000E1L),\n+        CKR_TOKEN_WRITE_PROTECTED(0x000000E2L),\n+        CKR_UNWRAPPING_KEY_HANDLE_INVALID(0x000000F0L),\n+        CKR_UNWRAPPING_KEY_SIZE_RANGE(0x000000F1L),\n+        CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT(0x000000F2L),\n+        CKR_USER_ALREADY_LOGGED_IN(0x00000100L),\n+        CKR_USER_NOT_LOGGED_IN(0x00000101L),\n+        CKR_USER_PIN_NOT_INITIALIZED(0x00000102L),\n+        CKR_USER_TYPE_INVALID(0x00000103L),\n+        CKR_USER_ANOTHER_ALREADY_LOGGED_IN(0x00000104L),\n+        CKR_USER_TOO_MANY_TYPES(0x00000105L),\n+        CKR_WRAPPED_KEY_INVALID(0x00000110L),\n+        CKR_WRAPPED_KEY_LEN_RANGE(0x00000112L),\n+        CKR_WRAPPING_KEY_HANDLE_INVALID(0x00000113L),\n+        CKR_WRAPPING_KEY_SIZE_RANGE(0x00000114L),\n+        CKR_WRAPPING_KEY_TYPE_INCONSISTENT(0x00000115L),\n+        CKR_RANDOM_SEED_NOT_SUPPORTED(0x00000120L),\n+        CKR_RANDOM_NO_RNG(0x00000121L),\n+        CKR_DOMAIN_PARAMS_INVALID(0x00000130L),\n+        CKR_CURVE_NOT_SUPPORTED(0x00000140L),\n+        CKR_BUFFER_TOO_SMALL(0x00000150L),\n+        CKR_SAVED_STATE_INVALID(0x00000160L),\n+        CKR_INFORMATION_SENSITIVE(0x00000170L),\n+        CKR_STATE_UNSAVEABLE(0x00000180L),\n+        CKR_CRYPTOKI_NOT_INITIALIZED(0x00000190L),\n+        CKR_CRYPTOKI_ALREADY_INITIALIZED(0x00000191L),\n+        CKR_MUTEX_BAD(0x000001A0L),\n+        CKR_MUTEX_NOT_LOCKED(0x000001A1L),\n+        CKR_NEW_PIN_MODE(0x000001B0L),\n+        CKR_NEXT_OTP(0x000001B1L),\n+        CKR_EXCEEDED_MAX_ITERATIONS(0x000001B5L),\n+        CKR_FIPS_SELF_TEST_FAILED(0x000001B6L),\n+        CKR_LIBRARY_LOAD_FAILED(0x000001B7L),\n+        CKR_PIN_TOO_WEAK(0x000001B8L),\n+        CKR_PUBLIC_KEY_INVALID(0x000001B9L),\n+        CKR_FUNCTION_REJECTED(0x00000200L),\n+        CKR_TOKEN_RESOURCE_EXCEEDED(0x00000201L),\n+        CKR_OPERATION_CANCEL_FAILED(0x00000202L),\n+        CKR_VENDOR_DEFINED(0x80000000L);\n@@ -93,102 +205,1 @@\n-    static {\n-        register(\"CKR_OK\", 0x00000000L);\n-        register(\"CKR_CANCEL\", 0x00000001L);\n-        register(\"CKR_HOST_MEMORY\", 0x00000002L);\n-        register(\"CKR_SLOT_ID_INVALID\", 0x00000003L);\n-        register(\"CKR_GENERAL_ERROR\", CKR_GENERAL_ERROR);\n-        register(\"CKR_FUNCTION_FAILED\", 0x00000006L);\n-        register(\"CKR_ARGUMENTS_BAD\", 0x00000007L);\n-        register(\"CKR_NO_EVENT\", 0x00000008L);\n-        register(\"CKR_NEED_TO_CREATE_THREADS\", 0x00000009L);\n-        register(\"CKR_CANT_LOCK\", 0x0000000AL);\n-        register(\"CKR_ATTRIBUTE_READ_ONLY\", 0x00000010L);\n-        register(\"CKR_ATTRIBUTE_SENSITIVE\", 0x00000011L);\n-        register(\"CKR_ATTRIBUTE_TYPE_INVALID\", CKR_ATTRIBUTE_TYPE_INVALID);\n-        register(\"CKR_ATTRIBUTE_VALUE_INVALID\", 0x00000013L);\n-        register(\"CKR_ACTION_PROHIBITED\", 0x0000001BL);\n-        register(\"CKR_DATA_INVALID\", 0x00000020L);\n-        register(\"CKR_DATA_LEN_RANGE\", CKR_DATA_LEN_RANGE);\n-        register(\"CKR_DEVICE_ERROR\", 0x00000030L);\n-        register(\"CKR_DEVICE_MEMORY\", 0x00000031L);\n-        register(\"CKR_DEVICE_REMOVED\", 0x00000032L);\n-        register(\"CKR_ENCRYPTED_DATA_INVALID\", CKR_ENCRYPTED_DATA_INVALID);\n-        register(\"CKR_ENCRYPTED_DATA_LEN_RANGE\", CKR_ENCRYPTED_DATA_LEN_RANGE);\n-        register(\"CKR_AEAD_DECRYPT_FAILED\", 0x00000042L);\n-        register(\"CKR_FUNCTION_CANCELED\", 0x00000050L);\n-        register(\"CKR_FUNCTION_NOT_PARALLEL\", 0x00000051L);\n-        register(\"CKR_FUNCTION_NOT_SUPPORTED\", 0x00000054L);\n-        register(\"CKR_KEY_HANDLE_INVALID\", 0x00000060L);\n-        register(\"CKR_KEY_SIZE_RANGE\", 0x00000062L);\n-        register(\"CKR_KEY_TYPE_INCONSISTENT\", 0x00000063L);\n-        register(\"CKR_KEY_NOT_NEEDED\", 0x00000064L);\n-        register(\"CKR_KEY_CHANGED\", 0x00000065L);\n-        register(\"CKR_KEY_NEEDED\", 0x00000066L);\n-        register(\"CKR_KEY_INDIGESTIBLE\", 0x00000067L);\n-        register(\"CKR_KEY_FUNCTION_NOT_PERMITTED\", 0x00000068L);\n-        register(\"CKR_KEY_NOT_WRAPPABLE\", 0x00000069L);\n-        register(\"CKR_KEY_UNEXTRACTABLE\", 0x0000006AL);\n-        register(\"CKR_MECHANISM_INVALID\", CKR_MECHANISM_INVALID);\n-        register(\"CKR_MECHANISM_PARAM_INVALID\", CKR_MECHANISM_PARAM_INVALID);\n-        register(\"CKR_OBJECT_HANDLE_INVALID\", 0x00000082L);\n-        register(\"CKR_OPERATION_ACTIVE\", 0x00000090L);\n-        register(\"CKR_OPERATION_NOT_INITIALIZED\",\n-                CKR_OPERATION_NOT_INITIALIZED);\n-        register(\"CKR_PIN_INCORRECT\", CKR_PIN_INCORRECT);\n-        register(\"CKR_PIN_INVALID\", 0x000000A1L);\n-        register(\"CKR_PIN_LEN_RANGE\", 0x000000A2L);\n-        register(\"CKR_PIN_EXPIRED\", 0x000000A3L);\n-        register(\"CKR_PIN_LOCKED\", 0x000000A4L);\n-        register(\"CKR_SESSION_CLOSED\", 0x000000B0L);\n-        register(\"CKR_SESSION_COUNT\", 0x000000B1L);\n-        register(\"CKR_SESSION_HANDLE_INVALID\", 0x000000B3L);\n-        register(\"CKR_SESSION_PARALLEL_NOT_SUPPORTED\", 0x000000B4L);\n-        register(\"CKR_SESSION_READ_ONLY\", 0x000000B5L);\n-        register(\"CKR_SESSION_EXISTS\", 0x000000B6L);\n-        register(\"CKR_SESSION_READ_ONLY_EXISTS\", 0x000000B7L);\n-        register(\"CKR_SESSION_READ_WRITE_SO_EXISTS\", 0x000000B8L);\n-        register(\"CKR_SIGNATURE_INVALID\", CKR_SIGNATURE_INVALID);\n-        register(\"CKR_SIGNATURE_LEN_RANGE\", CKR_SIGNATURE_LEN_RANGE);\n-        register(\"CKR_TEMPLATE_INCOMPLETE\", 0x000000D0L);\n-        register(\"CKR_TEMPLATE_INCONSISTENT\", 0x000000D1L);\n-        register(\"CKR_TOKEN_NOT_PRESENT\", 0x000000E0L);\n-        register(\"CKR_TOKEN_NOT_RECOGNIZED\", 0x000000E1L);\n-        register(\"CKR_TOKEN_WRITE_PROTECTED\", 0x000000E2L);\n-        register(\"CKR_UNWRAPPING_KEY_HANDLE_INVALID\", 0x000000F0L);\n-        register(\"CKR_UNWRAPPING_KEY_SIZE_RANGE\", 0x000000F1L);\n-        register(\"CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT\", 0x000000F2L);\n-        register(\"CKR_USER_ALREADY_LOGGED_IN\", CKR_USER_ALREADY_LOGGED_IN);\n-        register(\"CKR_USER_NOT_LOGGED_IN\", CKR_USER_NOT_LOGGED_IN);\n-        register(\"CKR_USER_PIN_NOT_INITIALIZED\", 0x00000102L);\n-        register(\"CKR_USER_TYPE_INVALID\", 0x00000103L);\n-        register(\"CKR_USER_ANOTHER_ALREADY_LOGGED_IN\", 0x00000104L);\n-        register(\"CKR_USER_TOO_MANY_TYPES\", 0x00000105L);\n-        register(\"CKR_WRAPPED_KEY_INVALID\", 0x00000110L);\n-        register(\"CKR_WRAPPED_KEY_LEN_RANGE\", 0x00000112L);\n-        register(\"CKR_WRAPPING_KEY_HANDLE_INVALID\", 0x00000113L);\n-        register(\"CKR_WRAPPING_KEY_SIZE_RANGE\", 0x00000114L);\n-        register(\"CKR_WRAPPING_KEY_TYPE_INCONSISTENT\", 0x00000115L);\n-        register(\"CKR_RANDOM_SEED_NOT_SUPPORTED\", 0x00000120L);\n-        register(\"CKR_RANDOM_NO_RNG\", 0x00000121L);\n-        register(\"CKR_DOMAIN_PARAMS_INVALID\", 0x00000130L);\n-        register(\"CKR_CURVE_NOT_SUPPORTED\", 0x00000140L);\n-        register(\"CKR_BUFFER_TOO_SMALL\", CKR_BUFFER_TOO_SMALL);\n-        register(\"CKR_SAVED_STATE_INVALID\", 0x00000160L);\n-        register(\"CKR_INFORMATION_SENSITIVE\", 0x00000170L);\n-        register(\"CKR_STATE_UNSAVEABLE\", 0x00000180L);\n-        register(\"CKR_CRYPTOKI_NOT_INITIALIZED\", 0x00000190L);\n-        register(\"CKR_CRYPTOKI_ALREADY_INITIALIZED\",\n-                CKR_CRYPTOKI_ALREADY_INITIALIZED);\n-        register(\"CKR_MUTEX_BAD\", 0x000001A0L);\n-        register(\"CKR_MUTEX_NOT_LOCKED\", 0x000001A1L);\n-        register(\"CKR_NEW_PIN_MODE\", 0x000001B0L);\n-        register(\"CKR_NEXT_OTP\", 0x000001B1L);\n-        register(\"CKR_EXCEEDED_MAX_ITERATIONS\", 0x000001B5L);\n-        register(\"CKR_FIPS_SELF_TEST_FAILED\", 0x000001B6L);\n-        register(\"CKR_LIBRARY_LOAD_FAILED\", 0x000001B7L);\n-        register(\"CKR_PIN_TOO_WEAK\", 0x000001B8L);\n-        register(\"CKR_PUBLIC_KEY_INVALID\", 0x000001B9L);\n-        register(\"CKR_FUNCTION_REJECTED\", 0x00000200L);\n-        register(\"CKR_TOKEN_RESOURCE_EXCEEDED\", 0x00000201L);\n-        register(\"CKR_OPERATION_CANCEL_FAILED\", 0x00000202L);\n-        register(\"CKR_VENDOR_DEFINED\", 0x80000000L);\n-    };\n+        private final long value;\n@@ -196,3 +207,7 @@\n-    private static void register(String name, long errorCode) {\n-        errorMap.put(errorCode, name);\n-    }\n+        RV(long value) {\n+            this.value = value;\n+        }\n+        long value() {\n+            return value;\n+        }\n+    };\n@@ -201,5 +216,4 @@\n-        String res = errorMap.get(errorCode);\n-        \/\/ for unknown PKCS11 return values, just use hex as its string\n-        if (res == null) {\n-            res = \"0x\" + Functions.toFullHexString((int)errorCode);\n-            errorMap.put(errorCode, res);\n+        for (RV r : RV.values()) {\n+            if (r.value() == errorCode) {\n+                return r.name();\n+            }\n@@ -207,1 +221,2 @@\n-        return res;\n+        \/\/ for unknown PKCS11 return values, just use hex as its string\n+        return \"0x\" + Functions.toFullHexString((int)errorCode);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11Exception.java","additions":142,"deletions":127,"binary":false,"changes":269,"status":"modified"}]}