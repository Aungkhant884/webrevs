{"files":[{"patch":"@@ -328,3 +328,1 @@\n-        byte[] result = cw.toByteArray();\n-        Utils.writeGeneratedASM(classNode.name, result);\n-        return result;\n+        return cw.toByteArray();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventInstrumentation.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,2 +82,0 @@\n-    private static Boolean SAVE_GENERATED;\n-\n@@ -517,25 +515,0 @@\n-    public static void writeGeneratedASM(String className, byte[] bytes) {\n-        if (SAVE_GENERATED == null) {\n-            \/\/ We can't calculate value statically because it will force\n-            \/\/ initialization of SecuritySupport, which cause\n-            \/\/ UnsatisfiedLinkedError on JDK 8 or non-Oracle JDKs\n-            SAVE_GENERATED = SecuritySupport.getBooleanProperty(\"jfr.save.generated.asm\");\n-        }\n-        if (SAVE_GENERATED) {\n-            className = className.substring(className.lastIndexOf(\"\/\") + 1, className.length());\n-            try {\n-                try (FileOutputStream fos = new FileOutputStream(className + \".class\")) {\n-                    fos.write(bytes);\n-                }\n-\n-                try (FileWriter fw = new FileWriter(className + \".asm\"); PrintWriter pw = new PrintWriter(fw)) {\n-                    ClassReader cr = new ClassReader(bytes);\n-                    CheckClassAdapter.verify(cr, true, pw);\n-                }\n-                Logger.log(LogTag.JFR_SYSTEM_BYTECODE, LogLevel.INFO, \"Instrumented code saved to \" + className + \".class and .asm\");\n-            } catch (IOException e) {\n-                Logger.log(LogTag.JFR_SYSTEM_BYTECODE, LogLevel.INFO, \"Could not save instrumented code, for \" + className + \".class and .asm\");\n-            }\n-        }\n-    }\n-\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Utils.java","additions":0,"deletions":27,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-import jdk.jfr.internal.Utils;\n@@ -75,1 +74,0 @@\n-        Utils.writeGeneratedASM(target.getName(), newBytes);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/instrument\/JIClassInstrumentation.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}