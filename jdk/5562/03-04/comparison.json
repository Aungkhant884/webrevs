{"files":[{"patch":"@@ -5159,3 +5159,3 @@\n-  for (int i = 0; i < VM_Version::pause_impl_desc().inst_count(); ++i) {\n-    switch (VM_Version::pause_impl_desc().inst()) {\n-      case NOP:\n+  for (int i = 0; i < VM_Version::spin_wait_desc().inst_count(); ++i) {\n+    switch (VM_Version::spin_wait_desc().inst()) {\n+      case SpinWait::NOP:\n@@ -5164,1 +5164,1 @@\n-      case ISB:\n+      case SpinWait::ISB:\n@@ -5167,1 +5167,1 @@\n-      case YIELD:\n+      case SpinWait::YIELD:\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,2 +25,2 @@\n-#ifndef CPU_AARCH64_PAUSE_AARCH64_HPP\n-#define CPU_AARCH64_PAUSE_AARCH64_HPP\n+#ifndef CPU_AARCH64_SPIN_WAIT_AARCH64_HPP\n+#define CPU_AARCH64_SPIN_WAIT_AARCH64_HPP\n@@ -28,6 +28,8 @@\n-enum PauseInst {\n-  NONE = -1,\n-  NOP,\n-  ISB,\n-  YIELD\n-};\n+class SpinWait {\n+public:\n+  enum Inst {\n+    NONE = -1,\n+    NOP,\n+    ISB,\n+    YIELD\n+  };\n@@ -35,1 +37,0 @@\n-class PauseImplDesc {\n@@ -37,1 +38,1 @@\n-  PauseInst _inst;\n+  Inst _inst;\n@@ -41,1 +42,1 @@\n-  PauseImplDesc(PauseInst inst = NONE, unsigned int count = 0) : _inst(inst), _count(count) {}\n+  SpinWait(Inst inst = NONE, int count = 0) : _inst(inst), _count(count) {}\n@@ -43,1 +44,1 @@\n-  PauseInst inst() const { return _inst; }\n+  Inst inst() const { return _inst; }\n@@ -47,1 +48,1 @@\n-#endif \/\/ CPU_AARCH64_PAUSE_AARCH64_HPP\n+#endif \/\/ CPU_AARCH64_SPIN_WAIT_AARCH64_HPP\n","filename":"src\/hotspot\/cpu\/aarch64\/pause_aarch64.hpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-PauseImplDesc VM_Version::_pause_impl_desc;\n+SpinWait VM_Version::_spin_wait;\n@@ -51,1 +51,1 @@\n-static PauseImplDesc get_pause_impl_desc() {\n+static SpinWait get_spin_wait_desc() {\n@@ -62,1 +62,1 @@\n-    return PauseImplDesc(NOP, count);\n+    return SpinWait(SpinWait::NOP, count);\n@@ -64,1 +64,1 @@\n-    return PauseImplDesc(ISB, count);\n+    return SpinWait(SpinWait::ISB, count);\n@@ -66,1 +66,1 @@\n-    return PauseImplDesc(YIELD, count);\n+    return SpinWait(SpinWait::YIELD, count);\n@@ -71,1 +71,1 @@\n-  return PauseImplDesc{};\n+  return SpinWait{};\n@@ -476,1 +476,1 @@\n-  _pause_impl_desc = get_pause_impl_desc();\n+  _spin_wait = get_spin_wait_desc();\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-  static PauseImplDesc _pause_impl_desc;\n+  static SpinWait _spin_wait;\n@@ -148,1 +148,1 @@\n-  static const PauseImplDesc& pause_impl_desc() { return _pause_impl_desc; }\n+  static const SpinWait& spin_wait_desc() { return _spin_wait; }\n@@ -150,1 +150,1 @@\n-  static bool supports_on_spin_wait() { return _pause_impl_desc.inst() != NONE; }\n+  static bool supports_on_spin_wait() { return _spin_wait.inst() != SpinWait::NONE; }\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,2 +52,2 @@\n-        String pauseImplInstCount = args[1];\n-        String pauseImplInst = args[2];\n+        String spinWaitInstCount = args[1];\n+        String spinWaitInst = args[2];\n@@ -69,1 +69,1 @@\n-        command.add(\"-XX:OnSpinWaitImpl=\" + pauseImplInstCount + pauseImplInst);\n+        command.add(\"-XX:OnSpinWaitImpl=\" + spinWaitInstCount + spinWaitInst);\n@@ -81,1 +81,1 @@\n-        checkOutput(analyzer, getPauseImplInstHex(pauseImplInst), Integer.parseInt(pauseImplInstCount));\n+        checkOutput(analyzer, getSpinWaitInstHex(spinWaitInst), Integer.parseInt(spinWaitInstCount));\n@@ -84,2 +84,2 @@\n-    private static String getPauseImplInstHex(String pauseImplInst) {\n-      if (\"nop\".equals(pauseImplInst)) {\n+    private static String getSpinWaitInstHex(String spinWaitInst) {\n+      if (\"nop\".equals(spinWaitInst)) {\n@@ -87,1 +87,1 @@\n-      } else if (\"isb\".equals(pauseImplInst)) {\n+      } else if (\"isb\".equals(spinWaitInst)) {\n@@ -89,1 +89,1 @@\n-      } else if (\"yield\".equals(pauseImplInst)) {\n+      } else if (\"yield\".equals(spinWaitInst)) {\n@@ -92,1 +92,1 @@\n-          throw new RuntimeException(\"Unknown pause implementation: \" + pauseImplInst);\n+          throw new RuntimeException(\"Unknown spin wait instruction: \" + spinWaitInst);\n@@ -102,1 +102,1 @@\n-    \/\/ The expected output of PrintAssembly for example for a pause spin with three NOPs:\n+    \/\/ The expected output of PrintAssembly for example for a spin wait with three NOPs:\n@@ -113,2 +113,2 @@\n-    \/\/ it to a list. The list is traversed from the end to count spin pause instructions.\n-    private static void checkOutput(OutputAnalyzer output, String pauseImplInstHex, int pauseImplInstCount) {\n+    \/\/ it to a list. The list is traversed from the end to count spin wait instructions.\n+    private static void checkOutput(OutputAnalyzer output, String spinWaitInstHex, int spinWaitInstCount) {\n@@ -148,1 +148,1 @@\n-            if (instrReverseIter.previous().endsWith(pauseImplInstHex)) {\n+            if (instrReverseIter.previous().endsWith(spinWaitInstHex)) {\n@@ -155,1 +155,1 @@\n-            if (!instrReverseIter.previous().endsWith(pauseImplInstHex)) {\n+            if (!instrReverseIter.previous().endsWith(spinWaitInstHex)) {\n@@ -161,2 +161,2 @@\n-        if (foundInstCount != pauseImplInstCount) {\n-            throw new RuntimeException(\"Wrong instruction \" + pauseImplInstHex + \" count \" + foundInstCount + \"!\\n  -- expecting \" + pauseImplInstCount);\n+        if (foundInstCount != spinWaitInstCount) {\n+            throw new RuntimeException(\"Wrong instruction \" + spinWaitInstHex + \" count \" + foundInstCount + \"!\\n  -- expecting \" + spinWaitInstCount);\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitImplAArch64.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}