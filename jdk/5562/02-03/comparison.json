{"files":[{"patch":"@@ -5157,0 +5157,18 @@\n+\n+void MacroAssembler::spin_wait() {\n+  for (int i = 0; i < VM_Version::pause_impl_desc().inst_count(); ++i) {\n+    switch (VM_Version::pause_impl_desc().inst()) {\n+      case NOP:\n+        nop();\n+        break;\n+      case ISB:\n+        isb();\n+        break;\n+      case YIELD:\n+        yield();\n+        break;\n+      default:\n+        ShouldNotReachHere();\n+    }\n+  }\n+}\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1384,19 +1384,1 @@\n-  void spin_wait() {\n-#define EMIT_N_INST(n, inst) for (int i = 0; i < (n); ++i) inst()\n-\n-    int inst_count = VM_Version::pause_impl_desc().inst_count();\n-    switch (VM_Version::pause_impl_desc().inst()) {\n-      case NOP:\n-        EMIT_N_INST(inst_count, nop);\n-        break;\n-      case ISB:\n-        EMIT_N_INST(inst_count, isb);\n-        break;\n-      case YIELD:\n-        EMIT_N_INST(inst_count, yield);\n-        break;\n-      default:\n-        ShouldNotReachHere();\n-    }\n-#undef EMIT_N_INST\n-  }\n+  void spin_wait();\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -102,0 +102,12 @@\n+    \/\/ The expected output of PrintAssembly for example for a pause spin with three NOPs:\n+    \/\/\n+    \/\/ # {method} {0x0000ffff6ac00370} 'test' '()V' in 'compiler\/onSpinWait\/TestOnSpinWaitImplAArch64$Launcher'\n+    \/\/ #           [sp+0x40]  (sp of caller)\n+    \/\/ 0x0000ffff9d557680: 1f20 03d5 | e953 40d1 | 3f01 00f9 | ff03 01d1 | fd7b 03a9 | 1f20 03d5 | 1f20 03d5\n+    \/\/\n+    \/\/ 0x0000ffff9d5576ac: ;*invokestatic onSpinWait {reexecute=0 rethrow=0 return_oop=0}\n+    \/\/                     ; - compiler.onSpinWait.TestOnSpinWaitImplAArch64$Launcher::test@0 (line 161)\n+    \/\/ 0x0000ffff9d5576ac: 1f20 03d5 | fd7b 43a9 | ff03 0191\n+    \/\/\n+    \/\/ The checkOutput method adds hex instructions before 'invokestatic onSpinWait' and from the line after\n+    \/\/ it to a list. The list is traversed from the end to count spin pause instructions.\n","filename":"test\/hotspot\/jtreg\/compiler\/onSpinWait\/TestOnSpinWaitImplAArch64.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}