{"files":[{"patch":"@@ -128,2 +128,0 @@\n-vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021\/TestDescription.java 8065773 generic-all\n-vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses023\/TestDescription.java 8065773 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,4 +51,2 @@\n- *    1. newclass01 - adding <code>public<\/code> interface-modifier                 <br>\n- *    2. newclass02 - adding <code>protected<\/code> interface-modifier              <br>\n- *    3. newclass03 - adding <code>private<\/code> interface-modifier                <br>\n- *    4. newclass04 - adding <code>static<\/code> interface-modifier                 <br>\n+ *    1. newclass01 - adding <code>public<\/code> interface-modifier             <br>\n+ *    1. newclass01 - removing <code>public<\/code> interface-modifier             <br>\n@@ -69,1 +67,0 @@\n-    public  final static String testedClassName = debuggerName + \"b$redefineclasses021bi\";\n@@ -72,4 +69,2 @@\n-            {\"newclass01\",\"adding <public> interface-modifier\"},\n-            {\"newclass02\",\"adding <protected> interface-modifier\"},\n-            {\"newclass03\",\"adding <private> interface-modifier\"},\n-            {\"newclass04\",\"adding <static> interface-modifier\"}\n+        {\"newclass01\",\"adding <public> interface-modifier\", debuggerName + \"b$redefineclasses021bi\"},\n+        {\"newclass02\",\"removing <public> interface-modifier\", debuggerName + \"b$redefineclasses021bir\"},\n@@ -78,1 +73,2 @@\n-    private final static String newClassFile = File.separator\n+    private final static String newClassFile(String testedClassName) {\n+        return File.separator\n@@ -81,2 +77,4 @@\n-    private final static String oldClassFile\n-            = ClassFileFinder.findClassFile(testedClassName, Utils.TEST_CLASS_PATH)\n+    }\n+\n+    private final static String oldClassFile(String testedClassName) {\n+        return ClassFileFinder.findClassFile(testedClassName, Utils.TEST_CLASS_PATH)\n@@ -84,0 +82,2 @@\n+    }\n+\n@@ -92,2 +92,0 @@\n-    private ReferenceType testedClass;\n-\n@@ -143,3 +141,0 @@\n-        testedClass = debugee.classByName(testedClassName);\n-        display(typePrompt(testedClass) + \"\\t:\" + testedClass.name());\n-\n@@ -165,0 +160,5 @@\n+\n+            String testedClassName = subDirs[i][2];\n+            ReferenceType testedClass = debugee.classByName(testedClassName);\n+            display(typePrompt(testedClass) + \"\\t:\" + testedClass.name());\n+\n@@ -166,1 +166,1 @@\n-            mapBytes = mapClassToBytes(testDir + File.separator + subDirs [i][0] + newClassFile);\n+            mapBytes = mapClassToBytes(testedClass, testDir + File.separator + subDirs [i][0] + newClassFile(testedClassName));\n@@ -169,27 +169,1 @@\n-                if (i < 3) {\n-                    if (!debugee.VM().canUnrestrictedlyRedefineClasses()) {\n-                        exitStatus = Consts.TEST_FAILED;\n-                        if (!alreadyComplained) {\n-                            alreadyComplained = true;\n-                            complain(\"***\" + dashes);\n-                            complain(\"***\" + statDebugee);\n-                            complain(\"***\" + dashes);\n-                        }\n-                        complain(\"***UnsupportedOperationException is not thrown\");\n-                        complain(\"***\\twhile \" + subDirs[i][1]);\n-\n-                        display(\">return to the previous state...\");\n-                        mapBytes = mapClassToBytes(oldClassFile);\n-                        try {\n-                            debugee.VM().redefineClasses(mapBytes);\n-                        } catch (Exception e) {\n-                            throw new Failure(UNEXPECTED_STRING + e);\n-                        }\n-                    }\n-                } else {\n-                    display(\"!!!No exception is thrown!!! Member interfaces are always implicitly static\");\n-                }\n-            } catch (UnsupportedOperationException e) {\n-                if (i == 3) {\n-                    complain(statDebugee + UNEXPECTED_STRING\n-                                + \"UnsupportedOperationException\");\n+                if (!debugee.VM().canUnrestrictedlyRedefineClasses()) {\n@@ -197,14 +171,15 @@\n-                } else {\n-                    if (!debugee.VM().canUnrestrictedlyRedefineClasses()) {\n-                        display(EXPECTED_STRING + e);\n-                    } else {\n-                        exitStatus = Consts.TEST_FAILED;\n-                        if (!alreadyComplained) {\n-                            alreadyComplained = true;\n-                            complain(\"***\" + dashes);\n-                            complain(\"***\" + statDebugee);\n-                            complain(\"***\" + dashes);\n-                        }\n-                        complain(statDebugee + UNEXPECTED_STRING\n-                                    + \"UnsupportedOperationException\");\n-                        complain(\"***\\twhile \" + subDirs[i][1]);\n+                    if (!alreadyComplained) {\n+                        alreadyComplained = true;\n+                        complain(\"***\" + dashes);\n+                        complain(\"***\" + statDebugee);\n+                        complain(\"***\" + dashes);\n+                    }\n+                    complain(\"***UnsupportedOperationException is not thrown\");\n+                    complain(\"***\\twhile \" + subDirs[i][1]);\n+\n+                    display(\">return to the previous state...\");\n+                    mapBytes = mapClassToBytes(testedClass, oldClassFile(testedClassName));\n+                    try {\n+                        debugee.VM().redefineClasses(mapBytes);\n+                    } catch (Exception e) {\n+                        throw new Failure(UNEXPECTED_STRING + e);\n@@ -213,0 +188,2 @@\n+            } catch (UnsupportedOperationException e) {\n+                display(EXPECTED_STRING + e);\n@@ -219,1 +196,1 @@\n-    private Map<? extends com.sun.jdi.ReferenceType,byte[]> mapClassToBytes(String fileName) {\n+    private Map<? extends com.sun.jdi.ReferenceType,byte[]> mapClassToBytes(ReferenceType testedClass, String fileName) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021.java","additions":38,"deletions":61,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,3 +44,1 @@\n- *      2. newclass02 - adding <protected> interface-modifier\n- *      3. newclass03 - adding <private> interface-modifier\n- *      4. newclass04 - adding <static> interface-modifier\n+ *      2. newclass02 - removing <public> interface-modifier\n@@ -60,3 +58,1 @@\n- * @run driver nsk.share.ExtraClassesBuilder\n- *      -g:lines,source,vars\n- *      newclass01 newclass02 newclass03 newclass04\n+ * @run driver nsk.share.ExtraClassesBuilder -g:lines,source,vars newclass01 newclass02\n@@ -74,1 +70,0 @@\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021\/TestDescription.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,0 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n@@ -45,1 +41,6 @@\n-    class redefineclasses021bc implements redefineclasses021bi {\n+    public interface redefineclasses021bir {\n+        void dummyMethod01();\n+\n+    }\n+\n+    class redefineclasses021bc implements redefineclasses021bi, redefineclasses021bir {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021\/newclass01\/redefineclasses021b.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,1 @@\n-    protected interface redefineclasses021bi {\n-\/\/  ^^^^^^^^^\n+    interface redefineclasses021bi {\n@@ -45,1 +44,7 @@\n-    class redefineclasses021bc implements redefineclasses021bi {\n+    \/* public *\/ interface redefineclasses021bir {\n+ \/\/^^^^^^^^\n+        void dummyMethod01();\n+\n+    }\n+\n+    class redefineclasses021bc implements redefineclasses021bi, redefineclasses021bir {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021\/newclass02\/redefineclasses021b.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package nsk.jdi.VirtualMachine.redefineClasses;\n-\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n-\/**\n- *  <code>redefineclasses021b<\/code> is deugee's part of the redefineclasses021.\n- *  adding <code>private<\/code> modifier\n- *\/\n-\n-public class redefineclasses021b {\n-\n-    redefineclasses021bc obj = new redefineclasses021bc();\n-\n-    private interface redefineclasses021bi {\n-\/\/  ^^^^^^^\n-        void dummyMethod01();\n-\n-    }\n-\n-    class redefineclasses021bc implements redefineclasses021bi {\n-\n-        public void dummyMethod01() {\n-        }\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021\/newclass03\/redefineclasses021b.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package nsk.jdi.VirtualMachine.redefineClasses;\n-\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n-\/**\n- *  <code>redefineclasses021b<\/code> is deugee's part of the redefineclasses021.\n- *  adding <code>static<\/code> modifier\n- *\/\n-\n-public class redefineclasses021b {\n-\n-    redefineclasses021bc obj = new redefineclasses021bc();\n-\n-    static interface redefineclasses021bi {\n-\/\/  ^^^^^^\n-        void dummyMethod01();\n-\n-    }\n-\n-    class redefineclasses021bc implements redefineclasses021bi {\n-\n-        public void dummyMethod01() {\n-        }\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021\/newclass04\/redefineclasses021b.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,0 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n@@ -45,1 +41,8 @@\n-    class redefineclasses021bc implements redefineclasses021bi {\n+    public interface redefineclasses021bir {\n+\n+\n+        void dummyMethod01();\n+\n+    }\n+\n+    class redefineclasses021bc implements redefineclasses021bi, redefineclasses021bir {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses021b.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,255 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package nsk.jdi.VirtualMachine.redefineClasses;\n-\n-import jdk.test.lib.Utils;\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n-import com.sun.jdi.*;\n-import com.sun.jdi.request.*;\n-import com.sun.jdi.event.*;\n-\n-import java.util.*;\n-import java.io.*;\n-\n-\/**\n- * The test against the method <code>com.sun.jdi.VirtualMachine.redefineClasses()<\/code>\n- * and checks up the following assertion:                                       <br>\n- *   \"If <code>canUnrestrictedlyRedefineClasses()<\/code> is <code>false<\/code> attempting\n- *    to change a class modifiers will throw <code>UnsupportedOperationException<\/code>\n- *    exception.\"\n- *\n- * The test consists of the following files:                                    <br>\n- *     <code>redefineclasses023.java<\/code>             - debugger              <br>\n- *     <code>redefineclasses023a.java<\/code>            - initial debuggee      <br>\n- *     <code>newclassXX\/redefineclasses023a.java<\/code> - redefining debuggees  <br>\n- *\n- * This test performs the following cases:                                      <br>\n- *    1. newclass01 - changing <public> class-modifier to <protected>           <br>\n- *    2. newclass02 - changing <public> class-modifier to <private>             <br>\n- *    3. newclass03 - changing <public> class-modifier to <private package>     <br>\n- * The test checks two different cases for suspended debugee and not\n- * suspended one.\n- * When <code>canRedefineClasses()<\/code> is <code>false<\/code>, the test is\n- * considered as passed and completes it's execution.\n- *\/\n-\n-public class redefineclasses023 {\n-\n-    public final static String UNEXPECTED_STRING = \"***Unexpected exception \";\n-    public final static String EXPECTED_STRING = \"!!!Expected exception \";\n-\n-    private final static String prefix = \"nsk.jdi.VirtualMachine.redefineClasses.\";\n-    private final static String debuggerName = prefix + \"redefineclasses023\";\n-    private final static String debugeeName = debuggerName + \"a\";\n-    public  final static String testedClassName = debuggerName + \"b$redefineclasses023bi\";\n-\n-    private final static String[][] subDirs = {\n-            {\"newclass01\",\"changing <public> class-modifier to <protected>\"},\n-            {\"newclass02\",\"changing <public> class-modifier to <private>\"},\n-            {\"newclass03\",\"changing <public> class-modifier to <private package>\"}\n-    };\n-\n-    private final static String newClassFile = File.separator\n-                    + testedClassName.replace('.',File.separatorChar)\n-                    + \".class\";\n-    private final static String oldClassFile\n-            = ClassFileFinder.findClassFile(testedClassName, Utils.TEST_CLASS_PATH)\n-                             .toString();\n-    private static final String dashes = \"--------------------------\";\n-\n-    private static int exitStatus;\n-    private static Log log;\n-    private static Debugee debugee;\n-    private static String testDir;\n-    private static String statDebugee;\n-\n-    private ReferenceType testedClass;\n-\n-    private static void display(String msg) {\n-        log.display(msg);\n-    }\n-\n-    private static void complain(String msg) {\n-        log.complain(\"debugger FAILURE> \" + msg + \"\\n\");\n-    }\n-\n-    public static void main(String argv[]) {\n-        System.exit(Consts.JCK_STATUS_BASE + run(argv, System.out));\n-    }\n-\n-    public static int run(String argv[], PrintStream out) {\n-\n-        exitStatus = Consts.TEST_PASSED;\n-\n-        redefineclasses023 thisTest = new redefineclasses023();\n-\n-        ArgumentHandler argHandler = new ArgumentHandler(argv);\n-        log = new Log(out, argHandler);\n-\n-        testDir = argv[0];\n-\n-        debugee = Debugee.prepareDebugee(argHandler, log, debugeeName);\n-\n-        try {\n-            thisTest.execTest();\n-        } catch (TestBug e) {\n-            exitStatus = Consts.TEST_FAILED;\n-            e.printStackTrace();\n-        } catch (Exception e) {\n-            exitStatus = Consts.TEST_FAILED;\n-            e.printStackTrace();\n-        } finally {\n-            debugee.resume();\n-            debugee.quit();\n-        }\n-        display(\"Test finished. exitStatus = \" + exitStatus);\n-\n-        return exitStatus;\n-    }\n-\n-    private void execTest() throws TestBug {\n-\n-        if (!debugee.VM().canRedefineClasses()) {\n-            display(\"\\n>>>canRedefineClasses() is false<<< test canceled.\\n\");\n-            return;\n-        }\n-\n-        testedClass = debugee.classByName(testedClassName);\n-        display(typePrompt(testedClass) + \"\\t:\" + testedClass.name());\n-\n-        display(\"\\nTEST BEGINS\");\n-        display(\"===========\");\n-\n-        debugee.VM().suspend();\n-        displayVMStatus();\n-        performCases();\n-\n-        debugee.resume();\n-        displayVMStatus();\n-        performCases();\n-\n-        display(\"\\n=============\");\n-        display(\"TEST FINISHES\\n\");\n-    }\n-\n-    private void performCases() {\n-        Map<? extends com.sun.jdi.ReferenceType,byte[]> mapBytes;\n-        boolean alreadyComplained = false;\n-        for (int i = 0; i < subDirs.length; i++) {\n-            display(\"\\n\" + subDirs[i][1] + \">>>\");\n-            mapBytes = mapClassToBytes(testDir + File.separator + subDirs [i][0] + newClassFile);\n-            try {\n-                debugee.VM().redefineClasses(mapBytes);\n-                if (!debugee.VM().canUnrestrictedlyRedefineClasses()) {\n-                    exitStatus = Consts.TEST_FAILED;\n-                    if (!alreadyComplained) {\n-                        alreadyComplained = true;\n-                        complain(\"***\" + dashes);\n-                        complain(\"***\" + statDebugee);\n-                        complain(\"***\" + dashes);\n-                    }\n-                    complain(\"***UnsupportedOperationException is not thrown\");\n-                    complain(\"***\\twhile \" + subDirs[i][1]);\n-\n-                    display(\">return to the previous state...\");\n-                    mapBytes = mapClassToBytes(oldClassFile);\n-                    try {\n-                        debugee.VM().redefineClasses(mapBytes);\n-                    } catch (Exception e) {\n-                        throw new TestBug(UNEXPECTED_STRING + e);\n-                    }\n-                }\n-            } catch (UnsupportedOperationException e) {\n-                if (!debugee.VM().canUnrestrictedlyRedefineClasses()) {\n-                    display(EXPECTED_STRING + e);\n-                } else {\n-                    exitStatus = Consts.TEST_FAILED;\n-                    if (!alreadyComplained) {\n-                        alreadyComplained = true;\n-                        complain(\"***\" + dashes);\n-                        complain(\"***\" + statDebugee);\n-                        complain(\"***\" + dashes);\n-                    }\n-                    complain(statDebugee + UNEXPECTED_STRING\n-                                + \"UnsupportedOperationException\");\n-                    complain(\"***\\twhile \" + subDirs[i][1]);\n-                }\n-            } catch (Exception e) {\n-                throw new TestBug(UNEXPECTED_STRING + e);\n-            }\n-        }\n-    }\n-\n-    private Map<? extends com.sun.jdi.ReferenceType,byte[]> mapClassToBytes(String fileName) {\n-        display(\"class-file\\t:\" + fileName);\n-        File fileToBeRedefined = new File(fileName);\n-        int fileToRedefineLength = (int )fileToBeRedefined.length();\n-        byte[] arrayToRedefine = new byte[fileToRedefineLength];\n-\n-        FileInputStream inputFile;\n-        try {\n-            inputFile = new FileInputStream(fileToBeRedefined);\n-        } catch (FileNotFoundException e) {\n-            throw new TestBug(UNEXPECTED_STRING + e);\n-        }\n-\n-        try {\n-            inputFile.read(arrayToRedefine);\n-            inputFile.close();\n-        } catch (IOException e) {\n-            throw new TestBug(UNEXPECTED_STRING + e);\n-        }\n-        HashMap<com.sun.jdi.ReferenceType,byte[]> mapForClass = new HashMap<com.sun.jdi.ReferenceType,byte[]>();\n-        mapForClass.put(testedClass, arrayToRedefine);\n-        return mapForClass;\n-    }\n-\n-    private String typePrompt(ReferenceType refType) {\n-        String msg = \"Tested \";\n-        if (refType instanceof InterfaceType) {\n-            msg += \"interface\";\n-        } else if (refType instanceof ClassType) {\n-            msg += \"class\";\n-        } else {\n-            msg += \"type\";\n-        }\n-        return msg;\n-    }\n-\n-    void displayVMStatus() {\n-        ThreadReference thrd = debugee.threadByName(\"main\");\n-        if (thrd.isSuspended()) {\n-            statDebugee = \"Debugee is suspended\";\n-            display(\"\\n\\n<<<\" + statDebugee + \">>>\");\n-            display(dashes);\n-        } else {\n-            statDebugee = \"Debugee is not suspended\";\n-            display(\"\\n\\n<<<\" + statDebugee + \">>>\");\n-            display(\"------------------------------\");\n-        }\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses023.java","additions":0,"deletions":255,"binary":false,"changes":255,"status":"deleted"},{"patch":"@@ -1,71 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses023.\n- * VM Testbase keywords: [jpda, jdi, redefine, quarantine]\n- * VM Testbase comments: 8065773\n- * VM Testbase readme:\n- * DESCRIPTION:\n- *     The test against the method com.sun.jdi.VirtualMachine.redefineClasses()\n- *     and checks up the following assertion:\n- *        \"If canUnrestrictedlyRedefineClasses() is false, changing class\n- *        modifiers will throw UnsupportedOperationException exception\"\n- *     The test consists of the following files:\n- *         redefineclasses023.java             - debugger\n- *         redefineclasses023a.java            - debuggee\n- *         redefineclasses023b.java            - an initial redefined class\n- *         newclassXX\/redefineclasses023b.java - redefining debuggee's class\n- *     This test performs the following cases:\n- *      1. newclass01 - changing <public> class-modifier to <protected>\n- *      2. newclass02 - changing <public> class-modifier to <private>\n- *      3. newclass03 - changing <public> class-modifier to <private package>\n- *     The test checks two different cases for suspended debugee and not\n- *     suspended one.\n- * COMMENTS:\n- *\n- * @library \/vmTestbase\n- *          \/test\/lib\n- * @build nsk.jdi.VirtualMachine.redefineClasses.redefineclasses023\n- *        nsk.jdi.VirtualMachine.redefineClasses.redefineclasses023a\n- *\n- * @comment compile newclassXX to bin\/newclassXX\n- *          with full debug info\n- * @run driver nsk.share.ExtraClassesBuilder\n- *      -g:lines,source,vars\n- *      newclass01 newclass02 newclass03\n- *\n- * @run main\/othervm\n- *      nsk.jdi.VirtualMachine.redefineClasses.redefineclasses023\n- *      .\/bin\n- *      -verbose\n- *      -arch=${os.family}-${os.simpleArch}\n- *      -waittime=5\n- *      -debugee.vmkind=java\n- *      -transport.address=dynamic\n- *      -debugee.vmkeys=\"${test.vm.opts} ${test.java.opts}\"\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses023\/TestDescription.java","additions":0,"deletions":71,"binary":false,"changes":71,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package nsk.jdi.VirtualMachine.redefineClasses;\n-\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n-\/**\n- *  <code>redefineclasses023b<\/code> is deugee's part of the redefineclasses023.\n- *  changing <public> class-modifier to <protected>\n- *\/\n-\n-public class redefineclasses023b {\n-\n-    redefineclasses023bc obj = new redefineclasses023bc();\n-\n-    protected interface redefineclasses023bi {\n-\/\/  ^^^^^^^^^\n-\n-        void dummyMethod01();\n-\n-    }\n-\n-    class redefineclasses023bc implements redefineclasses023bi {\n-\n-        public void dummyMethod01() {\n-        }\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses023\/newclass01\/redefineclasses023b.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package nsk.jdi.VirtualMachine.redefineClasses;\n-\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n-\/**\n- *  <code>redefineclasses023b<\/code> is deugee's part of the redefineclasses023.\n- *  changing <public> class-modifier to <private>\n- *\/\n-\n-public class redefineclasses023b {\n-\n-    redefineclasses023bc obj = new redefineclasses023bc();\n-\n-    private interface redefineclasses023bi {\n-\/\/  ^^^^^^^\n-\n-        void dummyMethod01();\n-\n-    }\n-\n-    class redefineclasses023bc implements redefineclasses023bi {\n-\n-        public void dummyMethod01() {\n-        }\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses023\/newclass02\/redefineclasses023b.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"},{"patch":"@@ -1,52 +0,0 @@\n-\/*\n- * Copyright (c) 2002, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package nsk.jdi.VirtualMachine.redefineClasses;\n-\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.*;\n-\n-\/**\n- *  <code>redefineclasses023b<\/code> is deugee's part of the redefineclasses023.\n- *  changing <public> class-modifier to <private package>\n- *\/\n-\n-public class redefineclasses023b {\n-\n-    redefineclasses023bc obj = new redefineclasses023bc();\n-\n-           interface redefineclasses023bi {\n-\/\/  ^^^^^^\n-\n-        void dummyMethod01();\n-\n-    }\n-\n-    class redefineclasses023bc implements redefineclasses023bi {\n-\n-        public void dummyMethod01() {\n-        }\n-\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdi\/VirtualMachine\/redefineClasses\/redefineclasses023\/newclass03\/redefineclasses023b.java","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"}]}