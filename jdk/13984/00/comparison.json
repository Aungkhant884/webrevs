{"files":[{"patch":"@@ -57,1 +57,1 @@\n-                       MacroAssembler::PreservationLevel preservation_level, Label *L_handle_null = NULL);\n+                       MacroAssembler::PreservationLevel preservation_level, Label *L_handle_null = nullptr);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/x\/xBarrierSetAssembler_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-              MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), res, NULL, true,\n+              MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), res, nullptr, true,\n@@ -76,1 +76,1 @@\n-                MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), res, NULL, true, weak);\n+                MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), res, nullptr, true, weak);\n@@ -98,1 +98,1 @@\n-              MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), noreg, NULL, true,\n+              MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), noreg, nullptr, true,\n@@ -110,1 +110,1 @@\n-                MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), noreg, NULL, true, weak);\n+                MacroAssembler::MemBarNone, MacroAssembler::cmpxchgx_hint_atomic_update(), noreg, nullptr, true, weak);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/x\/x_ppc.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-      LIR_Op(lir_xloadbarrier_test, LIR_OprFact::illegalOpr, NULL),\n+      LIR_Op(lir_xloadbarrier_test, LIR_OprFact::illegalOpr, nullptr),\n@@ -128,2 +128,2 @@\n-    _load_barrier_on_oop_field_preloaded_runtime_stub(NULL),\n-    _load_barrier_on_weak_oop_field_preloaded_runtime_stub(NULL) {}\n+    _load_barrier_on_oop_field_preloaded_runtime_stub(nullptr),\n+    _load_barrier_on_weak_oop_field_preloaded_runtime_stub(nullptr) {}\n@@ -192,2 +192,2 @@\n-                               NULL \/* patch_emit_info *\/,\n-                               NULL \/* load_emit_info *\/);\n+                               nullptr \/* patch_emit_info *\/,\n+                               nullptr \/* load_emit_info *\/);\n@@ -222,1 +222,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/c1\/xBarrierSetC1.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    _stubs(new (arena) GrowableArray<XLoadBarrierStubC2*>(arena, 8,  0, NULL)),\n+    _stubs(new (arena) GrowableArray<XLoadBarrierStubC2*>(arena, 8,  0, nullptr)),\n@@ -64,1 +64,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -70,1 +70,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -74,1 +74,1 @@\n-    if (live == NULL) {\n+    if (live == nullptr) {\n@@ -139,1 +139,1 @@\n-  assert(mask != NULL, \"must be mach-node with barrier\");\n+  assert(mask != nullptr, \"must be mach-node with barrier\");\n@@ -170,1 +170,1 @@\n-    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == NULL) {\n+    if (cb.insts()->maybe_expand_to_ensure_remaining(PhaseOutput::MAX_inst_size) && cb.blob() == nullptr) {\n@@ -275,1 +275,1 @@\n-  if (ac->is_clone_array() && ary_ptr != NULL) {\n+  if (ac->is_clone_array() && ary_ptr != nullptr) {\n@@ -312,1 +312,1 @@\n-    address     copyfunc_addr = phase->basictype2arraycopy(bt, NULL, NULL, true, copyfunc_name, true);\n+    address     copyfunc_addr = phase->basictype2arraycopy(bt, nullptr, nullptr, true, copyfunc_name, true);\n@@ -428,1 +428,1 @@\n-    const TypePtr* load_adr_type = NULL;\n+    const TypePtr* load_adr_type = nullptr;\n@@ -436,1 +436,1 @@\n-      const TypePtr* mem_adr_type = NULL;\n+      const TypePtr* mem_adr_type = nullptr;\n@@ -443,1 +443,1 @@\n-          load_obj == NULL || mem_obj == NULL ||\n+          load_obj == nullptr || mem_obj == nullptr ||\n@@ -550,1 +550,1 @@\n-      if (regs != NULL) {\n+      if (regs != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/c2\/xBarrierSetC2.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-    XArrayIteratorImpl<T, Parallel>(array->is_empty() ? NULL : array->adr_at(0), array->length()) {}\n+    XArrayIteratorImpl<T, Parallel>(array->is_empty() ? nullptr : array->adr_at(0), array->length()) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xArray.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -223,1 +223,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -232,1 +232,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -237,1 +237,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -247,1 +247,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -252,1 +252,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -259,1 +259,1 @@\n-  if (referent_addr != NULL) {\n+  if (referent_addr != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xBarrier.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -153,1 +153,1 @@\n-  if (p != NULL) {\n+  if (p != nullptr) {\n@@ -174,1 +174,1 @@\n-  if (p != NULL) {\n+  if (p != nullptr) {\n@@ -229,1 +229,1 @@\n-  return load_barrier_on_oop_field_preloaded((oop*)NULL, o);\n+  return load_barrier_on_oop_field_preloaded((oop*)nullptr, o);\n@@ -289,1 +289,1 @@\n-  return weak_load_barrier_on_weak_oop_field_preloaded((oop*)NULL, o);\n+  return weak_load_barrier_on_weak_oop_field_preloaded((oop*)nullptr, o);\n@@ -303,1 +303,1 @@\n-  return weak_load_barrier_on_phantom_oop_field_preloaded((oop*)NULL, o);\n+  return weak_load_barrier_on_phantom_oop_field_preloaded((oop*)nullptr, o);\n@@ -321,1 +321,1 @@\n-  return weak_load_barrier_on_weak_oop(o) != NULL;\n+  return weak_load_barrier_on_weak_oop(o) != nullptr;\n@@ -328,1 +328,1 @@\n-  return weak_load_barrier_on_phantom_oop(o) != NULL;\n+  return weak_load_barrier_on_phantom_oop(o) != nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xBarrier.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  assert(base != NULL, \"Invalid base\");\n+  assert(base != nullptr, \"Invalid base\");\n@@ -187,1 +187,1 @@\n-    return Raw::oop_arraycopy_in_heap(NULL, 0, src, NULL, 0, dst, length);\n+    return Raw::oop_arraycopy_in_heap(nullptr, 0, src, NULL, 0, dst, length);\n","filename":"src\/hotspot\/share\/gc\/x\/xBarrierSet.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  return XBarrier::load_barrier_on_oop_field_preloaded((volatile oop*)NULL, obj);\n+  return XBarrier::load_barrier_on_oop_field_preloaded((volatile oop*)nullptr, obj);\n@@ -46,1 +46,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xBarrierSetStackChunk.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-PaddedEnd<XCPU::XCPUAffinity>* XCPU::_affinity = NULL;\n+PaddedEnd<XCPU::XCPUAffinity>* XCPU::_affinity = nullptr;\n@@ -40,1 +40,1 @@\n-  assert(_affinity == NULL, \"Already initialized\");\n+  assert(_affinity == nullptr, \"Already initialized\");\n","filename":"src\/hotspot\/share\/gc\/x\/xCPU.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  assert(_affinity != NULL, \"Not initialized\");\n+  assert(_affinity != nullptr, \"Not initialized\");\n","filename":"src\/hotspot\/share\/gc\/x\/xCPU.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xCollectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-  _page = NULL;\n+  _page = nullptr;\n@@ -174,1 +174,1 @@\n-  guarantee(_page != NULL, \"Invalid page\");\n+  guarantee(_page != nullptr, \"Invalid page\");\n","filename":"src\/hotspot\/share\/gc\/x\/xForwarding.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,3 +29,3 @@\n-    _start(NULL),\n-    _end(NULL),\n-    _top(NULL) {}\n+    _start(nullptr),\n+    _end(nullptr),\n+    _top(nullptr) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xForwardingAllocator.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-  assert(_map.get(offset) == NULL, \"Invalid entry\");\n+  assert(_map.get(offset) == nullptr, \"Invalid entry\");\n@@ -56,1 +56,1 @@\n-  _map.put(offset, size, NULL);\n+  _map.put(offset, size, nullptr);\n","filename":"src\/hotspot\/share\/gc\/x\/xForwardingTable.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-XHeap* XHeap::_heap = NULL;\n+XHeap* XHeap::_heap = nullptr;\n@@ -74,1 +74,1 @@\n-  assert(_heap == NULL, \"Already initialized\");\n+  assert(_heap == nullptr, \"Already initialized\");\n@@ -145,1 +145,1 @@\n-    if (page != NULL) {\n+    if (page != nullptr) {\n@@ -175,1 +175,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xHeap.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  assert(_heap != NULL, \"Not initialized\");\n+  assert(_heap != nullptr, \"Not initialized\");\n@@ -92,1 +92,1 @@\n-  if (forwarding == NULL) {\n+  if (forwarding == nullptr) {\n@@ -106,1 +106,1 @@\n-  if (forwarding == NULL) {\n+  if (forwarding == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xHeap.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n-  if (bitmap == NULL) {\n+  if (bitmap == nullptr) {\n@@ -261,1 +261,1 @@\n-    if (bitmap == NULL) {\n+    if (bitmap == nullptr) {\n@@ -272,1 +272,1 @@\n-  if (obj == NULL) {\n+  if (obj == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xHeapIterator.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-  return is_empty() ? NULL : cast_to_outer(_head._next);\n+  return is_empty() ? nullptr : cast_to_outer(_head._next);\n@@ -118,1 +118,1 @@\n-  return is_empty() ? NULL : cast_to_outer(_head._prev);\n+  return is_empty() ? nullptr : cast_to_outer(_head._prev);\n@@ -131,1 +131,1 @@\n-  return (next == &_head) ? NULL : cast_to_outer(next);\n+  return (next == &_head) ? nullptr : cast_to_outer(next);\n@@ -144,1 +144,1 @@\n-  return (prev == &_head) ? NULL : cast_to_outer(prev);\n+  return (prev == &_head) ? nullptr : cast_to_outer(prev);\n@@ -194,1 +194,1 @@\n-  if (elem != NULL) {\n+  if (elem != nullptr) {\n@@ -204,1 +204,1 @@\n-  if (elem != NULL) {\n+  if (elem != nullptr) {\n@@ -218,1 +218,1 @@\n-  if (_next != NULL) {\n+  if (_next != nullptr) {\n@@ -235,1 +235,1 @@\n-  return *elem != NULL;\n+  return *elem != nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xList.inline.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    _owner(NULL),\n+    _owner(nullptr),\n@@ -70,1 +70,1 @@\n-    Atomic::store(&_owner, (Thread*)NULL);\n+    Atomic::store(&_owner, (Thread*)nullptr);\n@@ -108,1 +108,1 @@\n-  if (_lock != NULL) {\n+  if (_lock != nullptr) {\n@@ -115,1 +115,1 @@\n-  if (_lock != NULL) {\n+  if (_lock != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xLock.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-                                                 ? NULL\n+                                                 ? nullptr\n@@ -406,1 +406,1 @@\n-    if (stack != NULL) {\n+    if (stack != nullptr) {\n@@ -426,1 +426,1 @@\n-    if (stack != NULL) {\n+    if (stack != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xMark.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-    _page(NULL),\n+    _page(nullptr),\n","filename":"src\/hotspot\/share\/gc\/x\/xMarkCache.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-  if (_page != NULL) {\n+  if (_page != nullptr) {\n@@ -49,1 +49,1 @@\n-    _page = NULL;\n+    _page = nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xMarkCache.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-    _magazine(NULL) {\n+    _magazine(nullptr) {\n@@ -84,1 +84,1 @@\n-    _stacks[i] = NULL;\n+    _stacks[i] = nullptr;\n@@ -91,1 +91,1 @@\n-    if (stack != NULL) {\n+    if (stack != nullptr) {\n@@ -100,1 +100,1 @@\n-  if (_magazine == NULL) {\n+  if (_magazine == nullptr) {\n@@ -103,2 +103,2 @@\n-    if (_magazine == NULL) {\n-      return NULL;\n+    if (_magazine == nullptr) {\n+      return nullptr;\n@@ -108,1 +108,1 @@\n-  XMarkStack* stack = NULL;\n+  XMarkStack* stack = nullptr;\n@@ -114,1 +114,1 @@\n-    _magazine = NULL;\n+    _magazine = nullptr;\n@@ -122,1 +122,1 @@\n-    if (_magazine == NULL) {\n+    if (_magazine == nullptr) {\n@@ -136,1 +136,1 @@\n-    _magazine = NULL;\n+    _magazine = nullptr;\n@@ -148,1 +148,1 @@\n-    if (stack == NULL) {\n+    if (stack == nullptr) {\n@@ -151,1 +151,1 @@\n-      if (stack == NULL) {\n+      if (stack == nullptr) {\n@@ -164,1 +164,1 @@\n-    *stackp = stack = NULL;\n+    *stackp = stack = nullptr;\n@@ -175,1 +175,1 @@\n-    if (stack == NULL) {\n+    if (stack == nullptr) {\n@@ -178,1 +178,1 @@\n-      if (stack == NULL) {\n+      if (stack == nullptr) {\n@@ -191,1 +191,1 @@\n-    *stackp = stack = NULL;\n+    *stackp = stack = nullptr;\n@@ -203,1 +203,1 @@\n-    if (stack == NULL) {\n+    if (stack == nullptr) {\n@@ -214,1 +214,1 @@\n-    *stackp = NULL;\n+    *stackp = nullptr;\n@@ -222,1 +222,1 @@\n-  if (_magazine != NULL) {\n+  if (_magazine != nullptr) {\n@@ -224,1 +224,1 @@\n-    _magazine = NULL;\n+    _magazine = nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xMarkStack.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-    _next(NULL) {}\n+    _next(nullptr) {}\n@@ -79,1 +79,1 @@\n-    _head(encode_versioned_pointer(NULL, 0)) {}\n+    _head(encode_versioned_pointer(nullptr, 0)) {}\n@@ -85,1 +85,1 @@\n-  if (stack == NULL) {\n+  if (stack == nullptr) {\n@@ -99,1 +99,1 @@\n-    *stack = NULL;\n+    *stack = nullptr;\n@@ -110,1 +110,1 @@\n-  T* stack = NULL;\n+  T* stack = nullptr;\n@@ -114,1 +114,1 @@\n-  return stack == NULL;\n+  return stack == nullptr;\n@@ -139,1 +139,1 @@\n-  T* stack = NULL;\n+  T* stack = nullptr;\n@@ -144,2 +144,2 @@\n-    if (stack == NULL) {\n-      return NULL;\n+    if (stack == nullptr) {\n+      return nullptr;\n@@ -162,1 +162,1 @@\n-  _head = encode_versioned_pointer(NULL, 0);\n+  _head = encode_versioned_pointer(nullptr, 0);\n@@ -186,1 +186,1 @@\n-  if (stack != NULL) {\n+  if (stack != nullptr) {\n@@ -224,1 +224,1 @@\n-  assert(*stackp == NULL, \"Should be empty\");\n+  assert(*stackp == nullptr, \"Should be empty\");\n@@ -232,2 +232,2 @@\n-  if (stack != NULL) {\n-    *stackp = NULL;\n+  if (stack != nullptr) {\n+    *stackp = nullptr;\n@@ -246,1 +246,1 @@\n-  if (stack != NULL && stack->push(entry)) {\n+  if (stack != nullptr && stack->push(entry)) {\n@@ -259,1 +259,1 @@\n-  if (stack != NULL && stack->pop(entry)) {\n+  if (stack != nullptr && stack->pop(entry)) {\n","filename":"src\/hotspot\/share\/gc\/x\/xMarkStack.inline.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-  if (magazine != NULL) {\n+  if (magazine != nullptr) {\n@@ -208,1 +208,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xMarkStackAllocator.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-  if (_callbacks._create != NULL) {\n+  if (_callbacks._create != nullptr) {\n@@ -38,1 +38,1 @@\n-  if (_callbacks._destroy != NULL) {\n+  if (_callbacks._destroy != nullptr) {\n@@ -45,1 +45,1 @@\n-  if (_callbacks._shrink_from_front != NULL) {\n+  if (_callbacks._shrink_from_front != nullptr) {\n@@ -52,1 +52,1 @@\n-  if (_callbacks._shrink_from_back != NULL) {\n+  if (_callbacks._shrink_from_back != nullptr) {\n@@ -59,1 +59,1 @@\n-  if (_callbacks._grow_from_front != NULL) {\n+  if (_callbacks._grow_from_front != nullptr) {\n@@ -66,1 +66,1 @@\n-  if (_callbacks._grow_from_back != NULL) {\n+  if (_callbacks._grow_from_back != nullptr) {\n@@ -73,6 +73,6 @@\n-    _create(NULL),\n-    _destroy(NULL),\n-    _shrink_from_front(NULL),\n-    _shrink_from_back(NULL),\n-    _grow_from_front(NULL),\n-    _grow_from_back(NULL) {}\n+    _create(nullptr),\n+    _destroy(nullptr),\n+    _shrink_from_front(nullptr),\n+    _shrink_from_back(nullptr),\n+    _grow_from_front(nullptr),\n+    _grow_from_back(nullptr) {}\n@@ -92,1 +92,1 @@\n-  if (area != NULL) {\n+  if (area != nullptr) {\n@@ -129,1 +129,1 @@\n-  if (area != NULL) {\n+  if (area != nullptr) {\n@@ -185,1 +185,1 @@\n-      if (prev != NULL && start == prev->end()) {\n+      if (prev != nullptr && start == prev->end()) {\n@@ -212,1 +212,1 @@\n-  if (last != NULL && start == last->end()) {\n+  if (last != nullptr && start == last->end()) {\n","filename":"src\/hotspot\/share\/gc\/x\/xMemory.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-    if (r->oop_value() != NULL) {\n-      \/\/ Non-NULL immediate oop found. NULL oops can safely be\n+    if (r->oop_value() != nullptr) {\n+      \/\/ Non-null immediate oop found. Null oops can safely be\n@@ -80,1 +80,1 @@\n-      \/\/ are later patched to be non-NULL.\n+      \/\/ are later patched to be non-null.\n@@ -87,1 +87,1 @@\n-  if (data == NULL) {\n+  if (data == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xNMethod.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    _oops(NULL) {}\n+    _oops(nullptr) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xNMethodData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-XNMethodTableEntry* XNMethodTable::_table = NULL;\n+XNMethodTableEntry* XNMethodTable::_table = nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xNMethodTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-             field_method::encode(NULL)) {}\n+             field_method::encode(nullptr)) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xNMethodTableEntry.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-    _table(NULL),\n+    _table(nullptr),\n@@ -38,1 +38,1 @@\n-  return _table != NULL;\n+  return _table != nullptr;\n@@ -53,1 +53,1 @@\n-  _table = NULL;\n+  _table = nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xNMethodTableIteration.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-    _shared_medium_page(NULL),\n-    _shared_small_page(NULL) {}\n+    _shared_medium_page(nullptr),\n+    _shared_small_page(nullptr) {}\n@@ -73,1 +73,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n@@ -96,1 +96,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n@@ -103,1 +103,1 @@\n-    if (new_page != NULL) {\n+    if (new_page != nullptr) {\n@@ -111,1 +111,1 @@\n-        if (prev_page == NULL) {\n+        if (prev_page == nullptr) {\n@@ -143,1 +143,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n@@ -227,1 +227,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n@@ -265,2 +265,2 @@\n-  _shared_medium_page.set(NULL);\n-  _shared_small_page.set_all(NULL);\n+  _shared_medium_page.set(nullptr);\n+  _shared_small_page.set_all(nullptr);\n","filename":"src\/hotspot\/share\/gc\/x\/xObjectAllocator.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xPage.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-  if (page == NULL) {\n+  if (page == nullptr) {\n@@ -403,1 +403,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n@@ -522,1 +522,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -610,1 +610,1 @@\n-  if (page == NULL) {\n+  if (page == nullptr) {\n@@ -612,1 +612,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -628,1 +628,1 @@\n-  if (committed_page != NULL) {\n+  if (committed_page != nullptr) {\n@@ -633,1 +633,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -670,1 +670,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -674,1 +674,1 @@\n-  if (page == NULL) {\n+  if (page == nullptr) {\n@@ -706,1 +706,1 @@\n-    if (allocation == NULL) {\n+    if (allocation == nullptr) {\n@@ -853,1 +853,1 @@\n-  for (XPageAllocation* allocation = _stalled.first(); allocation != NULL; allocation = _stalled.first()) {\n+  for (XPageAllocation* allocation = _stalled.first(); allocation != nullptr; allocation = _stalled.first()) {\n","filename":"src\/hotspot\/share\/gc\/x\/xPageAllocator.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-  if (l1_page != NULL) {\n+  if (l1_page != nullptr) {\n@@ -83,1 +83,1 @@\n-    if (l2_page != NULL) {\n+    if (l2_page != nullptr) {\n@@ -91,1 +91,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -96,1 +96,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n@@ -101,1 +101,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -116,1 +116,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -124,1 +124,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -138,1 +138,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -143,1 +143,1 @@\n-  if (page == NULL) {\n+  if (page == nullptr) {\n@@ -147,1 +147,1 @@\n-  if (page != NULL) {\n+  if (page != nullptr) {\n@@ -166,1 +166,1 @@\n-  if (page == NULL) {\n+  if (page == nullptr) {\n@@ -169,1 +169,1 @@\n-    if (oversized != NULL) {\n+    if (oversized != nullptr) {\n@@ -183,1 +183,1 @@\n-  if (page == NULL) {\n+  if (page == nullptr) {\n@@ -203,1 +203,1 @@\n-  if (page == NULL || !cl->do_page(page)) {\n+  if (page == nullptr || !cl->do_page(page)) {\n","filename":"src\/hotspot\/share\/gc\/x\/xPageCache.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-  assert(_map.get(offset) == NULL, \"Invalid entry\");\n+  assert(_map.get(offset) == nullptr, \"Invalid entry\");\n@@ -52,1 +52,1 @@\n-  _map.put(offset, size, NULL);\n+  _map.put(offset, size, nullptr);\n","filename":"src\/hotspot\/share\/gc\/x\/xPageTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    _prev(NULL) {}\n+    _prev(nullptr) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xPageTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-    _soft_reference_policy(NULL),\n+    _soft_reference_policy(nullptr),\n@@ -113,2 +113,2 @@\n-    _discovered_list(NULL),\n-    _pending_list(NULL),\n+    _discovered_list(nullptr),\n+    _pending_list(nullptr),\n@@ -135,1 +135,1 @@\n-    return reference_next(reference) != NULL;\n+    return reference_next(reference) != nullptr;\n@@ -139,1 +139,1 @@\n-    return referent == NULL;\n+    return referent == nullptr;\n@@ -156,1 +156,1 @@\n-  assert(_soft_reference_policy != NULL, \"Policy not initialized\");\n+  assert(_soft_reference_policy != nullptr, \"Policy not initialized\");\n@@ -187,1 +187,1 @@\n-  if (referent == NULL) {\n+  if (referent == nullptr) {\n@@ -218,1 +218,1 @@\n-    assert(reference_next(reference) == NULL, \"Already inactive\");\n+    assert(reference_next(reference) == nullptr, \"Already inactive\");\n@@ -241,1 +241,1 @@\n-  assert(reference_discovered(reference) == NULL, \"Already discovered\");\n+  assert(reference_discovered(reference) == nullptr, \"Already discovered\");\n@@ -277,1 +277,1 @@\n-  reference_set_discovered(reference, NULL);\n+  reference_set_discovered(reference, nullptr);\n@@ -299,1 +299,1 @@\n-  while (*p != NULL) {\n+  while (*p != nullptr) {\n@@ -311,1 +311,1 @@\n-  if (*list != NULL) {\n+  if (*list != nullptr) {\n@@ -313,1 +313,1 @@\n-    if (*p == NULL) {\n+    if (*p == nullptr) {\n@@ -319,1 +319,1 @@\n-    *list = NULL;\n+    *list = nullptr;\n@@ -326,1 +326,1 @@\n-    if (*list != NULL) {\n+    if (*list != nullptr) {\n@@ -331,1 +331,1 @@\n-  if (_pending_list.get() != NULL) {\n+  if (_pending_list.get() != nullptr) {\n@@ -440,1 +440,1 @@\n-  if (_pending_list.get() == NULL) {\n+  if (_pending_list.get() == nullptr) {\n@@ -457,1 +457,1 @@\n-  _pending_list.set(NULL);\n+  _pending_list.set(nullptr);\n","filename":"src\/hotspot\/share\/gc\/x\/xReferenceProcessor.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -132,1 +132,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -150,1 +150,1 @@\n-  return page != NULL && page->top() == page->start();\n+  return page != nullptr && page->top() == page->start();\n@@ -163,1 +163,1 @@\n-    if (page == NULL) {\n+    if (page == nullptr) {\n@@ -185,1 +185,1 @@\n-    return (page != NULL) ? page->alloc_object(size) : 0;\n+    return (page != nullptr) ? page->alloc_object(size) : 0;\n@@ -207,1 +207,1 @@\n-      _shared(NULL),\n+      _shared(nullptr),\n@@ -231,1 +231,1 @@\n-      if (_shared == NULL) {\n+      if (_shared == nullptr) {\n@@ -244,2 +244,2 @@\n-    assert(_shared == NULL, \"Invalid state\");\n-    assert(page != NULL, \"Invalid page\");\n+    assert(_shared == nullptr, \"Invalid state\");\n+    assert(page != nullptr, \"Invalid page\");\n@@ -262,1 +262,1 @@\n-    return (page != NULL) ? page->alloc_object_atomic(size) : 0;\n+    return (page != nullptr) ? page->alloc_object_atomic(size) : 0;\n@@ -324,1 +324,1 @@\n-      if (_target != NULL) {\n+      if (_target != nullptr) {\n@@ -340,2 +340,2 @@\n-      _forwarding(NULL),\n-      _target(NULL) {}\n+      _forwarding(nullptr),\n+      _target(nullptr) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xRelocate.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-      _forwardings(NULL),\n+      _forwardings(nullptr),\n@@ -112,1 +112,1 @@\n-    _forwardings(NULL),\n+    _forwardings(nullptr),\n","filename":"src\/hotspot\/share\/gc\/x\/xRelocationSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  XArray<XPage*> sorted_live_pages(npages, npages, NULL);\n+  XArray<XPage*> sorted_live_pages(npages, npages, nullptr);\n@@ -101,1 +101,1 @@\n-    assert(sorted_live_pages.at(finger) == NULL, \"Invalid finger\");\n+    assert(sorted_live_pages.at(finger) == nullptr, \"Invalid finger\");\n","filename":"src\/hotspot\/share\/gc\/x\/xRelocationSetSelector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-    XSafeDeleteImpl<T>(NULL) {}\n+    XSafeDeleteImpl<T>(nullptr) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xSafeDelete.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-    _counters(NULL) {}\n+    _counters(nullptr) {}\n","filename":"src\/hotspot\/share\/gc\/x\/xServiceability.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  if (nm != NULL) {\n+  if (nm != nullptr) {\n@@ -62,1 +62,1 @@\n-  if (context != NULL) {\n+  if (context != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xStackWatermark.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -400,1 +400,1 @@\n-  _first = NULL;\n+  _first = nullptr;\n@@ -402,1 +402,1 @@\n-  while (first_unsorted != NULL) {\n+  while (first_unsorted != nullptr) {\n@@ -405,1 +405,1 @@\n-    value->_next = NULL;\n+    value->_next = nullptr;\n@@ -409,1 +409,1 @@\n-    while (*current != NULL) {\n+    while (*current != nullptr) {\n@@ -884,1 +884,1 @@\n-  for (const XStatCounter* counter = XStatCounter::first(); counter != NULL; counter = counter->next()) {\n+  for (const XStatCounter* counter = XStatCounter::first(); counter != nullptr; counter = counter->next()) {\n@@ -889,1 +889,1 @@\n-  for (const XStatSampler* sampler = XStatSampler::first(); sampler != NULL; sampler = sampler->next()) {\n+  for (const XStatSampler* sampler = XStatSampler::first(); sampler != nullptr; sampler = sampler->next()) {\n@@ -914,1 +914,1 @@\n-  for (const XStatSampler* sampler = XStatSampler::first(); sampler != NULL; sampler = sampler->next()) {\n+  for (const XStatSampler* sampler = XStatSampler::first(); sampler != nullptr; sampler = sampler->next()) {\n","filename":"src\/hotspot\/share\/gc\/x\/xStat.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-template <typename T> T*       XStatIterableValue<T>::_first = NULL;\n+template <typename T> T*       XStatIterableValue<T>::_first = nullptr;\n","filename":"src\/hotspot\/share\/gc\/x\/xStat.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-XPerWorker<ThreadLocalAllocStats>* XThreadLocalAllocBuffer::_stats = NULL;\n+XPerWorker<ThreadLocalAllocStats>* XThreadLocalAllocBuffer::_stats = nullptr;\n@@ -38,1 +38,1 @@\n-    assert(_stats == NULL, \"Already initialized\");\n+    assert(_stats == nullptr, \"Already initialized\");\n","filename":"src\/hotspot\/share\/gc\/x\/xThreadLocalAllocBuffer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-      _invisible_root(NULL) {}\n+      _invisible_root(nullptr) {}\n@@ -66,1 +66,1 @@\n-    assert(data(thread)->_invisible_root == NULL, \"Already set\");\n+    assert(data(thread)->_invisible_root == nullptr, \"Already set\");\n@@ -71,2 +71,2 @@\n-    assert(data(thread)->_invisible_root != NULL, \"Should be set\");\n-    data(thread)->_invisible_root = NULL;\n+    assert(data(thread)->_invisible_root != nullptr, \"Should be set\");\n+    data(thread)->_invisible_root = nullptr;\n@@ -77,1 +77,1 @@\n-    if (data(thread)->_invisible_root != NULL) {\n+    if (data(thread)->_invisible_root != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xThreadLocalData.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    for (XStatCounter* counter = XStatCounter::first(); counter != NULL; counter = counter->next()) {\n+    for (XStatCounter* counter = XStatCounter::first(); counter != nullptr; counter = counter->next()) {\n@@ -67,1 +67,1 @@\n-    for (XStatSampler* sampler = XStatSampler::first(); sampler != NULL; sampler = sampler->next()) {\n+    for (XStatSampler* sampler = XStatSampler::first(); sampler != nullptr; sampler = sampler->next()) {\n@@ -88,1 +88,1 @@\n-XTracer* XTracer::_tracer = NULL;\n+XTracer* XTracer::_tracer = nullptr;\n@@ -94,1 +94,1 @@\n-  assert(_tracer == NULL, \"Already initialized\");\n+  assert(_tracer == nullptr, \"Already initialized\");\n","filename":"src\/hotspot\/share\/gc\/x\/xTracer.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    if (o != NULL && !_is_alive.do_object_b(o)) {\n+    if (o != nullptr && !_is_alive.do_object_b(o)) {\n","filename":"src\/hotspot\/share\/gc\/x\/xUnload.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -52,1 +52,1 @@\n-    if (page != NULL) {\n+    if (page != nullptr) {\n@@ -88,1 +88,1 @@\n-    if (page == NULL) {\n+    if (page == nullptr) {\n","filename":"src\/hotspot\/share\/gc\/x\/xUnmapper.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-  if (o != NULL) {\n+  if (o != nullptr) {\n@@ -65,1 +65,1 @@\n-  if (o != NULL) {\n+  if (o != nullptr) {\n@@ -223,1 +223,1 @@\n-    thread->oops_do_no_frames(_cl, NULL);\n+    thread->oops_do_no_frames(_cl, nullptr);\n@@ -396,1 +396,1 @@\n-  fr.oops_do(&verify_cl, NULL, &register_map, DerivedPointerIterationMode::_ignore);\n+  fr.oops_do(&verify_cl, nullptr, &register_map, DerivedPointerIterationMode::_ignore);\n@@ -401,1 +401,1 @@\n-  jt->oops_do_no_frames(&verify_cl, NULL);\n+  jt->oops_do_no_frames(&verify_cl, nullptr);\n@@ -410,1 +410,1 @@\n-      fst.current()->oops_do(&verify_cl, NULL \/* code_cl *\/, fst.register_map(), DerivedPointerIterationMode::_ignore);\n+      fst.current()->oops_do(&verify_cl, nullptr \/* code_cl *\/, fst.register_map(), DerivedPointerIterationMode::_ignore);\n","filename":"src\/hotspot\/share\/gc\/x\/xVerify.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-      Atomic::cmpxchg(p, obj, oop(NULL));\n+      Atomic::cmpxchg(p, obj, oop(nullptr));\n","filename":"src\/hotspot\/share\/gc\/x\/xWeakRootsProcessor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}