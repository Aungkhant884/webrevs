{"files":[{"patch":"@@ -1604,0 +1604,1 @@\n+    case Op_ClearArray:\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -11414,1 +11414,1 @@\n-  predicate(!((ClearArrayNode*)n)->is_large());\n+  predicate(!((ClearArrayNode*)n)->is_large() && !n->in(2)->bottom_type()->is_int()->is_con());\n@@ -11521,0 +11521,12 @@\n+instruct rep_stos_im(immI cnt, eRegP base, regD tmp, rRegI zero, Universe dummy, eFlagsReg cr)\n+%{\n+  predicate(!((ClearArrayNode*)n)->is_large() && n->in(2)->bottom_type()->is_int()->is_con());\n+  match(Set dummy (ClearArray cnt base));\n+  effect(TEMP tmp, TEMP zero, KILL cr);\n+  format %{ \"clear_mem_imm $base , $cnt  \\n\\t\" %}\n+  ins_encode %{\n+   __ clear_mem($base$$Register, $cnt$$constant, $zero$$Register, $tmp$$XMMRegister);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -10750,1 +10750,1 @@\n-  predicate(!((ClearArrayNode*)n)->is_large());\n+  predicate(!((ClearArrayNode*)n)->is_large() && !n->in(2)->bottom_type()->is_long()->is_con());\n@@ -10856,0 +10856,12 @@\n+instruct rep_stos_im(immL cnt, rRegP base, regD tmp, rRegI zero, Universe dummy, rFlagsReg cr)\n+%{\n+  predicate(!((ClearArrayNode*)n)->is_large() && n->in(2)->bottom_type()->is_long()->is_con());\n+  match(Set dummy (ClearArray cnt base));\n+  effect(TEMP tmp, TEMP zero, KILL cr);\n+  format %{ \"clear_mem_imm $base , $cnt  \\n\\t\" %}\n+  ins_encode %{\n+   __ clear_mem($base$$Register, $cnt$$constant, $zero$$Register, $tmp$$XMMRegister);\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -170,11 +170,0 @@\n-  \/\/ SafeFetch 32 handling:\n-  \/\/ - make it work if _thread is null\n-  \/\/ - make it use the standard os::...::ucontext_get\/set_pc APIs\n-  if (uc) {\n-    address const pc = os::Posix::ucontext_get_pc(uc);\n-    if (pc && StubRoutines::is_safefetch_fault(pc)) {\n-      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n-      return true;\n-    }\n-  }\n-\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -204,10 +204,0 @@\n-    }\n-  }\n-\n-  \/\/ Moved SafeFetch32 handling outside thread!=NULL conditional block to make\n-  \/\/ it work if no associated JavaThread object exists.\n-  if (uc) {\n-    address const pc = os::Posix::ucontext_get_pc(uc);\n-    if (pc && StubRoutines::is_safefetch_fault(pc)) {\n-      os::Posix::ucontext_set_pc(uc, StubRoutines::continuation_for_safefetch_fault(pc));\n-      return true;\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}