{"files":[{"patch":"@@ -787,1 +787,1 @@\n-                if (!types.isSameType(ec, tree.type)) {\n+                if (!types.isSameType(ec, tree.type) && (!types.isSameType(ec, pt))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransTypes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8263642\n+ * @bug 8263642 8268885\n@@ -28,0 +28,1 @@\n+ *          duplicate checkcast when destination type is not first type of intersection type\n@@ -64,0 +65,23 @@\n+    static final String Code1 =\n+            \"\"\"\n+            class IntersectionTypeTest {\n+                interface I1 { }\n+                static class C1 { }\n+                static Object test(Object o) {\n+                    return (C1 & I1) o;\n+                }\n+            }\n+            \"\"\";\n+\n+    static final String Code2 =\n+            \"\"\"\n+            class IntersectionTypeTest {\n+                interface I1 {}\n+                interface I2 {}\n+                static class C {}\n+                void test() {\n+                    I2 i = (I1 & I2) new C();\n+                }\n+            }\n+            \"\"\";\n+\n@@ -66,8 +90,5 @@\n-        String code = \"\"\"\n-                class IntersectionTypeTest {\n-                    interface I1 { }\n-                    static class C1 { }\n-                    static Object test(Object o) {\n-                        return (C1 & I1) o;\n-                    }\n-                }\"\"\";\n+        duplicateCheckCastHelper(Code1, \"IntersectionTypeTest$I1\", \"IntersectionTypeTest$C1\");\n+        duplicateCheckCastHelper(Code2, \"IntersectionTypeTest$I1\", \"IntersectionTypeTest$I2\");\n+    }\n+\n+    private void duplicateCheckCastHelper(String source, String expected1, String expected2) throws Exception {\n@@ -76,1 +97,1 @@\n-                .sources(code)\n+                .sources(source)\n@@ -95,2 +116,2 @@\n-        checkClassName(checkCastList.get(0), \"IntersectionTypeTest$I1\");\n-        checkClassName(checkCastList.get(1), \"IntersectionTypeTest$C1\");\n+        checkClassName(checkCastList.get(0), expected1);\n+        checkClassName(checkCastList.get(1), expected2);\n","filename":"test\/langtools\/tools\/javac\/cast\/intersection\/DuplicatedCheckcastTest.java","additions":33,"deletions":12,"binary":false,"changes":45,"status":"modified"}]}