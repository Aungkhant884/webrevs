{"files":[{"patch":"@@ -426,1 +426,2 @@\n-static inline int GetCGKeyMask(int cgKeyCode) {\n+static inline int GetCGKeyMask(int cgKeyCode)\n+{\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/CRobot.m","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\n+import java.awt.BorderLayout;\n@@ -30,0 +30,1 @@\n+import javax.swing.JButton;\n@@ -33,1 +34,0 @@\n-import javax.swing.SwingUtilities;\n@@ -36,0 +36,1 @@\n+import jtreg.SkippedException;\n@@ -38,0 +39,2 @@\n+import static javax.swing.SwingUtilities.invokeAndWait;\n+\n@@ -43,0 +46,1 @@\n+ * @library \/test\/lib\n@@ -46,0 +50,3 @@\n+ *\n+ * @run main RobotModifierMaskTest\n+ * @run main\/manual RobotModifierMaskTest manual\n@@ -47,0 +54,1 @@\n+\n@@ -52,0 +60,2 @@\n+    private static boolean startTest = false;\n+    private static boolean isManual = false;\n@@ -58,1 +68,1 @@\n-    private static final int EXPECTED_CARET_POS_CTRL = 0;\n+    private static final String EXPECTED_RESULT_CTRL = \"0\";\n@@ -61,2 +71,2 @@\n-            This test is a semi-automatic test which checks the effect of typing modifier keys\n-            through a Robot.\\n\n+            This test is running in manual mode to check the effect of typing modifier keys\n+            through Robot combined with concurrent external manual mouse movement.\n@@ -64,7 +74,0 @@\n-            It needs to be checked for following two scenarios \\n\n-\n-            CASE 1 : \\t Run the test as an automated test and let the Robot go through\n-                     \\t all the test cases.\\n\n-            CASE 2 : \\t Run the test in semi-automated mode. While the Robot in typing,\n-                     \\t manually move the mouse (without clicking\/dragging).\n-                     \\t Check if the test passes or fails.\\n\n@@ -72,2 +75,4 @@\n-            NOTE: User doesn't need to compare the actual vs expected result in Case 2.\n-            The test compares it.\"\"\";\n+            In this mode when the Robot starts to type, the user is required to concurrently\n+            move the mouse (without clicking\/dragging).\n+            When ready click on the \"Start\" button to run the test.\n+            \"\"\";\n@@ -77,2 +82,1 @@\n-            System.out.println(\"This test is for MacOS platform only\");\n-            return;\n+            throw new SkippedException(\"macOS test only\");\n@@ -82,0 +86,2 @@\n+            isManual = args.length != 0;\n+\n@@ -84,1 +90,21 @@\n-            robot.setAutoDelay(200);\n+            robot.setAutoDelay(100);\n+\n+            \/\/ create instruction frame when running in manual mode\n+            if (isManual) {\n+                try {\n+                    invokeAndWait(RobotModifierMaskTest::createInstructionsUI);\n+                    robot.waitForIdle();\n+                    while (!startTest) {\n+                        robot.delay(200);\n+                        if (!jFrame.isVisible()) {\n+                            throw new RuntimeException(\"Test instruction frame closed\");\n+                        }\n+                    }\n+                } finally {\n+                    invokeAndWait(() -> {\n+                        if (jFrame != null) {\n+                            jFrame.dispose();\n+                        }\n+                    });\n+                }\n+            }\n@@ -86,1 +112,1 @@\n-            SwingUtilities.invokeAndWait(() -> createTestUI());\n+            invokeAndWait(RobotModifierMaskTest::createTestUI);\n@@ -88,1 +114,1 @@\n-            robot.delay(1000);\n+            robot.delay(500);\n@@ -90,12 +116,1 @@\n-            jTextArea.setText(INSTRUCTIONS);\n-            robot.delay(8000);\n-\n-            testShiftKey();\n-            robot.delay(100);\n-            testCapsKey();\n-            robot.delay(100);\n-            testCmdKey();\n-            robot.delay(100);\n-            testCtrlKey();\n-            robot.delay(100);\n-            testAltKey();\n+            runTests();\n@@ -107,1 +122,0 @@\n-\n@@ -109,1 +123,1 @@\n-            SwingUtilities.invokeAndWait(() -> {\n+            invokeAndWait(() -> {\n@@ -117,2 +131,14 @@\n-    private static void testShiftKey() {\n-        jTextArea.setText(\"\");\n+    private static void runTests() throws Exception {\n+        testShiftKey();\n+        robot.delay(100);\n+        testCapsKey();\n+        robot.delay(100);\n+        testCmdKey();\n+        robot.delay(100);\n+        testCtrlKey();\n+        robot.delay(100);\n+        testAltKey();\n+    }\n+\n+    private static void testShiftKey() throws Exception {\n+        invokeAndWait(() -> jTextArea.setText(\"\"));\n@@ -125,1 +151,1 @@\n-            robot.delay(100);\n+            robot.delay(50);\n@@ -128,7 +154,2 @@\n-        robot.delay(500);\n-\n-        if (!jTextArea.getText().equals(EXPECTED_RESULT_SHIFT)) {\n-            errorLog.append(\"For Shift key, Actual and Expected results differ\\n\"\n-                            + \"Expected Text : \" + EXPECTED_RESULT_SHIFT\n-                            + \" Actual Text : \" + jTextArea.getText() + \"\\n\");\n-        }\n+        robot.delay(100);\n+        checkResult(EXPECTED_RESULT_SHIFT, \"For Shift key: \");\n@@ -137,3 +158,2 @@\n-    private static void testCapsKey() {\n-        \/\/ clear contents of JTextArea\n-        jTextArea.setText(\"\");\n+    private static void testCapsKey() throws Exception {\n+        invokeAndWait(() -> jTextArea.setText(\"\"));\n@@ -144,1 +164,0 @@\n-\n@@ -147,2 +166,1 @@\n-\n-            robot.delay(100);\n+            robot.delay(50);\n@@ -151,7 +169,2 @@\n-        robot.delay(500);\n-\n-        if (!jTextArea.getText().equals(EXPECTED_RESULT_CAPS)) {\n-            errorLog.append(\"For Caps key, Actual and Expected results differ. \\n\"\n-                            + \"Expected Text : \" + EXPECTED_RESULT_CAPS\n-                            + \" Actual Text : \" + jTextArea.getText() + \"\\n\");\n-        }\n+        robot.delay(100);\n+        checkResult(EXPECTED_RESULT_CAPS, \"For Caps key: \");\n@@ -160,3 +173,2 @@\n-    private static void testCmdKey() {\n-        \/\/ clear contents of JTextArea\n-        jTextArea.setText(\"\");\n+    private static void testCmdKey() throws Exception {\n+        invokeAndWait(() -> jTextArea.setText(\"\"));\n@@ -173,7 +185,2 @@\n-        robot.delay(500);\n-\n-        if (!jTextArea.getText().equals(EXPECTED_RESULT_META)) {\n-            errorLog.append(\"For Command key, Actual and Expected results differ \\n\"\n-                            + \"Expected Text : \" + EXPECTED_RESULT_META\n-                            + \" Actual Text : \" + jTextArea.getText() + \"\\n\");\n-        }\n+        robot.delay(100);\n+        checkResult(EXPECTED_RESULT_META, \"For Command key: \");\n@@ -182,2 +189,2 @@\n-    private static void testAltKey() {\n-        jTextArea.setText(\"\");\n+    private static void testAltKey() throws Exception {\n+        invokeAndWait(() -> jTextArea.setText(\"\"));\n@@ -190,2 +197,1 @@\n-\n-            robot.delay(100);\n+            robot.delay(50);\n@@ -194,7 +200,2 @@\n-        robot.delay(500);\n-\n-        if (!jTextArea.getText().equals(EXPECTED_RESULT_ALT)) {\n-            errorLog.append(\"For Alt key, Actual and Expected results differ \\n\"\n-                            + \"Expected Text : \" + EXPECTED_RESULT_ALT\n-                            + \" Actual Text : \" + jTextArea.getText() + \"\\n\");\n-        }\n+        robot.delay(100);\n+        checkResult(EXPECTED_RESULT_ALT, \"For Alt key: \");\n@@ -203,2 +204,2 @@\n-    private static void testCtrlKey() {\n-        jTextArea.setText(\"\");\n+    private static void testCtrlKey() throws Exception {\n+        invokeAndWait(() -> jTextArea.setText(\"\"));\n@@ -211,2 +212,1 @@\n-\n-            robot.delay(100);\n+            robot.delay(50);\n@@ -215,1 +215,1 @@\n-        robot.delay(200);\n+        robot.delay(50);\n@@ -221,1 +221,1 @@\n-        robot.delay(500);\n+        robot.delay(100);\n@@ -223,5 +223,18 @@\n-        if (jTextArea.getCaretPosition() != EXPECTED_CARET_POS_CTRL) {\n-            errorLog.append(\"For Control key, Actual and Expected caret position differ\\n\"\n-                            + \"Expected Position : \" + EXPECTED_CARET_POS_CTRL\n-                            + \" Actual Position : \" + jTextArea.getCaretPosition() + \"\\n\");\n-        }\n+        checkResult(EXPECTED_RESULT_CTRL, \"For Control key: \");\n+    }\n+\n+    private static void createInstructionsUI() {\n+        jFrame = new JFrame(\"Manual Test Instructions\");\n+        jTextArea = new JTextArea(INSTRUCTIONS);\n+\n+        JScrollPane pane = new JScrollPane(jTextArea);\n+        jFrame.getContentPane().add(pane, BorderLayout.CENTER);\n+\n+        JButton jButton = new JButton(\"Start\");\n+        jButton.addActionListener(e -> startTest = true);\n+        jFrame.getContentPane().add(jButton, BorderLayout.PAGE_END);\n+\n+        jFrame.setSize(560,200);\n+        jFrame.setLocation(200, 200);\n+        jFrame.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        jFrame.setVisible(true);\n@@ -231,1 +244,2 @@\n-        jFrame = new JFrame(\"RobotModifierMaskTest\");\n+        String mode = isManual ? \"MANUAL\" : \"AUTOMATED\" ;\n+        jFrame = new JFrame(\"RobotModifierMaskTest - Mode: \" + mode);\n@@ -234,2 +248,3 @@\n-        jFrame.getContentPane().add(pane);\n-        jFrame.setSize(600,320);\n+        jFrame.getContentPane().add(pane, BorderLayout.CENTER);\n+\n+        jFrame.setSize(450,100);\n@@ -240,0 +255,18 @@\n+\n+    private static void checkResult(String expectedResult, String s) throws Exception {\n+        invokeAndWait(() -> {\n+            boolean condition = expectedResult.equals(EXPECTED_RESULT_CTRL)\n+                                ? jTextArea.getCaretPosition() != Integer.parseInt(EXPECTED_RESULT_CTRL)\n+                                : !jTextArea.getText().equals(expectedResult);\n+\n+            String actualResult = expectedResult.equals(EXPECTED_RESULT_CTRL)\n+                                  ? String.valueOf(jTextArea.getCaretPosition())\n+                                  : jTextArea.getText();\n+\n+            if (condition) {\n+                errorLog.append(s + \"Actual and Expected results differ\"\n+                        + \" Expected : \" + expectedResult\n+                        + \" Actual : \" + actualResult + \"\\n\");\n+            }\n+        });\n+    }\n","filename":"test\/jdk\/java\/awt\/Robot\/RobotModifierMaskTest.java","additions":124,"deletions":91,"binary":false,"changes":215,"status":"modified"}]}