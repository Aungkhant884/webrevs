{"files":[{"patch":"@@ -0,0 +1,123 @@\n+\/*\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.*;\n+import java.awt.event.*;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8299296\n+ * @summary Verify that Component selection via mouse generates ItemEvent.\n+ * @run main ComponentItemEventTest\n+ *\/\n+public class ComponentItemEventTest {\n+\n+    private static Frame frame;\n+    private volatile static Choice choice;\n+    private volatile static Checkbox cb;\n+    private static Robot robot;\n+    private volatile static boolean cbStateChanged = false;\n+    private volatile static boolean choiceStateChanged = false;\n+    private volatile static Point compAt;\n+    private volatile static Dimension compSize;\n+\n+    private static void initializeGUI() {\n+        frame = new Frame(\"Test Frame\");\n+        frame.setLayout(new FlowLayout());\n+        choice = new Choice();\n+        for (int i = 0; i < 8; i++) {\n+            choice.add(\"Choice \"+i);\n+        }\n+        choice.select(3);\n+        choice.addItemListener((event) -> {\n+            System.out.println(\"Choice got an ItemEvent: \" + event);\n+            choiceStateChanged = true;\n+        });\n+\n+        cb = new Checkbox(\"CB\");\n+        cb.addItemListener((event) -> {\n+            System.out.println(\"Checkbox got an ItemEvent: \" + event);\n+            cbStateChanged = true;\n+        });\n+        frame.add(choice);\n+        frame.add(cb);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(ComponentItemEventTest::initializeGUI);\n+            robot = new Robot();\n+            robot.setAutoDelay(1000);\n+            robot.setAutoWaitForIdle(true);\n+\n+            robot.waitForIdle();\n+            EventQueue.invokeAndWait(() -> {\n+                compAt = choice.getLocationOnScreen();\n+                compSize = choice.getSize();\n+            });\n+            robot.mouseMove(compAt.x + choice.getSize().width - 10,\n+                compAt.y + compSize.height \/ 2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseMove(compAt.x + compSize.width \/ 2,\n+                compAt.y + compSize.height + 15);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            robot.waitForIdle();\n+            if (!choiceStateChanged) {\n+                throw new RuntimeException(\n+                    \"FAIL: Choice did not trigger ItemEvent when item selected!\");\n+            }\n+\n+            EventQueue.invokeAndWait(() -> {\n+                compAt = cb.getLocationOnScreen();\n+                compSize = cb.getSize();\n+            });\n+            robot.mouseMove(compAt.x + compSize.width \/ 2,\n+                compAt.y + compSize.height \/ 2);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            robot.waitForIdle();\n+            if (!cbStateChanged) {\n+                throw new RuntimeException(\n+                    \"FAIL: Checkbox did not trigger ItemEvent when item selected!\");\n+            }\n+            System.out.println(\"Test passed!\");\n+        } finally {\n+            EventQueue.invokeAndWait(ComponentItemEventTest::disposeFrame);\n+        }\n+    }\n+\n+    public static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/event\/ComponentEvent\/ComponentItemEventTest.java","additions":123,"deletions":0,"binary":false,"changes":123,"status":"added"}]}