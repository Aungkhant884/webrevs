{"files":[{"patch":"@@ -28,2 +28,0 @@\n-import com.sun.tools.javac.util.DefinedBy.Api;\n-\n@@ -135,1 +133,1 @@\n-            \/\/ required. Moreover, java.util.Name implements javax.lang.model.element.Name,\n+            \/\/ required. Moreover, javac.util.Name implements javax.lang.model.element.Name,\n@@ -138,4 +136,7 @@\n-            \/\/ which ends up calling to this method when the two arguments have the same class.\n-            \/\/ Therefore, for this method, we relax \"same table\" to \"same class\".\n-            Assert.check(name0.getClass() == getClass());\n-            NameImpl name = (NameImpl)name0;\n+            \/\/ which ends up calling to this method via the Comparable<Object> interface\n+            \/\/ and a bridge method when the two arguments have the same class.\n+            \/\/ Therefore, for this method, we relax \"same table\", and delegate to the more\n+            \/\/ general super method if necessary.\n+            if (!(name0 instanceof NameImpl name)) {\n+                return super.compareTo(name0);\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Utf8NameTable.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-     * Tests operations using a single name tbale\n+     * Tests operations using a single name table.\n","filename":"test\/langtools\/tools\/javac\/nametable\/TestNameTables.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}