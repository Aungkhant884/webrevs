{"files":[{"patch":"@@ -168,1 +168,1 @@\n-    private final Messager messager;\n+    private final JavadocLog log;\n@@ -213,1 +213,1 @@\n-        this.messager = Messager.instance0(context);\n+        this.log = JavadocLog.instance0(context);\n@@ -373,1 +373,1 @@\n-            String text = messager.getText(\"main.cannot_use_sourcepath_for_modules\",\n+            String text = log.getText(\"main.cannot_use_sourcepath_for_modules\",\n@@ -380,1 +380,1 @@\n-            String text = messager.getText(\"main.module_not_found_on_sourcepath\", moduleNames.get(0));\n+            String text = log.getText(\"main.module_not_found_on_sourcepath\", moduleNames.get(0));\n@@ -385,1 +385,1 @@\n-            String text = messager.getText(\"main.sourcepath_does_not_contain_module\", moduleNames.get(0));\n+            String text = log.getText(\"main.sourcepath_does_not_contain_module\", moduleNames.get(0));\n@@ -402,1 +402,1 @@\n-            String text = messager.getText(\"main.file.manager.list\", location);\n+            String text = log.getText(\"main.file.manager.list\", location);\n@@ -416,1 +416,1 @@\n-                String text = messager.getText(\"main.module_not_found\", m);\n+                String text = log.getText(\"main.module_not_found\", m);\n@@ -523,1 +523,1 @@\n-            String text = messager.getText(\"main.file.manager.list\", packagename);\n+            String text = log.getText(\"main.file.manager.list\", packagename);\n@@ -570,1 +570,1 @@\n-                        messager.printWarningUsingKey(dep, \"main.module_source_not_found\", dep.getQualifiedName());\n+                        log.printWarningUsingKey(dep, \"main.module_source_not_found\", dep.getQualifiedName());\n@@ -762,1 +762,1 @@\n-                messager.printWarningUsingKey(\"main.package_not_found\", modpkg.toString());\n+                log.printWarningUsingKey(\"main.package_not_found\", modpkg.toString());\n@@ -783,1 +783,1 @@\n-                String text = messager.getText(\"javadoc.class_not_found\", className);\n+                String text = log.getText(\"javadoc.class_not_found\", className);\n@@ -799,1 +799,1 @@\n-                String text = messager.getText(\"main.no_source_files_for_package\",\n+                String text = log.getText(\"main.no_source_files_for_package\",\n@@ -912,1 +912,1 @@\n-            String text = messager.getText(\"main.doclet_could_not_get_location\", msymName);\n+            String text = log.getText(\"main.doclet_could_not_get_location\", msymName);\n@@ -959,1 +959,1 @@\n-                messager.printWarning(e.getMessage());\n+                log.printWarning(e.getMessage());\n@@ -961,1 +961,1 @@\n-                messager.printWarningUsingKey(\"main.unexpected.exception\", e);\n+                log.printWarningUsingKey(\"main.unexpected.exception\", e);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ElementsTable.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        messager = Messager.instance0(context);\n+        log = JavadocLog.instance0(context);\n@@ -69,1 +69,1 @@\n-    final Messager messager;\n+    final JavadocLog log;\n@@ -76,1 +76,1 @@\n-        int nerrors = messager.nerrors;\n+        int nerrors = log.nerrors;\n@@ -80,2 +80,2 @@\n-            messager.nwarnings += (messager.nerrors - nerrors);\n-            messager.nerrors = nerrors;\n+            log.nwarnings += (log.nerrors - nerrors);\n+            log.nerrors = nerrors;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/JavadocEnter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -126,1 +126,1 @@\n-public class Messager extends Log implements Reporter {\n+public class JavadocLog extends Log implements Reporter {\n@@ -141,2 +141,2 @@\n-    \/** Get the current messager, which is also the compiler log. *\/\n-    public static Messager instance0(Context context) {\n+    \/** Get the current javadoc log, which is also the compiler log. *\/\n+    public static JavadocLog instance0(Context context) {\n@@ -144,3 +144,3 @@\n-        if (!(instance instanceof Messager m))\n-            throw new InternalError(\"no messager instance!\");\n-        return m;\n+        if (!(instance instanceof JavadocLog l))\n+            throw new InternalError(\"no JavadocLog instance!\");\n+        return l;\n@@ -151,1 +151,1 @@\n-        context.put(logKey, (Factory<Log>)c -> new Messager(c, programName));\n+        context.put(logKey, (Factory<Log>)c -> new JavadocLog(c, programName));\n@@ -156,1 +156,1 @@\n-        context.put(logKey, (Factory<Log>)c -> new Messager(c, programName, outWriter, errWriter));\n+        context.put(logKey, (Factory<Log>)c -> new JavadocLog(c, programName, outWriter, errWriter));\n@@ -179,1 +179,1 @@\n-    public Messager(Context context, String programName) {\n+    public JavadocLog(Context context, String programName) {\n@@ -192,1 +192,1 @@\n-    public Messager(Context context, String programName, PrintWriter outWriter, PrintWriter errWriter) {\n+    public JavadocLog(Context context, String programName, PrintWriter outWriter, PrintWriter errWriter) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/JavadocLog.java","additions":10,"deletions":10,"binary":false,"changes":20,"previous_filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/Messager.java","status":"renamed"},{"patch":"@@ -73,1 +73,1 @@\n-    final Messager messager;\n+    final JavadocLog log;\n@@ -85,1 +85,1 @@\n-        messager = Messager.instance0(context);\n+        log = JavadocLog.instance0(context);\n@@ -104,1 +104,1 @@\n-        Messager messager = null;\n+        JavadocLog log = null;\n@@ -118,2 +118,2 @@\n-            \/\/ force the use of Messager as a Log\n-            messager = Messager.instance0(context);\n+            \/\/ force the use of Javadoc's subtype of Log\n+            log = JavadocLog.instance0(context);\n@@ -123,2 +123,2 @@\n-            assert messager != null;\n-            messager.error(Position.NOPOS, ex.getMessage());\n+            assert log != null;\n+            log.error(Position.NOPOS, ex.getMessage());\n@@ -145,1 +145,1 @@\n-                    String text = messager.getText(\"main.illegal_class_name\", arg);\n+                    String text = log.getText(\"main.illegal_class_name\", arg);\n@@ -149,1 +149,1 @@\n-            if (messager.hasErrors()) {\n+            if (log.hasErrors()) {\n@@ -174,1 +174,1 @@\n-                        String text = messager.getText(\"main.assertion.error\", \"fm == null\");\n+                        String text = log.getText(\"main.assertion.error\", \"fm == null\");\n@@ -177,1 +177,1 @@\n-                        String text = messager.getText(\"main.file_not_found\", arg);\n+                        String text = log.getText(\"main.file_not_found\", arg);\n@@ -181,1 +181,1 @@\n-                    String text = messager.getText(\"main.illegal_package_name\", arg);\n+                    String text = log.getText(\"main.illegal_package_name\", arg);\n@@ -194,1 +194,1 @@\n-            if (messager.hasErrors()) {\n+            if (log.hasErrors()) {\n@@ -205,1 +205,1 @@\n-            if (messager.hasErrors()) {\n+            if (log.hasErrors()) {\n@@ -213,1 +213,1 @@\n-            if (messager.hasErrors()) {\n+            if (log.hasErrors()) {\n@@ -235,1 +235,1 @@\n-            if (messager.hasErrors()) {\n+            if (log.hasErrors()) {\n@@ -239,1 +239,1 @@\n-                String text = messager.getText(\"main.internal.error\");\n+                String text = log.getText(\"main.internal.error\");\n@@ -245,1 +245,1 @@\n-        if (messager.hasErrors())\n+        if (log.hasErrors())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/JavadocTool.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-    private Messager messager;\n+    private JavadocLog log;\n@@ -97,1 +97,1 @@\n-    \/\/ used to determine the locale for the messager\n+    \/\/ used to determine the locale for the log\n@@ -123,3 +123,3 @@\n-        this.messager = (outWriter == null && errWriter == null)\n-                ? new Messager(this.context, pname)\n-                : new Messager(this.context, pname, outWriter, errWriter);\n+        this.log = (outWriter == null && errWriter == null)\n+                ? new JavadocLog(this.context, pname)\n+                : new JavadocLog(this.context, pname, outWriter, errWriter);\n@@ -143,2 +143,2 @@\n-        if (log instanceof Messager m){\n-            messager = m;\n+        if (log instanceof JavadocLog l){\n+            this.log = l;\n@@ -147,3 +147,3 @@\n-            messager = (out == null)\n-                    ? new Messager(context, ProgramName)\n-                    : new Messager(context, ProgramName, out, out);\n+            this.log = (out == null)\n+                    ? new JavadocLog(context, ProgramName)\n+                    : new JavadocLog(context, ProgramName, out, out);\n@@ -186,1 +186,1 @@\n-        return new ToolOptions(context, messager, helper);\n+        return new ToolOptions(context, log, helper);\n@@ -198,1 +198,1 @@\n-        messager.noticeUsingKey(headerKey);\n+        log.noticeUsingKey(headerKey);\n@@ -208,1 +208,1 @@\n-            messager.noticeUsingKey(footerKey);\n+            log.noticeUsingKey(footerKey);\n@@ -212,1 +212,1 @@\n-        messager.noticeUsingKey(labelKey, messager.programName, value);\n+        log.noticeUsingKey(labelKey, log.programName, value);\n@@ -241,1 +241,1 @@\n-            parameters = sep + option.getParameters(messager);\n+            parameters = sep + option.getParameters(log);\n@@ -245,1 +245,1 @@\n-        String description = option.getDescription(messager);\n+        String description = option.getDescription(log);\n@@ -255,1 +255,1 @@\n-        messager.noticeUsingKey(\"main.doclet.usage.header\", name);\n+        log.noticeUsingKey(\"main.doclet.usage.header\", name);\n@@ -310,1 +310,1 @@\n-            messager.notice(String.format(COMPACT_FORMAT, synopses, description));\n+            log.notice(String.format(COMPACT_FORMAT, synopses, description));\n@@ -317,1 +317,1 @@\n-            messager.notice(SMALL_INDENT + synopses);\n+            log.notice(SMALL_INDENT + synopses);\n@@ -320,1 +320,1 @@\n-                messager.notice(SMALL_INDENT + name + parameters);\n+                log.notice(SMALL_INDENT + name + parameters);\n@@ -325,1 +325,1 @@\n-        messager.notice(LARGE_INDENT + description.replace(\"\\n\", \"\\n\" + LARGE_INDENT));\n+        log.notice(LARGE_INDENT + description.replace(\"\\n\", \"\\n\" + LARGE_INDENT));\n@@ -375,1 +375,1 @@\n-                    messager.printError(te.message);\n+                    log.printError(te.message);\n@@ -383,1 +383,1 @@\n-                messager.printError(oe.message);\n+                log.printError(oe.message);\n@@ -400,1 +400,1 @@\n-            messager.printRawLines(e.getMessage());\n+            log.printRawLines(e.getMessage());\n@@ -409,1 +409,1 @@\n-                messager.printError(oe.message);\n+                log.printError(oe.message);\n@@ -417,1 +417,1 @@\n-                messager.printError(exc.message);\n+                log.printError(exc.message);\n@@ -444,1 +444,1 @@\n-            if (this.options.rejectWarnings() && messager.hasWarnings()) {\n+            if (this.options.rejectWarnings() && log.hasWarnings()) {\n@@ -447,1 +447,1 @@\n-            boolean haveErrors = messager.hasErrors();\n+            boolean haveErrors = log.hasErrors();\n@@ -455,2 +455,2 @@\n-            messager.printErrorWarningCounts();\n-            messager.flush();\n+            log.printErrorWarningCounts();\n+            log.flush();\n@@ -462,1 +462,1 @@\n-        messager.printErrorUsingKey(\"doclet.internal.report.bug\");\n+        log.printErrorUsingKey(\"doclet.internal.report.bug\");\n@@ -496,2 +496,2 @@\n-        doclet.init(locale, messager);\n-        int beforeCount = messager.nerrors;\n+        doclet.init(locale, log);\n+        int beforeCount = log.nerrors;\n@@ -499,1 +499,1 @@\n-        int afterCount = messager.nerrors;\n+        int afterCount = log.nerrors;\n@@ -508,2 +508,2 @@\n-            if (!messager.hasErrors() && !messager.hasWarnings())\n-                messager.nerrors++;\n+            if (!log.hasErrors() && !log.hasWarnings())\n+                log.nerrors++;\n@@ -517,2 +517,2 @@\n-            if (!messager.hasErrors() && !messager.hasWarnings())\n-                messager.nerrors++;\n+            if (!log.hasErrors() && !log.hasWarnings())\n+                log.nerrors++;\n@@ -537,1 +537,1 @@\n-                    String text = messager.getText(\"main.No_modules_packages_or_classes_specified\");\n+                    String text = log.getText(\"main.No_modules_packages_or_classes_specified\");\n@@ -563,1 +563,1 @@\n-            messager.noticeUsingKey(\"main.done_in\", Long.toString(elapsedMillis));\n+            log.noticeUsingKey(\"main.done_in\", Long.toString(elapsedMillis));\n@@ -613,1 +613,1 @@\n-                            text = messager.getText(\"main.unnecessary_arg_provided\", argBase);\n+                            text = log.getText(\"main.unnecessary_arg_provided\", argBase);\n@@ -621,1 +621,1 @@\n-                            text = messager.getText(\"main.only_one_argument_with_equals\", argBase);\n+                            text = log.getText(\"main.only_one_argument_with_equals\", argBase);\n@@ -626,1 +626,1 @@\n-                        text = messager.getText(\"main.requires_argument\", arg);\n+                        text = log.getText(\"main.requires_argument\", arg);\n@@ -639,1 +639,1 @@\n-            text = messager.getText(\"main.invalid_flag\", arg);\n+            text = log.getText(\"main.invalid_flag\", arg);\n@@ -689,1 +689,1 @@\n-                    String text = messager.getText(\"main.more_than_one_doclet_specified_0_and_1\",\n+                    String text = log.getText(\"main.more_than_one_doclet_specified_0_and_1\",\n@@ -698,1 +698,1 @@\n-                    String text = messager.getText(\"main.more_than_one_doclet_specified_0_and_1\",\n+                    String text = log.getText(\"main.more_than_one_doclet_specified_0_and_1\",\n@@ -733,1 +733,1 @@\n-                            String text = messager.getText(\"main.doclet_could_not_set_location\",\n+                            String text = log.getText(\"main.doclet_could_not_set_location\",\n@@ -746,1 +746,1 @@\n-                        String text = messager.getText(\"main.doclet_no_classloader_found\",\n+                        String text = log.getText(\"main.doclet_no_classloader_found\",\n@@ -760,1 +760,1 @@\n-            messager.setLocale(Locale.getDefault());  \/\/ use default locale for console messages\n+            log.setLocale(Locale.getDefault());  \/\/ use default locale for console messages\n@@ -768,1 +768,1 @@\n-                String text = messager.getText(\"main.could_not_instantiate_class\", docletClass.getName());\n+                String text = log.getText(\"main.could_not_instantiate_class\", docletClass.getName());\n@@ -772,1 +772,1 @@\n-            String text = messager.getText(\"main.not_a_doclet\", docletClass.getName());\n+            String text = log.getText(\"main.not_a_doclet\", docletClass.getName());\n@@ -785,1 +785,1 @@\n-            String text = messager.getText(\"main.doclet_class_not_found\", docletName);\n+            String text = log.getText(\"main.doclet_class_not_found\", docletName);\n@@ -845,1 +845,1 @@\n-            String text = messager.getText(\"main.requires_argument\", args.get(index));\n+            String text = log.getText(\"main.requires_argument\", args.get(index));\n@@ -851,1 +851,1 @@\n-        messager.printErrorUsingKey(key, args);\n+        log.printErrorUsingKey(key, args);\n@@ -868,1 +868,1 @@\n-            String text = messager.getText(\"main.malformed_locale_name\", localeName);\n+            String text = log.getText(\"main.malformed_locale_name\", localeName);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/Start.java","additions":55,"deletions":55,"binary":false,"changes":110,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    final Messager messager;\n+    final JavadocLog log;\n@@ -140,1 +140,1 @@\n-        messager = Messager.instance0(context);\n+        log = JavadocLog.instance0(context);\n@@ -202,1 +202,1 @@\n-        messager.noticeUsingKey(key);\n+        log.noticeUsingKey(key);\n@@ -215,1 +215,1 @@\n-        messager.noticeUsingKey(key, a1);\n+        log.noticeUsingKey(key, a1);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ToolEnvironment.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,1 +171,1 @@\n-     * The messager to be used to report diagnostics..\n+     * The log to be used to report diagnostics..\n@@ -173,1 +173,1 @@\n-    private final Messager messager;\n+    private final JavadocLog log;\n@@ -184,1 +184,1 @@\n-     * @param messager the messager to be used to report diagnostics\n+     * @param log the log to be used to report diagnostics\n@@ -186,2 +186,2 @@\n-    ToolOptions(Context context, Messager messager, ShowHelper showHelper) {\n-        this.messager = messager;\n+    ToolOptions(Context context, JavadocLog log, ShowHelper showHelper) {\n+        this.log = log;\n@@ -203,1 +203,1 @@\n-        messager = null;\n+        log = null;\n@@ -649,1 +649,1 @@\n-        String getParameters(Messager messager) {\n+        String getParameters(JavadocLog log) {\n@@ -651,1 +651,1 @@\n-                    ? messager.getText(getKey(primaryName, \".arg\"))\n+                    ? log.getText(getKey(primaryName, \".arg\"))\n@@ -655,2 +655,2 @@\n-        String getDescription(Messager messager) {\n-            return messager.getText(getKey(primaryName, \".desc\"));\n+        String getDescription(JavadocLog log) {\n+            return log.getText(getKey(primaryName, \".desc\"));\n@@ -836,1 +836,1 @@\n-        return new IllegalOptionValue(showHelper::usage, messager.getText(\"main.illegal_option_value\", arg));\n+        return new IllegalOptionValue(showHelper::usage, log.getText(\"main.illegal_option_value\", arg));\n@@ -867,1 +867,1 @@\n-        return new OptionHelper.GrumpyHelper(messager) {\n+        return new OptionHelper.GrumpyHelper(log) {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ToolOptions.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -230,1 +230,1 @@\n-            \/\/ jdk.javadoc.internal.tool.Messager\n+            \/\/ jdk.javadoc.internal.tool.JavadocLog\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckResourceKeys.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-import jdk.javadoc.internal.tool.Messager;\n+import jdk.javadoc.internal.tool.JavadocLog;\n@@ -84,1 +84,1 @@\n-        Messager.preRegister(c, \"javadoc\");\n+        JavadocLog.preRegister(c, \"javadoc\");\n@@ -102,1 +102,1 @@\n-        Messager.preRegister(c, \"javadoc\");\n+        JavadocLog.preRegister(c, \"javadoc\");\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/api\/basic\/JavadocTaskImplTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}