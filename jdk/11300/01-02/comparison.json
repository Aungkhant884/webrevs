{"files":[{"patch":"@@ -25,2 +25,2 @@\n- * @test Class unloading test while triggering execution of ClassLoaderStats VM operations\n- * @summary Make sure class unloading occur even if ClassLoaderStats VM operations are executed\n+ * @test Make sure class unloading occur even if ClassLoaderStats VM operations are executed\n+ * @bug 8297427\n@@ -29,2 +29,1 @@\n- * @library \/test\/lib\n- * @library classes\n+ * @library \/test\/lib classes\n@@ -35,2 +34,1 @@\n-import jdk.test.whitebox.WhiteBox;\n-\n+import java.lang.ref.Reference;\n@@ -40,0 +38,1 @@\n+import jdk.test.whitebox.WhiteBox;\n@@ -50,1 +49,1 @@\n-        Runnable task = () -> {\n+        var clsThread = new Thread(() -> {\n@@ -54,2 +53,1 @@\n-        };\n-        var clsThread = new Thread(task);\n+        });\n@@ -75,1 +73,1 @@\n-        \/\/ Printing the object to ensure the class is kept alive. If the test\n+        \/\/ Using reachabilityFence() to ensure the object is live. If the test\n@@ -78,1 +76,3 @@\n-        System.out.println(\"testClassIsUnloaded loaded klass: \" + className + \" and created object: \" + object);\n+        Reference.reachabilityFence(object);\n+\n+        System.out.println(\"testClassIsUnloaded loaded klass: \" + className);\n@@ -106,1 +106,1 @@\n-        \/\/ Printing the objects to ensure the classes are kept alive. If the test\n+        \/\/ Using reachabilityFence() to ensure the objects are live. If the test\n@@ -109,2 +109,5 @@\n-        System.out.println(\"testClassLoadedInParentIsUnloaded loaded klass: \" + loadedParent + \" and created object: \" + parent);\n-        System.out.println(\"testClassLoadedInParentIsUnloaded loaded klass: \" + loadedChild + \" and created object: \" + child);\n+        Reference.reachabilityFence(parent);\n+        Reference.reachabilityFence(child);\n+\n+        System.out.println(\"testClassLoadedInParentIsUnloaded loaded klass: \" + loadedParent);\n+        System.out.println(\"testClassLoadedInParentIsUnloaded loaded klass: \" + loadedChild);\n","filename":"test\/hotspot\/jtreg\/runtime\/ClassUnload\/UnloadTestDuringClassLoaderStatsVMOperation.java","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"}]}