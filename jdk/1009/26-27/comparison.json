{"files":[{"patch":"@@ -157,4 +157,0 @@\n-    \/\/ Notice that this is not strictly necessary for mark-compact. But since\n-    \/\/ it requires a StrongRootsScope around the task, we need to claim the\n-    \/\/ threads, and performance-wise it doesn't really matter. Adds about 1ms to\n-    \/\/ full-gc.\n@@ -168,0 +164,1 @@\n+\n@@ -346,1 +343,0 @@\n-  TaskTerminator terminator(nworkers, task_queues());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentMark.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-  _marking_context = new ShenandoahMarkingContext(_heap_region, _bitmap_region, _num_regions, MAX2(_max_workers, 1U));\n+  _marking_context = new ShenandoahMarkingContext(_heap_region, _bitmap_region, _num_regions, _max_workers);\n@@ -1610,0 +1610,1 @@\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+  assert(max_queues > 0, \"At least one queue\");\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}