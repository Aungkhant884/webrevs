{"files":[{"patch":"@@ -62,1 +62,0 @@\n-#include \"gc\/shenandoah\/shenandoahTaskqueue.hpp\"\n@@ -250,1 +249,1 @@\n-  _marking_context = new ShenandoahMarkingContext(_heap_region, _bitmap_region, _num_regions);\n+  _marking_context = new ShenandoahMarkingContext(_heap_region, _bitmap_region, _num_regions, MAX2(_max_workers, 1U));\n@@ -461,1 +460,0 @@\n-  _task_queues(NULL),\n@@ -613,10 +611,0 @@\n-  \/\/ Task queues\n-  uint num_queues = MAX2(_max_workers, 1U);\n-  _task_queues = new ShenandoahObjToScanQueueSet((int) num_queues);\n-  for (uint i = 0; i < num_queues; ++i) {\n-    ShenandoahObjToScanQueue* task_queue = new ShenandoahObjToScanQueue();\n-    task_queue->initialize();\n-    _task_queues->register_queue(i, task_queue);\n-  }\n-\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -62,1 +62,0 @@\n-class ShenandoahObjToScanQueueSet;\n@@ -449,6 +448,0 @@\n-private:\n-  ShenandoahObjToScanQueueSet* _task_queues;\n-\n-public:\n-  ShenandoahObjToScanQueueSet* task_queues() const { return _task_queues; }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-#include \"gc\/shenandoah\/shenandoahTaskqueue.hpp\"\n+#include \"gc\/shenandoah\/shenandoahTaskqueue.inline.hpp\"\n@@ -57,1 +57,1 @@\n-  _task_queues(_heap->task_queues()) {\n+  _task_queues(_heap->marking_context()->task_queues()) {\n@@ -62,1 +62,1 @@\n-  ShenandoahObjToScanQueueSet* queues = ShenandoahHeap::heap()->task_queues();\n+  ShenandoahObjToScanQueueSet* queues = ShenandoahHeap::heap()->marking_context()->task_queues();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMark.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+#include \"gc\/shenandoah\/shenandoahTaskqueue.inline.hpp\"\n+#include \"utilities\/stack.inline.hpp\"\n@@ -31,1 +33,1 @@\n-ShenandoahMarkingContext::ShenandoahMarkingContext(MemRegion heap_region, MemRegion bitmap_region, size_t num_regions) :\n+ShenandoahMarkingContext::ShenandoahMarkingContext(MemRegion heap_region, MemRegion bitmap_region, size_t num_regions, uint max_queues) :\n@@ -36,1 +38,7 @@\n-                      ((uintx) heap_region.start() >> ShenandoahHeapRegion::region_size_bytes_shift())) {\n+                      ((uintx) heap_region.start() >> ShenandoahHeapRegion::region_size_bytes_shift())),\n+  _task_queues(new ShenandoahObjToScanQueueSet(max_queues)) {\n+  for (uint i = 0; i < max_queues; ++i) {\n+    ShenandoahObjToScanQueue* task_queue = new ShenandoahObjToScanQueue();\n+    task_queue->initialize();\n+    _task_queues->register_queue(i, task_queue);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+class ShenandoahObjToScanQueueSet;\n+\n@@ -39,0 +41,1 @@\n+  \/\/ Marking bitmap\n@@ -47,0 +50,3 @@\n+  \/\/ Marking task queues\n+  ShenandoahObjToScanQueueSet* _task_queues;\n+\n@@ -48,1 +54,1 @@\n-  ShenandoahMarkingContext(MemRegion heap_region, MemRegion bitmap_region, size_t num_regions);\n+  ShenandoahMarkingContext(MemRegion heap_region, MemRegion bitmap_region, size_t num_regions, uint max_queues);\n@@ -83,0 +89,2 @@\n+  \/\/ Task queues\n+  ShenandoahObjToScanQueueSet* task_queues() const { return _task_queues; }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahMarkingContext.hpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-  _terminator(ShenandoahHeap::heap()->workers()->active_workers(), ShenandoahHeap::heap()->task_queues()),\n+  _terminator(ShenandoahHeap::heap()->workers()->active_workers(), ShenandoahHeap::heap()->marking_context()->task_queues()),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahSTWMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}