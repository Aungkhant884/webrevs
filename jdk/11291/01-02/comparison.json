{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,4 +24,9 @@\n-import java.io.File;\n-import java.awt.BorderLayout;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n+\/*\n+ * @test\n+ * @bug 8078471\n+ * @key headful\n+ * @requires (os.family == \"linux\")\n+ * @summary Verifies if filechooser current directory changed to parent directory on\n+ * BACKSPACE key press from keyboard except root directory.\n+ * @run main TestBackSpaceAction\n+ *\/\n@@ -29,1 +34,7 @@\n-import javax.swing.JButton;\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.event.HierarchyEvent;\n+import java.awt.event.HierarchyListener;\n+import java.awt.event.KeyEvent;\n+import java.awt.Robot;\n+import java.io.File;\n@@ -31,1 +42,0 @@\n-import javax.swing.JFrame;\n@@ -33,0 +43,2 @@\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n@@ -37,9 +49,0 @@\n-\/* @test\n- * @bug 8078471\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @requires (os.family == \"linux\")\n- * @summary Verifies if filechooser current directory changed to parent directory on\n- * BACKSPACE key press from keyboard if not at root directory.\n- * @run main\/manual TestBackSpaceAction\n- *\/\n@@ -48,18 +51,7 @@\n-    static TestFrame testObj;\n-    static final String instructions\n-            = \"\"\"\n-            Default look and feel set to Metal.\n-\n-\n-            INSTRUCTIONS:\n-               1. Double click on 'subDir' to move into 'subDir' folder.\n-               2. Press BACKSPACE key multiple times.\n-               3. Verify the file chooser directory changed to parent directory\n-                  except root level.\n-               4. Press Nimbus button to change look and feel to Nimbus.\n-               5. Repeat Steps 1 to 3.\n-               6. Press GTK+ button to change look and feel to GTK.\n-               7. Repeat Steps 1 to 3.\n-               8. Press Pass if execution is as per instructions else Press Fail.\n-            \"\"\";\n-    static PassFailJFrame passFailJFrame;\n+    private static JFrame frame;\n+    private static JFileChooser fileChooser;\n+    private static Robot robot;\n+    private static File testDir;\n+    private static File subDir;\n+    private static File prevDir;\n+    private static File crntDir;\n@@ -68,23 +60,2 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            try {\n-                passFailJFrame = new PassFailJFrame(\"JFileChooser Test Instructions\",\n-                        instructions, 5, 15, 50);\n-                testObj = new TestFrame();\n-                PassFailJFrame.addTestWindow(testObj);\n-                PassFailJFrame.positionTestWindow(testObj,\n-                        PassFailJFrame.Position.HORIZONTAL);\n-                testObj.setVisible(true);\n-            } catch (Exception e) {\n-                e.printStackTrace();\n-            }\n-        });\n-        passFailJFrame.awaitAndCheck();\n-    }\n-}\n-\n-class TestFrame extends JFrame implements ActionListener {\n-    static File testDir;\n-    static File subDir;\n-    static JFileChooser fileChooser;\n-\n-    public TestFrame() {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n@@ -108,8 +79,0 @@\n-        initComponents();\n-    }\n-\n-    public void initComponents() {\n-        JPanel p = new JPanel();\n-        fileChooser = new JFileChooser(testDir);\n-        fileChooser.setControlButtonsAreShown(false);\n-        getContentPane().add(fileChooser);\n@@ -117,7 +80,6 @@\n-        UIManager.LookAndFeelInfo[] lookAndFeel = UIManager.getInstalledLookAndFeels();\n-        for (UIManager.LookAndFeelInfo laf : lookAndFeel) {\n-            if(!laf.getClassName().contains(\"MotifLookAndFeel\")) {\n-                JButton btn = new JButton(laf.getName());\n-                btn.setActionCommand(laf.getClassName());\n-                btn.addActionListener(this);\n-                p.add(btn);\n+        for (UIManager.LookAndFeelInfo laf :\n+                        UIManager.getInstalledLookAndFeels()) {\n+            if (!laf.getClassName().contains(\"MotifLookAndFeel\")) {\n+                System.out.println(\"Testing LAF: \" + laf.getClassName());\n+            \tSwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            \tdoTesting(laf);\n@@ -126,3 +88,0 @@\n-\n-        getContentPane().add(p,BorderLayout.SOUTH);\n-        setSize(500, 500);\n@@ -131,1 +90,1 @@\n-    private static void setLookAndFeel(String laf) {\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n@@ -133,1 +92,1 @@\n-            UIManager.setLookAndFeel(laf);\n+            UIManager.setLookAndFeel(laf.getClassName());\n@@ -135,1 +94,1 @@\n-            System.out.println(\"Unsupported L&F: \" + laf);\n+            System.out.println(\"Unsupported LAF: \" + laf.getClassName());\n@@ -142,5 +101,77 @@\n-    \/\/Change the Look and Feel on user selection\n-    public void actionPerformed(ActionEvent e) {\n-        setLookAndFeel(e.getActionCommand());\n-        SwingUtilities.updateComponentTreeUI(this);\n-        fileChooser.setCurrentDirectory(testDir);\n+    private static void doTesting(UIManager.LookAndFeelInfo laf) throws Exception{\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createAndShowUI();\n+            });\n+            boolean passed_1 = false;\n+            boolean passed_2 = false;\n+            robot.waitForIdle();\n+            robot.delay(100);\n+\n+            \/\/ check backspace key at subDir level\n+            clickBackSpace();\n+            if (prevDir != crntDir) {\n+                passed_1 = true;\n+            }\n+\n+            \/\/ check if backspace key changes directory at root level\n+            while(!fileChooser.getFileSystemView().isFileSystemRoot(prevDir)) {\n+                clickBackSpace();\n+                if (prevDir == crntDir) {\n+                    passed_2 = true;\n+                    break;\n+                }\n+            }\n+\n+            if (passed_1 && passed_2) {\n+                System.out.println(\"Passed\");\n+            } else {\n+                throw new RuntimeException(\"BackSpace keyboard button does not\" +\n+                        \"lead to parent directory for LAF: \" + laf.getClassName());\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void createAndShowUI() {\n+        frame = new JFrame(\"Test File Chooser Backspace Action\");\n+        frame.getContentPane().setLayout(new BorderLayout());\n+        fileChooser = new JFileChooser(subDir);\n+        fileChooser.setControlButtonsAreShown(false);\n+        fileChooser.addHierarchyListener(new HierarchyListener(){\n+            public void hierarchyChanged(HierarchyEvent he)\n+            {\n+                grabFocusForComboBox(fileChooser.getComponents());\n+            }\n+        });\n+        frame.getContentPane().add(fileChooser, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void grabFocusForComboBox(Component[] comp)\n+    {\n+        for (Component c:comp) {\n+            if (c instanceof JComboBox) {\n+                JComboBox cb = (JComboBox)c;\n+                cb.requestFocusInWindow();\n+                break;\n+            } else if (c instanceof JPanel) {\n+                JPanel jp = (JPanel)c;\n+                grabFocusForComboBox(jp.getComponents());\n+            }\n+        }\n+    }\n+\n+    private static void clickBackSpace() {\n+        prevDir = fileChooser.getCurrentDirectory();\n+        robot.keyPress(KeyEvent.VK_BACK_SPACE);\n+        robot.keyRelease(KeyEvent.VK_BACK_SPACE);\n+        crntDir = fileChooser.getCurrentDirectory();\n","filename":"test\/jdk\/com\/sun\/java\/swing\/plaf\/gtk\/TestBackSpaceAction.java","additions":114,"deletions":83,"binary":false,"changes":197,"status":"modified"}]}