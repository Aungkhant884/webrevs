{"files":[{"patch":"@@ -3708,1 +3708,0 @@\n-#ifdef ASSERT\n@@ -3711,7 +3710,3 @@\n-          assert(use == polladr, \"the use should be a safepoint polling\");\n-#endif\n-          continue;\n-        } else {\n-          msg = \"node is used outside loop\";\n-          msg_node = n;\n-          break;\n+          if (use == polladr) {\n+            continue;\n+          }\n@@ -3719,0 +3714,3 @@\n+        msg = \"node is used outside loop\";\n+        msg_node = n;\n+        break;\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,74 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8263352\n+ * @summary assert(use == polladr) failed: the use should be a safepoint polling\n+ * @requires vm.flavor == \"server\"\n+ *\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:+OptimizeFill Test8263352\n+ *\n+ *\/\n+public class Test8263352 {\n+\n+    class Wrap {\n+      public int value;\n+      public Wrap(int v) {\n+        value = v;\n+      }\n+    }\n+\n+    public static int size = 1024;\n+    public static int[] ia = new int[size];\n+\n+    public static void main(String[] args) throws Exception {\n+      Test8263352 m = new Test8263352();\n+      m.test();\n+    }\n+\n+    public void test() throws Exception {\n+      for(int i = 0; i < 20_000; i++) {\n+        Wrap obj = null;\n+        if (i % 113 != 0) {\n+          obj = new Wrap(i);\n+        }\n+        foo(obj);\n+      }\n+    }\n+\n+    public int foo(Wrap obj) throws Exception {\n+        boolean condition = false;\n+        int first = -1;\n+\n+        if (obj == null) {\n+          condition = true;\n+          first = 24;\n+        }\n+\n+        for (int i = 0; i < size; i++) {\n+            ia[i] = condition ? first : obj.value;\n+        }\n+        return 0;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/Test8263352.java","additions":74,"deletions":0,"binary":false,"changes":74,"status":"added"}]}