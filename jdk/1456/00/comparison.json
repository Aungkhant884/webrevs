{"files":[{"patch":"@@ -222,6 +222,13 @@\n-  for (DUIterator_Fast imax, i = vec_box->fast_outs(imax); i < imax; i++) {\n-    Node* use = vec_box->fast_out(i);\n-    if (use->is_SafePoint()) {\n-      SafePointNode* sfpt = use->as_SafePoint();\n-      if (!sfpt->is_Call() || !sfpt->as_Call()->has_non_debug_use(vec_box)) {\n-        safepoints.push(sfpt);\n+  Unique_Node_List worklist(C->comp_arena());\n+  worklist.push(vec_box);\n+  while (worklist.size() > 0) {\n+    Node* n = worklist.pop();\n+    for (DUIterator_Fast imax, i = n->fast_outs(imax); i < imax; i++) {\n+      Node* use = n->fast_out(i);\n+      if (use->is_SafePoint()) {\n+        SafePointNode* sfpt = use->as_SafePoint();\n+        if (!sfpt->is_Call() || !sfpt->as_Call()->has_non_debug_use(n)) {\n+          safepoints.push(sfpt);\n+        }\n+      } else if (use->is_ConstraintCast()) {\n+        worklist.push(use); \/\/ reversed version of Node::uncast()\n@@ -254,5 +261,7 @@\n-    \/\/ to the allocated object with \"sobj\"\n-    int start = jvms->debug_start();\n-    int end   = jvms->debug_end();\n-    sfpt->replace_edges_in_range(vec_box, sobj, start, end);\n-\n+    \/\/ to the allocated object with vector value.\n+    for (uint i = jvms->debug_start(); i < jvms->debug_end(); i++) {\n+      Node* debug = sfpt->in(i);\n+      if (debug != NULL && debug->uncast(\/*keep_deps*\/false) == vec_box) {\n+        sfpt->set_req(i, sobj);\n+      }\n+    }\n","filename":"src\/hotspot\/share\/opto\/vector.cpp","additions":20,"deletions":11,"binary":false,"changes":31,"status":"modified"}]}