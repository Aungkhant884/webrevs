{"files":[{"patch":"@@ -183,0 +183,5 @@\n+    \/\/ some ABIs have special handling for struct members\n+    protected void checkStructMember(MemoryLayout member, long offset) {\n+        checkLayoutRecursive(member);\n+    }\n+\n@@ -194,1 +199,1 @@\n-                checkLayoutRecursive(member);\n+                checkStructMember(member, offset);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/AbstractLinker.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-import java.util.HashMap;\n@@ -44,8 +43,2 @@\n-    static final Map<String, MemoryLayout> CANONICAL_LAYOUTS;\n-\n-    static {\n-        HashMap<String, MemoryLayout> layouts = new HashMap<>();\n-        layouts.putAll(SharedUtils.canonicalLayouts(ValueLayout.JAVA_LONG, ValueLayout.JAVA_LONG, ValueLayout.JAVA_INT));\n-        layouts.put(\"double\", ValueLayout.JAVA_DOUBLE.withByteAlignment(4));\n-        CANONICAL_LAYOUTS = Map.copyOf(layouts);\n-    }\n+    static final Map<String, MemoryLayout> CANONICAL_LAYOUTS =\n+            SharedUtils.canonicalLayouts(ValueLayout.JAVA_LONG, ValueLayout.JAVA_LONG, ValueLayout.JAVA_INT);\n@@ -65,0 +58,15 @@\n+    @Override\n+    protected void checkStructMember(MemoryLayout member, long offset) {\n+        \/\/ special case double members that are not the first member\n+        \/\/ see: https:\/\/www.ibm.com\/docs\/en\/xl-c-and-cpp-aix\/16.1?topic=data-using-alignment-modes\n+        \/\/ Note: It is possible to enforce 8-byte alignment by #pragma align (natural)\n+        \/\/ Therefore, we use normal checks if we are already 8-byte aligned.\n+        if ((offset % 8 != 0) && (member instanceof ValueLayout vl && vl.carrier() == double.class)) {\n+            if (vl.byteAlignment() != 4) {\n+                throw new IllegalArgumentException(\"double struct member \" + vl + \" at offset \" + offset + \" should be 4-byte aligned\");\n+            }\n+        } else {\n+            super.checkStructMember(member, offset);\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ppc64\/aix\/AixPPC64Linker.java","additions":17,"deletions":9,"binary":false,"changes":26,"status":"modified"}]}