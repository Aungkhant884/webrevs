{"files":[{"patch":"@@ -68,0 +68,3 @@\n+            if (vl.order() != linkerByteOrder()) {\n+                throw new IllegalArgumentException(\"double struct member \" + vl + \" at offset \" + offset + \" has an unexpected byte order\");\n+            }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/ppc64\/aix\/AixPPC64Linker.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -44,0 +44,10 @@\n+    \/**\n+     * The layout for the {@code int} C type\n+     *\/\n+    private static final ValueLayout.OfInt CANONICAL_INT = (ValueLayout.OfInt) LINKER.canonicalLayouts().get(\"int\");\n+    \/**\n+     * The layout for the {@code double} C type\n+     *\/\n+    private static final ValueLayout.OfDouble CANONICAL_DOUBLE = (ValueLayout.OfDouble) LINKER.canonicalLayouts().get(\"double\");\n+\n+\n@@ -61,1 +71,1 @@\n-            return (ValueLayout.OfInt) LINKER.canonicalLayouts().get(\"int\");\n+            return CANONICAL_INT;\n@@ -68,1 +78,1 @@\n-            return (ValueLayout.OfDouble) LINKER.canonicalLayouts().get(\"double\");\n+            return CANONICAL_DOUBLE;\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/foreign\/pointers\/NativeType.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}