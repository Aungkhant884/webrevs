{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,0 +281,43 @@\n+    \/\/\n+    \/\/ Use getChars() to load chars directly into the heap buffer array.\n+    \/\/ This improves performance versus converting the StringBuilder to a\n+    \/\/ String and then appending the String as StringBuilder::toString\n+    \/\/ allocates memory for and copies all the contained chars\n+    \/\/\n+    private $Type$Buffer append(StringBuilder sb, int start, int end) {\n+        checkSession();\n+\n+        int length = end - start;\n+        int pos = position();\n+        int lim = limit();\n+        int rem = (pos <= lim) ? lim - pos : 0;\n+        if (length > rem)\n+            throw new BufferOverflowException();\n+\n+        sb.getChars(start, end, hb, ix(pos));\n+        position(pos + length);\n+        return this;\n+    }\n+\n+    public $Type$Buffer append(CharSequence csq) {\n+#if[rw]\n+        if (csq instanceof StringBuilder sb)\n+            return append(sb, 0, sb.length());\n+\n+        return super.append(csq);\n+#else[rw]\n+        throw new ReadOnlyBufferException();\n+#end[rw]\n+    }\n+\n+    public $Type$Buffer append(CharSequence csq, int start, int end) {\n+#if[rw]\n+        if (csq instanceof StringBuilder sb)\n+            return append(sb, start, end);\n+\n+        return super.append(csq, start, end);\n+#else[rw]\n+        throw new ReadOnlyBufferException();\n+#end[rw]\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Heap-X-Buffer.java.template","additions":44,"deletions":1,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2008,0 +2008,2 @@\n+        else if (csq instanceof CharBuffer cb)\n+            return put(cb);\n@@ -2045,0 +2047,7 @@\n+        if (csq instanceof CharBuffer cb) {\n+            int pos = position();\n+            int length = end - start;\n+            put(pos, cb, start, length);\n+            position(pos + length);\n+            return this;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}