{"files":[{"patch":"@@ -30,0 +30,2 @@\n+ * @library \/test\/lib\n+ *\n@@ -46,1 +48,1 @@\n-import org.testng.annotations.BeforeMethod;\n+import jdk.test.lib.Platform;\n@@ -59,3 +61,1 @@\n-    private static double DELTA = 0.05;\n-\n-    private static final String OS = System.getProperty(\"os.name\");\n+    private static final double DELTA = 0.05;\n@@ -63,5 +63,2 @@\n-    @BeforeMethod\n-    void beforeMethod() throws InterruptedException {\n-        System.out.println(\"Wait for 5 seconds.\");\n-        Thread.sleep(5000);\n-    }\n+    private static final int MAX_RETRIES = 5;\n+    private static final int WAIT_TIME_MS = 5000;\n@@ -69,1 +66,1 @@\n-    @Test(invocationCount = 5, timeOut = 300)\n+    @Test(timeOut = (300 + WAIT_TIME_MS) * MAX_RETRIES)\n@@ -71,9 +68,33 @@\n-        if (!OS.contains(\"Win\")) {\n-            \/\/ On Linux or Solaris\n-            checkLoadAvg();\n-        } else {\n-            \/\/ On Windows, the system load average is expected to be -1.0\n-            double loadavg = mbean.getSystemLoadAverage();\n-            if (loadavg != -1.0) {\n-                throw new RuntimeException(\"Expected load average : -1.0\" +\n-                    \" but getSystemLoadAverage returned: \" + loadavg);\n+        for (int i = 1; i <= MAX_RETRIES; i++) {\n+            try {\n+                System.out.println(\n+                        String.format(\"Run %d: TestSystemLoadAvg\", i));\n+                if (!Platform.isWindows()) {\n+                    \/\/ On Linux or Solaris\n+                    checkLoadAvg();\n+                } else {\n+                    \/\/ On Windows, the system load average is expected to be -1.0\n+                    double loadavg = mbean.getSystemLoadAverage();\n+                    if (loadavg != -1.0) {\n+                        throw new RuntimeException(\n+                                \"Expected load average : -1.0\" +\n+                                        \" but getSystemLoadAverage returned: \" +\n+                                        loadavg);\n+                    }\n+                }\n+                System.out.println(\n+                        String.format(\"Run %d: TestSystemLoadAvg test passed\",\n+                                i));\n+                return;\n+            } catch (Exception e) {\n+                System.out.println(\n+                        String.format(\"TEST FAILED: TestSystemLoadAvg test \" +\n+                                        \"failed %d runs\",\n+                                i));\n+                if (i == MAX_RETRIES)\n+                {\n+                    throw e;\n+                }\n+\n+                System.out.println(\"Wait for 5 seconds\");\n+                Thread.sleep(WAIT_TIME_MS);\n@@ -82,2 +103,0 @@\n-\n-        System.out.println(\"Test passed.\");\n","filename":"test\/jdk\/java\/lang\/management\/OperatingSystemMXBean\/GetSystemLoadAverage.java","additions":40,"deletions":21,"binary":false,"changes":61,"status":"modified"}]}