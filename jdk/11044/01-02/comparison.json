{"files":[{"patch":"@@ -4120,2 +4120,2 @@\n-  assert(address != length_in_bytes && address != temp && temp != length_in_bytes, \"registers must be different\");\n-  assert((offset_in_bytes & (BytesPerInt - 1)) == 0, \"offset must be a multiple of BytesPerInt\");\n+  assert_different_registers(address, length_in_bytes, temp);\n+  assert(is_aligned(offset_in_bytes, BytesPerInt), \"offset must be a multiple of BytesPerInt\");\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,8 +30,0 @@\n-class arrayOopDescTest {\n- public:\n-\n-  static int header_size_in_bytes() {\n-    return arrayOopDesc::header_size_in_bytes();\n-  }\n-};\n-\n@@ -42,1 +34,1 @@\n-          + arrayOopDescTest::header_size_in_bytes();\n+          + arrayOopDesc::base_offset_in_bytes(type);\n@@ -90,0 +82,37 @@\n+\n+\n+TEST_VM(arrayOopDesc, base_offset) {\n+  if (UseCompressedClassPointers) {\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_BOOLEAN), 16);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_BYTE),    16);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_SHORT),   16);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_CHAR),    16);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_INT),     16);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_FLOAT),   16);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_LONG),    16);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_DOUBLE),  16);\n+    if (UseCompressedOops) {\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_OBJECT), 16);\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_ARRAY),  16);\n+    } else {\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_OBJECT), 16);\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_ARRAY),  16);\n+    }\n+  } else {\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_BOOLEAN), 20);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_BYTE),    20);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_SHORT),   20);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_CHAR),    20);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_INT),     20);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_FLOAT),   20);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_LONG),    24);\n+    EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_DOUBLE),  24);\n+    if (UseCompressedOops) {\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_OBJECT), 20);\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_ARRAY),  20);\n+    } else {\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_OBJECT), 24);\n+      EXPECT_EQ(arrayOopDesc::base_offset_in_bytes(T_ARRAY),  24);\n+    }\n+  }\n+}\n","filename":"test\/hotspot\/gtest\/oops\/test_arrayOop.cpp","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"oops\/objArrayOop.hpp\"\n+#include \"unittest.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+TEST_VM(objArrayOop, osize) {\n+  static const struct {\n+    int objal; bool ccp; bool coops; int result;\n+  } x[] = {\n+\/\/    ObjAligInB, UseCCP, UseCoops, object size in heap words\n+#ifdef _LP64\n+    { 8,          false,  false,    4 },  \/\/ 20 byte header, 8 byte oops\n+    { 8,          false,  true,     3 },  \/\/ 20 byte header, 4 byte oops\n+    { 8,          true,   false,    3 },  \/\/ 16 byte header, 8 byte oops\n+    { 8,          true,   true,     3 },  \/\/ 16 byte header, 4 byte oops\n+    { 256,        false,  false,    32 }, \/\/ 20 byte header, 8 byte oops\n+    { 256,        false,  true,     32 }, \/\/ 20 byte header, 4 byte oops\n+    { 256,        true,   false,    32 }, \/\/ 16 byte header, 8 byte oops\n+    { 256,        true,   true,     32 }, \/\/ 16 byte header, 4 byte oops\n+#else\n+    { 8,          false,  false,    4 }, \/\/ 12 byte header, 4 byte oops, wordsize 4\n+#endif\n+    { -1, false, false, -1 }\n+  };\n+  for (int i = 0; x[i].result != -1; i++) {\n+    if (x[i].objal == (int)ObjectAlignmentInBytes && x[i].ccp == UseCompressedClassPointers && x[i].coops == UseCompressedOops) {\n+      EXPECT_EQ(objArrayOopDesc::object_size(1), (size_t)x[i].result);\n+    }\n+  }\n+}\n","filename":"test\/hotspot\/gtest\/oops\/test_objArrayOop.cpp","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2022 Amazon.com Inc. or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * This tests object array sizes by running gtests with different settings.\n+ *\/\n+\n+\/* @test id=with-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop::base_offset -XX:+UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=with-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop::base_offset -XX:-UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop::base_offset -XX:+UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=arrayOop::base_offset -XX:-UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/ArrayTest.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2022 Amazon.com Inc. or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * This tests object array sizes by running gtests with different settings.\n+ *\/\n+\n+\/* @test id=with-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=with-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:+UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-with-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n+\/* @test id=no-coops-no-ccp\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:-UseCompressedOops\n+ *\/\n+\n+\/* @test id=with-coops-with-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n+\/* @test id=with-coops-no-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:+UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n+\/* @test id=no-coops-with-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:+UseCompressedClassPointers -XX:-UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n+\/* @test id=no-coops-no-ccp-large-align\n+ * @summary Run object array size tests with compressed oops and compressed class pointers\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.xml\n+ * @run main\/native GTestWrapper --gtest_filter=objArrayOop -XX:-UseCompressedClassPointers -XX:-UseCompressedOops -XX:ObjAlignmentInBytes=256\n+ *\/\n","filename":"test\/hotspot\/jtreg\/gtest\/ObjArrayTests.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -25,1 +25,1 @@\n- * @test id=no-ccp\n+ * @test id=with-coop-no-ccp\n@@ -29,1 +29,1 @@\n- * @run main\/othervm -XX:-UseCompressedClassPointers ArrayBaseOffsets\n+ * @run main\/othervm -XX:+UseCompressedOops -XX:-UseCompressedClassPointers ArrayBaseOffsets\n@@ -32,1 +32,1 @@\n- * @test id=with-ccp\n+ * @test id=with-coops-with-ccp\n@@ -36,1 +36,15 @@\n- * @run main\/othervm -XX:+UseCompressedClassPointers ArrayBaseOffsets\n+ * @run main\/othervm -XX:+UseCompressedOops -XX:+UseCompressedClassPointers ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=no-coop-no-ccp\n+ * @library \/test\/lib\n+ * @requires vm.bits == \"64\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @run main\/othervm -XX:-UseCompressedOops -XX:-UseCompressedClassPointers ArrayBaseOffsets\n+ *\/\n+\/*\n+ * @test id=no-coops-with-ccp\n+ * @library \/test\/lib\n+ * @requires vm.bits == \"64\"\n+ * @modules java.base\/jdk.internal.misc\n+ * @run main\/othervm -XX:-UseCompressedOops -XX:+UseCompressedClassPointers ArrayBaseOffsets\n","filename":"test\/hotspot\/jtreg\/runtime\/FieldLayout\/ArrayBaseOffsets.java","additions":18,"deletions":4,"binary":false,"changes":22,"status":"modified"}]}