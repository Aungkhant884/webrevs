{"files":[{"patch":"@@ -54,1 +54,9 @@\n-  assert(is_aligned(base_offset, HeapWordSize), \"obj array base offset should be word-aligned\");\n+\n+  \/\/ Clear leading 32 bit, if necessary.\n+  if (!is_aligned(base_offset, HeapWordSize)) {\n+    assert(is_aligned(base_offset, BytesPerInt), \"array base must be 32 bit aligned\");\n+    *reinterpret_cast<jint*>(reinterpret_cast<char*>(mem) + base_offset) = 0;\n+    base_offset += BytesPerInt;\n+  }\n+  assert(is_aligned(base_offset, HeapWordSize), \"remaining array base must be 64 bit aligned\");\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zObjArrayAllocator.cpp","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -158,2 +158,3 @@\n-      int header_size_words = heap_word_size(base_offset_in_bytes(type));\n-      int header_size_elems = header_size_words * words_per_elem;\n+      size_t header_size_words = heap_word_size(base_offset_in_bytes(type));\n+      assert(header_size_words < max_jint, \"safe narrowing cast\");\n+      int header_size_elems = words_per_elem * (int)header_size_words;\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}