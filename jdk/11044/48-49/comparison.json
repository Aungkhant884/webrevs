{"files":[{"patch":"@@ -184,0 +184,4 @@\n+    if (!is_aligned(arrayOopDesc::header_size_in_bytes(), BytesPerWord)) {\n+      assert(is_aligned(arrayOopDesc::header_size_in_bytes(), BytesPerInt), \"must be 4-byte aligned\");\n+      sw(zr, Address(obj, arrayOopDesc::header_size_in_bytes()));\n+    }\n@@ -198,9 +202,0 @@\n-  \/\/ Zero first 4 bytes, if start offset is not word aligned.\n-  int start_offset_in_bytes = hdr_size_in_bytes;\n-  if (!is_aligned(start_offset_in_bytes, BytesPerWord)) {\n-    assert(is_aligned(start_offset_in_bytes, BytesPerInt), \"must be 4-byte aligned\");\n-    sw(zr, Address(obj, start_offset_in_bytes));\n-    sub(len_in_bytes, len_in_bytes, BytesPerInt);\n-    start_offset_in_bytes += BytesPerInt;\n-  }\n-\n@@ -208,2 +203,2 @@\n-  if (start_offset_in_bytes) {\n-    add(obj, obj, start_offset_in_bytes);\n+  if (hdr_size_in_bytes) {\n+    add(obj, obj, hdr_size_in_bytes);\n@@ -212,2 +207,2 @@\n-  if (start_offset_in_bytes) {\n-    sub(obj, obj, start_offset_in_bytes);\n+  if (hdr_size_in_bytes) {\n+    sub(obj, obj, hdr_size_in_bytes);\n@@ -231,1 +226,1 @@\n-  const int hdr_size_in_bytes = instanceOopDesc::base_offset_in_bytes();\n+  const int hdr_size_in_bytes = instanceOopDesc::header_size() * HeapWordSize;\n@@ -314,1 +309,4 @@\n-  initialize_body(obj, arr_size, base_offset_in_bytes, len_zero);\n+  \/\/ We align-up the header size to word-size, because we clear the\n+  \/\/ possible alignment gap in initialize_header().\n+  int hdr_size = align_up(base_offset_in_bytes, BytesPerWord);\n+  initialize_body(obj, arr_size, hdr_size, len_zero);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"}]}