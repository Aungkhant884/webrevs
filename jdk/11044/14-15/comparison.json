{"files":[{"patch":"@@ -340,1 +340,1 @@\n-  if (value > (ThreadLocalAllocBuffer::max_size() * HeapWordSize)) {\n+  if (value > ((int64_t)ThreadLocalAllocBuffer::max_size() * HeapWordSize)) {\n@@ -343,2 +343,2 @@\n-                        \"less than or equal to ergonomic TLAB maximum (\" SIZE_FORMAT \")\\n\",\n-                        value, ThreadLocalAllocBuffer::max_size() * HeapWordSize);\n+                        \"less than or equal to ergonomic TLAB maximum (\" INT64_FORMAT \")\\n\",\n+                        value, (int64_t)ThreadLocalAllocBuffer::max_size() * HeapWordSize);\n@@ -360,1 +360,1 @@\n-    if (value > (ThreadLocalAllocBuffer::max_size() * HeapWordSize)) {\n+    if (value > ((int64_t)ThreadLocalAllocBuffer::max_size() * HeapWordSize)) {\n@@ -363,2 +363,2 @@\n-                          \"less than or equal to ergonomic TLAB maximum size (\" SIZE_FORMAT \")\\n\",\n-                          value, (ThreadLocalAllocBuffer::max_size() * HeapWordSize));\n+                          \"less than or equal to ergonomic TLAB maximum size (\" INT64_FORMAT \")\\n\",\n+                          value, (int64_t)ThreadLocalAllocBuffer::max_size() * HeapWordSize);\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -314,1 +314,1 @@\n-    if (!is_aligned(hs_bytes, HeapWordSize)) {\n+    if (!is_aligned(hs_bytes, BytesPerLong)) {\n@@ -320,2 +320,2 @@\n-    assert(is_aligned(hs_bytes, HeapWordSize), \"must be word aligned\");\n-    const size_t aligned_hs = hs_bytes \/ HeapWordSize;\n+    assert(is_aligned(hs_bytes, BytesPerLong), \"must be 8-byte aligned\");\n+    const size_t aligned_hs = hs_bytes \/ BytesPerLong;\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}