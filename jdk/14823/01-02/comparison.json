{"files":[{"patch":"@@ -1870,3 +1870,3 @@\n-  INSN(rori,     0b0010011, 0b101, 0b011000);\n-  INSN(_slli_uw, 0b0011011, 0b001, 0b000010);\n-  INSN(bexti,    0b0010011, 0b101, 0b010010);\n+  INSN(rori,    0b0010011, 0b101, 0b011000);\n+  INSN(slli_uw, 0b0011011, 0b001, 0b000010);\n+  INSN(bexti,   0b0010011, 0b101, 0b010010);\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -691,1 +691,2 @@\n-        slli_uw(ch2, ch2, 8);\n+        slli(ch2, ch2, 40);\n+        srli(ch2, ch2, 32);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4338,9 +4338,0 @@\n-void MacroAssembler::slli_uw(Register Rd, Register Rs, int shamt) {\n-  if (UseZba) {\n-    _slli_uw(Rd, Rs, shamt);\n-  } else {\n-    slli(Rd, Rs, shamt + 32);\n-    srli(Rd, Rd, 32);\n-  }\n-}\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1219,3 +1219,0 @@\n-  \/\/ 32-bit shift left by shamt and zero extend\n-  void slli_uw(Register Rd, Register Rs, int shamt);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}