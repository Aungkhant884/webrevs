{"files":[{"patch":"@@ -478,1 +478,0 @@\n-      _summary_bytes_used += fill_size * HeapWordSize;\n@@ -498,1 +497,0 @@\n-  _summary_bytes_used += word_size * HeapWordSize;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -226,3 +226,0 @@\n-  \/\/ The number of bytes used in the current range.\n-  size_t _summary_bytes_used;\n-\n@@ -246,1 +243,0 @@\n-    _summary_bytes_used(0),\n@@ -264,13 +260,0 @@\n-\n-  \/\/ The number of bytes allocated by this allocator.\n-  size_t used() {\n-    return _summary_bytes_used;\n-  }\n-\n-  \/\/ Clear the count of bytes allocated in prior G1 regions. This\n-  \/\/ must be done when recalculate_use is used to reset the counter\n-  \/\/ for the generic allocator, since it counts bytes in all G1\n-  \/\/ regions, including those still associated with this allocator.\n-  void clear_used() {\n-    _summary_bytes_used = 0;\n-  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -501,3 +501,2 @@\n-  if (_archive_allocator == NULL) {\n-    _archive_allocator = G1ArchiveAllocator::create_allocator(this, open);\n-  }\n+  assert(_archive_allocator == nullptr, \"should not be initialized\");\n+  _archive_allocator = G1ArchiveAllocator::create_allocator(this, open);\n@@ -515,1 +514,1 @@\n-  assert(_archive_allocator != NULL, \"_archive_allocator not initialized\");\n+  assert(_archive_allocator != nullptr, \"_archive_allocator not initialized\");\n@@ -517,1 +516,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -525,1 +524,1 @@\n-  assert(_archive_allocator != NULL, \"_archive_allocator not initialized\");\n+  assert(_archive_allocator != nullptr, \"_archive_allocator not initialized\");\n@@ -531,1 +530,1 @@\n-  _archive_allocator = NULL;\n+  _archive_allocator = nullptr;\n@@ -1452,1 +1451,1 @@\n-  _archive_allocator(NULL),\n+  _archive_allocator(nullptr),\n@@ -1864,3 +1863,1 @@\n-  if (_archive_allocator != NULL) {\n-    result += _archive_allocator->used();\n-  }\n+  assert(_archive_allocator == nullptr, \"must be, should not contribute to used\");\n@@ -3200,3 +3197,1 @@\n-    if (_archive_allocator != NULL) {\n-      _archive_allocator->clear_used();\n-    }\n+    assert(_archive_allocator == nullptr, \"must be, should not contribute to used\");\n@@ -3396,3 +3391,1 @@\n-    if (_archive_allocator != NULL) {\n-      _archive_allocator->clear_used();\n-    }\n+    assert(_archive_allocator == nullptr, \"must be, should not contribute to used\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":10,"deletions":17,"binary":false,"changes":27,"status":"modified"}]}