{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,1 +101,1 @@\n-            in = (InputStream) e.nextElement();\n+            in = e.nextElement();\n","filename":"src\/java.base\/share\/classes\/java\/io\/SequenceInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -688,1 +688,1 @@\n-                    cache[replacementPos & mask] = (Entry<?>) Entry.DEAD_ENTRY;\n+                    cache[replacementPos & mask] = Entry.DEAD_ENTRY;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -196,1 +196,1 @@\n-        Enum<?> other = (Enum<?>)o;\n+        Enum<?> other = o;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Enum.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -446,1 +446,1 @@\n-            Class<?> cls = (Class<?>) declaringClassObject;\n+            Class<?> cls = declaringClassObject;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StackTraceElement.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1149,3 +1149,2 @@\n-                \/\/ Because 'algorithm' and 'provider' are private\n-                \/\/ members of our supertype, we must perform a cast to\n-                \/\/ access them.\n+                \/\/ Because 'algorithm' is private member of our supertype,\n+                \/\/ we must perform a cast to access it.\n@@ -1155,1 +1154,1 @@\n-                that.provider = ((Signature)this).provider;\n+                that.provider = this.provider;\n","filename":"src\/java.base\/share\/classes\/java\/security\/Signature.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -627,1 +627,1 @@\n-        gdate = (BaseCalendar.Date) gcal.newCalendarDate(zone);\n+        gdate = gcal.newCalendarDate(zone);\n@@ -701,1 +701,1 @@\n-        gdate = (BaseCalendar.Date) gcal.newCalendarDate(getZone());\n+        gdate = gcal.newCalendarDate(getZone());\n@@ -739,1 +739,1 @@\n-        gdate = (BaseCalendar.Date) gcal.newCalendarDate(getZone());\n+        gdate = gcal.newCalendarDate(getZone());\n@@ -2373,1 +2373,1 @@\n-            cdate = (BaseCalendar.Date) jcal.newCalendarDate(getZone());\n+            cdate = jcal.newCalendarDate(getZone());\n@@ -3112,1 +3112,1 @@\n-            date = (BaseCalendar.Date) gcal.newCalendarDate(TimeZone.NO_TIMEZONE);\n+            date = gcal.newCalendarDate(TimeZone.NO_TIMEZONE);\n@@ -3201,1 +3201,1 @@\n-            gdate = (BaseCalendar.Date) gcal.newCalendarDate(getZone());\n+            gdate = gcal.newCalendarDate(getZone());\n","filename":"src\/java.base\/share\/classes\/java\/util\/GregorianCalendar.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -337,1 +337,1 @@\n-        map = (((HashSet<?>)this) instanceof LinkedHashSet ?\n+        map = (this instanceof LinkedHashSet ?\n","filename":"src\/java.base\/share\/classes\/java\/util\/HashSet.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -615,1 +615,1 @@\n-        IntFunction rawGenerator = (IntFunction) generator;\n+        IntFunction rawGenerator = generator;\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/ReferencePipeline.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+\n@@ -92,1 +93,1 @@\n-        return (FileNameMap)mt;\n+        return mt;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MimeTable.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-            return (AuthenticationInfo)list.get (0);\n+            return list.get(0);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/AuthCacheImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,1 @@\n-                return (DSAParams)paramSpec;\n+                return paramSpec;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAPublicKey.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -272,1 +272,0 @@\n-                        (Collection<? extends Certificate>)\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/PKIX.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -795,2 +795,1 @@\n-        RevocationStatus rs =\n-            (RevocationStatus)response.getSingleResponse(certId);\n+        RevocationStatus rs = response.getSingleResponse(certId);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/RevocationChecker.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1039,1 +1039,1 @@\n-        return (java.security.cert.Certificate[])peerCerts.clone();\n+        return peerCerts.clone();\n@@ -1057,2 +1057,1 @@\n-        return (localCerts == null ? null :\n-            (java.security.cert.Certificate[])localCerts.clone());\n+        return (localCerts == null ? null : localCerts.clone());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSessionImpl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,1 +83,1 @@\n-        BaseCalendar.Date d = (BaseCalendar.Date) gcal.newCalendarDate(null);\n+        BaseCalendar.Date d = gcal.newCalendarDate(null);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/Era.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}