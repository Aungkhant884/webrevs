{"files":[{"patch":"@@ -413,1 +413,1 @@\n-    r->set_mapped_base((char*)load_address);\n+    assert(r->mapped_base() == (char*)load_address, \"sanity\");\n","filename":"src\/hotspot\/share\/cds\/archiveHeapLoader.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1268,1 +1268,1 @@\n-    if (!check_crc()) {\n+    if (!check_header_crc()) {\n@@ -1292,1 +1292,1 @@\n-  bool check_crc() {\n+  bool check_header_crc() const {\n@@ -1595,0 +1595,21 @@\n+bool FileMapRegion::check_region_crc() const {\n+  \/\/ This function should be called after the region has been properly\n+  \/\/ loaded into memory via FileMapInfo::map_region() or FileMapInfo::read_region().\n+  \/\/ I.e., this->mapped_base() must be valid.\n+  if (!VerifySharedSpaces) {\n+    return true;\n+  }\n+  size_t sz = used();\n+  if (sz == 0) {\n+    return true;\n+  }\n+\n+  assert(mapped_base() != nullptr, \"must be initialized\");\n+  int crc = ClassLoader::crc32(0, mapped_base(), (jint)sz);\n+  if (crc != this->crc()) {\n+    FileMapInfo::fail_continue(\"Checksum verification failed.\");\n+    return false;\n+  }\n+  return true;\n+}\n+\n@@ -1847,1 +1868,1 @@\n-  char *addr = region_addr(idx);\n+  char *addr = r->mapped_base();\n@@ -1921,1 +1942,4 @@\n-  if (VerifySharedSpaces && !region_crc_check(base, r->used(), r->crc())) {\n+  r->set_mapped_from_file(false);\n+  r->set_mapped_base(base);\n+\n+  if (!r->check_region_crc()) {\n@@ -1959,0 +1983,2 @@\n+    } else {\n+      assert(r->mapped_base() != nullptr, \"must be initialized\");\n@@ -1974,0 +2000,1 @@\n+    r->set_mapped_base(requested_addr);\n@@ -1975,1 +2002,0 @@\n-  r->set_mapped_base(requested_addr);\n@@ -1977,1 +2003,1 @@\n-  if (VerifySharedSpaces && !verify_region_checksum(i)) {\n+  if (!r->check_region_crc()) {\n@@ -1999,1 +2025,2 @@\n-  if (VerifySharedSpaces && !region_crc_check(bitmap_base, r->used(), r->crc())) {\n+  r->set_mapped_base(bitmap_base);\n+  if (!r->check_region_crc()) {\n@@ -2007,1 +2034,0 @@\n-  r->set_mapped_base(bitmap_base);\n@@ -2425,1 +2451,2 @@\n-    if (VerifySharedSpaces && !region_crc_check(addr, regions[i].byte_size(), r->crc())) {\n+    r->set_mapped_base(base);\n+    if (!r->check_region_crc()) {\n@@ -2431,2 +2458,0 @@\n-\n-    r->set_mapped_base(base);\n@@ -2520,20 +2545,0 @@\n-bool FileMapInfo::region_crc_check(char* buf, size_t size, int expected_crc) {\n-  int crc = ClassLoader::crc32(0, buf, (jint)size);\n-  if (crc != expected_crc) {\n-    fail_continue(\"Checksum verification failed.\");\n-    return false;\n-  }\n-  return true;\n-}\n-\n-bool FileMapInfo::verify_region_checksum(int i) {\n-  assert(VerifySharedSpaces, \"sanity\");\n-  size_t sz = region_at(i)->used();\n-\n-  if (sz == 0) {\n-    return true; \/\/ no data\n-  } else {\n-    return region_crc_check(region_addr(i), sz, region_at(i)->crc());\n-  }\n-}\n-\n@@ -2635,6 +2640,0 @@\n-char* FileMapInfo::region_addr(int idx) {\n-  assert(UseSharedSpaces, \"must be\");\n-  FileMapRegion* r = region_at(idx);\n-  return r->mapped_base();\n-}\n-\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":36,"deletions":37,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -181,0 +181,1 @@\n+  bool check_region_crc() const;\n@@ -476,1 +477,0 @@\n-  bool  verify_region_checksum(int i);\n@@ -529,2 +529,0 @@\n-  char* region_addr(int idx);\n-\n@@ -578,1 +576,0 @@\n-  bool  region_crc_check(char* buf, size_t size, int expected_crc) NOT_CDS_RETURN_(false);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}