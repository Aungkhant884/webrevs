{"files":[{"patch":"@@ -29,1 +29,0 @@\n-#include \"metaprogramming\/removeCV.hpp\"\n@@ -32,0 +31,2 @@\n+#include <type_traits>\n+\n@@ -38,1 +39,1 @@\n-  typedef typename RemoveCV<typename RemoveReference<T>::type>::type type;\n+  typedef typename std::remove_cv<typename RemoveReference<T>::type>::type type;\n","filename":"src\/hotspot\/share\/metaprogramming\/decay.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"metaprogramming\/removeCV.hpp\"\n+\n@@ -33,0 +33,1 @@\n+#include <type_traits>\n@@ -39,1 +40,1 @@\n-  : public IntegralConstant<bool, std::numeric_limits<typename RemoveCV<T>::type>::is_integer>\n+  : public IntegralConstant<bool, std::numeric_limits<typename std::remove_cv<T>::type>::is_integer>\n","filename":"src\/hotspot\/share\/metaprogramming\/isIntegral.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-#include \"metaprogramming\/removeCV.hpp\"\n+\n@@ -31,0 +31,1 @@\n+#include <type_traits>\n@@ -34,1 +35,1 @@\n-  : public IntegralConstant<bool, std::numeric_limits<typename RemoveCV<T>::type>::is_signed>\n+  : public IntegralConstant<bool, std::numeric_limits<typename std::remove_cv<T>::type>::is_signed>\n","filename":"src\/hotspot\/share\/metaprogramming\/isSigned.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_METAPROGRAMMING_REMOVECV_HPP\n-#define SHARE_METAPROGRAMMING_REMOVECV_HPP\n-\n-#include \"memory\/allStatic.hpp\"\n-\n-template <typename T>\n-struct RemoveCV: AllStatic {\n-  typedef T type;\n-};\n-\n-template <typename T>\n-struct RemoveCV<const T>: AllStatic {\n-  typedef T type;\n-};\n-\n-template <typename T>\n-struct RemoveCV<volatile T>: AllStatic {\n-  typedef T type;\n-};\n-\n-template <typename T>\n-struct RemoveCV<const volatile T>: AllStatic {\n-  typedef T type;\n-};\n-\n-#endif \/\/ SHARE_METAPROGRAMMING_REMOVECV_HPP\n","filename":"src\/hotspot\/share\/metaprogramming\/removeCV.hpp","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"},{"patch":"@@ -35,1 +35,0 @@\n-#include \"metaprogramming\/removeCV.hpp\"\n@@ -41,0 +40,1 @@\n+\n@@ -797,2 +797,2 @@\n-                    IsSame<typename RemoveCV<D>::type,\n-                           typename RemoveCV<U>::type>::value>::type>\n+                    IsSame<typename std::remove_cv<D>::type,\n+                           typename std::remove_cv<U>::type>::value>::type>\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}