{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import java.nio.charset.CharacterCodingException;\n@@ -64,1 +65,2 @@\n-    private static final byte[] MALFORMED_UTF16 = {(byte)0x00, (byte)0x20, (byte)0x00};\n+    private static final Charset WINDOWS_1252 = Charset.forName(\"windows-1252\");\n+    private static final Charset WINDOWS_31J = Charset.forName(\"windows-31j\");\n@@ -99,2 +101,2 @@\n-            {path, \"\\u041e\", Charset.forName(\"windows-1252\")}, \/\/ cyrillic capital letter O\n-            {path, \"\\u091c\", Charset.forName(\"windows-31j\")}, \/\/ devanagari letter ja\n+            {path, \"\\u041e\", WINDOWS_1252}, \/\/ cyrillic capital letter O\n+            {path, \"\\u091c\", WINDOWS_31J}, \/\/ devanagari letter ja\n@@ -122,1 +124,0 @@\n-        Path path = Files.createTempFile(\"illegalInputBytes\", null);\n@@ -124,1 +125,4 @@\n-            {path, MALFORMED_UTF16, UTF_16},\n+            {new byte[] {(byte)0x00, (byte)0x20, (byte)0x00}, UTF_16, MalformedInputException.class},\n+            {new byte[] {-50}, UTF_16, MalformedInputException.class},\n+            {new byte[] {(byte)0x81}, WINDOWS_1252, UnmappableCharacterException.class}, \/\/ unused in Cp1252\n+            {new byte[] {(byte)0x81, (byte)0xff}, WINDOWS_31J, UnmappableCharacterException.class}, \/\/ invalid trailing byte\n@@ -291,1 +295,0 @@\n-     * @param path the path to write and read\n@@ -294,0 +297,1 @@\n+     * @param expected exception class\n@@ -296,2 +300,4 @@\n-    @Test(dataProvider = \"illegalInputBytes\", expectedExceptions = MalformedInputException.class)\n-    public void testMalformedReadBytes(Path path, byte[] data, Charset csRead) throws IOException {\n+    @Test(dataProvider = \"illegalInputBytes\")\n+    public void testMalformedReadBytes(byte[] data, Charset csRead, Class<CharacterCodingException> expected)\n+            throws IOException {\n+        Path path = Files.createTempFile(\"illegalInputBytes\", null);\n@@ -300,3 +306,1 @@\n-        if (csRead == null) {\n-            Files.readString(path);\n-        } else {\n+        try {\n@@ -304,0 +308,5 @@\n+        } catch (MalformedInputException | UnmappableCharacterException e) {\n+            if (expected.isInstance(e)) {\n+                \/\/ success\n+                return;\n+            }\n@@ -305,0 +314,1 @@\n+        throw new RuntimeException(\"An instance of \" + expected + \" should be thrown\");\n","filename":"test\/jdk\/java\/nio\/file\/Files\/ReadWriteString.java","additions":21,"deletions":11,"binary":false,"changes":32,"status":"modified"}]}