{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -449,1 +449,1 @@\n-            if (!declaringClass.isAssignableFrom(obj.getClass())) {\n+            if (!declaringClass.isInstance(obj)) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessibleObject.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-            if (!field.getType().isAssignableFrom(value.getClass())) {\n+            if (!field.getType().isInstance(value)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeObjectFieldAccessorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-            if (!field.getType().isAssignableFrom(value.getClass())) {\n+            if (!field.getType().isInstance(value)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeQualifiedObjectFieldAccessorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-            if (!field.getType().isAssignableFrom(value.getClass())) {\n+            if (!field.getType().isInstance(value)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeQualifiedStaticObjectFieldAccessorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-            if (!field.getType().isAssignableFrom(value.getClass())) {\n+            if (!field.getType().isInstance(value)) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/UnsafeStaticObjectFieldAccessorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,1 +191,1 @@\n-            if (type.isAssignableFrom(argument.getClass())) {\n+            if (type.isInstance(argument)) {\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/beans\/decoder\/NewElementHandler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.File;\n@@ -231,1 +230,1 @@\n-            if (c.isAssignableFrom(provider.getClass())) {\n+            if (c.isInstance(provider)) {\n@@ -273,1 +272,1 @@\n-        if (!category.isAssignableFrom(provider.getClass())) {\n+        if (!category.isInstance(provider)) {\n@@ -376,1 +375,1 @@\n-        if (!category.isAssignableFrom(provider.getClass())) {\n+        if (!category.isInstance(provider)) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/spi\/ServiceRegistry.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,0 @@\n-import java.lang.ref.WeakReference;\n@@ -60,1 +59,0 @@\n-import java.util.Set;\n@@ -568,1 +566,1 @@\n-                if (clazz != null && clazz.isAssignableFrom(c.getClass())) {\n+                if (clazz != null && clazz.isInstance(c)) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/Defaults.template","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,1 +143,1 @@\n-            if (o == null || !e.isAssignableFrom(o.getClass())) {\n+            if (o == null || !e.isInstance(o)) {\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/inspector\/Utils.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -404,1 +404,1 @@\n-                        if (res != null && Annotation[].class.isAssignableFrom(res.getClass())) {\n+                        if (res instanceof Annotation[]) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}