{"files":[{"patch":"@@ -97,0 +97,1 @@\n+  ciConstant value;\n@@ -98,2 +99,1 @@\n-    ciConstant value = element_value_impl(elembt, get_arrayOop(), index);\n-    return check_constant_value_cache(index, value);\n+    value = element_value_impl(elembt, get_arrayOop(), index);\n@@ -101,0 +101,1 @@\n+  return check_constant_value_cache(index, value);\n","filename":"src\/hotspot\/share\/ci\/ciArray.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -183,1 +183,1 @@\n-    if (cached_val.obj() == this && cached_val.off() == off) {\n+    if (cached_val.off() == off) {\n","filename":"src\/hotspot\/share\/ci\/ciObject.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-      const ciObject* _obj;\n@@ -70,2 +69,2 @@\n-      ConstantValue() : _obj(nullptr), _off(0), _value(ciConstant()) { }\n-      ConstantValue(const ciObject* obj, int off, ciConstant value) : _obj(obj), _off(off), _value(value) { }\n+      ConstantValue() : _off(0), _value(ciConstant()) { }\n+      ConstantValue(const ciObject* obj, int off, ciConstant value) : _off(off), _value(value) { }\n@@ -73,1 +72,0 @@\n-      const ciObject* obj() const { return _obj; }\n","filename":"src\/hotspot\/share\/ci\/ciObject.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1824,1 +1824,0 @@\n-      DEBUG_ONLY(verify_type(n, tnew, told);)\n@@ -1834,1 +1833,1 @@\n-      if (n->is_Load()) {\n+      if (n->is_Load() && !told->singleton()) {\n@@ -1840,0 +1839,1 @@\n+      verify_type(n, tnew, told);\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}