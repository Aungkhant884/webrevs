{"files":[{"patch":"@@ -66,3 +66,1 @@\n-      ciEnv* env = CURRENT_ENV;\n-      ciObject* box = env->get_object(elem);\n-      return ciConstant(T_OBJECT, box);\n+      return ciConstant(elembt, CURRENT_ENV->get_object(elem));\n@@ -97,1 +95,4 @@\n-  ciConstant value;\n+  ciConstant value = check_constant_value_cache(index, elembt);\n+  if (value.is_valid()) {\n+    return value;\n+  }\n@@ -101,1 +102,2 @@\n-  return check_constant_value_cache(index, value);\n+  add_to_constant_value_cache(index, value);\n+  return value;\n","filename":"src\/hotspot\/share\/ci\/ciArray.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -314,2 +314,1 @@\n-    VM_ENTRY_MARK;\n-    ciInstance* mirror = CURRENT_ENV->get_instance(_holder->get_Klass()->java_mirror());\n+    ciInstance* mirror = _holder->java_mirror();\n","filename":"src\/hotspot\/share\/ci\/ciField.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,0 +63,5 @@\n+  ciConstant value = check_constant_value_cache(offset, field_btype);\n+  if (value.is_valid()) {\n+    return value;\n+  }\n+  VM_ENTRY_MARK;\n@@ -65,1 +70,0 @@\n-  ciConstant value;\n@@ -96,1 +100,2 @@\n-  return check_constant_value_cache(offset, value);\n+  add_to_constant_value_cache(offset, value);\n+  return value;\n@@ -107,2 +112,1 @@\n-\n-  GUARDED_VM_ENTRY(return field_value_impl(field->type()->basic_type(), field->offset());)\n+  return field_value_impl(field->type()->basic_type(), field->offset());\n","filename":"src\/hotspot\/share\/ci\/ciInstance.cpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -176,1 +176,19 @@\n-ciConstant ciObject::check_constant_value_cache(int off, ciConstant val) {\n+ciConstant ciObject::check_constant_value_cache(int off, BasicType bt) {\n+  if (_constant_values != nullptr) {\n+    for (int i = 0; i < _constant_values->length(); ++i) {\n+      ConstantValue cached_val = _constant_values->at(i);\n+      if (cached_val.off() == off) {\n+        assert(cached_val.value().basic_type() == bt, \"unexpected type\");\n+        return cached_val.value();\n+      }\n+    }\n+  }\n+  return ciConstant();\n+}\n+\n+\/\/ ------------------------------------------------------------------\n+\/\/ ciObject::add_to_constant_value_cache()\n+\/\/\n+\/\/ Add a constant value to the cache.\n+void ciObject::add_to_constant_value_cache(int off, ciConstant val) {\n+  assert(val.is_valid(), \"value must be valid\");\n@@ -181,8 +199,1 @@\n-  for (int i = 0; i < _constant_values->length(); ++i) {\n-    ConstantValue cached_val = _constant_values->at(i);\n-    if (cached_val.off() == off) {\n-      return cached_val.value();\n-    }\n-  }\n-  _constant_values->append(ConstantValue(this, off, val));\n-  return val;\n+  _constant_values->append(ConstantValue(off, val));\n","filename":"src\/hotspot\/share\/ci\/ciObject.cpp","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-      ConstantValue(const ciObject* obj, int off, ciConstant value) : _off(off), _value(value) { }\n+      ConstantValue(int off, ciConstant value) : _off(off), _value(value) { }\n@@ -115,2 +115,3 @@\n-  \/\/ Checks the constant value cache\n-  ciConstant check_constant_value_cache(int off, ciConstant val);\n+  \/\/ Access to the constant value cache\n+  ciConstant check_constant_value_cache(int off, BasicType bt);\n+  void add_to_constant_value_cache(int off, ciConstant val);\n","filename":"src\/hotspot\/share\/ci\/ciObject.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}