{"files":[{"patch":"@@ -53,1 +53,1 @@\n-            assertEquals(\"        12\", String.format(\"%10d\", 12));\n+            assertEquals(\"       -12\", String.format(\"%10d\", -12));\n@@ -250,0 +250,112 @@\n+    @Nested\n+    class ZeroPaddingInt {\n+\n+        @Test\n+        void zeroPad_d() {\n+            assertEquals(\"12\", String.format(\"%01d\", 12));\n+            assertEquals(\"12\", String.format(\"%02d\", 12));\n+            assertEquals(\"012\", String.format(\"%03d\", 12));\n+            assertEquals(\"0012\", String.format(\"%04d\", 12));\n+            assertEquals(\"00012\", String.format(\"%05d\", 12));\n+            assertEquals(\"0000000012\", String.format(\"%010d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%01d\", -12));\n+            assertEquals(\"-12\", String.format(\"%02d\", -12));\n+            assertEquals(\"-12\", String.format(\"%03d\", -12));\n+            assertEquals(\"-012\", String.format(\"%04d\", -12));\n+            assertEquals(\"-0012\", String.format(\"%05d\", -12));\n+            assertEquals(\"-000000012\", String.format(\"%010d\", -12));\n+        }\n+\n+        @Test\n+        void zeroPad_plus_d() {\n+            assertEquals(\"+12\", String.format(\"%+01d\", 12));\n+            assertEquals(\"+12\", String.format(\"%+02d\", 12));\n+            assertEquals(\"+12\", String.format(\"%+03d\", 12));\n+            assertEquals(\"+012\", String.format(\"%+04d\", 12));\n+            assertEquals(\"+0012\", String.format(\"%+05d\", 12));\n+            assertEquals(\"+000000012\", String.format(\"%+010d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%+01d\", -12));\n+            assertEquals(\"-12\", String.format(\"%+02d\", -12));\n+            assertEquals(\"-12\", String.format(\"%+03d\", -12));\n+            assertEquals(\"-012\", String.format(\"%+04d\", -12));\n+            assertEquals(\"-0012\", String.format(\"%+05d\", -12));\n+            assertEquals(\"-000000012\", String.format(\"%+010d\", -12));\n+        }\n+\n+        @Test\n+        void zeroPad_blank_d() {\n+            assertEquals(\" 12\", String.format(\"% 01d\", 12));\n+            assertEquals(\" 12\", String.format(\"% 02d\", 12));\n+            assertEquals(\" 12\", String.format(\"% 03d\", 12));\n+            assertEquals(\" 012\", String.format(\"% 04d\", 12));\n+            assertEquals(\" 0012\", String.format(\"% 05d\", 12));\n+            assertEquals(\" 000000012\", String.format(\"% 010d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"% 01d\", -12));\n+            assertEquals(\"-12\", String.format(\"% 02d\", -12));\n+            assertEquals(\"-12\", String.format(\"% 03d\", -12));\n+            assertEquals(\"-012\", String.format(\"% 04d\", -12));\n+            assertEquals(\"-0012\", String.format(\"% 05d\", -12));\n+            assertEquals(\"-000000012\", String.format(\"% 010d\", -12));\n+        }\n+\n+    }\n+\n+    @Nested\n+    class ZeroPaddingDouble {\n+\n+        @Test\n+        void zeroPad_d() {\n+            assertEquals(\"1.2\", String.format(\"%01.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%02.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%03.1f\", 1.2));\n+            assertEquals(\"01.2\", String.format(\"%04.1f\", 1.2));\n+            assertEquals(\"001.2\", String.format(\"%05.1f\", 1.2));\n+            assertEquals(\"00000001.2\", String.format(\"%010.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%01.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%02.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%03.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%04.1f\", -1.2));\n+            assertEquals(\"-01.2\", String.format(\"%05.1f\", -1.2));\n+            assertEquals(\"-0000001.2\", String.format(\"%010.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void zeroPad_plus_d() {\n+            assertEquals(\"+1.2\", String.format(\"%+01.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+02.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+03.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+04.1f\", 1.2));\n+            assertEquals(\"+01.2\", String.format(\"%+05.1f\", 1.2));\n+            assertEquals(\"+0000001.2\", String.format(\"%+010.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%+01.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+02.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+03.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+04.1f\", -1.2));\n+            assertEquals(\"-01.2\", String.format(\"%+05.1f\", -1.2));\n+            assertEquals(\"-0000001.2\", String.format(\"%+010.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void zeroPad_blank_d() {\n+            assertEquals(\" 1.2\", String.format(\"% 01.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 02.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 03.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 04.1f\", 1.2));\n+            assertEquals(\" 01.2\", String.format(\"% 05.1f\", 1.2));\n+            assertEquals(\" 0000001.2\", String.format(\"% 010.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"% 01.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 02.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 03.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 04.1f\", -1.2));\n+            assertEquals(\"-01.2\", String.format(\"% 05.1f\", -1.2));\n+            assertEquals(\"-0000001.2\", String.format(\"% 010.1f\", -1.2));\n+        }\n+\n+    }\n+\n","filename":"test\/jdk\/java\/util\/Formatter\/Padding.java","additions":113,"deletions":1,"binary":false,"changes":114,"status":"modified"}]}