{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -4599,4 +4599,3 @@\n-            if (width != -1 && Flags.contains(f, Flags.ZERO_PAD)) {\n-                for (int k = sb.length(); k < width; k++) {\n-                    sb.insert(begin, zero);\n-                }\n+            if (width > sb.length() && Flags.contains(f, Flags.ZERO_PAD)) {\n+                String zeros = Character.toString(zero).repeat(width - sb.length());\n+                sb.insert(begin, zeros);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,362 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @run junit Padding\n+ *\/\n+\n+import org.junit.jupiter.api.Nested;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class Padding {\n+\n+    @Nested\n+    class BlankPaddingInt {\n+\n+        @Test\n+        void blankPad_d() {\n+            assertEquals(\"12\", String.format(\"%1d\", 12));\n+            assertEquals(\"12\", String.format(\"%2d\", 12));\n+            assertEquals(\" 12\", String.format(\"%3d\", 12));\n+            assertEquals(\"  12\", String.format(\"%4d\", 12));\n+            assertEquals(\"   12\", String.format(\"%5d\", 12));\n+            assertEquals(\"        12\", String.format(\"%10d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%1d\", -12));\n+            assertEquals(\"-12\", String.format(\"%2d\", -12));\n+            assertEquals(\"-12\", String.format(\"%3d\", -12));\n+            assertEquals(\" -12\", String.format(\"%4d\", -12));\n+            assertEquals(\"  -12\", String.format(\"%5d\", -12));\n+            assertEquals(\"       -12\", String.format(\"%10d\", -12));\n+        }\n+\n+        @Test\n+        void blankPad_plus_d() {\n+            assertEquals(\"+12\", String.format(\"%+1d\", 12));\n+            assertEquals(\"+12\", String.format(\"%+2d\", 12));\n+            assertEquals(\"+12\", String.format(\"%+3d\", 12));\n+            assertEquals(\" +12\", String.format(\"%+4d\", 12));\n+            assertEquals(\"  +12\", String.format(\"%+5d\", 12));\n+            assertEquals(\"       +12\", String.format(\"%+10d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%+1d\", -12));\n+            assertEquals(\"-12\", String.format(\"%+2d\", -12));\n+            assertEquals(\"-12\", String.format(\"%+3d\", -12));\n+            assertEquals(\" -12\", String.format(\"%+4d\", -12));\n+            assertEquals(\"  -12\", String.format(\"%+5d\", -12));\n+            assertEquals(\"       -12\", String.format(\"%+10d\", -12));\n+        }\n+\n+        @Test\n+        void blankPad_blank_d() {\n+            assertEquals(\" 12\", String.format(\"% 1d\", 12));\n+            assertEquals(\" 12\", String.format(\"% 2d\", 12));\n+            assertEquals(\" 12\", String.format(\"% 3d\", 12));\n+            assertEquals(\"  12\", String.format(\"% 4d\", 12));\n+            assertEquals(\"   12\", String.format(\"% 5d\", 12));\n+            assertEquals(\"        12\", String.format(\"% 10d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"% 1d\", -12));\n+            assertEquals(\"-12\", String.format(\"% 2d\", -12));\n+            assertEquals(\"-12\", String.format(\"% 3d\", -12));\n+            assertEquals(\" -12\", String.format(\"% 4d\", -12));\n+            assertEquals(\"  -12\", String.format(\"% 5d\", -12));\n+            assertEquals(\"       -12\", String.format(\"% 10d\", -12));\n+        }\n+\n+        @Test\n+        void blankPad_minus_d() {\n+            assertEquals(\"12\", String.format(\"%-1d\", 12));\n+            assertEquals(\"12\", String.format(\"%-2d\", 12));\n+            assertEquals(\"12 \", String.format(\"%-3d\", 12));\n+            assertEquals(\"12  \", String.format(\"%-4d\", 12));\n+            assertEquals(\"12   \", String.format(\"%-5d\", 12));\n+            assertEquals(\"12        \", String.format(\"%-10d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%-1d\", -12));\n+            assertEquals(\"-12\", String.format(\"%-2d\", -12));\n+            assertEquals(\"-12\", String.format(\"%-3d\", -12));\n+            assertEquals(\"-12 \", String.format(\"%-4d\", -12));\n+            assertEquals(\"-12  \", String.format(\"%-5d\", -12));\n+            assertEquals(\"-12       \", String.format(\"%-10d\", -12));\n+        }\n+\n+        @Test\n+        void blankPad_minus_plus_d() {\n+            assertEquals(\"+12\", String.format(\"%-+1d\", 12));\n+            assertEquals(\"+12\", String.format(\"%-+2d\", 12));\n+            assertEquals(\"+12\", String.format(\"%-+3d\", 12));\n+            assertEquals(\"+12 \", String.format(\"%-+4d\", 12));\n+            assertEquals(\"+12  \", String.format(\"%-+5d\", 12));\n+            assertEquals(\"+12       \", String.format(\"%-+10d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%-+1d\", -12));\n+            assertEquals(\"-12\", String.format(\"%-+2d\", -12));\n+            assertEquals(\"-12\", String.format(\"%-+3d\", -12));\n+            assertEquals(\"-12 \", String.format(\"%-+4d\", -12));\n+            assertEquals(\"-12  \", String.format(\"%-+5d\", -12));\n+            assertEquals(\"-12       \", String.format(\"%-+10d\", -12));\n+        }\n+\n+        @Test\n+        void blankPad_minus_blank_d() {\n+            assertEquals(\" 12\", String.format(\"%- 1d\", 12));\n+            assertEquals(\" 12\", String.format(\"%- 2d\", 12));\n+            assertEquals(\" 12\", String.format(\"%- 3d\", 12));\n+            assertEquals(\" 12 \", String.format(\"%- 4d\", 12));\n+            assertEquals(\" 12  \", String.format(\"%- 5d\", 12));\n+            assertEquals(\" 12       \", String.format(\"%- 10d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%- 1d\", -12));\n+            assertEquals(\"-12\", String.format(\"%- 2d\", -12));\n+            assertEquals(\"-12\", String.format(\"%- 3d\", -12));\n+            assertEquals(\"-12 \", String.format(\"%- 4d\", -12));\n+            assertEquals(\"-12  \", String.format(\"%- 5d\", -12));\n+            assertEquals(\"-12       \", String.format(\"%- 10d\", -12));\n+        }\n+\n+    }\n+\n+    @Nested\n+    class BlankPaddingDouble {\n+\n+        @Test\n+        void blankPad_d() {\n+            assertEquals(\"1.2\", String.format(\"%1.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%2.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%3.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"%4.1f\", 1.2));\n+            assertEquals(\"  1.2\", String.format(\"%5.1f\", 1.2));\n+            assertEquals(\"       1.2\", String.format(\"%10.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%1.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%2.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%3.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%4.1f\", -1.2));\n+            assertEquals(\" -1.2\", String.format(\"%5.1f\", -1.2));\n+            assertEquals(\"      -1.2\", String.format(\"%10.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void blankPad_plus_d() {\n+            assertEquals(\"+1.2\", String.format(\"%+1.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+2.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+3.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+4.1f\", 1.2));\n+            assertEquals(\" +1.2\", String.format(\"%+5.1f\", 1.2));\n+            assertEquals(\"      +1.2\", String.format(\"%+10.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%+1.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+2.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+3.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+4.1f\", -1.2));\n+            assertEquals(\" -1.2\", String.format(\"%+5.1f\", -1.2));\n+            assertEquals(\"      -1.2\", String.format(\"%+10.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void blankPad_blank_d() {\n+            assertEquals(\" 1.2\", String.format(\"% 1.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 2.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 3.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 4.1f\", 1.2));\n+            assertEquals(\"  1.2\", String.format(\"% 5.1f\", 1.2));\n+            assertEquals(\"       1.2\", String.format(\"% 10.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"% 1.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 2.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 3.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 4.1f\", -1.2));\n+            assertEquals(\" -1.2\", String.format(\"% 5.1f\", -1.2));\n+            assertEquals(\"      -1.2\", String.format(\"% 10.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void blankPad_minus_d() {\n+            assertEquals(\"1.2\", String.format(\"%-1.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%-2.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%-3.1f\", 1.2));\n+            assertEquals(\"1.2 \", String.format(\"%-4.1f\", 1.2));\n+            assertEquals(\"1.2  \", String.format(\"%-5.1f\", 1.2));\n+            assertEquals(\"1.2       \", String.format(\"%-10.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%-1.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%-2.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%-3.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%-4.1f\", -1.2));\n+            assertEquals(\"-1.2 \", String.format(\"%-5.1f\", -1.2));\n+            assertEquals(\"-1.2      \", String.format(\"%-10.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void blankPad_minus_plus_d() {\n+            assertEquals(\"+1.2\", String.format(\"%-+1.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%-+2.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%-+3.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%-+4.1f\", 1.2));\n+            assertEquals(\"+1.2 \", String.format(\"%-+5.1f\", 1.2));\n+            assertEquals(\"+1.2      \", String.format(\"%-+10.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%-+1.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%-+2.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%-+3.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%-+4.1f\", -1.2));\n+            assertEquals(\"-1.2 \", String.format(\"%-+5.1f\", -1.2));\n+            assertEquals(\"-1.2      \", String.format(\"%-+10.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void blankPad_minus_blank_d() {\n+            assertEquals(\" 1.2\", String.format(\"%- 1.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"%- 2.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"%- 3.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"%- 4.1f\", 1.2));\n+            assertEquals(\" 1.2 \", String.format(\"%- 5.1f\", 1.2));\n+            assertEquals(\" 1.2      \", String.format(\"%- 10.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%- 1.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%- 2.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%- 3.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%- 4.1f\", -1.2));\n+            assertEquals(\"-1.2 \", String.format(\"%- 5.1f\", -1.2));\n+            assertEquals(\"-1.2      \", String.format(\"%- 10.1f\", -1.2));\n+        }\n+\n+    }\n+\n+    @Nested\n+    class ZeroPaddingInt {\n+\n+        @Test\n+        void zeroPad_d() {\n+            assertEquals(\"12\", String.format(\"%01d\", 12));\n+            assertEquals(\"12\", String.format(\"%02d\", 12));\n+            assertEquals(\"012\", String.format(\"%03d\", 12));\n+            assertEquals(\"0012\", String.format(\"%04d\", 12));\n+            assertEquals(\"00012\", String.format(\"%05d\", 12));\n+            assertEquals(\"0000000012\", String.format(\"%010d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%01d\", -12));\n+            assertEquals(\"-12\", String.format(\"%02d\", -12));\n+            assertEquals(\"-12\", String.format(\"%03d\", -12));\n+            assertEquals(\"-012\", String.format(\"%04d\", -12));\n+            assertEquals(\"-0012\", String.format(\"%05d\", -12));\n+            assertEquals(\"-000000012\", String.format(\"%010d\", -12));\n+        }\n+\n+        @Test\n+        void zeroPad_plus_d() {\n+            assertEquals(\"+12\", String.format(\"%+01d\", 12));\n+            assertEquals(\"+12\", String.format(\"%+02d\", 12));\n+            assertEquals(\"+12\", String.format(\"%+03d\", 12));\n+            assertEquals(\"+012\", String.format(\"%+04d\", 12));\n+            assertEquals(\"+0012\", String.format(\"%+05d\", 12));\n+            assertEquals(\"+000000012\", String.format(\"%+010d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"%+01d\", -12));\n+            assertEquals(\"-12\", String.format(\"%+02d\", -12));\n+            assertEquals(\"-12\", String.format(\"%+03d\", -12));\n+            assertEquals(\"-012\", String.format(\"%+04d\", -12));\n+            assertEquals(\"-0012\", String.format(\"%+05d\", -12));\n+            assertEquals(\"-000000012\", String.format(\"%+010d\", -12));\n+        }\n+\n+        @Test\n+        void zeroPad_blank_d() {\n+            assertEquals(\" 12\", String.format(\"% 01d\", 12));\n+            assertEquals(\" 12\", String.format(\"% 02d\", 12));\n+            assertEquals(\" 12\", String.format(\"% 03d\", 12));\n+            assertEquals(\" 012\", String.format(\"% 04d\", 12));\n+            assertEquals(\" 0012\", String.format(\"% 05d\", 12));\n+            assertEquals(\" 000000012\", String.format(\"% 010d\", 12));\n+\n+            assertEquals(\"-12\", String.format(\"% 01d\", -12));\n+            assertEquals(\"-12\", String.format(\"% 02d\", -12));\n+            assertEquals(\"-12\", String.format(\"% 03d\", -12));\n+            assertEquals(\"-012\", String.format(\"% 04d\", -12));\n+            assertEquals(\"-0012\", String.format(\"% 05d\", -12));\n+            assertEquals(\"-000000012\", String.format(\"% 010d\", -12));\n+        }\n+\n+    }\n+\n+    @Nested\n+    class ZeroPaddingDouble {\n+\n+        @Test\n+        void zeroPad_d() {\n+            assertEquals(\"1.2\", String.format(\"%01.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%02.1f\", 1.2));\n+            assertEquals(\"1.2\", String.format(\"%03.1f\", 1.2));\n+            assertEquals(\"01.2\", String.format(\"%04.1f\", 1.2));\n+            assertEquals(\"001.2\", String.format(\"%05.1f\", 1.2));\n+            assertEquals(\"00000001.2\", String.format(\"%010.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%01.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%02.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%03.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%04.1f\", -1.2));\n+            assertEquals(\"-01.2\", String.format(\"%05.1f\", -1.2));\n+            assertEquals(\"-0000001.2\", String.format(\"%010.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void zeroPad_plus_d() {\n+            assertEquals(\"+1.2\", String.format(\"%+01.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+02.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+03.1f\", 1.2));\n+            assertEquals(\"+1.2\", String.format(\"%+04.1f\", 1.2));\n+            assertEquals(\"+01.2\", String.format(\"%+05.1f\", 1.2));\n+            assertEquals(\"+0000001.2\", String.format(\"%+010.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"%+01.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+02.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+03.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"%+04.1f\", -1.2));\n+            assertEquals(\"-01.2\", String.format(\"%+05.1f\", -1.2));\n+            assertEquals(\"-0000001.2\", String.format(\"%+010.1f\", -1.2));\n+        }\n+\n+        @Test\n+        void zeroPad_blank_d() {\n+            assertEquals(\" 1.2\", String.format(\"% 01.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 02.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 03.1f\", 1.2));\n+            assertEquals(\" 1.2\", String.format(\"% 04.1f\", 1.2));\n+            assertEquals(\" 01.2\", String.format(\"% 05.1f\", 1.2));\n+            assertEquals(\" 0000001.2\", String.format(\"% 010.1f\", 1.2));\n+\n+            assertEquals(\"-1.2\", String.format(\"% 01.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 02.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 03.1f\", -1.2));\n+            assertEquals(\"-1.2\", String.format(\"% 04.1f\", -1.2));\n+            assertEquals(\"-01.2\", String.format(\"% 05.1f\", -1.2));\n+            assertEquals(\"-0000001.2\", String.format(\"% 010.1f\", -1.2));\n+        }\n+\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/util\/Formatter\/Padding.java","additions":362,"deletions":0,"binary":false,"changes":362,"status":"added"}]}