{"files":[{"patch":"@@ -54,0 +54,1 @@\n+import static jdk.javadoc.internal.doclets.formats.html.LinkInfoImpl.Kind.THROWS_TYPE;\n@@ -257,10 +258,5 @@\n-        Content htmltree = new ContentBuilder();\n-        if (!exceptions.isEmpty()) {\n-            Content link = writer.getLink(new LinkInfoImpl(configuration, MEMBER, exceptions.get(0)));\n-            htmltree.add(link);\n-            for (int i = 1; i < exceptions.size(); i++) {\n-                htmltree.add(\",\");\n-                htmltree.add(DocletConstants.NL);\n-                Content exceptionLink = writer.getLink(new LinkInfoImpl(configuration, MEMBER,\n-                        exceptions.get(i)));\n-                htmltree.add(exceptionLink);\n+        Content htmlTree = new ContentBuilder();\n+        for (TypeMirror t : exceptions) {\n+            if (!htmlTree.isEmpty()) {\n+                htmlTree.add(\",\");\n+                htmlTree.add(DocletConstants.NL);\n@@ -268,0 +264,2 @@\n+            Content link = writer.getLink(new LinkInfoImpl(configuration, THROWS_TYPE, t));\n+            htmlTree.add(link);\n@@ -269,1 +267,1 @@\n-        return htmltree;\n+        return htmlTree;\n@@ -306,1 +304,1 @@\n-            SimpleTypeVisitor9<Boolean, Void> stv = new SimpleTypeVisitor9<Boolean, Void>() {\n+            SimpleTypeVisitor9<Boolean, Void> stv = new SimpleTypeVisitor9<>() {\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractExecutableMemberWriter.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-         * A receiver type\n+         * A receiver type.\n@@ -216,1 +216,1 @@\n-         * A record component within a class signature\n+         * A record component within a class signature.\n@@ -218,1 +218,6 @@\n-        RECORD_COMPONENT\n+        RECORD_COMPONENT,\n+\n+        \/**\n+         * A type thrown from a method.\n+         *\/\n+        THROWS_TYPE\n@@ -392,2 +397,0 @@\n-                excludeTypeBounds = true;\n-                break;\n@@ -395,0 +398,1 @@\n+            case THROWS_TYPE:\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/LinkInfoImpl.java","additions":9,"deletions":5,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,92 @@\n+\/*\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/*\n+  * @test\n+  * @bug 8253700\n+  * @summary spurious \"extends Throwable\" at end of method declaration\n+  * throws section.  Make sure that the link is below a Throws heading.\n+  * @library \/tools\/lib ..\/..\/lib\n+  * @modules jdk.javadoc\/jdk.javadoc.internal.tool\n+  * @build javadoc.tester.* toolbox.ToolBox\n+  * @run main TestThrows\n+  *\/\n+\n+ import java.io.IOException;\n+ import java.nio.file.Path;\n+\n+ import toolbox.ToolBox;\n+\n+ import javadoc.tester.JavadocTester;\n+\n+ public class TestThrows extends JavadocTester {\n+\n+     public static void main(String... args) throws Exception {\n+         TestThrows tester = new TestThrows();\n+         tester.runTests(m -> new Object[] { Path.of(m.getName()) });\n+     }\n+\n+     private final ToolBox tb = new ToolBox();\n+\n+     @Test\n+     public void testThrowsWithBound(Path base) throws IOException {\n+         Path src = base.resolve(\"src\");\n+         tb.writeJavaFiles(src,\n+                 \"\"\"\n+                     \/**\n+                      * This is interface C.\n+                      *\/\n+                     public interface C {\n+                         \/**\n+                          * Method m.\n+                          * @param <T> the throwable\n+                          * @throws T if a specific error occurs\n+                          * @throws Exception if an exception occurs\n+                          *\/\n+                         <T extends Throwable> void m() throws T, Exception;\n+                     }\n+                     \"\"\");\n+\n+         javadoc(\"-d\", base.resolve(\"out\").toString(),\n+                 src.resolve(\"C.java\").toString());\n+         checkExit(Exit.OK);\n+\n+         checkOutput(\"C.html\", true,\n+                 \"\"\"\n+                     <div class=\"member-signature\"><span class=\"type-parameters\">&lt;T extends java\\\n+                     .lang.Throwable&gt;<\/span>&nbsp;<span class=\"return-type\">void<\/span>&nbsp;<sp\\\n+                     an class=\"member-name\">m<\/span>()\n+                                                     throws <span class=\"exceptions\">T,\n+                     java.lang.Exception<\/span><\/div>\n+                     \"\"\",\n+                 \"\"\"\n+                     <dl class=\"notes\">\n+                     <dt>Type Parameters:<\/dt>\n+                     <dd><code>T<\/code> - the throwable<\/dd>\n+                     <dt>Throws:<\/dt>\n+                     <dd><code>T<\/code> - if a specific error occurs<\/dd>\n+                     <dd><code>java.lang.Exception<\/code> - if an exception occurs<\/dd>\n+                     <\/dl>\n+                     \"\"\");\n+     }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testThrows\/TestThrows.java","additions":92,"deletions":0,"binary":false,"changes":92,"status":"added"}]}