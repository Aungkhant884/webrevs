{"files":[{"patch":"@@ -195,1 +195,1 @@\n-java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java 7019055,8266245 windows-all,linux-all,macosx-aarch64\n+java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java 7019055,8266245 windows-all,linux-all,macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,4 @@\n+    \/\/ move away from cursor\n+    private final static int OFFSET_X = -20;\n+    private final static int OFFSET_Y = -20;\n+\n@@ -104,1 +108,1 @@\n-        Color c = r.getPixelColor(p.x + f.getWidth() \/ 2-10, p.y + f.getHeight() \/ 2-10);\n+        Color c = r.getPixelColor(p.x + f.getWidth() \/ 2 - OFFSET_X, p.y + f.getHeight() \/ 2 - OFFSET_Y);\n","filename":"test\/jdk\/java\/awt\/Dialog\/MakeWindowAlwaysOnTop\/MakeWindowAlwaysOnTop.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -125,1 +125,0 @@\n-        int tolerance = 5;\n@@ -136,6 +135,1 @@\n-                Color col = new Color(bi.getRGB(x,y));\n-\n-                if ((Math.abs(col.getAlpha()-color.getAlpha()) > tolerance) ||\n-                    (Math.abs(col.getRed()-color.getRed()) > tolerance) ||\n-                    (Math.abs(col.getBlue()-color.getBlue()) > tolerance) ||\n-                    (Math.abs(col.getGreen()-color.getGreen()) > tolerance)) {\n+                if (bi.getRGB(x, y) != color.getRGB()) {\n","filename":"test\/jdk\/java\/awt\/FullScreen\/FullScreenInsets\/FullScreenInsets.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,0 +62,3 @@\n+    \/\/ move away from cursor\n+    private final static int OFFSET_X = -20;\n+    private final static int OFFSET_Y = -20;\n@@ -87,1 +90,1 @@\n-        Color color = robot.getPixelColor(centerX-10, centerY-10);\n+        Color color = robot.getPixelColor(centerX - OFFSET_X, centerY - OFFSET_Y);\n@@ -100,1 +103,1 @@\n-            System.out.println(\"color \" + color + \" COLOR_1X\" + COLOR_1X);\n+            System.out.println(\"color \" + color + \" COLOR_1X \" + COLOR_1X);\n@@ -104,1 +107,1 @@\n-            System.out.println(\"color \" + color + \" COLOR_2X\" + COLOR_2X);\n+            System.out.println(\"color \" + color + \" COLOR_2X \" + COLOR_2X);\n","filename":"test\/jdk\/javax\/swing\/JButton\/8151303\/PressedIconTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -58,0 +58,4 @@\n+     \/\/ move away from cursor\n+    private final static int OFFSET_X = -20;\n+    private final static int OFFSET_Y = -20;\n+\n@@ -95,2 +99,1 @@\n-            Color color = robot.getPixelColor(cx-10, cy-10);\n-            if (!FRAME_COLOR.equals(color)) {\n+            Color color = robot.getPixelColor(cx - OFFSET_X, cy - OFFSET_Y);\n@@ -98,0 +101,1 @@\n+            if (!FRAME_COLOR.equals(color)) {\n@@ -101,0 +105,1 @@\n+\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/8069348\/bug8069348.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -46,0 +46,4 @@\n+     \/\/ move away from cursor\n+    private final static int OFFSET_X = -20;\n+    private final static int OFFSET_Y = -20;\n+\n@@ -79,1 +83,1 @@\n-            Color color = robot.getPixelColor(p.x-10, p.y-10);\n+            Color color = robot.getPixelColor(p.x - OFFSET_X, p.y - OFFSET_y);\n@@ -85,0 +89,4 @@\n+                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+                Rectangle screen = new Rectangle(0, 0, (int) screenSize.getWidth(), (int) screenSize.getHeight());\n+                BufferedImage img = robot.createScreenCapture(screen);\n+                javax.imageio.ImageIO.write(img, \"png\", new java.io.File(\"image.png\"));\n","filename":"test\/jdk\/javax\/swing\/plaf\/synth\/SynthButtonUI\/6276188\/bug6276188.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"}]}