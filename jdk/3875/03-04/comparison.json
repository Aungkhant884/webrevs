{"files":[{"patch":"@@ -376,0 +376,2 @@\n+  _recursions = 0;\n+  ret = simple_wait(self, millis);\n@@ -377,1 +379,3 @@\n-  if (self->is_Java_thread()) {\n+  \/\/ Now we need to re-enter the monitor. For JavaThread's\n+  \/\/ we need to manage suspend requests.\n+  if (self->is_Java_thread()) { \/\/ JavaThread re-enter\n@@ -379,16 +383,6 @@\n-    guarantee(jt->thread_state() == _thread_in_native, \"invariant\");\n-\n-    _recursions = 0;\n-    ret = simple_wait(self, millis);\n-\n-    {\n-      ThreadInVMfromNative tivmfn(jt);\n-      for (;;) {\n-        ExitOnSuspend eos(this);\n-        {\n-          ThreadBlockInVMPreprocess<ExitOnSuspend> tbivmp(jt, eos);\n-          simple_enter(jt);\n-        }\n-        if (!eos.monitor_exited()) {\n-          break;\n-        }\n+    ThreadInVMfromNative tivmfn(jt);\n+    for (;;) {\n+      ExitOnSuspend eos(this);\n+      {\n+        ThreadBlockInVMPreprocess<ExitOnSuspend> tbivmp(jt, eos);\n+        simple_enter(jt);\n@@ -396,3 +390,2 @@\n-      _recursions = save;\n-      if (jt->is_interrupted(true)) {\n-        ret = M_INTERRUPTED;\n+      if (!eos.monitor_exited()) {\n+        break;\n@@ -401,5 +394,4 @@\n-  } else {\n-    _recursions = 0;\n-    ret = simple_wait(self, millis);\n-    simple_enter(self);\n-    _recursions = save;\n+    if (jt->is_interrupted(true)) {\n+      ret = M_INTERRUPTED;\n+    }\n+  } else { \/\/ Non-JavaThread re-enter\n@@ -407,0 +399,1 @@\n+    simple_enter(self);\n@@ -409,0 +402,2 @@\n+  _recursions = save;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiRawMonitor.cpp","additions":20,"deletions":25,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -211,0 +211,1 @@\n+    OrderAccess::storestore();\n@@ -235,0 +236,4 @@\n+\/\/ Perform a transition to _thread_blocked and take a call-back to be executed before\n+\/\/ SafepointMechanism::process_if_requested when returning to the VM. This allows us\n+\/\/ to perform an \"undo\" action if we might block processing a safepoint\/handshake operation\n+\/\/ (such as thread suspension).\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -316,1 +316,3 @@\n-    _exited = true;\n+    _om_exited = true;\n+\n+    current->set_current_pending_monitor(_om);\n@@ -433,0 +435,6 @@\n+        current->set_current_pending_monitor(NULL);\n+        \/\/ We can go to a safepoint at the end of this block. If we\n+        \/\/ do a thread dump during that safepoint, then this thread will show\n+        \/\/ as having \"-locked\" the monitor, but the OS and java.lang.Thread\n+        \/\/ states will still report that the thread is blocked trying to\n+        \/\/ acquire it.\n@@ -441,2 +449,0 @@\n-    current->set_current_pending_monitor(NULL);\n-\n@@ -446,6 +452,0 @@\n-    \/\/ We can go to a safepoint at the end of this block. If we\n-    \/\/ do a thread dump during that safepoint, then this thread will show\n-    \/\/ as having \"-locked\" the monitor, but the OS and java.lang.Thread\n-    \/\/ states will still report that the thread is blocked trying to\n-    \/\/ acquire it.\n-\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -309,1 +309,1 @@\n-    bool _exited;\n+    bool _om_exited;\n@@ -311,1 +311,1 @@\n-    ExitOnSuspend(ObjectMonitor* om) : _om(om), _exited(false) {}\n+    ExitOnSuspend(ObjectMonitor* om) : _om(om), _om_exited(false) {}\n@@ -313,1 +313,1 @@\n-    bool exited() { return _exited; }\n+    bool exited() { return _om_exited; }\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}