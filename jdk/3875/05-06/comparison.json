{"files":[{"patch":"@@ -405,1 +405,0 @@\n-  guarantee(save == _recursions, \"invariant\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiRawMonitor.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-    OrderAccess::storestore();\n+    OrderAccess::storestore(); \/\/ Keep thread_state change and make_walkable() separate.\n@@ -250,1 +250,1 @@\n-    OrderAccess::storestore();\n+    OrderAccess::storestore(); \/\/ Keep thread_state change and make_walkable() separate.\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -441,0 +441,2 @@\n+        \/\/ If there is a suspend request, ExitOnSuspend will exit the OM\n+        \/\/ and set the OM as pending.\n@@ -449,3 +451,2 @@\n-    \/\/ We cleared the pending monitor info since we've just gotten past\n-    \/\/ the enter-check-for-suspend dance and we now own the monitor free\n-    \/\/ and clear, i.e., it is no longer pending.\n+    \/\/ We've just gotten past the enter-check-for-suspend dance and we now own\n+    \/\/ the monitor free and clear.\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}