{"files":[{"patch":"@@ -42,2 +42,2 @@\n-\/\/ thread (e.g. heapRootCallback). This means we may not tranisition\/safepoint\n-\/\/ poll in many cases, else the agent JavaThread can deadlock with VM thread,\n+\/\/ thread (e.g., heapRootCallback). This means we may not transition\/safepoint\n+\/\/ poll in many cases, else the agent JavaThread can deadlock with the VM thread,\n@@ -48,1 +48,1 @@\n-\/\/ - We may safepoint poll before it is owned and after it have been released.\n+\/\/ - We may safepoint poll before it is owned and after it has been released.\n@@ -50,4 +50,4 @@\n-\/\/ native for all operations. However we need to honor suspend request, not\n-\/\/ entering a monitor if suspended, and check for interrupts. Honoring suspened\n-\/\/ and reading interrupt flag must be done from VM state (a safepoint unsafe\n-\/\/ state).\n+\/\/ native for all operations. However we need to honor a suspend request, not\n+\/\/ entering a monitor if suspended, and check for interrupts. Honoring a suspend\n+\/\/ request\/\/ and reading the interrupt flag must be done from VM state\n+\/\/ (a safepoint unsafe state).\n","filename":"src\/hotspot\/share\/prims\/jvmtiRawMonitor.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -205,0 +205,1 @@\n+    assert(_thread->thread_state() == _thread_in_vm, \"coming from wrong thread state\");\n","filename":"src\/hotspot\/share\/runtime\/interfaceSupport.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -314,0 +314,1 @@\n+    \/\/ Don't need a full fence after clearing successor here because of the call to exit().\n@@ -315,1 +316,1 @@\n-    _om_exit = true;\n+    _om_op_done = true;\n@@ -325,1 +326,1 @@\n-    _om_exit = true;\n+    _om_op_done = true;\n@@ -434,1 +435,2 @@\n-      if (!eos.om_exited()) {\n+      if (!eos.om_op_done()) {\n+        \/\/ ExitOnSuspend did not exit the OM\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -309,1 +309,1 @@\n-    bool _om_exit;\n+    bool _om_op_done;\n@@ -311,1 +311,1 @@\n-    ExitOnSuspend(ObjectMonitor* om) : _om(om), _om_exit(false) {}\n+    ExitOnSuspend(ObjectMonitor* om) : _om(om), _om_op_done(false) {}\n@@ -313,1 +313,1 @@\n-    bool om_exited() { return _om_exit; }\n+    bool om_op_done() { return _om_op_done; }\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}