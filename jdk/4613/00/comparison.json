{"files":[{"patch":"@@ -355,1 +355,2 @@\n-\n+        javacOpts.add(\"-Xlint:deprecation\");\n+        javacOpts.add(\"-Xlint:unchecked\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/Main.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8192920 8204588 8246774\n+ * @bug 8192920 8204588 8246774 8248843 8268869\n@@ -601,0 +601,32 @@\n+    @Test\n+    public void testNoRecompileWithSuggestions(Path base) throws IOException {\n+        tb.writeJavaFiles(base,\n+            \"class NoRecompile {\\n\" +\n+            \"    void use(String s) {}\\n\" +\n+            \"    void test() {\\n\" +\n+            \"        use(1);\\n\" +\n+            \"    }\\n\" +\n+            \"    <T> void test(T t, Object o) {\\n\" +\n+            \"        T t1 = (T) o;\\n\" +\n+            \"    }\\n\" +\n+            \"    static class Generic<T> {\\n\" +\n+            \"        T t;\\n\" +\n+            \"        void raw(Generic raw) {\\n\" +\n+            \"            raw.t = \\\"\\\";\\n\" +\n+            \"        }\\n\" +\n+            \"    }\\n\" +\n+            \"    void deprecation() {\\n\" +\n+            \"        Thread.currentThread().stop();\\n\" +\n+            \"    }\\n\" +\n+            \"    void preview(Object o) {\\n\" +\n+            \"      if (o instanceof String s) {\\n\" +\n+            \"          System.out.println(s);\\n\" +\n+            \"      }\\n\" +\n+            \"    }\\n\" +\n+            \"}\");\n+        Result r = run(base.resolve(\"NoRecompile.java\"), Collections.emptyList(), Collections.emptyList());\n+        if (r.stdErr.contains(\"recompile with\")) {\n+            error(\"Unexpected recompile suggestions in error output: \" + r.stdErr);\n+        }\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/launcher\/SourceLauncherTest.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}