[{"commit":{"message":"8261236: C2: ClhsdbJstackXcompStress test fails when StressGCM is enabled\n\nThe clhsdb jstack command crashes when the debugged program is run with\n-Xcomp -XX:+StressGCM -XX:StressSeed=2 on AArch64:\n\n  sun.jvm.hotspot.utilities.AssertionFailure: sanity check\n  at jdk.hotspot.agent\/sun.jvm.hotspot.utilities.Assert.that(Assert.java:32)\n  at jdk.hotspot.agent\/sun.jvm.hotspot.runtime.RegisterMap.setLocation(RegisterMap.java:160)\n  at jdk.hotspot.agent\/sun.jvm.hotspot.compiler.ImmutableOopMapSet.updateRegisterMap(ImmutableOopMapSet.java:303)\n  at jdk.hotspot.agent\/sun.jvm.hotspot.runtime.aarch64.AARCH64Frame.senderForCompiledFrame(AARCH64Frame.java:407)\n\nThe assertion failure here is:\n\n  Assert.that(0 <= i && i < regCount, \"sanity check\");\n\nI.e. there's an invalid register in the oop map.\n\nThe problem seems to be caused by the changes in JDK-8231586 which\nchanged OopMapValue::oop_types from a bit mask to normal integer enum.\nHowever the changes in the C++ code weren't mirrored in SA's\nOopMapStream which still treats OopTypes as a bit mask.\n\nThe particular oop map this is crashing on looks like this:\n\n  ImmutableOopMap {[24]=Oop [32]=Oop [40]=Derived_oop_[24] } pc offsets: 324\n\nThe code is looking for callee saved values (type=2) by AND-ing with\neach oop value type in the set, so it wrongly interprets the derived oop\n[40] (type=3) as a callee saved register.\n\nThis patch just mirrors the changes to the C++ code into the\ncorresponding SA classes.  The C++ OopMapStream constructor no longer\ntakes a type filter argument and callers are expected filter\nthemselves, so I've made the same change to the Java code.\n\nThis bug can also be seen using the clhsdb \"disassemble\" command.  For\nexample the above oop map is currently printed incorrectly as:\n\n  OopMap:\n  NarrowOops:[40]\n  Callee saved:[40] = [24]\n  Derived oops:[40] = [24]\n\nWith this patch it becomes:\n\n  OopMap:\n  Oops:[24]  [32]\n  Derived oops:[40] = [24]\n\nThis bug was reported on AArch64 but it seems to be just luck that we\ndon't see it on other platforms.\n\nTested tier1 and hotspot_serviceability on AArch64 and x86."},"files":[{"filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/compiler\/ImmutableOopMapSet.java"},{"filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/compiler\/OopMapStream.java"},{"filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/classbrowser\/HTMLGenerator.java"}],"sha":"e61e5b51607d25bf74f222a228efa32d524dcf3d"}]