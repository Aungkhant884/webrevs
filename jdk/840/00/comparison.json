{"files":[{"patch":"@@ -503,1 +503,1 @@\n-        ByteOrder bo = ByteOrder.LITTLE_ENDIAN;\n+        ByteOrder bo = ByteOrder.nativeOrder();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractVector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -803,1 +803,1 @@\n-        int rp = 0, dp = 0;\n+\n@@ -805,0 +805,3 @@\n+        int size_diff = bsize - asize;\n+        ByteOrder bo = ByteOrder.nativeOrder();\n+        int rp = 0, dp = 0;\n@@ -806,1 +809,10 @@\n-            int nextrp = rp + bsize;\n+            if (bo == ByteOrder.BIG_ENDIAN) {\n+                if (size_diff > 0) {\n+                    byte sign = (byte)(data[dp] >> 7); \/\/ sign extend\n+                    for (int j = 0; j < size_diff; j++) {\n+                        result[rp++] = sign;\n+                    }\n+                } else {\n+                    dp -= size_diff; \/\/ step forward if needed\n+                }\n+            }\n@@ -808,1 +820,1 @@\n-            for (int j = 0; j < asize; j++) {\n+            for (int j = 0; j < minsize; j++) {\n@@ -810,1 +822,11 @@\n-                if (j < minsize)  result[rp++] = b;\n+                result[rp++] = b;\n+            }\n+            if (bo == ByteOrder.LITTLE_ENDIAN) {\n+                if (size_diff > 0) {\n+                    byte sign = (byte)(b >> 7); \/\/ sign extend\n+                    for (int j = 0; j < size_diff; j++) {\n+                        result[rp++] = sign;\n+                    }\n+                } else {\n+                    dp -= size_diff; \/\/ step forward if needed\n+                }\n@@ -812,2 +834,0 @@\n-            b >>= 7;  \/\/ sign extend\n-            while (rp < nextrp)  result[rp++] = b;\n@@ -817,0 +837,1 @@\n+\n","filename":"test\/jdk\/jdk\/incubator\/vector\/VectorReshapeTests.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"}]}