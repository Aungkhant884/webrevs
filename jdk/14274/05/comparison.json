{"files":[{"patch":"@@ -46,0 +46,1 @@\n+#include \"gc\/shared\/preservedMarks.inline.hpp\"\n@@ -143,0 +144,2 @@\n+\n+  _preserved_overflow_stack_set.init(1);\n@@ -150,1 +153,1 @@\n-  _preserved_overflow_stack.clear(true);\n+  _preserved_overflow_stack_set.reclaim();\n","filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-Stack<PreservedMark, mtGC>    MarkSweep::_preserved_overflow_stack;\n+PreservedMarksSet       MarkSweep::_preserved_overflow_stack_set(false \/* in_c_heap *\/);\n@@ -145,8 +145,0 @@\n-void PreservedMark::adjust_pointer() {\n-  MarkSweep::adjust_pointer(&_obj);\n-}\n-\n-void PreservedMark::restore() {\n-  _obj->set_mark(_mark);\n-}\n-\n@@ -164,1 +156,1 @@\n-    _preserved_overflow_stack.push(PreservedMark(obj, mark));\n+    _preserved_overflow_stack_set.get()->push_always(obj, mark);\n@@ -208,1 +200,1 @@\n-    _preserved_marks[i].adjust_pointer();\n+    PreservedMarks::adjust_preserved_mark(_preserved_marks + i);\n@@ -212,5 +204,1 @@\n-  StackIterator<PreservedMark, mtGC> iter(_preserved_overflow_stack);\n-  while (!iter.is_empty()) {\n-    PreservedMark* p = iter.next_addr();\n-    p->adjust_pointer();\n-  }\n+  _preserved_overflow_stack_set.get()->adjust_during_full_gc();\n@@ -220,1 +208,1 @@\n-  log_trace(gc)(\"Restoring \" SIZE_FORMAT \" marks\", _preserved_count + _preserved_overflow_stack.size());\n+  log_trace(gc)(\"Restoring \" SIZE_FORMAT \" marks\", _preserved_count + _preserved_overflow_stack_set.get()->size());\n@@ -224,1 +212,1 @@\n-    _preserved_marks[i].restore();\n+    _preserved_marks[i].set_mark();\n@@ -228,4 +216,1 @@\n-  while (!_preserved_overflow_stack.is_empty()) {\n-    PreservedMark p = _preserved_overflow_stack.pop();\n-    p.restore();\n-  }\n+  _preserved_overflow_stack_set.restore(nullptr);\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.cpp","additions":7,"deletions":22,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shared\/preservedMarks.inline.hpp\"\n@@ -102,1 +103,1 @@\n-  static Stack<PreservedMark, mtGC>      _preserved_overflow_stack;\n+  static PreservedMarksSet               _preserved_overflow_stack_set;\n@@ -189,11 +190,0 @@\n-class PreservedMark {\n-private:\n-  oop _obj;\n-  markWord _mark;\n-\n-public:\n-  PreservedMark(oop obj, markWord mark) : _obj(obj), _mark(mark) {}\n-  void adjust_pointer();\n-  void restore();\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.hpp","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    const OopAndMarkWord elem = _stack.pop();\n+    const PreservedMark elem = _stack.pop();\n@@ -43,0 +43,7 @@\n+void PreservedMarks::adjust_preserved_mark(PreservedMark* elem) {\n+  oop obj = elem->get_oop();\n+  if (obj->is_forwarded()) {\n+    elem->set_oop(obj->forwardee());\n+  }\n+}\n+\n@@ -44,1 +51,1 @@\n-  StackIterator<OopAndMarkWord, mtGC> iter(_stack);\n+  StackIterator<PreservedMark, mtGC> iter(_stack);\n@@ -46,6 +53,2 @@\n-    OopAndMarkWord* elem = iter.next_addr();\n-\n-    oop obj = elem->get_oop();\n-    if (obj->is_forwarded()) {\n-      elem->set_oop(obj->forwardee());\n-    }\n+    PreservedMark* elem = iter.next_addr();\n+    adjust_preserved_mark(elem);\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -37,6 +37,4 @@\n-class PreservedMarks {\n-private:\n-  class OopAndMarkWord {\n-  private:\n-    oop _o;\n-    markWord _m;\n+class PreservedMark {\n+ private:\n+  oop _o;\n+  markWord _m;\n@@ -44,2 +42,7 @@\n-  public:\n-    OopAndMarkWord(oop obj, markWord m) : _o(obj), _m(m) { }\n+ public:\n+  PreservedMark(oop obj, markWord m) : _o(obj), _m(m) { }\n+\n+  oop get_oop() { return _o; }\n+  inline void set_mark() const;\n+  void set_oop(oop obj) { _o = obj; }\n+};\n@@ -47,5 +50,3 @@\n-    oop get_oop() { return _o; }\n-    inline void set_mark() const;\n-    void set_oop(oop obj) { _o = obj; }\n-  };\n-  typedef Stack<OopAndMarkWord, mtGC> OopAndMarkWordStack;\n+class PreservedMarks {\n+private:\n+  typedef Stack<PreservedMark, mtGC> PreservedMarkStack;\n@@ -53,1 +54,1 @@\n-  OopAndMarkWordStack _stack;\n+  PreservedMarkStack _stack;\n@@ -64,0 +65,5 @@\n+\n+  \/\/ Adjust the preserved mark according to its\n+  \/\/ forwarding location stored in the mark.\n+  static void adjust_preserved_mark(PreservedMark* elem);\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.hpp","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    OopAndMarkWord elem(obj, m);\n+    PreservedMark elem(obj, m);\n@@ -47,1 +47,1 @@\n-  OopAndMarkWord elem(obj, m);\n+  PreservedMark elem(obj, m);\n@@ -52,1 +52,1 @@\n-    : _stack(OopAndMarkWordStack::default_segment_size(),\n+    : _stack(PreservedMarkStack::default_segment_size(),\n@@ -59,1 +59,1 @@\n-void PreservedMarks::OopAndMarkWord::set_mark() const {\n+void PreservedMark::set_mark() const {\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}