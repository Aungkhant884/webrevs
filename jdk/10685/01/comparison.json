{"files":[{"patch":"@@ -964,4 +964,1 @@\n-                        int size = model.getSize();\n-                        for (int i = 0; i < size; i++) {\n-                            model.removeIndexInterval(i, i);\n-                        }\n+                        model.clearSelection();\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/FormView.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,153 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.util.Arrays;\n+import javax.swing.JEditorPane;\n+import javax.swing.JFrame;\n+import javax.swing.JList;\n+import javax.swing.SwingUtilities;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8295248\n+ * @summary Verify select items of HTML form are cleared by reset\n+ *\/\n+public class TestResetSelectForm {\n+    private Robot robot;\n+    private JEditorPane editor;\n+    private JFrame frame;\n+\n+    private int listHeight;\n+    private Point loc;\n+    private Color baseColor;\n+\n+    private final int width = 200;\n+    private final int height = 200;\n+    private final int LIMIT = 10;\n+    private final String[] numbers = {\"1\",\"2\",\"3\",\"4\",\"5\"};\n+\n+    private int getListHeight() {\n+        JList<String> dummy = new JList<>(numbers);\n+        return dummy.getPreferredSize().height;\n+    }\n+\n+    private void setup() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"<html><body><form action=\\\"http:\/\/localhost\\\">\" +\n+                  \"<select name=select id=\\\"mySelect\\\" size=\\\"\" +\n+                  numbers.length + \"\\\" multiple>\");\n+        Arrays.stream(numbers).forEach(s->{sb.append(\n+                  \"<option>\" + s + \"<\/option>\");});\n+        sb.append(\"<\/select><br>\" +\n+                  \"<input type=reset name=reset value=\\\"reset\\\"\/>\" +\n+                  \"<br>\" +\n+                  \"<input type=submit name=submit value=\\\"submit\\\"\/>\" +\n+                  \"<\/form><\/body><\/html>\");\n+        editor = new JEditorPane(\"text\/html\", sb.toString());\n+        frame = new JFrame();\n+        frame.setSize(width, height);\n+        frame.setLayout(new BorderLayout());\n+        frame.add(editor, BorderLayout.CENTER);\n+        frame.setVisible(true);\n+    }\n+\n+    private static int getMaxColorDiff(Color c1, Color c2) {\n+        return Math.max(Math.abs(c1.getRed() - c2.getRed()),\n+                 Math.max(Math.abs(c1.getGreen() - c2.getGreen()),\n+                          Math.abs(c1.getBlue() - c2.getBlue())));\n+    }\n+\n+    private void checkNoListSelection() {\n+        int len = numbers.length;\n+        for (int i = 0; i < len; i++) {\n+            int pos = (int)(listHeight * (i + 0.5) \/ len);\n+            Color c = robot.getPixelColor(loc.x + 30, loc.y + pos);\n+            if (getMaxColorDiff(baseColor, c) > LIMIT) {\n+                throw new RuntimeException(\"Unexpected List selection at \" +\n+                    (i+1) + \", \" + baseColor + \",\" + c);\n+            }\n+        }\n+    }\n+\n+    private void execute() throws Exception{\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                listHeight = getListHeight();});\n+\n+            \/\/ position of 4th item\n+            int pos4 = (int)(listHeight * 3.5 \/ numbers.length);\n+\n+            SwingUtilities.invokeAndWait(() -> setup());\n+            robot.waitForIdle();\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                loc = editor.getLocationOnScreen();});\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            baseColor = robot.getPixelColor(loc.x + 30, loc.y + pos4);\n+\n+            \/\/Click 4th item\n+            robot.mouseMove(loc.x + 30, loc.y + pos4);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+\n+            \/\/Click reset button\n+            robot.mouseMove(loc.x + 30, loc.y + listHeight + 20);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            checkNoListSelection();\n+\n+            \/\/ Repaint\n+            SwingUtilities.invokeAndWait(() -> {\n+                editor.revalidate();\n+                editor.repaint();});\n+            robot.waitForIdle();\n+            robot.delay(500);\n+            checkNoListSelection();\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> frame.dispose());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        TestResetSelectForm test = new TestResetSelectForm();\n+        test.execute();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/TestResetSelectForm.java","additions":153,"deletions":0,"binary":false,"changes":153,"status":"added"}]}