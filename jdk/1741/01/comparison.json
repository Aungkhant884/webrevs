{"files":[{"patch":"@@ -78,1 +78,1 @@\n-    private static final int CD_MINIMALDAYSINFIRSTWEEK = 1;\n+    private static final int CD_FIRSTWEEKOFYEAR = 1;\n@@ -369,1 +369,9 @@\n-                return 0;\n+                int firstWeek = getCalendarDataValue(\n+                        removeExtensions(locale).toLanguageTag(),\n+                        CD_FIRSTWEEKOFYEAR);\n+                \/\/ Interpret the value from Windows LOCALE_IFIRSTWEEKOFYEAR setting\n+                return switch (firstWeek) {\n+                    case 1 -> 7; \/\/ First full week following 1\/1 is the first week of the year.\n+                    case 2 -> 4; \/\/ First week containing at least four days is the first week of the year.\n+                    default -> 1; \/\/ First week can be a single day, if 1\/1 falls on the last day of the week.\n+                };\n","filename":"src\/java.base\/windows\/classes\/sun\/util\/locale\/provider\/HostLocaleProviderAdapterImpl.java","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -650,0 +650,5 @@\n+    case sun_util_locale_provider_HostLocaleProviderAdapterImpl_CD_FIRSTWEEKOFYEAR:\n+        got = getLocaleInfoWrapper(langtag,\n+            LOCALE_IFIRSTWEEKOFYEAR | LOCALE_RETURN_NUMBER,\n+            (LPWSTR)&num, sizeof(num));\n+        break;\n","filename":"src\/java.base\/windows\/native\/libjava\/HostLocaleProviderAdapter_md.c","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.time.temporal.WeekFields;\n@@ -113,0 +114,4 @@\n+            case \"bug8257964Test\":\n+                bug8257964Test();\n+                break;\n+\n@@ -436,0 +441,30 @@\n+\n+    \/\/ Run only if the platform locale is en-GB\n+    static void bug8257964Test() {\n+        var defLoc = Locale.getDefault(Locale.Category.FORMAT);\n+        var type = LocaleProviderAdapter.getAdapter(CalendarNameProvider.class, Locale.UK)\n+                .getAdapterType();\n+        if (defLoc.equals(Locale.UK) &&\n+                type == LocaleProviderAdapter.Type.HOST &&\n+                (IS_WINDOWS || IS_MAC)) {\n+            Calendar instance = Calendar.getInstance(Locale.UK);\n+            int result = instance.getMinimalDaysInFirstWeek();\n+            if (result != 4) {\n+                throw new RuntimeException(\"MinimalDaysInFirstWeek for Locale.UK is incorrect. \" +\n+                        \"returned: \" + result);\n+            }\n+\n+            LocalDate date = LocalDate.of(2020,12,31);\n+            result = date.get(WeekFields.of(Locale.UK).weekOfWeekBasedYear());\n+            if (result != 53) {\n+                throw new RuntimeException(\"weekNumber is incorrect. \" +\n+                        \"returned: \" + result);\n+            }\n+            System.out.println(\"bug8257964Test succeeded.\");\n+        } else {\n+            System.out.println(\"Test ignored. Either :-\\n\" +\n+                    \"Default format locale is not Locale.UK: \" + defLoc + \", or\\n\" +\n+                    \"OS is neither macOS\/Windows, or\\n\" +\n+                    \"provider is not HOST: \" + type);\n+        }\n+    }\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleProviders.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- *      8246721 8248695\n+ *      8246721 8248695 8257964\n@@ -175,0 +175,3 @@\n+\n+        \/\/testing 8257964 fix. (macOS\/Windows only)\n+        testRun(\"HOST\", \"bug8257964Test\", \"\", \"\", \"\");\n","filename":"test\/jdk\/java\/util\/Locale\/LocaleProvidersRun.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}