{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-import jdk.internal.loader.NativeLibrary;\n@@ -1078,1 +1077,1 @@\n-            if (!build.isPresent()) {\n+            if (build.isEmpty()) {\n@@ -1090,1 +1089,1 @@\n-                    if (optional.isPresent() && !pre.isPresent()) {\n+                    if (optional.isPresent() && pre.isEmpty()) {\n@@ -1356,1 +1355,1 @@\n-            if (!pre.isPresent()) {\n+            if (pre.isEmpty()) {\n@@ -1360,1 +1359,1 @@\n-                if (!oPre.isPresent())\n+                if (oPre.isEmpty())\n@@ -1391,1 +1390,1 @@\n-            if (!optional.isPresent()) {\n+            if (optional.isEmpty()) {\n@@ -1395,1 +1394,1 @@\n-                if (!oOpt.isPresent())\n+                if (oOpt.isEmpty())\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -6783,1 +6783,1 @@\n-        if (!pred.stream().filter(Objects::nonNull).findFirst().isPresent()) {\n+        if (pred.stream().noneMatch(Objects::nonNull)) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -870,1 +870,1 @@\n-            if (!beforeFinder.find(name).isPresent()\n+            if (beforeFinder.find(name).isEmpty()\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/Resolver.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,1 +215,1 @@\n-        if (!isPresent()) {\n+        if (isEmpty()) {\n@@ -257,1 +257,1 @@\n-        if (!isPresent()) {\n+        if (isEmpty()) {\n@@ -285,1 +285,1 @@\n-        if (!isPresent()) {\n+        if (isEmpty()) {\n@@ -334,1 +334,1 @@\n-        if (!isPresent()) {\n+        if (isEmpty()) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/Optional.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n-import java.util.Iterator;\n@@ -398,1 +397,1 @@\n-                    .filter(mn -> !cf.findModule(mn).isPresent())\n+                    .filter(mn -> cf.findModule(mn).isEmpty())\n@@ -430,1 +429,1 @@\n-                    if (!systemModuleFinder.find(name).isPresent())\n+                    if (systemModuleFinder.find(name).isEmpty())\n@@ -661,1 +660,1 @@\n-            if (!om.isPresent()) {\n+            if (om.isEmpty()) {\n@@ -731,1 +730,1 @@\n-            if (!om.isPresent()) {\n+            if (om.isEmpty()) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleBootstrap.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -729,1 +729,1 @@\n-        if (!om.isPresent()) {\n+        if (om.isEmpty()) {\n@@ -738,1 +738,1 @@\n-            if (!omc.isPresent()) {\n+            if (omc.isEmpty()) {\n@@ -1026,1 +1026,1 @@\n-            if (!om.isPresent()) {\n+            if (om.isEmpty()) {\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}