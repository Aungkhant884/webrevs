{"files":[{"patch":"@@ -3477,1 +3477,2 @@\n-  IN_PROGRESS,\n+  IN_PROGRESS,  \/\/ Most JNI operations are permitted during this phase to\n+                \/\/ allow for initialization actions by libraries and agents.\n@@ -3697,1 +3698,1 @@\n-  if (vm_created != COMPLETE) {\n+  if (vm_created == NOT_CREATED) {\n@@ -3862,1 +3863,1 @@\n-  if (vm_created != COMPLETE) {\n+  if (vm_created == NOT_CREATED) {\n@@ -3876,1 +3877,1 @@\n-  if (vm_created != COMPLETE) {\n+  if (vm_created == NOT_CREATED) {\n@@ -3940,3 +3941,0 @@\n-  \/\/ We can be called by native libraries in the JDK during VM\n-  \/\/ initialization, so only bail-out if something seems very wrong.\n-  \/\/ Though how would we get here in that case?\n@@ -3994,1 +3992,1 @@\n-  if (vm_created != COMPLETE) {\n+  if (vm_created == NOT_CREATED) {\n@@ -3996,1 +3994,1 @@\n-  HOTSPOT_JNI_ATTACHCURRENTTHREADASDAEMON_RETURN((uint32_t) JNI_ERR);\n+    HOTSPOT_JNI_ATTACHCURRENTTHREADASDAEMON_RETURN((uint32_t) JNI_ERR);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI05\/ji05t001\/TestDescription.java 8219652,8309171 generic-all\n+vmTestbase\/nsk\/jvmti\/scenarios\/jni_interception\/JI05\/ji05t001\/TestDescription.java 8219652 aix-ppc64\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}