{"files":[{"patch":"@@ -0,0 +1,87 @@\n+\/*\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4422362\n+ * @summary Wrong Max Accessible Value with BoundedRangeModel components\n+ * @run main MaximumAccessibleValueTest\n+ *\/\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import javax.swing.JProgressBar;\n+import javax.swing.JScrollBar;\n+import javax.swing.JSlider;\n+import javax.swing.SwingUtilities;\n+\n+public class MaximumAccessibleValueTest {\n+    private static JScrollBar jScrollBar;\n+    private static JProgressBar jProgressBar;\n+    private static JSlider jSlider;\n+\n+    public static void createGUI() {\n+        jScrollBar = new JScrollBar();\n+        jProgressBar = new JProgressBar();\n+        jSlider = new JSlider();\n+    }\n+\n+    public static void doTest() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> createGUI());\n+        AtomicBoolean checkMaxValue = new AtomicBoolean();\n+\n+        SwingUtilities.invokeAndWait(\n+            () -> checkMaxValue.set(((Integer) jScrollBar.getAccessibleContext()\n+                .getAccessibleValue().getMaximumAccessibleValue())\n+                .intValue() != jScrollBar.getMaximum()\n+                - jScrollBar.getVisibleAmount()));\n+        if (checkMaxValue.get()) {\n+            throw new RuntimeException(\n+                \"Wrong MaximumAccessibleValue returned by JScrollBar\");\n+        }\n+\n+        SwingUtilities.invokeAndWait(() -> checkMaxValue.set(\n+            ((Integer) jProgressBar.getAccessibleContext().getAccessibleValue()\n+                .getMaximumAccessibleValue().intValue()) != (jProgressBar\n+                    .getMaximum() - jProgressBar.getModel().getExtent())));\n+        if (checkMaxValue.get()) {\n+            throw new RuntimeException(\n+                \"Wrong MaximumAccessibleValue returned by JProgressBar\");\n+        }\n+\n+        SwingUtilities.invokeAndWait(() -> checkMaxValue\n+            .set(((Integer) jSlider.getAccessibleContext().getAccessibleValue()\n+                .getMaximumAccessibleValue()).intValue() != jSlider.getMaximum()\n+                - jSlider.getModel().getExtent()));\n+        if (checkMaxValue.get()) {\n+            throw new RuntimeException(\n+                \"Wrong MaximumAccessibleValue returned by JSlider\");\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        doTest();\n+        System.out.println(\"Test Passed\");\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/accessibility\/4422362\/MaximumAccessibleValueTest.java","additions":87,"deletions":0,"binary":false,"changes":87,"status":"added"}]}