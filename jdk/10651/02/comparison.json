{"files":[{"patch":"@@ -81,1 +81,2 @@\n-    _rs_length_diff_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _young_rs_length_diff_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _mixed_rs_length_diff_seq(new TruncatedSeq(TruncatedSeqLength)),\n@@ -94,2 +95,4 @@\n-    _pending_cards_seq(new TruncatedSeq(TruncatedSeqLength)),\n-    _rs_length_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _young_pending_cards_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _mixed_pending_cards_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _young_rs_length_seq(new TruncatedSeq(TruncatedSeqLength)),\n+    _mixed_rs_length_seq(new TruncatedSeq(TruncatedSeqLength)),\n@@ -107,1 +110,1 @@\n-  _rs_length_diff_seq->add(rs_length_diff_defaults[index]);\n+  _young_rs_length_diff_seq->add(rs_length_diff_defaults[index]);\n@@ -172,2 +175,2 @@\n-void G1Analytics::report_cost_per_card_scan_ms(double cost_per_card_ms, bool for_young_gc) {\n-  if (for_young_gc) {\n+void G1Analytics::report_cost_per_card_scan_ms(double cost_per_card_ms, bool for_young_only_phase) {\n+  if  (for_young_only_phase) {\n@@ -180,2 +183,2 @@\n-void G1Analytics::report_cost_per_card_merge_ms(double cost_per_card_ms, bool for_young_gc) {\n-  if (for_young_gc) {\n+void G1Analytics::report_cost_per_card_merge_ms(double cost_per_card_ms, bool for_young_only_phase) {\n+  if  (for_young_only_phase) {\n@@ -188,2 +191,2 @@\n-void G1Analytics::report_card_merge_to_scan_ratio(double merge_to_scan_ratio, bool for_young_gc) {\n-  if (for_young_gc) {\n+void G1Analytics::report_card_merge_to_scan_ratio(double merge_to_scan_ratio, bool for_young_only_phase) {\n+  if  (for_young_only_phase) {\n@@ -196,2 +199,6 @@\n-void G1Analytics::report_rs_length_diff(double rs_length_diff) {\n-  _rs_length_diff_seq->add(rs_length_diff);\n+void G1Analytics::report_rs_length_diff(double rs_length_diff, bool for_young_only_phase) {\n+  if  (for_young_only_phase) {\n+    _young_rs_length_diff_seq->add(rs_length_diff);\n+  } else {\n+    _mixed_rs_length_diff_seq->add(rs_length_diff);\n+  }\n@@ -220,2 +227,6 @@\n-void G1Analytics::report_pending_cards(double pending_cards) {\n-  _pending_cards_seq->add(pending_cards);\n+void G1Analytics::report_pending_cards(double pending_cards, bool for_young_only_phase) {\n+  if  (for_young_only_phase) {\n+    _young_pending_cards_seq->add(pending_cards);\n+  } else {\n+    _mixed_pending_cards_seq->add(pending_cards);\n+  }\n@@ -224,2 +235,6 @@\n-void G1Analytics::report_rs_length(double rs_length) {\n-  _rs_length_seq->add(rs_length);\n+void G1Analytics::report_rs_length(double rs_length, bool for_young_only_phase) {\n+  if  (for_young_only_phase) {\n+    _young_rs_length_seq->add(rs_length);\n+  } else {\n+    _mixed_rs_length_seq->add(rs_length);\n+  }\n@@ -244,2 +259,2 @@\n-size_t G1Analytics::predict_scan_card_num(size_t rs_length, bool for_young_gc) const {\n-  if (for_young_gc || !enough_samples_available(_mixed_card_merge_to_scan_ratio_seq)) {\n+size_t G1Analytics::predict_scan_card_num(size_t rs_length, bool for_young_only_phase) const {\n+  if  (for_young_only_phase || !enough_samples_available(_mixed_card_merge_to_scan_ratio_seq)) {\n@@ -252,2 +267,2 @@\n-double G1Analytics::predict_card_merge_time_ms(size_t card_num, bool for_young_gc) const {\n-  if (for_young_gc || !enough_samples_available(_mixed_cost_per_card_merge_ms_seq)) {\n+double G1Analytics::predict_card_merge_time_ms(size_t card_num, bool for_young_only_phase) const {\n+  if  (for_young_only_phase || !enough_samples_available(_mixed_cost_per_card_merge_ms_seq)) {\n@@ -260,2 +275,2 @@\n-double G1Analytics::predict_card_scan_time_ms(size_t card_num, bool for_young_gc) const {\n-  if (for_young_gc || !enough_samples_available(_mixed_cost_per_card_scan_ms_seq)) {\n+double G1Analytics::predict_card_scan_time_ms(size_t card_num, bool for_young_only_phase) const {\n+  if  (for_young_only_phase || !enough_samples_available(_mixed_cost_per_card_scan_ms_seq)) {\n@@ -304,2 +319,6 @@\n-size_t G1Analytics::predict_rs_length() const {\n-  return predict_size(_rs_length_seq) + predict_size(_rs_length_diff_seq);\n+size_t G1Analytics::predict_rs_length(bool for_young_only_phase) const {\n+  if  (for_young_only_phase || !enough_samples_available(_mixed_rs_length_seq)) {\n+    return predict_size(_young_rs_length_seq) + predict_size(_young_rs_length_diff_seq);\n+  } else {\n+    return predict_size(_mixed_rs_length_seq) + predict_size(_mixed_rs_length_diff_seq);\n+  }\n@@ -308,2 +327,6 @@\n-size_t G1Analytics::predict_pending_cards() const {\n-  return predict_size(_pending_cards_seq);\n+size_t G1Analytics::predict_pending_cards(bool for_young_only_phase) const {\n+  if  (for_young_only_phase || !enough_samples_available(_mixed_pending_cards_seq)) {\n+    return predict_size(_young_pending_cards_seq);\n+  } else {\n+    return predict_size(_mixed_pending_cards_seq);\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.cpp","additions":49,"deletions":26,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -48,1 +48,2 @@\n-  TruncatedSeq* _rs_length_diff_seq;\n+  TruncatedSeq* _young_rs_length_diff_seq;\n+  TruncatedSeq* _mixed_rs_length_diff_seq;\n@@ -70,2 +71,4 @@\n-  TruncatedSeq* _pending_cards_seq;\n-  TruncatedSeq* _rs_length_seq;\n+  TruncatedSeq* _young_pending_cards_seq;\n+  TruncatedSeq* _mixed_pending_cards_seq;\n+  TruncatedSeq* _young_rs_length_seq;\n+  TruncatedSeq* _mixed_rs_length_seq;\n@@ -126,4 +129,4 @@\n-  void report_cost_per_card_scan_ms(double cost_per_remset_card_ms, bool for_young_gc);\n-  void report_cost_per_card_merge_ms(double cost_per_card_ms, bool for_young_gc);\n-  void report_card_merge_to_scan_ratio(double cards_per_entry_ratio, bool for_young_gc);\n-  void report_rs_length_diff(double rs_length_diff);\n+  void report_cost_per_card_scan_ms(double cost_per_remset_card_ms, bool for_young_only_phase);\n+  void report_cost_per_card_merge_ms(double cost_per_card_ms, bool for_young_only_phase);\n+  void report_card_merge_to_scan_ratio(double cards_per_entry_ratio, bool for_young_only_phase);\n+  void report_rs_length_diff(double rs_length_diff, bool for_young_only_phase);\n@@ -134,2 +137,2 @@\n-  void report_pending_cards(double pending_cards);\n-  void report_rs_length(double rs_length);\n+  void report_pending_cards(double pending_cards, bool for_young_only_phase);\n+  void report_rs_length(double rs_length, bool for_young_only_phase);\n@@ -145,1 +148,1 @@\n-  size_t predict_scan_card_num(size_t rs_length, bool for_young_gc) const;\n+  size_t predict_scan_card_num(size_t rs_length, bool for_young_only_phase) const;\n@@ -147,2 +150,2 @@\n-  double predict_card_merge_time_ms(size_t card_num, bool for_young_gc) const;\n-  double predict_card_scan_time_ms(size_t card_num, bool for_young_gc) const;\n+  double predict_card_merge_time_ms(size_t card_num, bool for_young_only_phase) const;\n+  double predict_card_scan_time_ms(size_t card_num, bool for_young_only_phase) const;\n@@ -164,2 +167,2 @@\n-  size_t predict_rs_length() const;\n-  size_t predict_pending_cards() const;\n+  size_t predict_rs_length(bool for_young_only_phase) const;\n+  size_t predict_pending_cards(bool for_young_only_phase) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.hpp","additions":17,"deletions":14,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -197,2 +197,3 @@\n-  update_young_length_bounds(_analytics->predict_pending_cards(),\n-                             _analytics->predict_rs_length());\n+  bool for_young_only_phase = collector_state()->in_young_only_phase();\n+  update_young_length_bounds(_analytics->predict_pending_cards(for_young_only_phase),\n+                             _analytics->predict_rs_length(for_young_only_phase));\n@@ -489,1 +490,1 @@\n-    predicted_region_evac_time_ms += predict_region_total_time_ms(r, false \/* for_young_gc *\/);\n+    predicted_region_evac_time_ms += predict_region_total_time_ms(r, false \/* for_young_only_phase *\/);\n@@ -528,2 +529,2 @@\n-    \/\/ We have no measure of the number of cards in the thread log buffers, assume\n-    \/\/ these are very few compared to the sum of the two other sources.\n+    \/\/ We have no measure of the number of cards in the thread buffers, assume\n+    \/\/ these are very few compared to the ones in the DCQS.\n@@ -535,1 +536,2 @@\n-  update_rs_length_prediction(_analytics->predict_rs_length());\n+  bool for_young_only_phase = collector_state()->in_young_only_phase();\n+  update_rs_length_prediction(_analytics->predict_rs_length(for_young_only_phase));\n@@ -756,0 +758,1 @@\n+  bool is_young_only_pause = G1GCPauseTypeHelper::is_young_only_pause(this_pause);\n@@ -809,1 +812,1 @@\n-    assert(G1GCPauseTypeHelper::is_young_only_pause(this_pause), \"must be\");\n+    assert(is_young_only_pause, \"must be\");\n@@ -833,2 +836,1 @@\n-      _analytics->report_cost_per_card_merge_ms(avg_time_merge_cards \/ total_cards_merged,\n-                                                G1GCPauseTypeHelper::is_young_only_pause(this_pause));\n+      _analytics->report_cost_per_card_merge_ms(avg_time_merge_cards \/ total_cards_merged, is_young_only_pause);\n@@ -845,2 +847,1 @@\n-      _analytics->report_cost_per_card_scan_ms(avg_time_dirty_card_scan \/ total_cards_scanned,\n-                                               G1GCPauseTypeHelper::is_young_only_pause(this_pause));\n+      _analytics->report_cost_per_card_scan_ms(avg_time_dirty_card_scan \/ total_cards_scanned, is_young_only_pause);\n@@ -860,2 +861,1 @@\n-    _analytics->report_card_merge_to_scan_ratio(merge_to_scan_ratio,\n-                                                G1GCPauseTypeHelper::is_young_only_pause(this_pause));\n+    _analytics->report_card_merge_to_scan_ratio(merge_to_scan_ratio, is_young_only_pause);\n@@ -865,1 +865,1 @@\n-    _analytics->report_rs_length_diff(rs_length_diff);\n+    _analytics->report_rs_length_diff(rs_length_diff, is_young_only_pause);\n@@ -890,5 +890,2 @@\n-    \/\/ During mixed gc we do not use them for young gen sizing.\n-    if (G1GCPauseTypeHelper::is_young_only_pause(this_pause)) {\n-      _analytics->report_pending_cards((double) _pending_cards_at_gc_start);\n-      _analytics->report_rs_length((double) _rs_length);\n-    }\n+    _analytics->report_pending_cards((double) _pending_cards_at_gc_start, is_young_only_pause);\n+    _analytics->report_rs_length((double) _rs_length, is_young_only_pause);\n@@ -1039,1 +1036,2 @@\n-  size_t rs_length = _analytics->predict_rs_length();\n+  bool for_young_only_phase = collector_state()->in_young_only_phase();\n+  size_t rs_length = _analytics->predict_rs_length(for_young_only_phase);\n@@ -1070,1 +1068,1 @@\n-                                                 bool for_young_gc) const {\n+                                                 bool for_young_only_phase) const {\n@@ -1072,1 +1070,1 @@\n-  size_t scan_card_num = _analytics->predict_scan_card_num(rs_length, for_young_gc);\n+  size_t scan_card_num = _analytics->predict_scan_card_num(rs_length, for_young_only_phase);\n@@ -1088,2 +1086,2 @@\n-double G1Policy::predict_region_total_time_ms(HeapRegion* hr, bool for_young_gc) const {\n-  return predict_region_non_copy_time_ms(hr, for_young_gc) + predict_region_copy_time_ms(hr);\n+double G1Policy::predict_region_total_time_ms(HeapRegion* hr, bool for_young_only_phase) const {\n+  return predict_region_non_copy_time_ms(hr, for_young_only_phase) + predict_region_copy_time_ms(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":22,"deletions":24,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -150,2 +150,2 @@\n-  double predict_region_non_copy_time_ms(HeapRegion* hr, bool for_young_gc) const;\n-  double predict_region_total_time_ms(HeapRegion* hr, bool for_young_gc) const;\n+  double predict_region_non_copy_time_ms(HeapRegion* hr, bool for_young_only_phase) const;\n+  double predict_region_total_time_ms(HeapRegion* hr, bool for_young_only_phase) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-bool G1YoungGCEvacFailureInjector::arm_if_needed_for_gc_type(bool for_young_gc,\n+bool G1YoungGCEvacFailureInjector::arm_if_needed_for_gc_type(bool for_young_only_phase,\n@@ -70,1 +70,1 @@\n-  if (for_young_gc) {\n+  if (for_young_only_phase) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-  bool arm_if_needed_for_gc_type(bool for_young_gc,\n+  bool arm_if_needed_for_gc_type(bool for_young_only_phase,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -150,1 +150,1 @@\n-  double region_elapsed_time_ms = policy->predict_region_total_time_ms(this, false \/* for_young_gc *\/);\n+  double region_elapsed_time_ms = policy->predict_region_total_time_ms(this, false \/* for_young_only_phase *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}