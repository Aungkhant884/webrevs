{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -731,1 +731,15 @@\n-    private synchronized void rotate() {\n+    private void rotate() {\n+        if (tryUseLock()) {\n+            try {\n+                rotate0();\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                rotate0();\n+            }\n+        }\n+    }\n+\n+    private void rotate0() {\n@@ -763,1 +777,0 @@\n-    @SuppressWarnings(\"removal\")\n@@ -765,1 +778,16 @@\n-    public synchronized void publish(LogRecord record) {\n+    public void publish(LogRecord record) {\n+        if (tryUseLock()) {\n+            try {\n+                publish0(record);\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                publish0(record);\n+            }\n+        }\n+\n+    }\n+    @SuppressWarnings(\"removal\")\n+    private void publish0(LogRecord record) {\n@@ -794,1 +822,15 @@\n-    public synchronized void close() throws SecurityException {\n+    public void close() throws SecurityException {\n+        if (tryUseLock()) {\n+            try {\n+                close0();\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                close0();\n+            }\n+        }\n+    }\n+\n+    private void close0() throws SecurityException {\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/FileHandler.java","additions":47,"deletions":5,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import jdk.internal.misc.InternalLock;\n+\n@@ -68,0 +70,1 @@\n+    final InternalLock lock;\n@@ -76,0 +79,11 @@\n+        lock = initLocking();\n+    }\n+\n+    private InternalLock initLocking() {\n+        Class<?> clazz = this.getClass();\n+        ClassLoader loader = clazz.getClassLoader();\n+        if (loader != null && loader != ClassLoader.getPlatformClassLoader()) {\n+            return null;\n+        } else {\n+            return InternalLock.newLockOrNull();\n+        }\n@@ -93,0 +107,1 @@\n+        this();\n@@ -125,0 +140,9 @@\n+    boolean tryUseLock() {\n+        if (lock == null) return false;\n+        lock.lock();\n+        return true;\n+    }\n+    void unlock() {\n+        lock.unlock();\n+    }\n+\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/Handler.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -181,1 +181,15 @@\n-    public synchronized void publish(LogRecord record) {\n+    public void publish(LogRecord record) {\n+        if (tryUseLock()) {\n+            try {\n+                publish0(record);\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                publish0(record);\n+            }\n+        }\n+    }\n+\n+    private void publish0(LogRecord record) {\n@@ -203,1 +217,16 @@\n-    public synchronized void push() {\n+    public void push() {\n+        if (tryUseLock()) {\n+            try {\n+                push0();\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                push0();\n+            }\n+        }\n+\n+    }\n+\n+    private void push0() {\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/MemoryHandler.java","additions":32,"deletions":3,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -159,1 +159,15 @@\n-    public synchronized void close() throws SecurityException {\n+    public void close() throws SecurityException {\n+        if (tryUseLock()) {\n+            try {\n+                close0();\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                close0();\n+            }\n+        }\n+    }\n+\n+    private void close0() throws SecurityException {\n@@ -178,1 +192,15 @@\n-    public synchronized void publish(LogRecord record) {\n+    public void publish(LogRecord record) {\n+        if (tryUseLock()) {\n+            try {\n+                publish0(record);\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                publish0(record);\n+            }\n+        }\n+    }\n+\n+    private void publish0(LogRecord record) {\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/SocketHandler.java","additions":31,"deletions":3,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -125,1 +125,15 @@\n-    protected synchronized void setOutputStream(OutputStream out) throws SecurityException {\n+    protected void setOutputStream(OutputStream out) throws SecurityException {\n+        if (tryUseLock()) {\n+            try {\n+                setOutputStream0(out);\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                setOutputStream0(out);\n+            }\n+        }\n+    }\n+\n+    private void setOutputStream0(OutputStream out) throws SecurityException {\n@@ -160,1 +174,15 @@\n-    public synchronized void setEncoding(String encoding)\n+    public void setEncoding(String encoding)\n+                        throws SecurityException, java.io.UnsupportedEncodingException {\n+        if (tryUseLock()) {\n+            try {\n+                setEncoding0(encoding);\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                setEncoding0(encoding);\n+            }\n+        }\n+    }\n+    private void setEncoding0(String encoding)\n@@ -193,1 +221,14 @@\n-    public synchronized void publish(LogRecord record) {\n+    public void publish(LogRecord record) {\n+        if (tryUseLock()) {\n+            try {\n+                publish0(record);\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                publish0(record);\n+            }\n+        }\n+    }\n+    private void publish0(LogRecord record) {\n@@ -244,1 +285,14 @@\n-    public synchronized void flush() {\n+    public void flush() {\n+        if (tryUseLock()) {\n+            try {\n+                flush0();\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                flush0();\n+            }\n+        }\n+    }\n+    private void flush0() {\n@@ -256,1 +310,1 @@\n-    private synchronized void flushAndClose() throws SecurityException {\n+    private void flushAndClose() throws SecurityException {\n@@ -289,2 +343,12 @@\n-    public synchronized void close() throws SecurityException {\n-        flushAndClose();\n+    public void close() throws SecurityException {\n+        if (tryUseLock()) {\n+            try {\n+                flushAndClose();\n+            } finally {\n+                unlock();\n+            }\n+        } else {\n+            synchronized (this) {\n+                flushAndClose();\n+            }\n+        }\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/StreamHandler.java","additions":72,"deletions":8,"binary":false,"changes":80,"status":"modified"}]}