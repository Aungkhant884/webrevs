{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n- *      8131067 8034802 8210899\n+ *      8131067 8034802 8210899 8273961\n@@ -689,0 +689,12 @@\n+        \/\/ For the path which is not encoded by UTF-8, we need to\n+        \/\/ replace \"+\" by \"%2b\" manually before feeding into the decoder.\n+        \/\/ Otherwise, the URLDecoder would replace \"+\" by \" \", which may\n+        \/\/ raise NoSuchFileException.\n+        \/\/\n+        \/\/ eg. var path = \"file:\/\/\/jdk-18+9\/basic.jar\";\n+        \/\/     URLDecoder.decode(path, \"utf8\") -> file:\/\/\/jdk-18 9\/basic.jar\n+        \/\/\n+        \/\/ Also, we should not use URLEncoder in case of the path has been\n+        \/\/ encoded.\n+        var encoded = path.toUri().toString().replace(\"+\", \"%2b\");\n+\n@@ -692,1 +704,1 @@\n-            new URI(\"jar\", URLDecoder.decode(path.toUri().toString(), \"utf8\"),\n+            new URI(\"jar\", URLDecoder.decode(encoded, \"utf8\"),\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/ZipFSTester.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}