{"files":[{"patch":"@@ -43,2 +43,2 @@\n-    \/\/ To be accessed when holding recorder lock\n-    public static final ActiveRecordingEvent EVENT = new ActiveRecordingEvent();\n+    \/\/ The order of these fields must be the same as the parameters in\n+    \/\/ commit(... , long, String, String, String, long, long, long, long, long)\n@@ -74,0 +74,10 @@\n+\n+    public static boolean enabled() {\n+        return false; \/\/ Generated\n+    }\n+\n+    public static void commit(long timestamp, long duration, long id, String name,\n+                              String destination, long maxAge, long flushInterval,\n+                              long maxSize, long recordingStart, long recordingDuration) {\n+        \/\/ Generated\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/ActiveRecordingEvent.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -40,2 +40,0 @@\n-    public static final ActiveSettingEvent EVENT = new ActiveSettingEvent();\n-\n@@ -57,0 +55,4 @@\n+\n+    public static boolean enabled() {\n+        return false; \/\/ Generated\n+    }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/events\/ActiveSettingEvent.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -292,1 +292,1 @@\n-                if (ActiveSettingEvent.EVENT.isEnabled()) {\n+                if (ActiveSettingEvent.enabled()) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventControl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,2 +69,0 @@\n-    private final EventType activeRecordingEvent;\n-    private final EventType activeSettingEvent;\n@@ -88,2 +86,0 @@\n-        activeRecordingEvent = EventType.getEventType(ActiveRecordingEvent.class);\n-        activeSettingEvent = EventType.getEventType(ActiveSettingEvent.class);\n@@ -93,1 +89,0 @@\n-\n@@ -463,2 +458,2 @@\n-        if (activeRecordingEvent.isEnabled()) {\n-            ActiveRecordingEvent event = ActiveRecordingEvent.EVENT;\n+        long timestamp = JVM.counterTime();\n+        if (ActiveRecordingEvent.enabled()) {\n@@ -467,6 +462,1 @@\n-                    event.id = r.getId();\n-                    event.name = r.getName();\n-                    WriteableUserPath p = r.getDestination();\n-                    event.destination = p == null ? null : p.getRealPathText();\n-                    Duration d = r.getDuration();\n-                    event.recordingDuration = d == null ? Long.MAX_VALUE : d.toMillis();\n+                    WriteableUserPath path = r.getDestination();\n@@ -474,1 +464,1 @@\n-                    event.maxAge = age == null ? Long.MAX_VALUE : age.toMillis();\n+                    Duration flush = r.getFlushInterval();\n@@ -476,6 +466,14 @@\n-                    event.maxSize = size == null ? Long.MAX_VALUE : size;\n-                    Instant start = r.getStartTime();\n-                    event.recordingStart = start == null ? Long.MAX_VALUE : start.toEpochMilli();\n-                    Duration fi = r.getFlushInterval();\n-                    event.flushInterval = fi == null ? Long.MAX_VALUE : fi.toMillis();\n-                    event.commit();\n+                    Instant rStart = r.getStartTime();\n+                    Duration rDuration = r.getDuration();\n+                    ActiveRecordingEvent.commit(\n+                        timestamp,\n+                        0L,\n+                        r.getId(),\n+                        r.getName(),\n+                        path == null ? null : path.getRealPathText(),\n+                        age == null ? Long.MAX_VALUE : age.toMillis(),\n+                        flush == null ? Long.MAX_VALUE : flush.toMillis(),\n+                        size == null ? Long.MAX_VALUE : size,\n+                        rStart == null ? Long.MAX_VALUE : rStart.toEpochMilli(),\n+                        rDuration == null ? Long.MAX_VALUE : rDuration.toMillis()\n+                    );\n@@ -485,2 +483,1 @@\n-        if (activeSettingEvent.isEnabled()) {\n-            long timestamp = JVM.counterTime();\n+        if (ActiveSettingEvent.enabled()) {\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/PlatformRecorder.java","additions":19,"deletions":22,"binary":false,"changes":41,"status":"modified"}]}