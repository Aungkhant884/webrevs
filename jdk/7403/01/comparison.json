{"files":[{"patch":"@@ -36,0 +36,16 @@\n+ * <p>\n+ * The following example shows how a temperature content type can be created and\n+ * used.\n+ * <p>\n+ * First declare a temperature annotation using the {@code ContentType}\n+ * annotation:\n+ *\n+ * {@snippet class=\"Snippets\" region=\"ContentTypeDeclaration\"}\n+ *\n+ * Then declare an event, annotate a field and commit the data:\n+ *\n+ * {@snippet class=\"Snippets\" region=\"ContentTypeEvent\"}\n+ *\n+ * Finally, inspect the annotation when displaying event data:\n+ *\n+ * {@snippet class=\"Snippets\" region=\"ContentTypeConsumption\"}\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/ContentType.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import jdk.jfr.ContentType;\n+import jdk.jfr.Period;\n@@ -36,0 +38,1 @@\n+import jdk.jfr.StackTrace;\n@@ -43,0 +46,1 @@\n+import jdk.jfr.consumer.RecordedEvent;\n@@ -81,0 +85,78 @@\n+    record CPU(String id, float temperature) {\n+    }\n+\n+    private static List<CPU> listCPUs() {\n+        return List.of();\n+    }\n+\n+    \/\/ @start region=\"ContentTypeDeclaration\"\n+    @MetadataDefinition\n+    @ContentType\n+    @Name(\"com.example.Temperature\")\n+    @Label(\"Temperature\")\n+    @Target(ElementType.FIELD)\n+    @Retention(RetentionPolicy.RUNTIME)\n+    public @interface Temperature {\n+        public final static String KELVIN = \"KELVIN\";\n+        public final static String CELCIUS = \"CELCIUS\";\n+        public final static String FAHRENEHIT = \"FAHRENHEIT\";\n+\n+        String value() default CELCIUS;\n+    }\n+    \/\/ @end\n+\n+    \/\/ @start region=\"ContentTypeEvent\"\n+    @Name(\"com.example.CPU\")\n+    @Label(\"CPU\")\n+    @Category({ \"Hardware\", \"CPU\" })\n+    @Period(\"1 s\")\n+    @StackTrace(false)\n+    static public class CPUEvent extends Event {\n+        @Label(\"ID\")\n+        String id;\n+\n+        @Temperature(Temperature.KELVIN)\n+        @Label(\"Temperature\")\n+        float temperature;\n+    }\n+\n+    public static void main(String... args) throws InterruptedException {\n+        FlightRecorder.addPeriodicEvent(CPUEvent.class, () -> {\n+            for (var cpu : listCPUs()) {\n+                CPUEvent event = new CPUEvent();\n+                event.id = cpu.id();\n+                event.temperature = cpu.temperature(); \/\/ in Kelvin\n+                event.commit();\n+            }\n+        });\n+        Thread.sleep(10_000);\n+    }\n+    \/\/ @end\n+\n+    \/\/ @start region=\"ContentTypeConsumption\"\n+    void printTemperaturesInCelcius(Path file) throws IOException {\n+        for (RecordedEvent event : RecordingFile.readAllEvents(file)) {\n+            for (ValueDescriptor field : event.getEventType().getFields()) {\n+                for (AnnotationElement ae : field.getAnnotationElements()) {\n+                    ContentType type = ae.getAnnotation(ContentType.class);\n+                    if (type != null) {\n+                        if (ae.getTypeName().equals(\"com.example.Temperature\")) {\n+                            double value = event.getDouble(field.getName());\n+                            String unit = (String) ae.getValue(\"value\");\n+                            double celcius = switch (unit) {\n+                                case \"CELCIUS\" -> value;\n+                                case \"KELVIN\" -> value - 273.15;\n+                                case \"FAHRENHEIT\" -> (value - 32) \/ 1.8;\n+                                default -> throw new IllegalStateException(\"Unknown temperature unit '\" + unit + \"'\");\n+                            };\n+                            System.out.println(celcius + \" C\");\n+                        } else {\n+                            System.err.println(\"Can't format content type \" + ae.getTypeName() + \" for field \" + field.getName());\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    \/\/ @end\n+\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/snippet-files\/Snippets.java","additions":82,"deletions":0,"binary":false,"changes":82,"status":"modified"}]}