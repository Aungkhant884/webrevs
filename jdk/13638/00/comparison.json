{"files":[{"patch":"@@ -844,2 +844,1 @@\n-void G1CollectedHeap::verify_before_full_collection(bool explicit_gc) {\n-  assert(!GCCause::is_user_requested_gc(gc_cause()) || explicit_gc, \"invariant\");\n+void G1CollectedHeap::verify_before_full_collection() {\n@@ -916,2 +915,1 @@\n-bool G1CollectedHeap::do_full_collection(bool explicit_gc,\n-                                         bool clear_all_soft_refs,\n+bool G1CollectedHeap::do_full_collection(bool clear_all_soft_refs,\n@@ -931,1 +929,1 @@\n-  G1FullCollector collector(this, explicit_gc, do_clear_all_soft_refs, do_maximal_compaction, gc_mark.tracer());\n+  G1FullCollector collector(this, do_clear_all_soft_refs, do_maximal_compaction, gc_mark.tracer());\n@@ -946,2 +944,1 @@\n-  do_full_collection(false,                \/* explicit_gc *\/\n-                     clear_all_soft_refs,\n+  do_full_collection(clear_all_soft_refs,\n@@ -954,2 +951,1 @@\n-  bool success = do_full_collection(false \/* explicit gc *\/,\n-                                    true  \/* clear_all_soft_refs *\/,\n+  bool success = do_full_collection(true  \/* clear_all_soft_refs *\/,\n@@ -1011,2 +1007,1 @@\n-    *gc_succeeded = do_full_collection(false, \/* explicit_gc *\/\n-                                       maximal_compaction \/* clear_all_soft_refs *\/ ,\n+    *gc_succeeded = do_full_collection(maximal_compaction \/* clear_all_soft_refs *\/ ,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -482,2 +482,0 @@\n-  \/\/ - if explicit_gc is true, the GC is for a System.gc() etc,\n-  \/\/   otherwise it's for a failed allocation.\n@@ -490,2 +488,1 @@\n-  bool do_full_collection(bool explicit_gc,\n-                          bool clear_all_soft_refs,\n+  bool do_full_collection(bool clear_all_soft_refs,\n@@ -508,1 +505,1 @@\n-  void verify_before_full_collection(bool explicit_gc);\n+  void verify_before_full_collection();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -114,1 +114,0 @@\n-                                 bool explicit_gc,\n@@ -119,1 +118,1 @@\n-    _scope(heap->monitoring_support(), explicit_gc, clear_soft_refs, do_maximal_compaction, tracer),\n+    _scope(heap->monitoring_support(), clear_soft_refs, do_maximal_compaction, tracer),\n@@ -186,1 +185,1 @@\n-  _heap->verify_before_full_collection(scope()->is_explicit_gc());\n+  _heap->verify_before_full_collection();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -103,1 +103,0 @@\n-                  bool explicit_gc,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-                             bool explicit_gc,\n@@ -45,1 +44,0 @@\n-    _explicit_gc(explicit_gc),\n@@ -60,4 +58,0 @@\n-bool G1FullGCScope::is_explicit_gc() {\n-  return _explicit_gc;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-  bool                    _explicit_gc;\n@@ -65,1 +64,0 @@\n-                bool explicit_gc,\n@@ -70,1 +68,0 @@\n-  bool is_explicit_gc();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,2 +54,1 @@\n-  _gc_succeeded = g1h->do_full_collection(true  \/* explicit_gc *\/,\n-                                          false \/* clear_all_soft_refs *\/,\n+  _gc_succeeded = g1h->do_full_collection(false \/* clear_all_soft_refs *\/,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}