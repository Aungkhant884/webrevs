{"files":[{"patch":"@@ -66,1 +66,1 @@\n-  if (!os::commit_memory(mapAddress, size, !ExecMem)) {\n+  if (!os::commit_memory(mapAddress, size, false)) {\n","filename":"src\/hotspot\/os\/aix\/perfMemory_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2005,1 +2005,1 @@\n-  return os::commit_memory(addr, size, !ExecMem);\n+  return os::commit_memory(addr, size, false);\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-  if (!os::commit_memory(mapAddress, size, !ExecMem)) {\n+  if (!os::commit_memory(mapAddress, size, false)) {\n","filename":"src\/hotspot\/os\/bsd\/perfMemory_bsd.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3122,1 +3122,1 @@\n-    commit_memory(addr, bytes, alignment_hint, !ExecMem);\n+    commit_memory(addr, bytes, alignment_hint, false);\n@@ -3622,1 +3622,1 @@\n-  return os::commit_memory(addr, size, !ExecMem);\n+  return os::commit_memory(addr, size, false);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,1 +65,1 @@\n-  if (!os::commit_memory(mapAddress, size, !ExecMem)) {\n+  if (!os::commit_memory(mapAddress, size, false)) {\n","filename":"src\/hotspot\/os\/linux\/perfMemory_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2541,1 +2541,1 @@\n-                            !ExecMem);\n+                            false);\n@@ -3326,1 +3326,1 @@\n-  return os::commit_memory(addr, size, !ExecMem);\n+  return os::commit_memory(addr, size, false);\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-  if (!os::commit_memory(mapAddress, size, !ExecMem)) {\n+  if (!os::commit_memory(mapAddress, size, false)) {\n","filename":"src\/hotspot\/os\/windows\/perfMemory_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -575,1 +575,1 @@\n-                                new_committed.byte_size(), !ExecMem,\n+                                new_committed.byte_size(), false,\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-         os::commit_memory(base_addr, bytes, alignment(), !ExecMem);\n+         os::commit_memory(base_addr, bytes, alignment(), false);\n@@ -152,1 +152,1 @@\n-        os::commit_memory(commit_base, tmp_bytes, alignment(), !ExecMem)) {\n+        os::commit_memory(commit_base, tmp_bytes, alignment(), false)) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psVirtualspace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-                            !ExecMem, \"card table last card\");\n+                            false, \"card table last card\");\n@@ -247,1 +247,1 @@\n-                                !ExecMem, \"card table expansion\");\n+                                false, \"card table expansion\");\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-  if (os::commit_memory(addr, size, !ExecMem)) {\n+  if (os::commit_memory(addr, size, false)) {\n@@ -83,1 +83,1 @@\n-  os::commit_memory_or_exit(addr, size, !ExecMem, \"Allocator (commit)\");\n+  os::commit_memory_or_exit(addr, size, false, \"Allocator (commit)\");\n","filename":"src\/hotspot\/share\/memory\/allocation.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -772,1 +772,1 @@\n-  os::commit_memory((char *)(uintptr_t)addr, size, !ExecMem);\n+  os::commit_memory((char *)(uintptr_t)addr, size, false);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,4 +79,0 @@\n-\/\/ Executable parameter flag for os::commit_memory() and\n-\/\/ os::commit_memory_or_exit().\n-const bool ExecMem = true;\n-\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}