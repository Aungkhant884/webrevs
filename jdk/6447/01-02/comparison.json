{"files":[{"patch":"@@ -4063,18 +4063,1 @@\n-void C2_MacroAssembler::vector_mask_operation(int opc, Register dst, KRegister mask,\n-                                              int masklen, int masksize, int vec_enc) {\n-  assert(VM_Version::supports_popcnt() &&\n-         VM_Version::supports_lzcnt()  &&\n-         VM_Version::supports_bmi1(), \"\");\n-  if(VM_Version::supports_avx512bw()) {\n-    kmovql(dst, mask);\n-  } else {\n-    assert(masklen <= 16, \"\");\n-    kmovwl(dst, mask);\n-  }\n-\n-  \/\/ Mask generated out of partial vector comparisons\/replicate\/mask manipulation\n-  \/\/ operations needs to be clipped.\n-  if (masksize < 16 && opc != Op_VectorMaskFirstTrue) {\n-    andq(dst, (1 << masklen) - 1);\n-  }\n-\n+void C2_MacroAssembler::vector_mask_operation_helper(int opc, Register dst, Register tmp, int masklen) {\n@@ -4083,1 +4066,1 @@\n-      popcntq(dst, dst);\n+      popcntq(dst, tmp);\n@@ -4086,3 +4069,9 @@\n-      lzcntq(dst, dst);\n-      notl(dst);\n-      addl(dst, 64);\n+      if (VM_Version::supports_lzcnt()) {\n+        lzcntq(tmp, tmp);\n+        movl(dst, 63);\n+        subl(dst, tmp);\n+      } else {\n+        movl(dst, -1);\n+        bsrq(tmp, tmp);\n+        cmov32(Assembler::notZero, dst, tmp);\n+      }\n@@ -4091,5 +4080,10 @@\n-      if (masklen < 32) {\n-        orl(dst, 1 << masklen);\n-        tzcntl(dst, dst);\n-      } else if (masklen == 32) {\n-        tzcntl(dst, dst);\n+      if (VM_Version::supports_bmi1()) {\n+        if (masklen < 32) {\n+          orl(tmp, 1 << masklen);\n+          tzcntl(dst, tmp);\n+        } else if (masklen == 32) {\n+          tzcntl(dst, tmp);\n+        } else {\n+          assert(masklen == 64, \"\");\n+          tzcntq(dst, tmp);\n+        }\n@@ -4097,1 +4091,13 @@\n-        tzcntq(dst, dst);\n+        if (masklen < 32) {\n+          orl(tmp, 1 << masklen);\n+          bsfl(dst, tmp);\n+        } else {\n+          assert(masklen == 32 || masklen == 64, \"\");\n+          movl(dst, masklen);\n+          if (masklen == 32)  {\n+            bsfl(tmp, tmp);\n+          } else {\n+            bsfq(tmp, tmp);\n+          }\n+          cmov32(Assembler::notZero, dst, tmp);\n+        }\n@@ -4101,0 +4107,1 @@\n+      assert(dst == tmp, \"Dst and tmp should be the same for toLong operations\");\n@@ -4106,0 +4113,20 @@\n+void C2_MacroAssembler::vector_mask_operation(int opc, Register dst, KRegister mask, Register tmp,\n+                                              int masklen, int masksize, int vec_enc) {\n+  assert(VM_Version::supports_popcnt(), \"\");\n+\n+  if(VM_Version::supports_avx512bw()) {\n+    kmovql(tmp, mask);\n+  } else {\n+    assert(masklen <= 16, \"\");\n+    kmovwl(tmp, mask);\n+  }\n+\n+  \/\/ Mask generated out of partial vector comparisons\/replicate\/mask manipulation\n+  \/\/ operations needs to be clipped.\n+  if (masksize < 16 && opc != Op_VectorMaskFirstTrue) {\n+    andq(tmp, (1 << masklen) - 1);\n+  }\n+\n+  vector_mask_operation_helper(opc, dst, tmp, masklen);\n+}\n+\n@@ -4153,39 +4180,1 @@\n-  switch(opc) {\n-    case Op_VectorMaskTrueCount:\n-      popcntl(dst, tmp);\n-      break;\n-    case Op_VectorMaskLastTrue:\n-      if (VM_Version::supports_lzcnt()) {\n-        lzcntl(tmp, tmp);\n-        movl(dst, 31);\n-        subl(dst, tmp);\n-      } else {\n-        movl(dst, -1);\n-        bsrl(tmp, tmp);\n-        cmov32(Assembler::notZero, dst, tmp);\n-      }\n-      break;\n-    case Op_VectorMaskFirstTrue:\n-      if (VM_Version::supports_bmi1()) {\n-        if (masklen < 32) {\n-          orl(tmp, 1 << masklen);\n-          tzcntl(dst, tmp);\n-        } else {\n-          tzcntl(dst, tmp);\n-        }\n-      } else {\n-        if (masklen < 32) {\n-          orl(tmp, 1 << masklen);\n-          bsfl(dst, tmp);\n-        } else {\n-          movl(dst, masklen);\n-          bsfl(tmp, tmp);\n-          cmov32(Assembler::notZero, dst, tmp);\n-        }\n-      }\n-      break;\n-    case Op_VectorMaskToLong:\n-      assert(dst == tmp, \"Dst and tmp should be the same for toLong operations\");\n-      break;\n-    default: assert(false, \"Unhandled mask operation\");\n-  }\n+  vector_mask_operation_helper(opc, dst, tmp, masklen);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":56,"deletions":67,"binary":false,"changes":123,"status":"modified"},{"patch":"@@ -227,1 +227,3 @@\n-  void vector_mask_operation(int opc, Register dst, KRegister mask, int masklen, int masksize, int vec_enc);\n+  void vector_mask_operation_helper(int opc, Register dst, Register tmp, int masklen);\n+\n+  void vector_mask_operation(int opc, Register dst, KRegister mask, Register tmp, int masklen, int masksize, int vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8656,1 +8656,1 @@\n-                             mask_len, mask_size, vlen_enc);\n+                             $dst$$Register, mask_len, mask_size, vlen_enc);\n@@ -8693,1 +8693,1 @@\n-instruct vmask_truecount_evex(rRegI dst, kReg mask, rFlagsReg cr) %{\n+instruct vmask_truecount_evex(rRegI dst, kReg mask, rRegL tmp, rFlagsReg cr) %{\n@@ -8696,2 +8696,2 @@\n-  effect(TEMP_DEF dst, KILL cr);\n-  format %{ \"vector_truecount_evex $dst, $mask \\t! vector mask truecount\" %}\n+  effect(TEMP_DEF dst, TEMP tmp, KILL cr);\n+  format %{ \"vector_truecount_evex $dst, $mask \\t! using $tmp as TEMP\" %}\n@@ -8705,1 +8705,1 @@\n-                             mask_len, mask_size, vlen_enc);\n+                             $tmp$$Register, mask_len, mask_size, vlen_enc);\n@@ -8742,1 +8742,1 @@\n-instruct vmask_first_or_last_true_evex(rRegI dst, kReg mask, rFlagsReg cr) %{\n+instruct vmask_first_or_last_true_evex(rRegI dst, kReg mask, rRegL tmp, rFlagsReg cr) %{\n@@ -8746,2 +8746,2 @@\n-  effect(TEMP_DEF dst, KILL cr);\n-  format %{ \"vector_mask_first_or_last_true_evex $dst, $mask \\t! vector mask first or last true\" %}\n+  effect(TEMP_DEF dst, TEMP tmp, KILL cr);\n+  format %{ \"vector_mask_first_or_last_true_evex $dst, $mask \\t! using $tmp as TEMP\" %}\n@@ -8755,1 +8755,1 @@\n-                             mask_len, mask_size, vlen_enc);\n+                             $tmp$$Register, mask_len, mask_size, vlen_enc);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}