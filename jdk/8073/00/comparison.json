{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,6 +28,0 @@\n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n@@ -36,2 +30,0 @@\n-import org.openide.filesystems.FileObject;\n-import org.openide.filesystems.FileUtil;\n@@ -46,1 +38,0 @@\n-    public static final String JAVASCRIPT_HELPER_ID = \"JavaScriptHelper\";\n@@ -49,0 +40,1 @@\n+    private ScriptEngine engine;\n@@ -50,1 +42,1 @@\n-    public CustomFilter(String name, String code) {\n+    public CustomFilter(String name, String code, ScriptEngine engine) {\n@@ -53,0 +45,1 @@\n+        this.engine = engine;\n@@ -99,29 +92,0 @@\n-    private static String getJsHelperText() {\n-        InputStream is = null;\n-        StringBuilder sb = new StringBuilder(\"if (typeof importPackage === 'undefined') { try { load('nashorn:mozilla_compat.js'); } catch (e) {} }\"\n-                + \"importPackage(Packages.com.sun.hotspot.igv.filter);\"\n-                + \"importPackage(Packages.com.sun.hotspot.igv.graph);\"\n-                + \"importPackage(Packages.com.sun.hotspot.igv.data);\"\n-                + \"importPackage(Packages.com.sun.hotspot.igv.util);\"\n-                + \"importPackage(java.awt);\");\n-        try {\n-            FileObject fo = FileUtil.getConfigRoot().getFileObject(JAVASCRIPT_HELPER_ID);\n-            is = fo.getInputStream();\n-            BufferedReader r = new BufferedReader(new InputStreamReader(is));\n-            String s;\n-            while ((s = r.readLine()) != null) {\n-                sb.append(s);\n-                sb.append(\"\\n\");\n-            }\n-\n-        } catch (IOException ex) {\n-            Logger.getLogger(\"global\").log(Level.SEVERE, null, ex);\n-        } finally {\n-            try {\n-                is.close();\n-            } catch (IOException ex) {\n-                Exceptions.printStackTrace(ex);\n-            }\n-        }\n-        return sb.toString();\n-    }\n@@ -132,4 +96,1 @@\n-            ScriptEngineManager sem = new ScriptEngineManager();\n-            ScriptEngine e = sem.getEngineByName(\"ECMAScript\");\n-            e.eval(getJsHelperText());\n-            Bindings b = e.getContext().getBindings(ScriptContext.ENGINE_SCOPE);\n+            Bindings b = engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE);\n@@ -137,2 +98,1 @@\n-            b.put(\"IO\", System.out);\n-            e.eval(code, b);\n+            engine.eval(code, b);\n","filename":"src\/utils\/IdealGraphVisualizer\/Filter\/src\/main\/java\/com\/sun\/hotspot\/igv\/filter\/CustomFilter.java","additions":6,"deletions":46,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,3 @@\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import javax.script.*;\n@@ -70,0 +73,1 @@\n+    public static final String JAVASCRIPT_HELPER_ID = \"JavaScriptHelper\";\n@@ -74,0 +78,1 @@\n+    private ScriptEngine engine;\n@@ -303,0 +308,30 @@\n+    private static String getJsHelperText() {\n+        InputStream is = null;\n+        StringBuilder sb = new StringBuilder(\"if (typeof importPackage === 'undefined') { try { load('nashorn:mozilla_compat.js'); } catch (e) {} }\"\n+                + \"importPackage(Packages.com.sun.hotspot.igv.filter);\"\n+                + \"importPackage(Packages.com.sun.hotspot.igv.graph);\"\n+                + \"importPackage(Packages.com.sun.hotspot.igv.data);\"\n+                + \"importPackage(Packages.com.sun.hotspot.igv.util);\"\n+                + \"importPackage(java.awt);\");\n+        try {\n+            FileObject fo = FileUtil.getConfigRoot().getFileObject(JAVASCRIPT_HELPER_ID);\n+            is = fo.getInputStream();\n+            BufferedReader r = new BufferedReader(new InputStreamReader(is));\n+            String s;\n+            while ((s = r.readLine()) != null) {\n+                sb.append(s);\n+                sb.append(\"\\n\");\n+            }\n+\n+        } catch (IOException ex) {\n+            Logger.getLogger(\"global\").log(Level.SEVERE, null, ex);\n+        } finally {\n+            try {\n+                is.close();\n+            } catch (IOException ex) {\n+                Exceptions.printStackTrace(ex);\n+            }\n+        }\n+        return sb.toString();\n+    }\n+\n@@ -312,0 +347,8 @@\n+        ScriptEngineManager sem = new ScriptEngineManager();\n+        engine = sem.getEngineByName(\"ECMAScript\");\n+        try {\n+            engine.eval(getJsHelperText());\n+        } catch (ScriptException ex) {\n+            Exceptions.printStackTrace(ex);\n+        }\n+        engine.getContext().getBindings(ScriptContext.ENGINE_SCOPE).put(\"IO\", System.out);\n@@ -342,1 +385,1 @@\n-        CustomFilter cf = new CustomFilter(\"My custom filter\", \"\");\n+        CustomFilter cf = new CustomFilter(\"My custom filter\", \"\", engine);\n@@ -440,1 +483,1 @@\n-            final CustomFilter cf = new CustomFilter(displayName, code);\n+            final CustomFilter cf = new CustomFilter(displayName, code, engine);\n","filename":"src\/utils\/IdealGraphVisualizer\/FilterWindow\/src\/main\/java\/com\/sun\/hotspot\/igv\/filterwindow\/FilterTopComponent.java","additions":46,"deletions":3,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-import com.sun.hotspot.igv.filter.CustomFilter;\n+import com.sun.hotspot.igv.filter.ColorFilter;\n@@ -34,0 +34,1 @@\n+import com.sun.hotspot.igv.graph.MatcherSelector;\n@@ -37,1 +38,0 @@\n-import java.util.*;\n@@ -39,0 +39,7 @@\n+import java.util.Arrays;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n@@ -434,0 +441,4 @@\n+    private static ColorFilter.ColorRule stateColorRule(String state, Color color) {\n+        return new ColorFilter.ColorRule(new MatcherSelector(new Properties.RegexpPropertyMatcher(\"state\", state)), color);\n+    }\n+\n@@ -450,5 +461,5 @@\n-                CustomFilter f = new CustomFilter(\n-                        \"difference\", \"colorize('state', 'same', white);\"\n-                        + \"colorize('state', 'changed', orange);\"\n-                        + \"colorize('state', 'new', green);\"\n-                        + \"colorize('state', 'deleted', red);\");\n+                ColorFilter f = new ColorFilter(\"\");\n+                f.addRule(stateColorRule(\"same\",    Color.white));\n+                f.addRule(stateColorRule(\"changed\", Color.orange));\n+                f.addRule(stateColorRule(\"new\",     Color.green));\n+                f.addRule(stateColorRule(\"deleted\", Color.red));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"}]}