{"files":[{"patch":"@@ -334,1 +334,1 @@\n-    os::_exit(0);\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -384,1 +384,1 @@\n-    os::_exit(0);\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -1272,2 +1272,2 @@\n-  vm_exit_during_initialization(err_msg(\"Unable to allocate from '%s' region\", name),\n-                                \"Please reduce the number of shared classes.\");\n+  log_error(cds)(\"Unable to allocate from '%s' region: Please reduce the number of shared classes.\", name);\n+  MetaspaceShared::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -167,2 +167,2 @@\n-      vm_exit_during_initialization(\"Out of memory in the CDS archive\",\n-                                    \"Please reduce the number of shared classes.\");\n+      log_error(cds)(\"Out of memory in the CDS archive: Please reduce the number of shared classes.\");\n+      MetaspaceShared::unrecoverable_writing_error();\n@@ -193,2 +193,3 @@\n-    vm_exit_during_initialization(err_msg(\"Failed to expand shared space to \" SIZE_FORMAT \" bytes\",\n-                                          need_committed_size));\n+    log_error(cds)(\"Failed to expand shared space to \" SIZE_FORMAT \" bytes\",\n+                    need_committed_size);\n+    MetaspaceShared::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -370,1 +370,2 @@\n-      vm_exit_during_initialization(\"-XX:+RecordDynamicDumpInfo\" __THEMSG, nullptr);\n+      log_error(cds)(\"-XX:+RecordDynamicDumpInfo%s\", __THEMSG);\n+      MetaspaceShared::unrecoverable_loading_error();\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -83,23 +83,0 @@\n-\/\/ Complain and stop. All error conditions occurring during the writing of\n-\/\/ an archive file should stop the process.  Unrecoverable errors during\n-\/\/ the reading of the archive file should stop the process.\n-\n-static void fail_exit(const char *msg, va_list ap) {\n-  \/\/ This occurs very early during initialization: tty is not initialized.\n-  jio_fprintf(defaultStream::error_stream(),\n-              \"An error has occurred while processing the\"\n-              \" shared archive file.\\n\");\n-  jio_vfprintf(defaultStream::error_stream(), msg, ap);\n-  jio_fprintf(defaultStream::error_stream(), \"\\n\");\n-  \/\/ Do not change the text of the below message because some tests check for it.\n-  vm_exit_during_initialization(\"Unable to use shared archive.\", nullptr);\n-}\n-\n-\n-void FileMapInfo::fail_stop(const char *msg, ...) {\n-        va_list ap;\n-  va_start(ap, msg);\n-  fail_exit(msg, ap);   \/\/ Never returns.\n-  va_end(ap);           \/\/ for completeness.\n-}\n-\n@@ -370,1 +347,2 @@\n-    FileMapInfo::fail_stop(\"Unable to open file %s.\", cpe->name());\n+    log_error(cds)(\"Unable to open file %s.\", cpe->name());\n+    MetaspaceShared::unrecoverable_loading_error();\n@@ -1100,1 +1078,2 @@\n-        fail_stop(\"%s%s\", mismatch_msg, hint_msg);\n+        log_error(cds)(\"%s%s\", mismatch_msg, hint_msg);\n+        MetaspaceShared::unrecoverable_loading_error();\n@@ -1450,1 +1429,2 @@\n-    fail_stop(\"Unable to seek to position \" SIZE_FORMAT, pos);\n+    log_error(cds)(\"Unable to seek to position %ld\", pos);\n+    MetaspaceShared::unrecoverable_loading_error();\n@@ -1496,2 +1476,3 @@\n-    fail_stop(\"Unable to create shared archive file %s: (%s).\", _full_path,\n-              os::strerror(errno));\n+    log_error(cds)(\"Unable to create shared archive file %s: (%s).\", _full_path,\n+                   os::strerror(errno));\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -1734,5 +1715,6 @@\n-    fail_stop(\"Unable to write archive heap memory regions: \"\n-              \"number of memory regions exceeds maximum due to fragmentation. \"\n-              \"Please increase java heap size \"\n-              \"(current MaxHeapSize is \" SIZE_FORMAT \", InitialHeapSize is \" SIZE_FORMAT \").\",\n-              MaxHeapSize, InitialHeapSize);\n+    log_error(cds)(\"Unable to write archive heap memory regions: \"\n+                   \"number of memory regions exceeds maximum due to fragmentation. \"\n+                   \"Please increase java heap size \"\n+                   \"(current MaxHeapSize is \" SIZE_FORMAT \", InitialHeapSize is \" SIZE_FORMAT \").\",\n+                   MaxHeapSize, InitialHeapSize);\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -1772,1 +1754,1 @@\n-    fail_stop(\"Unable to write to shared archive file.\");\n+    MetaspaceShared::unrecoverable_writing_error(\"Unable to write to shared archive file.\");\n@@ -1813,1 +1795,1 @@\n-      fail_stop(\"Unable to close the shared archive file.\");\n+      MetaspaceShared::unrecoverable_loading_error(\"Unable to close the shared archive file.\");\n@@ -2540,1 +2522,1 @@\n-    fail_stop(\"Mark mismatch while restoring from shared file.\");\n+    MetaspaceShared::unrecoverable_loading_error(\"Mark mismatch while restoring from shared file.\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":18,"deletions":36,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -485,2 +485,0 @@\n-  \/\/ Errors.\n-  static void fail_stop(const char *msg, ...) ATTRIBUTE_PRINTF(1, 2);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -738,1 +738,1 @@\n-  os::_exit(1);\n+  MetaspaceShared::unrecoverable_writing_error();\n@@ -1216,1 +1216,1 @@\n-    os::_exit(1);\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -1226,1 +1226,1 @@\n-    os::_exit(1);\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -1255,1 +1255,1 @@\n-        os::_exit(1);\n+        MetaspaceShared::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -270,2 +270,2 @@\n-    vm_exit_during_initialization(\"Unable to reserve memory for symbols\",\n-                                  err_msg(SIZE_FORMAT \" bytes.\", symbol_rs_size));\n+    log_error(cds)(\"Unable to reserve memory for symbols: %ld bytes.\", symbol_rs_size);\n+    MetaspaceShared::unrecoverable_writing_error();\n@@ -312,1 +312,2 @@\n-      vm_exit_during_initialization(err_msg(\"string length too large: %d\", utf8_length));\n+      log_error(cds)(\"string length too large: %d\", utf8_length);\n+      MetaspaceShared::unrecoverable_loading_error();\n@@ -567,4 +568,1 @@\n-  \/\/ There may be pending VM operations. We have changed some global states\n-  \/\/ (such as vmClasses::_klasses) that may cause these VM operations\n-  \/\/ to fail. For safety, forget these operations and exit the VM directly.\n-  os::_exit(0);\n+  MetaspaceShared::exit_after_static_dump();\n@@ -680,2 +678,3 @@\n-      vm_direct_exit(-1,  err_msg(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n-                                  SIZE_FORMAT \"M\", MaxHeapSize\/M));\n+      log_error(cds)(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n+                     SIZE_FORMAT \"M\", MaxHeapSize\/M);\n+      MetaspaceShared::unrecoverable_writing_error();\n@@ -685,1 +684,1 @@\n-      vm_direct_exit(-1, \"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n+      MetaspaceShared::unrecoverable_writing_error(\"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n@@ -905,0 +904,30 @@\n+\/\/ This function is called when the JVM is unable to load the specified archive(s) due to one\n+\/\/ of the following conditions.\n+\/\/ - There's an error that indicates that the archive(s) files were corrupt or otherwise damaged.\n+\/\/ - When -XX:+RequireSharedSpaces is specified, AND the JVM cannot load the archive(s) due\n+\/\/   to version or classpath mismatch.\n+void MetaspaceShared::unrecoverable_loading_error(const char* message) {\n+  log_error(cds)(\"An error has occurred while processing the shared archive file.\");\n+  if (message != nullptr) {\n+    log_error(cds)(\"%s\", message);\n+  }\n+  vm_exit_during_initialization(\"Unable to use shared archive.\", nullptr);\n+}\n+\n+\/\/ This function is called when the JVM is unable to write the specified CDS archive due to an\n+\/\/ unrecoverable error.\n+void MetaspaceShared::unrecoverable_writing_error(const char* message) {\n+  if (message != nullptr) {\n+    log_error(cds)(\"%s\", message);\n+  }\n+  vm_exit(1);\n+}\n+\n+\/\/ We have finished dumping the static archive. At this point, there may be pending VM\n+\/\/ operations. We have changed some global states (such as vmClasses::_klasses) that\n+\/\/ may cause these VM operations to fail. For safety, forget these operations and\n+\/\/ exit the VM directly.\n+void MetaspaceShared::exit_after_static_dump() {\n+  os::_exit(0);\n+}\n+\n@@ -953,1 +982,1 @@\n-      vm_exit_during_initialization(\"Unable to use shared archive.\");\n+      MetaspaceShared::unrecoverable_loading_error(\"Unable to use shared archive.\");\n@@ -955,1 +984,1 @@\n-      FileMapInfo::fail_stop(\"Unable to map shared spaces\");\n+      MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n@@ -970,1 +999,1 @@\n-      FileMapInfo::fail_stop(\"Unable to map shared spaces\");\n+      MetaspaceShared::unrecoverable_loading_error(\"Unable to map shared spaces\");\n@@ -998,1 +1027,1 @@\n-      FileMapInfo::fail_stop(\"Failed to initialize dynamic archive\");\n+      MetaspaceShared::unrecoverable_loading_error(\"Failed to initialize dynamic archive\");\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":43,"deletions":14,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -119,0 +119,4 @@\n+  static void unrecoverable_loading_error(const char* message = nullptr);\n+  static void unrecoverable_writing_error(const char* message = nullptr);\n+  static void exit_after_static_dump();\n+\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -800,1 +800,1 @@\n-      os::_exit(1);\n+      MetaspaceShared::unrecoverable_writing_error();\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}