{"files":[{"patch":"@@ -334,1 +334,1 @@\n-    os::_exit(0);\n+    MetaspaceShared::unrecoverable_writing_error(\"\");\n@@ -384,1 +384,1 @@\n-    os::_exit(0);\n+    MetaspaceShared::unrecoverable_writing_error(\"\");\n@@ -1272,2 +1272,1 @@\n-  vm_exit_during_initialization(err_msg(\"Unable to allocate from '%s' region\", name),\n-                                \"Please reduce the number of shared classes.\");\n+  MetaspaceShared::unrecoverable_writing_error(err_msg(\"Unable to allocate from '%s' region\\nPlease reduce the number of shared classes.\", name));\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -167,2 +167,1 @@\n-      vm_exit_during_initialization(\"Out of memory in the CDS archive\",\n-                                    \"Please reduce the number of shared classes.\");\n+      MetaspaceShared::unrecoverable_writing_error(\"Out of memory in the CDS archive\\nPlease reduce the number of shared classes.\");\n@@ -193,2 +192,2 @@\n-    vm_exit_during_initialization(err_msg(\"Failed to expand shared space to \" SIZE_FORMAT \" bytes\",\n-                                          need_committed_size));\n+    MetaspaceShared::unrecoverable_writing_error(err_msg(\"Failed to expand shared space to \" SIZE_FORMAT \" bytes\",\n+                                                         need_committed_size));\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -370,1 +370,1 @@\n-      vm_exit_during_initialization(\"-XX:+RecordDynamicDumpInfo\" __THEMSG, nullptr);\n+      MetaspaceShared::unrecoverable_loading_error(err_msg(\"-XX:+RecordDynamicDumpInfo%s\", __THEMSG));\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -83,23 +83,0 @@\n-\/\/ Complain and stop. All error conditions occurring during the writing of\n-\/\/ an archive file should stop the process.  Unrecoverable errors during\n-\/\/ the reading of the archive file should stop the process.\n-\n-static void fail_exit(const char *msg, va_list ap) {\n-  \/\/ This occurs very early during initialization: tty is not initialized.\n-  jio_fprintf(defaultStream::error_stream(),\n-              \"An error has occurred while processing the\"\n-              \" shared archive file.\\n\");\n-  jio_vfprintf(defaultStream::error_stream(), msg, ap);\n-  jio_fprintf(defaultStream::error_stream(), \"\\n\");\n-  \/\/ Do not change the text of the below message because some tests check for it.\n-  vm_exit_during_initialization(\"Unable to use shared archive.\", nullptr);\n-}\n-\n-\n-void FileMapInfo::fail_stop(const char *msg, ...) {\n-        va_list ap;\n-  va_start(ap, msg);\n-  fail_exit(msg, ap);   \/\/ Never returns.\n-  va_end(ap);           \/\/ for completeness.\n-}\n-\n@@ -370,1 +347,1 @@\n-    FileMapInfo::fail_stop(\"Unable to open file %s.\", cpe->name());\n+    MetaspaceShared::unrecoverable_loading_error(err_msg(\"Unable to open file %s.\", cpe->name()));\n@@ -1100,1 +1077,1 @@\n-        fail_stop(\"%s%s\", mismatch_msg, hint_msg);\n+        MetaspaceShared::unrecoverable_loading_error(err_msg(\"%s%s\", mismatch_msg, hint_msg));\n@@ -1450,1 +1427,1 @@\n-    fail_stop(\"Unable to seek to position \" SIZE_FORMAT, pos);\n+    MetaspaceShared::unrecoverable_loading_error(err_msg(\"Unable to seek to position %ld\", pos));\n@@ -1496,2 +1473,2 @@\n-    fail_stop(\"Unable to create shared archive file %s: (%s).\", _full_path,\n-              os::strerror(errno));\n+    MetaspaceShared::unrecoverable_writing_error(err_msg(\"Unable to create shared archive file %s: (%s).\", _full_path,\n+              os::strerror(errno)));\n@@ -1734,1 +1711,1 @@\n-    fail_stop(\"Unable to write archive heap memory regions: \"\n+    MetaspaceShared::unrecoverable_writing_error(err_msg(\"Unable to write archive heap memory regions: \"\n@@ -1738,1 +1715,1 @@\n-              MaxHeapSize, InitialHeapSize);\n+              MaxHeapSize, InitialHeapSize));\n@@ -1772,1 +1749,1 @@\n-    fail_stop(\"Unable to write to shared archive file.\");\n+    MetaspaceShared::unrecoverable_writing_error(\"Unable to write to shared archive file.\");\n@@ -1813,1 +1790,1 @@\n-      fail_stop(\"Unable to close the shared archive file.\");\n+      MetaspaceShared::unrecoverable_loading_error(\"Unable to close the shared archive file.\");\n@@ -2540,1 +2517,1 @@\n-    fail_stop(\"Mark mismatch while restoring from shared file.\");\n+    MetaspaceShared::unrecoverable_loading_error(\"Mark mismatch while restoring from shared file.\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":10,"deletions":33,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -485,2 +485,0 @@\n-  \/\/ Errors.\n-  static void fail_stop(const char *msg, ...) ATTRIBUTE_PRINTF(1, 2);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -738,1 +738,1 @@\n-  os::_exit(1);\n+  MetaspaceShared::unrecoverable_writing_error(\"\");\n@@ -1216,1 +1216,1 @@\n-    os::_exit(1);\n+    MetaspaceShared::unrecoverable_writing_error(\"\");\n@@ -1226,1 +1226,1 @@\n-    os::_exit(1);\n+    MetaspaceShared::unrecoverable_writing_error(\"\");\n@@ -1255,1 +1255,1 @@\n-        os::_exit(1);\n+        MetaspaceShared::unrecoverable_writing_error(\"\");\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -270,2 +270,1 @@\n-    vm_exit_during_initialization(\"Unable to reserve memory for symbols\",\n-                                  err_msg(SIZE_FORMAT \" bytes.\", symbol_rs_size));\n+    MetaspaceShared::unrecoverable_writing_error(err_msg(\"Unable to reserve memory for symbols\\n%ld bytes.\", symbol_rs_size));\n@@ -312,1 +311,1 @@\n-      vm_exit_during_initialization(err_msg(\"string length too large: %d\", utf8_length));\n+      unrecoverable_loading_error(err_msg(\"string length too large: %d\", utf8_length));\n@@ -570,1 +569,1 @@\n-  os::_exit(0);\n+  MetaspaceShared::exit_after_static_dump();\n@@ -680,1 +679,1 @@\n-      vm_direct_exit(-1,  err_msg(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n+      MetaspaceShared::unrecoverable_writing_error(err_msg(\"Out of memory. Please run with a larger Java heap, current MaxHeapSize = \"\n@@ -685,1 +684,2 @@\n-      vm_direct_exit(-1, \"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n+      MetaspaceShared::unrecoverable_writing_error(\"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n+      \/\/vm_exit_during_initialization(-1, \"VM exits due to exception, use -Xlog:cds,exceptions=trace for detail\");\n@@ -905,0 +905,29 @@\n+\/\/ This function is called when the JVM is unable to load the specified archive(s) due to one\n+\/\/ of the following conditions.\n+\/\/ - There's an error that indicates that the archive(s) files were corrupt or otherwise damaged.\n+\/\/ - When -XX:+RequireSharedSpaces is specified, AND the JVM cannot load the archive(s) due\n+\/\/   to version or classpath mismatch.\n+void MetaspaceShared::unrecoverable_loading_error(const char* message) {\n+  jio_fprintf(defaultStream::error_stream(),\n+              \"An error has occurred while processing the\"\n+              \" shared archive file.\\n\");\n+  log_error(cds)(\"%s\", message);\n+  vm_exit_during_initialization(\"Unable to use shared archive.\", nullptr);\n+}\n+\n+\/\/ This function is called when the JVM is unable to write the specified CDS archive due to an\n+\/\/ unrecoverable error.\n+void MetaspaceShared::unrecoverable_writing_error(const char* message) {\n+  tty->print_cr(\"%s\", message);\n+  log_error(cds)(\"%s\", message);\n+  vm_exit(1);\n+}\n+\n+\/\/ We have finished dumping the static archive. At this point, there may be pending VM\n+\/\/ operations. We have changed some global states (such as vmClasses::_klasses) that\n+\/\/ may cause these VM operations to fail. For safety, forget these operations and\n+\/\/ exit the VM directly.\n+void MetaspaceShared::exit_after_static_dump() {\n+  os::_exit(0);\n+}\n+\n@@ -953,1 +982,1 @@\n-      vm_exit_during_initialization(\"Unable to use shared archive.\");\n+      unrecoverable_loading_error(\"Unable to use shared archive.\");\n@@ -955,1 +984,1 @@\n-      FileMapInfo::fail_stop(\"Unable to map shared spaces\");\n+      unrecoverable_loading_error(\"Unable to map shared spaces\");\n@@ -970,1 +999,1 @@\n-      FileMapInfo::fail_stop(\"Unable to map shared spaces\");\n+      unrecoverable_loading_error(\"Unable to map shared spaces\");\n@@ -998,1 +1027,1 @@\n-      FileMapInfo::fail_stop(\"Failed to initialize dynamic archive\");\n+      unrecoverable_loading_error(\"Failed to initialize dynamic archive\");\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -119,0 +119,4 @@\n+  static void unrecoverable_loading_error(const char* message);\n+  static void unrecoverable_writing_error(const char* message);\n+  static void exit_after_static_dump();\n+\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -800,1 +800,1 @@\n-      os::_exit(1);\n+      MetaspaceShared::unrecoverable_writing_error(\"\");\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}