{"files":[{"patch":"@@ -112,0 +112,1 @@\n+#include \"services\/attachListener.hpp\"\n@@ -1251,0 +1252,1 @@\n+        declare_type(AttachListenerThread, JavaThread)                    \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2023, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+package sun.jvm.hotspot.runtime;\n+\n+import java.io.*;\n+\n+import sun.jvm.hotspot.debugger.Address;\n+\n+public class AttachListenerThread extends JavaThread {\n+\n+  public AttachListenerThread (Address addr) {\n+    super(addr);\n+  }\n+\n+  public boolean isJavaThread() { return false; }\n+\n+  public boolean isAttachListenerThread() { return true; }\n+\n+}\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/AttachListenerThread.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -88,0 +88,1 @@\n+  public boolean   isAttachListenerThread()      { return false; }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Thread.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -160,0 +160,1 @@\n+        virtualConstructor.addMapping(\"AttachListenerThread\", AttachListenerThread.class);\n@@ -167,2 +168,2 @@\n-      JvmtiAgentThread, NotificationThread, MonitorDeflationThread and ServiceThread.\n-      The latter four are subclasses of the former. Most operations\n+      JvmtiAgentThread, NotificationThread, AttachListenerThread,\n+      MonitorDeflationThread and ServiceThread. Most operations\n@@ -174,1 +175,1 @@\n-      false for the four subclasses. FIXME: should reconsider the\n+      false for the five subclasses. FIXME: should reconsider the\n@@ -198,1 +199,1 @@\n-            \" (expected type JavaThread, CompilerThread, MonitorDeflationThread, ServiceThread or JvmtiAgentThread)\", e);\n+            \" (expected type JavaThread, CompilerThread, MonitorDeflationThread, AttachListenerThread, ServiceThread or JvmtiAgentThread)\", e);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Threads.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}