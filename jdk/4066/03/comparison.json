{"files":[{"patch":"@@ -330,2 +330,2 @@\n-            \/\/ Replace empty content with HtmlTree.EMPTY to make sure the cell isn't dropped\n-            HtmlTree cell = HtmlTree.DIV(cellStyle, !c.isEmpty() ? c : HtmlTree.EMPTY);\n+            \/\/ Replace invalid content with HtmlTree.EMPTY to make sure the cell isn't dropped\n+            HtmlTree cell = HtmlTree.DIV(cellStyle, c.isValid() ? c : HtmlTree.EMPTY);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Table.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,0 +95,17 @@\n+    \/**\n+     * {@inheritDoc}\n+     *\n+     * @implSpec\n+     * A content builder is valid if any of its content is; thus, it is\n+     * valid to be added to an HtmlTree, which checks the validity of\n+     * each content in this builder.\n+     *\/\n+    @Override\n+    public boolean isValid() {\n+        for (Content content: contents) {\n+            if (content.isValid())\n+                return true;\n+        }\n+        return false;\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/markup\/ContentBuilder.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -110,1 +110,2 @@\n-     * Returns true if the content is valid.\n+     * Returns true if the content is valid. This allows filtering during\n+     * {@link #add(Content) addition}.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/Content.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug      8267219\n+ * @summary  The method summary's description cell should not be removed when\n+ *           it only has inline tags that don't produce any output\n+ * @library  \/tools\/lib ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    javadoc.tester.*\n+ * @run main TestEmptyInheritDoc\n+ *\/\n+\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ToolBox;\n+\n+public class TestEmptyInheritDoc extends JavadocTester {\n+\n+    public static void main(String... args) throws Exception {\n+        TestEmptyInheritDoc tester = new TestEmptyInheritDoc();\n+        tester.runTests();\n+    }\n+\n+    ToolBox tb = new ToolBox();\n+    Path src;\n+\n+    TestEmptyInheritDoc() throws Exception {\n+        src = Files.createDirectories(Paths.get(\"src\"));\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                    package pkg;\n+\n+                    public class First {\n+                        public void act() {}\n+                    }\n+                    \"\"\",\n+                \"\"\"\n+                    package pkg;\n+\n+                    public class Second extends First {\n+                        \/**\n+                         * {@inheritDoc}\n+                         *\/\n+                        public void act() {}\n+                        public void bark() {}\n+                    }\n+                    \"\"\");\n+    }\n+\n+    @Test\n+    public void run() {\n+        javadoc(\"-d\", \"out-empty-inheritdoc\",\n+                \"-sourcepath\", src.toString(),\n+                \"pkg\");\n+        checkExit(Exit.OK);\n+\n+        checkOutput(\"pkg\/Second.html\", true,\n+                \"\"\"\n+                   <div class=\"col-second even-row-color method-summary-table \\\n+                   method-summary-table-tab2 method-summary-table-tab4\"><code>\\\n+                   <a href=\"#act()\" class=\"member-name-link\">act<\/a>()<\/code><\/div>\n+                   <div class=\"col-last even-row-color method-summary-table \\\n+                   method-summary-table-tab2 method-summary-table-tab4\"><\/div>\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testEmptyInheritDoc\/TestEmptyInheritDoc.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"}]}