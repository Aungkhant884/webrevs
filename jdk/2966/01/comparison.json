{"files":[{"patch":"@@ -38,0 +38,1 @@\n+#include \"gc\/g1\/g1RegionMarkStatsCache.inline.hpp\"\n@@ -124,0 +125,6 @@\n+\n+  _live_stats = NEW_C_HEAP_ARRAY(G1RegionMarkStats, _heap->max_regions(), mtGC);\n+  for (uint j = 0; j < heap->max_regions(); j++) {\n+    _live_stats[j].clear();\n+  }\n+\n@@ -125,1 +132,1 @@\n-    _markers[i] = new G1FullGCMarker(this, i, _preserved_marks_set.get(i));\n+    _markers[i] = new G1FullGCMarker(this, i, _preserved_marks_set.get(i), _live_stats);\n@@ -140,0 +147,1 @@\n+  FREE_C_HEAP_ARRAY(G1RegionMarkStats, _live_stats);\n@@ -240,0 +248,7 @@\n+\n+    \/\/ collect live bytes.\n+    size_t sum = 0;\n+    for (uint j = 0; j < _heap->max_regions(); j++) {\n+      sum += _live_stats[j]._live_words;\n+    }\n+    _heap->set_used(sum * HeapWordSize);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -70,0 +70,1 @@\n+  G1RegionMarkStats*        _live_stats;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/g1\/g1RegionMarkStatsCache.inline.hpp\"\n@@ -63,0 +64,2 @@\n+  \/\/ flush live bytes to regions\n+  marker->flush_mark_region_cache();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarkTask.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/g1\/g1RegionMarkStatsCache.inline.hpp\"\n@@ -35,1 +36,2 @@\n-                               PreservedMarks* preserved_stack) :\n+                               PreservedMarks* preserved_stack,\n+                               G1RegionMarkStats* mark_stats) :\n@@ -45,1 +47,3 @@\n-    _cld_closure(mark_closure(), ClassLoaderData::_claim_strong) {\n+    _cld_closure(mark_closure(), ClassLoaderData::_claim_strong),\n+    _mark_region_cache(mark_stats, RegionMarkStatsCacheSize) {\n+  _mark_region_cache.initialize();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -66,0 +66,6 @@\n+\n+  G1RegionMarkStatsCache _mark_region_cache;\n+  \/\/ Number of entries in the per-task stats entry. This seems enough to have a very\n+  \/\/ low cache miss rate.\n+  static const uint RegionMarkStatsCacheSize = 1024;\n+\n@@ -77,1 +83,2 @@\n-  G1FullGCMarker(G1FullCollector* collector, uint worker_id, PreservedMarks* preserved_stack);\n+  G1FullGCMarker(G1FullCollector* collector, uint worker_id,\n+                 PreservedMarks* preserved_stack, G1RegionMarkStats* mark_stats);\n@@ -99,0 +106,4 @@\n+\n+  void flush_mark_region_cache() {\n+    _mark_region_cache.evict_all();\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.hpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -67,0 +67,5 @@\n+\n+  \/\/ Collect live words.\n+  uint hr_index = G1CollectedHeap::heap()->addr_to_region(cast_from_oop<HeapWord*>(obj));\n+  _mark_region_cache.add_live_words(hr_index, (size_t)obj->size());\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1RegionMarkStatsCache.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCOopClosures.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/g1\/g1CollectedHeap.hpp\"\n@@ -47,0 +48,11 @@\n+\/\/ cache size is equal to or bigger than region size to intialize region_index\n+void G1RegionMarkStatsCache::initialize() {\n+  _cache_hits = 0;\n+  _cache_misses = 0;\n+\n+  for (uint i = 0; i < _num_cache_entries; i++) {\n+   _cache[i].clear();\n+   _cache[i]._region_idx = i;\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RegionMarkStatsCache.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -105,0 +105,2 @@\n+  void initialize();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RegionMarkStatsCache.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"gc\/g1\/g1RegionMarkStatsCache.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}