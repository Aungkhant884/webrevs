{"files":[{"patch":"@@ -442,1 +442,3 @@\n-  return frame(sender_sp, unextended_sp, link(), sender_pc());\n+  \/\/ Use the raw version of pc - the interpreter should not have signed it.\n+\n+  return frame(sender_sp, unextended_sp, link(), sender_pc_raw());\n@@ -506,6 +508,1 @@\n-  \/\/ Native code may or may not have signed the return address when saving it\n-  \/\/ to the stack. In addition, we do not know which key was used to sign it.\n-  \/\/ Therefore, all we can do is strip it.\n-  address sender_pc = pauth_strip_pointer(this->sender_pc());\n-\n-  return frame(sender_sp(), link(), sender_pc);\n+  return frame(sender_sp(), link(), sender_pc());\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -157,1 +157,2 @@\n-inline address  frame::sender_pc()           const { return *sender_pc_addr(); }\n+inline address  frame::sender_pc_raw()       const { return *sender_pc_addr(); }\n+inline address  frame::sender_pc()           const { return pauth_strip_pointer(sender_pc_raw());\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}