{"files":[{"patch":"@@ -609,1 +609,1 @@\n-    offset = (gmt.tm_hour - localtm.tm_hour)*3600 + (gmt.tm_min - localtm.tm_min)*60;\n+    offset = (localtm.tm_hour - gmt.tm_hour)*3600 + (localtm.tm_min - gmt.tm_min)*60;\n@@ -615,1 +615,0 @@\n-    \/* Note that the time offset direction is opposite. *\/\n@@ -617,1 +616,1 @@\n-        sign = '-';\n+        sign = '+';\n@@ -620,1 +619,1 @@\n-        sign = '+';\n+        sign = '-';\n","filename":"src\/java.base\/unix\/native\/libjava\/TimeZone_md.c","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,5 +24,8 @@\n-\/*\n- * Specifically called by runCustomTzIDCheckDST.sh to check if Daylight savings is\n- * properly followed with a custom TZ code set through environment variables.\n- * *\/\n-\n+\/* @test\n+ * @bug 8285838\n+ * @library \/test\/lib\n+ * @summary This test will ensure that daylight savings rules are followed \n+ * appropriately when setting a custom timezone ID via the TZ env variable.\n+ * @requires os.family != \"windows\"\n+ * @run main\/othervm CustomTzIDCheckDST\n+ *\/\n@@ -31,0 +34,1 @@\n+import java.util.List;\n@@ -35,1 +39,0 @@\n-import java.text.SimpleDateFormat;\n@@ -37,2 +40,2 @@\n-import java.time.format.DateTimeFormatter;\n-\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n@@ -40,1 +43,17 @@\n-    public static void main(String args[]) {\n+    private static String CUSTOM_TZ = \"MEZ-1MESZ,M3.5.0,M10.5.0\";\n+    public static void main(String args[]) throws Throwable {\n+        if (args.length == 0) {\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(List.of(\"CustomTzIDCheckDST\", \"runTZTest\"));\n+\t    pb.environment().put(\"TZ\", CUSTOM_TZ);\n+            OutputAnalyzer output = ProcessTools.executeProcess(pb);\n+            output.shouldHaveExitValue(0);\n+        } else {\n+            runTZTest();\n+        }\n+    }\n+\n+    \/* TZ code will always be set to \"MEZ-1MESZ,M3.5.0,M10.5.0\".\n+     * This ensures the transition periods for Daylights Savings should be at March's last\n+     * Sunday and October's last Sunday.\n+     *\/\n+    private static void runTZTest() {\n@@ -46,4 +65,0 @@\n-        \/* TZ code will always be set to \"MEZ-1MESZ,M3.5.0,M10.5.0\" via invoking shell script.\n-         * This ensures the transition periods for Daylights Savings should be at March's last\n-         * Sunday and October's last Sunday.\n-         *\/\n","filename":"test\/jdk\/java\/util\/TimeZone\/CustomTzIDCheckDST.java","additions":29,"deletions":14,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -1,56 +0,0 @@\n-#\n-# Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test\n-# @bug 8285838\n-# @summary This test checks to ensure that daylight savings rules are followed \n-# appropriately when setting a custom timezone ID via the TZ env variable.\n-# @requires os.family != \"windows\"\n-# @run shell runCustomTzIDCheckDST.sh\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  echo \"TESTSRC not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-\n-. ${TESTROOT}\/javax\/script\/CommonSetup.sh\n-\n-OS=`uname -s`\n-case \"$OS\" in \n-  Linux | AIX )\n-    TEST=CustomTzIDCheckDST\n-\n-    export TZ=\"MEZ-1MESZ,M3.5.0,M10.5.0\"\n-\n-    ${JAVAC} ${TESTVMOPTS} -d ${TESTCLASSES}\/ ${TESTSRC}\/${TEST}.java\n-    ${JAVA} ${TESTVMOPTS} -classpath ${TESTCLASSES} ${TEST}\n-\n-    ret=$?\n-    if [ $ret -ne 0 ]\n-    then\n-      exit $ret\n-    fi\n-  ;;\n-esac\n-\n","filename":"test\/jdk\/java\/util\/TimeZone\/runCustomTzIDCheckDST.sh","additions":0,"deletions":56,"binary":false,"changes":56,"status":"deleted"}]}