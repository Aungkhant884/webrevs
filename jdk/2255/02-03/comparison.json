{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -42,1 +43,1 @@\n- *  . maximum size. Replacements are made in LRU order.\n+ *  . maximum size. Replacements are made in FIFO order.\n@@ -262,1 +263,1 @@\n-        this.lifetime = lifetime * 1000;\n+        this.lifetime = TimeUnit.SECONDS.toNanos(lifetime);\n@@ -268,1 +269,1 @@\n-        cacheMap = new LinkedHashMap<>(1, LOAD_FACTOR, true);\n+        cacheMap = new LinkedHashMap<>(1, LOAD_FACTOR, false);\n@@ -308,1 +309,0 @@\n-     * @param scanAll true to scan all entries, false to stop on first non-expired entry\n@@ -310,1 +310,1 @@\n-    private void expungeExpiredEntries(boolean scanAll) {\n+    private void expungeExpiredEntries() {\n@@ -316,1 +316,1 @@\n-        long time = System.currentTimeMillis();\n+        long time = System.nanoTime();\n@@ -320,1 +320,1 @@\n-            if (entry.isValid(time) == false) {\n+            if (entry.isValid(time, lifetime) == false) {\n@@ -323,1 +323,1 @@\n-            } else if (!scanAll) {\n+            } else {\n@@ -336,1 +336,1 @@\n-        expungeExpiredEntries(true);\n+        expungeExpiredEntries();\n@@ -350,4 +350,3 @@\n-        expungeExpiredEntries(false);\n-        long expirationTime = (lifetime == 0) ? 0 :\n-                                        System.currentTimeMillis() + lifetime;\n-        CacheEntry<K,V> newEntry = newEntry(key, value, expirationTime, queue);\n+        expungeExpiredEntries();\n+        long insertionTime = System.nanoTime();\n+        CacheEntry<K,V> newEntry = newEntry(key, value, insertionTime, queue);\n@@ -375,2 +374,1 @@\n-        long time = (lifetime == 0) ? 0 : System.currentTimeMillis();\n-        if (entry.isValid(time) == false) {\n+        if (entry.isValid(System.nanoTime(), lifetime) == false) {\n@@ -392,1 +390,1 @@\n-        expungeExpiredEntries(false);\n+        expungeExpiredEntries();\n@@ -414,1 +412,1 @@\n-        lifetime = timeout > 0 ? timeout * 1000L : 0L;\n+        lifetime = timeout > 0 ? TimeUnit.SECONDS.toNanos(timeout) : 0L;\n@@ -423,1 +421,1 @@\n-        expungeExpiredEntries(true);\n+        expungeExpiredEntries();\n@@ -440,1 +438,1 @@\n-            long expirationTime, ReferenceQueue<V> queue) {\n+            long insertionTime, ReferenceQueue<V> queue) {\n@@ -442,1 +440,1 @@\n-            return new SoftCacheEntry<>(key, value, expirationTime, queue);\n+            return new SoftCacheEntry<>(key, value, insertionTime, queue);\n@@ -444,1 +442,1 @@\n-            return new HardCacheEntry<>(key, value, expirationTime);\n+            return new HardCacheEntry<>(key, value, insertionTime);\n@@ -450,1 +448,1 @@\n-        boolean isValid(long currentTime);\n+        boolean isValid(long currentTime, long lifetime);\n@@ -462,1 +460,1 @@\n-        private long expirationTime;\n+        private long insertionTime;\n@@ -464,1 +462,1 @@\n-        HardCacheEntry(K key, V value, long expirationTime) {\n+        HardCacheEntry(K key, V value, long insertionTime) {\n@@ -467,1 +465,1 @@\n-            this.expirationTime = expirationTime;\n+            this.insertionTime = insertionTime;\n@@ -478,2 +476,2 @@\n-        public boolean isValid(long currentTime) {\n-            boolean valid = (currentTime <= expirationTime);\n+        public boolean isValid(long currentTime, long lifetime) {\n+            boolean valid = (lifetime == 0) || (currentTime - insertionTime <= lifetime);\n@@ -489,1 +487,1 @@\n-        private long expirationTime;\n+        private long insertionTime;\n@@ -491,1 +489,1 @@\n-        SoftCacheEntry(K key, V value, long expirationTime,\n+        SoftCacheEntry(K key, V value, long insertionTime,\n@@ -495,1 +493,1 @@\n-            this.expirationTime = expirationTime;\n+            this.insertionTime = insertionTime;\n@@ -506,2 +504,2 @@\n-        public boolean isValid(long currentTime) {\n-            boolean valid = (currentTime <= expirationTime) && (get() != null);\n+        public boolean isValid(long currentTime, long lifetime) {\n+            boolean valid = ((lifetime == 0) || (currentTime - insertionTime <= lifetime)) && (get() != null);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/Cache.java","additions":30,"deletions":32,"binary":false,"changes":62,"status":"modified"}]}