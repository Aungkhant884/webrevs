{"files":[{"patch":"@@ -279,9 +279,10 @@\n-  const bool log = log_is_enabled(Trace, interpreter, oopmap);\n-  LogStream st(Log(interpreter, oopmap)::trace());\n-\n-  if (log) st.print(\"Locals (%d): \", max_locals);\n-  for(int i = 0; i < max_locals; i++) {\n-    bool v1 = is_oop(i)               ? true : false;\n-    bool v2 = vars[i].is_reference()  ? true : false;\n-    assert(v1 == v2, \"locals oop mask generation error\");\n-    if (log) st.print(\"%d\", v1 ? 1 : 0);\n+  if (log_is_enabled(Trace, interpreter, oopmap)) {\n+    LogStream st(Log(interpreter, oopmap)::trace());\n+    st.print(\"Locals (%d): \", max_locals);\n+    for(int i = 0; i < max_locals; i++) {\n+      bool v1 = is_oop(i)               ? true : false;\n+      bool v2 = vars[i].is_reference()  ? true : false;\n+      assert(v1 == v2, \"locals oop mask generation error\");\n+      st.print(\"%d\", v1 ? 1 : 0);\n+    }\n+    st.cr();\n@@ -289,8 +290,6 @@\n-  if (log) st.cr();\n-\n-  if (log) st.print(\"Stack (%d): \", stack_top);\n-  for(int j = 0; j < stack_top; j++) {\n-    bool v1 = is_oop(max_locals + j)  ? true : false;\n-    bool v2 = stack[j].is_reference() ? true : false;\n-    assert(v1 == v2, \"stack oop mask generation error\");\n-    if (log) st.print(\"%d\", v1 ? 1 : 0);\n+  else {\n+    for(int j = 0; j < stack_top; j++) {\n+      bool v1 = is_oop(max_locals + j)  ? true : false;\n+      bool v2 = stack[j].is_reference() ? true : false;\n+      assert(v1 == v2, \"stack oop mask generation error\");\n+    }\n@@ -298,1 +297,0 @@\n-  if (log) st.cr();\n","filename":"src\/hotspot\/share\/interpreter\/oopMapCache.cpp","additions":16,"deletions":18,"binary":false,"changes":34,"status":"modified"}]}