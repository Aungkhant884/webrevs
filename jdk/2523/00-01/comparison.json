{"files":[{"patch":"@@ -1426,10 +1426,0 @@\n-WB_ENTRY(jlong, WB_CodeCacheTotalSize(JNIEnv* env, jobject o, jint blob_type))\n-  CodeHeap* heap = WhiteBox::get_code_heap(blob_type);\n-  return (heap == NULL) ? -1 : (jlong) (heap->high_boundary() - heap->low_boundary());\n-WB_END\n-\n-WB_ENTRY(jlong, WB_GetCodeCacheUnallocatedCapacity(JNIEnv* env, jobject o, jint blob_type))\n-  CodeHeap* heap = WhiteBox::get_code_heap(blob_type);\n-  return (heap == NULL) ? -1 : (jlong)heap->unallocated_capacity();\n-WB_END\n-\n@@ -2490,2 +2480,0 @@\n-  {CC\"getCodeCacheTotalSize\", CC\"(I)J\",               (void*)&WB_CodeCacheTotalSize},\n-  {CC\"getCodeCacheUnallocatedCapacity\",  CC\"(I)J\",    (void*)&WB_GetCodeCacheUnallocatedCapacity},\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -43,1 +42,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -46,5 +44,1 @@\n- * @run main\/othervm\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n- *      vm.mlvm.meth.func.java.throwException.Test\n+ * @run main\/othervm vm.mlvm.meth.func.java.throwException.Test\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/func\/java\/throwException\/Test.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -44,1 +43,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -48,3 +46,0 @@\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n@@ -58,1 +53,0 @@\n- *      -debugee.vmkeys=\" -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI ${test.vm.opts} ${test.java.opts}\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/func\/jdi\/breakpoint\/Test.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -45,1 +44,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -55,3 +53,0 @@\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n@@ -63,1 +58,1 @@\n- *      -debugee.vmkeys=\"-Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -cp .\/bin\/classes${path.separator}${test.class.path} \"\n+ *      -debugee.vmkeys=\"-cp .\/bin\/classes${path.separator}${test.class.path}\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/func\/jdi\/breakpointOtherStratum\/Test.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+import java.lang.management.MemoryUsage;\n+import java.lang.management.MemoryPoolMXBean;\n+import java.lang.management.ManagementFactory;\n@@ -56,3 +59,0 @@\n-import sun.hotspot.WhiteBox;\n-import sun.hotspot.code.BlobType;\n-\n@@ -69,1 +69,3 @@\n-    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n+    private static final MemoryPoolMXBean CODE_CACHE_MX_BEAN = ManagementFactory\n+        .getMemoryPoolMXBeans().stream()\n+        .filter(pool -> pool.getName().equals(\"CodeCache\")).findFirst().get();\n@@ -75,0 +77,7 @@\n+    private static final boolean isCodeCacheEffectivelyFull() {\n+        MemoryUsage usage = CODE_CACHE_MX_BEAN.getUsage();\n+\n+        \/\/ Number 2M is arbitrary, can be changed if need arises\n+        return usage.getMax() - usage.getUsed() < 2000000;\n+    }\n+\n@@ -96,1 +105,1 @@\n-            if (WHITE_BOX.isCodeCacheEffectivelyFull(BlobType.All.id)) {\n+            if (isCodeCacheEffectivelyFull()) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/share\/MHTransformationGen.java","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -44,1 +43,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -50,3 +48,0 @@\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n@@ -68,1 +63,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -70,1 +64,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -76,3 +69,0 @@\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/compiler\/deoptimize\/Test.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -52,1 +51,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -55,5 +53,1 @@\n- * @run main\/othervm\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n- *      vm.mlvm.meth.stress.compiler.i2c_c2i.Test\n+ * @run main\/othervm vm.mlvm.meth.stress.compiler.i2c_c2i.Test\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/compiler\/i2c_c2i\/Test.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -41,1 +41,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -43,1 +42,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -47,3 +45,0 @@\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/compiler\/sequences\/Test.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -45,1 +45,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -47,1 +46,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -50,5 +48,1 @@\n- * @run main\/othervm\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n- *       vm.mlvm.meth.stress.gc.callSequencesDuringGC.Test -stressIterationsFactor 1000\n+ * @run main\/othervm vm.mlvm.meth.stress.gc.callSequencesDuringGC.Test -stressIterationsFactor 1000\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/gc\/callSequencesDuringGC\/Test.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,1 +48,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -50,1 +49,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -53,5 +51,1 @@\n- * @run main\/othervm\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n- *      vm.mlvm.meth.stress.java.sequences.Test\n+ * @run main\/othervm vm.mlvm.meth.stress.java.sequences.Test\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/java\/sequences\/Test.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n- * @build sun.hotspot.WhiteBox\n@@ -45,1 +44,0 @@\n- * @run driver ClassFileInstaller sun.hotspot.WhiteBox\n@@ -49,3 +47,0 @@\n- *      -Xbootclasspath\/a:.\n- *      -XX:+UnlockDiagnosticVMOptions\n- *      -XX:+WhiteBoxAPI\n@@ -60,1 +55,1 @@\n- *      -debugee.vmkeys=\" -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI ${test.vm.opts} ${test.java.opts}\"\n+ *      -debugee.vmkeys=\"${test.vm.opts} ${test.java.opts}\"\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/meth\/stress\/jdi\/breakpointInCompiledCode\/Test.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -373,10 +373,0 @@\n-\n-  public native long getCodeCacheTotalSize(int blobType);\n-  public native long getCodeCacheUnallocatedCapacity(int blobType);\n-  public boolean isCodeCacheEffectivelyFull(int blobType) {\n-      long unallocated = getCodeCacheUnallocatedCapacity(blobType);\n-\n-      \/\/ Number 2M is arbitrary, can be changed if need arises\n-      return unallocated == -1 ? true : unallocated < 2000000;\n-  }\n-\n","filename":"test\/lib\/sun\/hotspot\/WhiteBox.java","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}