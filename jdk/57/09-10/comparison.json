{"files":[{"patch":"@@ -105,1 +105,1 @@\n-                while (demand.tryDecrement() && !cancelled && error == null) {\n+                while (demand.tryDecrement() && !cancelled) {\n@@ -124,5 +124,0 @@\n-                } else if ((t = error) != null && !completed) {\n-                    completed = true;\n-                    pullScheduler.stop();\n-                    subscriber.onError(t);\n-                    return;\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/PullPublisher.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -88,0 +88,1 @@\n+import static org.testng.Assert.assertFalse;\n@@ -375,1 +376,1 @@\n-                while (!cancelled && --n >= 0 && at <= Math.min(errorAt, content.size())) {\n+                while (!cancelled && --n >= 0 && at < Math.min(errorAt+1, content.size())) {\n@@ -378,0 +379,1 @@\n+                        return;\n@@ -383,0 +385,1 @@\n+                            return;\n@@ -439,0 +442,5 @@\n+    static PublishWithError withNoError(List<String> content) {\n+        return new PublishWithError(content, content.size(),\n+                () -> new AssertionError(\"Should not happen!\"));\n+    }\n+\n@@ -573,0 +581,46 @@\n+    static BodyPublisher[] ofStrings(String... strings) {\n+        return Stream.of(strings).map(BodyPublishers::ofString).toArray(BodyPublisher[]::new);\n+    }\n+\n+    @Test\n+    public void testPositiveRequests()  {\n+        \/\/ A composite array of publishers\n+        BodyPublisher[] publishers = Stream.of(\n+                Stream.of(ofStrings(\"Lorem\", \" \", \"ipsum\", \" \")),\n+                Stream.of(BodyPublishers.concat(ofStrings(\"dolor\", \" \", \"sit\", \" \", \"amet\", \", \"))),\n+                Stream.<BodyPublisher>of(withNoError(List.of(\"consectetur\", \" \", \"adipiscing\"))),\n+                Stream.of(ofStrings(\" \")),\n+                Stream.of(BodyPublishers.concat(ofStrings(\"elit\", \".\")))\n+        ).flatMap((s) -> s).toArray(BodyPublisher[]::new);\n+        BodyPublisher publisher = BodyPublishers.concat(publishers);\n+\n+        \/\/ Test that we can request all 13 items in a single request call.\n+        RequestSubscriber requestSubscriber1 = new RequestSubscriber();\n+        publisher.subscribe(requestSubscriber1);\n+        Subscription subscription1 = requestSubscriber1.subscriptionCF.join();\n+        subscription1.request(16);\n+        assertTrue(requestSubscriber1.resultCF().isDone());\n+        List<ByteBuffer> list1 = requestSubscriber1.resultCF().join();\n+        String result1 = stringFromBytes(list1.stream());\n+        assertEquals(result1, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\");\n+        System.out.println(\"Got expected sentence with one request: \\\"%s\\\"\".formatted(result1));\n+\n+        \/\/ Test that we can split our requests call any which way we want\n+        \/\/ (whether in the 'middle of a publisher' or at the boundaries.\n+        RequestSubscriber requestSubscriber2 = new RequestSubscriber();\n+        publisher.subscribe(requestSubscriber2);\n+        Subscription subscription2 = requestSubscriber2.subscriptionCF.join();\n+        subscription2.request(1);\n+        assertFalse(requestSubscriber2.resultCF().isDone());\n+        subscription2.request(10);\n+        assertFalse(requestSubscriber2.resultCF().isDone());\n+        subscription2.request(4);\n+        assertFalse(requestSubscriber2.resultCF().isDone());\n+        subscription2.request(1);\n+        assertTrue(requestSubscriber2.resultCF().isDone());\n+        List<ByteBuffer> list2 = requestSubscriber2.resultCF().join();\n+        String result2 = stringFromBytes(list2.stream());\n+        assertEquals(result2, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\");\n+        System.out.println(\"Got expected sentence with 4 requests: \\\"%s\\\"\".formatted(result1));\n+    }\n+\n@@ -639,1 +693,0 @@\n-\n","filename":"test\/jdk\/java\/net\/httpclient\/AggregateRequestBodyTest.java","additions":55,"deletions":2,"binary":false,"changes":57,"status":"modified"}]}