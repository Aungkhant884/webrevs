{"files":[{"patch":"@@ -304,0 +304,8 @@\n+    @DataProvider(name=\"negativeRequests\")\n+    Object[][] negativeRequests() {\n+        return new Object[][] {\n+                {0L}, {-1L}, {-2L}, {Long.MIN_VALUE + 1L}, {Long.MIN_VALUE}\n+        };\n+    }\n+\n+\n@@ -538,3 +546,5 @@\n-    @Test\n-    public void testNonPositiveRequest() {\n-        BodyPublisher publisher = BodyPublishers.concat(ContentLengthPublisher.of(List.of(1L, 2L, 3L)));\n+    @Test(dataProvider = \"negativeRequests\")\n+    public void testNegativeRequest(long n) {\n+        assert n <= 0 : \"test for negative request called with n > 0 : \" + n;\n+        BodyPublisher[] publishers = ContentLengthPublisher.of(List.of(1L, 2L, 3L));\n+        BodyPublisher publisher = BodyPublishers.concat(publishers);\n@@ -544,5 +554,2 @@\n-        LongStream.of(0L, -1L, -2L, Long.MIN_VALUE).forEach((l) -> {\n-            IllegalArgumentException iae = expectThrows(IAE,\n-                    () -> subscription.request(l));\n-            System.out.printf(\"Got expected IAE for %d: %s%n\", l, iae);\n-        });\n+        IllegalArgumentException iae = expectThrows(IAE, () -> subscription.request(n));\n+        System.out.printf(\"Got expected IAE for %d: %s%n\", n, iae);\n","filename":"test\/jdk\/java\/net\/httpclient\/AggregateRequestBodyTest.java","additions":15,"deletions":8,"binary":false,"changes":23,"status":"modified"}]}