{"files":[{"patch":"@@ -40,2 +40,2 @@\n- * <p> Each Filter in the chain, invokes the next filter within its own\n- * {@link #doFilter(HttpExchange, Chain)} implementation. The final Filter in\n+ * <p> Each {@Filter} in the chain, invokes the next filter within its own\n+ * {@link #doFilter(HttpExchange, Chain)} implementation. The final {@Filter} in\n@@ -61,1 +61,1 @@\n-         * The last element in the chain must invoke the users\n+         * The last element in the chain must invoke the user's\n@@ -109,1 +109,1 @@\n-     *     <li> Set attribute Objects in the exchange, which other filters or\n+     *     <li> Set attribute objects in the exchange, which other filters or\n@@ -120,1 +120,1 @@\n-     *     <li> If option 1. above taken, then when doFilter() returns all subsequent\n+     *     <li> If option 1. above is taken, then when doFilter() returns all subsequent\n@@ -123,1 +123,1 @@\n-     *     <li> If option 2. above taken, then this Filter must use the HttpExchange\n+     *     <li> If option 2. above is taken, then this Filter must use the HttpExchange\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Filter.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -36,4 +36,4 @@\n- * HTTP request and response headers are represented by this class which implements\n- * the interface\n- * {@link java.util.Map}{@literal <}{@link java.lang.String}, {@link java.util.List}\n- * {@literal <}{@link java.lang.String}{@literal >>}.\n+ * HTTP request and response headers are represented by this class which\n+ * implements the interface\n+ * {@link java.util.Map}{@literal <}{@link java.lang.String},\n+ * {@link java.util.List} {@literal <}{@link java.lang.String}{@literal >>}.\n@@ -54,2 +54,2 @@\n- * <p> All the normal {@link java.util.Map} methods are provided, but the following\n- * additional convenience methods are most likely to be used:\n+ * All the normal {@link java.util.Map} methods are provided, but the\n+ * following additional convenience methods are most likely to be used:\n@@ -58,5 +58,6 @@\n- *     <li>{@link #getFirst(String)} returns a single valued header or the first value of\n- *     a multi-valued header.\n- *     <li>{@link #add(String,String)} adds the given header value to the list for the given key\n- *     <li>{@link #set(String,String)} sets the given header field to the single value given\n- *     overwriting any existing values in the value list\n+ *     <li>{@link #getFirst(String)} returns a single valued header or the first\n+ *     value of a multi-valued header.\n+ *     <li>{@link #add(String,String)} adds the given header value to the list\n+ *     for the given key.\n+ *     <li>{@link #set(String,String)} sets the given header field to the single\n+ *     value given overwriting any existing values in the value list.\n@@ -65,5 +66,7 @@\n- * <p> All methods in this class accept {@code null} values for keys and values. However, {@code null}\n- * keys will never will be present in HTTP request headers, and will not be output\/sent in response headers.\n- * Null values can be represented as either a {@code null} entry for the key (i.e. the list is {@code null}) or\n- * where the key has a list, but one (or more) of the list's values is {@code null}. Null values are output\n- * as a header line containing the key but no associated value.\n+ * <p> All methods in this class accept {@code null} values for keys and values.\n+ * However, {@code null} keys will never will be present in HTTP request\n+ * headers, and will not be output\/sent in response headers. Null values can be\n+ * represented as either a {@code null} entry for the key (i.e. the list is\n+ * {@code null}) or where the key has a list, but one (or more) of the list's\n+ * values is {@code null}. Null values are output as a header line containing\n+ * the key but no associated value.\n@@ -133,2 +136,2 @@\n-         * Returns the first value from the {@link List} of {@code String} values\n-         * for the given key (if at least one exists).\n+         * Returns the first value from the {@link List} of {@code String}\n+         * values for the given key (if at least one exists).\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Headers.java","additions":21,"deletions":18,"binary":false,"changes":39,"status":"modified"}]}