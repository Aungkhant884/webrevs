{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,2 +105,2 @@\n-    private static HashMap<String, String> styleAbbreviationsMapping;\n-    private static HashSet<String> styleNameTokes;\n+    private static final HashMap<String, String> styleAbbreviationsMapping;\n+    private static final HashSet<String> styleNameTokes;\n@@ -146,1 +146,1 @@\n-        }\n+    }\n@@ -409,1 +409,1 @@\n-                throw new FontFormatException(e.toString());\n+            throw new FontFormatException(e.toString());\n@@ -417,18 +417,18 @@\n-    if (psName == null) { \/\/no explicit FontName\n-                \/\/ Try to extract font name from the first text line.\n-                \/\/ According to Type1 spec first line consist of\n-                \/\/  \"%!FontType1-SpecVersion: FontName FontVersion\"\n-                \/\/ or\n-                \/\/  \"%!PS-AdobeFont-1.0: FontName version\"\n-                bb.position(0);\n-                if (bb.getShort() != 0x2521) { \/\/if pfb (do not start with \"%!\")\n-                    \/\/skip segment header and \"%!\"\n-                    bb.position(8);\n-                    \/\/NB: assume that first segment is ASCII one\n-                    \/\/  (is it possible to have valid Type1 font with first binary segment?)\n-                }\n-                String formatType = getSimpleToken(bb);\n-                if (!formatType.startsWith(\"FontType1-\") && !formatType.startsWith(\"PS-AdobeFont-\")) {\n-                        throw new FontFormatException(\"Unsupported font format [\" + formatType + \"]\");\n-                }\n-                psName = getSimpleToken(bb);\n+        if (psName == null) { \/\/no explicit FontName\n+            \/\/ Try to extract font name from the first text line.\n+            \/\/ According to Type1 spec first line consist of\n+            \/\/  \"%!FontType1-SpecVersion: FontName FontVersion\"\n+            \/\/ or\n+            \/\/  \"%!PS-AdobeFont-1.0: FontName version\"\n+            bb.position(0);\n+            if (bb.getShort() != 0x2521) { \/\/if pfb (do not start with \"%!\")\n+                \/\/skip segment header and \"%!\"\n+                bb.position(8);\n+                \/\/NB: assume that first segment is ASCII one\n+                \/\/  (is it possible to have valid Type1 font with first binary segment?)\n+            }\n+            String formatType = getSimpleToken(bb);\n+            if (!formatType.startsWith(\"FontType1-\") && !formatType.startsWith(\"PS-AdobeFont-\")) {\n+                throw new FontFormatException(\"Unsupported font format [\" + formatType + \"]\");\n+            }\n+            psName = getSimpleToken(bb);\n@@ -454,2 +454,1 @@\n-        String res, token;\n-        int len, start, end; \/\/length of family name part\n+        int start, end; \/\/length of family name part\n@@ -468,2 +467,2 @@\n-                        if (!isStyleToken(name.substring(start+1, end))) {\n-                                return name.substring(0, end);\n+            if (!isStyleToken(name.substring(start+1, end))) {\n+                return name.substring(0, end);\n@@ -471,1 +470,1 @@\n-                        end = start;\n+            end = start;\n@@ -474,2 +473,2 @@\n-                return name; \/\/should not happen\n-        }\n+        return name; \/\/should not happen\n+    }\n@@ -478,3 +477,1 @@\n-        if (styleAbbreviationsMapping.containsKey(abbr))\n-                        return styleAbbreviationsMapping.get(abbr);\n-        return abbr;\n+        return styleAbbreviationsMapping.getOrDefault(abbr, abbr);\n@@ -553,1 +550,1 @@\n-                }\n+        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/font\/Type1Font.java","additions":31,"deletions":34,"binary":false,"changes":65,"status":"modified"}]}