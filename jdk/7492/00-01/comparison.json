{"files":[{"patch":"@@ -54,3 +54,3 @@\n- * InflaterInputStreams.inflaterInputStreamRead     256  avgt    5  2.571 ± 0.120  us\/op\n- * InflaterInputStreams.inflaterInputStreamRead     512  avgt    5  2.861 ± 0.064  us\/op\n- * InflaterInputStreams.inflaterInputStreamRead    4096  avgt    5  5.110 ± 0.278  us\/op\n+ * InflaterInputStreams.inflaterInputStreamRead     256  avgt    5  2.571   0.120  us\/op\n+ * InflaterInputStreams.inflaterInputStreamRead     512  avgt    5  2.861   0.064  us\/op\n+ * InflaterInputStreams.inflaterInputStreamRead    4096  avgt    5  5.110   0.278  us\/op\n@@ -61,3 +61,3 @@\n- * InflaterInputStreams.inflaterInputStreamRead     256  avgt    5  2.332 ± 0.081  us\/op\n- * InflaterInputStreams.inflaterInputStreamRead     512  avgt    5  2.691 ± 0.293  us\/op\n- * InflaterInputStreams.inflaterInputStreamRead    4096  avgt    5  4.812 ± 1.038  us\/op\n+ * InflaterInputStreams.inflaterInputStreamRead     256  avgt    5  2.332   0.081  us\/op\n+ * InflaterInputStreams.inflaterInputStreamRead     512  avgt    5  2.691   0.293  us\/op\n+ * InflaterInputStreams.inflaterInputStreamRead    4096  avgt    5  4.812   1.038  us\/op\n@@ -77,2 +77,1 @@\n-    private static final int MAX_SIZE = 5000; \/\/ Should be bigger than the biggest size @Param\n-    private static byte[] inflated = new byte[MAX_SIZE];\n+    private static byte[] inflated;\n@@ -92,1 +91,2 @@\n-    }\n+        inflated = new byte[2*size];\n+   }\n@@ -96,1 +96,3 @@\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream(MAX_SIZE);\n+        \/\/ Maximum deflated size (see https:\/\/stackoverflow.com\/a\/23578269\/4146053)\n+        int maxDeflated = size + 5*(size\/16383 + 1);\n+        ByteArrayOutputStream baos = new ByteArrayOutputStream(maxDeflated);\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/zip\/InflaterInputStreams.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"}]}