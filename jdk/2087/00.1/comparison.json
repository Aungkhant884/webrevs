{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,2 +237,1 @@\n-  for (vmIntrinsicsIterator it = vmIntrinsicsRange.begin(); it != vmIntrinsicsRange.end(); ++it) {\n-    vmIntrinsicID id = *it;\n+  for (auto id : EnumRange<vmIntrinsicID>{}) {\n@@ -771,3 +770,3 @@\n-  \/\/ If LCM, GCM, or IGVN are randomized for stress testing, seed\n-  \/\/ random number generation and log the seed for repeatability.\n-  if (StressLCM || StressGCM || StressIGVN) {\n+  \/\/ If any phase is randomized for stress testing, seed random number\n+  \/\/ generation and log the seed for repeatability.\n+  if (StressLCM || StressGCM || StressIGVN || StressCCP) {\n@@ -778,2 +777,0 @@\n-    } else if (FLAG_IS_DEFAULT(StressSeed)) {\n-      tty->print_cr(\"Warning:  set +LogCompilation to log the seed.\");\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"compiler\/compiler_globals.hpp\"\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -287,2 +287,1 @@\n-        counter.incrementAndGet();\n-        return \"JFR Event Stream \" + counter;\n+        return \"JFR Event Stream \" + counter.incrementAndGet();\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/AbstractEventStream.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -102,0 +102,2 @@\n+serviceability\/attach\/RemovingUnixDomainSocketTest.java 8248162 linux-x64\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}