{"files":[{"patch":"@@ -77,1 +77,1 @@\n-                AlgorithmParameterSpec params, SecureRandom random)\n+                AlgorithmParameterSpec ivSpec, SecureRandom random)\n@@ -80,6 +80,3 @@\n-                boolean doEncrypt = ((opmode == Cipher.ENCRYPT_MODE) ||\n-                        (opmode == Cipher.WRAP_MODE));\n-                if (params instanceof PBEParameterSpec pbeParams) {\n-                    params = pbeParams.getParameterSpec();\n-                }\n-                if (params instanceof IvParameterSpec iv) {\n+                boolean doEncrypt = opmode == Cipher.ENCRYPT_MODE ||\n+                        opmode == Cipher.WRAP_MODE;\n+                if (ivSpec instanceof IvParameterSpec iv) {\n@@ -87,1 +84,1 @@\n-                } else if (params == null && doEncrypt) {\n+                } else if (ivSpec == null && doEncrypt) {\n@@ -96,1 +93,1 @@\n-                this.iCount = iCount;\n+                this.iCount = iCount == 0 ? DEFAULT_ITERATIONS : iCount;\n@@ -136,2 +133,2 @@\n-                    initialize(blkSize, Cipher.ENCRYPT_MODE, DEFAULT_ITERATIONS,\n-                            null, null, random);\n+                    initialize(blkSize, Cipher.ENCRYPT_MODE, 0, null, null,\n+                            random);\n@@ -168,1 +165,0 @@\n-            PBEKeySpec pbeSpec;\n@@ -178,0 +174,1 @@\n+                AlgorithmParameterSpec ivSpecInit;\n@@ -183,0 +180,1 @@\n+                    ivSpecInit = pbeParams.getParameterSpec();\n@@ -190,1 +188,1 @@\n-                        iCountInit = DEFAULT_ITERATIONS;\n+                        iCountInit = 0;\n@@ -193,0 +191,1 @@\n+                    ivSpecInit = null;\n@@ -197,1 +196,1 @@\n-                initialize(blkSize, opmode, iCountInit, saltInit, params,\n+                initialize(blkSize, opmode, iCountInit, saltInit, ivSpecInit,\n@@ -203,1 +202,1 @@\n-                pbeSpec = new PBEKeySpec(passwdChars, salt, iCount, keyLength);\n+                return new PBEKeySpec(passwdChars, salt, iCount, keyLength);\n@@ -210,1 +209,0 @@\n-            return pbeSpec;\n@@ -248,1 +246,1 @@\n-            return iCount == 0 ? DEFAULT_ITERATIONS : iCount;\n+            return iCount;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/PBEUtil.java","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+import javax.crypto.spec.PBEParameterSpec;\n@@ -144,0 +145,3 @@\n+            if (params instanceof PBEParameterSpec pbeParams) {\n+                params = pbeParams.getParameterSpec();\n+            }\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11PBECipher.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -50,1 +51,2 @@\n-    private static final byte[] salt = \"abcdefgh\".getBytes();\n+    private static final byte[] salt = \"abcdefgh\".getBytes(\n+            StandardCharsets.UTF_8);\n@@ -212,1 +214,2 @@\n-        return new BigInteger(1, cipher.doFinal(plainText.getBytes()));\n+        return new BigInteger(1, cipher.doFinal(\n+                plainText.getBytes(StandardCharsets.UTF_8)));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Cipher\/PBECipher.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -47,1 +48,2 @@\n-    private static final byte[] salt = \"abcdefgh\".getBytes();\n+    private static final byte[] salt = \"abcdefgh\".getBytes(\n+            StandardCharsets.UTF_8);\n@@ -167,1 +169,2 @@\n-        return new BigInteger(1, mac.doFinal(plainText.getBytes()));\n+        return new BigInteger(1, mac.doFinal(\n+                plainText.getBytes(StandardCharsets.UTF_8)));\n","filename":"test\/jdk\/sun\/security\/pkcs11\/Mac\/PBAMac.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -870,1 +870,1 @@\n-                return new byte[0];\n+                throw new RuntimeException(\"Should not be called\");\n","filename":"test\/jdk\/sun\/security\/pkcs11\/PKCS11Test.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -143,1 +144,2 @@\n-    private static final byte[] salt = \"abcdefgh\".getBytes();\n+    private static final byte[] salt = \"abcdefgh\".getBytes(\n+            StandardCharsets.UTF_8);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/SecretKeyFactory\/TestPBKD.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}