{"files":[{"patch":"@@ -882,2 +882,2 @@\n-        } catch (IOException ignored) {\n-            assert false;\n+        } catch (IOException e) {\n+            throw new AssertionError(e);\n@@ -904,2 +904,2 @@\n-        } catch (IOException ignored) {\n-            assert false;\n+        } catch (IOException e) {\n+            throw new AssertionError(e);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,2 +37,0 @@\n- *\n- * @author Raffaello Giulietti\n@@ -166,2 +164,2 @@\n-                char[] chars = new char[MAX_CHARS];\n-                for (int i = 0; i <= index; ++i) {\n+                char[] chars = new char[index + 1];\n+                for (int i = 0; i < chars.length; ++i) {\n@@ -171,1 +169,1 @@\n-                    return builder.append(chars, 0, index + 1);\n+                    return builder.append(chars);\n@@ -174,1 +172,1 @@\n-                    return buffer.append(chars, 0, index + 1);\n+                    return buffer.append(chars);\n@@ -176,2 +174,2 @@\n-                for (int i = 0; i <= index; ++i) {\n-                    app.append(chars[i]);\n+                for (char c : chars) {\n+                    app.append(c);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/DoubleToDecimal.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -37,2 +37,0 @@\n- *\n- * @author Raffaello Giulietti\n@@ -166,2 +164,2 @@\n-                char[] chars = new char[MAX_CHARS];\n-                for (int i = 0; i <= index; ++i) {\n+                char[] chars = new char[index + 1];\n+                for (int i = 0; i < chars.length; ++i) {\n@@ -171,1 +169,1 @@\n-                    return builder.append(chars, 0, index + 1);\n+                    return builder.append(chars);\n@@ -174,1 +172,1 @@\n-                    return buffer.append(chars, 0, index + 1);\n+                    return buffer.append(chars);\n@@ -176,2 +174,2 @@\n-                for (int i = 0; i <= index; ++i) {\n-                    app.append(chars[i]);\n+                for (char c : chars) {\n+                    app.append(c);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatToDecimal.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -32,2 +32,0 @@\n- *\n- * @author Raffaello Giulietti\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/MathUtils.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- * @author Raffaello Giulietti\n","filename":"test\/jdk\/jdk\/internal\/math\/ToDecimal\/DoubleToDecimalTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @author Raffaello Giulietti\n","filename":"test\/jdk\/jdk\/internal\/math\/ToDecimal\/FloatToDecimalTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n- * @author Raffaello Giulietti\n","filename":"test\/jdk\/jdk\/internal\/math\/ToDecimal\/MathUtilsTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}