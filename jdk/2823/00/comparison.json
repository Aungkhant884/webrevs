{"files":[{"patch":"@@ -612,1 +612,0 @@\n-  Node* addr = make_unsafe_address(base, offset, decorators, (is_mask ? T_BOOLEAN : elem_bt), true);\n@@ -614,0 +613,5 @@\n+  \/\/ Save state and restore on bailout\n+  uint old_sp = sp();\n+  SafePointNode* old_map = clone_map();\n+\n+  Node* addr = make_unsafe_address(base, offset, decorators, (is_mask ? T_BOOLEAN : elem_bt), true);\n@@ -625,0 +629,2 @@\n+    set_map(old_map);\n+    set_sp(old_sp);\n@@ -637,0 +643,2 @@\n+      set_map(old_map);\n+      set_sp(old_sp);\n@@ -647,0 +655,2 @@\n+      set_map(old_map);\n+      set_sp(old_sp);\n@@ -651,0 +661,2 @@\n+        set_map(old_map);\n+        set_sp(old_sp);\n@@ -655,0 +667,2 @@\n+        set_map(old_map);\n+        set_sp(old_sp);\n@@ -669,0 +683,2 @@\n+      set_map(old_map);\n+      set_sp(old_sp);\n@@ -705,0 +721,2 @@\n+  old_map->destruct(&_gvn);\n+\n@@ -782,0 +800,5 @@\n+\n+  \/\/ Save state and restore on bailout\n+  uint old_sp = sp();\n+  SafePointNode* old_map = clone_map();\n+\n@@ -789,0 +812,2 @@\n+    set_map(old_map);\n+    set_sp(old_sp);\n@@ -797,0 +822,2 @@\n+    set_map(old_map);\n+    set_sp(old_sp);\n@@ -804,0 +831,2 @@\n+    set_map(old_map);\n+    set_sp(old_sp);\n@@ -810,0 +839,2 @@\n+      set_map(old_map);\n+      set_sp(old_sp);\n@@ -823,0 +854,2 @@\n+  old_map->destruct(&_gvn);\n+\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":34,"deletions":1,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.*;\n+import java.nio.ByteOrder;\n+\n+\/*\n+ * @test\n+ * @bug 8262998\n+ * @summary Vector API intrinsincs should not modify IR when bailing out\n+ * @modules jdk.incubator.vector\n+ * @run main\/othervm -Xbatch -XX:+IgnoreUnrecognizedVMOptions -XX:UseAVX=1\n+ *                   -XX:-TieredCompilation compiler.vectorapi.TestIntrinsicBailOut\n+ *\/\n+\n+\n+public class TestIntrinsicBailOut {\n+  static final VectorSpecies<Double> SPECIES256 = DoubleVector.SPECIES_256;\n+  static byte[] a = new byte[512];\n+  static byte[] r = new byte[512];\n+\n+  static void test() {\n+    DoubleVector av = DoubleVector.fromByteArray(SPECIES256, a, 0, ByteOrder.BIG_ENDIAN);\n+    av.intoByteArray(r, 0, ByteOrder.BIG_ENDIAN);\n+\n+    DoubleVector bv = DoubleVector.fromByteArray(SPECIES256, a, 32, ByteOrder.LITTLE_ENDIAN);\n+    bv.intoByteArray(r, 32, ByteOrder.LITTLE_ENDIAN);\n+  }\n+\n+  public static void main(String[] args) {\n+    for (int i = 0; i < 15000; i++) {\n+      test();\n+    }\n+    System.out.println(r[0] + r[32]);\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestIntrinsicBailOut.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}