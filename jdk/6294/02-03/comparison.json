{"files":[{"patch":"@@ -24,0 +24,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -28,7 +29,8 @@\n-  \/\/ arith_op sub functions\n-  void arith_op_single_cpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n-  void arith_op_double_cpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n-  void arith_op_single_fpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n-  void arith_op_double_fpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n-  void arith_op_single_cpu_right_constant(LIR_Code code, LIR_Opr left, LIR_Opr right, Register lreg, Register dreg);\n-  void arithmetic_idiv(LIR_Op3* op, bool is_irem);\n+\/\/ arith_op sub functions\n+void arith_op_single_cpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n+void arith_op_double_cpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n+void arith_op_single_fpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n+void arith_op_double_fpu(LIR_Code code, LIR_Opr left, LIR_Opr right, LIR_Opr dest);\n+void arith_op_single_cpu_right_constant(LIR_Code code, LIR_Opr left, LIR_Opr right, Register lreg, Register dreg);\n+void arithmetic_idiv(LIR_Op3* op, bool is_irem);\n+\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_arith_riscv.hpp","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -18,1 +18,2 @@\n- * 2 along with this work; if not, write to the Free Software Foundation, * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n@@ -29,3 +30,3 @@\n-  static int pd_instruction_alignment() {\n-    return 1;\n-  }\n+static int pd_instruction_alignment() {\n+  return 1;\n+}\n@@ -33,3 +34,3 @@\n-  static const char* pd_cpu_opts() {\n-    return \"\";\n-  }\n+static const char* pd_cpu_opts() {\n+  return \"\";\n+}\n","filename":"src\/hotspot\/cpu\/riscv\/disassembler_riscv.hpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/foreign_globals_riscv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/foreign_globals_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zBarrierSetAssembler_riscv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zBarrierSetAssembler_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zGlobals_riscv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zGlobals_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/registerMap_riscv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/universalNativeInvoker_riscv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/cpu\/riscv\/universalUpcallHandle_riscv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -23,0 +23,1 @@\n+ *\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/gc\/z\/zSyscall_linux_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}