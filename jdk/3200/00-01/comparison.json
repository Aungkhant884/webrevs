{"files":[{"patch":"@@ -325,0 +325,11 @@\n+static inline void log_circularity_error(PlaceholderEntry* probe) {\n+  LogTarget(Debug, class, load, placeholders) lt;\n+  if (lt.is_enabled()) {\n+    ResourceMark rm;\n+    LogStream ls(lt);\n+    ls.print(\"ClassCircularityError detected for placeholder \");\n+    probe->print_entry(&ls);\n+    ls.cr();\n+  }\n+}\n+\n@@ -354,4 +365,4 @@\n-\/\/      (if same class loader)\n-\/\/         Finds placeholder for LOAD_SUPER T1 A -> throws ClassCircularityError\n-\/\/      Bootstrap and non-parallelCapable create placeholder LOAD_INSTANCE T1 B\n-\/\/      loadClass A\n+\/\/      if Bootstrap and non-parallelCapable class loader:\n+\/\/         Finds placeholder for LOAD_INSTANCE T1 A -> throws ClassCircularityError\n+\/\/      else\n+\/\/         loadClass A\n@@ -359,1 +370,1 @@\n-\/\/      Finds placeholder LOAD_SUPER T1 A -> throws ClassCircularityError\n+\/\/      Finds placeholder LOAD_SUPER T1 A superclass B -> throws ClassCircularityError\n@@ -421,0 +432,1 @@\n+          log_circularity_error(probe);\n@@ -542,0 +554,1 @@\n+      log_circularity_error(oldprobe);\n@@ -545,1 +558,2 @@\n-      \/\/ Also wait until super class is being loaded\n+      \/\/ Wait until the first thread has finished loading this class. Also wait until all the\n+      \/\/ threads trying to load its super class have removed their placeholders.\n@@ -547,1 +561,1 @@\n-            (oldprobe->instance_load_in_progress() || oldprobe->super_load_in_progress())) {\n+             (oldprobe->instance_load_in_progress() || oldprobe->super_load_in_progress())) {\n@@ -561,0 +575,1 @@\n+        oldprobe = NULL;  \/\/ Other thread could delete this placeholder entry\n@@ -567,0 +582,1 @@\n+\n@@ -733,1 +749,0 @@\n-\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"}]}