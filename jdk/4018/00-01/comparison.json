{"files":[{"patch":"@@ -0,0 +1,73 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 8267116\n+ * @summary  AlphaComposite for VolatileImage graphics\n+ * @author Alexey Ushakov\n+ * @run main AlphaCompositeTest\n+ *\/\n+\n+import javax.imageio.ImageIO;\n+import java.awt.*;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.VolatileImage;\n+import java.io.File;\n+import java.io.IOException;\n+\n+public class AlphaCompositeTest {\n+    public static void main(String[] args) throws IOException {\n+        GraphicsConfiguration gc = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                .getDefaultScreenDevice().getDefaultConfiguration();\n+        VolatileImage vi = gc.createCompatibleVolatileImage(100, 100, Transparency.TRANSLUCENT);\n+        BufferedImage gold = gc.createCompatibleImage(100, 100, Transparency.TRANSLUCENT);\n+        render(gold.createGraphics());\n+\n+        Graphics2D g2 = vi.createGraphics();\n+        do {\n+            render(g2);\n+        } while (vi.contentsLost());\n+\n+        BufferedImage snapshot = vi.getSnapshot();\n+        for (int x = 0; x < gold.getWidth(); ++x) {\n+            for (int y = 0; y < gold.getHeight(); ++y) {\n+                if (gold.getRGB(x, y) != snapshot.getRGB(x, y)) {\n+                    ImageIO.write(gold, \"png\", new File(\"gold.png\"));\n+                    ImageIO.write(snapshot, \"png\", new File(\"bi.png\"));\n+                    throw new RuntimeException(\"Test failed.\");\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void render(Graphics2D g2) {\n+        g2.setColor(Color.BLUE);\n+        g2.fillRect(0, 0, 100, 100);\n+        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC, 0.5f));\n+        g2.setColor(Color.RED);\n+        g2.fillRect(10, 10, 80, 80);\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/image\/VolatileImage\/AlphaCompositeTest.java","additions":73,"deletions":0,"binary":false,"changes":73,"status":"added"}]}