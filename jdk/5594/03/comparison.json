{"files":[{"patch":"@@ -54,0 +54,1 @@\n+\n@@ -55,1 +56,11 @@\n-        return join(file.getPathForWin32Calls(), name);\n+        if (name == null)\n+            throw new NullPointerException(\"'name' is null\");\n+        WindowsFileSystem wfs = file.getFileSystem();\n+        WindowsPath namePath = WindowsPath.parse(wfs, name);\n+        if (namePath.getRoot() != null)\n+            throw new IllegalArgumentException(\"'name' is not relative\");\n+        if (namePath.getNameCount() != 1)\n+            throw new IllegalArgumentException(\"'name' has more than one element\");\n+        String path = join(file.getPathForWin32Calls(), name);\n+        WindowsPath wp = WindowsPath.createFromNormalizedPath(wfs, path);\n+        return wp.getPathForWin32Calls();\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsUserDefinedFileAttributeView.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333\n+ * @bug 4313887 6838333 8273922\n@@ -27,1 +27,1 @@\n- * @library ..\/..\n+ * @library ..\/.. \/test\/lib\n@@ -29,0 +29,2 @@\n+ * @build jdk.test.lib.Platform\n+ * @run main Basic\n@@ -31,0 +33,1 @@\n+import java.io.IOException;\n@@ -33,1 +36,4 @@\n-import java.nio.file.*;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.LinkOption;\n+import java.nio.file.Path;\n@@ -39,1 +45,1 @@\n-import java.io.IOException;\n+import jdk.test.lib.Platform;\n@@ -147,1 +153,8 @@\n-    static void miscTests(final Path file) throws IOException {\n+    private static void setEA(Path longPath, String s) throws IOException {\n+        System.out.println(\"Setting short EA '\" + s +\n+            \"' on path of length \" + longPath.toString().length());\n+        Files.setAttribute(longPath, s,\n+            ByteBuffer.wrap(\"ea-value\".getBytes(StandardCharsets.UTF_8)));\n+    }\n+\n+    static void miscTests(final Path dir) throws IOException {\n@@ -149,1 +162,1 @@\n-            Files.getFileAttributeView(file, UserDefinedFileAttributeView.class);\n+            Files.getFileAttributeView(dir, UserDefinedFileAttributeView.class);\n@@ -181,1 +194,1 @@\n-                Files.getAttribute(file, null);\n+                Files.getAttribute(dir, null);\n@@ -185,1 +198,1 @@\n-                Files.getAttribute(file, \"user:\" + ATTR_NAME, (LinkOption[])null);\n+                Files.getAttribute(dir, \"user:\" + ATTR_NAME, (LinkOption[])null);\n@@ -189,1 +202,1 @@\n-                Files.setAttribute(file, \"user:\" + ATTR_NAME, null);\n+                Files.setAttribute(dir, \"user:\" + ATTR_NAME, null);\n@@ -193,1 +206,1 @@\n-                Files.setAttribute(file, null, new byte[0]);\n+                Files.setAttribute(dir, null, new byte[0]);\n@@ -197,1 +210,1 @@\n-                Files.setAttribute(file, \"user: \" + ATTR_NAME, new byte[0], (LinkOption[])null);\n+                Files.setAttribute(dir, \"user: \" + ATTR_NAME, new byte[0], (LinkOption[])null);\n@@ -201,1 +214,1 @@\n-                Files.readAttributes(file, (String)null);\n+                Files.readAttributes(dir, (String)null);\n@@ -205,1 +218,1 @@\n-                Files.readAttributes(file, \"*\", (LinkOption[])null);\n+                Files.readAttributes(dir, \"*\", (LinkOption[])null);\n@@ -224,0 +237,31 @@\n+\n+        \/\/ Long attribute name\n+        if (Platform.isWindows()) {\n+            Path tmp = Files.createTempDirectory(dir, \"ea-length-bug\");\n+            int len = tmp.toString().length();\n+\n+            \/\/ We need to run up to MAX_PATH for directories,\n+            \/\/ but not quite go over it.\n+            int MAX_PATH = 247;\n+            int requiredLen = MAX_PATH - len - 2;\n+\n+            \/\/ Create a really long directory name.\n+            Path longPath = tmp.resolve(\"x\".repeat(requiredLen));\n+\n+            \/\/ Make sure the directory exists.\n+            Files.createDirectory(longPath);\n+\n+            try {\n+                \/\/ Try to set absolute path as extended attribute; expect IAE\n+                tryCatch(IllegalArgumentException.class, new Task() {\n+                    public void run() throws IOException {\n+                        setEA(longPath, \"user:C:\\\\\");\n+                    }});\n+\n+                \/\/ Try to set an extended attribute on it.\n+                setEA(longPath, \"user:short\");\n+                setEA(longPath, \"user:reallyquitelonglongattrname\");\n+            } finally {\n+                Files.delete(longPath);\n+            }\n+        }\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView\/Basic.java","additions":58,"deletions":14,"binary":false,"changes":72,"status":"modified"}]}