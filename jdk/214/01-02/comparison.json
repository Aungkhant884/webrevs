{"files":[{"patch":"@@ -54,5 +54,3 @@\n-\/\/ This implementation uses a fixed-size queue to keep track of all\n-\/\/ recent pause times. Two major user controls over G1 behavior are\n-\/\/ setting a pause time goal (MaxGCPauseMillis), over a time slice\n-\/\/ (GCPauseIntervalMillis). This defines the Minimum Mutator\n-\/\/ Utilisation (MMU) goal.\n+\/\/ Two major user controls over G1 behavior are setting a pause \n+\/\/ time goal (MaxGCPauseMillis), over a time slice (GCPauseIntervalMillis). \n+\/\/ This defines the Minimum Mutator Utilisation (MMU) goal.\n@@ -69,0 +67,4 @@\n+\/\/ The G1MMUTracker uses a fixed-size queue to keep track of all \n+\/\/ recent pause times. The pause time data is used to avoid \n+\/\/ breaking the MMU.\n+\/\/\n@@ -76,2 +78,2 @@\n-  double                _time_slice;\n-  double                _max_gc_time; \/\/ this is per time slice\n+  double              _time_slice;\n+  double              _max_gc_time; \/\/ this is per time slice\n@@ -88,2 +90,2 @@\n-  \/\/ the oldest entry in the event that +G1UseFixedWindowMMUTracker, thus\n-  \/\/ potentially violating MMU specs for some time thereafter.\n+  \/\/ the oldest entry, thus potentially violating MMU specs for \n+  \/\/ some time thereafter.\n@@ -91,4 +93,4 @@\n-  G1MMUTrackerElem _array[QueueLength];\n-  int                   _head_index;\n-  int                   _tail_index;\n-  int                   _no_entries;\n+  G1MMUTrackerElem    _array[QueueLength];\n+  int                 _head_index;\n+  int                 _tail_index;\n+  int                 _no_entries;\n@@ -114,1 +116,1 @@\n-  inline double when_max_gc_sec(double current_time) {\n+  double when_max_gc_sec(double current_time) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MMUTracker.hpp","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"}]}