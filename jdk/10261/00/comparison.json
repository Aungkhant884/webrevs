{"files":[{"patch":"@@ -103,1 +103,2 @@\n-                                                 Register tmp,\n+                                                 Register tmp1,\n+                                                 Register tmp2,\n@@ -115,2 +116,2 @@\n-  assert_different_registers(obj, pre_val, tmp, t0);\n-  assert(pre_val != noreg &&  tmp != noreg, \"expecting a register\");\n+  assert_different_registers(obj, pre_val, tmp1, tmp2);\n+  assert(pre_val != noreg && tmp1 != noreg && tmp2 != noreg, \"expecting a register\");\n@@ -124,1 +125,1 @@\n-    __ lwu(tmp, in_progress);\n+    __ lwu(tmp1, in_progress);\n@@ -127,1 +128,1 @@\n-    __ lbu(tmp, in_progress);\n+    __ lbu(tmp1, in_progress);\n@@ -129,1 +130,1 @@\n-  __ beqz(tmp, done);\n+  __ beqz(tmp1, done);\n@@ -143,3 +144,3 @@\n-  __ ld(tmp, index);                       \/\/ tmp := *index_adr\n-  __ beqz(tmp, runtime);                   \/\/ tmp == 0?\n-                                           \/\/ If yes, goto runtime\n+  __ ld(tmp1, index);                  \/\/ tmp := *index_adr\n+  __ beqz(tmp1, runtime);              \/\/ tmp == 0?\n+                                       \/\/ If yes, goto runtime\n@@ -147,4 +148,4 @@\n-  __ sub(tmp, tmp, wordSize);              \/\/ tmp := tmp - wordSize\n-  __ sd(tmp, index);                       \/\/ *index_adr := tmp\n-  __ ld(t0, buffer);\n-  __ add(tmp, tmp, t0);                    \/\/ tmp := tmp + *buffer_adr\n+  __ sub(tmp1, tmp1, wordSize);        \/\/ tmp := tmp - wordSize\n+  __ sd(tmp1, index);                  \/\/ *index_adr := tmp\n+  __ ld(tmp2, buffer);\n+  __ add(tmp1, tmp1, tmp2);            \/\/ tmp := tmp + *buffer_adr\n@@ -153,1 +154,1 @@\n-  __ sd(pre_val, Address(tmp, 0));\n+  __ sd(pre_val, Address(tmp1, 0));\n@@ -177,1 +178,1 @@\n-                                                  Register tmp,\n+                                                  Register tmp1,\n@@ -180,3 +181,2 @@\n-  assert_different_registers(store_addr, new_val, thread, tmp, tmp2,\n-                             t0);\n-  assert(store_addr != noreg && new_val != noreg && tmp != noreg &&\n+  assert_different_registers(store_addr, new_val, thread, tmp1, tmp2, t0);\n+  assert(store_addr != noreg && new_val != noreg && tmp1 != noreg &&\n@@ -197,3 +197,3 @@\n-  __ xorr(tmp, store_addr, new_val);\n-  __ srli(tmp, tmp, HeapRegion::LogOfHRGrainBytes);\n-  __ beqz(tmp, done);\n+  __ xorr(tmp1, store_addr, new_val);\n+  __ srli(tmp1, tmp1, HeapRegion::LogOfHRGrainBytes);\n+  __ beqz(tmp1, done);\n@@ -208,1 +208,1 @@\n-  const Register card_addr = tmp;\n+  const Register card_addr = tmp1;\n@@ -252,1 +252,1 @@\n-                                    Register dst, Address src, Register tmp1, Register tmp_thread) {\n+                                    Register dst, Address src, Register tmp1, Register tmp2) {\n@@ -257,1 +257,1 @@\n-  ModRefBarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp_thread);\n+  ModRefBarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp2);\n@@ -267,1 +267,2 @@\n-                         tmp1 \/* tmp *\/,\n+                         tmp1 \/* tmp1 *\/,\n+                         tmp2 \/* tmp2 *\/,\n@@ -289,1 +290,2 @@\n-                       tmp1  \/* tmp *\/,\n+                       tmp1 \/* tmp1 *\/,\n+                       t1 \/* tmp2 *\/,\n@@ -307,1 +309,1 @@\n-                          tmp1 \/* tmp *\/,\n+                          tmp1 \/* tmp1 *\/,\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.cpp","additions":29,"deletions":27,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -51,1 +51,2 @@\n-                            Register tmp,\n+                            Register tmp1,\n+                            Register tmp2,\n@@ -59,1 +60,1 @@\n-                             Register tmp,\n+                             Register tmp1,\n@@ -75,1 +76,1 @@\n-               Register dst, Address src, Register tmp1, Register tmp_thread);\n+               Register dst, Address src, Register tmp1, Register tmp2);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/g1\/g1BarrierSetAssembler_riscv.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-                                  Register dst, Address src, Register tmp1, Register tmp_thread) {\n+                                  Register dst, Address src, Register tmp1, Register tmp2) {\n@@ -293,1 +293,1 @@\n-  __ push_reg(RegSet::of(x28, x29), sp);\n+  __ push_reg(RegSet::of(x28), sp);\n@@ -297,2 +297,1 @@\n-  \/\/ Uses x28 & x29, so we must pass new temporaries.\n-  __ resolve_weak_handle(x28, x29);\n+  __ resolve_weak_handle(x28, t0, t1);\n@@ -301,1 +300,1 @@\n-  __ pop_reg(RegSet::of(x28, x29), sp);\n+  __ pop_reg(RegSet::of(x28), sp);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-                       Register dst, Address src, Register tmp1, Register tmp_thread);\n+                       Register dst, Address src, Register tmp1, Register tmp2);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-    satb_write_barrier_pre(masm, obj, pre_val, thread, tmp, tosca_live, expand_call);\n+    satb_write_barrier_pre(masm, obj, pre_val, thread, tmp, t0, tosca_live, expand_call);\n@@ -100,1 +100,2 @@\n-                                                           Register tmp,\n+                                                           Register tmp1,\n+                                                           Register tmp2,\n@@ -111,2 +112,2 @@\n-  assert_different_registers(obj, pre_val, tmp, t0);\n-  assert(pre_val != noreg &&  tmp != noreg, \"expecting a register\");\n+  assert_different_registers(obj, pre_val, tmp1, tmp2);\n+  assert(pre_val != noreg && tmp1 != noreg && tmp2 != noreg, \"expecting a register\");\n@@ -120,1 +121,1 @@\n-    __ lwu(tmp, in_progress);\n+    __ lwu(tmp1, in_progress);\n@@ -123,1 +124,1 @@\n-    __ lbu(tmp, in_progress);\n+    __ lbu(tmp1, in_progress);\n@@ -125,1 +126,1 @@\n-  __ beqz(tmp, done);\n+  __ beqz(tmp1, done);\n@@ -138,2 +139,2 @@\n-  __ ld(tmp, index);                        \/\/ tmp := *index_adr\n-  __ beqz(tmp, runtime);                    \/\/ tmp == 0? If yes, goto runtime\n+  __ ld(tmp1, index);                  \/\/ tmp := *index_adr\n+  __ beqz(tmp1, runtime);              \/\/ tmp == 0? If yes, goto runtime\n@@ -141,4 +142,4 @@\n-  __ sub(tmp, tmp, wordSize);               \/\/ tmp := tmp - wordSize\n-  __ sd(tmp, index);                        \/\/ *index_adr := tmp\n-  __ ld(t0, buffer);\n-  __ add(tmp, tmp, t0);                     \/\/ tmp := tmp + *buffer_adr\n+  __ sub(tmp1, tmp1, wordSize);        \/\/ tmp := tmp - wordSize\n+  __ sd(tmp1, index);                  \/\/ *index_adr := tmp\n+  __ ld(tmp2, buffer);\n+  __ add(tmp1, tmp1, tmp2);            \/\/ tmp := tmp + *buffer_adr\n@@ -147,1 +148,1 @@\n-  __ sd(pre_val, Address(tmp, 0));\n+  __ sd(pre_val, Address(tmp1, 0));\n@@ -317,1 +318,1 @@\n-    satb_write_barrier_pre(masm, noreg, dst, xthread, tmp, true, false);\n+    satb_write_barrier_pre(masm, noreg, dst, xthread, tmp, t0, true, false);\n@@ -344,1 +345,1 @@\n-                                            Register tmp_thread) {\n+                                            Register tmp2) {\n@@ -347,1 +348,1 @@\n-    BarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp_thread);\n+    BarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp2);\n@@ -364,1 +365,1 @@\n-    BarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp_thread);\n+    BarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp2);\n@@ -377,1 +378,1 @@\n-    BarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp_thread);\n+    BarrierSetAssembler::load_at(masm, decorators, type, dst, src, tmp1, tmp2);\n@@ -388,1 +389,2 @@\n-                           tmp1 \/* tmp *\/,\n+                           tmp1 \/* tmp1 *\/,\n+                           tmp2 \/* tmp2 *\/,\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shenandoah\/shenandoahBarrierSetAssembler_riscv.cpp","additions":22,"deletions":20,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -47,1 +47,2 @@\n-                              Register tmp,\n+                              Register tmp1,\n+                              Register tmp2,\n@@ -79,1 +80,1 @@\n-                       Register dst, Address src, Register tmp1, Register tmp_thread);\n+                       Register dst, Address src, Register tmp1, Register tmp2);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shenandoah\/shenandoahBarrierSetAssembler_riscv.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-  resolve_oop_handle(result, tmp);\n+  resolve_oop_handle(result, tmp, t1);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -514,1 +514,1 @@\n-void MacroAssembler::resolve_jobject(Register value, Register thread, Register tmp) {\n+void MacroAssembler::resolve_jobject(Register value, Register tmp1, Register tmp2) {\n@@ -524,1 +524,1 @@\n-                 Address(value, -JNIHandles::weak_tag_value), tmp, thread);\n+                 Address(value, -JNIHandles::weak_tag_value), tmp1, tmp2);\n@@ -530,1 +530,1 @@\n-  access_load_at(T_OBJECT, IN_NATIVE, value, Address(value, 0), tmp, thread);\n+  access_load_at(T_OBJECT, IN_NATIVE, value, Address(value, 0), tmp1, tmp2);\n@@ -1711,1 +1711,1 @@\n-void MacroAssembler::load_mirror(Register dst, Register method, Register tmp) {\n+void MacroAssembler::load_mirror(Register dst, Register method, Register tmp1, Register tmp2) {\n@@ -1717,1 +1717,1 @@\n-  resolve_oop_handle(dst, tmp);\n+  resolve_oop_handle(dst, tmp1, tmp2);\n@@ -1720,1 +1720,1 @@\n-void MacroAssembler::resolve_oop_handle(Register result, Register tmp) {\n+void MacroAssembler::resolve_oop_handle(Register result, Register tmp1, Register tmp2) {\n@@ -1722,2 +1722,2 @@\n-  assert_different_registers(result, tmp);\n-  access_load_at(T_OBJECT, IN_NATIVE, result, Address(result, 0), tmp, noreg);\n+  assert_different_registers(result, tmp1, tmp2);\n+  access_load_at(T_OBJECT, IN_NATIVE, result, Address(result, 0), tmp1, tmp2);\n@@ -1727,2 +1727,2 @@\n-void MacroAssembler::resolve_weak_handle(Register result, Register tmp) {\n-  assert_different_registers(result, tmp);\n+void MacroAssembler::resolve_weak_handle(Register result, Register tmp1, Register tmp2) {\n+  assert_different_registers(result, tmp1, tmp2);\n@@ -1738,1 +1738,1 @@\n-                 result, Address(result), tmp, noreg \/* tmp_thread *\/);\n+                 result, Address(result), tmp1, tmp2);\n@@ -1744,1 +1744,1 @@\n-                                    Register tmp1, Register thread_tmp) {\n+                                    Register tmp1, Register tmp2) {\n@@ -1749,1 +1749,1 @@\n-    bs->BarrierSetAssembler::load_at(this, decorators, type, dst, src, tmp1, thread_tmp);\n+    bs->BarrierSetAssembler::load_at(this, decorators, type, dst, src, tmp1, tmp2);\n@@ -1751,1 +1751,1 @@\n-    bs->load_at(this, decorators, type, dst, src, tmp1, thread_tmp);\n+    bs->load_at(this, decorators, type, dst, src, tmp1, tmp2);\n@@ -1949,2 +1949,2 @@\n-                                   Register thread_tmp, DecoratorSet decorators) {\n-  access_load_at(T_OBJECT, IN_HEAP | decorators, dst, src, tmp1, thread_tmp);\n+                                   Register tmp2, DecoratorSet decorators) {\n+  access_load_at(T_OBJECT, IN_HEAP | decorators, dst, src, tmp1, tmp2);\n@@ -1954,2 +1954,2 @@\n-                                            Register thread_tmp, DecoratorSet decorators) {\n-  access_load_at(T_OBJECT, IN_HEAP | IS_NOT_NULL, dst, src, tmp1, thread_tmp);\n+                                            Register tmp2, DecoratorSet decorators) {\n+  access_load_at(T_OBJECT, IN_HEAP | IS_NOT_NULL, dst, src, tmp1, tmp2);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -174,3 +174,3 @@\n-  void resolve_weak_handle(Register result, Register tmp);\n-  void resolve_oop_handle(Register result, Register tmp = x15);\n-  void resolve_jobject(Register value, Register thread, Register tmp);\n+  void resolve_weak_handle(Register result, Register tmp1, Register tmp2);\n+  void resolve_oop_handle(Register result, Register tmp1, Register tmp2);\n+  void resolve_jobject(Register value, Register tmp1, Register tmp2);\n@@ -184,1 +184,1 @@\n-  void load_mirror(Register dst, Register method, Register tmp = x15);\n+  void load_mirror(Register dst, Register method, Register tmp1, Register tmp2);\n@@ -186,1 +186,1 @@\n-                      Address src, Register tmp1, Register thread_tmp);\n+                      Address src, Register tmp1, Register tmp2);\n@@ -204,1 +204,1 @@\n-                     Register thread_tmp = noreg, DecoratorSet decorators = 0);\n+                     Register tmp2 = noreg, DecoratorSet decorators = 0);\n@@ -206,1 +206,1 @@\n-                              Register thread_tmp = noreg, DecoratorSet decorators = 0);\n+                              Register tmp2 = noreg, DecoratorSet decorators = 0);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1680,1 +1680,1 @@\n-    __ resolve_jobject(x10, xthread, t1);\n+    __ resolve_jobject(x10, x11, x12);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3807,1 +3807,1 @@\n-  static void jfr_epilogue(MacroAssembler* _masm, Register thread) {\n+  static void jfr_epilogue(MacroAssembler* _masm) {\n@@ -3813,1 +3813,1 @@\n-    bs->load_at(_masm, decorators, T_OBJECT, x10, Address(x10, 0), c_rarg0, thread);\n+    bs->load_at(_masm, decorators, T_OBJECT, x10, Address(x10, 0), t0, t1);\n@@ -3816,0 +3816,1 @@\n+\n@@ -3841,1 +3842,1 @@\n-    jfr_epilogue(_masm, xthread);\n+    jfr_epilogue(_masm);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -689,1 +689,1 @@\n-    __ load_mirror(x10, xmethod);\n+    __ load_mirror(x10, xmethod, x15, t1);\n@@ -769,1 +769,1 @@\n-  __ load_mirror(t2, xmethod);\n+  __ load_mirror(t2, xmethod, x15, t1);\n@@ -842,1 +842,1 @@\n-  bs->load_at(_masm, IN_HEAP | ON_WEAK_OOP_REF, T_OBJECT, local_0, field_address, \/*tmp1*\/ t1, \/*tmp2*\/ t0);\n+  bs->load_at(_masm, IN_HEAP | ON_WEAK_OOP_REF, T_OBJECT, local_0, field_address, \/*tmp1*\/ t0, \/*tmp2*\/ t1);\n@@ -1050,1 +1050,1 @@\n-          \"adjust this code\");\n+         \"adjust this code\");\n@@ -1070,1 +1070,1 @@\n-    __ load_mirror(t, xmethod);\n+    __ load_mirror(t, xmethod, x28, t1);\n@@ -1206,1 +1206,1 @@\n-    __ resolve_jobject(x10, xthread, t);\n+    __ resolve_jobject(x10, t, t1);\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-  return Address(esp,  Interpreter::expr_offset_in_bytes(1));\n+  return Address(esp, Interpreter::expr_offset_in_bytes(1));\n@@ -110,1 +110,1 @@\n-  return Address(esp,  Interpreter::expr_offset_in_bytes(2));\n+  return Address(esp, Interpreter::expr_offset_in_bytes(2));\n@@ -114,1 +114,1 @@\n-  return Address(esp,  Interpreter::expr_offset_in_bytes(3));\n+  return Address(esp, Interpreter::expr_offset_in_bytes(3));\n@@ -118,1 +118,1 @@\n-  return Address(esp,  Interpreter::expr_offset_in_bytes(4));\n+  return Address(esp, Interpreter::expr_offset_in_bytes(4));\n@@ -122,1 +122,1 @@\n-  return Address(esp,  Interpreter::expr_offset_in_bytes(5));\n+  return Address(esp, Interpreter::expr_offset_in_bytes(5));\n@@ -133,1 +133,1 @@\n-  __ store_heap_oop(dst, val, x29, x11, x13, decorators);\n+  __ store_heap_oop(dst, val, x28, x29, x13, decorators);\n@@ -140,1 +140,1 @@\n-  __ load_heap_oop(dst, src, x7, x11, decorators);\n+  __ load_heap_oop(dst, src, x28, x29, decorators);\n@@ -149,4 +149,3 @@\n-                                   Register temp_reg, bool load_bc_into_bc_reg\/*=true*\/,\n-                                   int byte_no)\n-{\n-  if (!RewriteBytecodes)  { return; }\n+                                   Register temp_reg, bool load_bc_into_bc_reg \/*=true*\/,\n+                                   int byte_no) {\n+  if (!RewriteBytecodes) { return; }\n@@ -224,2 +223,1 @@\n-void TemplateTable::aconst_null()\n-{\n+void TemplateTable::aconst_null() {\n@@ -230,2 +228,1 @@\n-void TemplateTable::iconst(int value)\n-{\n+void TemplateTable::iconst(int value) {\n@@ -236,2 +233,1 @@\n-void TemplateTable::lconst(int value)\n-{\n+void TemplateTable::lconst(int value) {\n@@ -242,2 +238,1 @@\n-void TemplateTable::fconst(int value)\n-{\n+void TemplateTable::fconst(int value) {\n@@ -262,2 +257,1 @@\n-void TemplateTable::dconst(int value)\n-{\n+void TemplateTable::dconst(int value) {\n@@ -282,2 +276,1 @@\n-void TemplateTable::bipush()\n-{\n+void TemplateTable::bipush() {\n@@ -288,2 +281,1 @@\n-void TemplateTable::sipush()\n-{\n+void TemplateTable::sipush() {\n@@ -296,2 +288,1 @@\n-void TemplateTable::ldc(bool wide)\n-{\n+void TemplateTable::ldc(bool wide) {\n@@ -366,2 +357,1 @@\n-void TemplateTable::fast_aldc(bool wide)\n-{\n+void TemplateTable::fast_aldc(bool wide) {\n@@ -402,1 +392,1 @@\n-    __ resolve_oop_handle(tmp);\n+    __ resolve_oop_handle(tmp, x15, t1);\n@@ -414,2 +404,1 @@\n-void TemplateTable::ldc2_w()\n-{\n+void TemplateTable::ldc2_w() {\n@@ -451,2 +440,1 @@\n-void TemplateTable::condy_helper(Label& Done)\n-{\n+void TemplateTable::condy_helper(Label& Done) {\n@@ -561,2 +549,1 @@\n-void TemplateTable::locals_index(Register reg, int offset)\n-{\n+void TemplateTable::locals_index(Register reg, int offset) {\n@@ -617,2 +604,1 @@\n-void TemplateTable::fast_iload2()\n-{\n+void TemplateTable::fast_iload2() {\n@@ -627,2 +613,1 @@\n-void TemplateTable::fast_iload()\n-{\n+void TemplateTable::fast_iload() {\n@@ -634,2 +619,1 @@\n-void TemplateTable::lload()\n-{\n+void TemplateTable::lload() {\n@@ -643,2 +627,1 @@\n-void TemplateTable::fload()\n-{\n+void TemplateTable::fload() {\n@@ -650,2 +633,1 @@\n-void TemplateTable::dload()\n-{\n+void TemplateTable::dload() {\n@@ -659,2 +641,1 @@\n-void TemplateTable::aload()\n-{\n+void TemplateTable::aload() {\n@@ -664,1 +645,0 @@\n-\n@@ -679,2 +659,1 @@\n-void TemplateTable::wide_lload()\n-{\n+void TemplateTable::wide_lload() {\n@@ -689,2 +668,1 @@\n-void TemplateTable::wide_fload()\n-{\n+void TemplateTable::wide_fload() {\n@@ -696,2 +674,1 @@\n-void TemplateTable::wide_dload()\n-{\n+void TemplateTable::wide_dload() {\n@@ -706,2 +683,1 @@\n-void TemplateTable::wide_aload()\n-{\n+void TemplateTable::wide_aload() {\n@@ -713,2 +689,1 @@\n-void TemplateTable::index_check(Register array, Register index)\n-{\n+void TemplateTable::index_check(Register array, Register index) {\n@@ -735,2 +710,1 @@\n-void TemplateTable::iaload()\n-{\n+void TemplateTable::iaload() {\n@@ -749,2 +723,1 @@\n-void TemplateTable::laload()\n-{\n+void TemplateTable::laload() {\n@@ -762,2 +735,1 @@\n-void TemplateTable::faload()\n-{\n+void TemplateTable::faload() {\n@@ -775,2 +747,1 @@\n-void TemplateTable::daload()\n-{\n+void TemplateTable::daload() {\n@@ -788,2 +759,1 @@\n-void TemplateTable::aaload()\n-{\n+void TemplateTable::aaload() {\n@@ -798,4 +768,1 @@\n-  do_oop_load(_masm,\n-              Address(x10),\n-              x10,\n-              IS_ARRAY);\n+  do_oop_load(_masm, Address(x10), x10, IS_ARRAY);\n@@ -804,2 +771,1 @@\n-void TemplateTable::baload()\n-{\n+void TemplateTable::baload() {\n@@ -817,3 +783,2 @@\n-void TemplateTable::caload()\n-{\n- transition(itos, itos);\n+void TemplateTable::caload() {\n+  transition(itos, itos);\n@@ -831,2 +796,1 @@\n-void TemplateTable::fast_icaload()\n-{\n+void TemplateTable::fast_icaload() {\n@@ -847,2 +811,1 @@\n-void TemplateTable::saload()\n-{\n+void TemplateTable::saload() {\n@@ -860,2 +823,1 @@\n-void TemplateTable::iload(int n)\n-{\n+void TemplateTable::iload(int n) {\n@@ -866,2 +828,1 @@\n-void TemplateTable::lload(int n)\n-{\n+void TemplateTable::lload(int n) {\n@@ -872,2 +833,1 @@\n-void TemplateTable::fload(int n)\n-{\n+void TemplateTable::fload(int n) {\n@@ -878,2 +838,1 @@\n-void TemplateTable::dload(int n)\n-{\n+void TemplateTable::dload(int n) {\n@@ -884,2 +843,1 @@\n-void TemplateTable::aload(int n)\n-{\n+void TemplateTable::aload(int n) {\n@@ -965,2 +923,1 @@\n-void TemplateTable::istore()\n-{\n+void TemplateTable::istore() {\n@@ -972,2 +929,1 @@\n-void TemplateTable::lstore()\n-{\n+void TemplateTable::lstore() {\n@@ -991,2 +947,1 @@\n-void TemplateTable::astore()\n-{\n+void TemplateTable::astore() {\n@@ -1113,1 +1068,1 @@\n-  __ gen_subtype_check(x11, ok_is_subtype); \/\/todo\n+  __ gen_subtype_check(x11, ok_is_subtype);\n@@ -1138,1 +1093,0 @@\n-\n@@ -1141,2 +1095,1 @@\n-void TemplateTable::bastore()\n-{\n+void TemplateTable::bastore() {\n@@ -1167,2 +1120,1 @@\n-void TemplateTable::castore()\n-{\n+void TemplateTable::castore() {\n@@ -1181,2 +1133,1 @@\n-void TemplateTable::sastore()\n-{\n+void TemplateTable::sastore() {\n@@ -1186,2 +1137,1 @@\n-void TemplateTable::istore(int n)\n-{\n+void TemplateTable::istore(int n) {\n@@ -1192,2 +1142,1 @@\n-void TemplateTable::lstore(int n)\n-{\n+void TemplateTable::lstore(int n) {\n@@ -1198,2 +1147,1 @@\n-void TemplateTable::fstore(int n)\n-{\n+void TemplateTable::fstore(int n) {\n@@ -1204,2 +1152,1 @@\n-void TemplateTable::dstore(int n)\n-{\n+void TemplateTable::dstore(int n) {\n@@ -1210,2 +1157,1 @@\n-void TemplateTable::astore(int n)\n-{\n+void TemplateTable::astore(int n) {\n@@ -1217,2 +1163,1 @@\n-void TemplateTable::pop()\n-{\n+void TemplateTable::pop() {\n@@ -1223,2 +1168,1 @@\n-void TemplateTable::pop2()\n-{\n+void TemplateTable::pop2() {\n@@ -1229,2 +1173,1 @@\n-void TemplateTable::dup()\n-{\n+void TemplateTable::dup() {\n@@ -1237,2 +1180,1 @@\n-void TemplateTable::dup_x1()\n-{\n+void TemplateTable::dup_x1() {\n@@ -1249,2 +1191,1 @@\n-void TemplateTable::dup_x2()\n-{\n+void TemplateTable::dup_x2() {\n@@ -1265,2 +1206,1 @@\n-void TemplateTable::dup2()\n-{\n+void TemplateTable::dup2() {\n@@ -1276,2 +1216,1 @@\n-void TemplateTable::dup2_x1()\n-{\n+void TemplateTable::dup2_x1() {\n@@ -1294,2 +1233,1 @@\n-void TemplateTable::dup2_x2()\n-{\n+void TemplateTable::dup2_x2() {\n@@ -1314,2 +1252,1 @@\n-void TemplateTable::swap()\n-{\n+void TemplateTable::swap() {\n@@ -1325,2 +1262,1 @@\n-void TemplateTable::iop2(Operation op)\n-{\n+void TemplateTable::iop2(Operation op) {\n@@ -1344,2 +1280,1 @@\n-void TemplateTable::lop2(Operation op)\n-{\n+void TemplateTable::lop2(Operation op) {\n@@ -1360,2 +1295,1 @@\n-void TemplateTable::idiv()\n-{\n+void TemplateTable::idiv() {\n@@ -1374,2 +1308,1 @@\n-void TemplateTable::irem()\n-{\n+void TemplateTable::irem() {\n@@ -1388,2 +1321,1 @@\n-void TemplateTable::lmul()\n-{\n+void TemplateTable::lmul() {\n@@ -1395,2 +1327,1 @@\n-void TemplateTable::ldiv()\n-{\n+void TemplateTable::ldiv() {\n@@ -1409,2 +1340,1 @@\n-void TemplateTable::lrem()\n-{\n+void TemplateTable::lrem() {\n@@ -1423,2 +1353,1 @@\n-void TemplateTable::lshl()\n-{\n+void TemplateTable::lshl() {\n@@ -1431,2 +1360,1 @@\n-void TemplateTable::lshr()\n-{\n+void TemplateTable::lshr() {\n@@ -1439,2 +1367,1 @@\n-void TemplateTable::lushr()\n-{\n+void TemplateTable::lushr() {\n@@ -1447,2 +1374,1 @@\n-void TemplateTable::fop2(Operation op)\n-{\n+void TemplateTable::fop2(Operation op) {\n@@ -1477,2 +1403,1 @@\n-void TemplateTable::dop2(Operation op)\n-{\n+void TemplateTable::dop2(Operation op) {\n@@ -1507,2 +1432,1 @@\n-void TemplateTable::ineg()\n-{\n+void TemplateTable::ineg() {\n@@ -1513,2 +1437,1 @@\n-void TemplateTable::lneg()\n-{\n+void TemplateTable::lneg() {\n@@ -1519,2 +1442,1 @@\n-void TemplateTable::fneg()\n-{\n+void TemplateTable::fneg() {\n@@ -1525,2 +1447,1 @@\n-void TemplateTable::dneg()\n-{\n+void TemplateTable::dneg() {\n@@ -1531,2 +1452,1 @@\n-void TemplateTable::iinc()\n-{\n+void TemplateTable::iinc() {\n@@ -1541,2 +1461,1 @@\n-void TemplateTable::wide_iinc()\n-{\n+void TemplateTable::wide_iinc() {\n@@ -1555,2 +1474,1 @@\n-void TemplateTable::convert()\n-{\n+void TemplateTable::convert() {\n@@ -1654,2 +1572,1 @@\n-void TemplateTable::lcmp()\n-{\n+void TemplateTable::lcmp() {\n@@ -1662,2 +1579,1 @@\n-void TemplateTable::float_cmp(bool is_float, int unordered_result)\n-{\n+void TemplateTable::float_cmp(bool is_float, int unordered_result) {\n@@ -1688,2 +1604,1 @@\n-void TemplateTable::branch(bool is_jsr, bool is_wide)\n-{\n+void TemplateTable::branch(bool is_jsr, bool is_wide) {\n@@ -1844,2 +1759,1 @@\n-void TemplateTable::if_0cmp(Condition cc)\n-{\n+void TemplateTable::if_0cmp(Condition cc) {\n@@ -1879,2 +1793,1 @@\n-void TemplateTable::if_icmp(Condition cc)\n-{\n+void TemplateTable::if_icmp(Condition cc) {\n@@ -1914,2 +1827,1 @@\n-void TemplateTable::if_nullcmp(Condition cc)\n-{\n+void TemplateTable::if_nullcmp(Condition cc) {\n@@ -1929,2 +1841,1 @@\n-void TemplateTable::if_acmp(Condition cc)\n-{\n+void TemplateTable::if_acmp(Condition cc) {\n@@ -2168,2 +2079,1 @@\n-void TemplateTable::_return(TosState state)\n-{\n+void TemplateTable::_return(TosState state) {\n@@ -2304,1 +2214,1 @@\n-    __ resolve_oop_handle(obj);\n+    __ resolve_oop_handle(obj, x15, t1);\n@@ -2382,2 +2292,1 @@\n-void TemplateTable::pop_and_check_object(Register r)\n-{\n+void TemplateTable::pop_and_check_object(Register r) {\n@@ -2389,2 +2298,1 @@\n-void TemplateTable::getfield_or_static(int byte_no, bool is_static, RewriteControl rc)\n-{\n+void TemplateTable::getfield_or_static(int byte_no, bool is_static, RewriteControl rc) {\n@@ -2549,2 +2457,1 @@\n-void TemplateTable::getfield(int byte_no)\n-{\n+void TemplateTable::getfield(int byte_no) {\n@@ -2857,2 +2764,1 @@\n-void TemplateTable::putfield(int byte_no)\n-{\n+void TemplateTable::putfield(int byte_no) {\n@@ -2870,2 +2776,1 @@\n-void TemplateTable::jvmti_post_fast_field_mod()\n-{\n+void TemplateTable::jvmti_post_fast_field_mod() {\n@@ -2928,2 +2833,1 @@\n-void TemplateTable::fast_storefield(TosState state)\n-{\n+void TemplateTable::fast_storefield(TosState state) {\n@@ -3006,2 +2910,1 @@\n-void TemplateTable::fast_accessfield(TosState state)\n-{\n+void TemplateTable::fast_accessfield(TosState state) {\n@@ -3090,2 +2993,1 @@\n-void TemplateTable::fast_xaccess(TosState state)\n-{\n+void TemplateTable::fast_xaccess(TosState state) {\n@@ -3213,2 +3115,1 @@\n-                                         Register flags)\n-{\n+                                         Register flags) {\n@@ -3252,2 +3153,1 @@\n-void TemplateTable::invokevirtual(int byte_no)\n-{\n+void TemplateTable::invokevirtual(int byte_no) {\n@@ -3266,2 +3166,1 @@\n-void TemplateTable::invokespecial(int byte_no)\n-{\n+void TemplateTable::invokespecial(int byte_no) {\n@@ -3281,2 +3180,1 @@\n-void TemplateTable::invokestatic(int byte_no)\n-{\n+void TemplateTable::invokestatic(int byte_no) {\n@@ -3293,2 +3191,1 @@\n-void TemplateTable::fast_invokevfinal(int byte_no)\n-{\n+void TemplateTable::fast_invokevfinal(int byte_no) {\n@@ -3589,2 +3486,1 @@\n-void TemplateTable::checkcast()\n-{\n+void TemplateTable::checkcast() {\n@@ -3705,0 +3601,1 @@\n+\n@@ -3756,2 +3653,2 @@\n-void TemplateTable::monitorenter()\n-{\n+\n+void TemplateTable::monitorenter() {\n@@ -3855,2 +3752,1 @@\n-void TemplateTable::monitorexit()\n-{\n+void TemplateTable::monitorexit() {\n@@ -3894,1 +3790,1 @@\n-                   InterpreterRuntime::throw_illegal_monitor_state_exception));\n+             InterpreterRuntime::throw_illegal_monitor_state_exception));\n@@ -3905,2 +3801,1 @@\n-void TemplateTable::wide()\n-{\n+void TemplateTable::wide() {\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":119,"deletions":224,"binary":false,"changes":343,"status":"modified"}]}