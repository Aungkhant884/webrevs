{"files":[{"patch":"@@ -140,4 +140,0 @@\n-  if (heap->is_concurrent_weak_root_in_progress()) {\n-    entry_rendezvous_roots();\n-  }\n-\n@@ -172,0 +168,2 @@\n+  } else {\n+    vmop_entry_disable_weakroots();\n@@ -217,0 +215,12 @@\n+void ShenandoahConcurrentGC::vmop_entry_disable_weakroots() {\n+  ShenandoahHeap* const heap = ShenandoahHeap::heap();\n+  TraceCollectorStats tcs(heap->monitoring_support()->stw_collection_counters());\n+  ShenandoahTimingsTracker timing(ShenandoahPhaseTimings::disable_weakroots_gross);\n+\n+  \/\/ This phase does not use workers, no need for setup\n+  heap->try_inject_alloc_failure();\n+  VM_ShenandoahDisableWeakRoots op(this);\n+  VMThread::execute(&op);\n+}\n+\n+\n@@ -262,0 +272,8 @@\n+void ShenandoahConcurrentGC::entry_disable_weakroots() {\n+  static const char* msg = \"Pause Disable Weak Roots\";\n+  ShenandoahPausePhase gc_phase(msg, ShenandoahPhaseTimings::disable_weakroots);\n+  EventMark em(\"%s\", msg);\n+\n+  op_disable_weakroots();\n+}\n+\n@@ -394,12 +412,0 @@\n-void ShenandoahConcurrentGC::entry_rendezvous_roots() {\n-  ShenandoahHeap* const heap = ShenandoahHeap::heap();\n-  TraceCollectorStats tcs(heap->monitoring_support()->concurrent_collection_counters());\n-  static const char* msg = \"Rendezvous roots\";\n-  ShenandoahConcurrentPhase gc_phase(msg, ShenandoahPhaseTimings::conc_rendezvous_roots);\n-  EventMark em(\"%s\", msg);\n-\n-  \/\/ This phase does not use workers, no need for setup\n-  heap->try_inject_alloc_failure();\n-  op_rendezvous_roots();\n-}\n-\n@@ -914,0 +920,1 @@\n+  heap->set_concurrent_weak_root_in_progress(false);\n@@ -985,0 +992,4 @@\n+void ShenandoahConcurrentGC::op_disable_weakroots() {\n+  ShenandoahHeap::heap()->set_concurrent_weak_root_in_progress(false);\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":27,"deletions":16,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+  friend class VM_ShenandoahDisableWeakRoots;\n@@ -62,0 +63,1 @@\n+  void vmop_entry_disable_weakroots();\n@@ -69,0 +71,1 @@\n+  void entry_disable_weakroots();\n@@ -81,1 +84,0 @@\n-  void entry_rendezvous_roots();\n@@ -105,0 +107,1 @@\n+  void op_disable_weakroots();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-  f(conc_rendezvous_roots,                          \"Rendezvous\")                      \\\n@@ -102,0 +101,3 @@\n+  f(disable_weakroots_gross,                        \"Disable Weak Roots (G)\")          \\\n+  f(disable_weakroots,                              \"Disable Weak Roots (N)\")          \\\n+                                                                                       \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -168,0 +168,1 @@\n+           type == VM_Operation::VMOp_ShenandoahDisableWeakRoots ||\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahUtils.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -78,0 +78,5 @@\n+\n+void VM_ShenandoahDisableWeakRoots::doit() {\n+  ShenandoahGCPauseMark mark(_gc_id, SvcGCMarker::CONCURRENT);\n+  _gc->entry_disable_weakroots();\n+}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVMOperations.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -133,0 +133,11 @@\n+class VM_ShenandoahDisableWeakRoots: public VM_ShenandoahOperation {\n+  ShenandoahConcurrentGC* const _gc;\n+public:\n+  VM_ShenandoahDisableWeakRoots(ShenandoahConcurrentGC* gc) :\n+    VM_ShenandoahOperation(),\n+    _gc(gc) {};\n+  VM_Operation::VMOp_Type type() const { return VMOp_ShenandoahDisableWeakRoots; }\n+  const char* name()             const { return \"Shenandoah Disable Weak Roots\"; }\n+  virtual void doit();\n+};\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVMOperations.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+  template(ShenandoahDisableWeakRoots)            \\\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}