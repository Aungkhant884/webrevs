{"files":[{"patch":"@@ -142,0 +142,5 @@\n+static void do_trace_pagesize(const char* description, size_t req_size, size_t req_page_size, const ReservedSpace* rs) {\n+  os::trace_page_sizes_for_requested_size(description, req_size, rs->page_size(),  req_page_size,\n+                                          rs->base(), rs->size());\n+}\n+\n@@ -195,0 +200,1 @@\n+  do_trace_pagesize(\"Heap\", max_byte_size, heap_alignment, &heap_rs);\n@@ -218,2 +224,2 @@\n-  _bitmap_size = ShenandoahMarkBitMap::compute_size(heap_rs.size());\n-  _bitmap_size = align_up(_bitmap_size, bitmap_page_size);\n+  size_t bitmap_size_orig = ShenandoahMarkBitMap::compute_size(heap_rs.size());\n+  _bitmap_size = align_up(bitmap_size_orig, bitmap_page_size);\n@@ -245,0 +251,1 @@\n+  do_trace_pagesize(\"Mark Bitmap\", bitmap_size_orig, bitmap_page_size, &bitmap);\n@@ -261,0 +268,1 @@\n+    do_trace_pagesize(\"Verify Bitmap\", bitmap_size_orig, bitmap_page_size, &bitmap);\n@@ -273,0 +281,1 @@\n+  do_trace_pagesize(\"Aux Bitmap\", bitmap_size_orig, bitmap_page_size, &bitmap);\n@@ -282,2 +291,3 @@\n-  size_t region_storage_size = align_up(region_align * _num_regions, region_page_size);\n-  region_storage_size = align_up(region_storage_size, os::vm_allocation_granularity());\n+  size_t region_storage_size_orig = region_align * _num_regions;\n+  size_t region_storage_size = align_up(region_storage_size_orig,\n+                                        MAX2(region_page_size, os::vm_allocation_granularity()));\n@@ -286,0 +296,1 @@\n+  do_trace_pagesize(\"Region Storage\", region_storage_size_orig, region_page_size, &region_storage);\n@@ -301,0 +312,1 @@\n+    const ReservedSpace* rs = nullptr;\n@@ -309,0 +321,1 @@\n+        rs = &cset_rs;\n@@ -316,0 +329,1 @@\n+      rs = &cset_rs;\n@@ -317,0 +331,1 @@\n+    do_trace_pagesize(\"Collection Set\", cset_size, os::vm_page_size(), rs);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"}]}