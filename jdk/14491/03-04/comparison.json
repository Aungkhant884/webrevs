{"files":[{"patch":"@@ -211,3 +211,2 @@\n-            \/\/ Linux allows IPv6 sockets join IPv4 multicast groups\n-            if (Platform.isLinux())\n-                test(UNSPEC, nif, ip4Group1, ip4Group2);\n+            \/\/ test IPv6 sockets joining IPv4 multicast groups\n+            test(UNSPEC, nif, ip4Group1, ip4Group2);\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/Promiscuous.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @requires os.family == \"linux\"\n@@ -150,1 +149,1 @@\n-                     boolean bindToWildCard,\n+                     boolean bindToWildcard,\n@@ -160,1 +159,1 @@\n-        InetAddress bindAddr1 = bindToWildCard \n+        InetAddress bindAddr1 = bindToWildcard \n@@ -164,1 +163,1 @@\n-        InetAddress bindAddr2 = bindToWildCard\n+        InetAddress bindAddr2 = bindToWildcard\n@@ -209,2 +208,2 @@\n-        if (!Platform.isLinux()) {\n-            throw new SkippedException(\"This test should be run only on Linux\");\n+        if (Platform.isWindows()) {\n+            throw new SkippedException(\"This test should not be run on Windows\");\n@@ -214,1 +213,1 @@\n-            hasIPV6MulticastAll = (major > 4) || ((major == 4 && minor >= 20));\n+            hasIPV6MulticastAll = Platform.isOSX() || (major > 4) || ((major == 4 && minor >= 20));\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/PromiscuousIPv6.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"}]}