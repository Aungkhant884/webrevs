{"files":[{"patch":"@@ -622,1 +622,2 @@\n-  char *edge_end = ((char*)_in) + edge_size;\n+  char *in_array = ((char*)_in);\n+  char *edge_end = in_array + edge_size;\n@@ -626,20 +627,0 @@\n-  \/\/ Free the output edge array\n-  if (out_edge_size > 0) {\n-    compile->node_arena()->Afree(out_array, out_edge_size);\n-  }\n-\n-  \/\/ Free the input edge array and the node itself\n-  if( edge_end == (char*)this ) {\n-    \/\/ It was; free the input array and object all in one hit\n-#ifndef ASSERT\n-    compile->node_arena()->Afree(_in,edge_size+node_size);\n-#endif\n-  } else {\n-    \/\/ Free just the input array\n-    compile->node_arena()->Afree(_in,edge_size);\n-\n-    \/\/ Free just the object\n-#ifndef ASSERT\n-    compile->node_arena()->Afree(this,node_size);\n-#endif\n-  }\n@@ -668,0 +649,1 @@\n+\n@@ -675,0 +657,21 @@\n+\n+  \/\/ Free the output edge array\n+  if (out_edge_size > 0) {\n+    compile->node_arena()->Afree(out_array, out_edge_size);\n+  }\n+\n+  \/\/ Free the input edge array and the node itself\n+  if( edge_end == (char*)this ) {\n+    \/\/ It was; free the input array and object all in one hit\n+#ifndef ASSERT\n+    compile->node_arena()->Afree(in_array, edge_size+node_size);\n+#endif\n+  } else {\n+    \/\/ Free just the input array\n+    compile->node_arena()->Afree(in_array, edge_size);\n+\n+    \/\/ Free just the object\n+#ifndef ASSERT\n+    compile->node_arena()->Afree(this, node_size);\n+#endif\n+  }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":24,"deletions":21,"binary":false,"changes":45,"status":"modified"}]}