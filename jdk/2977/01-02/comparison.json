{"files":[{"patch":"@@ -29,2 +29,1 @@\n-import java.io.IOException;\n-import java.io.InputStream;\n+import java.io.*;\n@@ -33,0 +32,1 @@\n+import java.net.ProxySelector;\n@@ -37,0 +37,2 @@\n+import java.nio.channels.*;\n+import java.nio.charset.StandardCharsets;\n@@ -67,0 +69,68 @@\n+        test(false);\n+        test(true);\n+    }\n+\n+    \/**\n+     *  Fake proxy. Just looks for Proxy-Authorization header\n+     *  and returns error if seen. Returns 200 OK if not.\n+     *  Does not actually forward the request\n+     *\/\n+    static class ProxyServer extends Thread {\n+\n+        final ServerSocketChannel server;\n+        final int port;\n+        volatile SocketChannel c;\n+\n+        ProxyServer() throws IOException {\n+            server = ServerSocketChannel.open();\n+            server.bind(new InetSocketAddress(0));\n+            if (server.getLocalAddress() instanceof InetSocketAddress isa) {\n+                port = isa.getPort();\n+            } else {\n+                port = -1;\n+            }\n+        }\n+\n+        int getPort() {\n+            return port;\n+        }\n+\n+        static String ok = \"HTTP\/1.1 200 OK\\r\\nContent-Length: 0\\r\\n\\r\\n\";\n+        static String notok1 = \"HTTP\/1.1 500 Internal Server Error\\r\\nContent-Length: 0\\r\\n\\r\\n\";\n+        static String notok2 = \"HTTP\/1.1 501 Not Implemented\\r\\nContent-Length: 0\\r\\n\\r\\n\";\n+\n+        static void reply(String msg, Writer writer) throws IOException {\n+            writer.write(msg);\n+            writer.flush();\n+        }\n+\n+        public void run() {\n+            try {\n+                c = server.accept();\n+                var cs = StandardCharsets.US_ASCII;\n+                LineNumberReader reader = new LineNumberReader(Channels.newReader(c, cs));\n+                Writer writer = Channels.newWriter(c, cs);\n+\n+                String line;\n+                while ((line=reader.readLine()) != null) {\n+                    if (line.indexOf(\"Proxy-Authorization\") != -1) {\n+                        reply(notok1, writer);\n+                        return;\n+                    }\n+                    if (line.equals(\"\")) {\n+                        \/\/ end of headers\n+                        reply(ok, writer);\n+                        return;\n+                    }\n+                }\n+                reply(notok2, writer);\n+            } catch (IOException e) {\n+            }\n+            try {\n+                server.close();\n+                c.close();\n+            } catch (IOException ee) {}\n+        }\n+    }\n+\n+    public static void test(boolean useProxy) throws Exception {\n@@ -69,0 +139,13 @@\n+        ProxyServer proxy;\n+\n+        InetSocketAddress proxyAddr=null;\n+        String authHdr;\n+        if (useProxy) {\n+            proxy = new ProxyServer();\n+            proxyAddr = new InetSocketAddress(\"127.0.0.1\", proxy.getPort());\n+            proxy.start();\n+            authHdr = \"Proxy-Authorization\";\n+        } else {\n+            authHdr = \"Authorization\";\n+        }\n+\n@@ -71,3 +154,8 @@\n-        HttpClient client = HttpClient.newBuilder()\n-                .authenticator(new Auth())\n-                .build();\n+        HttpClient.Builder builder = HttpClient\n+                .newBuilder()\n+                .authenticator(new Auth());\n+\n+        if (useProxy) {\n+            builder.proxy(ProxySelector.of(proxyAddr));\n+        }\n+        HttpClient client = builder.build();\n@@ -78,1 +166,1 @@\n-                .header(\"Authorization\", \"nonsense\")\n+                .header(authHdr, \"nonsense\")\n@@ -81,0 +169,1 @@\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/AuthFilter.java","additions":95,"deletions":6,"binary":false,"changes":101,"status":"modified"}]}