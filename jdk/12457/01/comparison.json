{"files":[{"patch":"@@ -54,0 +54,4 @@\n+import jdk.httpclient.test.lib.http2.BodyOutputStream;\n+import jdk.httpclient.test.lib.http2.Http2TestExchangeImpl;\n+import jdk.httpclient.test.lib.http2.Http2TestServerConnection;\n+import jdk.internal.net.http.common.HttpHeadersBuilder;\n@@ -58,0 +62,1 @@\n+import java.io.InputStream;\n@@ -59,1 +64,0 @@\n-import java.net.InetSocketAddress;\n@@ -62,0 +66,1 @@\n+import java.net.http.HttpHeaders;\n@@ -69,0 +74,2 @@\n+import javax.net.ssl.SSLSession;\n+\n@@ -75,1 +82,1 @@\n-    Http2TestServer http2TestServer;\n+    static Http2TestServer http2TestServer;\n@@ -89,0 +96,1 @@\n+        http2TestServer.setExchangeSupplier(TestExchangeSupplier::new);\n@@ -157,1 +165,1 @@\n-        InetSocketAddress remote;\n+        volatile Object firstConnection = null;\n@@ -161,9 +169,17 @@\n-            if (remote == null) {\n-                remote = exchange.getRemoteAddress();\n-                exchange.sendResponseHeaders(200, 0);\n-            } else if (!remote.equals(exchange.getRemoteAddress())) {\n-                testLog.println(\"ServerTimeoutHandler: New Connection was used, idleConnectionTimeoutEvent fired.\"\n-                        + \" First remote: \" + remote + \", Second Remote: \" + exchange.getRemoteAddress());\n-                exchange.sendResponseHeaders(200, 0);\n-            } else {\n-                exchange.sendResponseHeaders(400, 0);\n+            if (exchange instanceof TestExchangeSupplier exch) {\n+                if (firstConnection == null) {\n+                    firstConnection = exch.getTestConnection();\n+                    exch.sendResponseHeaders(200, 0);\n+                } else {\n+                    var secondConnection = exch.getTestConnection();\n+\n+                    if (firstConnection != secondConnection) {\n+                        testLog.println(\"ServerTimeoutHandler: New Connection was used, idleConnectionTimeoutEvent fired.\"\n+                                + \" First Connection Hash: \" + firstConnection + \", Second Connection Hash: \" + secondConnection);\n+                        exch.sendResponseHeaders(200, 0);\n+                    } else {\n+                        testLog.println(\"ServerTimeoutHandler: Same Connection was used, idleConnectionTimeoutEvent did not fire.\"\n+                                + \" First Connection Hash: \" + firstConnection + \", Second Connection Hash: \" + secondConnection);\n+                        exch.sendResponseHeaders(400, 0);\n+                    }\n+                }\n@@ -176,1 +192,1 @@\n-        InetSocketAddress oldRemote;\n+        volatile Object firstConnection = null;\n@@ -180,10 +196,17 @@\n-            InetSocketAddress newRemote = exchange.getRemoteAddress();\n-            if (oldRemote == null) {\n-                oldRemote = newRemote;\n-                exchange.sendResponseHeaders(200, 0);\n-            } else if (oldRemote.equals(newRemote)) {\n-                testLog.println(\"ServerNoTimeoutHandler: Same Connection was used, idleConnectionTimeoutEvent did not fire.\"\n-                        + \" First remote: \" + oldRemote + \", Second Remote: \" + newRemote);\n-                exchange.sendResponseHeaders(200, 0);\n-            } else {\n-                exchange.sendResponseHeaders(400, 0);\n+            if (exchange instanceof TestExchangeSupplier exch) {\n+                if (firstConnection == null) {\n+                    firstConnection = exch.getTestConnection();\n+                    exch.sendResponseHeaders(200, 0);\n+                } else {\n+                    var secondConnection = exch.getTestConnection();\n+\n+                    if (firstConnection == secondConnection) {\n+                        testLog.println(\"ServerTimeoutHandler: Same Connection was used, idleConnectionTimeoutEvent did not fire.\"\n+                                + \" First Connection Hash: \" + firstConnection + \", Second Connection Hash: \" + secondConnection);\n+                        exch.sendResponseHeaders(200, 0);\n+                    } else {\n+                        testLog.println(\"ServerTimeoutHandler: Different Connection was used, idleConnectionTimeoutEvent fired.\"\n+                                + \" First Connection Hash: \" + firstConnection + \", Second Connection Hash: \" + secondConnection);\n+                        exch.sendResponseHeaders(400, 0);\n+                    }\n+                }\n@@ -193,1 +216,12 @@\n-}\n+\n+    static class TestExchangeSupplier extends Http2TestExchangeImpl {\n+\n+        public TestExchangeSupplier(int streamid, String method, HttpHeaders reqheaders, HttpHeadersBuilder rspheadersBuilder, URI uri, InputStream is, SSLSession sslSession, BodyOutputStream os, Http2TestServerConnection conn, boolean pushAllowed) {\n+            super(streamid, method, reqheaders, rspheadersBuilder, uri, is, sslSession, os, conn, pushAllowed);\n+        }\n+\n+        public Http2TestServerConnection getTestConnection() {\n+            return this.conn;\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/IdleConnectionTimeoutTest.java","additions":58,"deletions":24,"binary":false,"changes":82,"status":"modified"}]}