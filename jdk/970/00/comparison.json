{"files":[{"patch":"@@ -1518,16 +1518,3 @@\n-        if (canSuspendResumeThreadLists()) {\n-            error = commonSuspendList(env, count, threads);\n-            if (error != JVMTI_ERROR_NONE) {\n-                goto err;\n-            }\n-        } else {\n-\n-            int i;\n-\n-            for (i = 0; i < count; i++) {\n-                error = commonSuspend(env, threads[i], JNI_FALSE);\n-\n-                if (error != JVMTI_ERROR_NONE) {\n-                    goto err;\n-                }\n-            }\n+        error = commonSuspendList(env, count, threads);\n+        if (error != JVMTI_ERROR_NONE) {\n+            goto err;\n@@ -1591,6 +1578,1 @@\n-    if (canSuspendResumeThreadLists()) {\n-        error = commonResumeList(env);\n-    } else {\n-        error = enumerateOverThreadList(env, &runningThreads,\n-                                        resumeHelper, NULL);\n-    }\n+    error = commonResumeList(env);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/threadControl.c","additions":4,"deletions":22,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -965,10 +965,0 @@\n-jboolean\n-canSuspendResumeThreadLists(void)\n-{\n-    jvmtiError error;\n-    jvmtiCapabilities cap;\n-\n-    error = jvmtiGetCapabilities(&cap);\n-    return (error == JVMTI_ERROR_NONE && cap.can_suspend);\n-}\n-\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.c","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -340,1 +340,0 @@\n-jboolean canSuspendResumeThreadLists(void);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/util.h","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}