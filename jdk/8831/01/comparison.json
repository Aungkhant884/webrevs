{"files":[{"patch":"@@ -739,0 +739,1 @@\n+    \/\/ HeapUsage = GC heap\n@@ -742,0 +743,1 @@\n+    \/\/ NonHeapUsage = CodeHeaps + Metaspace\n@@ -751,1 +753,1 @@\n-      if (pool->is_non_heap()) {\n+      if (pool->is_codeheap() || pool->is_metaspace()) {\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -187,0 +187,3 @@\n+\/\/ Any NonHeap pools would be counted into Non-Heap memory by MemoryMXBean.getNonHeapMemoryUsage.\n+\/\/ Make sure that it behaves as you expected if you want to add a new type of NonHeap pool, and\n+\/\/ update comments in jmm_GetMemoryUsage\n@@ -203,12 +206,0 @@\n-\n-CompressedKlassSpacePool::CompressedKlassSpacePool() :\n-  MemoryPool(\"Compressed Class Space\", NonHeap, 0, CompressedClassSpaceSize, true, false) { }\n-\n-size_t CompressedKlassSpacePool::used_in_bytes() {\n-  return MetaspaceUtils::used_bytes(Metaspace::ClassType);\n-}\n-\n-MemoryUsage CompressedKlassSpacePool::get_memory_usage() {\n-  MetaspaceStats stats = MetaspaceUtils::get_statistics(Metaspace::ClassType);\n-  return MemoryUsage(initial_size(), stats.used(), stats.committed(), max_size());\n-}\n","filename":"src\/hotspot\/share\/services\/memoryPool.cpp","additions":3,"deletions":12,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -139,0 +139,3 @@\n+  virtual bool        is_codeheap()               { return false; }\n+  virtual bool        is_metaspace()              { return false; }\n+  virtual bool        is_compressed_klass_space() { return false; }\n@@ -155,0 +158,2 @@\n+\n+  bool is_codeheap() override { return true; }\n@@ -163,7 +168,1 @@\n-};\n-\n-class CompressedKlassSpacePool : public MemoryPool {\n- public:\n-  CompressedKlassSpacePool();\n-  MemoryUsage get_memory_usage();\n-  size_t used_in_bytes();\n+  bool is_metaspace() override { return true; }\n","filename":"src\/hotspot\/share\/services\/memoryPool.hpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -115,7 +115,0 @@\n-\n-  if (UseCompressedClassPointers) {\n-    _compressed_class_pool = new CompressedKlassSpacePool();\n-    mgr->add_pool(_compressed_class_pool);\n-    _pools_list->append(_compressed_class_pool);\n-  }\n-\n","filename":"src\/hotspot\/share\/services\/memoryService.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- * @requires vm.bits == 64 & vm.opt.final.UseCompressedOops == true\n@@ -40,4 +39,2 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops gc.metaspace.TestMetaspaceMemoryPool\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-UseCompressedOops -XX:MaxMetaspaceSize=60m gc.metaspace.TestMetaspaceMemoryPool\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers gc.metaspace.TestMetaspaceMemoryPool\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:CompressedClassSpaceSize=60m gc.metaspace.TestMetaspaceMemoryPool\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions gc.metaspace.TestMetaspaceMemoryPool\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:MaxMetaspaceSize=60m gc.metaspace.TestMetaspaceMemoryPool\n@@ -51,7 +48,0 @@\n-\n-        if (Platform.is64bit()) {\n-            if (InputArguments.contains(\"-XX:+UseCompressedOops\")) {\n-                MemoryPoolMXBean cksPool = getMemoryPool(\"Compressed Class Space\");\n-                verifyMemoryPool(cksPool, true);\n-            }\n-        }\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestMetaspaceMemoryPool.java","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -42,2 +42,1 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xlog:class+load,class+unload=trace -XX:-UseCompressedOops -XX:-UseCompressedClassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint gc.metaspace.TestPerfCountersAndMemoryPools\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xlog:class+load,class+unload=trace -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UseSerialGC -XX:+UsePerfData -Xint gc.metaspace.TestPerfCountersAndMemoryPools\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xlog:class+load,class+unload=trace -XX:+UseSerialGC -XX:+UsePerfData -Xint gc.metaspace.TestPerfCountersAndMemoryPools\n@@ -48,4 +47,0 @@\n-\n-        if (InputArguments.contains(\"-XX:+UseCompressedClassPointers\") && Platform.is64bit()) {\n-            checkMemoryUsage(\"Compressed Class Space\", \"sun.gc.compressedclassspace\");\n-        }\n","filename":"test\/hotspot\/jtreg\/gc\/metaspace\/TestPerfCountersAndMemoryPools.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    private String pool_name;\n+    private final String pool_name = \"Metaspace\";\n@@ -136,14 +136,0 @@\n-        if (args.length != 1) {\n-            printUsage();\n-            throw new Fault(\"MemoryPool is not specified\");\n-        }\n-\n-        String a = args[0];\n-        if (a.equalsIgnoreCase(\"-pool:compressed\")) {\n-             pool_name = \"Compressed Class Space\";\n-        } else if (a.equalsIgnoreCase(\"-pool:metaspace\")) {\n-             pool_name = \"Metaspace\";\n-        } else {\n-            printUsage();\n-            throw new Fault(\"Unrecongnized argument: \" + a);\n-        }\n@@ -155,1 +141,1 @@\n-        System.err.println(\"    \" + MemoryUsageTest.class.getCanonicalName() + \" -pool:<metaspace|compressed>\");\n+        System.err.println(\"    \" + MemoryUsageTest.class.getCanonicalName());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/gc\/MemoryUsageTest.java","additions":2,"deletions":16,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n- *      -pool:compressed\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/gc\/memoryUsageLargeComp\/TestDescription.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n- *      -pool:metaspace\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/gc\/memoryUsageLargeMeta\/TestDescription.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n- *      -pool:compressed\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/gc\/memoryUsageSmallComp\/TestDescription.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,1 +38,0 @@\n- *      -pool:metaspace\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/gc\/memoryUsageSmallMeta\/TestDescription.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n- *      -DrequiresCompressedClassSpace=true\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/shrink_grow\/CompressedClassSpaceSize\/TestDescription.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -117,6 +117,0 @@\n-        if (System.getProperty(\"requiresCompressedClassSpace\") != null &&\n-                   !isCompressedClassSpaceAvailable()) {\n-                System.out.println(\"Not applicalbe, Compressed Class Space is required\");\n-            return;\n-        }\n-\n@@ -243,9 +237,0 @@\n-    boolean isCompressedClassSpaceAvailable() {\n-        for (MemoryPoolMXBean pool : ManagementFactory.getMemoryPoolMXBeans()) {\n-            if (pool.getName().equalsIgnoreCase(\"Compressed class space\")) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/shrink_grow\/ShrinkGrowTest\/ShrinkGrowTest.java","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-            METASPACE(\"Metaspace\", \"Compressed class space\");\n+            METASPACE(\"Metaspace\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/gp\/GarbageUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,3 +127,3 @@\n-    private MemoryPoolMXBean getClassMetadataMemoryPoolMXBean() {\n-    MemoryMXBean mbean = ManagementFactory.getMemoryMXBean();\n-    for (MemoryPoolMXBean memPool : ManagementFactory.getMemoryPoolMXBeans()) {\n+    private MemoryPoolMXBean getMetaspaceMemoryPoolMXBean() {\n+        MemoryMXBean mbean = ManagementFactory.getMemoryMXBean();\n+        for (MemoryPoolMXBean memPool : ManagementFactory.getMemoryPoolMXBeans()) {\n@@ -131,1 +131,1 @@\n-        if ((name.contains(\"Compressed class space\") || name.contains(\"Metaspace\")) && memPool.getUsage() != null) {\n+            if (name.contains(\"Metaspace\") && memPool.getUsage() != null) {\n@@ -143,2 +143,2 @@\n-        final MemoryPoolMXBean classMetadataPoolMXB = getClassMetadataMemoryPoolMXBean();\n-        final String memPoolName = classMetadataPoolMXB == null ? \"\" : classMetadataPoolMXB.getName();\n+        final MemoryPoolMXBean metaspacePoolMXB = getMetaspaceMemoryPoolMXBean();\n+        final String memPoolName = metaspacePoolMXB == null ? \"\" : metaspacePoolMXB.getName();\n@@ -159,2 +159,2 @@\n-                    if (TERMINATE_ON_FULL_METASPACE && classMetadataPoolMXB != null) {\n-                        MemoryUsage mu = classMetadataPoolMXB.getUsage();\n+                    if (TERMINATE_ON_FULL_METASPACE && metaspacePoolMXB != null) {\n+                        MemoryUsage mu = metaspacePoolMXB.getUsage();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/stress\/gc\/lotsOfCallSites\/Test.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}