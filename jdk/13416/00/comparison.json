{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n- * @author Vladislav Karnaukhov\n@@ -33,1 +32,7 @@\n-import javax.swing.*;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JLayer;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n@@ -36,0 +41,3 @@\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n@@ -37,3 +45,0 @@\n-import java.awt.*;\n-import java.awt.event.KeyEvent;\n-import java.lang.reflect.InvocationTargetException;\n@@ -42,1 +47,1 @@\n-public class bug7068740 extends JFrame {\n+public class bug7068740 {\n@@ -46,0 +51,1 @@\n+    private static JFrame frame;\n@@ -47,14 +53,5 @@\n-    bug7068740() {\n-        super();\n-        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n-\n-        DefaultTableModel model = new DefaultTableModel() {\n-            @Override\n-            public int getRowCount() {\n-                return 20;\n-            }\n-\n-            @Override\n-            public int getColumnCount() {\n-                return 2;\n-            }\n+    private static void setUp() throws Exception {\n+        if (robot == null) {\n+            robot = new Robot();\n+            robot.setAutoDelay(100);\n+        }\n@@ -62,0 +59,1 @@\n+        SwingUtilities.invokeAndWait(new Runnable() {\n@@ -63,20 +61,28 @@\n-            public Object getValueAt(int row, int column) {\n-                return \"(\" + row + \",\" + column + \")\";\n-            }\n-        };\n-\n-        table = new JTable(model);\n-        table.setRowSelectionInterval(0, 0);\n-        LayerUI<JComponent> layerUI = new LayerUI<>();\n-        JLayer<JComponent> layer = new JLayer<>(table, layerUI);\n-        JScrollPane scrollPane = new JScrollPane(layer);\n-        add(scrollPane);\n-        pack();\n-        setLocationRelativeTo(null);\n-    }\n-\n-    private static void setUp() {\n-        try {\n-            if (robot == null) {\n-                robot = new Robot();\n-                robot.setAutoDelay(50);\n+            public void run() {\n+                DefaultTableModel model = new DefaultTableModel() {\n+                    @Override\n+                    public int getRowCount() {\n+                        return 20;\n+                    }\n+\n+                    @Override\n+                    public int getColumnCount() {\n+                        return 2;\n+                    }\n+\n+                    @Override\n+                    public Object getValueAt(int row, int column) {\n+                        return \"(\" + row + \",\" + column + \")\";\n+                    }\n+                };\n+\n+                table = new JTable(model);\n+                table.setRowSelectionInterval(0, 0);\n+                LayerUI<JComponent> layerUI = new LayerUI<>();\n+                JLayer<JComponent> layer = new JLayer<>(table, layerUI);\n+                JScrollPane scrollPane = new JScrollPane(layer);\n+                frame = new JFrame();\n+                frame.add(scrollPane);\n+                frame.pack();\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n@@ -84,18 +90,1 @@\n-\n-            SwingUtilities.invokeAndWait(new Runnable() {\n-                @Override\n-                public void run() {\n-                    bug7068740 test = new bug7068740();\n-                    test.setVisible(true);\n-                }\n-            });\n-        } catch (InterruptedException e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"Test failed\");\n-        } catch (InvocationTargetException e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"Test failed\");\n-        } catch (AWTException e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"Test failed\");\n-        }\n+        });\n@@ -126,0 +115,1 @@\n+        robot.delay(1000);\n@@ -138,0 +128,2 @@\n+            robot.waitForIdle();\n+            robot.delay(1000);\n@@ -142,0 +134,6 @@\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n","filename":"test\/jdk\/javax\/swing\/JTable\/7068740\/bug7068740.java","additions":57,"deletions":59,"binary":false,"changes":116,"status":"modified"}]}