{"files":[{"patch":"@@ -329,24 +329,12 @@\n-    { MutexLocker mc(THREAD, Compile_lock);\n-\n-      java_lang_Class::allocate_fixup_lists();\n-\n-      \/\/ determine base vtable size; without that we cannot create the array klasses\n-      compute_base_vtable_size();\n-\n-      if (!UseSharedSpaces) {\n-        \/\/ Initialization of the fillerArrayKlass must come before regular\n-        \/\/ int-TypeArrayKlass so that the int-Array mirror points to the\n-        \/\/ int-TypeArrayKlass.\n-        _fillerArrayKlassObj = TypeArrayKlass::create_klass(T_INT, \"Ljdk\/internal\/vm\/FillerArray;\", CHECK);\n-        for (int i = T_BOOLEAN; i < T_LONG+1; i++) {\n-          _typeArrayKlassObjs[i] = TypeArrayKlass::create_klass((BasicType)i, CHECK);\n-        }\n-\n-        ClassLoaderData* null_cld = ClassLoaderData::the_null_class_loader_data();\n-\n-        _the_array_interfaces_array     = MetadataFactory::new_array<Klass*>(null_cld, 2, nullptr, CHECK);\n-        _the_empty_int_array            = MetadataFactory::new_array<int>(null_cld, 0, CHECK);\n-        _the_empty_short_array          = MetadataFactory::new_array<u2>(null_cld, 0, CHECK);\n-        _the_empty_method_array         = MetadataFactory::new_array<Method*>(null_cld, 0, CHECK);\n-        _the_empty_klass_array          = MetadataFactory::new_array<Klass*>(null_cld, 0, CHECK);\n-        _the_empty_instance_klass_array = MetadataFactory::new_array<InstanceKlass*>(null_cld, 0, CHECK);\n+    java_lang_Class::allocate_fixup_lists();\n+\n+    \/\/ determine base vtable size; without that we cannot create the array klasses\n+    compute_base_vtable_size();\n+\n+    if (!UseSharedSpaces) {\n+      \/\/ Initialization of the fillerArrayKlass must come before regular\n+      \/\/ int-TypeArrayKlass so that the int-Array mirror points to the\n+      \/\/ int-TypeArrayKlass.\n+      _fillerArrayKlassObj = TypeArrayKlass::create_klass(T_INT, \"Ljdk\/internal\/vm\/FillerArray;\", CHECK);\n+      for (int i = T_BOOLEAN; i < T_LONG+1; i++) {\n+        _typeArrayKlassObjs[i] = TypeArrayKlass::create_klass((BasicType)i, CHECK);\n@@ -354,0 +342,9 @@\n+\n+      ClassLoaderData* null_cld = ClassLoaderData::the_null_class_loader_data();\n+\n+      _the_array_interfaces_array     = MetadataFactory::new_array<Klass*>(null_cld, 2, nullptr, CHECK);\n+      _the_empty_int_array            = MetadataFactory::new_array<int>(null_cld, 0, CHECK);\n+      _the_empty_short_array          = MetadataFactory::new_array<u2>(null_cld, 0, CHECK);\n+      _the_empty_method_array         = MetadataFactory::new_array<Method*>(null_cld, 0, CHECK);\n+      _the_empty_klass_array          = MetadataFactory::new_array<Klass*>(null_cld, 0, CHECK);\n+      _the_empty_instance_klass_array = MetadataFactory::new_array<InstanceKlass*>(null_cld, 0, CHECK);\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":21,"deletions":24,"binary":false,"changes":45,"status":"modified"}]}