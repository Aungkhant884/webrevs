{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,0 +94,1 @@\n+        String runtimeRelocMsg = \"runtime archive relocation start\";\n@@ -96,0 +97,3 @@\n+        String archiveRelocPattern = \".*ArchiveRelocationMode == 1.*\";\n+        String unmapRgn1Pattern = \".*Unmapping region #1 at base 0x.*\";\n+        String unmapRgn0Pattern = \".*Unmapping region #0 at base 0x.*(MiscCode)\";\n@@ -126,6 +130,15 @@\n-                        output.shouldContain(runtimeMsg)\n-                              \/\/ Check that there are two of the following lines in\n-                              \/\/ the output. One for static archive and one for\n-                              \/\/ dynamic archive:\n-                              \/\/ Unmapping region #3 at base 0x<hex digits> (Bitmap)\n-                              .shouldMatchByLine(unmapPrefix, \"Hello World\", unmapPattern);\n+                        output.shouldContain(runtimeMsg);\n+                        try {\n+                            output.shouldContain(runtimeRelocMsg)\n+                                  \/\/ Check that there are two of the following lines in\n+                                  \/\/ the output. One for static archive and one for\n+                                  \/\/ dynamic archive:\n+                                  \/\/ Unmapping region #3 at base 0x<hex digits> (Bitmap)\n+                                  .shouldMatchByLine(unmapPrefix, \"Hello World\", unmapPattern);\n+                        } catch(java.lang.RuntimeException ex) {\n+                            \/\/ On Windows, sometimes the OS picks the same archive\n+                            \/\/ base address even with ArchiveRelcationMode=1. In\n+                            \/\/ this case, runtime relocation won't happen. Checking\n+                            \/\/ for \"Unmapping region #0\" messages instead.\n+                            output.shouldMatchByLine(archiveRelocPattern, unmapRgn1Pattern, unmapRgn0Pattern);\n+                        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/DynamicArchiveRelocationTest.java","additions":20,"deletions":7,"binary":false,"changes":27,"status":"modified"}]}