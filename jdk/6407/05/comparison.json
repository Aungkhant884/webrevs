{"files":[{"patch":"@@ -522,0 +522,1 @@\n+  Node *last_n = block->get_node(--sched_slot);\n@@ -604,0 +605,11 @@\n+    \/\/ If n is related to the last_n(last selected node)\n+    \/\/ and the latency of last_n is greater than 1, another node can be inserted between the n and last_n.\n+    if (last_n) {\n+      for (uint j = 0; j < n->req() ; j++) {\n+        if ((n->in(j) == last_n) && (n->latency(j) > 1)) { \/\/relate && latency is large\n+          n_choice = 1;\n+          break;\n+        }\n+      }\n+    }\n+\n","filename":"src\/hotspot\/share\/opto\/lcm.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2022, Loongson Technology Co. Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.Benchmark;\n+\n+public class InstructionScheduling {\n+\n+    public static final int N = 20000;\n+    public static final int Ival = 2;\n+    public static final double fval = 2.00;\n+    public static double[] D = new double[N];\n+    public static int[] I = new int[N];\n+\n+    @Benchmark\n+    public void testMethod() {\n+        for (int i = 0; i < N; i++) {\n+            D[i] += D[i] * fval;\n+            D[i] += D[i] \/ fval;\n+            I[i] += I[i] * Ival;\n+            I[i] += I[i] \/ Ival;\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/InstructionScheduling.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"}]}