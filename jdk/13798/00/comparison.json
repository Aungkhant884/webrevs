{"files":[{"patch":"@@ -185,0 +185,6 @@\n+                if (nanos > MILLISECONDS.toNanos(millis)) {\n+                    \/\/ Round up any excess nanos to the nearest millisecond. Avoids\n+                    \/\/ parking for less than requested, especially when poll is\n+                    \/\/ called with zero millis, which would return immediately.\n+                    millis++;\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/NioSocketImpl.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n@@ -93,0 +94,6 @@\n+                if (nanos > MILLISECONDS.toNanos(millis)) {\n+                    \/\/ Round up any excess nanos to the nearest millisecond. Avoids\n+                    \/\/ parking for less than requested, especially when poll is\n+                    \/\/ called with zero millis, which would return immediately.\n+                    millis++;\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SelChImpl.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}