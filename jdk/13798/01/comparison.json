{"files":[{"patch":"@@ -81,0 +81,3 @@\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n+import static java.util.concurrent.TimeUnit.NANOSECONDS;\n+\n@@ -500,1 +503,6 @@\n-                millis = TimeUnit.NANOSECONDS.toMillis(nanos);\n+                millis = NANOSECONDS.toMillis(nanos);\n+                if (nanos > MILLISECONDS.toNanos(millis)) {\n+                    \/\/ Round up any excess nanos to the nearest millisecond to\n+                    \/\/ avoid parking for less than requested.\n+                    millis++;\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/DatagramChannelImpl.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -185,0 +185,5 @@\n+                if (nanos > MILLISECONDS.toNanos(millis)) {\n+                    \/\/ Round up any excess nanos to the nearest millisecond to\n+                    \/\/ avoid parking for less than requested.\n+                    millis++;\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/NioSocketImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,0 +31,2 @@\n+\n+import static java.util.concurrent.TimeUnit.MILLISECONDS;\n@@ -93,0 +95,5 @@\n+                if (nanos > MILLISECONDS.toNanos(millis)) {\n+                    \/\/ Round up any excess nanos to the nearest millisecond to\n+                    \/\/ avoid parking for less than requested.\n+                    millis++;\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SelChImpl.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}