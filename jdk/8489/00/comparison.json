{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.util.Collections;\n@@ -35,1 +34,1 @@\n-     * adding a value, please set the inital capacity to exact number of items\n+     * adding a value, please set the initial capacity to exact number of items\n@@ -39,2 +38,2 @@\n-     private static final HashMap<Integer, Integer>  regularKeyCodesMap =\n-                                          new HashMap<Integer,Integer>(98, 1.0f);\n+     private static final HashMap<Integer, Integer> regularKeyCodesMap =\n+                                          new HashMap<>(98, 1.0f);\n@@ -47,2 +46,2 @@\n-                                                  new HashSet<Integer>(496, 1.0f);\n-     public static final int getExtendedKeyCodeForChar( int c ) {\n+                                                  new HashSet<>(496, 1.0f);\n+     public static int getExtendedKeyCodeForChar( int c ) {\n@@ -50,6 +49,3 @@\n-         int lc = Character.toLowerCase( c );\n-         if (regularKeyCodesMap.containsKey( c )) {\n-             if(regularKeyCodesMap.containsKey(uc)) {\n-                 return regularKeyCodesMap.get( uc );\n-             }\n-             return regularKeyCodesMap.get( c );\n+         Integer regularKeyCode = regularKeyCodesMap.get(c);\n+         if (regularKeyCode != null) {\n+             return regularKeyCodesMap.getOrDefault(uc, regularKeyCode);\n@@ -58,1 +54,0 @@\n-         lc += 0x01000000;\n@@ -61,1 +56,4 @@\n-         }else if (extendedKeyCodesSet.contains( lc )) {\n+         }\n+         int lc = Character.toLowerCase( c );\n+         lc += 0x01000000;\n+         if (extendedKeyCodesSet.contains( lc )) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/ExtendedKeyCodes.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"}]}