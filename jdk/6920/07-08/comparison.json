{"files":[{"patch":"@@ -1242,1 +1242,1 @@\n-      warning(\"AutoCreateSharedArchive is ignored because %s is a static archive\", archive_name);\n+     log_warning(cds)(\"AutoCreateSharedArchive is ignored because %s is a static archive\", archive_name);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -952,3 +952,1 @@\n-      if (AutoCreateSharedArchive) {\n-        AutoCreateSharedArchive = false;\n-      }\n+      AutoCreateSharedArchive = false;\n@@ -961,6 +959,3 @@\n-    if (AutoCreateSharedArchive) {\n-      AutoCreateSharedArchive = false;\n-    }\n-    if (DynamicDumpSharedSpaces) {\n-      DynamicDumpSharedSpaces = false;\n-    }\n+    \/\/ The base archive cannot be mapped. We cannot dump the dynamic shared archive.\n+    AutoCreateSharedArchive = false;\n+    DynamicDumpSharedSpaces = false;\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -60,1 +60,0 @@\n-#include \"runtime\/arguments.hpp\"\n@@ -508,3 +507,1 @@\n-    const char* archive_name =\n-       (ArchiveClassesAtExit != nullptr) ? ArchiveClassesAtExit : Arguments::GetSharedDynamicArchivePath();\n-    assert(archive_name != NULL, \"Must be already set\");\n+    assert(ArchiveClassesAtExit != NULL, \"Must be already set\");\n@@ -512,1 +509,1 @@\n-    DynamicArchive::dump(archive_name, thread);\n+    DynamicArchive::dump(ArchiveClassesAtExit, thread);\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}