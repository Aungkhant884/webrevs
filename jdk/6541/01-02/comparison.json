{"files":[{"patch":"@@ -55,0 +55,4 @@\n+    \/\/ VM builds without JVMCI like x86_32 call the bimorphic inlining trap just 'bimorphic'\n+    \/\/ while all the other builds with JVMCI call it 'bimorphic_or_optimized_type_check'.\n+    private static final boolean isJVMCISupported = WhiteBox.getWhiteBox().isJVMCISupportedByGC();\n+    private static final String bimorphicTrapName = isJVMCISupported ? \"bimorphic_or_optimized_type_check\" : \"bimorphic\";\n@@ -77,2 +81,2 @@\n-                           \"trapCount(bimorphic_or_optimized_type_check)=\" +\n-                           WB.getMethodTrapCount(uncommonTrap_m, \"bimorphic_or_optimized_type_check\") + \"\\n\" +\n+                           \"trapCount(\" + bimorphicTrapName + \")=\" +\n+                           WB.getMethodTrapCount(uncommonTrap_m, bimorphicTrapName) + \"\\n\" +\n@@ -81,2 +85,2 @@\n-                           \"globalDeoptCount(bimorphic_or_optimized_type_check)=\" +\n-                           WB.getDeoptCount(\"bimorphic_or_optimized_type_check\", null));\n+                           \"globalDeoptCount(\" + bimorphicTrapName + \")=\" +\n+                           WB.getDeoptCount(bimorphicTrapName, null));\n@@ -100,1 +104,1 @@\n-        Asserts.assertEQ(trapCountBimorphic, WB.getMethodTrapCount(uncommonTrap_m, \"bimorphic_or_optimized_type_check\"),\n+        Asserts.assertEQ(trapCountBimorphic, WB.getMethodTrapCount(uncommonTrap_m, bimorphicTrapName),\n@@ -106,2 +110,2 @@\n-        Asserts.assertEQ(deoptCountBimorphic, WB.getDeoptCount(\"bimorphic_or_optimized_type_check\", null),\n-                         \"Wrong number of bimorphic_or_optimized_type_checkdeoptimizations.\");\n+        Asserts.assertEQ(deoptCountBimorphic, WB.getDeoptCount(bimorphicTrapName, null),\n+                         \"Wrong number of \" + bimorphicTrapName + \"deoptimizations.\");\n","filename":"test\/hotspot\/jtreg\/compiler\/uncommontrap\/Decompile.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}