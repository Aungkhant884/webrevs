[{"commit":{"message":"Fix nit."},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java"}],"sha":"aad3a70f9125c15697d1a56dd7c5002acc6a00bb"},{"commit":{"message":"remove volatile"},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java"}],"sha":"8278537a1c9d6202ff0669563693b5eba99b063e"},{"commit":{"message":"David's fix - allow thread 2 to run first."},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java"}],"sha":"b2decdf2c98bfd511d4bd54a692109b5ba373cae"},{"commit":{"message":"Fix the logic some more. Wait for thread2 without being in the class loader locked region, and guard against spuriouss wakeups."},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/ClassLoadingThread.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java"}],"sha":"e24117fcb07846546f468b2c0443a07f2632f681"},{"commit":{"message":"Thanks Patricio"},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java"}],"sha":"d0089bb759fcbffc0676ed4c24cd5158c90016f9"},{"commit":{"message":"8295713: runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java fails intermittently on Windows"},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java"}],"sha":"6c4eced275a5705710eb7c5d9a05db8ca0d0cd5d"}]