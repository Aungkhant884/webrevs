{"files":[{"patch":"@@ -26,3 +26,2 @@\n-    private ClassLoader ldr1;\n-    private ClassLoader ldr2;\n-    private int which;\n+    private String className;\n+    private ClassLoader ldr;\n@@ -30,4 +29,3 @@\n-    public ClassLoadingThread(ClassLoader loader1, ClassLoader loader2, int i) {\n-        ldr1 = loader1;\n-        ldr2 = loader2;\n-        which = i;\n+    public ClassLoadingThread(String name, ClassLoader loader) {\n+        className = name;\n+        ldr = loader;\n@@ -53,5 +51,1 @@\n-       if (which == 0) {\n-           callForName(\"A\",ldr1);\n-       } else {\n-           callForName(\"C\", ldr2);\n-       }\n+       callForName(className, ldr);\n","filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/ClassLoadingThread.java","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -39,1 +39,2 @@\n-    private static Semaphore mainSync = null;\n+    private static Semaphore threadSync = null;\n+    private static volatile boolean dIsLoading = false;\n@@ -46,1 +47,0 @@\n-        int count;\n@@ -51,1 +51,0 @@\n-            this.count = 0;\n@@ -64,5 +63,8 @@\n-                    try {\n-                        ThreadPrint.println(\"Waiting for \" + name);\n-                        mainSync.acquire(); \/\/ wait until other thread gets here\n-                        wait(); \/\/ let the other thread have this lock.\n-                    } catch (InterruptedException ie) {}\n+                    threadSync.release();  \/\/ Let the other thread start\n+\n+                    ThreadPrint.println(\"Waiting for \" + name);\n+                    while (!dIsLoading) {  \/\/ guard against spurious wakeup\n+                        try {\n+                            wait(); \/\/ let the other thread have this lock.\n+                        } catch (InterruptedException ie) {}\n+                    }\n@@ -70,1 +72,2 @@\n-                    notify(); \/\/ reacquire lock when superclass loading is done\n+                    dIsLoading = true;\n+                    notify(); \/\/ notify lock when superclass loading is done\n@@ -88,1 +91,0 @@\n-        int count;\n@@ -93,1 +95,0 @@\n-            this.count = 0;\n@@ -105,3 +106,0 @@\n-                if (name.equals(\"C\")) {\n-                    mainSync.release();\n-                }\n@@ -134,1 +132,1 @@\n-        mainSync = new Semaphore(0);\n+        threadSync = new Semaphore(0);\n@@ -142,0 +140,2 @@\n+        threads[0] = new ClassLoadingThread(\"A\", ldr1);\n+        threads[1] = new ClassLoadingThread(\"C\", ldr2);\n@@ -143,1 +143,0 @@\n-            threads[i] = new ClassLoadingThread(ldr1, ldr2, i);\n@@ -147,0 +146,6 @@\n+            if (i == 0) {\n+                try {\n+                    \/\/ Wait for the first thread to get to the wait, before starting second thread.\n+                    threadSync.acquire();\n+                } catch (InterruptedException ie) {}\n+            }\n@@ -148,0 +153,1 @@\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/ParallelLoad\/SuperWait\/SuperWaitTest.java","additions":22,"deletions":16,"binary":false,"changes":38,"status":"modified"}]}