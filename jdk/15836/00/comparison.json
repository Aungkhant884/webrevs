{"files":[{"patch":"@@ -37,1 +37,0 @@\n-import jdk.internal.util.ByteArrayLittleEndian;\n@@ -39,1 +38,0 @@\n-import jdk.internal.vm.annotation.Stable;\n@@ -103,1 +101,1 @@\n-        int q, r;\n+        int q;\n@@ -114,2 +112,0 @@\n-            r = (q * 100) - i;\n-            i = q;\n@@ -117,1 +113,2 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair(r));\n+            writeDigitPair(buf, charPos, (q * 100) - i);\n+            i = q;\n@@ -123,1 +120,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair(-i));\n+            writeDigitPair(buf, charPos, -i);\n@@ -165,1 +162,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair((int)((q * 100) - i)));\n+            writeDigitPair(buf, charPos, (int)((q * 100) - i));\n@@ -175,1 +172,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair((q2 * 100) - i2));\n+            writeDigitPair(buf, charPos, (q2 * 100) - i2);\n@@ -182,1 +179,1 @@\n-            ByteArrayLittleEndian.setShort(buf, charPos, DecimalDigits.digitPair(-i2));\n+            writeDigitPair(buf, charPos, -i2);\n@@ -193,0 +190,6 @@\n+    private static void writeDigitPair(byte[] buf, int charPos, int value) {\n+        short pair = DecimalDigits.digitPair(value);\n+        buf[charPos] = (byte)(pair);\n+        buf[charPos + 1] = (byte)(pair >> 8);\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -60,12 +60,14 @@\n-    private static final short[] DIGITS = new short[] {\n-            0x3030, 0x3130, 0x3230, 0x3330, 0x3430, 0x3530, 0x3630, 0x3730, 0x3830, 0x3930,\n-            0x3031, 0x3131, 0x3231, 0x3331, 0x3431, 0x3531, 0x3631, 0x3731, 0x3831, 0x3931,\n-            0x3032, 0x3132, 0x3232, 0x3332, 0x3432, 0x3532, 0x3632, 0x3732, 0x3832, 0x3932,\n-            0x3033, 0x3133, 0x3233, 0x3333, 0x3433, 0x3533, 0x3633, 0x3733, 0x3833, 0x3933,\n-            0x3034, 0x3134, 0x3234, 0x3334, 0x3434, 0x3534, 0x3634, 0x3734, 0x3834, 0x3934,\n-            0x3035, 0x3135, 0x3235, 0x3335, 0x3435, 0x3535, 0x3635, 0x3735, 0x3835, 0x3935,\n-            0x3036, 0x3136, 0x3236, 0x3336, 0x3436, 0x3536, 0x3636, 0x3736, 0x3836, 0x3936,\n-            0x3037, 0x3137, 0x3237, 0x3337, 0x3437, 0x3537, 0x3637, 0x3737, 0x3837, 0x3937,\n-            0x3038, 0x3138, 0x3238, 0x3338, 0x3438, 0x3538, 0x3638, 0x3738, 0x3838, 0x3938,\n-            0x3039, 0x3139, 0x3239, 0x3339, 0x3439, 0x3539, 0x3639, 0x3739, 0x3839, 0x3939\n-    };\n+    private static final short[] DIGITS;\n+\n+    static {\n+        short[] digits = new short[10 * 10];\n+\n+        for (int i = 0; i < 10; i++) {\n+            short hi = (short) (i + '0');\n+            for (int j = 0; j < 10; j++) {\n+                short lo = (short) ((j + '0') << 8);\n+                digits[i * 10 + j] = (short) (hi | lo);\n+            }\n+        }\n+        DIGITS = digits;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/DecimalDigits.java","additions":14,"deletions":12,"binary":false,"changes":26,"status":"modified"}]}