{"files":[{"patch":"@@ -123,1 +123,1 @@\n-    static abstract class NonNullMXBeanMapping extends MXBeanMapping {\n+    abstract static class NonNullMXBeanMapping extends MXBeanMapping {\n@@ -939,1 +939,1 @@\n-    private static abstract class CompositeBuilder {\n+    private abstract static class CompositeBuilder {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/DefaultMXBeanMappingFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    final public static boolean ALLOW_NONPUBLIC_MBEAN;\n+    public static final boolean ALLOW_NONPUBLIC_MBEAN;\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/Introspector.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    final private static String[] attributeNames = new String[] {\n+    private static final String[] attributeNames = new String[] {\n@@ -109,1 +109,1 @@\n-    final public ObjectName preRegister (MBeanServer server, ObjectName name)\n+    public final ObjectName preRegister (MBeanServer server, ObjectName name)\n@@ -115,1 +115,1 @@\n-    final public void postRegister (Boolean registrationDone) {\n+    public final void postRegister (Boolean registrationDone) {\n@@ -118,1 +118,1 @@\n-    final public void preDeregister()\n+    public final void preDeregister()\n@@ -124,1 +124,1 @@\n-    final public void postDeregister() {\n+    public final void postDeregister() {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanServerDelegateImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-    private static abstract class Handler {\n+    private abstract static class Handler {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MXBeanProxy.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-    abstract protected NotificationResult fetchNotifs(long clientSequenceNumber,\n+    protected abstract NotificationResult fetchNotifs(long clientSequenceNumber,\n@@ -154,1 +154,1 @@\n-    abstract protected Integer addListenerForMBeanRemovedNotif()\n+    protected abstract Integer addListenerForMBeanRemovedNotif()\n@@ -157,1 +157,1 @@\n-    abstract protected void removeListenerForMBeanRemovedNotif(Integer id)\n+    protected abstract void removeListenerForMBeanRemovedNotif(Integer id)\n@@ -164,1 +164,1 @@\n-    abstract protected void lostNotifs(String message, long number);\n+    protected abstract void lostNotifs(String message, long number);\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/internal\/ClientNotifForwarder.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-final public class HashedPasswordManager {\n+public final class HashedPasswordManager {\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/HashedPasswordManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -358,1 +358,1 @@\n-    public synchronized static\n+    public static synchronized\n","filename":"src\/java.management\/share\/classes\/javax\/management\/MBeanServerFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -354,1 +354,1 @@\n-    static final private Property[] _Empty_property_array = new Property[0];\n+    private static final Property[] _Empty_property_array = new Property[0];\n","filename":"src\/java.management\/share\/classes\/javax\/management\/ObjectName.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,1 +147,1 @@\n-    final private AccessControlContext acc = AccessController.getContext();\n+    private final AccessControlContext acc = AccessController.getContext();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/RequiredModelMBean.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-    final private Map<Integer,Object[]> timerTable =\n+    private final Map<Integer,Object[]> timerTable =\n@@ -165,1 +165,1 @@\n-    volatile private int counterID = 0;\n+    private volatile int counterID = 0;\n","filename":"src\/java.management\/share\/classes\/javax\/management\/timer\/Timer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    native static void setVerboseClass(boolean value);\n+    static native void setVerboseClass(boolean value);\n","filename":"src\/java.management\/share\/classes\/sun\/management\/ClassLoadingImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -196,1 +196,1 @@\n-    abstract public MBeanNotificationInfo[] getNotificationInfo();\n+    public abstract MBeanNotificationInfo[] getNotificationInfo();\n","filename":"src\/java.management\/share\/classes\/sun\/management\/NotificationEmitterSupport.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,2 +68,2 @@\n-    private native static String getVersion0();\n-    private native static void initOptionalSupportFields();\n+    private static native String getVersion0();\n+    private static native void initOptionalSupportFields();\n","filename":"src\/java.management\/share\/classes\/sun\/management\/VMManagementImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-    private final static String PROTOCOL_VERSION = \"1\";\n+    private static final String PROTOCOL_VERSION = \"1\";\n@@ -141,1 +141,1 @@\n-    private final static int ATTACH_ERROR_BADVERSION = 101;\n+    private static final int ATTACH_ERROR_BADVERSION = 101;\n","filename":"src\/jdk.attach\/aix\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    private final static String PROTOCOL_VERSION = \"1\";\n+    private static final String PROTOCOL_VERSION = \"1\";\n@@ -145,1 +145,1 @@\n-    private final static int ATTACH_ERROR_BADVERSION = 101;\n+    private static final int ATTACH_ERROR_BADVERSION = 101;\n","filename":"src\/jdk.attach\/linux\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-    private final static String PROTOCOL_VERSION = \"1\";\n+    private static final String PROTOCOL_VERSION = \"1\";\n@@ -141,1 +141,1 @@\n-    private final static int ATTACH_ERROR_BADVERSION = 101;\n+    private static final int ATTACH_ERROR_BADVERSION = 101;\n","filename":"src\/jdk.attach\/macosx\/classes\/sun\/tools\/attach\/VirtualMachineImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-  public static abstract class OopTypes {\n+  public abstract static class OopTypes {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/compiler\/OopMapValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    private native static void init0()\n+    private static native void init0()\n@@ -111,1 +111,1 @@\n-    public native static int  getAddressSize() ;\n+    public static native int  getAddressSize() ;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/bsd\/BsdDebuggerLocal.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-final public class BsdAARCH64CFrame extends BasicCFrame {\n+public final class BsdAARCH64CFrame extends BasicCFrame {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/bsd\/aarch64\/BsdAARCH64CFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-final public class BsdAMD64CFrame extends BasicCFrame {\n+public final class BsdAMD64CFrame extends BasicCFrame {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/bsd\/amd64\/BsdAMD64CFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-final public class BsdX86CFrame extends BasicCFrame {\n+public final class BsdX86CFrame extends BasicCFrame {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/bsd\/x86\/BsdX86CFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    private native static void init0()\n+    private static native void init0()\n@@ -118,1 +118,1 @@\n-    public native static int  getAddressSize() ;\n+    public static native int  getAddressSize() ;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/linux\/LinuxDebuggerLocal.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-final public class LinuxAARCH64CFrame extends BasicCFrame {\n+public final class LinuxAARCH64CFrame extends BasicCFrame {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/linux\/aarch64\/LinuxAARCH64CFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-final public class LinuxAMD64CFrame extends BasicCFrame {\n+public final class LinuxAMD64CFrame extends BasicCFrame {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/linux\/amd64\/LinuxAMD64CFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-final public class LinuxPPC64CFrame extends BasicCFrame {\n+public final class LinuxPPC64CFrame extends BasicCFrame {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/linux\/ppc64\/LinuxPPC64CFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-final public class LinuxX86CFrame extends BasicCFrame {\n+public final class LinuxX86CFrame extends BasicCFrame {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/linux\/x86\/LinuxX86CFrame.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    static private long hrmFieldOffset;\n+    private static long hrmFieldOffset;\n@@ -53,1 +53,1 @@\n-    static private long g1ReservedFieldOffset;\n+    private static long g1ReservedFieldOffset;\n@@ -55,1 +55,1 @@\n-    static private CIntegerField summaryBytesUsedField;\n+    private static CIntegerField summaryBytesUsedField;\n@@ -57,1 +57,1 @@\n-    static private AddressField monitoringSupportField;\n+    private static AddressField monitoringSupportField;\n@@ -59,1 +59,1 @@\n-    static private long oldSetFieldOffset;\n+    private static long oldSetFieldOffset;\n@@ -61,1 +61,1 @@\n-    static private long archiveSetFieldOffset;\n+    private static long archiveSetFieldOffset;\n@@ -63,1 +63,1 @@\n-    static private long humongousSetFieldOffset;\n+    private static long humongousSetFieldOffset;\n@@ -73,1 +73,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/G1CollectedHeap.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    static private AddressField baseField;\n+    private static AddressField baseField;\n@@ -47,1 +47,1 @@\n-    static private CIntegerField lengthField;\n+    private static CIntegerField lengthField;\n@@ -49,1 +49,1 @@\n-    static private AddressField biasedBaseField;\n+    private static AddressField biasedBaseField;\n@@ -51,1 +51,1 @@\n-    static private CIntegerField biasField;\n+    private static CIntegerField biasField;\n@@ -53,1 +53,1 @@\n-    static private CIntegerField shiftByField;\n+    private static CIntegerField shiftByField;\n@@ -63,1 +63,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/G1HeapRegionTable.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    static private CIntegerField edenSpaceCommittedField;\n+    private static CIntegerField edenSpaceCommittedField;\n@@ -43,1 +43,1 @@\n-    static private CIntegerField edenSpaceUsedField;\n+    private static CIntegerField edenSpaceUsedField;\n@@ -45,1 +45,1 @@\n-    static private CIntegerField survivorSpaceCommittedField;\n+    private static CIntegerField survivorSpaceCommittedField;\n@@ -47,1 +47,1 @@\n-    static private CIntegerField survivorSpaceUsedField;\n+    private static CIntegerField survivorSpaceUsedField;\n@@ -49,1 +49,1 @@\n-    static private CIntegerField oldGenCommittedField;\n+    private static CIntegerField oldGenCommittedField;\n@@ -51,1 +51,1 @@\n-    static private CIntegerField oldGenUsedField;\n+    private static CIntegerField oldGenUsedField;\n@@ -61,1 +61,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/G1MonitoringSupport.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    static private AddressField topField;\n+    private static AddressField topField;\n@@ -53,1 +53,1 @@\n-    static private CIntegerField grainBytesField;\n+    private static CIntegerField grainBytesField;\n@@ -67,1 +67,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n@@ -81,1 +81,1 @@\n-    static public long grainBytes() {\n+    public static long grainBytes() {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/HeapRegion.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    static private long regionsFieldOffset;\n+    private static long regionsFieldOffset;\n@@ -54,1 +54,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/HeapRegionManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    static private CIntegerField lengthField;\n+    private static CIntegerField lengthField;\n@@ -55,1 +55,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/HeapRegionSetBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-abstract public class GenCollectedHeap extends CollectedHeap {\n+public abstract class GenCollectedHeap extends CollectedHeap {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/GenCollectedHeap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,5 +45,5 @@\n-    static private CIntegerField numRegions;\n-    static private CIntegerField used;\n-    static private CIntegerField committed;\n-    static private AddressField  regions;\n-    static private CIntegerField logMinObjAlignmentInBytes;\n+    private static CIntegerField numRegions;\n+    private static CIntegerField used;\n+    private static CIntegerField committed;\n+    private static AddressField  regions;\n+    private static CIntegerField logMinObjAlignmentInBytes;\n@@ -51,1 +51,1 @@\n-    static private long regionPtrFieldSize;\n+    private static long regionPtrFieldSize;\n@@ -60,1 +60,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shenandoah\/ShenandoahHeap.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shenandoah\/ShenandoahHeapRegion.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZAttachedArrayForForwarding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZForwarding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZForwardingEntry.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZForwardingTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZGlobals.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZGlobalsForVMStructs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZGranuleMapForForwarding.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZGranuleMapForPageTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZPage.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZPageAllocator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZPageTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZRelocate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    static private synchronized void initialize(TypeDataBase db) {\n+    private static synchronized void initialize(TypeDataBase db) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZVirtualMemory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -480,1 +480,1 @@\n-  final private static String[] nameForTag = new String[] {\n+  private static final String[] nameForTag = new String[] {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ConstantPool.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-  static public int computeSizeInBytes(int cellCount) {\n+  public static int computeSizeInBytes(int cellCount) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/DataLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-abstract public class DefaultMetadataVisitor implements MetadataVisitor {\n+public abstract class DefaultMetadataVisitor implements MetadataVisitor {\n@@ -49,1 +49,1 @@\n-  abstract public void doMetadata(MetadataField field, boolean isVMField);\n+  public abstract void doMetadata(MetadataField field, boolean isVMField);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/DefaultMetadataVisitor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-abstract public class Metadata extends VMObject {\n+public abstract class Metadata extends VMObject {\n@@ -89,1 +89,1 @@\n-  abstract public void printValueOn(PrintStream tty);\n+  public abstract void printValueOn(PrintStream tty);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/Metadata.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -334,1 +334,1 @@\n-  static public int extraNbCells(DataLayout dataLayout) {\n+  public static int extraNbCells(DataLayout dataLayout) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/MethodData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-  static public int typeIndex(int i) {\n+  public static int typeIndex(int i) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ParametersTypeData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  static public int methodIndex() {\n+  public static int methodIndex() {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/SpeculativeTrapData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  static private AddressField nameField;\n+  private static AddressField nameField;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/opto\/CallRuntimeNode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  static private AddressField nameField;\n+  private static AddressField nameField;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/opto\/CallStaticJavaNode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-  static abstract class Instantiator {\n+  abstract static class Instantiator {\n@@ -81,1 +81,1 @@\n-  static public Node create(Address addr) {\n+  public static Node create(Address addr) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/opto\/Node.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-abstract public class InstanceConstructor<T> {\n+public abstract class InstanceConstructor<T> {\n@@ -45,1 +45,1 @@\n-  abstract public T instantiateWrapperFor(Address addr) throws WrongTypeException;\n+  public abstract T instantiateWrapperFor(Address addr) throws WrongTypeException;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/InstanceConstructor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -655,1 +655,1 @@\n-  static public long getAddressValue(Address addr) {\n+  public static long getAddressValue(Address addr) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/VM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -121,1 +121,1 @@\n-    static private void writeShort(byte[] buf, int index, short value) {\n+    private static void writeShort(byte[] buf, int index, short value) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/jcore\/ByteCodeRewriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n-  final private Address addr;\n-  final private Type type;\n+  private final Address addr;\n+  private final Type type;\n@@ -68,2 +68,2 @@\n-    final private Field field;\n-    final private Type holder;\n+    private final Field field;\n+    private final Type holder;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/tree\/CTypeTreeNodeAdapter.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-    abstract protected int calculateOopDumpRecordSize(Oop oop) throws IOException;\n+    protected abstract int calculateOopDumpRecordSize(Oop oop) throws IOException;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/AbstractHeapGraphWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-final public class JInfo {\n+public final class JInfo {\n","filename":"src\/jdk.jcmd\/share\/classes\/sun\/tools\/jinfo\/JInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-    static abstract class XOpenTypeData extends JTable {\n+    abstract static class XOpenTypeData extends JTable {\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/inspector\/XOpenTypeViewer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    static public synchronized VirtualMachineManager virtualMachineManager() {\n+    public static synchronized VirtualMachineManager virtualMachineManager() {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/Bootstrap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-    public static abstract class Capabilities {\n+    public abstract static class Capabilities {\n@@ -239,1 +239,1 @@\n-    public static abstract class ListenKey {\n+    public abstract static class ListenKey {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/jdi\/connect\/spi\/TransportService.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-  final public void Type() throws ParseException {\n+  public final void Type() throws ParseException {\n@@ -155,1 +155,1 @@\n-  final public void PrimitiveType() throws ParseException {\n+  public final void PrimitiveType() throws ParseException {\n@@ -188,1 +188,1 @@\n-  final public String Name() throws ParseException {\n+  public final String Name() throws ParseException {\n@@ -207,1 +207,1 @@\n-  final public void NameList() throws ParseException {\n+  public final void NameList() throws ParseException {\n@@ -227,1 +227,1 @@\n-  final public void Expression() throws ParseException {\n+  public final void Expression() throws ParseException {\n@@ -260,1 +260,1 @@\n-  final public void Assignment() throws ParseException {\n+  public final void Assignment() throws ParseException {\n@@ -267,1 +267,1 @@\n-  final public void AssignmentOperator() throws ParseException {\n+  public final void AssignmentOperator() throws ParseException {\n@@ -312,1 +312,1 @@\n-  final public void ConditionalExpression() throws ParseException {\n+  public final void ConditionalExpression() throws ParseException {\n@@ -335,1 +335,1 @@\n-  final public void ConditionalOrExpression() throws ParseException {\n+  public final void ConditionalOrExpression() throws ParseException {\n@@ -353,1 +353,1 @@\n-  final public void ConditionalAndExpression() throws ParseException {\n+  public final void ConditionalAndExpression() throws ParseException {\n@@ -371,1 +371,1 @@\n-  final public void InclusiveOrExpression() throws ParseException {\n+  public final void InclusiveOrExpression() throws ParseException {\n@@ -389,1 +389,1 @@\n-  final public void ExclusiveOrExpression() throws ParseException {\n+  public final void ExclusiveOrExpression() throws ParseException {\n@@ -407,1 +407,1 @@\n-  final public void AndExpression() throws ParseException {\n+  public final void AndExpression() throws ParseException {\n@@ -425,1 +425,1 @@\n-  final public void EqualityExpression() throws ParseException {\n+  public final void EqualityExpression() throws ParseException {\n@@ -457,1 +457,1 @@\n-  final public void InstanceOfExpression() throws ParseException {\n+  public final void InstanceOfExpression() throws ParseException {\n@@ -471,1 +471,1 @@\n-  final public void RelationalExpression() throws ParseException {\n+  public final void RelationalExpression() throws ParseException {\n@@ -511,1 +511,1 @@\n-  final public void ShiftExpression() throws ParseException {\n+  public final void ShiftExpression() throws ParseException {\n@@ -545,1 +545,1 @@\n-  final public void AdditiveExpression() throws ParseException {\n+  public final void AdditiveExpression() throws ParseException {\n@@ -577,1 +577,1 @@\n-  final public void MultiplicativeExpression() throws ParseException {\n+  public final void MultiplicativeExpression() throws ParseException {\n@@ -613,1 +613,1 @@\n-  final public void UnaryExpression() throws ParseException {\n+  public final void UnaryExpression() throws ParseException {\n@@ -662,1 +662,1 @@\n-  final public void PreIncrementExpression() throws ParseException {\n+  public final void PreIncrementExpression() throws ParseException {\n@@ -668,1 +668,1 @@\n-  final public void PreDecrementExpression() throws ParseException {\n+  public final void PreDecrementExpression() throws ParseException {\n@@ -674,1 +674,1 @@\n-  final public void UnaryExpressionNotPlusMinus() throws ParseException {\n+  public final void UnaryExpressionNotPlusMinus() throws ParseException {\n@@ -726,1 +726,1 @@\n-  final public void CastLookahead() throws ParseException {\n+  public final void CastLookahead() throws ParseException {\n@@ -786,1 +786,1 @@\n-  final public void PostfixExpression() throws ParseException {\n+  public final void PostfixExpression() throws ParseException {\n@@ -811,1 +811,1 @@\n-  final public void CastExpression() throws ParseException {\n+  public final void CastExpression() throws ParseException {\n@@ -859,1 +859,1 @@\n-  final public void PrimaryExpression() throws ParseException {\n+  public final void PrimaryExpression() throws ParseException {\n@@ -877,1 +877,1 @@\n-  final public void PrimaryPrefix() throws ParseException {\n+  public final void PrimaryPrefix() throws ParseException {\n@@ -918,1 +918,1 @@\n-  final public void PrimarySuffix() throws ParseException {\n+  public final void PrimarySuffix() throws ParseException {\n@@ -944,1 +944,1 @@\n-  final public void Literal() throws ParseException {\n+  public final void Literal() throws ParseException {\n@@ -978,1 +978,1 @@\n-  final public void BooleanLiteral() throws ParseException {\n+  public final void BooleanLiteral() throws ParseException {\n@@ -993,1 +993,1 @@\n-  final public void NullLiteral() throws ParseException {\n+  public final void NullLiteral() throws ParseException {\n@@ -997,1 +997,1 @@\n-  final public List<Value> Arguments() throws ParseException {\n+  public final List<Value> Arguments() throws ParseException {\n@@ -1030,1 +1030,1 @@\n-  final public void ArgumentList(List<Value> argList) throws ParseException {\n+  public final void ArgumentList(List<Value> argList) throws ParseException {\n@@ -1049,1 +1049,1 @@\n-  final public void AllocationExpression() throws ParseException {\n+  public final void AllocationExpression() throws ParseException {\n@@ -1087,1 +1087,1 @@\n-  final public void ArrayDimensions() throws ParseException {\n+  public final void ArrayDimensions() throws ParseException {\n@@ -2053,5 +2053,5 @@\n-  final private int[] jj_la1 = new int[44];\n-  static private int[] jj_la1_0;\n-  static private int[] jj_la1_1;\n-  static private int[] jj_la1_2;\n-  static private int[] jj_la1_3;\n+  private final int[] jj_la1 = new int[44];\n+  private static int[] jj_la1_0;\n+  private static int[] jj_la1_1;\n+  private static int[] jj_la1_2;\n+  private static int[] jj_la1_3;\n@@ -2076,1 +2076,1 @@\n-  final private JJCalls[] jj_2_rtns = new JJCalls[9];\n+  private final JJCalls[] jj_2_rtns = new JJCalls[9];\n@@ -2177,2 +2177,2 @@\n-  static private final class LookaheadSuccess extends java.lang.Error { }\n-  final private LookaheadSuccess jj_ls = new LookaheadSuccess();\n+  private static final class LookaheadSuccess extends java.lang.Error { }\n+  private final LookaheadSuccess jj_ls = new LookaheadSuccess();\n@@ -2202,1 +2202,1 @@\n-  final public Token getNextToken() {\n+  public final Token getNextToken() {\n@@ -2211,1 +2211,1 @@\n-  final public Token getToken(int index) {\n+  public final Token getToken(int index) {\n@@ -2302,1 +2302,1 @@\n-  final public void enable_tracing() {\n+  public final void enable_tracing() {\n@@ -2306,1 +2306,1 @@\n-  final public void disable_tracing() {\n+  public final void disable_tracing() {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/expr\/ExpressionParser.java","additions":48,"deletions":48,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-    static private List<String> excludes() {\n+    private static List<String> excludes() {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/Env.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -307,1 +307,1 @@\n-    static private boolean isPreviousCharWhitespace(char[] arr, int curr_pos) {\n+    private static boolean isPreviousCharWhitespace(char[] arr, int curr_pos) {\n@@ -311,1 +311,1 @@\n-    static private boolean isNextCharWhitespace(char[] arr, int curr_pos) {\n+    private static boolean isNextCharWhitespace(char[] arr, int curr_pos) {\n@@ -315,1 +315,1 @@\n-    static private boolean isCharWhitespace(char[] arr, int pos) {\n+    private static boolean isCharWhitespace(char[] arr, int pos) {\n@@ -326,1 +326,1 @@\n-    static private boolean isLastChar(char[] arr, int pos) {\n+    private static boolean isLastChar(char[] arr, int pos) {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/example\/debug\/tty\/VMConnection.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    abstract public VirtualMachine\n+    public abstract VirtualMachine\n@@ -54,1 +54,1 @@\n-    abstract public String name();\n+    public abstract String name();\n@@ -56,1 +56,1 @@\n-    abstract public String description();\n+    public abstract String description();\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/AbstractLauncher.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-final public class ClassTypeImpl extends InvokableTypeImpl\n+public final class ClassTypeImpl extends InvokableTypeImpl\n@@ -49,1 +49,1 @@\n-        final private JDWP.ClassType.InvokeMethod rslt;\n+        private final JDWP.ClassType.InvokeMethod rslt;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ClassTypeImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    static private class SoftLocationXRefs {\n+    private static class SoftLocationXRefs {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ConcreteMethodImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-final public class InterfaceTypeImpl extends InvokableTypeImpl\n+public final class InterfaceTypeImpl extends InvokableTypeImpl\n@@ -43,1 +43,1 @@\n-        final private JDWP.InterfaceType.InvokeMethod rslt;\n+        private final JDWP.InterfaceType.InvokeMethod rslt;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/InterfaceTypeImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-    final public Value invokeMethod(ThreadReference threadIntf, Method methodIntf,\n+    public final Value invokeMethod(ThreadReference threadIntf, Method methodIntf,\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/InvokableTypeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,3 +31,3 @@\n-    public final static short NoFlags = 0x0;\n-    public final static short Reply = 0x80;\n-    public final static short ReplyNoError = 0x0;\n+    public static final short NoFlags = 0x0;\n+    public static final short Reply = 0x80;\n+    public static final short ReplyNoError = 0x0;\n@@ -36,1 +36,1 @@\n-    final static byte[] nullData = new byte[0];\n+    static final byte[] nullData = new byte[0];\n@@ -124,1 +124,1 @@\n-    static synchronized private int uniqID() {\n+    private static synchronized int uniqID() {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/Packet.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -42,8 +42,8 @@\n-    abstract public boolean booleanValue();\n-    abstract public byte byteValue();\n-    abstract public char charValue();\n-    abstract public short shortValue();\n-    abstract public int intValue();\n-    abstract public long longValue();\n-    abstract public float floatValue();\n-    abstract public double doubleValue();\n+    public abstract boolean booleanValue();\n+    public abstract byte byteValue();\n+    public abstract char charValue();\n+    public abstract short shortValue();\n+    public abstract int intValue();\n+    public abstract long longValue();\n+    public abstract float floatValue();\n+    public abstract double doubleValue();\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/PrimitiveValueImpl.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -41,3 +41,3 @@\n-    static private final String ARG_COMMAND = \"command\";\n-    static private final String ARG_ADDRESS = \"address\";\n-    static private final String ARG_QUOTE   = \"quote\";\n+    private static final String ARG_COMMAND = \"command\";\n+    private static final String ARG_ADDRESS = \"address\";\n+    private static final String ARG_QUOTE   = \"quote\";\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/RawCommandLineLauncher.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -568,1 +568,1 @@\n-    abstract public List<Method> allMethods();\n+    public abstract List<Method> allMethods();\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ReferenceTypeImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,6 +43,6 @@\n-    static private final String ARG_HOME = \"home\";\n-    static private final String ARG_OPTIONS = \"options\";\n-    static private final String ARG_MAIN = \"main\";\n-    static private final String ARG_INIT_SUSPEND = \"suspend\";\n-    static private final String ARG_QUOTE = \"quote\";\n-    static private final String ARG_VM_EXEC = \"vmexec\";\n+    private static final String ARG_HOME = \"home\";\n+    private static final String ARG_OPTIONS = \"options\";\n+    private static final String ARG_MAIN = \"main\";\n+    private static final String ARG_INIT_SUSPEND = \"suspend\";\n+    private static final String ARG_QUOTE = \"quote\";\n+    private static final String ARG_VM_EXEC = \"vmexec\";\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/SunCommandLineLauncher.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -55,2 +55,2 @@\n-    static private final int OVERLOADED_QUEUE = 10000;\n-    static private final int UNDERLOADED_QUEUE = 100;\n+    private static final int OVERLOADED_QUEUE = 10000;\n+    private static final int UNDERLOADED_QUEUE = 100;\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/TargetVM.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -410,1 +410,1 @@\n-    synchronized private List<StackFrame> privateFrames(int start, int length)\n+    private synchronized List<StackFrame> privateFrames(int start, int length)\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ThreadReferenceImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-abstract public class TypeComponentImpl extends MirrorImpl\n+public abstract class TypeComponentImpl extends MirrorImpl\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/TypeComponentImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-    static private final int DISPOSE_THRESHOLD = 50;\n+    private static final int DISPOSE_THRESHOLD = 50;\n@@ -1551,1 +1551,1 @@\n-   static private class SoftObjectReference extends SoftReference<ObjectReferenceImpl> {\n+   private static class SoftObjectReference extends SoftReference<ObjectReferenceImpl> {\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/VirtualMachineImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    private static abstract class StatusCollector {\n+    private abstract static class StatusCollector {\n@@ -96,2 +96,2 @@\n-        final protected StringBuilder sb = new StringBuilder();\n-        final public String collect() {\n+        protected final StringBuilder sb = new StringBuilder();\n+        public final String collect() {\n@@ -172,9 +172,9 @@\n-        abstract protected void addAgentStatus(boolean enabled);\n-        abstract protected void appendConnectionsHeader();\n-        abstract protected void appendConnectionsFooter();\n-        abstract protected void addConnectionDetails(JMXServiceURL u);\n-        abstract protected void appendConnectionHeader(boolean remote);\n-        abstract protected void appendConnectionFooter(boolean remote);\n-        abstract protected void appendConfigPropsHeader();\n-        abstract protected void appendConfigPropsFooter();\n-        abstract protected void addConfigProp(Map.Entry<?, ?> prop);\n+        protected abstract void addAgentStatus(boolean enabled);\n+        protected abstract void appendConnectionsHeader();\n+        protected abstract void appendConnectionsFooter();\n+        protected abstract void addConnectionDetails(JMXServiceURL u);\n+        protected abstract void appendConnectionHeader(boolean remote);\n+        protected abstract void appendConnectionFooter(boolean remote);\n+        protected abstract void appendConfigPropsHeader();\n+        protected abstract void appendConfigPropsFooter();\n+        protected abstract void addConfigProp(Map.Entry<?, ?> prop);\n@@ -186,1 +186,1 @@\n-    final private static class TextStatusCollector extends StatusCollector {\n+    private static final class TextStatusCollector extends StatusCollector {\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/Agent.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    public final static String UUID_KEY = \"DISCOVERABLE_SESSION_UUID\";\n+    public static final String UUID_KEY = \"DISCOVERABLE_SESSION_UUID\";\n@@ -58,1 +58,1 @@\n-    public final static String MAIN_CLASS_KEY = \"MAIN_CLASS\";\n+    public static final String MAIN_CLASS_KEY = \"MAIN_CLASS\";\n@@ -62,1 +62,1 @@\n-    public final static String JMX_SERVICE_URL_KEY = \"JMX_SERVICE_URL\";\n+    public static final String JMX_SERVICE_URL_KEY = \"JMX_SERVICE_URL\";\n@@ -66,1 +66,1 @@\n-    public final static String INSTANCE_NAME_KEY = \"INSTANCE_NAME\";\n+    public static final String INSTANCE_NAME_KEY = \"INSTANCE_NAME\";\n@@ -70,1 +70,1 @@\n-    public final static String PROCESS_ID_KEY = \"PROCESS_ID\";\n+    public static final String PROCESS_ID_KEY = \"PROCESS_ID\";\n@@ -75,1 +75,1 @@\n-    public final static String RMI_HOSTNAME_KEY = \"RMI_HOSTNAME\";\n+    public static final String RMI_HOSTNAME_KEY = \"RMI_HOSTNAME\";\n@@ -79,1 +79,1 @@\n-    public final static String BROADCAST_INTERVAL_KEY = \"BROADCAST_INTERVAL\";\n+    public static final String BROADCAST_INTERVAL_KEY = \"BROADCAST_INTERVAL\";\n","filename":"src\/jdk.management.agent\/share\/classes\/sun\/management\/jdp\/JdpJmxPacket.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -338,1 +338,1 @@\n-    private final static String notifName =\n+    private static final String notifName =\n@@ -341,1 +341,1 @@\n-    private final static String[] diagFramNotifTypes = {\n+    private static final String[] diagFramNotifTypes = {\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/DiagnosticCommandImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    private final static String notifName =\n+    private static final String notifName =\n@@ -76,1 +76,1 @@\n-    private final static String[] gcNotifTypes = {\n+    private static final String[] gcNotifTypes = {\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/GarbageCollectorExtImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    final static String DIAGNOSTIC_COMMAND_MBEAN_NAME =\n+    static final String DIAGNOSTIC_COMMAND_MBEAN_NAME =\n","filename":"src\/jdk.management\/share\/classes\/com\/sun\/management\/internal\/PlatformMBeanProviderImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}