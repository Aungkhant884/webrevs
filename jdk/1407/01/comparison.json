{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -183,1 +183,2 @@\n-    private Attributes doRead(DataInput in) throws IOException {\n+    private Attributes doRead(DataInput input) throws IOException {\n+        var in = new CountingDataInput(input);\n@@ -246,1 +247,1 @@\n-            switch (attribute_name) {\n+            long initialPosition = in.count();\n@@ -248,0 +249,1 @@\n+            switch (attribute_name) {\n@@ -283,0 +285,1 @@\n+            }\n@@ -284,0 +287,5 @@\n+            long newPosition = in.count();\n+            if ((newPosition - initialPosition) != length) {\n+                \/\/ attribute length does not match actual attribute size\n+                throw invalidModuleDescriptor(\"Attribute \" + attribute_name\n+                        + \" does not match its expected length\");\n@@ -285,0 +293,1 @@\n+\n@@ -1082,0 +1091,116 @@\n+    \/**\n+     * A DataInput implementation that reads from another DataInput and counts\n+     * the number of bytes read.\n+     *\/\n+    private static class CountingDataInput implements DataInput {\n+        private final DataInput delegate;\n+        private long count;\n+\n+        CountingDataInput(DataInput delegate) {\n+            this.delegate = delegate;\n+        }\n+\n+        long count() {\n+            return count;\n+        }\n+\n+        @Override\n+        public void readFully(byte b[]) throws IOException {\n+            delegate.readFully(b, 0, b.length);\n+            count += b.length;\n+        }\n+\n+        @Override\n+        public void readFully(byte b[], int off, int len) throws IOException {\n+            delegate.readFully(b, off, len);\n+            count += len;\n+        }\n+\n+        @Override\n+        public int skipBytes(int n) throws IOException {\n+            int skip = delegate.skipBytes(n);\n+            count += skip;\n+            return skip;\n+        }\n+\n+        @Override\n+        public boolean readBoolean() throws IOException {\n+            boolean b = delegate.readBoolean();\n+            count++;\n+            return b;\n+        }\n+\n+        @Override\n+        public byte readByte() throws IOException {\n+            byte b = delegate.readByte();\n+            count++;\n+            return b;\n+        }\n+\n+        @Override\n+        public int readUnsignedByte() throws IOException {\n+            int i = delegate.readUnsignedByte();\n+            count++;\n+            return i;\n+        }\n+\n+        @Override\n+        public short readShort() throws IOException {\n+            short s = delegate.readShort();\n+            count += 2;\n+            return s;\n+        }\n+\n+        @Override\n+        public int readUnsignedShort() throws IOException {\n+            int s = delegate.readUnsignedShort();\n+            count += 2;\n+            return s;\n+        }\n+\n+        @Override\n+        public char readChar() throws IOException {\n+            char c = delegate.readChar();\n+            count += 2;\n+            return c;\n+        }\n+\n+        @Override\n+        public int readInt() throws IOException {\n+            int i = delegate.readInt();\n+            count += 4;\n+            return i;\n+        }\n+\n+        @Override\n+        public long readLong() throws IOException {\n+            long l = delegate.readLong();\n+            count += 8;\n+            return l;\n+        }\n+\n+        @Override\n+        public float readFloat() throws IOException {\n+            float f = delegate.readFloat();\n+            count += 4;\n+            return f;\n+        }\n+\n+        @Override\n+        public double readDouble() throws IOException {\n+            double d = delegate.readDouble();\n+            count += 8;\n+            return d;\n+        }\n+\n+        @Override\n+        public String readLine() {\n+            throw new RuntimeException(\"not implemented\");\n+        }\n+\n+        @Override\n+        public String readUTF() throws IOException {\n+            return DataInputStream.readUTF(this);\n+        }\n+    }\n+\n@@ -1086,2 +1211,1 @@\n-    private static InvalidModuleDescriptorException\n-    invalidModuleDescriptor(String msg) {\n+    private static InvalidModuleDescriptorException invalidModuleDescriptor(String msg) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleInfo.java","additions":129,"deletions":5,"binary":false,"changes":134,"status":"modified"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8255542\n+ * @summary Module attribute has incorrect length\n+ * @library ..\n+ * @build module-info\n+ * @run main CheckBadModuleInfo\n+ *\/\n","filename":"test\/jdk\/java\/lang\/module\/badclasses\/BadModuleAttributeLength\/Driver.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module  {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  55; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Utf8 \"module-info\"; \/\/ #1\n+    class #1; \/\/ #2\n+    Utf8 \"module-info.java\"; \/\/ #3\n+    Utf8 \"m\"; \/\/ #4\n+    Module #4; \/\/ #5\n+    Utf8 \"ModuleMainClass\"; \/\/ #6\n+    Utf8 \"p\/C\"; \/\/ #7\n+    class #7; \/\/ #8\n+    Utf8 \"ModulePackages\"; \/\/ #9\n+    Utf8 \"p\"; \/\/ #10\n+    Package #10; \/\/ #11\n+    Utf8 \"java.base\"; \/\/ #12\n+    Module #12; \/\/ #13\n+    Utf8 \"11.0.2\"; \/\/ #14\n+    Utf8 \"SourceFile\"; \/\/ #15\n+    Utf8 \"Module\"; \/\/ #16\n+  } \/\/ Constant Pool\n+\n+  0x8000; \/\/ access\n+  #2;\/\/ this_cpx\n+  #0;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#15) { \/\/ SourceFile\n+      #3;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#16, 256) { \/\/ Module incorrect attribute length\n+      #5; \/\/ name_index\n+      0x0000; \/\/ flags\n+      #0; \/\/ version\n+      [] { \/\/ requires\n+        #13 0x8000 #14;\n+      } \/\/ requires\n+\n+      [] { \/\/ exports\n+      } \/\/ exports\n+\n+      [] { \/\/ opens\n+      } \/\/ opens\n+\n+      [] { \/\/ uses\n+      } \/\/ uses\n+\n+      [] { \/\/ provides\n+      } \/\/ provides\n+\n+    } \/\/ end Module\n+    ;\n+    Attr(#6) { \/\/ ModuleMainClass\n+      0x0008;\n+    } \/\/ end ModuleMainClass\n+    ;\n+    Attr(#9) { \/\/ ModulePackages\n+      [] {\n+        #11;\n+      }\n+    } \/\/ end ModulePackages\n+  } \/\/ Attributes\n+} \/\/ end module m\n","filename":"test\/jdk\/java\/lang\/module\/badclasses\/BadModuleAttributeLength\/module-info.jcod","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8255542\n+ * @summary ModuleMain attribute has incorrect length\n+ * @library ..\n+ * @build module-info\n+ * @run main CheckBadModuleInfo\n+ *\/\n","filename":"test\/jdk\/java\/lang\/module\/badclasses\/BadModuleMainAttributeLength\/Driver.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module  {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  55; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Utf8 \"module-info\"; \/\/ #1\n+    class #1; \/\/ #2\n+    Utf8 \"module-info.java\"; \/\/ #3\n+    Utf8 \"m\"; \/\/ #4\n+    Module #4; \/\/ #5\n+    Utf8 \"ModuleMainClass\"; \/\/ #6\n+    Utf8 \"p\/C\"; \/\/ #7\n+    class #7; \/\/ #8\n+    Utf8 \"ModulePackages\"; \/\/ #9\n+    Utf8 \"p\"; \/\/ #10\n+    Package #10; \/\/ #11\n+    Utf8 \"java.base\"; \/\/ #12\n+    Module #12; \/\/ #13\n+    Utf8 \"11.0.2\"; \/\/ #14\n+    Utf8 \"SourceFile\"; \/\/ #15\n+    Utf8 \"Module\"; \/\/ #16\n+  } \/\/ Constant Pool\n+\n+  0x8000; \/\/ access\n+  #2;\/\/ this_cpx\n+  #0;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#15) { \/\/ SourceFile\n+      #3;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#16) { \/\/ Module\n+      #5; \/\/ name_index\n+      0x0000; \/\/ flags\n+      #0; \/\/ version\n+      [] { \/\/ requires\n+        #13 0x8000 #14;\n+      } \/\/ requires\n+\n+      [] { \/\/ exports\n+      } \/\/ exports\n+\n+      [] { \/\/ opens\n+      } \/\/ opens\n+\n+      [] { \/\/ uses\n+      } \/\/ uses\n+\n+      [] { \/\/ provides\n+      } \/\/ provides\n+\n+    } \/\/ end Module\n+    ;\n+    Attr(#6, 3) { \/\/ ModuleMainClass attribute_length 3 instead of 2\n+      0x0008;\n+    } \/\/ end ModuleMainClass\n+    ;\n+    Attr(#9) { \/\/ ModulePackages\n+      [] {\n+        #11;\n+      }\n+    } \/\/ end ModulePackages\n+  } \/\/ Attributes\n+} \/\/ end module m\n","filename":"test\/jdk\/java\/lang\/module\/badclasses\/BadModuleMainAttributeLength\/module-info.jcod","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8255542\n+ * @summary ModulePackages attribute has incorrect length\n+ * @library ..\n+ * @build module-info\n+ * @run main CheckBadModuleInfo\n+ *\/\n","filename":"test\/jdk\/java\/lang\/module\/badclasses\/BadModulePackagesAttributeLength\/Driver.java","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module  {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  55; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Utf8 \"module-info\"; \/\/ #1\n+    class #1; \/\/ #2\n+    Utf8 \"module-info.java\"; \/\/ #3\n+    Utf8 \"m\"; \/\/ #4\n+    Module #4; \/\/ #5\n+    Utf8 \"ModuleMainClass\"; \/\/ #6\n+    Utf8 \"p\/C\"; \/\/ #7\n+    class #7; \/\/ #8\n+    Utf8 \"ModulePackages\"; \/\/ #9\n+    Utf8 \"p\"; \/\/ #10\n+    Package #10; \/\/ #11\n+    Utf8 \"java.base\"; \/\/ #12\n+    Module #12; \/\/ #13\n+    Utf8 \"11.0.2\"; \/\/ #14\n+    Utf8 \"SourceFile\"; \/\/ #15\n+    Utf8 \"Module\"; \/\/ #16\n+  } \/\/ Constant Pool\n+\n+  0x8000; \/\/ access\n+  #2;\/\/ this_cpx\n+  #0;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#15) { \/\/ SourceFile\n+      #3;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#16) { \/\/ Module\n+      #5; \/\/ name_index\n+      0x0000; \/\/ flags\n+      #0; \/\/ version\n+      [] { \/\/ requires\n+        #13 0x8000 #14;\n+      } \/\/ requires\n+\n+      [] { \/\/ exports\n+      } \/\/ exports\n+\n+      [] { \/\/ opens\n+      } \/\/ opens\n+\n+      [] { \/\/ uses\n+      } \/\/ uses\n+\n+      [] { \/\/ provides\n+      } \/\/ provides\n+\n+    } \/\/ end Module\n+    ;\n+    Attr(#6) { \/\/ ModuleMainClass\n+      0x0008;\n+    } \/\/ end ModuleMainClass\n+    ;\n+    Attr(#9, 6) { \/\/ ModulePackages attribute_length 6 instead of 4\n+      [] {\n+        #11;\n+      }\n+    } \/\/ end ModulePackages\n+  } \/\/ Attributes\n+} \/\/ end module m\n","filename":"test\/jdk\/java\/lang\/module\/badclasses\/BadModulePackagesAttributeLength\/module-info.jcod","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.lang.module.ModuleDescriptor;\n+import java.lang.module.InvalidModuleDescriptorException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+\/**\n+ * Uses the ModuleDescriptor.read API to read the module-info.class in the\n+ * ${test.classes} directory and expects InvalidModuleDescriptorException\n+ * to be thrown.\n+ *\/\n+public class CheckBadModuleInfo {\n+    public static void main(String[] args) throws IOException {\n+        Path mi = Path.of(System.getProperty(\"test.classes\"), \"module-info.class\");\n+        try (InputStream in = Files.newInputStream(mi)) {\n+            try {\n+                ModuleDescriptor descriptor = ModuleDescriptor.read(in);\n+                System.out.println(descriptor);\n+                throw new RuntimeException(\"InvalidModuleDescriptorException expected\");\n+            } catch (InvalidModuleDescriptorException e) {\n+                \/\/ expected\n+                System.out.println(e);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/module\/badclasses\/CheckBadModuleInfo.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}