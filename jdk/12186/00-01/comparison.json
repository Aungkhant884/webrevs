{"files":[{"patch":"@@ -63,1 +63,1 @@\n-  return is_null(v) ? (oop)nullptr : decode_not_null(v);\n+  return is_null(v) ? nullptr : decode_not_null(v);\n@@ -140,1 +140,1 @@\n-  return is_null(v) ? (Klass*)nullptr : decode_not_null(v);\n+  return is_null(v) ? nullptr : decode_not_null(v);\n","filename":"src\/hotspot\/share\/oops\/compressedOops.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-      (Symbol*)nullptr : symbol_at(_generic_signature_index);\n+      nullptr : symbol_at(_generic_signature_index);\n@@ -197,1 +197,1 @@\n-      (Symbol*)nullptr : symbol_at(_source_file_name_index);\n+      nullptr : symbol_at(_source_file_name_index);\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -675,3 +675,3 @@\n-#define ALLOC_RESOURCE_ARRAY(var, type, count) \\\n-  var = NEW_RESOURCE_ARRAY_RETURN_NULL(type, count);              \\\n-  if (var == nullptr) {                                              \\\n+#define ALLOC_RESOURCE_ARRAY(var, type, count)                           \\\n+  var = NEW_RESOURCE_ARRAY_RETURN_NULL(type, count);                     \\\n+  if (var == nullptr) {                                                  \\\n@@ -679,1 +679,1 @@\n-    return;                                                       \\\n+    return;                                                              \\\n","filename":"src\/hotspot\/share\/oops\/generateOopMap.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2165,1 +2165,1 @@\n-      length <= idnum ||  \/\/ cache is too short\n+      length <= idnum ||     \/\/ cache is too short\n@@ -2258,1 +2258,1 @@\n-  if (jmeths == nullptr ||                         \/\/ no cache yet\n+  if (jmeths == nullptr ||                      \/\/ no cache yet\n@@ -2316,1 +2316,1 @@\n-  if (jmeths != nullptr &&                         \/\/ If there is a cache\n+  if (jmeths != nullptr &&                      \/\/ If there is a cache\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -431,1 +431,1 @@\n-  if (super == nullptr) return;        \/\/ special case: class Object\n+  if (super == nullptr) return;     \/\/ special case: class Object\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-  Symbol* generic_signature() const              { int idx = generic_signature_index(); return ((idx != 0) ? constants()->symbol_at(idx) : (Symbol*)nullptr); }\n+  Symbol* generic_signature() const              { int idx = generic_signature_index(); return ((idx != 0) ? constants()->symbol_at(idx) : nullptr); }\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  return (_obj == nullptr) ? (oop)nullptr : NativeAccess<>::oop_load(_obj);\n+  return (_obj == nullptr) ? nullptr : NativeAccess<>::oop_load(_obj);\n@@ -38,1 +38,1 @@\n-  return (_obj == nullptr) ? (oop)nullptr : NativeAccess<AS_NO_KEEPALIVE>::oop_load(_obj);\n+  return (_obj == nullptr) ? nullptr : NativeAccess<AS_NO_KEEPALIVE>::oop_load(_obj);\n@@ -53,1 +53,1 @@\n-    NativeAccess<>::oop_store(_obj, (oop)nullptr);\n+    NativeAccess<>::oop_store(_obj, nullptr);\n","filename":"src\/hotspot\/share\/oops\/oopHandle.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-    NativeAccess<ON_PHANTOM_OOP_REF>::oop_store(_obj, (oop)nullptr);\n+    NativeAccess<ON_PHANTOM_OOP_REF>::oop_store(_obj, nullptr);\n","filename":"src\/hotspot\/share\/oops\/weakHandle.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}