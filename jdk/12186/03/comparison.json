{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -312,1 +312,1 @@\n-                       NULL, 0, dst,\n+                       nullptr, 0, dst,\n@@ -320,1 +320,1 @@\n-    AccessT::arraycopy(NULL, 0, src,\n+    AccessT::arraycopy(nullptr, 0, src,\n@@ -335,2 +335,2 @@\n-    return AccessT::oop_arraycopy(NULL, 0, src,\n-                                  NULL, 0, dst,\n+    return AccessT::oop_arraycopy(nullptr, 0, src,\n+                                  nullptr, 0, dst,\n","filename":"src\/hotspot\/share\/oops\/access.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -214,1 +214,1 @@\n-      assert(bs != NULL, \"GC barriers invoked before BarrierSet is set\");\n+      assert(bs != nullptr, \"GC barriers invoked before BarrierSet is set\");\n@@ -227,1 +227,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -237,1 +237,1 @@\n-      assert(bs != NULL, \"GC barriers invoked before BarrierSet is set\");\n+      assert(bs != nullptr, \"GC barriers invoked before BarrierSet is set\");\n@@ -250,1 +250,1 @@\n-        return NULL;\n+        return nullptr;\n","filename":"src\/hotspot\/share\/oops\/access.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-  if (p != NULL) {\n+  if (p != nullptr) {\n@@ -52,1 +52,1 @@\n-  if (class_annotations() != NULL) {\n+  if (class_annotations() != nullptr) {\n@@ -57,1 +57,1 @@\n-  if (class_type_annotations() != NULL) {\n+  if (class_type_annotations() != nullptr) {\n@@ -67,1 +67,1 @@\n-  if (annotations != NULL) {\n+  if (annotations != nullptr) {\n@@ -75,1 +75,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -84,1 +84,1 @@\n-  it->push(&_fields_type_annotations); \/\/ FIXME: need a test case where _fields_type_annotations != NULL\n+  it->push(&_fields_type_annotations); \/\/ FIXME: need a test case where _fields_type_annotations != nullptr\n","filename":"src\/hotspot\/share\/oops\/annotations.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,4 +73,4 @@\n-  Annotations() : _class_annotations(NULL),\n-                  _fields_annotations(NULL),\n-                  _class_type_annotations(NULL),\n-                  _fields_type_annotations(NULL) {}\n+  Annotations() : _class_annotations(nullptr),\n+                  _fields_annotations(nullptr),\n+                  _class_type_annotations(nullptr),\n+                  _fields_type_annotations(nullptr) {}\n","filename":"src\/hotspot\/share\/oops\/annotations.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-  if (super() == NULL)  return NULL;  \/\/ bootstrap case\n+  if (super() == nullptr)  return nullptr;  \/\/ bootstrap case\n@@ -64,1 +64,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -89,2 +89,2 @@\n-  _higher_dimension(NULL),\n-  _lower_dimension(NULL) {\n+  _higher_dimension(nullptr),\n+  _lower_dimension(nullptr) {\n@@ -95,1 +95,1 @@\n-  set_super(Universe::is_bootstrapping() ? NULL : vmClasses::Object_klass());\n+  set_super(Universe::is_bootstrapping() ? nullptr : vmClasses::Object_klass());\n@@ -105,1 +105,1 @@\n-  k->initialize_supers(super_klass, NULL, CHECK);\n+  k->initialize_supers(super_klass, nullptr, CHECK);\n@@ -111,1 +111,1 @@\n-  assert((module_entry != NULL) || ((module_entry == NULL) && !ModuleEntryTable::javabase_defined()),\n+  assert((module_entry != nullptr) || ((module_entry == nullptr) && !ModuleEntryTable::javabase_defined()),\n@@ -113,1 +113,1 @@\n-  oop module = (module_entry != NULL) ? module_entry->module() : (oop)NULL;\n+  oop module = (module_entry != nullptr) ? module_entry->module() : (oop)nullptr;\n@@ -121,1 +121,1 @@\n-  assert(transitive_interfaces == NULL, \"sanity\");\n+  assert(transitive_interfaces == nullptr, \"sanity\");\n@@ -124,1 +124,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -134,1 +134,1 @@\n-  \/\/ initialization to NULL not necessary, area already cleared\n+  \/\/ initialization to null not necessary, area already cleared\n@@ -162,1 +162,1 @@\n-  if (_higher_dimension != NULL) {\n+  if (_higher_dimension != nullptr) {\n@@ -170,1 +170,1 @@\n-  if (_higher_dimension != NULL) {\n+  if (_higher_dimension != nullptr) {\n@@ -181,1 +181,1 @@\n-  if (_higher_dimension != NULL) {\n+  if (_higher_dimension != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/arrayKlass.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,2 +99,2 @@\n-    if (obj != NULL) {\n-      assert(raw == NULL, \"either raw or in-heap\");\n+    if (obj != nullptr) {\n+      assert(raw == nullptr, \"either raw or in-heap\");\n@@ -104,1 +104,1 @@\n-      assert(raw != NULL, \"either raw or in-heap\");\n+      assert(raw != nullptr, \"either raw or in-heap\");\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-NarrowPtrStruct CompressedOops::_narrow_oop = { NULL, 0, true };\n+NarrowPtrStruct CompressedOops::_narrow_oop = { nullptr, 0, true };\n@@ -83,1 +83,1 @@\n-         base() == NULL, \"invalid value\");\n+         base() == nullptr, \"invalid value\");\n@@ -151,1 +151,1 @@\n-  return _narrow_oop._base != NULL && is_disjoint_heap_base_address(_narrow_oop._base);\n+  return _narrow_oop._base != nullptr && is_disjoint_heap_base_address(_narrow_oop._base);\n@@ -158,1 +158,1 @@\n-  return _narrow_oop._base != NULL && !is_disjoint_heap_base_address(_narrow_oop._base);\n+  return _narrow_oop._base != nullptr && !is_disjoint_heap_base_address(_narrow_oop._base);\n@@ -182,1 +182,1 @@\n-NarrowPtrStruct CompressedKlassPointers::_narrow_klass = { NULL, 0, true };\n+NarrowPtrStruct CompressedKlassPointers::_narrow_klass = { nullptr, 0, true };\n","filename":"src\/hotspot\/share\/oops\/compressedOops.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-  \/\/ NULL if using wide oops or zero based narrow oops.\n+  \/\/ null if using wide oops or zero based narrow oops.\n@@ -119,1 +119,1 @@\n-  static bool is_null(oop v)       { return v == NULL; }\n+  static bool is_null(oop v)       { return v == nullptr; }\n@@ -181,1 +181,1 @@\n-  static bool is_null(Klass* v)      { return v == NULL; }\n+  static bool is_null(Klass* v)      { return v == nullptr; }\n","filename":"src\/hotspot\/share\/oops\/compressedOops.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-  return is_null(v) ? (oop)NULL : decode_not_null(v);\n+  return is_null(v) ? nullptr : decode_not_null(v);\n@@ -140,1 +140,1 @@\n-  return is_null(v) ? (Klass*)NULL : decode_not_null(v);\n+  return is_null(v) ? nullptr : decode_not_null(v);\n","filename":"src\/hotspot\/share\/oops\/compressedOops.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,2 +56,2 @@\n-  set_constants(NULL);\n-  set_stackmap_data(NULL);\n+  set_constants(nullptr);\n+  set_stackmap_data(nullptr);\n@@ -65,1 +65,1 @@\n-  set_constants(NULL);\n+  set_constants(nullptr);\n@@ -82,1 +82,1 @@\n-  if (stackmap_data() != NULL) {\n+  if (stackmap_data() != nullptr) {\n@@ -85,1 +85,1 @@\n-  set_stackmap_data(NULL);\n+  set_stackmap_data(nullptr);\n@@ -435,1 +435,1 @@\n-  if (m != NULL) {\n+  if (m != nullptr) {\n@@ -451,1 +451,1 @@\n-  if (m != NULL) {\n+  if (m != nullptr) {\n@@ -454,1 +454,1 @@\n-    st->print(\"NULL\");\n+    st->print(\"null\");\n@@ -463,1 +463,1 @@\n-  guarantee(method() != NULL && method()->is_method(), \"should be method\");\n+  guarantee(method() != nullptr && method()->is_method(), \"should be method\");\n","filename":"src\/hotspot\/share\/oops\/constMethod.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -279,1 +279,1 @@\n-  bool has_stackmap_table() const { return _stackmap_data != NULL; }\n+  bool has_stackmap_table() const { return _stackmap_data != nullptr; }\n@@ -401,1 +401,1 @@\n-    return has_method_annotations() ? *(method_annotations_addr()) : NULL;\n+    return has_method_annotations() ? *(method_annotations_addr()) : nullptr;\n@@ -409,1 +409,1 @@\n-    return has_parameter_annotations() ? *(parameter_annotations_addr()) : NULL;\n+    return has_parameter_annotations() ? *(parameter_annotations_addr()) : nullptr;\n@@ -417,1 +417,1 @@\n-    return has_type_annotations() ? *(type_annotations_addr()) : NULL;\n+    return has_type_annotations() ? *(type_annotations_addr()) : nullptr;\n@@ -425,1 +425,1 @@\n-    return has_default_annotations() ? *(default_annotations_addr()) : NULL;\n+    return has_default_annotations() ? *(default_annotations_addr()) : nullptr;\n","filename":"src\/hotspot\/share\/oops\/constMethod.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  assert(tags != NULL, \"invariant\");\n+  assert(tags != nullptr, \"invariant\");\n@@ -108,1 +108,1 @@\n-    assert(_tags != NULL, \"invariant\");\n+    assert(_tags != nullptr, \"invariant\");\n@@ -113,1 +113,1 @@\n-    assert(NULL == _pool_holder, \"invariant\");\n+    assert(nullptr == _pool_holder, \"invariant\");\n@@ -117,1 +117,1 @@\n-  if (cache() != NULL) {\n+  if (cache() != nullptr) {\n@@ -119,1 +119,1 @@\n-    set_cache(NULL);\n+    set_cache(nullptr);\n@@ -123,1 +123,1 @@\n-  set_resolved_klasses(NULL);\n+  set_resolved_klasses(nullptr);\n@@ -126,1 +126,1 @@\n-  set_operands(NULL);\n+  set_operands(nullptr);\n@@ -132,1 +132,1 @@\n-  set_tags(NULL);\n+  set_tags(nullptr);\n@@ -167,2 +167,2 @@\n-  if (_cache == NULL) {\n-    return NULL;\n+  if (_cache == nullptr) {\n+    return nullptr;\n@@ -227,1 +227,1 @@\n-  assert(resolved_klasses() == NULL, \"sanity\");\n+  assert(resolved_klasses() == nullptr, \"sanity\");\n@@ -258,1 +258,1 @@\n-  assert(k != NULL, \"must be valid klass\");\n+  assert(k != nullptr, \"must be valid klass\");\n@@ -265,1 +265,1 @@\n-  \/\/ and the Klass* non-NULL, so we need hardware store ordering here.\n+  \/\/ and the Klass* non-null, so we need hardware store ordering here.\n@@ -271,1 +271,1 @@\n-\/\/ Returns nullptr if this class is not supported, or _resolved_reference doesn't exist.\n+\/\/ Returns null if this class is not supported, or _resolved_reference doesn't exist.\n@@ -273,1 +273,1 @@\n-  if (_cache == NULL) {\n+  if (_cache == nullptr) {\n@@ -288,1 +288,1 @@\n-    int ref_map_len = ref_map == NULL ? 0 : ref_map->length();\n+    int ref_map_len = ref_map == nullptr ? 0 : ref_map->length();\n@@ -293,1 +293,1 @@\n-      if (obj != NULL && i < ref_map_len) {\n+      if (obj != nullptr && i < ref_map_len) {\n@@ -310,1 +310,1 @@\n-  if (rr != NULL) {\n+  if (rr != nullptr) {\n@@ -331,1 +331,1 @@\n-  assert(_cache != NULL, \"constant pool _cache should not be NULL\");\n+  assert(_cache != nullptr, \"constant pool _cache should not be null\");\n@@ -334,1 +334,1 @@\n-  if (resolved_references() != NULL) return;\n+  if (resolved_references() != nullptr) return;\n@@ -340,1 +340,1 @@\n-        _cache->archived_references() != NULL) {\n+        _cache->archived_references() != nullptr) {\n@@ -377,1 +377,1 @@\n-    resolved_references() != NULL ? resolved_references()->length() : 0);\n+    resolved_references() != nullptr ? resolved_references()->length() : 0);\n@@ -402,2 +402,2 @@\n-  if (cache() != NULL) {\n-    \/\/ cache() is NULL if this class is not yet linked.\n+  if (cache() != nullptr) {\n+    \/\/ cache() is null if this class is not yet linked.\n@@ -422,1 +422,1 @@\n-  \/\/ k could be NULL if the referenced class has been excluded via\n+  \/\/ k could be null if the referenced class has been excluded via\n@@ -425,1 +425,1 @@\n-  if (k != NULL) {\n+  if (k != nullptr) {\n@@ -439,1 +439,1 @@\n-  resolved_klasses()->at_put(resolved_klass_index, NULL);\n+  resolved_klasses()->at_put(resolved_klass_index, nullptr);\n@@ -460,1 +460,1 @@\n-  const char * source_file = NULL;\n+  const char * source_file = nullptr;\n@@ -467,1 +467,1 @@\n-      if (s != NULL) {\n+      if (s != nullptr) {\n@@ -474,1 +474,1 @@\n-    if (source_file != NULL) {\n+    if (source_file != nullptr) {\n@@ -502,1 +502,1 @@\n-    if (klass != NULL) {\n+    if (klass != nullptr) {\n@@ -548,1 +548,1 @@\n-    assert(klass != NULL, \"must be resolved if exception was cleared\");\n+    assert(klass != nullptr, \"must be resolved if exception was cleared\");\n@@ -560,1 +560,1 @@\n-  \/\/ and the Klass* stored in _resolved_klasses is non-NULL, so we need\n+  \/\/ and the Klass* stored in _resolved_klasses is non-null, so we need\n@@ -571,1 +571,1 @@\n-    this_cp->resolved_klasses()->at_put(resolved_klass_index, NULL);\n+    this_cp->resolved_klasses()->at_put(resolved_klass_index, nullptr);\n@@ -581,1 +581,1 @@\n-\/\/ instanceof operations. Returns NULL if the class has not been loaded or\n+\/\/ instanceof operations. Returns null if the class has not been loaded or\n@@ -591,1 +591,1 @@\n-    assert(k != NULL, \"should be resolved\");\n+    assert(k != nullptr, \"should be resolved\");\n@@ -594,1 +594,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -605,1 +605,1 @@\n-    if (k != NULL && current->is_Java_thread()) {\n+    if (k != nullptr && current->is_Java_thread()) {\n@@ -609,1 +609,1 @@\n-      \/\/ return NULL if verification fails\n+      \/\/ return null if verification fails\n@@ -613,1 +613,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -624,1 +624,1 @@\n-  if (cpool->cache() == NULL)  return NULL;  \/\/ nothing to load yet\n+  if (cpool->cache() == nullptr)  return nullptr;  \/\/ nothing to load yet\n@@ -629,1 +629,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -637,1 +637,1 @@\n-  if (cpool->cache() == NULL)  return false;  \/\/ nothing to load yet\n+  if (cpool->cache() == nullptr)  return false;  \/\/ nothing to load yet\n@@ -644,1 +644,1 @@\n-  if (cpool->cache() == NULL)  return NULL;  \/\/ nothing to load yet\n+  if (cpool->cache() == nullptr)  return nullptr;  \/\/ nothing to load yet\n@@ -652,1 +652,1 @@\n-  if (cpool->cache() == NULL)  return false;  \/\/ nothing to load yet\n+  if (cpool->cache() == nullptr)  return false;  \/\/ nothing to load yet\n@@ -671,1 +671,1 @@\n-  if (!uncached && cache() != NULL) {\n+  if (!uncached && cache() != nullptr) {\n@@ -696,1 +696,1 @@\n-  if (!uncached && cache() != NULL) {\n+  if (!uncached && cache() != nullptr) {\n@@ -712,1 +712,1 @@\n-  if (!uncached && cache() != NULL) {\n+  if (!uncached && cache() != nullptr) {\n@@ -791,1 +791,1 @@\n-  if (message != NULL) {\n+  if (message != nullptr) {\n@@ -827,3 +827,3 @@\n-  Symbol* cause_sym = NULL;\n-  Symbol* cause_msg = NULL;\n-  if (cause != NULL && cause != pending_exception) {\n+  Symbol* cause_sym = nullptr;\n+  Symbol* cause_msg = nullptr;\n+  if (cause != nullptr && cause != pending_exception) {\n@@ -841,3 +841,3 @@\n-  Symbol* message = NULL;\n-  Symbol* cause = NULL;\n-  Symbol* cause_msg = NULL;\n+  Symbol* message = nullptr;\n+  Symbol* cause = nullptr;\n+  Symbol* cause_msg = nullptr;\n@@ -845,2 +845,2 @@\n-  assert(error != NULL, \"checking\");\n-  const char* cause_str = cause_msg != NULL ? cause_msg->as_C_string() : NULL;\n+  assert(error != nullptr, \"checking\");\n+  const char* cause_str = cause_msg != nullptr ? cause_msg->as_C_string() : nullptr;\n@@ -849,1 +849,1 @@\n-  if (message != NULL) {\n+  if (message != nullptr) {\n@@ -851,1 +851,1 @@\n-    if (cause != NULL) {\n+    if (cause != nullptr) {\n@@ -858,1 +858,1 @@\n-    if (cause != NULL) {\n+    if (cause != nullptr) {\n@@ -929,1 +929,1 @@\n-  oop result_oop = NULL;\n+  oop result_oop = nullptr;\n@@ -945,1 +945,1 @@\n-    if (result_oop != NULL) {\n+    if (result_oop != nullptr) {\n@@ -949,1 +949,1 @@\n-        result_oop = NULL;\n+        result_oop = nullptr;\n@@ -951,1 +951,1 @@\n-      if (status_return != NULL)  (*status_return) = true;\n+      if (status_return != nullptr)  (*status_return) = true;\n@@ -962,1 +962,1 @@\n-  if (status_return != NULL) {\n+  if (status_return != nullptr) {\n@@ -969,1 +969,1 @@\n-      if (this_cp->resolved_klasses()->at(resolved_klass_index) == NULL) {\n+      if (this_cp->resolved_klasses()->at(resolved_klass_index) == nullptr) {\n@@ -971,1 +971,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -985,1 +985,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -1031,2 +1031,2 @@\n-        const char* fail = NULL;\n-        if (result_oop == NULL) {\n+        const char* fail = nullptr;\n+        if (result_oop == nullptr) {\n@@ -1040,1 +1040,1 @@\n-        if (fail != NULL) {\n+        if (fail != nullptr) {\n@@ -1166,1 +1166,1 @@\n-    oop new_result = (result_oop == NULL ? Universe::the_null_sentinel() : result_oop);\n+    oop new_result = (result_oop == nullptr ? Universe::the_null_sentinel() : result_oop);\n@@ -1174,1 +1174,1 @@\n-        old_result = NULL;\n+        old_result = nullptr;\n@@ -1185,1 +1185,1 @@\n-  oop str = StringTable::intern(sym, CHECK_(NULL));\n+  oop str = StringTable::intern(sym, CHECK_(nullptr));\n@@ -1231,1 +1231,1 @@\n-  if (str != NULL) return str;\n+  if (str != nullptr) return str;\n@@ -1233,1 +1233,1 @@\n-  str = StringTable::intern(sym, CHECK_(NULL));\n+  str = StringTable::intern(sym, CHECK_(nullptr));\n@@ -1483,1 +1483,1 @@\n-  if ( operands() != NULL) { \/\/ the safety check\n+  if ( operands() != nullptr) { \/\/ the safety check\n@@ -2284,1 +2284,1 @@\n-  if (pool_holder() != NULL) {\n+  if (pool_holder() != nullptr) {\n@@ -2314,1 +2314,1 @@\n-        guarantee(k != NULL, \"need klass\");\n+        guarantee(k != nullptr, \"need klass\");\n@@ -2411,1 +2411,1 @@\n-  if (operands() != NULL)  st->print(\"\/operands[%d]\", operands()->length());\n+  if (operands() != nullptr)  st->print(\"\/operands[%d]\", operands()->length());\n@@ -2413,1 +2413,1 @@\n-  if (pool_holder() != NULL) {\n+  if (pool_holder() != nullptr) {\n@@ -2419,1 +2419,1 @@\n-  if (cache() != NULL) {\n+  if (cache() != nullptr) {\n@@ -2440,2 +2440,2 @@\n-  if (pool_holder() != NULL) {\n-    \/\/ Note: pool_holder() can be NULL in temporary constant pools\n+  if (pool_holder() != nullptr) {\n+    \/\/ Note: pool_holder() can be null in temporary constant pools\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":84,"deletions":84,"binary":false,"changes":168,"status":"modified"},{"patch":"@@ -189,1 +189,1 @@\n-      (Symbol*)NULL : symbol_at(_generic_signature_index);\n+      nullptr : symbol_at(_generic_signature_index);\n@@ -197,1 +197,1 @@\n-      (Symbol*)NULL : symbol_at(_source_file_name_index);\n+      nullptr : symbol_at(_source_file_name_index);\n@@ -568,1 +568,1 @@\n-    if (operands == NULL || operands->length() == 0)  return 0;\n+    if (operands == nullptr || operands->length() == 0)  return 0;\n@@ -719,1 +719,1 @@\n-    return resolve_constant_at_impl(h_this, index, _no_index_sentinel, NULL, THREAD);\n+    return resolve_constant_at_impl(h_this, index, _no_index_sentinel, nullptr, THREAD);\n@@ -724,1 +724,1 @@\n-    return resolve_constant_at_impl(h_this, _no_index_sentinel, cache_index, NULL, THREAD);\n+    return resolve_constant_at_impl(h_this, _no_index_sentinel, cache_index, nullptr, THREAD);\n@@ -729,1 +729,1 @@\n-    return resolve_constant_at_impl(h_this, pool_index, _possible_index_sentinel, NULL, THREAD);\n+    return resolve_constant_at_impl(h_this, pool_index, _possible_index_sentinel, nullptr, THREAD);\n@@ -814,1 +814,1 @@\n-  Array<u2>* reference_map() const        {  return (_cache == NULL) ? NULL :  _cache->reference_map(); }\n+  Array<u2>* reference_map() const        {  return (_cache == nullptr) ? nullptr :  _cache->reference_map(); }\n","filename":"src\/hotspot\/share\/oops\/constantPool.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  _f1 = NULL;\n+  _f1 = nullptr;\n@@ -104,1 +104,1 @@\n-  assert(f1 != NULL, \"\");\n+  assert(f1 != nullptr, \"\");\n@@ -161,1 +161,1 @@\n-  assert(method->interpreter_entry() != NULL, \"should have been set at this point\");\n+  assert(method->interpreter_entry() != nullptr, \"should have been set at this point\");\n@@ -166,1 +166,1 @@\n-  InstanceKlass* holder = NULL;  \/\/ have to declare this outside the switch\n+  InstanceKlass* holder = nullptr;  \/\/ have to declare this outside the switch\n@@ -399,1 +399,1 @@\n-  LogStream* log_stream = NULL;\n+  LogStream* log_stream = nullptr;\n@@ -446,1 +446,1 @@\n-  if (log_stream != NULL) {\n+  if (log_stream != nullptr) {\n@@ -486,1 +486,1 @@\n-    if (f1 != NULL) {\n+    if (f1 != nullptr) {\n@@ -524,1 +524,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -530,1 +530,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -566,1 +566,1 @@\n-  assert (_f1 != NULL, \"should not call with uninteresting entry\");\n+  assert (_f1 != nullptr, \"should not call with uninteresting entry\");\n@@ -584,1 +584,1 @@\n-  if (m != NULL) {\n+  if (m != nullptr) {\n@@ -595,1 +595,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -597,1 +597,1 @@\n-  Method* m = NULL;\n+  Method* m = nullptr;\n@@ -602,2 +602,2 @@\n-    \/\/ NULL _f1 means this is a virtual entry so also not interesting\n-    return NULL;\n+    \/\/ null _f1 means this is a virtual entry so also not interesting\n+    return nullptr;\n@@ -612,3 +612,3 @@\n-  assert(m != NULL && m->is_method(), \"sanity check\");\n-  if (m == NULL || !m->is_method()) {\n-    return NULL;\n+  assert(m != nullptr && m->is_method(), \"sanity check\");\n+  if (m == nullptr || !m->is_method()) {\n+    return nullptr;\n@@ -732,1 +732,1 @@\n-  assert(_initial_entries != NULL, \"archived cpcache must have been initialized\");\n+  assert(_initial_entries != nullptr, \"archived cpcache must have been initialized\");\n@@ -739,1 +739,1 @@\n-  _initial_entries = NULL;\n+  _initial_entries = nullptr;\n@@ -748,1 +748,1 @@\n-  set_reference_map(NULL);\n+  set_reference_map(nullptr);\n@@ -750,1 +750,1 @@\n-  if (_initial_entries != NULL) {\n+  if (_initial_entries != nullptr) {\n@@ -753,1 +753,1 @@\n-    _initial_entries = NULL;\n+    _initial_entries = nullptr;\n@@ -761,1 +761,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -787,1 +787,1 @@\n-    if (old_method == NULL || !old_method->is_old()) {\n+    if (old_method == nullptr || !old_method->is_old()) {\n@@ -805,1 +805,1 @@\n-    if (m != NULL && !entry_at(i)->check_no_old_or_obsolete_entries()) {\n+    if (m != nullptr && !entry_at(i)->check_no_old_or_obsolete_entries()) {\n@@ -817,1 +817,1 @@\n-    if (entry_at(i)->get_interesting_method_entry() != NULL) {\n+    if (entry_at(i)->get_interesting_method_entry() != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/cpCache.cpp","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-    assert(existing_f1 == NULL || existing_f1 == f1, \"illegal field change\");\n+    assert(existing_f1 == nullptr || existing_f1 == f1, \"illegal field change\");\n@@ -230,1 +230,1 @@\n-    const methodHandle& method,                  \/\/ the method\/prototype if any (NULL, otherwise)\n+    const methodHandle& method,                  \/\/ the method\/prototype if any (null, otherwise)\n@@ -446,1 +446,1 @@\n-  oop  archived_references() NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n+  oop  archived_references() NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n","filename":"src\/hotspot\/share\/oops\/cpCache.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  Metadata* f1 = f1_ord(); assert(f1 == NULL || f1->is_method(), \"\");\n+  Metadata* f1 = f1_ord(); assert(f1 == nullptr || f1->is_method(), \"\");\n@@ -65,1 +65,1 @@\n-  Metadata* f1 = f1_ord(); assert(f1 == NULL || f1->is_klass(), \"\");\n+  Metadata* f1 = f1_ord(); assert(f1 == nullptr || f1->is_klass(), \"\");\n@@ -69,1 +69,1 @@\n-inline bool ConstantPoolCacheEntry::is_f1_null() const { Metadata* f1 = f1_ord(); return f1 == NULL; }\n+inline bool ConstantPoolCacheEntry::is_f1_null() const { Metadata* f1 = f1_ord(); return f1 == nullptr; }\n@@ -92,1 +92,1 @@\n-                                                  _constant_pool(NULL),\n+                                                  _constant_pool(nullptr),\n","filename":"src\/hotspot\/share\/oops\/cpCache.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-      return NULL;\n+      return nullptr;\n","filename":"src\/hotspot\/share\/oops\/fieldStreams.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -283,1 +283,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -421,1 +421,1 @@\n-    bb_mark_fct(this, excps.handler_pc(i), NULL);\n+    bb_mark_fct(this, excps.handler_pc(i), nullptr);\n@@ -432,1 +432,1 @@\n-        bb_mark_fct(this, bci, NULL);\n+        bb_mark_fct(this, bci, nullptr);\n@@ -434,1 +434,1 @@\n-    fellThrough = jump_targets_do(&bcs, &GenerateOopMap::bb_mark_fct, NULL);\n+    fellThrough = jump_targets_do(&bcs, &GenerateOopMap::bb_mark_fct, nullptr);\n@@ -440,1 +440,1 @@\n-        bb_mark_fct(this, bci + Bytecodes::length_for(bytecode), NULL);\n+        bb_mark_fct(this, bci + Bytecodes::length_for(bytecode), nullptr);\n@@ -444,1 +444,1 @@\n-        bb_mark_fct(this, bci + Bytecodes::length_for(bytecode), NULL);\n+        bb_mark_fct(this, bci + Bytecodes::length_for(bytecode), nullptr);\n@@ -652,1 +652,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -675,3 +675,3 @@\n-#define ALLOC_RESOURCE_ARRAY(var, type, count) \\\n-  var = NEW_RESOURCE_ARRAY_RETURN_NULL(type, count);              \\\n-  if (var == NULL) {                                              \\\n+#define ALLOC_RESOURCE_ARRAY(var, type, count)                           \\\n+  var = NEW_RESOURCE_ARRAY_RETURN_NULL(type, count);                     \\\n+  if (var == nullptr) {                                                  \\\n@@ -679,1 +679,1 @@\n-    return;                                                       \\\n+    return;                                                              \\\n@@ -804,1 +804,1 @@\n-  guarantee(bb != NULL, \"null basicblock\");\n+  guarantee(bb != nullptr, \"null basicblock\");\n@@ -1160,1 +1160,1 @@\n-    bool fall_through = jump_targets_do(&itr, GenerateOopMap::merge_state, NULL);\n+    bool fall_through = jump_targets_do(&itr, GenerateOopMap::merge_state, nullptr);\n@@ -1166,1 +1166,1 @@\n-      ret_jump_targets_do(&itr, GenerateOopMap::merge_state, itr.get_index(), NULL);\n+      ret_jump_targets_do(&itr, GenerateOopMap::merge_state, itr.get_index(), nullptr);\n@@ -1229,1 +1229,1 @@\n-        guarantee(excBB != NULL, \"no basic block for exception\");\n+        guarantee(excBB != nullptr, \"no basic block for exception\");\n@@ -1843,1 +1843,1 @@\n-    guarantee(bb != NULL, \"no basic block for bci\");\n+    guarantee(bb != nullptr, \"no basic block for bci\");\n@@ -2070,1 +2070,1 @@\n-  _init_vars = NULL;\n+  _init_vars = nullptr;\n@@ -2091,1 +2091,1 @@\n-  TraceTime t_all(NULL, &_total_oopmap_time, TimeOopMap);\n+  TraceTime t_all(nullptr, &_total_oopmap_time, TimeOopMap);\n@@ -2103,1 +2103,1 @@\n-  _new_var_map    = NULL;\n+  _new_var_map    = nullptr;\n@@ -2221,1 +2221,1 @@\n-  guarantee(bb != NULL, \"no basic block for bci\");\n+  guarantee(bb != nullptr, \"no basic block for bci\");\n@@ -2281,1 +2281,1 @@\n-  assert(_new_var_map!=NULL, \"nothing to rewrite\");\n+  assert(_new_var_map!=nullptr, \"nothing to rewrite\");\n@@ -2305,1 +2305,1 @@\n-  _new_var_map = NULL;\n+  _new_var_map = nullptr;\n@@ -2505,1 +2505,1 @@\n-  assert(_ret_adr_tos != NULL, \"must be initialized\");\n+  assert(_ret_adr_tos != nullptr, \"must be initialized\");\n","filename":"src\/hotspot\/share\/oops\/generateOopMap.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-  RetTable()                                                  { _first = NULL; }\n+  RetTable()                                                  { _first = nullptr; }\n","filename":"src\/hotspot\/share\/oops\/generateOopMap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    if (cld != NULL) {\n+    if (cld != nullptr) {\n@@ -67,1 +67,1 @@\n-      if (cld != NULL) {\n+      if (cld != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/instanceClassLoaderKlass.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    char* data = NULL;                                           \\\n+    char* data = nullptr;                                        \\\n@@ -117,1 +117,1 @@\n-    if (clss_name != NULL) {                                     \\\n+    if (clss_name != nullptr) {                                  \\\n@@ -127,1 +127,1 @@\n-    char* data = NULL;                                           \\\n+    char* data = nullptr;                                        \\\n@@ -130,1 +130,1 @@\n-    if (clss_name != NULL) {                                     \\\n+    if (clss_name != nullptr) {                                  \\\n@@ -149,1 +149,1 @@\n-  assert(class_name != NULL, \"invariant\");\n+  assert(class_name != nullptr, \"invariant\");\n@@ -157,1 +157,1 @@\n-    if (super_klass != NULL) {\n+    if (super_klass != nullptr) {\n@@ -177,1 +177,1 @@\n-  if (_nest_members == NULL || _nest_members == Universe::the_empty_short_array()) {\n+  if (_nest_members == nullptr || _nest_members == Universe::the_empty_short_array()) {\n@@ -209,2 +209,2 @@\n-  assert(k != NULL, \"sanity check\");\n-  assert(_permitted_subclasses != NULL && _permitted_subclasses != Universe::the_empty_short_array(),\n+  assert(k != nullptr, \"sanity check\");\n+  assert(_permitted_subclasses != nullptr && _permitted_subclasses != Universe::the_empty_short_array(),\n@@ -248,1 +248,1 @@\n-\/\/ (such as a native JIT thread) then we simply return NULL, which in turn\n+\/\/ (such as a native JIT thread) then we simply return null, which in turn\n@@ -255,2 +255,2 @@\n-\/\/ VirtualMachineErrors are propagated with a NULL return.\n-\/\/ Under any conditions where the _nest_host can be set to non-NULL the resulting\n+\/\/ VirtualMachineErrors are propagated with a null return.\n+\/\/ Under any conditions where the _nest_host can be set to non-null the resulting\n@@ -261,1 +261,1 @@\n-  if (nest_host_k != NULL) {\n+  if (nest_host_k != nullptr) {\n@@ -274,1 +274,1 @@\n-      return NULL; \/\/ sentinel to say \"try again from a different context\"\n+      return nullptr; \/\/ sentinel to say \"try again from a different context\"\n@@ -284,1 +284,1 @@\n-        return NULL; \/\/ propagate VMEs\n+        return nullptr; \/\/ propagate VMEs\n@@ -301,1 +301,1 @@\n-      const char* error = NULL;\n+      const char* error = nullptr;\n@@ -363,3 +363,3 @@\n-  assert(host != NULL, \"NULL nest host specified\");\n-  assert(_nest_host == NULL, \"current class has resolved nest-host\");\n-  assert(nest_host_error() == NULL, \"unexpected nest host resolution error exists: %s\",\n+  assert(host != nullptr, \"null nest host specified\");\n+  assert(_nest_host == nullptr, \"current class has resolved nest-host\");\n+  assert(nest_host_error() == nullptr, \"unexpected nest host resolution error exists: %s\",\n@@ -367,1 +367,1 @@\n-  assert((host->_nest_host == NULL && host->_nest_host_index == 0) ||\n+  assert((host->_nest_host == nullptr && host->_nest_host_index == 0) ||\n@@ -378,1 +378,1 @@\n-    } else if (_nest_members != NULL && _nest_members != Universe::the_empty_short_array()) {\n+    } else if (_nest_members != nullptr && _nest_members != Universe::the_empty_short_array()) {\n@@ -390,1 +390,1 @@\n-  assert(this_key != NULL, \"sanity\");\n+  assert(this_key != nullptr, \"sanity\");\n@@ -406,1 +406,1 @@\n-  if (cur_host == NULL) {\n+  if (cur_host == nullptr) {\n@@ -411,1 +411,1 @@\n-  if (k_nest_host == NULL) {\n+  if (k_nest_host == nullptr) {\n@@ -427,1 +427,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -441,1 +441,1 @@\n-  assert(class_name != NULL, \"invariant\");\n+  assert(class_name != nullptr, \"invariant\");\n@@ -443,1 +443,1 @@\n-  assert(loader_data != NULL, \"invariant\");\n+  assert(loader_data != nullptr, \"invariant\");\n@@ -468,1 +468,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -477,1 +477,1 @@\n-  if (m != NULL) {\n+  if (m != nullptr) {\n@@ -491,1 +491,1 @@\n-  assert(default_vtable_indices() == NULL, \"only create once\");\n+  assert(default_vtable_indices() == nullptr, \"only create once\");\n@@ -502,4 +502,4 @@\n-  _nest_members(NULL),\n-  _nest_host(NULL),\n-  _permitted_subclasses(NULL),\n-  _record_components(NULL),\n+  _nest_members(nullptr),\n+  _nest_host(nullptr),\n+  _permitted_subclasses(nullptr),\n+  _record_components(nullptr),\n@@ -513,1 +513,1 @@\n-  _init_thread(NULL)\n+  _init_thread(nullptr)\n@@ -521,1 +521,1 @@\n-  assert(NULL == _methods, \"underlying memory not zeroed?\");\n+  assert(nullptr == _methods, \"underlying memory not zeroed?\");\n@@ -528,1 +528,1 @@\n-  if (methods != NULL && methods != Universe::the_empty_method_array() &&\n+  if (methods != nullptr && methods != Universe::the_empty_method_array() &&\n@@ -532,1 +532,1 @@\n-      if (method == NULL) continue;  \/\/ maybe null if error processing\n+      if (method == nullptr) continue;  \/\/ maybe null if error processing\n@@ -551,1 +551,1 @@\n-    Array<InstanceKlass*>* sti = (super_klass == NULL) ? NULL :\n+    Array<InstanceKlass*>* sti = (super_klass == nullptr) ? nullptr :\n@@ -553,1 +553,1 @@\n-    if (ti != sti && ti != NULL && !ti->is_shared()) {\n+    if (ti != sti && ti != nullptr && !ti->is_shared()) {\n@@ -560,1 +560,1 @@\n-      local_interfaces != NULL && !local_interfaces->is_shared()) {\n+      local_interfaces != nullptr && !local_interfaces->is_shared()) {\n@@ -567,1 +567,1 @@\n-  if (record_components != NULL && !record_components->is_shared()) {\n+  if (record_components != nullptr && !record_components->is_shared()) {\n@@ -580,2 +580,2 @@\n-  if (java_mirror() != NULL) {\n-    java_lang_Class::set_klass(java_mirror(), NULL);\n+  if (java_mirror() != nullptr) {\n+    java_lang_Class::set_klass(java_mirror(), nullptr);\n@@ -594,1 +594,1 @@\n-  assert(array_klasses() == NULL, \"array classes shouldn't be created for this class yet\");\n+  assert(array_klasses() == nullptr, \"array classes shouldn't be created for this class yet\");\n@@ -604,1 +604,1 @@\n-  set_methods(NULL);\n+  set_methods(nullptr);\n@@ -607,1 +607,1 @@\n-  set_record_components(NULL);\n+  set_record_components(nullptr);\n@@ -609,1 +609,1 @@\n-  if (method_ordering() != NULL &&\n+  if (method_ordering() != nullptr &&\n@@ -614,1 +614,1 @@\n-  set_method_ordering(NULL);\n+  set_method_ordering(nullptr);\n@@ -617,1 +617,1 @@\n-  if (default_methods() != NULL &&\n+  if (default_methods() != nullptr &&\n@@ -623,1 +623,1 @@\n-  set_default_methods(NULL);\n+  set_default_methods(nullptr);\n@@ -626,1 +626,1 @@\n-  if (default_vtable_indices() != NULL &&\n+  if (default_vtable_indices() != nullptr &&\n@@ -630,1 +630,1 @@\n-  set_default_vtable_indices(NULL);\n+  set_default_vtable_indices(nullptr);\n@@ -636,1 +636,1 @@\n-  if (secondary_supers() != NULL &&\n+  if (secondary_supers() != nullptr &&\n@@ -643,1 +643,1 @@\n-  set_secondary_supers(NULL);\n+  set_secondary_supers(nullptr);\n@@ -646,2 +646,2 @@\n-  set_transitive_interfaces(NULL);\n-  set_local_interfaces(NULL);\n+  set_transitive_interfaces(nullptr);\n+  set_local_interfaces(nullptr);\n@@ -649,1 +649,1 @@\n-  if (fields() != NULL && !fields()->is_shared()) {\n+  if (fields() != nullptr && !fields()->is_shared()) {\n@@ -652,1 +652,1 @@\n-  set_fields(NULL, 0);\n+  set_fields(nullptr, 0);\n@@ -656,1 +656,1 @@\n-  if (constants() != NULL) {\n+  if (constants() != nullptr) {\n@@ -664,1 +664,1 @@\n-    set_constants(NULL);\n+    set_constants(nullptr);\n@@ -667,1 +667,1 @@\n-  if (inner_classes() != NULL &&\n+  if (inner_classes() != nullptr &&\n@@ -672,1 +672,1 @@\n-  set_inner_classes(NULL);\n+  set_inner_classes(nullptr);\n@@ -674,1 +674,1 @@\n-  if (nest_members() != NULL &&\n+  if (nest_members() != nullptr &&\n@@ -679,1 +679,1 @@\n-  set_nest_members(NULL);\n+  set_nest_members(nullptr);\n@@ -681,1 +681,1 @@\n-  if (permitted_subclasses() != NULL &&\n+  if (permitted_subclasses() != nullptr &&\n@@ -686,1 +686,1 @@\n-  set_permitted_subclasses(NULL);\n+  set_permitted_subclasses(nullptr);\n@@ -689,1 +689,1 @@\n-  if (annotations() != NULL && !annotations()->is_shared()) {\n+  if (annotations() != nullptr && !annotations()->is_shared()) {\n@@ -692,1 +692,1 @@\n-  set_annotations(NULL);\n+  set_annotations(nullptr);\n@@ -704,1 +704,1 @@\n-  return _record_components != NULL &&\n+  return _record_components != nullptr &&\n@@ -710,1 +710,1 @@\n-  return _permitted_subclasses != NULL &&\n+  return _permitted_subclasses != nullptr &&\n@@ -819,1 +819,1 @@\n-  if (super_klass != NULL) {\n+  if (super_klass != nullptr) {\n@@ -1046,1 +1046,1 @@\n-      jt->set_class_to_be_initialized(NULL);\n+      jt->set_class_to_be_initialized(nullptr);\n@@ -1093,1 +1093,1 @@\n-    if (super_klass != NULL && super_klass->should_be_initialized()) {\n+    if (super_klass != nullptr && super_klass->should_be_initialized()) {\n@@ -1124,1 +1124,1 @@\n-    if (class_initializer() != NULL) {\n+    if (class_initializer() != nullptr) {\n@@ -1186,1 +1186,1 @@\n-    set_init_thread(NULL); \/\/ reset _init_thread before changing _init_state\n+    set_init_thread(nullptr); \/\/ reset _init_thread before changing _init_state\n@@ -1191,1 +1191,1 @@\n-    set_init_thread(NULL); \/\/ reset _init_thread before changing _init_state\n+    set_init_thread(nullptr); \/\/ reset _init_thread before changing _init_state\n@@ -1199,2 +1199,2 @@\n-  if (ik == NULL) {\n-    return NULL;\n+  if (ik == nullptr) {\n+    return nullptr;\n@@ -1204,2 +1204,2 @@\n-    if (ikls != NULL && !ikls->is_loader_alive()) {\n-      return NULL;  \/\/ don't return unloaded class\n+    if (ikls != nullptr && !ikls->is_loader_alive()) {\n+      return nullptr;  \/\/ don't return unloaded class\n@@ -1217,2 +1217,2 @@\n-  assert(addr != NULL, \"null addr\");\n-  if (addr != NULL) {\n+  assert(addr != nullptr, \"null addr\");\n+  if (addr != nullptr) {\n@@ -1225,1 +1225,1 @@\n-  if (ik == NULL) {\n+  if (ik == nullptr) {\n@@ -1238,1 +1238,1 @@\n-\/\/   NULL                  - no implementor\n+\/\/   null                  - no implementor\n@@ -1256,1 +1256,1 @@\n-  if (super_ik != NULL && super_ik->implements_interface(this))\n+  if (super_ik != nullptr && super_ik->implements_interface(this))\n@@ -1263,1 +1263,1 @@\n-  if (iklass == NULL) {\n+  if (iklass == nullptr) {\n@@ -1279,1 +1279,1 @@\n-    set_implementor(NULL);\n+    set_implementor(nullptr);\n@@ -1309,1 +1309,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1317,1 +1317,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1409,1 +1409,1 @@\n-  if (array_klasses_acquire() == NULL) {\n+  if (array_klasses_acquire() == nullptr) {\n@@ -1417,1 +1417,1 @@\n-      if (array_klasses() == NULL) {\n+      if (array_klasses() == nullptr) {\n@@ -1432,2 +1432,2 @@\n-  if (oak == NULL) {\n-    return NULL;\n+  if (oak == nullptr) {\n+    return nullptr;\n@@ -1452,1 +1452,1 @@\n-  if (clinit != NULL && clinit->has_valid_initializer_flags()) {\n+  if (clinit != nullptr && clinit->has_valid_initializer_flags()) {\n@@ -1455,1 +1455,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1461,1 +1461,1 @@\n-       (ReplaySuppressInitializers >= 2 && class_loader() != NULL))) {\n+       (ReplaySuppressInitializers >= 2 && class_loader() != nullptr))) {\n@@ -1485,1 +1485,1 @@\n-    ls.print_cr(\"%s (\" PTR_FORMAT \")\", h_method() == NULL ? \"(no method)\" : \"\", p2i(this));\n+    ls.print_cr(\"%s (\" PTR_FORMAT \")\", h_method() == nullptr ? \"(no method)\" : \"\", p2i(this));\n@@ -1487,1 +1487,1 @@\n-  if (h_method() != NULL) {\n+  if (h_method() != nullptr) {\n@@ -1500,1 +1500,1 @@\n-  if (oop_map_cache == NULL) {\n+  if (oop_map_cache == nullptr) {\n@@ -1503,1 +1503,1 @@\n-    if ((oop_map_cache = _oop_map_cache) == NULL) {\n+    if ((oop_map_cache = _oop_map_cache) == nullptr) {\n@@ -1543,1 +1543,1 @@\n-    if (intf2 != NULL) return intf2;\n+    if (intf2 != nullptr) return intf2;\n@@ -1546,1 +1546,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1558,1 +1558,1 @@\n-    if (intf != NULL) return intf;\n+    if (intf != nullptr) return intf;\n@@ -1562,1 +1562,1 @@\n-    if (supr != NULL) return InstanceKlass::cast(supr)->find_field(name, sig, fd);\n+    if (supr != nullptr) return InstanceKlass::cast(supr)->find_field(name, sig, fd);\n@@ -1565,1 +1565,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1578,1 +1578,1 @@\n-    if (intf != NULL) return intf;\n+    if (intf != nullptr) return intf;\n@@ -1582,1 +1582,1 @@\n-    if (supr != NULL) return InstanceKlass::cast(supr)->find_field(name, sig, is_static, fd);\n+    if (supr != nullptr) return InstanceKlass::cast(supr)->find_field(name, sig, is_static, fd);\n@@ -1585,1 +1585,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1602,1 +1602,1 @@\n-  while (klass != NULL) {\n+  while (klass != nullptr) {\n@@ -1650,1 +1650,1 @@\n-  if (super != NULL) {\n+  if (super != nullptr) {\n@@ -1670,1 +1670,1 @@\n-  if (super != NULL) {\n+  if (super != nullptr) {\n@@ -1796,1 +1796,1 @@\n-  assert(((meth == NULL) || !meth->is_static()),\n+  assert(((meth == nullptr) || !meth->is_static()),\n@@ -1864,1 +1864,1 @@\n-  return hit >= 0 ? methods->at(hit): NULL;\n+  return hit >= 0 ? methods->at(hit): nullptr;\n@@ -1950,1 +1950,1 @@\n-  assert(end_ptr != NULL, \"just checking\");\n+  assert(end_ptr != nullptr, \"just checking\");\n@@ -1971,1 +1971,1 @@\n-  while (klass != NULL) {\n+  while (klass != nullptr) {\n@@ -1977,1 +1977,1 @@\n-    if (method != NULL) {\n+    if (method != nullptr) {\n@@ -1983,1 +1983,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1991,1 +1991,1 @@\n-  while (klass != NULL) {\n+  while (klass != nullptr) {\n@@ -2005,2 +2005,2 @@\n-  Method* m = NULL;\n-  if (default_methods() != NULL) {\n+  Method* m = nullptr;\n+  if (default_methods() != nullptr) {\n@@ -2010,1 +2010,1 @@\n-  if (m == NULL) {\n+  if (m == nullptr) {\n@@ -2024,1 +2024,1 @@\n-  InstanceKlass *ik = NULL;\n+  InstanceKlass *ik = nullptr;\n@@ -2028,1 +2028,1 @@\n-    if (m != NULL && m->is_public() && !m->is_static() &&\n+    if (m != nullptr && m->is_public() && !m->is_static() &&\n@@ -2033,1 +2033,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -2085,2 +2085,2 @@\n-  JNIid* probe = jni_ids() == NULL ? NULL : jni_ids()->find(offset);\n-  if (probe == NULL) {\n+  JNIid* probe = jni_ids() == nullptr ? nullptr : jni_ids()->find(offset);\n+  if (probe == nullptr) {\n@@ -2096,1 +2096,1 @@\n-  if (inner_class_list == NULL) {\n+  if (inner_class_list == nullptr) {\n@@ -2111,1 +2111,1 @@\n-  assert (inner_class_list != NULL, \"_inner_classes list is not set up\");\n+  assert (inner_class_list != nullptr, \"_inner_classes list is not set up\");\n@@ -2131,1 +2131,1 @@\n-  jmethodID id = NULL;\n+  jmethodID id = nullptr;\n@@ -2135,1 +2135,1 @@\n-  \/\/ transitions from NULL to non-NULL which is safe because we use\n+  \/\/ transitions from null to non-null which is safe because we use\n@@ -2146,1 +2146,1 @@\n-  \/\/ grow and we'll have transitions from non-NULL to bigger non-NULL.\n+  \/\/ grow and we'll have transitions from non-null to bigger non-null.\n@@ -2151,1 +2151,1 @@\n-  if (jmeths != NULL) {\n+  if (jmeths != nullptr) {\n@@ -2164,3 +2164,3 @@\n-  if (jmeths == NULL ||   \/\/ no cache yet\n-      length <= idnum ||  \/\/ cache is too short\n-      id == NULL) {       \/\/ cache doesn't contain entry\n+  if (jmeths == nullptr ||   \/\/ no cache yet\n+      length <= idnum ||     \/\/ cache is too short\n+      id == nullptr) {       \/\/ cache doesn't contain entry\n@@ -2173,2 +2173,2 @@\n-    jmethodID  to_dealloc_id     = NULL;\n-    jmethodID* to_dealloc_jmeths = NULL;\n+    jmethodID  to_dealloc_id     = nullptr;\n+    jmethodID* to_dealloc_jmeths = nullptr;\n@@ -2177,1 +2177,1 @@\n-    jmethodID* new_jmeths = NULL;\n+    jmethodID* new_jmeths = nullptr;\n@@ -2190,1 +2190,1 @@\n-      jmethodID new_id = NULL;\n+      jmethodID new_id = nullptr;\n@@ -2194,1 +2194,1 @@\n-        assert(current_method != NULL, \"old and but not obsolete, so should exist\");\n+        assert(current_method != nullptr, \"old and but not obsolete, so should exist\");\n@@ -2208,1 +2208,1 @@\n-    if (to_dealloc_jmeths != NULL) {\n+    if (to_dealloc_jmeths != nullptr) {\n@@ -2212,1 +2212,1 @@\n-    if (to_dealloc_id != NULL) {\n+    if (to_dealloc_id != nullptr) {\n@@ -2230,1 +2230,1 @@\n-    if (id == NULL) {\n+    if (id == nullptr) {\n@@ -2248,3 +2248,3 @@\n-  assert(new_id != NULL, \"sanity check\");\n-  assert(to_dealloc_id_p != NULL, \"sanity check\");\n-  assert(to_dealloc_jmeths_p != NULL, \"sanity check\");\n+  assert(new_id != nullptr, \"sanity check\");\n+  assert(to_dealloc_id_p != nullptr, \"sanity check\");\n+  assert(to_dealloc_jmeths_p != nullptr, \"sanity check\");\n@@ -2255,1 +2255,1 @@\n-  jmethodID  id     = NULL;\n+  jmethodID  id     = nullptr;\n@@ -2258,1 +2258,1 @@\n-  if (jmeths == NULL ||                         \/\/ no cache yet\n+  if (jmeths == nullptr ||                      \/\/ no cache yet\n@@ -2260,1 +2260,1 @@\n-    if (jmeths != NULL) {\n+    if (jmeths != nullptr) {\n@@ -2273,1 +2273,1 @@\n-  if (id == NULL) {\n+  if (id == nullptr) {\n@@ -2296,3 +2296,3 @@\n-  assert(cache != NULL, \"sanity check\");\n-  assert(length_p != NULL, \"sanity check\");\n-  assert(id_p != NULL, \"sanity check\");\n+  assert(cache != nullptr, \"sanity check\");\n+  assert(length_p != nullptr, \"sanity check\");\n+  assert(id_p != nullptr, \"sanity check\");\n@@ -2303,1 +2303,1 @@\n-    *id_p = NULL;\n+    *id_p = nullptr;\n@@ -2310,1 +2310,1 @@\n-\/\/ Lookup a jmethodID, NULL if not found.  Do no blocking, no allocations, no handles\n+\/\/ Lookup a jmethodID, null if not found.  Do no blocking, no allocations, no handles\n@@ -2315,2 +2315,2 @@\n-  jmethodID id = NULL;\n-  if (jmeths != NULL &&                         \/\/ If there is a cache\n+  jmethodID id = nullptr;\n+  if (jmeths != nullptr &&                      \/\/ If there is a cache\n@@ -2318,1 +2318,1 @@\n-    id = jmeths[idnum+1];                       \/\/ Look up the id (may be NULL)\n+    id = jmeths[idnum+1];                       \/\/ Look up the id (may be null)\n@@ -2362,2 +2362,2 @@\n-      if (impl != NULL && !impl->is_loader_alive()) {\n-        \/\/ NULL this field, might be an unloaded instance klass or NULL\n+      if (impl != nullptr && !impl->is_loader_alive()) {\n+        \/\/ null this field, might be an unloaded instance klass or null\n@@ -2365,1 +2365,1 @@\n-        if (Atomic::cmpxchg(iklass, impl, (InstanceKlass*)NULL) == impl) {\n+        if (Atomic::cmpxchg(iklass, impl, (InstanceKlass*)nullptr) == impl) {\n@@ -2383,2 +2383,2 @@\n-    if (mdo != NULL) {\n-      MutexLocker ml(SafepointSynchronize::is_at_safepoint() ? NULL : mdo->extra_data_lock());\n+    if (mdo != nullptr) {\n+      MutexLocker ml(SafepointSynchronize::is_at_safepoint() ? nullptr : mdo->extra_data_lock());\n@@ -2430,1 +2430,1 @@\n-      if (ioe->interface_klass() != NULL) {\n+      if (ioe->interface_klass() != nullptr) {\n@@ -2483,1 +2483,1 @@\n-  if (array_klasses() != NULL) {\n+  if (array_klasses() != nullptr) {\n@@ -2487,4 +2487,4 @@\n-  \/\/ These are not allocated from metaspace. They are safe to set to NULL.\n-  _source_debug_extension = NULL;\n-  _dep_context = NULL;\n-  _osr_nmethods_head = NULL;\n+  \/\/ These are not allocated from metaspace. They are safe to set to null.\n+  _source_debug_extension = nullptr;\n+  _dep_context = nullptr;\n+  _osr_nmethods_head = nullptr;\n@@ -2492,4 +2492,4 @@\n-  _breakpoints = NULL;\n-  _previous_versions = NULL;\n-  _cached_class_file = NULL;\n-  _jvmti_cached_class_field_map = NULL;\n+  _breakpoints = nullptr;\n+  _previous_versions = nullptr;\n+  _cached_class_file = nullptr;\n+  _jvmti_cached_class_field_map = nullptr;\n@@ -2498,4 +2498,4 @@\n-  _init_thread = NULL;\n-  _methods_jmethod_ids = NULL;\n-  _jni_ids = NULL;\n-  _oop_map_cache = NULL;\n+  _init_thread = nullptr;\n+  _methods_jmethod_ids = nullptr;\n+  _jni_ids = nullptr;\n+  _oop_map_cache = nullptr;\n@@ -2503,1 +2503,1 @@\n-  _nest_host = NULL;\n+  _nest_host = nullptr;\n@@ -2506,1 +2506,1 @@\n-  _init_monitor = NULL;\n+  _init_monitor = nullptr;\n@@ -2513,1 +2513,1 @@\n-  if (array_klasses() != NULL) {\n+  if (array_klasses() != nullptr) {\n@@ -2520,1 +2520,1 @@\n-  _package_entry = NULL;\n+  _package_entry = nullptr;\n@@ -2523,1 +2523,1 @@\n-    _package_entry = NULL;\n+    _package_entry = nullptr;\n@@ -2526,1 +2526,1 @@\n-      _package_entry = NULL;\n+      _package_entry = nullptr;\n@@ -2530,1 +2530,1 @@\n-      _package_entry = NULL;\n+      _package_entry = nullptr;\n@@ -2573,1 +2573,1 @@\n-  if (array_klasses() != NULL) {\n+  if (array_klasses() != nullptr) {\n@@ -2605,1 +2605,1 @@\n-  if (java_super() != NULL && !java_super()->can_be_verified_at_dumptime()) {\n+  if (java_super() != nullptr && !java_super()->can_be_verified_at_dumptime()) {\n@@ -2647,1 +2647,1 @@\n-  assert(ik != NULL, \"invariant\");\n+  assert(ik != nullptr, \"invariant\");\n@@ -2673,1 +2673,1 @@\n-  if (_oop_map_cache != NULL) {\n+  if (_oop_map_cache != nullptr) {\n@@ -2675,1 +2675,1 @@\n-    _oop_map_cache = NULL;\n+    _oop_map_cache = nullptr;\n@@ -2680,1 +2680,1 @@\n-  set_jni_ids(NULL);\n+  set_jni_ids(nullptr);\n@@ -2683,2 +2683,2 @@\n-  if (jmeths != (jmethodID*)NULL) {\n-    release_set_methods_jmethod_ids(NULL);\n+  if (jmeths != (jmethodID*)nullptr) {\n+    release_set_methods_jmethod_ids(nullptr);\n@@ -2688,1 +2688,1 @@\n-  assert(_dep_context == NULL,\n+  assert(_dep_context == nullptr,\n@@ -2699,1 +2699,1 @@\n-  if (_cached_class_file != NULL) {\n+  if (_cached_class_file != nullptr) {\n@@ -2701,1 +2701,1 @@\n-    _cached_class_file = NULL;\n+    _cached_class_file = nullptr;\n@@ -2713,2 +2713,2 @@\n-  if (array == NULL) {\n-    _source_debug_extension = NULL;\n+  if (array == nullptr) {\n+    _source_debug_extension = nullptr;\n@@ -2756,1 +2756,1 @@\n-  \/\/ Add the semicolon and the NULL\n+  \/\/ Add the semicolon and the null\n@@ -2799,1 +2799,1 @@\n-  if (is_shared() && _package_entry != NULL) {\n+  if (is_shared() && _package_entry != nullptr) {\n@@ -2805,1 +2805,1 @@\n-      _package_entry = NULL;\n+      _package_entry = nullptr;\n@@ -2812,1 +2812,1 @@\n-      (pkg_entry != NULL) ? NULL : ClassLoader::package_from_class_name(name());\n+      (pkg_entry != nullptr) ? nullptr : ClassLoader::package_from_class_name(name());\n@@ -2815,1 +2815,1 @@\n-  if (pkg_entry != NULL) {\n+  if (pkg_entry != nullptr) {\n@@ -2821,1 +2821,1 @@\n-  if (pkg_name != NULL && loader_data != NULL) {\n+  if (pkg_name != nullptr && loader_data != nullptr) {\n@@ -2824,1 +2824,1 @@\n-    _package_entry = pkg_entry != NULL ? pkg_entry : loader_data->packages()->lookup_only(pkg_name);\n+    _package_entry = pkg_entry != nullptr ? pkg_entry : loader_data->packages()->lookup_only(pkg_name);\n@@ -2829,1 +2829,1 @@\n-    if (_package_entry == NULL) {\n+    if (_package_entry == nullptr) {\n@@ -2836,1 +2836,1 @@\n-        assert(ModuleEntryTable::javabase_moduleEntry() != NULL, JAVA_BASE_NAME \" module is NULL\");\n+        assert(ModuleEntryTable::javabase_moduleEntry() != nullptr, JAVA_BASE_NAME \" module is null\");\n@@ -2839,1 +2839,1 @@\n-        assert(loader_data->unnamed_module() != NULL, \"unnamed module is NULL\");\n+        assert(loader_data->unnamed_module() != nullptr, \"unnamed module is null\");\n@@ -2845,1 +2845,1 @@\n-      assert(_package_entry != NULL, \"Package entry for class %s not found, loader %s\",\n+      assert(_package_entry != nullptr, \"Package entry for class %s not found, loader %s\",\n@@ -2862,1 +2862,1 @@\n-                      (loader_data != NULL) ? loader_data->loader_name_and_id() : \"NULL\",\n+                      (loader_data != nullptr) ? loader_data->loader_name_and_id() : \"null\",\n@@ -2877,1 +2877,1 @@\n-  if (_package_entry != NULL) {\n+  if (_package_entry != nullptr) {\n@@ -2901,2 +2901,2 @@\n-    classloader2 = NULL;\n-    classpkg2 = NULL;\n+    classloader2 = nullptr;\n+    classpkg2 = nullptr;\n@@ -2935,2 +2935,2 @@\n-    \/\/ Check that package_from_class_name() returns NULL, not \"\", if there is no package.\n-    assert(other_pkg == NULL || other_pkg->utf8_length() > 0, \"package name is empty string\");\n+    \/\/ Check that package_from_class_name() returns null, not \"\", if there is no package.\n+    assert(other_pkg == nullptr || other_pkg->utf8_length() > 0, \"package name is empty string\");\n@@ -2939,1 +2939,1 @@\n-      this->package() != NULL ? this->package()->name() : NULL;\n+      this->package() != nullptr ? this->package()->name() : nullptr;\n@@ -2941,1 +2941,1 @@\n-    if (this_package_name == NULL || other_pkg == NULL) {\n+    if (this_package_name == nullptr || other_pkg == nullptr) {\n@@ -2970,1 +2970,1 @@\n-      class_name != NULL && class_name->utf8_length() >= 5) {\n+      class_name != nullptr && class_name->utf8_length() >= 5) {\n@@ -2982,1 +2982,1 @@\n-      assert(pkg_name != NULL, \"Error in parsing package name starting with 'java\/'\");\n+      assert(pkg_name != nullptr, \"Error in parsing package name starting with 'java\/'\");\n@@ -3018,1 +3018,1 @@\n-  InstanceKlass* outer_klass = NULL;\n+  InstanceKlass* outer_klass = nullptr;\n@@ -3036,1 +3036,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -3041,1 +3041,1 @@\n-    if (NULL == outer_klass) {\n+    if (nullptr == outer_klass) {\n@@ -3053,1 +3053,1 @@\n-  if (NULL == outer_klass) return NULL;\n+  if (nullptr == outer_klass) return nullptr;\n@@ -3107,1 +3107,1 @@\n-  if (m != NULL) {\n+  if (m != nullptr) {\n@@ -3142,1 +3142,1 @@\n-  return NULL; \/\/ offset entry not found\n+  return nullptr; \/\/ offset entry not found\n@@ -3155,1 +3155,1 @@\n-  if (!intf_method->is_abstract() && default_methods() != NULL) {\n+  if (!intf_method->is_abstract() && default_methods() != nullptr) {\n@@ -3180,1 +3180,1 @@\n-  if (default_methods() != NULL) {\n+  if (default_methods() != nullptr) {\n@@ -3183,1 +3183,1 @@\n-      if (old_method == NULL || !old_method->is_old()) {\n+      if (old_method == nullptr || !old_method->is_old()) {\n@@ -3212,1 +3212,1 @@\n-  assert(prev == NULL || !prev->is_in_use() COMPILER2_PRESENT(|| StressRecompilation),\n+  assert(prev == nullptr || !prev->is_in_use() COMPILER2_PRESENT(|| StressRecompilation),\n@@ -3225,1 +3225,1 @@\n-    if (inv != NULL && inv->is_in_use()) {\n+    if (inv != nullptr && inv->is_in_use()) {\n@@ -3234,1 +3234,1 @@\n-  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? NULL : CompiledMethod_lock\n+  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? nullptr : CompiledMethod_lock\n@@ -3237,1 +3237,1 @@\n-  nmethod* last = NULL;\n+  nmethod* last = nullptr;\n@@ -3243,1 +3243,1 @@\n-  while(cur != NULL && cur != n) {\n+  while(cur != nullptr && cur != n) {\n@@ -3251,1 +3251,1 @@\n-  nmethod* next = NULL;\n+  nmethod* next = nullptr;\n@@ -3255,1 +3255,1 @@\n-    if (last == NULL) {\n+    if (last == nullptr) {\n@@ -3262,1 +3262,1 @@\n-  n->set_osr_link(NULL);\n+  n->set_osr_link(nullptr);\n@@ -3264,1 +3264,1 @@\n-  while (cur != NULL) {\n+  while (cur != nullptr) {\n@@ -3276,1 +3276,1 @@\n-  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? NULL : CompiledMethod_lock,\n+  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? nullptr : CompiledMethod_lock,\n@@ -3280,1 +3280,1 @@\n-  while (osr != NULL) {\n+  while (osr != nullptr) {\n@@ -3292,1 +3292,1 @@\n-  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? NULL : CompiledMethod_lock,\n+  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? nullptr : CompiledMethod_lock,\n@@ -3295,2 +3295,2 @@\n-  nmethod* best = NULL;\n-  while (osr != NULL) {\n+  nmethod* best = nullptr;\n+  while (osr != nullptr) {\n@@ -3312,1 +3312,1 @@\n-        if (best == NULL || (osr->comp_level() > best->comp_level())) {\n+        if (best == nullptr || (osr->comp_level() > best->comp_level())) {\n@@ -3324,2 +3324,2 @@\n-  assert(match_level == false || best == NULL, \"shouldn't pick up anything if match_level is set\");\n-  if (best != NULL && best->comp_level() >= comp_level) {\n+  assert(match_level == false || best == nullptr, \"shouldn't pick up anything if match_level is set\");\n+  if (best != nullptr && best->comp_level() >= comp_level) {\n@@ -3328,1 +3328,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -3373,1 +3373,1 @@\n-  for (n = 0; sub != NULL; n++, sub = sub->next_sibling()) {\n+  for (n = 0; sub != nullptr; n++, sub = sub->next_sibling()) {\n@@ -3402,1 +3402,1 @@\n-  if (Verbose && default_methods() != NULL) {\n+  if (Verbose && default_methods() != nullptr) {\n@@ -3408,1 +3408,1 @@\n-  if (default_vtable_indices() != NULL) {\n+  if (default_vtable_indices() != nullptr) {\n@@ -3414,1 +3414,1 @@\n-  if (class_loader_data() != NULL) {\n+  if (class_loader_data() != nullptr) {\n@@ -3419,1 +3419,1 @@\n-  if (source_file_name() != NULL) {\n+  if (source_file_name() != nullptr) {\n@@ -3424,1 +3424,1 @@\n-  if (source_debug_extension() != NULL) {\n+  if (source_debug_extension() != nullptr) {\n@@ -3437,1 +3437,1 @@\n-         pv_node != NULL;\n+         pv_node != nullptr;\n@@ -3447,1 +3447,1 @@\n-  if (generic_signature() != NULL) {\n+  if (generic_signature() != nullptr) {\n@@ -3454,1 +3454,1 @@\n-  if (record_components() != NULL) {\n+  if (record_components() != nullptr) {\n@@ -3458,1 +3458,1 @@\n-  if (java_mirror() != NULL) {\n+  if (java_mirror() != nullptr) {\n@@ -3463,1 +3463,1 @@\n-    st->print_cr(BULLET\"java mirror:       NULL\");\n+    st->print_cr(BULLET\"java mirror:       null\");\n@@ -3495,1 +3495,1 @@\n-   if (_obj == NULL) {\n+   if (_obj == nullptr) {\n@@ -3511,1 +3511,1 @@\n-    if (value != NULL &&\n+    if (value != nullptr &&\n@@ -3529,1 +3529,1 @@\n-    if (real_klass != NULL && real_klass->is_instance_klass()) {\n+    if (real_klass != nullptr && real_klass->is_instance_klass()) {\n@@ -3555,1 +3555,1 @@\n-      && java_lang_String::value(obj) != NULL) {\n+      && java_lang_String::value(obj) != nullptr) {\n@@ -3566,1 +3566,1 @@\n-    if (k != NULL) {\n+    if (k != nullptr) {\n@@ -3580,1 +3580,1 @@\n-    if (vmentry != NULL) {\n+    if (vmentry != nullptr) {\n@@ -3586,1 +3586,1 @@\n-    if (vmtarget != NULL) {\n+    if (vmtarget != nullptr) {\n@@ -3592,1 +3592,1 @@\n-      if (clazz != NULL) {\n+      if (clazz != nullptr) {\n@@ -3595,1 +3595,1 @@\n-        st->print(\"NULL\");\n+        st->print(\"null\");\n@@ -3598,1 +3598,1 @@\n-      if (name != NULL) {\n+      if (name != nullptr) {\n@@ -3601,1 +3601,1 @@\n-        st->print(\"NULL\");\n+        st->print(\"null\");\n@@ -3630,4 +3630,4 @@\n-  if (cfs != NULL) {\n-    if (cfs->source() != NULL) {\n-      const char* module_name = (module_entry->name() == NULL) ? UNNAMED_MODULE : module_entry->name()->as_C_string();\n-      if (module_name != NULL) {\n+  if (cfs != nullptr) {\n+    if (cfs->source() != nullptr) {\n+      const char* module_name = (module_entry->name() == nullptr) ? UNNAMED_MODULE : module_entry->name()->as_C_string();\n+      if (module_name != nullptr) {\n@@ -3648,3 +3648,3 @@\n-        NULL;\n-      \/\/ caller can be NULL, for example, during a JVMTI VM_Init hook\n-      if (caller != NULL) {\n+        nullptr;\n+      \/\/ caller can be null, for example, during a JVMTI VM_Init hook\n+      if (caller != nullptr) {\n@@ -3678,1 +3678,1 @@\n-    if (local_interfaces() != NULL && local_interfaces()->length() > 0) {\n+    if (local_interfaces() != nullptr && local_interfaces()->length() > 0) {\n@@ -3743,1 +3743,1 @@\n-  if (subklass() != NULL) {\n+  if (subklass() != nullptr) {\n@@ -3750,1 +3750,1 @@\n-  if (sib != NULL) {\n+  if (sib != nullptr) {\n@@ -3769,1 +3769,1 @@\n-  if (transitive_interfaces() != NULL) {\n+  if (transitive_interfaces() != nullptr) {\n@@ -3778,1 +3778,1 @@\n-  if (methods() != NULL) {\n+  if (methods() != nullptr) {\n@@ -3791,1 +3791,1 @@\n-  if (method_ordering() != NULL) {\n+  if (method_ordering() != nullptr) {\n@@ -3812,1 +3812,1 @@\n-  if (default_methods() != NULL) {\n+  if (default_methods() != nullptr) {\n@@ -3825,1 +3825,1 @@\n-  if (jni_ids() != NULL) {\n+  if (jni_ids() != nullptr) {\n@@ -3830,1 +3830,1 @@\n-  if (constants() != NULL) {\n+  if (constants() != nullptr) {\n@@ -3856,1 +3856,1 @@\n-  while (current != NULL) {\n+  while (current != nullptr) {\n@@ -3860,1 +3860,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -3864,1 +3864,1 @@\n-  while (current != NULL) {\n+  while (current != nullptr) {\n@@ -3878,1 +3878,1 @@\n-  while (current != NULL) {\n+  while (current != nullptr) {\n@@ -3900,1 +3900,1 @@\n-  assert(_init_thread == NULL, \"should be cleared before state change\");\n+  assert(_init_thread == nullptr, \"should be cleared before state change\");\n@@ -3933,1 +3933,1 @@\n-  if (previous_versions() == NULL) {\n+  if (previous_versions() == nullptr) {\n@@ -3943,1 +3943,1 @@\n-  assert(loader_data != NULL, \"should never be null\");\n+  assert(loader_data != nullptr, \"should never be null\");\n@@ -3954,1 +3954,1 @@\n-  for (; pv_node != NULL; ) {\n+  for (; pv_node != nullptr; ) {\n@@ -3957,1 +3957,1 @@\n-    assert(pvcp != NULL, \"cp ref was unexpectedly cleared\");\n+    assert(pvcp != nullptr, \"cp ref was unexpectedly cleared\");\n@@ -3969,1 +3969,1 @@\n-      pv_node->link_previous_versions(NULL);   \/\/ point next to NULL\n+      pv_node->link_previous_versions(nullptr);   \/\/ point next to null\n@@ -3980,1 +3980,1 @@\n-      assert(pvcp->pool_holder() != NULL, \"Constant pool with no holder\");\n+      assert(pvcp->pool_holder() != nullptr, \"Constant pool with no holder\");\n@@ -4001,1 +4001,1 @@\n-      _previous_versions != NULL) {\n+      _previous_versions != nullptr) {\n@@ -4015,1 +4015,1 @@\n-             prev_version != NULL;\n+             prev_version != nullptr;\n@@ -4088,1 +4088,1 @@\n-  assert(scratch_class->previous_versions() == NULL, \"shouldn't have a previous version\");\n+  assert(scratch_class->previous_versions() == nullptr, \"shouldn't have a previous version\");\n@@ -4096,1 +4096,1 @@\n-  Method* m = NULL;\n+  Method* m = nullptr;\n@@ -4100,1 +4100,1 @@\n-  if (m == NULL || m->method_idnum() != idnum) {\n+  if (m == nullptr || m->method_idnum() != idnum) {\n@@ -4108,1 +4108,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -4116,1 +4116,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -4119,1 +4119,1 @@\n-  if (m != NULL && m->orig_method_idnum() == idnum) {\n+  if (m != nullptr && m->orig_method_idnum() == idnum) {\n@@ -4130,1 +4130,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -4136,2 +4136,2 @@\n-  if (holder == NULL) {\n-    return NULL; \/\/ The version of klass is gone, no method is found\n+  if (holder == nullptr) {\n+    return nullptr; \/\/ The version of klass is gone, no method is found\n@@ -4160,2 +4160,2 @@\n-  assert(_current != NULL, \"required\");\n-  if (_visit_subclasses && _current->subklass() != NULL) {\n+  assert(_current != nullptr, \"required\");\n+  if (_visit_subclasses && _current->subklass() != nullptr) {\n@@ -4166,1 +4166,1 @@\n-  while (_current->next_sibling() == NULL && _current != _root) {\n+  while (_current->next_sibling() == nullptr && _current != _root) {\n@@ -4171,1 +4171,1 @@\n-    _current = NULL;\n+    _current = nullptr;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":310,"deletions":310,"binary":false,"changes":620,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-\/\/ If \"obj\" argument to constructor is NULL, prints static fields, otherwise prints non-static fields.\n+\/\/ If \"obj\" argument to constructor is null, prints static fields, otherwise prints non-static fields.\n@@ -86,1 +86,1 @@\n-   FieldPrinter(outputStream* st, oop obj = NULL) : _obj(obj), _st(st) {}\n+   FieldPrinter(outputStream* st, oop obj = nullptr) : _obj(obj), _st(st) {}\n@@ -204,1 +204,1 @@\n-  \/\/ the source debug extension for this klass, NULL if not specified.\n+  \/\/ the source debug extension for this klass, null if not specified.\n@@ -206,1 +206,1 @@\n-  \/\/ it is stored in the instanceklass as a NULL-terminated UTF-8 string\n+  \/\/ it is stored in the instanceklass as a null-terminated UTF-8 string\n@@ -241,1 +241,1 @@\n-  jmethodID*      volatile _methods_jmethod_ids;  \/\/ jmethodIDs corresponding to method_idnum, or NULL if none\n+  jmethodID*      volatile _methods_jmethod_ids;  \/\/ jmethodIDs corresponding to method_idnum, or null if none\n@@ -297,1 +297,1 @@\n-  \/\/     NULL: no implementor.\n+  \/\/     null: no implementor.\n@@ -385,1 +385,1 @@\n-    guarantee(_local_interfaces == NULL || a == NULL, \"Just checking\");\n+    guarantee(_local_interfaces == nullptr || a == nullptr, \"Just checking\");\n@@ -390,1 +390,1 @@\n-    guarantee(_transitive_interfaces == NULL || a == NULL, \"Just checking\");\n+    guarantee(_transitive_interfaces == nullptr || a == nullptr, \"Just checking\");\n@@ -409,1 +409,1 @@\n-    guarantee(_fields == NULL || f == NULL, \"Just checking\");\n+    guarantee(_fields == nullptr || f == nullptr, \"Just checking\");\n@@ -447,1 +447,1 @@\n-    assert(_nest_host != NULL, \"must be\");\n+    assert(_nest_host != nullptr, \"must be\");\n@@ -452,1 +452,1 @@\n-  \/\/ Returns NULL if there was no error.\n+  \/\/ Returns null if there was no error.\n@@ -455,1 +455,1 @@\n-  \/\/ Returns NULL if resolution is not possible from the calling context.\n+  \/\/ Returns null if resolution is not possible from the calling context.\n@@ -481,1 +481,1 @@\n-  bool in_unnamed_package() const   { return (_package_entry == NULL); }\n+  bool in_unnamed_package() const   { return (_package_entry == nullptr); }\n@@ -586,1 +586,1 @@\n-  \/\/ find a local method (returns NULL if not found)\n+  \/\/ find a local method (returns null if not found)\n@@ -600,1 +600,1 @@\n-  \/\/ find a local method (returns NULL if not found)\n+  \/\/ find a local method (returns null if not found)\n@@ -607,1 +607,1 @@\n-  \/\/ find a local method from given methods array (returns NULL if not found)\n+  \/\/ find a local method from given methods array (returns null if not found)\n@@ -623,1 +623,1 @@\n-  \/\/ lookup operation (returns NULL if not found)\n+  \/\/ lookup operation (returns null if not found)\n@@ -630,1 +630,1 @@\n-  \/\/ (returns NULL if not found)\n+  \/\/ (returns null if not found)\n@@ -634,1 +634,1 @@\n-  \/\/ (returns NULL if not found)\n+  \/\/ (returns null if not found)\n@@ -709,1 +709,1 @@\n-  InstanceKlass* previous_versions() const { return NULL; }\n+  InstanceKlass* previous_versions() const { return nullptr; }\n@@ -713,1 +713,1 @@\n-    for (InstanceKlass* ik = this; ik != NULL; ik = ik->previous_versions()) {\n+    for (InstanceKlass* ik = this; ik != nullptr; ik = ik->previous_versions()) {\n@@ -718,1 +718,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -739,1 +739,1 @@\n-    _previous_versions = NULL;\n+    _previous_versions = nullptr;\n@@ -775,1 +775,1 @@\n-    assert(data == NULL, \"unexpected call with JVMTI disabled\");\n+    assert(data == nullptr, \"unexpected call with JVMTI disabled\");\n@@ -777,1 +777,1 @@\n-  JvmtiCachedClassFileData * get_cached_class_file() { return (JvmtiCachedClassFileData *)NULL; }\n+  JvmtiCachedClassFileData * get_cached_class_file() { return (JvmtiCachedClassFileData *)nullptr; }\n@@ -822,1 +822,1 @@\n-    return (_annotations != NULL) ? _annotations->class_annotations() : NULL;\n+    return (_annotations != nullptr) ? _annotations->class_annotations() : nullptr;\n@@ -825,1 +825,1 @@\n-    return (_annotations != NULL) ? _annotations->fields_annotations() : NULL;\n+    return (_annotations != nullptr) ? _annotations->fields_annotations() : nullptr;\n@@ -828,1 +828,1 @@\n-    return (_annotations != NULL) ? _annotations->class_type_annotations() : NULL;\n+    return (_annotations != nullptr) ? _annotations->class_type_annotations() : nullptr;\n@@ -831,1 +831,1 @@\n-    return (_annotations != NULL) ? _annotations->fields_type_annotations() : NULL;\n+    return (_annotations != nullptr) ? _annotations->fields_type_annotations() : nullptr;\n@@ -928,1 +928,1 @@\n-    assert(k != NULL, \"k should not be null\");\n+    assert(k != nullptr, \"k should not be null\");\n@@ -934,1 +934,1 @@\n-    return (super() == NULL) ? NULL : cast(super());\n+    return (super() == nullptr) ? nullptr : cast(super());\n@@ -1088,1 +1088,1 @@\n-  \/\/ going from NULL to non-NULL.\n+  \/\/ going from null to non-null.\n@@ -1116,1 +1116,1 @@\n-  \/\/ find a local method (returns NULL if not found)\n+  \/\/ find a local method (returns null if not found)\n@@ -1249,1 +1249,1 @@\n-    if (k->inner_classes() != NULL) {\n+    if (k->inner_classes() != nullptr) {\n@@ -1335,1 +1335,1 @@\n-    return (_current == NULL);\n+    return (_current == nullptr);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -190,1 +190,1 @@\n-  if (k == NULL) {\n+  if (k == nullptr) {\n@@ -192,1 +192,1 @@\n-    THROW_(vmSymbols::java_lang_InstantiationException(), NULL);\n+    THROW_(vmSymbols::java_lang_InstantiationException(), nullptr);\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-  if (k != NULL && k->is_instance_klass()) {\n+  if (k != nullptr && k->is_instance_klass()) {\n@@ -64,1 +64,1 @@\n-  if (k != NULL && k->is_instance_klass()) {\n+  if (k != nullptr && k->is_instance_klass()) {\n","filename":"src\/hotspot\/share\/oops\/instanceMirrorKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,3 +55,3 @@\n-    \/\/ We'll get NULL for primitive mirrors.\n-    if (klass != NULL) {\n-      if (klass->class_loader_data() == NULL) {\n+    \/\/ We'll get null for primitive mirrors.\n+    if (klass != nullptr) {\n+      if (klass->class_loader_data() == nullptr) {\n@@ -74,1 +74,1 @@\n-      \/\/ We would like to assert here (as below) that if klass has been NULL, then\n+      \/\/ We would like to assert here (as below) that if klass has been null, then\n@@ -128,2 +128,2 @@\n-      \/\/ We'll get NULL for primitive mirrors.\n-      if (klass != NULL) {\n+      \/\/ We'll get null for primitive mirrors.\n+      if (klass != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/instanceMirrorKlass.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-  if (referent != NULL) {\n+  if (referent != nullptr) {\n@@ -120,1 +120,1 @@\n-  if (next != NULL) {\n+  if (next != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/instanceRefKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-  if (rd != NULL) {\n+  if (rd != nullptr) {\n@@ -70,1 +70,1 @@\n-    if (referent != NULL) {\n+    if (referent != nullptr) {\n@@ -102,1 +102,1 @@\n-  assert(closure->ref_discoverer() == NULL, \"ReferenceDiscoverer should not be set\");\n+  assert(closure->ref_discoverer() == nullptr, \"ReferenceDiscoverer should not be set\");\n@@ -109,1 +109,1 @@\n-  assert(closure->ref_discoverer() == NULL, \"ReferenceDiscoverer should not be set\");\n+  assert(closure->ref_discoverer() == nullptr, \"ReferenceDiscoverer should not be set\");\n","filename":"src\/hotspot\/share\/oops\/instanceRefKlass.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -238,1 +238,1 @@\n-    st->print_cr(\"CHUNK NULL\");\n+    st->print_cr(\"CHUNK null\");\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-  if (_name != NULL) _name->increment_refcount();\n+  if (_name != nullptr) _name->increment_refcount();\n@@ -99,1 +99,1 @@\n-  while (t != NULL) {\n+  while (t != nullptr) {\n@@ -107,1 +107,1 @@\n-  if (_name != NULL) _name->decrement_refcount();\n+  if (_name != nullptr) _name->decrement_refcount();\n@@ -134,1 +134,1 @@\n-    if (s == NULL || s->next_sibling() != NULL) \/\/ Oops; wrong count; give up\n+    if (s == nullptr || s->next_sibling() != nullptr) \/\/ Oops; wrong count; give up\n@@ -162,1 +162,1 @@\n-  assert(s != NULL, \"Throw NPE!\");\n+  assert(s != nullptr, \"Throw NPE!\");\n@@ -179,1 +179,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -191,1 +191,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -231,1 +231,1 @@\n-  if (super() == NULL)\n+  if (super() == nullptr)\n@@ -240,2 +240,2 @@\n-  if (k == NULL) {\n-    set_super(NULL);\n+  if (k == nullptr) {\n+    set_super(nullptr);\n@@ -245,1 +245,1 @@\n-    assert(super() == NULL || super() == vmClasses::Object_klass(),\n+    assert(super() == nullptr || super() == vmClasses::Object_klass(),\n@@ -276,1 +276,1 @@\n-        assert(primary_super_of_depth(j1) == NULL, \"super list padding\");\n+        assert(primary_super_of_depth(j1) == nullptr, \"super list padding\");\n@@ -278,1 +278,1 @@\n-      while (t != NULL) {\n+      while (t != nullptr) {\n@@ -288,1 +288,1 @@\n-  if (secondary_supers() == NULL) {\n+  if (secondary_supers() == nullptr) {\n@@ -295,1 +295,1 @@\n-    for (p = super(); !(p == NULL || p->can_be_primary_super()); p = p->super()) {\n+    for (p = super(); !(p == nullptr || p->can_be_primary_super()); p = p->super()) {\n@@ -303,1 +303,1 @@\n-    if (secondaries == NULL) {\n+    if (secondaries == nullptr) {\n@@ -310,1 +310,1 @@\n-    for (p = super(); !(p == NULL || p->can_be_primary_super()); p = p->super()) {\n+    for (p = super(); !(p == nullptr || p->can_be_primary_super()); p = p->super()) {\n@@ -342,1 +342,1 @@\n-      \/\/ We must not copy any NULL placeholders left over from bootstrap.\n+      \/\/ We must not copy any null placeholders left over from bootstrap.\n@@ -344,1 +344,1 @@\n-      assert(s2->at(j) != NULL, \"correct bootstrapping order\");\n+      assert(s2->at(j) != nullptr, \"correct bootstrapping order\");\n@@ -355,1 +355,1 @@\n-  assert(transitive_interfaces == NULL, \"sanity\");\n+  assert(transitive_interfaces == nullptr, \"sanity\");\n@@ -357,1 +357,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -363,2 +363,2 @@\n-  assert(super() == NULL || super()->is_instance_klass(), \"must be instance klass\");\n-  return _super == NULL ? NULL : InstanceKlass::cast(_super);\n+  assert(super() == nullptr || super()->is_instance_klass(), \"must be instance klass\");\n+  return _super == nullptr ? nullptr : InstanceKlass::cast(_super);\n@@ -374,1 +374,1 @@\n-       chain != NULL;\n+       chain != nullptr;\n@@ -388,1 +388,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -395,1 +395,1 @@\n-       chain != NULL;\n+       chain != nullptr;\n@@ -408,1 +408,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -431,1 +431,1 @@\n-  if (super == NULL) return;        \/\/ special case: class Object\n+  if (super == nullptr) return;     \/\/ special case: class Object\n@@ -433,1 +433,1 @@\n-          && (super->superklass() == NULL || !is_interface())),\n+          && (super->superklass() == nullptr || !is_interface())),\n@@ -441,1 +441,1 @@\n-    if (prev_first_subklass != NULL) {\n+    if (prev_first_subklass != nullptr) {\n@@ -460,1 +460,1 @@\n-    if (subklass == NULL || subklass->is_loader_alive()) {\n+    if (subklass == nullptr || subklass->is_loader_alive()) {\n@@ -485,1 +485,1 @@\n-    if (sub != NULL) {\n+    if (sub != nullptr) {\n@@ -492,1 +492,1 @@\n-    if (sibling != NULL) {\n+    if (sibling != nullptr) {\n@@ -503,1 +503,1 @@\n-      while ((ik = ik->previous_versions()) != NULL) {\n+      while ((ik = ik->previous_versions()) != nullptr) {\n@@ -525,1 +525,1 @@\n-    \/\/ to follow these pointers anyway, as they will be set to NULL in\n+    \/\/ to follow these pointers anyway, as they will be set to null in\n@@ -548,3 +548,3 @@\n-  set_subklass(NULL);\n-  set_next_sibling(NULL);\n-  set_next_link(NULL);\n+  set_subklass(nullptr);\n+  set_next_sibling(nullptr);\n+  set_next_link(nullptr);\n@@ -553,1 +553,1 @@\n-  set_class_loader_data(NULL);\n+  set_class_loader_data(nullptr);\n@@ -579,1 +579,1 @@\n-  if (class_loader_data() == NULL) {\n+  if (class_loader_data() == nullptr) {\n@@ -588,1 +588,1 @@\n-  ModuleEntry* module_entry = NULL;\n+  ModuleEntry* module_entry = nullptr;\n@@ -601,1 +601,1 @@\n-  Handle module_handle(THREAD, ((module_entry != NULL) ? module_entry->module() : (oop)NULL));\n+  Handle module_handle(THREAD, ((module_entry != nullptr) ? module_entry->module() : (oop)nullptr));\n@@ -623,1 +623,1 @@\n-  if (java_mirror() == NULL) {\n+  if (java_mirror() == nullptr) {\n@@ -692,1 +692,1 @@\n-  if (name() == NULL)  return \"<unknown>\";\n+  if (name() == nullptr)  return \"<unknown>\";\n@@ -697,1 +697,1 @@\n-  if (name() == NULL)  return \"<unknown>\";\n+  if (name() == nullptr)  return \"<unknown>\";\n@@ -772,1 +772,1 @@\n-  if (super() != NULL) {\n+  if (super() != nullptr) {\n@@ -775,1 +775,1 @@\n-  if (secondary_super_cache() != NULL) {\n+  if (secondary_super_cache() != nullptr) {\n@@ -781,1 +781,1 @@\n-    if (ko != NULL) {\n+    if (ko != nullptr) {\n@@ -786,1 +786,1 @@\n-  if (java_mirror_no_keepalive() != NULL) {\n+  if (java_mirror_no_keepalive() != nullptr) {\n@@ -849,1 +849,1 @@\n-  if (joint_description == NULL) {\n+  if (joint_description == nullptr) {\n@@ -908,1 +908,1 @@\n-  assert(cld != NULL, \"class_loader_data should not be null\");\n+  assert(cld != nullptr, \"class_loader_data should not be null\");\n@@ -922,1 +922,1 @@\n-    if (parent_cld == NULL) {\n+    if (parent_cld == nullptr) {\n@@ -924,1 +924,1 @@\n-      if (cl_name_and_id != NULL) {\n+      if (cl_name_and_id != nullptr) {\n@@ -941,1 +941,1 @@\n-  if (class_description == NULL) {\n+  if (class_description == nullptr) {\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":54,"deletions":54,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -148,1 +148,1 @@\n-  \/\/ First subclass (NULL if none); _subklass->next_sibling() is next one\n+  \/\/ First subclass (null if none); _subklass->next_sibling() is next one\n@@ -150,1 +150,1 @@\n-  \/\/ Sibling link (or NULL); links all subklasses of a klass\n+  \/\/ Sibling link (or null); links all subklasses of a klass\n@@ -223,1 +223,1 @@\n-  virtual InstanceKlass* java_super() const  { return NULL; }\n+  virtual InstanceKlass* java_super() const  { return nullptr; }\n@@ -235,1 +235,1 @@\n-  \/\/ If there is no such element, return either NULL or this.\n+  \/\/ If there is no such element, return either null or this.\n@@ -239,1 +239,1 @@\n-    assert(super == NULL || super->super_depth() == i, \"correct display\");\n+    assert(super == nullptr || super->super_depth() == i, \"correct display\");\n@@ -268,1 +268,1 @@\n-  oop archived_java_mirror() NOT_CDS_JAVA_HEAP_RETURN_(NULL);\n+  oop archived_java_mirror() NOT_CDS_JAVA_HEAP_RETURN_(nullptr);\n@@ -275,1 +275,1 @@\n-  \/\/ Set java mirror OopHandle to NULL for CDS\n+  \/\/ Set java mirror OopHandle to null for CDS\n@@ -531,1 +531,1 @@\n-  \/\/ These will return NULL instead of allocating on the heap:\n+  \/\/ These will return null instead of allocating on the heap:\n@@ -570,1 +570,1 @@\n-    } else if (_java_mirror.ptr_raw() == NULL) {\n+    } else if (_java_mirror.ptr_raw() == nullptr) {\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-  vtable_length = super == NULL ? 0 : super->vtable_length();\n+  vtable_length = super == nullptr ? 0 : super->vtable_length();\n@@ -93,1 +93,1 @@\n-  get_mirandas(&new_mirandas, all_mirandas, super, methods, NULL, local_interfaces,\n+  get_mirandas(&new_mirandas, all_mirandas, super, methods, nullptr, local_interfaces,\n@@ -109,1 +109,1 @@\n-  if (super == NULL && vtable_length != Universe::base_vtable_size()) {\n+  if (super == nullptr && vtable_length != Universe::base_vtable_size()) {\n@@ -134,1 +134,1 @@\n-  if (super == NULL) {\n+  if (super == nullptr) {\n@@ -215,1 +215,1 @@\n-    if (default_methods != NULL) {\n+    if (default_methods != nullptr) {\n@@ -219,1 +219,1 @@\n-        assert(def_vtable_indices != NULL, \"should be created\");\n+        assert(def_vtable_indices != nullptr, \"should be created\");\n@@ -317,1 +317,1 @@\n-  while (superk != NULL && superk->super() != NULL) {\n+  while (superk != nullptr && superk->super() != nullptr) {\n@@ -346,1 +346,1 @@\n-      superk = (InstanceKlass*)NULL;\n+      superk = (InstanceKlass*)nullptr;\n@@ -350,1 +350,1 @@\n-    superk = superk->super() == NULL ? NULL : InstanceKlass::cast(superk->super());\n+    superk = superk->super() == nullptr ? nullptr : InstanceKlass::cast(superk->super());\n@@ -391,1 +391,1 @@\n-  Array<int>* def_vtable_indices = NULL;\n+  Array<int>* def_vtable_indices = nullptr;\n@@ -403,1 +403,1 @@\n-    assert(def_vtable_indices != NULL, \"def vtable alloc?\");\n+    assert(def_vtable_indices != nullptr, \"def vtable alloc?\");\n@@ -441,1 +441,1 @@\n-  if (super == NULL) {\n+  if (super == nullptr) {\n@@ -454,2 +454,2 @@\n-  assert(target_klass != NULL, \"impossible\");\n-  if (target_klass == NULL) {\n+  assert(target_klass != nullptr, \"impossible\");\n+  if (target_klass == nullptr) {\n@@ -494,1 +494,1 @@\n-                                                     target_classname)) != NULL))) {\n+                                                     target_classname)) != nullptr))) {\n@@ -507,1 +507,1 @@\n-        if (supers != NULL) {\n+        if (supers != nullptr) {\n@@ -515,1 +515,1 @@\n-          if (def_vtable_indices != NULL) {\n+          if (def_vtable_indices != nullptr) {\n@@ -553,1 +553,1 @@\n-      const char* sig = (m != NULL) ? m->name_and_sig_as_C_string() : \"<NULL>\";\n+      const char* sig = (m != nullptr) ? m->name_and_sig_as_C_string() : \"<null>\";\n@@ -555,1 +555,1 @@\n-      if (m != NULL) {\n+      if (m != nullptr) {\n@@ -571,1 +571,1 @@\n-    if (target_method() != NULL && super_klass != NULL) {\n+    if (target_method() != nullptr && super_klass != nullptr) {\n@@ -592,1 +592,1 @@\n-          if (failed_type_symbol != NULL) {\n+          if (failed_type_symbol != nullptr) {\n@@ -618,1 +618,1 @@\n-  GrowableArray<InstanceKlass*>* supers = new GrowableArray<InstanceKlass*>(_length, _length, NULL);\n+  GrowableArray<InstanceKlass*>* supers = new GrowableArray<InstanceKlass*>(_length, _length, nullptr);\n@@ -663,1 +663,1 @@\n-  if (target_method->method_holder() != NULL &&\n+  if (target_method->method_holder() != nullptr &&\n@@ -672,1 +672,1 @@\n-  if (super == NULL) {\n+  if (super == nullptr) {\n@@ -687,3 +687,3 @@\n-  Method* super_method = NULL;\n-  InstanceKlass *holder = NULL;\n-  Method* recheck_method =  NULL;\n+  Method* super_method = nullptr;\n+  InstanceKlass *holder = nullptr;\n+  Method* recheck_method =  nullptr;\n@@ -691,1 +691,1 @@\n-  while (k != NULL) {\n+  while (k != nullptr) {\n@@ -694,1 +694,1 @@\n-    if (super_method == NULL) {\n+    if (super_method == nullptr) {\n@@ -746,1 +746,1 @@\n-    if (sk->lookup_method_in_all_interfaces(name, signature, Klass::DefaultsLookupMode::find) != NULL) {\n+    if (sk->lookup_method_in_all_interfaces(name, signature, Klass::DefaultsLookupMode::find) != nullptr) {\n@@ -852,1 +852,1 @@\n-                                       Klass::PrivateLookupMode::skip) != NULL)\n+                                       Klass::PrivateLookupMode::skip) != nullptr)\n@@ -858,2 +858,2 @@\n-  if ((default_methods != NULL) &&\n-    (InstanceKlass::find_method(default_methods, name, signature) != NULL))\n+  if ((default_methods != nullptr) &&\n+    (InstanceKlass::find_method(default_methods, name, signature) != nullptr))\n@@ -869,1 +869,1 @@\n-  for (const Klass* cursuper = super; cursuper != NULL; cursuper = cursuper->super())\n+  for (const Klass* cursuper = super; cursuper != nullptr; cursuper = cursuper->super())\n@@ -876,1 +876,1 @@\n-     if (found_mth != NULL && (!is_interface ||\n+     if (found_mth != nullptr && (!is_interface ||\n@@ -918,1 +918,1 @@\n-        if (sk->lookup_method_in_all_interfaces(im->name(), im->signature(), Klass::DefaultsLookupMode::find) == NULL) {\n+        if (sk->lookup_method_in_all_interfaces(im->name(), im->signature(), Klass::DefaultsLookupMode::find) == nullptr) {\n@@ -921,1 +921,1 @@\n-        if (all_mirandas != NULL) {\n+        if (all_mirandas != nullptr) {\n@@ -965,1 +965,1 @@\n-  get_mirandas(&mirandas, NULL, ik()->super(), ik()->methods(),\n+  get_mirandas(&mirandas, nullptr, ik()->super(), ik()->methods(),\n@@ -973,1 +973,1 @@\n-      if (meth != NULL) {\n+      if (meth != nullptr) {\n@@ -1000,1 +1000,1 @@\n-  if (default_methods != NULL) {\n+  if (default_methods != nullptr) {\n@@ -1022,1 +1022,1 @@\n-    if (old_method == NULL || !old_method->is_old()) {\n+    if (old_method == nullptr || !old_method->is_old()) {\n@@ -1055,1 +1055,1 @@\n-    if (m != NULL &&\n+    if (m != nullptr &&\n@@ -1070,1 +1070,1 @@\n-    if (m != NULL) {\n+    if (m != nullptr) {\n@@ -1092,1 +1092,1 @@\n-  if (m == NULL) return;\n+  if (m == nullptr) return;\n@@ -1115,1 +1115,1 @@\n-    if (offset_entry  != NULL && offset_entry->interface_klass() != NULL) { \/\/ Check that itable is initialized\n+    if (offset_entry  != nullptr && offset_entry->interface_klass() != nullptr) { \/\/ Check that itable is initialized\n@@ -1164,1 +1164,1 @@\n-      assert(interf != NULL && ioe->offset() != 0, \"bad offset entry in itable\");\n+      assert(interf != nullptr && ioe->offset() != 0, \"bad offset entry in itable\");\n@@ -1171,1 +1171,1 @@\n-  guarantee(ioe->interface_klass() == NULL && ioe->offset() == 0, \"terminator entry missing\");\n+  guarantee(ioe->interface_klass() == nullptr && ioe->offset() == 0, \"terminator entry missing\");\n@@ -1182,1 +1182,1 @@\n-    if (target != NULL && interface_method != NULL) {\n+    if (target != nullptr && interface_method != nullptr) {\n@@ -1197,1 +1197,1 @@\n-        if (failed_type_symbol != NULL) {\n+        if (failed_type_symbol != nullptr) {\n@@ -1226,1 +1226,1 @@\n-    new GrowableArray<Method*>(_size_method_table, _size_method_table, NULL);\n+    new GrowableArray<Method*>(_size_method_table, _size_method_table, nullptr);\n@@ -1262,1 +1262,1 @@\n-        assert(m != NULL, \"methods can never be null\");\n+        assert(m != nullptr, \"methods can never be null\");\n@@ -1324,1 +1324,1 @@\n-    Method* target = NULL;\n+    Method* target = nullptr;\n@@ -1335,2 +1335,2 @@\n-    if (target == NULL || !target->is_public() || target->is_abstract() || target->is_overpass()) {\n-      assert(target == NULL || !target->is_overpass() || target->is_public(),\n+    if (target == nullptr || !target->is_public() || target->is_abstract() || target->is_overpass()) {\n+      assert(target == nullptr || !target->is_overpass() || target->is_public(),\n@@ -1339,1 +1339,1 @@\n-      if (!(target == NULL) && !target->is_public()) {\n+      if (!(target == nullptr) && !target->is_public()) {\n@@ -1351,1 +1351,1 @@\n-      if (supers != NULL) {\n+      if (supers != nullptr) {\n@@ -1358,1 +1358,1 @@\n-        if (target != NULL) {\n+        if (target != nullptr) {\n@@ -1382,1 +1382,1 @@\n-    if (old_method == NULL || !old_method->is_old()) {\n+    if (old_method == nullptr || !old_method->is_old()) {\n@@ -1405,1 +1405,1 @@\n-    if (m != NULL &&\n+    if (m != nullptr &&\n@@ -1422,1 +1422,1 @@\n-    if (m != NULL) {\n+    if (m != nullptr) {\n@@ -1573,1 +1573,1 @@\n-  if (super != NULL) {\n+  if (super != nullptr) {\n@@ -1605,1 +1605,1 @@\n-    assert(method() != NULL, \"must have set method\");\n+    assert(method() != nullptr, \"must have set method\");\n@@ -1607,1 +1607,1 @@\n-  if (method() != NULL) {\n+  if (method() != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/klassVtable.cpp","additions":64,"deletions":64,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-  void initialize_vtable(GrowableArray<InstanceKlass*>* supers = NULL);\n+  void initialize_vtable(GrowableArray<InstanceKlass*>* supers = nullptr);\n@@ -193,2 +193,2 @@\n-  void set(Method* method)  { assert(method != NULL, \"use clear\"); _method = method; }\n-  void clear()                { _method = NULL; }\n+  void set(Method* method)  { assert(method != nullptr, \"use clear\"); _method = method; }\n+  void clear()                { _method = nullptr; }\n@@ -204,1 +204,1 @@\n-  assert(table()[i].method() != NULL, \"should not be null\");\n+  assert(table()[i].method() != nullptr, \"should not be null\");\n@@ -249,1 +249,1 @@\n-  void clear()             { _method = NULL; }\n+  void clear()             { _method = nullptr; }\n@@ -301,1 +301,1 @@\n-  void initialize_itable(GrowableArray<Method*>* supers = NULL);\n+  void initialize_itable(GrowableArray<Method*>* supers = nullptr);\n","filename":"src\/hotspot\/share\/oops\/klassVtable.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,2 @@\n-      if (mon == NULL) {\n-        st->print(\"NULL (this should never be seen!)\");\n+      if (mon == nullptr) {\n+        st->print(\"null (this should never be seen!)\");\n","filename":"src\/hotspot\/share\/oops\/markWord.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,2 @@\n-    if (NULL == m)\n-      st->print(\"NULL\");\n+    if (nullptr == m)\n+      st->print(\"null\");\n","filename":"src\/hotspot\/share\/oops\/metadata.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-  set_method_data(NULL);\n+  set_method_data(nullptr);\n@@ -115,2 +115,2 @@\n-  set_interpreter_entry(NULL); \/\/ sets i2i entry and from_int\n-  set_adapter_entry(NULL);\n+  set_interpreter_entry(nullptr); \/\/ sets i2i entry and from_int\n+  set_adapter_entry(nullptr);\n@@ -121,1 +121,1 @@\n-    set_signature_handler(NULL);\n+    set_signature_handler(nullptr);\n@@ -133,1 +133,1 @@\n-  set_constMethod(NULL);\n+  set_constMethod(nullptr);\n@@ -135,1 +135,1 @@\n-  set_method_data(NULL);\n+  set_method_data(nullptr);\n@@ -139,1 +139,1 @@\n-  if (code() != NULL) _code = NULL;\n+  if (code() != nullptr) _code = nullptr;\n@@ -152,1 +152,1 @@\n-  assert(adapter() != NULL, \"must have\");\n+  assert(adapter() != nullptr, \"must have\");\n@@ -157,1 +157,1 @@\n-  assert(adapter() != NULL, \"must have\");\n+  assert(adapter() != nullptr, \"must have\");\n@@ -162,1 +162,1 @@\n-  assert(adapter() != NULL, \"must have\");\n+  assert(adapter() != nullptr, \"must have\");\n@@ -168,1 +168,1 @@\n-  assert(adapter() != NULL, \"must have\");\n+  assert(adapter() != nullptr, \"must have\");\n@@ -236,1 +236,1 @@\n-                          ex_klass == NULL ? \"NULL\" : ex_klass->external_name(), mh->name()->as_C_string());\n+                          ex_klass == nullptr ? \"null\" : ex_klass->external_name(), mh->name()->as_C_string());\n@@ -263,1 +263,1 @@\n-                               ex_klass == NULL ? \"NULL\" : ex_klass->external_name(), mh->name()->as_C_string(), handler_bci);\n+                               ex_klass == nullptr ? \"null\" : ex_klass->external_name(), mh->name()->as_C_string(), handler_bci);\n@@ -266,1 +266,1 @@\n-      } else if (ex_klass == NULL) {\n+      } else if (ex_klass == nullptr) {\n@@ -270,1 +270,1 @@\n-          log_info(exceptions)(\"NULL exception class is implicitly caught by handler in method \\\"%s\\\" at BCI: %d\",\n+          log_info(exceptions)(\"null exception class is implicitly caught by handler in method \\\"%s\\\" at BCI: %d\",\n@@ -292,1 +292,1 @@\n-        assert(k != NULL, \"klass not loaded\");\n+        assert(k != nullptr, \"klass not loaded\");\n@@ -297,1 +297,1 @@\n-                                 ex_klass == NULL ? \"NULL\" : ex_klass->external_name(), mh->name()->as_C_string(), handler_bci);\n+                                 ex_klass == nullptr ? \"null\" : ex_klass->external_name(), mh->name()->as_C_string(), handler_bci);\n@@ -372,1 +372,1 @@\n-  if (is_native() && bcp == NULL) {\n+  if (is_native() && bcp == nullptr) {\n@@ -467,1 +467,1 @@\n-    if (trial_name == NULL) {\n+    if (trial_name == nullptr) {\n@@ -471,1 +471,1 @@\n-    if (method == NULL) {\n+    if (method == nullptr) {\n@@ -483,1 +483,1 @@\n-  return NULL; \/\/ not found\n+  return nullptr; \/\/ not found\n@@ -488,1 +488,1 @@\n-  if (method == NULL) {\n+  if (method == nullptr) {\n@@ -499,1 +499,1 @@\n-    if (method == NULL) {\n+    if (method == nullptr) {\n@@ -509,1 +509,1 @@\n-  if (entry != NULL) {\n+  if (entry != nullptr) {\n@@ -527,1 +527,1 @@\n-  if (is_accessor() || is_empty_method() || (code() != NULL)) {\n+  if (is_accessor() || is_empty_method() || (code() != nullptr)) {\n@@ -532,1 +532,1 @@\n-  else if ((method_counters() != NULL &&\n+  else if ((method_counters() != nullptr &&\n@@ -534,1 +534,1 @@\n-           (method_data() != NULL &&\n+           (method_data() != nullptr &&\n@@ -571,1 +571,1 @@\n-  if (method_data() != NULL) {\n+  if (method_data() != nullptr) {\n@@ -617,1 +617,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -636,1 +636,1 @@\n-  if (counters == NULL) {\n+  if (counters == nullptr) {\n@@ -639,1 +639,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -796,1 +796,1 @@\n-  if (method_holder() != NULL &&\n+  if (method_holder() != nullptr &&\n@@ -974,1 +974,1 @@\n-    return SystemDictionary::find_instance_klass(thread, klass_name, loader, prot) != NULL;\n+    return SystemDictionary::find_instance_klass(thread, klass_name, loader, prot) != nullptr;\n@@ -992,1 +992,1 @@\n-  assert(function != NULL, \"use clear_native_function to unregister natives\");\n+  assert(function != nullptr, \"use clear_native_function to unregister natives\");\n@@ -1001,1 +1001,1 @@\n-      function != NULL) {\n+      function != nullptr) {\n@@ -1016,1 +1016,1 @@\n-  if (nm != NULL) {\n+  if (nm != nullptr) {\n@@ -1026,1 +1026,1 @@\n-  return (func != NULL && func != SharedRuntime::native_method_throw_unsatisfied_link_error_entry());\n+  return (func != nullptr && func != SharedRuntime::native_method_throw_unsatisfied_link_error_entry());\n@@ -1046,1 +1046,1 @@\n-  assert(reason != NULL, \"must provide a reason\");\n+  assert(reason != nullptr, \"must provide a reason\");\n@@ -1060,1 +1060,1 @@\n-    if (reason != NULL) {\n+    if (reason != nullptr) {\n@@ -1065,1 +1065,1 @@\n-  if ((TraceDeoptimization || LogCompilation) && (xtty != NULL)) {\n+  if ((TraceDeoptimization || LogCompilation) && (xtty != nullptr)) {\n@@ -1069,1 +1069,1 @@\n-    if (reason != NULL) {\n+    if (reason != nullptr) {\n@@ -1150,1 +1150,1 @@\n-  \/\/ this may be NULL if c2i adapters have not been made yet\n+  \/\/ this may be null if c2i adapters have not been made yet\n@@ -1152,2 +1152,2 @@\n-  if (adapter() == NULL) {\n-    _from_compiled_entry    = NULL;\n+  if (adapter() == nullptr) {\n+    _from_compiled_entry    = nullptr;\n@@ -1160,1 +1160,1 @@\n-  _code = NULL;\n+  _code = nullptr;\n@@ -1164,1 +1164,1 @@\n-  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? NULL : CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? nullptr : CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n@@ -1175,1 +1175,1 @@\n-  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? NULL : CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n+  MutexLocker ml(CompiledMethod_lock->owned_by_self() ? nullptr : CompiledMethod_lock, Mutex::_no_safepoint_check_flag);\n@@ -1183,5 +1183,5 @@\n-  _code = NULL;\n-  _adapter = NULL;\n-  _i2i_entry = NULL;\n-  _from_compiled_entry = NULL;\n-  _from_interpreted_entry = NULL;\n+  _code = nullptr;\n+  _adapter = nullptr;\n+  _i2i_entry = nullptr;\n+  _from_compiled_entry = nullptr;\n+  _from_interpreted_entry = nullptr;\n@@ -1190,2 +1190,2 @@\n-    *native_function_addr() = NULL;\n-    set_signature_handler(NULL);\n+    *native_function_addr() = nullptr;\n+    set_signature_handler(nullptr);\n@@ -1195,1 +1195,1 @@\n-  set_method_data(NULL);\n+  set_method_data(nullptr);\n@@ -1205,1 +1205,1 @@\n-  if (adapter() != NULL) {\n+  if (adapter() != nullptr) {\n@@ -1208,1 +1208,1 @@\n-  assert( _code == NULL, \"nothing compiled yet\" );\n+  assert( _code == nullptr, \"nothing compiled yet\" );\n@@ -1213,1 +1213,1 @@\n-  assert(adapter() == NULL, \"init'd to NULL\");\n+  assert(adapter() == nullptr, \"init'd to null\");\n@@ -1215,1 +1215,1 @@\n-  assert(entry != NULL, \"interpreter entry must be non-null\");\n+  assert(entry != nullptr, \"interpreter entry must be non-null\");\n@@ -1240,3 +1240,3 @@\n-    _from_interpreted_entry = NULL;\n-    _from_compiled_entry = NULL;\n-    _i2i_entry = NULL;\n+    _from_interpreted_entry = nullptr;\n+    _from_compiled_entry = nullptr;\n+    _i2i_entry = nullptr;\n@@ -1251,1 +1251,1 @@\n-  if (adapter == NULL ) {\n+  if (adapter == nullptr ) {\n@@ -1276,1 +1276,1 @@\n-  assert(_from_compiled_entry != NULL, \"must be set\");\n+  assert(_from_compiled_entry != nullptr, \"must be set\");\n@@ -1286,1 +1286,1 @@\n-  return code == NULL || (code->method() == NULL) || (code->method() == (Method*)this && !code->is_osr_method());\n+  return code == nullptr || (code->method() == nullptr) || (code->method() == (Method*)this && !code->is_osr_method());\n@@ -1295,1 +1295,1 @@\n-  guarantee(mh->adapter() != NULL, \"Adapter blob must already exist!\");\n+  guarantee(mh->adapter() != nullptr, \"Adapter blob must already exist!\");\n@@ -1314,1 +1314,1 @@\n-    assert(mh->_from_interpreted_entry == NULL, \"initialized incorrectly\"); \/\/ see link_method\n+    assert(mh->_from_interpreted_entry == nullptr, \"initialized incorrectly\"); \/\/ see link_method\n@@ -1342,1 +1342,1 @@\n-    if (ik->lookup_method(name(), signature()) == NULL) {\n+    if (ik->lookup_method(name(), signature()) == nullptr) {\n@@ -1499,1 +1499,1 @@\n-  if (klass != NULL && klass->class_loader() != NULL) {\n+  if (klass != nullptr && klass->class_loader() != nullptr) {\n@@ -1504,1 +1504,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1617,1 +1617,1 @@\n-  \/\/ if loader is not the default loader (i.e., != NULL), we can't know the intrinsics\n+  \/\/ if loader is not the default loader (i.e., non-null), we can't know the intrinsics\n@@ -1622,1 +1622,1 @@\n-  if ((ik->class_loader() != NULL) && !SystemDictionary::is_platform_class_loader(ik->class_loader())) {\n+  if ((ik->class_loader() != nullptr) && !SystemDictionary::is_platform_class_loader(ik->class_loader())) {\n@@ -1716,1 +1716,1 @@\n-      if( klass == NULL) { sig_is_loaded = false; }\n+      if( klass == nullptr) { sig_is_loaded = false; }\n@@ -1747,1 +1747,1 @@\n-    if (func == NULL) {\n+    if (func == nullptr) {\n@@ -1848,1 +1848,1 @@\n-  for (; bp != NULL; bp = bp->next()) {\n+  for (; bp != nullptr; bp = bp->next()) {\n@@ -1863,1 +1863,1 @@\n-  for (; bp != NULL; bp = bp->next()) {\n+  for (; bp != nullptr; bp = bp->next()) {\n@@ -1882,1 +1882,1 @@\n-  BreakpointInfo* prev_bp = NULL;\n+  BreakpointInfo* prev_bp = nullptr;\n@@ -1884,1 +1884,1 @@\n-  for (BreakpointInfo* bp = ik->breakpoints(); bp != NULL; bp = next_bp) {\n+  for (BreakpointInfo* bp = ik->breakpoints(); bp != nullptr; bp = next_bp) {\n@@ -1891,1 +1891,1 @@\n-      if (prev_bp != NULL)\n+      if (prev_bp != nullptr)\n@@ -1930,2 +1930,2 @@\n-  if (((mcs != NULL) ? mcs->invocation_counter()->carry() : false) ||\n-      ((mdo != NULL) ? mdo->invocation_counter()->carry() : false)) {\n+  if (((mcs != nullptr) ? mcs->invocation_counter()->carry() : false) ||\n+      ((mdo != nullptr) ? mdo->invocation_counter()->carry() : false)) {\n@@ -1934,2 +1934,2 @@\n-    return ((mcs != NULL) ? mcs->invocation_counter()->count() : 0) +\n-           ((mdo != NULL) ? mdo->invocation_counter()->count() : 0);\n+    return ((mcs != nullptr) ? mcs->invocation_counter()->count() : 0) +\n+           ((mdo != nullptr) ? mdo->invocation_counter()->count() : 0);\n@@ -1942,2 +1942,2 @@\n-  if (((mcs != NULL) ? mcs->backedge_counter()->carry() : false) ||\n-      ((mdo != NULL) ? mdo->backedge_counter()->carry() : false)) {\n+  if (((mcs != nullptr) ? mcs->backedge_counter()->carry() : false) ||\n+      ((mdo != nullptr) ? mdo->backedge_counter()->carry() : false)) {\n@@ -1946,2 +1946,2 @@\n-    return ((mcs != NULL) ? mcs->backedge_counter()->count() : 0) +\n-           ((mdo != NULL) ? mdo->backedge_counter()->count() : 0);\n+    return ((mcs != nullptr) ? mcs->backedge_counter()->count() : 0) +\n+           ((mdo != nullptr) ? mdo->backedge_counter()->count() : 0);\n@@ -1953,1 +1953,1 @@\n-  if (mcs != NULL) {\n+  if (mcs != nullptr) {\n@@ -1962,1 +1962,1 @@\n-  if (mcs != NULL) {\n+  if (mcs != nullptr) {\n@@ -1971,1 +1971,1 @@\n-  if (mcs != NULL) {\n+  if (mcs != nullptr) {\n@@ -1978,1 +1978,1 @@\n-  if (mcs != NULL) {\n+  if (mcs != nullptr) {\n@@ -1992,1 +1992,1 @@\n-  _next = NULL;\n+  _next = nullptr;\n@@ -2052,1 +2052,1 @@\n-    if (_next == NULL) {\n+    if (_next == nullptr) {\n@@ -2074,1 +2074,1 @@\n-    for (JNIMethodBlockNode* b = _last_free; b != NULL; b = b->_next) {\n+    for (JNIMethodBlockNode* b = _last_free; b != nullptr; b = b->_next) {\n@@ -2096,1 +2096,1 @@\n-      if (b->_next == NULL) {\n+      if (b->_next == nullptr) {\n@@ -2101,1 +2101,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -2105,2 +2105,2 @@\n-    if (m == NULL) return false;\n-    for (JNIMethodBlockNode* b = &_head; b != NULL; b = b->_next) {\n+    if (m == nullptr) return false;\n+    for (JNIMethodBlockNode* b = &_head; b != nullptr; b = b->_next) {\n@@ -2136,1 +2136,1 @@\n-    for (JNIMethodBlockNode* b = &_head; b != NULL; b = b->_next) {\n+    for (JNIMethodBlockNode* b = &_head; b != nullptr; b = b->_next) {\n@@ -2138,1 +2138,1 @@\n-        b->_methods[i] = NULL;\n+        b->_methods[i] = nullptr;\n@@ -2146,1 +2146,1 @@\n-    for (JNIMethodBlockNode* b = &_head; b != NULL; b = b->_next) {\n+    for (JNIMethodBlockNode* b = &_head; b != nullptr; b = b->_next) {\n@@ -2159,1 +2159,1 @@\n-JNIMethodBlockNode::JNIMethodBlockNode(int num_methods) : _top(0), _next(NULL) {\n+JNIMethodBlockNode::JNIMethodBlockNode(int num_methods) : _top(0), _next(nullptr) {\n@@ -2172,1 +2172,1 @@\n-  if (cld->jmethod_ids() == NULL) {\n+  if (cld->jmethod_ids() == nullptr) {\n@@ -2185,1 +2185,1 @@\n-  if (cld->jmethod_ids() == NULL) {\n+  if (cld->jmethod_ids() == nullptr) {\n@@ -2201,1 +2201,1 @@\n-  assert(cld->jmethod_ids() != NULL, \"should have method handles\");\n+  assert(cld->jmethod_ids() != nullptr, \"should have method handles\");\n@@ -2210,1 +2210,1 @@\n-           new_method->method_holder()->class_loader() == NULL, \/\/ allow Unsafe substitution\n+           new_method->method_holder()->class_loader() == nullptr, \/\/ allow Unsafe substitution\n@@ -2218,1 +2218,1 @@\n-  assert(m != NULL, \"should be called with non-null method\");\n+  assert(m != nullptr, \"should be called with non-null method\");\n@@ -2221,1 +2221,1 @@\n-  if (cld->jmethod_ids() == NULL) return false;\n+  if (cld->jmethod_ids() == nullptr) return false;\n@@ -2226,1 +2226,1 @@\n-  if (mid == NULL) return NULL;\n+  if (mid == nullptr) return nullptr;\n@@ -2228,2 +2228,2 @@\n-  if (o == NULL || o == JNIMethodBlock::_free_method) {\n-    return NULL;\n+  if (o == nullptr || o == JNIMethodBlock::_free_method) {\n+    return nullptr;\n@@ -2234,1 +2234,1 @@\n-  \/\/ unloaded, we need to return NULL here too because after a safepoint, its memory\n+  \/\/ unloaded, we need to return null here too because after a safepoint, its memory\n@@ -2236,1 +2236,1 @@\n-  return o->method_holder()->is_loader_alive() ? o : NULL;\n+  return o->method_holder()->is_loader_alive() ? o : nullptr;\n@@ -2271,1 +2271,1 @@\n-  if (m == NULL) {\n+  if (m == nullptr) {\n@@ -2321,1 +2321,1 @@\n-  if (a == NULL)\n+  if (a == nullptr)\n@@ -2331,1 +2331,1 @@\n-  if (method_data() != NULL) {\n+  if (method_data() != nullptr) {\n@@ -2369,1 +2369,1 @@\n-  if (code() != NULL) {\n+  if (code() != nullptr) {\n@@ -2402,1 +2402,1 @@\n-  if (WizardMode && code() != NULL) st->print(\" ((nmethod*)%p)\", code());\n+  if (WizardMode && code() != nullptr) st->print(\" ((nmethod*)%p)\", code());\n@@ -2411,1 +2411,1 @@\n-  guarantee(md == NULL ||\n+  guarantee(md == nullptr ||\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":120,"deletions":120,"binary":false,"changes":240,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,1 @@\n-  \/\/ field can come and go.  It can transition from NULL to not-null at any\n+  \/\/ field can come and go.  It can transition from null to not-null at any\n@@ -116,1 +116,1 @@\n-  \/\/ NULL only at safepoints (because of a de-opt).\n+  \/\/ null only at safepoints (because of a de-opt).\n@@ -167,1 +167,1 @@\n-  Symbol* generic_signature() const              { int idx = generic_signature_index(); return ((idx != 0) ? constants()->symbol_at(idx) : (Symbol*)NULL); }\n+  Symbol* generic_signature() const              { int idx = generic_signature_index(); return ((idx != 0) ? constants()->symbol_at(idx) : nullptr); }\n@@ -235,1 +235,1 @@\n-    if (mcs == NULL) {\n+    if (mcs == nullptr) {\n@@ -243,1 +243,1 @@\n-    if (mcs != NULL) {\n+    if (mcs != nullptr) {\n@@ -249,1 +249,1 @@\n-    if (mcs != NULL) {\n+    if (mcs != nullptr) {\n@@ -256,1 +256,1 @@\n-    if (mcs != NULL) {\n+    if (mcs != nullptr) {\n@@ -299,1 +299,1 @@\n-    if (mcs != NULL) {\n+    if (mcs != nullptr) {\n@@ -307,1 +307,1 @@\n-    if (mcs == NULL) {\n+    if (mcs == nullptr) {\n@@ -342,1 +342,1 @@\n-  \/\/ exception of klass ex_klass thrown at throw_bci. A value of NULL\n+  \/\/ exception of klass ex_klass thrown at throw_bci. A value of null\n@@ -373,1 +373,1 @@\n-    _method_counters = NULL;\n+    _method_counters = nullptr;\n@@ -380,1 +380,1 @@\n-    return mcs == NULL ? 0 : mcs->prev_event_count();\n+    return mcs == nullptr ? 0 : mcs->prev_event_count();\n@@ -384,1 +384,1 @@\n-    if (mcs != NULL) {\n+    if (mcs != nullptr) {\n@@ -390,1 +390,1 @@\n-    return mcs == NULL ? 0 : mcs->prev_time();\n+    return mcs == nullptr ? 0 : mcs->prev_time();\n@@ -394,1 +394,1 @@\n-    if (mcs != NULL) {\n+    if (mcs != nullptr) {\n@@ -400,1 +400,1 @@\n-    return mcs == NULL ? 0 : mcs->rate();\n+    return mcs == nullptr ? 0 : mcs->rate();\n@@ -404,1 +404,1 @@\n-    if (mcs != NULL) {\n+    if (mcs != nullptr) {\n@@ -509,1 +509,1 @@\n-  \/\/ Must specify a real function (not NULL).\n+  \/\/ Must specify a real function (not null).\n@@ -776,1 +776,1 @@\n-  \/\/ refers to NULL (as is the case for any weak reference).\n+  \/\/ refers to null (as is the case for any weak reference).\n@@ -787,1 +787,1 @@\n-  \/\/ result guaranteed not to be NULL.\n+  \/\/ result guaranteed not to be null.\n@@ -789,1 +789,1 @@\n-    assert(mid != NULL, \"JNI method id should not be null\");\n+    assert(mid != nullptr, \"JNI method id should not be null\");\n@@ -794,1 +794,1 @@\n-  \/\/ should provide a valid jmethodID, but might not. NULL is returned\n+  \/\/ should provide a valid jmethodID, but might not. Null is returned\n@@ -808,1 +808,1 @@\n-  \/\/ Lookup the jmethodID for this method.  Return NULL if not found.\n+  \/\/ Lookup the jmethodID for this method.  Return null if not found.\n@@ -905,1 +905,1 @@\n-   return method_holder()->lookup_osr_nmethod(this, InvocationEntryBci, level, match_level) != NULL;\n+   return method_holder()->lookup_osr_nmethod(this, InvocationEntryBci, level, match_level) != nullptr;\n@@ -940,1 +940,1 @@\n-    if (_method_counters == NULL) {\n+    if (_method_counters == nullptr) {\n@@ -979,1 +979,1 @@\n-  static void sort_methods(Array<Method*>* methods, bool set_idnums = true, method_comparator_func func = NULL);\n+  static void sort_methods(Array<Method*>* methods, bool set_idnums = true, method_comparator_func func = nullptr);\n@@ -990,1 +990,1 @@\n-    assert(new_method != NULL, \"method_with_idnum() should not be NULL\");\n+    assert(new_method != nullptr, \"method_with_idnum() should not be null\");\n@@ -1125,1 +1125,1 @@\n-      _table = NULL;\n+      _table = nullptr;\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-inline bool Method::has_compiled_code() const { return code() != NULL; }\n+inline bool Method::has_compiled_code() const { return code() != nullptr; }\n","filename":"src\/hotspot\/share\/oops\/method.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,1 +91,1 @@\n-  _data = NULL;\n+  _data = nullptr;\n@@ -121,1 +121,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -138,1 +138,1 @@\n-  if (extra != NULL) {\n+  if (extra != nullptr) {\n@@ -320,2 +320,2 @@\n-    if (k != NULL && (always_clean || !k->is_loader_alive())) {\n-      set_type(i, with_status((Klass*)NULL, p));\n+    if (k != nullptr && (always_clean || !k->is_loader_alive())) {\n+      set_type(i, with_status((Klass*)nullptr, p));\n@@ -329,2 +329,2 @@\n-  if (k != NULL && (always_clean || !k->is_loader_alive())) {\n-    set_type(with_status((Klass*)NULL, p));\n+  if (k != nullptr && (always_clean || !k->is_loader_alive())) {\n+    set_type(with_status((Klass*)nullptr, p));\n@@ -409,1 +409,1 @@\n-    if (p != NULL && (always_clean || !p->is_loader_alive())) {\n+    if (p != nullptr && (always_clean || !p->is_loader_alive())) {\n@@ -419,1 +419,1 @@\n-    if (receiver(row) != NULL)  entries++;\n+    if (receiver(row) != nullptr)  entries++;\n@@ -428,1 +428,1 @@\n-    if (receiver(row) != NULL) {\n+    if (receiver(row) != nullptr) {\n@@ -433,1 +433,1 @@\n-    if (receiver(row) != NULL) {\n+    if (receiver(row) != nullptr) {\n@@ -808,1 +808,1 @@\n-FailedSpeculation::FailedSpeculation(address speculation, int speculation_len) : _data_len(speculation_len), _next(NULL) {\n+FailedSpeculation::FailedSpeculation(address speculation, int speculation_len) : _data_len(speculation_len), _next(nullptr) {\n@@ -817,1 +817,1 @@\n-    if (nm != NULL) {\n+    if (nm != nullptr) {\n@@ -821,1 +821,1 @@\n-      if (method != NULL) {\n+      if (method != nullptr) {\n@@ -825,1 +825,1 @@\n-        if (jvmci_name != NULL) {\n+        if (jvmci_name != nullptr) {\n@@ -838,1 +838,1 @@\n-  assert(failed_speculations_address != NULL, \"must be\");\n+  assert(failed_speculations_address != nullptr, \"must be\");\n@@ -841,1 +841,1 @@\n-  if (fs == NULL) {\n+  if (fs == nullptr) {\n@@ -851,3 +851,3 @@\n-    if (*cursor == NULL) {\n-      FailedSpeculation* old_fs = Atomic::cmpxchg(cursor, (FailedSpeculation*) NULL, fs);\n-      if (old_fs == NULL) {\n+    if (*cursor == nullptr) {\n+      FailedSpeculation* old_fs = Atomic::cmpxchg(cursor, (FailedSpeculation*) nullptr, fs);\n+      if (old_fs == nullptr) {\n@@ -865,1 +865,1 @@\n-  assert(failed_speculations_address != NULL, \"must be\");\n+  assert(failed_speculations_address != nullptr, \"must be\");\n@@ -867,1 +867,1 @@\n-  while (fs != NULL) {\n+  while (fs != nullptr) {\n@@ -1102,1 +1102,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1147,1 +1147,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1189,1 +1189,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1206,1 +1206,1 @@\n-    parameters_type_data()->post_initialize(NULL, this);\n+    parameters_type_data()->post_initialize(nullptr, this);\n@@ -1313,1 +1313,1 @@\n-  _failed_speculations = NULL;\n+  _failed_speculations = nullptr;\n@@ -1348,1 +1348,1 @@\n-  DataLayout* prev = NULL;\n+  DataLayout* prev = nullptr;\n@@ -1352,1 +1352,1 @@\n-      else if (prev != NULL)   set_hint_di(dp_to_di((address)prev));\n+      else if (prev != nullptr)   set_hint_di(dp_to_di((address)prev));\n@@ -1360,1 +1360,1 @@\n-\/\/ Translate a bci to its corresponding data, or NULL.\n+\/\/ Translate a bci to its corresponding data, or null.\n@@ -1371,1 +1371,1 @@\n-  return bci_to_extra_data(bci, NULL, false);\n+  return bci_to_extra_data(bci, nullptr, false);\n@@ -1399,1 +1399,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -1402,1 +1402,1 @@\n-      return NULL; \/\/ ArgInfoData is at the end of extra data section.\n+      return nullptr; \/\/ ArgInfoData is at the end of extra data section.\n@@ -1404,1 +1404,1 @@\n-      if (m == NULL && dp->bci() == bci) {\n+      if (m == nullptr && dp->bci() == bci) {\n@@ -1409,1 +1409,1 @@\n-      if (m != NULL) {\n+      if (m != nullptr) {\n@@ -1415,1 +1415,1 @@\n-          if (data->method() == NULL) {\n+          if (data->method() == nullptr) {\n@@ -1417,1 +1417,1 @@\n-            return NULL;\n+            return nullptr;\n@@ -1428,1 +1428,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1432,1 +1432,1 @@\n-\/\/ Translate a bci to its corresponding extra data, or NULL.\n+\/\/ Translate a bci to its corresponding extra data, or null.\n@@ -1440,2 +1440,2 @@\n-  if (m != NULL && m->is_old()) {\n-    return NULL;\n+  if (m != nullptr && m->is_old()) {\n+    return nullptr;\n@@ -1451,1 +1451,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n@@ -1460,1 +1460,1 @@\n-    if (result != NULL || dp >= end) {\n+    if (result != nullptr || dp >= end) {\n@@ -1464,1 +1464,1 @@\n-    assert(dp->tag() == DataLayout::no_tag || (dp->tag() == DataLayout::speculative_trap_data_tag && m != NULL), \"should be free\");\n+    assert(dp->tag() == DataLayout::no_tag || (dp->tag() == DataLayout::speculative_trap_data_tag && m != nullptr), \"should be free\");\n@@ -1466,1 +1466,1 @@\n-    u1 tag = m == NULL ? DataLayout::bit_data_tag : DataLayout::speculative_trap_data_tag;\n+    u1 tag = m == nullptr ? DataLayout::bit_data_tag : DataLayout::speculative_trap_data_tag;\n@@ -1468,2 +1468,2 @@\n-    if (m != NULL && next_extra(dp)->tag() != DataLayout::no_tag) {\n-      return NULL;\n+    if (m != nullptr && next_extra(dp)->tag() != DataLayout::no_tag) {\n+      return nullptr;\n@@ -1485,1 +1485,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1495,1 +1495,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1740,1 +1740,1 @@\n-      assert(m != NULL, \"should have a method\");\n+      assert(m != nullptr, \"should have a method\");\n@@ -1784,1 +1784,1 @@\n-      assert(m != NULL && cl->is_live(m), \"Method should exist\");\n+      assert(m != nullptr && cl->is_live(m), \"Method should exist\");\n@@ -1807,1 +1807,1 @@\n-  if (parameters != NULL) {\n+  if (parameters != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":52,"deletions":52,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -404,1 +404,1 @@\n-    return is_BitData()         ? (BitData*)        this : NULL;\n+    return is_BitData()         ? (BitData*)        this : nullptr;\n@@ -408,1 +408,1 @@\n-    return is_CounterData()     ? (CounterData*)    this : NULL;\n+    return is_CounterData()     ? (CounterData*)    this : nullptr;\n@@ -412,1 +412,1 @@\n-    return is_JumpData()        ? (JumpData*)       this : NULL;\n+    return is_JumpData()        ? (JumpData*)       this : nullptr;\n@@ -416,1 +416,1 @@\n-    return is_ReceiverTypeData() ? (ReceiverTypeData*)this : NULL;\n+    return is_ReceiverTypeData() ? (ReceiverTypeData*)this : nullptr;\n@@ -420,1 +420,1 @@\n-    return is_VirtualCallData() ? (VirtualCallData*)this : NULL;\n+    return is_VirtualCallData() ? (VirtualCallData*)this : nullptr;\n@@ -424,1 +424,1 @@\n-    return is_RetData()         ? (RetData*)        this : NULL;\n+    return is_RetData()         ? (RetData*)        this : nullptr;\n@@ -428,1 +428,1 @@\n-    return is_BranchData()      ? (BranchData*)     this : NULL;\n+    return is_BranchData()      ? (BranchData*)     this : nullptr;\n@@ -432,1 +432,1 @@\n-    return is_ArrayData()       ? (ArrayData*)      this : NULL;\n+    return is_ArrayData()       ? (ArrayData*)      this : nullptr;\n@@ -436,1 +436,1 @@\n-    return is_MultiBranchData() ? (MultiBranchData*)this : NULL;\n+    return is_MultiBranchData() ? (MultiBranchData*)this : nullptr;\n@@ -440,1 +440,1 @@\n-    return is_ArgInfoData() ? (ArgInfoData*)this : NULL;\n+    return is_ArgInfoData() ? (ArgInfoData*)this : nullptr;\n@@ -444,1 +444,1 @@\n-    return is_CallTypeData() ? (CallTypeData*)this : NULL;\n+    return is_CallTypeData() ? (CallTypeData*)this : nullptr;\n@@ -448,1 +448,1 @@\n-    return is_VirtualCallTypeData() ? (VirtualCallTypeData*)this : NULL;\n+    return is_VirtualCallTypeData() ? (VirtualCallTypeData*)this : nullptr;\n@@ -452,1 +452,1 @@\n-    return is_ParametersTypeData() ? (ParametersTypeData*)this : NULL;\n+    return is_ParametersTypeData() ? (ParametersTypeData*)this : nullptr;\n@@ -456,1 +456,1 @@\n-    return is_SpeculativeTrapData() ? (SpeculativeTrapData*)this : NULL;\n+    return is_SpeculativeTrapData() ? (SpeculativeTrapData*)this : nullptr;\n@@ -473,1 +473,1 @@\n-  virtual void print_data_on(outputStream* st, const char* extra = NULL) const {\n+  virtual void print_data_on(outputStream* st, const char* extra = nullptr) const {\n@@ -536,1 +536,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -586,1 +586,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -659,1 +659,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -717,1 +717,1 @@\n-      assert(res != NULL, \"invalid\");\n+      assert(res != nullptr, \"invalid\");\n@@ -720,1 +720,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -741,1 +741,1 @@\n-    : _pd(NULL), _base_off(base_off) {}\n+    : _pd(nullptr), _base_off(base_off) {}\n@@ -1077,1 +1077,1 @@\n-  virtual void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  virtual void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1142,1 +1142,1 @@\n-    assert(recv == NULL || recv->is_klass(), \"wrong type\");\n+    assert(recv == nullptr || recv->is_klass(), \"wrong type\");\n@@ -1180,1 +1180,1 @@\n-    set_receiver(row, NULL);\n+    set_receiver(row, nullptr);\n@@ -1217,1 +1217,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1249,1 +1249,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1381,1 +1381,1 @@\n-  virtual void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  virtual void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1473,1 +1473,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1537,1 +1537,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1696,1 +1696,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1721,1 +1721,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1780,1 +1780,1 @@\n-  virtual void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  virtual void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1850,1 +1850,1 @@\n-  virtual void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  virtual void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -1886,1 +1886,1 @@\n-\/\/ is NULL to begin with, the interpreter assumes that the current method\n+\/\/ is null to begin with, the interpreter assumes that the current method\n@@ -2135,1 +2135,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -2286,1 +2286,1 @@\n-                                                   assert(aid != NULL, \"arg_info must be not null\");\n+                                                   assert(aid != nullptr, \"arg_info must be not null\");\n@@ -2295,1 +2295,1 @@\n-                                                   assert(aid != NULL, \"arg_info must be not null\");\n+                                                   assert(aid != nullptr, \"arg_info must be not null\");\n@@ -2311,1 +2311,1 @@\n-    return param == NULL ? 0 : param->size_in_bytes();\n+    return param == nullptr ? 0 : param->size_in_bytes();\n@@ -2324,2 +2324,2 @@\n-  bool is_valid(ProfileData* current) const { return current != NULL; }\n-  bool is_valid(DataLayout*  current) const { return current != NULL; }\n+  bool is_valid(ProfileData* current) const { return current != nullptr; }\n+  bool is_valid(DataLayout*  current) const { return current != nullptr; }\n@@ -2338,1 +2338,1 @@\n-  \/\/ Get the data at an arbitrary bci, or NULL if there is none.\n+  \/\/ Get the data at an arbitrary bci, or null if there is none.\n@@ -2343,3 +2343,3 @@\n-    ProfileData* data = NULL;\n-    \/\/ If m not NULL, try to allocate a SpeculativeTrapData entry\n-    if (m == NULL) {\n+    ProfileData* data = nullptr;\n+    \/\/ If m not null, try to allocate a SpeculativeTrapData entry\n+    if (m == nullptr) {\n@@ -2348,1 +2348,1 @@\n-    if (data != NULL) {\n+    if (data != nullptr) {\n@@ -2352,1 +2352,1 @@\n-    if (data != NULL) {\n+    if (data != nullptr) {\n@@ -2358,1 +2358,1 @@\n-    if (data != NULL) {\n+    if (data != nullptr) {\n@@ -2361,1 +2361,1 @@\n-    return bci_to_extra_data(bci, NULL, true);\n+    return bci_to_extra_data(bci, nullptr, true);\n@@ -2412,1 +2412,1 @@\n-    return _parameters_type_data_di != no_parameters ? data_layout_at(_parameters_type_data_di)->data_in()->as_ParametersTypeData() : NULL;\n+    return _parameters_type_data_di != no_parameters ? data_layout_at(_parameters_type_data_di)->data_in()->as_ParametersTypeData() : nullptr;\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":50,"deletions":50,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-  Klass* super_klass = NULL;\n+  Klass* super_klass = nullptr;\n@@ -64,1 +64,1 @@\n-    if (element_super != NULL) {\n+    if (element_super != nullptr) {\n@@ -67,1 +67,1 @@\n-      bool supers_exist = super_klass != NULL;\n+      bool supers_exist = super_klass != nullptr;\n@@ -73,1 +73,1 @@\n-        if (elem_super->array_klass_or_null() == NULL) {\n+        if (elem_super->array_klass_or_null() == nullptr) {\n@@ -80,1 +80,1 @@\n-        Klass* ek = NULL;\n+        Klass* ek = nullptr;\n@@ -100,1 +100,1 @@\n-  Symbol* name = NULL;\n+  Symbol* name = nullptr;\n@@ -124,1 +124,1 @@\n-  assert(module != NULL, \"No module entry for array\");\n+  assert(module != nullptr, \"No module entry for array\");\n@@ -130,1 +130,1 @@\n-  \/\/ including classes in the bootstrap (NULL) class loader.\n+  \/\/ including classes in the bootstrap (null) class loader.\n@@ -149,1 +149,1 @@\n-  assert(bk != NULL && (bk->is_instance_klass() || bk->is_typeArray_klass()), \"invalid bottom klass\");\n+  assert(bk != nullptr && (bk->is_instance_klass() || bk->is_typeArray_klass()), \"invalid bottom klass\");\n@@ -294,1 +294,1 @@\n-    assert(arrayOopDesc::obj_offset_to_raw<narrowOop>(s, src_offset, NULL) ==\n+    assert(arrayOopDesc::obj_offset_to_raw<narrowOop>(s, src_offset, nullptr) ==\n@@ -296,1 +296,1 @@\n-    assert(arrayOopDesc::obj_offset_to_raw<narrowOop>(d, dst_offset, NULL) ==\n+    assert(arrayOopDesc::obj_offset_to_raw<narrowOop>(d, dst_offset, nullptr) ==\n@@ -302,1 +302,1 @@\n-    assert(arrayOopDesc::obj_offset_to_raw<oop>(s, src_offset, NULL) ==\n+    assert(arrayOopDesc::obj_offset_to_raw<oop>(s, src_offset, nullptr) ==\n@@ -304,1 +304,1 @@\n-    assert(arrayOopDesc::obj_offset_to_raw<oop>(d, dst_offset, NULL) ==\n+    assert(arrayOopDesc::obj_offset_to_raw<oop>(d, dst_offset, nullptr) ==\n@@ -318,1 +318,1 @@\n-  if (higher_dimension_acquire() == NULL) {\n+  if (higher_dimension_acquire() == nullptr) {\n@@ -326,1 +326,1 @@\n-      if (higher_dimension() == NULL) {\n+      if (higher_dimension() == nullptr) {\n@@ -352,2 +352,2 @@\n-  if (higher_dimension_acquire() == NULL) {\n-    return NULL;\n+  if (higher_dimension_acquire() == nullptr) {\n+    return nullptr;\n@@ -378,1 +378,1 @@\n-  assert(transitive_interfaces == NULL, \"sanity\");\n+  assert(transitive_interfaces == nullptr, \"sanity\");\n@@ -381,1 +381,1 @@\n-  int num_elem_supers = elem_supers == NULL ? 0 : elem_supers->length();\n+  int num_elem_supers = elem_supers == nullptr ? 0 : elem_supers->length();\n@@ -386,1 +386,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -394,1 +394,1 @@\n-      assert(array_super != NULL, \"must already have been created\");\n+      assert(array_super != nullptr, \"must already have been created\");\n@@ -413,1 +413,1 @@\n-  if (element_klass() == NULL) {\n+  if (element_klass() == nullptr) {\n@@ -425,1 +425,1 @@\n-  assert(bottom_klass() != NULL, \"ObjArrayKlass returned unexpected NULL bottom_klass\");\n+  assert(bottom_klass() != nullptr, \"ObjArrayKlass returned unexpected null bottom_klass\");\n@@ -431,1 +431,1 @@\n-  assert(bottom_klass() != NULL, \"ObjArrayKlass returned unexpected NULL bottom_klass\");\n+  assert(bottom_klass() != nullptr, \"ObjArrayKlass returned unexpected null bottom_klass\");\n@@ -462,1 +462,1 @@\n-    if (oa->obj_at(index) != NULL) {\n+    if (oa->obj_at(index) != nullptr) {\n@@ -466,1 +466,1 @@\n-      st->print_cr(\"NULL\");\n+      st->print_cr(\"null\");\n@@ -483,1 +483,1 @@\n-  if (obj != NULL) {\n+  if (obj != nullptr) {\n@@ -486,1 +486,1 @@\n-    st->print_cr(\"NULL\");\n+    st->print_cr(\"null\");\n","filename":"src\/hotspot\/share\/oops\/objArrayKlass.cpp","additions":29,"deletions":29,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -89,1 +89,1 @@\n-  if (oop_desc != NULL) {\n+  if (oop_desc != nullptr) {\n@@ -126,1 +126,1 @@\n-  return obj == NULL ? true : is_oop(obj, ignore_mark_word);\n+  return obj == nullptr ? true : is_oop(obj, ignore_mark_word);\n@@ -163,1 +163,1 @@\n-    if (narrow_klass == 0) return NULL;\n+    if (narrow_klass == 0) return nullptr;\n@@ -174,1 +174,1 @@\n-    if (CompressedOops::is_null(narrow_oop)) return NULL;\n+    if (CompressedOops::is_null(narrow_oop)) return nullptr;\n","filename":"src\/hotspot\/share\/oops\/oop.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -263,1 +263,1 @@\n-  \/\/ this call returns \"NULL\" for that thread; any other thread has the\n+  \/\/ this call returns null for that thread; any other thread has the\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -111,1 +111,1 @@\n-  assert(Universe::is_bootstrapping() || (k != NULL && k->is_klass()), \"incorrect Klass\");\n+  assert(Universe::is_bootstrapping() || (k != nullptr && k->is_klass()), \"incorrect Klass\");\n@@ -120,1 +120,1 @@\n-  assert(Universe::is_bootstrapping() || (k != NULL && k->is_klass()), \"incorrect Klass\");\n+  assert(Universe::is_bootstrapping() || (k != nullptr && k->is_klass()), \"incorrect Klass\");\n@@ -273,1 +273,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -344,1 +344,1 @@\n-  return obj == NULL || obj->klass()->is_subtype_of(klass);\n+  return obj == nullptr || obj->klass()->is_subtype_of(klass);\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-  OopHandle() : _obj(NULL) {}\n+  OopHandle() : _obj(nullptr) {}\n@@ -67,1 +67,1 @@\n-  bool is_empty() const { return _obj == NULL; }\n+  bool is_empty() const { return _obj == nullptr; }\n","filename":"src\/hotspot\/share\/oops\/oopHandle.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n-  return (_obj == NULL) ? (oop)NULL : NativeAccess<>::oop_load(_obj);\n+  return (_obj == nullptr) ? nullptr : NativeAccess<>::oop_load(_obj);\n@@ -38,1 +38,1 @@\n-  return (_obj == NULL) ? (oop)NULL : NativeAccess<AS_NO_KEEPALIVE>::oop_load(_obj);\n+  return (_obj == nullptr) ? nullptr : NativeAccess<AS_NO_KEEPALIVE>::oop_load(_obj);\n@@ -43,1 +43,1 @@\n-  if (_obj == NULL) {\n+  if (_obj == nullptr) {\n@@ -51,1 +51,1 @@\n-  if (_obj != NULL) {\n+  if (_obj != nullptr) {\n@@ -53,1 +53,1 @@\n-    NativeAccess<>::oop_store(_obj, (oop)NULL);\n+    NativeAccess<>::oop_store(_obj, static_cast<oop>(nullptr));\n@@ -60,1 +60,1 @@\n-  assert(ptr != NULL, \"should not use replace\");\n+  assert(ptr != nullptr, \"should not use replace\");\n","filename":"src\/hotspot\/share\/oops\/oopHandle.inline.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-  if (t != NULL && t->is_Java_thread()) {\n+  if (t != nullptr && t->is_Java_thread()) {\n@@ -48,1 +48,1 @@\n-  if (t != NULL && t->is_Java_thread()) {\n+  if (t != nullptr && t->is_Java_thread()) {\n","filename":"src\/hotspot\/share\/oops\/oopsHierarchy.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-\/\/ Converting NULL to oop to Handle implicit is no longer accepted by the\n+\/\/ Converting null to oop to Handle implicit is no longer accepted by the\n","filename":"src\/hotspot\/share\/oops\/oopsHierarchy.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-  if (annotations() != NULL) {\n+  if (annotations() != nullptr) {\n@@ -49,1 +49,1 @@\n-  if (type_annotations() != NULL) {\n+  if (type_annotations() != nullptr) {\n@@ -73,1 +73,1 @@\n-  if (_annotations != NULL) {\n+  if (_annotations != nullptr) {\n@@ -77,1 +77,1 @@\n-  if (_type_annotations != NULL) {\n+  if (_type_annotations != nullptr) {\n","filename":"src\/hotspot\/share\/oops\/recordComponent.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -196,2 +196,2 @@\n-  bool verify(size_t* out_size = NULL, int* out_oops = NULL,\n-              int* out_frames = NULL, int* out_interpreted_frames = NULL) NOT_DEBUG({ return true; });\n+  bool verify(size_t* out_size = nullptr, int* out_oops = nullptr,\n+              int* out_frames = nullptr, int* out_interpreted_frames = nullptr) NOT_DEBUG({ return true; });\n","filename":"src\/hotspot\/share\/oops\/stackChunkOop.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-    if (scan == NULL)\n+    if (scan == nullptr)\n@@ -148,1 +148,1 @@\n-  if (strchr(pattern, '*') == NULL) {\n+  if (strchr(pattern, '*') == nullptr) {\n@@ -188,1 +188,1 @@\n-  if (s == NULL) {\n+  if (s == nullptr) {\n","filename":"src\/hotspot\/share\/oops\/symbol.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -176,1 +176,1 @@\n-    if (s != NULL) {\n+    if (s != nullptr) {\n@@ -181,1 +181,1 @@\n-    if (s != NULL) {\n+    if (s != nullptr) {\n@@ -231,1 +231,1 @@\n-    assert(len >= 0 && substring != NULL, \"substring must be valid\");\n+    assert(len >= 0 && substring != nullptr, \"substring must be valid\");\n@@ -284,1 +284,1 @@\n-  void print_symbol_on(outputStream* st = NULL) const;\n+  void print_symbol_on(outputStream* st = nullptr) const;\n","filename":"src\/hotspot\/share\/oops\/symbol.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-  SymbolHandleBase() : _temp(NULL) { }\n+  SymbolHandleBase() : _temp(nullptr) { }\n","filename":"src\/hotspot\/share\/oops\/symbolHandle.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-  Symbol* sym = NULL;\n-  if (name_str != NULL) {\n+  Symbol* sym = nullptr;\n+  if (name_str != nullptr) {\n@@ -60,1 +60,1 @@\n-  \/\/ including classes in the bootstrap (NULL) class loader.\n+  \/\/ including classes in the bootstrap (null) class loader.\n@@ -181,1 +181,1 @@\n-  if (higher_dimension_acquire() == NULL) {\n+  if (higher_dimension_acquire() == nullptr) {\n@@ -189,1 +189,1 @@\n-      if (higher_dimension() == NULL) {\n+      if (higher_dimension() == nullptr) {\n@@ -214,2 +214,2 @@\n-  if (higher_dimension_acquire() == NULL) {\n-    return NULL;\n+  if (higher_dimension_acquire() == nullptr) {\n+    return nullptr;\n@@ -253,1 +253,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -375,1 +375,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/oops\/typeArrayKlass.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-  oop protection_domain() const { return NULL; }\n+  oop protection_domain() const { return nullptr; }\n","filename":"src\/hotspot\/share\/oops\/typeArrayKlass.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-  assert(obj != NULL, \"no need to create weak null oop\");\n+  assert(obj != nullptr, \"no need to create weak null oop\");\n@@ -40,1 +40,1 @@\n-  if (_obj == NULL) {\n+  if (_obj == nullptr) {\n@@ -51,1 +51,1 @@\n-  if (_obj != NULL) {\n+  if (_obj != nullptr) {\n@@ -54,1 +54,1 @@\n-    NativeAccess<ON_PHANTOM_OOP_REF>::oop_store(_obj, (oop)NULL);\n+    NativeAccess<ON_PHANTOM_OOP_REF>::oop_store(_obj, static_cast<oop>(nullptr));\n","filename":"src\/hotspot\/share\/oops\/weakHandle.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-\/\/ if the value is NULL.  If it is NULL, it has been cleaned out by GC.\n+\/\/ if the value is null.  If it is null, it has been cleaned out by GC.\n@@ -49,1 +49,1 @@\n-  WeakHandle() : _obj(NULL) {} \/\/ needed for init\n+  WeakHandle() : _obj(nullptr) {} \/\/ needed for init\n@@ -56,1 +56,1 @@\n-  bool is_null() const { return _obj == NULL; }\n+  bool is_null() const { return _obj == nullptr; }\n@@ -63,1 +63,1 @@\n-  bool is_empty() const { return _obj == NULL; }\n+  bool is_empty() const { return _obj == nullptr; }\n","filename":"src\/hotspot\/share\/oops\/weakHandle.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}