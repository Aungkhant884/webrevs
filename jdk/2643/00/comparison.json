{"files":[{"patch":"@@ -58,63 +58,0 @@\n-\/\/ Check for overflow of number of root types.\n-STATIC_ASSERT((static_cast<uint>(ShenandoahRootVerifier::AllRoots) + 1) > static_cast<uint>(ShenandoahRootVerifier::AllRoots));\n-\n-ShenandoahRootVerifier::ShenandoahRootVerifier(RootTypes types) : _types(types) {\n-  Threads::change_thread_claim_token();\n-}\n-\n-void ShenandoahRootVerifier::excludes(RootTypes types) {\n-  _types = static_cast<ShenandoahRootVerifier::RootTypes>(static_cast<uint>(_types) & (~static_cast<uint>(types)));\n-}\n-\n-bool ShenandoahRootVerifier::verify(RootTypes type) const {\n-  return (_types & type) == type;\n-}\n-\n-ShenandoahRootVerifier::RootTypes ShenandoahRootVerifier::combine(RootTypes t1, RootTypes t2) {\n-  return static_cast<ShenandoahRootVerifier::RootTypes>(static_cast<uint>(t1) | static_cast<uint>(t2));\n-}\n-\n-void ShenandoahRootVerifier::oops_do(OopClosure* oops) {\n-  ShenandoahGCStateResetter resetter;\n-\n-  CodeBlobToOopClosure blobs(oops, !CodeBlobToOopClosure::FixRelocations);\n-  if (verify(CodeRoots)) {\n-    shenandoah_assert_locked_or_safepoint(CodeCache_lock);\n-    CodeCache::blobs_do(&blobs);\n-  }\n-\n-  if (verify(CLDGRoots)) {\n-    shenandoah_assert_locked_or_safepoint(ClassLoaderDataGraph_lock);\n-    CLDToOopClosure clds(oops, ClassLoaderData::_claim_none);\n-    ClassLoaderDataGraph::cld_do(&clds);\n-  }\n-\n-  if (verify(SerialRoots)) {\n-    shenandoah_assert_safepoint();\n-  }\n-\n-  if (verify(JNIHandleRoots)) {\n-    shenandoah_assert_safepoint();\n-    JNIHandles::oops_do(oops);\n-    Universe::vm_global()->oops_do(oops);\n-  }\n-\n-  if (verify(WeakRoots)) {\n-    shenandoah_assert_safepoint();\n-    weak_roots_do(oops);\n-  }\n-\n-  if (ShenandoahStringDedup::is_enabled() && verify(StringDedupRoots)) {\n-    shenandoah_assert_safepoint();\n-    ShenandoahStringDedup::oops_do_slow(oops);\n-  }\n-\n-  if (verify(ThreadRoots)) {\n-    shenandoah_assert_safepoint();\n-    \/\/ Do thread roots the last. This allows verification code to find\n-    \/\/ any broken objects from those special roots first, not the accidental\n-    \/\/ dangling reference from the thread root.\n-    Threads::possibly_parallel_oops_do(false, oops, &blobs);\n-  }\n-}\n-\n@@ -131,2 +68,7 @@\n-  JNIHandles::oops_do(oops);\n-  Universe::vm_global()->oops_do(oops);\n+  if (ShenandoahStringDedup::is_enabled()) {\n+    ShenandoahStringDedup::oops_do_slow(oops);\n+  }\n+\n+  for (auto id : EnumRange<OopStorageSet::StrongId>()) {\n+    OopStorageSet::storage(id)->oops_do(oops);\n+  }\n@@ -137,1 +79,1 @@\n-  Threads::possibly_parallel_oops_do(true, oops, &blobs);\n+  Threads::possibly_parallel_oops_do(true, oops, NULL);\n@@ -144,2 +86,0 @@\n-  CodeBlobToOopClosure blobs(oops, !CodeBlobToOopClosure::FixRelocations);\n-\n@@ -147,1 +87,1 @@\n-  ClassLoaderDataGraph::roots_cld_do(&clds, NULL);\n+  ClassLoaderDataGraph::always_strong_cld_do(&clds);\n@@ -149,2 +89,3 @@\n-  JNIHandles::oops_do(oops);\n-  Universe::vm_global()->oops_do(oops);\n+  if (ShenandoahStringDedup::is_enabled()) {\n+    ShenandoahStringDedup::oops_do_slow(oops);\n+  }\n@@ -152,0 +93,3 @@\n+  for (auto id : EnumRange<OopStorageSet::StrongId>()) {\n+    OopStorageSet::storage(id)->oops_do(oops);\n+  }\n@@ -155,0 +99,1 @@\n+  CodeBlobToOopClosure blobs(oops, !CodeBlobToOopClosure::FixRelocations);\n@@ -157,6 +102,0 @@\n-\n-void ShenandoahRootVerifier::weak_roots_do(OopClosure* cl) {\n-  for (auto id : EnumRange<OopStorageSet::WeakId>()) {\n-    OopStorageSet::storage(id)->oops_do(cl);\n-  }\n-}\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.cpp","additions":16,"deletions":77,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-class ShenandoahRootVerifier : public StackObj {\n+class ShenandoahRootVerifier : public AllStatic {\n@@ -44,21 +44,0 @@\n-  enum RootTypes {\n-    None                = 0,\n-    SerialRoots         = 1 << 0,\n-    ThreadRoots         = 1 << 1,\n-    CodeRoots           = 1 << 2,\n-    CLDGRoots           = 1 << 3,\n-    WeakRoots           = 1 << 4,\n-    StringDedupRoots    = 1 << 5,\n-    JNIHandleRoots      = 1 << 6,\n-    AllRoots            = (SerialRoots | ThreadRoots | CodeRoots | CLDGRoots | WeakRoots | StringDedupRoots | JNIHandleRoots)\n-  };\n-\n-private:\n-  RootTypes _types;\n-\n-public:\n-  ShenandoahRootVerifier(RootTypes types = AllRoots);\n-\n-  void excludes(RootTypes types);\n-  void oops_do(OopClosure* cl);\n-\n@@ -66,8 +45,2 @@\n-  void roots_do(OopClosure* cl);\n-  void strong_roots_do(OopClosure* cl);\n-\n-  static RootTypes combine(RootTypes t1, RootTypes t2);\n-private:\n-  bool verify(RootTypes type) const;\n-\n-  void weak_roots_do(OopClosure* cl);\n+  static void roots_do(OopClosure* cl);\n+  static void strong_roots_do(OopClosure* cl);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.hpp","additions":3,"deletions":30,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -427,1 +427,0 @@\n-  ShenandoahRootVerifier* _verifier;\n@@ -437,1 +436,0 @@\n-                                  ShenandoahRootVerifier* verifier,\n@@ -442,1 +440,0 @@\n-    _verifier(verifier),\n@@ -467,1 +464,1 @@\n-          _verifier->strong_roots_do(&cl);\n+          ShenandoahRootVerifier::strong_roots_do(&cl);\n@@ -469,1 +466,1 @@\n-          _verifier->roots_do(&cl);\n+          ShenandoahRootVerifier::roots_do(&cl);\n@@ -621,2 +618,1 @@\n-                                             VerifyGCState gcstate,\n-                                             VerifyWeakRoots weak_roots) {\n+                                             VerifyGCState gcstate) {\n@@ -716,2 +712,1 @@\n-    ShenandoahRootVerifier verifier;\n-    ShenandoahVerifierReachableTask task(_verification_bit_map, ld, &verifier, label, options);\n+    ShenandoahVerifierReachableTask task(_verification_bit_map, ld, label, options);\n@@ -783,2 +778,1 @@\n-          _verify_gcstate_disable,     \/\/ no data about gcstate\n-          _verify_all_weak_roots\n+          _verify_gcstate_disable      \/\/ no data about gcstate\n@@ -796,2 +790,1 @@\n-          _verify_gcstate_stable,      \/\/ there are no forwarded objects\n-          _verify_all_weak_roots\n+          _verify_gcstate_stable       \/\/ there are no forwarded objects\n@@ -809,2 +802,1 @@\n-          _verify_gcstate_stable,      \/\/ mark should have stabilized the heap\n-          _verify_all_weak_roots\n+          _verify_gcstate_stable       \/\/ mark should have stabilized the heap\n@@ -815,5 +807,0 @@\n-  \/\/ Concurrent weak roots are evacuated during concurrent phase\n-  VerifyWeakRoots verify_weak_roots = _heap->unload_classes() ?\n-                                      _verify_serial_weak_roots :\n-                                      _verify_all_weak_roots;\n-\n@@ -827,2 +814,1 @@\n-          _verify_gcstate_stable,                    \/\/ mark should have stabilized the heap\n-          verify_weak_roots\n+          _verify_gcstate_stable                     \/\/ mark should have stabilized the heap\n@@ -833,5 +819,0 @@\n-  \/\/ Concurrent weak roots are evacuated during concurrent phase\n-  VerifyWeakRoots verify_weak_roots = _heap->unload_classes() ?\n-                                      _verify_serial_weak_roots :\n-                                      _verify_all_weak_roots;\n-\n@@ -845,2 +826,1 @@\n-          _verify_gcstate_evacuation, \/\/ evacuation is in progress\n-          verify_weak_roots\n+          _verify_gcstate_evacuation  \/\/ evacuation is in progress\n@@ -858,2 +838,1 @@\n-          _verify_gcstate_forwarded,   \/\/ evacuation produced some forwarded objects\n-          _verify_all_weak_roots\n+          _verify_gcstate_forwarded    \/\/ evacuation produced some forwarded objects\n@@ -871,2 +850,1 @@\n-          _verify_gcstate_forwarded,   \/\/ evacuation should have produced some forwarded objects\n-          _verify_all_weak_roots\n+          _verify_gcstate_forwarded    \/\/ evacuation should have produced some forwarded objects\n@@ -884,2 +862,1 @@\n-          _verify_gcstate_stable,      \/\/ update refs had cleaned up forwarded objects\n-          _verify_all_weak_roots\n+          _verify_gcstate_stable       \/\/ update refs had cleaned up forwarded objects\n@@ -897,2 +874,1 @@\n-          _verify_gcstate_stable,       \/\/ degenerated refs had cleaned up forwarded objects\n-          _verify_all_weak_roots\n+          _verify_gcstate_stable       \/\/ degenerated refs had cleaned up forwarded objects\n@@ -910,2 +886,1 @@\n-          _verify_gcstate_disable,     \/\/ no reliable gcstate data\n-          _verify_all_weak_roots\n+          _verify_gcstate_disable      \/\/ no reliable gcstate data\n@@ -923,2 +898,1 @@\n-          _verify_gcstate_stable,       \/\/ full gc cleaned up everything\n-          _verify_all_weak_roots\n+          _verify_gcstate_stable        \/\/ full gc cleaned up everything\n@@ -981,8 +955,0 @@\n-  ShenandoahRootVerifier verifier;\n-  ShenandoahVerifyInToSpaceClosure cl;\n-  verifier.oops_do(&cl);\n-}\n-\n-void ShenandoahVerifier::verify_roots_in_to_space_except(ShenandoahRootVerifier::RootTypes types) {\n-  ShenandoahRootVerifier verifier;\n-  verifier.excludes(types);\n@@ -990,1 +956,1 @@\n-  verifier.oops_do(&cl);\n+  ShenandoahRootVerifier::roots_do(&cl);\n@@ -994,14 +960,0 @@\n-  ShenandoahRootVerifier verifier;\n-  ShenandoahVerifyNoForwared cl;\n-  verifier.oops_do(&cl);\n-}\n-\n-void ShenandoahVerifier::verify_roots_no_forwarded(ShenandoahRootVerifier::RootTypes types) {\n-  ShenandoahRootVerifier verifier(types);\n-  ShenandoahVerifyNoForwared cl;\n-  verifier.oops_do(&cl);\n-}\n-\n-void ShenandoahVerifier::verify_roots_no_forwarded_except(ShenandoahRootVerifier::RootTypes types) {\n-  ShenandoahRootVerifier verifier;\n-  verifier.excludes(types);\n@@ -1009,1 +961,1 @@\n-  verifier.oops_do(&cl);\n+  ShenandoahRootVerifier::roots_do(&cl);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":17,"deletions":65,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -139,6 +139,0 @@\n-  typedef enum {\n-    _verify_all_weak_roots,\n-    _verify_serial_weak_roots,\n-    _verify_concurrent_weak_roots\n-  } VerifyWeakRoots;\n-\n@@ -152,1 +146,0 @@\n-    VerifyWeakRoots     _verify_weak_roots;\n@@ -159,2 +152,1 @@\n-                  VerifyGCState verify_gcstate,\n-                  VerifyWeakRoots verify_weak_roots = _verify_all_weak_roots) :\n+                  VerifyGCState verify_gcstate) :\n@@ -164,2 +156,1 @@\n-            _verify_gcstate(verify_gcstate),\n-            _verify_weak_roots(verify_weak_roots) {}\n+            _verify_gcstate(verify_gcstate) {}\n@@ -175,2 +166,1 @@\n-                           VerifyGCState gcstate,\n-                           VerifyWeakRoots weakRoots);\n+                           VerifyGCState gcstate);\n@@ -196,1 +186,0 @@\n-  void verify_roots_in_to_space_except(ShenandoahRootVerifier::RootTypes types);\n@@ -199,2 +188,0 @@\n-  void verify_roots_no_forwarded(ShenandoahRootVerifier::RootTypes types);\n-  void verify_roots_no_forwarded_except(ShenandoahRootVerifier::RootTypes types);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.hpp","additions":3,"deletions":16,"binary":false,"changes":19,"status":"modified"}]}