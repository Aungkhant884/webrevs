{"files":[{"patch":"@@ -55,0 +55,1 @@\n+import com.sun.source.doctree.TextTree;\n@@ -198,3 +199,2 @@\n-    protected Content codeTagOutput(Element element, DocTree tag) {\n-        CommentHelper ch = utils.getCommentHelper(element);\n-        return HtmlTree.CODE(Text.of(utils.normalizeNewlines(ch.getText(tag))));\n+    protected Content codeTagOutput(Element element, LiteralTree tag) {\n+        return HtmlTree.CODE(Text.of(utils.normalizeNewlines(tag.getBody().getBody())));\n@@ -207,1 +207,2 @@\n-        String tagText = ch.getText(tag.getSearchTerm());\n+        DocTree searchTerm = tag.getSearchTerm();\n+        String tagText = (searchTerm instanceof TextTree tt) ? tt.getBody() : \"\";\n@@ -274,3 +275,1 @@\n-        CommentHelper ch = utils.getCommentHelper(element);\n-        Content result = Text.of(utils.normalizeNewlines(ch.getText(tag)));\n-        return result;\n+        return Text.of(utils.normalizeNewlines(tag.getBody().getBody()));\n@@ -310,1 +309,1 @@\n-        Content content = htmlWriter.commentTagsToContent(element, desc , context.within(returnTag));\n+        Content content = htmlWriter.commentTagsToContent(element, desc, context.within(returnTag));\n@@ -348,2 +347,1 @@\n-        boolean hasLongLabels = links.stream()\n-                .anyMatch(c -> c.charCount() > SEE_TAG_MAX_INLINE_LENGTH || c.toString().contains(\",\"));\n+        boolean hasLongLabels = links.stream().anyMatch(this::isLongOrHasComma);\n@@ -360,0 +358,8 @@\n+    private boolean isLongOrHasComma(Content c) {\n+        String s = c.toString()\n+                .replaceAll(\"<.*?>\", \"\")              \/\/ ignore HTML\n+                .replaceAll(\"&#?[A-Za-z0-9]+;\", \" \")  \/\/ entities count as a single character\n+                .replaceAll(\"\\\\R\", \"\\n\");             \/\/ normalize newlines\n+        return s.length() > SEE_TAG_MAX_INLINE_LENGTH || s.contains(\",\");\n+    }\n+\n@@ -374,1 +380,1 @@\n-                HtmlTree.DT(new RawHtml(header)),\n+                HtmlTree.DT(RawHtml.of(header)),\n@@ -496,1 +502,1 @@\n-            excName = new RawHtml(throwsTag.getExceptionName().toString());\n+            excName = RawHtml.of(throwsTag.getExceptionName().toString());\n@@ -498,1 +504,1 @@\n-            excName = new RawHtml(utils.getFullyQualifiedName(exception));\n+            excName = Text.of(utils.getFullyQualifiedName(exception));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":19,"deletions":13,"binary":false,"changes":32,"status":"modified"}]}