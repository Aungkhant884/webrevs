{"files":[{"patch":"@@ -40,1 +40,1 @@\n-  return EventGCCpuTime::is_enabled();\n+  return EventGCCPUTime::is_enabled();\n@@ -58,1 +58,1 @@\n-  EventGCCpuTime e;\n+  EventGCCPUTime e;\n@@ -61,3 +61,3 @@\n-      e.set_userTime(user_time);\n-      e.set_systemTime(system_time);\n-      e.set_realTime(real_time);\n+      e.set_userTime((size_t)(user_time * NANOUNITS));\n+      e.set_systemTime((size_t)(system_time * NANOUNITS));\n+      e.set_realTime((size_t)(real_time * NANOUNITS));\n","filename":"src\/hotspot\/share\/gc\/shared\/gcTraceSend.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -498,6 +498,6 @@\n-  <Event name=\"GCCpuTime\" category=\"Java Virtual Machine, GC, Detailed\" label=\"GC CPU Time\" description=\"GC CPU Time information in seconds\"\n-    thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n-    <Field type=\"uint\" name=\"gcId\" label=\"GC Identifier\" relation=\"GcId\" description=\"Identifier signifying GC during which the object was promoted\" \/>\n-    <Field type=\"double\" name=\"userTime\" label=\"User Time\" \/>\n-    <Field type=\"double\" name=\"systemTime\" label=\"System Time\" \/>\n-    <Field type=\"double\" name=\"realTime\" label=\"Real Time\" \/>\n+  <Event name=\"GCCPUTime\" category=\"Java Virtual Machine, GC, Detailed\" label=\"GC CPU Time\" description=\"GC CPU Time information. Supported: G1GC, ParallelGC and SerialGC\"\n+    stackTrace=\"false\" startTime=\"false\">\n+    <Field type=\"uint\" name=\"gcId\" label=\"GC Identifier\" relation=\"GcId\" \/>\n+    <Field type=\"ulong\" contentType=\"nanos\" name=\"userTime\" label=\"User Time\" \/>\n+    <Field type=\"ulong\" contentType=\"nanos\" name=\"systemTime\" label=\"System Time\" \/>\n+    <Field type=\"ulong\" contentType=\"nanos\" name=\"realTime\" label=\"Real Time\" \/>\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -444,1 +444,1 @@\n-    <event name=\"jdk.GCCpuTime\">\n+    <event name=\"jdk.GCCPUTime\">\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,1 +146,1 @@\n-    \n+\n@@ -382,1 +382,1 @@\n-      <setting name=\"stackTrace\">true<\/setting> \n+      <setting name=\"stackTrace\">true<\/setting>\n@@ -444,1 +444,1 @@\n-    <event name=\"jdk.GCCpuTime\">\n+    <event name=\"jdk.GCCPUTime\">\n@@ -896,4 +896,4 @@\n-  <!--                                                                                                        \n-  Contents of the control element is not read by the JVM, it's used                                           \n-  by JDK Mission Control and the 'jfr' tool to change settings that                                           \n-  carry the control attribute.                                                                                \n+  <!--\n+  Contents of the control element is not read by the JVM, it's used\n+  by JDK Mission Control and the 'jfr' tool to change settings that\n+  carry the control attribute.\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -277,2 +277,2 @@\n-                    \/\/ GCCpuTime is generated after GC is completed.\n-                    if (!EventNames.GCCpuTime.equals(name)) {\n+                    \/\/ GCCPUTime is generated after GC is completed.\n+                    if (!EventNames.GCCPUTime.equals(name)) {\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/collection\/GCEventAll.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -Xmx32m -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseSerialGC jdk.jfr.event.gc.detailed.TestGCCpuTimeEvent\n+ * @run main\/othervm -Xbootclasspath\/a:. -Xmx32m -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseSerialGC jdk.jfr.event.gc.detailed.TestGCCPUTimeEvent\n@@ -52,1 +52,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -Xmx32m -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseParallelGC jdk.jfr.event.gc.detailed.TestGCCpuTimeEvent\n+ * @run main\/othervm -Xbootclasspath\/a:. -Xmx32m -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseParallelGC jdk.jfr.event.gc.detailed.TestGCCPUTimeEvent\n@@ -63,1 +63,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -Xmx32m -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseG1GC jdk.jfr.event.gc.detailed.TestGCCpuTimeEvent\n+ * @run main\/othervm -Xbootclasspath\/a:. -Xmx32m -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+UseG1GC jdk.jfr.event.gc.detailed.TestGCCPUTimeEvent\n@@ -66,2 +66,2 @@\n-public class TestGCCpuTimeEvent {\n-    private static final String EVENT_NAME = EventNames.GCCpuTime;\n+public class TestGCCPUTimeEvent {\n+    private static final String EVENT_NAME = EventNames.GCCPUTime;\n@@ -83,1 +83,1 @@\n-            Events.hasEvent(events, EventNames.GCCpuTime);\n+            Events.hasEvent(events, EVENT_NAME);\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/TestGCCPUTimeEvent.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"test\/jdk\/jdk\/jfr\/event\/gc\/detailed\/TestGCCpuTimeEvent.java","status":"renamed"},{"patch":"@@ -152,1 +152,1 @@\n-    public static final String GCCpuTime = PREFIX + \"GCCpuTime\";\n+    public static final String GCCPUTime = PREFIX + \"GCCPUTime\";\n","filename":"test\/lib\/jdk\/test\/lib\/jfr\/EventNames.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}