{"files":[{"patch":"@@ -1100,1 +1100,1 @@\n-  GCIdMark gc_id;\n+  G1FullGCMark gc_mark;\n@@ -1102,1 +1102,1 @@\n-  G1FullCollector collector(this, explicit_gc, do_clear_all_soft_refs, do_maximal_compaction);\n+  G1FullCollector collector(this, explicit_gc, do_clear_all_soft_refs, do_maximal_compaction, gc_mark.tracer());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -114,1 +114,2 @@\n-                                 bool do_maximal_compaction) :\n+                                 bool do_maximal_compaction,\n+                                 G1FullGCTracer* tracer) :\n@@ -116,3 +117,1 @@\n-    _tracer(),\n-    _cpu_time(&_tracer),\n-    _scope(heap->monitoring_support(), explicit_gc, clear_soft_refs, do_maximal_compaction, &_tracer),\n+    _scope(heap->monitoring_support(), explicit_gc, clear_soft_refs, do_maximal_compaction, tracer),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -61,0 +61,12 @@\n+\/\/ Full GC Mark that holds GC id and CPU time trace. Needs to be separate\n+\/\/ from the G1FullCollector and G1FullGCScope to allow the Full GC logging\n+\/\/ to have the same structure as the Young GC logging.\n+class G1FullGCMark : StackObj {\n+  GCIdMark       _gc_id;\n+  G1FullGCTracer _tracer;\n+  GCTraceCPUTime _cpu_time;\n+public:\n+  G1FullGCMark() : _gc_id(), _tracer(), _cpu_time(&_tracer) { }\n+  G1FullGCTracer* tracer() { return &_tracer; }\n+};\n+\n@@ -64,2 +76,0 @@\n-  G1FullGCTracer            _tracer;\n-  GCTraceCPUTime            _cpu_time;\n@@ -91,1 +101,2 @@\n-                  bool do_maximal_compaction);\n+                  bool do_maximal_compaction,\n+                  G1FullGCTracer* tracer);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.hpp","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"}]}