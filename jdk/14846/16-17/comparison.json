{"files":[{"patch":"@@ -127,6 +127,0 @@\n-void PSCardTable::scan_obj(PSPromotionManager* pm,\n-                           oop obj) {\n-  prefetch_write(obj);\n-  pm->push_contents(obj);\n-}\n-\n@@ -143,3 +137,0 @@\n-  _pre_scavenge_current_goal_active_workers = active_workers;\n-  _pre_scavenge_current_goal = old_gen_bottom + _pre_scavenge_sync_interval;\n-  _pre_scavenge_completed_top = nullptr;\n@@ -212,7 +203,2 @@\n-        if (obj.addr < addr_l) {\n-          if (sct.is_any_dirty(sct.card_for(MAX2(obj.addr, start)), dirty_l)) {\n-            \/\/ already scanned\n-          } else {\n-            \/\/ treat it as semi-precise-marked, [addr_l, obj-end)\n-            scan_obj_with_limit(pm, obj.obj, addr_l, MIN2(obj.end_addr, end));\n-          }\n+        if (obj.addr < i_addr && i_addr > start) {\n+          \/\/ already-scanned\n@@ -220,8 +206,1 @@\n-          \/\/ obj-start is dirty\n-          if (obj.end_addr <= end) {\n-            \/\/ scan whole obj if it does not extend beyond the stripe end\n-            scan_obj(pm, obj.obj);\n-          } else {\n-            \/\/ otherwise scan limit the scan\n-            scan_obj_with_limit(pm, obj.obj, addr_l, end);\n-          }\n+          scan_obj_with_limit(pm, obj.obj, addr_l, end);\n@@ -246,1 +225,0 @@\n-\/\/ Pre-scavenging and scavenging can overlap.\n@@ -248,5 +226,5 @@\n-void PSCardTable::pre_scavenge_parallel(Func&& object_start,\n-                                        HeapWord* old_gen_bottom,\n-                                        HeapWord* old_gen_top,\n-                                        uint stripe_index,\n-                                        uint n_stripes) {\n+void PSCardTable::preprocess_card_table_parallel(Func&& object_start,\n+                                                 HeapWord* old_gen_bottom,\n+                                                 HeapWord* old_gen_top,\n+                                                 uint stripe_index,\n+                                                 uint n_stripes) {\n@@ -272,13 +250,0 @@\n-    \/\/ Synchronization with already scavenging threads.\n-    if (signaled_goal < _pre_scavenge_current_goal && _pre_scavenge_current_goal <= stripe_addr) {\n-      signaled_goal = (HeapWord*) _pre_scavenge_current_goal;\n-      Atomic::dec(&_pre_scavenge_current_goal_active_workers);\n-      if (_pre_scavenge_current_goal_active_workers == 0) {\n-        \/\/ We're the last one to reach the current goal.\n-        \/\/ Set completed top.\n-        _pre_scavenge_completed_top = _pre_scavenge_current_goal;\n-        \/\/ Set next goal.\n-        _pre_scavenge_current_goal_active_workers = active_workers;\n-        Atomic::add(&_pre_scavenge_current_goal, _pre_scavenge_sync_interval);\n-      }\n-    }\n@@ -286,0 +251,2 @@\n+\n+  \/\/ Sync with other workers\n@@ -287,0 +254,4 @@\n+  SpinYield spin_yield;\n+  while (Atomic::load_acquire(&_pre_scavenge_active_workers) > 0) {\n+    spin_yield.wait();\n+  }\n@@ -358,1 +329,1 @@\n-  pre_scavenge_parallel(object_start, old_gen_bottom, old_gen_top, stripe_index, n_stripes);\n+  preprocess_card_table_parallel(object_start, old_gen_bottom, old_gen_top, stripe_index, n_stripes);\n@@ -365,1 +336,0 @@\n-  bool pre_scavenge_complete = false;\n@@ -371,10 +341,0 @@\n-    \/\/ Sync with concurrent pre-scavenge.\n-    if (!pre_scavenge_complete) {\n-      SpinYield spin;\n-      while (Atomic::load_acquire(&_pre_scavenge_active_workers) != 0 &&\n-             cur_stripe_addr > Atomic::load_acquire(&_pre_scavenge_completed_top)) {\n-        spin.wait();\n-      }\n-      pre_scavenge_complete = Atomic::load_acquire(&_pre_scavenge_active_workers) == 0;\n-    }\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":15,"deletions":55,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -74,4 +74,0 @@\n-    bool is_any_dirty(const CardValue* const start, const CardValue* const end) {\n-      return find_first_dirty_card(start, end) != end;\n-    }\n-\n@@ -106,6 +102,0 @@\n-  static size_t constexpr _pre_scavenge_sync_interval = 1*G;\n-  volatile HeapWord* _pre_scavenge_current_goal;\n-  volatile int _pre_scavenge_current_goal_active_workers;\n-  \/\/ A stripe is ready for scavenge if it's start is not higher then this.\n-  volatile HeapWord* _pre_scavenge_completed_top;\n-  \/\/ All stripes are ready for scavenge if all threads have completed pre-scavenge.\n@@ -135,3 +125,0 @@\n-  void scan_obj(PSPromotionManager* pm,\n-                oop obj);\n-\n@@ -145,3 +132,0 @@\n-                                      _pre_scavenge_current_goal(nullptr),\n-                                      _pre_scavenge_current_goal_active_workers(0),\n-                                      _pre_scavenge_completed_top(nullptr),\n@@ -158,1 +142,0 @@\n-  \/\/ Pre-scavenging and scavenging can overlap.\n@@ -160,5 +143,5 @@\n-  void pre_scavenge_parallel(Func&& object_start,\n-                             HeapWord* old_gen_bottom,\n-                             HeapWord* old_gen_top,\n-                             uint stripe_index,\n-                             uint n_stripes);\n+  void preprocess_card_table_parallel(Func&& object_start,\n+                                      HeapWord* old_gen_bottom,\n+                                      HeapWord* old_gen_top,\n+                                      uint stripe_index,\n+                                      uint n_stripes);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.hpp","additions":5,"deletions":22,"binary":false,"changes":27,"status":"modified"}]}