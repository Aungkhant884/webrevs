{"files":[{"patch":"@@ -215,23 +215,2 @@\n-void PSCardTable::pre_scavenge(MutableSpace* old_gen, ObjectStartArray* start_array) {\n-  CardValue* cur_card = byte_for(old_gen->bottom());\n-  CardValue* const end_card = byte_for(old_gen->top() - 1) + 1;\n-\n-  \/\/ Propagate imprecise marks from object start to the stripes the object extends to.\n-  for ( \/* empty *\/ ; cur_card < end_card; cur_card += num_cards_in_stripe) {\n-    if (!is_dirty(cur_card)) {\n-      HeapWord* stripe_addr = addr_for(cur_card);\n-      HeapWord* first_obj_addr = start_array->object_start(stripe_addr);\n-      if (first_obj_addr < stripe_addr) {\n-        oop first_obj = cast_to_oop(first_obj_addr);\n-        if (first_obj->is_array()) {\n-          \/\/ Arrays are either precisely or never marked. Skip over them.\n-          HeapWord* end = first_obj_addr + first_obj->size();\n-          cur_card = align_down(byte_for(end), num_cards_in_stripe);\n-        } else if (is_dirty(byte_for(first_obj_addr))) {\n-          \/\/ Potentially imprecisely marked dirty.\n-          \/\/ Mark first card of stripe dirty too.\n-          *cur_card = dirty_card_val();\n-        }\n-      }\n-    }\n-  }\n+void PSCardTable::pre_scavenge(uint active_workers) {\n+  _scavenge_phase1_active_workers = active_workers;\n@@ -395,2 +374,0 @@\n-  ObjStartCache start_cache(start_array);\n-\n@@ -400,1 +377,21 @@\n-  HeapWord* cur_stripe_addr = old_gen_bottom + stripe_index * stripe_size_in_words;\n+  \/\/ Propagate imprecise marks from object start to the stripes the object extends to.\n+  {\n+    const size_t num_cards_in_slice = num_cards_in_stripe * n_stripes;\n+    CardValue* cur_card = byte_for(old_gen_bottom) + stripe_index * num_cards_in_stripe;\n+    CardValue* const space_top_card = byte_for(old_gen_top);\n+\n+    ObjStartCache start_cache(start_array);\n+    for ( \/* empty *\/ ; cur_card < space_top_card; cur_card += num_cards_in_slice) {\n+      if (!is_dirty(cur_card)) {\n+        HeapWord* stripe_addr = addr_for(cur_card);\n+        HeapWord* first_obj_addr = start_cache.object_start(stripe_addr);\n+        if (first_obj_addr < stripe_addr) {\n+          oop first_obj = cast_to_oop(first_obj_addr);\n+          if (!first_obj->is_array() && is_dirty(byte_for(first_obj_addr))) {\n+            \/\/ Potentially imprecisely marked dirty.\n+            \/\/ Mark first card of stripe dirty too.\n+            *cur_card = dirty_card_val();\n+          }\n+        }\n+      }\n+    }\n@@ -402,0 +399,10 @@\n+    \/\/ Synchronize with co-worker threads.\n+    Atomic::dec(&_scavenge_phase1_active_workers);\n+    while(_scavenge_phase1_active_workers > 0) {\n+      os::naked_short_sleep(0);\n+    }\n+  }\n+\n+  \/\/ Scavenge\n+  HeapWord* cur_stripe_addr = old_gen_bottom + stripe_index * stripe_size_in_words;\n+  ObjStartCache start_cache(start_array);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":33,"deletions":26,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -40,0 +40,2 @@\n+  volatile int _scavenge_phase1_active_workers;\n+\n@@ -80,1 +82,1 @@\n-  PSCardTable(MemRegion whole_heap) : CardTable(whole_heap) {}\n+  PSCardTable(MemRegion whole_heap) : CardTable(whole_heap), _scavenge_phase1_active_workers(0) {}\n@@ -85,1 +87,1 @@\n-  void pre_scavenge(MutableSpace* old_gen, ObjectStartArray* start_array);\n+  void pre_scavenge(uint active_workers);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-      card_table->pre_scavenge(_old_gen->object_space(), _old_gen->start_array());\n+      card_table->pre_scavenge(active_workers);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}