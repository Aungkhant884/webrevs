{"files":[{"patch":"@@ -155,18 +155,0 @@\n-  \/\/ Helper struct to keep the following code compact.\n-  struct Obj {\n-    HeapWord* addr;\n-    oop obj;\n-    bool is_obj_array;\n-    HeapWord* end_addr;\n-    Obj(HeapWord* o_addr) : addr(o_addr),\n-                            obj(cast_to_oop(o_addr)),\n-                            is_obj_array(obj->is_objArray()),\n-                            end_addr(addr + obj->size()) {}\n-    void next() {\n-      addr = end_addr;\n-      obj = cast_to_oop(addr);\n-      is_obj_array = obj->is_objArray();\n-      end_addr = addr + obj->size();\n-    }\n-  };\n-\n@@ -194,1 +176,1 @@\n-    Obj obj(object_start(addr_l));\n+    HeapWord* obj_addr = object_start(addr_l);\n@@ -197,1 +179,5 @@\n-      assert(obj.addr < addr_r, \"inv\");\n+      assert(obj_addr < addr_r, \"inv\");\n+\n+      oop obj = cast_to_oop(obj_addr);\n+      const bool is_obj_array = obj->is_objArray();\n+      HeapWord* const obj_end_addr = obj_addr + obj->size();\n@@ -199,1 +185,1 @@\n-      if (obj.is_obj_array) {\n+      if (is_obj_array) {\n@@ -201,1 +187,1 @@\n-        scan_obj_with_limit(pm, obj.obj, addr_l, addr_r);\n+        scan_obj_with_limit(pm, obj, addr_l, addr_r);\n@@ -203,1 +189,1 @@\n-        if (obj.addr < i_addr && i_addr > start) {\n+        if (obj_addr < i_addr && i_addr > start) {\n@@ -206,1 +192,1 @@\n-          scan_obj_with_limit(pm, obj.obj, addr_l, end);\n+          scan_obj_with_limit(pm, obj, addr_l, end);\n@@ -210,2 +196,2 @@\n-      if (obj.end_addr >= addr_r) {\n-        i_addr = obj.is_obj_array ? addr_r : obj.end_addr;\n+      if (obj_end_addr >= addr_r) {\n+        i_addr = is_obj_array ? addr_r : obj_end_addr;\n@@ -216,1 +202,1 @@\n-      obj.next();\n+      obj_addr = obj_end_addr;\n@@ -307,2 +293,1 @@\n-    DEBUG_ONLY(HeapWord* _prev_query);\n-  } cached_obj {nullptr, old_gen_bottom DEBUG_ONLY(COMMA nullptr)};\n+  } cached_obj {nullptr, old_gen_bottom};\n@@ -311,2 +296,0 @@\n-    assert(cached_obj._prev_query <= addr, \"precondition\");\n-    DEBUG_ONLY(cached_obj._prev_query = addr);\n@@ -332,1 +315,1 @@\n-  cached_obj = {nullptr, old_gen_bottom DEBUG_ONLY(COMMA nullptr)};\n+  cached_obj = {nullptr, old_gen_bottom};\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.cpp","additions":15,"deletions":32,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -43,3 +43,0 @@\n-#ifdef ASSERT\n-    const CardValue* _table_end;\n-#endif\n@@ -49,5 +46,1 @@\n-      _table_base(_table - (uintptr_t(stripe.start()) >> _card_shift))\n-#ifdef ASSERT\n-      , _table_end((const CardValue*)(uintptr_t(_table) + (align_up(stripe.byte_size(), _card_size) >> _card_shift)))\n-#endif\n-    {\n+      _table_base(_table - (uintptr_t(stripe.start()) >> _card_shift)) {\n@@ -62,1 +55,1 @@\n-      assert(card >= _table && card <= _table_end, \"out of bounds\");\n+      assert(card >= _table && card <=  &_table[num_cards_in_stripe], \"out of bounds\");\n@@ -75,1 +68,1 @@\n-      assert(card >= _table && card < _table_end, \"out of bounds\");\n+      assert(card >= _table && card <  &_table[num_cards_in_stripe], \"out of bounds\");\n@@ -82,1 +75,1 @@\n-        if (!is_clean(i)) {\n+        if (is_dirty(i)) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCardTable.hpp","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"}]}