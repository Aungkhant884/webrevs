{"files":[{"patch":"@@ -55,0 +55,4 @@\n+\/\/ stubbed-out trim-native support\n+inline bool os::can_trim_native_heap() { return false; }\n+inline bool os::trim_native_heap(os::size_change_t* rss_change) { return false; }\n+\n","filename":"src\/hotspot\/os\/aix\/os_aix.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,0 +58,4 @@\n+\/\/ stubbed-out trim-native support\n+inline bool os::can_trim_native_heap() { return false; }\n+inline bool os::trim_native_heap(os::size_change_t* rss_change) { return false; }\n+\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5334,0 +5334,29 @@\n+\n+bool os::trim_native_heap(os::size_change_t* rss_change) {\n+#ifdef __GLIBC__\n+  os::Linux::meminfo_t info1;\n+  os::Linux::meminfo_t info2;\n+\n+  bool have_info1 = rss_change != nullptr &&\n+                    os::Linux::query_process_memory_info(&info1);\n+  ::malloc_trim(0);\n+  bool have_info2 = rss_change != nullptr && have_info1 &&\n+                    os::Linux::query_process_memory_info(&info2);\n+  ssize_t delta = (ssize_t) -1;\n+  if (rss_change != nullptr) {\n+    if (have_info1 && have_info2 &&\n+        info1.vmrss != -1 && info2.vmrss != -1 &&\n+        info1.vmswap != -1 && info2.vmswap != -1) {\n+      \/\/ Note: query_process_memory_info returns values in K\n+      rss_change->before = (info1.vmrss + info1.vmswap) * K;\n+      rss_change->after = (info2.vmrss + info2.vmswap) * K;\n+    } else {\n+      rss_change->after = rss_change->before = SIZE_MAX;\n+    }\n+  }\n+\n+  return true;\n+#else\n+  return false; \/\/ musl\n+#endif\n+}\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":29,"deletions":0,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -50,0 +50,9 @@\n+\/\/ Trim-native support\n+inline bool os::can_trim_native_heap() {\n+#ifdef __GLIBC__\n+  return true;\n+#else\n+  return false; \/\/ musl\n+#endif\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.inline.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021 SAP SE. All rights reserved.\n+ * Copyright (c) 2022 SAP SE. All rights reserved.\n@@ -27,3 +27,2 @@\n-#include \"logging\/log.hpp\"\n-#include \"os_linux.hpp\"\n-#include \"runtime\/os.hpp\"\n+#include \"runtime\/os.inline.hpp\"\n+#include \"trimCHeapDCmd.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -32,1 +32,0 @@\n-#include \"trimCHeapDCmd.hpp\"\n@@ -37,32 +36,12 @@\n-#ifdef __GLIBC__\n-  stringStream ss_report(1024); \/\/ Note: before calling trim\n-\n-  os::Linux::meminfo_t info1;\n-  os::Linux::meminfo_t info2;\n-  \/\/ Query memory before...\n-  bool have_info1 = os::Linux::query_process_memory_info(&info1);\n-\n-  _output->print_cr(\"Attempting trim...\");\n-  ::malloc_trim(0);\n-  _output->print_cr(\"Done.\");\n-\n-  \/\/ ...and after trim.\n-  bool have_info2 = os::Linux::query_process_memory_info(&info2);\n-\n-  \/\/ Print report both to output stream as well to UL\n-  bool wrote_something = false;\n-  if (have_info1 && have_info2) {\n-    if (info1.vmsize != -1 && info2.vmsize != -1) {\n-      ss_report.print_cr(\"Virtual size before: \" SSIZE_FORMAT \"k, after: \" SSIZE_FORMAT \"k, (\" SSIZE_FORMAT \"k)\",\n-                         info1.vmsize, info2.vmsize, (info2.vmsize - info1.vmsize));\n-      wrote_something = true;\n-    }\n-    if (info1.vmrss != -1 && info2.vmrss != -1) {\n-      ss_report.print_cr(\"RSS before: \" SSIZE_FORMAT \"k, after: \" SSIZE_FORMAT \"k, (\" SSIZE_FORMAT \"k)\",\n-                         info1.vmrss, info2.vmrss, (info2.vmrss - info1.vmrss));\n-      wrote_something = true;\n-    }\n-    if (info1.vmswap != -1 && info2.vmswap != -1) {\n-      ss_report.print_cr(\"Swap before: \" SSIZE_FORMAT \"k, after: \" SSIZE_FORMAT \"k, (\" SSIZE_FORMAT \"k)\",\n-                         info1.vmswap, info2.vmswap, (info2.vmswap - info1.vmswap));\n-      wrote_something = true;\n+  if (os::can_trim_native_heap()) {\n+    os::size_change_t sc;\n+    if (os::trim_native_heap(&sc)) {\n+      _output->print(\"Trim native heap: \");\n+      if (sc.after != SIZE_MAX) {\n+        const size_t delta = sc.after < sc.before ? (sc.before - sc.after) : (sc.after - sc.before);\n+        const char sign = sc.after < sc.before ? '-' : '+';\n+        _output->print_cr(\"RSS+Swap: \" PROPERFMT \"->\" PROPERFMT \" (%c\" PROPERFMT \")\",\n+                          PROPERFMTARGS(sc.before), PROPERFMTARGS(sc.after), sign, PROPERFMTARGS(delta));\n+      } else {\n+        _output->print_cr(\"(no details available).\");\n+      }\n@@ -70,0 +49,2 @@\n+  } else {\n+    _output->print_cr(\"Not available.\");\n@@ -71,9 +52,0 @@\n-  if (!wrote_something) {\n-    ss_report.print_raw(\"No details available.\");\n-  }\n-\n-  _output->print_raw(ss_report.base());\n-  log_info(os)(\"malloc_trim:\\n%s\", ss_report.base());\n-#else\n-  _output->print_cr(\"Not available.\");\n-#endif\n","filename":"src\/hotspot\/os\/linux\/trimCHeapDCmd.cpp","additions":18,"deletions":46,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -101,0 +101,4 @@\n+\/\/ stubbed-out trim-native support\n+inline bool os::can_trim_native_heap() { return false; }\n+inline bool os::trim_native_heap(os::size_change_t* rss_change) { return false; }\n+\n","filename":"src\/hotspot\/os\/windows\/os_windows.inline.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -443,0 +443,9 @@\n+  \/\/ Does the platform support trimming the native heap?\n+  static bool can_trim_native_heap();\n+\n+  \/\/ Trim the C-heap. Optionally returns working set size change (RSS+Swap) in *rss_change.\n+  \/\/ Note: If trimming succeeded but no size change information could be obtained,\n+  \/\/ rss_change.after will contain SIZE_MAX upon return.\n+  struct size_change_t { size_t before; size_t after; };\n+  static bool trim_native_heap(size_change_t* rss_change = nullptr);\n+\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -375,0 +375,3 @@\n+#define PROPERFMT             SIZE_FORMAT \"%s\"\n+#define PROPERFMTARGS(s)      byte_size_in_proper_unit(s), proper_unit_for_byte_size(s)\n+\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-#include \"runtime\/os.hpp\"\n+#include \"runtime\/os.inline.hpp\"\n@@ -893,0 +893,24 @@\n+\n+#ifdef __GLIBC__\n+TEST_VM(os, trim_native_heap) {\n+  EXPECT_TRUE(os::can_trim_native_heap());\n+  os::size_change_t sc;\n+  sc.before = sc.after = (size_t)-1;\n+  EXPECT_TRUE(os::trim_native_heap(&sc));\n+  tty->print_cr(SIZE_FORMAT \"->\" SIZE_FORMAT, sc.before, sc.after);\n+  \/\/ Regardless of whether we freed memory, both before and after\n+  \/\/ should be somewhat believable numbers (RSS).\n+  const size_t min = 5 * M;\n+  const size_t max = LP64_ONLY(20 * G) NOT_LP64(3 * G);\n+  ASSERT_LE(min, sc.before);\n+  ASSERT_GT(max, sc.before);\n+  ASSERT_LE(min, sc.after);\n+  ASSERT_GT(max, sc.after);\n+  \/\/ Should also work\n+  EXPECT_TRUE(os::trim_native_heap());\n+}\n+#else\n+TEST_VM(os, trim_native_heap) {\n+  EXPECT_FALSE(os::can_trim_native_heap());\n+}\n+#endif \/\/ __GLIBC__\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * @requires os.family == \"linux\"\n+ * @requires (os.family==\"linux\") & !vm.musl\n@@ -45,4 +45,1 @@\n-        output.shouldMatch(\"(Done|Not available)\"); \/\/ Not available could happen on Linux + non-glibc (eg. muslc)\n-        if (output.firstMatch(\"Done\") != null) {\n-            output.shouldMatch(\"(Virtual size before|RSS before|Swap before|No details available)\");\n-        }\n+        output.shouldMatch(\".*Trim native heap: RSS\\\\+Swap: \\\\d+[BKM]->\\\\d+[BKM].*\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/TrimLibcHeapTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}