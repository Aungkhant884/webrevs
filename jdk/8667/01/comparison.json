{"files":[{"patch":"@@ -40,1 +40,0 @@\n-import java.security.cert.CertificateParsingException;\n@@ -45,1 +44,0 @@\n-import java.security.spec.ECParameterSpec;\n@@ -69,1 +67,0 @@\n-import sun.security.util.NamedCurve;\n@@ -3734,0 +3731,1 @@\n+        boolean needRepeat;\n@@ -3739,0 +3737,1 @@\n+            System.err.println(rb.getString(\"enter.dname.components\"));\n@@ -3759,9 +3758,17 @@\n-            name = new X500Name(commonName, organizationalUnit, organization,\n-                                city, state, country);\n-            MessageFormat form = new MessageFormat\n-                (rb.getString(\"Is.name.correct.\"));\n-            Object[] source = {name};\n-            userInput = inputString\n-                (in, form.format(source), rb.getString(\"no\"));\n-        } while (collator.compare(userInput, rb.getString(\"yes\")) != 0 &&\n-                 collator.compare(userInput, rb.getString(\"y\")) != 0);\n+            name = new X500Name(\n+                    dotToNull(commonName), dotToNull(organizationalUnit),\n+                    dotToNull(organization), dotToNull(city),\n+                    dotToNull(state), dotToNull(country));\n+            if (name.isEmpty()) {\n+                System.err.println(rb.getString(\"no.field.in.dname\"));\n+                needRepeat = true;\n+            } else {\n+                MessageFormat form = new MessageFormat\n+                        (rb.getString(\"Is.name.correct.\"));\n+                Object[] source = {name};\n+                userInput = inputString\n+                        (in, form.format(source), rb.getString(\"no\"));\n+                needRepeat = collator.compare(userInput, rb.getString(\"yes\")) != 0 &&\n+                        collator.compare(userInput, rb.getString(\"y\")) != 0;\n+            }\n+        } while (needRepeat);\n@@ -3773,0 +3780,4 @@\n+    private static String dotToNull(String input) {\n+        return \".\".equals(input) ? null : input;\n+    }\n+\n@@ -3780,1 +3791,1 @@\n-        Object[] source = {defaultValue};\n+        Object[] source = { \".\".equals(defaultValue) ? \"EMPTY\" : defaultValue };\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":24,"deletions":13,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -377,0 +377,2 @@\n+        {\"enter.dname.components\",\n+                \"Enter the distinguished name. Provide a single dot (.) to leave a sub-component empty.\"},\n@@ -389,0 +391,2 @@\n+        {\"no.field.in.dname\",\n+                \"At least one field must be provided. Enter again.\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Resources.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,23 +244,39 @@\n-        names = new RDN[6];\n-        \/*\n-         * NOTE:  it's only on output that little-endian\n-         * ordering is used.\n-         *\/\n-        names[5] = new RDN(1);\n-        names[5].assertion[0] = new AVA(commonName_oid,\n-                new DerValue(commonName));\n-        names[4] = new RDN(1);\n-        names[4].assertion[0] = new AVA(orgUnitName_oid,\n-                new DerValue(organizationUnit));\n-        names[3] = new RDN(1);\n-        names[3].assertion[0] = new AVA(orgName_oid,\n-                new DerValue(organizationName));\n-        names[2] = new RDN(1);\n-        names[2].assertion[0] = new AVA(localityName_oid,\n-                new DerValue(localityName));\n-        names[1] = new RDN(1);\n-        names[1].assertion[0] = new AVA(stateName_oid,\n-                new DerValue(stateName));\n-        names[0] = new RDN(1);\n-        names[0].assertion[0] = new AVA(countryName_oid,\n-                new DerValue(country));\n+        RDN name;\n+        List<RDN> list = new ArrayList<>(6);\n+        if (country != null) {\n+            name = new RDN(1);\n+            name.assertion[0] = new AVA(countryName_oid,\n+                    new DerValue(country));\n+            list.add(name);\n+        }\n+        if (stateName != null) {\n+            name = new RDN(1);\n+            name.assertion[0] = new AVA(stateName_oid,\n+                    new DerValue(stateName));\n+            list.add(name);\n+        }\n+        if (localityName != null) {\n+            name = new RDN(1);\n+            name.assertion[0] = new AVA(localityName_oid,\n+                    new DerValue(localityName));\n+            list.add(name);\n+        }\n+        if (organizationName != null) {\n+            name = new RDN(1);\n+            name.assertion[0] = new AVA(orgName_oid,\n+                    new DerValue(organizationName));\n+            list.add(name);\n+        }\n+        if (organizationUnit != null) {\n+            name = new RDN(1);\n+            name.assertion[0] = new AVA(orgUnitName_oid,\n+                    new DerValue(organizationUnit));\n+            list.add(name);\n+        }\n+        if (commonName != null) {\n+            name = new RDN(1);\n+            name.assertion[0] = new AVA(commonName_oid,\n+                    new DerValue(commonName));\n+            list.add(name);\n+        }\n+        names = list.toArray(new RDN[0]);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X500Name.java","additions":40,"deletions":24,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8284194\n+ * @summary Allow empty subject fields in keytool\n+ * @library \/test\/lib\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.SecurityTools;\n+\n+import java.io.File;\n+import java.security.KeyStore;\n+import java.security.cert.X509Certificate;\n+\n+public class EmptyField {\n+\n+    public static void main(String[] args) throws Exception {\n+        \/\/ All \".\" in first round, \"Me\" as name in 2nd round.\n+        SecurityTools.setResponse(\n+                \".\\n.\\n.\\n.\\n.\\n.\\n\"        \/\/ all empty, must retry\n+                + \"Me\\n\\n\\n\\n\\n\\nno\\n\"      \/\/ one non-empty, ask yes\/no\n+                + \"\\n\\n\\n\\n\\n\\nyes\\n\");     \/\/ remember input\n+        SecurityTools.keytool(\"-genkeypair -keystore ks -storepass changeit -alias b -keyalg EC\")\n+                .shouldContain(\"[Unknown]\") \/\/ old default\n+                .shouldContain(\"At least one field must be provided. Enter again.\")\n+                .shouldContain(\"[EMPTY]\") \/\/ new value in 2nd round\n+                .shouldContain(\"[Me]\") \/\/ new value in 3nd round\n+                .shouldContain(\"Is CN=Me correct?\")\n+                .shouldHaveExitValue(0);\n+        var ks = KeyStore.getInstance(new File(\"ks\"), \"changeit\".toCharArray());\n+        var cert = (X509Certificate) ks.getCertificate(\"b\");\n+        Asserts.assertEQ(cert.getSubjectX500Principal().toString(), \"CN=Me\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/EmptyField.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}