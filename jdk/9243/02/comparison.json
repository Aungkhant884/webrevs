{"files":[{"patch":"@@ -36,1 +36,0 @@\n-import java.util.List;\n@@ -73,1 +72,0 @@\n-    @SuppressWarnings(\"unchecked\")\n@@ -147,12 +145,10 @@\n-            Map<String, Object> newMap = null;\n-            for (String key : map.keySet()) {\n-                Object val = map.get(key);\n-                String metaVal = null;\n-\n-                for (Map.Entry<String, ?> entry : map.entrySet()) {\n-                    String k = entry.getKey();\n-                    if (!k.equals(key) &&\n-                        Objects.deepEquals(val, entry.getValue()) &&\n-                        !(Objects.nonNull(newMap) && newMap.containsKey(k))) {\n-                        if (Objects.isNull(newMap)) {\n-                            newMap = new HashMap<>();\n+            Map<String, Object> newMap = new LinkedHashMap<>(map);\n+            Map<BundleEntryValue, BundleEntryValue> dedup = new HashMap<>(map.size());\n+            for (Map.Entry<String, ?> entry : map.entrySet()) {\n+                String key = entry.getKey();\n+                Object val = entry.getValue();\n+                BundleEntryValue newEntry = new BundleEntryValue(key, val);\n+                BundleEntryValue oldEntry = dedup.putIfAbsent(newEntry, newEntry);\n+                if (oldEntry != null) {\n+                    if (oldEntry.meta()) {\n+                        if (fmt == null) {\n@@ -161,18 +157,5 @@\n-\n-                        if (Objects.isNull(metaVal)) {\n-                            metaVal = META_VALUE_PREFIX + key.replaceAll(\"[\\\\.-]\", \"_\");\n-\n-                            if (val instanceof String[]) {\n-                                fmt.format(\"        final String[] %s = new String[] {\\n\", metaVal);\n-                                for (String s : (String[]) val) {\n-                                    fmt.format(\"            \\\"%s\\\",\\n\", CLDRConverter.saveConvert(s, useJava));\n-                                }\n-                                fmt.format(\"        };\\n\");\n-                            } else if (val instanceof List) {\n-                                fmt.format(\"        final String[] %s = new String[] {\\n\", metaVal);\n-                                for (String s : (List<String>) val) {\n-                                    fmt.format(\"            \\\"%s\\\",\\n\", CLDRConverter.saveConvert(s, useJava));\n-                                }\n-                                fmt.format(\"        };\\n\");\n-                            } else {\n-                                fmt.format(\"        final String %s = \\\"%s\\\";\\n\", metaVal, CLDRConverter.saveConvert((String)val, useJava));\n+                        String metaVal = oldEntry.metaKey();\n+                        if (val instanceof String[] values) {\n+                            fmt.format(\"        final String[] %s = new String[] {\\n\", metaVal);\n+                            for (String s : values) {\n+                                fmt.format(\"            \\\"%s\\\",\\n\", CLDRConverter.saveConvert(s, useJava));\n@@ -180,0 +163,3 @@\n+                            fmt.format(\"        };\\n\");\n+                        } else {\n+                            fmt.format(\"        final String %s = \\\"%s\\\";\\n\", metaVal, CLDRConverter.saveConvert((String)val, useJava));\n@@ -181,2 +167,1 @@\n-\n-                        newMap.put(k, metaVal);\n+                        newMap.put(oldEntry.key, oldEntry.metaKey());\n@@ -184,4 +169,1 @@\n-                }\n-\n-                if (Objects.nonNull(metaVal)) {\n-                    newMap.put(key, metaVal);\n+                    newMap.put(key, oldEntry.metaKey());\n@@ -190,7 +172,1 @@\n-\n-            if (Objects.nonNull(newMap)) {\n-                for (String key : map.keySet()) {\n-                    newMap.putIfAbsent(key, map.get(key));\n-                }\n-                map = newMap;\n-            }\n+            map = newMap;\n@@ -250,0 +226,52 @@\n+    private static class BundleEntryValue {\n+        private final String key;\n+        private final Object value;\n+        private final int hashCode;\n+        private String metaKey;\n+\n+        BundleEntryValue(String key, Object value) {\n+            this.key = Objects.requireNonNull(key);\n+            this.value = Objects.requireNonNull(value);\n+            if (value instanceof String) {\n+                hashCode = value.hashCode();\n+            } else if (value instanceof String[] arr) {\n+                hashCode = Arrays.hashCode(arr);\n+            } else {\n+                throw new InternalError(\"Expected a string or a string array\");\n+            }\n+        }\n+\n+        \/**\n+         * mark the entry as meta\n+         * @return true if the entry was not meta before, false otherwise\n+         *\/\n+        public boolean meta() {\n+            if (metaKey == null) {\n+                metaKey = META_VALUE_PREFIX + key.replaceAll(\"[\\\\.-]\", \"_\");\n+                return true;\n+            }\n+            return false;\n+        }\n+\n+        public String metaKey() {\n+            return metaKey;\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            return hashCode;\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj) {\n+            if (obj instanceof BundleEntryValue entry) {\n+                if (value instanceof String s) {\n+                    return s.equals(entry.value);\n+                } else if (entry.value instanceof String[] otherVal) {\n+                    return Arrays.equals((String[]) value, otherVal);\n+                }\n+            }\n+            return false;\n+        }\n+    }\n+\n","filename":"make\/jdk\/src\/classes\/build\/tools\/cldrconverter\/ResourceBundleGenerator.java","additions":73,"deletions":45,"binary":false,"changes":118,"status":"modified"}]}