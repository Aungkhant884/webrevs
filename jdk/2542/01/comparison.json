{"files":[{"patch":"@@ -66,0 +66,1 @@\n+#include \"runtime\/safefetch.hpp\"\n@@ -68,1 +69,0 @@\n-#include \"runtime\/stubRoutines.hpp\"\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-#include \"runtime\/stubRoutines.hpp\"\n+#include \"runtime\/safefetch.hpp\"\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,0 +61,1 @@\n+#include \"runtime\/safefetch.hpp\"\n@@ -64,1 +65,0 @@\n-#include \"runtime\/stubRoutines.hpp\"\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+#include \"runtime\/safefetch.hpp\"\n@@ -40,1 +41,0 @@\n-#include \"runtime\/stubRoutines.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/oopStorage.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+#include \"runtime\/safefetch.hpp\"\n@@ -52,1 +53,0 @@\n-#include \"runtime\/stubRoutines.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,0 +59,1 @@\n+#include \"runtime\/safefetch.hpp\"\n@@ -60,1 +61,0 @@\n-#include \"runtime\/stubRoutines.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_RUNTIME_SAFEFETCH_HPP\n+#define SHARE_RUNTIME_SAFEFETCH_HPP\n+\n+#include \"runtime\/stubRoutines.hpp\"\n+\n+\/\/ Safefetch allows to load a value from a location that's not known\n+\/\/ to be valid. If the load causes a fault, the error value is returned.\n+inline int SafeFetch32(int* adr, int errValue) {\n+  assert(StubRoutines::SafeFetch32_stub(), \"stub not yet generated\");\n+  return StubRoutines::SafeFetch32_stub()(adr, errValue);\n+}\n+\n+inline intptr_t SafeFetchN(intptr_t* adr, intptr_t errValue) {\n+  assert(StubRoutines::SafeFetchN_stub(), \"stub not yet generated\");\n+  return StubRoutines::SafeFetchN_stub()(adr, errValue);\n+}\n+\n+\/\/ returns true if SafeFetch32 and SafeFetchN can be used safely (stubroutines are already generated)\n+inline bool CanUseSafeFetch32() {\n+  return StubRoutines::SafeFetch32_stub() ? true : false;\n+}\n+\n+inline bool CanUseSafeFetchN() {\n+  return StubRoutines::SafeFetchN_stub() ? true : false;\n+}\n+\n+#endif \/\/ SHARE_RUNTIME_SAFEFETCH_HPP\n","filename":"src\/hotspot\/share\/runtime\/safefetch.hpp","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"runtime\/safefetch.hpp\"\n@@ -34,1 +35,0 @@\n-#include \"runtime\/stubRoutines.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -491,20 +491,0 @@\n-\/\/ Safefetch allows to load a value from a location that's not known\n-\/\/ to be valid. If the load causes a fault, the error value is returned.\n-inline int SafeFetch32(int* adr, int errValue) {\n-  assert(StubRoutines::SafeFetch32_stub(), \"stub not yet generated\");\n-  return StubRoutines::SafeFetch32_stub()(adr, errValue);\n-}\n-inline intptr_t SafeFetchN(intptr_t* adr, intptr_t errValue) {\n-  assert(StubRoutines::SafeFetchN_stub(), \"stub not yet generated\");\n-  return StubRoutines::SafeFetchN_stub()(adr, errValue);\n-}\n-\n-\n-\/\/ returns true if SafeFetch32 and SafeFetchN can be used safely (stubroutines are already generated)\n-inline bool CanUseSafeFetch32() {\n-  return StubRoutines::SafeFetch32_stub() ? true : false;\n-}\n-\n-inline bool CanUseSafeFetchN() {\n-  return StubRoutines::SafeFetchN_stub() ? true : false;\n-}\n","filename":"src\/hotspot\/share\/runtime\/stubRoutines.hpp","additions":1,"deletions":21,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+#include \"runtime\/safefetch.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,1 @@\n-#include \"runtime\/stubRoutines.hpp\"\n+#include \"runtime\/safefetch.hpp\"\n","filename":"test\/hotspot\/gtest\/runtime\/test_safefetch.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}