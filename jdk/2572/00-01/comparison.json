{"files":[{"patch":"@@ -39,1 +39,7 @@\n-import java.nio.file.*;\n+import java.nio.file.AccessDeniedException;\n+import java.nio.file.FileAlreadyExistsException;\n+import java.nio.file.Files;\n+import java.nio.file.LinkOption;\n+import java.nio.file.NoSuchFileException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -510,3 +516,6 @@\n-                        \/\/ Try again. If it doesn't work, then this will\n-                        \/\/ eventually ensure that we increment \"unique\" and\n-                        \/\/ use another file name.\n+                        \/\/ This can be either a temporary, or a more permanent issue.\n+                        \/\/ The lock file might be still pending deletion from a previous run\n+                        \/\/ (temporary), or the parent directory might not be accessible,\n+                        \/\/ not writable, etc..\n+                        \/\/ If we can write to the current directory, and this is a regular file,\n+                        \/\/ let's try again.\n@@ -515,0 +524,3 @@\n+                            \/\/ Try again. If it doesn't work, then this will\n+                            \/\/ eventually ensure that we increment \"unique\" and\n+                            \/\/ use another file name.\n@@ -516,3 +528,2 @@\n-                        }\n-                        else {\n-                            throw ade;\n+                        } else {\n+                            throw ade; \/\/ no need to retry\n","filename":"src\/java.logging\/share\/classes\/java\/util\/logging\/FileHandler.java","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.io.IOException;\n@@ -44,1 +45,1 @@\n-    public static void main(String[] args){\n+    public static void main(String[] args) throws Exception {\n@@ -47,1 +48,1 @@\n-            System.exit(1);\n+            return;\n@@ -68,1 +69,1 @@\n-    private static void access(){\n+    private static void access() {\n@@ -73,3 +74,2 @@\n-        }\n-        catch(Exception e) {\n-            e.printStackTrace();\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n@@ -93,1 +93,1 @@\n-            while((line = bufferedReader.readLine()) != null) {\n+            while ((line = bufferedReader.readLine()) != null) {\n@@ -97,5 +97,3 @@\n-        }\n-        catch(Exception e) {\n-            e.printStackTrace();\n-        }\n-        finally {\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        } finally {\n@@ -106,1 +104,1 @@\n-                try{\n+                try {\n@@ -108,2 +106,1 @@\n-                }\n-                catch(Exception ignored){}\n+                } catch (Exception ignored) {}\n@@ -113,1 +110,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/util\/logging\/FileHandlerAccessTest.java","additions":13,"deletions":16,"binary":false,"changes":29,"status":"modified"}]}