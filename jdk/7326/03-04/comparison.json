{"files":[{"patch":"@@ -3479,1 +3479,0 @@\n-static size_t _large_page_size = 0;\n@@ -3481,1 +3480,2 @@\n-bool os::Linux::try_commit_using_large_page(size_t page_size) {\n+bool os::Linux::hugetlbfs_sanity_check(bool warn, size_t page_size) {\n+\n@@ -3485,0 +3485,1 @@\n+\n@@ -3487,3 +3488,0 @@\n-    log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) passed sanity check\",\n-                        byte_size_in_exact_unit(page_size),\n-                        exact_unit_for_byte_size(page_size));\n@@ -3492,15 +3490,19 @@\n-  }\n-  log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) failed sanity check, \"\n-                     \"checking if smaller large page sizes are usable\",\n-                     byte_size_in_exact_unit(page_size),\n-                     exact_unit_for_byte_size(page_size));\n-  return false;\n-}\n-\n-bool os::Linux::hugetlbfs_sanity_check(bool warn, size_t page_size) {\n-\n-  for (size_t local_page_size = page_size; local_page_size != (size_t)os::vm_page_size(); local_page_size = _page_sizes.next_smaller(local_page_size)) {\n-    if (os::Linux::try_commit_using_large_page(local_page_size)) {\n-      _large_page_size = local_page_size;\n-      return true;\n-    }\n+  } else {\n+      log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) failed sanity check, \"\n+                         \"checking if smaller large page sizes are usable\",\n+                         byte_size_in_exact_unit(page_size),\n+                         exact_unit_for_byte_size(page_size));\n+      for (size_t page_size_ = _page_sizes.next_smaller(page_size);\n+          page_size_ != (size_t)os::vm_page_size();\n+          page_size_ = _page_sizes.next_smaller(page_size_)) {\n+        flags = MAP_ANONYMOUS | MAP_PRIVATE | MAP_HUGETLB | hugetlbfs_page_size_flag(page_size_);\n+        p = mmap(NULL, page_size_, PROT_READ|PROT_WRITE, flags, -1, 0);\n+        if (p != MAP_FAILED) {\n+          \/\/ Mapping succeeded, sanity check passed.\n+          munmap(p, page_size_);\n+          log_info(pagesize)(\"Large page size (\" SIZE_FORMAT \"%s) passed sanity check\",\n+                             byte_size_in_exact_unit(page_size_),\n+                             exact_unit_for_byte_size(page_size_));\n+          return true;\n+        }\n+      }\n@@ -3579,0 +3581,2 @@\n+static size_t _large_page_size = 0;\n+\n@@ -3939,1 +3943,1 @@\n-static void warn_on_commit_special_failure(char* req_addr, size_t bytes,\n+static void log_on_commit_special_failure(char* req_addr, size_t bytes,\n@@ -3943,13 +3947,4 @@\n-  bool warn_on_failure = UseLargePages &&\n-      (!FLAG_IS_DEFAULT(UseLargePages) ||\n-       !FLAG_IS_DEFAULT(UseHugeTLBFS) ||\n-       !FLAG_IS_DEFAULT(LargePageSizeInBytes));\n-\n-  if (warn_on_failure) {\n-    char msg[128];\n-    jio_snprintf(msg, sizeof(msg), \"Failed to reserve and commit memory. req_addr: \"\n-                                   PTR_FORMAT \" bytes: \" SIZE_FORMAT \" page size: \"\n-                                   SIZE_FORMAT \" (errno = %d).\",\n-                                   req_addr, bytes, page_size, error);\n-    warning(\"%s\", msg);\n-  }\n+  log_info(pagesize)(\"Failed to reserve and commit memory with given page size. req_addr: \" PTR_FORMAT\n+                     \" size: \" SIZE_FORMAT \"%s, page size: \" SIZE_FORMAT \"%s, (errno = %d)\",\n+                     p2i(req_addr), byte_size_in_exact_unit(bytes), exact_unit_for_byte_size(bytes),\n+                     byte_size_in_exact_unit(page_size), exact_unit_for_byte_size(page_size), error);\n@@ -3977,1 +3972,1 @@\n-    warn_on_commit_special_failure(req_addr, bytes, page_size, errno);\n+    log_on_commit_special_failure(req_addr, bytes, page_size, errno);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":30,"deletions":35,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -86,1 +86,0 @@\n-  static bool try_commit_using_large_page(size_t page_size);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -142,0 +142,13 @@\n+static void log_on_large_pages_failure(char* req_addr, size_t bytes) {\n+  if (large_pages_requested()) {\n+    \/\/ Compressed oops logging.\n+    log_debug(gc, heap, coops)(\"Reserve regular memory without large pages\");\n+    \/\/ JVM style warning that we did not succeed in using large pages.\n+    char msg[128];\n+    jio_snprintf(msg, sizeof(msg), \"Failed to reserve and commit memory using large pages. \"\n+                                   \"req_addr: \" PTR_FORMAT \" bytes: \" SIZE_FORMAT,\n+                                   req_addr, bytes);\n+    warning(\"%s\", msg);\n+  }\n+}\n+\n@@ -186,4 +199,0 @@\n-  } else {\n-    if (large_pages_requested()) {\n-      log_debug(gc, heap, coops)(\"Reserve regular memory without large pages\");\n-    }\n@@ -238,0 +247,10 @@\n+    size_t used_page_size = page_size;\n+    char* base = NULL;\n+\n+    do {\n+      base = reserve_memory_special(requested_address, size, alignment, used_page_size, executable);\n+      if (base != NULL) {\n+        break;\n+      }\n+      used_page_size = os::page_sizes().next_smaller(used_page_size);\n+    } while (used_page_size > (size_t) os::vm_page_size());\n@@ -239,1 +258,0 @@\n-    char* base = reserve_memory_special(requested_address, size, alignment, page_size, executable);\n@@ -242,1 +260,1 @@\n-      initialize_members(base, size, alignment, page_size, true, executable);\n+      initialize_members(base, size, alignment, used_page_size, true, executable);\n@@ -245,1 +263,3 @@\n-    \/\/ Failed to reserve explicit large pages, fall back to normal reservation.\n+    \/\/ Failed to reserve explicit large pages, do proper logging.\n+    log_on_large_pages_failure(requested_address, size);\n+    \/\/ Now fall back to normal reservation.\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":27,"deletions":7,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1404,1 +1404,1 @@\n-    for (size_t page_size = os::large_page_size(); page_size != 0;\n+    for (size_t page_size = page_sizes().largest(); page_size != 0;\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}