{"files":[{"patch":"@@ -3475,0 +3475,1 @@\n+static size_t _large_page_size = 0;\n@@ -3476,1 +3477,1 @@\n-bool os::Linux::setup_large_page(size_t page_size) {\n+bool os::Linux::try_commit_using_large_page(size_t page_size) {\n@@ -3495,0 +3496,1 @@\n+   bool large_page_found = false;\n@@ -3496,7 +3498,5 @@\n-  int flags = MAP_ANONYMOUS | MAP_PRIVATE | MAP_HUGETLB | hugetlbfs_page_size_flag(page_size);\n-  void *p = mmap(NULL, page_size, PROT_READ|PROT_WRITE, flags, -1, 0);\n-\n-  if (p != MAP_FAILED) {\n-    \/\/ Mapping succeeded, sanity check passed.\n-    munmap(p, page_size);\n-    return true;\n+  for (size_t local_page_size = page_size; local_page_size != (size_t)os::vm_page_size(); local_page_size = _page_sizes.next_smaller(local_page_size)) {\n+    if (os::Linux::try_commit_using_large_page(local_page_size) && !large_page_found) {\n+      _large_page_size = local_page_size;\n+      large_page_found = true;\n+    }\n@@ -3509,1 +3509,1 @@\n-  return false;\n+  return large_page_found;\n@@ -3575,2 +3575,0 @@\n-static size_t _large_page_size = 0;\n-\n@@ -3656,1 +3654,1 @@\n-bool os::Linux::large_page_sanity_check(size_t page_size) {\n+bool os::Linux::setup_large_page_type(size_t page_size) {\n@@ -3775,1 +3773,0 @@\n-  bool large_page_found = false;\n@@ -3778,6 +3775,0 @@\n-    if (!large_page_found &&\n-      page_size != (size_t)os::vm_page_size() &&\n-      os::Linux::setup_large_page(page_size)) {\n-      _large_page_size = page_size;\n-      large_page_found = true;\n-    }\n@@ -3795,1 +3786,1 @@\n-  UseLargePages = os::Linux::large_page_sanity_check(_large_page_size);\n+  UseLargePages = os::Linux::setup_large_page_type(_large_page_size);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":11,"deletions":20,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  static bool large_page_sanity_check(size_t page_size);\n+  static bool setup_large_page_type(size_t page_size);\n@@ -86,1 +86,1 @@\n-  static bool setup_large_page(size_t page_size);\n+  static bool try_commit_using_large_page(size_t page_size);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -53,2 +53,2 @@\n-    private static String file1GHugePages = \"\/sys\/kernel\/mm\/hugepages\/hugepages-1048576kB\/nr_hugepages\";\n-    private static String file2MHugePages = \"\/sys\/kernel\/mm\/hugepages\/hugepages-2048kB\/nr_hugepages\";\n+    private static String file1GHugePages = \"\/sys\/kernel\/mm\/hugepages\/hugepages-1048576kB\/free_hugepages\";\n+    private static String file2MHugePages = \"\/sys\/kernel\/mm\/hugepages\/hugepages-2048kB\/free_hugepages\";\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestExplicitPageAllocation.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}