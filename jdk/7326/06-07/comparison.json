{"files":[{"patch":"@@ -3481,1 +3481,0 @@\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-    private static final int HEAP_SIZE_IN_KB = 1 * 1024 *1024;\n+    private static final int HEAP_SIZE_IN_KB = 1 * 1024 * 1024;\n@@ -71,1 +71,1 @@\n-    private static final int MAX_NUMBER_OF_PAGESIZE=64;\n+    private static final int MAX_NUMBER_OF_PAGESIZE = 64;\n@@ -80,1 +80,1 @@\n-            for (int i = MAX_NUMBER_OF_PAGESIZE-1;i > vmPageSizeIndex;i--) {\n+            for (int i = MAX_NUMBER_OF_PAGESIZE - 1; i > vmPageSizeIndex; i--) {\n@@ -86,2 +86,2 @@\n-        } catch(Exception e) {\n-           System.out.println(\"Exception\"+e);\n+        } catch (Exception e) {\n+           System.out.println(\"Exception \" + e);\n@@ -92,1 +92,0 @@\n-\n@@ -94,2 +93,2 @@\n-        int pageSizeInKB =  1 << (index-10);\n-        return HEAP_SIZE_IN_KB\/pageSizeInKB;\n+        int pageSizeInKB = 1 << (index - 10);\n+        return HEAP_SIZE_IN_KB \/ pageSizeInKB;\n@@ -100,2 +99,2 @@\n-        int m = 1024*1024;\n-        int g = 1024*1024*1024;\n+        int m = 1024 * 1024;\n+        int g = 1024 * 1024 * 1024;\n@@ -104,3 +103,3 @@\n-           return Integer.toString(sizeInBytes\/k)+\"K\";\n-        if(sizeInBytes < g)\n-           return Integer.toString(sizeInBytes\/m)+\"M\";\n+           return Integer.toString(sizeInBytes \/ k) + \"K\";\n+        if (sizeInBytes < g)\n+           return Integer.toString(sizeInBytes \/ m) + \"M\";\n@@ -108,1 +107,1 @@\n-           return Integer.toString(sizeInBytes\/g)+\"G\";\n+           return Integer.toString(sizeInBytes \/ g) + \"G\";\n@@ -130,1 +129,1 @@\n-        dis = new DataInputStream(fis)\n+        dis = new DataInputStream(fis);\n@@ -146,1 +145,1 @@\n-            int availablePages = checkAndReadFile(DIR_HUGE_PAGES+pageSizeFileName+\"\/free_hugepages\", pageSize);\n+            int availablePages = checkAndReadFile(DIR_HUGE_PAGES + pageSizeFileName + \"\/free_hugepages\", pageSize);\n@@ -148,1 +147,1 @@\n-                System.out.println(\"No Pages configured for \"+pageSize+\"kB\");\n+                System.out.println(\"No Pages configured for \" + pageSize + \"kB\");\n@@ -150,1 +149,1 @@\n-            int index = Integer.numberOfTrailingZeros(Integer.parseInt(pageSize)*1024);\n+            int index = Integer.numberOfTrailingZeros(Integer.parseInt(pageSize) * 1024);\n@@ -163,1 +162,1 @@\n-                                                                  \"-XX:LargePageSizeInBytes=\"+pageSize,\n+                                                                  \"-XX:LargePageSizeInBytes=\"+ pageSize,\n@@ -171,2 +170,2 @@\n-        for (int i = index;i >= vmPageSizeIndex;i--) {\n-            if(pageSizes[i]) {\n+        for (int i = index; i >= vmPageSizeIndex; i--) {\n+            if (pageSizes[i]) {\n@@ -175,1 +174,1 @@\n-                if (!checkOutput(output,size)) {\n+                if (!checkOutput(output, size)) {\n@@ -179,1 +178,1 @@\n-                    errorMessage += \"TestCase Failed for \"+size+\" page allocation\\n\";\n+                    errorMessage += \"TestCase Failed for \" + size + \" page allocation\\n\";\n@@ -181,1 +180,1 @@\n-                    System.out.println(\"TestCase Passed for pagesize: \"+pageSize+\", allocated pagesize:\"+size);\n+                    System.out.println(\"TestCase Passed for pagesize: \" + pageSize + \", allocated pagesize: \" + size);\n@@ -185,1 +184,0 @@\n-\n@@ -188,1 +186,1 @@\n-        if (errorMessage!=null) {\n+        if (errorMessage != null) {\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestExplicitPageAllocation.java","additions":24,"deletions":26,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    @Param({\"1\",\"2\",\"4\"})\n+    @Param({\"1\", \"2\", \"4\"})\n@@ -43,1 +43,1 @@\n-    public long[][]  OUT;\n+    public long[][] OUT;\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/gc\/MicroLargePages.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}