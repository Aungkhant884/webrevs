{"files":[{"patch":"@@ -12,1 +12,1 @@\n-        default: \"Linux aarch64, Linux arm, Linux ppc64le, Linux s390x, Linux x64, Linux x86, Windows x64, macOS x64\"\n+        default: \"Linux aarch64, Linux arm, Linux ppc64le, Linux s390x, Linux x64, Linux x86, Windows aarch64, Windows x64, macOS x64\"\n@@ -27,0 +27,1 @@\n+      platform_windows_aarch64: ${{ steps.check_platforms.outputs.platform_windows_aarch64 }}\n@@ -45,0 +46,1 @@\n+          echo \"::set-output name=platform_windows_aarch64::${{ contains(github.event.inputs.platforms, 'windows aarch64') || (github.event.inputs.platforms == '' && (secrets.JDK_SUBMIT_PLATFORMS == '' || contains(secrets.JDK_SUBMIT_PLATFORMS, 'windows aarch64'))) }}\"\n@@ -1235,0 +1237,160 @@\n+  windows_aarch64_build:\n+    name: Windows aarch64\n+    runs-on: \"windows-2019\"\n+    needs:\n+      - prerequisites\n+      - windows_x64_build\n+    if: needs.prerequisites.outputs.should_run != 'false' && needs.prerequisites.outputs.platform_windows_aarch64 != 'false'\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        flavor:\n+          - build release\n+          - build debug\n+        include:\n+          - flavor: build debug\n+            build-target: hotspot\n+          - flavor: build release\n+            build-target: hotspot\n+\n+    env:\n+      JDK_VERSION: \"${{ fromJson(needs.prerequisites.outputs.dependencies).DEFAULT_VERSION_FEATURE }}\"\n+      BOOT_JDK_VERSION: \"${{ fromJson(needs.prerequisites.outputs.dependencies).BOOT_JDK_VERSION }}\"\n+      BOOT_JDK_FILENAME: \"${{ fromJson(needs.prerequisites.outputs.dependencies).WINDOWS_X64_BOOT_JDK_FILENAME }}\"\n+      BOOT_JDK_URL: \"${{ fromJson(needs.prerequisites.outputs.dependencies).WINDOWS_X64_BOOT_JDK_URL }}\"\n+      BOOT_JDK_SHA256: \"${{ fromJson(needs.prerequisites.outputs.dependencies).WINDOWS_X64_BOOT_JDK_SHA256 }}\"\n+\n+    steps:\n+      - name: Restore cygwin packages from cache\n+        id: cygwin\n+        uses: actions\/cache@v2\n+        with:\n+          path: ~\/cygwin\/packages\n+          key: cygwin-packages-${{ runner.os }}-v1\n+\n+      - name: Install cygwin\n+        run: |\n+          New-Item -Force -ItemType directory -Path \"$HOME\\cygwin\"\n+          & curl -L \"https:\/\/www.cygwin.com\/setup-x86_64.exe\" -o \"$HOME\/cygwin\/setup-x86_64.exe\"\n+          Start-Process -FilePath \"$HOME\\cygwin\\setup-x86_64.exe\" -ArgumentList \"--quiet-mode --packages autoconf,make,zip,unzip --root $HOME\\cygwin\\cygwin64 --local-package-dir $HOME\\cygwin\\packages --site http:\/\/mirrors.kernel.org\/sourceware\/cygwin --no-desktop --no-shortcuts --no-startmenu --no-admin\" -Wait -NoNewWindow\n+\n+      - name: Checkout the source\n+        uses: actions\/checkout@v2\n+        with:\n+          path: jdk\n+\n+      - name: Restore boot JDK from cache\n+        id: bootjdk\n+        uses: actions\/cache@v2\n+        with:\n+          path: ~\/bootjdk\/${{ env.BOOT_JDK_VERSION }}\n+          key: bootjdk-${{ runner.os }}-${{ env.BOOT_JDK_VERSION }}-${{ env.BOOT_JDK_SHA256 }}-v1\n+\n+      - name: Download boot JDK\n+        run: |\n+          mkdir -p \"$HOME\\bootjdk\\$env:BOOT_JDK_VERSION\"\n+          & curl -L \"$env:BOOT_JDK_URL\" -o \"$HOME\/bootjdk\/$env:BOOT_JDK_FILENAME\"\n+          $FileHash = Get-FileHash -Algorithm SHA256 \"$HOME\/bootjdk\/$env:BOOT_JDK_FILENAME\"\n+          $FileHash.Hash -eq $env:BOOT_JDK_SHA256\n+          & tar -xf \"$HOME\/bootjdk\/$env:BOOT_JDK_FILENAME\" -C \"$HOME\/bootjdk\/$env:BOOT_JDK_VERSION\"\n+          Get-ChildItem \"$HOME\\bootjdk\\$env:BOOT_JDK_VERSION\\*\\*\" | Move-Item -Destination \"$HOME\\bootjdk\\$env:BOOT_JDK_VERSION\"\n+        if: steps.bootjdk.outputs.cache-hit != 'true'\n+\n+      - name: Restore build JDK\n+        id: build_restore\n+        uses: actions\/download-artifact@v2\n+        with:\n+          name: transient_jdk-windows-x64_${{ needs.prerequisites.outputs.bundle_id }}\n+          path: ~\/jdk-windows-x64\n+        continue-on-error: true\n+\n+      - name: Unpack jdk\n+        run: |\n+          mkdir -p \"${HOME}\/jdk-windows-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin\"\n+          tar -xf \"${HOME}\/jdk-windows-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin.zip\" -C \"${HOME}\/jdk-windows-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin\"\n+\n+      - name: Find root of build JDK image dir\n+        run: |\n+          build_jdk_root=`find ${HOME}\/jdk-windows-x64\/jdk-${{ env.JDK_VERSION }}-internal+0_windows-x64_bin -name release -type f`\n+          # we are in git-bash context, but $build_jdk_root is going to be consumed in Cygwin context, so prefix the path accordingly.\n+          echo \"build_jdk_root=\/cygdrive`dirname ${build_jdk_root}`\" >> $GITHUB_ENV\n+        shell: bash\n+\n+      - name: Checkout gtest sources\n+        uses: actions\/checkout@v2\n+        with:\n+          repository: \"google\/googletest\"\n+          ref: \"release-${{ fromJson(needs.prerequisites.outputs.dependencies).GTEST_VERSION }}\"\n+          path: gtest\n+\n+      - name: Restore jtreg artifact\n+        id: jtreg_restore\n+        uses: actions\/download-artifact@v2\n+        with:\n+          name: transient_jtreg_${{ needs.prerequisites.outputs.bundle_id }}\n+          path: ~\/jtreg\/\n+        continue-on-error: true\n+\n+      - name: Restore jtreg artifact (retry)\n+        uses: actions\/download-artifact@v2\n+        with:\n+          name: transient_jtreg_${{ needs.prerequisites.outputs.bundle_id }}\n+          path: ~\/jtreg\/\n+        if: steps.jtreg_restore.outcome == 'failure'\n+\n+      - name: Ensure a specific version of MSVC is installed\n+        run: >\n+          Start-Process -FilePath 'C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vs_installer.exe' -Wait -NoNewWindow -ArgumentList\n+          'modify --installPath \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\" --quiet\n+          --add Microsoft.VisualStudio.Component.VC.14.28.arm64'\n+\n+      - name: Create Devkit\n+        run: |\n+          $env:Path = \"$HOME\\cygwin\\cygwin64\\bin;$HOME\\cygwin\\cygwin64\\bin;$env:Path\" ;\n+          $env:Path = $env:Path -split \";\" -match \"C:\\\\Windows|PowerShell|cygwin\" -join \";\" ;\n+          & bash make\/devkit\/createWindowsDevkit2019.sh\n+        working-directory: jdk\n+\n+      - name: Find root of devkit dir\n+        run: |\n+          devkit_root=`find . -name devkit.info -type f`\n+          echo \"devkit_root=`dirname ${devkit_root}`\" >> $GITHUB_ENV\n+        shell: bash\n+        working-directory: jdk\n+\n+      - name: Apply fixpath.exe Patch\n+        run: |\n+          curl 'https:\/\/gist.githubusercontent.com\/lewurm\/c099a4b5fcd8a182510cbdeebcb41f77\/raw\/d5badd6ee78911f79d5c3b695c61debfa54d8ced\/0001-fixpath-workaround-for-win-aarch64.patch' > p.patch\n+          git apply p.patch\n+        working-directory: jdk\n+        shell: bash\n+\n+      - name: Configure\n+        run: >\n+          $env:Path = \"$HOME\\cygwin\\cygwin64\\bin;$HOME\\cygwin\\cygwin64\\bin;$env:Path\" ;\n+          $env:Path = $env:Path -split \";\" -match \"C:\\\\Windows|PowerShell|cygwin\" -join \";\" ;\n+          & bash configure\n+          --with-conf-name=windows-aarch64\n+          --with-msvc-toolset-version=14.28\n+          --openjdk-target=aarch64-unknown-cygwin\n+          --with-devkit=${{ env.devkit_root }}\n+          --with-build-devkit=${{ env.devkit_root }}\n+          ${{ matrix.flags }}\n+          --with-version-opt=\"$env:GITHUB_ACTOR-$env:GITHUB_SHA\"\n+          --with-version-build=0\n+          --with-boot-jdk=\"$HOME\/bootjdk\/$env:BOOT_JDK_VERSION\"\n+          --with-build-jdk=${{ env.build_jdk_root }}\n+          --with-jtreg=\"$HOME\/jtreg\"\n+          --with-gtest=\"$env:GITHUB_WORKSPACE\/gtest\"\n+          --with-default-make-target=\"product-bundles test-bundles\"\n+          --enable-jtreg-failure-handler\n+        working-directory: jdk\n+\n+      - name: Build\n+        run: |\n+          $env:Path = \"$HOME\\cygwin\\cygwin64\\bin;$HOME\\cygwin\\cygwin64\\bin;$env:Path\" ;\n+          $env:Path = $env:Path -split \";\" -match \"C:\\\\Windows|PowerShell|cygwin\" -join \";\" ;\n+          & make JOBS=1 LOG=info CONF_NAME=windows-aarch64 ${{ matrix.build-target }}\n+        working-directory: jdk\n+\n@@ -1859,0 +2021,1 @@\n+      - windows_aarch64_build\n","filename":".github\/workflows\/submit.yml","additions":164,"deletions":1,"binary":false,"changes":165,"status":"modified"}]}