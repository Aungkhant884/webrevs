{"files":[{"patch":"@@ -1330,0 +1330,8 @@\n+                        if (token.pos <= endPosTable.errorEndPos &&\n+                            token.kind == MONKEYS_AT) {\n+                            \/\/error recovery, case like:\n+                            \/\/int i = expr.<missing-ident>\n+                            \/\/@Deprecated\n+                            if (typeArgs != null) illegal();\n+                            return toP(t);\n+                        }\n@@ -1537,0 +1545,7 @@\n+                    if (token.pos <= endPosTable.errorEndPos &&\n+                        token.kind == MONKEYS_AT) {\n+                        \/\/error recovery, case like:\n+                        \/\/int i = expr.<missing-ident>\n+                        \/\/@Deprecated\n+                        break;\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774\n+ * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256149\n@@ -1614,0 +1614,45 @@\n+    @Test\n+    void testAtRecovery() throws IOException {\n+        \/\/verify the errors and AST form produced for member selects which are\n+        \/\/missing the selected member name and are followed by an annotation:\n+        String code = \"\"\"\n+                      package t;\n+                      class Test {\n+                          int i1 = \"\".\n+                          @Deprecated\n+                          void t1() {\n+                          }\n+                          int i2 = String.\n+                          @Deprecated\n+                          void t2() {\n+                          }\n+                      }\n+                      \"\"\";\n+        StringWriter out = new StringWriter();\n+        JavacTaskImpl ct = (JavacTaskImpl) tool.getTask(out, fm, null, List.of(\"-XDrawDiagnostics\"),\n+                null, Arrays.asList(new MyFileObject(code)));\n+        String ast = ct.parse().iterator().next().toString().replaceAll(\"\\\\R\", \"\\n\");\n+        String expected = \"\"\"\n+                          package t;\n+                          \\n\\\n+                          class Test {\n+                              int i1 = \"\".<error>;\n+                              \\n\\\n+                              @Deprecated\n+                              void t1() {\n+                              }\n+                              int i2 = String.<error>;\n+                              \\n\\\n+                              @Deprecated\n+                              void t2() {\n+                              }\n+                          } \"\"\";\n+        assertEquals(\"Unexpected AST, got:\\n\" + ast, expected, ast);\n+        assertEquals(\"Unexpected errors, got:\\n\" + out.toString(),\n+                     out.toString().replaceAll(\"\\\\R\", \"\\n\"),\n+                     \"\"\"\n+                     Test.java:3:17: compiler.err.expected: token.identifier\n+                     Test.java:7:21: compiler.err.expected: token.identifier\n+                     \"\"\");\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":46,"deletions":1,"binary":false,"changes":47,"status":"modified"}]}