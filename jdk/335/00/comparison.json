{"files":[{"patch":"@@ -98,1 +98,0 @@\n-  virtual bool supports_tlab_allocation()           const { return true;           }\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2372,4 +2372,0 @@\n-bool G1CollectedHeap::supports_tlab_allocation() const {\n-  return true;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1252,1 +1252,0 @@\n-  bool supports_tlab_allocation() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -205,2 +205,0 @@\n-  bool supports_tlab_allocation() const { return true; }\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -356,7 +356,0 @@\n-  \/\/ Section on thread-local allocation buffers (TLABs)\n-  \/\/ If the heap supports thread-local allocation buffers, it should override\n-  \/\/ the following methods:\n-  \/\/ Returns \"true\" iff the heap supports thread-local allocation buffers.\n-  \/\/ The default is \"no\".\n-  virtual bool supports_tlab_allocation() const = 0;\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1032,5 +1032,0 @@\n-bool GenCollectedHeap::supports_tlab_allocation() const {\n-  assert(!_old_gen->supports_tlab_allocation(), \"Old gen supports TLAB allocation?!\");\n-  return _young_gen->supports_tlab_allocation();\n-}\n-\n@@ -1039,4 +1034,2 @@\n-  if (_young_gen->supports_tlab_allocation()) {\n-    return _young_gen->tlab_capacity();\n-  }\n-  return 0;\n+  assert(_young_gen->supports_tlab_allocation(), \"Young gen doesn't support TLAB allocation?!\");\n+  return _young_gen->tlab_capacity();\n@@ -1047,4 +1040,2 @@\n-  if (_young_gen->supports_tlab_allocation()) {\n-    return _young_gen->tlab_used();\n-  }\n-  return 0;\n+  assert(_young_gen->supports_tlab_allocation(), \"Young gen doesn't support TLAB allocation?!\");\n+  return _young_gen->tlab_used();\n@@ -1055,4 +1046,2 @@\n-  if (_young_gen->supports_tlab_allocation()) {\n-    return _young_gen->unsafe_max_tlab_alloc();\n-  }\n-  return 0;\n+  assert(_young_gen->supports_tlab_allocation(), \"Young gen doesn't support TLAB allocation?!\");\n+  return _young_gen->unsafe_max_tlab_alloc();\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":6,"deletions":17,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -269,1 +269,0 @@\n-  virtual bool supports_tlab_allocation() const;\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -609,3 +609,0 @@\n-  \/\/ Shenandoah supports TLAB allocation\n-  bool supports_tlab_allocation() const { return true; }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -208,4 +208,0 @@\n-bool ZCollectedHeap::supports_tlab_allocation() const {\n-  return true;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,0 @@\n-  virtual bool supports_tlab_allocation() const;\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -814,2 +814,0 @@\n-    assert(Universe::heap()->supports_tlab_allocation(),\n-           \"Should support thread-local allocation buffers\");\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}