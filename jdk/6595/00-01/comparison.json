{"files":[{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.java.util;\n+\n+import java.util.Random;\n+import java.util.concurrent.TimeUnit;\n+import java.util.zip.CRC32C;\n+import org.openjdk.jmh.annotations.*;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+@State(Scope.Benchmark)\n+@Fork(value = 2)\n+@Warmup(iterations = 2, time = 30, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 3, time = 60, timeUnit = TimeUnit.SECONDS)\n+\n+public class TestCRC32C {\n+\n+    private CRC32C crc32c;\n+    private Random random;\n+    private byte[] bytes;\n+\n+    @Param({\"64\", \"128\", \"256\", \"512\", \"1024\", \"2048\", \"4096\", \"8192\", \"16384\", \"32768\", \"65536\"})\n+    private int count;\n+\n+    public TestCRC32C() {\n+        crc32c = new CRC32C();\n+        random = new Random(2147483648L);\n+        bytes = new byte[1000000];\n+        random.nextBytes(bytes);\n+    }\n+\n+    @Setup(Level.Iteration)\n+    public void setupBytes() {\n+        crc32c.reset();\n+    }\n+\n+    @Benchmark\n+    public void testCRC32CUpdate() {\n+        crc32c.update(bytes, 0, count);\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/TestCRC32C.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"}]}