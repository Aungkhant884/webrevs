{"files":[{"patch":"@@ -709,3 +709,0 @@\n-  \/\/ I'd like to write:\n-  \/\/   guarantee (((oop)(object()))->mark() == markWord::encode(this), \"invariant\") ;\n-  \/\/ but as we're at a safepoint that's not safe.\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1895,1 +1895,1 @@\n-    \/\/ Note that we allocate the objectmonitor speculatively, _before_ attempting\n+    \/\/ Note that we allocate the ObjectMonitor speculatively, _before_ attempting\n@@ -1897,3 +1897,3 @@\n-    \/\/ allocated the objectmonitor, and then finally STed the address of the\n-    \/\/ objectmonitor into the mark.  This was correct, but artificially lengthened\n-    \/\/ the interval in which INFLATED appeared in the mark, thus increasing\n+    \/\/ allocated the ObjectMonitor, and then finally STed the address of the\n+    \/\/ ObjectMonitor into the mark.  This was correct, but artificially lengthened\n+    \/\/ the interval in which INFLATING appeared in the mark, thus increasing\n@@ -1902,1 +1902,1 @@\n-    \/\/ We now use per-thread private objectmonitor free lists.\n+    \/\/ We now use per-thread private ObjectMonitor free lists.\n@@ -1905,1 +1905,1 @@\n-    \/\/ multiple objectmonitors en-mass from the global free list to its local free list.\n+    \/\/ multiple ObjectMonitors en-mass from the global free list to its local free list.\n@@ -1915,1 +1915,1 @@\n-      \/\/ Optimistically prepare the objectmonitor - anticipate successful CAS\n+      \/\/ Optimistically prepare the ObjectMonitor - anticipate successful CAS\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}