{"files":[{"patch":"@@ -51,0 +51,17 @@\n+\n+    private final static Charset nativeCharset;\n+    static {\n+        Charset cs;\n+        java.io.Console cons;\n+        if ((cons = System.console()) != null) {\n+            cs = cons.charset();\n+        } else {\n+            try {\n+                cs = Charset.forName(System.getProperty(\"native.encoding\"));\n+            } catch (Exception e) {\n+                cs = Charset.defaultCharset();\n+            }\n+        }\n+        nativeCharset = cs;\n+    }\n+\n@@ -58,1 +75,1 @@\n-        this.encoding = encoding != null ? encoding : Charset.defaultCharset();\n+        this.encoding = encoding != null ? encoding : nativeCharset;\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/terminal\/impl\/AbstractTerminal.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.io.Console;\n@@ -29,0 +30,1 @@\n+import java.io.OutputStreamWriter;\n@@ -30,0 +32,1 @@\n+import java.nio.charset.Charset;\n@@ -36,0 +39,1 @@\n+import jdk.internal.org.jline.utils.WriterOutputStream;\n@@ -46,5 +50,5 @@\n-    private PrintStream cmdOut = System.out;\n-    private PrintStream console = System.out;\n-    private PrintStream userOut = System.out;\n-    private PrintStream cmdErr = System.err;\n-    private PrintStream userErr = System.err;\n+    private PrintStream cmdOut = derivePrintStream(System.out);\n+    private PrintStream console = cmdOut;\n+    private PrintStream userOut = cmdOut;\n+    private PrintStream cmdErr = derivePrintStream(System.err);\n+    private PrintStream userErr = cmdErr;\n@@ -57,0 +61,24 @@\n+    static final Charset NATIVE_CHARSET;\n+\n+    static {\n+        Console console = System.console();\n+        if (console != null) {\n+            NATIVE_CHARSET = console.charset();\n+        } else {\n+            String nativeEncoding = System.getProperty(\"native.encoding\", \"UTF-8\");\n+            NATIVE_CHARSET = Charset.forName(nativeEncoding);\n+        }\n+    }\n+\n+    \/**\n+     *\n+     *\/\n+    static PrintStream derivePrintStream(PrintStream ps) {\n+        if (Charset.defaultCharset().equals(NATIVE_CHARSET)) {\n+            return ps;\n+        } else {\n+            return new PrintStream(new WriterOutputStream(\n+                new OutputStreamWriter(ps, NATIVE_CHARSET), Charset.defaultCharset()));\n+        }\n+    }\n+\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellToolBuilder.java","additions":34,"deletions":6,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,1 +78,1 @@\n-                        ? System.out\n+                        ? JShellToolBuilder.derivePrintStream(System.out)\n@@ -84,1 +84,1 @@\n-                        ? System.err\n+                        ? JShellToolBuilder.derivePrintStream(System.err)\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellToolProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}