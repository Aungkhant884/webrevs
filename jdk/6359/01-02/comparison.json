{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import toolbox.ToolBox;\n@@ -41,0 +42,2 @@\n+    protected final ToolBox tb = new ToolBox();\n+\n@@ -90,1 +93,0 @@\n-    \/\/ TODO: perhaps this method could be added to JavadocTester\n@@ -92,9 +94,3 @@\n-        checking(\"checkOutputEither\");\n-        String output = getOutput(out);\n-        Stream<String> strings = Stream.concat(Stream.of(first), Stream.of(other));\n-        Optional<String> any = strings.filter(output::contains).findAny();\n-        if (any.isPresent()) {\n-            passed(\": following text is found:\\n\" + any.get());\n-        } else {\n-            failed(\": nothing found\");\n-        }\n+        var strings = Stream.concat(Stream.of(first), Stream.of(other))\n+                .toArray(String[]::new);\n+        new OutputChecker(out).checkAnyOf(strings);\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -24,0 +24,12 @@\n+\/*\n+ * @test\n+ * @bug 8266666\n+ * @summary Implementation for snippets\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build javadoc.tester.* toolbox.ToolBox toolbox.ModuleBuilder builder.ClassBuilder\n+ * @run main TestSnippetMarkup\n+ *\/\n+\n@@ -61,11 +73,0 @@\n-\/*\n- * @test\n- * @bug 8266666\n- * @summary Implementation for snippets\n- * @library \/tools\/lib ..\/..\/lib\n- * @modules jdk.compiler\/com.sun.tools.javac.api\n- *          jdk.compiler\/com.sun.tools.javac.main\n- *          jdk.javadoc\/jdk.javadoc.internal.tool\n- * @build javadoc.tester.* toolbox.ToolBox toolbox.ModuleBuilder builder.ClassBuilder\n- * @run main TestSnippetMarkup\n- *\/\n@@ -74,4 +75,0 @@\n-    private final ToolBox tb = new ToolBox();\n-\n-    private TestSnippetMarkup() {}\n-\n@@ -231,1 +228,1 @@\n-    public void testPositiveInlineExternalTagMarkupNextLine(Path base) throws Exception {\n+    public void testPositiveInlineExternalTagMarkup_NextLine(Path base) throws Exception {\n@@ -240,1 +237,1 @@\n-    public void testNegativeInlineExternalHybridTagMarkupNextLinePutOnLastLine(Path base) throws Exception {\n+    public void testNegativeInlineExternalHybridTagMarkup_NextLinePutOnLastLine(Path base) throws Exception {\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java","additions":14,"deletions":17,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -24,9 +24,0 @@\n-import java.io.File;\n-import java.nio.file.Files;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n-import toolbox.ToolBox;\n-\n@@ -44,1 +35,0 @@\n-public class TestSnippetPathOption extends SnippetTester {\n@@ -46,1 +36,6 @@\n-    private final ToolBox tb = new ToolBox();\n+import java.io.File;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -48,1 +43,1 @@\n-    private TestSnippetPathOption() {}\n+public class TestSnippetPathOption extends SnippetTester {\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetPathOption.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-import toolbox.ToolBox;\n@@ -88,4 +87,0 @@\n-    private final ToolBox tb = new ToolBox();\n-\n-    private TestSnippetTag() {}\n-\n@@ -103,1 +98,1 @@\n-    public void testPositiveInlineTagIdAndLangAttributes(Path base) throws IOException {\n+    public void testPositiveInlineTag_IdAndLangAttributes(Path base) throws IOException {\n@@ -249,1 +244,1 @@\n-    public void testPositiveInlineExternalTagMarkupImplicitAttributes(Path base) throws IOException {\n+    public void testPositiveInlineExternalTagMarkup_ImplicitAttributes(Path base) throws IOException {\n@@ -306,1 +301,1 @@\n-    public void testNegativeInlineTagBadTagSyntax(Path base) throws IOException {\n+    public void testNegativeInlineTag_BadTagSyntax(Path base) throws IOException {\n@@ -893,1 +888,1 @@\n-    public void testPositiveExternalTagFile(Path base) throws Exception {\n+    public void testPositiveExternalTag_File(Path base) throws Exception {\n@@ -985,1 +980,1 @@\n-    public void testPositiveInlineTagInDocFiles(Path base) throws IOException {\n+    public void testPositiveInlineTag_InDocFiles(Path base) throws IOException {\n@@ -1027,1 +1022,1 @@\n-    public void testPositiveExternalTagInDocFiles(Path base) throws IOException {\n+    public void testPositiveExternalTag_InDocFiles(Path base) throws IOException {\n@@ -1069,1 +1064,1 @@\n-    public void testNegativeExternalTagFileNotFound(Path base) throws Exception {\n+    public void testNegativeExternalTag_FileNotFound(Path base) throws Exception {\n@@ -1093,1 +1088,1 @@\n-    public void testNegativeExternalTagFileModuleSourcePath(Path base) throws Exception {\n+    public void testNegativeExternalTag_FileModuleSourcePath(Path base) throws Exception {\n@@ -1119,1 +1114,1 @@\n-    public void testNegativeExternalTagFileNotFoundModuleSourcePath(Path base) throws Exception {\n+    public void testNegativeExternalTag_FileNotFoundModuleSourcePath(Path base) throws Exception {\n@@ -1148,1 +1143,1 @@\n-    public void testNegativeTagNoContents(Path base) throws Exception {\n+    public void testNegativeTag_NoContents(Path base) throws Exception {\n@@ -1198,1 +1193,1 @@\n-    public void testNegativeInlineTagAttributeConflict20(Path base) throws Exception {\n+    public void testNegativeInlineTag_AttributeConflict20(Path base) throws Exception {\n@@ -1224,1 +1219,1 @@\n-    public void testNegativeInlineTagAttributeConflict30(Path base) throws Exception {\n+    public void testNegativeInlineTag_AttributeConflict30(Path base) throws Exception {\n@@ -1246,1 +1241,1 @@\n-    public void testNegativeInlineTagAttributeConflict60(Path base) throws Exception {\n+    public void testNegativeInlineTag_AttributeConflict60(Path base) throws Exception {\n@@ -1266,1 +1261,1 @@\n-    public void testNegativeInlineTagAttributeConflict70(Path base) throws Exception {\n+    public void testNegativeInlineTag_AttributeConflict70(Path base) throws Exception {\n@@ -1286,1 +1281,1 @@\n-    public void testNegativeInlineTagAttributeConflict80(Path base) throws Exception {\n+    public void testNegativeInlineTag_AttributeConflict80(Path base) throws Exception {\n@@ -1310,1 +1305,1 @@\n-    public void testNegativeInlineTagAttributeConflict90(Path base) throws Exception {\n+    public void testNegativeInlineTag_AttributeConflict90(Path base) throws Exception {\n@@ -1334,1 +1329,1 @@\n-    public void testNegativeTagPositionResolution(Path base) throws Exception {\n+    public void testNegativeTag_PositionResolution(Path base) throws Exception {\n@@ -1362,1 +1357,1 @@\n-    public void testPositiveInlineTagAttributeConflictRegion(Path base) throws Exception {\n+    public void testPositiveInlineTag_AttributeConflictRegion(Path base) throws Exception {\n@@ -1578,1 +1573,1 @@\n-    public void testNegativeInlineTagMarkupAttributeValueSyntaxUnquotedCurly(Path base) throws Exception {\n+    public void testNegativeInlineTagMarkup_AttributeValueSyntaxUnquotedCurly(Path base) throws Exception {\n@@ -1612,1 +1607,1 @@\n-    public void testPositiveInlineTagMarkupSyntaxCurly(Path base) throws Exception {\n+    public void testPositiveInlineTagMarkup_SyntaxCurly(Path base) throws Exception {\n@@ -1662,1 +1657,1 @@\n-    public void testPositiveExternalTagMarkupAttributeValueSyntax(Path base) throws Exception {\n+    public void testPositiveExternalTagMarkup_AttributeValueSyntax(Path base) throws Exception {\n@@ -1761,1 +1756,1 @@\n-    public void testPositiveInlineTagMarkupComment(Path base) throws Exception {\n+    public void testPositiveInlineTagMarkup_Comment(Path base) throws Exception {\n@@ -1840,1 +1835,1 @@\n-    public void testNegativeHybridTagFileNotFound(Path base) throws Exception {\n+    public void testNegativeHybridTag_FileNotFound(Path base) throws Exception {\n@@ -1865,1 +1860,1 @@\n-    public void testNegativeTagValuelessAttributes(Path base) throws IOException {\n+    public void testNegativeTag_ValuelessAttributes(Path base) throws IOException {\n@@ -1916,1 +1911,1 @@\n-    public void testNegativeTagBlankRegion(Path base) throws Exception {\n+    public void testNegativeTag_BlankRegion(Path base) throws Exception {\n@@ -1968,1 +1963,1 @@\n-    public void testNegativeHybridTagMarkupRegionNotFound(Path base) throws Exception {\n+    public void testNegativeHybridTagMarkup_RegionNotFound(Path base) throws Exception {\n@@ -1999,1 +1994,1 @@\n-    public void testNegativeHybridTagMismatch(Path base) throws Exception {\n+    public void testNegativeHybridTag_Mismatch(Path base) throws Exception {\n@@ -2028,1 +2023,1 @@\n-    public void testNegativeHybridTagMarkupRegionRegionMismatch(Path base) throws Exception {\n+    public void testNegativeHybridTagMarkup_RegionRegionMismatch(Path base) throws Exception {\n@@ -2068,1 +2063,1 @@\n-    public void testNegativeHybridTagMarkupRegion1Mismatch(Path base) throws Exception {\n+    public void testNegativeHybridTagMarkup_Region1Mismatch(Path base) throws Exception {\n@@ -2102,1 +2097,1 @@\n-    public void testNegativeHybridTagMarkupRegion2Mismatch(Path base) throws Exception {\n+    public void testNegativeHybridTagMarkup_Region2Mismatch(Path base) throws Exception {\n@@ -2271,1 +2266,1 @@\n-    public void testNegativeInlineTagMarkupInvalidRegexDiagnostics(Path base) throws Exception {\n+    public void testNegativeInlineTagMarkup_InvalidRegexDiagnostics(Path base) throws Exception {\n@@ -2355,1 +2350,1 @@\n-    public void testNegativeInlineTagMarkupErrorMessages(Path base) throws Exception {\n+    public void testNegativeInlineTagMarkup_ErrorMessages(Path base) throws Exception {\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetTag.java","additions":32,"deletions":37,"binary":false,"changes":69,"status":"modified"}]}