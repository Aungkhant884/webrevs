{"files":[{"patch":"@@ -163,10 +163,1 @@\n-                    if (info.user().isPresent()) {\n-                        String user = info.user().get();\n-                        Assert.assertNotNull(user, \"User name\");\n-                        if (Platform.isWindows() && \"BUILTIN\\\\Administrators\".equals(whoami)) {\n-                            System.out.println(\"Test seems to be run as Administrator. \" +\n-                                    \"Check for user correctness is not possible.\");\n-                        } else {\n-                            Assert.assertEquals(user, whoami, \"User name\");\n-                        }\n-                    }\n+                    assertUser(info);\n@@ -299,10 +290,2 @@\n-                if (info.user().isPresent()) {\n-                    String user = info.user().get();\n-                    Assert.assertNotNull(user);\n-                    if (Platform.isWindows() && \"BUILTIN\\\\Administrators\".equals(whoami)) {\n-                        System.out.println(\"Test seems to be run as Administrator. \" +\n-                                \"Check for user correctness is not possible.\");\n-                    } else {\n-                        Assert.assertEquals(user, whoami);\n-                    }\n-                }\n+                assertUser(info);\n+\n@@ -457,0 +440,27 @@\n+\n+    \/**\n+     * Asserts the expected process user.\n+     *\n+     * The Expected user is determined by creating a file and reading its owner, see static block above.\n+     *\n+     * On Windows, when run privileged as member of the Administrators group, this does not always\n+     * work because new files can be owned by BUILTIN\\Administrators instead, depending on system\n+     * settings. In that case we resort to comparing System property user.name, which does not contain\n+     * the domain name, though.\n+     *\n+     * @param info ProcessHanlde info object\n+     *\/\n+    static void assertUser(ProcessHandle.Info info) {\n+        if (!info.user().isPresent()) {\n+            return;\n+        }\n+        String user = info.user().get();\n+        Assert.assertNotNull(user, \"User name\");\n+        if (Platform.isWindows() && \"BUILTIN\\\\Administrators\".equals(whoami)) {\n+            int bsi = user.lastIndexOf(\"\\\\\");\n+            Assert.assertEquals(bsi == -1 ? user : user.substring(bsi + 1),\n+                    System.getProperty(\"user.name\"), \"User name\");\n+        } else {\n+            Assert.assertEquals(user, whoami, \"User name\");\n+        }\n+    }\n","filename":"test\/jdk\/java\/lang\/ProcessHandle\/InfoTest.java","additions":30,"deletions":20,"binary":false,"changes":50,"status":"modified"}]}