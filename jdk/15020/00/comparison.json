{"files":[{"patch":"@@ -1686,0 +1686,1 @@\n+            boolean errorPrimitiveSwitch = seltype.isPrimitive() && !intSwitch;\n@@ -1687,1 +1688,2 @@\n-            if (!enumSwitch && !stringSwitch && !errorEnumSwitch && !intSwitch) {\n+            if (!enumSwitch && !stringSwitch && !errorEnumSwitch &&\n+                !intSwitch && !errorPrimitiveSwitch) {\n@@ -1691,0 +1693,3 @@\n+                if (errorPrimitiveSwitch) {\n+                    log.error(selector.pos(), Errors.SelectorTypeNotAllowed(seltype));\n+                }\n@@ -1773,1 +1778,1 @@\n-                                } else if (!stringSwitch && !intSwitch) {\n+                                } else if (!stringSwitch && !intSwitch && !errorPrimitiveSwitch) {\n@@ -1796,1 +1801,3 @@\n-                        checkCastablePattern(pat.pos(), seltype, primaryType);\n+                        if (!errorPrimitiveSwitch) {\n+                            checkCastablePattern(pat.pos(), seltype, primaryType);\n+                        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -558,0 +558,4 @@\n+# 0: type\n+compiler.err.selector.type.not.allowed=\\\n+    selector type {0} is not allowed\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.selector.type.not.allowed\n+\n+public class SelectorTypeNotAllowed {\n+    private void noLong(long sel) {\n+        switch (sel) {\n+            default -> {}\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/SelectorTypeNotAllowed.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -1,4 +1,4 @@\n-SwitchNoExtraTypes.java:12:18: compiler.err.constant.label.not.compatible: boolean, boolean\n-SwitchNoExtraTypes.java:18:18: compiler.err.constant.label.not.compatible: int, long\n-SwitchNoExtraTypes.java:24:18: compiler.err.constant.label.not.compatible: int, float\n-SwitchNoExtraTypes.java:30:18: compiler.err.constant.label.not.compatible: int, double\n+SwitchNoExtraTypes.java:11:16: compiler.err.selector.type.not.allowed: boolean\n+SwitchNoExtraTypes.java:17:16: compiler.err.selector.type.not.allowed: long\n+SwitchNoExtraTypes.java:23:16: compiler.err.selector.type.not.allowed: float\n+SwitchNoExtraTypes.java:29:16: compiler.err.selector.type.not.allowed: double\n","filename":"test\/langtools\/tools\/javac\/switchextra\/SwitchNoExtraTypes.out","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}