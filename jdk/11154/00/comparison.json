{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1717,0 +1717,1 @@\n+                        Objects.requireNonNull(action);\n@@ -3881,0 +3882,1 @@\n+                        Objects.requireNonNull(action);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,0 +199,37 @@\n+\n+    \/**\n+     * Calls Collections.unmodifiableMap().entrySet().iterator().forEachRemaining() by passing\n+     * that method a {@code null} action and expects that call to fail with a\n+     * {@code NullPointerException}. Additionally, the test verifies that the such a (failed) call\n+     * doesn't advance the iterator to the next entry.\n+     *\/\n+    @Test\n+    public void testUnmodifiableForEachRemainingNPE() {\n+        final Map<String, String> singleEntryMap = Collections.singletonMap(\"foo\", \"bar\");\n+        final Iterator<Map.Entry<String, String>> it = Collections.unmodifiableMap(singleEntryMap)\n+                .entrySet().iterator();\n+        Assert.assertTrue(\"Iterator unexpectedly doesn't have any entry\", it.hasNext());\n+        \/\/ pass null \"action\" and expect it to fail with NPE\n+        Assert.assertThrows(NullPointerException.class, () -> it.forEachRemaining(null));\n+        \/\/ verify the iterator didn't advance\n+        Assert.assertTrue(\"Iterator unexpectedly doesn't have any entry\", it.hasNext());\n+    }\n+\n+    \/**\n+     * Calls Collections.checkedMap().entrySet().iterator().forEachRemaining() by passing\n+     * that method a {@code null} action and expects that call to fail with a\n+     * {@code NullPointerException}. Additionally, the test verifies that the such a (failed) call\n+     * doesn't advance the iterator to the next entry.\n+     *\/\n+    @Test\n+    public void testCheckedMapForEachRemainingNPE() {\n+        final Map<String, String> checkedMap = Collections.checkedMap(new HashMap<>(), String.class,\n+                String.class);\n+        checkedMap.put(\"hello\", \"world\");\n+        final Iterator<Map.Entry<String, String>> it = checkedMap.entrySet().iterator();\n+        Assert.assertTrue(\"Iterator unexpectedly doesn't have any entry\", it.hasNext());\n+        \/\/ pass null \"action\" and expect it to fail with NPE\n+        Assert.assertThrows(NullPointerException.class, () -> it.forEachRemaining(null));\n+        \/\/ verify the iterator didn't advance\n+        Assert.assertTrue(\"Iterator unexpectedly doesn't have any entry\", it.hasNext());\n+    }\n","filename":"test\/jdk\/java\/util\/Collections\/DelegatingIteratorForEachRemaining.java","additions":38,"deletions":0,"binary":false,"changes":38,"status":"modified"}]}