{"files":[{"patch":"@@ -70,0 +70,5 @@\n+    \/**\n+     *  The attribute indicates {@code value} has been deleted partially.\n+     *\/\n+    boolean growOnly = true;\n+\n@@ -196,0 +201,8 @@\n+    \/**\n+     * Return true if value has been deleted partially. coder may not be accurate.\n+     * @return the attribute growOnly.\n+     *\/\n+    boolean isGrowOnly() {\n+        return growOnly;\n+    }\n+\n@@ -321,0 +334,2 @@\n+        } else if (count > newLength) {\n+            growOnly = false;\n@@ -531,0 +546,1 @@\n+        growOnly = false;\n@@ -909,0 +925,1 @@\n+            growOnly = false;\n@@ -960,0 +977,1 @@\n+        growOnly = false;\n@@ -994,0 +1012,3 @@\n+        if (end - start > 0) {\n+            growOnly = false;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -4514,1 +4514,2 @@\n-            if (COMPACT_STRINGS) {\n+            \/\/ only try to compress val if some characters were deleted.\n+            if (COMPACT_STRINGS && !asb.isGrowOnly()) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -715,3 +715,1 @@\n-            return toStringCache =\n-                    isLatin1() ? StringLatin1.newString(value, 0, count)\n-                               : StringUTF16.newString(value, 0, count);\n+            return toStringCache = new String(this, null);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringBuffer.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -453,2 +453,1 @@\n-        return isLatin1() ? StringLatin1.newString(value, 0, count)\n-                          : StringUTF16.newString(value, 0, count);\n+        return new String(this);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringBuilder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -208,0 +208,15 @@\n+    @Param({\"128\", \"256\", \"1024\"})\n+    public int MIXED_SIZE;\n+\n+    \/**\n+     * This microbench simulates how java.io.BufferedReader uses StringBuilder.\n+     *\/\n+    @Benchmark\n+    public String toStringWithMixedChars() {\n+        StringBuilder sb = new StringBuilder(MIXED_SIZE);\n+        for (int i = 0; i < MIXED_SIZE - 4; ++i) {\n+            sb.append('a');\n+        }\n+        sb.append('\\u3042'); \/\/ can't be encoded in latin-1,\n+        return sb.toString();\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringBuilders.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}