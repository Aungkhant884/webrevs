{"files":[{"patch":"@@ -883,1 +883,0 @@\n-\n@@ -885,3 +884,6 @@\n-      while (pos > 0 && rp_array->at(0)[--pos] != *os::file_separator());\n-      \/\/ return the file separator char position\n-      return pos + 1;\n+      while (pos > 0) {\n+        if (rp_array->at(0)[--pos] == *os::file_separator()) {\n+          return pos+1;\n+        }\n+      }\n+      return 0;\n@@ -1025,2 +1027,6 @@\n-      mismatch = check_paths(j, shared_app_paths_len, rp_array,\n-                             dumptime_prefix_len, runtime_prefix_len);\n+      if (dumptime_prefix_len != 0 || runtime_prefix_len != 0) {\n+        log_info(class, path)(\"LCP length for app classpath (dumptime: %u, runtime: %u)\",\n+                              dumptime_prefix_len, runtime_prefix_len);\n+        mismatch = check_paths(j, shared_app_paths_len, rp_array,\n+                               dumptime_prefix_len, runtime_prefix_len);\n+      }\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -36,0 +36,3 @@\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.StandardCopyOption;\n@@ -47,0 +50,13 @@\n+    \/\/ Dump CDS archive with hello.jar\n+    \/\/ Run with a jar file that differs from the original jar file by the first character only: -cp mello.jar\n+    \/\/ Shared class paths mismatch should be detected.\n+    String hellojar = \"hello.jar\";\n+    String mellojar = \"mello.jar\";\n+    Files.copy(Paths.get(appJar), Paths.get(hellojar), StandardCopyOption.COPY_ATTRIBUTES);\n+    Files.copy(Paths.get(appJar), Paths.get(mellojar), StandardCopyOption.COPY_ATTRIBUTES);\n+    TestCommon.testDump(hellojar, TestCommon.list(\"Hello\"));\n+    TestCommon.run(\"-cp\", mellojar,\n+        \"-Xlog:cds\",\n+        \"Hello\")\n+        .assertAbnormalExit(unableToUseMsg, mismatchMsg, hintMsg);\n+\n@@ -51,0 +67,3 @@\n+    \/\/ To run without classpath, set the property test.noclasspath to true\n+    \/\/ so that ProcessTools won't append the classpath of the jtreg process to the test process\n+    System.setProperty(\"test.noclasspath\", \"true\");\n@@ -73,0 +92,1 @@\n+    System.clearProperty(\"test.noclasspath\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/WrongClasspath.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -361,2 +361,6 @@\n-        args.add(\"-cp\");\n-        args.add(System.getProperty(\"java.class.path\"));\n+        String noCPString = System.getProperty(\"test.noclasspath\", \"false\");\n+        boolean noCP = Boolean.valueOf(noCPString);\n+        if (!noCP) {\n+            args.add(\"-cp\");\n+            args.add(System.getProperty(\"java.class.path\"));\n+        }\n@@ -377,1 +381,6 @@\n-        return new ProcessBuilder(args);\n+        ProcessBuilder pb = new ProcessBuilder(args);\n+        if (noCP) {\n+            \/\/ clear CLASSPATH from the env\n+            pb.environment().remove(\"CLASSPATH\");\n+        }\n+        return pb;\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"}]}