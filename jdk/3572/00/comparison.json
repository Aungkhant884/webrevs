{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,2 +31,2 @@\n- * @build SetCwd\n- * @run shell setcwd.sh\n+ * @library \/test\/lib\n+ * @run testng\/othervm SetCwd\n@@ -34,0 +34,3 @@\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.Test;\n+\n@@ -36,0 +39,2 @@\n+import static jdk.test.lib.Asserts.assertTrue;\n+\n@@ -37,5 +42,0 @@\n-    public static void testExec(String cmd, String[] cmdarray, boolean flag)\n-        throws Exception {\n-        File dir = new File(\".\");\n-        File[] files = dir.listFiles();\n-        String curDir = dir.getCanonicalPath();\n@@ -43,11 +43,4 @@\n-        for (int i = 0; i < files.length; i++) {\n-            File f = files[i];\n-            if (f.isDirectory() && (new File(f, \"SetCwd.class\")).exists()) {\n-                String newDir = f.getCanonicalPath();\n-                \/\/ exec a new SetCwd in the sub directory\n-                Process p = null;\n-                if (flag) {\n-                    p = Runtime.getRuntime().exec(cmd, null, f);\n-                } else {\n-                    p = Runtime.getRuntime().exec(cmdarray, null, f);\n-                }\n+    private static final String TEST_CLASSES = System.getProperty(\n+            \"test.classes\", \".\");\n+\n+    private static final String[] CMD_ARRAY = new String[2];\n@@ -55,9 +48,34 @@\n-                BufferedReader in = new BufferedReader\n-                    (new InputStreamReader(p.getInputStream()));\n-                \/\/ Read back output from child\n-                String s = in.readLine();\n-                if (!s.startsWith(newDir)) {\n-                    throw new Exception(\"inconsistent directory after exec\");\n-                }\n-                \/\/ Join on the child\n-                p.waitFor();\n+    @BeforeTest\n+    public static void setUp() throws Exception {\n+        CMD_ARRAY[0] = System.getProperty(\"java.home\") + File.separator +\n+                \"bin\" + File.separator + \"java\";\n+        CMD_ARRAY[1] = SimpleProcess.class.getName();\n+    }\n+\n+    @Test\n+    public void testRuntimeExecWithArray() throws Exception {\n+        Process process = Runtime.getRuntime().exec(CMD_ARRAY, null,\n+                new File(TEST_CLASSES));\n+        verifyProcessOutput(process);\n+    }\n+\n+    @Test\n+    public void testRuntimeExecWithString() throws Exception {\n+        String cmd = String.join(\" \", CMD_ARRAY);\n+        Process process = Runtime.getRuntime().exec(cmd, null,\n+                new File(TEST_CLASSES));\n+        verifyProcessOutput(process);\n+    }\n+\n+    \/\/ Verify the process has executed by comparing its output with the expected\n+    private void verifyProcessOutput(Process process) throws Exception {\n+        process.waitFor();\n+        assertTrue(process.exitValue() == 0);\n+\n+        try (BufferedReader reader = new BufferedReader(\n+                new InputStreamReader(process.getInputStream()))) {\n+            String line = reader.readLine();\n+            if (!line.startsWith(TEST_CLASSES)) {\n+                String error = String.format(\"Expected process output first line: \" +\n+                        \"'%s' Actual: '%s'\", TEST_CLASSES, line);\n+                throw new Exception(error);\n@@ -66,1 +84,0 @@\n-        System.out.println(curDir);\n@@ -69,9 +86,6 @@\n-    public static void main (String args[]) throws Exception {\n-        String cmdarray[] = new String[2];\n-        cmdarray[0] = System.getProperty(\"java.home\") + File.separator +\n-            \"bin\" + File.separator + \"java\";\n-        cmdarray[1] = \"SetCwd\";\n-        String cmd = cmdarray[0] + \" \" + cmdarray[1];\n-        \/\/ test the two new methods\n-        testExec(cmd, null, true);\n-        testExec(null, cmdarray, false);\n+    \/\/ This class main will be the entry point for test subprocesses\n+    static class SimpleProcess {\n+        public static void main (String[] args) throws Exception {\n+            File dir = new File(\".\");\n+            System.out.println(dir.getCanonicalPath());\n+        }\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/exec\/SetCwd.java","additions":52,"deletions":38,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -1,41 +0,0 @@\n-#! \/bin\/sh\n-\n-#\n-# Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-\n-if [ x\"$TESTJAVA\" = x ]; then\n-        TESTJAVA=$1\n-        shift\n-fi\n-if [ x\"$TESTCLASSES\" = x ]; then TESTCLASSES=.; fi\n-\n-# copy the class to our working directory\n-mkdir foo\n-cp ${TESTCLASSES}\/SetCwd.class .\n-cp ${TESTCLASSES}\/SetCwd.class foo\n-\n-# now start the test\n-${TESTJAVA}\/bin\/java ${TESTVMOPTS} SetCwd\n-\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/exec\/setcwd.sh","additions":0,"deletions":41,"binary":false,"changes":41,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,2 @@\n- * @bug      6829503\n+ * @test\n+ * @bug 6829503\n@@ -30,0 +31,2 @@\n+ * @library \/test\/lib\n+ * @run testng\/othervm ShutdownHooks\n@@ -31,0 +34,5 @@\n+\n+import jdk.test.lib.process.ProcessTools;\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.Test;\n+\n@@ -32,0 +40,4 @@\n+import java.nio.file.Files;\n+\n+import static jdk.test.lib.Asserts.assertFalse;\n+\n@@ -33,5 +45,0 @@\n-    private static File file;\n-    public static void main(String[] args) throws Exception {\n-        if (args.length != 2) {\n-            throw new IllegalArgumentException(\"Usage: ShutdownHooks <dir> <filename>\");\n-        }\n@@ -39,2 +46,1 @@\n-        \/\/ Add a shutdown hook\n-        Runtime.getRuntime().addShutdownHook(new Cleaner());\n+    private static final String TEST_FILE_NAME = \"fileToBeDeleted\";\n@@ -42,7 +48,9 @@\n-        File dir = new File(args[0]);\n-        file = new File(dir, args[1]);\n-        \/\/ write to file\n-        System.out.println(\"writing to \"+ file);\n-        try (PrintWriter pw = new PrintWriter(file)) {\n-            pw.println(\"Shutdown begins\");\n-        }\n+    private static final File TEST_FILE = new File(TEST_FILE_NAME);\n+\n+    private static final String TEST_CLASSES = System.getProperty(\n+            \"test.classes\", \".\");\n+\n+    @BeforeTest\n+    public static void setUp() throws Exception {\n+        \/\/ Make sure file does not exist before test\n+        Files.deleteIfExists(TEST_FILE.toPath());\n@@ -51,12 +59,19 @@\n-    public static class Cleaner extends Thread {\n-        public void run() {\n-            \/\/ register the Console's shutdown hook while the application\n-            \/\/ shutdown hook is running\n-            Console cons = System.console();\n-            \/\/ register the DeleteOnExitHook while the application\n-            \/\/ shutdown hook is running\n-            file.deleteOnExit();\n-            try (PrintWriter pw = new PrintWriter(file)) {\n-                pw.println(\"file is being deleted\");\n-            } catch (FileNotFoundException e) {\n-                throw new RuntimeException(e);\n+    @Test\n+    public void testShutdownHooks() throws Exception {\n+        \/\/ Run in a new process in order to evaluate shutdown hook results\n+        String[] testCommand = new String[] {\"-classpath\", TEST_CLASSES,\n+                ShutdownHooksProcess.class.getName()};\n+        ProcessTools.executeTestJvm(testCommand).shouldHaveExitValue(0);\n+\n+        String errorMsg = \"File exists despite shutdown hook has been run\";\n+        assertFalse(Files.exists(TEST_FILE.toPath()), errorMsg);\n+    }\n+\n+    \/\/ This class main will be the entry point for test subprocesses\n+    static class ShutdownHooksProcess {\n+        public static void main(String[] args) throws Exception {\n+            Runtime.getRuntime().addShutdownHook(new Cleaner());\n+\n+            System.out.println(\"Writing to \"+ TEST_FILE);\n+            try (PrintWriter pw = new PrintWriter(TEST_FILE)) {\n+                pw.println(\"Shutdown begins\");\n@@ -65,1 +80,0 @@\n-    }\n@@ -67,0 +81,16 @@\n+        static class Cleaner extends Thread {\n+            public void run() {\n+                \/\/ register the Console's shutdown hook while the application\n+                \/\/ shutdown hook is running\n+                Console cons = System.console();\n+                \/\/ register the DeleteOnExitHook while the application\n+                \/\/ shutdown hook is running\n+                TEST_FILE.deleteOnExit();\n+                try (PrintWriter pw = new PrintWriter(TEST_FILE)) {\n+                    pw.println(\"File is being deleted\");\n+                } catch (FileNotFoundException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        }\n+    }\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/shutdown\/ShutdownHooks.java","additions":59,"deletions":29,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -1,57 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2009, 2019, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-\n-# @test\n-# @bug 6829503\n-# @summary  1) Test Console and DeleteOnExitHook can be initialized\n-#              while shutdown is in progress\n-#           2) Test if files that are added by the application shutdown\n-#              hook are deleted on exit during shutdown\n-#\n-# @build ShutdownHooks\n-# @run shell ShutdownHooks.sh\n-\n-if [ \"${TESTJAVA}\" = \"\" ]\n-then\n-  echo \"TESTJAVA not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-\n-FILENAME=fileToBeDeleted\n-rm -f ${TESTCLASSES}\/${FILENAME}\n-\n-# create the file to be deleted on exit\n-echo \"testing shutdown\" > ${TESTCLASSES}\/${FILENAME}\n-\n-${TESTJAVA}\/bin\/java ${TESTVMOPTS} -classpath ${TESTCLASSES} ShutdownHooks ${TESTCLASSES} $FILENAME\n-if [ $? != 0 ] ; then\n-  echo \"Test Failed\"; exit 1\n-fi\n-\n-if [ -f ${TESTCLASSES}\/${FILENAME} ]; then\n-  echo \"Test Failed: ${TESTCLASSES}\/${FILENAME} not deleted\"; exit 2\n-fi\n-echo \"ShutdownHooks test passed.\";\n","filename":"test\/jdk\/java\/lang\/RuntimeTests\/shutdown\/ShutdownHooks.sh","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"}]}