{"files":[{"patch":"@@ -537,0 +537,1 @@\n+  \/\/ end_region is inclusive\n@@ -552,1 +553,0 @@\n-  Klass* klass = cast_to_oop(addr)->klass();\n@@ -568,2 +568,2 @@\n-  assert(region_offset(beg) == 0, \"not RegionSize aligned\");\n-  assert(region_offset(end) == 0, \"not RegionSize aligned\");\n+  assert(is_region_aligned(beg), \"not RegionSize aligned\");\n+  assert(is_region_aligned(end), \"not RegionSize aligned\");\n@@ -765,1 +765,1 @@\n-      } else if (region_offset(dest_addr) == 0) {\n+      } else if (is_region_aligned(dest_addr)) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -678,1 +678,2 @@\n-  assert(addr <= _region_end, \"bad addr\");\n+  \/\/ would mistakenly return 0 for _region_end\n+  assert(addr < _region_end, \"bad addr\");\n@@ -737,1 +738,1 @@\n-  return region_offset(addr) == 0;\n+  return (size_t(addr) & RegionAddrOffsetMask) == 0;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}