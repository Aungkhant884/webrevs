{"files":[{"patch":"@@ -290,7 +290,0 @@\n-static inline bool not_a_node(const Node* n) {\n-  if (n == NULL)                   return true;\n-  if (((intptr_t)n & 1) != 0)      return true;  \/\/ uninitialized, etc.\n-  if (*(address*)n == badAddress)  return true;  \/\/ kill by Node::destruct\n-  return false;\n-}\n-\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-    if (NotANode(o)) {\n+    if (not_a_node(o)) {\n","filename":"src\/hotspot\/share\/opto\/multnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1656,1 +1656,1 @@\n-  if (NotANode(n)) {\n+  if (not_a_node(n)) {\n@@ -1684,1 +1684,1 @@\n-  if (NotANode(orig)) orig = NULL;\n+  if (not_a_node(orig)) orig = NULL;\n@@ -1691,1 +1691,1 @@\n-  if (NotANode(fast)) fast = NULL;\n+  if (not_a_node(fast)) fast = NULL;\n@@ -1700,1 +1700,1 @@\n-    if (NotANode(orig)) orig = NULL;\n+    if (not_a_node(orig)) orig = NULL;\n@@ -1706,1 +1706,1 @@\n-      if (NotANode(fast)) fast = NULL;\n+      if (not_a_node(fast)) fast = NULL;\n@@ -1709,1 +1709,1 @@\n-        if (NotANode(fast)) fast = NULL;\n+        if (not_a_node(fast)) fast = NULL;\n@@ -1722,1 +1722,1 @@\n-  if (NotANode(orig))  orig = NULL;\n+  if (not_a_node(orig))  orig = NULL;\n@@ -1731,1 +1731,1 @@\n-    if (NotANode(orig))  orig = NULL;\n+    if (not_a_node(orig))  orig = NULL;\n@@ -1827,2 +1827,2 @@\n-    } else if (NotANode(d)) {\n-      st->print(\"NotANode \");  \/\/ uninitialized, sentinel, garbage, etc.\n+    } else if (not_a_node(d)) {\n+      st->print(\"not_a_node \");  \/\/ uninitialized, sentinel, garbage, etc.\n@@ -1844,1 +1844,1 @@\n-      if (NotANode(p)) { st->print(\"NotANode \"); continue; }\n+      if (not_a_node(p)) { st->print(\"not_a_node \"); continue; }\n@@ -1859,2 +1859,2 @@\n-    } else if (NotANode(u)) {\n-      st->print(\"NotANode \");\n+    } else if (not_a_node(u)) {\n+      st->print(\"not_a_node \");\n@@ -1897,1 +1897,1 @@\n-        if (NotANode(n))  continue;\n+        if (not_a_node(n))  continue;\n@@ -1918,1 +1918,1 @@\n-  if (NotANode(start)) return;\n+  if (not_a_node(start)) return;\n@@ -2086,1 +2086,1 @@\n-        if (NotANode(n)) {\n+        if (not_a_node(n)) {\n@@ -2148,1 +2148,1 @@\n-    if (NotANode(current)) {\n+    if (not_a_node(current)) {\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1250,5 +1250,1 @@\n-\n-#ifndef PRODUCT\n-\n-\/\/ Used in debugging code to avoid walking across dead or uninitialized edges.\n-inline bool NotANode(const Node* n) {\n+inline bool not_a_node(const Node* n) {\n@@ -1261,3 +1257,0 @@\n-#endif\n-\n-\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-          \/\/ if (NotANode(n))  continue;\n+          \/\/ if (not_a_node(n))  continue;\n@@ -257,2 +257,2 @@\n-      \/\/ } else if (NotANode(u)) {\n-      \/\/   out.print(\"NotANode \");\n+      \/\/ } else if (not_a_node(u)) {\n+      \/\/   out.print(\"not_a_node \");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/opto\/Node.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}