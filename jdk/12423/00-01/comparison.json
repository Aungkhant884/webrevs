{"files":[{"patch":"@@ -35,0 +35,7 @@\n+    private static final String LONG_PATH_PREFIX     = \"\\\\\\\\?\\\\\";\n+    private static final String LONG_PATH_UNC_PREFIX = LONG_PATH_PREFIX + \"UNC\";\n+\n+    private static final int PREFIX_TYPE_NONE     = 0;\n+    private static final int PREFIX_TYPE_LONG     = 1;\n+    private static final int PREFIX_TYPE_LONG_UNC = 2;\n+\n@@ -88,13 +95,0 @@\n-    \/**\n-     * Removes the long path \"\\\\?\\\" or \"\\\\?\\UNC\" prefix. If the input\n-     * has neither of these, the parameter is returned unchanged.\n-     *\/\n-    private static String removePrefix(String input) {\n-        if (input.startsWith(\"\\\\\\\\?\\\\UNC\")) {\n-            return \"\\\\\" + input.substring(7);\n-        } else if(input.startsWith(\"\\\\\\\\?\\\\\")) {\n-            return input.substring(4);\n-        }\n-        return input;\n-    }\n-\n@@ -108,1 +102,12 @@\n-        input = removePrefix(input);\n+        \/\/ if a prefix is present, note its type and remove it\n+        final int prefixType;\n+        if (input.startsWith(LONG_PATH_UNC_PREFIX)) {\n+            prefixType = PREFIX_TYPE_LONG_UNC;\n+            input = \"\\\\\" + input.substring(7);\n+        } else if (input.startsWith(LONG_PATH_PREFIX)) {\n+            prefixType = PREFIX_TYPE_LONG;\n+            input = input.substring(4);\n+        } else {\n+            prefixType = PREFIX_TYPE_NONE;\n+        }\n+\n@@ -164,0 +169,6 @@\n+        if (prefixType == PREFIX_TYPE_LONG && type != WindowsPathType.ABSOLUTE) {\n+            throw new InvalidPathException(input, \"Long path prefix must precede an absolute path\");\n+        } else if (prefixType == PREFIX_TYPE_LONG_UNC && type != WindowsPathType.UNC) {\n+            throw new InvalidPathException(input, \"Long UNC path prefix must precede a UNC path\");\n+        }\n+\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPathParser.java","additions":25,"deletions":14,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -1441,2 +1441,2 @@\n-        \/\/ lnog path prefixes\n-        test(\"\\\\\\\\?\\\\C:\\\\mnt\\\\file.dat\")\n+        \/\/ long path prefixes\n+        test(\"\\\\\\\\?\\\\C:\\\\mnt\\\\file.dat\")  \/\/ absolute\n@@ -1444,1 +1444,13 @@\n-        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\dir\\\\file.dat\")\n+        test(\"\\\\\\\\?\\\\\\\\\\\\server\\\\share\\\\dir\\\\file.dat\")  \/\/ UNC\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\file.dat\")           \/\/ relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\\\\\file.dat\")         \/\/ directory-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\C:file.dat\")         \/\/ drive-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\\")                   \/\/ empty\n+            .invalid();\n+\n+        \/\/ long UNC path prefixes\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\dir\\\\file.dat\")      \/\/ UNC\n@@ -1446,0 +1458,6 @@\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:\\\\mnt\\\\file.dat\")  \/\/ absolute\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:file.dat\")         \/\/ drive-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\")                                    \/\/ empty\n+            .invalid();\n","filename":"test\/jdk\/java\/nio\/file\/Path\/PathOps.java","additions":21,"deletions":3,"binary":false,"changes":24,"status":"modified"}]}