{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,7 @@\n+    private static final String LONG_PATH_PREFIX     = \"\\\\\\\\?\\\\\";\n+    private static final String LONG_PATH_UNC_PREFIX = LONG_PATH_PREFIX + \"UNC\";\n+\n+    private static final int PREFIX_TYPE_NONE     = 0;\n+    private static final int PREFIX_TYPE_LONG     = 1;\n+    private static final int PREFIX_TYPE_LONG_UNC = 2;\n+\n@@ -95,0 +102,12 @@\n+        \/\/ if a prefix is present, note its type and remove it\n+        final int prefixType;\n+        if (input.startsWith(LONG_PATH_UNC_PREFIX)) {\n+            prefixType = PREFIX_TYPE_LONG_UNC;\n+            input = \"\\\\\" + input.substring(7);\n+        } else if (input.startsWith(LONG_PATH_PREFIX)) {\n+            prefixType = PREFIX_TYPE_LONG;\n+            input = input.substring(4);\n+        } else {\n+            prefixType = PREFIX_TYPE_NONE;\n+        }\n+\n@@ -150,0 +169,6 @@\n+        if (prefixType == PREFIX_TYPE_LONG && type != WindowsPathType.ABSOLUTE) {\n+            throw new InvalidPathException(input, \"Long path prefix must precede an absolute path\");\n+        } else if (prefixType == PREFIX_TYPE_LONG_UNC && type != WindowsPathType.UNC) {\n+            throw new InvalidPathException(input, \"Long UNC path prefix must precede a UNC path\");\n+        }\n+\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPathParser.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333 6925932 7006126 8037945 8072495 8140449 8254876\n+ * @bug 4313887 6838333 6925932 7006126 8037945 8072495 8140449 8254876 8298478\n@@ -1440,0 +1440,24 @@\n+\n+        \/\/ long path prefixes\n+        test(\"\\\\\\\\?\\\\C:\\\\mnt\\\\file.dat\")  \/\/ absolute\n+            .string(\"C:\\\\mnt\\\\file.dat\");\n+        test(\"\\\\\\\\?\\\\\\\\\\\\server\\\\share\\\\dir\\\\file.dat\")  \/\/ UNC\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\file.dat\")           \/\/ relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\\\\\file.dat\")         \/\/ directory-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\C:file.dat\")         \/\/ drive-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\\")                   \/\/ empty\n+            .invalid();\n+\n+        \/\/ long UNC path prefixes\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\dir\\\\file.dat\")      \/\/ UNC\n+            .string(\"\\\\\\\\server\\\\share\\\\dir\\\\file.dat\");\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:\\\\mnt\\\\file.dat\")  \/\/ absolute\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:file.dat\")         \/\/ drive-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\")                                    \/\/ empty\n+            .invalid();\n","filename":"test\/jdk\/java\/nio\/file\/Path\/PathOps.java","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"}]}