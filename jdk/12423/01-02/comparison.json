{"files":[{"patch":"@@ -35,7 +35,0 @@\n-    private static final String LONG_PATH_PREFIX     = \"\\\\\\\\?\\\\\";\n-    private static final String LONG_PATH_UNC_PREFIX = LONG_PATH_PREFIX + \"UNC\";\n-\n-    private static final int PREFIX_TYPE_NONE     = 0;\n-    private static final int PREFIX_TYPE_LONG     = 1;\n-    private static final int PREFIX_TYPE_LONG_UNC = 2;\n-\n@@ -102,8 +95,10 @@\n-        \/\/ if a prefix is present, note its type and remove it\n-        final int prefixType;\n-        if (input.startsWith(LONG_PATH_UNC_PREFIX)) {\n-            prefixType = PREFIX_TYPE_LONG_UNC;\n-            input = \"\\\\\" + input.substring(7);\n-        } else if (input.startsWith(LONG_PATH_PREFIX)) {\n-            prefixType = PREFIX_TYPE_LONG;\n-            input = input.substring(4);\n+        \/\/ if a prefix is present, remove it and note the expected path type\n+        final WindowsPathType expectedType;\n+        if (input.startsWith(\"\\\\\\\\?\\\\\")) {\n+            if (input.startsWith(\"UNC\\\\\", 4)) {\n+                expectedType = WindowsPathType.UNC;\n+                input = \"\\\\\\\\\" + input.substring(8);\n+            } else {\n+                expectedType = WindowsPathType.ABSOLUTE;\n+                input = input.substring(4);\n+            }\n@@ -111,1 +106,1 @@\n-            prefixType = PREFIX_TYPE_NONE;\n+            expectedType = null;\n@@ -169,4 +164,6 @@\n-        if (prefixType == PREFIX_TYPE_LONG && type != WindowsPathType.ABSOLUTE) {\n-            throw new InvalidPathException(input, \"Long path prefix must precede an absolute path\");\n-        } else if (prefixType == PREFIX_TYPE_LONG_UNC && type != WindowsPathType.UNC) {\n-            throw new InvalidPathException(input, \"Long UNC path prefix must precede a UNC path\");\n+        if (type != expectedType) {\n+            if (expectedType == WindowsPathType.ABSOLUTE) { \/\/ long path prefix\n+                throw new InvalidPathException(input, \"Long path prefix can only be used with an absolute path\");\n+            } else if (expectedType == WindowsPathType.UNC) { \/\/ long UNC path prefix\n+                throw new InvalidPathException(input, \"Long UNC path prefix can only be used with a UNC path\");\n+            }\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPathParser.java","additions":17,"deletions":20,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -1458,1 +1458,3 @@\n-        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:\\\\mnt\\\\file.dat\")  \/\/ absolute\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:\\\\file.dat\")       \/\/ absolute\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\\\\file.dat\")                          \/\/ relative\n@@ -1464,0 +1466,2 @@\n+        test(\"\\\\\\\\?\\\\UNC\\\\\")                                    \/\/ empty\n+            .invalid();\n","filename":"test\/jdk\/java\/nio\/file\/Path\/PathOps.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}