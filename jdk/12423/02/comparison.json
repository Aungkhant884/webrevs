{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,0 +95,14 @@\n+        \/\/ if a prefix is present, remove it and note the expected path type\n+        final WindowsPathType expectedType;\n+        if (input.startsWith(\"\\\\\\\\?\\\\\")) {\n+            if (input.startsWith(\"UNC\\\\\", 4)) {\n+                expectedType = WindowsPathType.UNC;\n+                input = \"\\\\\\\\\" + input.substring(8);\n+            } else {\n+                expectedType = WindowsPathType.ABSOLUTE;\n+                input = input.substring(4);\n+            }\n+        } else {\n+            expectedType = null;\n+        }\n+\n@@ -150,0 +164,8 @@\n+        if (type != expectedType) {\n+            if (expectedType == WindowsPathType.ABSOLUTE) { \/\/ long path prefix\n+                throw new InvalidPathException(input, \"Long path prefix can only be used with an absolute path\");\n+            } else if (expectedType == WindowsPathType.UNC) { \/\/ long UNC path prefix\n+                throw new InvalidPathException(input, \"Long UNC path prefix can only be used with a UNC path\");\n+            }\n+        }\n+\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPathParser.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333 6925932 7006126 8037945 8072495 8140449 8254876\n+ * @bug 4313887 6838333 6925932 7006126 8037945 8072495 8140449 8254876 8298478\n@@ -1440,0 +1440,28 @@\n+\n+        \/\/ long path prefixes\n+        test(\"\\\\\\\\?\\\\C:\\\\mnt\\\\file.dat\")  \/\/ absolute\n+            .string(\"C:\\\\mnt\\\\file.dat\");\n+        test(\"\\\\\\\\?\\\\\\\\\\\\server\\\\share\\\\dir\\\\file.dat\")  \/\/ UNC\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\file.dat\")           \/\/ relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\\\\\file.dat\")         \/\/ directory-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\C:file.dat\")         \/\/ drive-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\\")                   \/\/ empty\n+            .invalid();\n+\n+        \/\/ long UNC path prefixes\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\dir\\\\file.dat\")      \/\/ UNC\n+            .string(\"\\\\\\\\server\\\\share\\\\dir\\\\file.dat\");\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:\\\\file.dat\")       \/\/ absolute\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\\\\file.dat\")                          \/\/ relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\\\\server\\\\share\\\\C:file.dat\")         \/\/ drive-relative\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\")                                    \/\/ empty\n+            .invalid();\n+        test(\"\\\\\\\\?\\\\UNC\\\\\")                                    \/\/ empty\n+            .invalid();\n","filename":"test\/jdk\/java\/nio\/file\/Path\/PathOps.java","additions":30,"deletions":2,"binary":false,"changes":32,"status":"modified"}]}