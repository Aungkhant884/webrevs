{"files":[{"patch":"@@ -29,0 +29,2 @@\n+\n+import java.lang.constant.ClassDesc;\n@@ -42,0 +44,7 @@\n+    \/**\n+     * {@return a symbolic descriptor for the dynamic constant's type}\n+     *\/\n+    default ClassDesc typeSymbol() {\n+        return Util.fieldTypeSymbol(nameAndType());\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/constantpool\/ConstantDynamicEntry.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+import jdk.internal.classfile.impl.Util;\n+\n+import java.lang.constant.ClassDesc;\n@@ -36,0 +39,6 @@\n+    \/**\n+     * {@return a symbolic descriptor for the field's type}\n+     *\/\n+    default ClassDesc typeSymbol() {\n+        return Util.fieldTypeSymbol(nameAndType());\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/constantpool\/FieldRefEntry.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+import jdk.internal.classfile.impl.Util;\n+\n+import java.lang.constant.MethodTypeDesc;\n@@ -37,0 +40,6 @@\n+    \/**\n+     * {@return a symbolic descriptor for the interface method's type}\n+     *\/\n+    default MethodTypeDesc typeSymbol() {\n+        return Util.methodTypeSymbol(nameAndType());\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/constantpool\/InterfaceMethodRefEntry.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.lang.constant.MethodTypeDesc;\n@@ -40,0 +41,7 @@\n+    \/**\n+     * {@return a symbolic descriptor for the call site's invocation type}\n+     *\/\n+    default MethodTypeDesc typeSymbol() {\n+        return Util.methodTypeSymbol(nameAndType());\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/constantpool\/InvokeDynamicEntry.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+import jdk.internal.classfile.impl.Util;\n+\n+import java.lang.constant.MethodTypeDesc;\n@@ -36,0 +39,6 @@\n+    \/**\n+     * {@return a symbolic descriptor for the method's type}\n+     *\/\n+    default MethodTypeDesc typeSymbol() {\n+        return Util.methodTypeSymbol(nameAndType());\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/constantpool\/MethodRefEntry.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-        return Util.fieldTypeSymbol(field().nameAndType());\n+        return field().typeSymbol();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/instruction\/FieldInstruction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-        return Util.methodTypeSymbol(invokedynamic().nameAndType());\n+        return invokedynamic().typeSymbol();\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/instruction\/InvokeDynamicInstruction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}