{"files":[{"patch":"@@ -166,1 +166,1 @@\n-bool InstanceKlass::has_nest_member(InstanceKlass* k, JavaThread* current) const {\n+bool InstanceKlass::has_nest_member(JavaThread* current, InstanceKlass* k) const {\n@@ -251,1 +251,0 @@\n-  JavaThread* current = THREAD->as_Java_thread();\n@@ -257,1 +256,1 @@\n-  ResourceMark rm(current);\n+  ResourceMark rm(THREAD);\n@@ -262,1 +261,1 @@\n-    bool can_resolve = current->can_call_java();\n+    bool can_resolve = THREAD->can_call_java();\n@@ -284,1 +283,1 @@\n-      constantPoolHandle cph(current, constants());\n+      constantPoolHandle cph(THREAD, constants());\n@@ -301,1 +300,1 @@\n-          bool is_member = nest_host_k->has_nest_member(this, current);\n+          bool is_member = nest_host_k->has_nest_member(THREAD->as_Java_thread(), this);\n@@ -328,1 +327,1 @@\n-        constantPoolHandle cph(current, constants());\n+        constantPoolHandle cph(THREAD, constants());\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -484,1 +484,1 @@\n-  bool has_nest_member(InstanceKlass* k, JavaThread* current) const;\n+  bool has_nest_member(JavaThread* current, InstanceKlass* k) const;\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+ *                   -Djava.security.manager=allow\n@@ -62,3 +63,0 @@\n-        static final String CLASSES = System.getProperty(\"test.classes\");\n-        static final Path CLASSES_DIR = Paths.get(CLASSES);\n-\n@@ -69,15 +67,0 @@\n-        static byte[] getBytesForClass(String name) throws IOException {\n-            Path classFile;\n-            if (name.indexOf('.') > 0) {\n-                \/\/ it's in a package\n-                String[] paths = name.split(\"\\\\.\");\n-                classFile = CLASSES_DIR.resolve(paths[0]);\n-                classFile = classFile.resolve(paths[1] + \".class\");\n-            }\n-            else {\n-                classFile = CLASSES_DIR.resolve(name + \".class\");\n-            }\n-            return Files.readAllBytes(classFile);\n-        }\n-\n-\n@@ -96,1 +79,2 @@\n-                        byte[] buff = getBytesForClass(name);\n+                        String clzFile = name.replaceAll(\"\\\\.\", \"\/\") + \".class\";\n+                        byte[] buff = getResourceAsStream(clzFile).readAllBytes();\n","filename":"test\/hotspot\/jtreg\/runtime\/Nestmates\/protectionDomain\/TestDifferentProtectionDomains.java","additions":3,"deletions":19,"binary":false,"changes":22,"status":"modified"}]}