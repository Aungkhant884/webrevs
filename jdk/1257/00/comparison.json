{"files":[{"patch":"@@ -35,0 +35,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -267,0 +268,2 @@\n+  \/\/ Generated code assumes that buffer index is pointer sized.\n+  STATIC_ASSERT(in_bytes(SATBMarkQueue::byte_width_of_index()) == sizeof(intptr_t));\n@@ -317,1 +320,2 @@\n-  __ cmpl(queue_index, 0);\n+  __ movptr(tmp2, queue_index);\n+  __ testptr(tmp2, tmp2);\n@@ -319,10 +323,4 @@\n-  __ subl(queue_index, wordSize);\n-  __ movptr(tmp2, buffer);\n-#ifdef _LP64\n-  __ movslq(rscratch1, queue_index);\n-  __ addq(tmp2, rscratch1);\n-  __ movq(Address(tmp2, 0), card_addr);\n-#else\n-  __ addl(tmp2, queue_index);\n-  __ movl(Address(tmp2, 0), card_addr);\n-#endif\n+  __ subptr(tmp2, wordSize);\n+  __ movptr(queue_index, tmp2);\n+  __ addptr(tmp2, buffer);\n+  __ movptr(Address(tmp2, 0), card_addr);\n@@ -456,0 +454,3 @@\n+  \/\/ Generated code assumes that buffer index is pointer sized.\n+  STATIC_ASSERT(in_bytes(SATBMarkQueue::byte_width_of_index()) == sizeof(intptr_t));\n+\n","filename":"src\/hotspot\/cpu\/x86\/gc\/g1\/g1BarrierSetAssembler_x86.cpp","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -181,1 +181,1 @@\n-  static ByteSize byte_width_of_index() { return in_ByteSize(sizeof(size_t)); }\n+  static constexpr ByteSize byte_width_of_index() { return in_ByteSize(sizeof(size_t)); }\n","filename":"src\/hotspot\/share\/gc\/shared\/ptrQueue.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}