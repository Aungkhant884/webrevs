{"files":[{"patch":"@@ -85,1 +85,3 @@\n-  class Process : public ModuleClosure {\n+  GrowableArray<char*>* module_paths = new GrowableArray<char*>(5);\n+\n+  class ModulePathsGatherer : public ModuleClosure {\n@@ -87,0 +89,1 @@\n+    GrowableArray<char*>* _module_paths;\n@@ -88,1 +91,2 @@\n-    Process(JavaThread* current) : _current(current) {}\n+    ModulePathsGatherer(JavaThread* current, GrowableArray<char*>* module_paths) :\n+      _current(current), _module_paths(module_paths) {}\n@@ -93,1 +97,3 @@\n-        ClassLoader::setup_module_search_path(_current, path);\n+        char* path_copy = NEW_RESOURCE_ARRAY(char, strlen(path) + 1);\n+        strcpy(path_copy, path);\n+        _module_paths->append(path_copy);\n@@ -97,2 +103,10 @@\n-  Process process(current);\n-  met->modules_do(&process);\n+\n+  ModulePathsGatherer gatherer(current, module_paths);\n+  {\n+    MutexLocker ml(Module_lock);\n+    met->modules_do(&gatherer);\n+  }\n+\n+  for (int i = 0; i < module_paths->length(); i++) {\n+    ClassLoader::setup_module_search_path(current, module_paths->at(i));\n+  }\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -697,0 +697,1 @@\n+  assert_lock_strong(Module_lock);\n@@ -704,0 +705,1 @@\n+  assert_lock_strong(Module_lock);\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}