{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import jdk.internal.util.Preconditions;\n@@ -3819,2 +3820,18 @@\n-        int newLength = to - from;\n-        if (newLength < 0)\n+        if (from == 0) {\n+            if (original.length == to) {\n+                byte[] copy = new byte[original.length];\n+                System.arraycopy(original, 0, copy, 0,\n+                        original.length);\n+                return copy;\n+            }\n+            byte[] copy = new byte[to];\n+            System.arraycopy(original, 0, copy, 0,\n+                    copy.length);\n+            return copy;\n+        }\n+        return copyOfRangeGeneric(original, from, to);\n+    }\n+\n+    private static int checkLength(int from, int to) {\n+        int len = to - from;\n+        if (len < 0) {\n@@ -3822,0 +3839,6 @@\n+        }\n+        return len;\n+    }\n+\n+    private static byte[] copyOfRangeGeneric(byte[] original, int from, int to) {\n+        int newLength = checkLength(from, to);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,0 @@\n-@Fork(5)\n@@ -35,2 +34,3 @@\n-@Warmup(iterations = 5, time = 5)\n-@Measurement(iterations = 10, time = 5)\n+@Warmup(iterations = 5, time = 3)\n+@Measurement(iterations = 5, time = 3)\n+@Fork(3)\n@@ -38,0 +38,4 @@\n+\n+  @Param({\"0\", \"7\", \"64\"})\n+  public int size;\n+\n@@ -42,1 +46,1 @@\n-    array = \"\".getBytes(StandardCharsets.UTF_8);\n+      array = \"a\".repeat(size).getBytes(StandardCharsets.UTF_8);\n@@ -47,1 +51,1 @@\n-    return new String(array);\n+      return new String(array);\n@@ -52,1 +56,1 @@\n-    return new String(array, StandardCharsets.UTF_8);\n+      return new String(array, StandardCharsets.UTF_8);\n@@ -57,1 +61,1 @@\n-    return new String(array, StandardCharsets.UTF_8.name());\n+      return new String(array, StandardCharsets.UTF_8.name());\n@@ -62,1 +66,1 @@\n-    return new String(array, 0, 0);\n+    return new String(array, 0, array.length);\n@@ -67,1 +71,1 @@\n-    return new String(array, 0, 0, StandardCharsets.UTF_8);\n+      return new String(array, 0, array.length, StandardCharsets.UTF_8);\n@@ -72,1 +76,1 @@\n-    return new String(array, 0, 0, StandardCharsets.UTF_8.name());\n+      return new String(array, 0, array.length, StandardCharsets.UTF_8.name());\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringConstructor.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"}]}