[{"commit":{"message":"Add offset param to micro, reduce number of configurations and variants"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringConstructor.java"}],"sha":"350612d4b1eec4e35d1ba3373f9fd9f64206a9f0"},{"commit":{"message":"Err on the side of copyOf"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"}],"sha":"85b50169c4bfdd4dadd85fde268eeea08217c317"},{"commit":{"message":"Minimize, force inline, generalize"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"}],"sha":"c906c730a6eebb4cc727067e72808680291f1ef3"},{"commit":{"message":"Apply @franz1981's idea but directly to Arrays.copyOfRange, factoring out range checks and helping JIT pick the best arraycopy adapter"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/Arrays.java"}],"sha":"72138930fdbfe51d3a0f3d4c6b2f743590cc7e77"},{"commit":{"message":"Back out all changes except micro"},"files":[],"sha":"4310a4f5f7d36b11c70c9ccc557623e97734d01b"},{"commit":{"message":"copyrights"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringConstructor.java"}],"sha":"cece6f803d6795c16ff0f8794589767ec0dc9a3a"},{"commit":{"message":"truncate rather than throw in String(AbstractStringBuilder), keeping current behavior"},"files":[],"sha":"2e33c27f24805a0a6d6d60749cbceb5f8a8a5d70"},{"commit":{"message":"Update StringLatin1.trim for consistency"},"files":[],"sha":"a5e494bc245922a3f76d83c3f4f3fb8f3e308831"},{"commit":{"message":"fix StringUTF16.trim bug, rename locals to reduce confusion"},"files":[],"sha":"5b637e09b5149f0325e5972751d4643eaf4d85e8"},{"commit":{"message":"Include some callsites in StringLatin1\/UTF16, rename to copyBytes to disambiguate from generic utility methods, tune microbenchmark"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/StringConstructor.java"}],"sha":"2d1f8e37bf48246a5bd3a9de7eb65c29c168f0c1"},{"commit":{"message":"8301958: Avoid overhead of Arrays.copyOfRange in String"},"files":[],"sha":"ade85fe0ddbf59242446d14dcce2df2d9b070e48"}]