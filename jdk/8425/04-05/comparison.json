{"files":[{"patch":"@@ -50,1 +50,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ArrayMismatchBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/BlackScholes.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(value = 1, jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskCastOperationsBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\"})\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskFromLongBenchmark.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskQueryOperationsBenchmark.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MaskedLogicOpts.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.MemorySession;\n@@ -30,2 +32,0 @@\n-import jdk.incubator.foreign.MemorySegment;\n-import jdk.incubator.foreign.ResourceScope;\n@@ -52,2 +52,2 @@\n-    \"--add-modules=jdk.incubator.foreign,jdk.incubator.vector\",\n-    \"-Dforeign.restricted=permit\",\n+    \"--add-modules=jdk.incubator.vector\",\n+    \"--enable-preview\",\n@@ -72,2 +72,2 @@\n-    nativeIn = MemorySegment.allocateNative(size, ResourceScope.newImplicitScope());\n-    nativeOut = MemorySegment.allocateNative(size, ResourceScope.newImplicitScope());\n+    nativeIn = MemorySegment.allocateNative(size, MemorySession.openImplicit());\n+    nativeOut = MemorySegment.allocateNative(size, MemorySession.openImplicit());\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/MemorySegmentVectorAccess.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+@Fork(jvmArgsPrepend = {\"--add-modules=jdk.incubator.vector\", \"--enable-preview\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/RotateBenchmark.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,2 +26,0 @@\n-import java.nio.ByteOrder;\n-import java.util.concurrent.TimeUnit;\n@@ -31,0 +29,2 @@\n+import java.nio.ByteOrder;\n+import java.util.concurrent.TimeUnit;\n@@ -55,1 +55,1 @@\n-    \"-Dforeign.restricted=permit\",\n+    \"--enable-preview\",\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreBytes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    \"-Dforeign.restricted=permit\",\n+    \"--enable-preview\",\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/TestLoadStoreShorts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}