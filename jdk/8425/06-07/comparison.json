{"files":[{"patch":"@@ -2430,8 +2430,0 @@\n-    case Op_PopCountI:\n-    case Op_PopCountL:\n-    case Op_PopCountVI:\n-    case Op_PopCountVL:\n-      if (!UsePopCountInstruction) {\n-        ret_value = false;\n-      }\n-      break;\n@@ -8682,1 +8674,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -8703,1 +8694,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -8726,1 +8716,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -8746,1 +8735,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -5692,1 +5692,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -5714,1 +5713,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -5741,1 +5739,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -5763,1 +5760,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2461,2 +2461,1 @@\n-  ins_encode %{\n-    assert(UsePopCountInstruction, \"unsupported\");dnl\n+  ins_encode %{dnl\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2213,1 +2213,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -2229,1 +2228,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -2251,1 +2249,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -2268,1 +2265,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -2283,1 +2279,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1188,2 +1188,1 @@\n-  ins_encode %{\n-    assert(UsePopCountInstruction, \"unsupported\");dnl\n+  ins_encode %{dnl\n@@ -1217,1 +1216,0 @@\n-    assert(UsePopCountInstruction, \"unsupported\");\n@@ -1236,2 +1234,1 @@\n-  ins_encode %{\n-    assert(UsePopCountInstruction, \"unsupported\");dnl\n+  ins_encode %{dnl\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-import static com.sun.tools.javac.code.Flags.PREVIEW_API;\n@@ -125,1 +124,1 @@\n-     * Returns true if {@code s} is participating in the preview of {@code previewSymbol}, and\n+     * Returns true if {@code s} is deemed to participate in the preview of {@code previewSymbol}, and\n@@ -132,1 +131,1 @@\n-    public boolean isPreviewParticipating(Symbol s, Symbol previewSymbol) {\n+    public boolean participatesInPreview(Symbol s, Symbol previewSymbol) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Preview.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3603,1 +3603,1 @@\n-        if ((s.flags() & PREVIEW_API) != 0 && !preview.isPreviewParticipating(other, s)) {\n+        if ((s.flags() & PREVIEW_API) != 0 && !preview.participatesInPreview(other, s)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}