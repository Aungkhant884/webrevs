{"files":[{"patch":"@@ -265,1 +265,1 @@\n-    *     Icon icon = fsv.getSystemIcon(new File(\"application.exe\"), 64);\n+    *     Icon icon = fsv.getSystemIcon(new File(\"application.exe\"), 64, 64);\n@@ -278,4 +278,2 @@\n-    * @param size width and height of the icon in user coordinate system.\n-    * This API only supports square icons with the edge length\n-    * equals or greater than 1. Maximum size allowed is defined by the\n-    * underlying implementation.\n+    * @param width width of the icon in user coordinate system.\n+    * @param height height of the icon in user coordinate system.\n@@ -283,2 +281,2 @@\n-    * or null if invalid parameters are passed such as pointer to a\n-    * non-existing file or a size outside of supported range.\n+    * or null if invalid parameters are passed such as reference to a\n+    * non-existing file.\n@@ -290,2 +288,6 @@\n-    public Icon getSystemIcon(File f, int size) {\n-        if (f == null) {\n+    public Icon getSystemIcon(File f, int width, int height) {\n+        if (height <1 || width < 1) {\n+            throw new IllegalArgumentException(\"Icon size can not be below 1\");\n+        }\n+\n+        if (f == null || !f.exists()) {\n@@ -303,1 +305,1 @@\n-        Image img = sf.getIcon(size);\n+        Image img = sf.getIcon(width, height);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/filechooser\/FileSystemView.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -213,1 +213,2 @@\n-     * @param size size of the icon > 0 (Valid range: 1 to 256)\n+     * @param width width of the icon > 0\n+     * @param height height of the icon > 0\n@@ -216,1 +217,1 @@\n-    public Image getIcon(int size) {\n+    public Image getIcon(int width, int height) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/shell\/ShellFolder.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1117,1 +1117,2 @@\n-                            newIcon = getIcon(getLargeIcon ? LARGE_ICON_SIZE : SMALL_ICON_SIZE);\n+                            int size = getLargeIcon ? LARGE_ICON_SIZE : SMALL_ICON_SIZE;\n+                            newIcon = getIcon(size, size);\n@@ -1133,1 +1134,2 @@\n-    public Image getIcon(int size) {\n+    public Image getIcon(int width, int height) {\n+        int size = Math.max(width, height);\n@@ -1139,1 +1141,1 @@\n-                    return folder.getIcon(size);\n+                    return folder.getIcon(size, size);\n","filename":"src\/java.desktop\/windows\/classes\/sun\/awt\/shell\/Win32ShellFolder2.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n- * @requires os.family == \"windows\"\n@@ -42,1 +41,1 @@\n-        System.out.println(\"ok\");\n+        negativeTests();\n@@ -46,4 +45,29 @@\n-        String windir = System.getenv(\"windir\");\n-        testSystemIcon(new File(windir));\n-        testSystemIcon(new File(windir + \"\/explorer.exe\"));\n-        return;\n+        String os = System.getProperty(\"os.name\");\n+        if (os.startsWith(\"Windows\")) {\n+            String windir = System.getenv(\"windir\");\n+            testSystemIcon(new File(windir), true);\n+            testSystemIcon(new File(windir + \"\/explorer.exe\"),\n+                    true);\n+        } else {\n+            String homedir = System.getProperty(\"user.home\");\n+            testSystemIcon(new File(homedir), false);\n+        }\n+    }\n+\n+    static void negativeTests() {\n+        ImageIcon icon;\n+        boolean gotException = false;\n+        try {\n+            icon = (ImageIcon) fsv.getSystemIcon(new File(\".\"), -1, 16);\n+        } catch (IllegalArgumentException iae) {\n+            gotException = true;\n+        }\n+        if (!gotException) {\n+            throw new RuntimeException(\"Negative size icon should throw invalid argument exception\");\n+        }\n+\n+        icon = (ImageIcon) fsv.getSystemIcon(new File(\"thereisdefinitelynosuchfile.why\"),\n+                16, 16);\n+        if (icon != null) {\n+            throw new RuntimeException(\"Icons for files with invalid names should be null\");\n+        }\n@@ -52,1 +76,1 @@\n-    static void testSystemIcon(File file) {\n+    static void testSystemIcon(File file, boolean implComplete) {\n@@ -55,1 +79,1 @@\n-            ImageIcon icon = (ImageIcon) fsv.getSystemIcon(file, size);\n+            ImageIcon icon = (ImageIcon) fsv.getSystemIcon(file, size, size);\n@@ -65,1 +89,1 @@\n-            if (icon.getIconWidth() != size) {\n+            if (implComplete && icon.getIconWidth() != size) {\n@@ -77,1 +101,3 @@\n-                throw new RuntimeException(\"icon is supposed to be multi-resolution but it is not\");\n+                if (implComplete) {\n+                    throw new RuntimeException(\"icon is supposed to be multi-resolution but it is not\");\n+                }\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileSystemView\/SystemIconTest.java","additions":36,"deletions":10,"binary":false,"changes":46,"status":"modified"}]}