{"files":[{"patch":"@@ -1739,1 +1739,1 @@\n-  bool moved_to_inner_loop(Node* n, Node* region, Node* x);\n+  bool can_move_to_inner_loop(Node* n, Node* region, Node* x);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-               moved_to_inner_loop(n, region, x)) {\n+               n->is_Load() && can_move_to_inner_loop(n, region, x)) {\n@@ -231,2 +231,4 @@\n-\/\/ Check if node 'x' moved to an inner loop relative to node 'n'\n-bool PhaseIdealLoop::moved_to_inner_loop(Node* n, Node* region, Node* x) {\n+\/\/ Test whether node 'x' can move into an inner loop relative to node 'n'.\n+\/\/ Note: The test is not exact. Returns true if the clone COULD end up in an inner loop,\n+\/\/ BUT it can also return true and the clone is in the outer loop\n+bool PhaseIdealLoop::can_move_to_inner_loop(Node* n, Node* region, Node* x) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}