{"files":[{"patch":"@@ -101,1 +101,1 @@\n-            int byteSize = arr.length * Unsafe.ARRAY_BYTE_INDEX_SCALE;\n+            long byteSize = (long)arr.length * Unsafe.ARRAY_BYTE_INDEX_SCALE;\n@@ -125,1 +125,1 @@\n-            int byteSize = arr.length * Unsafe.ARRAY_CHAR_INDEX_SCALE;\n+            long byteSize = (long)arr.length * Unsafe.ARRAY_CHAR_INDEX_SCALE;\n@@ -149,1 +149,1 @@\n-            int byteSize = arr.length * Unsafe.ARRAY_SHORT_INDEX_SCALE;\n+            long byteSize = (long)arr.length * Unsafe.ARRAY_SHORT_INDEX_SCALE;\n@@ -173,1 +173,1 @@\n-            int byteSize = arr.length * Unsafe.ARRAY_INT_INDEX_SCALE;\n+            long byteSize = (long)arr.length * Unsafe.ARRAY_INT_INDEX_SCALE;\n@@ -197,1 +197,1 @@\n-            int byteSize = arr.length * Unsafe.ARRAY_LONG_INDEX_SCALE;\n+            long byteSize = (long)arr.length * Unsafe.ARRAY_LONG_INDEX_SCALE;\n@@ -221,1 +221,1 @@\n-            int byteSize = arr.length * Unsafe.ARRAY_FLOAT_INDEX_SCALE;\n+            long byteSize = (long)arr.length * Unsafe.ARRAY_FLOAT_INDEX_SCALE;\n@@ -245,1 +245,1 @@\n-            int byteSize = arr.length * Unsafe.ARRAY_DOUBLE_INDEX_SCALE;\n+            long byteSize = (long)arr.length * Unsafe.ARRAY_DOUBLE_INDEX_SCALE;\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @run testng\/othervm -XX:MaxDirectMemorySize=1M TestSegments\n+ * @run testng\/othervm -Xmx4G -XX:MaxDirectMemorySize=1M TestSegments\n@@ -50,0 +50,2 @@\n+import java.util.function.Function;\n+import java.util.function.IntFunction;\n@@ -280,0 +282,7 @@\n+    @Test(dataProvider = \"heapFactories\")\n+    public void testBigHeapSegments(IntFunction<MemorySegment> heapSegmentFactory, int factor) {\n+        int bigSize = (Integer.MAX_VALUE \/ factor) + 1;\n+        MemorySegment segment = heapSegmentFactory.apply(bigSize);\n+        assertTrue(segment.byteSize() > 0);\n+    }\n+\n@@ -448,0 +457,12 @@\n+\n+    @DataProvider(name = \"heapFactories\")\n+    public Object[][] heapFactories() {\n+        return new Object[][] {\n+                { (IntFunction<MemorySegment>) size -> MemorySegment.ofArray(new char[size]), 2 },\n+                { (IntFunction<MemorySegment>) size -> MemorySegment.ofArray(new short[size]), 2 },\n+                { (IntFunction<MemorySegment>) size -> MemorySegment.ofArray(new int[size]), 4 },\n+                { (IntFunction<MemorySegment>) size -> MemorySegment.ofArray(new float[size]), 4 },\n+                { (IntFunction<MemorySegment>) size -> MemorySegment.ofArray(new long[size]), 8 },\n+                { (IntFunction<MemorySegment>) size -> MemorySegment.ofArray(new double[size]), 8 }\n+        };\n+    }\n","filename":"test\/jdk\/java\/foreign\/TestSegments.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"}]}