{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -656,1 +656,1 @@\n-     * finer-grained locking scheme such that multiple threads may load classes\n+     * finer-grained locking schemes such that multiple threads may load classes\n@@ -658,3 +658,4 @@\n-     * the {@code ClassLoader} object is held during the class loading operations.\n-     * Class loaders with non-hierarchical delegation should be {@linkplain\n-     * #registerAsParallelCapable() registered as parallel capable} to prevent deadlocks.\n+     * the {@code ClassLoader} object is synchronized on during the class loading\n+     * operations.  Class loaders with non-hierarchical delegation should be\n+     * {@linkplain #registerAsParallelCapable() registered as parallel capable}\n+     * to prevent deadlocks.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}