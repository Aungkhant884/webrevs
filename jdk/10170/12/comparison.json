{"files":[{"patch":"@@ -2,1 +2,0 @@\n-CTL_OpenGraphAction=View graph\n@@ -9,1 +8,0 @@\n-CTL_PropertiesAction=Open Properties Window \n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/resources\/com\/sun\/hotspot\/igv\/coordinator\/actions\/Bundle.properties","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+import com.sun.hotspot.igv.data.ChangedListener;\n@@ -35,1 +36,3 @@\n-public abstract class ContextAction<T> extends CallableSystemAction implements LookupListener, ContextAwareAction {\n+public abstract class ContextAction<T> extends CallableSystemAction implements LookupListener, ContextAwareAction, ChangedListener<T> {\n+\n+    private T t;\n@@ -37,1 +40,0 @@\n-    private Lookup context = null;\n@@ -49,1 +51,0 @@\n-        this.context = context;\n@@ -69,7 +70,1 @@\n-        EventQueue.invokeLater(new Runnable() {\n-\n-            @Override\n-            public void run() {\n-                performAction(t);\n-            }\n-        });\n+        EventQueue.invokeLater(() -> performAction(t));\n@@ -84,0 +79,19 @@\n+        if (this.t != t) {\n+            if (this.t != null) {\n+                removeContextListener(this.t);\n+            }\n+            this.t = t;\n+            if (this.t != null) {\n+                addContextListener(this.t);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public void changed(T t) {\n+        update(t);\n+    }\n+\n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return HelpCtx.DEFAULT_HELP;\n@@ -86,2 +100,3 @@\n-    public boolean isEnabled(T context) {\n-        return true;\n+    @Override\n+    protected boolean asynchronous() {\n+        return false;\n@@ -90,0 +105,2 @@\n+    public abstract boolean isEnabled(T context);\n+\n@@ -92,1 +109,5 @@\n-    public abstract void performAction(T context);\n+    public abstract void performAction(T t);\n+\n+    public abstract void addContextListener(T t);\n+\n+    public abstract void removeContextListener(T t);\n","filename":"src\/utils\/IdealGraphVisualizer\/Util\/src\/main\/java\/com\/sun\/hotspot\/igv\/util\/ContextAction.java","additions":35,"deletions":14,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-                                comp.getDiagramModel().selectGraph(theGraph);\n+                                comp.getModel().selectGraph(theGraph);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/BlockQuickSearch.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import com.sun.hotspot.igv.util.CustomSelectAction;\n@@ -46,0 +45,1 @@\n+import com.sun.hotspot.igv.view.actions.CustomSelectAction;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -186,7 +186,1 @@\n-    public boolean getHideDuplicates() {\n-        return hideDuplicates;\n-    }\n-\n-    public void setHideDuplicates(boolean b) {\n-        System.err.println(\"setHideDuplicates: \" + b);\n-        hideDuplicates = b;\n+    public void setHideDuplicates(boolean hideDuplicates) {\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -48,0 +48,2 @@\n+    DiagramViewModel getModel();\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewer.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        return editor.getDiagramModel().getGraphToView();\n+        return editor.getModel().getGraphToView();\n@@ -60,1 +60,1 @@\n-        return editor.getDiagramModel().getGraphsBackward();\n+        return editor.getModel().getGraphsBackward();\n@@ -65,1 +65,1 @@\n-        return editor.getDiagramModel().getGraphsForward();\n+        return editor.getModel().getGraphsForward();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorInputGraphProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,6 +26,0 @@\n-import com.lowagie.text.Document;\n-import com.lowagie.text.Rectangle;\n-import com.lowagie.text.pdf.PdfContentByte;\n-import com.lowagie.text.pdf.PdfGraphics2D;\n-import com.lowagie.text.pdf.PdfTemplate;\n-import com.lowagie.text.pdf.PdfWriter;\n@@ -46,8 +40,0 @@\n-import java.awt.event.ActionEvent;\n-import java.awt.event.HierarchyBoundsListener;\n-import java.awt.event.HierarchyEvent;\n-import java.awt.event.KeyEvent;\n-import java.beans.PropertyChangeEvent;\n-import java.beans.PropertyChangeListener;\n-import java.io.*;\n-import java.nio.charset.StandardCharsets;\n@@ -58,5 +44,0 @@\n-import org.apache.batik.dom.GenericDOMImplementation;\n-import org.apache.batik.svggen.SVGGeneratorContext;\n-import org.apache.batik.svggen.SVGGraphics2D;\n-import org.openide.DialogDisplayer;\n-import org.openide.NotifyDescriptor;\n@@ -76,1 +57,0 @@\n-import org.w3c.dom.DOMImplementation;\n@@ -83,22 +63,8 @@\n-public final class EditorTopComponent extends TopComponent implements PropertyChangeListener {\n-\n-    private DiagramViewer scene;\n-    private InstanceContent content;\n-    private InstanceContent graphContent;\n-    private EnableSeaLayoutAction seaLayoutAction;\n-    private EnableBlockLayoutAction blockLayoutAction;\n-    private EnableCFGLayoutAction cfgLayoutAction;\n-    private OverviewAction overviewAction;\n-    private HideDuplicatesAction hideDuplicatesAction;\n-    private PredSuccAction predSuccAction;\n-    private ShowEmptyBlocksAction showEmptyBlocksAction;\n-    private SelectionModeAction selectionModeAction;\n-    private boolean notFirstTime;\n-    private JComponent satelliteComponent;\n-    private JPanel centerPanel;\n-    private CardLayout cardLayout;\n-    private RangeSlider rangeSlider;\n-    private JToggleButton overviewButton;\n-    private JToggleButton hideDuplicatesButton;\n-    private JPanel topPanel;\n-    private Toolbar quickSearchToolbar;\n+public final class EditorTopComponent extends TopComponent {\n+\n+    private final DiagramViewer scene;\n+    private final InstanceContent graphContent;\n+    private final JComponent satelliteComponent;\n+    private final JPanel centerPanel;\n+    private final CardLayout cardLayout;\n+    private final Toolbar quickSearchToolbar;\n@@ -109,2 +75,0 @@\n-    private DiagramViewModel rangeSliderModel;\n-    private ExportCookie exportCookie = new ExportCookie() {\n@@ -112,16 +76,1 @@\n-        @Override\n-        public void export(File f) {\n-\n-            String lcFileName = f.getName().toLowerCase();\n-            if (lcFileName.endsWith(\".pdf\")) {\n-                exportToPDF(scene, f);\n-            } else if (lcFileName.endsWith(\".svg\")) {\n-                exportToSVG(scene, f);\n-            } else {\n-                NotifyDescriptor message = new NotifyDescriptor.Message(\"Unknown image file extension: expected either '.pdf' or '.svg'\", NotifyDescriptor.ERROR_MESSAGE);\n-                DialogDisplayer.getDefault().notifyLater(message);\n-            }\n-        }\n-    };\n-\n-    private DiagramProvider diagramProvider = new DiagramProvider() {\n+    private final DiagramProvider diagramProvider = new DiagramProvider() {\n@@ -140,1 +89,1 @@\n-    private ChangedEvent<DiagramProvider> diagramChangedEvent = new ChangedEvent<>(diagramProvider);\n+    private final ChangedEvent<DiagramProvider> diagramChangedEvent = new ChangedEvent<>(diagramProvider);\n@@ -149,0 +98,1 @@\n+        initComponents();\n@@ -153,2 +103,2 @@\n-        FilterChain filterChain = null;\n-        FilterChain sequence = null;\n+        FilterChain filterChain;\n+        FilterChain sequence;\n@@ -171,1 +121,1 @@\n-                ShrinkDiffAction.get(ShrinkDiffAction.class),\n+                ReduceDiffAction.get(ReduceDiffAction.class),\n@@ -175,1 +125,1 @@\n-                ShowAllAction.get(HideAction.class),\n+                HideAction.get(HideAction.class),\n@@ -182,1 +132,0 @@\n-\n@@ -185,1 +134,1 @@\n-                ShowAllAction.get(HideAction.class),\n+                HideAction.get(HideAction.class),\n@@ -191,1 +140,1 @@\n-        initComponents();\n+        JPanel container = new JPanel(new BorderLayout());\n@@ -193,13 +142,6 @@\n-        ToolbarPool.getDefault().setPreferredIconSize(16);\n-        Toolbar toolBar = new Toolbar();\n-        toolBar.setBorder((Border) UIManager.get(\"Nb.Editor.Toolbar.border\")); \/\/NOI18N\n-        toolBar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n-\n-        JPanel container = new JPanel();\n-        this.add(container, BorderLayout.NORTH);\n-        container.setLayout(new BorderLayout());\n-        container.add(BorderLayout.NORTH, toolBar);\n-\n-        rangeSliderModel = new DiagramViewModel(diagram.getGraph().getGroup(), filterChain, sequence);\n-        rangeSlider = new RangeSlider();\n-        rangeSlider.setModel(rangeSliderModel);\n+        DiagramViewModel diagramViewModel = new DiagramViewModel(diagram.getGraph().getGroup(), filterChain, sequence);\n+        RangeSlider rangeSlider = new RangeSlider();\n+        rangeSlider.setModel(diagramViewModel);\n+        if (diagram.getGraph().getGroup().getGraphsCount() == 1) {\n+            rangeSlider.setVisible(false);\n+        }\n@@ -208,0 +150,1 @@\n+        this.add(container, BorderLayout.NORTH);\n@@ -209,2 +152,1 @@\n-        scene = new DiagramScene(actions, actionsWithSelection, rangeSliderModel);\n-        content = new InstanceContent();\n+        scene = new DiagramScene(actions, actionsWithSelection, diagramViewModel);\n@@ -212,3 +154,3 @@\n-        this.associateLookup(new ProxyLookup(new Lookup[]{scene.getLookup(), new AbstractLookup(graphContent), new AbstractLookup(content)}));\n-        content.add(exportCookie);\n-        content.add(rangeSliderModel);\n+        InstanceContent content = new InstanceContent();\n+        content.add(new ExportGraph());\n+        content.add(diagramViewModel);\n@@ -216,0 +158,1 @@\n+        this.associateLookup(new ProxyLookup(scene.getLookup(), new AbstractLookup(graphContent), new AbstractLookup(content)));\n@@ -217,9 +160,8 @@\n-        rangeSliderModel.getDiagramChangedEvent().addListener(diagramChangedListener);\n-        rangeSliderModel.selectGraph(diagram.getGraph());\n-        rangeSliderModel.getViewPropertiesChangedEvent().addListener(new ChangedListener<DiagramViewModel>() {\n-                @Override\n-                public void changed(DiagramViewModel source) {\n-                    hideDuplicatesButton.setSelected(getModel().getHideDuplicates());\n-                    hideDuplicatesAction.setState(getModel().getHideDuplicates());\n-                }\n-            });\n+        diagramViewModel.getDiagramChangedEvent().addListener(source -> {\n+            updateDisplayName();\n+            Collection<Object> list = new ArrayList<>();\n+            list.add(new EditorInputGraphProvider(EditorTopComponent.this));\n+            graphContent.set(list, null);\n+            diagramProvider.getChangedEvent().fire();\n+        });\n+        diagramViewModel.selectGraph(diagram.getGraph());\n@@ -234,0 +176,15 @@\n+        cardLayout = new CardLayout();\n+        centerPanel = new JPanel();\n+        centerPanel.setLayout(cardLayout);\n+        centerPanel.setBackground(Color.WHITE);\n+        satelliteComponent = scene.createSatelliteView();\n+        satelliteComponent.setSize(200, 200);\n+        centerPanel.add(SCENE_STRING, scene.getComponent());\n+        centerPanel.add(SATELLITE_STRING, satelliteComponent);\n+        this.add(centerPanel, BorderLayout.CENTER);\n+\n+        ToolbarPool.getDefault().setPreferredIconSize(16);\n+        Toolbar toolBar = new Toolbar();\n+        toolBar.setBorder((Border) UIManager.get(\"Nb.Editor.Toolbar.border\")); \/\/NOI18N\n+        toolBar.setMinimumSize(new Dimension(0,0)); \/\/ MacOS BUG with ToolbarWithOverflow\n+\n@@ -237,1 +194,1 @@\n-        toolBar.add(ShrinkDiffAction.get(ShrinkDiffAction.class));\n+        toolBar.add(ReduceDiffAction.get(ReduceDiffAction.class));\n@@ -241,1 +198,1 @@\n-        toolBar.add(ShowAllAction.get(HideAction.class));\n+        toolBar.add(HideAction.get(HideAction.class));\n@@ -244,2 +201,2 @@\n-        toolBar.add(ShowAllAction.get(ZoomOutAction.class));\n-        toolBar.add(ShowAllAction.get(ZoomInAction.class));\n+        toolBar.add(ZoomOutAction.get(ZoomOutAction.class));\n+        toolBar.add(ZoomInAction.get(ZoomInAction.class));\n@@ -250,20 +207,15 @@\n-        seaLayoutAction = new EnableSeaLayoutAction();\n-        JToggleButton button = new JToggleButton(seaLayoutAction);\n-        button.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.SEA_OF_NODES);\n-        layoutButtons.add(button);\n-        toolBar.add(button);\n-        seaLayoutAction.addPropertyChangeListener(this);\n-\n-        blockLayoutAction = new EnableBlockLayoutAction();\n-        button = new JToggleButton(blockLayoutAction);\n-        button.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CLUSTERED_SEA_OF_NODES);\n-        layoutButtons.add(button);\n-        toolBar.add(button);\n-        blockLayoutAction.addPropertyChangeListener(this);\n-\n-        cfgLayoutAction = new EnableCFGLayoutAction();\n-        button = new JToggleButton(cfgLayoutAction);\n-        button.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH);\n-        layoutButtons.add(button);\n-        toolBar.add(button);\n-        cfgLayoutAction.addPropertyChangeListener(this);\n+        JToggleButton seaLayoutButton = new JToggleButton(new EnableSeaLayoutAction(this));\n+        seaLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.SEA_OF_NODES);\n+        layoutButtons.add(seaLayoutButton);\n+        toolBar.add(seaLayoutButton);\n+\n+        JToggleButton blockLayoutButton = new JToggleButton(new EnableBlockLayoutAction(this));\n+        blockLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CLUSTERED_SEA_OF_NODES);\n+        layoutButtons.add(blockLayoutButton);\n+        toolBar.add(blockLayoutButton);\n+\n+        EnableCFGLayoutAction cfgLayoutAction = new EnableCFGLayoutAction(this);\n+        JToggleButton cfgLayoutButton = new JToggleButton(cfgLayoutAction);\n+        cfgLayoutButton.setSelected(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH);\n+        layoutButtons.add(cfgLayoutButton);\n+        toolBar.add(cfgLayoutButton);\n@@ -272,24 +224,4 @@\n-        overviewAction = new OverviewAction();\n-        overviewButton = new JToggleButton(overviewAction);\n-        overviewButton.setSelected(false);\n-        toolBar.add(overviewButton);\n-        overviewAction.addPropertyChangeListener(this);\n-\n-        predSuccAction = new PredSuccAction();\n-        button = new JToggleButton(predSuccAction);\n-        button.setSelected(true);\n-        toolBar.add(button);\n-        predSuccAction.addPropertyChangeListener(this);\n-\n-        showEmptyBlocksAction = new ShowEmptyBlocksAction();\n-        button = new JToggleButton(showEmptyBlocksAction);\n-        button.setSelected(true);\n-        button.setEnabled(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH);\n-        toolBar.add(button);\n-        showEmptyBlocksAction.addPropertyChangeListener(this);\n-\n-        hideDuplicatesAction = new HideDuplicatesAction();\n-        hideDuplicatesButton = new JToggleButton(hideDuplicatesAction);\n-        hideDuplicatesButton.setSelected(false);\n-        toolBar.add(hideDuplicatesButton);\n-        hideDuplicatesAction.addPropertyChangeListener(this);\n+        toolBar.add(new JToggleButton(new OverviewAction(centerPanel)));\n+        toolBar.add(new JToggleButton(new PredSuccAction()));\n+        toolBar.add(new JToggleButton(new ShowEmptyBlocksAction(cfgLayoutAction, true)));\n+        toolBar.add(new JToggleButton(new HideDuplicatesAction()));\n@@ -306,5 +238,1 @@\n-        selectionModeAction = new SelectionModeAction();\n-        button = new JToggleButton(selectionModeAction);\n-        button.setSelected(false);\n-        toolBar.add(button);\n-        selectionModeAction.addPropertyChangeListener(this);\n+        toolBar.add(new JToggleButton(new SelectionModeAction()));\n@@ -324,1 +252,1 @@\n-        topPanel = new JPanel();\n+        JPanel topPanel = new JPanel();\n@@ -330,56 +258,0 @@\n-        centerPanel = new JPanel();\n-        centerPanel.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(\n-                KeyStroke.getKeyStroke(KeyEvent.VK_S, 0, false), \"showSatellite\");\n-        centerPanel.getActionMap().put(\"showSatellite\",\n-                new AbstractAction(\"showSatellite\") {\n-                    @Override public void actionPerformed(ActionEvent e) {\n-                        EditorTopComponent.this.overviewButton.setSelected(true);\n-                        EditorTopComponent.this.overviewAction.setState(true);\n-                    }\n-                });\n-        centerPanel.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(\n-                KeyStroke.getKeyStroke(KeyEvent.VK_S, 0, true), \"showScene\");\n-        centerPanel.getActionMap().put(\"showScene\",\n-                new AbstractAction(\"showScene\") {\n-                    @Override\n-                    public void actionPerformed(ActionEvent e) {\n-                        EditorTopComponent.this.overviewButton.setSelected(false);\n-                        EditorTopComponent.this.overviewAction.setState(false);\n-                    }\n-                });\n-\n-\n-        this.add(centerPanel, BorderLayout.CENTER);\n-        cardLayout = new CardLayout();\n-        centerPanel.setLayout(cardLayout);\n-        centerPanel.add(SCENE_STRING, scene.getComponent());\n-        centerPanel.setBackground(Color.WHITE);\n-        satelliteComponent = scene.createSatelliteView();\n-        satelliteComponent.setSize(200, 200);\n-        centerPanel.add(SATELLITE_STRING, satelliteComponent);\n-\n-        scene.getComponent().addHierarchyBoundsListener(new HierarchyBoundsListener() {\n-\n-            @Override\n-            public void ancestorMoved(HierarchyEvent e) {\n-            }\n-\n-            @Override\n-            public void ancestorResized(HierarchyEvent e) {\n-                if (!notFirstTime && scene.getComponent().getBounds().width > 0) {\n-                    notFirstTime = true;\n-                    SwingUtilities.invokeLater(new Runnable() {\n-\n-                        @Override\n-                        public void run() {\n-                            EditorTopComponent.this.scene.initialize();\n-                        }\n-                    });\n-                }\n-            }\n-        });\n-\n-        if (diagram.getGraph().getGroup().getGraphsCount() == 1) {\n-            rangeSlider.setVisible(false);\n-        }\n-\n@@ -389,2 +261,2 @@\n-    public DiagramViewModel getDiagramModel() {\n-        return rangeSliderModel;\n+    public DiagramViewModel getModel() {\n+        return scene.getModel();\n@@ -393,3 +265,3 @@\n-    private void showSatellite() {\n-        cardLayout.show(centerPanel, SATELLITE_STRING);\n-        satelliteComponent.requestFocus();\n+    private Diagram getDiagram() {\n+        return getModel().getDiagramToView();\n+    }\n@@ -397,0 +269,6 @@\n+    public void setSelectionMode(boolean enable) {\n+        if (enable) {\n+            scene.setInteractionMode(DiagramViewer.InteractionMode.SELECTION);\n+        } else {\n+            scene.setInteractionMode(DiagramViewer.InteractionMode.PANNING);\n+        }\n@@ -399,3 +277,8 @@\n-    private void showScene() {\n-        cardLayout.show(centerPanel, SCENE_STRING);\n-        scene.getComponent().requestFocus();\n+    public void showSatellite(boolean b) {\n+        if (b) {\n+            cardLayout.show(centerPanel, SATELLITE_STRING);\n+            satelliteComponent.requestFocus();\n+        } else {\n+            cardLayout.show(centerPanel, SCENE_STRING);\n+            scene.getComponent().requestFocus();\n+        }\n@@ -412,14 +295,0 @@\n-    public void showPrevDiagram() {\n-        int fp = getModel().getFirstPosition();\n-        int sp = getModel().getSecondPosition();\n-        if (fp != 0) {\n-            fp--;\n-            sp--;\n-            getModel().setPositions(fp, sp);\n-        }\n-    }\n-\n-    public DiagramViewModel getModel() {\n-        return rangeSliderModel;\n-    }\n-\n@@ -431,37 +300,5 @@\n-        return (EditorTopComponent) EditorTopComponent.getRegistry().getActivated();\n-    }\n-\n-    \/** This method is called from within the constructor to\n-     * initialize the form.\n-     * WARNING: Do NOT modify this code. The content of this method is\n-     * always regenerated by the Form Editor.\n-     *\/\n-        \/\/ <editor-fold defaultstate=\"collapsed\" desc=\" Generated Code \">\/\/GEN-BEGIN:initComponents\n-        private void initComponents() {\n-                jCheckBox1 = new javax.swing.JCheckBox();\n-\n-                org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, \"jCheckBox1\");\n-                jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));\n-                jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));\n-\n-                setLayout(new java.awt.BorderLayout());\n-\n-        }\/\/ <\/editor-fold>\/\/GEN-END:initComponents\n-        \/\/ Variables declaration - do not modify\/\/GEN-BEGIN:variables\n-        private javax.swing.JCheckBox jCheckBox1;\n-        \/\/ End of variables declaration\/\/GEN-END:variables\n-\n-    @Override\n-    public int getPersistenceType() {\n-        return TopComponent.PERSISTENCE_NEVER;\n-    }\n-\n-    @Override\n-    public void componentClosed() {\n-        super.componentClosed();\n-        rangeSliderModel.close();\n-    }\n-\n-    @Override\n-    protected String preferredID() {\n-        return PREFERRED_ID;\n+        TopComponent topComponent = getRegistry().getActivated();\n+        if (topComponent instanceof EditorTopComponent) {\n+            return (EditorTopComponent) topComponent;\n+        }\n+        return null;\n@@ -478,17 +315,0 @@\n-    private ChangedListener<DiagramViewModel> diagramChangedListener = new ChangedListener<DiagramViewModel>() {\n-\n-        @Override\n-        public void changed(DiagramViewModel source) {\n-            updateDisplayName();\n-            Collection<Object> list = new ArrayList<>();\n-            list.add(new EditorInputGraphProvider(EditorTopComponent.this));\n-            graphContent.set(list, null);\n-            diagramProvider.getChangedEvent().fire();\n-        }\n-\n-    };\n-\n-    public boolean showPredSucc() {\n-        return (Boolean) predSuccAction.getValue(PredSuccAction.STATE);\n-    }\n-\n@@ -497,1 +317,1 @@\n-        Properties.PropertySelector<Figure> selector = new Properties.PropertySelector<>(getModel().getDiagramToView().getFigures());\n+        Properties.PropertySelector<Figure> selector = new Properties.PropertySelector<>(getDiagram().getFigures());\n@@ -508,1 +328,0 @@\n-\n@@ -514,2 +333,1 @@\n-\n-        for (Figure f : getModel().getDiagramToView().getFigures()) {\n+        for (Figure f : getDiagram().getFigures()) {\n@@ -523,1 +341,0 @@\n-\n@@ -529,1 +346,1 @@\n-        for (Figure f : getModel().getDiagramToView().getFigures()) {\n+        for (Figure f : getDiagram().getFigures()) {\n@@ -537,44 +354,2 @@\n-    @Override\n-    public void propertyChange(PropertyChangeEvent evt) {\n-        if (evt.getSource() == this.predSuccAction) {\n-            boolean b = (Boolean) predSuccAction.getValue(PredSuccAction.STATE);\n-            this.getModel().setShowNodeHull(b);\n-        } else if (evt.getSource() == this.showEmptyBlocksAction) {\n-            boolean b = (Boolean) showEmptyBlocksAction.getValue(ShowEmptyBlocksAction.STATE);\n-            this.getModel().setShowEmptyBlocks(b);\n-        } else if (evt.getSource() == this.overviewAction) {\n-            boolean b = (Boolean) overviewAction.getValue(OverviewAction.STATE);\n-            if (b) {\n-                showSatellite();\n-            } else {\n-                showScene();\n-            }\n-        } else if (evt.getSource() == this.seaLayoutAction) {\n-            boolean b = seaLayoutAction.isSelected();\n-            this.getModel().setShowSea(b);\n-            this.showEmptyBlocksAction.setEnabled(false);\n-        } else if (evt.getSource() == this.blockLayoutAction) {\n-            boolean b = blockLayoutAction.isSelected();\n-            this.getModel().setShowBlocks(b);\n-            this.showEmptyBlocksAction.setEnabled(false);\n-        } else if (evt.getSource() == this.cfgLayoutAction) {\n-            boolean b = cfgLayoutAction.isSelected();\n-            this.getModel().setShowCFG(b);\n-            this.showEmptyBlocksAction.setEnabled(true);\n-        } else if (evt.getSource() == this.hideDuplicatesAction) {\n-            boolean b = (Boolean) hideDuplicatesAction.getValue(HideDuplicatesAction.STATE);\n-            this.getModel().setHideDuplicates(b);\n-        } else if (evt.getSource() == this.selectionModeAction) {\n-            boolean b = (Boolean) selectionModeAction.getValue(SelectionModeAction.STATE);\n-            if (b) {\n-                scene.setInteractionMode(DiagramViewer.InteractionMode.SELECTION);\n-            } else {\n-                scene.setInteractionMode(DiagramViewer.InteractionMode.PANNING);\n-            }\n-        } else {\n-            assert false : \"Unknown event source\";\n-        }\n-    }\n-\n-    public void extract() {\n-        getModel().showOnly(getModel().getSelectedNodes());\n+    public Rectangle getSceneBounds() {\n+        return scene.getBounds();\n@@ -583,5 +358,2 @@\n-    public void hideNodes() {\n-        Set<Integer> selectedNodes = this.getModel().getSelectedNodes();\n-        HashSet<Integer> nodes = new HashSet<>(getModel().getHiddenNodes());\n-        nodes.addAll(selectedNodes);\n-        this.getModel().showNot(nodes);\n+    public void paintScene(Graphics2D generator) {\n+        scene.paint(generator);\n@@ -590,23 +362,3 @@\n-    public void expandPredecessors() {\n-        Set<Figure> oldSelection = getModel().getSelectedFigures();\n-        Set<Figure> figures = new HashSet<>();\n-\n-        for (Figure f : this.getDiagramModel().getDiagramToView().getFigures()) {\n-            boolean ok = false;\n-            if (oldSelection.contains(f)) {\n-                ok = true;\n-            } else {\n-                for (Figure pred : f.getSuccessors()) {\n-                    if (oldSelection.contains(pred)) {\n-                        ok = true;\n-                        break;\n-                    }\n-                }\n-            }\n-\n-            if (ok) {\n-                figures.add(f);\n-            }\n-        }\n-\n-        getModel().showAll(figures);\n+    @Override\n+    public int getPersistenceType() {\n+        return TopComponent.PERSISTENCE_NEVER;\n@@ -615,23 +367,3 @@\n-    public void expandSuccessors() {\n-        Set<Figure> oldSelection = getModel().getSelectedFigures();\n-        Set<Figure> figures = new HashSet<>();\n-\n-        for (Figure f : this.getDiagramModel().getDiagramToView().getFigures()) {\n-            boolean ok = false;\n-            if (oldSelection.contains(f)) {\n-                ok = true;\n-            } else {\n-                for (Figure succ : f.getPredecessors()) {\n-                    if (oldSelection.contains(succ)) {\n-                        ok = true;\n-                        break;\n-                    }\n-                }\n-            }\n-\n-            if (ok) {\n-                figures.add(f);\n-            }\n-        }\n-\n-        getModel().showAll(figures);\n+    @Override\n+    protected String preferredID() {\n+        return PREFERRED_ID;\n@@ -640,3 +372,2 @@\n-    public void showAll() {\n-        getModel().showNot(new HashSet<Integer>());\n-    }\n+    @Override\n+    public void componentOpened() { }\n@@ -644,2 +375,3 @@\n-    public Diagram getDiagram() {\n-        return getDiagramModel().getDiagramToView();\n+    @Override\n+    public void componentClosed() {\n+        getModel().close();\n@@ -652,1 +384,0 @@\n-\n@@ -679,4 +410,8 @@\n-    @Override\n-    protected Object writeReplace() throws ObjectStreamException {\n-        throw new NotSerializableException();\n-    }\n+    \/** This method is called from within the constructor to\n+     * initialize the form.\n+     * WARNING: Do NOT modify this code. The content of this method is\n+     * always regenerated by the Form Editor.\n+     *\/\n+    \/\/ <editor-fold defaultstate=\"collapsed\" desc=\" Generated Code \">\/\/GEN-BEGIN:initComponents\n+    private void initComponents() {\n+        jCheckBox1 = new javax.swing.JCheckBox();\n@@ -684,26 +419,3 @@\n-    private static void exportToPDF(DiagramViewer scene, File f) {\n-        int width = scene.getBounds().width;\n-        int height = scene.getBounds().height;\n-        com.lowagie.text.Document document = new Document(new Rectangle(width, height));\n-        PdfWriter writer = null;\n-        try {\n-            writer = PdfWriter.getInstance(document, new FileOutputStream(f));\n-            writer.setCloseStream(true);\n-            document.open();\n-            PdfContentByte contentByte = writer.getDirectContent();\n-            PdfTemplate template = contentByte.createTemplate(width, height);\n-            PdfGraphics2D pdfGenerator = new PdfGraphics2D(contentByte, width, height);\n-            scene.paint(pdfGenerator);\n-            pdfGenerator.dispose();\n-            contentByte.addTemplate(template, 0, 0);\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-        } finally {\n-            if (document.isOpen()) {\n-                document.close();\n-            }\n-            if (writer != null) {\n-                writer.close();\n-            }\n-        }\n-    }\n+        org.openide.awt.Mnemonics.setLocalizedText(jCheckBox1, \"jCheckBox1\");\n+        jCheckBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));\n+        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));\n@@ -711,14 +423,6 @@\n-    private static void exportToSVG(DiagramViewer scene, File f) {\n-        DOMImplementation dom = GenericDOMImplementation.getDOMImplementation();\n-        org.w3c.dom.Document document = dom.createDocument(\"http:\/\/www.w3.org\/2000\/svg\", \"svg\", null);\n-        SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(document);\n-        ctx.setEmbeddedFontsOn(true);\n-        SVGGraphics2D svgGenerator = new SVGGraphics2D(ctx, true);\n-        scene.paint(svgGenerator);\n-        try (FileOutputStream os = new FileOutputStream(f)) {\n-            Writer out = new OutputStreamWriter(os, StandardCharsets.UTF_8);\n-            svgGenerator.stream(out, true);\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n+        setLayout(new java.awt.BorderLayout());\n+\n+    }\/\/ <\/editor-fold>\/\/GEN-END:initComponents\n+    \/\/ Variables declaration - do not modify\/\/GEN-BEGIN:variables\n+    private javax.swing.JCheckBox jCheckBox1;\n+    \/\/ End of variables declaration\/\/GEN-END:variables\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":136,"deletions":432,"binary":false,"changes":568,"status":"modified"},{"patch":"@@ -0,0 +1,104 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package com.sun.hotspot.igv.view;\n+\n+import com.lowagie.text.Document;\n+import com.lowagie.text.Rectangle;\n+import com.lowagie.text.pdf.PdfContentByte;\n+import com.lowagie.text.pdf.PdfGraphics2D;\n+import com.lowagie.text.pdf.PdfTemplate;\n+import com.lowagie.text.pdf.PdfWriter;\n+import java.io.*;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import org.apache.batik.dom.GenericDOMImplementation;\n+import org.apache.batik.svggen.SVGGeneratorContext;\n+import org.apache.batik.svggen.SVGGraphics2D;\n+import org.openide.DialogDisplayer;\n+import org.openide.NotifyDescriptor;\n+import org.w3c.dom.DOMImplementation;\n+\n+\n+public class ExportGraph implements ExportCookie {\n+\n+    @Override\n+    public void export(File f) {\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            String lcFileName = f.getName().toLowerCase();\n+            if (lcFileName.endsWith(\".pdf\")) {\n+                exportToPDF(editor, f);\n+            } else if (lcFileName.endsWith(\".svg\")) {\n+                exportToSVG(editor, f);\n+            } else {\n+                NotifyDescriptor message = new NotifyDescriptor.Message(\"Unknown image file extension: expected either '.pdf' or '.svg'\", NotifyDescriptor.ERROR_MESSAGE);\n+                DialogDisplayer.getDefault().notifyLater(message);\n+            }\n+        }\n+    }\n+\n+    private static void exportToPDF(EditorTopComponent editor, File f) {\n+        int width = editor.getSceneBounds().width;\n+        int height = editor.getSceneBounds().height;\n+        com.lowagie.text.Document document = new Document(new Rectangle(width, height));\n+        PdfWriter writer = null;\n+        try {\n+            writer = PdfWriter.getInstance(document, Files.newOutputStream(f.toPath()));\n+            writer.setCloseStream(true);\n+            document.open();\n+            PdfContentByte contentByte = writer.getDirectContent();\n+            PdfTemplate template = contentByte.createTemplate(width, height);\n+            PdfGraphics2D pdfGenerator = new PdfGraphics2D(contentByte, width, height);\n+            editor.paintScene(pdfGenerator);\n+            pdfGenerator.dispose();\n+            contentByte.addTemplate(template, 0, 0);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        } finally {\n+            if (document.isOpen()) {\n+                document.close();\n+            }\n+            if (writer != null) {\n+                writer.close();\n+            }\n+        }\n+    }\n+\n+    private static void exportToSVG(EditorTopComponent editor, File f) {\n+        DOMImplementation dom = GenericDOMImplementation.getDOMImplementation();\n+        org.w3c.dom.Document document = dom.createDocument(\"http:\/\/www.w3.org\/2000\/svg\", \"svg\", null);\n+        SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(document);\n+        ctx.setEmbeddedFontsOn(true);\n+        SVGGraphics2D svgGenerator = new SVGGraphics2D(ctx, true);\n+        editor.paintScene(svgGenerator);\n+        try (FileOutputStream os = new FileOutputStream(f)) {\n+            Writer out = new OutputStreamWriter(os, StandardCharsets.UTF_8);\n+            svgGenerator.stream(out, true);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/ExportGraph.java","additions":104,"deletions":0,"binary":false,"changes":104,"status":"added"},{"patch":"@@ -124,1 +124,1 @@\n-                                    comp.getDiagramModel().selectGraph(theGraph);\n+                                    comp.getModel().selectGraph(theGraph);\n@@ -153,1 +153,1 @@\n-                                    comp.getDiagramModel().selectGraph(theGraph);\n+                                    comp.getModel().selectGraph(theGraph);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/NodeQuickSearch.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-package com.sun.hotspot.igv.util;\n+package com.sun.hotspot.igv.view.actions;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/CustomSelectAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,5 +26,2 @@\n-import java.awt.event.ActionEvent;\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.ImageUtilities;\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import java.beans.PropertyChangeEvent;\n@@ -36,1 +33,1 @@\n-public class EnableBlockLayoutAction extends AbstractAction {\n+public class EnableBlockLayoutAction extends EnableLayoutAction {\n@@ -38,5 +35,1 @@\n-    public EnableBlockLayoutAction() {\n-        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n-        putValue(SELECTED_KEY, false);\n-        putValue(Action.SHORT_DESCRIPTION, \"Show clustered sea of nodes\");\n-    }\n+    private final EditorTopComponent editor;\n@@ -44,2 +37,2 @@\n-    public boolean isSelected() {\n-        return (Boolean)getValue(SELECTED_KEY);\n+    public EnableBlockLayoutAction(EditorTopComponent etc) {\n+        editor = etc;\n@@ -48,0 +41,1 @@\n+    @Override\n@@ -53,1 +47,2 @@\n-    public void actionPerformed(ActionEvent e) {\n+    protected String getDescription() {\n+        return \"Cluster nodes into blocks\";\n@@ -56,0 +51,4 @@\n+    @Override\n+    public void propertyChange(PropertyChangeEvent evt) {\n+        editor.getModel().setShowBlocks(this.isSelected());\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/EnableBlockLayoutAction.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -26,5 +26,2 @@\n-import java.awt.event.ActionEvent;\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.ImageUtilities;\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import java.beans.PropertyChangeEvent;\n@@ -32,1 +29,1 @@\n-public class EnableCFGLayoutAction extends AbstractAction {\n+public class EnableCFGLayoutAction extends EnableLayoutAction {\n@@ -34,5 +31,1 @@\n-    public EnableCFGLayoutAction() {\n-        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n-        putValue(SELECTED_KEY, false);\n-        putValue(Action.SHORT_DESCRIPTION, \"Show control-flow graph\");\n-    }\n+    private final EditorTopComponent editor;\n@@ -40,2 +33,2 @@\n-    public boolean isSelected() {\n-        return (Boolean)getValue(SELECTED_KEY);\n+    public EnableCFGLayoutAction(EditorTopComponent etc) {\n+        editor = etc;\n@@ -44,0 +37,1 @@\n+    @Override\n@@ -49,1 +43,7 @@\n-    public void actionPerformed(ActionEvent e) {\n+    protected String getDescription() {\n+        return \"Show control-flow graph\";\n+    }\n+\n+    @Override\n+    public void propertyChange(PropertyChangeEvent evt) {\n+        editor.getModel().setShowCFG(this.isSelected());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/EnableCFGLayoutAction.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import java.awt.event.ActionEvent;\n+import java.beans.PropertyChangeListener;\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.ImageIcon;\n+import org.openide.util.ImageUtilities;\n+\n+\n+public abstract class EnableLayoutAction extends AbstractAction implements PropertyChangeListener {\n+\n+    public EnableLayoutAction() {\n+        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n+        putValue(SELECTED_KEY, false);\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n+        this.addPropertyChangeListener(this);\n+    }\n+\n+    protected abstract String getDescription();\n+\n+    protected abstract String iconResource();\n+\n+    public boolean isSelected() {\n+        return (Boolean)getValue(SELECTED_KEY);\n+    }\n+\n+    @Override\n+    public void actionPerformed(ActionEvent e) { }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/EnableLayoutAction.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -26,5 +26,2 @@\n-import java.awt.event.ActionEvent;\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.ImageUtilities;\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import java.beans.PropertyChangeEvent;\n@@ -32,1 +29,1 @@\n-public class EnableSeaLayoutAction extends AbstractAction {\n+public class EnableSeaLayoutAction extends EnableLayoutAction {\n@@ -34,5 +31,1 @@\n-    public EnableSeaLayoutAction() {\n-        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n-        putValue(SELECTED_KEY, false);\n-        putValue(Action.SHORT_DESCRIPTION, \"Show sea of nodes\");\n-    }\n+    private final EditorTopComponent editor;\n@@ -40,2 +33,2 @@\n-    public boolean isSelected() {\n-        return (Boolean)getValue(SELECTED_KEY);\n+    public EnableSeaLayoutAction(EditorTopComponent etc) {\n+        editor = etc;\n@@ -44,0 +37,1 @@\n+    @Override\n@@ -49,1 +43,7 @@\n-    public void actionPerformed(ActionEvent e) {\n+    protected String getDescription() {\n+        return \"Show sea of nodes\";\n+    }\n+\n+    @Override\n+    public void propertyChange(PropertyChangeEvent evt) {\n+        editor.getModel().setShowSea(this.isSelected());\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/EnableSeaLayoutAction.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.graph.Figure;\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.actions.CallableSystemAction;\n+\n+\n+abstract public class ExpandAdjacentAction extends CallableSystemAction {\n+\n+    protected interface AdjacentOperator {\n+        List<Figure> get(Figure f);\n+    }\n+\n+    protected void expandFigures(AdjacentOperator adjacentOp) {\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            Set<Figure> oldSelection = editor.getModel().getSelectedFigures();\n+            Set<Figure> figures = new HashSet<>(oldSelection);\n+            for (Figure f : editor.getModel().getDiagramToView().getFigures()) {\n+                if (oldSelection.contains(f)) {\n+                    continue;\n+                }\n+\n+                boolean ok = false;\n+                for (Figure adjFig : adjacentOp.get(f)) {\n+                    if (oldSelection.contains(adjFig)) {\n+                        ok = true;\n+                        break;\n+                    }\n+                }\n+\n+                if (ok) {\n+                    figures.add(f);\n+                }\n+            }\n+\n+            editor.getModel().showAll(figures);\n+        }\n+    }\n+\n+    abstract public void performAction();\n+\n+    abstract public String getName();\n+\n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return HelpCtx.DEFAULT_HELP;\n+    }\n+\n+    @Override\n+    protected boolean asynchronous() {\n+        return false;\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandAdjacentAction.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"},{"patch":"@@ -26,2 +26,0 @@\n-import com.sun.hotspot.igv.data.ChangedListener;\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -29,3 +27,6 @@\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.*;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n@@ -33,1 +34,0 @@\n-public final class ExpandDiffAction extends ContextAction<DiagramViewModel> implements ChangedListener<DiagramViewModel> {\n@@ -35,6 +35,12 @@\n-    private DiagramViewModel model;\n-\n-    public ExpandDiffAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Expand the difference selection\");\n-        putValue(Action.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/view\/images\/expand_right.png\")));\n-    }\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.ExpandDiffAction\")\n+@ActionRegistration(displayName = \"#CTL_ExpandDiffAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 250),\n+        @ActionReference(path = \"Shortcuts\", name = \"DS-RIGHT\"),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-UP\")\n+})\n+@Messages({\n+        \"CTL_ExpandDiffAction=Expand difference selection\",\n+        \"HINT_ExpandDiffAction=Expand the difference selection\"\n+})\n+public final class ExpandDiffAction extends ModelAwareAction {\n@@ -43,2 +49,2 @@\n-    public String getName() {\n-        return NbBundle.getMessage(ExpandDiffAction.class, \"CTL_ExpandDiffAction\");\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/expand_right.png\"; \/\/ NOI18N\n@@ -48,2 +54,2 @@\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n+    public String getName() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ExpandDiffAction\");\n@@ -53,2 +59,2 @@\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ExpandDiffAction\");\n@@ -64,16 +70,0 @@\n-    @Override\n-    public void update(DiagramViewModel model) {\n-        super.update(model);\n-\n-        if (this.model != model) {\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().removeListener(this);\n-            }\n-\n-            this.model = model;\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().addListener(this);\n-            }\n-        }\n-    }\n-\n@@ -84,10 +74,0 @@\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup arg0) {\n-        return new ExpandDiffAction();\n-    }\n-\n-    @Override\n-    public void changed(DiagramViewModel source) {\n-        update(source);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandDiffAction.java","additions":24,"deletions":44,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,3 +26,1 @@\n-import com.sun.hotspot.igv.view.EditorTopComponent;\n-import org.openide.util.HelpCtx;\n-import org.openide.util.actions.CallableSystemAction;\n+import com.sun.hotspot.igv.graph.Figure;\n@@ -34,1 +32,1 @@\n-public final class ExpandPredecessorsAction extends CallableSystemAction {\n+public final class ExpandPredecessorsAction extends ExpandAdjacentAction {\n@@ -38,4 +36,1 @@\n-        EditorTopComponent editor = EditorTopComponent.getActive();\n-        if (editor != null) {\n-            editor.expandPredecessors();\n-        }\n+        expandFigures(Figure::getSuccessors);\n@@ -48,10 +43,0 @@\n-\n-    @Override\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n-    }\n-\n-    @Override\n-    protected boolean asynchronous() {\n-        return false;\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandPredecessorsAction.java","additions":4,"deletions":19,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,3 +26,1 @@\n-import com.sun.hotspot.igv.view.EditorTopComponent;\n-import org.openide.util.HelpCtx;\n-import org.openide.util.actions.CallableSystemAction;\n+import com.sun.hotspot.igv.graph.Figure;\n@@ -34,1 +32,1 @@\n-public final class ExpandSuccessorsAction extends CallableSystemAction {\n+public final class ExpandSuccessorsAction extends ExpandAdjacentAction {\n@@ -38,4 +36,1 @@\n-        EditorTopComponent editor = EditorTopComponent.getActive();\n-        if (editor != null) {\n-            editor.expandSuccessors();\n-        }\n+        expandFigures(Figure::getPredecessors);\n@@ -48,10 +43,0 @@\n-\n-    @Override\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n-    }\n-\n-    @Override\n-    protected boolean asynchronous() {\n-        return false;\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandSuccessorsAction.java","additions":4,"deletions":19,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.awt.event.InputEvent;\n-import java.awt.event.KeyEvent;\n@@ -33,1 +31,0 @@\n-import javax.swing.KeyStroke;\n@@ -35,2 +32,11 @@\n-import org.openide.util.*;\n-import org.openide.util.actions.CallableSystemAction;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.HelpCtx;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.Lookup;\n+import org.openide.util.LookupEvent;\n+import org.openide.util.LookupListener;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n@@ -38,0 +44,2 @@\n+import org.openide.util.actions.CallableSystemAction;\n+\n@@ -40,1 +48,0 @@\n- *\n@@ -43,0 +50,10 @@\n+@ActionID(category = \"File\", id = \"com.sun.hotspot.igv.view.actions.ExportAction\")\n+@ActionRegistration(displayName = \"#CTL_ExportAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/File\", position = 710),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-E\")\n+})\n+@Messages({\n+        \"CTL_ExportAction=Export current graph...\",\n+        \"HINT_ExportAction=Export current graph as image file\"\n+})\n@@ -45,1 +62,0 @@\n-    private final Lookup lookup;\n@@ -49,4 +65,3 @@\n-        putValue(Action.SHORT_DESCRIPTION, \"Export current graph as image file\");\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-E\"));\n-        lookup = Utilities.actionsGlobalContext();\n+        putValue(Action.SHORT_DESCRIPTION, NbBundle.getMessage(ExportAction.class, \"HINT_ExportAction\"));\n+        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n+        Lookup lookup = Utilities.actionsGlobalContext();\n@@ -65,1 +80,0 @@\n-\n@@ -84,1 +98,0 @@\n-\n@@ -111,1 +124,1 @@\n-        return \"com\/sun\/hotspot\/igv\/view\/images\/export.png\";\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/export.png\"; \/\/ NOI18N\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExportAction.java","additions":28,"deletions":15,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,8 +26,8 @@\n-import com.sun.hotspot.igv.view.EditorTopComponent;\n-import java.awt.Event;\n-import java.awt.event.KeyEvent;\n-import javax.swing.Action;\n-import javax.swing.KeyStroke;\n-import org.openide.util.HelpCtx;\n-import org.openide.util.actions.CallableSystemAction;\n-import org.openide.util.Utilities;\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n+\n@@ -36,1 +36,0 @@\n- *\n@@ -39,1 +38,11 @@\n-public final class ExtractAction extends CallableSystemAction {\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.ExtractAction\")\n+@ActionRegistration(displayName = \"#CTL_ExtractAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 350),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-X\")\n+})\n+@Messages({\n+        \"CTL_ExtractAction=Extract action\",\n+        \"HINT_ExtractAction=Extract current set of selected nodes\"\n+})\n+public final class ExtractAction extends ModelAwareAction {\n@@ -42,11 +51,2 @@\n-    public void performAction() {\n-        EditorTopComponent editor = EditorTopComponent.getActive();\n-        if (editor != null) {\n-            editor.extract();\n-        }\n-    }\n-\n-    public ExtractAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Extract current set of selected nodes\");\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-X\"));\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/extract.gif\"; \/\/ NOI18N\n@@ -56,2 +56,2 @@\n-    public String getName() {\n-        return \"Extract action\";\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ExtractAction\");\n@@ -61,2 +61,2 @@\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n+    public String getName() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ExtractAction\");\n@@ -66,2 +66,2 @@\n-    protected boolean asynchronous() {\n-        return false;\n+    public void performAction(DiagramViewModel model) {\n+        model.showOnly(model.getSelectedNodes());\n@@ -71,2 +71,2 @@\n-    protected String iconResource() {\n-        return \"com\/sun\/hotspot\/igv\/view\/images\/extract.gif\";\n+    public boolean isEnabled(DiagramViewModel model) {\n+        return model != null && !model.getSelectedNodes().isEmpty();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExtractAction.java","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,8 +26,10 @@\n-import com.sun.hotspot.igv.view.EditorTopComponent;\n-import java.awt.Event;\n-import java.awt.event.KeyEvent;\n-import javax.swing.Action;\n-import javax.swing.KeyStroke;\n-import org.openide.util.HelpCtx;\n-import org.openide.util.actions.CallableSystemAction;\n-import org.openide.util.Utilities;\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import java.util.HashSet;\n+import java.util.Set;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n+\n@@ -36,1 +38,0 @@\n- *\n@@ -39,1 +40,11 @@\n-public final class HideAction extends CallableSystemAction {\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.HideAction\")\n+@ActionRegistration(displayName = \"#CTL_HideAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 400),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-H\")\n+})\n+@Messages({\n+        \"CTL_HideAction=Hide nodes\",\n+        \"HINT_HideAction=Hide selected nodes\"\n+})\n+public final class HideAction extends ModelAwareAction {\n@@ -42,11 +53,2 @@\n-    public void performAction() {\n-        EditorTopComponent editor = EditorTopComponent.getActive();\n-        if (editor != null) {\n-            editor.hideNodes();\n-        }\n-    }\n-\n-    public HideAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Hide selected nodes\");\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-H\"));\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/hide.gif\"; \/\/ NOI18N\n@@ -57,1 +59,1 @@\n-        return \"Hide\";\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_HideAction\");\n@@ -61,2 +63,2 @@\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_HideAction\");\n@@ -66,2 +68,5 @@\n-    protected boolean asynchronous() {\n-        return false;\n+    public void performAction(DiagramViewModel model) {\n+        Set<Integer> selectedNodes = model.getSelectedNodes();\n+        HashSet<Integer> nodes = new HashSet<>(model.getHiddenNodes());\n+        nodes.addAll(selectedNodes);\n+        model.showNot(nodes);\n@@ -71,2 +76,2 @@\n-    protected String iconResource() {\n-        return \"com\/sun\/hotspot\/igv\/view\/images\/hide.gif\";\n+    public boolean isEnabled(DiagramViewModel model) {\n+        return model != null && !model.getSelectedNodes().isEmpty();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideAction.java","additions":34,"deletions":29,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n@@ -38,3 +40,0 @@\n-    private boolean state;\n-    public static final String STATE = \"state\";\n-\n@@ -43,0 +42,1 @@\n+        putValue(Action.SELECTED_KEY, false);\n@@ -44,1 +44,0 @@\n-        setState(false);\n@@ -49,6 +48,5 @@\n-        setState(!state);\n-    }\n-\n-    public void setState(boolean b) {\n-        this.putValue(STATE, b);\n-        this.state = b;\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            boolean selected = (boolean)getValue(SELECTED_KEY);\n+            editor.getModel().setHideDuplicates(selected);\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideDuplicatesAction.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.util.ContextAction;\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import javax.swing.Action;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.Lookup;\n+\n+\n+abstract public class ModelAwareAction extends ContextAction<DiagramViewModel> {\n+\n+    public ModelAwareAction() {\n+        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n+    }\n+\n+    protected abstract String iconResource();\n+\n+    protected abstract String getDescription();\n+\n+    public abstract String getName();\n+\n+    public abstract void performAction(DiagramViewModel model);\n+\n+    public abstract boolean isEnabled(DiagramViewModel model);\n+\n+    @Override\n+    public Class<DiagramViewModel> contextClass() {\n+        return DiagramViewModel.class;\n+    }\n+\n+    @Override\n+    public void addContextListener(DiagramViewModel model) {\n+        model.getViewChangedEvent().addListener(this);\n+        model.getDiagramChangedEvent().addListener(this);\n+        model.getViewPropertiesChangedEvent().addListener(this);\n+        model.getHiddenNodesChangedEvent().addListener(this);\n+    }\n+\n+    @Override\n+    public void removeContextListener(DiagramViewModel model) {\n+        model.getViewChangedEvent().removeListener(this);\n+        model.getDiagramChangedEvent().removeListener(this);\n+        model.getViewPropertiesChangedEvent().removeListener(this);\n+        model.getHiddenNodesChangedEvent().removeListener(this);\n+    }\n+\n+    @Override\n+    public Action createContextAwareInstance(Lookup actionContext) {\n+        return this;\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ModelAwareAction.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-import com.sun.hotspot.igv.data.ChangedListener;\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -29,3 +27,6 @@\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.*;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n@@ -34,1 +35,0 @@\n- *\n@@ -37,8 +37,11 @@\n-public final class NextDiagramAction extends ContextAction<DiagramViewModel> implements ChangedListener<DiagramViewModel> {\n-\n-    private DiagramViewModel model;\n-\n-    public NextDiagramAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Show next graph of current group\");\n-        putValue(Action.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/view\/images\/next_diagram.png\")));\n-    }\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.NextDiagramAction\")\n+@ActionRegistration(displayName = \"#CTL_NextDiagramAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 150),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-RIGHT\")\n+})\n+@Messages({\n+        \"CTL_NextDiagramAction=Show next graph\",\n+        \"HINT_NextDiagramAction=Show next graph of current group\"\n+})\n+public final class NextDiagramAction extends ModelAwareAction {\n@@ -47,2 +50,2 @@\n-    public String getName() {\n-        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_NextDiagramAction\");\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/next_diagram.png\"; \/\/ NOI18N\n@@ -52,2 +55,2 @@\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_NextDiagramAction\");\n@@ -57,2 +60,2 @@\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n+    public String getName() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_NextDiagramAction\");\n@@ -68,16 +71,0 @@\n-    @Override\n-    public void update(DiagramViewModel model) {\n-        super.update(model);\n-\n-        if (this.model != model) {\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().removeListener(this);\n-            }\n-\n-            this.model = model;\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().addListener(this);\n-            }\n-        }\n-    }\n-\n@@ -88,10 +75,0 @@\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup arg0) {\n-        return new NextDiagramAction();\n-    }\n-\n-    @Override\n-    public void changed(DiagramViewModel source) {\n-        update(source);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/NextDiagramAction.java","additions":24,"deletions":47,"binary":false,"changes":71,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+import java.awt.*;\n@@ -27,3 +28,4 @@\n-import javax.swing.AbstractAction;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n+import java.awt.event.KeyEvent;\n+import javax.swing.*;\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n@@ -37,0 +39,2 @@\n+    private static final String SATELLITE_STRING = \"satellite\";\n+    private static final String SCENE_STRING = \"scene\";\n@@ -38,2 +42,19 @@\n-    private boolean state;\n-    public static final String STATE = \"state\";\n+    public OverviewAction(JPanel panel) {\n+        int keyCode = KeyEvent.VK_S;\n+        panel.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(\n+                KeyStroke.getKeyStroke(keyCode, 0, false), SATELLITE_STRING);\n+        panel.getActionMap().put(SATELLITE_STRING,\n+                new AbstractAction(SATELLITE_STRING) {\n+                    @Override public void actionPerformed(ActionEvent e) {\n+                        OverviewAction.this.setSelected(true);\n+                    }\n+                });\n+        panel.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(\n+                KeyStroke.getKeyStroke(keyCode, 0, true), SCENE_STRING);\n+        panel.getActionMap().put(SCENE_STRING,\n+                new AbstractAction(SCENE_STRING) {\n+                    @Override\n+                    public void actionPerformed(ActionEvent e) {\n+                        OverviewAction.this.setSelected(false);\n+                    }\n+                });\n@@ -41,1 +62,0 @@\n-    public OverviewAction() {\n@@ -43,0 +63,1 @@\n+        putValue(Action.SELECTED_KEY, false);\n@@ -44,1 +65,0 @@\n-        setState(false);\n@@ -49,1 +69,5 @@\n-        setState(!state);\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            boolean selected = (boolean)getValue(SELECTED_KEY);\n+            editor.showSatellite(selected);\n+        }\n@@ -52,3 +76,6 @@\n-    public void setState(boolean b) {\n-        this.putValue(STATE, b);\n-        this.state = b;\n+    public void setSelected(boolean selected) {\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            putValue(Action.SELECTED_KEY, selected);\n+            editor.showSatellite(selected);\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/OverviewAction.java","additions":39,"deletions":12,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -30,0 +30,2 @@\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n@@ -38,2 +40,0 @@\n-    private boolean state;\n-    public static final String STATE = \"state\";\n@@ -42,1 +42,1 @@\n-        state = true;\n+        putValue(Action.SELECTED_KEY, true);\n@@ -44,1 +44,0 @@\n-        putValue(STATE, true);\n@@ -50,2 +49,5 @@\n-        this.state = !state;\n-        this.putValue(STATE, state);\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            boolean selected = (boolean)getValue(SELECTED_KEY);\n+            editor.getModel().setShowNodeHull(selected);\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/PredSuccAction.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-import com.sun.hotspot.igv.data.ChangedListener;\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -29,3 +27,7 @@\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.*;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n+\n@@ -34,1 +36,0 @@\n- *\n@@ -37,8 +38,11 @@\n-public final class PrevDiagramAction extends ContextAction<DiagramViewModel> implements ChangedListener<DiagramViewModel> {\n-\n-    private DiagramViewModel model;\n-\n-    public PrevDiagramAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Show previous graph of current group\");\n-        putValue(Action.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/view\/images\/prev_diagram.png\")));\n-    }\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.PrevDiagramAction\")\n+@ActionRegistration(displayName = \"#CTL_PrevDiagramAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 100),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-LEFT\")\n+})\n+@Messages({\n+        \"CTL_PrevDiagramAction=Show previous graph\",\n+        \"HINT_PrevDiagramAction=Show previous graph of current group\"\n+})\n+public final class PrevDiagramAction extends ModelAwareAction {\n@@ -47,2 +51,2 @@\n-    public String getName() {\n-        return NbBundle.getMessage(PrevDiagramAction.class, \"CTL_PrevDiagramAction\");\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/prev_diagram.png\"; \/\/ NOI18N\n@@ -52,2 +56,2 @@\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n+    public String getName() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_PrevDiagramAction\");\n@@ -57,2 +61,2 @@\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_PrevDiagramAction\");\n@@ -68,16 +72,0 @@\n-    @Override\n-    public void update(DiagramViewModel model) {\n-        super.update(model);\n-\n-        if (this.model != model) {\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().removeListener(this);\n-            }\n-\n-            this.model = model;\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().addListener(this);\n-            }\n-        }\n-    }\n-\n@@ -88,10 +76,0 @@\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup arg0) {\n-        return new PrevDiagramAction();\n-    }\n-\n-    @Override\n-    public void changed(DiagramViewModel source) {\n-        update(source);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/PrevDiagramAction.java","additions":25,"deletions":47,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n+\n+\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.ReduceDiffAction\")\n+@ActionRegistration(displayName = \"#CTL_ReduceDiffAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 200),\n+        @ActionReference(path = \"Shortcuts\", name = \"DS-LEFT\"),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-DOWN\")\n+})\n+@Messages({\n+        \"CTL_ReduceDiffAction=Reduce difference selection\",\n+        \"HINT_ReduceDiffAction=Reduce the difference selection\"\n+})\n+public final class ReduceDiffAction extends ModelAwareAction {\n+\n+    @Override\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/shrink_right.png\"; \/\/ NOI18N\n+    }\n+\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ReduceDiffAction\");\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ReduceDiffAction\");\n+    }\n+\n+    @Override\n+    public void performAction(DiagramViewModel model) {\n+        int firstPos = model.getFirstPosition();\n+        int secondPos = model.getSecondPosition();\n+        if (firstPos < secondPos) {\n+            model.setPositions(firstPos, secondPos - 1);\n+        }\n+    }\n+\n+    @Override\n+    public boolean isEnabled(DiagramViewModel model) {\n+        return model.getFirstPosition() != model.getSecondPosition();\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ReduceDiffAction.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"},{"patch":"@@ -30,0 +30,2 @@\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n@@ -34,4 +36,0 @@\n-    private boolean state;\n-\n-    public static final String STATE = \"state\";\n-\n@@ -41,2 +39,1 @@\n-        state = false;\n-        putValue(STATE, false);\n+        putValue(SELECTED_KEY, false);\n@@ -47,6 +44,5 @@\n-        setState(!state);\n-    }\n-\n-    public void setState(boolean b) {\n-        this.putValue(STATE, b);\n-        this.state = b;\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            boolean selected = (boolean)getValue(SELECTED_KEY);\n+            editor.setSelectionMode(selected);\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/SelectionModeAction.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,8 +26,9 @@\n-import com.sun.hotspot.igv.view.EditorTopComponent;\n-import java.awt.event.InputEvent;\n-import java.awt.event.KeyEvent;\n-import javax.swing.Action;\n-import javax.swing.KeyStroke;\n-import org.openide.util.HelpCtx;\n-import org.openide.util.actions.CallableSystemAction;\n-import org.openide.util.Utilities;\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import java.util.HashSet;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n+\n@@ -36,1 +37,0 @@\n- *\n@@ -39,1 +39,11 @@\n-public final class ShowAllAction extends CallableSystemAction {\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.ShowAllAction\")\n+@ActionRegistration(displayName = \"#CTL_ShowAllAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 300),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-A\")\n+})\n+@Messages({\n+        \"CTL_ShowAllAction=Show all\",\n+        \"HINT_ShowAllAction=Show all nodes\"\n+})\n+public final class ShowAllAction extends ModelAwareAction {\n@@ -42,11 +52,2 @@\n-    public void performAction() {\n-        EditorTopComponent editor = EditorTopComponent.getActive();\n-        if (editor != null) {\n-            editor.showAll();\n-        }\n-    }\n-\n-    public ShowAllAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Show all nodes\");\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-A\"));\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/expand.gif\"; \/\/ NOI18N\n@@ -56,2 +57,2 @@\n-    public String getName() {\n-        return \"Show all\";\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ShowAllAction\");\n@@ -61,2 +62,2 @@\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n+    public String getName() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ShowAllAction\");\n@@ -66,2 +67,2 @@\n-    protected boolean asynchronous() {\n-        return false;\n+    public void performAction(DiagramViewModel model) {\n+        model.showNot(new HashSet<>());\n@@ -71,2 +72,2 @@\n-    protected String iconResource() {\n-        return \"com\/sun\/hotspot\/igv\/view\/images\/expand.gif\";\n+    public boolean isEnabled(DiagramViewModel model) {\n+        return model != null && !model.getHiddenNodes().isEmpty();\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShowAllAction.java","additions":31,"deletions":30,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n@@ -30,0 +32,2 @@\n+\n+import com.sun.hotspot.igv.view.EditorTopComponent;\n@@ -32,1 +36,1 @@\n-public class ShowEmptyBlocksAction extends AbstractAction {\n+public class ShowEmptyBlocksAction extends AbstractAction implements PropertyChangeListener  {\n@@ -34,2 +38,2 @@\n-    private boolean state;\n-    public static final String STATE = \"state\";\n+    private boolean selected;\n+    private AbstractAction parentAction;\n@@ -37,5 +41,8 @@\n-    public ShowEmptyBlocksAction() {\n-        state = true;\n-        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n-        putValue(STATE, true);\n-        putValue(Action.SHORT_DESCRIPTION, \"Show empty blocks in control-flow graph view\");\n+    public ShowEmptyBlocksAction(AbstractAction action, boolean select) {\n+        this.parentAction = action;\n+        this.selected = select;\n+        this.parentAction.addPropertyChangeListener(this);\n+        putValue(SELECTED_KEY, this.selected);\n+        putValue(SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n+        putValue(SHORT_DESCRIPTION, \"Show empty blocks in control-flow graph view\");\n+        enableIfParentSelected();\n@@ -46,2 +53,5 @@\n-        this.state = !state;\n-        this.putValue(STATE, state);\n+        this.selected = isSelected();\n+        EditorTopComponent editor = EditorTopComponent.getActive();\n+        if (editor != null) {\n+            editor.getModel().setShowEmptyBlocks(this.selected);\n+        }\n@@ -53,0 +63,24 @@\n+\n+    private boolean isSelected() {\n+        return (Boolean)getValue(SELECTED_KEY);\n+    }\n+\n+    private void enableIfParentSelected() {\n+        boolean enable = parentAction.isEnabled() && (Boolean)parentAction.getValue(SELECTED_KEY);\n+        if (enable != this.isEnabled()) {\n+            if (enable) {\n+                putValue(SELECTED_KEY, this.selected);\n+            } else {\n+                this.selected = isSelected();\n+                putValue(SELECTED_KEY, false);\n+            }\n+        }\n+        this.setEnabled(enable);\n+    }\n+\n+    @Override\n+    public void propertyChange(PropertyChangeEvent evt) {\n+        if (evt.getSource() == this.parentAction) {\n+            enableIfParentSelected();\n+        }\n+    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShowEmptyBlocksAction.java","additions":44,"deletions":10,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -1,95 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.view.actions;\n-\n-import com.sun.hotspot.igv.data.ChangedListener;\n-import com.sun.hotspot.igv.util.ContextAction;\n-import com.sun.hotspot.igv.view.DiagramViewModel;\n-import javax.swing.Action;\n-import javax.swing.ImageIcon;\n-import org.openide.util.*;\n-\n-public final class ShrinkDiffAction extends ContextAction<DiagramViewModel> implements ChangedListener<DiagramViewModel> {\n-    private DiagramViewModel model;\n-\n-    public ShrinkDiffAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Reduce the difference selection\");\n-        putValue(Action.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/view\/images\/shrink_right.png\")));\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return NbBundle.getMessage(ShrinkDiffAction.class, \"CTL_ShrinkDiffAction\");\n-    }\n-\n-    @Override\n-    public HelpCtx getHelpCtx() {\n-        return HelpCtx.DEFAULT_HELP;\n-    }\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public void performAction(DiagramViewModel model) {\n-        int firstPos = model.getFirstPosition();\n-        int secondPos = model.getSecondPosition();\n-        if (secondPos != model.getPositions().size() - 1) {\n-            model.setPositions(firstPos, (firstPos < secondPos) ? secondPos - 1 : secondPos);\n-        }\n-    }\n-\n-    @Override\n-    public void update(DiagramViewModel model) {\n-        super.update(model);\n-\n-        if (this.model != model) {\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().removeListener(this);\n-            }\n-\n-            this.model = model;\n-            if (this.model != null) {\n-                this.model.getDiagramChangedEvent().addListener(this);\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public boolean isEnabled(DiagramViewModel model) {\n-        return model.getSecondPosition() != model.getPositions().size() - 1;\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup arg0) {\n-        return new ShrinkDiffAction();\n-    }\n-\n-    @Override\n-    public void changed(DiagramViewModel source) {\n-        update(source);\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShrinkDiffAction.java","additions":0,"deletions":95,"binary":false,"changes":95,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import java.awt.Event;\n-import java.awt.event.KeyEvent;\n@@ -30,1 +28,4 @@\n-import javax.swing.KeyStroke;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n@@ -32,0 +33,3 @@\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n@@ -33,1 +37,0 @@\n-import org.openide.util.Utilities;\n@@ -36,1 +39,0 @@\n- *\n@@ -39,0 +41,10 @@\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.ZoomInAction\")\n+@ActionRegistration(displayName = \"#CTL_ZoomInAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 450),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-EQUALS\")\n+})\n+@Messages({\n+        \"CTL_ZoomInAction=Zoom in\",\n+        \"HINT_ZoomInAction=Zoom into the graph\"\n+})\n@@ -41,0 +53,5 @@\n+    public ZoomInAction() {\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n+        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -51,1 +68,1 @@\n-        return \"Zoom in\";\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ZoomInAction\");\n@@ -54,4 +71,2 @@\n-    public ZoomInAction() {\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-EQUALS\"));\n-        putValue(Action.SHORT_DESCRIPTION, \"Zoom in\");\n+    private String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ZoomInAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomInAction.java","additions":26,"deletions":11,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,0 @@\n-import java.awt.Event;\n-import java.awt.event.KeyEvent;\n@@ -30,1 +28,4 @@\n-import javax.swing.KeyStroke;\n+import org.openide.awt.ActionID;\n+import org.openide.awt.ActionReference;\n+import org.openide.awt.ActionReferences;\n+import org.openide.awt.ActionRegistration;\n@@ -32,0 +33,3 @@\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.NbBundle;\n+import org.openide.util.NbBundle.Messages;\n@@ -33,1 +37,0 @@\n-import org.openide.util.Utilities;\n@@ -36,1 +39,0 @@\n- *\n@@ -39,0 +41,10 @@\n+@ActionID(category = \"View\", id = \"com.sun.hotspot.igv.view.actions.ZoomOutAction\")\n+@ActionRegistration(displayName = \"#CTL_ZoomOutAction\")\n+@ActionReferences({\n+        @ActionReference(path = \"Menu\/View\", position = 500),\n+        @ActionReference(path = \"Shortcuts\", name = \"D-MINUS\")\n+})\n+@Messages({\n+        \"CTL_ZoomOutAction=Zoom out\",\n+        \"HINT_ZoomOutAction=Zoom out of the graph\"\n+})\n@@ -41,0 +53,5 @@\n+    public ZoomOutAction() {\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n+        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n+    }\n+\n@@ -49,6 +66,0 @@\n-    public ZoomOutAction() {\n-        putValue(Action.SHORT_DESCRIPTION, \"Zoom out\");\n-        \/\/ D is the Control key on most platforms, the Command (meta) key on Macintosh\n-        putValue(Action.ACCELERATOR_KEY, Utilities.stringToKey(\"D-MINUS\"));\n-    }\n-\n@@ -57,1 +68,5 @@\n-        return \"Zoom out\";\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ZoomOutAction\");\n+    }\n+\n+    private String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ZoomOutAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomOutAction.java","additions":28,"deletions":13,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -1,10 +0,0 @@\n-CTL_EditorAction=Open Editor Window\n-CTL_NextDiagramAction=Show next graph\n-CTL_ExpandDiffAction=Expand difference selection\n-CTL_ShrinkDiffAction=Reduce difference selection\n-CTL_EnableSeaLayoutAction=Enable sea-of-nodes layout\n-CTL_EnableBlockLayoutAction=Enable block layout\n-CTL_EnableCFGLayoutAction=Enable control-flow graph layout\n-CTL_NodeFindAction=Find\n-CTL_PrevDiagramAction=Show previous graph\n-CTL_ExportAction=Export current graph...\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/actions\/Bundle.properties","additions":0,"deletions":10,"binary":false,"changes":10,"status":"deleted"},{"patch":"@@ -8,18 +8,0 @@\n-        <file name=\"D-LEFT.shadow\">\n-            <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-PrevDiagramAction.instance\"\/>\n-        <\/file>\n-        <file name=\"D-RIGHT.shadow\">\n-            <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-NextDiagramAction.instance\"\/>\n-        <\/file>\n-        <file name=\"DS-RIGHT.shadow\">\n-            <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ExpandDiffAction.instance\"\/>\n-        <\/file>\n-        <file name=\"D-UP.shadow\">\n-            <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ExpandDiffAction.instance\"\/>\n-        <\/file>\n-        <file name=\"DS-LEFT.shadow\">\n-            <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ShrinkDiffAction.instance\"\/>\n-        <\/file>\n-        <file name=\"D-DOWN.shadow\">\n-            <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ShrinkDiffAction.instance\"\/>\n-        <\/file>\n@@ -28,5 +10,0 @@\n-        <folder name=\"File\">\n-            <file name=\"com-sun-hotspot-igv-view-actions-ExportAction.instance\">\n-                <attr name=\"position\" intvalue=\"1100\"\/>\n-            <\/file>\n-        <\/folder>\n@@ -37,9 +14,0 @@\n-            <file name=\"com-sun-hotspot-igv-view-actions-PrevDiagramAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-NextDiagramAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ShrinkDiffAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ExpandDiffAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ShowAllAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ExtractAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-HideAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ZoomOutAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ZoomInAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n@@ -55,38 +23,0 @@\n-        <folder name=\"View\">\n-            <file name=\"com-sun-hotspot-igv-view-actions-PrevDiagramAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-PrevDiagramAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"100\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-NextDiagramAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-NextDiagramAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"150\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ShrinkDiffAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ShrinkDiffAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"250\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ExpandDiffAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ExpandDiffAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"200\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ShowAllAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ShowAllAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"300\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ExtractAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ExtractAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"350\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-HideAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-HideAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"400\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ZoomOutAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ZoomOutAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"500\"\/>\n-            <\/file>\n-            <file name=\"com-sun-hotspot-igv-view-actions-ZoomInAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/View\/com-sun-hotspot-igv-view-actions-ZoomInAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"450\"\/>\n-            <\/file>\n-        <\/folder>\n@@ -98,4 +28,0 @@\n-            <file name=\"com-sun-hotspot-igv-view-actions-ExportAction.shadow\">\n-                <attr name=\"originalFile\" stringvalue=\"Actions\/File\/com-sun-hotspot-igv-view-actions-ExportAction.instance\"\/>\n-                <attr name=\"position\" intvalue=\"710\"\/>\n-            <\/file>\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/layer.xml","additions":0,"deletions":74,"binary":false,"changes":74,"status":"modified"}]}