{"files":[{"patch":"@@ -44,1 +44,1 @@\n-        return \"Show clustered sea of nodes\";\n+        return \"Show control-flow graph\";\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/EnableCFGLayoutAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/EnableSeaLayoutAction.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -28,1 +27,0 @@\n-import javax.swing.Action;\n@@ -33,2 +31,1 @@\n-import org.openide.util.ImageUtilities;\n-import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n@@ -49,6 +46,1 @@\n-public final class ExpandDiffAction extends ContextAction<DiagramViewModel> {\n-\n-    public ExpandDiffAction() {\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_ExpandDiffAction());\n-        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n+public final class ExpandDiffAction extends ModelAwareAction {\n@@ -63,1 +55,6 @@\n-        return Bundle.CTL_ExpandDiffAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ExpandDiffAction\");\n+    }\n+\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ExpandDiffAction\");\n@@ -77,26 +74,0 @@\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup actionContext) {\n-        return this;\n-    }\n-\n-    @Override\n-    public void addContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().addListener(this);\n-        model.getDiagramChangedEvent().addListener(this);\n-        model.getViewPropertiesChangedEvent().addListener(this);\n-        model.getHiddenNodesChangedEvent().addListener(this);\n-    }\n-\n-    @Override\n-    public void removeContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().removeListener(this);\n-        model.getDiagramChangedEvent().removeListener(this);\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n-        model.getHiddenNodesChangedEvent().removeListener(this);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandDiffAction.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -28,1 +27,0 @@\n-import javax.swing.Action;\n@@ -33,2 +31,1 @@\n-import org.openide.util.ImageUtilities;\n-import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n@@ -51,6 +48,1 @@\n-public final class ExtractAction extends ContextAction<DiagramViewModel> {\n-\n-    public ExtractAction() {\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_ExtractAction());\n-        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n+public final class ExtractAction extends ModelAwareAction {\n@@ -63,0 +55,5 @@\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ExtractAction\");\n+    }\n+\n@@ -65,1 +62,1 @@\n-        return Bundle.CTL_ExtractAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ExtractAction\");\n@@ -77,26 +74,0 @@\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup actionContext) {\n-        return this;\n-    }\n-\n-    @Override\n-    public void addContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().addListener(this);\n-        model.getDiagramChangedEvent().addListener(this);\n-        model.getViewPropertiesChangedEvent().addListener(this);\n-        model.getHiddenNodesChangedEvent().addListener(this);\n-    }\n-\n-    @Override\n-    public void removeContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().removeListener(this);\n-        model.getDiagramChangedEvent().removeListener(this);\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n-        model.getHiddenNodesChangedEvent().removeListener(this);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExtractAction.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -30,1 +29,0 @@\n-import javax.swing.Action;\n@@ -35,2 +33,1 @@\n-import org.openide.util.ImageUtilities;\n-import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n@@ -53,6 +50,1 @@\n-public final class HideAction extends ContextAction<DiagramViewModel> {\n-\n-    public HideAction() {\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_HideAction());\n-        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n+public final class HideAction extends ModelAwareAction {\n@@ -67,1 +59,6 @@\n-        return Bundle.CTL_HideAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_HideAction\");\n+    }\n+\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_HideAction\");\n@@ -82,26 +79,0 @@\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup actionContext) {\n-        return this;\n-    }\n-\n-    @Override\n-    public void addContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().addListener(this);\n-        model.getDiagramChangedEvent().addListener(this);\n-        model.getViewPropertiesChangedEvent().addListener(this);\n-        model.getHiddenNodesChangedEvent().addListener(this);\n-    }\n-\n-    @Override\n-    public void removeContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().removeListener(this);\n-        model.getDiagramChangedEvent().removeListener(this);\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n-        model.getHiddenNodesChangedEvent().removeListener(this);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/HideAction.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -0,0 +1,75 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.util.ContextAction;\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import javax.swing.Action;\n+import org.openide.util.ImageUtilities;\n+import org.openide.util.Lookup;\n+\n+\n+abstract public class ModelAwareAction extends ContextAction<DiagramViewModel> {\n+\n+    public ModelAwareAction() {\n+        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n+    }\n+\n+    protected abstract String iconResource();\n+\n+    protected abstract String getDescription();\n+\n+    public abstract String getName();\n+\n+    public abstract void performAction(DiagramViewModel model);\n+\n+    public abstract boolean isEnabled(DiagramViewModel model);\n+\n+    @Override\n+    public Class<DiagramViewModel> contextClass() {\n+        return DiagramViewModel.class;\n+    }\n+\n+    @Override\n+    public void addContextListener(DiagramViewModel model) {\n+        model.getViewChangedEvent().addListener(this);\n+        model.getDiagramChangedEvent().addListener(this);\n+        model.getViewPropertiesChangedEvent().addListener(this);\n+        model.getHiddenNodesChangedEvent().addListener(this);\n+    }\n+\n+    @Override\n+    public void removeContextListener(DiagramViewModel model) {\n+        model.getViewChangedEvent().removeListener(this);\n+        model.getDiagramChangedEvent().removeListener(this);\n+        model.getViewPropertiesChangedEvent().removeListener(this);\n+        model.getHiddenNodesChangedEvent().removeListener(this);\n+    }\n+\n+    @Override\n+    public Action createContextAwareInstance(Lookup actionContext) {\n+        return this;\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ModelAwareAction.java","additions":75,"deletions":0,"binary":false,"changes":75,"status":"added"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -28,1 +27,0 @@\n-import javax.swing.Action;\n@@ -33,2 +31,1 @@\n-import org.openide.util.ImageUtilities;\n-import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n@@ -50,7 +47,1 @@\n-public final class NextDiagramAction extends ContextAction<DiagramViewModel> {\n-\n-\n-    public NextDiagramAction() {\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_NextDiagramAction());\n-        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n+public final class NextDiagramAction extends ModelAwareAction {\n@@ -63,0 +54,5 @@\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_NextDiagramAction\");\n+    }\n+\n@@ -65,1 +61,1 @@\n-        return Bundle.CTL_NextDiagramAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_NextDiagramAction\");\n@@ -79,26 +75,0 @@\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup actionContext) {\n-        return NextDiagramAction.this;\n-    }\n-\n-    @Override\n-    public void addContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().addListener(this);\n-        model.getDiagramChangedEvent().addListener(this);\n-        model.getViewPropertiesChangedEvent().addListener(this);\n-        model.getHiddenNodesChangedEvent().addListener(this);\n-    }\n-\n-    @Override\n-    public void removeContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().removeListener(this);\n-        model.getDiagramChangedEvent().removeListener(this);\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n-        model.getHiddenNodesChangedEvent().removeListener(this);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/NextDiagramAction.java","additions":8,"deletions":38,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -28,1 +27,0 @@\n-import javax.swing.Action;\n@@ -33,2 +31,1 @@\n-import org.openide.util.ImageUtilities;\n-import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n@@ -51,6 +48,1 @@\n-public final class PrevDiagramAction extends ContextAction<DiagramViewModel> {\n-\n-    public PrevDiagramAction() {\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_PrevDiagramAction());\n-        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n+public final class PrevDiagramAction extends ModelAwareAction {\n@@ -65,1 +57,6 @@\n-        return Bundle.CTL_PrevDiagramAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_PrevDiagramAction\");\n+    }\n+\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_PrevDiagramAction\");\n@@ -79,26 +76,0 @@\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup actionContext) {\n-        return this;\n-    }\n-\n-    @Override\n-    public void addContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().addListener(this);\n-        model.getDiagramChangedEvent().addListener(this);\n-        model.getViewPropertiesChangedEvent().addListener(this);\n-        model.getHiddenNodesChangedEvent().addListener(this);\n-    }\n-\n-    @Override\n-    public void removeContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().removeListener(this);\n-        model.getDiagramChangedEvent().removeListener(this);\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n-        model.getHiddenNodesChangedEvent().removeListener(this);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/PrevDiagramAction.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -28,1 +27,0 @@\n-import javax.swing.Action;\n@@ -33,2 +31,1 @@\n-import org.openide.util.ImageUtilities;\n-import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n@@ -49,6 +46,1 @@\n-public final class ReduceDiffAction extends ContextAction<DiagramViewModel> {\n-\n-    public ReduceDiffAction() {\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_ReduceDiffAction());\n-        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n+public final class ReduceDiffAction extends ModelAwareAction {\n@@ -61,0 +53,5 @@\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ReduceDiffAction\");\n+    }\n+\n@@ -63,1 +60,1 @@\n-        return Bundle.CTL_ReduceDiffAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ReduceDiffAction\");\n@@ -79,26 +76,0 @@\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public void addContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().addListener(this);\n-        model.getDiagramChangedEvent().addListener(this);\n-        model.getViewPropertiesChangedEvent().addListener(this);\n-        model.getHiddenNodesChangedEvent().addListener(this);\n-    }\n-\n-    @Override\n-    public void removeContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().removeListener(this);\n-        model.getDiagramChangedEvent().removeListener(this);\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n-        model.getHiddenNodesChangedEvent().removeListener(this);\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup actionContext) {\n-        return this;\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ReduceDiffAction.java","additions":8,"deletions":37,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import com.sun.hotspot.igv.util.ContextAction;\n@@ -29,1 +28,0 @@\n-import javax.swing.Action;\n@@ -34,2 +32,1 @@\n-import org.openide.util.ImageUtilities;\n-import org.openide.util.Lookup;\n+import org.openide.util.NbBundle;\n@@ -52,6 +49,1 @@\n-public final class ShowAllAction extends ContextAction<DiagramViewModel> {\n-\n-    public ShowAllAction() {\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_ShowAllAction());\n-        putValue(Action.SMALL_ICON , ImageUtilities.loadImageIcon(iconResource(), true));\n-    }\n+public final class ShowAllAction extends ModelAwareAction {\n@@ -64,0 +56,5 @@\n+    @Override\n+    protected String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ShowAllAction\");\n+    }\n+\n@@ -66,1 +63,1 @@\n-        return Bundle.CTL_ShowAllAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ShowAllAction\");\n@@ -71,1 +68,1 @@\n-        model.showNot(new HashSet<Integer>());\n+        model.showNot(new HashSet<>());\n@@ -78,26 +75,0 @@\n-\n-    @Override\n-    public Class<DiagramViewModel> contextClass() {\n-        return DiagramViewModel.class;\n-    }\n-\n-    @Override\n-    public Action createContextAwareInstance(Lookup actionContext) {\n-        return this;\n-    }\n-\n-    @Override\n-    public void addContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().addListener(this);\n-        model.getDiagramChangedEvent().addListener(this);\n-        model.getViewPropertiesChangedEvent().addListener(this);\n-        model.getHiddenNodesChangedEvent().addListener(this);\n-    }\n-\n-    @Override\n-    public void removeContextListener(DiagramViewModel model) {\n-        model.getViewChangedEvent().removeListener(this);\n-        model.getDiagramChangedEvent().removeListener(this);\n-        model.getViewPropertiesChangedEvent().removeListener(this);\n-        model.getHiddenNodesChangedEvent().removeListener(this);\n-    }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShowAllAction.java","additions":9,"deletions":38,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import org.openide.util.NbBundle;\n@@ -53,1 +54,1 @@\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_ZoomInAction());\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n@@ -67,1 +68,5 @@\n-        return Bundle.CTL_ZoomInAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ZoomInAction\");\n+    }\n+\n+    private String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ZoomInAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomInAction.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+import org.openide.util.NbBundle;\n@@ -53,1 +54,1 @@\n-        putValue(Action.SHORT_DESCRIPTION, Bundle.HINT_ZoomOutAction());\n+        putValue(Action.SHORT_DESCRIPTION, getDescription());\n@@ -67,1 +68,5 @@\n-        return Bundle.CTL_ZoomOutAction();\n+        return NbBundle.getMessage(NextDiagramAction.class, \"CTL_ZoomOutAction\");\n+    }\n+\n+    private String getDescription() {\n+        return NbBundle.getMessage(NextDiagramAction.class, \"HINT_ZoomOutAction\");\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ZoomOutAction.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}