{"files":[{"patch":"@@ -311,0 +311,1 @@\n+\n@@ -331,0 +332,17 @@\n+    \/**\n+     * {@return the latest class file format version whose major class\n+     * file version matches the argument}\n+     * @param major the major class file version as an integer\n+     * @throws IllegalArgumentException if the argument is outside of\n+     * the range of major class file versions\n+     *\/\n+    public static ClassFileFormatVersion fromMajor(int major) {\n+        if (major < 45  \/\/ RELEASE_0.major()\n+            || major > latest().major()) {\n+            throw new IllegalArgumentException(\"Out of range major class file vesion \"\n+                                               + major);\n+        }\n+        \/\/ RELEASE_0 and RELEASE_1 both have a major version of 45;\n+        \/\/ return RELEASE_1 for an argument of 45.\n+        return values()[major-44];\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ClassFileFormatVersion.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}