{"files":[{"patch":"@@ -986,6 +986,0 @@\n-  \/\/ Either input is BOTTOM ==> the result is the local BOTTOM\n-  const Type *bot = bottom_type();\n-  if( (t1 == bot) || (t2 == bot) ||\n-      (t1 == Type::BOTTOM) || (t2 == Type::BOTTOM) )\n-    return bot;\n-\n@@ -994,2 +988,3 @@\n-  if( !i1->is_con() || !i2->is_con() ) {\n-    if( i1->_lo >= 0 && i2->_lo >= 0 )\n+  if (i2->is_con()) {\n+    \/\/ Mod by zero?  Throw exception at runtime!\n+    if (i2->get_con() == 0) {\n@@ -997,2 +992,26 @@\n-    \/\/ If both numbers are not constants, we know little.\n-    return TypeInt::INT;\n+    }\n+    if (i1->is_con()) {\n+      \/\/ We must be modulo'ing 2 float constants.\n+      \/\/ Check for min_jint % '-1', result is defined to be '0'.\n+      if (i1->get_con() == min_jint && i2->get_con() == -1) {\n+        return TypeInt::ZERO;\n+      }\n+      \/\/ x and y are both constant!\n+      return TypeInt::make(i1->get_con() % i2->get_con());\n+    }\n+    \/\/ Otherwise, the bound can be deduced given that divisor is a known constant\n+    \/\/ x % -y  ==> [0, y - 1]\n+    \/\/ x % y   ==> [0, y - 1]\n+    \/\/ -x % y  ==> [-y + 1, 0]\n+    \/\/ -x % -y ==> [-y + 1, 0]\n+    if (i1->lo_as_long() >= 0) {\n+      return TypeInt::make(0, ABS(i2->get_con()) - 1, i1->_widen);\n+    } else if (i1->hi_as_long() < 0) {\n+      return TypeInt::make(-ABS(i2->get_con()) + 1, 0, i1->_widen);\n+    } else {\n+      \/\/ x could be positive or negative, we know little about the result.\n+      return bottom_type();\n+    }\n+  } else {\n+    \/\/ If divisor is not constant, we know little.\n+    return bottom_type();\n@@ -1000,9 +1019,0 @@\n-  \/\/ Mod by zero?  Throw exception at runtime!\n-  if( !i2->get_con() ) return TypeInt::POS;\n-\n-  \/\/ We must be modulo'ing 2 float constants.\n-  \/\/ Check for min_jint % '-1', result is defined to be '0'.\n-  if( i1->get_con() == min_jint && i2->get_con() == -1 )\n-    return TypeInt::ZERO;\n-\n-  return TypeInt::make( i1->get_con() % i2->get_con() );\n@@ -1153,6 +1163,0 @@\n-  \/\/ Either input is BOTTOM ==> the result is the local BOTTOM\n-  const Type *bot = bottom_type();\n-  if( (t1 == bot) || (t2 == bot) ||\n-      (t1 == Type::BOTTOM) || (t2 == Type::BOTTOM) )\n-    return bot;\n-\n@@ -1161,2 +1165,3 @@\n-  if( !i1->is_con() || !i2->is_con() ) {\n-    if( i1->_lo >= CONST64(0) && i2->_lo >= CONST64(0) )\n+  if (i2->is_con()) {\n+    \/\/ Mod by zero?  Throw exception at runtime!\n+    if (i2->get_con() == 0) {\n@@ -1164,2 +1169,26 @@\n-    \/\/ If both numbers are not constants, we know little.\n-    return TypeLong::LONG;\n+    }\n+    if (i1->is_con()) {\n+      \/\/ We must be modulo'ing 2 float constants.\n+      \/\/ Check for min_jint % '-1', result is defined to be '0'.\n+      if (i1->get_con() == min_jlong && i2->get_con() == -1) {\n+        return TypeLong::ZERO;\n+      }\n+      \/\/ x and y are both constant!\n+      return TypeLong::make(i1->get_con() % i2->get_con());\n+    }\n+    \/\/ Otherwise, the bound can be deduced given that divisor is a known constant\n+    \/\/ x % -y  ==> [0, y - 1]\n+    \/\/ x % y   ==> [0, y - 1]\n+    \/\/ -x % y  ==> [-y + 1, 0]\n+    \/\/ -x % -y ==> [-y + 1, 0]\n+    if (i1->lo_as_long() >= 0) {\n+      return TypeLong::make(0, ABS(i2->get_con()) - 1, i1->_widen);\n+    } else if (i1->hi_as_long() < 0) {\n+      return TypeLong::make(-ABS(i2->get_con()) + 1, 0, i1->_widen);\n+    } else {\n+      \/\/ x could be positive or negative, we know little about the result.\n+      return bottom_type();\n+    }\n+  } else {\n+    \/\/ If divisor is not constant, we know little.\n+    return bottom_type();\n@@ -1167,9 +1196,0 @@\n-  \/\/ Mod by zero?  Throw exception at runtime!\n-  if( !i2->get_con() ) return TypeLong::POS;\n-\n-  \/\/ We must be modulo'ing 2 float constants.\n-  \/\/ Check for min_jint % '-1', result is defined to be '0'.\n-  if( i1->get_con() == min_jlong && i2->get_con() == -1 )\n-    return TypeLong::ZERO;\n-\n-  return TypeLong::make( i1->get_con() % i2->get_con() );\n","filename":"src\/hotspot\/share\/opto\/divnode.cpp","additions":58,"deletions":38,"binary":false,"changes":96,"status":"modified"}]}