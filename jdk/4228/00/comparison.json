{"files":[{"patch":"@@ -3242,2 +3242,6 @@\n-        int icoder = prefix.coder() | suffix.coder() | delimiter.coder();\n-        long len = (long) prefix.length() + suffix.length() + (long) Math.max(0, size - 1) * delimiter.length();\n+        int icoder = prefix.coder() | suffix.coder();\n+        long len = (long) prefix.length() + suffix.length();\n+        if (size > 1) { \/\/ when there are more than one element, size - 1 delimiters will be emitted\n+            len += (long) (size - 1) * delimiter.length();\n+            icoder |= delimiter.coder();\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,2 @@\n- * @test @bug 5015163\n+ * @test\n+ * @bug 5015163 8267529\n@@ -31,0 +32,1 @@\n+import java.util.StringJoiner;\n@@ -114,0 +116,8 @@\n+\n+    public void testIgnoreDelimiterCoderJoin() {\n+        \/\/ Ensure that joining a String with a UTF-16 delimiter\n+        \/\/ produce a String with a latin-1 coder if the delimiter is\n+        \/\/ not emitted\n+        assertEquals(\"foo\", new StringJoiner(\"\\u2013\").add(\"foo\").toString());\n+        assertEquals(\"foo\", String.join(\"\\u2013\", \"foo\"));\n+    }\n","filename":"test\/jdk\/java\/lang\/String\/StringJoinTest.java","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}