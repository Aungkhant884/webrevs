{"files":[{"patch":"@@ -276,7 +276,0 @@\n-Klass* SystemDictionary::resolve_or_fail(Symbol* class_name,\n-                                           bool throw_error, TRAPS)\n-{\n-  return resolve_or_fail(class_name, Handle(), Handle(), throw_error, THREAD);\n-}\n-\n-\n@@ -1124,1 +1117,2 @@\n-  \/\/ find_or_define_instance_class may return a different InstanceKlass\n+  \/\/ find_or_define_instance_class may return a different InstanceKlass,\n+  \/\/ in which case the old k would be deallocated\n@@ -1734,1 +1728,1 @@\n-  return k;\n+  return HAS_PENDING_EXCEPTION ? NULL : k;\n@@ -1748,1 +1742,1 @@\n-    assert(defined_k != NULL, \"Should not have a klass if there's an exception\");\n+    assert(defined_k == NULL, \"Should not have a klass if there's an exception\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -263,1 +263,3 @@\n-  static Klass* resolve_or_fail(Symbol* class_name, bool throw_error, TRAPS);\n+  static Klass* resolve_or_fail(Symbol* class_name, bool throw_error, TRAPS) {\n+    return resolve_or_fail(class_name, Handle(), Handle(), throw_error, THREAD);\n+  }\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1214,1 +1214,1 @@\n-\/\/ non-built-in loaders. E.g., KlassClass in the below example\n+\/\/ non-built-in loaders. E.g., SharedClass in the below example\n@@ -1219,1 +1219,1 @@\n-\/\/ KlassClass  id: 4 super: 0 interfaces: 2 source: cust.jar\n+\/\/ SharedClass  id: 4 super: 0 interfaces: 2 source: cust.jar\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}