{"files":[{"patch":"@@ -0,0 +1,192 @@\n+\/*\n+ * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4275046\n+ * @summary Tests editable combo box as a table editor.\n+ * @run main bug4275046\n+ *\/\n+\n+import java.awt.AWTException;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import javax.swing.DefaultCellEditor;\n+import javax.swing.SwingUtilities;\n+import javax.swing.JComboBox;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.table.DefaultTableModel;\n+\n+public class bug4275046 {\n+\n+    private static final String[] colNames = { \"ID\", \"Color\", \"Stuff\" };\n+    private static final Object[][] data = { { 1, \"red\", \"abc\"},\n+                                             { 2, \"red\", \"def\"},\n+                                             { 3, \"red\", \"ghijk\"} };\n+\n+    private static final String EXPECTED_VALUE = \"rededited\";\n+\n+    private JFrame frame;\n+    private JTable table;\n+\n+    private volatile Point tableLoc;\n+    private volatile Rectangle cellRect;\n+\n+    private volatile Object editedValue;\n+    private volatile boolean testResult;\n+\n+    private final Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        final bug4275046 test = new bug4275046();\n+        test.test();\n+    }\n+\n+    public bug4275046() throws AWTException {\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+    }\n+\n+    private void createGUI() {\n+        frame = new JFrame(\"bug4275046\");\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+\n+        JComboBox<Object> cb = new JComboBox<>(\n+                new Object[] {\"blue\", \"yellow\", \"green\", \"red\"});\n+        cb.setEditable(true);\n+        DefaultCellEditor comboEditor = new DefaultCellEditor(cb);\n+        comboEditor.setClickCountToStart(1);\n+\n+        DefaultTableModel model = new DefaultTableModel(data, colNames);\n+        table = new JTable(model);\n+        table.getColumnModel().getColumn(1).setCellEditor(comboEditor);\n+\n+        frame.add(table);\n+        frame.pack();\n+        frame.setSize(550, 400);\n+        frame.setVisible(true);\n+    }\n+\n+    private void test() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                @Override\n+                public void run() {\n+                    createGUI();\n+                }\n+            });\n+\n+            runTest();\n+            checkResult();\n+        } finally {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                @Override\n+                public void run() {\n+                    if (frame != null) {\n+                        frame.dispose();\n+                    }\n+                }\n+            });\n+        }\n+    }\n+\n+    private void runTest() throws Exception {\n+        robot.waitForIdle();\n+\n+        \/\/ Click the first cell in the \"color\" column\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            @Override\n+            public void run() {\n+                tableLoc = table.getLocationOnScreen();\n+                cellRect = table.getCellRect(0, 1, true);\n+            }\n+        });\n+\n+        robot.mouseMove(tableLoc.x + cellRect.x + cellRect.width \/ 2,\n+                        tableLoc.y + cellRect.y + cellRect.height \/ 2);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.waitForIdle();\n+\n+        \/\/ Edit the cell\n+        robot.keyPress(KeyEvent.VK_E);\n+        robot.keyRelease(KeyEvent.VK_E);\n+\n+        robot.keyPress(KeyEvent.VK_D);\n+        robot.keyRelease(KeyEvent.VK_D);\n+\n+        robot.keyPress(KeyEvent.VK_I);\n+        robot.keyRelease(KeyEvent.VK_I);\n+\n+        robot.keyPress(KeyEvent.VK_T);\n+        robot.keyRelease(KeyEvent.VK_T);\n+\n+        robot.keyPress(KeyEvent.VK_E);\n+        robot.keyRelease(KeyEvent.VK_E);\n+\n+        robot.keyPress(KeyEvent.VK_D);\n+        robot.keyRelease(KeyEvent.VK_D);\n+        robot.delay(100);\n+\n+        \/\/ Click another cell\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            @Override\n+            public void run() {\n+                cellRect = table.getCellRect(1, 2, true);\n+            }\n+        });\n+\n+        robot.mouseMove(tableLoc.x + cellRect.x + cellRect.width \/ 2,\n+                        tableLoc.y + cellRect.y + cellRect.height \/ 2);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.delay(100);\n+    }\n+\n+    private void checkResult() throws Exception {\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            @Override\n+            public void run() {\n+            \/\/ Read the edited value of from the cell\n+            editedValue = table.getModel().getValueAt(0, 1);\n+            System.out.println(\"The edited value is = \" + editedValue);\n+            testResult = editedValue.equals(EXPECTED_VALUE);\n+            if (testResult) {\n+                System.out.println(\"Test passed\");\n+            } else {\n+                System.out.println(\"Test failed\");\n+            }\n+        }\n+        });\n+        if (!testResult) {\n+            throw new RuntimeException(\"Expected value in the cell: '\" +\n+                                       EXPECTED_VALUE + \"' but found '\" + editedValue + \"'.\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/4275046\/bug4275046.java","additions":192,"deletions":0,"binary":false,"changes":192,"status":"added"}]}