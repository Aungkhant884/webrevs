{"files":[{"patch":"@@ -328,1 +328,1 @@\n-      intervals->at(i)->print_on(output());\n+      intervals->at(i)->print_on(output(), true);\n","filename":"src\/hotspot\/share\/c1\/c1_CFGPrinter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3215,0 +3215,6 @@\n+  LIR_Opr opr = get_operand(reg_num);\n+  assert(opr->is_valid(), \"unknown register\");\n+  opr->print(out);\n+}\n+\n+LIR_Opr LinearScan::get_operand(int reg_num) {\n@@ -3234,1 +3240,1 @@\n-    assert(false, \"unknown register\");\n+    \/\/ reg_num == -1 or a virtual register, return the illegal operand\n@@ -3236,1 +3242,1 @@\n-  opr->print(out);\n+  return opr;\n@@ -4601,1 +4607,1 @@\n-void Interval::print_on(outputStream* out) const {\n+void Interval::print_on(outputStream* out, bool is_cfg_printer) const {\n@@ -4611,1 +4617,0 @@\n-\n@@ -4613,4 +4618,9 @@\n-  if (reg_num() < LIR_OprDesc::vreg_base) {\n-    LinearScan::print_reg_num(out, assigned_reg());\n-  } else if (assigned_reg() != -1 && (LinearScan::num_physical_regs(type()) == 1 || assigned_regHi() != -1)) {\n-    LinearScan::calc_operand_for_interval(this)->print(out);\n+\n+  if (is_cfg_printer) {\n+    \/\/ Special version for compatibility with C1 Visualizer.\n+    LIR_Opr opr = LinearScan::get_operand(reg_num());\n+    if (opr->is_valid()) {\n+      out->print(\"\\\"\");\n+      opr->print(out);\n+      out->print(\"\\\" \");\n+    }\n@@ -4618,2 +4628,10 @@\n-    \/\/ Virtual register that has no assigned register yet.\n-    out->print(\"[ANY]\");\n+    \/\/ Improved output for normal debugging.\n+    if (reg_num() < LIR_OprDesc::vreg_base) {\n+      LinearScan::print_reg_num(out, assigned_reg());\n+    } else if (assigned_reg() != -1 && (LinearScan::num_physical_regs(type()) == 1 || assigned_regHi() != -1)) {\n+      LinearScan::calc_operand_for_interval(this)->print(out);\n+    } else {\n+      \/\/ Virtual register that has no assigned register yet.\n+      out->print(\"[ANY]\");\n+    }\n+    out->print(\" \");\n@@ -4621,2 +4639,1 @@\n-\n-  out->print(\" %d %d \", split_parent()->reg_num(), (register_hint(false) != NULL ? register_hint(false)->reg_num() : -1));\n+  out->print(\"%d %d \", split_parent()->reg_num(), (register_hint(false) != NULL ? register_hint(false)->reg_num() : -1));\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.cpp","additions":29,"deletions":12,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -372,0 +372,1 @@\n+  static LIR_Opr get_operand(int reg_num);\n@@ -636,1 +637,5 @@\n-  void print_on(outputStream* out) const;\n+  void print_on(outputStream* out) const {\n+    print_on(out, false);\n+  }\n+  \/\/ Special version for compatibility with C1 Visualizer.\n+  void print_on(outputStream* out, bool is_cfg_printer) const;\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}