{"files":[{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +43,2 @@\n-          NULL \/* barrier_set_nmethod *\/,\n-          NULL \/* barrier_set_stack_chunk *\/,\n+          nullptr \/* barrier_set_nmethod *\/,\n+          nullptr \/* barrier_set_stack_chunk *\/,\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonBarrierSet.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,0 +2,1 @@\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +108,1 @@\n-  HeapWord* res = NULL;\n+  HeapWord* res = nullptr;\n@@ -111,1 +112,1 @@\n-    if (res != NULL) {\n+    if (res != nullptr) {\n@@ -121,1 +122,1 @@\n-      if (res != NULL) {\n+      if (res != nullptr) {\n@@ -140,1 +141,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -238,1 +239,1 @@\n-  if (res != NULL) {\n+  if (res != nullptr) {\n@@ -300,1 +301,1 @@\n-  if (_space != NULL) {\n+  if (_space != nullptr) {\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-          _space(NULL) {};\n+          _space(nullptr) {};\n@@ -117,1 +117,1 @@\n-  HeapWord* block_start(const void* addr) const { return NULL;  }\n+  HeapWord* block_start(const void* addr) const { return nullptr;  }\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}