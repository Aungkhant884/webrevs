{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -852,0 +852,3 @@\n+#define GOT_HOTSPOT_TRAP (KERN_SUCCESS + 1)\n+#define GOT_UNKNOWN_EXC  (KERN_SUCCESS + 2)\n+\n@@ -861,0 +864,7 @@\n+  \/\/ Uncommon traps in the JVM can result in a \"crash\". We just ignore them.\n+  \/\/ Returning a result other than KERN_SUCCESS means it will be passed on to the\n+  \/\/ next handler, which should be in the JVM so it can do the right thing with it.\n+  if (exception_type == EXC_BAD_INSTRUCTION || exception_type == EXC_BAD_ACCESS) {\n+    return GOT_HOTSPOT_TRAP;\n+  }\n+\n@@ -870,1 +880,1 @@\n-                \"codes[num_codes -1] = %d, num_codes = %d\\n\",\n+                \"codes[num_codes -1] = 0x%llx, num_codes = %d\\n\",\n@@ -872,1 +882,1 @@\n-    return MACH_RCV_INVALID_TYPE;\n+    return GOT_UNKNOWN_EXC;\n@@ -895,0 +905,4 @@\n+#define WAIT_SUCCESS 0\n+#define WAIT_RETRY   1\n+#define WAIT_FAILURE 2\n+\n@@ -896,1 +910,1 @@\n-static bool wait_for_exception() {\n+static int wait_for_exception() {\n@@ -910,1 +924,1 @@\n-    return false;\n+    return WAIT_FAILURE;\n@@ -913,8 +927,12 @@\n-  if (mach_exc_server(&exc_msg.header, &rep_msg.header) == false ||\n-      rep_msg.ret_code != KERN_SUCCESS) {\n-    print_error(\"attach: wait_for_exception: mach_exc_server failure\\n\");\n-    if (rep_msg.ret_code != KERN_SUCCESS) {\n-      print_error(\"catch_mach_exception_raise() failed '%s' (%d)\\n\",\n-                  mach_error_string(rep_msg.ret_code), rep_msg.ret_code);\n-    }\n-    return false;\n+  if (!mach_exc_server(&exc_msg.header, &rep_msg.header)) {\n+    print_error(\"attach: wait_for_exception: mach_exc_server failed\\n\");\n+    return WAIT_FAILURE;\n+  }\n+  if (rep_msg.ret_code == GOT_UNKNOWN_EXC) {\n+    print_error(\"attach: wait_for_exception: catch_mach_exception_raise() got unknown exception type\\n\");\n+    return WAIT_FAILURE;\n+  }\n+  if (rep_msg.ret_code == GOT_HOTSPOT_TRAP) {\n+    \/\/ hotspot uncommon trap. Just retry.\n+    print_debug(\"attach: wait_for_exception: retrying\\n\");\n+    return WAIT_RETRY;\n@@ -929,1 +947,1 @@\n-  return true;\n+  return WAIT_SUCCESS;\n@@ -1023,1 +1041,8 @@\n-  if (wait_for_exception() != true) {\n+  int retry_count = 0;\n+  int wait_result;\n+  do {\n+    wait_result = wait_for_exception();\n+  } while (wait_result == WAIT_RETRY && retry_count++ < 5);\n+\n+  if (wait_result != WAIT_SUCCESS) {\n+    print_error(\"attach: wait_for_exception() failed. Retried %d times\\n\", retry_count);\n","filename":"src\/jdk.hotspot.agent\/macosx\/native\/libsaproc\/MacosxDebuggerLocal.m","additions":40,"deletions":15,"binary":false,"changes":55,"status":"modified"}]}