{"files":[{"patch":"@@ -146,1 +146,4 @@\n-  static const int table_size = 7919;\n+  \/\/ We chose 8191, as this is a Mersenne prime (2^x - 1), which for a random\n+  \/\/  polynomial modulo p = (2^x - 1) is uniformily distributed in [p], so each\n+  \/\/  bit has the same distribution.\n+  static const int table_size = 8191; \/\/ i.e. 8191==(2^13 - 1);\n@@ -153,5 +156,4 @@\n-  static unsigned calculate_hash(const void* p) {\n-    uintptr_t tmp = p2i(p);\n-    unsigned hash = (unsigned)tmp\n-                     LP64_ONLY( ^ (unsigned)(tmp >> 32));\n-    return hash;\n+  static uint64_t calculate_hash(const void* p) {\n+    \/\/ Keep hash function simple, the modulo\n+    \/\/ operation in index function will do the \"heavy lifting\".\n+    return (uint64_t)(p);\n@@ -161,1 +163,2 @@\n-    const unsigned hash = calculate_hash(p);\n+    const uint64_t hash = calculate_hash(p);\n+    \/\/ \"table_size\" is a Mersenne prime, so \"modulo\" is all we need here.\n","filename":"src\/hotspot\/share\/services\/nmtPreInit.hpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"}]}