{"files":[{"patch":"@@ -32,0 +32,1 @@\n+#include \"prims\/vectorSupport.hpp\"\n@@ -95,0 +96,1 @@\n+  static bool is_vpopcnt_long(Node* n);\n@@ -507,0 +509,8 @@\n+\/\/------------------------------PopCountVLNode---------------------------------\n+\/\/ Vector popcount long bits\n+class PopCountVLNode : public VectorNode {\n+ public:\n+  PopCountVLNode(Node* in, const TypeVect* vt) : VectorNode(in,vt) {}\n+  virtual int Opcode() const;\n+};\n+\n@@ -985,0 +995,10 @@\n+  virtual Node* Identity(PhaseGVN* phase);\n+};\n+\n+class VectorLongToMaskNode : public VectorNode {\n+ public:\n+  VectorLongToMaskNode(Node* mask, const TypeVect* ty):\n+    VectorNode(mask, ty) {\n+  }\n+  virtual int Opcode() const;\n+  Node* Ideal(PhaseGVN* phase, bool can_reshape);\n@@ -1272,2 +1292,7 @@\n-  MacroLogicVNode(Node* in1, Node* in2, Node* in3, Node* fn, const TypeVect* vt)\n-  : VectorNode(in1, in2, in3, fn, vt) {}\n+  MacroLogicVNode(Node* in1, Node* in2, Node* in3, Node* fn, Node* mask, const TypeVect* vt)\n+  : VectorNode(in1, in2, in3, fn, vt) {\n+     if (mask) {\n+       this->add_req(mask);\n+       this->add_flag(Node::Flag_is_predicated_vector);\n+     }\n+  }\n@@ -1278,1 +1303,2 @@\n-  static MacroLogicVNode* make(PhaseGVN& igvn, Node* in1, Node* in2, Node* in3, uint truth_table, const TypeVect* vt);\n+  static MacroLogicVNode* make(PhaseGVN& igvn, Node* in1, Node* in2, Node* in3,\n+                               Node* mask, uint truth_table, const TypeVect* vt);\n@@ -1409,1 +1435,1 @@\n-\n+  static Node* makeCastNode(PhaseGVN* phase, Node* in1, const TypeVect * vt);\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":30,"deletions":4,"binary":false,"changes":34,"status":"modified"}]}