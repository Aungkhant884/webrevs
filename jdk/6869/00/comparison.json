{"files":[{"patch":"@@ -135,1 +135,2 @@\n-                 (declaringClass.getModifiers() & Modifier.STATIC) == 0) ) {\n+                 (declaringClass.getModifiers() & Modifier.STATIC) == 0) &&\n+                 filter == TypeAnnotation.TypeAnnotationTarget.METHOD_FORMAL_PARAMETER) {\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/TypeAnnotationParser.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,2 @@\n-        testRunException();\n+        testRunException(TestClassException.class.getDeclaredMethod(\"foo\", (Class<?>[])null));\n+        testRunException(Outer2.TestClassException2.class.getDeclaredConstructor(Outer2.class));\n@@ -145,3 +146,2 @@\n-    private static void testRunException() throws Exception {\n-        Method m = TestClassException.class.getDeclaredMethod(\"foo\", (Class<?>[])null);\n-        AnnotatedType[] ts = m.getAnnotatedExceptionTypes();\n+    private static void testRunException(Executable e) throws Exception {\n+        AnnotatedType[] ts = e.getAnnotatedExceptionTypes();\n@@ -627,0 +627,9 @@\n+class Outer2 {\n+    abstract class TestClassException2 {\n+        public TestClassException2() throws\n+                @TypeAnno(\"RE\") @TypeAnno2(\"RE2\") RuntimeException,\n+                NullPointerException,\n+                @TypeAnno(\"AIOOBE\") ArrayIndexOutOfBoundsException {}\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/lang\/annotation\/TypeAnnotationReflection.java","additions":13,"deletions":4,"binary":false,"changes":17,"status":"modified"}]}