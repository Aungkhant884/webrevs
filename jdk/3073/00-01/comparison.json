{"files":[{"patch":"@@ -3929,5 +3929,5 @@\n-char* os::Linux::reserve_and_commit_special(size_t bytes,\n-                                            size_t page_size,\n-                                            char* req_addr,\n-                                            bool exec) {\n-  assert(UseLargePages && UseHugeTLBFS, \"only for Huge TLBFS large pages\");\n+char* os::Linux::commit_memory_special(size_t bytes,\n+                                       size_t page_size,\n+                                       char* req_addr,\n+                                       bool exec) {\n+  assert(UseLargePages && UseHugeTLBFS, \"Should only get here when HugeTLBFS large pages are used\");\n@@ -3977,3 +3977,4 @@\n-  \/\/ properly aligned. If a requested address is given it will\n-  \/\/ be used and it must be aligned to both the large page size\n-  \/\/ and the given alignment. The larger of the two will be used.\n+  \/\/ properly aligned. At this point no pages are committed. If\n+  \/\/ a requested address is given it will be used and it must be\n+  \/\/ aligned to both the large page size and the given alignment.\n+  \/\/ The larger of the two will be used.\n@@ -3986,1 +3987,1 @@\n-  \/\/ Start of by mapping large pages.\n+  \/\/ Start of by committing large pages.\n@@ -3988,1 +3989,1 @@\n-  char* large_mapping = reserve_and_commit_special(large_bytes, os::large_page_size(), aligned_start, exec);\n+  char* large_mapping = commit_memory_special(large_bytes, os::large_page_size(), aligned_start, exec);\n@@ -3991,1 +3992,2 @@\n-    \/\/ The size was large page aligned so return the large mapping.\n+    \/\/ The size was large page aligned so no additional work is\n+    \/\/ needed even if the commit failed.\n@@ -3999,2 +4001,2 @@\n-    \/\/ Large mapping failed, so we need to unmap the reminder\n-    \/\/ of the orinal reservation.\n+    \/\/ Failed to commit large pages, so we need to unmap the\n+    \/\/ reminder of the orinal reservation.\n@@ -4005,2 +4007,2 @@\n-  \/\/ Map the reminding bytes using small pages.\n-  void* small_mapping = reserve_and_commit_special(small_size, os::vm_page_size(), small_start, exec);\n+  \/\/ Commit the reminding bytes using small pages.\n+  void* small_mapping = commit_memory_special(small_size, os::vm_page_size(), small_start, exec);\n@@ -4008,1 +4010,1 @@\n-    \/\/ Failed to map the remaining size, need to unmap large.\n+    \/\/ Failed to commit the remaining size, need to unmap large.\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  static char* reserve_and_commit_special(size_t bytes, size_t page_size, char* req_addr, bool exec);\n+  static char* commit_memory_special(size_t bytes, size_t page_size, char* req_addr, bool exec);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}