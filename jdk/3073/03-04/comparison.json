{"files":[{"patch":"@@ -3929,4 +3929,4 @@\n-char* os::Linux::commit_memory_special(size_t bytes,\n-                                       size_t page_size,\n-                                       char* req_addr,\n-                                       bool exec) {\n+bool os::Linux::commit_memory_special(size_t bytes,\n+                                      size_t page_size,\n+                                      char* req_addr,\n+                                      bool exec) {\n@@ -3949,1 +3949,1 @@\n-    return NULL;\n+    return false;\n@@ -3959,1 +3959,1 @@\n-  return addr;\n+  return true;\n@@ -3989,1 +3989,1 @@\n-  char* large_mapping = commit_memory_special(large_bytes, os::large_page_size(), aligned_start, exec);\n+  bool large_committed = commit_memory_special(large_bytes, os::large_page_size(), aligned_start, exec);\n@@ -3991,1 +3991,1 @@\n-  if (bytes == large_bytes) {\n+  if (large_committed && bytes == large_bytes) {\n@@ -3994,1 +3994,1 @@\n-    return large_mapping;\n+    return aligned_start;\n@@ -4000,1 +4000,1 @@\n-  if (large_mapping == NULL) {\n+  if (!large_committed) {\n@@ -4008,4 +4008,5 @@\n-  void* small_mapping = commit_memory_special(small_size, os::vm_page_size(), small_start, exec);\n-  if (small_mapping == NULL) {\n-    \/\/ Failed to commit the remaining size, need to unmap large.\n-    ::munmap(large_mapping, large_bytes);\n+  bool small_committed = commit_memory_special(small_size, os::vm_page_size(), small_start, exec);\n+  if (!small_committed) {\n+    \/\/ Failed to commit the remaining size, need to unmap\n+    \/\/ the large pages part of the reservation.\n+    ::munmap(aligned_start, large_bytes);\n@@ -4014,1 +4015,1 @@\n-  return large_mapping;\n+  return aligned_start;\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  static char* commit_memory_special(size_t bytes, size_t page_size, char* req_addr, bool exec);\n+  static bool commit_memory_special(size_t bytes, size_t page_size, char* req_addr, bool exec);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}