{"files":[{"patch":"@@ -2411,3 +2411,3 @@\n-  case VerifyOption_G1UsePrevMarking: return is_obj_dead(obj, hr);\n-  case VerifyOption_G1UseFullMarking: return is_obj_dead_full(obj, hr);\n-  default:                            ShouldNotReachHere();\n+    case VerifyOption::G1UsePrevMarking: return is_obj_dead(obj, hr);\n+    case VerifyOption::G1UseFullMarking: return is_obj_dead_full(obj, hr);\n+    default:                            ShouldNotReachHere();\n@@ -2421,3 +2421,3 @@\n-  case VerifyOption_G1UsePrevMarking: return is_obj_dead(obj);\n-  case VerifyOption_G1UseFullMarking: return is_obj_dead_full(obj);\n-  default:                            ShouldNotReachHere();\n+    case VerifyOption::G1UsePrevMarking: return is_obj_dead(obj);\n+    case VerifyOption::G1UseFullMarking: return is_obj_dead_full(obj);\n+    default:                            ShouldNotReachHere();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1222,1 +1222,1 @@\n-  verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption_G1UsePrevMarking, \"Remark before\");\n+  verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption::G1UsePrevMarking, \"Remark before\");\n@@ -1283,1 +1283,1 @@\n-    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption_G1UsePrevMarking, \"Remark after\");\n+    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption::G1UsePrevMarking, \"Remark after\");\n@@ -1292,1 +1292,1 @@\n-    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption_G1UsePrevMarking, \"Remark overflow\");\n+    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption::G1UsePrevMarking, \"Remark overflow\");\n@@ -1438,1 +1438,1 @@\n-  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyOption_G1UsePrevMarking, \"Cleanup before\");\n+  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyOption::G1UsePrevMarking, \"Cleanup before\");\n@@ -1448,1 +1448,1 @@\n-  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyOption_G1UsePrevMarking, \"Cleanup after\");\n+  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyOption::G1UsePrevMarking, \"Cleanup after\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-  _heap->verify(VerifyOption_G1UseFullMarking);\n+  _heap->verify(VerifyOption::G1UseFullMarking);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-    _verify_closure(VerifyOption_G1UseFullMarking),\n+    _verify_closure(VerifyOption::G1UseFullMarking),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCMarker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-    if (_vo == VerifyOption_G1UseFullMarking) {\n+    if (_vo == VerifyOption::G1UseFullMarking) {\n@@ -222,1 +222,1 @@\n-      if (_vo == VerifyOption_G1UseFullMarking) {\n+      if (_vo == VerifyOption::G1UseFullMarking) {\n@@ -496,1 +496,2 @@\n-    log_error(gc, verify)(\"Heap after failed verification (kind %d):\", vo);\n+    log_error(gc, verify)(\"Heap after failed verification (kind %u):\",\n+                          static_cast<std::underlying_type_t<VerifyOption>>(vo));\n@@ -590,1 +591,1 @@\n-  verify(type, VerifyOption_G1UsePrevMarking, \"Before GC\");\n+  verify(type, VerifyOption::G1UsePrevMarking, \"Before GC\");\n@@ -594,1 +595,1 @@\n-  verify(type, VerifyOption_G1UsePrevMarking, \"After GC\");\n+  verify(type, VerifyOption::G1UsePrevMarking, \"After GC\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -404,1 +404,1 @@\n-  if (vo == VerifyOption_G1UseFullMarking) {\n+  if (vo == VerifyOption::G1UseFullMarking) {\n@@ -767,1 +767,1 @@\n-  verify_rem_set(VerifyOption_G1UsePrevMarking, &failures);\n+  verify_rem_set(VerifyOption::G1UsePrevMarking, &failures);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,2 +28,4 @@\n-enum VerifyOption {\n-  VerifyOption_Default = 0,\n+#include \"utilities\/globalDefinitions.hpp\"\n+\n+enum class VerifyOption : uint {\n+  Default = 0,\n@@ -34,1 +36,1 @@\n-  VerifyOption_G1UsePrevMarking = VerifyOption_Default,\n+  G1UsePrevMarking = Default,\n@@ -37,1 +39,1 @@\n-  VerifyOption_G1UseFullMarking = VerifyOption_G1UsePrevMarking + 1\n+  G1UseFullMarking = G1UsePrevMarking + 1\n","filename":"src\/hotspot\/share\/gc\/shared\/verifyOption.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -362,1 +362,1 @@\n-    verify(VerifyOption_Default, prefix);\n+    verify(VerifyOption::Default, prefix);\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}