{"files":[{"patch":"@@ -186,5 +186,0 @@\n-    \/**\n-     * To check whether annotation field heading is printed or not.\n-     *\/\n-    protected boolean printedAnnotationFieldHeading = false;\n-\n@@ -1650,1 +1645,1 @@\n-     * Return true if relative links should not be redirected.\n+     * Returns true if relative links should be redirected.\n@@ -1652,1 +1647,27 @@\n-     * @return Return true if a relative link should not be redirected.\n+     * @return true if a relative link should be redirected.\n+     *\/\n+    private boolean shouldRedirectRelativeLinks(Element element) {\n+        if (element == null || utils.isOverviewElement(element)) {\n+            \/\/ Can't redirect unless there is a valid source element.\n+            return false;\n+        }\n+        \/\/ Retrieve the element of this writer if it is a \"primary\" writer for an element.\n+        \/\/ Note: It would be nice to have getCurrentPageElement() return package and module elements\n+        \/\/ in their respective writers, but other uses of the method are only interested in TypeElements.\n+        Element currentPageElement = getCurrentPageElement();\n+        if (currentPageElement == null) {\n+            if (this instanceof PackageWriterImpl packageWriter) {\n+                currentPageElement = packageWriter.packageElement;\n+            } else if (this instanceof ModuleWriterImpl moduleWriter) {\n+                currentPageElement = moduleWriter.mdle;\n+            }\n+        }\n+        \/\/ Redirect link if the current writer is not the primary writer for the source element.\n+        return currentPageElement == null\n+                || (currentPageElement != element\n+                    &&  currentPageElement != utils.getEnclosingTypeElement(element));\n+    }\n+\n+    \/**\n+     * Returns true if element lives in the same package as the type or package\n+     * element of this writer.\n@@ -1654,3 +1675,5 @@\n-    private boolean shouldNotRedirectRelativeLinks() {\n-        return  this instanceof ClassWriter ||\n-                this instanceof PackageSummaryWriter;\n+    private boolean inSamePackage(Element element) {\n+        Element currentPageElement = (this instanceof PackageWriterImpl packageWriter)\n+                ? packageWriter.packageElement : getCurrentPageElement();\n+        return currentPageElement != null && !utils.isModule(element)\n+                && utils.containingPackage(currentPageElement) == utils.containingPackage(element);\n@@ -1684,1 +1707,1 @@\n-        if (element == null || utils.isOverviewElement(element) || shouldNotRedirectRelativeLinks()) {\n+        if (!shouldRedirectRelativeLinks(element)) {\n@@ -1687,5 +1710,17 @@\n-\n-        DocPath redirectPathFromRoot = new SimpleElementVisitor14<DocPath, Void>() {\n-            @Override\n-            public DocPath visitType(TypeElement e, Void p) {\n-                return docPaths.forPackage(utils.containingPackage(e));\n+        String lower = Utils.toLowerCase(text);\n+        if (lower.startsWith(\"mailto:\")\n+                || lower.startsWith(\"http:\")\n+                || lower.startsWith(\"https:\")\n+                || lower.startsWith(\"file:\")) {\n+            return text;\n+        }\n+        if (text.startsWith(\"#\")) {\n+            \/\/ Redirected fragment link: prepend HTML file name to make it work\n+            if (utils.isModule(element)) {\n+                text = \"module-summary.html\" + text;\n+            } else if (utils.isPackage(element)) {\n+                text = DocPaths.PACKAGE_SUMMARY.getPath() + text;\n+            } else {\n+                TypeElement typeElement = element instanceof TypeElement\n+                        ? (TypeElement) element : utils.getEnclosingTypeElement(element);\n+                text = docPaths.forName(typeElement).getPath() + text;\n@@ -1693,0 +1728,1 @@\n+        }\n@@ -1694,4 +1730,6 @@\n-            @Override\n-            public DocPath visitPackage(PackageElement e, Void p) {\n-                return docPaths.forPackage(e);\n-            }\n+        if (!inSamePackage(element)) {\n+            DocPath redirectPathFromRoot = new SimpleElementVisitor14<DocPath, Void>() {\n+                @Override\n+                public DocPath visitType(TypeElement e, Void p) {\n+                    return docPaths.forPackage(utils.containingPackage(e));\n+                }\n@@ -1699,4 +1737,4 @@\n-            @Override\n-            public DocPath visitVariable(VariableElement e, Void p) {\n-                return docPaths.forPackage(utils.containingPackage(e));\n-            }\n+                @Override\n+                public DocPath visitPackage(PackageElement e, Void p) {\n+                    return docPaths.forPackage(e);\n+                }\n@@ -1704,4 +1742,4 @@\n-            @Override\n-            public DocPath visitExecutable(ExecutableElement e, Void p) {\n-                return docPaths.forPackage(utils.containingPackage(e));\n-            }\n+                @Override\n+                public DocPath visitVariable(VariableElement e, Void p) {\n+                    return docPaths.forPackage(utils.containingPackage(e));\n+                }\n@@ -1709,3 +1747,19 @@\n-            @Override\n-            protected DocPath defaultAction(Element e, Void p) {\n-                return null;\n+                @Override\n+                public DocPath visitExecutable(ExecutableElement e, Void p) {\n+                    return docPaths.forPackage(utils.containingPackage(e));\n+                }\n+\n+                @Override\n+                public DocPath visitModule(ModuleElement e, Void p) {\n+                    return DocPaths.forModule(e);\n+                }\n+\n+                @Override\n+                protected DocPath defaultAction(Element e, Void p) {\n+                    return null;\n+                }\n+            }.visit(element);\n+            if (redirectPathFromRoot != null) {\n+                text = \"{@\" + (new DocRootTaglet()).getName() + \"}\/\"\n+                        + redirectPathFromRoot.resolve(text).getPath();\n+                return replaceDocRootDir(text);\n@@ -1713,12 +1767,0 @@\n-        }.visit(element);\n-        if (redirectPathFromRoot == null) {\n-            return text;\n-        }\n-        String lower = Utils.toLowerCase(text);\n-        if (!(lower.startsWith(\"mailto:\")\n-                || lower.startsWith(\"http:\")\n-                || lower.startsWith(\"https:\")\n-                || lower.startsWith(\"file:\"))) {\n-            text = \"{@\" + (new DocRootTaglet()).getName() + \"}\/\"\n-                    + redirectPathFromRoot.resolve(text).getPath();\n-            text = replaceDocRootDir(text);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":85,"deletions":43,"binary":false,"changes":128,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug      4460354 8014636 8043186 8195805 8182765 8196202\n+ * @bug      4460354 8014636 8043186 8195805 8182765 8196202 8262886\n@@ -49,1 +49,1 @@\n-    public void test() {\n+    public void testRelativeLinks() {\n@@ -53,5 +53,2 @@\n-                \"pkg\", \"pkg2\");\n-        checkExit(Exit.ERROR);\n-\n-        checkOutput(Output.OUT, true,\n-                \"attribute not supported in HTML5: name\");\n+                \"pkg\", \"pkg2\", \"pkg.sub\");\n+        checkExit(Exit.OK);\n@@ -64,0 +61,4 @@\n+            \"\"\"\n+                <a href=\"#class-fragment\">fragment class link<\/a>\"\"\",\n+            \"\"\"\n+                <a id=\"class-fragment\">Class fragment<\/a>\"\"\",\n@@ -69,1 +70,4 @@\n-                \\s<a href=\"relative-multi-line-link.html\">relative-multi-line-link<\/a>.\"\"\");\n+                <a href=\"#method-fragment\">fragment method link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"relative-multi-line-link.html\">relative-multi-line-link<\/a>\"\"\");\n+\n@@ -72,1 +76,20 @@\n-                <a href=\"relative-package-link.html\">relative package link<\/a>\"\"\");\n+                <a href=\"relative-package-link.html\">relative package link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"#package-fragment\">package fragment link<\/a>\"\"\",\n+            \"\"\"\n+                <a id=\"package-fragment\">Package fragment<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"relative-class-link.html\">relative class link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"C.html#class-fragment\">fragment class link<\/a>\"\"\");\n+\n+        \/\/ subclass in same pacakge\n+        checkOutput(\"pkg\/D.html\", true,\n+                \"\"\"\n+                    <a href=\"relative-class-link.html\">relative class link<\/a>\"\"\",\n+                \"\"\"\n+                    <a href=\"C.html#class-fragment\">fragment class link<\/a>\"\"\",\n+                \"\"\"\n+                    <a href=\"relative-method-link.html\">relative method link<\/a>\"\"\",\n+                \"\"\"\n+                    <a href=\"C.html#method-fragment\">fragment method link<\/a>\"\"\");\n@@ -77,0 +100,11 @@\n+        \/\/ subclass in subpackage\n+        checkOutput(\"pkg\/sub\/F.html\", true,\n+                \"\"\"\n+                    <a href=\"..\/..\/pkg\/relative-class-link.html\">relative class link<\/a>\"\"\",\n+                \"\"\"\n+                    <a href=\"..\/..\/pkg\/C.html#class-fragment\">fragment class link<\/a>\"\"\",\n+                \"\"\"\n+                    <a href=\"..\/..\/pkg\/relative-method-link.html\">relative method link<\/a>\"\"\",\n+                \"\"\"\n+                    <a href=\"..\/..\/pkg\/C.html#method-fragment\">fragment method link<\/a>\"\"\");\n+\n@@ -81,0 +115,2 @@\n+            \"\"\"\n+                <a href=\".\/pkg\/C.html#class-fragment\">fragment class link<\/a>\"\"\",\n@@ -85,0 +121,2 @@\n+            \"\"\"\n+                <a href=\".\/pkg\/C.html#method-fragment\">fragment method link<\/a>\"\"\",\n@@ -88,1 +126,1 @@\n-                \\s<a href=\".\/pkg\/relative-multi-line-link.html\">relative-multi-line-link<\/a>.\"\"\");\n+                <a href=\".\/pkg\/relative-multi-line-link.html\">relative-multi-line-link<\/a>\"\"\");\n@@ -93,1 +131,1 @@\n-                <div class=\"block\"><a name=\"masters\"><\/a>\"\"\");\n+                <div class=\"block\"><a id=\"masters\"><\/a>\"\"\");\n@@ -96,1 +134,1 @@\n-                <div class=\"block\"><a name=\".\/pkg\/masters\"><\/a>\"\"\");\n+                <div class=\"block\"><a id=\".\/pkg\/masters\"><\/a>\"\"\");\n@@ -101,1 +139,3 @@\n-                <a href=\"..\/pkg\/relative-package-link.html\">relative package link<\/a>.\"\"\",\n+                <a href=\"..\/pkg\/relative-package-link.html\">relative package link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"..\/pkg\/package-summary.html#package-fragment\">package fragment link<\/a>\"\"\",\n@@ -103,1 +143,3 @@\n-                <a href=\"..\/pkg\/relative-class-link.html\">relative class link<\/a>\"\"\");\n+                <a href=\"..\/pkg\/relative-class-link.html\">relative class link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"..\/pkg\/C.html#class-fragment\">fragment class link<\/a>\"\"\");\n@@ -107,0 +149,4 @@\n+            \"\"\"\n+                <a href=\"..\/..\/pkg\/relative-class-link.html\">relative class link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"..\/..\/pkg\/C.html#class-fragment\">fragment class link<\/a>\"\"\",\n@@ -111,0 +157,2 @@\n+            \"\"\"\n+                <a href=\"..\/..\/pkg\/C.html#method-fragment\">fragment method link<\/a>\"\"\",\n@@ -114,1 +162,1 @@\n-                \\s<a href=\"..\/..\/pkg\/relative-multi-line-link.html\">relative-multi-line-link<\/a>.\"\"\");\n+                <a href=\"..\/..\/pkg\/relative-multi-line-link.html\">relative-multi-line-link<\/a>\"\"\");\n@@ -120,0 +168,32 @@\n+\n+        \/\/ subpackage summary\n+        checkOutput(\"pkg\/sub\/package-summary.html\", true,\n+            \/\/ related packages\n+            \"\"\"\n+                <a href=\"..\/..\/pkg\/relative-package-link.html\">relative package link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"..\/..\/pkg\/package-summary.html#package-fragment\">package fragment link<\/a>\"\"\",\n+            \/\/ subclass inheriting relative link doc\n+            \"\"\"\n+                <a href=\"..\/..\/pkg\/relative-class-link.html\">relative class link<\/a>\"\"\",\n+            \"\"\"\n+                <a href=\"..\/..\/pkg\/C.html#class-fragment\">fragment class link<\/a>\"\"\");\n+\n+        \/\/ sibling package summary\n+        checkOutput(\"pkg2\/package-summary.html\", true,\n+            \"\"\"\n+                <a href=\"..\/pkg\/relative-class-link.html\">relative class link<\/a>\"\"\",\n+            \"\"\"\n+                 <a href=\"..\/pkg\/C.html#class-fragment\">fragment class link<\/a>\"\"\");\n+    }\n+\n+    @Override\n+    public void checkLinks() {\n+        \/\/ since the test uses explicit links to non-existent files,\n+        \/\/ we create those files to avoid false positive errors from checkLinks\n+        touch(\"pkg\/relative-class-link.html\");\n+        touch(\"pkg\/relative-field-link.html\");\n+        touch(\"pkg\/relative-method-link.html\");\n+        touch(\"pkg\/relative-package-link.html\");\n+        touch(\"pkg\/relative-multi-line-link.html\");\n+        super.checkLinks();\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/TestRelativeLinks.java","additions":96,"deletions":16,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -0,0 +1,115 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8262886\n+ * @summary javadoc generates broken links with {@inheritDoc}\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.api\n+ *          jdk.javadoc\/jdk.javadoc.internal.tool\n+ *          jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ * @library ..\/..\/lib \/tools\/lib\n+ * @build toolbox.ToolBox toolbox.ModuleBuilder javadoc.tester.*\n+ * @run main TestRelativeModuleLinks\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+import javadoc.tester.JavadocTester;\n+import toolbox.ModuleBuilder;\n+import toolbox.ToolBox;\n+\n+public class TestRelativeModuleLinks extends JavadocTester {\n+\n+    public final ToolBox tb;\n+    public static void main(String... args) throws Exception {\n+        TestRelativeModuleLinks tester = new TestRelativeModuleLinks();\n+        tester.runTests(m -> new Object[] { Paths.get(m.getName()) });\n+    }\n+\n+    public TestRelativeModuleLinks() {\n+        tb = new ToolBox();\n+    }\n+\n+    @Test\n+    public void testRelativeModuleLinks(Path base) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        new ModuleBuilder(tb, \"ma\")\n+                .classes(\"package pa; public class A {}\")\n+                .exports(\"pa\")\n+                .comment(\"\"\"\n+                         <a href=\"doc-files\/file.html\">relative module link<\/a>,\n+                         <a href=\"#module-fragment\">fragment module link<\/a>.\n+                         <a id=\"module-fragment\">Module fragment<\/a>.\"\"\")\n+                .write(src);\n+        new ModuleBuilder(tb, \"mb\")\n+                .classes(\"package pb; public class B {}\")\n+                .exports(\"pb\")\n+                .requiresTransitive(\"ma\")\n+                .write(src);\n+        Path docFiles = src.resolve(\"ma\").resolve(\"doc-files\");\n+        tb.writeFile(docFiles.resolve(\"file.html\"),\n+                \"\"\"\n+                    <html>\n+                    <head><title>Module HTML File<\/title><\/head>\n+                    <body><h1>Module HTML File<\/h1>\n+                    File content<\/body>\n+                    <\/html>\n+                    \"\"\");\n+        javadoc(\"-d\", base.resolve(\"api\").toString(),\n+                \"-quiet\",\n+                \"--module-source-path\", src.toString(),\n+                \"--module\", \"ma,mb\");\n+\n+        checkExit(Exit.OK);\n+\n+        \/\/ Main page\n+        checkOutput(\"index.html\", true,\n+                \"\"\"\n+                <div class=\"block\"><a href=\".\/ma\/doc-files\/file.html\">relative module link<\/a>,\n+                 <a href=\".\/ma\/module-summary.html#module-fragment\">fragment module link<\/a>.<\/div>\"\"\");\n+\n+        \/\/ Index page\n+        checkOutput(\"index-all.html\", true,\n+                \"\"\"\n+                <div class=\"block\"><a href=\".\/ma\/doc-files\/file.html\">relative module link<\/a>,\n+                 <a href=\".\/ma\/module-summary.html#module-fragment\">fragment module link<\/a>.<\/div>\"\"\");\n+\n+        \/\/ Own module page\n+        checkOutput(\"ma\/module-summary.html\", true,\n+                \"\"\"\n+                <div class=\"block\"><a href=\"doc-files\/file.html\">relative module link<\/a>,\n+                 <a href=\"#module-fragment\">fragment module link<\/a>.\n+                 <a id=\"module-fragment\">Module fragment<\/a>.<\/div>\"\"\");\n+\n+        \/\/ Other module page\n+        checkOutput(\"mb\/module-summary.html\", true,\n+                \"\"\"\n+                <div class=\"block\"><a href=\"..\/ma\/doc-files\/file.html\">relative module link<\/a>,\n+                 <a href=\"..\/ma\/module-summary.html#module-fragment\">fragment module link<\/a>.<\/div>\"\"\");\n+    }\n+}\n+\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/TestRelativeModuleLinks.java","additions":115,"deletions":0,"binary":false,"changes":115,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,2 +27,5 @@\n- * Here is a relative link in a class:\n- * <a href=\"relative-class-link.html\">relative class link<\/a>.\n+ * Here are two relative links in a class:\n+ * <a href=\"relative-class-link.html\">relative class link<\/a>,\n+ * <a href=\"#class-fragment\">fragment class link<\/a>.\n+ *\n+ * <a id=\"class-fragment\">Class fragment<\/a>.\n@@ -39,2 +42,3 @@\n-     * Here is a relative link in a method:\n-     * <a href=\"relative-method-link.html\">relative method link<\/a>.\n+     * Here are two relative links in a method:\n+     * <a href=\"relative-method-link.html\">relative method link<\/a>,\n+     * <a href=\"#method-fragment\">fragment method link<\/a>.\n@@ -48,0 +52,2 @@\n+     *\n+     * <a id=\"method-fragment\">Method fragment<\/a>.\n@@ -52,1 +58,1 @@\n-     * <a name=\"masters\"><\/a>\n+     * <a id=\"masters\"><\/a>\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/pkg\/C.java","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg;\n+\n+\/**\n+ * {@inheritDoc}\n+ *\n+ * A class that extends C and inherits some of its comments.\n+ *\/\n+public class D extends C {\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public D method() {\n+        return null;\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/pkg\/D.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -3,2 +3,5 @@\n-\t\tHere is a relative link in a package: \n-       <a href=\"relative-package-link.html\">relative package link<\/a>.\n+\t\tHere are two relative links in a package:\n+       <a href=\"relative-package-link.html\">relative package link<\/a>,\n+\t   <a href=\"#package-fragment\">package fragment link<\/a>.\n+\n+\t   <a id=\"package-fragment\">Package fragment<\/a>.\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/pkg\/package.html","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg.sub;\n+\n+import pkg.C;\n+\n+\/**\n+ * {@inheritDoc}\n+ *\n+ * A class that extends C and inherits some of its comments.\n+ *\/\n+public class F extends C {\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public F method() {\n+        return null;\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/pkg\/sub\/F.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package pkg2;\n+\n+import pkg.C;\n+\n+\/**\n+ * {@inheritDoc}\n+ *\n+ * A class that extends pkg.C from onother package and inherits some of its comments.\n+ *\/\n+public class E extends C {\n+\n+    \/**\n+     * {@inheritDoc}\n+     *\/\n+    @Override\n+    public E method() {\n+        return null;\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/pkg2\/E.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -1,29 +0,0 @@\n-\/*\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package pkg2;\n-\n-\/**\n- * Just a dummy class to force the overview page to generate.\n- *\/\n-public class Foo {}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testRelativeLinks\/pkg2\/Foo.java","additions":0,"deletions":29,"binary":false,"changes":29,"status":"deleted"}]}