{"files":[{"patch":"@@ -91,2 +91,1 @@\n- * downcall method handles and, when no longer required, they can be closed, via their associated\n- * {@linkplain MemorySession memory session}.\n+ * downcall method handles and, they are released via their associated {@linkplain MemorySession memory session}.\n@@ -108,1 +107,1 @@\n- *     <li>The memory session of {@code A} is <em>kept alive<\/em> (and cannot be closed) during the invocation.<\/li>\n+ *     <li>The memory session of {@code A} is {@linkplain MemorySession#whileAlive(Runnable) kept alive} during the invocation.<\/li>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/Linker.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -164,2 +164,2 @@\n- * MemorySession session = ...\n- * MemorySegment segment = MemorySegment.allocateNative(100, session);\n+ * Arena arena = ...\n+ * MemorySegment segment = arena.allocate(100);\n@@ -168,1 +168,1 @@\n- * session.close();\n+ * arena.close();\n@@ -175,1 +175,1 @@\n- * are inherited by its slices; that is, when the memory session associated with {@code segment} is closed, {@code slice}\n+ * are inherited by its slices; that is, when the memory session associated with {@code segment} ends, {@code slice}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/MemorySegment.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- * The segment is associated with a memory session that is {@linkplain java.lang.foreign.MemorySession#implicit() implicitly} closed,\n+ * The segment is associated with a memory session that is managed, {@linkplain java.lang.foreign.MemorySession#implicit() implicitly},\n@@ -100,2 +100,2 @@\n- * Since memory segments can be closed (see above), segments are also validated (upon access) to make sure that\n- * the memory session associated with the segment being accessed has not been closed prematurely.\n+ * Since memory segments created with arena can become invalid (see above), segments are also validated (upon access) to make sure that\n+ * the memory session associated with the segment being accessed is still alive.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}