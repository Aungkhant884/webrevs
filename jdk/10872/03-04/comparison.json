{"files":[{"patch":"@@ -178,4 +178,4 @@\n-            if (type instanceof ValueLayout) {\n-                return ofValue((ValueLayout)type);\n-            } else if (type instanceof GroupLayout) {\n-                return ofStruct((GroupLayout)type);\n+            if (type instanceof ValueLayout valueLayout) {\n+                return ofValue(valueLayout);\n+            } else if (type instanceof GroupLayout groupLayout) {\n+                return ofStruct(groupLayout);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/sysv\/TypeClass.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-        VMStorage nextStorage(int type, MemoryLayout layout) {\n+        VMStorage nextStorage(int type) {\n@@ -165,2 +165,1 @@\n-                long alignment = Math.max(layout.byteAlignment(), STACK_SLOT_SIZE);\n-                stackOffset = Utils.alignUp(stackOffset, alignment);\n+                assert stackOffset == Utils.alignUp(stackOffset, STACK_SLOT_SIZE); \/\/ should always be aligned\n@@ -202,1 +201,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -212,1 +211,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -218,1 +217,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -223,1 +222,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -228,1 +227,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.VECTOR, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.VECTOR);\n@@ -233,1 +232,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.VECTOR, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.VECTOR);\n@@ -266,1 +265,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -274,1 +273,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -280,1 +279,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -286,1 +285,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.INTEGER);\n@@ -291,1 +290,1 @@\n-                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.VECTOR, layout);\n+                    VMStorage storage = storageCalculator.nextStorage(StorageClasses.VECTOR);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/foreign\/abi\/x64\/windows\/CallArranger.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"}]}