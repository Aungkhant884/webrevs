{"files":[{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+\n+import org.testng.annotations.*;\n+\n+import java.lang.foreign.MemorySegment;\n+import java.nio.CharBuffer;\n+\n+import static org.testng.Assert.*;\n+\n+\/*\n+ * @test\n+ * @bug 8294621\n+ * @summary test that StringCharBuffer is not accepted by MemorySegment::ofBuffer\n+ * @enablePreview\n+ * @run testng TestOfBufferIssue\n+ *\/\n+\n+public class TestOfBufferIssue {\n+\n+    @Test\n+    public void ensure8294621Fixed() {\n+        try {\n+            final CharBuffer cb = CharBuffer.wrap(\"Hello\");\n+            MemorySegment src2 = MemorySegment.ofBuffer(cb);\n+            fail(\"A StringCharBuffer is not allowed as an argument.\");\n+        } catch (IllegalArgumentException iae) {\n+            \/\/ Ignored. Happy path\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/foreign\/TestOfBufferIssue.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"patch":"@@ -0,0 +1,79 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @enablePreview\n+ * @library ..\/ \/test\/lib\n+ * @requires ((os.arch == \"amd64\" | os.arch == \"x86_64\") & sun.arch.data.model == \"64\") | os.arch == \"aarch64\"\n+ * @run testng\/othervm --enable-native-access=ALL-UNNAMED TestDontRelease\n+ *\/\n+\n+import org.testng.annotations.Test;\n+\n+import java.lang.foreign.FunctionDescriptor;\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.MemorySession;\n+import java.lang.invoke.MethodHandle;\n+\n+import static java.lang.foreign.ValueLayout.ADDRESS;\n+import static java.lang.foreign.ValueLayout.JAVA_INT;\n+import static org.testng.Assert.assertTrue;\n+\n+public class TestDontRelease extends NativeTestHelper  {\n+\n+    static {\n+        System.loadLibrary(\"DontRelease\");\n+    }\n+\n+    @Test\n+    public void testDontRelease() {\n+        MethodHandle handle = downcallHandle(\"test_ptr\", FunctionDescriptor.ofVoid(ADDRESS));\n+        try (MemorySession session = MemorySession.openConfined()) {\n+            MemorySegment segment = session.allocate(JAVA_INT);\n+            session.whileAlive(() -> {\n+                Thread t = new Thread(() -> {\n+                    try {\n+                        \/\/ acquire of the segment should fail here,\n+                        \/\/ due to wrong thread\n+                        handle.invokeExact(segment);\n+                    } catch (Throwable e) {\n+                        \/\/ catch the exception.\n+                        assertTrue(e instanceof WrongThreadException);\n+                        assertTrue(e.getMessage().matches(\".*Attempted access outside owning thread.*\"));\n+                    }\n+                });\n+                t.start();\n+                try {\n+                    t.join();\n+                } catch (InterruptedException e) {\n+                    throw new RuntimeException(e);\n+                }\n+\n+                \/\/ the downcall above should not have called release on the session\n+                \/\/ so doing it here should succeed without error\n+            });\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/foreign\/dontrelease\/TestDontRelease.java","additions":79,"deletions":0,"binary":false,"changes":79,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifdef _WIN64\n+#define EXPORT __declspec(dllexport)\n+#else\n+#define EXPORT\n+#endif\n+\n+EXPORT void test_ptr(void* ptr) {}\n","filename":"test\/jdk\/java\/foreign\/dontrelease\/libDontRelease.c","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"}]}