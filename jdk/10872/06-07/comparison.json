{"files":[{"patch":"@@ -324,9 +324,9 @@\n-         @PreviewFeature(feature=PreviewFeature.Feature.FOREIGN)\n-         @CallerSensitive\n-         public Controller enableNativeAccess(Module target) {\n-             ensureInLayer(target);\n-             Reflection.ensureNativeAccess(Reflection.getCallerClass(), Module.class,\n-                 \"enableNativeAccess\");\n-             target.implAddEnableNativeAccess();\n-             return this;\n-         }\n+        @PreviewFeature(feature=PreviewFeature.Feature.FOREIGN)\n+        @CallerSensitive\n+        public Controller enableNativeAccess(Module target) {\n+            ensureInLayer(target);\n+            Reflection.ensureNativeAccess(Reflection.getCallerClass(), Module.class,\n+                \"enableNativeAccess\");\n+            target.implAddEnableNativeAccess();\n+            return this;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ModuleLayer.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -329,1 +329,1 @@\n-         * but with the specified pointee layout. An unbounded address layouts allow raw addresses to be accessed\n+         * but with the specified pointee layout. An unbounded address layout allow raw addresses to be accessed\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/ValueLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n- * operation either succeeds - and accesses a valid location of the region of memory backing the memory segment - or fails.\n+ * operation either succeeds - and accesses a valid location within the region of memory backing the memory segment - or fails.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}