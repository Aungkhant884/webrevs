{"files":[{"patch":"@@ -313,2 +313,0 @@\n-         * @since 20\n-         *\n@@ -325,0 +323,2 @@\n+         *\n+         * @since 20\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ModuleLayer.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,25 @@\n+\/*\n+ *  Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.  Oracle designates this\n+ *  particular file as subject to the \"Classpath\" exception as provided\n+ *  by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *   Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/SegmentScope.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -1002,3 +1002,5 @@\n-     * Maps a region of this channel's file into a new mapped memory segment, with the given offset,\n-     * size and memory session. The {@linkplain MemorySegment#address() address} of the returned memory segment\n-     * is the starting address of the mapped off-heap region backing the segment.\n+     * Maps a region of this channel's file into a new mapped memory segment,\n+     * with the given offset, size and memory session.\n+     * The {@linkplain MemorySegment#address() address} of the returned memory\n+     * segment is the starting address of the mapped off-heap region backing\n+     * the segment.\n","filename":"src\/java.base\/share\/classes\/java\/nio\/channels\/FileChannel.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}