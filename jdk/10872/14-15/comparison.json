{"files":[{"patch":"@@ -218,0 +218,3 @@\n+ * @apiNote Usual memory model guarantees, for example stated in {@jls 6.6} and {@jls 10.4}, do not apply\n+ * when accessing native memory segments as these segments are backed by off-heap regions of memory.\n+ *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/package-info.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-                       MemorySession.openImplicit());\n+                       MemorySession.implicit());\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+import java.lang.foreign.Arena;\n@@ -64,1 +65,1 @@\n-        var session = MemorySession.openConfined();\n+        var arena = Arena.openConfined();\n@@ -67,2 +68,2 @@\n-        try (session; fileChannel){\n-            fileChannel.map(FileChannel.MapMode.READ_WRITE, 1L, 10L, session);\n+        try (arena; fileChannel){\n+            fileChannel.map(FileChannel.MapMode.READ_WRITE, 1L, 10L, arena.session());\n@@ -74,1 +75,1 @@\n-        var session = MemorySession.openConfined();\n+        var arena = Arena.openConfined();\n@@ -77,2 +78,2 @@\n-        try (session; fileChannel){\n-            fileChannel.map(FileChannel.MapMode.READ_WRITE, 1L, 10L, session);\n+        try (arena; fileChannel){\n+            fileChannel.map(FileChannel.MapMode.READ_WRITE, 1L, 10L, arena.session());\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/MapToMemorySegmentTest.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}