{"files":[{"patch":"@@ -61,5 +61,0 @@\n-    \/**\n-     * Flag indicating whether a custom config has been read\n-     *\/\n-    static volatile boolean firstTimeCustom = true;\n-\n@@ -205,2 +200,7 @@\n-                    boolean found = false;\n-                    if (stax) {\n+                    boolean found = loadProperties(\n+                            Paths.get(SecuritySupport.getSystemProperty(\"java.home\"),\n+                                \"conf\", \"jaxp.properties\")\n+                                .toAbsolutePath().normalize().toString());\n+\n+                    \/\/ attempts to find stax.properties only if jaxp.properties is not available\n+                    if (stax && !found) {\n@@ -214,15 +214,1 @@\n-                    if (!found) {\n-                        loadProperties(\n-                            Paths.get(SecuritySupport.getSystemProperty(\"java.home\"),\n-                                \"conf\", \"jaxp.properties\")\n-                                .toAbsolutePath().normalize().toString());\n-                    }\n-                    firstTime = false;\n-                }\n-            }\n-        }\n-\n-        \/\/ load the custom configure on top of the default if any\n-        if (firstTimeCustom) {\n-            synchronized (cacheProps) {\n-                if (firstTimeCustom) {\n+                    \/\/ load the custom configure on top of the default if any\n@@ -233,1 +219,2 @@\n-                    firstTimeCustom = false;\n+\n+                    firstTime = false;\n@@ -253,1 +240,1 @@\n-                \/\/ ignore file not found error\n+                \/\/ shouldn't happen, but required by method getFileInputStream\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/SecuritySupport.java","additions":11,"deletions":24,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -27,4 +27,22 @@\n- * Defines the Java API for XML Processing (JAXP), the Streaming API for XML (StAX),\n- * the Simple API for XML (SAX), and the W3C Document Object Model (DOM) API.\n- *\n- * <h2 id=\"ConfigurationFile\">JAXP Configuration File<\/h2>\n+ * Defines the Java API for XML Processing (JAXP) that constitutes the java.xml\n+ * XML library. Factories and processors in this module are generally referred\n+ * to as XML factories and processors.\n+ *\n+ * <h2 id=\"PropertiesAndSP\">Properties and System Properties<\/h2>\n+ * Properties, defining the behavior and features of XML factories and processors\n+ * on which they are set, may have defined corresponding System Properties. When\n+ * they do, the system properties allow them to be set through the System API,\n+ * on the command line and\/or in the\n+ * <a href=\"#ConfigurationFile\">XML Library (java.xml) Configuration File<\/a>,\n+ * without changing code in the later two options.\n+ * <p>\n+ * The {@link javax.xml.catalog.CatalogFeatures CatalogFeatures}' RESOLVE\n+ * property for example has defined a corresponding System Property\n+ * {@code javax.xml.catalog.resolve} as listed in the table\n+ * {@link javax.xml.catalog.CatalogFeatures Catalog Features} that gives it the\n+ * flexibility to be set through the System API, or without making code changes,\n+ * be initialized on the command line, or in the XML Library (java.xml)\n+ * Configuration File as illustrated in the <a href=\"#PP\">Property Precedence<\/a>\n+ * section.\n+ *\n+ * <h2 id=\"ConfigurationFile\">XML Library (java.xml) Configuration File<\/h2>\n@@ -60,3 +78,3 @@\n- * configuration file called {@code jaxp.properties} in the {@code conf} directory\n- * of the Java installation and use the entries if any to customize the behavior\n- * of the factories.\n+ * configuration file called {@code jaxp.properties} in the ${java.home}\/conf\n+ * directory and use the entries if any to customize the behavior of the XML\n+ * factories and processors.\n@@ -73,2 +91,3 @@\n- * A user-defined configuration file can be set outside of the JDK by using the\n- * system property {@code java.xml.config.file}.\n+ * A system property {@systemProperty java.xml.config.file} can be set on the\n+ * command line or through the System API (e.g. System.setProperty method) to\n+ * specify the location of a configuration file on the file system.\n@@ -79,2 +98,3 @@\n- * {@code jaxp.properties}. If the system property does not exist when a factory\n- * is instantiated, no further attempt will be made to check for its existence.\n+ * {@code jaxp.properties}. If the system property does not exist when the JAXP\n+ * implementation is initialized, no further attempt will be made to check for\n+ * its existence.\n@@ -254,1 +274,2 @@\n- * the API properties, system properties, <a href=\"#ConfigurationFile\">JAXP Configuration File<\/a>,\n+ * the API properties, system properties,\n+ * <a href=\"#ConfigurationFile\">XML Library (java.xml) Configuration File<\/a>,\n@@ -264,1 +285,2 @@\n- *      Properties set using the corresponding System properties;\n+ *      Properties set via the corresponding System properties on the command line\n+ * with -Dkey=value or by using the System API (e.g. System.setProperty(key, value));\n@@ -271,1 +293,1 @@\n- *      Properties set in the default JAXP Configuration File\n+ *      Properties set in the default XML Library (java.xml) Configuration File\n@@ -331,11 +353,0 @@\n- *\n- * <h2 id=\"ConfigurationFile\">JAXP Configuration File<\/h2>\n- * The <a href=\"#ConfigurationFile\">JAXP Configuration File<\/a> defined by the XML\n- * processing API may be used to set the JDK implementation specific properties\n- * and features. A configuration file may contain any of the properties listed in\n- * the table <a href=\"#Properties\">Implementation Specific Properties<\/a> and\n- * <a href=\"#Features\">Features<\/a>. See also\n- * <a href=\"#PP\">Property Precedence<\/a> for the use of the configuration\n- * file in setting properties.\n- *\n- *\n@@ -347,4 +358,6 @@\n- * naming convention, System Properties, precedence order, and processors to which\n- * a property applies. A table listing the implementation specific features and\n- * properties that the implementation currently supports can be found at the end\n- * of this note.\n+ * naming convention, System Properties, precedence order, and processors for which\n+ * a property is applies.\n+ * <p>\n+ * Properties and features currently supported by the JDK implementation are listed\n+ * in the table <a href=\"#Properties\">Implementation Specific Properties<\/a>\n+ * and <a href=\"#Features\">Features<\/a>.\n@@ -379,3 +392,6 @@\n- * A property may have a corresponding System Property with the same name.\n- * A System Property should be set prior to the creation of a processor and\n- * may be cleared afterwards.\n+ * A property may have a corresponding System Property with the same name as\n+ * shown in the table <a href=\"#Properties\">Implementation Specific Properties<\/a>\n+ * and <a href=\"#Features\">Features<\/a>.\n+ * As described in the <a href=\"#PropertiesAndSP\">Properties and System Properties<\/a>\n+ * section, a System Property can be set through the System API, on the command line\n+ * and\/or in the configuration file.\n@@ -384,4 +400,5 @@\n- * A system property can be specified in the <a href=\"#ConfigurationFile\">JAXP Configuration File<\/a>\n- * to set the behavior for the JAXP factories. The format is\n- * {@code key=value}, where the key is the property name as listed in the column\n- * {@code Full Name} and value in the column {@code Value} in the table\n+ * A system property can be specified in the\n+ * <a href=\"#ConfigurationFile\">XML Library (java.xml) Configuration File<\/a>\n+ * to customize the behavior of the XML factories and processors. The format is\n+ * {@code key=value}, where the key is the system property name as listed in the\n+ * column {@code Full Name} and value in the column {@code Value} in the table\n@@ -523,1 +540,1 @@\n- * <h3>Implementation Specific Features and Properties<\/h3>\n+ * <h3>List of Implementation Specific Features and Properties<\/h3>\n","filename":"src\/java.xml\/share\/classes\/module-info.java","additions":54,"deletions":37,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#       XML Library (java.xml) Configuration File\n+#           XML Library (java.xml) Configuration File\n@@ -6,2 +6,2 @@\n-# located in the conf directory of the Java installation. It may contain key\/value\n-# pairs for specifying the implementation classes of JAXP factories and\/or properties\n+# located in the {java.home}\/conf directory. It may contain key\/value pairs for\n+# specifying the implementation classes of JAXP factories and\/or properties\n","filename":"src\/java.xml\/share\/conf\/jaxp.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-#       XML Library (java.xml) Configuration File\n+#           XML Library (java.xml) Configuration File\n@@ -6,2 +6,2 @@\n-# located in the conf directory of the Java installation. It may contain key\/value\n-# pairs for specifying the implementation classes of JAXP factories and\/or properties\n+# located in the {java.home}\/conf directory. It may contain key\/value pairs for\n+# specifying the implementation classes of JAXP factories and\/or properties\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/common\/config\/files\/jaxp.properties","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}