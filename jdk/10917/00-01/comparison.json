{"files":[{"patch":"@@ -161,1 +161,5 @@\n-  \/\/ assert(hf.fp()            <= (intptr_t*)hf.at(frame::interpreter_frame_locals_offset), \"\");\n+#ifdef ASSERT\n+  if (f.interpreter_frame_method()->max_locals() > 0) {\n+    assert(hf.fp()          <= (intptr_t*)hf.at(frame::interpreter_frame_locals_offset), \"\");\n+  }\n+#endif\n","filename":"src\/hotspot\/cpu\/riscv\/continuationFreezeThaw_riscv.inline.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -485,3 +485,5 @@\n-  address locals = (address) *interpreter_frame_locals_addr();\n-  if (locals > thread->stack_base() \/*|| locals < (address) fp() *\/) {\n-    return false;\n+  if (m->max_locals() > 0) {\n+    address locals = (address) *interpreter_frame_locals_addr();\n+    if (!thread->is_in_stack_range_incl(locals, (address)fp())) {\n+      return false;\n+    }\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1030,1 +1030,1 @@\n-    __ mv(x9, x10); \/\/ save return value contaning the exception oop in callee-saved R9\n+    __ mv(x9, x10); \/\/ save return value contaning the exception oop in callee-saved x9\n@@ -1056,1 +1056,0 @@\n-                                   int& exception_offset,\n@@ -1060,1 +1059,0 @@\n-                                   int& interpreted_entry_offset,\n@@ -1205,5 +1203,4 @@\n-    int vep_offset = 0;\n-    int exception_offset = 0;\n-    int frame_complete = 0;\n-    int stack_slots = 0;\n-    OopMapSet* oop_maps =  new OopMapSet();\n+    int exception_offset = -1;\n+    OopMapSet* oop_maps = new OopMapSet();\n+    int frame_complete = -1;\n+    int stack_slots = -1;\n@@ -1211,0 +1208,1 @@\n+    int vep_offset = -1;\n@@ -1227,1 +1225,0 @@\n-                             exception_offset,\n@@ -1231,1 +1228,0 @@\n-                             interpreted_entry_offset,\n@@ -1237,0 +1233,13 @@\n+#ifdef ASSERT\n+    if (method->is_continuation_enter_intrinsic()) {\n+      assert(interpreted_entry_offset != -1, \"Must be set\");\n+      assert(exception_offset != -1,         \"Must be set\");\n+    } else {\n+      assert(interpreted_entry_offset == -1, \"Must be unset\");\n+      assert(exception_offset == -1,         \"Must be unset\");\n+    }\n+    assert(frame_complete != -1,    \"Must be set\");\n+    assert(stack_slots != -1,       \"Must be set\");\n+    assert(vep_offset != -1,        \"Must be set\");\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":19,"deletions":10,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -3879,1 +3879,1 @@\n-      __ mv(x9, x10); \/\/ save return value contaning the exception oop in callee-saved R9\n+      __ mv(x9, x10); \/\/ save return value contaning the exception oop in callee-saved x9\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}