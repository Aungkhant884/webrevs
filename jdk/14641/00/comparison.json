{"files":[{"patch":"@@ -34,1 +34,1 @@\n-\/\/ by the VM, suhch as java.lang.Object and java.lang.String. These\n+\/\/ by the VM, such as java.lang.Object and java.lang.String. These\n@@ -107,0 +107,1 @@\n+  do_klass(VMSupport_klass,                             jdk_internal_vm_VMSupport                             ) \\\n","filename":"src\/hotspot\/share\/classfile\/vmClassMacros.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -585,1 +585,1 @@\n-    JVMCI_THROW_MSG_0(InternalError, err_msg(\"Primitive type %s should be handled in Java code\", class_name->as_C_string()));\n+    JVMCI_THROW_MSG_0(InternalError, err_msg(\"Primitive type %s should be handled in Java code\", str));\n@@ -2836,3 +2836,1 @@\n-  \/\/ load VMSupport\n-  Symbol* klass = vmSymbols::jdk_internal_vm_VMSupport();\n-  Klass* k = SystemDictionary::resolve_or_fail(klass, true, CHECK_NULL);\n+  Klass* k = vmClasses::VMSupport_klass();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -392,5 +392,1 @@\n-    \/\/ Resolve VMSupport class explicitly as HotSpotJVMCI::compute_offsets\n-    \/\/ may not have been called.\n-    Klass* vmSupport = SystemDictionary::resolve_or_fail(vmSymbols::jdk_internal_vm_VMSupport(), true, THREAD);\n-    guarantee(!HAS_PENDING_EXCEPTION, \"\");\n-\n+    Klass* vmSupport = vmClasses::VMSupport_klass();\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -58,2 +58,1 @@\n-static InstanceKlass* load_and_initialize_klass(Symbol* sh, TRAPS) {\n-  Klass* k = SystemDictionary::resolve_or_fail(sh, true, CHECK_NULL);\n+static InstanceKlass* initialize_klass(Klass* k, TRAPS) {\n@@ -71,3 +70,1 @@\n-  \/\/ load VMSupport\n-  Symbol* klass = vmSymbols::jdk_internal_vm_VMSupport();\n-  InstanceKlass* k = load_and_initialize_klass(klass, THREAD);\n+  InstanceKlass* k = initialize_klass(vmClasses::VMSupport_klass(), THREAD);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -331,3 +331,1 @@\n-  \/\/ load VMSupport\n-  Symbol* klass = vmSymbols::jdk_internal_vm_VMSupport();\n-  Klass* k = SystemDictionary::resolve_or_fail(klass, true, CHECK);\n+  Klass* k = vmClasses::VMSupport_klass();\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}