{"files":[{"patch":"@@ -107,1 +107,0 @@\n-  do_klass(VMSupport_klass,                             jdk_internal_vm_VMSupport                             ) \\\n","filename":"src\/hotspot\/share\/classfile\/vmClassMacros.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2836,1 +2836,3 @@\n-  Klass* k = vmClasses::VMSupport_klass();\n+  \/\/ load VMSupport\n+  Symbol* klass = vmSymbols::jdk_internal_vm_VMSupport();\n+  Klass* k = SystemDictionary::resolve_or_fail(klass, true, CHECK_NULL);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -385,1 +385,1 @@\n-  virtual int encode(JavaThread* THREAD, Klass* vmSupport, jlong buffer, int buffer_size) = 0;\n+  virtual int encode(JavaThread* THREAD, jlong buffer, int buffer_size) = 0;\n@@ -388,1 +388,1 @@\n-  virtual void decode(JavaThread* THREAD, Klass* vmSupport, jint format, jlong buffer) = 0;\n+  virtual void decode(JavaThread* THREAD, jint format, jlong buffer) = 0;\n@@ -392,1 +392,0 @@\n-    Klass* vmSupport = vmClasses::VMSupport_klass();\n@@ -399,1 +398,1 @@\n-        decode(THREAD, vmSupport, -1, 0L);\n+        decode(THREAD, -1, 0L);\n@@ -402,1 +401,1 @@\n-      int res = encode(THREAD, vmSupport, buffer, buffer_size);\n+      int res = encode(THREAD, buffer, buffer_size);\n@@ -408,1 +407,1 @@\n-        decode(THREAD, vmSupport, -3, 0L);\n+        decode(THREAD, -3, 0L);\n@@ -416,1 +415,1 @@\n-          decode(THREAD, vmSupport, -2, 0L);\n+          decode(THREAD, -2, 0L);\n@@ -424,1 +423,1 @@\n-          decode(THREAD, vmSupport, -3, buffer);\n+          decode(THREAD, -3, buffer);\n@@ -433,1 +432,1 @@\n-        decode(THREAD, vmSupport, 0, buffer);\n+        decode(THREAD, 0, buffer);\n@@ -448,1 +447,6 @@\n-  int encode(JavaThread* THREAD, Klass* vmSupport, jlong buffer, int buffer_size) {\n+  int encode(JavaThread* THREAD, jlong buffer, int buffer_size) {\n+    Klass* vmSupport = SystemDictionary::resolve_or_fail(vmSymbols::jdk_internal_vm_VMSupport(), true, THREAD);\n+    if (HAS_PENDING_EXCEPTION) {\n+      \/\/ Propagate pending exception\n+      return 0;\n+    }\n@@ -461,1 +465,1 @@\n-  void decode(JavaThread* THREAD, Klass* vmSupport, jint format, jlong buffer) {\n+  void decode(JavaThread* THREAD, jint format, jlong buffer) {\n@@ -477,1 +481,1 @@\n-  int encode(JavaThread* THREAD, Klass* vmSupport, jlong buffer, int buffer_size) {\n+  int encode(JavaThread* THREAD, jlong buffer, int buffer_size) {\n@@ -484,1 +488,6 @@\n-  void decode(JavaThread* THREAD, Klass* vmSupport, jint format, jlong buffer) {\n+  void decode(JavaThread* THREAD, jint format, jlong buffer) {\n+    Klass* vmSupport = SystemDictionary::resolve_or_fail(vmSymbols::jdk_internal_vm_VMSupport(), true, THREAD);\n+    if (HAS_PENDING_EXCEPTION) {\n+      \/\/ Propagate pending exception\n+      return;\n+    }\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":22,"deletions":13,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -58,1 +58,2 @@\n-static InstanceKlass* initialize_klass(Klass* k, TRAPS) {\n+static InstanceKlass* load_and_initialize_klass(Symbol* sh, TRAPS) {\n+  Klass* k = SystemDictionary::resolve_or_fail(sh, true, CHECK_NULL);\n@@ -70,1 +71,3 @@\n-  InstanceKlass* k = initialize_klass(vmClasses::VMSupport_klass(), THREAD);\n+  \/\/ load VMSupport\n+  Symbol* klass = vmSymbols::jdk_internal_vm_VMSupport();\n+  InstanceKlass* k = load_and_initialize_klass(klass, THREAD);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -331,1 +331,3 @@\n-  Klass* k = vmClasses::VMSupport_klass();\n+  \/\/ load VMSupport\n+  Symbol* klass = vmSymbols::jdk_internal_vm_VMSupport();\n+  Klass* k = SystemDictionary::resolve_or_fail(klass, true, CHECK);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}