{"files":[{"patch":"@@ -737,1 +737,1 @@\n-    _cld_roots(phase, ShenandoahHeap::heap()->workers()->active_workers(), false \/*heapdump*\/),\n+    _cld_roots(phase, ShenandoahHeap::heap()->workers()->active_workers(), false \/*heap iteration*\/),\n@@ -850,1 +850,1 @@\n-    _cld_roots(phase, ShenandoahHeap::heap()->workers()->active_workers(), false \/*heapdump*\/),\n+    _cld_roots(phase, ShenandoahHeap::heap()->workers()->active_workers(), false \/*heap iteration*\/),\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-   _cld_roots(phase, ShenandoahHeap::heap()->workers()->active_workers(), false \/*heapdump*\/),\n+   _cld_roots(phase, ShenandoahHeap::heap()->workers()->active_workers(), false \/*heap iteration*\/),\n@@ -157,1 +157,1 @@\n-  _cld_roots(phase, n_workers, false \/*heapdump*\/),\n+  _cld_roots(phase, n_workers, false \/*heap iteration*\/),\n@@ -216,1 +216,1 @@\n-  _cld_roots(phase, n_workers, false \/*heapdump*\/),\n+  _cld_roots(phase, n_workers, false \/*heap iteration*\/),\n@@ -225,1 +225,1 @@\n-  _cld_roots(phase, n_workers, false \/*heapdump*\/),\n+  _cld_roots(phase, n_workers, false \/*heap iteration*\/),\n@@ -255,1 +255,1 @@\n-   _cld_roots(ShenandoahPhaseTimings::heap_iteration_roots, n_workers, true \/*heapdump*\/),\n+   _cld_roots(ShenandoahPhaseTimings::heap_iteration_roots, n_workers, true \/*heap iteration*\/),\n@@ -262,1 +262,1 @@\n-   \/\/ Must use _claim_none to avoid interfering with concurrent CLDG iteration\n+   \/\/ Must use _claim_other to avoid interfering with concurrent CLDG iteration\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  ShenandoahClassLoaderDataRoots(ShenandoahPhaseTimings::Phase phase, uint n_workers, bool heapdump);\n+  ShenandoahClassLoaderDataRoots(ShenandoahPhaseTimings::Phase phase, uint n_workers, bool heap_iteration);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-ShenandoahClassLoaderDataRoots<CONCURRENT>::ShenandoahClassLoaderDataRoots(ShenandoahPhaseTimings::Phase phase, uint n_workers, bool heapdump) :\n+ShenandoahClassLoaderDataRoots<CONCURRENT>::ShenandoahClassLoaderDataRoots(ShenandoahPhaseTimings::Phase phase, uint n_workers, bool heap_iteration) :\n@@ -82,1 +82,1 @@\n-  if (heapdump) {\n+  if (heap_iteration) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestJcmdHeapDump.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}