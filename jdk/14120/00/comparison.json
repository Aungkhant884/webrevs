{"files":[{"patch":"@@ -173,1 +173,2 @@\n-                                         size_t* actual_size) {\n+                                         size_t* actual_size,\n+                                         bool* gc_overhead_limit_was_exceeded) {\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -98,1 +98,2 @@\n-                              size_t* actual_size) override;\n+                              size_t* actual_size,\n+                              bool* gc_overhead_limit_was_exceeded) override;\n","filename":"src\/hotspot\/share\/gc\/epsilon\/epsilonHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -384,1 +384,2 @@\n-                                             size_t* actual_size) {\n+                                             size_t* actual_size,\n+                                             bool* gc_overhead_limit_was_exceeded) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -441,1 +441,2 @@\n-                              size_t* actual_size) override;\n+                              size_t* actual_size,\n+                              bool* gc_overhead_limit_was_exceeded) override;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -517,1 +517,2 @@\n-HeapWord* ParallelScavengeHeap::allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size) {\n+HeapWord* ParallelScavengeHeap::allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size,\n+                                                  bool* gc_overhead_limit_was_exceeded) {\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -105,1 +105,2 @@\n-  HeapWord* allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size) override;\n+  HeapWord* allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size,\n+                              bool* gc_overhead_limit_was_exceeded) override;\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -525,1 +525,2 @@\n-                                           size_t* actual_size) {\n+                                           size_t* actual_size,\n+                                           bool* gc_overhead_limit_was_exceeded) {\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -154,1 +154,2 @@\n-                                      size_t* actual_size);\n+                                      size_t* actual_size,\n+                                      bool* gc_overhead_limit_was_exceeded);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -937,2 +937,2 @@\n-                                              size_t* actual_size) {\n-  bool gc_overhead_limit_was_exceeded;\n+                                              size_t* actual_size,\n+                                              bool* gc_overhead_limit_was_exceeded) {\n@@ -941,1 +941,1 @@\n-                                       &gc_overhead_limit_was_exceeded);\n+                                       gc_overhead_limit_was_exceeded);\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -241,1 +241,2 @@\n-                              size_t* actual_size) override;\n+                              size_t* actual_size,\n+                              bool* gc_overhead_limit_was_exceeded) override;\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -324,1 +324,2 @@\n-  mem = Universe::heap()->allocate_new_tlab(min_tlab_size, new_tlab_size, &allocation._allocated_tlab_size);\n+  mem = Universe::heap()->allocate_new_tlab(min_tlab_size, new_tlab_size, &allocation._allocated_tlab_size,\n+                                            &allocation._overhead_limit_exceeded);\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -796,1 +796,2 @@\n-                                            size_t* actual_size) {\n+                                            size_t* actual_size,\n+                                            bool* gc_overhead_limit_was_exceeded) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -534,1 +534,2 @@\n-  HeapWord* allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size) override;\n+  HeapWord* allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size,\n+                              bool* gc_overhead_limit_was_exceeded) override;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -149,1 +149,2 @@\n-HeapWord* XCollectedHeap::allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size) {\n+HeapWord* XCollectedHeap::allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size,\n+                                            bool* gc_overhead_limit_was_exceeded) {\n","filename":"src\/hotspot\/share\/gc\/x\/xCollectedHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -56,1 +56,2 @@\n-                              size_t* actual_size) override;\n+                              size_t* actual_size,\n+                              bool* gc_overhead_limit_was_exceeded) override;\n","filename":"src\/hotspot\/share\/gc\/x\/xCollectedHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -144,1 +144,2 @@\n-HeapWord* ZCollectedHeap::allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size) {\n+HeapWord* ZCollectedHeap::allocate_new_tlab(size_t min_size, size_t requested_size, size_t* actual_size,\n+                                            bool* gc_overhead_limit_was_exceeded) {\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -57,1 +57,2 @@\n-                              size_t* actual_size) override;\n+                              size_t* actual_size,\n+                              bool* gc_overhead_limit_was_exceeded) override;\n","filename":"src\/hotspot\/share\/gc\/z\/zCollectedHeap.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}