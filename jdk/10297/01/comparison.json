{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.nio.ByteBuffer;\n@@ -53,1 +52,0 @@\n- *\n@@ -61,1 +59,1 @@\n-abstract class AESCipher extends CipherSpi {\n+class AESCipher extends CipherSpi {\n@@ -67,1 +65,2 @@\n-    abstract static class OidImpl extends AESCipher {\n+\n+    static class OidImpl extends AESCipher {\n@@ -79,0 +78,1 @@\n+\n@@ -141,1 +141,1 @@\n-    static final void checkKeySize(Key key, int fixedKeySize)\n+    static void checkKeySize(Key key, int fixedKeySize)\n@@ -163,1 +163,1 @@\n-    private CipherCore core = null;\n+    private final CipherCore core;\n@@ -189,0 +189,1 @@\n+    @Override\n@@ -202,0 +203,1 @@\n+    @Override\n@@ -213,0 +215,1 @@\n+    @Override\n@@ -234,0 +237,1 @@\n+    @Override\n@@ -250,0 +254,1 @@\n+    @Override\n@@ -267,0 +272,1 @@\n+    @Override\n@@ -301,0 +307,1 @@\n+    @Override\n@@ -331,0 +338,1 @@\n+    @Override\n@@ -339,0 +347,1 @@\n+    @Override\n@@ -366,0 +375,1 @@\n+    @Override\n@@ -394,0 +404,1 @@\n+    @Override\n@@ -432,0 +443,1 @@\n+    @Override\n@@ -434,2 +446,1 @@\n-        byte[] out = core.doFinal(input, inputOffset, inputLen);\n-        return out;\n+        return core.doFinal(input, inputOffset, inputLen);\n@@ -474,0 +485,1 @@\n+    @Override\n@@ -478,1 +490,1 @@\n-        int outLen = core.doFinal(input, inputOffset, inputLen, output,\n+        return core.doFinal(input, inputOffset, inputLen, output,\n@@ -480,1 +492,0 @@\n-        return outLen;\n@@ -492,0 +503,1 @@\n+    @Override\n@@ -518,0 +530,1 @@\n+    @Override\n@@ -544,0 +557,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESCipher.java","additions":25,"deletions":11,"binary":false,"changes":36,"status":"modified"}]}