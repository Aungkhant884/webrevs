{"files":[{"patch":"@@ -257,0 +257,2 @@\n+    ConnectionGraph::print_statistics();\n+    PhaseMacroExpand::print_statistics();\n@@ -2177,0 +2179,2 @@\n+\n+    NOT_PRODUCT(int total_scalar_replaced = 0;)\n@@ -2196,0 +2200,1 @@\n+        NOT_PRODUCT(total_scalar_replaced += mexp._local_scalar_replaced;)\n@@ -2207,0 +2212,6 @@\n+\n+#ifndef PRODUCT\n+    Atomic::add(&ConnectionGraph::_no_escape_counter, _local_no_escape_ctr + total_scalar_replaced);\n+    Atomic::add(&ConnectionGraph::_arg_escape_counter, _local_arg_escape_ctr);\n+    Atomic::add(&ConnectionGraph::_global_escape_counter, _local_global_escape_ctr);\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -679,0 +679,5 @@\n+#ifndef PRODUCT\n+  int _local_no_escape_ctr;\n+  int _local_arg_escape_ctr;\n+  int _local_global_escape_ctr;\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -98,0 +98,4 @@\n+#ifndef PRODUCT\n+  elapsedTimer et;\n+  et.start();\n+#endif\n@@ -119,0 +123,6 @@\n+\n+#ifndef PRODUCT\n+  et.stop();\n+  \/\/ casting jlong to long since Atomic needs Integral type\n+  Atomic::add(&ConnectionGraph::_time_elapsed, (long)et.milliseconds());\n+#endif\n@@ -236,0 +246,3 @@\n+#ifndef PRODUCT\n+    escape_state_statistics(java_objects_worklist);\n+#endif\n@@ -265,1 +278,6 @@\n-  if (C->failing())  return false;\n+  if (C->failing()) {\n+#ifndef PRODUCT\n+    escape_state_statistics(java_objects_worklist);\n+#endif\n+    return false;\n+  }\n@@ -273,0 +291,3 @@\n+#ifndef PRODUCT\n+    escape_state_statistics(java_objects_worklist);\n+#endif\n@@ -342,1 +363,6 @@\n-    if (C->failing())  return false;\n+    if (C->failing()) {\n+#ifndef PRODUCT\n+      escape_state_statistics(java_objects_worklist);\n+#endif\n+      return false;\n+    }\n@@ -378,0 +404,3 @@\n+#ifndef PRODUCT\n+  escape_state_statistics(java_objects_worklist);\n+#endif\n@@ -3634,0 +3663,5 @@\n+int ConnectionGraph::_no_escape_counter = 0;\n+int ConnectionGraph::_arg_escape_counter = 0;\n+int ConnectionGraph::_global_escape_counter = 0;\n+long ConnectionGraph::_time_elapsed = 0;\n+\n@@ -3742,0 +3776,28 @@\n+void ConnectionGraph::print_statistics() {\n+  tty->print(\"No escape = %d, Arg escape = %d, Global escape = %d\", Atomic::load(&_no_escape_counter), Atomic::load(&_arg_escape_counter), Atomic::load(&_global_escape_counter));\n+  tty->print_cr(\" (EA executed in %7.2f seconds)\", Atomic::load(&_time_elapsed) * 0.001);\n+}\n+\n+void ConnectionGraph::escape_state_statistics(GrowableArray<JavaObjectNode*>& java_objects_worklist) {\n+  _compile->_local_no_escape_ctr = 0;\n+  _compile->_local_arg_escape_ctr = 0;\n+  _compile->_local_global_escape_ctr = 0;\n+  for (int next = 0; next < java_objects_worklist.length(); ++next) {\n+    JavaObjectNode* ptn = java_objects_worklist.at(next);\n+    if (ptn->ideal_node()->is_Allocate()) {\n+      if(ptn->escape_state() == PointsToNode::NoEscape) {\n+        _compile->_local_no_escape_ctr++;\n+      }\n+      else if (ptn->escape_state() == PointsToNode::ArgEscape) {\n+        _compile->_local_arg_escape_ctr++;\n+      }\n+      else if (ptn->escape_state() == PointsToNode::GlobalEscape) {\n+        _compile->_local_global_escape_ctr++;\n+      }\n+      else {\n+        assert(false, \"Unexpected Escape State\");\n+      }\n+    }\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":64,"deletions":2,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -639,0 +639,4 @@\n+  static int _no_escape_counter;\n+  static int _arg_escape_counter;\n+  static int _global_escape_counter;\n+  static long _time_elapsed;\n@@ -640,0 +644,2 @@\n+  static void print_statistics();\n+  void escape_state_statistics(GrowableArray<JavaObjectNode*>& java_objects_worklist);\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -162,0 +162,3 @@\n+#ifndef PRODUCT\n+  Atomic::add(&PhaseMacroExpand::_GC_barriers_removed_counter, 1);\n+#endif\n@@ -2313,0 +2316,4 @@\n+  #ifndef PRODUCT\n+    int membar_before = count_MemBar();\n+  #endif\n+\n@@ -2337,0 +2344,5 @@\n+#ifndef PRODUCT\n+        if(success) {\n+          Atomic::add(&PhaseMacroExpand::_monitor_objects_removed_counter, 1);\n+        }\n+#endif\n@@ -2355,0 +2367,6 @@\n+#ifndef PRODUCT\n+        if(success){\n+          Atomic::add(&PhaseMacroExpand::_objs_scalar_replaced_counter, 1);\n+          _local_scalar_replaced++;\n+        }\n+#endif\n@@ -2384,0 +2402,4 @@\n+#ifndef PRODUCT\n+  int membar_after = count_MemBar();\n+  Atomic::add(&PhaseMacroExpand::_memory_barriers_removed_counter, membar_before - membar_after);\n+#endif\n@@ -2572,0 +2594,32 @@\n+\n+#ifndef PRODUCT\n+int PhaseMacroExpand::_objs_scalar_replaced_counter = 0;\n+int PhaseMacroExpand::_monitor_objects_removed_counter = 0;\n+int PhaseMacroExpand::_GC_barriers_removed_counter = 0;\n+int PhaseMacroExpand::_memory_barriers_removed_counter = 0;\n+\n+void PhaseMacroExpand::print_statistics() {\n+  tty->print(\"Objects scalar replaced = %d, \", Atomic::load(&_objs_scalar_replaced_counter));\n+  tty->print(\"Monitor objects removed = %d, \", Atomic::load(&_monitor_objects_removed_counter));\n+  tty->print(\"GC barriers removed = %d, \", Atomic::load(&_GC_barriers_removed_counter));\n+  tty->print_cr(\"Memory barriers removed = %d\", Atomic::load(&_memory_barriers_removed_counter));\n+}\n+\n+int PhaseMacroExpand::count_MemBar() {\n+  Unique_Node_List ideal_nodes;\n+  int total = 0;\n+  ideal_nodes.map(C->live_nodes(), NULL);\n+  ideal_nodes.push(C->root());\n+  for( uint next = 0; next < ideal_nodes.size(); ++next ) {\n+    Node* n = ideal_nodes.at(next);\n+    if (n->is_MemBar()) {\n+      total++;\n+    }\n+    for (DUIterator_Fast imax, i = n->fast_outs(imax); i < imax; i++) {\n+      Node* m = n->fast_out(i);\n+      ideal_nodes.push(m);\n+    }\n+  }\n+  return total;\n+}\n+#endif\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":54,"deletions":0,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-  PhaseMacroExpand(PhaseIterGVN &igvn) : Phase(Macro_Expand), _igvn(igvn), _has_locks(false) {\n+  PhaseMacroExpand(PhaseIterGVN &igvn) : Phase(Macro_Expand), _igvn(igvn), _has_locks(false) NOT_PRODUCT(COMMA _local_scalar_replaced(0)) {\n@@ -211,0 +211,10 @@\n+#ifndef PRODUCT\n+    static int _objs_scalar_replaced_counter;\n+    static int _monitor_objects_removed_counter;\n+    static int _GC_barriers_removed_counter;\n+    static int _memory_barriers_removed_counter;\n+    int _local_scalar_replaced;\n+    static void print_statistics();\n+    int count_MemBar();\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}