{"files":[{"patch":"@@ -98,6 +98,0 @@\n-#ifndef PRODUCT\n-  elapsedTimer et;\n-  if (PrintOptoStatistics) {\n-    et.start();\n-  }\n-#endif\n@@ -125,8 +119,0 @@\n-\n-#ifndef PRODUCT\n-  if (PrintOptoStatistics) {\n-    et.stop();\n-    \/\/ casting jlong to long since Atomic needs Integral type\n-    Atomic::add(&ConnectionGraph::_time_elapsed, (long)et.milliseconds());\n-  }\n-#endif\n@@ -3660,1 +3646,0 @@\n-long ConnectionGraph::_time_elapsed = 0;\n@@ -3771,3 +3756,2 @@\n-  tty->print(\"No escape = %d, Arg escape = %d, Global escape = %d\", Atomic::load(&_no_escape_counter), Atomic::load(&_arg_escape_counter), Atomic::load(&_global_escape_counter));\n-  tty->print(\" (EA executed in %7.2f seconds)\", Atomic::load(&_time_elapsed) * 0.001);\n-  tty->print_cr(\"   ** EA stats might be slightly off since objects might be double counted due to iterative EA **\");\n+  \/\/ EA stats might be slightly off since objects might be double counted due to iterative EA\n+  tty->print_cr(\"No escape = %d, Arg escape = %d, Global escape = %d\", Atomic::load(&_no_escape_counter), Atomic::load(&_arg_escape_counter), Atomic::load(&_global_escape_counter));\n@@ -3783,2 +3767,2 @@\n-      if(ptn->escape_state() == PointsToNode::NoEscape) {\n-        _no_escape_counter++;\n+      if (ptn->escape_state() == PointsToNode::NoEscape) {\n+        Atomic::inc(&ConnectionGraph::_no_escape_counter);\n@@ -3786,1 +3770,1 @@\n-        _arg_escape_counter++;\n+        Atomic::inc(&ConnectionGraph::_arg_escape_counter);\n@@ -3788,1 +3772,1 @@\n-        _global_escape_counter++;\n+        Atomic::inc(&ConnectionGraph::_global_escape_counter);\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":6,"deletions":22,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -642,1 +642,0 @@\n-  static long _time_elapsed;\n@@ -645,1 +644,1 @@\n-  void escape_state_statistics(GrowableArray<JavaObjectNode*>& java_objects_worklist);\n+  static void escape_state_statistics(GrowableArray<JavaObjectNode*>& java_objects_worklist);\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-    Atomic::add(&PhaseMacroExpand::_GC_barriers_removed_counter, 1);\n+    Atomic::inc(&PhaseMacroExpand::_GC_barriers_removed_counter);\n@@ -2317,1 +2317,1 @@\n-  NOT_PRODUCT(int membar_before = count_MemBar();)\n+  NOT_PRODUCT(int membar_before = count_MemBar(C);)\n@@ -2344,2 +2344,2 @@\n-        if(success && PrintOptoStatistics) {\n-          Atomic::add(&PhaseMacroExpand::_monitor_objects_removed_counter, 1);\n+        if (success && PrintOptoStatistics) {\n+          Atomic::inc(&PhaseMacroExpand::_monitor_objects_removed_counter);\n@@ -2368,1 +2368,1 @@\n-          Atomic::add(&PhaseMacroExpand::_objs_scalar_replaced_counter, 1);\n+          Atomic::inc(&PhaseMacroExpand::_objs_scalar_replaced_counter);\n@@ -2402,1 +2402,1 @@\n-    int membar_after = count_MemBar();\n+    int membar_after = count_MemBar(C);\n@@ -2608,2 +2608,2 @@\n-int PhaseMacroExpand::count_MemBar() {\n-  if(!PrintOptoStatistics) {\n+int PhaseMacroExpand::count_MemBar(Compile *C) {\n+  if (!PrintOptoStatistics) {\n@@ -2616,1 +2616,1 @@\n-  for( uint next = 0; next < ideal_nodes.size(); ++next ) {\n+  for (uint next = 0; next < ideal_nodes.size(); ++next) {\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -217,1 +217,1 @@\n-    int count_MemBar();\n+    int count_MemBar(Compile *C);\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}