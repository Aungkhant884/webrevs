{"files":[{"patch":"@@ -2180,1 +2180,0 @@\n-    NOT_PRODUCT(int total_scalar_replaced = 0;)\n@@ -2200,1 +2199,0 @@\n-        NOT_PRODUCT(total_scalar_replaced += mexp._local_scalar_replaced;)\n@@ -2213,5 +2211,0 @@\n-#ifndef PRODUCT\n-    Atomic::add(&ConnectionGraph::_no_escape_counter, _local_no_escape_ctr + total_scalar_replaced);\n-    Atomic::add(&ConnectionGraph::_arg_escape_counter, _local_arg_escape_ctr);\n-    Atomic::add(&ConnectionGraph::_global_escape_counter, _local_global_escape_ctr);\n-#endif\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -679,5 +679,0 @@\n-#ifndef PRODUCT\n-  int _local_no_escape_ctr;\n-  int _local_arg_escape_ctr;\n-  int _local_global_escape_ctr;\n-#endif\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -100,1 +100,3 @@\n-  et.start();\n+  if (PrintOptoStatistics) {\n+    et.start();\n+  }\n@@ -125,3 +127,5 @@\n-  et.stop();\n-  \/\/ casting jlong to long since Atomic needs Integral type\n-  Atomic::add(&ConnectionGraph::_time_elapsed, (long)et.milliseconds());\n+  if (PrintOptoStatistics) {\n+    et.stop();\n+    \/\/ casting jlong to long since Atomic needs Integral type\n+    Atomic::add(&ConnectionGraph::_time_elapsed, (long)et.milliseconds());\n+  }\n@@ -279,3 +283,1 @@\n-#ifndef PRODUCT\n-    escape_state_statistics(java_objects_worklist);\n-#endif\n+    NOT_PRODUCT(escape_state_statistics(java_objects_worklist);)\n@@ -291,3 +293,1 @@\n-#ifndef PRODUCT\n-    escape_state_statistics(java_objects_worklist);\n-#endif\n+    NOT_PRODUCT(escape_state_statistics(java_objects_worklist);)\n@@ -364,3 +364,1 @@\n-#ifndef PRODUCT\n-      escape_state_statistics(java_objects_worklist);\n-#endif\n+      NOT_PRODUCT(escape_state_statistics(java_objects_worklist);)\n@@ -403,4 +401,2 @@\n-\n-#ifndef PRODUCT\n-  escape_state_statistics(java_objects_worklist);\n-#endif\n+  \n+  NOT_PRODUCT(escape_state_statistics(java_objects_worklist);)\n@@ -3778,1 +3774,2 @@\n-  tty->print_cr(\" (EA executed in %7.2f seconds)\", Atomic::load(&_time_elapsed) * 0.001);\n+  tty->print(\" (EA executed in %7.2f seconds)\", Atomic::load(&_time_elapsed) * 0.001);\n+  tty->print_cr(\"   ** EA stats might be slightly off since objects might be double counted due to iterative EA **\");\n@@ -3782,3 +3779,3 @@\n-  _compile->_local_no_escape_ctr = 0;\n-  _compile->_local_arg_escape_ctr = 0;\n-  _compile->_local_global_escape_ctr = 0;\n+  if (!PrintOptoStatistics) {\n+    return;\n+  }\n@@ -3789,9 +3786,6 @@\n-        _compile->_local_no_escape_ctr++;\n-      }\n-      else if (ptn->escape_state() == PointsToNode::ArgEscape) {\n-        _compile->_local_arg_escape_ctr++;\n-      }\n-      else if (ptn->escape_state() == PointsToNode::GlobalEscape) {\n-        _compile->_local_global_escape_ctr++;\n-      }\n-      else {\n+        _no_escape_counter++;\n+      } else if (ptn->escape_state() == PointsToNode::ArgEscape) {\n+        _arg_escape_counter++;\n+      } else if (ptn->escape_state() == PointsToNode::GlobalEscape) {\n+        _global_escape_counter++;\n+      } else {\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":24,"deletions":30,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -163,1 +163,3 @@\n-  Atomic::add(&PhaseMacroExpand::_GC_barriers_removed_counter, 1);\n+  if (PrintOptoStatistics) {\n+    Atomic::add(&PhaseMacroExpand::_GC_barriers_removed_counter, 1);\n+  }\n@@ -2315,0 +2317,1 @@\n+    NOT_PRODUCT(int membar_before = count_MemBar();)\n@@ -2316,3 +2319,0 @@\n-  #ifndef PRODUCT\n-    int membar_before = count_MemBar();\n-  #endif\n@@ -2345,1 +2345,1 @@\n-        if(success) {\n+        if(success && PrintOptoStatistics) {\n@@ -2368,1 +2368,1 @@\n-        if(success){\n+        if (success && PrintOptoStatistics) {\n@@ -2370,1 +2370,0 @@\n-          _local_scalar_replaced++;\n@@ -2403,2 +2402,4 @@\n-  int membar_after = count_MemBar();\n-  Atomic::add(&PhaseMacroExpand::_memory_barriers_removed_counter, membar_before - membar_after);\n+  if (PrintOptoStatistics) {\n+    int membar_after = count_MemBar();\n+    Atomic::add(&PhaseMacroExpand::_memory_barriers_removed_counter, membar_before - membar_after);\n+  }\n@@ -2609,0 +2610,3 @@\n+  if(!PrintOptoStatistics) { \n+    return 0; \n+  }\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-  PhaseMacroExpand(PhaseIterGVN &igvn) : Phase(Macro_Expand), _igvn(igvn), _has_locks(false) NOT_PRODUCT(COMMA _local_scalar_replaced(0)) {\n+  PhaseMacroExpand(PhaseIterGVN &igvn) : Phase(Macro_Expand), _igvn(igvn), _has_locks(false) {\n@@ -216,1 +216,0 @@\n-    int _local_scalar_replaced;\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}