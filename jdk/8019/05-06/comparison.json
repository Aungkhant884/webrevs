{"files":[{"patch":"@@ -2179,0 +2179,2 @@\n+\n+    NOT_PRODUCT(int total_scalar_replaced = 0;)\n@@ -2193,3 +2195,0 @@\n-#ifndef PRODUCT\n-        int _prev_scalar_replaced = Atomic::load(&PhaseMacroExpand::_objs_scalar_replaced_counter);\n-#endif\n@@ -2201,3 +2200,1 @@\n-#ifndef PRODUCT\n-        congraph()->update_escape_state(Atomic::load(&PhaseMacroExpand::_objs_scalar_replaced_counter) - _prev_scalar_replaced);\n-#endif\n+        NOT_PRODUCT(total_scalar_replaced += mexp._local_scalar_replaced;)\n@@ -2215,0 +2212,7 @@\n+\n+#ifndef PRODUCT\n+    Atomic::add(&ConnectionGraph::_no_escape_counter, total_scalar_replaced);\n+    Atomic::add(&ConnectionGraph::_no_escape_counter, _local_no_escape_ctr);\n+    Atomic::add(&ConnectionGraph::_arg_escape_counter, _local_arg_escape_ctr);\n+    Atomic::add(&ConnectionGraph::_global_escape_counter, _local_global_escape_ctr);\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -679,0 +679,5 @@\n+#ifndef PRODUCT\n+  int _local_no_escape_ctr;\n+  int _local_arg_escape_ctr;\n+  int _local_global_escape_ctr;\n+#endif\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -55,7 +55,1 @@\n-  _node_map(C->comp_arena())\n-#ifndef PRODUCT\n-  , _prev_no_escape(0),\n-  _prev_arg_escape(0),\n-  _prev_global_escape(0)\n-#endif\n-{\n+  _node_map(C->comp_arena()) {\n@@ -115,6 +109,0 @@\n-#ifndef PRODUCT\n-    \/\/ Reset counters when do_analysis is called again so objects are not double counted\n-    Atomic::store(&_no_escape_counter, C->congraph()->_prev_no_escape);\n-    Atomic::store(&_arg_escape_counter, C->congraph()->_prev_arg_escape);\n-    Atomic::store(&_global_escape_counter, C->congraph()->_prev_global_escape);\n-#endif\n@@ -123,6 +111,0 @@\n-#ifndef PRODUCT\n-  \/\/ Save past value of counters in case do_analysis is called again\n-  congraph->_prev_no_escape = Atomic::load(&_no_escape_counter);\n-  congraph->_prev_arg_escape = Atomic::load(&_arg_escape_counter);\n-  congraph->_prev_global_escape = Atomic::load(&_global_escape_counter);\n-#endif\n@@ -3795,9 +3777,2 @@\n-  tty->print_cr(\"No escape: %d\", Atomic::load(&_no_escape_counter));\n-  tty->print_cr(\"Arg escape: %d\", Atomic::load(&_arg_escape_counter));\n-  tty->print_cr(\"Global escape: %d\", Atomic::load(&_global_escape_counter));\n-  tty->print_cr(\"Total java objects in escape analysis: %d\", Atomic::load(&_global_escape_counter) + Atomic::load(&_arg_escape_counter) + Atomic::load(&_no_escape_counter));\n-  tty->print_cr(\"Total time in escape analysis: %7.2f seconds\", Atomic::load(&_time_elapsed) * 0.001);\n-}\n-\n-void ConnectionGraph::update_escape_state(int eliminated) {\n-  _prev_no_escape += eliminated;\n+  tty->print(\"No escape = %d, Arg escape = %d, Global escape = %d\", Atomic::load(&_no_escape_counter), Atomic::load(&_arg_escape_counter), Atomic::load(&_global_escape_counter));\n+  tty->print_cr(\" (EA executed in %7.2f seconds)\", Atomic::load(&_time_elapsed) * 0.001);\n@@ -3807,0 +3782,3 @@\n+  _compile->_local_no_escape_ctr = 0;\n+  _compile->_local_arg_escape_ctr = 0;\n+  _compile->_local_global_escape_ctr = 0;\n@@ -3811,1 +3789,1 @@\n-        Atomic::add(&ConnectionGraph::_no_escape_counter, 1);\n+        _compile->_local_no_escape_ctr++;\n@@ -3814,1 +3792,1 @@\n-        Atomic::add(&ConnectionGraph::_arg_escape_counter, 1);\n+        _compile->_local_arg_escape_ctr++;\n@@ -3817,1 +3795,1 @@\n-        Atomic::add(&ConnectionGraph::_global_escape_counter, 1);\n+        _compile->_local_global_escape_ctr++;\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":9,"deletions":31,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -642,3 +642,0 @@\n-  int _prev_no_escape;\n-  int _prev_arg_escape;\n-  int _prev_global_escape;\n@@ -648,1 +645,0 @@\n-  void update_escape_state(int eliminated);\n","filename":"src\/hotspot\/share\/opto\/escape.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2370,0 +2370,1 @@\n+          _local_scalar_replaced++;\n@@ -2601,4 +2602,4 @@\n-  tty->print_cr(\"Objects scalar replaced: %d\", Atomic::load(&_objs_scalar_replaced_counter));\n-  tty->print_cr(\"Monitor objects removed: %d\", Atomic::load(&_monitor_objects_removed_counter));\n-  tty->print_cr(\"GC barriers removed: %d\", Atomic::load(&_GC_barriers_removed_counter));\n-  tty->print_cr(\"Memory barriers removed: %d\", Atomic::load(&_memory_barriers_removed_counter));\n+  tty->print(\"Objects scalar replaced = %d, \", Atomic::load(&_objs_scalar_replaced_counter));\n+  tty->print(\"Monitor objects removed = %d, \", Atomic::load(&_monitor_objects_removed_counter));\n+  tty->print(\"GC barriers removed = %d, \", Atomic::load(&_GC_barriers_removed_counter));\n+  tty->print_cr(\"Memory barriers removed = %d\", Atomic::load(&_memory_barriers_removed_counter));\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-  PhaseMacroExpand(PhaseIterGVN &igvn) : Phase(Macro_Expand), _igvn(igvn), _has_locks(false) {\n+  PhaseMacroExpand(PhaseIterGVN &igvn) : Phase(Macro_Expand), _igvn(igvn), _has_locks(false) NOT_PRODUCT(COMMA _local_scalar_replaced(0)) {\n@@ -211,1 +211,1 @@\n-  #ifndef PRODUCT\n+#ifndef PRODUCT\n@@ -216,0 +216,1 @@\n+    int _local_scalar_replaced;\n@@ -218,1 +219,1 @@\n-  #endif\n+#endif\n","filename":"src\/hotspot\/share\/opto\/macro.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}