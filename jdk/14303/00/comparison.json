{"files":[{"patch":"@@ -203,1 +203,1 @@\n-JVM_Sleep\n+JVM_SleepNanos\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -279,1 +279,1 @@\n-JVM_Sleep(JNIEnv *env, jclass threadClass, jlong nanos);\n+JVM_SleepNanos(JNIEnv *env, jclass threadClass, jlong nanos);\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3047,1 +3047,1 @@\n-JVM_ENTRY(void, JVM_Sleep(JNIEnv* env, jclass threadClass, jlong nanos))\n+JVM_ENTRY(void, JVM_SleepNanos(JNIEnv* env, jclass threadClass, jlong nanos))\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -481,0 +481,19 @@\n+    \/**\n+     * Sleep for the specified number of nanoseconds, subject to the precision\n+     * and accuracy of system timers and schedulers.\n+     *\/\n+    private static void sleepNanos(long nanos) throws InterruptedException {\n+        ThreadSleepEvent event = beforeSleep(nanos);\n+        try {\n+            if (currentThread() instanceof VirtualThread vthread) {\n+                vthread.sleepNanos(nanos);\n+            } else {\n+                sleepNanos0(nanos);\n+            }\n+        } finally {\n+            afterSleep(event);\n+        }\n+    }\n+\n+    private static native void sleepNanos0(long nanos) throws InterruptedException;\n+\n@@ -502,1 +521,0 @@\n-\n@@ -504,10 +522,1 @@\n-        ThreadSleepEvent event = beforeSleep(nanos);\n-        try {\n-            if (currentThread() instanceof VirtualThread vthread) {\n-                vthread.sleepNanos(nanos);\n-            } else {\n-                sleep0(nanos);\n-            }\n-        } finally {\n-            afterSleep(event);\n-        }\n+        sleepNanos(nanos);\n@@ -516,2 +525,0 @@\n-    private static native void sleep0(long nanos) throws InterruptedException;\n-\n@@ -552,11 +559,1 @@\n-\n-        ThreadSleepEvent event = beforeSleep(totalNanos);\n-        try {\n-            if (currentThread() instanceof VirtualThread vthread) {\n-                vthread.sleepNanos(totalNanos);\n-            } else {\n-                sleep0(totalNanos);\n-            }\n-        } finally {\n-            afterSleep(event);\n-        }\n+        sleepNanos(totalNanos);\n@@ -586,11 +583,1 @@\n-\n-        ThreadSleepEvent event = beforeSleep(nanos);\n-        try {\n-            if (currentThread() instanceof VirtualThread vthread) {\n-                vthread.sleepNanos(nanos);\n-            } else {\n-                sleep0(nanos);\n-            }\n-        } finally {\n-            afterSleep(event);\n-        }\n+        sleepNanos(nanos);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":22,"deletions":35,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    {\"sleep0\",           \"(J)V\",       (void *)&JVM_Sleep},\n+    {\"sleepNanos0\",      \"(J)V\",       (void *)&JVM_SleepNanos},\n","filename":"src\/java.base\/share\/native\/libjava\/Thread.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+ *                   -XX:CompileCommand=exclude,java.lang.Thread::sleepNanos\n@@ -51,0 +52,1 @@\n+ *                   -XX:CompileCommand=exclude,java.lang.Thread::sleepNanos\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/OverloadCompileQueueTest.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-        \/\/ The stack depth does not take into account the extra frame below Thread.sleep() (sleep0),\n+        \/\/ The stack depth does not take into account the extra frames below Thread.sleep()\n@@ -113,1 +113,1 @@\n-            return depth + 1;\n+            return depth + 2;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdwp\/ThreadReference\/OwnedMonitorsStackDepthInfo\/ownedMonitorsStackDepthInfo001\/ownedMonitorsStackDepthInfo001a.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -659,1 +659,2 @@\n-        expectedMethods.add(Thread.class.getName() + \".sleep0\");\n+        expectedMethods.add(Thread.class.getName() + \".sleepNanos\");\n+        expectedMethods.add(Thread.class.getName() + \".sleepNanos0\");\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/ThreadController.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,5 @@\n-                \"java.lang.Thread.sleep0\",\n+                \"java.lang.Thread.sleepNanos\",\n+                \"java.lang.Thread.sleepNanos0\",\n+                \"java.lang.Thread.beforeSleep\",\n+                \"java.lang.Thread.afterSleep\",\n+                \"java.util.concurrent.TimeUnit.toNanos\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/share\/thread\/SleepingThread.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -143,1 +143,2 @@\n-                \"java.lang.Thread.sleep0\",\n+                \"java.lang.Thread.sleepNanos\",\n+                \"java.lang.Thread.sleepNanos0\",\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace001.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}