{"files":[{"patch":"@@ -152,2 +152,2 @@\n-        if (c instanceof SpeciesData s) {\n-            return s;\n+        if (c instanceof SpeciesData) {\n+            return (SpeciesData) c;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/BoundMethodHandle.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -317,2 +317,2 @@\n-            if (binding instanceof CallSite cs) {\n-                site = cs;\n+            if (binding instanceof CallSite) {\n+                site = (CallSite) binding;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/CallSite.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-        if (mem instanceof Method m) {\n+        if (mem instanceof Method) {\n@@ -136,4 +136,4 @@\n-            return new MemberName(m, wantSpecial);\n-        } else if (mem instanceof Constructor c) {\n-            return new MemberName(c);\n-        } else if (mem instanceof Field f) {\n+            return new MemberName((Method) mem, wantSpecial);\n+        } else if (mem instanceof Constructor) {\n+            return new MemberName((Constructor) mem);\n+        } else if (mem instanceof Field) {\n@@ -141,1 +141,1 @@\n-            return new MemberName(f, isSetter);\n+            return new MemberName((Field) mem, isSetter);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InfoFromMemberName.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -858,2 +858,2 @@\n-                        assert(name.arguments[0] instanceof Name n &&\n-                                n.refersTo(MethodHandleImpl.class, \"profileBoolean\"));\n+                        assert(name.arguments[0] instanceof Name &&\n+                                ((Name)name.arguments[0]).refersTo(MethodHandleImpl.class, \"profileBoolean\"));\n@@ -1688,1 +1688,2 @@\n-        if (arg instanceof Name n) {\n+        if (arg instanceof Name) {\n+            Name n = (Name) arg;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -571,1 +571,2 @@\n-                if (arg instanceof Name n2) {\n+                if (arg instanceof Name) {\n+                    Name n2 = (Name) arg;\n@@ -934,2 +935,2 @@\n-            if (a instanceof Name n) {\n-                int i2 = n.index();\n+            if (a instanceof Name) {\n+                int i2 = ((Name)a).index();\n@@ -1040,1 +1041,1 @@\n-        return obj instanceof LambdaForm lf && equals(lf);\n+        return obj instanceof LambdaForm && equals((LambdaForm)obj);\n@@ -1135,1 +1136,2 @@\n-            if (!(other instanceof NamedFunction that)) return false;\n+            if (!(other instanceof NamedFunction)) return false;\n+            NamedFunction that = (NamedFunction) other;\n@@ -1339,1 +1341,1 @@\n-            assert(arguments[0] instanceof Name n && n.type == L_TYPE);\n+            assert(arguments[0] instanceof Name && ((Name)arguments[0]).type == L_TYPE);\n@@ -1408,1 +1410,2 @@\n-                if (arguments[j] instanceof Name n) {\n+                if (arguments[j] instanceof Name) {\n+                    Name n = (Name) arguments[j];\n@@ -1435,1 +1438,2 @@\n-                if (arguments[j] instanceof Name n) {\n+                if (arguments[j] instanceof Name) {\n+                    Name n = (Name) arguments[j];\n@@ -1493,3 +1497,1 @@\n-            if (c instanceof Class clazz) {\n-                c = clazz.getSimpleName();\n-            }\n+            if (c instanceof Class)  c = ((Class<?>)c).getSimpleName();\n@@ -1523,2 +1525,2 @@\n-            if (object instanceof Name n) {\n-                return n.type == parameterType;\n+            if (object instanceof Name) {\n+                return ((Name)object).type == parameterType;\n@@ -1572,1 +1574,1 @@\n-            return x instanceof Name n && equals(n);\n+            return x instanceof Name && equals((Name)x);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaForm.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -107,2 +107,2 @@\n-            if (obj instanceof TransformKey key) {\n-                return equals(key);\n+            if (obj instanceof TransformKey) {\n+                return equals((TransformKey) obj);\n@@ -110,1 +110,1 @@\n-            return obj instanceof Transform t && equals(t);\n+            return obj instanceof Transform && equals((Transform)obj);\n@@ -305,2 +305,2 @@\n-            if (obj instanceof TransformKey key) {\n-                return equals(key);\n+            if (obj instanceof TransformKey) {\n+                return equals((TransformKey) obj);\n@@ -308,1 +308,1 @@\n-            return obj instanceof Transform t && equals(t);\n+            return obj instanceof Transform && equals((Transform)obj);\n@@ -340,1 +340,1 @@\n-        } else if (c instanceof Transform t) {\n+        } else if (c instanceof Transform) {\n@@ -342,0 +342,1 @@\n+            Transform t = (Transform)c;\n@@ -345,6 +346,4 @@\n-            for (Transform t : ta) {\n-                if (t == null) break;\n-                if (t.equals(key)) {\n-                    k = t;\n-                    break;\n-                }\n+            for (int i = 0; i < ta.length; i++) {\n+                Transform t = ta[i];\n+                if (t == null)  break;\n+                if (t.equals(key)) { k = t; break; }\n@@ -393,1 +392,2 @@\n-                if (c instanceof Transform k) {\n+                if (c instanceof Transform) {\n+                    Transform k = (Transform)c;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaFormEditor.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -143,2 +143,2 @@\n-            if (type instanceof MethodType mt) {\n-                return mt;\n+            if (type instanceof MethodType) {\n+                return (MethodType) type;\n@@ -150,1 +150,2 @@\n-            if (type instanceof String sig) {\n+            if (type instanceof String) {\n+                String sig = (String) type;\n@@ -153,1 +154,2 @@\n-            } else if (type instanceof Object[] typeInfo) {\n+            } else if (type instanceof Object[]) {\n+                Object[] typeInfo = (Object[]) type;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MemberName.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -500,2 +500,2 @@\n-        if (type instanceof MethodType mt)\n-            return mt;\n+        if (type instanceof MethodType)\n+            return (MethodType) type;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleNatives.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -180,2 +180,2 @@\n-        if (ex instanceof Error err)  throw err;\n-        if (ex instanceof RuntimeException re)  throw re;\n+        if (ex instanceof Error)  throw (Error) ex;\n+        if (ex instanceof RuntimeException)  throw (RuntimeException) ex;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleStatics.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2265,1 +2265,1 @@\n-                    if (!(constant instanceof Type type)) {\n+                    if (!(constant instanceof Type)) {\n@@ -2268,0 +2268,1 @@\n+                    Type type = ((Type) constant);\n@@ -4136,1 +4137,1 @@\n-            if (mh instanceof DirectMethodHandle dmh\n+            if (mh instanceof DirectMethodHandle\n@@ -4138,1 +4139,1 @@\n-                MemberName key = dmh.internalMemberName();\n+                MemberName key = mh.internalMemberName();\n@@ -4143,1 +4144,1 @@\n-                    LOOKASIDE_TABLE.put(key, dmh);\n+                    LOOKASIDE_TABLE.put(key, (DirectMethodHandle) mh);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -840,2 +840,2 @@\n-        if (x instanceof MethodType mt) {\n-            return equals(mt);\n+        if (x instanceof MethodType) {\n+            return equals((MethodType)x);\n@@ -843,4 +843,4 @@\n-        if (x instanceof ConcurrentWeakInternSet.WeakEntry e) {\n-            Object o = e.get();\n-            if (o instanceof MethodType mt) {\n-                return equals(mt);\n+        if (x instanceof ConcurrentWeakInternSet.WeakEntry) {\n+            Object o = ((ConcurrentWeakInternSet.WeakEntry)x).get();\n+            if (o instanceof MethodType) {\n+                return equals((MethodType)o);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -284,2 +284,2 @@\n-            if (cause instanceof RuntimeException re)\n-                throw re;\n+            if (cause instanceof RuntimeException)\n+                throw (RuntimeException) cause;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/SerializedLambda.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -608,1 +608,2 @@\n-        if (handle instanceof DirectMethodHandle directHandle) {\n+        if (handle instanceof DirectMethodHandle) {\n+            DirectMethodHandle directHandle = (DirectMethodHandle)handle;\n@@ -631,2 +632,2 @@\n-        } else if (handle instanceof DelegatingMethodHandle delegatingHandle) {\n-            noCheckedExceptions(delegatingHandle.getTarget());\n+        } else if (handle instanceof DelegatingMethodHandle) {\n+            noCheckedExceptions(((DelegatingMethodHandle)handle).getTarget());\n@@ -638,2 +639,2 @@\n-                if (arg instanceof MethodHandle mh) {\n-                    noCheckedExceptions(mh);\n+                if (arg instanceof MethodHandle){\n+                    noCheckedExceptions((MethodHandle) arg);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"}]}