{"files":[{"patch":"@@ -235,1 +235,1 @@\n-            sfx = \"0\"+sfx;\n+            sfx = \"0\" + sfx;\n@@ -269,4 +269,0 @@\n-        Class<?> c = arg.getClass();\n-        while (c.isArray()) {\n-            c = c.getComponentType();\n-        }\n@@ -274,1 +270,10 @@\n-        String name = \"_DATA_\" + c.getSimpleName() + \"_\" + classData.size();\n+        String name;\n+        if (DUMP_CLASS_FILES) {\n+            Class<?> c = arg.getClass();\n+            while (c.isArray()) {\n+                c = c.getComponentType();\n+            }\n+            name = \"_DATA_\" + c.getSimpleName() + \"_\" + classData.size();\n+        } else {\n+            name = \"_D_\" + classData.size();\n+        }\n@@ -277,1 +282,1 @@\n-        return cd.name();\n+        return name;\n@@ -281,5 +286,15 @@\n-        Object[] data = new Object[classData.size()];\n-        for (int i = 0; i < classData.size(); i++) {\n-            data[i] = classData.get(i).value;\n-        }\n-        return List.of(data);\n+        final List<ClassData> cd = classData;\n+        return switch(cd.size()) {\n+            case 0 -> List.of();\n+            case 1 -> List.of(cd.get(0));\n+            case 2 -> List.of(cd.get(0), cd.get(1));\n+            case 3 -> List.of(cd.get(0), cd.get(1), cd.get(2));\n+            case 4 -> List.of(cd.get(0), cd.get(1), cd.get(2), cd.get(3));\n+            default -> {\n+                Object[] data = new Object[classData.size()];\n+                for (int i = 0; i < classData.size(); i++) {\n+                    data[i] = classData.get(i).value;\n+                }\n+                yield List.of(data);\n+            }\n+        };\n@@ -328,2 +343,2 @@\n-                CLASS_PREFIX + className, null, INVOKER_SUPER_NAME, null);\n-        cw.visitSource(SOURCE_PREFIX + className, null);\n+                CLASS_PREFIX.concat(className), null, INVOKER_SUPER_NAME, null);\n+        cw.visitSource(SOURCE_PREFIX.concat(className), null);\n@@ -347,1 +362,1 @@\n-        return CLASS_PREFIX + className;\n+        return CLASS_PREFIX.concat(className);\n@@ -654,11 +669,9 @@\n-        int opcode;\n-        switch (type) {\n-        case I_TYPE:  opcode = Opcodes.IRETURN;  break;\n-        case J_TYPE:  opcode = Opcodes.LRETURN;  break;\n-        case F_TYPE:  opcode = Opcodes.FRETURN;  break;\n-        case D_TYPE:  opcode = Opcodes.DRETURN;  break;\n-        case L_TYPE:  opcode = Opcodes.ARETURN;  break;\n-        case V_TYPE:  opcode = Opcodes.RETURN;   break;\n-        default:\n-            throw new InternalError(\"unknown return type: \" + type);\n-        }\n+        int opcode = switch (type) {\n+            case I_TYPE -> Opcodes.IRETURN;\n+            case J_TYPE -> Opcodes.LRETURN;\n+            case F_TYPE -> Opcodes.FRETURN;\n+            case D_TYPE -> Opcodes.DRETURN;\n+            case L_TYPE -> Opcodes.ARETURN;\n+            case V_TYPE -> Opcodes.RETURN;\n+            default -> throw new InternalError(\"unknown return type: \" + type);\n+        };\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":39,"deletions":26,"binary":false,"changes":65,"status":"modified"}]}