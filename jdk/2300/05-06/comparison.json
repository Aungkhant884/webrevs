{"files":[{"patch":"@@ -87,0 +87,1 @@\n+    private final String name;\n@@ -88,1 +89,0 @@\n-    private final String prefixedClassName;\n@@ -121,1 +121,1 @@\n-                                     String className, String invokerName, MethodType invokerType) {\n+                                     String name, String invokerName, MethodType invokerType) {\n@@ -124,1 +124,1 @@\n-            className = invokerName.substring(0, p);\n+            name = invokerName.substring(0, p);\n@@ -128,1 +128,1 @@\n-            className = makeDumpableClassName(className);\n+            name = makeDumpableClassName(name);\n@@ -130,2 +130,2 @@\n-        this.className  = className;\n-        this.prefixedClassName = CLASS_PREFIX + className;\n+        this.name = name;\n+        this.className = CLASS_PREFIX + name;\n@@ -140,1 +140,1 @@\n-    private InvokerBytecodeGenerator(String className, String invokerName, MethodType invokerType) {\n+    private InvokerBytecodeGenerator(String name, String invokerName, MethodType invokerType) {\n@@ -142,1 +142,1 @@\n-             className, invokerName, invokerType);\n+             name, invokerName, invokerType);\n@@ -154,2 +154,2 @@\n-    private InvokerBytecodeGenerator(String className, LambdaForm form, MethodType invokerType) {\n-        this(className, form.lambdaName(), form, invokerType);\n+    private InvokerBytecodeGenerator(String name, LambdaForm form, MethodType invokerType) {\n+        this(name, form.lambdaName(), form, invokerType);\n@@ -159,1 +159,1 @@\n-    InvokerBytecodeGenerator(String className, String invokerName,\n+    InvokerBytecodeGenerator(String name, String invokerName,\n@@ -162,1 +162,1 @@\n-             className, invokerName, invokerType);\n+             name, invokerName, invokerType);\n@@ -200,1 +200,1 @@\n-            maybeDump(prefixedClassName, classFile);\n+            maybeDump(className, classFile);\n@@ -319,1 +319,1 @@\n-        Class<?> invokerClass = LOOKUP.makeHiddenClassDefiner(prefixedClassName, classFile)\n+        Class<?> invokerClass = LOOKUP.makeHiddenClassDefiner(className, classFile)\n@@ -344,2 +344,2 @@\n-                prefixedClassName, null, INVOKER_SUPER_NAME, null);\n-        cw.visitSource(SOURCE_PREFIX + className, null);\n+                className, null, INVOKER_SUPER_NAME, null);\n+        cw.visitSource(SOURCE_PREFIX + name, null);\n@@ -362,4 +362,0 @@\n-    private void clinit() {\n-        clinit(cw, prefixedClassName, classData);\n-    }\n-\n@@ -648,1 +644,1 @@\n-            mv.visitFieldInsn(Opcodes.GETSTATIC, prefixedClassName, classData(cls), \"Ljava\/lang\/Class;\");\n+            mv.visitFieldInsn(Opcodes.GETSTATIC, className, classData(cls), \"Ljava\/lang\/Class;\");\n@@ -802,1 +798,1 @@\n-        clinit();\n+        clinit(cw, className, classData);\n@@ -837,1 +833,1 @@\n-            mv.visitFieldInsn(Opcodes.GETSTATIC, prefixedClassName, classData(lambdaForm.customized), MH_SIG);\n+            mv.visitFieldInsn(Opcodes.GETSTATIC, className, classData(lambdaForm.customized), MH_SIG);\n@@ -970,1 +966,1 @@\n-            mv.visitFieldInsn(Opcodes.GETSTATIC, prefixedClassName, classData(target), MH_SIG);\n+            mv.visitFieldInsn(Opcodes.GETSTATIC, className, classData(target), MH_SIG);\n@@ -1133,1 +1129,1 @@\n-            mv.visitFieldInsn(Opcodes.GETSTATIC, prefixedClassName, classData(emptyArray), \"Ljava\/lang\/Object;\");\n+            mv.visitFieldInsn(Opcodes.GETSTATIC, className, classData(emptyArray), \"Ljava\/lang\/Object;\");\n@@ -1698,1 +1694,1 @@\n-                mv.visitFieldInsn(Opcodes.GETSTATIC, prefixedClassName, classData(arg), \"Ljava\/lang\/Object;\");\n+                mv.visitFieldInsn(Opcodes.GETSTATIC, className, classData(arg), \"Ljava\/lang\/Object;\");\n@@ -1890,1 +1886,1 @@\n-        clinit();\n+        clinit(cw, className, classData);\n@@ -1959,1 +1955,1 @@\n-        clinit();\n+        clinit(cw, className, classData);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":24,"deletions":28,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -325,1 +325,3 @@\n-     * Sole factory method to find or create an interned method type.\n+     * Sole factory method to find or create an interned method type. Will perform\n+     * input validation on behalf of factory methods\n+     *\n@@ -329,0 +331,2 @@\n+     * @throws NullPointerException if {@code rtype} or {@code ptypes} or any element of {@code ptypes} is null\n+     * @throws IllegalArgumentException if any element of {@code ptypes} is {@code void.class}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}