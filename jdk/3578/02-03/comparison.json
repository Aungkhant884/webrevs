{"files":[{"patch":"@@ -635,0 +635,2 @@\n+\n+      \/\/ Convert standard box (e.g. java.lang.Integer) to JVMCI box (e.g. jdk.vm.ci.meta.PrimitiveConstant)\n@@ -658,0 +660,3 @@\n+\n+      JVMCIObject result = JVMCIENV->call_PrimitiveConstant_forTypeChar(type2char(bt2), raw_value, JVMCI_CHECK_NULL);\n+      return JVMCIENV->get_jobject(result);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import java.util.List;\n@@ -224,1 +225,12 @@\n-        Class<?>[] types = {boolean.class, byte.class, short.class, char.class, int.class, float.class, long.class, double.class, String.class};\n+        Class<?>[] types = {\n+                        boolean.class,\n+                        byte.class,\n+                        short.class,\n+                        char.class,\n+                        int.class,\n+                        float.class,\n+                        long.class,\n+                        double.class,\n+                        String.class,\n+                        List.class\n+        };\n@@ -245,2 +257,2 @@\n-                Object runResult = m.invoke(null);\n-                Object rawConstant;\n+                Object expect = m.invoke(null);\n+                Object actual;\n@@ -248,1 +260,1 @@\n-                    rawConstant = ((PrimitiveConstant) lastConstant).asBoxedPrimitive();\n+                    actual = ((PrimitiveConstant) lastConstant).asBoxedPrimitive();\n@@ -250,1 +262,1 @@\n-                    rawConstant = ((HotSpotObjectConstant) lastConstant).asObject(String.class);\n+                    actual = ((HotSpotObjectConstant) lastConstant).asObject(type);\n@@ -252,1 +264,1 @@\n-                Assert.assertEquals(runResult, rawConstant, String.format(\"%s: %s != %s\", m, runResult, rawConstant));\n+                Assert.assertEquals(actual, expect, m + \":\");\n@@ -267,0 +279,1 @@\n+    @SuppressWarnings(\"unused\") public static List<?> getListBSM   (MethodHandles.Lookup l, String name, Class<?> type) { return List.of(\"element\"); }\n@@ -278,0 +291,1 @@\n+    public static List<?> getList   () { return List.of(\"element\"); }\n@@ -288,0 +302,1 @@\n+    public static List<?> getList   (List<?> v1, List<?> v2) { return List.of(v1, v2); }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.hotspot.test\/src\/jdk\/vm\/ci\/hotspot\/test\/TestDynamicConstant.java","additions":21,"deletions":6,"binary":false,"changes":27,"status":"modified"}]}