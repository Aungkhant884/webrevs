{"files":[{"patch":"@@ -30,5 +30,1 @@\n-\n-static int signum(int i) {\n-  \/\/ special version of signum which returns 1 when value is 0\n-  return i >= 0 ? 1 : -1;\n-}\n+#include <stdlib.h>\n@@ -41,3 +37,16 @@\n-    mouseInput.mi.dwFlags = MOUSEEVENTF_ABSOLUTE | MOUSEEVENTF_MOVE;\n-    mouseInput.mi.dx = (x * 65536 \/::GetSystemMetrics(SM_CXSCREEN)) + signum(x);\n-    mouseInput.mi.dy = (y * 65536 \/::GetSystemMetrics(SM_CYSCREEN)) + signum(y);\n+\n+    \/\/ The following calculations take into account a multi-monitor setup using a virtual screen for all monitors combined.\n+    \/\/ More details from Microsoft are here -- https:\/\/docs.microsoft.com\/en-us\/windows\/win32\/gdi\/the-virtual-screen\n+\n+    x -= ::GetSystemMetrics(SM_XVIRTUALSCREEN);\n+    y -= ::GetSystemMetrics(SM_YVIRTUALSCREEN);\n+\n+    mouseInput.mi.dwFlags = MOUSEEVENTF_ABSOLUTE | MOUSEEVENTF_MOVE | MOUSEEVENTF_VIRTUALDESK;\n+\n+    int scW = ::GetSystemMetrics(SM_CXVIRTUALSCREEN);\n+    int scH = ::GetSystemMetrics(SM_CYVIRTUALSCREEN);\n+\n+    \/\/ The following calculation to deduce mouse coordinates is based on empirical data\n+    mouseInput.mi.dx = (x * 65536 + scW - 1) \/ scW;\n+    mouseInput.mi.dy = (y * 65536 + scH - 1) \/ scH;\n+\n@@ -45,0 +54,1 @@\n+\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Robot.cpp","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"}]}