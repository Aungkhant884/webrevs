{"files":[{"patch":"@@ -576,0 +576,2 @@\n+    } else {\n+      OrderAccess::release(); \/\/ ensure heap expansion is visible to an asynchronous observer (e.g. CodeHeapPool::get_memory_usage())\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-    Atomic::release_store(&_next_segment, _next_segment + number_of_segments);\n+    _next_segment += number_of_segments;\n@@ -556,2 +556,1 @@\n-  size_t next_segment = Atomic::load_acquire(&_next_segment);\n-  return segments_to_size(next_segment - _freelist_segments);\n+  return segments_to_size(_next_segment - _freelist_segments);\n","filename":"src\/hotspot\/share\/memory\/heap.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -182,0 +182,1 @@\n+  OrderAccess::acquire(); \/\/ ensure possible cache expansion in CodeCache::allocate is seen\n","filename":"src\/hotspot\/share\/services\/memoryPool.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}