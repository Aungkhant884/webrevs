{"files":[{"patch":"@@ -137,1 +137,1 @@\n-  print_total(total_reserved_amount, total_committed_amount, read_only_bytes);\n+  print_total(total_reserved_amount, total_committed_amount);\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-    long totalReadonly = 0;\n@@ -68,6 +67,4 @@\n-    \/\/ Match '- <mtType> (reserved=<reserved>KB, committed=<committed>KB)\n-    Pattern mtTypePattern = Pattern.compile(\"-\\\\s+(?<typename>[\\\\w\\\\s]+)\\\\(reserved=(?<reserved>\\\\d+)KB,\\\\scommitted=(?<committed>\\\\d+)KB\\\\)\");\n-    \/\/ Match 'Total: reserved=<reserved>KB, committed=<committed>KB, readonly=<readonly>KB'\n-    Pattern totalMemoryPattern = Pattern.compile(\"Total\\\\:\\\\sreserved=(?<reserved>\\\\d+)KB,\\\\scommitted=(?<committed>\\\\d+)KB,\\\\sreadonly=(?<readonly>\\\\d+)KB\");\n-    \/\/ Match '- <mtType> (reserved=<reserved>KB, committed=<committed>KB, readonly<readonly>KB)\n-    Pattern mtSharedPattern = Pattern.compile(\"-\\\\s+(?<typename>[\\\\w\\\\s]+)\\\\(reserved=(?<reserved>\\\\d+)KB,\\\\scommitted=(?<committed>\\\\d+)KB,\\\\sreadonly=(?<readonly>\\\\d+)KB\\\\)\");\n+    \/\/ Match '- <mtType> (reserved=<reserved>KB, committed=<committed>KB) and some times readonly=<readonly>KB\n+    Pattern mtTypePattern = Pattern.compile(\"-\\\\s+(?<typename>[\\\\w\\\\s]+)\\\\(reserved=(?<reserved>\\\\d+)KB,\\\\scommitted=(?<committed>\\\\d+)KB((,\\\\sreadonly=(?<readonly>\\\\d+)KB)|)\\\\)\");\n+    \/\/ Match 'Total: reserved=<reserved>KB, committed=<committed>KB'\n+    Pattern totalMemoryPattern = Pattern.compile(\"Total\\\\:\\\\sreserved=(?<reserved>\\\\d+)KB,\\\\scommitted=(?<committed>\\\\d+)KB\");\n@@ -82,5 +79,0 @@\n-          totalReadonly = Long.parseLong(totalMemoryMatcher.group(\"readonly\"));\n-\n-          if (totalReadonly > totalCommitted) {\n-            throwTestException(\"Total readonly was more than committed\");\n-          }\n@@ -92,21 +84,1 @@\n-        Matcher sharedMatcher = mtSharedPattern.matcher(lines[i]);\n-        if (sharedMatcher.matches()) {\n-          long typeCommitted = Long.parseLong(sharedMatcher.group(\"committed\"));\n-          long typeReserved = Long.parseLong(sharedMatcher.group(\"reserved\"));\n-          long typeShared = Long.parseLong(sharedMatcher.group(\"readonly\"));\n-\n-          \/\/ Make sure reserved is always less or equals\n-          if (typeCommitted > typeReserved) {\n-            throwTestException(\"Committed (\" + typeCommitted + \") was more than Reserved (\"\n-                + typeReserved + \") for mtType: \" + typeMatcher.group(\"typename\"));\n-          }\n-          \/\/ Make sure readonly is always less or equals\n-          if (typeShared > typeCommitted) {\n-            throwTestException(\"Readonly (\" + typeShared + \") was more than Committed (\"\n-                + typeCommitted + \") for mtType: \" + typeMatcher.group(\"typename\"));\n-          }\n-\n-           \/\/ Add to total and compare them in the end\n-          totalCommittedSum += typeCommitted;\n-          totalReservedSum += typeReserved;\n-        } else if (typeMatcher.matches()) {\n+        if (typeMatcher.matches()) {\n@@ -116,0 +88,9 @@\n+          if(typeMatcher.group(\"readonly\") != null) {\n+            long typeReadOnly = Long.parseLong(typeMatcher.group(\"readonly\"));\n+            \/\/ Make sure readonly is always less or equal to committed\n+            if (typeReadOnly > typeCommitted) {\n+              throwTestException(\"Readonly (\" + typeReadOnly + \") was more than Committed (\"\n+                  + typeCommitted + \") for mtType: \" + typeMatcher.group(\"typename\"));\n+            }\n+          }\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/NMT\/SummarySanityCheck.java","additions":14,"deletions":33,"binary":false,"changes":47,"status":"modified"}]}