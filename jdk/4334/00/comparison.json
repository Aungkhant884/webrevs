{"files":[{"patch":"@@ -43,1 +43,0 @@\n-#include \"runtime\/thread.inline.hpp\"\n@@ -934,2 +933,1 @@\n-    Thread* thr = Thread::current();\n-    id = thr->as_Worker_thread()->id();\n+    id = WorkerThread::cast(Thread::current())->id();\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,0 +106,5 @@\n+  static WorkerThread* cast(Thread* t) {\n+    assert(t->is_Worker_thread(), \"incorrect cast to const WorkerThread\");\n+    return static_cast<WorkerThread*>(t);\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/nonJavaThread.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -359,1 +359,0 @@\n-  inline const WorkerThread* as_Worker_thread() const;\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -69,5 +69,0 @@\n-inline const WorkerThread* Thread::as_Worker_thread() const {\n-  assert(is_Worker_thread(), \"incorrect cast to const WorkerThread\");\n-  return static_cast<const WorkerThread*>(this);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/thread.inline.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}