{"files":[{"patch":"@@ -43,0 +43,6 @@\n+      configure-arguments:\n+        required: false\n+        type: string\n+      make-arguments:\n+        required: false\n+        type: string\n@@ -166,1 +172,1 @@\n-          ${{ inputs.extra-conf-options }} || (\n+          ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || (\n@@ -175,1 +181,1 @@\n-          make-target: 'hotspot'\n+          make-target: 'hotspot ${{ inputs.make-arguments }}'\n","filename":".github\/workflows\/build-cross-compile.yml","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,0 +61,6 @@\n+      configure-arguments:\n+        required: false\n+        type: string\n+      make-arguments:\n+        required: false\n+        type: string\n@@ -126,1 +132,1 @@\n-          ${{ inputs.extra-conf-options }} || (\n+          ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || (\n@@ -135,1 +141,1 @@\n-          make-target: '${{ inputs.make-target }}'\n+          make-target: '${{ inputs.make-target }} ${{ inputs.make-arguments }}'\n","filename":".github\/workflows\/build-linux.yml","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -48,0 +48,6 @@\n+      configure-arguments:\n+        required: false\n+        type: string\n+      make-arguments:\n+        required: false\n+        type: string\n@@ -101,1 +107,1 @@\n-          ${{ inputs.extra-conf-options }} || (\n+          ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || (\n@@ -110,1 +116,1 @@\n-          make-target: '${{ inputs.make-target }}'\n+          make-target: '${{ inputs.make-target }} ${{ inputs.make-arguments }}'\n","filename":".github\/workflows\/build-macos.yml","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -51,0 +51,6 @@\n+      configure-arguments:\n+        required: false\n+        type: string\n+      make-arguments:\n+        required: false\n+        type: string\n@@ -114,1 +120,1 @@\n-          ${{ inputs.extra-conf-options }} || (\n+          ${{ inputs.extra-conf-options }} ${{ inputs.configure-arguments }} || (\n@@ -127,1 +133,1 @@\n-          make-target: '${{ inputs.make-target }}'\n+          make-target: '${{ inputs.make-target }} ${{ inputs.make-arguments }}'\n","filename":".github\/workflows\/build-windows.yml","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,0 +39,6 @@\n+      configure-arguments:\n+        description: 'Additional configure arguments'\n+        required: false\n+      make-arguments:\n+        description: 'Additional make arguments'\n+        required: false\n@@ -128,0 +134,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -145,0 +153,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -158,0 +168,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -171,0 +183,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -184,0 +198,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -198,0 +214,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -210,0 +228,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -219,0 +239,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -229,0 +251,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -239,0 +263,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n@@ -251,0 +277,2 @@\n+      configure-arguments: ${{ github.event.inputs.configure-arguments }}\n+      make-arguments: ${{ github.event.inputs.make-arguments }}\n","filename":".github\/workflows\/main.yml","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -198,1 +198,1 @@\n-MAX_PARAMS := 36\n+MAX_PARAMS := 96\n","filename":"make\/common\/MakeBase.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -352,1 +352,1 @@\n-        $$($$($1_BASE)_SYSROOT_CFLAGS) $$($1_WARNINGS_FLAGS)\n+        $$($$($1_BASE)_SYSROOT_CFLAGS)\n@@ -354,1 +354,1 @@\n-        $$($$($1_BASE)_SYSROOT_CFLAGS) $$($1_EXTRA_CXXFLAGS) $$($1_WARNINGS_FLAGS)\n+        $$($$($1_BASE)_SYSROOT_CFLAGS) $$($1_EXTRA_CXXFLAGS)\n@@ -359,0 +359,1 @@\n+      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n@@ -364,0 +365,1 @@\n+      $1_CFLAGS += $$($1_WARNINGS_FLAGS)\n@@ -387,0 +389,1 @@\n+      $1_CXXFLAGS += $$($1_WARNINGS_FLAGS)\n","filename":"make\/common\/NativeCompilation.gmk","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -105,0 +105,2 @@\n+    DISABLED_WARNINGS_gcc_test_signals.cpp := cast-function-type, \\\n+    DISABLED_WARNINGS_gcc_test_threadCpuLoad.cpp := address, \\\n@@ -108,0 +110,2 @@\n+    DISABLED_WARNINGS_clang_test_g1ServiceThread.cpp := delete-abstract-non-virtual-dtor, \\\n+    DISABLED_WARNINGS_clang_test_logDecorations.cpp := missing-field-initializers, \\\n","filename":"make\/hotspot\/lib\/CompileGtest.gmk","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,9 +86,7 @@\n-DISABLED_WARNINGS_gcc := parentheses comment unknown-pragmas address \\\n-    delete-non-virtual-dtor char-subscripts array-bounds int-in-bool-context \\\n-    ignored-qualifiers  missing-field-initializers implicit-fallthrough \\\n-    empty-body strict-overflow sequence-point maybe-uninitialized \\\n-    misleading-indentation cast-function-type shift-negative-value\n-\n-ifeq ($(call check-jvm-feature, zero), true)\n-  DISABLED_WARNINGS_gcc += return-type switch clobbered\n-endif\n+DISABLED_WARNINGS_gcc := array-bounds comment delete-non-virtual-dtor \\\n+    empty-body ignored-qualifiers implicit-fallthrough int-in-bool-context \\\n+    maybe-uninitialized missing-field-initializers parentheses \\\n+    shift-negative-value unknown-pragmas\n+\n+DISABLED_WARNINGS_clang := ignored-qualifiers sometimes-uninitialized \\\n+    missing-braces delete-non-abstract-non-virtual-dtor unknown-pragmas\n@@ -96,5 +94,4 @@\n-DISABLED_WARNINGS_clang := tautological-compare \\\n-    undefined-var-template sometimes-uninitialized unknown-pragmas \\\n-    delete-non-virtual-dtor missing-braces char-subscripts \\\n-    ignored-qualifiers missing-field-initializers mismatched-tags \\\n-    shift-negative-value misleading-indentation\n+ifneq ($(DEBUG_LEVEL), release)\n+  # Assert macro gives warning\n+  DISABLED_WARNINGS_clang += tautological-constant-out-of-range-compare\n+endif\n@@ -104,2 +101,1 @@\n-DISABLED_WARNINGS_microsoft := 4100 4127 4146 4201 4244 4291 4351 \\\n-    4511 4512 4514 4624\n+DISABLED_WARNINGS_microsoft := 4624 4244 4291 4146\n@@ -159,0 +155,21 @@\n+    DISABLED_WARNINGS_gcc_assembler_aarch64.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_c1_LIR.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_dict.cpp := char-subscripts, \\\n+    DISABLED_WARNINGS_gcc_javaClasses.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_loopnode.cpp := sequence-point, \\\n+    DISABLED_WARNINGS_gcc_cgroupV1Subsystem_linux.cpp := address, \\\n+    DISABLED_WARNINGS_gcc_cgroupV2Subsystem_linux.cpp := address, \\\n+    DISABLED_WARNINGS_gcc_postaloc.cpp := address, \\\n+    DISABLED_WARNINGS_gcc_sharedRuntimeTrig.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSet.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_aarch64.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_ppc.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_riscv.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetAssembler_x86.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_aarch64.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_ppc.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_riscv.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1_x86.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_shenandoahBarrierSetC1.cpp := misleading-indentation, \\\n+    DISABLED_WARNINGS_gcc_signals_posix.cpp := cast-function-type, \\\n+    DISABLED_WARNINGS_gcc_templateTable.cpp := cast-function-type, \\\n@@ -160,0 +177,11 @@\n+    DISABLED_WARNINGS_clang_arguments.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_codeBuffer.cpp := tautological-undefined-compare, \\\n+    DISABLED_WARNINGS_clang_dict.cpp := char-subscripts, \\\n+    DISABLED_WARNINGS_clang_directivesParser.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_g1ParScanThreadState.cpp := delete-abstract-non-virtual-dtor, \\\n+    DISABLED_WARNINGS_clang_g1YoungGCPostEvacuateTasks.cpp := delete-abstract-non-virtual-dtor, \\\n+    DISABLED_WARNINGS_clang_management.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_os_posix.cpp := mismatched-tags missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_postaloc.cpp := tautological-undefined-compare, \\\n+    DISABLED_WARNINGS_clang_vm_version_x86.cpp := missing-field-initializers, \\\n+    DISABLED_WARNINGS_clang_zTracer.cpp := undefined-var-template, \\\n","filename":"make\/hotspot\/lib\/CompileJvm.gmk","additions":44,"deletions":16,"binary":false,"changes":60,"status":"modified"}]}