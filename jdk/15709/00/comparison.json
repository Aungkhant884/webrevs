{"files":[{"patch":"@@ -3878,1 +3878,1 @@\n-      __ fast_lock(oop, disp_hdr, tmp, rscratch1, no_count);\n+      __ lightweight_lock(oop, disp_hdr, tmp, rscratch1, no_count);\n@@ -3959,1 +3959,1 @@\n-      __ fast_unlock(oop, tmp, box, disp_hdr, no_count);\n+      __ lightweight_unlock(oop, tmp, box, disp_hdr, no_count);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-    fast_lock(obj, hdr, rscratch1, rscratch2, slow_case);\n+    lightweight_lock(obj, hdr, rscratch1, rscratch2, slow_case);\n@@ -152,1 +152,1 @@\n-    fast_unlock(obj, hdr, rscratch1, rscratch2, slow_case);\n+    lightweight_unlock(obj, hdr, rscratch1, rscratch2, slow_case);\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_MacroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -770,1 +770,1 @@\n-      fast_lock(obj_reg, tmp, rscratch1, rscratch2, slow_case);\n+      lightweight_lock(obj_reg, tmp, rscratch1, rscratch2, slow_case);\n@@ -901,1 +901,1 @@\n-      fast_unlock(obj_reg, header_reg, swap_reg, rscratch1, slow_case);\n+      lightweight_unlock(obj_reg, header_reg, swap_reg, rscratch1, slow_case);\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6317,1 +6317,1 @@\n-\/\/ Implements fast-locking.\n+\/\/ Implements lightweight-locking.\n@@ -6324,1 +6324,1 @@\n-void MacroAssembler::fast_lock(Register obj, Register hdr, Register t1, Register t2, Label& slow) {\n+void MacroAssembler::lightweight_lock(Register obj, Register hdr, Register t1, Register t2, Label& slow) {\n@@ -6349,1 +6349,1 @@\n-\/\/ Implements fast-unlocking.\n+\/\/ Implements lightweight-unlocking.\n@@ -6356,1 +6356,1 @@\n-void MacroAssembler::fast_unlock(Register obj, Register hdr, Register t1, Register t2, Label& slow) {\n+void MacroAssembler::lightweight_unlock(Register obj, Register hdr, Register t1, Register t2, Label& slow) {\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1595,2 +1595,2 @@\n-  void fast_lock(Register obj, Register hdr, Register t1, Register t2, Label& slow);\n-  void fast_unlock(Register obj, Register hdr, Register t1, Register t2, Label& slow);\n+  void lightweight_lock(Register obj, Register hdr, Register t1, Register t2, Label& slow);\n+  void lightweight_unlock(Register obj, Register hdr, Register t1, Register t2, Label& slow);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1815,1 +1815,1 @@\n-      __ fast_lock(obj_reg, swap_reg, tmp, rscratch1, slow_path_lock);\n+      __ lightweight_lock(obj_reg, swap_reg, tmp, rscratch1, slow_path_lock);\n@@ -1956,1 +1956,1 @@\n-      __ fast_unlock(obj_reg, old_hdr, swap_reg, rscratch1, slow_path_unlock);\n+      __ lightweight_unlock(obj_reg, old_hdr, swap_reg, rscratch1, slow_path_unlock);\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -222,1 +222,1 @@\n-    fast_lock_2(obj \/* obj *\/, t1, t2, t3, 1 \/* savemask - save t1 *\/, slow_case);\n+    lightweight_lock(obj \/* obj *\/, t1, t2, t3, 1 \/* savemask - save t1 *\/, slow_case);\n@@ -285,2 +285,2 @@\n-    fast_unlock_2(obj \/* object *\/, t1, t2, t3, 1 \/* savemask (save t1) *\/,\n-                    slow_case);\n+    lightweight_unlock(obj \/* object *\/, t1, t2, t3, 1 \/* savemask (save t1) *\/,\n+                       slow_case);\n","filename":"src\/hotspot\/cpu\/arm\/c1_MacroAssembler_arm.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -96,2 +96,2 @@\n-    fast_lock_2(Roop \/* obj *\/, Rbox \/* t1 *\/, Rscratch \/* t2 *\/, Rscratch2 \/* t3 *\/,\n-                1 \/* savemask (save t1) *\/, done);\n+    lightweight_lock(Roop \/* obj *\/, Rbox \/* t1 *\/, Rscratch \/* t2 *\/, Rscratch2 \/* t3 *\/,\n+                     1 \/* savemask (save t1) *\/, done);\n@@ -146,2 +146,2 @@\n-    fast_unlock_2(Roop \/* obj *\/, Rbox \/* t1 *\/, Rscratch \/* t2 *\/, Rscratch2 \/* t3 *\/,\n-                  1 \/* savemask (save t1) *\/, done);\n+    lightweight_unlock(Roop \/* obj *\/, Rbox \/* t1 *\/, Rscratch \/* t2 *\/, Rscratch2 \/* t3 *\/,\n+                       1 \/* savemask (save t1) *\/, done);\n","filename":"src\/hotspot\/cpu\/arm\/c2_MacroAssembler_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -915,1 +915,1 @@\n-      fast_lock_2(Robj, R0 \/* t1 *\/, Rmark \/* t2 *\/, Rtemp \/* t3 *\/, 0 \/* savemask *\/, slow_case);\n+      lightweight_lock(Robj, R0 \/* t1 *\/, Rmark \/* t2 *\/, Rtemp \/* t3 *\/, 0 \/* savemask *\/, slow_case);\n@@ -1037,2 +1037,2 @@\n-      fast_unlock_2(Robj \/* obj *\/, Rlock \/* t1 *\/, Rmark \/* t2 *\/, Rtemp \/* t3 *\/,\n-                    1 \/* savemask (save t1) *\/, slow_case);\n+      lightweight_unlock(Robj \/* obj *\/, Rlock \/* t1 *\/, Rmark \/* t2 *\/, Rtemp \/* t3 *\/,\n+                         1 \/* savemask (save t1) *\/, slow_case);\n","filename":"src\/hotspot\/cpu\/arm\/interp_masm_arm.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1751,1 +1751,1 @@\n-\/\/ Attempt to fast-lock an object\n+\/\/ Attempt to lightweight-lock an object\n@@ -1758,1 +1758,1 @@\n-void MacroAssembler::fast_lock_2(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow) {\n+void MacroAssembler::lightweight_lock(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow) {\n@@ -1809,1 +1809,1 @@\n-\/\/ Attempt to fast-unlock an object\n+\/\/ Attempt to lightweight-unlock an object\n@@ -1816,1 +1816,1 @@\n-void MacroAssembler::fast_unlock_2(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow) {\n+void MacroAssembler::lightweight_unlock(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow) {\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1012,1 +1012,1 @@\n-  \/\/ Attempt to fast-lock an object\n+  \/\/ Attempt to lightweight-lock an object\n@@ -1019,1 +1019,1 @@\n-  void fast_lock_2(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow);\n+  void lightweight_lock(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow);\n@@ -1021,1 +1021,1 @@\n-  \/\/ Attempt to fast-unlock an object\n+  \/\/ Attempt to lightweight-unlock an object\n@@ -1028,1 +1028,1 @@\n-  void fast_unlock_2(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow);\n+  void lightweight_unlock(Register obj, Register t1, Register t2, Register t3, unsigned savemask, Label& slow);\n","filename":"src\/hotspot\/cpu\/arm\/macroAssembler_arm.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1158,2 +1158,2 @@\n-      __ fast_lock_2(sync_obj \/* object *\/, disp_hdr \/* t1 *\/, tmp \/* t2 *\/, Rtemp \/* t3 *\/,\n-                     0x7 \/* savemask *\/, slow_lock);\n+      __ lightweight_lock(sync_obj \/* object *\/, disp_hdr \/* t1 *\/, tmp \/* t2 *\/, Rtemp \/* t3 *\/,\n+                          0x7 \/* savemask *\/, slow_lock);\n@@ -1245,2 +1245,2 @@\n-      __ fast_unlock_2(sync_obj, R2 \/* t1 *\/, tmp \/* t2 *\/, Rtemp \/* t3 *\/,\n-                       7 \/* savemask *\/, slow_unlock);\n+      __ lightweight_unlock(sync_obj, R2 \/* t1 *\/, tmp \/* t2 *\/, Rtemp \/* t3 *\/,\n+                            7 \/* savemask *\/, slow_unlock);\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    fast_lock(Roop, Rmark, Rscratch, slow_int);\n+    lightweight_lock(Roop, Rmark, Rscratch, slow_int);\n@@ -184,1 +184,1 @@\n-    fast_unlock(Roop, Rmark, slow_int);\n+    lightweight_unlock(Roop, Rmark, slow_int);\n","filename":"src\/hotspot\/cpu\/ppc\/c1_MacroAssembler_ppc.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -990,1 +990,1 @@\n-      fast_lock(object, \/* mark word *\/ header, tmp, slow_case);\n+      lightweight_lock(object, \/* mark word *\/ header, tmp, slow_case);\n@@ -1140,1 +1140,1 @@\n-      fast_unlock(object, header, slow_case);\n+      lightweight_unlock(object, header, slow_case);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2253,1 +2253,1 @@\n-    fast_lock(oop, displaced_header, temp, failure);\n+    lightweight_lock(oop, displaced_header, temp, failure);\n@@ -2337,1 +2337,1 @@\n-    fast_unlock(oop, current_header, failure);\n+    lightweight_unlock(oop, current_header, failure);\n@@ -3996,1 +3996,1 @@\n-\/\/ Implements fast-locking.\n+\/\/ Implements lightweight-locking.\n@@ -4003,1 +4003,1 @@\n-void MacroAssembler::fast_lock(Register obj, Register hdr, Register t1, Label& slow) {\n+void MacroAssembler::lightweight_lock(Register obj, Register hdr, Register t1, Label& slow) {\n@@ -4029,1 +4029,1 @@\n-\/\/ Implements fast-unlocking.\n+\/\/ Implements lightweight-unlocking.\n@@ -4035,1 +4035,1 @@\n-void MacroAssembler::fast_unlock(Register obj, Register hdr, Label& slow) {\n+void MacroAssembler::lightweight_unlock(Register obj, Register hdr, Label& slow) {\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -609,2 +609,2 @@\n-  void fast_lock(Register obj, Register hdr, Register t1, Label& slow);\n-  void fast_unlock(Register obj, Register hdr, Label& slow);\n+  void lightweight_lock(Register obj, Register hdr, Register t1, Label& slow);\n+  void lightweight_unlock(Register obj, Register hdr, Label& slow);\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    fast_lock(obj, hdr, t0, t1, slow_case);\n+    lightweight_lock(obj, hdr, t0, t1, slow_case);\n@@ -140,1 +140,1 @@\n-    fast_unlock(obj, hdr, t0, t1, slow_case);\n+    lightweight_unlock(obj, hdr, t0, t1, slow_case);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_MacroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -839,1 +839,1 @@\n-      fast_lock(obj_reg, tmp, t0, t1, slow_case);\n+      lightweight_lock(obj_reg, tmp, t0, t1, slow_case);\n@@ -952,1 +952,1 @@\n-      fast_unlock(obj_reg, header_reg, swap_reg, t0, slow_case);\n+      lightweight_unlock(obj_reg, header_reg, swap_reg, t0, slow_case);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4648,1 +4648,1 @@\n-\/\/ Implements fast-locking.\n+\/\/ Implements lightweight-locking.\n@@ -4655,1 +4655,1 @@\n-void MacroAssembler::fast_lock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow) {\n+void MacroAssembler::lightweight_lock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow) {\n@@ -4682,1 +4682,1 @@\n-\/\/ Implements fast-unlocking.\n+\/\/ Implements ligthweight-unlocking.\n@@ -4689,1 +4689,1 @@\n-void MacroAssembler::fast_unlock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow) {\n+void MacroAssembler::lightweight_unlock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow) {\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1460,2 +1460,2 @@\n-  void fast_lock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow);\n-  void fast_unlock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow);\n+  void lightweight_lock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow);\n+  void lightweight_unlock(Register obj, Register hdr, Register tmp1, Register tmp2, Label& slow);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2505,1 +2505,1 @@\n-      __ fast_lock(oop, disp_hdr, tmp, t0, slow);\n+      __ lightweight_lock(oop, disp_hdr, tmp, t0, slow);\n@@ -2596,1 +2596,1 @@\n-      __ fast_unlock(oop, tmp, box, disp_hdr, slow);\n+      __ lightweight_unlock(oop, tmp, box, disp_hdr, slow);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1704,1 +1704,1 @@\n-      __ fast_lock(obj_reg, swap_reg, tmp, t0, slow_path_lock);\n+      __ lightweight_lock(obj_reg, swap_reg, tmp, t0, slow_path_lock);\n@@ -1832,1 +1832,1 @@\n-      __ fast_unlock(obj_reg, old_hdr, swap_reg, t0, slow_path_unlock);\n+      __ lightweight_unlock(obj_reg, old_hdr, swap_reg, t0, slow_path_unlock);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-    fast_lock_impl(obj, hdr, thread, tmp, slow_case);\n+    lightweight_lock(obj, hdr, thread, tmp, slow_case);\n@@ -139,1 +139,1 @@\n-    fast_unlock_impl(obj, disp_hdr, hdr, slow_case);\n+    lightweight_unlock(obj, disp_hdr, hdr, slow_case);\n","filename":"src\/hotspot\/cpu\/x86\/c1_MacroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-    fast_lock_impl(objReg, tmpReg, thread, scrReg, NO_COUNT);\n+    lightweight_lock(objReg, tmpReg, thread, scrReg, NO_COUNT);\n@@ -929,1 +929,1 @@\n-      fast_unlock_impl(objReg, boxReg, tmpReg, NO_COUNT);\n+      lightweight_unlock(objReg, boxReg, tmpReg, NO_COUNT);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1239,1 +1239,1 @@\n-      fast_lock_impl(obj_reg, swap_reg, thread, tmp_reg, slow_case);\n+      lightweight_lock(obj_reg, swap_reg, thread, tmp_reg, slow_case);\n@@ -1369,1 +1369,1 @@\n-      fast_unlock_impl(obj_reg, swap_reg, header_reg, slow_case);\n+      lightweight_unlock(obj_reg, swap_reg, header_reg, slow_case);\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9792,1 +9792,1 @@\n-\/\/ Implements fast-locking.\n+\/\/ Implements lightweight-locking.\n@@ -9800,1 +9800,1 @@\n-void MacroAssembler::fast_lock_impl(Register obj, Register hdr, Register thread, Register tmp, Label& slow) {\n+void MacroAssembler::lightweight_lock(Register obj, Register hdr, Register thread, Register tmp, Label& slow) {\n@@ -9828,1 +9828,1 @@\n-\/\/ Implements fast-unlocking.\n+\/\/ Implements lightweight-unlocking.\n@@ -9835,1 +9835,1 @@\n-void MacroAssembler::fast_unlock_impl(Register obj, Register hdr, Register tmp, Label& slow) {\n+void MacroAssembler::lightweight_unlock(Register obj, Register hdr, Register tmp, Label& slow) {\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2026,2 +2026,2 @@\n-  void fast_lock_impl(Register obj, Register hdr, Register thread, Register tmp, Label& slow);\n-  void fast_unlock_impl(Register obj, Register hdr, Register tmp, Label& slow);\n+  void lightweight_lock(Register obj, Register hdr, Register thread, Register tmp, Label& slow);\n+  void lightweight_unlock(Register obj, Register hdr, Register tmp, Label& slow);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1720,1 +1720,1 @@\n-      __ fast_lock_impl(obj_reg, swap_reg, thread, lock_reg, slow_path_lock);\n+      __ lightweight_lock(obj_reg, swap_reg, thread, lock_reg, slow_path_lock);\n@@ -1879,1 +1879,1 @@\n-      __ fast_unlock_impl(obj_reg, swap_reg, lock_reg, slow_path_unlock);\n+      __ lightweight_unlock(obj_reg, swap_reg, lock_reg, slow_path_unlock);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2191,1 +2191,1 @@\n-      __ fast_lock_impl(obj_reg, swap_reg, r15_thread, rscratch1, slow_path_lock);\n+      __ lightweight_lock(obj_reg, swap_reg, r15_thread, rscratch1, slow_path_lock);\n@@ -2335,1 +2335,1 @@\n-      __ fast_unlock_impl(obj_reg, swap_reg, lock_reg, slow_path_unlock);\n+      __ lightweight_unlock(obj_reg, swap_reg, lock_reg, slow_path_unlock);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}