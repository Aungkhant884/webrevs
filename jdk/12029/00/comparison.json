{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -203,1 +203,1 @@\n-  for (BCEscapeAnalyzer* scope = this; scope != NULL; scope = scope->_parent) {\n+  for (BCEscapeAnalyzer* scope = this; scope != nullptr; scope = scope->_parent) {\n@@ -299,1 +299,1 @@\n-  ciMethod* inline_target = NULL;\n+  ciMethod* inline_target = nullptr;\n@@ -311,1 +311,1 @@\n-  if (inline_target != NULL && !is_recursive_call(inline_target)) {\n+  if (inline_target != nullptr && !is_recursive_call(inline_target)) {\n@@ -894,1 +894,1 @@\n-          ciSignature* declared_signature = NULL;\n+          ciSignature* declared_signature = nullptr;\n@@ -897,1 +897,1 @@\n-          assert(declared_signature != NULL, \"cannot be null\");\n+          assert(declared_signature != nullptr, \"cannot be null\");\n@@ -1108,2 +1108,2 @@\n-  GrowableArray<ciBlock *> worklist(arena, numblocks \/ 4, 0, NULL);\n-  GrowableArray<ciBlock *> successors(arena, 4, 0, NULL);\n+  GrowableArray<ciBlock *> worklist(arena, numblocks \/ 4, 0, nullptr);\n+  GrowableArray<ciBlock *> successors(arena, 4, 0, nullptr);\n@@ -1442,1 +1442,1 @@\n-    , _conservative(method == NULL || !EstimateArgEscape)\n+    , _conservative(method == nullptr || !EstimateArgEscape)\n@@ -1444,1 +1444,1 @@\n-    , _methodData(method ? method->method_data() : NULL)\n+    , _methodData(method ? method->method_data() : nullptr)\n@@ -1453,1 +1453,1 @@\n-    , _dependencies(_arena, 4, 0, NULL)\n+    , _dependencies(_arena, 4, 0, nullptr)\n@@ -1455,1 +1455,1 @@\n-    , _level(parent == NULL ? 0 : parent->level() + 1) {\n+    , _level(parent == nullptr ? 0 : parent->level() + 1) {\n@@ -1464,1 +1464,1 @@\n-    if (methodData() == NULL)\n+    if (methodData() == nullptr)\n","filename":"src\/hotspot\/share\/ci\/bcEscapeAnalyzer.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-  BCEscapeAnalyzer(ciMethod* method, BCEscapeAnalyzer* parent = NULL);\n+  BCEscapeAnalyzer(ciMethod* method, BCEscapeAnalyzer* parent = nullptr);\n","filename":"src\/hotspot\/share\/ci\/bcEscapeAnalyzer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-  if (ary == NULL)\n+  if (ary == nullptr)\n","filename":"src\/hotspot\/share\/ci\/ciArray.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    _receiver[0] = NULL;\n+    _receiver[0] = nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciCallProfile.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciConstantPoolCache.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-#define VM_CLASS_DEFN(name, ignore_s) ciInstanceKlass* ciEnv::_##name = NULL;\n+#define VM_CLASS_DEFN(name, ignore_s) ciInstanceKlass* ciEnv::_##name = nullptr;\n@@ -98,3 +98,3 @@\n-ciSymbol*        ciEnv::_unloaded_cisymbol = NULL;\n-ciInstanceKlass* ciEnv::_unloaded_ciinstance_klass = NULL;\n-ciObjArrayKlass* ciEnv::_unloaded_ciobjarrayklass = NULL;\n+ciSymbol*        ciEnv::_unloaded_cisymbol = nullptr;\n+ciInstanceKlass* ciEnv::_unloaded_ciinstance_klass = nullptr;\n+ciObjArrayKlass* ciEnv::_unloaded_ciobjarrayklass = nullptr;\n@@ -102,3 +102,3 @@\n-jobject ciEnv::_ArrayIndexOutOfBoundsException_handle = NULL;\n-jobject ciEnv::_ArrayStoreException_handle = NULL;\n-jobject ciEnv::_ClassCastException_handle = NULL;\n+jobject ciEnv::_ArrayIndexOutOfBoundsException_handle = nullptr;\n+jobject ciEnv::_ArrayStoreException_handle = nullptr;\n+jobject ciEnv::_ClassCastException_handle = nullptr;\n@@ -120,4 +120,4 @@\n-  _oop_recorder = NULL;\n-  _debug_info = NULL;\n-  _dependencies = NULL;\n-  _failure_reason = NULL;\n+  _oop_recorder = nullptr;\n+  _debug_info = nullptr;\n+  _dependencies = nullptr;\n+  _failure_reason = nullptr;\n@@ -127,1 +127,1 @@\n-  _compiler_data = NULL;\n+  _compiler_data = nullptr;\n@@ -133,2 +133,2 @@\n-  assert(task == NULL || thread->task() == task, \"sanity\");\n-  if (task != NULL) {\n+  assert(task == nullptr || thread->task() == task, \"sanity\");\n+  if (task != nullptr) {\n@@ -138,1 +138,1 @@\n-  _log = NULL;\n+  _log = nullptr;\n@@ -141,1 +141,1 @@\n-  _name_buffer = NULL;\n+  _name_buffer = nullptr;\n@@ -156,1 +156,1 @@\n-  assert(o != NULL, \"should have been initialized\");\n+  assert(o != nullptr, \"should have been initialized\");\n@@ -159,1 +159,1 @@\n-  assert(o != NULL, \"should have been initialized\");\n+  assert(o != nullptr, \"should have been initialized\");\n@@ -162,5 +162,5 @@\n-  _ArrayIndexOutOfBoundsException_instance = NULL;\n-  _ArrayStoreException_instance = NULL;\n-  _ClassCastException_instance = NULL;\n-  _the_null_string = NULL;\n-  _the_min_jint_string = NULL;\n+  _ArrayIndexOutOfBoundsException_instance = nullptr;\n+  _ArrayStoreException_instance = nullptr;\n+  _ClassCastException_instance = nullptr;\n+  _the_null_string = nullptr;\n+  _the_min_jint_string = nullptr;\n@@ -174,2 +174,2 @@\n-  _dyno_klasses = NULL;\n-  _dyno_locs = NULL;\n+  _dyno_klasses = nullptr;\n+  _dyno_locs = nullptr;\n@@ -245,1 +245,1 @@\n-  assert(current_thread->env() == NULL, \"must be\");\n+  assert(current_thread->env() == nullptr, \"must be\");\n@@ -249,4 +249,4 @@\n-  _oop_recorder = NULL;\n-  _debug_info = NULL;\n-  _dependencies = NULL;\n-  _failure_reason = NULL;\n+  _oop_recorder = nullptr;\n+  _debug_info = nullptr;\n+  _dependencies = nullptr;\n+  _failure_reason = nullptr;\n@@ -256,1 +256,1 @@\n-  _compiler_data = NULL;\n+  _compiler_data = nullptr;\n@@ -263,2 +263,2 @@\n-  _task = NULL;\n-  _log = NULL;\n+  _task = nullptr;\n+  _log = nullptr;\n@@ -267,1 +267,1 @@\n-  _name_buffer = NULL;\n+  _name_buffer = nullptr;\n@@ -281,7 +281,7 @@\n-  _NullPointerException_instance = NULL;\n-  _ArithmeticException_instance = NULL;\n-  _ArrayIndexOutOfBoundsException_instance = NULL;\n-  _ArrayStoreException_instance = NULL;\n-  _ClassCastException_instance = NULL;\n-  _the_null_string = NULL;\n-  _the_min_jint_string = NULL;\n+  _NullPointerException_instance = nullptr;\n+  _ArithmeticException_instance = nullptr;\n+  _ArrayIndexOutOfBoundsException_instance = nullptr;\n+  _ArrayStoreException_instance = nullptr;\n+  _ClassCastException_instance = nullptr;\n+  _the_null_string = nullptr;\n+  _the_min_jint_string = nullptr;\n@@ -295,2 +295,2 @@\n-  _dyno_klasses = NULL;\n-  _dyno_locs = NULL;\n+  _dyno_klasses = nullptr;\n+  _dyno_locs = nullptr;\n@@ -305,1 +305,1 @@\n-      current_thread->set_env(NULL);\n+      current_thread->set_env(nullptr);\n@@ -322,1 +322,1 @@\n-  return _task != NULL && _task->method()->is_old();\n+  return _task != nullptr && _task->method()->is_old();\n@@ -371,1 +371,1 @@\n-  if (handle == NULL) {\n+  if (handle == nullptr) {\n@@ -374,2 +374,2 @@\n-    jobject objh = NULL;\n-    if (ik != NULL) {\n+    jobject objh = nullptr;\n+    if (ik != nullptr) {\n@@ -387,1 +387,1 @@\n-  return obj == NULL? NULL: get_object(obj)->as_instance();\n+  return obj == nullptr? nullptr: get_object(obj)->as_instance();\n@@ -403,1 +403,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -408,1 +408,1 @@\n-  if (_ArrayIndexOutOfBoundsException_instance == NULL) {\n+  if (_ArrayIndexOutOfBoundsException_instance == nullptr) {\n@@ -416,1 +416,1 @@\n-  if (_ArrayStoreException_instance == NULL) {\n+  if (_ArrayStoreException_instance == nullptr) {\n@@ -424,1 +424,1 @@\n-  if (_ClassCastException_instance == NULL) {\n+  if (_ClassCastException_instance == nullptr) {\n@@ -433,1 +433,1 @@\n-  if (_the_null_string == NULL) {\n+  if (_the_null_string == nullptr) {\n@@ -441,1 +441,1 @@\n-  if (_the_min_jint_string == NULL) {\n+  if (_the_min_jint_string == nullptr) {\n@@ -462,1 +462,1 @@\n-  if (accessing_klass == NULL || !accessing_klass->is_loaded()) {\n+  if (accessing_klass == nullptr || !accessing_klass->is_loaded()) {\n@@ -506,2 +506,2 @@\n-  if (unloaded_klass != NULL) {\n-    if (require_local)  return NULL;\n+  if (unloaded_klass != nullptr) {\n+    if (require_local)  return nullptr;\n@@ -513,1 +513,1 @@\n-  if (accessing_klass != NULL) {\n+  if (accessing_klass != nullptr) {\n@@ -549,1 +549,1 @@\n-    if (elem_klass != NULL && elem_klass->is_loaded()) {\n+    if (elem_klass != nullptr && elem_klass->is_loaded()) {\n@@ -555,1 +555,1 @@\n-  if (found_klass == NULL && !cpool.is_null() && cpool->has_preresolution()) {\n+  if (found_klass == nullptr && !cpool.is_null() && cpool->has_preresolution()) {\n@@ -568,1 +568,1 @@\n-  if (found_klass != NULL) {\n+  if (found_klass != nullptr) {\n@@ -573,1 +573,1 @@\n-  if (require_local)  return NULL;\n+  if (require_local)  return nullptr;\n@@ -599,2 +599,2 @@\n-  Klass* klass = NULL;\n-  Symbol* klass_name = NULL;\n+  Klass* klass = nullptr;\n+  Symbol* klass_name = nullptr;\n@@ -608,1 +608,1 @@\n-    if (klass == NULL) {\n+    if (klass == nullptr) {\n@@ -613,1 +613,1 @@\n-  if (klass == NULL) {\n+  if (klass == nullptr) {\n@@ -623,1 +623,1 @@\n-               get_klass_by_name_impl(accessor, cpool, k->name(), true) == NULL) {\n+               get_klass_by_name_impl(accessor, cpool, k->name(), true) == nullptr) {\n@@ -637,1 +637,1 @@\n-  if (unloaded_klass != NULL) {\n+  if (unloaded_klass != nullptr) {\n@@ -696,1 +696,1 @@\n-  if (obj == NULL) {\n+  if (obj == nullptr) {\n@@ -701,1 +701,1 @@\n-    return ciConstant(T_OBJECT, get_object(NULL));\n+    return ciConstant(T_OBJECT, get_object(nullptr));\n@@ -754,1 +754,1 @@\n-    return ciConstant(T_OBJECT, get_unloaded_klass_mirror(NULL));\n+    return ciConstant(T_OBJECT, get_unloaded_klass_mirror(nullptr));\n@@ -808,1 +808,1 @@\n-  if (cache == NULL) {\n+  if (cache == nullptr) {\n@@ -813,1 +813,1 @@\n-    if (field == NULL) {\n+    if (field == nullptr) {\n@@ -862,1 +862,1 @@\n-      return NULL; \/\/ silence compiler warnings\n+      return nullptr; \/\/ silence compiler warnings\n@@ -873,1 +873,1 @@\n-  assert(accessor != NULL, \"need origin of access\");\n+  assert(accessor != nullptr, \"need origin of access\");\n@@ -919,1 +919,1 @@\n-          if (m != NULL) {\n+          if (m != nullptr) {\n@@ -933,1 +933,1 @@\n-      if (m != NULL &&\n+      if (m != nullptr &&\n@@ -937,1 +937,1 @@\n-        m = NULL;\n+        m = nullptr;\n@@ -939,2 +939,2 @@\n-      if (m != NULL && ReplayCompiles && !ciReplay::is_loaded(m)) {\n-        m = NULL;\n+      if (m != nullptr && ReplayCompiles && !ciReplay::is_loaded(m)) {\n+        m = nullptr;\n@@ -942,1 +942,1 @@\n-      if (m != NULL) {\n+      if (m != nullptr) {\n@@ -969,1 +969,1 @@\n-  guarantee(method_holder != NULL, \"no method holder\");\n+  guarantee(method_holder != nullptr, \"no method holder\");\n@@ -977,1 +977,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -994,1 +994,1 @@\n-    if (_name_buffer == NULL) {\n+    if (_name_buffer == nullptr) {\n@@ -1051,1 +1051,1 @@\n-  nmethod* nm = NULL;\n+  nmethod* nm = nullptr;\n@@ -1056,1 +1056,1 @@\n-    if (method->get_method_counters(THREAD) == NULL) {\n+    if (method->get_method_counters(THREAD) == nullptr) {\n@@ -1095,1 +1095,1 @@\n-      if (log() != NULL) {\n+      if (log() != nullptr) {\n@@ -1108,1 +1108,1 @@\n-        (method()->method_data() != NULL) &&\n+        (method()->method_data() != nullptr) &&\n@@ -1122,1 +1122,1 @@\n-      if (mdo != NULL && _inc_decompile_count_on_failure) {\n+      if (mdo != nullptr && _inc_decompile_count_on_failure) {\n@@ -1149,1 +1149,1 @@\n-    if (nm != NULL) {\n+    if (nm != nullptr) {\n@@ -1162,1 +1162,1 @@\n-          if (TraceMethodReplacement && old != NULL) {\n+          if (TraceMethodReplacement && old != nullptr) {\n@@ -1167,1 +1167,1 @@\n-          if (old != NULL) {\n+          if (old != nullptr) {\n@@ -1201,1 +1201,1 @@\n-  if (nm != NULL) {\n+  if (nm != nullptr) {\n@@ -1217,1 +1217,1 @@\n-  return get_klass_by_name_impl(NULL, constantPoolHandle(), klass_name, false);\n+  return get_klass_by_name_impl(nullptr, constantPoolHandle(), klass_name, false);\n@@ -1223,1 +1223,1 @@\n-  if (task() == NULL)  return CompilationPolicy::highest_compile_level();\n+  if (task() == nullptr)  return CompilationPolicy::highest_compile_level();\n@@ -1230,1 +1230,1 @@\n-  if (task() == NULL)  return 0;\n+  if (task() == nullptr)  return 0;\n@@ -1249,1 +1249,1 @@\n-  if (_failure_reason == NULL) {\n+  if (_failure_reason == nullptr) {\n@@ -1270,1 +1270,1 @@\n-    if (log() != NULL) {\n+    if (log() != nullptr) {\n@@ -1281,1 +1281,1 @@\n-    _failure_reason = NULL;\n+    _failure_reason = nullptr;\n@@ -1357,1 +1357,1 @@\n-\/\/ Returns NULL if no location is found.\n+\/\/ Returns null if no location is found.\n@@ -1367,1 +1367,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1383,1 +1383,1 @@\n-  if (name != NULL) {\n+  if (name != nullptr) {\n@@ -1401,1 +1401,1 @@\n-  if (vmtarget != NULL) {\n+  if (vmtarget != nullptr) {\n@@ -1426,1 +1426,1 @@\n-  if (names != NULL) {\n+  if (names != nullptr) {\n@@ -1435,1 +1435,1 @@\n-      if (function != NULL) {\n+      if (function != nullptr) {\n@@ -1438,1 +1438,1 @@\n-        if (member != NULL) {\n+        if (member != nullptr) {\n@@ -1444,1 +1444,1 @@\n-        if (mh != NULL) {\n+        if (mh != nullptr) {\n@@ -1450,1 +1450,1 @@\n-        if (invoker != NULL) {\n+        if (invoker != nullptr) {\n@@ -1480,1 +1480,1 @@\n-      if (arg != NULL) {\n+      if (arg != nullptr) {\n@@ -1499,1 +1499,1 @@\n-  if (obj != NULL) {\n+  if (obj != nullptr) {\n@@ -1574,2 +1574,2 @@\n-  _dyno_klasses = new (arena()) GrowableArray<const InstanceKlass*>(arena(), 100, 0, NULL);\n-  _dyno_locs    = new (arena()) GrowableArray<const char *>(arena(), 100, 0, NULL);\n+  _dyno_klasses = new (arena()) GrowableArray<const InstanceKlass*>(arena(), 100, 0, nullptr);\n+  _dyno_locs    = new (arena()) GrowableArray<const char *>(arena(), 100, 0, nullptr);\n@@ -1630,1 +1630,1 @@\n-          if (mh != NULL) {\n+          if (mh != nullptr) {\n@@ -1644,1 +1644,1 @@\n-    if (ReplayReduce && compiler_data() != NULL) {\n+    if (ReplayReduce && compiler_data() != nullptr) {\n@@ -1655,1 +1655,1 @@\n-    if (compiler_data() != NULL) {\n+    if (compiler_data() != nullptr) {\n@@ -1725,1 +1725,1 @@\n-      if (replay_data_file != NULL) {\n+      if (replay_data_file != nullptr) {\n@@ -1743,1 +1743,1 @@\n-      if (inline_data_file != NULL) {\n+      if (inline_data_file != nullptr) {\n","filename":"src\/hotspot\/share\/ci\/ciEnv.cpp","additions":118,"deletions":118,"binary":false,"changes":236,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -110,1 +110,1 @@\n-  \/\/ If require_local, result must be defined in that class loader, or NULL.\n+  \/\/ If require_local, result must be defined in that class loader, or null.\n@@ -173,1 +173,1 @@\n-    if (o == NULL) {\n+    if (o == nullptr) {\n@@ -181,1 +181,1 @@\n-    if (o == NULL) {\n+    if (o == nullptr) {\n@@ -183,1 +183,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -190,2 +190,2 @@\n-    if (o == NULL) {\n-      return NULL;\n+    if (o == nullptr) {\n+      return nullptr;\n@@ -202,1 +202,1 @@\n-    if (o == NULL) return NULL;\n+    if (o == nullptr) return nullptr;\n@@ -206,1 +206,1 @@\n-    if (o == NULL) return NULL;\n+    if (o == nullptr) return nullptr;\n@@ -210,1 +210,1 @@\n-    if (o == NULL) return NULL;\n+    if (o == nullptr) return nullptr;\n@@ -214,1 +214,1 @@\n-    if (o == NULL) return NULL;\n+    if (o == nullptr) return nullptr;\n@@ -218,1 +218,1 @@\n-    if (o == NULL) return NULL;\n+    if (o == nullptr) return nullptr;\n@@ -222,1 +222,1 @@\n-    if (o == NULL) return NULL;\n+    if (o == nullptr) return nullptr;\n@@ -226,1 +226,1 @@\n-    if (o == NULL) return NULL;\n+    if (o == nullptr) return nullptr;\n@@ -272,1 +272,1 @@\n-  \/\/ or return NULL if not.\n+  \/\/ or return null if not.\n@@ -322,1 +322,1 @@\n-  bool failing() { return _failure_reason != NULL; }\n+  bool failing() { return _failure_reason != nullptr; }\n@@ -337,1 +337,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -340,1 +340,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -397,1 +397,1 @@\n-    assert(_NullPointerException_instance != NULL, \"initialization problem\");\n+    assert(_NullPointerException_instance != nullptr, \"initialization problem\");\n@@ -401,1 +401,1 @@\n-    assert(_ArithmeticException_instance != NULL, \"initialization problem\");\n+    assert(_ArithmeticException_instance != nullptr, \"initialization problem\");\n","filename":"src\/hotspot\/share\/ci\/ciEnv.hpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-  if (_catch_klass == NULL) {\n+  if (_catch_klass == nullptr) {\n@@ -65,1 +65,1 @@\n-  if (_catch_klass != NULL) {\n+  if (_catch_klass != nullptr) {\n","filename":"src\/hotspot\/share\/ci\/ciExceptionHandler.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    _catch_klass = NULL;\n+    _catch_klass = nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciExceptionHandler.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-\/\/ To avoid vicious circularities, we initialize ciField::_type to NULL\n+\/\/ To avoid vicious circularities, we initialize ciField::_type to null\n@@ -74,1 +74,1 @@\n-    _known_to_link_with_put(NULL), _known_to_link_with_get(NULL) {\n+    _known_to_link_with_put(nullptr), _known_to_link_with_get(nullptr) {\n@@ -158,1 +158,1 @@\n-  if (canonical_holder == NULL) {\n+  if (canonical_holder == nullptr) {\n@@ -194,1 +194,1 @@\n-    _known_to_link_with_put(NULL), _known_to_link_with_get(NULL) {\n+    _known_to_link_with_put(nullptr), _known_to_link_with_get(nullptr) {\n@@ -207,1 +207,1 @@\n-    _type = NULL;  \/\/ must call compute_type on first access\n+    _type = nullptr;  \/\/ must call compute_type on first access\n@@ -220,1 +220,1 @@\n-  if (holder == NULL)\n+  if (holder == nullptr)\n@@ -261,1 +261,1 @@\n-  assert(field_holder != NULL, \"null field_holder\");\n+  assert(field_holder != nullptr, \"null field_holder\");\n@@ -273,1 +273,1 @@\n-      assert(vmClasses::System_klass() != NULL, \"Check once per vm\");\n+      assert(vmClasses::System_klass() != nullptr, \"Check once per vm\");\n@@ -292,1 +292,1 @@\n-    assert(vmClasses::CallSite_klass() != NULL, \"should be already initialized\");\n+    assert(vmClasses::CallSite_klass() != nullptr, \"should be already initialized\");\n@@ -423,1 +423,1 @@\n-  if (callsite_klass == NULL)\n+  if (callsite_klass == nullptr)\n@@ -449,1 +449,1 @@\n-  if (_type != NULL)\n+  if (_type != nullptr)\n","filename":"src\/hotspot\/share\/ci\/ciField.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-  ciType* type() { return (_type == NULL) ? compute_type() : _type; }\n+  ciType* type() { return (_type == nullptr) ? compute_type() : _type; }\n@@ -105,1 +105,1 @@\n-  BasicType layout_type() { return type2field[(_type == NULL) ? T_OBJECT : _type->basic_type()]; }\n+  BasicType layout_type() { return type2field[(_type == nullptr) ? T_OBJECT : _type->basic_type()]; }\n","filename":"src\/hotspot\/share\/ci\/ciField.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,3 +45,3 @@\n-  \/\/ Return NULL if it is not java.lang.Class.\n-  if (m == NULL || m->klass() != vmClasses::Class_klass()) {\n-    return NULL;\n+  \/\/ Return null if it is not java.lang.Class.\n+  if (m == nullptr || m->klass() != vmClasses::Class_klass()) {\n+    return nullptr;\n@@ -54,1 +54,1 @@\n-    assert(k != NULL, \"\");\n+    assert(k != nullptr, \"\");\n@@ -63,1 +63,1 @@\n-  assert(obj != NULL, \"bad oop\");\n+  assert(obj != nullptr, \"bad oop\");\n@@ -84,1 +84,1 @@\n-      if (o == NULL) {\n+      if (o == nullptr) {\n@@ -115,1 +115,1 @@\n-  if (field == NULL)\n+  if (field == nullptr)\n","filename":"src\/hotspot\/share\/ci\/ciInstance.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-  \/\/ Otherwise, return NULL.\n+  \/\/ Otherwise, return nullptr.\n","filename":"src\/hotspot\/share\/ci\/ciInstance.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-  _nonstatic_fields = NULL; \/\/ initialized lazily by compute_nonstatic_fields:\n+  _nonstatic_fields = nullptr; \/\/ initialized lazily by compute_nonstatic_fields:\n@@ -71,2 +71,2 @@\n-  _implementor = NULL; \/\/ we will fill these lazily\n-  _transitive_interfaces = NULL;\n+  _implementor = nullptr; \/\/ we will fill these lazily\n+  _transitive_interfaces = nullptr;\n@@ -82,1 +82,1 @@\n-    \/\/ non-strong hidden classes alive (loader == NULL). Klass holder should\n+    \/\/ non-strong hidden classes alive (loader == nullptr). Klass holder should\n@@ -86,1 +86,1 @@\n-    assert(holder != NULL, \"holder of hidden class is the mirror which is never null\");\n+    assert(holder != nullptr, \"holder of hidden class is the mirror which is never null\");\n@@ -107,2 +107,2 @@\n-  _super  = NULL;\n-  _java_mirror = NULL;\n+  _super  = nullptr;\n+  _java_mirror = nullptr;\n@@ -117,1 +117,1 @@\n-  _field_cache = NULL;\n+  _field_cache = nullptr;\n@@ -128,1 +128,1 @@\n-  _nonstatic_fields = NULL;\n+  _nonstatic_fields = nullptr;\n@@ -135,3 +135,3 @@\n-  _super = NULL;\n-  _java_mirror = NULL;\n-  _field_cache = NULL;\n+  _super = nullptr;\n+  _java_mirror = nullptr;\n+  _field_cache = nullptr;\n@@ -157,1 +157,1 @@\n-    _has_subklass = ik->subklass() != NULL ? subklass_true : subklass_false;\n+    _has_subklass = ik->subklass() != nullptr ? subklass_true : subklass_false;\n@@ -194,1 +194,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -196,1 +196,1 @@\n-  if (_field_cache == NULL) {\n+  if (_field_cache == nullptr) {\n@@ -225,1 +225,1 @@\n-  if (field != NULL) {\n+  if (field != nullptr) {\n@@ -231,1 +231,1 @@\n-      if (super == NULL ||\n+      if (super == nullptr ||\n@@ -255,1 +255,1 @@\n-  return _loader == NULL;\n+  return _loader == nullptr;\n@@ -358,1 +358,1 @@\n-  if (_super == NULL && !is_java_lang_Object()) {\n+  if (_super == nullptr && !is_java_lang_Object()) {\n@@ -376,1 +376,1 @@\n-  if (_java_mirror == NULL) {\n+  if (_java_mirror == nullptr) {\n@@ -385,3 +385,3 @@\n-  if (!is_loaded())     return NULL; \/\/ No change if class is not loaded\n-  if (!is_abstract())   return NULL; \/\/ Only applies to abstract classes.\n-  if (!has_subklass())  return NULL; \/\/ Must have at least one subklass.\n+  if (!is_loaded())     return nullptr; \/\/ No change if class is not loaded\n+  if (!is_abstract())   return nullptr; \/\/ Only applies to abstract classes.\n+  if (!has_subklass())  return nullptr; \/\/ Must have at least one subklass.\n@@ -393,1 +393,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -403,1 +403,1 @@\n-  return Dependencies::find_finalizable_subclass(get_instanceKlass()) != NULL;\n+  return Dependencies::find_finalizable_subclass(get_instanceKlass()) != nullptr;\n@@ -426,1 +426,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -432,1 +432,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -445,2 +445,2 @@\n-  if (def == NULL) {\n-    return NULL;\n+  if (def == nullptr) {\n+    return nullptr;\n@@ -463,1 +463,1 @@\n-  if (_nonstatic_fields != NULL)\n+  if (_nonstatic_fields != nullptr)\n@@ -468,1 +468,1 @@\n-    _nonstatic_fields = new (arena) GrowableArray<ciField*>(arena, 0, 0, NULL);\n+    _nonstatic_fields = new (arena) GrowableArray<ciField*>(arena, 0, 0, nullptr);\n@@ -474,2 +474,2 @@\n-  GrowableArray<ciField*>* super_fields = NULL;\n-  if (super != NULL && super->has_nonstatic_fields()) {\n+  GrowableArray<ciField*>* super_fields = nullptr;\n+  if (super != nullptr && super->has_nonstatic_fields()) {\n@@ -478,1 +478,1 @@\n-    assert(super_flen == 0 || super_fields != NULL, \"first get nof_fields\");\n+    assert(super_flen == 0 || super_fields != nullptr, \"first get nof_fields\");\n@@ -481,1 +481,1 @@\n-  GrowableArray<ciField*>* fields = NULL;\n+  GrowableArray<ciField*>* fields = nullptr;\n@@ -486,1 +486,1 @@\n-  if (fields == NULL) {\n+  if (fields == nullptr) {\n@@ -488,1 +488,1 @@\n-    if (super_fields != NULL) {\n+    if (super_fields != nullptr) {\n@@ -511,1 +511,1 @@\n-  GrowableArray<ciField*>* fields = NULL;\n+  GrowableArray<ciField*>* fields = nullptr;\n@@ -520,1 +520,1 @@\n-    return NULL;  \/\/ return nothing if none are locally declared\n+    return nullptr;  \/\/ return nothing if none are locally declared\n@@ -522,1 +522,1 @@\n-  if (super_fields != NULL) {\n+  if (super_fields != nullptr) {\n@@ -525,2 +525,2 @@\n-  fields = new (arena) GrowableArray<ciField*>(arena, flen, 0, NULL);\n-  if (super_fields != NULL) {\n+  fields = new (arena) GrowableArray<ciField*>(arena, flen, 0, nullptr);\n+  if (super_fields != nullptr) {\n@@ -555,1 +555,1 @@\n-  if (super() != NULL && super()->has_injected_fields()) {\n+  if (super() != nullptr && super()->has_injected_fields()) {\n@@ -576,1 +576,1 @@\n-  if (loader_oop == NULL) {\n+  if (loader_oop == nullptr) {\n@@ -593,1 +593,1 @@\n-  if (m == NULL)  return NULL;\n+  if (m == nullptr)  return nullptr;\n@@ -620,1 +620,1 @@\n-  if (impl == NULL) {\n+  if (impl == nullptr) {\n@@ -628,1 +628,1 @@\n-      if (k != NULL) {\n+      if (k != nullptr) {\n@@ -684,1 +684,1 @@\n-          if (value == NULL) {\n+          if (value == nullptr) {\n@@ -690,1 +690,1 @@\n-              _out->print_cr(\"\\\"%s\\\"\", (ascii_value != NULL) ? ascii_value : \"\");\n+              _out->print_cr(\"\\\"%s\\\"\", (ascii_value != nullptr) ? ascii_value : \"\");\n@@ -723,1 +723,1 @@\n-    if (name != NULL) {\n+    if (name != nullptr) {\n@@ -767,1 +767,1 @@\n-  while (sub != NULL) {\n+  while (sub != nullptr) {\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.cpp","additions":52,"deletions":52,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-  \/\/   NULL: no implementor.\n+  \/\/   null: no implementor.\n@@ -186,1 +186,1 @@\n-    if (impl == NULL) {\n+    if (impl == nullptr) {\n@@ -213,1 +213,1 @@\n-    if (_nonstatic_fields == NULL)\n+    if (_nonstatic_fields == nullptr)\n@@ -230,1 +230,1 @@\n-    assert(_nonstatic_fields != NULL, \"\");\n+    assert(_nonstatic_fields != nullptr, \"\");\n@@ -261,1 +261,1 @@\n-    return (impl != this ? impl : NULL);\n+    return (impl != this ? impl : nullptr);\n@@ -286,1 +286,1 @@\n-    return NULL;\n+    return nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciInstanceKlass.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-  assert(klass_name != NULL, \"wrong ciKlass constructor\");\n+  assert(klass_name != nullptr, \"wrong ciKlass constructor\");\n@@ -139,1 +139,1 @@\n-  return (super != NULL) ? CURRENT_THREAD_ENV->get_klass(super) : NULL;\n+  return (super != nullptr) ? CURRENT_THREAD_ENV->get_klass(super) : nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciKlass.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-    assert(k != NULL, \"illegal use of unloaded klass\");\n+    assert(k != nullptr, \"illegal use of unloaded klass\");\n@@ -65,2 +65,2 @@\n-  virtual oop loader()             { return NULL; }\n-  virtual jobject loader_handle()  { return NULL; }\n+  virtual oop loader()             { return nullptr; }\n+  virtual jobject loader_handle()  { return nullptr; }\n@@ -68,2 +68,2 @@\n-  virtual oop protection_domain()             { return NULL; }\n-  virtual jobject protection_domain_handle()  { return NULL; }\n+  virtual oop protection_domain()             { return nullptr; }\n+  virtual jobject protection_domain_handle()  { return nullptr; }\n","filename":"src\/hotspot\/share\/ci\/ciKlass.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-  ciMetadata(): _metadata(NULL) {}\n+  ciMetadata(): _metadata(nullptr) {}\n@@ -48,1 +48,1 @@\n-  bool is_loaded() const { return _metadata != NULL || is_classless(); }\n+  bool is_loaded() const { return _metadata != nullptr || is_classless(); }\n","filename":"src\/hotspot\/share\/ci\/ciMetadata.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-  assert(h_m() != NULL, \"no null method\");\n+  assert(h_m() != nullptr, \"no null method\");\n@@ -93,4 +93,4 @@\n-  _code               = NULL;\n-  _exception_handlers = NULL;\n-  _liveness           = NULL;\n-  _method_blocks = NULL;\n+  _code               = nullptr;\n+  _exception_handlers = nullptr;\n+  _liveness           = nullptr;\n+  _method_blocks = nullptr;\n@@ -98,2 +98,2 @@\n-  _flow               = NULL;\n-  _bcea               = NULL;\n+  _flow               = nullptr;\n+  _bcea               = nullptr;\n@@ -110,1 +110,1 @@\n-    if (Dependencies::check_evol_method(h_m()) != NULL) {\n+    if (Dependencies::check_evol_method(h_m()) != nullptr) {\n@@ -141,1 +141,1 @@\n-  _method_data = NULL;\n+  _method_data = nullptr;\n@@ -169,1 +169,1 @@\n-  ciMetadata((Metadata*)NULL),\n+  ciMetadata((Metadata*)nullptr),\n@@ -172,2 +172,2 @@\n-  _method_data(            NULL),\n-  _method_blocks(          NULL),\n+  _method_data(            nullptr),\n+  _method_blocks(          nullptr),\n@@ -178,1 +178,1 @@\n-  _liveness(               NULL)\n+  _liveness(               nullptr)\n@@ -181,2 +181,2 @@\n-  _flow(                   NULL),\n-  _bcea(                   NULL)\n+  _flow(                   nullptr),\n+  _bcea(                   nullptr)\n@@ -211,1 +211,1 @@\n-    for (; bp != NULL; bp = bp->next()) {\n+    for (; bp != nullptr; bp = bp->next()) {\n@@ -323,1 +323,1 @@\n-  if (_flow == NULL) {\n+  if (_flow == nullptr) {\n@@ -331,1 +331,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -348,1 +348,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -358,1 +358,1 @@\n-  if (_liveness == NULL) {\n+  if (_liveness == nullptr) {\n@@ -419,1 +419,1 @@\n-  if (_liveness == NULL) {\n+  if (_liveness == nullptr) {\n@@ -460,1 +460,1 @@\n-  if (method_data() != NULL && method_data()->is_mature()) {\n+  if (method_data() != nullptr && method_data()->is_mature()) {\n@@ -462,1 +462,1 @@\n-    if (data != NULL && data->is_CounterData()) {\n+    if (data != nullptr && data->is_CounterData()) {\n@@ -476,1 +476,1 @@\n-          if (receiver == NULL)  continue;\n+          if (receiver == nullptr)  continue;\n@@ -490,1 +490,1 @@\n-          if (receiver == NULL)  continue;\n+          if (receiver == nullptr)  continue;\n@@ -567,1 +567,1 @@\n- * @param [out]type       profiled type of argument, NULL if none\n+ * @param [out]type       profiled type of argument, null if none\n@@ -573,1 +573,1 @@\n-  if (MethodData::profile_parameters() && method_data() != NULL && method_data()->is_mature()) {\n+  if (MethodData::profile_parameters() && method_data() != nullptr && method_data()->is_mature()) {\n@@ -575,1 +575,1 @@\n-    if (data != NULL) {\n+    if (data != nullptr) {\n@@ -605,1 +605,1 @@\n- * @param [out]type       profiled type of argument, NULL if none\n+ * @param [out]type       profiled type of argument, null if none\n@@ -611,1 +611,1 @@\n-  if (MethodData::profile_return() && method_data() != NULL && method_data()->is_mature()) {\n+  if (MethodData::profile_return() && method_data() != nullptr && method_data()->is_mature()) {\n@@ -613,1 +613,1 @@\n-    if (data != NULL) {\n+    if (data != nullptr) {\n@@ -640,1 +640,1 @@\n- * @param [out]type       profiled type of parameter, NULL if none\n+ * @param [out]type       profiled type of parameter, null if none\n@@ -646,1 +646,1 @@\n-  if (MethodData::profile_parameters() && method_data() != NULL && method_data()->is_mature()) {\n+  if (MethodData::profile_parameters() && method_data() != nullptr && method_data()->is_mature()) {\n@@ -648,1 +648,1 @@\n-    if (parameters != NULL && i < parameters->number_of_parameters()) {\n+    if (parameters != nullptr && i < parameters->number_of_parameters()) {\n@@ -662,1 +662,1 @@\n-\/\/ for the call.  Return NULL if the call is not monomorphic in\n+\/\/ for the call.  Return null if the call is not monomorphic in\n@@ -675,1 +675,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -679,1 +679,1 @@\n-  if (root_m == NULL) {\n+  if (root_m == nullptr) {\n@@ -681,1 +681,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -696,1 +696,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -707,1 +707,1 @@\n-  if (!UseCHA)  return NULL;\n+  if (!UseCHA)  return nullptr;\n@@ -722,1 +722,1 @@\n-        return NULL; \/\/ not supported\n+        return nullptr; \/\/ not supported\n@@ -726,1 +726,1 @@\n-    assert(target() == NULL || !target()->is_abstract(), \"not allowed\");\n+    assert(target() == nullptr || !target()->is_abstract(), \"not allowed\");\n@@ -731,1 +731,1 @@\n-  if (TraceDependencies && target() != NULL && target() != root_m->get_Method()) {\n+  if (TraceDependencies && target() != nullptr && target() != root_m->get_Method()) {\n@@ -740,2 +740,2 @@\n-  if (target() == NULL) {\n-    return NULL;\n+  if (target() == nullptr) {\n+    return nullptr;\n@@ -751,1 +751,1 @@\n-    \/\/ to return NULL, even if the CHA encountered irrelevant\n+    \/\/ to return null, even if the CHA encountered irrelevant\n@@ -755,1 +755,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -786,1 +786,1 @@\n-\/\/ Return NULL if the call has no target or the target is abstract.\n+\/\/ Return nullptr if the call has no target or the target is abstract.\n@@ -800,1 +800,1 @@\n-  Method* m = NULL;\n+  Method* m = nullptr;\n@@ -813,3 +813,3 @@\n-  if (m == NULL) {\n-    \/\/ Return NULL only if there was a problem with lookup (uninitialized class, etc.)\n-    return NULL;\n+  if (m == nullptr) {\n+    \/\/ Return null only if there was a problem with lookup (uninitialized class, etc.)\n+    return nullptr;\n@@ -825,1 +825,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -896,1 +896,1 @@\n-  if (count > 0 && method_data() != NULL) {\n+  if (count > 0 && method_data() != nullptr) {\n@@ -982,1 +982,1 @@\n-  if (h_m()->method_data() == NULL) {\n+  if (h_m()->method_data() == nullptr) {\n@@ -988,1 +988,1 @@\n-  if (h_m()->method_data() != NULL) {\n+  if (h_m()->method_data() != nullptr) {\n@@ -1000,1 +1000,1 @@\n-  if (_method_data == NULL || _method_data->is_empty()) {\n+  if (_method_data == nullptr || _method_data->is_empty()) {\n@@ -1014,1 +1014,1 @@\n-  if (_method_data != NULL) {\n+  if (_method_data != nullptr) {\n@@ -1022,1 +1022,1 @@\n-  if (h_m()->method_data() != NULL) {\n+  if (h_m()->method_data() != nullptr) {\n@@ -1035,1 +1035,1 @@\n-\/\/ NULL otherwise.\n+\/\/ nullptr otherwise.\n@@ -1039,1 +1039,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1126,1 +1126,1 @@\n-      if (code != NULL && (code->comp_level() == CompLevel_full_optimization)) {\n+      if (code != nullptr && (code->comp_level() == CompLevel_full_optimization)) {\n@@ -1142,1 +1142,1 @@\n-    if (code != NULL) {\n+    if (code != nullptr) {\n@@ -1274,2 +1274,2 @@\n-  if (_bcea == NULL) {\n-    _bcea = new (CURRENT_ENV->arena()) BCEscapeAnalyzer(this, NULL);\n+  if (_bcea == nullptr) {\n+    _bcea = new (CURRENT_ENV->arena()) BCEscapeAnalyzer(this, nullptr);\n@@ -1280,1 +1280,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1285,1 +1285,1 @@\n-  if (_method_blocks == NULL) {\n+  if (_method_blocks == nullptr) {\n@@ -1317,2 +1317,2 @@\n-               mcs == NULL ? 0 : mcs->invocation_counter()->raw_counter(),\n-               mcs == NULL ? 0 : mcs->backedge_counter()->raw_counter(),\n+               mcs == nullptr ? 0 : mcs->invocation_counter()->raw_counter(),\n+               mcs == nullptr ? 0 : mcs->backedge_counter()->raw_counter(),\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":70,"deletions":70,"binary":false,"changes":140,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,1 +178,1 @@\n-    assert(m != NULL, \"illegal use of unloaded method\");\n+    assert(m != nullptr, \"illegal use of unloaded method\");\n@@ -183,1 +183,1 @@\n-  address code()                                 { if (_code == NULL) load_code(); return _code; }\n+  address code()                                 { if (_code == nullptr) load_code(); return _code; }\n@@ -217,1 +217,1 @@\n-    return Bytecodes::java_code_at(NULL, bcp);\n+    return Bytecodes::java_code_at(nullptr, bcp);\n@@ -221,1 +221,1 @@\n-    return Bytecodes::code_at(NULL, bcp);\n+    return Bytecodes::code_at(nullptr, bcp);\n@@ -286,1 +286,1 @@\n-    assert(declared_signature != NULL, \"cannot be null\");\n+    assert(declared_signature != nullptr, \"cannot be null\");\n@@ -291,1 +291,1 @@\n-  \/\/ for the call.  Return NULL if the call is not monomorphic in\n+  \/\/ for the call.  Return null if the call is not monomorphic in\n@@ -299,1 +299,1 @@\n-  \/\/ Return NULL if the call has no target or is abstract.\n+  \/\/ Return null if the call has no target or is abstract.\n","filename":"src\/hotspot\/share\/ci\/ciMethod.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-  assert(b != NULL, \"must have block for bytecode\");\n+  assert(b != nullptr, \"must have block for bytecode\");\n@@ -58,1 +58,1 @@\n-  assert(former_block != NULL, \"must not be NULL\");\n+  assert(former_block != nullptr, \"must not be nullptr\");\n@@ -66,1 +66,1 @@\n-    } else if (current_block == NULL) {\n+    } else if (current_block == nullptr) {\n@@ -87,1 +87,1 @@\n-  if (cb == NULL ) {\n+  if (cb == nullptr ) {\n@@ -120,1 +120,1 @@\n-    assert(cur_block != NULL, \"must always have a current block\");\n+    assert(cur_block != nullptr, \"must always have a current block\");\n@@ -122,1 +122,1 @@\n-    if (new_block == NULL || new_block == cur_block) {\n+    if (new_block == nullptr || new_block == cur_block) {\n@@ -268,1 +268,1 @@\n-  _blocks =  new(_arena) GrowableArray<ciBlock *>(_arena, block_estimate, 0, NULL);\n+  _blocks =  new(_arena) GrowableArray<ciBlock *>(_arena, block_estimate, 0, nullptr);\n","filename":"src\/hotspot\/share\/ci\/ciMethodBlocks.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-  _data_size(0), _extra_data_size(0), _data(NULL),\n+  _data_size(0), _extra_data_size(0), _data(nullptr),\n@@ -54,1 +54,1 @@\n-  _parameters(NULL) {}\n+  _parameters(nullptr) {}\n@@ -73,1 +73,1 @@\n-    if (CURRENT_ENV->cached_metadata(m) == NULL) {\n+    if (CURRENT_ENV->cached_metadata(m) == nullptr) {\n@@ -172,1 +172,1 @@\n-  if (mdo == NULL) {\n+  if (mdo == nullptr) {\n@@ -239,1 +239,1 @@\n-  if (mdo->parameters_type_data() != NULL) {\n+  if (mdo->parameters_type_data() != nullptr) {\n@@ -276,1 +276,1 @@\n-    if (k != NULL) {\n+    if (k != nullptr) {\n@@ -285,1 +285,1 @@\n-      set_receiver(row, NULL);\n+      set_receiver(row, nullptr);\n@@ -294,1 +294,1 @@\n-    if (klass != NULL && !klass->is_loader_alive()) {\n+    if (klass != nullptr && !klass->is_loader_alive()) {\n@@ -296,1 +296,1 @@\n-      TypeStackSlotEntries::set_type(i, TypeStackSlotEntries::with_status((Klass*)NULL, k));\n+      TypeStackSlotEntries::set_type(i, TypeStackSlotEntries::with_status((Klass*)nullptr, k));\n@@ -306,1 +306,1 @@\n-  if (klass != NULL && !klass->is_loader_alive()) {\n+  if (klass != nullptr && !klass->is_loader_alive()) {\n@@ -308,1 +308,1 @@\n-    set_type(ReturnTypeEntry::with_status((Klass*)NULL, k));\n+    set_type(ReturnTypeEntry::with_status((Klass*)nullptr, k));\n@@ -323,1 +323,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -334,1 +334,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -374,1 +374,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -389,1 +389,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -391,1 +391,1 @@\n-      return NULL; \/\/ ArgInfoData is after the trap data right before the parameter data.\n+      return nullptr; \/\/ ArgInfoData is after the trap data right before the parameter data.\n@@ -393,1 +393,1 @@\n-      if (m == NULL && dp->bci() == bci) {\n+      if (m == nullptr && dp->bci() == bci) {\n@@ -401,1 +401,1 @@\n-      if (m != NULL && data->method() == m && dp->bci() == bci) {\n+      if (m != nullptr && data->method() == m && dp->bci() == bci) {\n@@ -410,1 +410,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -413,1 +413,1 @@\n-\/\/ Translate a bci to its corresponding data, or NULL.\n+\/\/ Translate a bci to its corresponding data, or nullptr.\n@@ -415,2 +415,2 @@\n-  \/\/ If m is not NULL we look for a SpeculativeTrapData entry\n-  if (m == NULL) {\n+  \/\/ If m is not nullptr we look for a SpeculativeTrapData entry\n+  if (m == nullptr) {\n@@ -429,1 +429,1 @@\n-  if (result != NULL) {\n+  if (result != nullptr) {\n@@ -432,1 +432,1 @@\n-  if (m != NULL && !two_free_slots) {\n+  if (m != nullptr && !two_free_slots) {\n@@ -436,1 +436,1 @@\n-    return bci_to_data(bci, NULL);\n+    return bci_to_data(bci, nullptr);\n@@ -438,1 +438,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -453,1 +453,1 @@\n-  } else if (data == NULL) {\n+  } else if (data == nullptr) {\n@@ -468,1 +468,1 @@\n-  if (data == NULL) {\n+  if (data == nullptr) {\n@@ -478,1 +478,1 @@\n-  if (mdo != NULL) {\n+  if (mdo != nullptr) {\n@@ -481,1 +481,1 @@\n-    int arg_count = (aid == NULL) ? 0 : aid->number_of_args();\n+    int arg_count = (aid == nullptr) ? 0 : aid->number_of_args();\n@@ -493,1 +493,1 @@\n-  if ( mdo != NULL) {\n+  if ( mdo != nullptr) {\n@@ -508,1 +508,1 @@\n-  if (mdo != NULL) {\n+  if (mdo != nullptr) {\n@@ -517,1 +517,1 @@\n-  if (mdo != NULL) {\n+  if (mdo != nullptr) {\n@@ -525,1 +525,1 @@\n-  if (mdo != NULL) {\n+  if (mdo != nullptr) {\n@@ -527,1 +527,1 @@\n-    if (data != NULL) {\n+    if (data != nullptr) {\n@@ -541,1 +541,1 @@\n-  if (mdo != NULL) {\n+  if (mdo != nullptr) {\n@@ -549,1 +549,1 @@\n-  if (mdo != NULL) {\n+  if (mdo != nullptr) {\n@@ -551,1 +551,1 @@\n-    if (data != NULL) {\n+    if (data != nullptr) {\n@@ -588,1 +588,1 @@\n-  if (aid == NULL)\n+  if (aid == nullptr)\n@@ -608,1 +608,1 @@\n-  if (aid == NULL)\n+  if (aid == nullptr)\n@@ -615,1 +615,1 @@\n-  return _parameters != NULL ? new ciParametersTypeData(_parameters) : NULL;\n+  return _parameters != nullptr ? new ciParametersTypeData(_parameters) : nullptr;\n@@ -639,1 +639,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -649,1 +649,1 @@\n-  if (k != NULL) {\n+  if (k != nullptr) {\n@@ -690,1 +690,1 @@\n-      if (m != NULL) {\n+      if (m != nullptr) {\n@@ -756,1 +756,1 @@\n-    if (parameters != NULL) {\n+    if (parameters != nullptr) {\n@@ -777,1 +777,1 @@\n-  if (parameters != NULL) {\n+  if (parameters != nullptr) {\n@@ -861,1 +861,1 @@\n-    if (receiver(row) != NULL)  entries++;\n+    if (receiver(row) != nullptr)  entries++;\n@@ -865,1 +865,1 @@\n-    if (receiver(row) != NULL) {\n+    if (receiver(row) != nullptr) {\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":49,"deletions":49,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-    if (v != NULL) {\n+    if (v != nullptr) {\n@@ -75,1 +75,1 @@\n-    return with_status(NULL, k);\n+    return with_status(nullptr, k);\n@@ -83,1 +83,1 @@\n-      assert(res != NULL, \"invalid\");\n+      assert(res != nullptr, \"invalid\");\n@@ -86,1 +86,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -189,1 +189,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -206,1 +206,1 @@\n-    assert(recv == NULL || recv->is_klass(), \"wrong type\");\n+    assert(recv == nullptr || recv->is_klass(), \"wrong type\");\n@@ -216,1 +216,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -241,1 +241,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -298,1 +298,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -342,1 +342,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -361,1 +361,1 @@\n-  void print_data_on(outputStream* st, const char* extra = NULL) const;\n+  void print_data_on(outputStream* st, const char* extra = nullptr) const;\n@@ -406,1 +406,1 @@\n-  \/\/ Area dedicated to parameters. NULL if no parameter profiling for this method.\n+  \/\/ Area dedicated to parameters. null if no parameter profiling for this method.\n@@ -409,1 +409,1 @@\n-    return _parameters == NULL ? 0 : parameters_type_data()->size_in_bytes();\n+    return _parameters == nullptr ? 0 : parameters_type_data()->size_in_bytes();\n@@ -412,1 +412,1 @@\n-  ciMethodData(MethodData* md = NULL);\n+  ciMethodData(MethodData* md = nullptr);\n@@ -446,1 +446,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -514,2 +514,2 @@\n-  bool is_valid(ciProfileData* current) { return current != NULL; }\n-  bool is_valid(DataLayout* current)    { return current != NULL; }\n+  bool is_valid(ciProfileData* current) { return current != nullptr; }\n+  bool is_valid(DataLayout* current)    { return current != nullptr; }\n@@ -521,3 +521,3 @@\n-  \/\/ Get the data at an arbitrary bci, or NULL if there is none. If m\n-  \/\/ is not NULL look for a SpeculativeTrapData if any first.\n-  ciProfileData* bci_to_data(int bci, ciMethod* m = NULL);\n+  \/\/ Get the data at an arbitrary bci, or null if there is none. If m\n+  \/\/ is not nullptr look for a SpeculativeTrapData if any first.\n+  ciProfileData* bci_to_data(int bci, ciMethod* m = nullptr);\n@@ -543,1 +543,1 @@\n-    assert((m != NULL) == Deoptimization::reason_is_speculate(reason), \"inconsistent method\/reason\");\n+    assert((m != nullptr) == Deoptimization::reason_is_speculate(reason), \"inconsistent method\/reason\");\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.hpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/ci\/ciNullObject.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-  if (o == NULL) {\n+  if (o == nullptr) {\n","filename":"src\/hotspot\/share\/ci\/ciObjArray.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    _element_klass = NULL;\n+    _element_klass = nullptr;\n@@ -73,1 +73,1 @@\n-      _element_klass = NULL;\n+      _element_klass = nullptr;\n@@ -82,2 +82,2 @@\n-  if (_element_klass == NULL) {\n-    assert(dimension() > 1, \"_element_klass should not be NULL\");\n+  if (_element_klass == nullptr) {\n+    assert(dimension() > 1, \"_element_klass should not be null\");\n@@ -182,1 +182,1 @@\n-    if (ik->exact_klass() != NULL) {\n+    if (ik->exact_klass() != nullptr) {\n@@ -188,1 +188,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciObjArrayKlass.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -61,1 +61,1 @@\n-  _klass = NULL;\n+  _klass = nullptr;\n@@ -75,1 +75,1 @@\n-  _klass = NULL;\n+  _klass = nullptr;\n@@ -86,2 +86,2 @@\n-  assert(klass != NULL, \"must supply klass\");\n-  _handle = NULL;\n+  assert(klass != nullptr, \"must supply klass\");\n+  _handle = nullptr;\n@@ -94,1 +94,1 @@\n-\/\/ NULL variant.  Used only by ciNullObject.\n+\/\/ null variant.  Used only by ciNullObject.\n@@ -97,2 +97,2 @@\n-  _handle = NULL;\n-  _klass = NULL;\n+  _handle = nullptr;\n+  _klass = nullptr;\n@@ -114,3 +114,3 @@\n-  if (_klass == NULL) {\n-    if (_handle == NULL) {\n-      \/\/ When both _klass and _handle are NULL, we are dealing\n+  if (_klass == nullptr) {\n+    if (_handle == nullptr) {\n+      \/\/ When both _klass and _handle are null, we are dealing\n@@ -121,1 +121,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -167,1 +167,1 @@\n-  assert(is_null_object() || handle() != NULL, \"cannot embed null pointer\");\n+  assert(is_null_object() || handle() != nullptr, \"cannot embed null pointer\");\n@@ -192,1 +192,1 @@\n-  return handle() == NULL;\n+  return handle() == nullptr;\n@@ -214,1 +214,1 @@\n-    st->print_cr(\"NULL\");\n+    st->print_cr(\"nullptr\");\n","filename":"src\/hotspot\/share\/ci\/ciObject.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-  \/\/ handle may, in a small set of cases, correctly be NULL.\n+  \/\/ handle may, in a small set of cases, correctly be null.\n@@ -123,1 +123,1 @@\n-    return handle() != NULL || is_classless();\n+    return handle() != nullptr || is_classless();\n","filename":"src\/hotspot\/share\/ci\/ciObject.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-GrowableArray<ciMetadata*>* ciObjectFactory::_shared_ci_metadata = NULL;\n+GrowableArray<ciMetadata*>* ciObjectFactory::_shared_ci_metadata = nullptr;\n@@ -84,6 +84,6 @@\n-                                   _ci_metadata(arena, expected_size, 0, NULL),\n-                                   _unloaded_methods(arena, 4, 0, NULL),\n-                                   _unloaded_klasses(arena, 8, 0, NULL),\n-                                   _unloaded_instances(arena, 4, 0, NULL),\n-                                   _return_addresses(arena, 8, 0, NULL),\n-                                   _symbols(arena, 100, 0, NULL),\n+                                   _ci_metadata(arena, expected_size, 0, nullptr),\n+                                   _unloaded_methods(arena, 4, 0, nullptr),\n+                                   _unloaded_klasses(arena, 8, 0, nullptr),\n+                                   _unloaded_instances(arena, 4, 0, nullptr),\n+                                   _return_addresses(arena, 8, 0, nullptr),\n+                                   _symbols(arena, 100, 0, nullptr),\n@@ -93,1 +93,1 @@\n-    _non_perm_bucket[i] = NULL;\n+    _non_perm_bucket[i] = nullptr;\n@@ -97,1 +97,1 @@\n-  if (_shared_ci_metadata != NULL) {\n+  if (_shared_ci_metadata != nullptr) {\n@@ -146,1 +146,1 @@\n-    if (type2name(t) != NULL && !is_reference_type(t) &&\n+    if (type2name(t) != nullptr && !is_reference_type(t) &&\n@@ -177,1 +177,1 @@\n-  ciEnv::_unloaded_ciinstance_klass = new (_arena) ciInstanceKlass(ciEnv::_unloaded_cisymbol, NULL, NULL);\n+  ciEnv::_unloaded_ciinstance_klass = new (_arena) ciInstanceKlass(ciEnv::_unloaded_cisymbol, nullptr, nullptr);\n@@ -239,1 +239,1 @@\n-  if (bucket != NULL) {\n+  if (bucket != nullptr) {\n@@ -275,1 +275,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -300,1 +300,1 @@\n-    Metadata* last = NULL;\n+    Metadata* last = nullptr;\n@@ -372,1 +372,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -408,1 +408,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -423,2 +423,2 @@\n-  assert(accessor != NULL, \"need origin of access\");\n-  ciSignature* that = NULL;\n+  assert(accessor != nullptr, \"need origin of access\");\n+  ciSignature* that = nullptr;\n@@ -436,1 +436,1 @@\n-        if (that == NULL)  that = new (arena()) ciSignature(accessor, constantPoolHandle(), signature);\n+        if (that == nullptr)  that = new (arena()) ciSignature(accessor, constantPoolHandle(), signature);\n@@ -467,3 +467,3 @@\n-  oop loader = NULL;\n-  oop domain = NULL;\n-  if (accessing_klass != NULL) {\n+  oop loader = nullptr;\n+  oop domain = nullptr;\n+  if (accessing_klass != nullptr) {\n@@ -484,1 +484,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -488,1 +488,1 @@\n-  ciKlass* new_klass = NULL;\n+  ciKlass* new_klass = nullptr;\n@@ -498,1 +498,1 @@\n-    ciKlass* element_klass = NULL;\n+    ciKlass* element_klass = nullptr;\n@@ -515,3 +515,3 @@\n-    jobject loader_handle = NULL;\n-    jobject domain_handle = NULL;\n-    if (accessing_klass != NULL) {\n+    jobject loader_handle = nullptr;\n+    jobject domain_handle = nullptr;\n+    if (accessing_klass != nullptr) {\n@@ -566,1 +566,1 @@\n-  assert(ciEnv::_Class_klass != NULL, \"\");\n+  assert(ciEnv::_Class_klass != nullptr, \"\");\n@@ -580,1 +580,1 @@\n-  assert(ciEnv::_MethodHandle_klass != NULL, \"\");\n+  assert(ciEnv::_MethodHandle_klass != nullptr, \"\");\n@@ -591,1 +591,1 @@\n-  assert(ciEnv::_MethodType_klass != NULL, \"\");\n+  assert(ciEnv::_MethodType_klass != nullptr, \"\");\n@@ -596,1 +596,1 @@\n-  assert(ciEnv::_Object_klass != NULL, \"\");\n+  assert(ciEnv::_Object_klass != nullptr, \"\");\n@@ -636,1 +636,1 @@\n-static ciObjectFactory::NonPermObject* emptyBucket = NULL;\n+static ciObjectFactory::NonPermObject* emptyBucket = nullptr;\n@@ -648,1 +648,1 @@\n-  for (NonPermObject* p; (p = (*bp)) != NULL; bp = &p->next()) {\n+  for (NonPermObject* p; (p = (*bp)) != nullptr; bp = &p->next()) {\n","filename":"src\/hotspot\/share\/ci\/ciObjectFactory.cpp","additions":35,"deletions":35,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,1 +149,1 @@\n-    if (_stream == NULL) {\n+    if (_stream == nullptr) {\n@@ -153,2 +153,2 @@\n-    _ci_inline_records = NULL;\n-    _error_message = NULL;\n+    _ci_inline_records = nullptr;\n+    _error_message = nullptr;\n@@ -160,2 +160,2 @@\n-    _imethod = NULL;\n-    _iklass  = NULL;\n+    _imethod = nullptr;\n+    _iklass  = nullptr;\n@@ -170,1 +170,1 @@\n-    if (_stream != NULL) fclose(_stream);\n+    if (_stream != nullptr) fclose(_stream);\n@@ -186,1 +186,1 @@\n-    return _error_message != NULL || _thread->has_pending_exception();\n+    return _error_message != nullptr || _thread->has_pending_exception();\n@@ -190,1 +190,1 @@\n-    return !(_stream == NULL || had_error());\n+    return !(_stream == nullptr || had_error());\n@@ -249,1 +249,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -255,1 +255,1 @@\n-    if (had_error()) return NULL;\n+    if (had_error()) return nullptr;\n@@ -262,1 +262,1 @@\n-    if (had_error()) return NULL;\n+    if (had_error()) return nullptr;\n@@ -276,1 +276,1 @@\n-    if (result != NULL) {\n+    if (result != nullptr) {\n@@ -285,1 +285,1 @@\n-    if (t == NULL) {\n+    if (t == nullptr) {\n@@ -302,1 +302,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -344,1 +344,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -359,1 +359,1 @@\n-    if (str != NULL) {\n+    if (str != nullptr) {\n@@ -363,1 +363,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -368,1 +368,1 @@\n-    if (terminator != NULL && strcmp(terminator, \";\") == 0) {\n+    if (terminator != nullptr && strcmp(terminator, \";\") == 0) {\n@@ -379,1 +379,1 @@\n-    oop obj = NULL;\n+    oop obj = nullptr;\n@@ -383,2 +383,2 @@\n-      if (m == NULL) {\n-        return NULL;\n+      if (m == nullptr) {\n+        return nullptr;\n@@ -396,1 +396,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -404,1 +404,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -409,1 +409,1 @@\n-      ConstantPoolCacheEntry* cp_cache_entry = NULL;\n+      ConstantPoolCacheEntry* cp_cache_entry = nullptr;\n@@ -426,1 +426,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -434,1 +434,1 @@\n-          return NULL;\n+          return nullptr;\n@@ -437,1 +437,1 @@\n-        if (adapter == NULL) {\n+        if (adapter == nullptr) {\n@@ -439,1 +439,1 @@\n-          return NULL;\n+          return nullptr;\n@@ -448,1 +448,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -454,1 +454,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -458,2 +458,2 @@\n-      if (k == NULL) {\n-        return NULL;\n+      if (k == nullptr) {\n+        return nullptr;\n@@ -468,1 +468,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -472,1 +472,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -477,1 +477,1 @@\n-    if (obj == NULL) {\n+    if (obj == nullptr) {\n@@ -479,1 +479,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -481,1 +481,1 @@\n-    Klass* k = NULL;\n+    Klass* k = nullptr;\n@@ -484,1 +484,1 @@\n-    char* field = NULL;\n+    char* field = nullptr;\n@@ -487,1 +487,1 @@\n-      if (field == NULL) {\n+      if (field == nullptr) {\n@@ -489,1 +489,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -497,2 +497,2 @@\n-        k = (vmtarget == NULL) ? NULL : vmtarget->method_holder();\n-        if (k == NULL) {\n+        k = (vmtarget == nullptr) ? nullptr : vmtarget->method_holder();\n+        if (k == nullptr) {\n@@ -500,1 +500,1 @@\n-          return NULL;\n+          return nullptr;\n@@ -504,1 +504,1 @@\n-          return NULL;\n+          return nullptr;\n@@ -510,1 +510,1 @@\n-      if (obj != NULL && obj->is_objArray()) {\n+      if (obj != nullptr && obj->is_objArray()) {\n@@ -515,1 +515,1 @@\n-          return NULL;\n+          return nullptr;\n@@ -519,2 +519,2 @@\n-    } while (obj != NULL);\n-    if (obj == NULL) {\n+    } while (obj != nullptr);\n+    if (obj == nullptr) {\n@@ -522,1 +522,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -538,1 +538,1 @@\n-      if (k != NULL && !k->is_hidden()) {\n+      if (k != nullptr && !k->is_hidden()) {\n@@ -540,1 +540,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -546,3 +546,3 @@\n-    if (klass_name != NULL) {\n-      Klass* k = NULL;\n-      if (_iklass != NULL) {\n+    if (klass_name != nullptr) {\n+      Klass* k = nullptr;\n+      if (_iklass != nullptr) {\n@@ -560,1 +560,1 @@\n-          _error_message = NULL;\n+          _error_message = nullptr;\n@@ -562,1 +562,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -566,1 +566,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -578,1 +578,1 @@\n-    if (k == NULL) {\n+    if (k == nullptr) {\n@@ -580,1 +580,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -585,1 +585,1 @@\n-    if (m == NULL) {\n+    if (m == nullptr) {\n@@ -629,1 +629,1 @@\n-          _error_message = NULL;\n+          _error_message = nullptr;\n@@ -641,1 +641,1 @@\n-    if (cmd == NULL) {\n+    if (cmd == nullptr) {\n@@ -682,1 +682,1 @@\n-    char* msg = NULL;\n+    char* msg = nullptr;\n@@ -693,1 +693,1 @@\n-    if (msg != NULL) {\n+    if (msg != nullptr) {\n@@ -712,2 +712,2 @@\n-      if (cmd == NULL || strcmp(\"compile\", cmd) != 0) {\n-        return NULL;\n+      if (cmd == nullptr || strcmp(\"compile\", cmd) != 0) {\n+        return nullptr;\n@@ -719,1 +719,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -721,1 +721,1 @@\n-      if (_ci_inline_records != NULL && _ci_inline_records->length() > 0) {\n+      if (_ci_inline_records != nullptr && _ci_inline_records->length() > 0) {\n@@ -727,1 +727,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -739,1 +739,1 @@\n-    if (_imethod != NULL) {\n+    if (_imethod != nullptr) {\n@@ -781,1 +781,1 @@\n-    if (_imethod != NULL) {\n+    if (_imethod != nullptr) {\n@@ -799,1 +799,1 @@\n-    if (nm != NULL) {\n+    if (nm != nullptr) {\n@@ -805,1 +805,1 @@\n-    replay_state = NULL;\n+    replay_state = nullptr;\n@@ -829,1 +829,1 @@\n-    assert(method->method_data() == NULL, \"Should only be initialized once\");\n+    assert(method->method_data() == nullptr, \"Should only be initialized once\");\n@@ -844,1 +844,1 @@\n-    if (rec->_orig_data == NULL) {\n+    if (rec->_orig_data == nullptr) {\n@@ -848,1 +848,1 @@\n-    if (rec->_data == NULL) {\n+    if (rec->_data == nullptr) {\n@@ -892,2 +892,2 @@\n-      if (!_protection_domain_initialized && k != NULL) {\n-        assert(_protection_domain() == NULL, \"must be uninitialized\");\n+      if (!_protection_domain_initialized && k != nullptr) {\n+        assert(_protection_domain() == nullptr, \"must be uninitialized\");\n@@ -903,1 +903,1 @@\n-    if (k == NULL) {\n+    if (k == nullptr) {\n@@ -907,1 +907,1 @@\n-    bool is_comment = comment != NULL && strcmp(comment, \"#\") == 0;\n+    bool is_comment = comment != nullptr && strcmp(comment, \"#\") == 0;\n@@ -929,1 +929,1 @@\n-    if (k == NULL) {\n+    if (k == nullptr) {\n@@ -1028,2 +1028,2 @@\n-    if (k == NULL || ReplaySuppressInitializers == 0 ||\n-        (ReplaySuppressInitializers == 2 && k->class_loader() == NULL)) {\n+    if (k == nullptr || ReplaySuppressInitializers == 0 ||\n+        (ReplaySuppressInitializers == 2 && k->class_loader() == nullptr)) {\n@@ -1051,1 +1051,1 @@\n-      oop value = NULL;\n+      oop value = nullptr;\n@@ -1056,1 +1056,1 @@\n-        if (kelem == NULL) {\n+        if (kelem == nullptr) {\n@@ -1178,1 +1178,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1200,1 +1200,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1226,1 +1226,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1244,1 +1244,1 @@\n-    if (_ci_inline_records != NULL) {\n+    if (_ci_inline_records != nullptr) {\n@@ -1247,1 +1247,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1252,1 +1252,1 @@\n-    if (records != NULL) {\n+    if (records != nullptr) {\n@@ -1267,1 +1267,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1275,1 +1275,1 @@\n-    _error_message = NULL;\n+    _error_message = nullptr;\n@@ -1338,1 +1338,1 @@\n-  return replay_state == NULL;\n+  return replay_state == nullptr;\n@@ -1344,1 +1344,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1352,1 +1352,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1360,1 +1360,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1365,1 +1365,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -1421,1 +1421,1 @@\n-  if (rec == NULL) {\n+  if (rec == nullptr) {\n@@ -1441,1 +1441,1 @@\n-        if (k != NULL) {\n+        if (k != nullptr) {\n@@ -1471,1 +1471,1 @@\n-  return replay_state->find_ciMethodRecord(method->get_Method()) == NULL;\n+  return replay_state->find_ciMethodRecord(method->get_Method()) == nullptr;\n@@ -1475,1 +1475,1 @@\n-  if (data != NULL) {\n+  if (data != nullptr) {\n@@ -1480,1 +1480,1 @@\n-    if (record == NULL) {\n+    if (record == nullptr) {\n@@ -1485,1 +1485,1 @@\n-  } else if (replay_state != NULL) {\n+  } else if (replay_state != nullptr) {\n@@ -1489,1 +1489,1 @@\n-    if (record == NULL) {\n+    if (record == nullptr) {\n@@ -1499,1 +1499,1 @@\n-  if (data != NULL) {\n+  if (data != nullptr) {\n@@ -1503,2 +1503,2 @@\n-    return CompileReplay::find_ciInlineRecord(records, method->get_Method(), bci, inline_depth) == NULL;\n-  } else if (replay_state != NULL) {\n+    return CompileReplay::find_ciInlineRecord(records, method->get_Method(), bci, inline_depth) == nullptr;\n+  } else if (replay_state != nullptr) {\n@@ -1507,1 +1507,1 @@\n-    return replay_state->find_ciInlineRecord(method->get_Method(), bci, inline_depth) == NULL;\n+    return replay_state->find_ciInlineRecord(method->get_Method(), bci, inline_depth) == nullptr;\n@@ -1522,1 +1522,1 @@\n-  if (rec == NULL) {\n+  if (rec == nullptr) {\n@@ -1536,1 +1536,1 @@\n-    guarantee(mcs != NULL, \"method counters allocation failed\");\n+    guarantee(mcs != nullptr, \"method counters allocation failed\");\n@@ -1547,1 +1547,1 @@\n-  assert(rec != NULL, \"ciInstanceKlass must be whitelisted\");\n+  assert(rec != nullptr, \"ciInstanceKlass must be whitelisted\");\n@@ -1560,1 +1560,1 @@\n-  return rec != NULL;\n+  return rec != nullptr;\n@@ -1570,1 +1570,1 @@\n-  return rec == NULL;\n+  return rec == nullptr;\n@@ -1598,2 +1598,2 @@\n-  } while (ik != NULL);\n-  return NULL;\n+  } while (ik != nullptr);\n+  return nullptr;\n@@ -1604,2 +1604,2 @@\n-  if (fname == NULL) {\n-    return NULL;\n+  if (fname == nullptr) {\n+    return nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":119,"deletions":119,"binary":false,"changes":238,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-  : _symbol(symbol), _accessing_klass(accessing_klass), _types(CURRENT_ENV->arena(), 8, 0, NULL) {\n+  : _symbol(symbol), _accessing_klass(accessing_klass), _types(CURRENT_ENV->arena(), 8, 0, nullptr) {\n@@ -45,1 +45,1 @@\n-  assert(accessing_klass != NULL, \"need origin of access\");\n+  assert(accessing_klass != nullptr, \"need origin of access\");\n@@ -53,1 +53,1 @@\n-    ciType* type = NULL;\n+    ciType* type = nullptr;\n","filename":"src\/hotspot\/share\/ci\/ciSignature.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-    reset_to_method(NULL);\n+    reset_to_method(nullptr);\n@@ -94,3 +94,3 @@\n-    if (m == NULL) {\n-      _holder = NULL;\n-      reset(NULL, 0);\n+    if (m == nullptr) {\n+      _holder = nullptr;\n+      reset(nullptr, 0);\n@@ -307,1 +307,1 @@\n-  ciSignatureStream(ciSignature* signature, ciKlass* holder = NULL) {\n+  ciSignatureStream(ciSignature* signature, ciKlass* holder = nullptr) {\n@@ -334,1 +334,1 @@\n-    if (_holder != NULL) {\n+    if (_holder != nullptr) {\n@@ -336,1 +336,1 @@\n-      _holder = NULL;\n+      _holder = nullptr;\n@@ -376,1 +376,1 @@\n-    _exception_klass = NULL;\n+    _exception_klass = nullptr;\n@@ -382,1 +382,1 @@\n-                           ciInstanceKlass* exception_klass = NULL,\n+                           ciInstanceKlass* exception_klass = nullptr,\n@@ -391,1 +391,1 @@\n-    _exception_klass = (exception_klass != NULL && exception_klass->is_loaded()\n+    _exception_klass = (exception_klass != nullptr && exception_klass->is_loaded()\n@@ -393,1 +393,1 @@\n-                          : NULL);\n+                          : nullptr);\n@@ -427,1 +427,1 @@\n-          } else if (_exception_klass == NULL || !handler->catch_klass()->is_loaded()) {\n+          } else if (_exception_klass == nullptr || !handler->catch_klass()->is_loaded()) {\n@@ -460,1 +460,1 @@\n-Bytecode::Bytecode(const ciBytecodeStream* stream, address bcp): _bcp(bcp != NULL ? bcp : stream->cur_bcp()), _code(Bytecodes::code_at(NULL, addr_at(0))) {}\n+Bytecode::Bytecode(const ciBytecodeStream* stream, address bcp): _bcp(bcp != nullptr ? bcp : stream->cur_bcp()), _code(Bytecodes::code_at(nullptr, addr_at(0))) {}\n","filename":"src\/hotspot\/share\/ci\/ciStreams.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-  assert(_symbol != NULL, \"adding null symbol\");\n+  assert(_symbol != nullptr, \"adding null symbol\");\n","filename":"src\/hotspot\/share\/ci\/ciSymbol.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -114,1 +114,1 @@\n-  assert(_basic_types[t] != NULL, \"domain check\");\n+  assert(_basic_types[t] != nullptr, \"domain check\");\n","filename":"src\/hotspot\/share\/ci\/ciType.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,2 @@\n-ciTypeFlow::JsrSet::JsrSet(Arena* arena, int default_len) : _set(arena, default_len, 0, NULL) {\n-  assert(arena != NULL, \"invariant\");\n+ciTypeFlow::JsrSet::JsrSet(Arena* arena, int default_len) : _set(arena, default_len, 0, nullptr) {\n+  assert(arena != nullptr, \"invariant\");\n@@ -65,1 +65,1 @@\n-ciTypeFlow::JsrSet::JsrSet(int default_len) : _set(default_len, 0, NULL) {}\n+ciTypeFlow::JsrSet::JsrSet(int default_len) : _set(default_len, 0, nullptr) {}\n@@ -170,1 +170,1 @@\n-  JsrRecord* temp = NULL;\n+  JsrRecord* temp = nullptr;\n@@ -371,1 +371,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -375,1 +375,1 @@\n-    if (non_osr_block == NULL) {\n+    if (non_osr_block == nullptr) {\n@@ -377,1 +377,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -554,1 +554,1 @@\n-  if (array_klass == NULL) {\n+  if (array_klass == nullptr) {\n@@ -591,1 +591,1 @@\n-    \/\/ VM's interpreter will not load 'klass' if object is NULL.\n+    \/\/ VM's interpreter will not load 'klass' if object is null.\n@@ -651,1 +651,1 @@\n-  ciSignature* declared_signature = NULL;\n+  ciSignature* declared_signature = nullptr;\n@@ -653,1 +653,1 @@\n-  assert(declared_signature != NULL, \"cannot be null\");\n+  assert(declared_signature != nullptr, \"cannot be null\");\n@@ -657,1 +657,1 @@\n-      trap(str, NULL,\n+      trap(str, nullptr,\n@@ -724,1 +724,1 @@\n-    trap(str, NULL, Deoptimization::make_trap_request(Deoptimization::Reason_unhandled,\n+    trap(str, nullptr, Deoptimization::make_trap_request(Deoptimization::Reason_unhandled,\n@@ -837,1 +837,1 @@\n-  if (log != NULL) {\n+  if (log != nullptr) {\n@@ -839,1 +839,1 @@\n-    int kid = (klass == NULL)? -1: log->identify(klass);\n+    int kid = (klass == nullptr)? -1: log->identify(klass);\n@@ -1570,1 +1570,1 @@\n-  _succ = NULL;\n+  _succ = nullptr;\n@@ -1594,1 +1594,1 @@\n-                         ciTypeFlow::JsrSet* jsrs) : _predecessors(outer->arena(), 1, 0, NULL) {\n+                         ciTypeFlow::JsrSet* jsrs) : _predecessors(outer->arena(), 1, 0, nullptr) {\n@@ -1596,3 +1596,3 @@\n-  _exceptions = NULL;\n-  _exc_klasses = NULL;\n-  _successors = NULL;\n+  _exceptions = nullptr;\n+  _exc_klasses = nullptr;\n+  _successors = nullptr;\n@@ -1604,1 +1604,1 @@\n-  _next = NULL;\n+  _next = nullptr;\n@@ -1626,1 +1626,1 @@\n-  _loop = NULL;\n+  _loop = nullptr;\n@@ -1628,1 +1628,1 @@\n-  _rpo_next = NULL;\n+  _rpo_next = nullptr;\n@@ -1639,1 +1639,1 @@\n-  if (_successors == NULL) {\n+  if (_successors == nullptr) {\n@@ -1648,1 +1648,1 @@\n-    Block* block = NULL;\n+    Block* block = nullptr;\n@@ -1653,1 +1653,1 @@\n-        new (arena) GrowableArray<Block*>(arena, 1, 0, NULL);\n+        new (arena) GrowableArray<Block*>(arena, 1, 0, nullptr);\n@@ -1659,1 +1659,1 @@\n-        new (arena) GrowableArray<Block*>(arena, 1, 0, NULL);\n+        new (arena) GrowableArray<Block*>(arena, 1, 0, nullptr);\n@@ -1668,1 +1668,1 @@\n-      Block* target = NULL;\n+      Block* target = nullptr;\n@@ -1684,1 +1684,1 @@\n-          new (arena) GrowableArray<Block*>(arena, 2, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, 2, 0, nullptr);\n@@ -1694,1 +1694,1 @@\n-          new (arena) GrowableArray<Block*>(arena, 1, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, 1, 0, nullptr);\n@@ -1702,1 +1702,1 @@\n-          new (arena) GrowableArray<Block*>(arena, 1, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, 1, 0, nullptr);\n@@ -1710,1 +1710,1 @@\n-          new (arena) GrowableArray<Block*>(arena, 1, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, 1, 0, nullptr);\n@@ -1720,1 +1720,1 @@\n-          new (arena) GrowableArray<Block*>(arena, len+1, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, len+1, 0, nullptr);\n@@ -1739,1 +1739,1 @@\n-          new (arena) GrowableArray<Block*>(arena, npairs+1, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, npairs+1, 0, nullptr);\n@@ -1759,1 +1759,1 @@\n-          new (arena) GrowableArray<Block*>(arena, 1, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, 1, 0, nullptr);\n@@ -1765,1 +1765,1 @@\n-          new (arena) GrowableArray<Block*>(arena, 1, 0, NULL);\n+          new (arena) GrowableArray<Block*>(arena, 1, 0, nullptr);\n@@ -1797,1 +1797,1 @@\n-  assert(_exceptions == NULL && _exc_klasses == NULL, \"repeat\");\n+  assert(_exceptions == nullptr && _exc_klasses == nullptr, \"repeat\");\n@@ -1813,1 +1813,1 @@\n-  _exceptions = new (arena) GrowableArray<Block*>(arena, exc_count, 0, NULL);\n+  _exceptions = new (arena) GrowableArray<Block*>(arena, exc_count, 0, nullptr);\n@@ -1815,1 +1815,1 @@\n-                                                             0, NULL);\n+                                                             0, nullptr);\n@@ -1820,1 +1820,1 @@\n-    ciInstanceKlass* klass = NULL;\n+    ciInstanceKlass* klass = nullptr;\n@@ -1878,1 +1878,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -1905,1 +1905,1 @@\n-  if (loop() && loop()->parent() != NULL) {\n+  if (loop() && loop()->parent() != nullptr) {\n@@ -1912,1 +1912,1 @@\n-    } while (lp->parent() != NULL);\n+    } while (lp->parent() != nullptr);\n@@ -1916,1 +1916,1 @@\n-  if (_successors == NULL) {\n+  if (_successors == nullptr) {\n@@ -1940,1 +1940,1 @@\n-  if (_exceptions == NULL) {\n+  if (_exceptions == nullptr) {\n@@ -1990,1 +1990,1 @@\n-  _failure_reason = NULL;\n+  _failure_reason = nullptr;\n@@ -1992,1 +1992,1 @@\n-  _work_list = NULL;\n+  _work_list = nullptr;\n@@ -1997,1 +1997,1 @@\n-    _idx_to_blocklist[i] = NULL;\n+    _idx_to_blocklist[i] = nullptr;\n@@ -1999,2 +1999,2 @@\n-  _block_map = NULL;  \/\/ until all blocks are seen\n-  _jsr_records = NULL;\n+  _block_map = nullptr;  \/\/ until all blocks are seen\n+  _jsr_records = nullptr;\n@@ -2011,1 +2011,1 @@\n-  next_block->set_next(NULL);\n+  next_block->set_next(nullptr);\n@@ -2034,1 +2034,1 @@\n-  Block* prev = NULL;\n+  Block* prev = nullptr;\n@@ -2037,1 +2037,1 @@\n-  while (current != NULL) {\n+  while (current != nullptr) {\n@@ -2043,1 +2043,1 @@\n-  if (prev == NULL) {\n+  if (prev == nullptr) {\n@@ -2073,1 +2073,1 @@\n-  assert(block == NULL? (option == no_create): block->is_backedge_copy() == (option == create_backedge_copy), \"create option consistent with result\");\n+  assert(block == nullptr? (option == no_create): block->is_backedge_copy() == (option == create_backedge_copy), \"create option consistent with result\");\n@@ -2076,1 +2076,1 @@\n-    if (block != NULL) {\n+    if (block != nullptr) {\n@@ -2095,1 +2095,1 @@\n-  if (_jsr_records == NULL) {\n+  if (_jsr_records == nullptr) {\n@@ -2099,1 +2099,1 @@\n-                                                           NULL);\n+                                                           nullptr);\n@@ -2101,1 +2101,1 @@\n-  JsrRecord* record = NULL;\n+  JsrRecord* record = nullptr;\n@@ -2232,2 +2232,2 @@\n-    for (ch = lp->child(); ch != NULL && ch->head() != head; ch = ch->sibling());\n-    if (ch != NULL)\n+    for (ch = lp->child(); ch != nullptr && ch->head() != head; ch = ch->sibling());\n+    if (ch != nullptr)\n@@ -2293,2 +2293,2 @@\n-  for (Loop* lp1 = lp->parent(); lp1 != NULL; lp1 = lp1->parent()) {\n-    for (Loop* lp2 = lp1; lp2 != NULL; lp2 = lp2->sibling()) {\n+  for (Loop* lp1 = lp->parent(); lp1 != nullptr; lp1 = lp1->parent()) {\n+    for (Loop* lp2 = lp1; lp2 != nullptr; lp2 = lp2->sibling()) {\n@@ -2305,2 +2305,2 @@\n-  for (Loop* lp1 = lp; lp1 != NULL && !done; lp1 = lp1->parent()) {\n-    for (Loop* lp2 = lp1; lp2 != NULL && !done; lp2 = lp2->sibling()) {\n+  for (Loop* lp1 = lp; lp1 != nullptr && !done; lp1 = lp1->parent()) {\n+    for (Loop* lp2 = lp1; lp2 != nullptr && !done; lp2 = lp2->sibling()) {\n@@ -2425,1 +2425,1 @@\n-  GrowableArray<Block*>* successors = NULL;\n+  GrowableArray<Block*>* successors = nullptr;\n@@ -2444,1 +2444,1 @@\n-    successors = block->successors(&str, NULL, NULL);\n+    successors = block->successors(&str, nullptr, nullptr);\n@@ -2464,1 +2464,1 @@\n-  if (_current->child() != NULL) {\n+  if (_current->child() != nullptr) {\n@@ -2466,1 +2466,1 @@\n-  } else if (_current->sibling() != NULL) {\n+  } else if (_current->sibling() != nullptr) {\n@@ -2469,1 +2469,1 @@\n-    while (_current != _root && _current->sibling() == NULL) {\n+    while (_current != _root && _current->sibling() == nullptr) {\n@@ -2473,1 +2473,1 @@\n-      _current = NULL;\n+      _current = nullptr;\n@@ -2476,1 +2476,1 @@\n-      assert(_current->sibling() != NULL, \"must be more to do\");\n+      assert(_current->sibling() != nullptr, \"must be more to do\");\n@@ -2500,1 +2500,1 @@\n-  if (data == NULL || !data->is_JumpData()) {\n+  if (data == nullptr || !data->is_JumpData()) {\n@@ -2599,1 +2599,1 @@\n-  Loop* prev = NULL;\n+  Loop* prev = nullptr;\n@@ -2601,1 +2601,1 @@\n-  while (lp != NULL) {\n+  while (lp != nullptr) {\n@@ -2604,1 +2604,1 @@\n-    while (current != NULL) {\n+    while (current != nullptr) {\n@@ -2617,1 +2617,1 @@\n-    if (prev != NULL) {\n+    if (prev != nullptr) {\n@@ -2634,1 +2634,1 @@\n-  Loop* innermost = NULL; \/\/ merge of loop tree branches over all successors\n+  Loop* innermost = nullptr; \/\/ merge of loop tree branches over all successors\n@@ -2637,1 +2637,1 @@\n-    Loop*  lp   = NULL;\n+    Loop*  lp   = nullptr;\n@@ -2645,1 +2645,1 @@\n-      if (succ->loop() == NULL)\n+      if (succ->loop() == nullptr)\n@@ -2653,1 +2653,1 @@\n-      while (lp != NULL && lp->head() == succ) {\n+      while (lp != nullptr && lp->head() == succ) {\n@@ -2656,1 +2656,1 @@\n-      if (lp == NULL) {\n+      if (lp == nullptr) {\n@@ -2673,1 +2673,1 @@\n-      if (plp == NULL) {\n+      if (plp == nullptr) {\n@@ -2682,1 +2682,1 @@\n-    innermost = innermost == NULL ? lp : innermost->sorted_merge(lp);\n+    innermost = innermost == nullptr ? lp : innermost->sorted_merge(lp);\n@@ -2686,1 +2686,1 @@\n-  if (innermost == NULL) {\n+  if (innermost == nullptr) {\n@@ -2695,1 +2695,1 @@\n-      for (dl = innermost; dl != NULL && dl != blk->loop(); dl = dl->parent());\n+      for (dl = innermost; dl != nullptr && dl != blk->loop(); dl = dl->parent());\n@@ -2721,1 +2721,1 @@\n-  assert(lp != NULL, \"\");\n+  assert(lp != nullptr, \"\");\n@@ -2740,1 +2740,1 @@\n-  for (Loop* lp = this->parent(); lp != NULL; lp = lp->parent())\n+  for (Loop* lp = this->parent(); lp != nullptr; lp = lp->parent())\n@@ -2757,1 +2757,1 @@\n-  for (Loop* ch = child(); ch != NULL; ch = ch->sibling())\n+  for (Loop* ch = child(); ch != nullptr; ch = ch->sibling())\n@@ -2786,1 +2786,1 @@\n-  _rpo_list = NULL;\n+  _rpo_list = nullptr;\n@@ -2864,1 +2864,1 @@\n-  if (loop_tree_root()->child() != NULL &&\n+  if (loop_tree_root()->child() != nullptr &&\n@@ -2872,2 +2872,2 @@\n-      loop_tree_root()->set_child(NULL);\n-      for (Block* blk = _rpo_list; blk != NULL;) {\n+      loop_tree_root()->set_child(nullptr);\n+      for (Block* blk = _rpo_list; blk != nullptr;) {\n@@ -2907,1 +2907,1 @@\n-  assert(_block_map == NULL, \"single initialization\");\n+  assert(_block_map == nullptr, \"single initialization\");\n@@ -2919,1 +2919,1 @@\n-  assert(blk == NULL, \"should be done\");\n+  assert(blk == nullptr, \"should be done\");\n@@ -2922,1 +2922,1 @@\n-    assert(_block_map[j] != NULL, \"must not drop any blocks\");\n+    assert(_block_map[j] != nullptr, \"must not drop any blocks\");\n@@ -2952,1 +2952,1 @@\n-  if (blocks == NULL) {\n+  if (blocks == nullptr) {\n@@ -2954,1 +2954,1 @@\n-    if (option == no_create)  return NULL;\n+    if (option == no_create)  return nullptr;\n@@ -2957,1 +2957,1 @@\n-    blocks = new (a) GrowableArray<Block*>(a, 4, 0, NULL);\n+    blocks = new (a) GrowableArray<Block*>(a, 4, 0, nullptr);\n@@ -2972,1 +2972,1 @@\n-  if (option == no_create)  return NULL;\n+  if (option == no_create)  return nullptr;\n@@ -2987,1 +2987,1 @@\n-  if (blocks == NULL) {\n+  if (blocks == nullptr) {\n@@ -3064,1 +3064,1 @@\n-    for (Block* blk = _rpo_list; blk != NULL; blk = blk->rpo_next()) {\n+    for (Block* blk = _rpo_list; blk != nullptr; blk = blk->rpo_next()) {\n@@ -3105,1 +3105,1 @@\n-  if (env()->log() != NULL) {\n+  if (env()->log() != nullptr) {\n@@ -3108,1 +3108,1 @@\n-  if (_failure_reason == NULL) {\n+  if (_failure_reason == nullptr) {\n@@ -3127,1 +3127,1 @@\n-  ciBlock* current = NULL;\n+  ciBlock* current = nullptr;\n@@ -3130,1 +3130,1 @@\n-    if (blk != NULL && blk != current) {\n+    if (blk != nullptr && blk != current) {\n@@ -3135,1 +3135,1 @@\n-      int num_blocks = (blocks == NULL) ? 0 : blocks->length();\n+      int num_blocks = (blocks == nullptr) ? 0 : blocks->length();\n@@ -3159,1 +3159,1 @@\n-  for (Block* blk = _rpo_list; blk != NULL; blk = blk->rpo_next()) {\n+  for (Block* blk = _rpo_list; blk != nullptr; blk = blk->rpo_next()) {\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.cpp","additions":109,"deletions":109,"binary":false,"changes":218,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -189,1 +189,1 @@\n-      default:        ShouldNotReachHere(); return NULL;\n+      default:        ShouldNotReachHere(); return nullptr;\n@@ -336,1 +336,1 @@\n-    \/\/ null is popped from the stack, we return NULL.  Caller beware.\n+    \/\/ null is popped from the stack, we return null.  Caller beware.\n@@ -339,1 +339,1 @@\n-      if (array == null_type())  return NULL;\n+      if (array == null_type())  return nullptr;\n@@ -345,1 +345,1 @@\n-      if (array == null_type())  return NULL;\n+      if (array == null_type())  return nullptr;\n@@ -504,2 +504,2 @@\n-    SuccIter()                        : _pred(NULL), _index(-1), _succ(NULL) {}\n-    SuccIter(Block* pred)             : _pred(pred), _index(-1), _succ(NULL) { next(); }\n+    SuccIter()                        : _pred(nullptr), _index(-1), _succ(nullptr) {}\n+    SuccIter(Block* pred)             : _pred(pred), _index(-1), _succ(nullptr) { next(); }\n@@ -593,1 +593,1 @@\n-      while (lp->parent() != NULL) {\n+      while (lp->parent() != nullptr) {\n@@ -607,1 +607,1 @@\n-      assert(_successors != NULL, \"must be filled in\");\n+      assert(_successors != nullptr, \"must be filled in\");\n@@ -618,1 +618,1 @@\n-      if (_exceptions == NULL) {\n+      if (_exceptions == nullptr) {\n@@ -627,1 +627,1 @@\n-      if (_exc_klasses == NULL) {\n+      if (_exc_klasses == nullptr) {\n@@ -700,1 +700,1 @@\n-      for (Loop* lp = loop(); lp != NULL && lp->head() == this; lp = lp->parent())\n+      for (Loop* lp = loop(); lp != nullptr && lp->head() == this; lp = lp->parent())\n@@ -726,1 +726,1 @@\n-      _parent(NULL), _sibling(NULL), _child(NULL),\n+      _parent(nullptr), _sibling(nullptr), _child(nullptr),\n@@ -776,1 +776,1 @@\n-    bool done() { return _current == NULL; }  \/\/ Finished iterating?\n+    bool done() { return _current == nullptr; }  \/\/ Finished iterating?\n@@ -821,1 +821,1 @@\n-  \/\/ with jsrs, or NULL if there is none.\n+  \/\/ with jsrs, or null if there is none.\n@@ -825,1 +825,1 @@\n-  bool failing() { return env()->failing() || _failure_reason != NULL; }\n+  bool failing() { return env()->failing() || _failure_reason != nullptr; }\n@@ -834,1 +834,1 @@\n-  int have_block_count() const      { return _block_map != NULL; }\n+  int have_block_count() const      { return _block_map != nullptr; }\n@@ -856,1 +856,1 @@\n-  bool work_list_empty() { return _work_list == NULL; }\n+  bool work_list_empty() { return _work_list == nullptr; }\n","filename":"src\/hotspot\/share\/ci\/ciTypeFlow.hpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-  if (str == NULL) return \"illegal\";\n+  if (str == nullptr) return \"illegal\";\n","filename":"src\/hotspot\/share\/ci\/ciUtilities.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}