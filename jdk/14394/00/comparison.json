{"files":[{"patch":"@@ -60,0 +60,3 @@\n+import java.security.NoSuchAlgorithmException;\n+import java.security.Provider;\n+import java.security.Security;\n@@ -62,6 +65,1 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Locale;\n+import java.util.*;\n@@ -69,5 +67,0 @@\n-import java.util.Optional;\n-import java.util.Properties;\n-import java.util.ResourceBundle;\n-import java.util.Set;\n-import java.util.TreeSet;\n@@ -79,0 +72,2 @@\n+import javax.net.ssl.SSLContext;\n+import javax.net.ssl.SSLSocket;\n@@ -80,0 +75,1 @@\n+import jdk.internal.access.SharedSecrets;\n@@ -113,0 +109,2 @@\n+    private static final String TWOINDENT = INDENT + INDENT;\n+    private static final String THREEINDENT = TWOINDENT + INDENT;\n@@ -172,0 +170,7 @@\n+            case \"security\":\n+                if (opts.length > 2) {\n+                    printSecuritySettings(opts[2].trim());\n+                } else {\n+                    printSecuritySettings(\"all\");\n+                }\n+                break;\n@@ -181,0 +186,1 @@\n+                printSecuritySettings(\"all\");\n@@ -267,1 +273,1 @@\n-                ostream.println(INDENT + INDENT + s);\n+                ostream.println(TWOINDENT + s);\n@@ -315,1 +321,92 @@\n-                ostream.print(INDENT + INDENT);\n+                ostream.print(TWOINDENT);\n+            }\n+        }\n+        ostream.print(\"\\n\");\n+    }\n+\n+    private static void printSecuritySettings(String arg) {\n+        if (arg.toLowerCase(Locale.ROOT).equals(\"properties\")) {\n+            printSecurityProperties();\n+        } else if(arg.toLowerCase(Locale.ROOT).equals(\"providers\")) {\n+            printSecurityProviderConfig();\n+        } else if(arg.toLowerCase(Locale.ROOT).equals(\"tls\")) {\n+            printSecurityTLSConfig();\n+        } else {\n+            printSecurityProperties();\n+            printSecurityProviderConfig();\n+            printSecurityTLSConfig();\n+        }\n+    }\n+\n+    private static void printSecurityProperties() {\n+        ostream.println(INDENT + \"Security properties:\");\n+        Properties p = SharedSecrets.getJavaSecurityPropertiesAccess().getInitialProperties();\n+        for (String key : p.stringPropertyNames().stream().sorted().toList()) {\n+            String val = p.getProperty(key);\n+            if (val.contains(\",\") && val.length() > 60) {\n+                \/\/ split lines longer than 60 chars which have multiple values\n+                ostream.println(TWOINDENT + key + \"=\");\n+                List.of(val.split(\",\")).forEach(s -> ostream.println(THREEINDENT + s.trim()));\n+            } else {\n+                ostream.println(TWOINDENT + key + \"=\" + val);\n+            }\n+        }\n+        ostream.print(\"\\n\");\n+    }\n+\n+    private static void printSecurityTLSConfig() {\n+        SSLSocket ssls;\n+        try {\n+            ssls = (SSLSocket)\n+                    SSLContext.getDefault().getSocketFactory().createSocket();\n+        } catch (IOException | NoSuchAlgorithmException e) {\n+            throw new RuntimeException(e);\n+        }\n+\n+        ostream.println(INDENT + \"Security TLS configuration:\");\n+        ostream.println(TWOINDENT + \"Enabled Protocols:\");\n+        for (String s : ssls.getEnabledProtocols()) {\n+            System.out.println(THREEINDENT + s);\n+        }\n+\n+        System.out.println(\"\\n\" + TWOINDENT + \"Enabled Cipher Suites:\");\n+        for (String s : ssls.getEnabledCipherSuites()) {\n+            System.out.println(THREEINDENT + s);\n+        }\n+        ostream.print(\"\\n\");\n+    }\n+\n+    private static void printSecurityProviderConfig() {\n+        ostream.println(INDENT + \"Security provider static configuration:\");\n+        for (Provider p : Security.getProviders()) {\n+            ostream.println(TWOINDENT + \"Provider name: \" + p.getName());\n+            ostream.println(TWOINDENT + \"Provider information: \" + wrappedString(p.getInfo(), 80));\n+            ostream.println(TWOINDENT + \"Provider services: (type : algorithm)\");\n+            for (Provider.Service ps : p.getServices().stream()\n+                    .sorted(Comparator.comparing(Provider.Service::getType)).toList()) {\n+                ostream.println(THREEINDENT + ps.getType() + \" : \" + ps.getAlgorithm());\n+            }\n+        }\n+        ostream.print(\"\\n\");\n+    }\n+\n+    \/\/ return a string split across multiple lines which aims to limit max width\n+    private static String wrappedString(String orig, int limit) {\n+        if (orig == null || orig.isEmpty() || limit <= 0) {\n+            \/\/ bad input\n+            return orig;\n+        }\n+        StringTokenizer st = new StringTokenizer(orig, \" \");\n+        StringBuilder sb = new StringBuilder();\n+        int count = 0;\n+        while (st.hasMoreElements()) {\n+            String s = st.nextToken();\n+            sb.append(s);\n+            if (st.hasMoreElements()) {\n+                if (count + s.length() > limit) {\n+                    sb.append(\"\\n\" + THREEINDENT);\n+                    count = 0;\n+                } else {\n+                    sb.append(\" \");\n+                    count += s.length() + 1;\n+                }\n@@ -318,0 +415,1 @@\n+        return sb.toString();\n@@ -320,1 +418,1 @@\n-    public static void printSystemMetrics() {\n+    private static void printSystemMetrics() {\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":112,"deletions":14,"binary":false,"changes":126,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -171,0 +171,8 @@\n+\\    -XshowSettings:security\\n\\\n+\\                      show all security settings and continue\\n\\\n+\\    -XshowSettings:security:properties\\n\\\n+\\                      show security properties and continue\\n\\\n+\\    -XshowSettings:security:providers\\n\\\n+\\                      show static security provider settings and continue\\n\\\n+\\    -XshowSettings:security:tls\\n\\\n+\\                      show TLS related settings and continue\\n\\\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/resources\/launcher.properties","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @bug 8155246 8292297 8292177\n+ * @bug 8155246 8292297 8292177 8281658\n@@ -74,0 +74,4 @@\n+            \/\/ sanity test -XshowSettings:security option\n+            exerciseShowSettingsSecurity(copiedJava.toString(), \"-cp\", System.getProperty(\"test.classes\"),\n+                    \"-Djava.security.debug=all\", \"-XshowSettings:security\", \"ConfigFileTest\", \"runner\");\n+\n@@ -139,0 +143,10 @@\n+    \/\/ exercise the -XshowSettings:security launcher\n+    private static void exerciseShowSettingsSecurity(String... args) throws Exception {\n+        ProcessBuilder process = new ProcessBuilder(args);\n+        OutputAnalyzer oa = ProcessTools.executeProcess(process);\n+        oa.shouldHaveExitValue(0)\n+                .shouldContain(\"Security properties:\")\n+                .shouldContain(\"Security provider static configuration:\")\n+                .shouldContain(\"Security TLS configuration:\");\n+    }\n+\n","filename":"test\/jdk\/java\/security\/Security\/ConfigFileTest.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- * @bug 6994753 7123582 8305950\n+ * @bug 6994753 7123582 8305950 8281658\n@@ -70,0 +70,4 @@\n+    private static final String SEC_PROPS_SETTINGS = \"Security properties:\";\n+    private static final String SEC_PROVIDER_SETTINGS =\n+                            \"Security provider static configuration:\";\n+    private static final String SEC_TLS_SETTINGS = \"Security TLS configuration:\";\n@@ -78,0 +82,3 @@\n+        checkContains(tr, SEC_PROPS_SETTINGS);\n+        checkContains(tr, SEC_PROVIDER_SETTINGS);\n+        checkContains(tr, SEC_TLS_SETTINGS);\n@@ -147,0 +154,36 @@\n+    static void runTestOptionSecurity() throws IOException {\n+        TestResult tr = doExec(javaCmd, \"-XshowSettings:security\");\n+        checkNotContains(tr, VM_SETTINGS);\n+        checkNotContains(tr, PROP_SETTINGS);\n+        checkContains(tr, SEC_PROPS_SETTINGS);\n+        checkContains(tr, SEC_PROVIDER_SETTINGS);\n+        checkContains(tr, SEC_TLS_SETTINGS);\n+    }\n+\n+    static void runTestOptionSecurityProps() throws IOException {\n+        TestResult tr = doExec(javaCmd, \"-XshowSettings:security:properties\");\n+        checkContains(tr, SEC_PROPS_SETTINGS);\n+        checkNotContains(tr, SEC_PROVIDER_SETTINGS);\n+        checkNotContains(tr, SEC_TLS_SETTINGS);\n+        \/\/ test a well known property for sanity\n+        checkContains(tr, \"keystore.type=pkcs12\");\n+    }\n+\n+    static void runTestOptionSecurityProv() throws IOException {\n+        TestResult tr = doExec(javaCmd, \"-XshowSettings:security:providers\");\n+        checkNotContains(tr, SEC_PROPS_SETTINGS);\n+        checkContains(tr, SEC_PROVIDER_SETTINGS);\n+        checkNotContains(tr, SEC_TLS_SETTINGS);\n+        \/\/ test a well known Provider for sanity\n+        checkContains(tr, \"Provider name: SUN\");\n+    }\n+\n+    static void runTestOptionSecurityTLS() throws IOException {\n+        TestResult tr = doExec(javaCmd, \"-XshowSettings:security:tls\");\n+        checkNotContains(tr, SEC_PROPS_SETTINGS);\n+        checkNotContains(tr, SEC_PROVIDER_SETTINGS);\n+        checkContains(tr, SEC_TLS_SETTINGS);\n+        \/\/ test a well known TLS config for sanity\n+        checkContains(tr, \"TLSv1.2\");\n+    }\n+\n@@ -184,0 +227,4 @@\n+        runTestOptionSecurity();\n+        runTestOptionSecurityProps();\n+        runTestOptionSecurityProv();\n+        runTestOptionSecurityTLS();\n","filename":"test\/jdk\/tools\/launcher\/Settings.java","additions":48,"deletions":1,"binary":false,"changes":49,"status":"modified"}]}