{"files":[{"patch":"@@ -1727,0 +1727,1 @@\n+  ArchivedMirrorPatcher::update_array_klasses(Universe::fillerArrayKlassObj());\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -186,0 +186,3 @@\n+  \/* GC support *\/                                                                                              \\\n+  do_klass(FillerObject_klass,                          jdk_internal_vm_FillerObject                          ) \\\n+                                                                                                                \\\n","filename":"src\/hotspot\/share\/classfile\/vmClassMacros.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -94,0 +94,2 @@\n+  template(jdk_internal_vm_FillerObject,              \"jdk\/internal\/vm\/FillerObject\")             \\\n+                                                                                                  \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -450,1 +450,1 @@\n-  ObjArrayAllocator allocator(Universe::intArrayKlassObj(), words, (int)len, \/* do_zero *\/ false);\n+  ObjArrayAllocator allocator(Universe::fillerArrayKlassObj(), words, (int)len, \/* do_zero *\/ false);\n@@ -470,1 +470,1 @@\n-    ObjAllocator allocator(vmClasses::Object_klass(), words);\n+    ObjAllocator allocator(vmClasses::FillerObject_klass(), words);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,0 +87,1 @@\n+Klass* Universe::_fillerArrayKlassObj                 = NULL;\n@@ -203,0 +204,5 @@\n+  \/\/ We don't do the following because it will confuse JVMTI.\n+  \/\/ _fillerArrayKlassObj is used only by GC, which doesn't need to see\n+  \/\/ this klass from basic_type_classes_do().\n+  \/\/\n+  \/\/ closure->do_klass(_fillerArrayKlassObj);\n@@ -210,0 +216,1 @@\n+  it->push(&_fillerArrayKlassObj);\n@@ -258,0 +265,1 @@\n+  f->do_ptr((void**)&_fillerArrayKlassObj);\n@@ -317,0 +325,4 @@\n+        \/\/ Initialization of the fillerArrayKlass must come before regular\n+        \/\/ int-TypeArrayKlass so that the int-Array mirror points to the\n+        \/\/ int-TypeArrayKlass.\n+        _fillerArrayKlassObj = TypeArrayKlass::create_klass(T_INT, \"Ljava\/internal\/vm\/FillerArray;\", CHECK);\n@@ -358,0 +370,2 @@\n+    initialize_basic_type_klass(_fillerArrayKlassObj, CHECK);\n+\n@@ -366,0 +380,3 @@\n+\n+    assert(_fillerArrayKlassObj != intArrayKlassObj(),\n+           \"Internal filler array klass should be different to int array Klass\");\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -98,0 +98,3 @@\n+  \/\/ Special int-Array that represents filler objects that are used by GC to overwrite\n+  \/\/ dead objects. References to them are generally an error.\n+  static Klass* _fillerArrayKlassObj;\n@@ -211,0 +214,2 @@\n+  static Klass* fillerArrayKlassObj()               { return _fillerArrayKlassObj; }\n+\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package p;\n+package jdk.internal.vm;\n@@ -27,2 +27,4 @@\n-public class Foo {\n-     protected enum T { ONE }\n+\/*\n+ * Support class used for filling small dead areas.\n+ *\/\n+class FillerObject {\n@@ -30,1 +32,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/FillerObject.java","additions":5,"deletions":4,"binary":false,"changes":9,"previous_filename":"test\/jdk\/java\/lang\/invoke\/accessClassAndFindClass\/p\/Foo.java","status":"copied"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package gc;\n+\n+\/*\n+ * @test TestFillerObjectInstantiation\n+ * @summary Test that GC filler objects can not be instantiated by Java programs.\n+ * @library \/test\/lib\n+ * @run driver gc.TestFillerObjectInstantiation\n+ *\/\n+\n+public class TestFillerObjectInstantiation {\n+\n+    private static void testInstantiationFails(String classname) throws Exception {\n+        System.out.println(\"trying to instantiate \" + classname);\n+        try {\n+            Object o = ClassLoader.getSystemClassLoader().loadClass(classname).newInstance();\n+            throw new Error(\"Have been able to instantiate \" + classname);\n+        } catch (IllegalAccessException | ClassNotFoundException e) {\n+            System.out.println(\"Could not instantiate \" + classname + \" as expected\");\n+            System.out.println(\"Message: \" + e.toString());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        testInstantiationFails(\"jdk.internal.vm.FillerObject\");\n+        testInstantiationFails(\"jdk.internal.vm.FillerArray\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/TestFillerObjectInstantiation.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}