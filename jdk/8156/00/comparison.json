{"files":[{"patch":"@@ -1727,0 +1727,1 @@\n+  ArchivedMirrorPatcher::update_array_klasses(Universe::fillerArrayKlassObj());\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -186,0 +186,3 @@\n+  \/* GC support *\/                                                                                              \\\n+  do_klass(FillerObject_klass,                          jdk_internal_vm_FillerObject                          ) \\\n+                                                                                                                \\\n","filename":"src\/hotspot\/share\/classfile\/vmClassMacros.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -94,0 +94,2 @@\n+  template(jdk_internal_vm_FillerObject,              \"jdk\/internal\/vm\/FillerObject\")             \\\n+                                                                                                  \\\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -450,1 +450,1 @@\n-  ObjArrayAllocator allocator(Universe::intArrayKlassObj(), words, (int)len, \/* do_zero *\/ false);\n+  ObjArrayAllocator allocator(Universe::fillerArrayKlassObj(), words, (int)len, \/* do_zero *\/ false);\n@@ -470,1 +470,1 @@\n-    ObjAllocator allocator(vmClasses::Object_klass(), words);\n+    ObjAllocator allocator(vmClasses::FillerObject_klass(), words);\n","filename":"src\/hotspot\/share\/gc\/shared\/collectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,0 +87,1 @@\n+Klass* Universe::_fillerArrayKlassObj                 = NULL;\n@@ -203,0 +204,2 @@\n+  \/\/ Hide _fillerArrayKlassObj from JVMTI\n+  \/\/ closure->do_klass(_fillerArrayKlassObj);\n@@ -210,0 +213,1 @@\n+  it->push(&_fillerArrayKlassObj);\n@@ -258,0 +262,1 @@\n+  f->do_ptr((void**)&_fillerArrayKlassObj);\n@@ -317,0 +322,4 @@\n+        \/\/ Initialization of the fillerArrayKlass must come before regular\n+        \/\/ int-TypeArrayKlass so that the int-Array mirror points to the\n+        \/\/ int-TypeArrayKlass.\n+        _fillerArrayKlassObj = TypeArrayKlass::create_klass(T_INT, \"Ljava\/internal\/vm\/FillerArray;\", CHECK);\n@@ -358,0 +367,2 @@\n+    initialize_basic_type_klass(_fillerArrayKlassObj, CHECK);\n+\n@@ -366,0 +377,3 @@\n+\n+    assert(_fillerArrayKlassObj != intArrayKlassObj(),\n+           \"Internal filler array klass should be different to int array Klass\");\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -98,0 +98,3 @@\n+  \/\/ Special int-Array that represents filler objects that are used by GC to overwrite\n+  \/\/ dead objects. References to them are generally an error.\n+  static Klass* _fillerArrayKlassObj;\n@@ -211,0 +214,2 @@\n+  static Klass* fillerArrayKlassObj()               { return _fillerArrayKlassObj; }\n+\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package p;\n+package jdk.internal.vm;\n@@ -27,2 +27,4 @@\n-public class Foo {\n-     protected enum T { ONE }\n+\/*\n+ * Support class used for filling small dead areas.\n+ *\/\n+class FillerObject {\n@@ -30,1 +32,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/FillerObject.java","additions":5,"deletions":4,"binary":false,"changes":9,"previous_filename":"test\/jdk\/java\/lang\/invoke\/accessClassAndFindClass\/p\/Foo.java","status":"copied"}]}