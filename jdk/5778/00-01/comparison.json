{"files":[{"patch":"@@ -190,2 +190,1 @@\n-            throws ProviderException, InvalidAlgorithmParameterException,\n-            InvalidKeyException {\n+            throws InvalidAlgorithmParameterException, InvalidKeyException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureUtil.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,0 +41,1 @@\n+import sun.security.util.SignatureUtil;\n@@ -367,2 +368,1 @@\n-        AlgorithmId signAlg = AlgorithmId.get(algName);\n-        byte[] encodedCert = encodeTopLevel(issuerCert, issuerKey, signAlg);\n+        byte[] encodedCert = encodeTopLevel(issuerCert, issuerKey, algName);\n@@ -395,2 +395,4 @@\n-            PrivateKey issuerKey, AlgorithmId signAlg)\n-            throws CertificateException, IOException {\n+            PrivateKey issuerKey, String algName)\n+            throws CertificateException, IOException, NoSuchAlgorithmException {\n+\n+        AlgorithmId signAlg = AlgorithmId.get(algName);\n@@ -400,2 +402,0 @@\n-        tbsCertBytes = encodeTbsCert(issuerCert, signAlg);\n-        topLevelItems.write(tbsCertBytes);\n@@ -403,1 +403,6 @@\n-            signatureBytes = signCert(issuerKey, signAlg);\n+            Signature sig = SignatureUtil.fromKey(signAlg.getName(), issuerKey, (Provider)null);\n+            \/\/ Rewrite signAlg, RSASSA-PSS needs some parameters.\n+            signAlg = SignatureUtil.fromSignature(sig, issuerKey);\n+            tbsCertBytes = encodeTbsCert(issuerCert, signAlg);\n+            sig.update(tbsCertBytes);\n+            signatureBytes = sig.sign();\n@@ -407,0 +412,1 @@\n+        topLevelItems.write(tbsCertBytes);\n@@ -521,19 +527,1 @@\n-    \/**\n-     * Digitally sign the X.509 certificate.\n-     *\n-     * @param issuerKey The private key of the issuing authority\n-     * @param signAlg The signature algorithm object\n-     *\n-     * @return The digital signature bytes.\n-     *\n-     * @throws GeneralSecurityException If any errors occur during the\n-     * digital signature process.\n-     *\/\n-    private byte[] signCert(PrivateKey issuerKey, AlgorithmId signAlg)\n-            throws GeneralSecurityException {\n-        Signature sig = Signature.getInstance(signAlg.getName());\n-        sig.initSign(issuerKey);\n-        sig.update(tbsCertBytes);\n-        return sig.sign();\n-    }\n- }\n+}\n","filename":"test\/jdk\/java\/security\/testlibrary\/CertificateBuilder.java","additions":15,"deletions":27,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,2 +177,1 @@\n-\n-        sigAlgId = AlgorithmId.get(\"Sha256withRSA\");\n+        sigAlgId = AlgorithmId.get(SignatureUtil.getDefaultSigAlgForKey(signerKey));\n@@ -1351,2 +1350,0 @@\n-                sigAlgId.derEncode(basicORItemStream);\n-\n@@ -1354,2 +1351,2 @@\n-                Signature sig = Signature.getInstance(sigAlgId.getName());\n-                sig.initSign(signerKey);\n+                Signature sig = SignatureUtil.fromKey(\n+                        sigAlgId.getName(), signerKey, (Provider)null);\n@@ -1358,0 +1355,3 @@\n+                \/\/ Rewrite signAlg, RSASSA-PSS needs some parameters.\n+                sigAlgId = SignatureUtil.fromSignature(sig, signerKey);\n+                sigAlgId.derEncode(basicORItemStream);\n","filename":"test\/jdk\/java\/security\/testlibrary\/SimpleOCSPServer.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,2 @@\n- * @run main\/othervm HttpsUrlConnClient\n+ * @run main\/othervm HttpsUrlConnClient RSA SHA256withRSA\n+ * @run main\/othervm HttpsUrlConnClient RSASSA-PSS RSASSA-PSS\n@@ -63,1 +64,0 @@\n-import sun.security.validator.ValidatorException;\n@@ -76,0 +76,3 @@\n+    static String SIGALG;\n+    static String KEYALG;\n+\n@@ -140,0 +143,3 @@\n+        KEYALG = args[0];\n+        SIGALG = args[1];\n+\n@@ -517,1 +523,1 @@\n-        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");\n+        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(KEYALG);\n@@ -543,1 +549,1 @@\n-                \"SHA256withRSA\");\n+                SIGALG);\n@@ -585,1 +591,1 @@\n-                \"SHA256withRSA\");\n+                SIGALG);\n@@ -647,1 +653,1 @@\n-                \"SHA256withRSA\");\n+                SIGALG);\n","filename":"test\/jdk\/javax\/net\/ssl\/Stapling\/HttpsUrlConnClient.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"}]}