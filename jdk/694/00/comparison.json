{"files":[{"patch":"@@ -28,1 +28,0 @@\n-#include \"utilities\/globalDefinitions.hpp\"\n@@ -31,7 +30,1 @@\n-template <typename T>\n-class ZArray : public GrowableArrayCHeap<T, mtGC> {\n-public:\n-  ZArray();\n-\n-  void transfer(ZArray<T>* from);\n-};\n+template <typename T> using ZArray = GrowableArrayCHeap<T, mtGC>;\n","filename":"src\/hotspot\/share\/gc\/z\/zArray.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"memory\/allocation.inline.hpp\"\n@@ -31,15 +30,0 @@\n-template <typename T>\n-inline ZArray<T>::ZArray() :\n-    GrowableArrayCHeap<T, mtGC>(0) {}\n-\n-template <typename T>\n-inline void ZArray<T>::transfer(ZArray<T>* from) {\n-  assert(this->_data == NULL, \"Should be empty\");\n-  this->_data = from->_data;\n-  this->_len = from->_len;\n-  this->_max = from->_max;\n-  from->_data = NULL;\n-  from->_len = 0;\n-  from->_max = 0;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zArray.inline.hpp","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-      deferred.transfer(&_deferred);\n+      deferred.swap(&_deferred);\n","filename":"src\/hotspot\/share\/gc\/z\/zSafeDelete.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -438,0 +438,6 @@\n+  void swap(GrowableArrayWithAllocator<E, Derived>* other) {\n+    ::swap(this->_data, other->_data);\n+    ::swap(this->_len, other->_len);\n+    ::swap(this->_max, other->_max);\n+  }\n+\n@@ -690,1 +696,1 @@\n-  GrowableArrayCHeap(int initial_max) :\n+  GrowableArrayCHeap(int initial_max = 0) :\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}