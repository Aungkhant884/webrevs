{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,0 +81,19 @@\n+void ClassFileParser::classfile_icce_error(const char* msg,\n+                                           const Klass* k,\n+                                           TRAPS) const {\n+  assert(_class_name != NULL, \"invariant\");\n+  ResourceMark rm(THREAD);\n+  Exceptions::fthrow(THREAD_AND_LOCATION, vmSymbols::java_lang_IncompatibleClassChangeError(),\n+                     msg, _class_name->as_klass_external_name(), k->external_name());\n+}\n+\n+void ClassFileParser::classfile_ucve_error(const char* msg,\n+                                           const Symbol* class_name,\n+                                           u2 major,\n+                                           u2 minor,\n+                                           TRAPS) const {\n+  ResourceMark rm(THREAD);\n+  Exceptions::fthrow(THREAD_AND_LOCATION, vmSymbols::java_lang_UnsupportedClassVersionError(),\n+                     msg, class_name->as_C_string(), major, minor);\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileError.cpp","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -215,1 +215,2 @@\n-            tag, CHECK);\n+            tag, THREAD);\n+          return;\n@@ -237,1 +238,2 @@\n-              tag, CHECK);\n+              tag, THREAD);\n+          return;\n@@ -252,1 +254,2 @@\n-              tag, CHECK);\n+              tag, THREAD);\n+          return;\n@@ -371,2 +374,2 @@\n-                              CHECK);\n-        break;\n+                              THREAD);\n+        return;\n@@ -565,1 +568,2 @@\n-              index, CHECK);\n+              index, THREAD);\n+            return;\n@@ -743,1 +747,2 @@\n-              name_ref_index, CHECK);\n+              name_ref_index, THREAD);\n+            return;\n@@ -765,1 +770,2 @@\n-                    name_ref_index, CHECK);\n+                    name_ref_index, THREAD);\n+                return;\n@@ -771,1 +777,2 @@\n-                  name_ref_index, CHECK);\n+                  name_ref_index, THREAD);\n+                return;\n@@ -1010,1 +1017,1 @@\n-                             name->as_C_string(), CHECK);\n+                             name->as_C_string(), THREAD);\n@@ -1066,1 +1073,1 @@\n-                             CHECK);\n+                             THREAD);\n@@ -1353,1 +1360,2 @@\n-        classfile_parse_error(\"Duplicate ConstantValue attribute in class file %s\", CHECK);\n+        classfile_parse_error(\"Duplicate ConstantValue attribute in class file %s\", THREAD);\n+        return;\n@@ -1368,1 +1376,2 @@\n-          attribute_length, CHECK);\n+          attribute_length, THREAD);\n+        return;\n@@ -1375,1 +1384,2 @@\n-          attribute_length, CHECK);\n+          attribute_length, THREAD);\n+        return;\n@@ -1381,1 +1391,2 @@\n-            \"Multiple Signature attributes for field in class file %s\", CHECK);\n+            \"Multiple Signature attributes for field in class file %s\", THREAD);\n+          return;\n@@ -1386,1 +1397,2 @@\n-            attribute_length, CHECK);\n+            attribute_length, THREAD);\n+          return;\n@@ -1392,1 +1404,2 @@\n-            \"Multiple RuntimeVisibleAnnotations attributes for field in class file %s\", CHECK);\n+            \"Multiple RuntimeVisibleAnnotations attributes for field in class file %s\", THREAD);\n+          return;\n@@ -1409,1 +1422,2 @@\n-            \"Multiple RuntimeInvisibleAnnotations attributes for field in class file %s\", CHECK);\n+            \"Multiple RuntimeInvisibleAnnotations attributes for field in class file %s\", THREAD);\n+          return;\n@@ -1421,1 +1435,2 @@\n-            \"Multiple RuntimeVisibleTypeAnnotations attributes for field in class file %s\", CHECK);\n+            \"Multiple RuntimeVisibleTypeAnnotations attributes for field in class file %s\", THREAD);\n+          return;\n@@ -1430,1 +1445,2 @@\n-            \"Multiple RuntimeInvisibleTypeAnnotations attributes for field in class file %s\", CHECK);\n+            \"Multiple RuntimeInvisibleTypeAnnotations attributes for field in class file %s\", THREAD);\n+          return;\n@@ -1788,1 +1804,1 @@\n-                             name->as_C_string(), sig->as_klass_external_name(), CHECK);\n+                             name->as_C_string(), sig->as_klass_external_name(), THREAD);\n@@ -1956,1 +1972,2 @@\n-          start_pc, tbl_name, CHECK_NULL);\n+          start_pc, tbl_name, THREAD);\n+        return NULL;\n@@ -1961,1 +1978,2 @@\n-          length, tbl_name, CHECK_NULL);\n+          length, tbl_name, THREAD);\n+        return NULL;\n@@ -2221,1 +2239,2 @@\n-                               CHECK);\n+                               THREAD);\n+        return;\n@@ -2240,1 +2259,2 @@\n-                                 CHECK);\n+                                 THREAD);\n+          return;\n@@ -2246,1 +2266,2 @@\n-                               CHECK);\n+                               THREAD);\n+        return;\n@@ -2364,1 +2385,2 @@\n-      classfile_parse_error(\"Method <clinit> is not static in class file %s\", CHECK_NULL);\n+      classfile_parse_error(\"Method <clinit> is not static in class file %s\", THREAD);\n+      return NULL;\n@@ -2371,1 +2393,2 @@\n-    classfile_parse_error(\"Interface cannot have a method named <init>, class file %s\", CHECK_NULL);\n+    classfile_parse_error(\"Interface cannot have a method named <init>, class file %s\", THREAD);\n+    return NULL;\n@@ -2379,1 +2402,2 @@\n-      classfile_parse_error(\"Too many arguments in method signature in class file %s\", CHECK_NULL);\n+      classfile_parse_error(\"Too many arguments in method signature in class file %s\", THREAD);\n+      return NULL;\n@@ -2458,1 +2482,2 @@\n-                              CHECK_NULL);\n+                              THREAD);\n+        return NULL;\n@@ -2590,1 +2615,2 @@\n-            classfile_parse_error(\"Multiple StackMapTable attributes in class file %s\", CHECK_NULL);\n+            classfile_parse_error(\"Multiple StackMapTable attributes in class file %s\", THREAD);\n+            return NULL;\n@@ -2610,1 +2636,2 @@\n-                              CHECK_NULL);\n+                              THREAD);\n+        return NULL;\n@@ -2622,1 +2649,2 @@\n-                              CHECK_NULL);\n+                              THREAD);\n+        return NULL;\n@@ -2630,1 +2658,2 @@\n-          method_attribute_length, CHECK_NULL);\n+          method_attribute_length, THREAD);\n+        return NULL;\n@@ -2642,1 +2671,2 @@\n-          method_attribute_length, CHECK_NULL);\n+          method_attribute_length, THREAD);\n+        return NULL;\n@@ -2650,1 +2680,2 @@\n-          method_attribute_length, CHECK_NULL);\n+          method_attribute_length, THREAD);\n+        return NULL;\n@@ -2657,1 +2688,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2662,1 +2694,2 @@\n-            method_attribute_length, CHECK_NULL);\n+            method_attribute_length, THREAD);\n+          return NULL;\n@@ -2669,1 +2702,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2687,1 +2721,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2700,1 +2735,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2710,1 +2746,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2724,1 +2761,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2734,1 +2772,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2745,1 +2784,2 @@\n-            CHECK_NULL);\n+            THREAD);\n+          return NULL;\n@@ -2986,1 +3026,1 @@\n-                               name->as_C_string(), sig->as_klass_external_name(), CHECK);\n+                               name->as_C_string(), sig->as_klass_external_name(), THREAD);\n@@ -3229,1 +3269,2 @@\n-    classfile_parse_error(\"PermittedSubclasses attribute is empty in class file %s\", CHECK_0);\n+    classfile_parse_error(\"PermittedSubclasses attribute is empty in class file %s\", THREAD);\n+    return 0;\n@@ -3331,1 +3372,2 @@\n-            CHECK_0);\n+            THREAD);\n+          return 0;\n@@ -3336,1 +3378,2 @@\n-            attribute_length, CHECK_0);\n+            attribute_length, THREAD);\n+          return 0;\n@@ -3343,1 +3386,2 @@\n-            \"Multiple RuntimeVisibleAnnotations attributes for Record component in class file %s\", CHECK_0);\n+            \"Multiple RuntimeVisibleAnnotations attributes for Record component in class file %s\", THREAD);\n+          return 0;\n@@ -3355,1 +3399,2 @@\n-            \"Multiple RuntimeInvisibleAnnotations attributes for Record component in class file %s\", CHECK_0);\n+            \"Multiple RuntimeInvisibleAnnotations attributes for Record component in class file %s\", THREAD);\n+          return 0;\n@@ -3368,1 +3413,2 @@\n-            \"Multiple RuntimeVisibleTypeAnnotations attributes for Record component in class file %s\", CHECK_0);\n+            \"Multiple RuntimeVisibleTypeAnnotations attributes for Record component in class file %s\", THREAD);\n+          return 0;\n@@ -3380,1 +3426,2 @@\n-            \"Multiple RuntimeInvisibleTypeAnnotations attributes for Record component in class file %s\", CHECK_0);\n+            \"Multiple RuntimeInvisibleTypeAnnotations attributes for Record component in class file %s\", THREAD);\n+          return 0;\n@@ -3591,1 +3638,2 @@\n-        classfile_parse_error(\"Multiple SourceFile attributes in class file %s\", CHECK);\n+        classfile_parse_error(\"Multiple SourceFile attributes in class file %s\", THREAD);\n+        return;\n@@ -3599,2 +3647,3 @@\n-          classfile_parse_error(\n-            \"Multiple SourceDebugExtension attributes in class file %s\", CHECK);\n+        classfile_parse_error(\n+          \"Multiple SourceDebugExtension attributes in class file %s\", THREAD);\n+        return;\n@@ -3607,1 +3656,2 @@\n-        classfile_parse_error(\"Multiple InnerClasses attributes in class file %s\", CHECK);\n+        classfile_parse_error(\"Multiple InnerClasses attributes in class file %s\", THREAD);\n+        return;\n@@ -3620,1 +3670,2 @@\n-          attribute_length, CHECK);\n+          attribute_length, THREAD);\n+        return;\n@@ -3628,1 +3679,2 @@\n-          attribute_length, CHECK);\n+          attribute_length, THREAD);\n+        return;\n@@ -3634,1 +3686,2 @@\n-            \"Multiple Signature attributes in class file %s\", CHECK);\n+            \"Multiple Signature attributes in class file %s\", THREAD);\n+          return;\n@@ -3639,1 +3692,2 @@\n-            attribute_length, CHECK);\n+            attribute_length, THREAD);\n+          return;\n@@ -3645,1 +3699,2 @@\n-            \"Multiple RuntimeVisibleAnnotations attributes in class file %s\", CHECK);\n+            \"Multiple RuntimeVisibleAnnotations attributes in class file %s\", THREAD);\n+          return;\n@@ -3662,1 +3717,2 @@\n-            \"Multiple RuntimeInvisibleAnnotations attributes in class file %s\", CHECK);\n+            \"Multiple RuntimeInvisibleAnnotations attributes in class file %s\", THREAD);\n+          return;\n@@ -3673,1 +3729,2 @@\n-          classfile_parse_error(\"Multiple EnclosingMethod attributes in class file %s\", CHECK);\n+          classfile_parse_error(\"Multiple EnclosingMethod attributes in class file %s\", THREAD);\n+          return;\n@@ -3684,1 +3741,2 @@\n-          classfile_parse_error(\"Invalid class index in EnclosingMethod attribute in class file %s\", CHECK);\n+          classfile_parse_error(\"Invalid class index in EnclosingMethod attribute in class file %s\", THREAD);\n+          return;\n@@ -3692,1 +3750,2 @@\n-          classfile_parse_error(\"Invalid or out-of-bounds method index in EnclosingMethod attribute in class file %s\", CHECK);\n+          classfile_parse_error(\"Invalid or out-of-bounds method index in EnclosingMethod attribute in class file %s\", THREAD);\n+          return;\n@@ -3697,1 +3756,2 @@\n-          classfile_parse_error(\"Multiple BootstrapMethods attributes in class file %s\", CHECK);\n+          classfile_parse_error(\"Multiple BootstrapMethods attributes in class file %s\", THREAD);\n+          return;\n@@ -3704,1 +3764,2 @@\n-            \"Multiple RuntimeVisibleTypeAnnotations attributes in class file %s\", CHECK);\n+            \"Multiple RuntimeVisibleTypeAnnotations attributes in class file %s\", THREAD);\n+          return;\n@@ -3714,1 +3775,2 @@\n-            \"Multiple RuntimeInvisibleTypeAnnotations attributes in class file %s\", CHECK);\n+            \"Multiple RuntimeInvisibleTypeAnnotations attributes in class file %s\", THREAD);\n+          return;\n@@ -3728,1 +3790,2 @@\n-            classfile_parse_error(\"Multiple NestMembers attributes in class file %s\", CHECK);\n+            classfile_parse_error(\"Multiple NestMembers attributes in class file %s\", THREAD);\n+            return;\n@@ -3733,1 +3796,2 @@\n-            classfile_parse_error(\"Conflicting NestHost and NestMembers attributes in class file %s\", CHECK);\n+            classfile_parse_error(\"Conflicting NestHost and NestMembers attributes in class file %s\", THREAD);\n+            return;\n@@ -3740,1 +3804,2 @@\n-            classfile_parse_error(\"Multiple NestHost attributes in class file %s\", CHECK);\n+            classfile_parse_error(\"Multiple NestHost attributes in class file %s\", THREAD);\n+            return;\n@@ -3745,1 +3810,2 @@\n-            classfile_parse_error(\"Conflicting NestMembers and NestHost attributes in class file %s\", CHECK);\n+            classfile_parse_error(\"Conflicting NestMembers and NestHost attributes in class file %s\", THREAD);\n+            return;\n@@ -3764,1 +3830,2 @@\n-                classfile_parse_error(\"Multiple Record attributes in class file %s\", CHECK);\n+                classfile_parse_error(\"Multiple Record attributes in class file %s\", THREAD);\n+                return;\n@@ -3768,1 +3835,2 @@\n-                classfile_parse_error(\"Record attribute in non-final or abstract class file %s\", CHECK);\n+                classfile_parse_error(\"Record attribute in non-final or abstract class file %s\", THREAD);\n+                return;\n@@ -3795,1 +3863,2 @@\n-                  classfile_parse_error(\"Multiple PermittedSubclasses attributes in class file %s\", CHECK);\n+                  classfile_parse_error(\"Multiple PermittedSubclasses attributes in class file %s\", THREAD);\n+                  return;\n@@ -3799,1 +3868,2 @@\n-                  classfile_parse_error(\"PermittedSubclasses attribute in final class file %s\", CHECK);\n+                  classfile_parse_error(\"PermittedSubclasses attribute in final class file %s\", THREAD);\n+                  return;\n@@ -4298,1 +4368,1 @@\n-static void check_super_class_access(const InstanceKlass* this_klass, TRAPS) {\n+void ClassFileParser::check_super_class_access(const InstanceKlass* this_klass, TRAPS) {\n@@ -4317,7 +4387,1 @@\n-      ResourceMark rm(THREAD);\n-      Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_IncompatibleClassChangeError(),\n-        \"class %s cannot inherit from sealed class %s\",\n-        this_klass->external_name(),\n-        super_ik->external_name());\n+      classfile_icce_error(\"class %s cannot inherit from sealed class %s\", super_ik, THREAD);\n@@ -4379,1 +4443,1 @@\n-static void check_super_interface_access(const InstanceKlass* this_klass, TRAPS) {\n+void ClassFileParser::check_super_interface_access(const InstanceKlass* this_klass, TRAPS) {\n@@ -4388,8 +4452,4 @@\n-      ResourceMark rm(THREAD);\n-      Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_IncompatibleClassChangeError(),\n-        \"class %s cannot %s sealed interface %s\",\n-        this_klass->external_name(),\n-        this_klass->is_interface() ? \"extend\" : \"implement\",\n-        k->external_name());\n+      classfile_icce_error(this_klass->is_interface() ?\n+                             \"class %s cannot extend sealed interface %s\" :\n+                             \"class %s cannot implement sealed interface %s\",\n+                           k, THREAD);\n@@ -4572,1 +4632,1 @@\n-static void verify_class_version(u2 major, u2 minor, Symbol* class_name, TRAPS){\n+void ClassFileParser::verify_class_version(u2 major, u2 minor, Symbol* class_name, TRAPS){\n@@ -4576,5 +4636,2 @@\n-    Exceptions::fthrow(\n-      THREAD_AND_LOCATION,\n-      vmSymbols::java_lang_UnsupportedClassVersionError(),\n-      \"%s (class file version %u.%u) was compiled with an invalid major version\",\n-      class_name->as_C_string(), major, minor);\n+    classfile_ucve_error(\"%s (class file version %u.%u) was compiled with an invalid major version\",\n+                         class_name, major, minor, THREAD);\n@@ -4610,5 +4667,2 @@\n-      Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_UnsupportedClassVersionError(),\n-        \"Preview features are not enabled for %s (class file version %u.%u). Try running with '--enable-preview'\",\n-        class_name->as_C_string(), major, minor);\n+      classfile_ucve_error(\"Preview features are not enabled for %s (class file version %u.%u). Try running with '--enable-preview'\",\n+                           class_name, major, minor, THREAD);\n@@ -4619,5 +4673,2 @@\n-    Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_UnsupportedClassVersionError(),\n-        \"%s (class file version %u.%u) was compiled with an invalid non-zero minor version\",\n-        class_name->as_C_string(), major, minor);\n+    classfile_ucve_error(\"%s (class file version %u.%u) was compiled with an invalid non-zero minor version\",\n+                         class_name, major, minor, THREAD);\n@@ -4754,1 +4805,1 @@\n-    classfile_parse_error(\"Illegal UTF8 string in constant pool in class file %s\", CHECK);\n+    classfile_parse_error(\"Illegal UTF8 string in constant pool in class file %s\", THREAD);\n@@ -4923,1 +4974,1 @@\n-                                  CHECK_NULL);\n+                                  THREAD);\n@@ -4935,1 +4986,2 @@\n-        classfile_parse_error(\"Array type descriptor has more than 255 dimensions in class file %s\", CHECK_NULL);\n+        classfile_parse_error(\"Array type descriptor has more than 255 dimensions in class file %s\", THREAD);\n+        return NULL;\n@@ -5891,1 +5943,2 @@\n-    classfile_parse_error(\"Unknown constant tag %u in class file %s\", bad_constant, CHECK);\n+    classfile_parse_error(\"Unknown constant tag %u in class file %s\", bad_constant, THREAD);\n+    return;\n@@ -6131,8 +6184,1 @@\n-      ResourceMark rm(THREAD);\n-      Exceptions::fthrow(\n-        THREAD_AND_LOCATION,\n-        vmSymbols::java_lang_IncompatibleClassChangeError(),\n-        \"class %s has interface %s as super class\",\n-        _class_name->as_klass_external_name(),\n-        _super_klass->external_name()\n-      );\n+      classfile_icce_error(\"class %s has interface %s as super class\", _super_klass, THREAD);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":168,"deletions":122,"binary":false,"changes":290,"status":"modified"},{"patch":"@@ -377,0 +377,10 @@\n+  void classfile_icce_error(const char* msg,\n+                            const Klass* k,\n+                            TRAPS) const;\n+\n+  void classfile_ucve_error(const char* msg,\n+                            const Symbol* class_name,\n+                            u2 major,\n+                            u2 minor,\n+                            TRAPS) const;\n+\n@@ -378,1 +388,1 @@\n-    if (!b) { classfile_parse_error(msg, CHECK); }\n+    if (!b) { classfile_parse_error(msg, THREAD); return; }\n@@ -423,1 +433,1 @@\n-    if (!b) { classfile_parse_error(msg, index, CHECK); }\n+    if (!b) { classfile_parse_error(msg, index, THREAD); return; }\n@@ -430,1 +440,1 @@\n-    if (!b) { classfile_parse_error(msg, name, CHECK); }\n+    if (!b) { classfile_parse_error(msg, name, THREAD); return; }\n@@ -438,1 +448,1 @@\n-    if (!b) { classfile_parse_error(msg, index, name, CHECK); }\n+    if (!b) { classfile_parse_error(msg, index, name, THREAD); return; }\n@@ -463,0 +473,2 @@\n+  void verify_class_version(u2 major, u2 minor, Symbol* class_name, TRAPS);\n+\n@@ -470,0 +482,6 @@\n+  void check_super_class_access(const InstanceKlass* this_klass,\n+                                TRAPS);\n+\n+  void check_super_interface_access(const InstanceKlass* this_klass,\n+                                    TRAPS);\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":22,"deletions":4,"binary":false,"changes":26,"status":"modified"}]}