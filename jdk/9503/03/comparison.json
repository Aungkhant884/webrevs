{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- *\n+ * @test\n@@ -29,8 +29,3 @@\n- *\/\n-\n-\/*\n- * This test is just a sanity check and does not check for the correct\n- * value.  The correct value should be checked manually:\n- * Solaris\/Linux:\n- *   1. In a shell, as user who started java process, enter the command\n- *      \"limit -h descriptors\"\n+ * @requires os.family != \"windows\"\n+ *\n+ * @run main GetMaxFileDescriptorCount\n@@ -45,1 +40,1 @@\n-        (UnixOperatingSystemMXBean)ManagementFactory.getOperatingSystemMXBean();\n+        (UnixOperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();\n@@ -47,3 +42,1 @@\n-    \/\/ Careful with these values.\n-    \/\/ Min count for pass dynamically determined below.\n-    private static long       min_count_for_pass = 1;\n+    private static long       minCountForPass = 1;\n@@ -52,2 +45,0 @@\n-    private static boolean trace = false;\n-\n@@ -55,3 +46,0 @@\n-        if (args.length > 0 && args[0].equals(\"trace\")) {\n-            trace = true;\n-        }\n@@ -59,3 +47,3 @@\n-        long min_count = mbean.getOpenFileDescriptorCount();\n-        if (min_count > 0) {\n-            min_count_for_pass = min_count;\n+        long minCount = mbean.getOpenFileDescriptorCount();\n+        if (minCount > 0) {\n+            minCountForPass = minCount;\n@@ -66,3 +54,1 @@\n-        if (trace) {\n-            System.out.println(\"Max file descriptor count: \" + count);\n-        }\n+        System.out.println(\"Max file descriptor count: \" + count);\n@@ -70,1 +56,1 @@\n-        if (count < min_count_for_pass || count > MAX_COUNT_FOR_PASS) {\n+        if (count < minCountForPass || count > MAX_COUNT_FOR_PASS) {\n@@ -73,1 +59,1 @@\n-                                       \"(MIN = \" + min_count_for_pass + \"; \" +\n+                                       \"(MIN = \" + minCountForPass + \"; \" +\n","filename":"test\/jdk\/com\/sun\/management\/UnixOperatingSystemMXBean\/GetMaxFileDescriptorCount.java","additions":13,"deletions":27,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-#\n-# Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-# @test\n-# @bug     4858522\n-# @summary\n-# @author  Steve Bohne\n-#\n-# @run shell GetMaxFileDescriptorCount.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-     echo \"--Error: TESTJAVA must be defined as the pathname of a jdk to test.\"\n-     exit 1\n-fi\n-if [ \"${COMPILEJAVA}\" = \"\" ]; then\n-    COMPILEJAVA=\"${TESTJAVA}\"\n-fi\n-\n-runOne()\n-{\n-   echo \"runOne $@\"\n-   $COMPILEJAVA\/bin\/javac ${TESTJAVACOPTS} ${TESTTOOLVMOPTS} -d $TESTCLASSES \\\n-       $TESTSRC\/$@.java || exit 2\n-   $TESTJAVA\/bin\/java ${TESTVMOPTS} -classpath $TESTCLASSES $@        || exit 3\n-}\n-\n-# Test GetMaxFileDescriptorCount if we are running on Unix\n-case `uname -s` in\n-    Linux )\n-       runOne GetMaxFileDescriptorCount\n-       ;;\n-    * )\n-       echo \"Ignore test when not run on Linux\"\n-       exit 0\n-       ;;\n-esac\n-\n-exit 0\n","filename":"test\/jdk\/com\/sun\/management\/UnixOperatingSystemMXBean\/GetMaxFileDescriptorCount.sh","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2004, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+ * @test\n@@ -28,8 +29,3 @@\n- *\/\n-\n-\/*\n- * This test is just a sanity check and does not check for the correct\n- * value.  The correct value should be checked manually:\n- * Solaris\/Linux:\n- *   1. Find the pid of the java process.\n- *   2. In a shell, enter the command: \"ls -1 \/proc\/<pid>\/fd | wc -l\"\n+ * @requires os.family != \"windows\"\n+ *\n+ * @run main GetOpenFileDescriptorCount\n@@ -44,1 +40,1 @@\n-        (UnixOperatingSystemMXBean)ManagementFactory.getOperatingSystemMXBean();\n+        (UnixOperatingSystemMXBean) ManagementFactory.getOperatingSystemMXBean();\n@@ -46,1 +42,0 @@\n-    \/\/ Careful with these values.\n@@ -48,4 +43,1 @@\n-    \/\/ Max count for pass dynamically determined below\n-    private static long       max_count_for_pass = Long.MAX_VALUE;\n-\n-    private static boolean trace = false;\n+    private static long       maxCountForPass = Long.MAX_VALUE;\n@@ -54,3 +46,0 @@\n-        if (args.length > 0 && args[0].equals(\"trace\")) {\n-            trace = true;\n-        }\n@@ -58,3 +47,3 @@\n-        long max_count = mbean.getMaxFileDescriptorCount();\n-        if (max_count > 0) {\n-            max_count_for_pass = max_count;\n+        long maxCount = mbean.getMaxFileDescriptorCount();\n+        if (maxCount > 0) {\n+            maxCountForPass = maxCount;\n@@ -65,3 +54,1 @@\n-        if (trace) {\n-            System.out.println(\"Open file descriptor count: \" + count);\n-        }\n+        System.out.println(\"Open file descriptor count: \" + count);\n@@ -69,1 +56,1 @@\n-        if (count < MIN_COUNT_FOR_PASS || count > max_count_for_pass) {\n+        if (count < MIN_COUNT_FOR_PASS || count > maxCountForPass) {\n@@ -73,1 +60,1 @@\n-                                       \"MAX = \" + max_count_for_pass + \")\");\n+                                       \"MAX = \" + maxCountForPass + \")\");\n","filename":"test\/jdk\/com\/sun\/management\/UnixOperatingSystemMXBean\/GetOpenFileDescriptorCount.java","additions":13,"deletions":26,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -1,59 +0,0 @@\n-#\n-# Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-# @test\n-# @bug     4858522\n-# @summary\n-# @author  Steve Bohne\n-#\n-# @run shell GetOpenFileDescriptorCount.sh\n-#\n-\n-if [ \"${TESTJAVA}\" = \"\" ] ; then\n-     echo \"--Error: TESTJAVA must be defined as the pathname of a jdk to test.\"\n-     exit 1\n-fi\n-if [ \"${COMPILEJAVA}\" = \"\" ]; then\n-    COMPILEJAVA=\"${TESTJAVA}\"\n-fi\n-runOne()\n-{\n-   echo \"runOne $@\"\n-   $COMPILEJAVA\/bin\/javac ${TESTJAVACOPTS} ${TESTTOOLVMOPTS} -d $TESTCLASSES \\\n-       $TESTSRC\/$@.java || exit 2\n-   $TESTJAVA\/bin\/java ${TESTVMOPTS} -classpath $TESTCLASSES $@        || exit 3\n-}\n-\n-# Test GetOpenFileDescriptorCount if we are running on Unix\n-case `uname -s` in\n-    Linux )\n-       runOne GetOpenFileDescriptorCount\n-       ;;\n-    * )\n-       echo \"Ignore test when not run on Linux\"\n-       exit 0\n-       ;;\n-esac\n-\n-exit 0\n","filename":"test\/jdk\/com\/sun\/management\/UnixOperatingSystemMXBean\/GetOpenFileDescriptorCount.sh","additions":0,"deletions":59,"binary":false,"changes":59,"status":"deleted"}]}