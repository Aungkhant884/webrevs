{"files":[{"patch":"@@ -2595,1 +2595,1 @@\n-  lr_d(tmp, addr, Assembler::aqrl);\n+  load_reserved(tmp, addr, int64, Assembler::aqrl);\n@@ -2599,1 +2599,1 @@\n-  sc_d(tmp, newv, addr, Assembler::rl);\n+  store_conditional(tmp, newv, addr, int64, Assembler::rl);\n@@ -2618,1 +2618,2 @@\n-void MacroAssembler::load_reserved(Register addr,\n+void MacroAssembler::load_reserved(Register dst,\n+                                   Register addr,\n@@ -2623,1 +2624,1 @@\n-      lr_d(t0, addr, acquire);\n+      lr_d(dst, addr, acquire);\n@@ -2626,1 +2627,1 @@\n-      lr_w(t0, addr, acquire);\n+      lr_w(dst, addr, acquire);\n@@ -2629,1 +2630,1 @@\n-      lr_w(t0, addr, acquire);\n+      lr_w(dst, addr, acquire);\n@@ -2637,1 +2638,1 @@\n-void MacroAssembler::store_conditional(Register addr,\n+void MacroAssembler::store_conditional(Register dst,\n@@ -2639,0 +2640,1 @@\n+                                       Register addr,\n@@ -2643,1 +2645,1 @@\n-      sc_d(t0, new_val, addr, release);\n+      sc_d(dst, new_val, addr, release);\n@@ -2647,1 +2649,1 @@\n-      sc_w(t0, new_val, addr, release);\n+      sc_w(dst, new_val, addr, release);\n@@ -2781,1 +2783,1 @@\n-  load_reserved(addr, size, acquire);\n+  load_reserved(t0, addr, size, acquire);\n@@ -2783,1 +2785,1 @@\n-  store_conditional(addr, new_val, size, release);\n+  store_conditional(t0, new_val, addr, size, release);\n@@ -2815,1 +2817,1 @@\n-  load_reserved(addr, size, acquire);\n+  load_reserved(t0, addr, size, acquire);\n@@ -2817,1 +2819,1 @@\n-  store_conditional(addr, new_val, size, release);\n+  store_conditional(t0, new_val, addr, size, release);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1440,2 +1440,2 @@\n-  void load_reserved(Register addr, enum operand_size size, Assembler::Aqrl acquire);\n-  void store_conditional(Register addr, Register new_val, enum operand_size size, Assembler::Aqrl release);\n+  void load_reserved(Register dst, Register addr, enum operand_size size, Assembler::Aqrl acquire);\n+  void store_conditional(Register dst, Register new_val, Register addr, enum operand_size size, Assembler::Aqrl release);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}