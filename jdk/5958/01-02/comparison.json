{"files":[{"patch":"@@ -273,1 +273,0 @@\n-static int _array_count = 0;\n@@ -275,13 +274,22 @@\n-Mutex::~Mutex() {\n-  {\n-    \/\/ Remove mutex from print_owned_locks_on_error array\n-    ThreadCritical tc;\n-    Mutex* old_next = _next_mutex;\n-    assert(old_next != nullptr, \"only static mutexes don't have a next\");\n-    old_next->_prev_mutex = _prev_mutex;\n-    if (_prev_mutex == nullptr) {\n-      _mutex_array = old_next;\n-    } else {\n-      _prev_mutex->_next_mutex = old_next;\n-    }\n-    _array_count -= 1;\n+void Mutex::add_to_global_list() {\n+  \/\/ Add mutex to print_owned_locks_on_error array\n+  ThreadCritical tc;\n+  Mutex* next = _mutex_array;\n+  _next_mutex = next;\n+  _prev_mutex = nullptr;\n+  _mutex_array = this;\n+  if (next != nullptr) {\n+    next->_prev_mutex = this;\n+  }\n+}\n+\n+void Mutex::remove_from_global_list() {\n+  \/\/ Remove mutex from print_owned_locks_on_error array\n+  ThreadCritical tc;\n+  Mutex* old_next = _next_mutex;\n+  assert(old_next != nullptr, \"only static mutexes don't have a next\");\n+  old_next->_prev_mutex = _prev_mutex;\n+  if (_prev_mutex == nullptr) {\n+    _mutex_array = old_next;\n+  } else {\n+    _prev_mutex->_next_mutex = old_next;\n@@ -289,0 +297,4 @@\n+}\n+\n+Mutex::~Mutex() {\n+  remove_from_global_list();\n@@ -311,12 +323,1 @@\n-  {\n-    \/\/ Add mutex to print_owned_locks_on_error array\n-    ThreadCritical tc;\n-    Mutex* next = _mutex_array;\n-    _next_mutex = next;\n-    _prev_mutex = nullptr;\n-    _mutex_array = this;\n-    if (next != nullptr) {\n-      next->_prev_mutex = this;\n-    }\n-    _array_count += 1;\n-  }\n+  add_to_global_list();\n@@ -335,1 +336,1 @@\n-    st->print(\"%s\", \" allow_vm_block\");\n+    st->print_raw(\" allow_vm_block\");\n@@ -344,0 +345,2 @@\n+\/\/ This function doesn't take the ThreadCritical lock to avoid potential\n+\/\/ deadlock during error reporting.\n@@ -345,0 +348,1 @@\n+  assert(VMError::is_error_reported(), \"should only be called during error reporting\");\n@@ -346,1 +350,1 @@\n-  st->print(\"VM Mutex\/Monitor currently owned by a thread: \");\n+  st->print(\"VM Mutexes\/Monitors currently owned by a thread: \");\n@@ -349,0 +353,1 @@\n+  int array_count = 0;\n@@ -350,0 +355,1 @@\n+     array_count++;\n@@ -361,1 +367,1 @@\n-  st->print_cr(\"Total Mutex count %d\", _array_count);\n+  st->print_cr(\"Total Mutex count %d\", array_count);\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":35,"deletions":29,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -95,0 +95,3 @@\n+  void add_to_global_list();\n+  void remove_from_global_list();\n+\n","filename":"src\/hotspot\/share\/runtime\/mutex.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-            Pattern.compile(\".*VM Mutex\/Monitor currently owned by a thread:.*\"),\n+            Pattern.compile(\".*VM Mutexes\/Monitors currently owned by a thread:.*\"),\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/TestErrorFileMutex.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}