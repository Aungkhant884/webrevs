{"files":[{"patch":"@@ -159,7 +159,1 @@\n-enum G1Mark {\n-  G1MarkNone,\n-  G1MarkFromRoot,\n-  G1MarkPromotedFromRoot\n-};\n-\n-template <G1Barrier barrier, G1Mark do_mark_object>\n+template <G1Barrier barrier, bool should_mark>\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-template <G1Barrier barrier, G1Mark do_mark_object>\n+template <G1Barrier barrier, bool should_mark>\n@@ -220,1 +220,1 @@\n-void G1ParCopyClosure<barrier, do_mark_object>::do_oop_work(T* p) {\n+void G1ParCopyClosure<barrier, should_mark>::do_oop_work(T* p) {\n@@ -253,3 +253,4 @@\n-    \/\/ The object is not in collection set. If we're a root scanning\n-    \/\/ closure during a concurrent start pause then attempt to mark the object.\n-    if (do_mark_object == G1MarkFromRoot) {\n+    \/\/ The object is not in the collection set. should_mark is true iff the\n+    \/\/ current closure is applied on strong roots (and weak roots when class\n+    \/\/ unloading is disabled) in a concurrent mark start pause.\n+    if (should_mark) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-  G1SharedClosures<G1MarkNone> _closures;\n+  G1SharedClosures<false> _closures;\n@@ -53,1 +53,1 @@\n-template <G1Mark MarkWeak>\n+template <bool should_mark_weak>\n@@ -55,2 +55,2 @@\n-  G1SharedClosures<G1MarkFromRoot> _strong;\n-  G1SharedClosures<MarkWeak>       _weak;\n+  G1SharedClosures<true>             _strong;\n+  G1SharedClosures<should_mark_weak> _weak;\n@@ -78,1 +78,1 @@\n-      res = new G1ConcurrentStartMarkClosures<G1MarkPromotedFromRoot>(g1h, pss);\n+      res = new G1ConcurrentStartMarkClosures<false>(g1h, pss);\n@@ -80,1 +80,1 @@\n-      res = new G1ConcurrentStartMarkClosures<G1MarkFromRoot>(g1h, pss);\n+      res = new G1ConcurrentStartMarkClosures<true>(g1h, pss);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RootClosures.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-template <G1Mark Mark>\n+template <bool should_mark>\n@@ -35,5 +35,0 @@\n-  static bool needs_strong_processing() {\n-    \/\/ Request strong code root processing when G1MarkFromRoot is passed in during\n-    \/\/ concurrent start.\n-    return Mark == G1MarkFromRoot;\n-  }\n@@ -41,2 +36,2 @@\n-  G1ParCopyClosure<G1BarrierNone, Mark> _oops;\n-  G1ParCopyClosure<G1BarrierCLD,  Mark> _oops_in_cld;\n+  G1ParCopyClosure<G1BarrierNone, should_mark> _oops;\n+  G1ParCopyClosure<G1BarrierCLD,  should_mark> _oops_in_cld;\n@@ -50,1 +45,1 @@\n-  G1ParCopyClosure<G1BarrierNoOptRoots, Mark> _oops_in_nmethod;\n+  G1ParCopyClosure<G1BarrierNoOptRoots, should_mark> _oops_in_nmethod;\n@@ -60,1 +55,1 @@\n-    _codeblobs(pss->worker_id(), &_oops_in_nmethod, needs_strong_processing()) {}\n+    _codeblobs(pss->worker_id(), &_oops_in_nmethod, should_mark) {}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SharedClosures.hpp","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"}]}