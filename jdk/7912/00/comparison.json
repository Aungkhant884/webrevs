{"files":[{"patch":"@@ -54,1 +54,0 @@\n-import jdk.internal.agent.spi.AgentProvider;\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/Agent.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1,76 +0,0 @@\n-\/*\n- * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.internal.agent.spi;\n-\n-import java.util.Properties;\n-\n-\/**\n- * Service interface for management agent\n- *\/\n-public abstract class AgentProvider {\n-\n-    \/**\n-     * Instantiates a new AgentProvider.\n-     *\/\n-    protected AgentProvider() {\n-    }\n-\n-    \/**\n-     * Gets the name of the agent provider.\n-     *\n-     * @return name of agent provider\n-     *\/\n-    public abstract String getName();\n-\n-    \/**\n-     * Initializes and starts the agent.\n-     *\n-     * @throws IllegalStateException if this agent has already been started.\n-     *\/\n-    public abstract void startAgent();\n-\n-    \/**\n-     * Initializes and starts the agent at given port and with given properties\n-     *\n-     * @param props environment variables for agent\n-     *\n-     * @throws IllegalStateException if this agent has already been started.\n-     *\/\n-    public abstract void startAgent(Properties props);\n-\n-    \/**\n-     * Checks if agent is started and not terminated.\n-     *\n-     * @return true if agent is running, false otherwise.\n-     *\/\n-    public abstract boolean isActive();\n-\n-    \/**\n-     * Stops this agent.\n-     *\n-     * @throws IllegalStateException if this agent is not started.\n-     *\/\n-    public abstract void stopAgent();\n-}\n","filename":"src\/jdk.management.agent\/share\/classes\/jdk\/internal\/agent\/spi\/AgentProvider.java","additions":0,"deletions":76,"binary":false,"changes":76,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,0 @@\n-\n-    uses jdk.internal.agent.spi.AgentProvider;\n","filename":"src\/jdk.management.agent\/share\/classes\/module-info.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}