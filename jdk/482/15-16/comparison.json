{"files":[{"patch":"@@ -51,0 +51,2 @@\n+ * Only the {@link HexFormat#isUpperCase() HexFormat.isUpperCase()} parameter is\n+ * considered; the delimiter, prefix and suffix are not used.\n@@ -59,1 +61,2 @@\n- * {@code 0-15}.\n+ * {@code 0-15}. The delimiter, prefix, suffix, and uppercase parameters are not used.\n+ *\n@@ -649,20 +652,0 @@\n-    \/**\n-     * Returns the two hexadecimal characters for the {@code byte} value.\n-     * Each nibble (4 bits) from most significant to least significant of the value\n-     * is formatted as if by {@link #toLowHexDigit(int) toLowHexDigit(nibble)}.\n-     * The delimiter, prefix and suffix are not used.\n-     *\n-     * @param value a byte value\n-     * @return the two hexadecimal characters for the byte value\n-     *\/\n-    public String toHexDigits(byte value) {\n-        byte[] rep = new byte[2];\n-        rep[0] = (byte)toHighHexDigit(value);\n-        rep[1] = (byte)toLowHexDigit(value);\n-        try {\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n-    }\n-\n@@ -674,1 +657,1 @@\n-     * {@link Appendable} methods.\n+     * {@link Appendable} methods. The delimiter, prefix and suffix are not used.\n@@ -693,0 +676,20 @@\n+    \/**\n+     * Returns the two hexadecimal characters for the {@code byte} value.\n+     * Each nibble (4 bits) from most significant to least significant of the value\n+     * is formatted as if by {@link #toLowHexDigit(int) toLowHexDigit(nibble)}.\n+     * The delimiter, prefix and suffix are not used.\n+     *\n+     * @param value a byte value\n+     * @return the two hexadecimal characters for the byte value\n+     *\/\n+    public String toHexDigits(byte value) {\n+        byte[] rep = new byte[2];\n+        rep[0] = (byte)toHighHexDigit(value);\n+        rep[1] = (byte)toLowHexDigit(value);\n+        try {\n+            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n+        } catch (CharacterCodingException cce) {\n+            throw new AssertionError(cce);\n+        }\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/util\/HexFormat.java","additions":25,"deletions":22,"binary":false,"changes":47,"status":"modified"}]}