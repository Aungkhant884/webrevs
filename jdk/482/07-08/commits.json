[{"commit":{"message":"The HexFormat API indexing model for array and string ranges is changed\nto describe the range using 'fromIndex (inclusive)' and 'toIndex (exclusive)'.\n\nInitially, it was specified as 'index' and 'length'. However, both byte arrays\nand strings used in the HexFormat API typically use fromIndex and toIndex\nto describe ranges.  Using the same indexing model can prevent mistakes.\n\nThe change affects the methods and corresponding tests:\n\n    formatHex(byte[] bytes, int fromIndex, int toIndex)\n    formatHex(A out, byte[] bytes, int fromIndex, int toIndex)\n    parseHex(char[] chars, int fromIndex, int toIndex)\n    parseHex(CharSequence string, int fromIndex, int toIndex)\n    fromHexDigits(CharSequence string, int fromIndex, int toIndex)\n    fromHexDigitsToLong(CharSequence string, int fromIndex, int toIndex)"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/HexFormat.java"},{"filename":"test\/jdk\/java\/util\/HexFormat\/HexFormatTest.java"}],"sha":"2aeab7d75f269047bdc1b806e55c7e68527b2764"},{"commit":{"message":"- Added @see and @link references to Integer.toHexString and Long.toHexString\n- Clarified parsing is case insensistive in various parse and fromXXX methods\n- Source level cleanup based on review comments\n- Expanded some javadoc tag text to make it more descriptive\n- Consistent use of 'hexadecimal' vs 'hex'"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Integer.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Long.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/HexFormat.java"}],"sha":"94e6061a11f4b47366a357a83366ddc99aec4fbf"}]