{"files":[{"patch":"@@ -26,1 +26,0 @@\n- * @key headful\n@@ -28,1 +27,1 @@\n- * @run main\/othervm -Dawt.useSystemAAFontSettings=off -Dsun.java2d.uiScale=1.0 NimbusJTreeSelTextColor\n+ * @run main\/othervm -Dawt.useSystemAAFontSettings=off NimbusJTreeSelTextColor\n@@ -32,2 +31,2 @@\n-import java.awt.Rectangle;\n-import java.awt.Robot;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n@@ -38,1 +37,0 @@\n-import javax.swing.JComponent;\n@@ -45,0 +43,2 @@\n+import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n+\n@@ -47,2 +47,3 @@\n-    private static JFrame frame;\n-    private static JTree tree;\n+    private static int iconOffset;\n+    private static Color foregroundColor;\n+    private static Color backgroundColor;\n@@ -50,4 +51,1 @@\n-    private static volatile Rectangle treeBounds;\n-    private static volatile int iconOffset;\n-    private static volatile Color foregroundColor;\n-    private static volatile Color backgroundColor;\n+    private static volatile Exception testFailed;\n@@ -58,16 +56,9 @@\n-        try {\n-            SwingUtilities.invokeAndWait(NimbusJTreeSelTextColor::createUI);\n-\n-            Robot robot = new Robot();\n-            robot.waitForIdle();\n-            robot.delay(500);\n-\n-            SwingUtilities.invokeAndWait(NimbusJTreeSelTextColor::getTreeBounds);\n-            treeBounds.height \/= 4; \/\/ height of one row\n-            treeBounds.x += iconOffset;\n-            treeBounds.width -= iconOffset;\n-            treeBounds.width -= 2; \/\/ crop selection border on the right\n-            BufferedImage image = robot.createScreenCapture(treeBounds);\n-            checkColors(image);\n-        } finally {\n-            SwingUtilities.invokeAndWait(frame::dispose);\n+        final boolean showFrame = args.length >= 1 && args[0].equals(\"-show\");\n+\n+        \/\/ Disable text antialiasing\n+        System.setProperty(\"awt.useSystemAAFontSettings\", \"off\");\n+\n+        SwingUtilities.invokeAndWait(() -> runTest(showFrame));\n+\n+        if (testFailed != null) {\n+            throw testFailed;\n@@ -77,1 +68,1 @@\n-    private static void createUI() {\n+    private static void runTest(final boolean showFrame) {\n@@ -84,1 +75,22 @@\n-        frame = new JFrame(\"Nimbus Tree selected color\");\n+        final JTree tree = createTree();\n+        Dimension size = tree.getPreferredSize();\n+        tree.setSize(size);\n+\n+        BufferedImage im = new BufferedImage(size.width, size.height,\n+                                             TYPE_INT_RGB);\n+        Graphics g = im.getGraphics();\n+        tree.paint(g);\n+        g.dispose();\n+\n+        if (showFrame) {\n+            showFrame(tree);\n+        }\n+\n+        size.height \/= 4; \/\/ height of one row\n+        size.width -= iconOffset;\n+        size.width -= 2; \/\/ crop selection border on the right\n+        checkColors(im, iconOffset, size.height \/ 2, size.width);\n+    }\n+\n+    private static void showFrame(final JTree tree) {\n+        JFrame frame = new JFrame(\"Nimbus Tree selected color\");\n@@ -87,1 +99,1 @@\n-        frame.getContentPane().add(createTree());\n+        frame.getContentPane().add(tree);\n@@ -94,2 +106,4 @@\n-    private static void checkColors(final BufferedImage image) throws IOException {\n-        final int y = treeBounds.height \/ 2;\n+    private static void checkColors(final BufferedImage image,\n+                                    final int iconOffset,\n+                                    final int y,\n+                                    final int width) {\n@@ -99,1 +113,1 @@\n-        for (int x = 0; x < treeBounds.width; x++) {\n+        for (int x = iconOffset; x < width; x++) {\n@@ -102,2 +116,1 @@\n-                save(image);\n-                throw new RuntimeException(\n+                testFailed = new RuntimeException(\n@@ -109,0 +122,1 @@\n+                save(image);\n@@ -113,8 +127,1 @@\n-    private static void getTreeBounds() {\n-        treeBounds = new Rectangle(tree.getLocationOnScreen(),\n-                                   tree.getSize());\n-    }\n-\n-    private static JComponent createTree() {\n-        tree = new JTree();\n-\n+    private static JTree createTree() {\n@@ -127,0 +134,1 @@\n+        JTree tree = new JTree();\n@@ -134,2 +142,6 @@\n-    private static void save(final BufferedImage img) throws IOException {\n-        ImageIO.write(img, \"png\", new File(FILENAME));\n+    private static void save(final BufferedImage img) {\n+        try {\n+            ImageIO.write(img, \"png\", new File(FILENAME));\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/NimbusJTreeSelTextColor.java","additions":57,"deletions":45,"binary":false,"changes":102,"status":"modified"}]}