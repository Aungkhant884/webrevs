{"files":[{"patch":"@@ -25,3 +25,3 @@\n- * @bug 8266510 8271315\n- * @summary  Verifies Nimbus JTree default tree cell renderer use selected text color\n- * @run main\/manual NimbusJTreeSelTextColor\n+ * @bug 8266510 8271315 8273043\n+ * @summary  Verifies Nimbus JTree default tree cell renderer uses selected text color\n+ * @run main\/othervm -Dawt.useSystemAAFontSettings=off NimbusJTreeSelTextColor\n@@ -29,2 +29,1 @@\n-import java.util.concurrent.CountDownLatch;\n-import java.util.concurrent.TimeUnit;\n+\n@@ -32,9 +31,6 @@\n-import java.awt.GridBagLayout;\n-import java.awt.Insets;\n-import java.awt.GridBagConstraints;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.WindowAdapter;\n-import java.awt.event.WindowEvent;\n-import javax.swing.JButton;\n-import javax.swing.JComponent;\n+import java.awt.Dimension;\n+import java.awt.Graphics;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import javax.imageio.ImageIO;\n@@ -42,2 +38,0 @@\n-import javax.swing.JPanel;\n-import javax.swing.JTextArea;\n@@ -46,1 +40,0 @@\n-import javax.swing.tree.DefaultTreeCellRenderer;\n@@ -48,0 +41,3 @@\n+import javax.swing.tree.DefaultTreeCellRenderer;\n+\n+import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n@@ -51,5 +47,5 @@\n-    private static JFrame frame;\n-    private static JTree tree;\n-    private static DefaultTreeCellRenderer treeCellRenderer;\n-    private static volatile CountDownLatch countDownLatch;\n-    private static volatile boolean testResult;\n+    private static int iconOffset;\n+    private static Color foregroundColor;\n+    private static Color backgroundColor;\n+\n+    private static volatile Exception testFailed;\n@@ -57,4 +53,1 @@\n-    private static final String INSTRUCTIONS = \"INSTRUCTIONS:\\n\\n\"\n-            + \"Verify selected text color is same as selected tree leaf icon color.\\n \"\n-            + \"If the color is same ie, white\\n\"\n-            + \"then press Pass otherwise press Fail.\";\n+    private static final String FILENAME = \"image.png\";\n@@ -62,2 +55,2 @@\n-    public static void main(String args[]) throws Exception{\n-        countDownLatch = new CountDownLatch(1);\n+    public static void main(String[] args) throws Exception {\n+        final boolean showFrame = args.length >= 1 && args[0].equals(\"-show\");\n@@ -65,2 +58,2 @@\n-        SwingUtilities.invokeAndWait(NimbusJTreeSelTextColor::createUI);\n-        countDownLatch.await(5, TimeUnit.MINUTES);\n+        \/\/ Disable text antialiasing\n+        System.setProperty(\"awt.useSystemAAFontSettings\", \"off\");\n@@ -68,2 +61,4 @@\n-        if (!testResult) {\n-            throw new RuntimeException(\"Selected text color not same as selected tree leaf icon color!\");\n+        SwingUtilities.invokeAndWait(() -> runTest(showFrame));\n+\n+        if (testFailed != null) {\n+            throw testFailed;\n@@ -73,1 +68,1 @@\n-    private static void createUI() {\n+    private static void runTest(final boolean showFrame) {\n@@ -80,41 +75,3 @@\n-        JFrame mainFrame = new JFrame();\n-        GridBagLayout layout = new GridBagLayout();\n-        JPanel mainControlPanel = new JPanel(layout);\n-        JPanel resultButtonPanel = new JPanel(layout);\n-\n-        GridBagConstraints gbc = new GridBagConstraints();\n-\n-        gbc.gridx = 0;\n-        gbc.gridy = 0;\n-        gbc.insets = new Insets(5, 15, 5, 15);\n-        gbc.fill = GridBagConstraints.HORIZONTAL;\n-        mainControlPanel.add(createComponent(), gbc);\n-\n-        JTextArea instructionTextArea = new JTextArea();\n-        instructionTextArea.setText(INSTRUCTIONS);\n-        instructionTextArea.setEditable(false);\n-        instructionTextArea.setBackground(Color.white);\n-\n-        gbc.gridx = 0;\n-        gbc.gridy = 1;\n-        gbc.fill = GridBagConstraints.HORIZONTAL;\n-        mainControlPanel.add(instructionTextArea, gbc);\n-\n-        JButton passButton = new JButton(\"Pass\");\n-        passButton.setActionCommand(\"Pass\");\n-        passButton.addActionListener((ActionEvent e) -> {\n-            testResult = true;\n-            mainFrame.dispose();\n-            countDownLatch.countDown();\n-\n-        });\n-\n-        JButton failButton = new JButton(\"Fail\");\n-        failButton.setActionCommand(\"Fail\");\n-        failButton.addActionListener(new ActionListener() {\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                mainFrame.dispose();\n-                countDownLatch.countDown();\n-            }\n-        });\n+        final JTree tree = createTree();\n+        Dimension size = tree.getPreferredSize();\n+        tree.setSize(size);\n@@ -122,2 +79,5 @@\n-        gbc.gridx = 0;\n-        gbc.gridy = 0;\n+        BufferedImage im = new BufferedImage(size.width, size.height,\n+                                             TYPE_INT_RGB);\n+        Graphics g = im.getGraphics();\n+        tree.paint(g);\n+        g.dispose();\n@@ -125,4 +85,9 @@\n-        resultButtonPanel.add(passButton, gbc);\n-        gbc.gridx = 1;\n-        gbc.gridy = 0;\n-        resultButtonPanel.add(failButton, gbc);\n+        if (showFrame) {\n+            showFrame(tree);\n+        }\n+\n+        size.height \/= 4; \/\/ height of one row\n+        size.width -= iconOffset;\n+        size.width -= 2; \/\/ crop selection border on the right\n+        checkColors(im, iconOffset, size.height \/ 2, size.width);\n+    }\n@@ -130,3 +95,3 @@\n-        gbc.gridx = 0;\n-        gbc.gridy = 2;\n-        mainControlPanel.add(resultButtonPanel, gbc);\n+    private static void showFrame(final JTree tree) {\n+        JFrame frame = new JFrame(\"Nimbus Tree selected color\");\n+        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n@@ -134,2 +99,1 @@\n-        mainFrame.add(mainControlPanel);\n-        mainFrame.pack();\n+        frame.getContentPane().add(tree);\n@@ -137,1 +101,4 @@\n-        mainFrame.addWindowListener(new WindowAdapter() {\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n@@ -139,4 +106,17 @@\n-            @Override\n-            public void windowClosing(WindowEvent e) {\n-                mainFrame.dispose();\n-                countDownLatch.countDown();\n+    private static void checkColors(final BufferedImage image,\n+                                    final int iconOffset,\n+                                    final int y,\n+                                    final int width) {\n+        final int foreground = foregroundColor.getRGB();\n+        final int background = backgroundColor.getRGB();\n+\n+        for (int x = iconOffset; x < width; x++) {\n+            int rgb = image.getRGB(x, y);\n+            if (rgb != foreground && rgb != background) {\n+                testFailed = new RuntimeException(\n+                        \"Unexpected color found: \" + Integer.toHexString(rgb)\n+                        + \" at (\" + x + \", \" + y + \");\"\n+                        + \" foreground: \" + Integer.toHexString(foreground) + \";\"\n+                        + \" background: \" + Integer.toHexString(background)\n+                        + \" - check \" + FILENAME);\n+                save(image);\n@@ -144,3 +124,1 @@\n-        });\n-        mainFrame.setLocationRelativeTo(null);\n-        mainFrame.setVisible(true);\n+        }\n@@ -149,2 +127,6 @@\n-    private static JComponent createComponent() {\n-        tree = new JTree();\n+    private static JTree createTree() {\n+        DefaultTreeCellRenderer cellRenderer = new DefaultTreeCellRenderer();\n+        iconOffset = cellRenderer.getOpenIcon().getIconWidth()\n+                     + cellRenderer.getIconTextGap();\n+        foregroundColor = (Color) UIManager.get(\"Tree.selectionForeground\");\n+        backgroundColor = (Color) UIManager.get(\"Tree.selectionBackground\");\n@@ -152,1 +134,1 @@\n-        treeCellRenderer =  new DefaultTreeCellRenderer();\n+        JTree tree = new JTree();\n@@ -154,4 +136,3 @@\n-        tree.setShowsRootHandles(true);\n-\n-        tree.setCellRenderer(treeCellRenderer);\n-        tree.setSelectionRow(1);\n+        tree.setShowsRootHandles(false);\n+        tree.setCellRenderer(cellRenderer);\n+        tree.setSelectionRow(0);\n@@ -160,1 +141,0 @@\n-}\n@@ -162,0 +142,9 @@\n+    private static void save(final BufferedImage img) {\n+        try {\n+            ImageIO.write(img, \"png\", new File(FILENAME));\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/NimbusJTreeSelTextColor.java","additions":90,"deletions":101,"binary":false,"changes":191,"status":"modified"}]}