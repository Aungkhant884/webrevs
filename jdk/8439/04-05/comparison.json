{"files":[{"patch":"@@ -291,1 +291,1 @@\n-     * Visits a {@code SpecTree} node.\n+     * Visits a {@code SnippetTree} node.\n@@ -293,1 +293,1 @@\n-     * @implSpec Visits the provided {@code SpecTree} node\n+     * @implSpec Visits the provided {@code SnippetTree} node\n@@ -299,2 +299,1 @@\n-     *\n-     * @since 19\n+     * @since 18\n@@ -302,1 +301,1 @@\n-    default R visitSpec(SpecTree node, P p) {\n+    default R visitSnippet(SnippetTree node, P p) {\n@@ -307,1 +306,1 @@\n-     * Visits a {@code SnippetTree} node.\n+     * Visits a {@code SpecTree} node.\n@@ -309,1 +308,1 @@\n-     * @implSpec Visits the provided {@code SnippetTree} node\n+     * @implSpec Visits the provided {@code SpecTree} node\n@@ -315,1 +314,2 @@\n-     * @since 18\n+     *\n+     * @since 20\n@@ -317,1 +317,1 @@\n-    default R visitSnippet(SnippetTree node, P p) {\n+    default R visitSpec(SpecTree node, P p) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/doctree\/DocTreeVisitor.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- *    &#064;spec uri title\n+ *    &#064;spec url title\n@@ -37,1 +37,1 @@\n- * @since 19\n+ * @since 20\n@@ -41,1 +41,1 @@\n-     * {@return the URI}\n+     * {@return the URL}\n@@ -43,1 +43,1 @@\n-    TextTree getURI();\n+    TextTree getURL();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/doctree\/SpecTree.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -342,1 +342,1 @@\n-     * @param uri    the uri\n+     * @param url    the url\n@@ -345,1 +345,1 @@\n-     * @since 19\n+     * @since 20\n@@ -347,1 +347,1 @@\n-    SpecTree newSpecTree(TextTree uri, List<? extends DocTree> title);\n+    SpecTree newSpecTree(TextTree url, List<? extends DocTree> title);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/util\/DocTreeFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -515,0 +515,2 @@\n+     * @implSpec This implementation scans the children in left to right order.\n+     *\n@@ -517,1 +519,0 @@\n-     *\n@@ -519,4 +520,1 @@\n-     *\n-     * @implSpec This implementation scans the children in left to right order.\n-     *\n-     * @since 19\n+     * @since 20\n@@ -526,1 +524,1 @@\n-        R r = scan(node.getURI(), p);\n+        R r = scan(node.getURL(), p);\n@@ -532,1 +530,3 @@\n-     * {@inheritDoc} This implementation scans the children in left to right order.\n+     * {@inheritDoc}\n+     *\n+     * @implSpec This implementation scans the children in left to right order.\n@@ -544,1 +544,3 @@\n-     * {@inheritDoc} This implementation scans the children in left to right order.\n+     * {@inheritDoc}\n+     *\n+     * @implSpec This implementation scans the children in left to right order.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/source\/util\/DocTreeScanner.java","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1535,1 +1535,1 @@\n-                        throw new ParseException(\"dc.no.uri\");\n+                        throw new ParseException(\"dc.no.url\");\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/DocCommentParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3351,2 +3351,2 @@\n-compiler.err.dc.no.uri=\\\n-    no URI\n+compiler.err.dc.no.url=\\\n+    no URL\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1115,1 +1115,1 @@\n-        public TextTree getURI() {\n+        public TextTree getURL() {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/DCTree.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -512,1 +512,1 @@\n-            print(node.getURI());\n+            print(node.getURL());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/DocPretty.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,1 +93,0 @@\n-import com.sun.tools.javac.util.DiagnosticSource;\n@@ -95,1 +94,0 @@\n-import com.sun.tools.javac.util.JCDiagnostic.DiagnosticPosition;\n@@ -128,1 +126,1 @@\n-    public int pos = Position.NOPOS;\n+    public int pos;\n@@ -242,1 +240,1 @@\n-        DCDocComment tree = new DCDocComment(c, fBody, pair.fst, pair.snd, cast(tags),\n+        return new DCDocComment(c, fBody, pair.fst, pair.snd, cast(tags),\n@@ -244,1 +242,0 @@\n-        return tree;\n@@ -419,2 +416,2 @@\n-    public DCSpec newSpecTree(TextTree url, List<? extends DocTree> title) {\n-        DCSpec tree = new DCSpec((DCText) url, cast(title));\n+    public DCSnippet newSnippetTree(List<? extends DocTree> attributes, TextTree text) {\n+        DCSnippet tree = new DCSnippet(cast(attributes), (DCText) text);\n@@ -426,2 +423,2 @@\n-    public DCSnippet newSnippetTree(List<? extends DocTree> attributes, TextTree text) {\n-        DCSnippet tree = new DCSnippet(cast(attributes), (DCText) text);\n+    public DCSpec newSpecTree(TextTree url, List<? extends DocTree> title) {\n+        DCSpec tree = new DCSpec((DCText) url, cast(title));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/DocTreeMaker.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -67,5 +67,0 @@\n- *\n- *  <p><b>This is NOT part of any supported API.\n- *  If you write code that depends on this, you do so at your own risk.\n- *  This code and its internal interfaces are subject to change or\n- *  deletion without notice.<\/b>\n@@ -137,1 +132,1 @@\n-                String url = st.getURI().toString();\n+                String url = st.getURL().toString();\n@@ -294,1 +289,1 @@\n-            specURI = new URI(specTree.getURI().getBody());\n+            specURI = new URI(specTree.getURL().getBody());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ExternalSpecsWriter.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -520,1 +520,1 @@\n-        String specTreeURI = specTree.getURI().getBody();\n+        String specTreeURL = specTree.getURL().getBody();\n@@ -523,1 +523,1 @@\n-        return getExternalSpecContent(holder, specTree, specTreeURI, textOf(specTreeLabel), label);\n+        return getExternalSpecContent(holder, specTree, specTreeURL, textOf(specTreeLabel), label);\n@@ -526,1 +526,1 @@\n-    Content getExternalSpecContent(Element holder, DocTree docTree, String uri, String searchText, Content title) {\n+    Content getExternalSpecContent(Element holder, DocTree docTree, String url, String searchText, Content title) {\n@@ -530,1 +530,1 @@\n-            specURI = new URI(uri);\n+            specURI = new URI(url);\n@@ -534,1 +534,1 @@\n-            htmlWriter.messages.error(dtp, \"doclet.Invalid_URI\", e.getMessage());\n+            htmlWriter.messages.error(dtp, \"doclet.Invalid_URL\", e.getMessage());\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -692,4 +692,4 @@\n-doclet.usage.spec-base-uri=\\\n-    <URI>\n-doclet.usage.spec-base-uri.description=\\\n-    Specify a base URI for relative URIs in @spec tags\n+doclet.usage.spec-base-urL=\\\n+    <URL>\n+doclet.usage.spec-base-url.description=\\\n+    Specify a base URL for relative URLs in @spec tags\n@@ -697,2 +697,2 @@\n-doclet.Invalid_URI=\\\n-    invalid URI: {0}\n+doclet.Invalid_URL=\\\n+    invalid URL: {0}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -302,2 +302,2 @@\n-     * Argument for command-line option {@code --spec-base-URI}.\n-     * The base URI for relative URIs in {@code @spec} tags.\n+     * Argument for command-line option {@code --spec-base-url}.\n+     * The base URL for relative URLs in {@code @spec} tags.\n@@ -677,21 +677,1 @@\n-                new Option(resources, \"--spec-base-uri\", 1) {\n-                    @Override\n-                    public boolean process(String opt, List<String> args) {\n-                        String arg = args.get(0);\n-                        try {\n-                            if (!arg.endsWith(\"\/\")) {\n-                                \/\/ to ensure that URI.resolve works as expected\n-                                arg += \"\/\";\n-                            }\n-                            specBaseURI = new URI(arg);\n-                            return true;\n-                        } catch (URISyntaxException e) {\n-                            config.reporter.print(ERROR,\n-                                    config.getDocResources().getText(\"doclet.Invalid_URI\",\n-                                            e.getMessage()));\n-                            return false;\n-                        }\n-                    }\n-                },\n-\n-                new Option(resources, \"--spec-base-uri\", 1) {\n+                new Option(resources, \"--spec-base-url\", 1) {\n@@ -710,1 +690,1 @@\n-                                    config.getDocResources().getText(\"doclet.Invalid_URI\",\n+                                    config.getDocResources().getText(\"doclet.Invalid_URL\",\n@@ -1098,1 +1078,1 @@\n-     * Argument for command-line option {@code --spec-base-URI}.\n+     * Argument for command-line option {@code --spec-base-url}.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":5,"deletions":25,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -43,5 +43,0 @@\n- *\n- *  <p><b>This is NOT part of any supported API.\n- *  If you write code that depends on this, you do so at your own risk.\n- *  This code and its internal interfaces are subject to change or\n- *  deletion without notice.<\/b>\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SpecTaglet.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-                \"--spec-base-uri\", \"http:\/\/[\",\n+                \"--spec-base-url\", \"http:\/\/[\",\n@@ -63,1 +63,1 @@\n-                \"error: invalid URI: Expected closing bracket for IPv6 address at index 8: http:\/\/[\");\n+                \"error: invalid URL: Expected closing bracket for IPv6 address at index 8: http:\/\/[\");\n@@ -78,1 +78,1 @@\n-                    + \" error: invalid URI: Expected closing bracket for IPv6 address at index 8: http:\/\/[\");\n+                    + \" error: invalid URL: Expected closing bracket for IPv6 address at index 8: http:\/\/[\");\n@@ -388,1 +388,1 @@\n-                \"--spec-base-uri\", \"http:\/\/example.com\/\",\n+                \"--spec-base-url\", \"http:\/\/example.com\/\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSpecTag\/TestSpecTag.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    List<String> MISSING_IN_MAN_PAGE = List.of(\"--date\", \"--spec-base-uri\");\n+    List<String> MISSING_IN_MAN_PAGE = List.of(\"--date\", \"--spec-base-url\");\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckManPageOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/NoTitle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,32 +0,0 @@\n-\/*\n- * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/\/ key: compiler.err.dc.no.uri\n-\/\/ key: compiler.note.note\n-\/\/ key: compiler.note.proc.messager\n-\/\/ run: backdoor\n-\/\/ options: -processor DocCommentProcessor -proc:only\n-\n-\/** @spec *\/\n-class NoURI { }\n-\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/NoURI.java","additions":0,"deletions":32,"binary":false,"changes":32,"status":"deleted"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ key: compiler.err.dc.no.url\n+\/\/ key: compiler.note.note\n+\/\/ key: compiler.note.proc.messager\n+\/\/ run: backdoor\n+\/\/ options: -processor DocCommentProcessor -proc:only\n+\n+\/** @spec *\/\n+class NoURL { }\n+\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/NoURL.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -606,1 +606,1 @@\n-                print(\"uri\", node.getURI());\n+                print(\"url\", node.getURL());\n","filename":"test\/langtools\/tools\/javac\/doctree\/DocCommentTester.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-      uri:\n+      url:\n@@ -62,1 +62,1 @@\n-    void bad_no_uri() {}\n+    void bad_no_url() {}\n@@ -70,1 +70,1 @@\n-      code: compiler.err.dc.no.uri\n+      code: compiler.err.dc.no.url\n","filename":"test\/langtools\/tools\/javac\/doctree\/SpecTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}