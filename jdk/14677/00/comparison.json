{"files":[{"patch":"@@ -2979,0 +2979,4 @@\n+void LIR_Assembler::membar_volatile() {\n+  __ membar(Assembler::StoreLoad);\n+}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/c1_LIRAssembler_aarch64.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2700,0 +2700,4 @@\n+void LIR_Assembler::membar_volatile() {\n+  __ membar(MacroAssembler::StoreLoad, Rtemp);\n+}\n+\n","filename":"src\/hotspot\/cpu\/arm\/c1_LIRAssembler_arm.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2913,0 +2913,4 @@\n+void LIR_Assembler::membar_volatile() {\n+  __ membar(Assembler::StoreLoad);\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1921,0 +1921,4 @@\n+void LIR_Assembler::membar_volatile() {\n+  __ membar(MacroAssembler::StoreLoad);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2889,0 +2889,4 @@\n+void LIR_Assembler::membar_volatile() {\n+  __ z_fence();\n+}\n+\n","filename":"src\/hotspot\/cpu\/s390\/c1_LIRAssembler_s390.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4003,0 +4003,4 @@\n+void LIR_Assembler::membar_volatile() {\n+  __ membar( Assembler::Membar_mask_bits(Assembler::StoreLoad));\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/c1_LIRAssembler_x86.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -876,0 +876,1 @@\n+  case lir_membar_volatile  : output()->print(\"membar_volatile\"); break;\n","filename":"src\/hotspot\/share\/c1\/c1_InstructionPrinter.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -406,0 +406,1 @@\n+    case lir_membar_volatile:          \/\/ result and info always invalid\n@@ -1698,0 +1699,1 @@\n+     case lir_membar_volatile:       s = \"membar_volatile\"; break;\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -921,0 +921,1 @@\n+      , lir_membar_volatile\n@@ -2184,0 +2185,1 @@\n+  void membar_volatile()                         { append(new LIR_Op0(lir_membar_volatile)); }\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -652,0 +652,4 @@\n+    case lir_membar_volatile:\n+      membar_volatile();\n+      break;\n+\n","filename":"src\/hotspot\/share\/c1\/c1_LIRAssembler.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -249,0 +249,1 @@\n+  void membar_volatile();\n","filename":"src\/hotspot\/share\/c1\/c1_LIRAssembler.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -3545,0 +3545,1 @@\n+  case lir_membar_volatile  : __ membar_volatile(); break;\n","filename":"src\/hotspot\/share\/c1\/c1_LIRGenerator.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n-    __ membar();\n+    __ membar_volatile();\n","filename":"src\/hotspot\/share\/gc\/shared\/c1\/barrierSetC1.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}