{"files":[{"patch":"@@ -191,1 +191,1 @@\n-        out.format(\"    \\\"processId\\\": %d,%n\", processId());\n+        out.format(\"    \\\"processId\\\": \\\"%d\\\",%n\", processId());\n@@ -229,1 +229,1 @@\n-            out.format(\"        \\\"owner\\\": %d,%n\", owner.threadId());\n+            out.format(\"        \\\"owner\\\": \\\"%d\\\",%n\", owner.threadId());\n@@ -244,1 +244,1 @@\n-        out.format(\"        \\\"threadCount\\\": %d%n\", threadCount);\n+        out.format(\"        \\\"threadCount\\\": \\\"%d\\\"%n\", threadCount);\n@@ -258,1 +258,1 @@\n-        out.format(\"           \\\"tid\\\": %d,%n\", thread.threadId());\n+        out.format(\"           \\\"tid\\\": \\\"%d\\\",%n\", thread.threadId());\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/ThreadDumper.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -75,1 +75,4 @@\n-        \/\/ test that thread dump contains the id of the current thread\n+        \/\/ test that the process id is this process\n+        assertTrue(threadDump.processId() == ProcessHandle.current().pid());\n+\n+        \/\/ test that the current thread is in the root thread container\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/thread\/ThreadDumpToFileTest.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-import java.util.Objects;\n+import java.time.ZonedDateTime;\n@@ -114,3 +114,2 @@\n-                \/\/ find the thread container that corresponds to the executor\n-                String name = Objects.toIdentityString(executor);\n-                var container = threadDump.findThreadContainer(name).orElseThrow();\n+                \/\/ test threadDump\/processId\n+                assertTrue(threadDump.processId() == ProcessHandle.current().pid());\n@@ -118,2 +117,5 @@\n-                \/\/ virtual thread should be found\n-                container.findThread(vthread.threadId()).orElseThrow();\n+                \/\/ test threadDump\/time can be parsed\n+                ZonedDateTime.parse(threadDump.time());\n+\n+                \/\/ test threadDump\/runtimeVersion\n+                assertEquals(threadDump.runtimeVersion(), Runtime.version().toString());\n@@ -121,1 +123,6 @@\n-                \/\/ if the current thread is a platform thread then will be in root container\n+                \/\/ test root container\n+                var rootContainer = threadDump.rootThreadContainer();\n+                assertFalse(rootContainer.owner().isPresent());\n+                assertFalse(rootContainer.parent().isPresent());\n+\n+                \/\/ if the current thread is a platform thread then it will be in root container\n@@ -124,1 +131,0 @@\n-                    var rootContainer = threadDump.rootThreadContainer();\n@@ -127,0 +133,7 @@\n+\n+                \/\/ find the thread container for the executor\n+                String name = executor.toString();\n+                var container = threadDump.findThreadContainer(name).orElseThrow();\n+                assertFalse(container.owner().isPresent());\n+                assertTrue(container.parent().get() == rootContainer);\n+                container.findThread(vthread.threadId()).orElseThrow();\n","filename":"test\/jdk\/com\/sun\/management\/HotSpotDiagnosticMXBean\/DumpThreads.java","additions":21,"deletions":8,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import java.util.OptionalLong;\n@@ -47,1 +48,1 @@\n- *     \"processId\": 63406,\n+ *     \"processId\": \"63406\",\n@@ -57,1 +58,1 @@\n- *            \"tid\": 1,\n+ *            \"tid\": \"1\",\n@@ -62,1 +63,1 @@\n- *            \"tid\": 8,\n+ *            \"tid\": \"8\",\n@@ -76,1 +77,1 @@\n- *         \"threadCount\": 7\n+ *         \"threadCount\": \"7\"\n@@ -79,1 +80,1 @@\n- *         \"container\": \"ForkJoinPool.commonPool\",\n+ *         \"container\": \"ForkJoinPool.commonPool\\\/jdk.internal.vm.SharedThreadContainer@56aac163\",\n@@ -83,1 +84,8 @@\n- *         \"threadCount\": 1\n+ *         \"threadCount\": \"1\"\n+ *       }\n+ *       {\n+ *         \"container\": \"java.util.concurrent.ThreadPoolExecutor@20322d26\\\/jdk.internal.vm.SharedThreadContainer@184f6be2\",\n+ *         \"parent\": \"<root>\",\n+ *         \"owner\": null,\n+ *         \"threads\": [...],\n+ *         \"threadCount\": \"1\"\n@@ -108,1 +116,1 @@\n-    private final String processId;\n+    private final long processId;\n@@ -118,1 +126,1 @@\n-        private long ownerTid;\n+        private long owner;\n@@ -135,1 +143,1 @@\n-         * Return the thread identifier of the owner thread or {@code null} if not owned.\n+         * Return the thread identifier of the owner or empty OptionalLong if not owned.\n@@ -137,2 +145,2 @@\n-        public long ownerTid() {\n-            return ownerTid;\n+        public OptionalLong owner() {\n+           return (owner != 0) ? OptionalLong.of(owner) : OptionalLong.empty();\n@@ -142,1 +150,1 @@\n-         * Returns the parent thread container or {@code null} if this is the root.\n+         * Returns the parent thread container or empty Optional if this is the root.\n@@ -144,2 +152,2 @@\n-        public ThreadContainer parent() {\n-            return parent;\n+        public Optional<ThreadContainer> parent() {\n+            return Optional.ofNullable(parent);\n@@ -301,1 +309,1 @@\n-                container.ownerTid = Long.parseLong(owner);\n+                container.owner = Long.parseLong(owner);\n@@ -307,2 +315,2 @@\n-                \/\/ add parent to map if not already encountered and add to set of children\n-                var parent = map.computeIfAbsent(parentName,k -> new ThreadContainer(parentName));\n+                \/\/ add parent to map if not already encountered and add to its set of children\n+                var parent = map.computeIfAbsent(parentName, k -> new ThreadContainer(parentName));\n@@ -314,1 +322,1 @@\n-        this.processId = threadDumpObj.get(\"processId\").asString();\n+        this.processId = Long.parseLong(threadDumpObj.get(\"processId\").asString());\n@@ -322,1 +330,1 @@\n-    public String processId() {\n+    public long processId() {\n","filename":"test\/lib\/jdk\/test\/lib\/threaddump\/ThreadDump.java","additions":27,"deletions":19,"binary":false,"changes":46,"status":"modified"}]}