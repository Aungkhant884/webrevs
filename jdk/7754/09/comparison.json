{"files":[{"patch":"@@ -324,0 +324,1 @@\n+        boolean interrupted = false;\n@@ -331,1 +332,1 @@\n-                System.out.println(\"INTERRUPTED while loading Image\");\n+                interrupted = true;\n@@ -333,0 +334,1 @@\n+\n@@ -336,0 +338,4 @@\n+            if (interrupted && ((loadStatus & MediaTracker.LOADING )!= 0)) {\n+                loadStatus = MediaTracker.ABORTED;\n+            }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/ImageIcon.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.MediaTracker;\n+\n+import javax.swing.ImageIcon;\n+import javax.swing.SwingUtilities;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.PrintStream;\n+import java.nio.charset.StandardCharsets;\n+\n+\/*\n+ * @test\n+ * @bug 8236987\n+ * @summary Verifies ImageIcon constructor produces no output when the thread is interrupted\n+ * @run main LoadInterruptTest\n+ *\/\n+\n+public class LoadInterruptTest {\n+    private static ByteArrayOutputStream testOut;\n+    private static PrintStream prevSysOut;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                public void run() {\n+                    loadImageIcon();\n+                }\n+            });\n+        } finally {\n+            unsetOutput();\n+        }\n+    }\n+\n+    public static void setUpOutput() {\n+        prevSysOut = System.out;\n+        testOut = new ByteArrayOutputStream();\n+        System.setOut(new PrintStream(testOut, true, StandardCharsets.UTF_8));\n+    }\n+\n+    public static void unsetOutput() {\n+        if (prevSysOut != null) {\n+            System.setOut(prevSysOut);\n+        }\n+        testOut = null;\n+    }\n+\n+    private static void loadImageIcon() {\n+        setUpOutput();\n+\n+        Thread.currentThread().interrupt();\n+        ImageIcon i = new ImageIcon(\"https:\/\/openjdk.java.net\/images\/openjdk.png\");\n+        int status = i.getImageLoadStatus();\n+        System.out.flush();\n+        String outString = testOut.toString(StandardCharsets.UTF_8);\n+\n+        if (!outString.isEmpty()) {\n+            throw new RuntimeException(\"Test Case Failed!!! System.out is not empty : \" + outString);\n+        }\n+\n+        if ((status != MediaTracker.ABORTED) && (status != MediaTracker.COMPLETE)) {\n+            throw new RuntimeException(\"Test Case Failed!!! Unexpected status : \" + status);\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/ImageIcon\/LoadInterruptTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}