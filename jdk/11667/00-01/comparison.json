{"files":[{"patch":"@@ -138,2 +138,4 @@\n-      \/\/ key should be at beginning of line and next character space\n-      if (key_substr == line && line[key_len] == ' ') {\n+      char after_key = line[key_len];\n+      if (key_substr == line\n+          && isspace(after_key) != 0\n+          && after_key != '\\n') {\n@@ -154,1 +156,2 @@\n-  log_debug(os, container)(\"Type %s not found in file %s\", scan_fmt, absolute_path);\n+  log_debug(os, container)(\"Type %s (key == %s) not found in file %s\", scan_fmt,\n+                           (key == nullptr ? \"null\" : key), absolute_path);\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-                     \"Maximum number of tasks is: %s\", \"%s\", pidsmax, 1024);\n+                     \"Maximum number of tasks is: %s\", \"%1023s\", pidsmax, 1024);\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,6 +104,0 @@\n-int CgroupV2Subsystem::cpu_period() {\n-  GET_CONTAINER_INFO(int, _unified, \"\/cpu.max\",\n-                     \"CPU Period is: %d\", \"%*s %d\", period);\n-  return period;\n-}\n-\n@@ -116,0 +110,6 @@\n+int CgroupV2Subsystem::cpu_period() {\n+  GET_CONTAINER_INFO(int, _unified, \"\/cpu.max\",\n+                     \"CPU Period is: %d\", \"%*s %d\", period);\n+  return period;\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-TEST(CgroupTest, SubSystemFileLineContentsTests) {\n+TEST(cgroupTest, SubSystemFileLineContentsMultipleLines) {\n@@ -88,18 +88,0 @@\n-  fill_file(test_file, \"1337\");\n-  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%d\", &x);\n-  EXPECT_EQ(err, 0);\n-  EXPECT_EQ(x, 1337) << \"Wrong value for x\";\n-\n-  s[0] = '\\0';\n-  fill_file(test_file, \"1337\");\n-  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%s\", &s);\n-  EXPECT_EQ(err, 0);\n-  EXPECT_STREQ(s, \"1337\");\n-\n-  x = -1;\n-  fill_file(test_file, nullptr);\n-  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%d\", &x);\n-  EXPECT_NE(err, 0) << \"Empty file should've failed\";\n-  EXPECT_EQ(x, -1) << \"x was altered\";\n-\n-\n@@ -117,0 +99,6 @@\n+  s[0] = '\\0';\n+  fill_file(test_file, \"foo\\tbar\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, \"foo\", \"%s\", &s);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_STREQ(s, \"bar\") << \"Incorrect!\";\n+\n@@ -133,0 +121,6 @@\n+  s[0] = '\\0';\n+  fill_file(test_file, \"foo\\ttest\\nfoot car\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, \"foo\", \"%s\", &s);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_STREQ(s, \"test\");\n+\n@@ -140,0 +134,36 @@\n+TEST(cgroupTest, SubSystemFileLineContentsSingleLine) {\n+  TestController my_controller{};\n+  const char* test_file = temp_file(\"cgroups\");\n+  int x = 0;\n+  char s[1024];\n+  int err = 0;\n+\n+  fill_file(test_file, \"1337\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%d\", &x);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_EQ(x, 1337) << \"Wrong value for x\";\n+\n+  s[0] = '\\0';\n+  fill_file(test_file, \"1337\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%s\", &s);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_STREQ(s, \"1337\");\n+\n+  x = -1;\n+  fill_file(test_file, nullptr);\n+  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%d\", &x);\n+  EXPECT_NE(err, 0) << \"Empty file should've failed\";\n+  EXPECT_EQ(x, -1) << \"x was altered\";\n+\n+  jlong y;\n+  fill_file(test_file, \"1337\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, JLONG_FORMAT, &y);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_EQ(y, 1337) << \"Wrong value for y\";\n+  julong z;\n+  fill_file(test_file, \"1337\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, JULONG_FORMAT, &z);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_EQ(z, 1337) << \"Wrong value for z\";\n+}\n+\n","filename":"test\/hotspot\/gtest\/os\/linux\/test_cgroupSubsystem_linux.cpp","additions":49,"deletions":19,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-TEST(os_linux_cgroup, set_cgroupv1_subsystem_path) {\n+TEST(cgroupTest, set_cgroupv1_subsystem_path) {\n@@ -63,1 +63,1 @@\n-TEST(os_linux_cgroup, set_cgroupv2_subsystem_path) {\n+TEST(cgroupTest, set_cgroupv2_subsystem_path) {\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_linux_cgroups.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}