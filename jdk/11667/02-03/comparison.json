{"files":[{"patch":"@@ -99,2 +99,1 @@\n-      const char* matchline = \"hierarchical_memory_limit\";\n-      GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"\/memory.stat\", matchline,\n+      GET_CONTAINER_INFO_LINE(julong, _memory->controller(), \"\/memory.stat\", \"hierarchical_memory_limit\",\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-TEST(cgroupTest, SubSystemFileLineContentsMultipleLines) {\n+TEST(cgroupTest, SubSystemFileLineContentsMultipleLinesErrorCases) {\n@@ -88,5 +88,0 @@\n-  fill_file(test_file, \"foo\");\n-  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%s\", &s);\n-  EXPECT_EQ(err, 0);\n-  EXPECT_STREQ(s, \"foo\");\n-\n@@ -94,1 +89,1 @@\n-  fill_file(test_file, \"foo bar\");\n+  fill_file(test_file, \"foo \");\n@@ -96,8 +91,1 @@\n-  EXPECT_EQ(err, 0);\n-  EXPECT_STREQ(s, \"bar\") << \"Incorrect!\";\n-\n-  s[0] = '\\0';\n-  fill_file(test_file, \"foo\\tbar\");\n-  err = subsystem_file_line_contents(&my_controller, test_file, \"foo\", \"%s\", &s);\n-  EXPECT_EQ(err, 0);\n-  EXPECT_STREQ(s, \"bar\") << \"Incorrect!\";\n+  EXPECT_NE(err, 0) << \"Value must not be missing in key\/value case\";\n@@ -114,0 +102,20 @@\n+}\n+\n+TEST(cgroupTest, SubSystemFileLineContentsMultipleLinesSuccessCases) {\n+  TestController my_controller{};\n+  const char* test_file = temp_file(\"cgroups\");\n+  int x = 0;\n+  char s[1024];\n+  int err = 0;\n+\n+  s[0] = '\\0';\n+  fill_file(test_file, \"foo bar\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, \"foo\", \"%s\", &s);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_STREQ(s, \"bar\") << \"Incorrect!\";\n+\n+  s[0] = '\\0';\n+  fill_file(test_file, \"foo\\tbar\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, \"foo\", \"%s\", &s);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_STREQ(s, \"bar\") << \"Incorrect!\";\n@@ -153,0 +161,5 @@\n+  fill_file(test_file, \"foo\");\n+  err = subsystem_file_line_contents(&my_controller, test_file, nullptr, \"%s\", &s);\n+  EXPECT_EQ(err, 0);\n+  EXPECT_STREQ(s, \"foo\");\n+\n","filename":"test\/hotspot\/gtest\/os\/linux\/test_cgroupSubsystem_linux.cpp","additions":28,"deletions":15,"binary":false,"changes":43,"status":"modified"}]}