{"files":[{"patch":"@@ -730,0 +730,1 @@\n+javax\/swing\/JRootPane\/DefaultButtonTest.java 6718771 linux-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,142 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.KeyEvent;\n+import java.lang.reflect.InvocationTargetException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 8280913\n+ * @summary Check whether the default button is honoured when <Enter> key is\n+ * pressed when the focus is on the frame.\n+ * @run main DefaultButtonTest\n+ *\/\n+public class DefaultButtonTest {\n+    static JFrame frame = new JFrame();\n+    static volatile boolean buttonPressed = false;\n+    boolean testFailed = false;\n+    JButton button1;\n+    Robot robot;\n+    private JPanel panel;\n+    private JButton button2;\n+\n+    public static void main(String[] s) throws Exception {\n+        DefaultButtonTest test = new DefaultButtonTest();\n+        try {\n+            test.runTest();\n+        } finally {\n+            if (frame != null) {\n+                frame.dispose();\n+                frame = null;\n+            }\n+        }\n+\n+    }\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private void createUI() {\n+        panel = new JPanel();\n+        panel.setLayout(new FlowLayout());\n+        button1 = new JButton(\"butt1\");\n+        button1.addActionListener(new ActionListener() {\n+            public void actionPerformed(ActionEvent e) {\n+                synchronized (this) {\n+                    buttonPressed = true;\n+                    notifyAll();\n+                }\n+            }\n+        });\n+        panel.add(button1);\n+\n+        button2 = new JButton(\"butt2\");\n+        panel.add(button2);\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.setLayout(new FlowLayout());\n+\n+        frame.add(panel);\n+\n+        frame.setSize(200, 300);\n+        frame.setLocationRelativeTo(null);\n+        frame.getRootPane().setDefaultButton(button1);\n+        frame.setVisible(true);\n+    }\n+\n+    public void runTest() throws InvocationTargetException, InterruptedException {\n+        try {\n+            robot = new Robot();\n+        } catch (Exception e) {\n+            System.err.print(\"Error creating robot\");\n+            e.printStackTrace();\n+            System.exit(1);\n+        }\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            buttonPressed = false;\n+            System.out.println(\"Testing L&F: \" + laf);\n+            try {\n+                SwingUtilities.invokeAndWait(new Runnable() {\n+                    public void run() {\n+                        setLookAndFeel(laf);\n+                        createUI();\n+                        frame.getRootPane().requestFocus();\n+                    }\n+                });\n+            } catch (Exception e) {\n+                e.printStackTrace();\n+            }\n+            robot.waitForIdle();\n+            robot.keyPress(KeyEvent.VK_ENTER);\n+            robot.delay(100);\n+            robot.keyRelease(KeyEvent.VK_ENTER);\n+            robot.waitForIdle();\n+\n+            if (buttonPressed) {\n+                System.out.println(\"Test Passed for laf \" + laf);\n+            } else {\n+                testFailed = true;\n+                System.out.println(\"Test Failed, button not pressed for laf \" + laf);\n+            }\n+        }\n+        if (testFailed) {\n+            throw new RuntimeException(\"Test Failed, button not pressed in one or more LAFs\");\n+        } else {\n+            System.out.println(\"Test Passed for all supported LAFs \");\n+        }\n+    }\n+\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JRootPane\/DefaultButtonTest.java","additions":142,"deletions":0,"binary":false,"changes":142,"status":"added"}]}