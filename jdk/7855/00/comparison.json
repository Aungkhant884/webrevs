{"files":[{"patch":"@@ -1035,0 +1035,6 @@\n+        while (count < len) {\n+            if (sa[sp + count] < 0) {\n+                break;\n+            }\n+            count++;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8283325\n+ * @summary Ensure that decoding to ASCII from a stream with a non-ASCII\n+ *          character correctly decodes up until the byte in error.\n+ *\/\n+\n+import java.nio.*;\n+import java.nio.charset.*;\n+import java.util.Arrays;\n+\n+public class ASCIIDecode {\n+\n+    public static void main(String[] args) throws Exception {\n+        final Charset ascii = Charset.forName(\"US-ASCII\");\n+        final CharsetDecoder decoder = ascii.newDecoder();\n+        byte[] ba = new byte[] { 0x60, 0x60, 0x60, (byte)0xFF };\n+        for (int i = 0; i < 100_000; i++) {\n+            ByteBuffer bb = ByteBuffer.wrap(ba);\n+            char[] ca = new char[4];\n+            CharBuffer cb = CharBuffer.wrap(ca);\n+            CoderResult buf = decoder.decode(bb, cb, true);\n+            if (ca[0] != 0x60 || ca[1] != 0x60 || ca[2] != 0x60) {\n+                throw new RuntimeException(\"Unexpected output on iteration \" + i);\n+            }\n+            Arrays.fill(ca, (char)0);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/nio\/charset\/CharsetDecoder\/ASCIIDecode.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}