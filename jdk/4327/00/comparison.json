{"files":[{"patch":"@@ -266,0 +266,18 @@\n+  \/\/ This class has no virtual functions (except for Metadata and its\n+  \/\/ subtypes). Nevertheless, there are some functions that all subtypes of\n+  \/\/ MetaspaceObj are expected to implement, so that templates which are\n+  \/\/ defined for this class hierarchy can work uniformly.\n+  \/\/\n+  \/\/ The following functions are required by MetaspaceClosure:\n+  \/\/   void metaspace_pointers_do(MetaspaceClosure* it) { <walk my refs> }\n+  \/\/   int size() const { return align_up(sizeof(<This>), wordSize) \/ wordSize; }\n+  \/\/   MetaspaceObj::Type type() const { return <This>Type; }\n+  \/\/\n+  \/\/ The following functions are required by MetadataFactory::free_metadata():\n+  \/\/   bool on_stack() { return false; } \/\/ DEBUG only\n+  \/\/   void deallocate_contents(ClassLoaderData* loader_data);\n+  \/\/\n+  \/\/ Within the sub-hierarchy of Metadata, these are virtuals.\n+  \/\/ Elsewhere in the hierarchy of MetaspaceObj, type() and\/or size() can be static\n+  \/\/ if constant.\n+\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"}]}