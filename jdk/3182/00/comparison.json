{"files":[{"patch":"@@ -1196,1 +1196,1 @@\n-                Throwable th = ex.getTargetException();\n+                Throwable th = ex.getCause();\n@@ -1226,1 +1226,1 @@\n-                Throwable th = ex.getTargetException();\n+                Throwable th = ex.getCause();\n@@ -1257,1 +1257,1 @@\n-                Throwable th = ex.getTargetException();\n+                Throwable th = ex.getCause();\n@@ -1286,1 +1286,1 @@\n-                Throwable th = ex.getTargetException();\n+                Throwable th = ex.getCause();\n@@ -1316,1 +1316,1 @@\n-                Throwable th = ex.getTargetException();\n+                Throwable th = ex.getCause();\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -36,7 +36,0 @@\n- * <p>As of release 1.4, this exception has been retrofitted to conform to\n- * the general purpose exception-chaining mechanism.  The \"exception causing\n- * the abort\" that is provided at construction time and\n- * accessed via the public {@link #detail} field is now known as the\n- * <i>cause<\/i>, and may be accessed via the {@link Throwable#getCause()}\n- * method, as well as the aforementioned \"legacy field.\"\n- *\n@@ -52,3 +45,3 @@\n-     * <p>This field predates the general-purpose exception chaining facility.\n-     * The {@link Throwable#getCause()} method is now the preferred means of\n-     * obtaining this information.\n+     * @deprecated This field predates the general-purpose exception\n+     * chaining facility.  The {@link Throwable#getCause()} method is\n+     * now the preferred means of obtaining this information.\n@@ -58,0 +51,1 @@\n+    @Deprecated(since=\"17\")\n@@ -90,0 +84,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/io\/WriteAbortedException.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -45,7 +45,0 @@\n- * <p>As of release 1.4, this exception has been retrofitted to conform to\n- * the general purpose exception-chaining mechanism.  The \"optional exception\n- * that was raised while loading the class\" that may be provided at\n- * construction time and accessed via the {@link #getException()} method is\n- * now known as the <i>cause<\/i>, and may be accessed via the {@link\n- * Throwable#getCause()} method, as well as the aforementioned \"legacy method.\"\n- *\n@@ -98,1 +91,2 @@\n-     * <p>This method predates the general-purpose exception chaining facility.\n+     * @apiNote\n+     * This method predates the general-purpose exception chaining facility.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassNotFoundException.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -39,7 +39,0 @@\n- * <p>As of release 1.4, this exception has been retrofitted to conform to\n- * the general purpose exception-chaining mechanism.  The \"saved throwable\n- * object\" that may be provided at construction time and accessed via\n- * the {@link #getException()} method is now known as the <i>cause<\/i>,\n- * and may be accessed via the {@link Throwable#getCause()} method, as well\n- * as the aforementioned \"legacy method.\"\n- *\n@@ -95,1 +88,2 @@\n-     * <p>This method predates the general-purpose exception chaining facility.\n+     * @apiNote\n+     * This method predates the general-purpose exception chaining facility.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ExceptionInInitializerError.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -32,7 +32,0 @@\n- * <p>As of release 1.4, this exception has been retrofitted to conform to\n- * the general purpose exception-chaining mechanism.  The \"target exception\"\n- * that is provided at construction time and accessed via the\n- * {@link #getTargetException()} method is now known as the <i>cause<\/i>,\n- * and may be accessed via the {@link Throwable#getCause()} method,\n- * as well as the aforementioned \"legacy method.\"\n- *\n@@ -93,1 +86,2 @@\n-     * <p>This method predates the general-purpose exception chaining facility.\n+     * @apiNote\n+     * This method predates the general-purpose exception chaining facility.\n@@ -110,0 +104,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/InvocationTargetException.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -51,9 +51,0 @@\n- * <p>As of release 1.4, this exception has been retrofitted to\n- * conform to the general purpose exception-chaining mechanism.  The\n- * \"undeclared checked exception that was thrown by the invocation\n- * handler\" that may be provided at construction time and accessed via\n- * the {@link #getUndeclaredThrowable()} method is now known as the\n- * <i>cause<\/i>, and may be accessed via the {@link\n- * Throwable#getCause()} method, as well as the aforementioned \"legacy\n- * method.\"\n- *\n@@ -97,1 +88,2 @@\n-     * <p>This method predates the general-purpose exception chaining facility.\n+     * @apiNote\n+     * This method predates the general-purpose exception chaining facility.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/UndeclaredThrowableException.java","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -45,7 +45,0 @@\n- * <p>As of release 1.4, this exception has been retrofitted to conform to\n- * the general purpose exception-chaining mechanism.  The \"exception thrown\n- * by the privileged computation\" that is provided at construction time and\n- * accessed via the {@link #getException()} method is now known as the\n- * <i>cause<\/i>, and may be accessed via the {@link Throwable#getCause()}\n- * method, as well as the aforementioned \"legacy method.\"\n- *\n@@ -76,1 +69,2 @@\n-     * <p>This method predates the general-purpose exception chaining facility.\n+     * @apiNote\n+     * This method predates the general-purpose exception chaining facility.\n","filename":"src\/java.base\/share\/classes\/java\/security\/PrivilegedActionException.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -3198,1 +3198,1 @@\n-                            assert e.getException() instanceof NoSuchMethodException;\n+                            assert e.getCause() instanceof NoSuchMethodException;\n@@ -3233,1 +3233,1 @@\n-                    throw (IOException) e.getException();\n+                    throw (IOException) e.getCause();\n","filename":"src\/java.base\/share\/classes\/java\/util\/ResourceBundle.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -768,1 +768,1 @@\n-                                       ite.getTargetException().toString()};\n+                                       ite.getCause().toString()};\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/PolicyFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-            throw new CRLException(invk.getTargetException().getMessage());\n+            throw new CRLException(invk.getCause().getMessage());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLExtensions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-            Throwable e = invk.getTargetException();\n+            Throwable e = invk.getCause();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -329,1 +329,1 @@\n-            throw (IOException) ex.getException();\n+            throw (IOException) ex.getCause();\n","filename":"src\/java.base\/unix\/classes\/java\/lang\/ProcessImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -488,1 +488,1 @@\n-                Throwable th = ex.getTargetException();\n+                Throwable th = ex.getCause();\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/EventHandler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -316,1 +316,1 @@\n-                Throwable te = ite.getTargetException();\n+                Throwable te = ite.getCause();\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/Statement.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-            Throwable t = e.getTargetException();\n+            Throwable t = e.getCause();\n@@ -321,1 +321,1 @@\n-            Throwable th = e.getTargetException();\n+            Throwable th = e.getCause();\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/mbeanserver\/MBeanInstantiator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1204,1 +1204,1 @@\n-            Throwable mmbTargEx = ite.getTargetException();\n+            Throwable mmbTargEx = ite.getCause();\n","filename":"src\/java.management\/share\/classes\/javax\/management\/modelmbean\/RequiredModelMBean.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -241,1 +241,1 @@\n-            Throwable realException = e.getTargetException();\n+            Throwable realException = e.getCause();\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Connection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1488,1 +1488,1 @@\n-                Throwable targetException = e.getTargetException();\n+                Throwable targetException = e.getCause();\n","filename":"src\/java.rmi\/share\/classes\/sun\/rmi\/server\/Activation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-                                          e.getTargetException());\n+                                          e.getCause());\n","filename":"src\/java.rmi\/share\/classes\/sun\/rmi\/server\/ActivationGroupImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-            throw e.getTargetException();\n+            throw e.getCause();\n@@ -425,1 +425,1 @@\n-            Throwable target = e.getTargetException();\n+            Throwable target = e.getCause();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/launcher\/Main.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-        if (ite.getTargetException() instanceof RuntimeException) {\n-            throw (RuntimeException)ite.getTargetException();\n+        if (ite.getCause() instanceof RuntimeException) {\n+            throw (RuntimeException)ite.getCause();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/VMObjectFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -291,1 +291,1 @@\n-            Throwable t = e.getTargetException();\n+            Throwable t = e.getCause();\n","filename":"src\/jdk.jconsole\/share\/classes\/sun\/tools\/jconsole\/inspector\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}