{"files":[{"patch":"@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -71,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -82,5 +83,5 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.caught_exception.caught_exception002\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".caught_exception002\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.caught_exception.caught_exception002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".caught_exception002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,4 +95,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -100,1 +97,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -103,1 +100,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + PACKAGE_NAME + \".MyException\" + i);\n+            jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + PACKAGE_NAME + \".MyException\" + i);\n@@ -114,1 +111,1 @@\n-    private void checkCatch (String[] reply, int i) {\n+    private void checkCatch(String[] reply, int i) {\n@@ -117,2 +114,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/caught_exception\/caught_exception002\/caught_exception002.java","additions":17,"deletions":21,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,6 +34,3 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.caught_exception.caught_exception002\";\n-\n-    public static void main(String args[]) {\n-       caught_exception002a _caught_exception002a = new caught_exception002a();\n-       System.exit(caught_exception002.JCK_STATUS_BASE + _caught_exception002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        caught_exception002a _caught_exception002a = new caught_exception002a();\n+        System.exit(caught_exception002.JCK_STATUS_BASE + _caught_exception002a.runIt(args, System.out));\n@@ -43,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -45,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -51,1 +48,1 @@\n-        int  result = -1;\n+        int result = -1;\n@@ -89,26 +86,26 @@\n-        MyException2, MyException3, MyException4, MyException5, MyException6,\n-        MyException7, MyException8, MyException9 {\n-\n-        switch(i) {\n-           case 0:\n-              throw new MyException0(\"MyException0\");\n-           case 1:\n-              throw new MyException1(\"MyException1\");\n-           case 2:\n-              throw new MyException2(\"MyException2\");\n-           case 3:\n-              throw new MyException3(\"MyException3\");\n-           case 4:\n-              throw new MyException4(\"MyException4\");\n-           case 5:\n-              throw new MyException5(\"MyException5\");\n-           case 6:\n-              throw new MyException6(\"MyException6\");\n-           case 7:\n-              throw new MyException7(\"MyException7\");\n-           case 8:\n-              throw new MyException8(\"MyException8\");\n-           case 9:\n-              throw new MyException9(\"MyException9\");\n-           default:\n-              return i*i;\n+            MyException2, MyException3, MyException4, MyException5, MyException6,\n+            MyException7, MyException8, MyException9 {\n+\n+        switch (i) {\n+            case 0:\n+                throw new MyException0(\"MyException0\");\n+            case 1:\n+                throw new MyException1(\"MyException1\");\n+            case 2:\n+                throw new MyException2(\"MyException2\");\n+            case 3:\n+                throw new MyException3(\"MyException3\");\n+            case 4:\n+                throw new MyException4(\"MyException4\");\n+            case 5:\n+                throw new MyException5(\"MyException5\");\n+            case 6:\n+                throw new MyException6(\"MyException6\");\n+            case 7:\n+                throw new MyException7(\"MyException7\");\n+            case 8:\n+                throw new MyException8(\"MyException8\");\n+            case 9:\n+                throw new MyException9(\"MyException9\");\n+            default:\n+                return i * i;\n@@ -120,1 +117,3 @@\n-   public MyException0 (String s) {super(s);}\n+    public MyException0(String s) {\n+        super(s);\n+    }\n@@ -122,0 +121,1 @@\n+\n@@ -123,1 +123,3 @@\n-   public MyException1 (String s) {super(s);}\n+    public MyException1(String s) {\n+        super(s);\n+    }\n@@ -125,0 +127,1 @@\n+\n@@ -126,1 +129,3 @@\n-   public MyException2 (String s) {super(s);}\n+    public MyException2(String s) {\n+        super(s);\n+    }\n@@ -128,0 +133,1 @@\n+\n@@ -129,1 +135,3 @@\n-   public MyException3 (String s) {super(s);}\n+    public MyException3(String s) {\n+        super(s);\n+    }\n@@ -131,0 +139,1 @@\n+\n@@ -132,1 +141,3 @@\n-   public MyException4 (String s) {super(s);}\n+    public MyException4(String s) {\n+        super(s);\n+    }\n@@ -134,0 +145,1 @@\n+\n@@ -135,1 +147,3 @@\n-   public MyException5 (String s) {super(s);}\n+    public MyException5(String s) {\n+        super(s);\n+    }\n@@ -137,0 +151,1 @@\n+\n@@ -138,1 +153,3 @@\n-   public MyException6 (String s) {super(s);}\n+    public MyException6(String s) {\n+        super(s);\n+    }\n@@ -140,0 +157,1 @@\n+\n@@ -141,1 +159,3 @@\n-   public MyException7 (String s) {super(s);}\n+    public MyException7(String s) {\n+        super(s);\n+    }\n@@ -143,0 +163,1 @@\n+\n@@ -144,1 +165,3 @@\n-   public MyException8 (String s) {super(s);}\n+    public MyException8(String s) {\n+        super(s);\n+    }\n@@ -146,0 +169,1 @@\n+\n@@ -147,1 +171,3 @@\n-   public MyException9 (String s) {super(s);}\n+    public MyException9(String s) {\n+        super(s);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/caught_exception\/caught_exception002\/caught_exception002a.java","additions":76,"deletions":50,"binary":false,"changes":126,"status":"modified"},{"patch":"@@ -54,2 +54,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -57,2 +58,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -62,1 +62,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -66,2 +66,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -73,6 +73,5 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.classes.classes001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".classes001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String NOT_VALID_SAMPLE   = \"is not a valid\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.classes.classes001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".classes001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -81,20 +80,20 @@\n-        DEBUGGEE_CLASS,\n-        DEBUGGEE_CLASS + \"$Inner1\",\n-        DEBUGGEE_CLASS + \"$Inner2\",\n-        DEBUGGEE_CLASS + \"$Inner3\",\n-        DEBUGGEE_CLASS + \"$Inner4\",\n-        DEBUGGEE_CLASS + \"$Inner5\",\n-        DEBUGGEE_CLASS + \"$Inner6\",\n-        DEBUGGEE_CLASS + \"$Inner7\",\n-        DEBUGGEE_CLASS + \"$Inner8\",\n-        DEBUGGEE_CLASS + \"$InnerInt1\",\n-        DEBUGGEE_CLASS + \"$InnerInt2\",\n-        DEBUGGEE_CLASS + \"$InnerInt3\",\n-        DEBUGGEE_CLASS + \"$InnerInt4\",\n-        DEBUGGEE_CLASS + \"$InnerInt5\",\n-        PACKAGE_NAME + \".Outer1\",\n-        PACKAGE_NAME + \".Outer2\",\n-        PACKAGE_NAME + \".Outer3\",\n-        PACKAGE_NAME + \".OuterInt1\",\n-        PACKAGE_NAME + \".OuterInt2\"\n-                                      };\n+            DEBUGGEE_CLASS,\n+            DEBUGGEE_CLASS + \"$Inner1\",\n+            DEBUGGEE_CLASS + \"$Inner2\",\n+            DEBUGGEE_CLASS + \"$Inner3\",\n+            DEBUGGEE_CLASS + \"$Inner4\",\n+            DEBUGGEE_CLASS + \"$Inner5\",\n+            DEBUGGEE_CLASS + \"$Inner6\",\n+            DEBUGGEE_CLASS + \"$Inner7\",\n+            DEBUGGEE_CLASS + \"$Inner8\",\n+            DEBUGGEE_CLASS + \"$InnerInt1\",\n+            DEBUGGEE_CLASS + \"$InnerInt2\",\n+            DEBUGGEE_CLASS + \"$InnerInt3\",\n+            DEBUGGEE_CLASS + \"$InnerInt4\",\n+            DEBUGGEE_CLASS + \"$InnerInt5\",\n+            PACKAGE_NAME + \".Outer1\",\n+            PACKAGE_NAME + \".Outer2\",\n+            PACKAGE_NAME + \".Outer3\",\n+            PACKAGE_NAME + \".OuterInt1\",\n+            PACKAGE_NAME + \".OuterInt2\"\n+    };\n@@ -106,4 +105,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -112,1 +107,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -116,2 +111,2 @@\n-        for (int i = 0; i < checkedClasses.length; i++) {\n-            if (!checkClass(checkedClasses[i], reply)) {\n+        for (String checkedClass : checkedClasses) {\n+            if (!checkClass(checkedClass, reply)) {\n@@ -125,1 +120,1 @@\n-    private boolean checkClass (String className, String[] reply) {\n+    private boolean checkClass(String className, String[] reply) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classes\/classes001\/classes001.java","additions":36,"deletions":41,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,6 +34,3 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.classes.classes001\";\n-\n-    public static void main(String args[]) {\n-       classes001a _classes001a = new classes001a();\n-       System.exit(classes001.JCK_STATUS_BASE + _classes001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        classes001a _classes001a = new classes001a();\n+        System.exit(classes001.JCK_STATUS_BASE + _classes001a.runIt(args, System.out));\n@@ -44,1 +40,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -46,1 +43,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -56,2 +53,20 @@\n-    class Inner1 {}\n-    interface InnerInt1 {}\n+    class Inner1 {\n+    }\n+\n+    interface InnerInt1 {\n+    }\n+\n+    public class Inner2 {\n+    }\n+\n+    public interface InnerInt2 {\n+    }\n+\n+    private class Inner3 {\n+    }\n+\n+    private interface InnerInt3 {\n+    }\n+\n+    protected class Inner4 {\n+    }\n@@ -59,2 +74,2 @@\n-    public class Inner2 {}\n-    public interface InnerInt2 {}\n+    protected interface InnerInt4 {\n+    }\n@@ -62,2 +77,2 @@\n-    private class Inner3 {}\n-    private interface InnerInt3 {}\n+    abstract class Inner5 {\n+    }\n@@ -65,2 +80,2 @@\n-    protected class Inner4 {}\n-    protected interface InnerInt4 {}\n+    abstract interface InnerInt5 {\n+    }\n@@ -68,2 +83,2 @@\n-    abstract class Inner5 {}\n-    abstract interface InnerInt5 {}\n+    final class Inner6 extends Inner5 {\n+    }\n@@ -71,1 +86,2 @@\n-    final class Inner6 extends Inner5{}\n+    class Inner7 extends Outer2 {\n+    }\n@@ -73,2 +89,2 @@\n-    class Inner7 extends Outer2{}\n-    class Inner8 implements OuterInt1, OuterInt2, InnerInt1, InnerInt2, InnerInt3,  InnerInt4, InnerInt5 {}\n+    class Inner8 implements OuterInt1, OuterInt2, InnerInt1, InnerInt2, InnerInt3, InnerInt4, InnerInt5 {\n+    }\n@@ -76,1 +92,1 @@\n-    private void init () {\n+    private void init() {\n@@ -91,2 +107,5 @@\n-class Outer1 {}\n-interface OuterInt1 {}\n+class Outer1 {\n+}\n+\n+interface OuterInt1 {\n+}\n@@ -94,2 +113,2 @@\n-abstract class Outer2 {}\n-abstract interface OuterInt2 {}\n+abstract class Outer2 {\n+}\n@@ -97,1 +116,5 @@\n-final class Outer3 {}\n+abstract interface OuterInt2 {\n+}\n+\n+final class Outer3 {\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classes\/classes001\/classes001a.java","additions":55,"deletions":32,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -53,2 +53,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -56,2 +57,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -61,1 +61,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -65,2 +65,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -75,2 +75,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -81,2 +81,0 @@\n-        int count;\n-        Vector v;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classpath\/classpath001\/classpath001.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,4 +33,4 @@\n-    public static void main(String args[]) {\n-       classpath001a _classpath001a = new classpath001a();\n-       lastBreak();\n-       System.exit(classpath001.JCK_STATUS_BASE + _classpath001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        classpath001a _classpath001a = new classpath001a();\n+        lastBreak();\n+        System.exit(classpath001.JCK_STATUS_BASE + _classpath001a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/classpath\/classpath001\/classpath001a.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -55,2 +55,4 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -58,2 +60,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -63,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -67,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -74,6 +76,6 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.clear.clear002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".clear002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String METHOD_TO_STOP   = DEBUGGEE_CLASS + \".func5\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.clear.clear002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".clear002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String METHOD_TO_STOP = DEBUGGEE_CLASS + \".func5\";\n@@ -82,1 +84,1 @@\n-    static final String REMOVED_SAMPLE   = \"Removed:\";\n+    static final String REMOVED_SAMPLE = \"Removed:\";\n@@ -85,1 +87,0 @@\n-        String[] reply;\n@@ -88,2 +89,0 @@\n-        Vector v;\n-        String found;\n@@ -100,1 +99,1 @@\n-        if (!checkClear (METHOD1_TO_CLEAR)) {\n+        if (!checkClear(METHOD1_TO_CLEAR)) {\n@@ -104,1 +103,1 @@\n-        if (!checkClear (METHOD2_TO_CLEAR)) {\n+        if (!checkClear(METHOD2_TO_CLEAR)) {\n@@ -118,1 +117,1 @@\n-        if (!checkBreakpoint (METHOD1_TO_CLEAR, grep)) {\n+        if (!checkBreakpoint(METHOD1_TO_CLEAR, grep)) {\n@@ -122,1 +121,1 @@\n-        if (!checkBreakpoint (METHOD2_TO_CLEAR, grep)) {\n+        if (!checkBreakpoint(METHOD2_TO_CLEAR, grep)) {\n@@ -127,1 +126,1 @@\n-    private boolean checkBreakpoint (String methodName, Paragrep grep) {\n+    private boolean checkBreakpoint(String methodName, Paragrep grep) {\n@@ -130,2 +129,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -133,1 +131,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -145,1 +143,1 @@\n-    private boolean checkClear (String methodName) {\n+    private boolean checkClear(String methodName) {\n@@ -150,2 +148,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -153,1 +150,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear002\/clear002.java","additions":26,"deletions":29,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,4 +33,4 @@\n-    public static void main(String args[]) {\n-       clear002a _clear002a = new clear002a();\n-       lastBreak();\n-       System.exit(clear002.JCK_STATUS_BASE + _clear002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        clear002a _clear002a = new clear002a();\n+        lastBreak();\n+        System.exit(clear002.JCK_STATUS_BASE + _clear002a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -65,1 +65,1 @@\n-       return func5(i) + 1;\n+        return func5(i) + 1;\n@@ -69,1 +69,1 @@\n-       return func6(i) + 1;\n+        return func6(i) + 1;\n@@ -73,1 +73,1 @@\n-        return i-5;\n+        return i - 5;\n@@ -77,1 +77,1 @@\n-        public static int func7 (int i) {\n+        public static int func7(int i) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear002\/clear002a.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -56,2 +56,4 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -59,2 +61,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -64,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -68,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,2 +79,2 @@\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -88,2 +89,0 @@\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear003\/clear003.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,4 +33,4 @@\n-    public static void main(String args[]) {\n-       clear003a _clear003a = new clear003a();\n-       lastBreak();\n-       System.exit(clear003.JCK_STATUS_BASE + _clear003a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        clear003a _clear003a = new clear003a();\n+        lastBreak();\n+        System.exit(clear003.JCK_STATUS_BASE + _clear003a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -67,3 +67,3 @@\n-       int value;\n-       value = func5(i) + 1;\n-       return value;\n+        int value;\n+        value = func5(i) + 1;\n+        return value;\n@@ -73,3 +73,3 @@\n-       int value;\n-       value = func6(i) + 1;\n-       return value;\n+        int value;\n+        value = func6(i) + 1;\n+        return value;\n@@ -79,1 +79,1 @@\n-        return i-5;\n+        return i - 5;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear003\/clear003a.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -57,2 +57,4 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +62,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -65,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,10 +78,10 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.clear.clear004\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".clear004\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String[] BREAKPOINTS = new String[]\n-        { DEBUGGEE_CLASS + \":63\",\n-          DEBUGGEE_CLASS + \":67\",\n-          DEBUGGEE_CLASS + \":71\" };\n-    static final String REMOVED_SAMPLE   = \"Removed:\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.clear.clear004\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".clear004\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String[] BREAKPOINTS = new String[]{\n+            DEBUGGEE_CLASS + \":63\",\n+            DEBUGGEE_CLASS + \":67\",\n+            DEBUGGEE_CLASS + \":71\"};\n+    static final String REMOVED_SAMPLE = \"Removed:\";\n@@ -88,1 +90,0 @@\n-        String[] reply;\n@@ -91,2 +92,0 @@\n-        Vector v;\n-        String found;\n@@ -94,3 +93,3 @@\n-        for (int i = 0; i < BREAKPOINTS.length; i++) {\n-           log.display(\"Setting breakpoint at \" + BREAKPOINTS[i]);\n-           reply = jdb.receiveReplyFor(JdbCommand.stop_at + BREAKPOINTS[i]);\n+        for (String breakpoint : BREAKPOINTS) {\n+            log.display(\"Setting breakpoint at \" + breakpoint);\n+            jdb.receiveReplyFor(JdbCommand.stop_at + breakpoint);\n@@ -99,1 +98,1 @@\n-        if (!checkClear (BREAKPOINTS[1])) {\n+        if (!checkClear(BREAKPOINTS[1])) {\n@@ -113,1 +112,1 @@\n-        if (!checkBreakpoint (BREAKPOINTS[1], grep)) {\n+        if (!checkBreakpoint(BREAKPOINTS[1], grep)) {\n@@ -119,1 +118,1 @@\n-    private boolean checkBreakpoint (String breakpoint, Paragrep grep) {\n+    private boolean checkBreakpoint(String breakpoint, Paragrep grep) {\n@@ -122,2 +121,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -125,1 +123,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -137,1 +135,1 @@\n-    private boolean checkClear (String breakpoint) {\n+    private boolean checkClear(String breakpoint) {\n@@ -142,2 +140,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -145,1 +142,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear004\/clear004.java","additions":30,"deletions":33,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -32,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,4 +35,4 @@\n-    public static void main(String args[]) {\n-       clear004a _clear004a = new clear004a();\n-       lastBreak();\n-       System.exit(clear004.JCK_STATUS_BASE + _clear004a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        clear004a _clear004a = new clear004a();\n+        lastBreak();\n+        System.exit(clear004.JCK_STATUS_BASE + _clear004a.runIt(args, System.out));\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -67,1 +67,1 @@\n-       return func5(i) + 1;  \/\/ this is line for cleared breakpoint \/\/ clear004.BREAKPOINTS[1]\n+        return func5(i) + 1;  \/\/ this is line for cleared breakpoint \/\/ clear004.BREAKPOINTS[1]\n@@ -71,1 +71,1 @@\n-       return func6(i) + 1;  \/\/ this is line for breakpoint \/\/ clear004.BREAKPOINTS[2]\n+        return func6(i) + 1;  \/\/ this is line for breakpoint \/\/ clear004.BREAKPOINTS[2]\n@@ -75,1 +75,1 @@\n-        return i-5;\n+        return i - 5;\n@@ -79,1 +79,1 @@\n-        public static int func7 (int i) {\n+        public static int func7(int i) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/clear\/clear004\/clear004a.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -68,1 +69,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +73,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -79,15 +80,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.down.down002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".down002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-\n-    static final String[][] FRAMES = new String[][] {\n-        {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n-        {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n-        {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n-        {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n-        {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n-        {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n-        {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n-                                                };\n+    static final String PACKAGE_NAME = \"nsk.jdb.down.down002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".down002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n+            {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n+            {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n+            {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n+            {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n+            {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n+            {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n+    };\n@@ -99,2 +100,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -105,1 +105,1 @@\n-        for (int i = 0; i < (FRAMES.length-1); i++) {\n+        for (int i = 0; i < (FRAMES.length - 1); i++) {\n@@ -109,1 +109,1 @@\n-        for (int i = 0; i < (FRAMES.length-1); i++) {\n+        for (int i = 0; i < (FRAMES.length - 1); i++) {\n@@ -119,2 +119,2 @@\n-        for (int i = 1; i < (FRAMES.length-1); i++) {\n-            v = new Vector();\n+        for (int i = 1; i < (FRAMES.length - 1); i++) {\n+            v = new Vector<>();\n@@ -124,1 +124,1 @@\n-            if (count != (i+1)) {\n+            if (count != (i + 1)) {\n@@ -126,1 +126,1 @@\n-                    \"\\n\\texpected value : \" + (i+1) + \", got : \" + count);\n+                        \"\\n\\texpected value : \" + (i + 1) + \", got : \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/down\/down002\/down002.java","additions":30,"deletions":30,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,4 +33,4 @@\n-    public static void main(String args[]) {\n-       down002a _down002a = new down002a();\n-       lastBreak();\n-       System.exit(down002.JCK_STATUS_BASE + _down002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        down002a _down002a = new down002a();\n+        lastBreak();\n+        System.exit(down002.JCK_STATUS_BASE + _down002a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -65,1 +65,1 @@\n-       return func5(i) + 1;\n+        return func5(i) + 1;\n@@ -69,1 +69,1 @@\n-       return func6(i) + 1;\n+        return func6(i) + 1;\n@@ -73,1 +73,1 @@\n-        return i-5;\n+        return i - 5;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/down\/down002\/down002a.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +73,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +77,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -92,26 +93,26 @@\n-        \"_dump002a\",\n-        \"iStatic\",\n-        \"iPrivate\",\n-        \"iProtect\",\n-        \"iPublic\",\n-        \"iFinal\",\n-        \"iTransient\",\n-        \"iVolatile\",\n-        \"iArray\",\n-        \"sStatic\",\n-        \"sPrivate\",\n-        \"sProtected\",\n-        \"sPublic\",\n-        \"sFinal\",\n-        \"sTransient\",\n-        \"sVolatile\",\n-        \"sArray\",\n-        \"fBoolean\",\n-        \"fByte\",\n-        \"fChar\",\n-        \"fDouble\",\n-        \"fFloat\",\n-        \"fInt\",\n-        \"fLong\",\n-        \"fShort\"\n-                                         };\n+            \"_dump002a\",\n+            \"iStatic\",\n+            \"iPrivate\",\n+            \"iProtect\",\n+            \"iPublic\",\n+            \"iFinal\",\n+            \"iTransient\",\n+            \"iVolatile\",\n+            \"iArray\",\n+            \"sStatic\",\n+            \"sPrivate\",\n+            \"sProtected\",\n+            \"sPublic\",\n+            \"sFinal\",\n+            \"sTransient\",\n+            \"sVolatile\",\n+            \"sArray\",\n+            \"fBoolean\",\n+            \"fByte\",\n+            \"fChar\",\n+            \"fDouble\",\n+            \"fFloat\",\n+            \"fInt\",\n+            \"fLong\",\n+            \"fShort\"\n+    };\n@@ -122,3 +123,1 @@\n-        int count;\n-        Vector v = new Vector();\n-        String found;\n+        Vector<String> v = new Vector<>();\n@@ -127,1 +126,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -131,1 +130,1 @@\n-        for (int i = 0; i < CHECKED_FIELDS.length; i++) {\n+        for (String field : CHECKED_FIELDS) {\n@@ -133,1 +132,1 @@\n-            v.add(CHECKED_FIELDS[i]);\n+            v.add(field);\n@@ -136,1 +135,1 @@\n-                failure(\"The field is not dumped : \" + CHECKED_FIELDS[i]);\n+                failure(\"The field is not dumped : \" + field);\n@@ -151,1 +150,1 @@\n-    void checkField (String[] reply, String fieldName) {\n+    void checkField(String[] reply, String fieldName) {\n@@ -153,1 +152,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/dump\/dump002\/dump002.java","additions":43,"deletions":44,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(dump002.JCK_STATUS_BASE + _dump002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(dump002.JCK_STATUS_BASE + _dump002a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -52,7 +52,7 @@\n-    static     int iStatic    = 0;\n-    private    int iPrivate   = 1;\n-    protected  int iProtect   = 2;\n-    public     int iPublic    = 3;\n-    final      int iFinal     = 4;\n-    transient  int iTransient = 5;\n-    volatile   int iVolatile  = 6;\n+    static int iStatic = 0;\n+    private int iPrivate = 1;\n+    protected int iProtect = 2;\n+    public int iPublic = 3;\n+    final int iFinal = 4;\n+    transient int iTransient = 5;\n+    volatile int iVolatile = 6;\n@@ -60,1 +60,1 @@\n-    static     int [] iArray = { 7 };\n+    static int[] iArray = {7};\n@@ -62,7 +62,7 @@\n-    static     String sStatic    = \"zero\";\n-    private    String sPrivate   = \"one\";\n-    protected  String sProtected = \"two\";\n-    public     String sPublic    = \"three\";\n-    final      String sFinal     = \"four\";\n-    transient  String sTransient = \"five\";\n-    volatile   String sVolatile  = \"six\";\n+    static String sStatic = \"zero\";\n+    private String sPrivate = \"one\";\n+    protected String sProtected = \"two\";\n+    public String sPublic = \"three\";\n+    final String sFinal = \"four\";\n+    transient String sTransient = \"five\";\n+    volatile String sVolatile = \"six\";\n@@ -70,1 +70,1 @@\n-    static     String [] sArray = { \"seven\" };\n+    static String[] sArray = {\"seven\"};\n@@ -73,7 +73,7 @@\n-    byte    fByte    = Byte.MAX_VALUE;\n-    char    fChar    = Character.MAX_VALUE;\n-    double  fDouble  = Double.MAX_VALUE;\n-    float   fFloat   = Float.MAX_VALUE;\n-    int     fInt     = Integer.MAX_VALUE;\n-    long    fLong    = Long.MAX_VALUE;\n-    short   fShort   = Short.MAX_VALUE;\n+    byte fByte = Byte.MAX_VALUE;\n+    char fChar = Character.MAX_VALUE;\n+    double fDouble = Double.MAX_VALUE;\n+    float fFloat = Float.MAX_VALUE;\n+    int fInt = Integer.MAX_VALUE;\n+    long fLong = Long.MAX_VALUE;\n+    short fShort = Short.MAX_VALUE;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/dump\/dump002\/dump002a.java","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -69,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +73,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -77,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,2 +91,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -95,9 +95,9 @@\n-        { DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\" },\n-        { DEBUGGEE_CLASS + \"._eval001a.myInstanceField\", \"9223372036854775807\" },\n-        { DEBUGGEE_CLASS + \"._eval001a.myArrayField[0][0].toString()\", \"ABCDE\" },\n-        { DEBUGGEE_CLASS + \"._eval001a.myMethod()\", \"2147483647\" },\n-        { \"myClass.toString().equals(\\\"abcde\\\")\", \"true\"},\n-        { \"i + j + k\", \"777\"},\n-        { \"new java.lang.String(\\\"Hello, World\\\").length()\", \"12\"},\n-        { DEBUGGEE_CLASS + \"._eval001a.testPrimitiveArray(test)\", \"1.0\" }\n-                                          };\n+            {DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.myInstanceField\", \"9223372036854775807\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.myArrayField[0][0].toString()\", \"ABCDE\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.myMethod()\", \"2147483647\"},\n+            {\"myClass.toString().equals(\\\"abcde\\\")\", \"true\"},\n+            {\"i + j + k\", \"777\"},\n+            {\"new java.lang.String(\\\"Hello, World\\\").length()\", \"12\"},\n+            {DEBUGGEE_CLASS + \"._eval001a.testPrimitiveArray(test)\", \"1.0\"}\n+    };\n@@ -106,6 +106,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -113,1 +107,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -116,1 +110,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -118,2 +112,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            if (!checkValue(checkedExpr[i][0], checkedExpr[i][1])) {\n+        for (String[] strings : checkedExpr) {\n+            if (!checkValue(strings[0], strings[1])) {\n@@ -127,1 +121,1 @@\n-    private boolean checkValue (String expr, String value) {\n+    private boolean checkValue(String expr, String value) {\n@@ -131,1 +125,0 @@\n-        Vector v;\n@@ -139,1 +132,1 @@\n-            log.complain(\"expected : \" + value + \" ;\\nreported: \" + (reply.length > 0? reply[0]: \"\"));\n+            log.complain(\"expected : \" + value + \" ;\\nreported: \" + (reply.length > 0 ? reply[0] : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/eval\/eval001\/eval001.java","additions":24,"deletions":31,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -37,2 +36,2 @@\n-    public static void main(String args[]) {\n-       System.exit(eval001.JCK_STATUS_BASE + _eval001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(eval001.JCK_STATUS_BASE + _eval001a.runIt(args, System.out));\n@@ -41,1 +40,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -43,1 +43,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -65,3 +65,3 @@\n-    private eval001a () {\n-         myArrayField = new MyClass[][] {new MyClass[] {new MyClass(\"ABCDE\")}};\n-         myInstanceField = Long.MAX_VALUE;\n+    private eval001a() {\n+        myArrayField = new MyClass[][]{new MyClass[]{new MyClass(\"ABCDE\")}};\n+        myInstanceField = Long.MAX_VALUE;\n@@ -77,1 +77,1 @@\n-        public MyClass (String s) {\n+        public MyClass(String s) {\n@@ -82,1 +82,1 @@\n-             return line;\n+            return line;\n@@ -86,1 +86,1 @@\n-    public double testPrimitiveArray(double[][][] d){\n+    public double testPrimitiveArray(double[][][] d) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/eval\/eval001\/eval001a.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -76,2 +76,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -79,2 +80,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -84,1 +84,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -88,2 +88,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -95,6 +95,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.exclude.exclude001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".exclude001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.exclude.exclude001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".exclude001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -104,1 +104,1 @@\n-    static final String SUN_METHOD   = \"sun.util.calendar.Gregorian\";\n+    static final String SUN_METHOD = \"sun.util.calendar.Gregorian\";\n@@ -110,2 +110,0 @@\n-        Vector v;\n-        String found;\n@@ -144,1 +142,1 @@\n-                        reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n+                        jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n@@ -147,3 +145,2 @@\n-                        case 0: \/\/ block all\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,sun.*,com.sun.*,jdk.*\");\n-\n+                            case 0: \/\/ block all\n+                                jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,sun.*,com.sun.*,jdk.*\");\n@@ -151,2 +148,2 @@\n-                        case 1: \/\/ allow java.*\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + \"javax.*,sun.*,com.sun.*,jdk.*\");\n+                            case 1: \/\/ allow java.*\n+                                jdb.receiveReplyFor(JdbCommand.exclude + \"javax.*,sun.*,com.sun.*,jdk.*\");\n@@ -154,2 +151,2 @@\n-                        case 2: \/\/ allow sun.*\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,com.sun.*,jdk.*\");\n+                            case 2: \/\/ allow sun.*\n+                                jdb.receiveReplyFor(JdbCommand.exclude + \"java.*,javax.*,com.sun.*,jdk.*\");\n@@ -159,1 +156,1 @@\n-                        reply = jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[0]);\n+                        jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[0]);\n@@ -187,2 +184,2 @@\n-                                reply = jdb.receiveReplyFor(JdbCommand.exclude + oldExclude);\n-                                reply = jdb.receiveReplyFor(JdbCommand.untrace + \"methods \"+ threads[0]);\n+                                jdb.receiveReplyFor(JdbCommand.exclude + oldExclude);\n+                                jdb.receiveReplyFor(JdbCommand.untrace + \"methods \" + threads[0]);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/exclude\/exclude001\/exclude001.java","additions":24,"deletions":27,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,2 @@\n-import java.io.*;\n+import java.io.PrintStream;\n+import java.util.GregorianCalendar;\n@@ -32,1 +32,0 @@\n-import java.util.*;\n@@ -34,2 +33,1 @@\n-\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -37,3 +35,3 @@\n-    public static void main(String args[]) {\n-       exclude001a _exclude001a = new exclude001a();\n-       System.exit(exclude001.JCK_STATUS_BASE + _exclude001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        exclude001a _exclude001a = new exclude001a();\n+        System.exit(exclude001.JCK_STATUS_BASE + _exclude001a.runIt(args, System.out));\n@@ -42,1 +40,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,2 +43,2 @@\n-    static final String MYTHREAD  = \"MyThread\";\n-    static final int numThreads   = 3;   \/\/ number of threads.\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 3;   \/\/ number of threads.\n@@ -52,1 +51,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -57,1 +56,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -59,1 +58,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -81,1 +80,1 @@\n-    public MyThread (String s) {\n+    public MyThread(String s) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/exclude\/exclude001\/exclude001a.java","additions":16,"deletions":17,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -66,1 +66,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +70,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,8 +77,7 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.fields.fields001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".fields001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS1    = DEBUGGEE_CLASS + \"$Inner\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$Extender\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String NOT_VALID_SAMPLE   = \"is not a valid\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.fields.fields001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".fields001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS1 = DEBUGGEE_CLASS + \"$Inner\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$Extender\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -87,11 +86,11 @@\n-        \"i_st\",    \"o_st\",\n-        \"i_pv\",    \"o_pv\",\n-        \"i_pt\",    \"o_pt\",\n-        \"i_pb\",    \"o_pb\",\n-        \"i_fn\",    \"o_fn\",\n-        \"i_tr\",    \"o_tr\",\n-        \"i_vl\",    \"o_vl\",\n-        \"i_a\",     \"o_a\",\n-        \"i_aa\",    \"o_aa\",\n-        \"i_aaa\",   \"o_aaa\"\n-                                      };\n+            \"i_st\", \"o_st\",\n+            \"i_pv\", \"o_pv\",\n+            \"i_pt\", \"o_pt\",\n+            \"i_pb\", \"o_pb\",\n+            \"i_fn\", \"o_fn\",\n+            \"i_tr\", \"o_tr\",\n+            \"i_vl\", \"o_vl\",\n+            \"i_a\", \"o_a\",\n+            \"i_aa\", \"o_aa\",\n+            \"i_aaa\", \"o_aaa\"\n+    };\n@@ -100,10 +99,10 @@\n-        \"ii_pv\",    \"oi_pv\",\n-        \"ii_pt\",    \"oi_pt\",\n-        \"ii_pb\",    \"oi_pb\",\n-        \"ii_fn\",    \"oi_fn\",\n-        \"ii_tr\",    \"oi_tr\",\n-        \"ii_vl\",    \"oi_vl\",\n-        \"ii_a\",     \"oi_a\",\n-        \"ii_aa\",    \"oi_aa\",\n-        \"ii_aaa\",   \"oi_aaa\"\n-                                      };\n+            \"ii_pv\", \"oi_pv\",\n+            \"ii_pt\", \"oi_pt\",\n+            \"ii_pb\", \"oi_pb\",\n+            \"ii_fn\", \"oi_fn\",\n+            \"ii_tr\", \"oi_tr\",\n+            \"ii_vl\", \"oi_vl\",\n+            \"ii_a\", \"oi_a\",\n+            \"ii_aa\", \"oi_aa\",\n+            \"ii_aaa\", \"oi_aaa\"\n+    };\n@@ -113,4 +112,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -119,1 +114,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -139,1 +134,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -141,1 +136,0 @@\n-        String found;\n@@ -146,2 +140,2 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            count = grep.find(checkedFields[i]);\n+        for (String checkedField : checkedFields) {\n+            count = grep.find(checkedField);\n@@ -149,1 +143,1 @@\n-                log.complain(\"Failed to report field \" + checkedFields[i] + \" for class \" + className);\n+                log.complain(\"Failed to report field \" + checkedField + \" for class \" + className);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/fields\/fields001\/fields001.java","additions":40,"deletions":46,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,6 +34,3 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.fields.fields001\";\n-\n-    public static void main(String args[]) {\n-       fields001a _fields001a = new fields001a();\n-       System.exit(fields001.JCK_STATUS_BASE + _fields001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        fields001a _fields001a = new fields001a();\n+        System.exit(fields001.JCK_STATUS_BASE + _fields001a.runIt(args, System.out));\n@@ -44,1 +40,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -46,1 +43,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -56,21 +53,22 @@\n-    static     int i_st;\n-    private    int i_pv;\n-    protected  int i_pt;\n-    public     int i_pb;\n-    final      int i_fn = 0;;\n-    transient  int i_tr;\n-    volatile   int i_vl;\n-    int []      i_a;\n-    int [][]    i_aa;\n-    int [][][]  i_aaa;\n-\n-    static     Object o_st;\n-    private    Object o_pv;\n-    protected  Object o_pt;\n-    public     Object o_pb;\n-    final      Object o_fn = new Object();\n-    transient  Object o_tr;\n-    volatile   Object o_vl;\n-    Object []     o_a;\n-    Object [][]   o_aa;\n-    Object [][][] o_aaa;\n+    static int i_st;\n+    private int i_pv;\n+    protected int i_pt;\n+    public int i_pb;\n+    final int i_fn = 0;\n+\n+    transient int i_tr;\n+    volatile int i_vl;\n+    int[] i_a;\n+    int[][] i_aa;\n+    int[][][] i_aaa;\n+\n+    static Object o_st;\n+    private Object o_pv;\n+    protected Object o_pt;\n+    public Object o_pb;\n+    final Object o_fn = new Object();\n+    transient Object o_tr;\n+    volatile Object o_vl;\n+    Object[] o_a;\n+    Object[][] o_aa;\n+    Object[][][] o_aaa;\n@@ -79,19 +77,20 @@\n-        private    int ii_pv;\n-        protected  int ii_pt;\n-        public     int ii_pb;\n-        final      int ii_fn = 0;;\n-        transient  int ii_tr;\n-        volatile   int ii_vl;\n-        int []      ii_a;\n-        int [][]    ii_aa;\n-        int [][][]  ii_aaa;\n-\n-        private    Object oi_pv;\n-        protected  Object oi_pt;\n-        public     Object oi_pb;\n-        final      Object oi_fn = new Object();\n-        transient  Object oi_tr;\n-        volatile   Object oi_vl;\n-        Object []     oi_a;\n-        Object [][]   oi_aa;\n-        Object [][][] oi_aaa;\n+        private int ii_pv;\n+        protected int ii_pt;\n+        public int ii_pb;\n+        final int ii_fn = 0;\n+\n+        transient int ii_tr;\n+        volatile int ii_vl;\n+        int[] ii_a;\n+        int[][] ii_aa;\n+        int[][][] ii_aaa;\n+\n+        private Object oi_pv;\n+        protected Object oi_pt;\n+        public Object oi_pb;\n+        final Object oi_fn = new Object();\n+        transient Object oi_tr;\n+        volatile Object oi_vl;\n+        Object[] oi_a;\n+        Object[][] oi_aa;\n+        Object[][][] oi_aaa;\n@@ -100,1 +99,2 @@\n-    class Extender extends Inner {};\n+    class Extender extends Inner {\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/fields\/fields001\/fields001a.java","additions":54,"deletions":54,"binary":false,"changes":108,"status":"modified"},{"patch":"@@ -48,4 +48,5 @@\n-import java.io.*;\n-import java.util.*;\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n+\n+import java.io.PrintStream;\n@@ -54,3 +55,3 @@\n-    static final String DEBUGGEE_CLASS    = hc001a.class.getTypeName();\n-    static final String HC_NAME_FIELD     = DEBUGGEE_CLASS + \".hcName\";\n-    static final String MAIN_METHOD_NAME  = DEBUGGEE_CLASS + \".main\";\n+    static final String DEBUGGEE_CLASS = hc001a.class.getTypeName();\n+    static final String HC_NAME_FIELD = DEBUGGEE_CLASS + \".hcName\";\n+    static final String MAIN_METHOD_NAME = DEBUGGEE_CLASS + \".main\";\n@@ -58,3 +59,2 @@\n-    static final String HC_METHOD_NAME    = \"hcMethod\";\n-    static final String HC_FIELD_NAME     = \"hcField\";\n-    static final int    MAX_SLEEP_CNT     = 3;\n+    static final String HC_METHOD_NAME = \"hcMethod\";\n+    static final String HC_FIELD_NAME = \"hcField\";\n@@ -62,1 +62,1 @@\n-    public static void main(String argv[]) {\n+    public static void main(String[] argv) {\n@@ -66,1 +66,1 @@\n-    public static int run(String argv[], PrintStream out) {\n+    public static int run(String[] argv, PrintStream out) {\n@@ -73,3 +73,2 @@\n-        for (int idx = 0; idx < arr.length; idx++) {\n-            String str = arr[idx];\n-            if (str.indexOf(pattern) != -1) {\n+        for (String str : arr) {\n+            if (str.contains(pattern)) {\n@@ -93,1 +92,1 @@\n-        String[] reply = null;\n+        String[] reply;\n@@ -321,1 +320,0 @@\n-        String className = null;\n@@ -323,3 +321,3 @@\n-            \"xx.yyy\/0x111\/0x222\",\n-            \"xx.\/0x111.0x222\",\n-            \"xx.yyy.zzz\/\"\n+                \"xx.yyy\/0x111\/0x222\",\n+                \"xx.\/0x111.0x222\",\n+                \"xx.yyy.zzz\/\"\n@@ -331,2 +329,1 @@\n-        for (int idx = 0; idx < invClassNames.length; idx++) {\n-            className = invClassNames[idx];\n+        for (String className : invClassNames) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/hidden_class\/hc001\/hc001.java","additions":19,"deletions":22,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+import nsk.share.jdb.JdbArgumentHandler;\n+\n@@ -33,2 +35,0 @@\n-import nsk.share.jdb.*;\n-\n@@ -57,1 +57,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -60,1 +60,5 @@\n-    static void logMsg(String msg) { log.println(msg); log.flush(); }\n+\n+    static void logMsg(String msg) {\n+        log.println(msg);\n+        log.flush();\n+    }\n@@ -69,1 +73,1 @@\n-        for (String path: JAVA_CP.split(File.pathSeparator)) {\n+        for (String path : JAVA_CP.split(File.pathSeparator)) {\n@@ -78,1 +82,1 @@\n-    public static void main(String args[]) throws Exception {\n+    public static void main(String[] args) throws Exception {\n@@ -90,1 +94,2 @@\n-    void emptyMethod() {}\n+    void emptyMethod() {\n+    }\n@@ -92,1 +97,1 @@\n-    public int runIt(String args[]) throws Exception {\n+    public int runIt(String[] args) throws Exception {\n@@ -111,1 +116,1 @@\n-        HCInterf hcObj = (HCInterf)hc.newInstance();\n+        HCInterf hcObj = (HCInterf) hc.newInstance();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/hidden_class\/hc001\/hc001a.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -57,2 +57,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +61,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -65,1 +66,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +70,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,7 +77,7 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.ignore.ignore001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".ignore001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String EXCEPTION_SAMPLE   = \"Exception occurred:\";\n-    static final String REMOVED_SAMPLE     = \"Removed:\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.ignore.ignore001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".ignore001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String EXCEPTION_SAMPLE = \"Exception occurred:\";\n+    static final String REMOVED_SAMPLE = \"Removed:\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -88,2 +89,0 @@\n-        Vector v;\n-        String found;\n@@ -94,1 +93,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION);\n+        jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION);\n@@ -97,1 +96,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1);\n+        jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1);\n@@ -100,1 +99,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2);\n+        jdb.receiveReplyFor(JdbCommand._catch + \" caught \" + nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2);\n@@ -102,3 +101,3 @@\n-        for (;;) {\n-            if (!checkCatch(nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION)) {\n-               success = false;\n+        while (true) {\n+            if (!checkCatch(ignore001a.JAVA_EXCEPTION)) {\n+                success = false;\n@@ -106,2 +105,2 @@\n-            if (!checkCatch(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1)) {\n-               success = false;\n+            if (!checkCatch(ignore001a.USER_EXCEPTION1)) {\n+                success = false;\n@@ -109,2 +108,2 @@\n-            if (!checkCatch(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2)) {\n-               success = false;\n+            if (!checkCatch(ignore001a.USER_EXCEPTION2)) {\n+                success = false;\n@@ -113,2 +112,2 @@\n-            if (!checkIgnore(nsk.jdb.ignore.ignore001.ignore001a.JAVA_EXCEPTION)) {\n-               success = false;\n+            if (!checkIgnore(ignore001a.JAVA_EXCEPTION)) {\n+                success = false;\n@@ -116,2 +115,2 @@\n-            if (!checkIgnore(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION1)) {\n-               success = false;\n+            if (!checkIgnore(ignore001a.USER_EXCEPTION1)) {\n+                success = false;\n@@ -119,2 +118,2 @@\n-            if (!checkIgnore(nsk.jdb.ignore.ignore001.ignore001a.USER_EXCEPTION2)) {\n-               success = false;\n+            if (!checkIgnore(ignore001a.USER_EXCEPTION2)) {\n+                success = false;\n@@ -137,1 +136,1 @@\n-    private boolean checkCatch (String exceptionName) {\n+    private boolean checkCatch(String exceptionName) {\n@@ -140,2 +139,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -148,1 +146,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -161,1 +159,1 @@\n-    private boolean checkIgnore (String exceptionName) {\n+    private boolean checkIgnore(String exceptionName) {\n@@ -164,2 +162,1 @@\n-        int count;\n-        Vector v;\n+        Vector<String> v;\n@@ -172,1 +169,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/ignore\/ignore001\/ignore001.java","additions":37,"deletions":40,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -44,3 +43,3 @@\n-    public static void main(String args[]) {\n-       ignore001a _ignore001a = new ignore001a();\n-       System.exit(ignore001.JCK_STATUS_BASE + _ignore001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        ignore001a _ignore001a = new ignore001a();\n+        System.exit(ignore001.JCK_STATUS_BASE + _ignore001a.runIt(args, System.out));\n@@ -51,1 +50,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -63,1 +62,1 @@\n-    private void a (int i) {\n+    private void a(int i) {\n@@ -66,9 +65,12 @@\n-            case 0: case 3:\n-                log.display(\"Throwing NumberFormatException, i = \" + i);\n-                throw new java.lang.NumberFormatException();\n-            case 1: case 4:\n-                log.display(\"Throwing Exception1, i = \" + i);\n-                throw new Exception1();\n-            case 2: case 5:\n-                log.display(\"Throwing Exception2, i = \" + i);\n-                throw new Exception2();\n+                case 0:\n+                case 3:\n+                    log.display(\"Throwing NumberFormatException, i = \" + i);\n+                    throw new java.lang.NumberFormatException();\n+                case 1:\n+                case 4:\n+                    log.display(\"Throwing Exception1, i = \" + i);\n+                    throw new Exception1();\n+                case 2:\n+                case 5:\n+                    log.display(\"Throwing Exception2, i = \" + i);\n+                    throw new Exception2();\n@@ -83,1 +85,2 @@\n-    class Exception1 extends Exception {}\n+    class Exception1 extends Exception {\n+    }\n@@ -86,1 +89,2 @@\n-class Exception2 extends Exception {}\n+class Exception2 extends Exception {\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/ignore\/ignore001\/ignore001a.java","additions":25,"deletions":21,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -64,5 +64,9 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n-\n-import java.io.*;\n-import java.util.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n+\n+import java.io.PrintStream;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Objects;\n+import java.util.Set;\n@@ -75,1 +79,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +83,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,6 +89,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.interrupt.interrupt001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".interrupt001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.interrupt.interrupt001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".interrupt001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -111,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -123,2 +127,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.interrupt + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.interrupt + thread);\n@@ -127,2 +131,2 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.threads);\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true);\n+        jdb.receiveReplyFor(JdbCommand.threads);\n+        jdb.receiveReplyFor(JdbCommand.cont, true);\n@@ -132,1 +136,1 @@\n-        found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n+        found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n@@ -134,4 +138,4 @@\n-            if (found.indexOf(DEBUGGEE_RESULT + \" = 0\") < 0) {\n-               log.complain(\"Not all \" + MYTHREAD + \"s were interrupted.\");\n-               log.complain(found);\n-               success = false;\n+            if (!found.contains(DEBUGGEE_RESULT + \" = 0\")) {\n+                log.complain(\"Not all \" + MYTHREAD + \"s were interrupted.\");\n+                log.complain(found);\n+                success = false;\n@@ -147,1 +151,0 @@\n-        String[] reply;\n@@ -154,12 +157,12 @@\n-            String[] thrdsRply = (String[])jdb.receiveReplyFor(JdbCommand.threads);\n-            waitingTids = Arrays.asList(thrdsRply).stream()\n-                .filter((r)-> r.endsWith(\"waiting\"))\n-                .map((r)->{\n-                    Matcher m = tidPattern.matcher(r);\n-                    if (m.find()) {\n-                        return m.group(1);\n-                    }\n-                    return null;\n-                })\n-                .filter((r)-> r != null)\n-                .collect(Collectors.toSet());\n+            String[] thrdsRply = jdb.receiveReplyFor(JdbCommand.threads);\n+            waitingTids = Arrays.stream(thrdsRply)\n+                    .filter((r) -> r.endsWith(\"waiting\"))\n+                    .map((r) -> {\n+                        Matcher m = tidPattern.matcher(r);\n+                        if (m.find()) {\n+                            return m.group(1);\n+                        }\n+                        return null;\n+                    })\n+                    .filter(Objects::nonNull)\n+                    .collect(Collectors.toSet());\n@@ -171,1 +174,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.set + DEBUGGEE_CLASS + \".allWorkersAreWaiting=true\");\n+                jdb.receiveReplyFor(JdbCommand.set + DEBUGGEE_CLASS + \".allWorkersAreWaiting=true\");\n@@ -174,1 +177,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.cont);\n+                jdb.receiveReplyFor(JdbCommand.cont);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/interrupt\/interrupt001\/interrupt001.java","additions":42,"deletions":39,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -29,2 +29,1 @@\n-import java.io.*;\n-import java.util.concurrent.Semaphore;\n+import java.io.PrintStream;\n@@ -33,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -40,1 +39,1 @@\n-        public MyThread (Object l, int i, String n) {\n+        public MyThread(Object l, int i, String n) {\n@@ -68,3 +67,3 @@\n-    public static void main(String args[]) {\n-       interrupt001a _interrupt001a = new interrupt001a();\n-       System.exit(interrupt001.JCK_STATUS_BASE + _interrupt001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        interrupt001a _interrupt001a = new interrupt001a();\n+        System.exit(interrupt001.JCK_STATUS_BASE + _interrupt001a.runIt(args, System.out));\n@@ -73,1 +72,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -75,2 +75,2 @@\n-    static final String MYTHREAD        = \"MyThread\";\n-    static final int numThreads         = 5;   \/\/ number of threads\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 5;   \/\/ number of threads\n@@ -79,1 +79,1 @@\n-    private final Object waitnotify            = new Object();\n+    private final Object waitnotify = new Object();\n@@ -81,1 +81,1 @@\n-    private volatile boolean[] flags     = new boolean[numThreads];\n+    private volatile boolean[] flags = new boolean[numThreads];\n@@ -88,1 +88,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -97,1 +97,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n@@ -103,1 +103,1 @@\n-            for (i = 0; i < numThreads ; i++) {\n+            for (i = 0; i < numThreads; i++) {\n@@ -106,4 +106,4 @@\n-                     threadRunning = false;\n-                     while (!threadRunning) {\n-                         waitnotify.wait();\n-                     }\n+                    threadRunning = false;\n+                    while (!threadRunning) {\n+                        waitnotify.wait();\n+                    }\n@@ -134,1 +134,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/interrupt\/interrupt001\/interrupt001a.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -72,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -82,6 +82,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.kill.kill001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".kill001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.kill.kill001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".kill001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -97,2 +97,0 @@\n-        int count;\n-        Vector v;\n@@ -115,2 +113,2 @@\n-                                                       DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n-                                                       \"killed\");\n+                            DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n+                    \"killed\");\n@@ -131,1 +129,1 @@\n-                                                   DEBUGGEE_RESULT + \" =\");\n+                DEBUGGEE_RESULT + \" =\");\n@@ -133,1 +131,1 @@\n-        found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n+        found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n@@ -135,3 +133,3 @@\n-            if (found.indexOf(DEBUGGEE_RESULT + \" = 0\") < 0) {\n-               log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n-               success = false;\n+            if (!found.contains(DEBUGGEE_RESULT + \" = 0\")) {\n+                log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n+                success = false;\n@@ -144,1 +142,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.threads);\n+        jdb.receiveReplyFor(JdbCommand.threads);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill001\/kill001.java","additions":21,"deletions":23,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,2 +29,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -33,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,3 +33,3 @@\n-    public static void main(String args[]) {\n-       kill001a _kill001a = new kill001a();\n-       System.exit(kill001.JCK_STATUS_BASE + _kill001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        kill001a _kill001a = new kill001a();\n+        System.exit(kill001.JCK_STATUS_BASE + _kill001a.runIt(args, System.out));\n@@ -40,1 +38,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -42,4 +41,4 @@\n-    static final String MYTHREAD         = \"MyThread\";\n-    static final int numThreads          = 5;   \/\/ number of threads. one lock per thread.\n-    static Object lock                   = new Object();\n-    static Object waitnotify             = new Object();\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 5;   \/\/ number of threads. one lock per thread.\n+    static Object lock = new Object();\n+    static Object waitnotify = new Object();\n@@ -47,1 +46,1 @@\n-    static final String message          = \"kill001a's Exception\";\n+    static final String message = \"kill001a's Exception\";\n@@ -54,6 +53,6 @@\n-                    new ThreadDeath(),\n-                    new NullPointerException(message),\n-                    new SecurityException(message),\n-                    new com.sun.jdi.IncompatibleThreadStateException(message),\n-                    new MyException(message)\n-                                          };\n+            new ThreadDeath(),\n+            new NullPointerException(message),\n+            new SecurityException(message),\n+            new com.sun.jdi.IncompatibleThreadStateException(message),\n+            new MyException(message)\n+    };\n@@ -62,1 +61,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -69,1 +68,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -71,1 +70,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n@@ -78,1 +77,1 @@\n-                for (i = 0; i < numThreads ; i++) {\n+                for (i = 0; i < numThreads; i++) {\n@@ -95,1 +94,1 @@\n-            for (i = 0; i < numThreads ; i++) {\n+            for (i = 0; i < numThreads; i++) {\n@@ -99,1 +98,1 @@\n-                        synchronized(waitnotify) {\n+                        synchronized (waitnotify) {\n@@ -114,1 +113,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n@@ -126,1 +125,1 @@\n-        MyException (String message) {\n+        MyException(String message) {\n@@ -136,1 +135,1 @@\n-    public MyThread (String n) {\n+    public MyThread(String n) {\n@@ -150,1 +149,2 @@\n-        synchronized (kill001a.lock) {}\n+        synchronized (kill001a.lock) {\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill001\/kill001a.java","additions":31,"deletions":31,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -68,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,6 +78,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.kill.kill002\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".kill002\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.kill.kill002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".kill002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -93,2 +93,0 @@\n-        int count;\n-        Vector v;\n@@ -99,1 +97,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -110,3 +108,3 @@\n-            reply = jdb.receiveReplyForWithMessageWait(JdbCommand.kill + threads[i] + \" \" +\n-                                                       DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n-                                                       \"killed\");\n+            jdb.receiveReplyForWithMessageWait(JdbCommand.kill + threads[i] + \" \" +\n+                            DEBUGGEE_EXCEPTIONS + \"[\" + i + \"]\",\n+                    \"killed\");\n@@ -114,1 +112,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.threads);\n+        jdb.receiveReplyFor(JdbCommand.threads);\n@@ -125,1 +123,1 @@\n-                                            DEBUGGEE_RESULT + \" =\");\n+                DEBUGGEE_RESULT + \" =\");\n@@ -127,1 +125,1 @@\n-        found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n+        found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n@@ -129,3 +127,3 @@\n-            if (found.indexOf(DEBUGGEE_RESULT + \" = 0\") < 0) {\n-               log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n-               success = false;\n+            if (!found.contains(DEBUGGEE_RESULT + \" = 0\")) {\n+                log.complain(\"Not all \" + MYTHREAD + \"s were killed. \" + found + \" remaining\");\n+                success = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill002\/kill002.java","additions":23,"deletions":25,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -25,3 +25,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -29,1 +28,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -31,1 +30,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -33,3 +32,3 @@\n-    public static void main(String args[]) {\n-       kill002a _kill002a = new kill002a();\n-       System.exit(kill002.JCK_STATUS_BASE + _kill002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        kill002a _kill002a = new kill002a();\n+        System.exit(kill002.JCK_STATUS_BASE + _kill002a.runIt(args, System.out));\n@@ -38,1 +37,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -40,3 +40,3 @@\n-    static final String MYTHREAD         = \"MyThread\";\n-    static final int numThreads          = 5;   \/\/ number of threads\n-    static Object waitnotify             = new Object();\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 5;   \/\/ number of threads\n+    static Object waitnotify = new Object();\n@@ -44,1 +44,1 @@\n-    static final String message          = \"kill002a's Exception\";\n+    static final String message = \"kill002a's Exception\";\n@@ -50,6 +50,6 @@\n-                    new InterruptedException(message),\n-                    new NullPointerException(message),\n-                    new SecurityException(message),\n-                    new com.sun.jdi.IncompatibleThreadStateException(message),\n-                    new MyException(message)\n-                                          };\n+            new InterruptedException(message),\n+            new NullPointerException(message),\n+            new SecurityException(message),\n+            new com.sun.jdi.IncompatibleThreadStateException(message),\n+            new MyException(message)\n+    };\n@@ -57,1 +57,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -66,1 +66,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n@@ -72,1 +72,1 @@\n-            for (i = 0; i < numThreads ; i++) {\n+            for (i = 0; i < numThreads; i++) {\n@@ -89,1 +89,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n@@ -109,1 +109,1 @@\n-        MyException (String message) {\n+        MyException(String message) {\n@@ -120,1 +120,1 @@\n-    public MyThread (Object l, String n) {\n+    public MyThread(Object l, String n) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/kill\/kill002\/kill002a.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -57,2 +57,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +61,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -65,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,6 +76,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.klass.class001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".class001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String NOT_VALID_SAMPLE   = \"is not a valid\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.klass.class001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".class001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String NOT_VALID_SAMPLE = \"is not a valid\";\n@@ -84,9 +84,9 @@\n-        DEBUGGEE_CLASS,\n-        DEBUGGEE_CLASS + \"$InnerInt1\",\n-        DEBUGGEE_CLASS + \"$Inner2\",\n-        DEBUGGEE_CLASS + \"$Inner3\",\n-        DEBUGGEE_CLASS + \"$Inner4\",\n-        DEBUGGEE_CLASS + \"$Inner5\",\n-        DEBUGGEE_CLASS + \"$Inner6\",\n-        PACKAGE_NAME + \".Outer1\"\n-                                      };\n+            DEBUGGEE_CLASS,\n+            DEBUGGEE_CLASS + \"$InnerInt1\",\n+            DEBUGGEE_CLASS + \"$Inner2\",\n+            DEBUGGEE_CLASS + \"$Inner3\",\n+            DEBUGGEE_CLASS + \"$Inner4\",\n+            DEBUGGEE_CLASS + \"$Inner5\",\n+            DEBUGGEE_CLASS + \"$Inner6\",\n+            PACKAGE_NAME + \".Outer1\"\n+    };\n@@ -97,6 +97,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -104,1 +98,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -106,2 +100,2 @@\n-        for (int i = 0; i < checkedClasses.length; i++) {\n-            if (!checkClass(checkedClasses[i])) {\n+        for (String checkedClass : checkedClasses) {\n+            if (!checkClass(checkedClass)) {\n@@ -115,1 +109,1 @@\n-    private boolean checkClass (String className) {\n+    private boolean checkClass(String className) {\n@@ -118,1 +112,0 @@\n-        int count;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/klass\/class001\/class001.java","additions":26,"deletions":33,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,6 +34,3 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.klass.class001\";\n-\n-    public static void main(String args[]) {\n-       class001a _class001a = new class001a();\n-       System.exit(class001.JCK_STATUS_BASE + _class001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        class001a _class001a = new class001a();\n+        System.exit(class001.JCK_STATUS_BASE + _class001a.runIt(args, System.out));\n@@ -44,1 +40,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -46,1 +43,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -56,6 +53,14 @@\n-    interface InnerInt1 {}\n-    public class Inner2 implements InnerInt1 {}\n-    private class Inner3 {}\n-    protected class Inner4 {}\n-    abstract class Inner5 {}\n-    final class Inner6 extends Inner5{}\n+    interface InnerInt1 {\n+    }\n+\n+    public class Inner2 implements InnerInt1 {\n+    }\n+\n+    private class Inner3 {\n+    }\n+\n+    protected class Inner4 {\n+    }\n+\n+    abstract class Inner5 {\n+    }\n@@ -63,1 +68,4 @@\n-    private void init () {\n+    final class Inner6 extends Inner5 {\n+    }\n+\n+    private void init() {\n@@ -74,1 +82,2 @@\n-class Outer1 {}\n+class Outer1 {\n+}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/klass\/class001\/class001a.java","additions":30,"deletions":21,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -62,2 +62,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -65,2 +66,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -70,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -74,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -81,14 +81,14 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.list.list002\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".list002\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".runIt\";\n-    static final int    LINE_NUMBER     = 38;\n-\n-    final static String METHOD_SOURCE[] = new String[] {\n-        \"public int runIt(String args[], PrintStream out) {\",\n-        \"JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\",\n-        \"Log log = new Log(out, argumentHandler);\",\n-        \"log.display(\\\"Debuggee PASSED\\\");\",\n-        \"return list002.PASSED;\"\n-                                                    };\n+    static final String PACKAGE_NAME = \"nsk.jdb.list.list002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".list002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".runIt\";\n+    static final int LINE_NUMBER = 37;\n+\n+    final static String[] METHOD_SOURCE = new String[]{\n+            \"public int runIt(String[] args, PrintStream out) {\",\n+            \"JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\",\n+            \"Log log = new Log(out, argumentHandler);\",\n+            \"log.display(\\\"Debuggee PASSED\\\");\",\n+            \"return list002.PASSED;\"\n+    };\n@@ -97,1 +97,1 @@\n-        \"System.exit(list002.JCK_STATUS_BASE + _list002a.runIt(args, System.out));\";\n+            \"System.exit(list002.JCK_STATUS_BASE + _list002a.runIt(args, System.out));\";\n@@ -104,3 +104,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -109,1 +106,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -116,4 +113,3 @@\n-            for (int i = 0; i < METHOD_SOURCE.length; i++) {\n-                if (grep.find(METHOD_SOURCE[i]) == 0) {\n-                    failure(\"Line is not found in method sources:\\n\\t\"+\n-                        METHOD_SOURCE[i]);\n+            for (String s : METHOD_SOURCE) {\n+                if (grep.find(s) == 0) {\n+                    failure(\"Line is not found in method sources:\\n\\t\" + s);\n@@ -130,2 +126,1 @@\n-                failure(\"Line \" + LINE_NUMBER + \" is not found:\\n\\t\"+\n-                    LINE_SOURCE);\n+                failure(\"Line \" + LINE_NUMBER + \" is not found:\\n\\t\" + LINE_SOURCE);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/list\/list002\/list002.java","additions":27,"deletions":32,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -38,2 +37,2 @@\n-    public static void main(String args[]) { \/\/ list002.LINE_NUMBER\n-       System.exit(list002.JCK_STATUS_BASE + _list002a.runIt(args, System.out));\n+    public static void main(String[] args) { \/\/ list002.LINE_NUMBER\n+        System.exit(list002.JCK_STATUS_BASE + _list002a.runIt(args, System.out));\n@@ -42,1 +41,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/list\/list002\/list002a.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -69,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -77,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -92,2 +93,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -95,16 +96,15 @@\n-    static final int    BREAKPOINT_LINE1 = 84;\n-    static final int    BREAKPOINT_LINE2 = 100;\n-\n-    static final String LOCALS[][] = new String[][] {\n-       { \"boolVar\"  , \"true\"         , \"false\"         },\n-       { \"byteVar\"  , \"27\"           , \"12\"            },\n-       { \"charVar\"  , \"V\"            , \"A\"             },\n-       { \"shortVar\" , \"767\"          , \"327\"           },\n-       { \"intVar\"   , \"1474\"         , \"3647\"          },\n-       { \"longVar\"  , \"21345\"        , \"65789\"         },\n-       { \"floatVar\" , \"3.141\"        , \"4.852\"         },\n-       { \"doubleVar\", \"2.578\"        , \"3.8976\"        },\n-       { \"objVar\"   , \"objVarString\" , \"objArgString\"  },\n-       { \"arrVar\"   , \"int[5]\"       , \"int[3]\"        }\n-\n-                                                    };\n+    static final int BREAKPOINT_LINE1 = 83;\n+    static final int BREAKPOINT_LINE2 = 99;\n+\n+    static final String[][] LOCALS = new String[][]{\n+            {\"boolVar\",     \"true\",         \"false\"},\n+            {\"byteVar\",     \"27\",           \"12\"},\n+            {\"charVar\",     \"V\",            \"A\"},\n+            {\"shortVar\",    \"767\",          \"327\"},\n+            {\"intVar\",      \"1474\",         \"3647\"},\n+            {\"longVar\",     \"21345\",        \"65789\"},\n+            {\"floatVar\",    \"3.141\",        \"4.852\"},\n+            {\"doubleVar\",   \"2.578\",        \"3.8976\"},\n+            {\"objVar\",      \"objVarString\", \"objArgString\"},\n+            {\"arrVar\",      \"int[5]\",       \"int[3]\"}\n+    };\n@@ -115,3 +115,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -125,4 +123,4 @@\n-        for (int i = 0; i < LOCALS.length; i++) {\n-            v = new Vector();\n-            v.add(LOCALS[i][0]);\n-            v.add(LOCALS[i][2]);\n+        for (String[] local : LOCALS) {\n+            v = new Vector<>();\n+            v.add(local[0]);\n+            v.add(local[2]);\n@@ -130,2 +128,1 @@\n-                failure(\"Cannot find \" + LOCALS[0][0] +\n-                    \" with expected value: \" + LOCALS[i][2]);\n+                failure(\"Cannot find \" + LOCALS[0][0] + \" with expected value: \" + local[2]);\n@@ -138,4 +135,4 @@\n-        for (int i = 0; i < LOCALS.length; i++) {\n-            v = new Vector();\n-            v.add(LOCALS[i][0]);\n-            v.add(LOCALS[i][1]);\n+        for (String[] local : LOCALS) {\n+            v = new Vector<>();\n+            v.add(local[0]);\n+            v.add(local[1]);\n@@ -143,2 +140,1 @@\n-                failure(\"Cannot find \" + LOCALS[0][0] +\n-                    \" with expected value: \" + LOCALS[i][1]);\n+                failure(\"Cannot find \" + LOCALS[0][0] + \" with expected value: \" + local[1]);\n@@ -150,10 +146,0 @@\n-\n-    private boolean checkStop () {\n-        Paragrep grep;\n-        String[] reply;\n-        String found;\n-        Vector v;\n-        boolean result = true;\n-\n-        return result;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/locals\/locals002\/locals002.java","additions":36,"deletions":50,"binary":false,"changes":86,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -32,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -38,2 +37,2 @@\n-    public static void main(String args[]) {\n-       System.exit(locals002.JCK_STATUS_BASE + _locals002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(locals002.JCK_STATUS_BASE + _locals002a.runIt(args, System.out));\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -50,14 +50,14 @@\n-        for (int i = 0 ; i < 3 ; i++) arr[i] = i*i;\n-\n-        allKindsOfVars (\n-            false,\n-            (byte)12,\n-            'A',\n-            (short)327,\n-            3647,\n-            (long)65789,\n-            (float)4.852,\n-            (double)3.8976,\n-            \"objArgString\",\n-            arr\n-                       );\n+        for (int i = 0; i < 3; i++) arr[i] = i * i;\n+\n+        allKindsOfVars(\n+                false,\n+                (byte) 12,\n+                'A',\n+                (short) 327,\n+                3647,\n+                (long) 65789,\n+                (float) 4.852,\n+                (double) 3.8976,\n+                \"objArgString\",\n+                arr\n+        );\n@@ -71,31 +71,30 @@\n-   public void allKindsOfVars (\n-       boolean boolVar,\n-       byte    byteVar,\n-       char    charVar,\n-       short   shortVar,\n-       int     intVar,\n-       long    longVar,\n-       float   floatVar,\n-       double  doubleVar,\n-       Object  objVar,\n-       int[]   arrVar\n-                              )\n-   {\n-       int x = 3; \/\/ locals002.BREAKPOINT_LINE1\n-   }\n-\n-   static void allKindsOfLocals()  {\n-       boolean boolVar   = true;\n-       byte    byteVar   = 27;\n-       char    charVar   = 'V';\n-       short   shortVar  = (short)767;\n-       int     intVar    = 1474;\n-       long    longVar   = (long)21345;\n-       float   floatVar  = (float)3.141;\n-       double  doubleVar = (double)2.578;\n-       Object  objVar    = \"objVarString\";\n-       int[]   arrVar    = new int[5];\n-\n-       for (int j = 0; j < 5 ; j++) arrVar[j] = j;\n-       int x = 4; \/\/ locals002.BREAKPOINT_LINE2\n-   }\n+    public void allKindsOfVars(\n+            boolean boolVar,\n+            byte byteVar,\n+            char charVar,\n+            short shortVar,\n+            int intVar,\n+            long longVar,\n+            float floatVar,\n+            double doubleVar,\n+            Object objVar,\n+            int[] arrVar\n+    ) {\n+        int x = 3; \/\/ locals002.BREAKPOINT_LINE1\n+    }\n+\n+    static void allKindsOfLocals() {\n+        boolean boolVar = true;\n+        byte byteVar = 27;\n+        char charVar = 'V';\n+        short shortVar = (short) 767;\n+        int intVar = 1474;\n+        long longVar = (long) 21345;\n+        float floatVar = (float) 3.141;\n+        double doubleVar = (double) 2.578;\n+        Object objVar = \"objVarString\";\n+        int[] arrVar = new int[5];\n+\n+        for (int j = 0; j < 5; j++) arrVar[j] = j;\n+        int x = 4; \/\/ locals002.BREAKPOINT_LINE2\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/locals\/locals002\/locals002a.java","additions":53,"deletions":54,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,3 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.StringTokenizer;\n+import java.util.Vector;\n@@ -75,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -89,2 +91,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,4 +96,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -100,1 +98,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -106,1 +104,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass1, testedClass1 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass1, testedClass1);\n@@ -109,1 +107,1 @@\n-            checkMethod( reply, \"f\" + intToString(i), 1, testedClass1, testedClass1 );\n+            checkMethod(reply, \"f\" + intToString(i), 1, testedClass1, testedClass1);\n@@ -116,1 +114,1 @@\n-        checkMethod( reply1, \"<init>\", 4, testedClass2, testedClass2 );\n+        checkMethod(reply1, \"<init>\", 4, testedClass2, testedClass2);\n@@ -122,1 +120,1 @@\n-        checkMethod( reply1, \"m01\", 3, testedClass3, testedClass3 );\n+        checkMethod(reply1, \"m01\", 3, testedClass3, testedClass3);\n@@ -127,1 +125,1 @@\n-        checkMethod( reply, \"m01\", 1, testedClass4, testedClass4 );\n+        checkMethod(reply, \"m01\", 1, testedClass4, testedClass4);\n@@ -132,1 +130,1 @@\n-        checkMethod( reply, \"i01\", 1, testedClass5, testedClass5 );\n+        checkMethod(reply, \"i01\", 1, testedClass5, testedClass5);\n@@ -137,3 +135,3 @@\n-        checkMethod( reply, \"m01\", 1, testedClass4, testedClass6 );\n-        checkMethod( reply, \"i01\", 1, testedClass5, testedClass6 );\n-        checkMethod( reply, \"m01\", 1, testedClass6, testedClass6 );\n+        checkMethod(reply, \"m01\", 1, testedClass4, testedClass6);\n+        checkMethod(reply, \"i01\", 1, testedClass5, testedClass6);\n+        checkMethod(reply, \"m01\", 1, testedClass6, testedClass6);\n@@ -145,1 +143,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass1, testedClass7 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass1, testedClass7);\n@@ -148,1 +146,1 @@\n-            checkMethod( reply, \"f\" + intToString(i), 1, testedClass1, testedClass7 );\n+            checkMethod(reply, \"f\" + intToString(i), 1, testedClass1, testedClass7);\n@@ -151,1 +149,1 @@\n-        \/\/ Case for class with inherited and overrided methods\n+        \/\/ Case for class with inherited and overridden methods\n@@ -155,1 +153,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass8, testedClass8 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass8, testedClass8);\n@@ -158,1 +156,1 @@\n-            checkMethod( reply, \"m\" + intToString(i), 1, testedClass1, testedClass8 );\n+            checkMethod(reply, \"m\" + intToString(i), 1, testedClass1, testedClass8);\n@@ -161,1 +159,1 @@\n-            checkMethod( reply, \"f\" + intToString(i), 1, testedClass1, testedClass8 );\n+            checkMethod(reply, \"f\" + intToString(i), 1, testedClass1, testedClass8);\n@@ -167,7 +165,7 @@\n-    private void checkMethod (\n-        String[] reply,       \/* reply on 'methods' command *\/\n-        String methodName,    \/* method name *\/\n-        int expOccur,         \/* expected number of occurences of the method *\/\n-        String ownerClass,    \/* name of class defining method *\/\n-        String testedClass    \/* name of tested class *\/\n-                             ) {\n+    private void checkMethod(\n+            String[] reply,       \/* reply on 'methods' command *\/\n+            String methodName,    \/* method name *\/\n+            int expOccur,         \/* expected number of occurences of the method *\/\n+            String ownerClass,    \/* name of class defining method *\/\n+            String testedClass    \/* name of tested class *\/\n+    ) {\n@@ -176,1 +174,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -183,3 +181,3 @@\n-                \"\\n\\t of class \" + ownerClass +\n-                \"\\n\\t in class \" + testedClass +\n-                \"\\n\\t expected number: \" + expOccur + \" got: \" + j);\n+                    \"\\n\\t of class \" + ownerClass +\n+                    \"\\n\\t in class \" + testedClass +\n+                    \"\\n\\t expected number: \" + expOccur + \" got: \" + j);\n@@ -189,4 +187,4 @@\n-    private String[] toStringArray (String[] arr) {\n-        Vector v = new Vector();\n-        for (int i = 0; i < arr.length; i++) {\n-            StringTokenizer st = new StringTokenizer(arr[i], \"\\r\\n\");\n+    private String[] toStringArray(String[] arr) {\n+        Vector<String> v = new Vector<>();\n+        for (String s : arr) {\n+            StringTokenizer st = new StringTokenizer(s, \"\\r\\n\");\n@@ -200,1 +198,1 @@\n-            results[i] = (String)objects[i];\n+            results[i] = (String) objects[i];\n@@ -205,1 +203,1 @@\n-    private String intToString (int i) {\n+    private String intToString(int i) {\n@@ -207,1 +205,1 @@\n-        if (s.length()==1)\n+        if (s.length() == 1) {\n@@ -209,0 +207,1 @@\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/methods\/methods002\/methods002.java","additions":46,"deletions":47,"binary":false,"changes":93,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(methods002.JCK_STATUS_BASE + _methods002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(methods002.JCK_STATUS_BASE + _methods002a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -60,29 +60,71 @@\n-                 void  m01 (long l) { lo = l; };\n-    private      void  m02 (long l) { lo = l; };\n-    protected    void  m03 (long l) { lo = l; };\n-    public       void  m04 (long l) { lo = l; };\n-    static       void  m05 (long l) { lo = l; };\n-    synchronized void  m06 (long l) { lo = l; };\n-    strictfp     void  m07 (long l) { lo = l; };\n-    native       void  m08 (long l);\n-    public static synchronized strictfp void m09 (long l) { lo = l; };\n-\n-                 long  m10 (long l) { return lo + l; };\n-    private      long  m11 (long l) { return lo + l; };\n-    protected    long  m12 (long l) { return lo + l; };\n-    public       long  m13 (long l) { return lo + l; };\n-    static       long  m14 (long l) { return lo + l; };\n-    synchronized long  m15 (long l) { return lo + l; };\n-    strictfp     long  m16 (long l) { return lo + l; };\n-    native       long  m17 (long l);\n-    public static synchronized strictfp long m18 (long l) { return lo + l; };\n-\n-                 Object  m19 () { return new Object(); };\n-    private      Object  m20 () { return new Object(); };\n-    protected    Object  m21 () { return new Object(); };\n-    public       Object  m22 () { return new Object(); };\n-    static       Object  m23 () { return new Object(); };\n-    synchronized Object  m24 () { return new Object(); };\n-    strictfp     Object  m25 () { return new Object(); };\n-    native       Object  m26 ();\n-    public static synchronized strictfp Object m27 () { return new Object(); };\n+    void m01(long l) {\n+        lo = l;\n+    }\n+\n+    private void m02(long l) {\n+        lo = l;\n+    }\n+\n+    protected void m03(long l) {\n+        lo = l;\n+    }\n+\n+    public void m04(long l) {\n+        lo = l;\n+    }\n+\n+    static void m05(long l) {\n+        lo = l;\n+    }\n+\n+    synchronized void m06(long l) {\n+        lo = l;\n+    }\n+\n+    strictfp void m07(long l) {\n+        lo = l;\n+    }\n+\n+    native void m08(long l);\n+\n+    public static synchronized strictfp void m09(long l) {\n+        lo = l;\n+    }\n+\n+    long m10(long l) {\n+        return lo + l;\n+    }\n+\n+    private long m11(long l) {\n+        return lo + l;\n+    }\n+\n+    protected long m12(long l) {\n+        return lo + l;\n+    }\n+\n+    public long m13(long l) {\n+        return lo + l;\n+    }\n+\n+    static long m14(long l) {\n+        return lo + l;\n+    }\n+\n+    synchronized long m15(long l) {\n+        return lo + l;\n+    }\n+\n+    strictfp long m16(long l) {\n+        return lo + l;\n+    }\n+\n+    native long m17(long l);\n+\n+    public static synchronized strictfp long m18(long l) {\n+        return lo + l;\n+    }\n+\n+    Object m19() {\n+        return new Object();\n+    }\n@@ -90,0 +132,29 @@\n+    private Object m20() {\n+        return new Object();\n+    }\n+\n+    protected Object m21() {\n+        return new Object();\n+    }\n+\n+    public Object m22() {\n+        return new Object();\n+    }\n+\n+    static Object m23() {\n+        return new Object();\n+    }\n+\n+    synchronized Object m24() {\n+        return new Object();\n+    }\n+\n+    strictfp Object m25() {\n+        return new Object();\n+    }\n+\n+    native Object m26();\n+\n+    public static synchronized strictfp Object m27() {\n+        return new Object();\n+    }\n@@ -92,3 +163,11 @@\n-    double[]   m28 () { return new double[1]; };\n-    double     m29 (double[] arr) {return arr[0];};\n-    double[][] m30 (double[][] arr) {return arr;};\n+    double[] m28() {\n+        return new double[1];\n+    }\n+\n+    double m29(double[] arr) {\n+        return arr[0];\n+    }\n+\n+    double[][] m30(double[][] arr) {\n+        return arr;\n+    }\n@@ -96,3 +175,11 @@\n-    String[]   m31 () { return new String[1];};\n-    String     m32 (String[] arr) { return arr[0];};\n-    String[][] m33 (String[][] arr) {return arr;};\n+    String[] m31() {\n+        return new String[1];\n+    }\n+\n+    String m32(String[] arr) {\n+        return arr[0];\n+    }\n+\n+    String[][] m33(String[][] arr) {\n+        return arr;\n+    }\n@@ -101,3 +188,11 @@\n-    final        void    f01 (long l) { lo = l; };\n-    final        long    f02 (long l) { return lo + l; };\n-    final        Object  f03 () { return new Object(); };\n+    final void f01(long l) {\n+        lo = l;\n+    }\n+\n+    final long f02(long l) {\n+        return lo + l;\n+    }\n+\n+    final Object f03() {\n+        return new Object();\n+    }\n@@ -109,1 +204,0 @@\n-    methods002b (int i) { ind = i; };\n@@ -111,3 +205,15 @@\n-    private   methods002b (int i, int j) { ind = i+j; };\n-    protected methods002b (int i, int j, int k) { ind = i+j+k; };\n-    public    methods002b (int i, int j, int k, int l) { ind = i+j+k+l; };\n+    methods002b(int i) {\n+        ind = i;\n+    }\n+\n+    private methods002b(int i, int j) {\n+        ind = i + j;\n+    }\n+\n+    protected methods002b(int i, int j, int k) {\n+        ind = i + j + k;\n+    }\n+\n+    public methods002b(int i, int j, int k, int l) {\n+        ind = i + j + k + l;\n+    }\n@@ -118,3 +224,11 @@\n-    int m01 (int i) { return i; };\n-    int m01 (int i, int j) { return i+j; };\n-    int m01 (int i, short j) { return i+j; };\n+    int m01(int i) {\n+        return i;\n+    }\n+\n+    int m01(int i, int j) {\n+        return i + j;\n+    }\n+\n+    int m01(int i, short j) {\n+        return i + j;\n+    }\n@@ -125,1 +239,1 @@\n-    abstract void m01 ();\n+    abstract void m01();\n@@ -129,1 +243,1 @@\n-    void i01 ();\n+    void i01();\n@@ -133,2 +247,5 @@\n-    void m01 () {};\n-    public void i01 () {};\n+    void m01() {\n+    }\n+\n+    public void i01() {\n+    }\n@@ -138,1 +255,2 @@\n-class methods002f extends methods002a {}\n+class methods002f extends methods002a {\n+}\n@@ -144,37 +262,126 @@\n-                 void  m01 (long l) { lo = l; };\n-    private      void  m02 (long l) { lo = l; };\n-    protected    void  m03 (long l) { lo = l; };\n-    public       void  m04 (long l) { lo = l; };\n-    static       void  m05 (long l) { lo = l; };\n-    synchronized void  m06 (long l) { lo = l; };\n-    strictfp     void  m07 (long l) { lo = l; };\n-    native       void  m08 (long l);\n-    public static synchronized strictfp void m09 (long l) { lo = l; };\n-\n-                 long  m10 (long l) { return lo + l; };\n-    private      long  m11 (long l) { return lo + l; };\n-    protected    long  m12 (long l) { return lo + l; };\n-    public       long  m13 (long l) { return lo + l; };\n-    static       long  m14 (long l) { return lo + l; };\n-    synchronized long  m15 (long l) { return lo + l; };\n-    strictfp     long  m16 (long l) { return lo + l; };\n-    native       long  m17 (long l);\n-    public static synchronized strictfp long m18 (long l) { return lo + l; };\n-\n-                 Object  m19 () { return new Object(); };\n-    private      Object  m20 () { return new Object(); };\n-    protected    Object  m21 () { return new Object(); };\n-    public       Object  m22 () { return new Object(); };\n-    static       Object  m23 () { return new Object(); };\n-    synchronized Object  m24 () { return new Object(); };\n-    strictfp     Object  m25 () { return new Object(); };\n-    native       Object  m26 ();\n-    public static synchronized strictfp Object m27 () { return new Object(); };\n-\n-    double[]   m28 () { return new double[1]; };\n-    double     m29 (double[] arr) {return arr[0];};\n-    double[][] m30 (double[][] arr) {return arr;};\n-\n-    String[]   m31 () { return new String[1];};\n-    String     m32 (String[] arr) { return arr[0];};\n-    String[][] m33 (String[][] arr) {return arr;};\n+    void m01(long l) {\n+        lo = l;\n+    }\n+\n+    private void m02(long l) {\n+        lo = l;\n+    }\n+\n+    protected void m03(long l) {\n+        lo = l;\n+    }\n+\n+    public void m04(long l) {\n+        lo = l;\n+    }\n+\n+    static void m05(long l) {\n+        lo = l;\n+    }\n+\n+    synchronized void m06(long l) {\n+        lo = l;\n+    }\n+\n+    strictfp void m07(long l) {\n+        lo = l;\n+    }\n+\n+    native void m08(long l);\n+\n+    public static synchronized strictfp void m09(long l) {\n+        lo = l;\n+    }\n+\n+    long m10(long l) {\n+        return lo + l;\n+    }\n+\n+    private long m11(long l) {\n+        return lo + l;\n+    }\n+\n+    protected long m12(long l) {\n+        return lo + l;\n+    }\n+\n+    public long m13(long l) {\n+        return lo + l;\n+    }\n+\n+    static long m14(long l) {\n+        return lo + l;\n+    }\n+\n+    synchronized long m15(long l) {\n+        return lo + l;\n+    }\n+\n+    strictfp long m16(long l) {\n+        return lo + l;\n+    }\n+\n+    native long m17(long l);\n+\n+    public static synchronized strictfp long m18(long l) {\n+        return lo + l;\n+    }\n+\n+    Object m19() {\n+        return new Object();\n+    }\n+\n+    private Object m20() {\n+        return new Object();\n+    }\n+\n+    protected Object m21() {\n+        return new Object();\n+    }\n+\n+    public Object m22() {\n+        return new Object();\n+    }\n+\n+    static Object m23() {\n+        return new Object();\n+    }\n+\n+    synchronized Object m24() {\n+        return new Object();\n+    }\n+\n+    strictfp Object m25() {\n+        return new Object();\n+    }\n+\n+    native Object m26();\n+\n+    public static synchronized strictfp Object m27() {\n+        return new Object();\n+    }\n+\n+    double[] m28() {\n+        return new double[1];\n+    }\n+\n+    double m29(double[] arr) {\n+        return arr[0];\n+    }\n+\n+    double[][] m30(double[][] arr) {\n+        return arr;\n+    }\n+\n+    String[] m31() {\n+        return new String[1];\n+    }\n+\n+    String m32(String[] arr) {\n+        return arr[0];\n+    }\n+\n+    String[][] m33(String[][] arr) {\n+        return arr;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/methods\/methods002\/methods002a.java","additions":303,"deletions":96,"binary":false,"changes":399,"status":"modified"},{"patch":"@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -71,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,3 +86,3 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    LINE_NUMBER        = 47;\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int LINE_NUMBER = 47;\n@@ -90,5 +91,5 @@\n-        JdbCommand.threads,\n-        JdbCommand.methods + DEBUGGEE_CLASS,\n-        JdbCommand.fields  + DEBUGGEE_CLASS,\n-        JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n-                                             };\n+            JdbCommand.threads,\n+            JdbCommand.methods + DEBUGGEE_CLASS,\n+            JdbCommand.fields + DEBUGGEE_CLASS,\n+            JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n+    };\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -103,1 +100,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n@@ -105,2 +102,2 @@\n-        for (int i = 0; i < CHECKED_COMMANDS.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[i]);\n+        for (String checkedCommand : CHECKED_COMMANDS) {\n+            jdb.receiveReplyFor(JdbCommand.monitor + checkedCommand);\n@@ -110,1 +107,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n+        jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n@@ -127,2 +124,0 @@\n-        String found;\n-        Vector v;\n@@ -133,3 +128,3 @@\n-        for (int i = 0; i < CHECKED_COMMANDS.length; i++) {\n-            if ((count = grep.find(CHECKED_COMMANDS[i])) != 1) {\n-                log.complain(\"Wrong number of monitor command: \" + CHECKED_COMMANDS[i]);\n+        for (String checkedCommand : CHECKED_COMMANDS) {\n+            if ((count = grep.find(checkedCommand)) != 1) {\n+                log.complain(\"Wrong number of monitor command: \" + checkedCommand);\n@@ -146,2 +141,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor001\/monitor001.java","additions":24,"deletions":30,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -38,1 +37,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor001\/monitor001a.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -59,2 +59,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -62,2 +63,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -67,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -71,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -81,3 +81,3 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    LINE_NUMBER        = 47;\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int LINE_NUMBER = 47;\n@@ -86,2 +86,2 @@\n-        JdbCommand.unmonitor + \"1\"\n-                                             };\n+            JdbCommand.unmonitor + \"1\"\n+    };\n@@ -91,4 +91,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -96,1 +92,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n@@ -98,2 +94,2 @@\n-        for (int i = 0; i < CHECKED_COMMANDS.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[i]);\n+        for (String checkedCommand : CHECKED_COMMANDS) {\n+            jdb.receiveReplyFor(JdbCommand.monitor + checkedCommand);\n@@ -103,1 +99,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n+        jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor002\/monitor002.java","additions":16,"deletions":20,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -38,1 +37,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/monitor\/monitor002\/monitor002a.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -71,1 +71,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +75,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -82,6 +82,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.next.next001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".next001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.next.next001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".next001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -94,5 +94,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-        String[] threads;\n@@ -102,1 +97,0 @@\n-        int breakCount = 0;\n@@ -107,2 +101,1 @@\n-                breakCount++;\n-                reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n+                jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n@@ -110,1 +103,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.next);\n+                jdb.receiveReplyFor(JdbCommand.next);\n@@ -129,1 +122,1 @@\n-    private boolean checkNext () {\n+    private boolean checkNext() {\n@@ -131,1 +124,0 @@\n-        String found;\n@@ -142,1 +134,1 @@\n-            result= false;\n+            result = false;\n@@ -148,1 +140,1 @@\n-            result= false;\n+            result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/next\/next001\/next001.java","additions":18,"deletions":26,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,3 +33,3 @@\n-    public static void main(String args[]) {\n-       next001a _next001a = new next001a();\n-       System.exit(next001.JCK_STATUS_BASE + _next001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        next001a _next001a = new next001a();\n+        System.exit(next001.JCK_STATUS_BASE + _next001a.runIt(args, System.out));\n@@ -39,1 +38,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -41,2 +41,2 @@\n-    static final String MYTHREAD  = \"MyThread\";\n-    static final int numThreads   = 2;   \/\/ number of threads.\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 2;   \/\/ number of threads.\n@@ -49,1 +49,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -54,1 +54,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -56,1 +56,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -89,1 +89,1 @@\n-        return i*i;\n+        return i * i;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/next\/next001\/next001a.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect001\/connect001.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(connect001.JCK_STATUS_BASE + _connect001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(connect001.JCK_STATUS_BASE + _connect001a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect001\/connect001a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect002\/connect002.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(connect002.JCK_STATUS_BASE + _connect002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(connect002.JCK_STATUS_BASE + _connect002a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect002\/connect002a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect003\/connect003.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(connect003.JCK_STATUS_BASE + _connect003a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(connect003.JCK_STATUS_BASE + _connect003a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect003\/connect003a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect004\/connect004.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(connect004.JCK_STATUS_BASE + _connect004a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(connect004.JCK_STATUS_BASE + _connect004a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect004\/connect004a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,2 +88,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -102,3 +103,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -111,1 +110,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect005\/connect005.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(connect005.JCK_STATUS_BASE + _connect005a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(connect005.JCK_STATUS_BASE + _connect005a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/connect\/connect005\/connect005a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -69,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.Jdb;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -77,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -88,2 +89,0 @@\n-    static final String PACKAGE_NAME = \"nsk.jdb.options.connect\";\n-    static final String TEST_CLASS = PACKAGE_NAME + \".connect001\";\n@@ -91,2 +90,2 @@\n-    static final String FIRST_BREAK    = null;\n-    static final String LAST_BREAK     = null;\n+    static final String FIRST_BREAK = null;\n+    static final String LAST_BREAK = null;\n@@ -94,1 +93,0 @@\n-    static final String TESTED_OPTION = \"-listconnectors\";\n@@ -96,8 +94,8 @@\n-        \"com.sun.jdi.CommandLineLaunch\", \"dt_socket\",\n-        \"com.sun.jdi.CommandLineLaunch\", \"dt_shmem\",\n-        \"com.sun.jdi.RawCommandLineLaunch\", \"dt_socket\",\n-        \"com.sun.jdi.RawCommandLineLaunch\", \"dt_shmem\",\n-        \"com.sun.jdi.SocketAttach\", \"dt_socket\",\n-        \"com.sun.jdi.SocketListen\", \"dt_socket\",\n-        \"com.sun.jdi.SharedMemoryAttach\", \"dt_shmem\",\n-        \"com.sun.jdi.SharedMemoryListen\", \"dt_shmem\",\n+            \"com.sun.jdi.CommandLineLaunch\", \"dt_socket\",\n+            \"com.sun.jdi.CommandLineLaunch\", \"dt_shmem\",\n+            \"com.sun.jdi.RawCommandLineLaunch\", \"dt_socket\",\n+            \"com.sun.jdi.RawCommandLineLaunch\", \"dt_shmem\",\n+            \"com.sun.jdi.SocketAttach\", \"dt_socket\",\n+            \"com.sun.jdi.SocketListen\", \"dt_socket\",\n+            \"com.sun.jdi.SharedMemoryAttach\", \"dt_shmem\",\n+            \"com.sun.jdi.SharedMemoryListen\", \"dt_shmem\",\n@@ -129,2 +127,2 @@\n-            String connector = TESTED_CONNECTORS_LIST[i*2 + 0];\n-            String transport = TESTED_CONNECTORS_LIST[i*2 + 1];\n+            String connector = TESTED_CONNECTORS_LIST[i * 2];\n+            String transport = TESTED_CONNECTORS_LIST[i * 2 + 1];\n@@ -133,1 +131,1 @@\n-            Vector<String> v = new Vector<String>();\n+            Vector<String> v = new Vector<>();\n@@ -153,1 +151,1 @@\n-                            || argumentHandler.shouldPass(connector, transport)) {\n+                    || argumentHandler.shouldPass(connector, transport)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/options\/listconnectors\/listconnectors001\/listconnectors001.java","additions":22,"deletions":24,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +73,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +77,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,3 +86,3 @@\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -89,1 +90,1 @@\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -91,1 +92,0 @@\n-    static final String[] CHECKED_METHODS = {\"func1\", \"func2\", \"func3\", \"func4\", \"func5\"};\n@@ -96,3 +96,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -101,1 +98,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -112,1 +109,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n+            jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n@@ -114,1 +111,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n+            jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n@@ -118,1 +115,1 @@\n-                 success = false;\n+                success = false;\n@@ -120,1 +117,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n+            jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n@@ -127,1 +124,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.pop);\n+            jdb.receiveReplyFor(JdbCommand.pop);\n@@ -138,2 +135,2 @@\n-                for (int i = 0; i < reply.length; i++) {\n-                    log.complain(reply[i]);\n+                for (String s : reply) {\n+                    log.complain(s);\n@@ -150,1 +147,1 @@\n-    private boolean checkStack (String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean pop ) {\n+    private boolean checkStack(String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean pop) {\n@@ -152,2 +149,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -161,1 +157,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( pop? \"after 'pop' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (pop ? \"after 'pop' command\" : \"\"));\n@@ -168,1 +164,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( pop? \"after 'pop' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (pop ? \"after 'pop' command\" : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop\/pop001\/pop001.java","additions":24,"deletions":28,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,1 +34,1 @@\n-    static final String MYTHREAD  = \"MyThread\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -42,2 +41,2 @@\n-    public static void main(String args[]) {\n-       System.exit(pop001.JCK_STATUS_BASE + _pop001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(pop001.JCK_STATUS_BASE + _pop001a.runIt(args, System.out));\n@@ -46,1 +45,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -48,1 +48,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -71,1 +71,1 @@\n-    public MyThread (String name) {\n+    public MyThread(String name) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop\/pop001\/pop001a.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -51,2 +51,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -54,2 +55,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -59,5 +59,5 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.pop_exception.pop_exception001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".pop_exception001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.pop_exception.pop_exception001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".pop_exception001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -65,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,1 +77,0 @@\n-\n@@ -82,1 +81,1 @@\n-        \/\/exception\n+        \/\/ exception\n@@ -96,5 +95,5 @@\n-        String replyString = \"\";\n-        for(String s: jdbReply) {\n-            replyString += s;\n-            if(s.contains(\"line=\")){\n-                if(!s.contains(\"line=\" + pop_exception001a.expectedFinish)) {\n+        StringBuilder replyString = new StringBuilder();\n+        for (String s : jdbReply) {\n+            replyString.append(s);\n+            if (s.contains(\"line=\")) {\n+                if (!s.contains(\"line=\" + pop_exception001a.expectedFinish)) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop_exception\/pop_exception001\/pop_exception001.java","additions":18,"deletions":19,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Consts;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -38,3 +38,3 @@\n-    public static void main(String args[]) {\n-       pop_exception001a _pop_exception001a = new pop_exception001a();\n-       System.exit(Consts.JCK_STATUS_BASE + _pop_exception001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        pop_exception001a _pop_exception001a = new pop_exception001a();\n+        System.exit(Consts.JCK_STATUS_BASE + _pop_exception001a.runIt(args, System.out));\n@@ -43,4 +43,1 @@\n-    static JdbArgumentHandler argumentHandler;\n-    static Log log;\n-\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -54,1 +51,1 @@\n-            System.out.println(\"item = \"+item);\n+            System.out.println(\"item = \" + item);\n@@ -67,1 +64,1 @@\n-    public final static String expectedFinish = \"51\";\n+    public final static String expectedFinish = \"48\";\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/pop_exception\/pop_exception001\/pop_exception001a.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -69,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +73,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -77,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,2 +91,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -95,4 +95,4 @@\n-        { \"i + j\", \"8\"},\n-        { \"j - i\", \"4\"},\n-        { \"j * i\", \"12\"},\n-        { \"j \/ i\", \"3\"},\n+            {\"i + j\", \"8\"},\n+            {\"j - i\", \"4\"},\n+            {\"j * i\", \"12\"},\n+            {\"j \/ i\", \"3\"},\n@@ -107,2 +107,2 @@\n-        { \"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.s\", \"foo\" }\n-                                          };\n+            {\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z.s\", \"foo\"}\n+    };\n@@ -111,6 +111,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -118,1 +112,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -121,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -123,2 +117,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            if (!checkValue(checkedExpr[i][0], checkedExpr[i][1])) {\n+        for (String[] strings : checkedExpr) {\n+            if (!checkValue(strings[0], strings[1])) {\n@@ -132,1 +126,1 @@\n-    private boolean checkValue (String expr, String value) {\n+    private boolean checkValue(String expr, String value) {\n@@ -136,1 +130,0 @@\n-        Vector v;\n@@ -144,1 +137,1 @@\n-            log.complain(\"\\t expected : \" + value + \" ;\\n\\t reported: \" + (reply.length > 0? reply[0]: \"\"));\n+            log.complain(\"\\t expected : \" + value + \" ;\\n\\t reported: \" + (reply.length > 0 ? reply[0] : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/print\/print002\/print002.java","additions":21,"deletions":28,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -37,2 +36,2 @@\n-    public static void main(String args[]) {\n-       System.exit(print002.JCK_STATUS_BASE + _print002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(print002.JCK_STATUS_BASE + _print002a.runIt(args, System.out));\n@@ -41,1 +40,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -43,1 +43,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -64,2 +64,5 @@\n-B b;\n-A() { b = new B(); }\n+    B b;\n+\n+    A() {\n+        b = new B();\n+    }\n@@ -69,2 +72,5 @@\n-C c;\n-B() { c = new C(); }\n+    C c;\n+\n+    B() {\n+        c = new C();\n+    }\n@@ -74,2 +80,5 @@\n-D d;\n-C() { d = new D(); }\n+    D d;\n+\n+    C() {\n+        d = new D();\n+    }\n@@ -79,2 +88,5 @@\n-E e;\n-D() { e = new E(); }\n+    E e;\n+\n+    D() {\n+        e = new E();\n+    }\n@@ -84,2 +96,5 @@\n-F f;\n-E() { f = new F(); }\n+    F f;\n+\n+    E() {\n+        f = new F();\n+    }\n@@ -89,2 +104,5 @@\n-G g;\n-F() { g = new G(); }\n+    G g;\n+\n+    F() {\n+        g = new G();\n+    }\n@@ -94,2 +112,5 @@\n-H h;\n-G() { h = new H(); }\n+    H h;\n+\n+    G() {\n+        h = new H();\n+    }\n@@ -99,2 +120,5 @@\n-I i;\n-H() { i = new I(); }\n+    I i;\n+\n+    H() {\n+        i = new I();\n+    }\n@@ -104,2 +128,5 @@\n-J j;\n-I() { j = new J(); }\n+    J j;\n+\n+    I() {\n+        j = new J();\n+    }\n@@ -109,2 +136,5 @@\n-K k;\n-J() { k = new K(); }\n+    K k;\n+\n+    J() {\n+        k = new K();\n+    }\n@@ -114,2 +144,5 @@\n-L l;\n-K() { l = new L(); }\n+    L l;\n+\n+    K() {\n+        l = new L();\n+    }\n@@ -119,2 +152,5 @@\n-M m;\n-L() { m = new M(); }\n+    M m;\n+\n+    L() {\n+        m = new M();\n+    }\n@@ -124,2 +160,5 @@\n-N n;\n-M() { n = new N(); }\n+    N n;\n+\n+    M() {\n+        n = new N();\n+    }\n@@ -129,2 +168,5 @@\n-O o;\n-N() { o = new O(); }\n+    O o;\n+\n+    N() {\n+        o = new O();\n+    }\n@@ -134,2 +176,5 @@\n-P p;\n-O() { p = new P(); }\n+    P p;\n+\n+    O() {\n+        p = new P();\n+    }\n@@ -139,2 +184,5 @@\n-Q q;\n-P() { q = new Q(); }\n+    Q q;\n+\n+    P() {\n+        q = new Q();\n+    }\n@@ -144,2 +192,5 @@\n-R r;\n-Q() { r = new R(); }\n+    R r;\n+\n+    Q() {\n+        r = new R();\n+    }\n@@ -149,2 +200,5 @@\n-S s;\n-R() { s = new S(); }\n+    S s;\n+\n+    R() {\n+        s = new S();\n+    }\n@@ -154,2 +208,5 @@\n-T t;\n-S() { t = new T(); }\n+    T t;\n+\n+    S() {\n+        t = new T();\n+    }\n@@ -159,2 +216,5 @@\n-U u;\n-T() { u = new U(); }\n+    U u;\n+\n+    T() {\n+        u = new U();\n+    }\n@@ -164,2 +224,5 @@\n-V v;\n-U() { v = new V(); }\n+    V v;\n+\n+    U() {\n+        v = new V();\n+    }\n@@ -169,2 +232,5 @@\n-W w;\n-V() { w = new W(); }\n+    W w;\n+\n+    V() {\n+        w = new W();\n+    }\n@@ -174,2 +240,5 @@\n-X x;\n-W() { x = new X(); }\n+    X x;\n+\n+    W() {\n+        x = new X();\n+    }\n@@ -179,2 +248,5 @@\n-Y y;\n-X() { y = new Y(); }\n+    Y y;\n+\n+    X() {\n+        y = new Y();\n+    }\n@@ -184,2 +256,5 @@\n-Z z;\n-Y() { z = new Z(); }\n+    Z z;\n+\n+    Y() {\n+        z = new Z();\n+    }\n@@ -189,2 +264,5 @@\n-  String s;\n-  Z() { s  = \"foo\";}\n+    String s;\n+\n+    Z() {\n+        s = \"foo\";\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/print\/print002\/print002a.java","additions":139,"deletions":61,"binary":false,"changes":200,"status":"modified"},{"patch":"@@ -69,2 +69,0 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n@@ -72,0 +70,3 @@\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -73,2 +74,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -78,1 +79,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -82,2 +83,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -92,2 +93,2 @@\n-    static final String FIRST_BREAK    = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK     = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -104,1 +105,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -107,1 +108,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -122,2 +123,0 @@\n-        String found;\n-        Vector v = new Vector();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/read\/read001\/read001.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,1 +36,1 @@\n-    double testedInstanceFieldDouble = (double)3.1414926;\n+    double testedInstanceFieldDouble = (double) 3.1414926;\n@@ -38,1 +38,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -43,1 +43,2 @@\n-    void lastBreak () {}\n+    void lastBreak() {\n+    }\n@@ -54,1 +55,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/read\/read001\/read001a.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -29,2 +29,2 @@\n-                                      \/\/  'return \"AFTER_REDEFINITION\";' in\n-                                      \/\/  the newclass\/RedefinedClass.java.\n+        \/\/  'return \"AFTER_REDEFINITION\";' in\n+        \/\/  the newclass\/RedefinedClass.java.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/redefine\/redefine001\/RedefinedClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,2 +73,1 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n@@ -76,0 +75,2 @@\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -77,2 +78,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -82,1 +83,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -86,2 +87,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -96,2 +97,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -99,1 +100,1 @@\n-    static final String REDEFINED_CLASS    = PACKAGE_NAME + \".RedefinedClass\";\n+    static final String REDEFINED_CLASS = PACKAGE_NAME + \".RedefinedClass\";\n@@ -101,1 +102,1 @@\n-    static final String FIRST_REDEFINITION  = \"AFTER_REDEFINITION\";\n+    static final String FIRST_REDEFINITION = \"AFTER_REDEFINITION\";\n@@ -107,3 +108,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -112,1 +110,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -114,1 +112,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n+        jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n@@ -119,1 +117,1 @@\n-            log.complain(\"Wrong value of redefine001a.flag before redefinition: \" + (reply.length > 0? reply[0]: \"\"));\n+            log.complain(\"Wrong value of redefine001a.flag before redefinition: \" + (reply.length > 0 ? reply[0] : \"\"));\n@@ -126,1 +124,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile1);\n+            jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile1);\n@@ -128,1 +126,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -133,1 +131,1 @@\n-                log.complain(\"Wrong value of redefine001a.flag after first redefinition: \" + (reply.length > 0? reply[0]: \"\"));\n+                log.complain(\"Wrong value of redefine001a.flag after first redefinition: \" + (reply.length > 0 ? reply[0] : \"\"));\n@@ -143,1 +141,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile2);\n+            jdb.receiveReplyFor(JdbCommand.redefine + REDEFINED_CLASS + \" \" + pathToRedefFile2);\n@@ -145,1 +143,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -150,1 +148,1 @@\n-                log.complain(\"Wrong value of redefine001a.flag after second redefinition: \" + (reply.length > 0? reply[0]: \"\"));\n+                log.complain(\"Wrong value of redefine001a.flag after second redefinition: \" + (reply.length > 0 ? reply[0] : \"\"));\n@@ -160,10 +158,0 @@\n-\n-    private boolean checkStop () {\n-        Paragrep grep;\n-        String[] reply;\n-        String found;\n-        Vector v;\n-        boolean result = true;\n-\n-        return result;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/redefine\/redefine001\/redefine001.java","additions":21,"deletions":33,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(redefine001.JCK_STATUS_BASE + _redefine001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(redefine001.JCK_STATUS_BASE + _redefine001a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/redefine\/redefine001\/redefine001a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -71,1 +72,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +76,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -84,3 +85,3 @@\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -88,1 +89,1 @@\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -90,1 +91,0 @@\n-    static final String[] CHECKED_METHODS = {\"func1\", \"func2\", \"func3\", \"func4\", \"func5\"};\n@@ -95,3 +95,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n@@ -100,1 +97,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -111,1 +108,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n+            jdb.receiveReplyFor(JdbCommand.thread + threads[0]);\n@@ -113,1 +110,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n+            jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak()\n@@ -120,1 +117,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n+            jdb.receiveReplyFor(JdbCommand.up + \" 3\");\n@@ -127,1 +124,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.reenter);\n+            jdb.receiveReplyFor(JdbCommand.reenter);\n@@ -138,2 +135,2 @@\n-                for (int i = 0; i < reply.length; i++) {\n-                    log.complain(reply[i]);\n+                for (String s : reply) {\n+                    log.complain(s);\n@@ -150,1 +147,1 @@\n-    private boolean checkStack (String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean reenter ) {\n+    private boolean checkStack(String[] reply, String shouldBe, String frameNum, String shouldNotBe, boolean reenter) {\n@@ -152,2 +149,1 @@\n-        String found;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -161,1 +157,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( reenter? \"after 'reenter' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (reenter ? \"after 'reenter' command\" : \"\"));\n@@ -168,1 +164,1 @@\n-            log.complain(\"Contents of stack trace is incorrect \" + ( reenter? \"after 'reenter' command\": \"\"));\n+            log.complain(\"Contents of stack trace is incorrect \" + (reenter ? \"after 'reenter' command\" : \"\"));\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/reenter\/reenter001\/reenter001.java","additions":23,"deletions":27,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,1 +34,1 @@\n-    static final String MYTHREAD  = \"MyThread\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -42,2 +41,2 @@\n-    public static void main(String args[]) {\n-       System.exit(reenter001.JCK_STATUS_BASE + _reenter001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(reenter001.JCK_STATUS_BASE + _reenter001a.runIt(args, System.out));\n@@ -46,1 +45,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -48,1 +48,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -71,1 +71,1 @@\n-    public MyThread (String name) {\n+    public MyThread(String name) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/reenter\/reenter001\/reenter001a.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -118,2 +118,2 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.TestFailure;\n@@ -121,0 +121,2 @@\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -122,2 +124,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -126,6 +128,6 @@\n-        final static String TEST_CLASS     = b4689395.class.getName();\n-        final static String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n-        final static String FIRST_BREAK    = DEBUGGEE_CLASS + \".main\";\n-        final static String ERROR_MESSAGE  = \"ERROR_M\";\n-        final static int    LINE_NUMBER    = 54;\n-        private String classFile;\n+    final static String TEST_CLASS = b4689395.class.getName();\n+    final static String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    final static String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    final static String ERROR_MESSAGE = \"ERROR_M\";\n+    final static int LINE_NUMBER = 54;\n+    private String classFile;\n@@ -133,3 +135,3 @@\n-        public static void main (String argv[]) {\n-                System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n-        }\n+    public static void main(String[] argv) {\n+        System.exit(run(argv, System.out) + JCK_STATUS_BASE);\n+    }\n@@ -137,5 +139,5 @@\n-        public static int run(String argv[], PrintStream out) {\n-                debuggeeClass =  DEBUGGEE_CLASS;\n-                firstBreak = FIRST_BREAK;\n-                return new b4689395().runTest(argv, out);\n-        }\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n+        firstBreak = FIRST_BREAK;\n+        return new b4689395().runTest(argv, out);\n+    }\n@@ -143,5 +145,5 @@\n-        public b4689395() {\n-                classFile = ClassLoadUtils.getRedefineClassFileName(DEBUGGEE_CLASS);\n-                if (classFile == null)\n-                        throw new TestFailure(\"Unable to find redefine class file in classpath for: \" + DEBUGGEE_CLASS);\n-        }\n+    public b4689395() {\n+        classFile = ClassLoadUtils.getRedefineClassFileName(DEBUGGEE_CLASS);\n+        if (classFile == null)\n+            throw new TestFailure(\"Unable to find redefine class file in classpath for: \" + DEBUGGEE_CLASS);\n+    }\n@@ -149,4 +151,4 @@\n-        protected void runCases() {\n-                String[] reply;\n-                reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n-                reply = jdb.receiveReplyFor(JdbCommand.cont);\n+    protected void runCases() {\n+        String[] reply;\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + LINE_NUMBER);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -154,4 +156,3 @@\n-                if (new File(classFile).exists()) {\n-                        reply = jdb.receiveReplyFor(JdbCommand.redefine + DEBUGGEE_CLASS\n-                                        + \" \" + classFile);\n-                        reply = jdb.receiveReplyFor(JdbCommand.next);\n+        if (new File(classFile).exists()) {\n+            jdb.receiveReplyFor(JdbCommand.redefine + DEBUGGEE_CLASS + \" \" + classFile);\n+            reply = jdb.receiveReplyFor(JdbCommand.next);\n@@ -159,12 +160,9 @@\n-                        Paragrep grep = new Paragrep(reply);\n-                        if (grep.find(ERROR_MESSAGE) != 0) {\n-                                log.complain(\"'\" + ERROR_MESSAGE + \"' is not expected to be \"\n-                                                + \"printed after 'next' command.\");\n-                                success = false;\n-                        }\n-                } else {\n-                        log.complain(\"File does not exist: \" + classFile);\n-                        success = false;\n-                }\n-\n-                jdb.contToExit(1);\n+            Paragrep grep = new Paragrep(reply);\n+            if (grep.find(ERROR_MESSAGE) != 0) {\n+                log.complain(\"'\" + ERROR_MESSAGE + \"' is not expected to be \"\n+                        + \"printed after 'next' command.\");\n+                success = false;\n+            }\n+        } else {\n+            log.complain(\"File does not exist: \" + classFile);\n+            success = false;\n@@ -172,0 +170,3 @@\n+\n+        jdb.contToExit(1);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/regression\/b4689395\/b4689395.java","additions":44,"deletions":43,"binary":false,"changes":87,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Consts;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +34,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +36,2 @@\n-        static b4689395a _b4689395a = new b4689395a();\n-        final static String ERROR_MESSAGE  = \"ERROR_M\";\n+    static b4689395a _b4689395a = new b4689395a();\n+    final static String ERROR_MESSAGE = \"ERROR_M\";\n@@ -39,3 +39,3 @@\n-        public static void main(String args[]) {\n-                System.exit(Consts.JCK_STATUS_BASE + _b4689395a.runIt(args, System.out));\n-        }\n+    public static void main(String[] args) {\n+        System.exit(Consts.JCK_STATUS_BASE + _b4689395a.runIt(args, System.out));\n+    }\n@@ -43,3 +43,3 @@\n-        public int runIt(String args[], PrintStream out) {\n-                JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\n-                Log log = new Log(out, argumentHandler);\n+    public int runIt(String[] args, PrintStream out) {\n+        JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\n+        Log log = new Log(out, argumentHandler);\n@@ -47,1 +47,1 @@\n-                minor();\n+        minor();\n@@ -49,3 +49,3 @@\n-                log.display(\"Debuggee PASSED\");\n-                return Consts.TEST_PASSED;\n-        }\n+        log.display(\"Debuggee PASSED\");\n+        return Consts.TEST_PASSED;\n+    }\n@@ -53,6 +53,6 @@\n-        public static void minor() {\n-                System.out.println(\"In the top of the method minor().\"); \/\/ b4689395.LINE_NUMBER\n-                System.out.println(\"A breakpoint is here.\");\n-                System.out.println(\"In the bottom of the method minor().\");\n-                System.out.println(ERROR_MESSAGE);\n-        }\n+    public static void minor() {\n+        System.out.println(\"In the top of the method minor().\"); \/\/ b4689395.LINE_NUMBER\n+        System.out.println(\"A breakpoint is here.\");\n+        System.out.println(\"In the bottom of the method minor().\");\n+        System.out.println(ERROR_MESSAGE);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/regression\/b4689395\/b4689395a.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Consts;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +34,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +36,2 @@\n-        static b4689395a _b4689395a = new b4689395a();\n-        final static String ERROR_MESSAGE  = \"ERROR_M\";\n+    static b4689395a _b4689395a = new b4689395a();\n+    final static String ERROR_MESSAGE = \"ERROR_M\";\n@@ -39,3 +39,3 @@\n-        public static void main(String args[]) {\n-                System.exit(Consts.JCK_STATUS_BASE + _b4689395a.runIt(args, System.out));\n-        }\n+    public static void main(String[] args) {\n+        System.exit(Consts.JCK_STATUS_BASE + _b4689395a.runIt(args, System.out));\n+    }\n@@ -43,3 +43,3 @@\n-        public int runIt(String args[], PrintStream out) {\n-                JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\n-                Log log = new Log(out, argumentHandler);\n+    public int runIt(String[] args, PrintStream out) {\n+        JdbArgumentHandler argumentHandler = new JdbArgumentHandler(args);\n+        Log log = new Log(out, argumentHandler);\n@@ -47,1 +47,1 @@\n-                minor();\n+        minor();\n@@ -49,3 +49,3 @@\n-                log.display(\"Debuggee PASSED\");\n-                return Consts.TEST_PASSED;\n-        }\n+        log.display(\"Debuggee PASSED\");\n+        return Consts.TEST_PASSED;\n+    }\n@@ -53,6 +53,6 @@\n-        public static void minor() {\n-                System.out.println(\"In the top of the method minor()\"); \/\/ b4689395.LINE_NUMBER\n-                System.out.println(\"A breakpoint is here.\");\n-                System.out.println(\"In the bottom of the method minor().\");\n-                System.out.println(ERROR_MESSAGE);\n-        }\n+    public static void minor() {\n+        System.out.println(\"In the top of the method minor()\"); \/\/ b4689395.LINE_NUMBER\n+        System.out.println(\"A breakpoint is here.\");\n+        System.out.println(\"In the bottom of the method minor().\");\n+        System.out.println(ERROR_MESSAGE);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/regression\/b4689395\/newclass\/b4689395a.java","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -75,1 +75,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +79,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -86,5 +86,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.resume.resume002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".resume002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.resume.resume002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".resume002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -92,1 +92,1 @@\n-    static final String THREAD_NAME      = \"MyThread\";\n+    static final String THREAD_NAME = \"MyThread\";\n@@ -97,3 +97,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/resume\/resume002\/resume002.java","additions":13,"deletions":16,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,1 +34,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -39,1 +39,3 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n+\n@@ -41,1 +43,1 @@\n-    static Thread holder [] = new Thread[numThreads];\n+    static Thread holder[] = new Thread[numThreads];\n@@ -45,1 +47,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -53,1 +55,1 @@\n-            for (int i = 0; i < numThreads ; i++) {\n+            for (int i = 0; i < numThreads; i++) {\n@@ -62,1 +64,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n@@ -69,1 +71,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -107,1 +109,1 @@\n-    MyThread (Lock l, String name) {\n+    MyThread(Lock l, String name) {\n@@ -118,1 +120,1 @@\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n@@ -120,1 +122,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/resume\/resume002\/resume002a.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -61,2 +61,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -64,2 +65,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -69,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -73,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,2 +84,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -89,3 +90,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -98,1 +97,1 @@\n-            v = new Vector();\n+            v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/run\/run002\/run002.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(run002.JCK_STATUS_BASE + _run002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(run002.JCK_STATUS_BASE + _run002a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/run\/run002\/run002a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -70,2 +70,2 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -73,2 +73,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -78,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -82,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -92,2 +91,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -98,3 +97,3 @@\n-        { DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\" },\n-        { DEBUGGEE_CLASS + \"._set001a.myInstanceField\", \"9223372036854775807\" },\n-                                          };\n+            {DEBUGGEE_CLASS + \".myStaticField\", \"-2147483648\"},\n+            {DEBUGGEE_CLASS + \"._set001a.myInstanceField\", \"9223372036854775807\"},\n+    };\n@@ -104,4 +103,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -110,1 +105,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -113,1 +108,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -116,2 +111,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.set + checkedExpr[i][0] + \" = \" + checkedExpr[i][1]);\n+        for (String[] strings : checkedExpr) {\n+            jdb.receiveReplyFor(JdbCommand.set + strings[0] + \" = \" + strings[1]);\n@@ -120,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -123,2 +118,2 @@\n-        \/\/if everything is OK reply will look like this\n-        \/\/  nsk.jdb.set.set001.set001a.errorMessage = \"\"\n+        \/\/ if everything is OK reply will look like this\n+        \/\/   nsk.jdb.set.set001.set001a.errorMessage = \"\"\n@@ -127,2 +122,2 @@\n-            for (int i = 0; i < reply.length; i++) {\n-                log.complain(reply[i]);\n+            for (String s : reply) {\n+                log.complain(s);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set001\/set001.java","additions":20,"deletions":25,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -40,2 +39,2 @@\n-    public static void main(String args[]) {\n-       System.exit(set001.JCK_STATUS_BASE + _set001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(set001.JCK_STATUS_BASE + _set001a.runIt(args, System.out));\n@@ -44,1 +43,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -46,1 +46,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set001\/set001a.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -70,2 +70,2 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -73,2 +73,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -78,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -82,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -93,2 +92,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -99,3 +98,3 @@\n-        { DEBUGGEE_CLASS + \"._set002a.myArrayField[0][0].line\", \"\\\"ABCDE\\\"\" },\n-        { \"localInt\", \"java.lang.Integer.MIN_VALUE\"}\n-                                          };\n+            {DEBUGGEE_CLASS + \"._set002a.myArrayField[0][0].line\", \"\\\"ABCDE\\\"\"},\n+            {\"localInt\", \"java.lang.Integer.MIN_VALUE\"}\n+    };\n@@ -105,4 +104,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -111,1 +106,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -114,1 +109,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -117,2 +112,2 @@\n-        for (int i = 0; i < checkedExpr.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.set + checkedExpr[i][0] + \" = \" + checkedExpr[i][1]);\n+        for (String[] strings : checkedExpr) {\n+            jdb.receiveReplyFor(JdbCommand.set + strings[0] + \" = \" + strings[1]);\n@@ -121,1 +116,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -125,2 +120,2 @@\n-        \/\/if everything is OK reply will look like this\n-        \/\/  nsk.jdb.set.set002.set002a.errorMessage = \"\"\n+        \/\/ if everything is OK reply will look like this\n+        \/\/   nsk.jdb.set.set002.set002a.errorMessage = \"\"\n@@ -129,2 +124,2 @@\n-            for (int i = 0; i < reply.length; i++) {\n-                log.complain(reply[i]);\n+            for (String s : reply) {\n+                log.complain(s);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set002\/set002.java","additions":20,"deletions":25,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -40,2 +39,2 @@\n-    public static void main(String args[]) {\n-       System.exit(set002.JCK_STATUS_BASE + _set002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(set002.JCK_STATUS_BASE + _set002a.runIt(args, System.out));\n@@ -44,1 +43,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -46,1 +46,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -78,2 +78,2 @@\n-    private set002a () {\n-         myArrayField = new MyClass[][] {new MyClass[] {new MyClass(\"\")}};\n+    private set002a() {\n+        myArrayField = new MyClass[][]{new MyClass[]{new MyClass(\"\")}};\n@@ -85,1 +85,1 @@\n-        public MyClass (String s) {\n+        public MyClass(String s) {\n@@ -90,1 +90,1 @@\n-             return line;\n+            return line;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/set\/set002\/set002a.java","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -73,2 +73,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -76,2 +77,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -81,1 +81,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -85,2 +85,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -92,6 +92,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.step.step002\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".step002\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    BREAKPOINT_LINE = 50;\n+    static final String PACKAGE_NAME = \"nsk.jdb.step.step002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".step002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int BREAKPOINT_LINE = 49;\n@@ -102,4 +102,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n-        String[] threads;\n@@ -107,2 +103,2 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -111,1 +107,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -119,1 +115,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n@@ -127,1 +123,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.step);\n+        jdb.receiveReplyFor(JdbCommand.step);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step\/step002\/step002.java","additions":18,"deletions":22,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -32,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,3 +35,3 @@\n-    public static void main(String args[]) {\n-       step002a _step002a = new step002a();\n-       System.exit(step002.JCK_STATUS_BASE + _step002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        step002a _step002a = new step002a();\n+        System.exit(step002.JCK_STATUS_BASE + _step002a.runIt(args, System.out));\n@@ -44,1 +43,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -57,2 +56,2 @@\n-    int foo (int i) {\n-        return i*i;\n+    int foo(int i) {\n+        return i * i;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step\/step002\/step002a.java","additions":10,"deletions":11,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -62,2 +62,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -65,2 +66,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -70,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -74,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -81,6 +81,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.step_up.step_up001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".step_up001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.step_up.step_up001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".step_up001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -93,5 +93,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-        String[] threads;\n@@ -101,1 +96,0 @@\n-        int breakCount = 0;\n@@ -106,2 +100,1 @@\n-                breakCount++;\n-                reply = jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n+                jdb.receiveReplyFor(JdbCommand.step); \/\/ to get out of lastBreak;\n@@ -109,1 +102,1 @@\n-                reply = jdb.receiveReplyFor(JdbCommand.step_up);\n+                jdb.receiveReplyFor(JdbCommand.step_up);\n@@ -128,1 +121,1 @@\n-    private boolean checkSteppedUp () {\n+    private boolean checkSteppedUp() {\n@@ -130,1 +123,0 @@\n-        String found;\n@@ -142,1 +134,1 @@\n-                result= false;\n+                result = false;\n@@ -149,1 +141,1 @@\n-            result= false;\n+            result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step_up\/step_up001\/step_up001.java","additions":18,"deletions":26,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,3 +33,3 @@\n-    public static void main(String args[]) {\n-       step_up001a _step_up001a = new step_up001a();\n-       System.exit(step_up001.JCK_STATUS_BASE + _step_up001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        step_up001a _step_up001a = new step_up001a();\n+        System.exit(step_up001.JCK_STATUS_BASE + _step_up001a.runIt(args, System.out));\n@@ -39,1 +38,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -41,2 +41,2 @@\n-    static final String MYTHREAD  = \"MyThread\";\n-    static final int numThreads   = 2;   \/\/ number of threads.\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 2;   \/\/ number of threads.\n@@ -49,1 +49,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -54,1 +54,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -56,1 +56,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -89,1 +89,1 @@\n-        return i*i;\n+        return i * i;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/step_up\/step_up001\/step_up001a.java","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -54,2 +54,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -57,2 +58,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -64,1 +64,0 @@\n- *\n@@ -69,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -73,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,4 +82,4 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String DEBUGGEE_LOCATION1 = DEBUGGEE_CLASS + \"$Nested$DeeperNested$DeepestNested:43\";\n-    static final String DEBUGGEE_LOCATION2 = DEBUGGEE_CLASS + \"$Inner$MoreInner:57\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String DEBUGGEE_LOCATION1 = DEBUGGEE_CLASS + \"$Nested$DeeperNested$DeepestNested:66\";\n+    static final String DEBUGGEE_LOCATION2 = DEBUGGEE_CLASS + \"$Inner$MoreInner:81\";\n@@ -90,6 +89,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n-\n@@ -107,1 +100,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002.java","additions":12,"deletions":19,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -24,0 +24,2 @@\n+\/\/    THIS TEST IS LINE NUMBER SENSITIVE\n+\n@@ -26,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,4 +35,4 @@\n-    public static void main(String args[]) {\n-       stop_at002a _stop_at002a = new stop_at002a();\n-       lastBreak();\n-       System.exit(stop_at002.JCK_STATUS_BASE + _stop_at002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        stop_at002a _stop_at002a = new stop_at002a();\n+        lastBreak();\n+        System.exit(stop_at002.JCK_STATUS_BASE + _stop_at002a.runIt(args, System.out));\n@@ -40,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -56,1 +58,2 @@\n-        Nested (boolean b) {\n+\n+        Nested(boolean b) {\n@@ -59,0 +62,1 @@\n+\n@@ -60,1 +64,1 @@\n-            class  DeepestNested {\n+            class DeepestNested {\n@@ -62,1 +66,1 @@\n-                    flag = input; \/* <--------  This is line number 43 *\/\n+                    flag = input; \/\/ stop_at002.DEBUGGEE_LOCATION1\n@@ -75,0 +79,1 @@\n+\n@@ -76,1 +81,1 @@\n-                content += input; \/* <--------  This is line number 57 *\/\n+                content += input; \/\/ stop_at002.DEBUGGEE_LOCATION2\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at002\/stop_at002a.java","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -66,2 +66,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -69,2 +70,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -76,1 +76,0 @@\n- *\n@@ -81,1 +80,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -85,2 +84,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -95,8 +94,8 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String[][] LOCATIONS = new String[][] {\n-        { PACKAGE_NAME + \".stop_at003b:61\", PACKAGE_NAME + \".stop_at003b.<clinit>()\" },\n-        { PACKAGE_NAME + \".stop_at003b:63\", PACKAGE_NAME + \".stop_at003b.<init>()\" },\n-        { PACKAGE_NAME + \".stop_at003b:66\", PACKAGE_NAME + \".stop_at003b.<init>()\" },\n-        { PACKAGE_NAME + \".stop_at003b:72\", PACKAGE_NAME + \".stop_at003b.foo()\" }\n-                                                   };\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String[][] LOCATIONS = new String[][]{\n+            {PACKAGE_NAME + \".stop_at003b:62\", PACKAGE_NAME + \".stop_at003b.<clinit>()\"},\n+            {PACKAGE_NAME + \".stop_at003b:66\", PACKAGE_NAME + \".stop_at003b.<init>()\"},\n+            {PACKAGE_NAME + \".stop_at003b:70\", PACKAGE_NAME + \".stop_at003b.<init>()\"},\n+            {PACKAGE_NAME + \".stop_at003b:76\", PACKAGE_NAME + \".stop_at003b.foo()\"}\n+    };\n@@ -107,4 +106,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -112,3 +107,3 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n-            if (!checkStop(LOCATIONS[i][0])) {\n-                failure(\"jdb failed to set line breakpoint at : \" + LOCATIONS[i][0]);\n+        for (String[] location : LOCATIONS) {\n+            if (!checkStop(location[0])) {\n+                failure(\"jdb failed to set line breakpoint at : \" + location[0]);\n@@ -118,1 +113,1 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n+        for (String[] location : LOCATIONS) {\n@@ -120,2 +115,2 @@\n-            if (!jdb.isAtBreakpoint(reply, LOCATIONS[i][1])) {\n-                failure(\"Missed breakpoint at : \" + LOCATIONS[i][0]);\n+            if (!jdb.isAtBreakpoint(reply, location[1])) {\n+                failure(\"Missed breakpoint at : \" + location[0]);\n@@ -128,1 +123,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at003\/stop_at003.java","additions":22,"deletions":27,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -32,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -38,2 +37,2 @@\n-    public static void main(String args[]) {\n-       stop_at003a _stop_at003a = new stop_at003a();\n+    public static void main(String[] args) {\n+        stop_at003a _stop_at003a = new stop_at003a();\n@@ -41,1 +40,1 @@\n-       System.exit(stop_at003.JCK_STATUS_BASE + _stop_at003a.runIt(args, System.out));\n+        System.exit(stop_at003.JCK_STATUS_BASE + _stop_at003a.runIt(args, System.out));\n@@ -44,1 +43,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -46,1 +46,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -61,1 +61,3 @@\n-    static { intField = 1; }      \/\/ stop_at003.LOCATIONS[0]\n+    static {\n+        intField = 1;   \/\/ stop_at003.LOCATIONS[0]\n+    }\n@@ -63,1 +65,3 @@\n-    { intField = 2; }             \/\/ stop_at003.LOCATIONS[1]\n+    {\n+        intField = 2;   \/\/ stop_at003.LOCATIONS[1]\n+    }\n@@ -65,2 +69,2 @@\n-    stop_at003b () {\n-        intField++;               \/\/ stop_at003.LOCATIONS[2]\n+    stop_at003b() {\n+        intField++;     \/\/ stop_at003.LOCATIONS[2]\n@@ -69,1 +73,1 @@\n-    void foo () {\n+    void foo() {\n@@ -72,1 +76,1 @@\n-        } catch (Exception e) {   \/\/ stop_at003.LOCATIONS[3]\n+        } catch (Exception e) { \/\/ stop_at003.LOCATIONS[3]\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_at\/stop_at003\/stop_at003a.java","additions":20,"deletions":16,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -82,1 +82,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -86,2 +86,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -96,9 +96,9 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String[] LOCATIONS = new String[] {\n-        PACKAGE_NAME + \".stop_in002b.<clinit>\",\n-        PACKAGE_NAME + \".stop_in002b.<init>\",\n-        PACKAGE_NAME + \".stop_in002b$StaticNested.m1\",\n-        PACKAGE_NAME + \".stop_in002b$Inner.m2\",\n-        PACKAGE_NAME + \".stop_in002b.foo\"\n-                                                   };\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String[] LOCATIONS = new String[]{\n+            PACKAGE_NAME + \".stop_in002b.<clinit>\",\n+            PACKAGE_NAME + \".stop_in002b.<init>\",\n+            PACKAGE_NAME + \".stop_in002b$StaticNested.m1\",\n+            PACKAGE_NAME + \".stop_in002b$Inner.m2\",\n+            PACKAGE_NAME + \".stop_in002b.foo\"\n+    };\n@@ -109,4 +109,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -114,3 +110,3 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n-            if (!checkStop(LOCATIONS[i])) {\n-                failure(\"jdb failed to set line breakpoint at : \" + LOCATIONS[i]);\n+        for (String location : LOCATIONS) {\n+            if (!checkStop(location)) {\n+                failure(\"jdb failed to set line breakpoint at : \" + location);\n@@ -120,1 +116,1 @@\n-        for (int i = 0; i < LOCATIONS.length; i++) {\n+        for (String location : LOCATIONS) {\n@@ -122,2 +118,2 @@\n-            if (!jdb.isAtBreakpoint(reply, LOCATIONS[i])) {\n-                failure(\"Missed breakpoint at : \" + LOCATIONS[i]);\n+            if (!jdb.isAtBreakpoint(reply, location)) {\n+                failure(\"Missed breakpoint at : \" + location);\n@@ -130,1 +126,1 @@\n-    private boolean checkStop (String location) {\n+    private boolean checkStop(String location) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_in\/stop_in002\/stop_in002.java","additions":23,"deletions":27,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       stop_in002a _stop_in002a = new stop_in002a();\n+    public static void main(String[] args) {\n+        stop_in002a _stop_in002a = new stop_in002a();\n@@ -39,1 +38,1 @@\n-       System.exit(stop_in002.JCK_STATUS_BASE + _stop_in002a.runIt(args, System.out));\n+        System.exit(stop_in002.JCK_STATUS_BASE + _stop_in002a.runIt(args, System.out));\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -62,1 +62,3 @@\n-    static { intField = 1; }\n+    static {\n+        intField = 1;\n+    }\n@@ -64,1 +66,1 @@\n-    stop_in002b () {\n+    stop_in002b() {\n@@ -70,1 +72,2 @@\n-        public static void m1() {}\n+        public static void m1() {\n+        }\n@@ -74,1 +77,2 @@\n-        public void m2() {}\n+        public void m2() {\n+        }\n@@ -77,1 +81,3 @@\n-    final int foo (int i) {return i++;}\n+    final int foo(int i) {\n+        return i++;\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/stop_in\/stop_in002\/stop_in002a.java","additions":21,"deletions":15,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -63,2 +63,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -66,2 +67,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -71,1 +71,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -75,2 +75,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,2 +85,2 @@\n-    static final String FIRST_BREAK    = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK     = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -88,1 +88,1 @@\n-    static final String SUSPENDED       = \"Suspended\";\n+    static final String SUSPENDED = \"Suspended\";\n@@ -95,2 +95,0 @@\n-        int count;\n-        Vector v;\n@@ -101,1 +99,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -111,1 +109,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.suspend + threads[0]);\n+            jdb.receiveReplyFor(JdbCommand.suspend + threads[0]);\n@@ -122,6 +120,6 @@\n-            found = grep.findFirst(DEBUGGEE_RESULT + \" =\" );\n-            if (found.length() > 0 && found.indexOf(DEBUGGEE_RESULT + \" = null\") < 0) {\n-                if (found.indexOf(DEBUGGEE_RESULT + \" = 1\") < 0) {\n-                   log.complain(\"Wrong value of \" + DEBUGGEE_RESULT);\n-                   log.complain(found);\n-                   success = false;\n+            found = grep.findFirst(DEBUGGEE_RESULT + \" =\");\n+            if (found.length() > 0 && !found.contains(DEBUGGEE_RESULT + \" = null\")) {\n+                if (!found.contains(DEBUGGEE_RESULT + \" = 1\")) {\n+                    log.complain(\"Wrong value of \" + DEBUGGEE_RESULT);\n+                    log.complain(found);\n+                    success = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/suspend\/suspend001\/suspend001.java","additions":18,"deletions":20,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -39,2 +38,2 @@\n-    public static void main(String args[]) {\n-       System.exit(suspend001.JCK_STATUS_BASE + _suspend001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(suspend001.JCK_STATUS_BASE + _suspend001a.runIt(args, System.out));\n@@ -43,1 +42,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -45,2 +45,2 @@\n-    static Object lock                   = new Object();\n-    static Object waitnotify             = new Object();\n+    static Object lock = new Object();\n+    static Object waitnotify = new Object();\n@@ -49,1 +49,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -59,15 +59,15 @@\n-                    suspended.start();\n-                    try {\n-                        waitnotify.wait();\n-                    } catch (InterruptedException e) {\n-                        log.complain(\"Main thread was interrupted while waiting for start of Suspended thread\");\n-                        return suspend001.FAILED;\n-                    }\n-\n-                    myThread.start();\n-                    try {\n-                        waitnotify.wait();\n-                    } catch (InterruptedException e) {\n-                        log.complain(\"Main thread was interrupted while waiting for start of MyThread thread\");\n-                        return suspend001.FAILED;\n-                    }\n+                suspended.start();\n+                try {\n+                    waitnotify.wait();\n+                } catch (InterruptedException e) {\n+                    log.complain(\"Main thread was interrupted while waiting for start of Suspended thread\");\n+                    return suspend001.FAILED;\n+                }\n+\n+                myThread.start();\n+                try {\n+                    waitnotify.wait();\n+                } catch (InterruptedException e) {\n+                    log.complain(\"Main thread was interrupted while waiting for start of MyThread thread\");\n+                    return suspend001.FAILED;\n+                }\n@@ -109,1 +109,1 @@\n-    public Suspended (String n) {\n+    public Suspended(String n) {\n@@ -122,1 +122,2 @@\n-        synchronized (suspend001a.lock) {}\n+        synchronized (suspend001a.lock) {\n+        }\n@@ -133,1 +134,1 @@\n-    public MyThread (String n) {\n+    public MyThread(String n) {\n@@ -146,1 +147,2 @@\n-        synchronized (suspend001a.lock) {}\n+        synchronized (suspend001a.lock) {\n+        }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/suspend\/suspend001\/suspend001a.java","additions":32,"deletions":30,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -68,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -79,5 +79,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.thread.thread002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".thread002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.thread.thread002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".thread002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -85,1 +85,1 @@\n-    static final String THREAD_NAME      = \"MyThread\";\n+    static final String THREAD_NAME = \"MyThread\";\n@@ -91,2 +91,0 @@\n-        Vector v;\n-        String found;\n@@ -111,1 +109,1 @@\n-                 failure(\"jdb failed to switch to thread: \" + threadIds[i]);\n+                failure(\"jdb failed to switch to thread: \" + threadIds[i]);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/thread\/thread002\/thread002.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,1 +34,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -39,1 +39,3 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n+\n@@ -41,1 +43,1 @@\n-    static Thread holder [] = new Thread[numThreads];\n+    static Thread holder[] = new Thread[numThreads];\n@@ -45,1 +47,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -53,1 +55,1 @@\n-            for (int i = 0; i < numThreads ; i++) {\n+            for (int i = 0; i < numThreads; i++) {\n@@ -62,1 +64,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n@@ -69,1 +71,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -107,1 +109,1 @@\n-    MyThread (Lock l, String name) {\n+    MyThread(Lock l, String name) {\n@@ -118,1 +120,1 @@\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n@@ -120,1 +122,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/thread\/thread002\/thread002a.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -66,1 +66,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +70,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,5 +77,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.threadgroup.threadgroup002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".threadgroup002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.threadgroup.threadgroup002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".threadgroup002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -87,2 +87,0 @@\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroup\/threadgroup002\/threadgroup002.java","additions":12,"deletions":14,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,1 +34,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -39,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,2 +43,2 @@\n-    static int numThreads      = 15;\n-    static Object waitnotify   = new Object();\n+    static int numThreads = 15;\n+    static Object waitnotify = new Object();\n@@ -46,1 +47,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -51,1 +52,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -54,1 +55,1 @@\n-        for (int i = 0; i < numThreadGroups ; i++ )\n+        for (int i = 0; i < numThreadGroups; i++)\n@@ -61,2 +62,2 @@\n-            for (int i = 0; i < numThreadGroups ; i++) {\n-                for (int j = 0; j < factor ; j++) {\n+            for (int i = 0; i < numThreadGroups; i++) {\n+                for (int j = 0; j < factor; j++) {\n@@ -73,1 +74,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n@@ -80,1 +81,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -116,1 +117,2 @@\n-    MyThread (Lock l, ThreadGroup group, String name) {\n+\n+    MyThread(Lock l, ThreadGroup group, String name) {\n@@ -127,1 +129,1 @@\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n@@ -129,1 +131,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroup\/threadgroup002\/threadgroup002a.java","additions":21,"deletions":19,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -66,1 +66,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +70,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,5 +77,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.threadgroups.threadgroups002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".threadgroups002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.threadgroups.threadgroups002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".threadgroups002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -87,2 +87,0 @@\n-        Vector v;\n-        String found;\n@@ -96,1 +94,1 @@\n-        if (count != threadgroups002a.numThreadGroups ) {\n+        if (count != threadgroups002a.numThreadGroups) {\n@@ -98,1 +96,1 @@\n-                \"\\n\\texpected value: \" + threadgroups002a.numThreadGroups);\n+                    \"\\n\\texpected value: \" + threadgroups002a.numThreadGroups);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroups\/threadgroups002\/threadgroups002.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,1 +34,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -39,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,2 +43,2 @@\n-    static int numThreads      = 15;\n-    static Object waitnotify   = new Object();\n+    static int numThreads = 15;\n+    static Object waitnotify = new Object();\n@@ -46,1 +47,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -51,1 +52,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -54,1 +55,1 @@\n-        for (int i = 0; i < numThreadGroups ; i++ )\n+        for (int i = 0; i < numThreadGroups; i++)\n@@ -61,2 +62,2 @@\n-            for (int i = 0; i < numThreadGroups ; i++) {\n-                for (int j = 0; j < factor ; j++) {\n+            for (int i = 0; i < numThreadGroups; i++) {\n+                for (int j = 0; j < factor; j++) {\n@@ -73,1 +74,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n@@ -80,1 +81,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -116,1 +117,2 @@\n-    MyThread (Lock l, ThreadGroup group, String name) {\n+\n+    MyThread(Lock l, ThreadGroup group, String name) {\n@@ -127,1 +129,1 @@\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n@@ -129,1 +131,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threadgroups\/threadgroups002\/threadgroups002a.java","additions":21,"deletions":19,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -57,2 +57,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -60,2 +61,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -65,1 +65,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -69,2 +69,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -76,5 +76,5 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.threads.threads002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".threads002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.threads.threads002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".threads002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -82,1 +82,1 @@\n-    static final String THREAD_NAME      = PACKAGE_NAME + \".MyThread\";\n+    static final String THREAD_NAME = PACKAGE_NAME + \".MyThread\";\n@@ -88,2 +88,0 @@\n-        Vector v;\n-        String found;\n@@ -97,1 +95,1 @@\n-        if (count != threads002a.numThreads ) {\n+        if (count != threads002a.numThreads) {\n@@ -99,1 +97,1 @@\n-                \"\\n\\texpected value: \" + threads002a.numThreads);\n+                    \"\\n\\texpected value: \" + threads002a.numThreads);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads002\/threads002.java","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,1 +34,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -39,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +45,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -48,1 +49,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -53,1 +54,1 @@\n-            for (int i = 0; i < numThreads ; i++) {\n+            for (int i = 0; i < numThreads; i++) {\n@@ -62,1 +63,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n@@ -69,1 +70,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -105,1 +106,2 @@\n-    MyThread (Lock l) {\n+\n+    MyThread(Lock l) {\n@@ -115,1 +117,1 @@\n-        } catch(Exception e) {\n+        } catch (Exception e) {\n@@ -117,1 +119,1 @@\n-                e.getMessage());\n+                    e.getMessage());\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/threads\/threads002\/threads002a.java","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -64,2 +64,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -67,2 +68,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -72,1 +73,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -76,2 +77,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,6 +84,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.trace.trace001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".trace001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.trace.trace001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".trace001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -95,4 +96,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -102,1 +99,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -112,2 +109,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + thread);\n@@ -116,1 +113,1 @@\n-        jdb.contToExit(CHECKED_METHODS.length*threads.length*2 + 3);\n+        jdb.contToExit(CHECKED_METHODS.length * threads.length * 2 + 3);\n@@ -124,1 +121,1 @@\n-    private boolean checkTrace (String[] checkedMethods, String[] reply) {\n+    private boolean checkTrace(String[] checkedMethods, String[] reply) {\n@@ -126,1 +123,0 @@\n-        String found;\n@@ -128,1 +124,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -132,1 +128,1 @@\n-        for (int i = 0; i < checkedMethods.length; i++) {\n+        for (String checkedMethod : checkedMethods) {\n@@ -134,1 +130,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -138,1 +134,1 @@\n-                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -140,1 +136,1 @@\n-                result= false;\n+                result = false;\n@@ -144,1 +140,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -148,1 +144,1 @@\n-                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -150,1 +146,1 @@\n-                result= false;\n+                result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/trace\/trace001\/trace001.java","additions":27,"deletions":31,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,3 +33,3 @@\n-    public static void main(String args[]) {\n-       trace001a _trace001a = new trace001a();\n-       System.exit(trace001.JCK_STATUS_BASE + _trace001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        trace001a _trace001a = new trace001a();\n+        System.exit(trace001.JCK_STATUS_BASE + _trace001a.runIt(args, System.out));\n@@ -39,1 +38,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -41,2 +41,2 @@\n-    static final String MYTHREAD  = \"MyThread\";\n-    static final int numThreads   = 2;   \/\/ number of threads.\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 2;   \/\/ number of threads.\n@@ -46,1 +46,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -52,1 +52,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -55,3 +55,3 @@\n-        for (i = 0; i < numThreads ; i++) {\n-            locks[i]  = new Object();\n-            holder[i] = new MyThread(locks[i],MYTHREAD + \"-\" + i);\n+        for (i = 0; i < numThreads; i++) {\n+            locks[i] = new Object();\n+            holder[i] = new MyThread(locks[i], MYTHREAD + \"-\" + i);\n@@ -61,1 +61,1 @@\n-            for (i = 0; i < numThreads ; i++) {\n+            for (i = 0; i < numThreads; i++) {\n@@ -78,1 +78,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n@@ -102,1 +102,1 @@\n-    public MyThread (Object l, String n) {\n+    public MyThread(Object l, String n) {\n@@ -140,1 +140,1 @@\n-        return i*i;\n+        return i * i;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/trace\/trace001\/trace001a.java","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -69,2 +69,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -72,2 +73,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -77,1 +78,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -81,2 +82,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -91,2 +92,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -94,6 +95,1 @@\n-    static final String[] FRAMES = new String[] {\n-        DEBUGGEE_CLASS + \".func\",\n-        DEBUGGEE_CLASS + \".runIt\",\n-        DEBUGGEE_CLASS + \".main\"                };\n-\n-    public uncaught_exception002 (boolean debuggeeShouldFail) {\n+    public uncaught_exception002(boolean debuggeeShouldFail) {\n@@ -106,3 +102,1 @@\n-        int count;\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -117,1 +111,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -124,1 +118,1 @@\n-        v = new Vector();\n+        v = new Vector<>();\n@@ -129,1 +123,1 @@\n-                \"is not accessible\");\n+                    \"is not accessible\");\n@@ -132,10 +126,0 @@\n-\n-    private boolean checkStop () {\n-        Paragrep grep;\n-        String[] reply;\n-        String found;\n-        Vector v;\n-        boolean result = true;\n-\n-        return result;\n-    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/uncaught_exception\/uncaught_exception002\/uncaught_exception002.java","additions":15,"deletions":31,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) throws TenMultipleException {\n-       System.exit(uncaught_exception002.JCK_STATUS_BASE + _uncaught_exception002a.runIt(args, System.out));\n+    public static void main(String[] args) throws TenMultipleException {\n+        System.exit(uncaught_exception002.JCK_STATUS_BASE + _uncaught_exception002a.runIt(args, System.out));\n@@ -40,1 +39,1 @@\n-    public int runIt(String args[], PrintStream out) throws TenMultipleException {\n+    public int runIt(String[] args, PrintStream out) throws TenMultipleException {\n@@ -53,1 +52,1 @@\n-        if ( i % 10 == 0 ) {\n+        if (i % 10 == 0) {\n@@ -61,1 +60,3 @@\n-     TenMultipleException (int i) { super (\"received \" + i ); }\n+    TenMultipleException(int i) {\n+        super(\"received \" + i);\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/uncaught_exception\/uncaught_exception002\/uncaught_exception002a.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -73,2 +73,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -76,2 +77,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -81,1 +82,1 @@\n-    public static void main (String argv[])  {\n+    public static void main(String[] argv) {\n@@ -85,2 +86,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -95,3 +96,3 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n-    static final int    BREAKPOINT_LINE    = 47;\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final int BREAKPOINT_LINE = 47;\n@@ -100,6 +101,6 @@\n-        JdbCommand.locals,\n-        JdbCommand.threads,\n-        JdbCommand.methods + DEBUGGEE_CLASS,\n-        JdbCommand.fields  + DEBUGGEE_CLASS,\n-        JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n-                                             };\n+            JdbCommand.locals,\n+            JdbCommand.threads,\n+            JdbCommand.methods + DEBUGGEE_CLASS,\n+            JdbCommand.fields + DEBUGGEE_CLASS,\n+            JdbCommand.eval + \"(new java.lang.String(\\\"Hello, World\\\")).length()\"\n+    };\n@@ -109,4 +110,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -114,1 +111,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n+        jdb.receiveReplyFor(JdbCommand.stop_at + DEBUGGEE_CLASS + \":\" + BREAKPOINT_LINE);\n@@ -117,3 +114,3 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[0]);\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[1]);\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[2]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[0]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[1]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[2]);\n@@ -122,1 +119,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.unmonitor + \" 1\");\n+        jdb.receiveReplyFor(JdbCommand.unmonitor + \" 1\");\n@@ -125,2 +122,2 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[3]);\n-        reply = jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[4]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[3]);\n+        jdb.receiveReplyFor(JdbCommand.monitor + CHECKED_COMMANDS[4]);\n@@ -129,1 +126,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n+        jdb.receiveReplyFor(JdbCommand.cont, true, repliesCount);\n@@ -149,2 +146,0 @@\n-        String found;\n-        Vector v;\n@@ -174,2 +169,1 @@\n-        String found;\n-        Vector v = new Vector();;\n+        Vector<String> v = new Vector<>();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unmonitor\/unmonitor001\/unmonitor001.java","additions":26,"deletions":32,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -32,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -38,1 +37,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unmonitor\/unmonitor001\/unmonitor001a.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -71,2 +71,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -74,2 +75,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -79,1 +80,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -83,2 +84,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -90,6 +91,6 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.untrace.untrace001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".untrace001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String MYTHREAD        = \"MyThread\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.untrace.untrace001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".untrace001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String MYTHREAD = \"MyThread\";\n@@ -102,4 +103,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -109,1 +106,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -119,2 +116,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.trace + \"methods \" + thread);\n@@ -124,2 +121,2 @@\n-        for (int i = 0; i < (CHECKED_METHODS.length*threads.length*2 + 1); i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        for (int i = 0; i < (CHECKED_METHODS.length * threads.length * 2 + 1); i++) {\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -128,2 +125,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.untrace + \"methods \" + threads[i]);\n+        for (String thread : threads) {\n+            jdb.receiveReplyFor(JdbCommand.untrace + \"methods \" + thread);\n@@ -132,1 +129,1 @@\n-        jdb.contToExit(CHECKED_METHODS.length*threads.length*2 + 2);\n+        jdb.contToExit(CHECKED_METHODS.length * threads.length * 2 + 2);\n@@ -140,1 +137,1 @@\n-    private boolean checkTrace (String[] checkedMethods, String[] reply) {\n+    private boolean checkTrace(String[] checkedMethods, String[] reply) {\n@@ -142,1 +139,0 @@\n-        String found;\n@@ -144,1 +140,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -148,1 +144,1 @@\n-        for (int i = 0; i < checkedMethods.length; i++) {\n+        for (String checkedMethod : checkedMethods) {\n@@ -150,1 +146,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -154,1 +150,1 @@\n-                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method enter is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -156,1 +152,1 @@\n-                result= false;\n+                result = false;\n@@ -160,1 +156,1 @@\n-            v.add(DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+            v.add(DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -164,1 +160,1 @@\n-                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethods[i]);\n+                log.complain(\"Count of method exit is incorrect for the method : \" + DEBUGGEE_THREAD + \".\" + checkedMethod);\n@@ -166,1 +162,1 @@\n-                result= false;\n+                result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/untrace\/untrace001\/untrace001.java","additions":31,"deletions":35,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -35,3 +34,3 @@\n-    public static void main(String args[]) {\n-       untrace001a _untrace001a = new untrace001a();\n-       System.exit(untrace001.JCK_STATUS_BASE + _untrace001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        untrace001a _untrace001a = new untrace001a();\n+        System.exit(untrace001.JCK_STATUS_BASE + _untrace001a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void breakHere() {}\n+    static void breakHere() {\n+    }\n@@ -42,2 +42,2 @@\n-    static final String MYTHREAD  = \"MyThread\";\n-    static final int numThreads   = 1;   \/\/ number of threads.\n+    static final String MYTHREAD = \"MyThread\";\n+    static final int numThreads = 1;   \/\/ number of threads.\n@@ -53,1 +53,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -59,1 +59,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -62,2 +62,2 @@\n-        for (i = 0; i < numThreads ; i++) {\n-            locks[i]  = new Object();\n+        for (i = 0; i < numThreads; i++) {\n+            locks[i] = new Object();\n@@ -69,1 +69,1 @@\n-                for (i = 0; i < numThreads ; i++) {\n+                for (i = 0; i < numThreads; i++) {\n@@ -72,4 +72,4 @@\n-                         mainThreadRunning = false;\n-                         while (!mainThreadRunning) {\n-                             mainThreadLock1.wait();\n-                         }\n+                        mainThreadRunning = false;\n+                        while (!mainThreadRunning) {\n+                            mainThreadLock1.wait();\n+                        }\n@@ -89,1 +89,1 @@\n-            for (i = 0; i < numThreads ; i++) {\n+            for (i = 0; i < numThreads; i++) {\n@@ -96,4 +96,4 @@\n-                     mainThreadRunning = false;\n-                     while (!mainThreadRunning) {\n-                         mainThreadLock0.wait();\n-                     }\n+                    mainThreadRunning = false;\n+                    while (!mainThreadRunning) {\n+                        mainThreadLock0.wait();\n+                    }\n@@ -134,1 +134,1 @@\n-    public MyThread (Object l, int i, String n) {\n+    public MyThread(Object l, int i, String n) {\n@@ -188,1 +188,1 @@\n-        return i*i;\n+        return i * i;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/untrace\/untrace001\/untrace001a.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -67,2 +67,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -70,2 +71,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -75,1 +76,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -79,2 +80,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -86,6 +87,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.unwatch.unwatch001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".unwatch001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.unwatch.unwatch001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".unwatch001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -93,2 +94,2 @@\n-    static String[] checkedFields  = { \"fS1\", \"FS0\" };\n-    static String[] checkedFields2 = { \"fP1\", \"fU1\", \"fR1\"};\n+    static String[] checkedFields = {\"fS1\", \"FS0\"};\n+    static String[] checkedFields2 = {\"fP1\", \"fU1\", \"fR1\"};\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -105,1 +102,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -109,2 +106,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -113,1 +110,1 @@\n-            reply = jdb.receiveReplyFor(JdbCommand.cont);\n+            jdb.receiveReplyFor(JdbCommand.cont);\n@@ -116,2 +113,2 @@\n-        unwatchFields (DEBUGGEE_CLASS, checkedFields);\n-        unwatchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        unwatchFields(DEBUGGEE_CLASS, checkedFields);\n+        unwatchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -123,1 +120,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -126,1 +123,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -131,5 +128,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedField);\n@@ -137,1 +132,0 @@\n-\n@@ -140,5 +134,3 @@\n-    private void unwatchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.unwatch + \" access \" + className + \".\" + checkedFields[i]);\n+    private void unwatchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.unwatch + \" access \" + className + \".\" + checkedField);\n@@ -146,1 +138,0 @@\n-\n@@ -149,1 +140,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -151,1 +142,0 @@\n-        String found;\n@@ -154,1 +144,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -158,1 +148,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -161,1 +151,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -165,1 +155,1 @@\n-                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch001\/unwatch001.java","additions":36,"deletions":46,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,2 +33,0 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.unwatch.unwatch001\";\n@@ -37,3 +34,3 @@\n-    public static void main(String args[]) {\n-       unwatch001a _unwatch001a = new unwatch001a();\n-       System.exit(unwatch001.JCK_STATUS_BASE + _unwatch001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        unwatch001a _unwatch001a = new unwatch001a();\n+        System.exit(unwatch001.JCK_STATUS_BASE + _unwatch001a.runIt(args, System.out));\n@@ -42,1 +39,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -44,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -60,2 +58,5 @@\n-    static    boolean fS0, fS1[], fS2[][];\n-    static    Boolean FS0, FS1[], FS2[][];\n+    static boolean fS0, fS1[], fS2[][];\n+    static Boolean FS0, FS1[], FS2[][];\n+\n+    interface Inter {\n+    }\n@@ -63,2 +64,1 @@\n-    interface Inter {}\n-    Inter     I0, I1[], I2[][];\n+    Inter I0, I1[], I2[][];\n@@ -70,2 +70,2 @@\n-        fS1 = flag ? fS1 :  new boolean[] {fS0};\n-        fS2 = flag ? fS2 :  new boolean[][] {fS1};\n+        fS1 = flag ? fS1 : new boolean[]{fS0};\n+        fS2 = flag ? fS2 : new boolean[][]{fS1};\n@@ -74,2 +74,2 @@\n-        FS1 = flag ? FS1 : new Boolean[] {FS0};\n-        FS2 = flag ? FS2 : new Boolean[][] {FS1};\n+        FS1 = flag ? FS1 : new Boolean[]{FS0};\n+        FS2 = flag ? FS2 : new Boolean[][]{FS1};\n@@ -77,3 +77,3 @@\n-        I0  = flag ? I0  : new CheckedFields();\n-        I1  = flag ? I1  : new CheckedFields[]   {new CheckedFields()};\n-        I2  = flag ? I2  : new CheckedFields[][] {new CheckedFields[] {new CheckedFields()}};\n+        I0 = flag ? I0 : new CheckedFields();\n+        I1 = flag ? I1 : new CheckedFields[]{new CheckedFields()};\n+        I2 = flag ? I2 : new CheckedFields[][]{new CheckedFields[]{new CheckedFields()}};\n@@ -84,5 +84,5 @@\n-        private   byte    fP0, fP1[], fP2[][];\n-        public    char    fU0, fU1[], fU2[][];\n-        protected double  fR0, fR1[], fR2[][];\n-        transient float   fT0, fT1[], fT2[][];\n-        volatile  long    fV0, fV1[], fV2[][];\n+        private byte fP0, fP1[], fP2[][];\n+        public char fU0, fU1[], fU2[][];\n+        protected double fR0, fR1[], fR2[][];\n+        transient float fT0, fT1[], fT2[][];\n+        volatile long fV0, fV1[], fV2[][];\n@@ -90,5 +90,5 @@\n-        private   Byte      FP0, FP1[], FP2[][];\n-        public    Character FU0, FU1[], FU2[][];\n-        protected Double    FR0, FR1[], FR2[][];\n-        transient Float     FT0, FT1[], FT2[][];\n-        volatile  Long      FV0, FV1[], FV2[][];\n+        private Byte FP0, FP1[], FP2[][];\n+        public Character FU0, FU1[], FU2[][];\n+        protected Double FR0, FR1[], FR2[][];\n+        transient Float FT0, FT1[], FT2[][];\n+        volatile Long FV0, FV1[], FV2[][];\n@@ -99,1 +99,1 @@\n-            fP0 = flag ? fP0 : Byte.MIN_VALUE ;\n+            fP0 = flag ? fP0 : Byte.MIN_VALUE;\n@@ -105,1 +105,1 @@\n-            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE) ;\n+            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE);\n@@ -111,21 +111,21 @@\n-            fP1 = flag ? fP1 : new byte[] {fP0};\n-            fP2 = flag ? fP2 : new byte[][] {fP1};\n-            fU1 = flag ? fU1 : new char[] {fU0};\n-            fU2 = flag ? fU2 : new char[][] {fU1};\n-            fR1 = flag ? fR1 : new double[] {fR0};\n-            fR2 = flag ? fR2 : new double[][] {fR1};\n-            fT1 = flag ? fT1 : new float[] {fT0};\n-            fT2 = flag ? fT2 : new float[][] {fT1};\n-            fV1 = flag ? fV1 : new long[] {fV0};\n-            fV2 = flag ? fV2 : new long[][] {fV1};\n-\n-            FP1 = flag ? FP1 : new Byte[] {FP0};\n-            FP2 = flag ? FP2 : new Byte[][] {FP1};\n-            FU1 = flag ? FU1 : new Character[] {FU0};\n-            FU2 = flag ? FU2 : new Character[][] {FU1};\n-            FR1 = flag ? FR1 : new Double[] {FR0};\n-            FR2 = flag ? FR2 : new Double[][] {FR1};\n-            FT1 = flag ? FT1 : new Float[] {FT0};\n-            FT2 = flag ? FT2 : new Float[][] {FT1};\n-            FV1 = flag ? FV1 : new Long[] {FV0};\n-            FV2 = flag ? FV2 : new Long[][] {FV1};\n+            fP1 = flag ? fP1 : new byte[]{fP0};\n+            fP2 = flag ? fP2 : new byte[][]{fP1};\n+            fU1 = flag ? fU1 : new char[]{fU0};\n+            fU2 = flag ? fU2 : new char[][]{fU1};\n+            fR1 = flag ? fR1 : new double[]{fR0};\n+            fR2 = flag ? fR2 : new double[][]{fR1};\n+            fT1 = flag ? fT1 : new float[]{fT0};\n+            fT2 = flag ? fT2 : new float[][]{fT1};\n+            fV1 = flag ? fV1 : new long[]{fV0};\n+            fV2 = flag ? fV2 : new long[][]{fV1};\n+\n+            FP1 = flag ? FP1 : new Byte[]{FP0};\n+            FP2 = flag ? FP2 : new Byte[][]{FP1};\n+            FU1 = flag ? FU1 : new Character[]{FU0};\n+            FU2 = flag ? FU2 : new Character[][]{FU1};\n+            FR1 = flag ? FR1 : new Double[]{FR0};\n+            FR2 = flag ? FR2 : new Double[][]{FR1};\n+            FT1 = flag ? FT1 : new Float[]{FT0};\n+            FT2 = flag ? FT2 : new Float[][]{FT1};\n+            FV1 = flag ? FV1 : new Long[]{FV0};\n+            FV2 = flag ? FV2 : new Long[][]{FV1};\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch001\/unwatch001a.java","additions":56,"deletions":56,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -68,2 +68,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -71,2 +72,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -76,1 +77,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -80,2 +81,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -87,7 +88,7 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.unwatch.unwatch002\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".unwatch002\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n-    static final String expectedPrompt     = \"main[1]\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.unwatch.unwatch002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".unwatch002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String expectedPrompt = \"main[1]\";\n@@ -95,2 +96,2 @@\n-    static String[] checkedFields  = { \"FS1\" };\n-    static String[] checkedFields2 = { \"FT1\", \"FV1\" };\n+    static String[] checkedFields = {\"FS1\"};\n+    static String[] checkedFields2 = {\"FT1\", \"FV1\"};\n@@ -100,4 +101,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -109,1 +106,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -111,2 +108,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -115,2 +112,2 @@\n-        for (int i = 0; i < (checkedFields.length *2 + checkedFields2.length*2 + 2); i++) {\n-            reply = jdb.receiveReplyForWithMessageWait(JdbCommand.cont, expectedPrompt);\n+        for (int i = 0; i < (checkedFields.length * 2 + checkedFields2.length * 2 + 2); i++) {\n+            jdb.receiveReplyForWithMessageWait(JdbCommand.cont, expectedPrompt);\n@@ -119,2 +116,2 @@\n-        unwatchFields (DEBUGGEE_CLASS, checkedFields);\n-        unwatchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        unwatchFields(DEBUGGEE_CLASS, checkedFields);\n+        unwatchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -123,1 +120,1 @@\n-        jdb.contToExit(checkedFields.length*2 + checkedFields2.length*2 + 1);\n+        jdb.contToExit(checkedFields.length * 2 + checkedFields2.length * 2 + 1);\n@@ -126,1 +123,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -129,1 +126,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -134,5 +131,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedField);\n@@ -140,1 +135,0 @@\n-\n@@ -143,5 +137,3 @@\n-    private void unwatchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.unwatch + \" all \" + className + \".\" + checkedFields[i]);\n+    private void unwatchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.unwatch + \" all \" + className + \".\" + checkedField);\n@@ -149,1 +141,0 @@\n-\n@@ -152,1 +143,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -154,1 +145,0 @@\n-        String found;\n@@ -157,1 +147,1 @@\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -161,1 +151,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -164,1 +154,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -168,1 +158,1 @@\n-                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"jdb reported wrong number of access to the field \" + className + \".\" + checkedField);\n@@ -174,1 +164,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -179,1 +169,1 @@\n-                log.complain(\"jdb reported wrong number of modification of the field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"jdb reported wrong number of modification of the field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch002\/unwatch002.java","additions":41,"deletions":51,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,2 +33,0 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.unwatch.unwatch002\";\n@@ -37,3 +34,3 @@\n-    public static void main(String args[]) {\n-       unwatch002a _unwatch002a = new unwatch002a();\n-       System.exit(unwatch002.JCK_STATUS_BASE + _unwatch002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        unwatch002a _unwatch002a = new unwatch002a();\n+        System.exit(unwatch002.JCK_STATUS_BASE + _unwatch002a.runIt(args, System.out));\n@@ -42,1 +39,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -44,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -60,2 +58,5 @@\n-    static    boolean fS0, fS1[], fS2[][];\n-    static    Boolean FS0, FS1[], FS2[][];\n+    static boolean fS0, fS1[], fS2[][];\n+    static Boolean FS0, FS1[], FS2[][];\n+\n+    interface Inter {\n+    }\n@@ -63,2 +64,1 @@\n-    interface Inter {}\n-    Inter     I0, I1[], I2[][];\n+    Inter I0, I1[], I2[][];\n@@ -70,2 +70,2 @@\n-        fS1 = flag ? fS1 : new boolean[] {fS0};\n-        fS2 = flag ? fS2 : new boolean[][] {fS1};\n+        fS1 = flag ? fS1 : new boolean[]{fS0};\n+        fS2 = flag ? fS2 : new boolean[][]{fS1};\n@@ -74,2 +74,2 @@\n-        FS1 = flag ? FS1 : new Boolean[] {FS0};\n-        FS2 = flag ? FS2 : new Boolean[][] {FS1};\n+        FS1 = flag ? FS1 : new Boolean[]{FS0};\n+        FS2 = flag ? FS2 : new Boolean[][]{FS1};\n@@ -77,3 +77,3 @@\n-        I0  = flag ? I0  : new CheckedFields();\n-        I1  = flag ? I1  : new CheckedFields[]   {new CheckedFields()};\n-        I2  = flag ? I2  : new CheckedFields[][] {new CheckedFields[] {new CheckedFields()}};\n+        I0 = flag ? I0 : new CheckedFields();\n+        I1 = flag ? I1 : new CheckedFields[]{new CheckedFields()};\n+        I2 = flag ? I2 : new CheckedFields[][]{new CheckedFields[]{new CheckedFields()}};\n@@ -84,5 +84,5 @@\n-        private   byte    fP0, fP1[], fP2[][];\n-        public    char    fU0, fU1[], fU2[][];\n-        protected double  fR0, fR1[], fR2[][];\n-        transient float   fT0, fT1[], fT2[][];\n-        volatile  long    fV0, fV1[], fV2[][];\n+        private byte fP0, fP1[], fP2[][];\n+        public char fU0, fU1[], fU2[][];\n+        protected double fR0, fR1[], fR2[][];\n+        transient float fT0, fT1[], fT2[][];\n+        volatile long fV0, fV1[], fV2[][];\n@@ -90,5 +90,5 @@\n-        private   Byte      FP0, FP1[], FP2[][];\n-        public    Character FU0, FU1[], FU2[][];\n-        protected Double    FR0, FR1[], FR2[][];\n-        transient Float     FT0, FT1[], FT2[][];\n-        volatile  Long      FV0, FV1[], FV2[][];\n+        private Byte FP0, FP1[], FP2[][];\n+        public Character FU0, FU1[], FU2[][];\n+        protected Double FR0, FR1[], FR2[][];\n+        transient Float FT0, FT1[], FT2[][];\n+        volatile Long FV0, FV1[], FV2[][];\n@@ -99,1 +99,1 @@\n-            fP0 = flag ? fP0 : Byte.MIN_VALUE ;\n+            fP0 = flag ? fP0 : Byte.MIN_VALUE;\n@@ -105,1 +105,1 @@\n-            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE) ;\n+            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE);\n@@ -111,21 +111,21 @@\n-            fP1 = flag ? fP1 : new byte[] {fP0};\n-            fP2 = flag ? fP2 : new byte[][] {fP1};\n-            fU1 = flag ? fU1 : new char[] {fU0};\n-            fU2 = flag ? fU2 : new char[][] {fU1};\n-            fR1 = flag ? fR1 : new double[] {fR0};\n-            fR2 = flag ? fR2 : new double[][] {fR1};\n-            fT1 = flag ? fT1 : new float[] {fT0};\n-            fT2 = flag ? fT2 : new float[][] {fT1};\n-            fV1 = flag ? fV1 : new long[] {fV0};\n-            fV2 = flag ? fV2 : new long[][] {fV1};\n-\n-            FP1 = flag ? FP1 : new Byte[] {FP0};\n-            FP2 = flag ? FP2 : new Byte[][] {FP1};\n-            FU1 = flag ? FU1 : new Character[] {FU0};\n-            FU2 = flag ? FU2 : new Character[][] {FU1};\n-            FR1 = flag ? FR1 : new Double[] {FR0};\n-            FR2 = flag ? FR2 : new Double[][] {FR1};\n-            FT1 = flag ? FT1 : new Float[] {FT0};\n-            FT2 = flag ? FT2 : new Float[][] {FT1};\n-            FV1 = flag ? FV1 : new Long[] {FV0};\n-            FV2 = flag ? FV2 : new Long[][] {FV1};\n+            fP1 = flag ? fP1 : new byte[]{fP0};\n+            fP2 = flag ? fP2 : new byte[][]{fP1};\n+            fU1 = flag ? fU1 : new char[]{fU0};\n+            fU2 = flag ? fU2 : new char[][]{fU1};\n+            fR1 = flag ? fR1 : new double[]{fR0};\n+            fR2 = flag ? fR2 : new double[][]{fR1};\n+            fT1 = flag ? fT1 : new float[]{fT0};\n+            fT2 = flag ? fT2 : new float[][]{fT1};\n+            fV1 = flag ? fV1 : new long[]{fV0};\n+            fV2 = flag ? fV2 : new long[][]{fV1};\n+\n+            FP1 = flag ? FP1 : new Byte[]{FP0};\n+            FP2 = flag ? FP2 : new Byte[][]{FP1};\n+            FU1 = flag ? FU1 : new Character[]{FU0};\n+            FU2 = flag ? FU2 : new Character[][]{FU1};\n+            FR1 = flag ? FR1 : new Double[]{FR0};\n+            FR2 = flag ? FR2 : new Double[][]{FR1};\n+            FT1 = flag ? FT1 : new Float[]{FT0};\n+            FT2 = flag ? FT2 : new Float[][]{FT1};\n+            FV1 = flag ? FV1 : new Long[]{FV0};\n+            FV2 = flag ? FV2 : new Long[][]{FV1};\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/unwatch\/unwatch002\/unwatch002a.java","additions":56,"deletions":56,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -60,2 +60,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -63,2 +64,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -68,1 +69,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -72,2 +73,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -79,15 +80,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.up.up002\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".up002\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-\n-    static final String[][] FRAMES = new String[][] {\n-        {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n-        {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n-        {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n-        {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n-        {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n-        {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n-        {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n-                                                };\n+    static final String PACKAGE_NAME = \"nsk.jdb.up.up002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".up002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {\"[1]\", DEBUGGEE_CLASS + \".func5\"},\n+            {\"[2]\", DEBUGGEE_CLASS + \".func4\"},\n+            {\"[3]\", DEBUGGEE_CLASS + \".func3\"},\n+            {\"[4]\", DEBUGGEE_CLASS + \".func2\"},\n+            {\"[5]\", DEBUGGEE_CLASS + \".func1\"},\n+            {\"[6]\", DEBUGGEE_CLASS + \".runIt\"},\n+            {\"[7]\", DEBUGGEE_CLASS + \".main\"}\n+    };\n@@ -99,2 +100,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -115,2 +115,2 @@\n-        for (int i = 1; i < (FRAMES.length-1); i++) {\n-            v = new Vector();\n+        for (int i = 1; i < (FRAMES.length - 1); i++) {\n+            v = new Vector<>();\n@@ -120,1 +120,1 @@\n-            if (count != (i+1)) {\n+            if (count != (i + 1)) {\n@@ -122,1 +122,1 @@\n-                    \"\\n\\texpected value : \" + (i+1) + \", got : \" + count);\n+                        \"\\n\\texpected value : \" + (i + 1) + \", got : \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/up\/up002\/up002.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,4 +33,4 @@\n-    public static void main(String args[]) {\n-       up002a _up002a = new up002a();\n-       lastBreak();\n-       System.exit(up002.JCK_STATUS_BASE + _up002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        up002a _up002a = new up002a();\n+        lastBreak();\n+        System.exit(up002.JCK_STATUS_BASE + _up002a.runIt(args, System.out));\n@@ -40,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -42,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -65,1 +65,1 @@\n-       return func5(i) + 1;\n+        return func5(i) + 1;\n@@ -69,1 +69,1 @@\n-       return func6(i) + 1;\n+        return func6(i) + 1;\n@@ -73,1 +73,1 @@\n-        return i-5;\n+        return i - 5;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/up\/up002\/up002a.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -60,2 +60,0 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n@@ -63,0 +61,3 @@\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -64,2 +65,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.File;\n+import java.io.PrintStream;\n@@ -69,1 +70,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -73,2 +74,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -83,2 +84,2 @@\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -89,3 +90,0 @@\n-        int count;\n-        Vector v;\n-        String found;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/use\/use001\/use001.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,2 +35,2 @@\n-    public static void main(String args[]) {\n-       System.exit(use001.JCK_STATUS_BASE + _use001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        System.exit(use001.JCK_STATUS_BASE + _use001a.runIt(args, System.out));\n@@ -42,1 +41,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/use\/use001\/use001a.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,6 +86,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.watch.watch001\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".watch001\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.watch.watch001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".watch001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -93,2 +94,2 @@\n-    static String[] checkedFields  = { \"fS0\", \"FS1\" };\n-    static String[] checkedFields2 = { \"FP0\", \"FU1\", \"FR0\", \"FT1\", \"FV0\" };\n+    static String[] checkedFields = {\"fS0\", \"FS1\"};\n+    static String[] checkedFields2 = {\"FP0\", \"FU1\", \"FR0\", \"FT1\", \"FV0\"};\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -105,1 +102,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -109,2 +106,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -115,1 +112,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -118,1 +115,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -123,5 +120,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" access \" + className + \".\" + checkedField);\n@@ -132,1 +127,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -136,2 +131,1 @@\n-        int count;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -141,1 +135,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -144,1 +138,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -148,1 +142,1 @@\n-                log.complain(\"Failed to report access to field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"Failed to report access to field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch001\/watch001.java","additions":30,"deletions":36,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,2 +33,0 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.watch.watch001\";\n@@ -37,3 +34,3 @@\n-    public static void main(String args[]) {\n-       watch001a _watch001a = new watch001a();\n-       System.exit(watch001.JCK_STATUS_BASE + _watch001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        watch001a _watch001a = new watch001a();\n+        System.exit(watch001.JCK_STATUS_BASE + _watch001a.runIt(args, System.out));\n@@ -42,1 +39,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -44,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -56,2 +54,5 @@\n-    static    boolean fS0, fS1[], fS2[][];\n-    static    Boolean FS0, FS1[], FS2[][];\n+    static boolean fS0, fS1[], fS2[][];\n+    static Boolean FS0, FS1[], FS2[][];\n+\n+    interface Inter {\n+    }\n@@ -59,2 +60,1 @@\n-    interface Inter {}\n-    Inter     I0, I1[], I2[][];\n+    Inter I0, I1[], I2[][];\n@@ -66,2 +66,2 @@\n-        fS1 = flag ? fS1 :  new boolean[] {fS0};\n-        fS2 = flag ? fS2 :  new boolean[][] {fS1};\n+        fS1 = flag ? fS1 : new boolean[]{fS0};\n+        fS2 = flag ? fS2 : new boolean[][]{fS1};\n@@ -70,2 +70,2 @@\n-        FS1 = flag ? FS1 : new Boolean[] {FS0};\n-        FS2 = flag ? FS2 : new Boolean[][] {FS1};\n+        FS1 = flag ? FS1 : new Boolean[]{FS0};\n+        FS2 = flag ? FS2 : new Boolean[][]{FS1};\n@@ -73,3 +73,3 @@\n-        I0  = flag ? I0  : new CheckedFields();\n-        I1  = flag ? I1  : new CheckedFields[]   {new CheckedFields()};\n-        I2  = flag ? I2  : new CheckedFields[][] {new CheckedFields[] {new CheckedFields()}};\n+        I0 = flag ? I0 : new CheckedFields();\n+        I1 = flag ? I1 : new CheckedFields[]{new CheckedFields()};\n+        I2 = flag ? I2 : new CheckedFields[][]{new CheckedFields[]{new CheckedFields()}};\n@@ -80,5 +80,5 @@\n-        private   byte    fP0, fP1[], fP2[][];\n-        public    char    fU0, fU1[], fU2[][];\n-        protected double  fR0, fR1[], fR2[][];\n-        transient float   fT0, fT1[], fT2[][];\n-        volatile  long    fV0, fV1[], fV2[][];\n+        private byte fP0, fP1[], fP2[][];\n+        public char fU0, fU1[], fU2[][];\n+        protected double fR0, fR1[], fR2[][];\n+        transient float fT0, fT1[], fT2[][];\n+        volatile long fV0, fV1[], fV2[][];\n@@ -86,5 +86,5 @@\n-        private   Byte      FP0, FP1[], FP2[][];\n-        public    Character FU0, FU1[], FU2[][];\n-        protected Double    FR0, FR1[], FR2[][];\n-        transient Float     FT0, FT1[], FT2[][];\n-        volatile  Long      FV0, FV1[], FV2[][];\n+        private Byte FP0, FP1[], FP2[][];\n+        public Character FU0, FU1[], FU2[][];\n+        protected Double FR0, FR1[], FR2[][];\n+        transient Float FT0, FT1[], FT2[][];\n+        volatile Long FV0, FV1[], FV2[][];\n@@ -95,1 +95,1 @@\n-            fP0 = flag ? fP0 : Byte.MIN_VALUE ;\n+            fP0 = flag ? fP0 : Byte.MIN_VALUE;\n@@ -101,1 +101,1 @@\n-            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE) ;\n+            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE);\n@@ -107,21 +107,21 @@\n-            fP1 = flag ? fP1 : new byte[] {fP0};\n-            fP2 = flag ? fP2 : new byte[][] {fP1};\n-            fU1 = flag ? fU1 : new char[] {fU0};\n-            fU2 = flag ? fU2 : new char[][] {fU1};\n-            fR1 = flag ? fR1 : new double[] {fR0};\n-            fR2 = flag ? fR2 : new double[][] {fR1};\n-            fT1 = flag ? fT1 : new float[] {fT0};\n-            fT2 = flag ? fT2 : new float[][] {fT1};\n-            fV1 = flag ? fV1 : new long[] {fV0};\n-            fV2 = flag ? fV2 : new long[][] {fV1};\n-\n-            FP1 = flag ? FP1 : new Byte[] {FP0};\n-            FP2 = flag ? FP2 : new Byte[][] {FP1};\n-            FU1 = flag ? FU1 : new Character[] {FU0};\n-            FU2 = flag ? FU2 : new Character[][] {FU1};\n-            FR1 = flag ? FR1 : new Double[] {FR0};\n-            FR2 = flag ? FR2 : new Double[][] {FR1};\n-            FT1 = flag ? FT1 : new Float[] {FT0};\n-            FT2 = flag ? FT2 : new Float[][] {FT1};\n-            FV1 = flag ? FV1 : new Long[] {FV0};\n-            FV2 = flag ? FV2 : new Long[][] {FV1};\n+            fP1 = flag ? fP1 : new byte[]{fP0};\n+            fP2 = flag ? fP2 : new byte[][]{fP1};\n+            fU1 = flag ? fU1 : new char[]{fU0};\n+            fU2 = flag ? fU2 : new char[][]{fU1};\n+            fR1 = flag ? fR1 : new double[]{fR0};\n+            fR2 = flag ? fR2 : new double[][]{fR1};\n+            fT1 = flag ? fT1 : new float[]{fT0};\n+            fT2 = flag ? fT2 : new float[][]{fT1};\n+            fV1 = flag ? fV1 : new long[]{fV0};\n+            fV2 = flag ? fV2 : new long[][]{fV1};\n+\n+            FP1 = flag ? FP1 : new Byte[]{FP0};\n+            FP2 = flag ? FP2 : new Byte[][]{FP1};\n+            FU1 = flag ? FU1 : new Character[]{FU0};\n+            FU2 = flag ? FU2 : new Character[][]{FU1};\n+            FR1 = flag ? FR1 : new Double[]{FR0};\n+            FR2 = flag ? FR2 : new Double[][]{FR1};\n+            FT1 = flag ? FT1 : new Float[]{FT0};\n+            FT2 = flag ? FT2 : new Float[][]{FT1};\n+            FV1 = flag ? FV1 : new Long[]{FV0};\n+            FV2 = flag ? FV2 : new Long[][]{FV1};\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch001\/watch001a.java","additions":56,"deletions":56,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -65,2 +65,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -68,2 +69,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -73,1 +74,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -77,2 +78,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -85,6 +86,6 @@\n-    static final String PACKAGE_NAME       = \"nsk.jdb.watch.watch002\";\n-    static final String TEST_CLASS         = PACKAGE_NAME + \".watch002\";\n-    static final String DEBUGGEE_CLASS     = TEST_CLASS + \"a\";\n-    static final String DEBUGGEE_CLASS2    = DEBUGGEE_CLASS + \"$CheckedFields\";\n-    static final String FIRST_BREAK        = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK         = DEBUGGEE_CLASS + \".breakHere\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.watch.watch002\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".watch002\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String DEBUGGEE_CLASS2 = DEBUGGEE_CLASS + \"$CheckedFields\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".breakHere\";\n@@ -93,2 +94,2 @@\n-    static String[] checkedFields  = { \"FS0\", \"FS1\" };\n-    static String[] checkedFields2 = { \"FP1\", \"FU1\", \"FR1\", \"FT1\", \"FV1\" };\n+    static String[] checkedFields = {\"FS0\", \"FS1\"};\n+    static String[] checkedFields2 = {\"FP1\", \"FU1\", \"FR1\", \"FT1\", \"FV1\"};\n@@ -98,4 +99,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -105,1 +102,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS);\n@@ -107,1 +104,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n+        jdb.receiveReplyFor(JdbCommand.fields + DEBUGGEE_CLASS2);\n@@ -109,2 +106,2 @@\n-        watchFields (DEBUGGEE_CLASS, checkedFields);\n-        watchFields (DEBUGGEE_CLASS2, checkedFields2);\n+        watchFields(DEBUGGEE_CLASS, checkedFields);\n+        watchFields(DEBUGGEE_CLASS2, checkedFields2);\n@@ -112,1 +109,1 @@\n-        jdb.contToExit((checkedFields.length *2)  + (checkedFields2.length *2) + 2);\n+        jdb.contToExit((checkedFields.length * 2) + (checkedFields2.length * 2) + 2);\n@@ -115,1 +112,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS, reply, checkedFields)) {\n+        if (!checkFields(DEBUGGEE_CLASS, reply, checkedFields)) {\n@@ -118,1 +115,1 @@\n-        if (!checkFields (DEBUGGEE_CLASS2, reply, checkedFields2)) {\n+        if (!checkFields(DEBUGGEE_CLASS2, reply, checkedFields2)) {\n@@ -123,5 +120,3 @@\n-    private void watchFields (String className, String[] checkedFields) {\n-        String[] reply;\n-\n-        for (int i = 0; i < checkedFields.length; i++) {\n-            reply = jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedFields[i]);\n+    private void watchFields(String className, String[] checkedFields) {\n+        for (String checkedField : checkedFields) {\n+            jdb.receiveReplyFor(JdbCommand.watch + \" all \" + className + \".\" + checkedField);\n@@ -132,1 +127,1 @@\n-    private boolean checkFields (String className, String[] reply, String[] checkedFields) {\n+    private boolean checkFields(String className, String[] reply, String[] checkedFields) {\n@@ -136,2 +131,1 @@\n-        int count;\n-        Vector v = new Vector();\n+        Vector<String> v = new Vector<>();\n@@ -141,1 +135,1 @@\n-        for (int i = 0; i < checkedFields.length; i++) {\n+        for (String checkedField : checkedFields) {\n@@ -144,1 +138,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -148,1 +142,1 @@\n-                log.complain(\"Failed to report access to field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"Failed to report access to field \" + className + \".\" + checkedField);\n@@ -154,1 +148,1 @@\n-            v.add(className + \".\" + checkedFields[i]);\n+            v.add(className + \".\" + checkedField);\n@@ -158,1 +152,1 @@\n-                log.complain(\"Failed to report modification of field \" + className + \".\" + checkedFields[i]);\n+                log.complain(\"Failed to report modification of field \" + className + \".\" + checkedField);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch002\/watch002.java","additions":33,"deletions":39,"binary":false,"changes":72,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,2 +33,0 @@\n-    \/* TEST DEPENDANT VARIABLES AND CONSTANTS *\/\n-    static final String PACKAGE_NAME = \"nsk.jdb.watch.watch002\";\n@@ -37,3 +34,3 @@\n-    public static void main(String args[]) {\n-       watch002a _watch002a = new watch002a();\n-       System.exit(watch002.JCK_STATUS_BASE + _watch002a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        watch002a _watch002a = new watch002a();\n+        System.exit(watch002.JCK_STATUS_BASE + _watch002a.runIt(args, System.out));\n@@ -42,1 +39,2 @@\n-    static void breakHere () {}\n+    static void breakHere() {\n+    }\n@@ -44,1 +42,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -56,2 +54,5 @@\n-    static    boolean fS0, fS1[], fS2[][];\n-    static    Boolean FS0, FS1[], FS2[][];\n+    static boolean fS0, fS1[], fS2[][];\n+    static Boolean FS0, FS1[], FS2[][];\n+\n+    interface Inter {\n+    }\n@@ -59,2 +60,1 @@\n-    interface Inter {}\n-    Inter     I0, I1[], I2[][];\n+    Inter I0, I1[], I2[][];\n@@ -66,2 +66,2 @@\n-        fS1 = flag ? fS1 : new boolean[] {fS0};\n-        fS2 = flag ? fS2 : new boolean[][] {fS1};\n+        fS1 = flag ? fS1 : new boolean[]{fS0};\n+        fS2 = flag ? fS2 : new boolean[][]{fS1};\n@@ -70,2 +70,2 @@\n-        FS1 = flag ? FS1 : new Boolean[] {FS0};\n-        FS2 = flag ? FS2 : new Boolean[][] {FS1};\n+        FS1 = flag ? FS1 : new Boolean[]{FS0};\n+        FS2 = flag ? FS2 : new Boolean[][]{FS1};\n@@ -73,3 +73,3 @@\n-        I0  = flag ? I0  : new CheckedFields();\n-        I1  = flag ? I1  : new CheckedFields[]   {new CheckedFields()};\n-        I2  = flag ? I2  : new CheckedFields[][] {new CheckedFields[] {new CheckedFields()}};\n+        I0 = flag ? I0 : new CheckedFields();\n+        I1 = flag ? I1 : new CheckedFields[]{new CheckedFields()};\n+        I2 = flag ? I2 : new CheckedFields[][]{new CheckedFields[]{new CheckedFields()}};\n@@ -80,5 +80,5 @@\n-        private   byte    fP0, fP1[], fP2[][];\n-        public    char    fU0, fU1[], fU2[][];\n-        protected double  fR0, fR1[], fR2[][];\n-        transient float   fT0, fT1[], fT2[][];\n-        volatile  long    fV0, fV1[], fV2[][];\n+        private byte fP0, fP1[], fP2[][];\n+        public char fU0, fU1[], fU2[][];\n+        protected double fR0, fR1[], fR2[][];\n+        transient float fT0, fT1[], fT2[][];\n+        volatile long fV0, fV1[], fV2[][];\n@@ -86,5 +86,5 @@\n-        private   Byte      FP0, FP1[], FP2[][];\n-        public    Character FU0, FU1[], FU2[][];\n-        protected Double    FR0, FR1[], FR2[][];\n-        transient Float     FT0, FT1[], FT2[][];\n-        volatile  Long      FV0, FV1[], FV2[][];\n+        private Byte FP0, FP1[], FP2[][];\n+        public Character FU0, FU1[], FU2[][];\n+        protected Double FR0, FR1[], FR2[][];\n+        transient Float FT0, FT1[], FT2[][];\n+        volatile Long FV0, FV1[], FV2[][];\n@@ -95,1 +95,1 @@\n-            fP0 = flag ? fP0 : Byte.MIN_VALUE ;\n+            fP0 = flag ? fP0 : Byte.MIN_VALUE;\n@@ -101,1 +101,1 @@\n-            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE) ;\n+            FP0 = flag ? FP0 : new Byte(Byte.MIN_VALUE);\n@@ -107,21 +107,21 @@\n-            fP1 = flag ? fP1 : new byte[] {fP0};\n-            fP2 = flag ? fP2 : new byte[][] {fP1};\n-            fU1 = flag ? fU1 : new char[] {fU0};\n-            fU2 = flag ? fU2 : new char[][] {fU1};\n-            fR1 = flag ? fR1 : new double[] {fR0};\n-            fR2 = flag ? fR2 : new double[][] {fR1};\n-            fT1 = flag ? fT1 : new float[] {fT0};\n-            fT2 = flag ? fT2 : new float[][] {fT1};\n-            fV1 = flag ? fV1 : new long[] {fV0};\n-            fV2 = flag ? fV2 : new long[][] {fV1};\n-\n-            FP1 = flag ? FP1 : new Byte[] {FP0};\n-            FP2 = flag ? FP2 : new Byte[][] {FP1};\n-            FU1 = flag ? FU1 : new Character[] {FU0};\n-            FU2 = flag ? FU2 : new Character[][] {FU1};\n-            FR1 = flag ? FR1 : new Double[] {FR0};\n-            FR2 = flag ? FR2 : new Double[][] {FR1};\n-            FT1 = flag ? FT1 : new Float[] {FT0};\n-            FT2 = flag ? FT2 : new Float[][] {FT1};\n-            FV1 = flag ? FV1 : new Long[] {FV0};\n-            FV2 = flag ? FV2 : new Long[][] {FV1};\n+            fP1 = flag ? fP1 : new byte[]{fP0};\n+            fP2 = flag ? fP2 : new byte[][]{fP1};\n+            fU1 = flag ? fU1 : new char[]{fU0};\n+            fU2 = flag ? fU2 : new char[][]{fU1};\n+            fR1 = flag ? fR1 : new double[]{fR0};\n+            fR2 = flag ? fR2 : new double[][]{fR1};\n+            fT1 = flag ? fT1 : new float[]{fT0};\n+            fT2 = flag ? fT2 : new float[][]{fT1};\n+            fV1 = flag ? fV1 : new long[]{fV0};\n+            fV2 = flag ? fV2 : new long[][]{fV1};\n+\n+            FP1 = flag ? FP1 : new Byte[]{FP0};\n+            FP2 = flag ? FP2 : new Byte[][]{FP1};\n+            FU1 = flag ? FU1 : new Character[]{FU0};\n+            FU2 = flag ? FU2 : new Character[][]{FU1};\n+            FR1 = flag ? FR1 : new Double[]{FR0};\n+            FR2 = flag ? FR2 : new Double[][]{FR1};\n+            FT1 = flag ? FT1 : new Float[]{FT0};\n+            FT2 = flag ? FT2 : new Float[][]{FT1};\n+            FV1 = flag ? FV1 : new Long[]{FV0};\n+            FV2 = flag ? FV2 : new Long[][]{FV1};\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/watch\/watch002\/watch002a.java","additions":56,"deletions":56,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -58,2 +58,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -61,2 +62,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -66,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -70,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -77,5 +78,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.where.where004\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".where004\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.where.where004\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".where004\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {DEBUGGEE_CLASS + \".func5\", \"71\"},\n+            {DEBUGGEE_CLASS + \".func4\", \"67\"},\n+            {DEBUGGEE_CLASS + \".func3\", \"63\"},\n+            {DEBUGGEE_CLASS + \".func2\", \"59\"},\n+            {DEBUGGEE_CLASS + \".func1\", \"55\"},\n+            {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n+            {DEBUGGEE_CLASS + \".main\", \"38\"}\n+    };\n@@ -83,9 +94,0 @@\n-    static final String[][] FRAMES = new String[][] {\n-        {DEBUGGEE_CLASS + \".func5\", \"71\"},\n-        {DEBUGGEE_CLASS + \".func4\", \"67\"},\n-        {DEBUGGEE_CLASS + \".func3\", \"63\"},\n-        {DEBUGGEE_CLASS + \".func2\", \"59\"},\n-        {DEBUGGEE_CLASS + \".func1\", \"55\"},\n-        {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n-        {DEBUGGEE_CLASS + \".main\",  \"39\"}\n-                                                };\n@@ -96,2 +98,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -105,4 +106,4 @@\n-        for (int i = 0; i < FRAMES.length; i++) {\n-            v = new Vector();\n-            v.add(FRAMES[i][0]);\n-            v.add(FRAMES[i][1]);\n+        for (String[] frame : FRAMES) {\n+            v = new Vector<>();\n+            v.add(frame[0]);\n+            v.add(frame[1]);\n@@ -111,2 +112,2 @@\n-                failure(\"Unexpected number or location of the stack frame: \" + FRAMES[i][0] +\n-                    \"\\n\\texpected value : 1, got one: \" + count);\n+                failure(\"Unexpected number or location of the stack frame: \" + frame[0] +\n+                        \"\\n\\texpected value : 1, got one: \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where004\/where004.java","additions":30,"deletions":29,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -32,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,4 +35,4 @@\n-    public static void main(String args[]) {\n-       where004a _where004a = new where004a();\n-       lastBreak();\n-       System.exit(where004.JCK_STATUS_BASE + _where004a.runIt(args, System.out)); \/\/ where004.FRAMES[6]\n+    public static void main(String[] args) {\n+        where004a _where004a = new where004a();\n+        lastBreak();\n+        System.exit(where004.JCK_STATUS_BASE + _where004a.runIt(args, System.out)); \/\/ where004.FRAMES[6]\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -67,1 +67,1 @@\n-       return func5(i) + 1; \/\/ where004.FRAMES[1]\n+        return func5(i) + 1; \/\/ where004.FRAMES[1]\n@@ -71,1 +71,1 @@\n-       return func6(i) + 1; \/\/ this is line for breakpoint \/\/ where004.FRAMES[0]\n+        return func6(i) + 1; \/\/ this is line for breakpoint \/\/ where004.FRAMES[0]\n@@ -75,1 +75,1 @@\n-        return i-5;\n+        return i - 5;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where004\/where004a.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -59,2 +59,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -62,2 +63,2 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n+import java.util.Vector;\n@@ -67,1 +68,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -71,2 +72,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,1 +79,1 @@\n-    public where005 (boolean debuggeeShouldFail) {\n+    public where005(boolean debuggeeShouldFail) {\n@@ -82,5 +83,16 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.where.where005\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".where005\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.where.where005\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".where005\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {DEBUGGEE_CLASS + \".func6\", \"76\"},\n+            {DEBUGGEE_CLASS + \".func5\", \"71\"},\n+            {DEBUGGEE_CLASS + \".func4\", \"67\"},\n+            {DEBUGGEE_CLASS + \".func3\", \"63\"},\n+            {DEBUGGEE_CLASS + \".func2\", \"59\"},\n+            {DEBUGGEE_CLASS + \".func1\", \"55\"},\n+            {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n+            {DEBUGGEE_CLASS + \".main\", \"38\"}\n+    };\n@@ -88,10 +100,0 @@\n-    static final String[][] FRAMES = new String[][] {\n-        {DEBUGGEE_CLASS + \".func6\", \"76\"},\n-        {DEBUGGEE_CLASS + \".func5\", \"71\"},\n-        {DEBUGGEE_CLASS + \".func4\", \"67\"},\n-        {DEBUGGEE_CLASS + \".func3\", \"63\"},\n-        {DEBUGGEE_CLASS + \".func2\", \"59\"},\n-        {DEBUGGEE_CLASS + \".func1\", \"55\"},\n-        {DEBUGGEE_CLASS + \".runIt\", \"48\"},\n-        {DEBUGGEE_CLASS + \".main\",  \"39\"}\n-                                                };\n@@ -102,2 +104,1 @@\n-        Vector v;\n-        String found;\n+        Vector<String> v;\n@@ -114,4 +115,4 @@\n-            for (int i = 0; i < FRAMES.length; i++) {\n-                v = new Vector();\n-                v.add(FRAMES[i][0]);\n-                v.add(FRAMES[i][1]);\n+            for (String[] frame : FRAMES) {\n+                v = new Vector<>();\n+                v.add(frame[0]);\n+                v.add(frame[1]);\n@@ -120,2 +121,2 @@\n-                    failure(\"Unexpected number or location of the stack frame: \" + FRAMES[i][0] +\n-                        \"\\n\\texpected value : 1, got one: \" + count);\n+                    failure(\"Unexpected number or location of the stack frame: \" + frame[0] +\n+                            \"\\n\\texpected value : 1, got one: \" + count);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where005\/where005.java","additions":32,"deletions":31,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -28,3 +28,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -32,1 +31,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -34,1 +33,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -36,4 +35,4 @@\n-    public static void main(String args[]) {\n-       where005a _where005a = new where005a();\n-       lastBreak();\n-       System.exit(where005.JCK_STATUS_BASE + _where005a.runIt(args, System.out)); \/\/ where005.FRAMES[7]\n+    public static void main(String[] args) {\n+        where005a _where005a = new where005a();\n+        lastBreak();\n+        System.exit(where005.JCK_STATUS_BASE + _where005a.runIt(args, System.out)); \/\/ where005.FRAMES[7]\n@@ -42,1 +41,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -44,1 +44,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -67,1 +67,1 @@\n-       return func5(i) + 1; \/\/ where005.FRAMES[2]\n+        return func5(i) + 1; \/\/ where005.FRAMES[2]\n@@ -71,1 +71,1 @@\n-       return func6(i) + 1; \/\/ where005.FRAMES[1]\n+        return func6(i) + 1; \/\/ where005.FRAMES[1]\n@@ -77,1 +77,1 @@\n-        return i-5;\n+        return i - 5;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where005\/where005a.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -59,2 +59,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -62,2 +63,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -67,1 +67,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -71,2 +71,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -78,14 +78,15 @@\n-    static final String PACKAGE_NAME     = \"nsk.jdb.where.where006\";\n-    static final String TEST_CLASS       = PACKAGE_NAME + \".where006\";\n-    static final String DEBUGGEE_CLASS   = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK      = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK       = DEBUGGEE_CLASS + \".lastBreak\";\n-\n-    static final String[][] FRAMES = new String[][] {\n-        {PACKAGE_NAME + \".MyThread.func5\", \"111\"},\n-        {PACKAGE_NAME + \".MyThread.func4\", \"103\"},\n-        {PACKAGE_NAME + \".MyThread.func3\", \"99\"},\n-        {PACKAGE_NAME + \".MyThread.func2\", \"95\"},\n-        {PACKAGE_NAME + \".MyThread.func1\", \"91\"},\n-        {PACKAGE_NAME + \".MyThread.run\", \"85\"},\n-                                                };\n+    static final String PACKAGE_NAME = \"nsk.jdb.where.where006\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".where006\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n+\n+    static final String[][] FRAMES = new String[][]{\n+            {PACKAGE_NAME + \".MyThread.func5\", \"111\"},\n+            {PACKAGE_NAME + \".MyThread.func4\", \"103\"},\n+            {PACKAGE_NAME + \".MyThread.func3\", \"99\"},\n+            {PACKAGE_NAME + \".MyThread.func2\", \"95\"},\n+            {PACKAGE_NAME + \".MyThread.func1\", \"91\"},\n+            {PACKAGE_NAME + \".MyThread.run\", \"85\"},\n+    };\n+\n@@ -94,4 +95,0 @@\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -116,1 +113,1 @@\n-    void checkFrames (String threadId, String[] reply, int expectedVal) {\n+    void checkFrames(String threadId, String[] reply, int expectedVal) {\n@@ -119,1 +116,0 @@\n-        Vector v;\n@@ -123,2 +119,2 @@\n-        for (int j = 0; j < FRAMES.length; j++) {\n-            count = grep.find(FRAMES[j][0]);\n+        for (String[] frame : FRAMES) {\n+            count = grep.find(frame[0]);\n@@ -126,3 +122,3 @@\n-                failure(\"Unexpected number of occurencies of the stack frame: \" + FRAMES[j][0] +\n-                    \" for thread \" + threadId +\n-                    \"\\n\\t Expected number of occurence: \" + expectedVal +\", got : \" + count);\n+                failure(\"Unexpected number of occurencies of the stack frame: \" + frame[0] +\n+                        \" for thread \" + threadId +\n+                        \"\\n\\t Expected number of occurence: \" + expectedVal + \", got : \" + count);\n@@ -130,5 +126,5 @@\n-                    found = grep.findFirst(FRAMES[j][0]);\n-                    if (found.indexOf(FRAMES[j][1]) < 0) {\n-                        failure(\"Unexpected location in the stack frame: \" + FRAMES[j][0] +\n-                            \" for thread \" + threadId +\n-                            \"\\n\\t Expected location: \" + FRAMES[j][1] + \", got :\\n\\t\" + found);\n+                    found = grep.findFirst(frame[0]);\n+                    if (!found.contains(frame[1])) {\n+                        failure(\"Unexpected location in the stack frame: \" + frame[0] +\n+                                \" for thread \" + threadId +\n+                                \"\\n\\t Expected location: \" + frame[1] + \", got :\\n\\t\" + found);\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where006\/where006.java","additions":33,"deletions":37,"binary":false,"changes":70,"status":"modified"},{"patch":"@@ -26,3 +26,3 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Failure;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +30,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +32,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,1 +34,1 @@\n-    public static void main(String args[]) {\n+    public static void main(String[] args) {\n@@ -39,1 +39,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -46,1 +47,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -50,1 +51,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -53,3 +54,3 @@\n-        for (int i = 0; i < numThreads ; i++) {\n-           locks[i] = new Lock();\n-           holder[i] = new MyThread(locks[i],\"MyThread-\" + i);\n+        for (int i = 0; i < numThreads; i++) {\n+            locks[i] = new Lock();\n+            holder[i] = new MyThread(locks[i], \"MyThread-\" + i);\n@@ -60,12 +61,12 @@\n-           synchronized (waitnotify) {\n-              for (int i = 0; i < numThreads ; i++) {\n-                 holder[i].start();\n-                 try {\n-                     waitnotify.wait();\n-                 } catch ( Exception e ) {\n-                     System.err.println(\"TEST ERROR: caught Exception while waiting: \" + e);\n-                     e.printStackTrace();\n-                 }\n-              }\n-           }\n-           lastBreak();   \/\/ dummy breakpoint\n+            synchronized (waitnotify) {\n+                for (int i = 0; i < numThreads; i++) {\n+                    holder[i].start();\n+                    try {\n+                        waitnotify.wait();\n+                    } catch (Exception e) {\n+                        System.err.println(\"TEST ERROR: caught Exception while waiting: \" + e);\n+                        e.printStackTrace();\n+                    }\n+                }\n+            }\n+            lastBreak();   \/\/ dummy breakpoint\n@@ -74,1 +75,1 @@\n-        for (int i = 0; i < numThreads ; i++) {\n+        for (int i = 0; i < numThreads; i++) {\n@@ -91,14 +92,14 @@\n-   boolean lockSet;\n-\n-   synchronized void setLock() throws InterruptedException {\n-      while (lockSet == true )\n-         wait();\n-      lockSet = true;\n-   }\n-\n-   synchronized void releaseLock() {\n-      if (lockSet == true) {\n-        lockSet = false;\n-        notify();\n-      }\n-   }\n+    boolean lockSet;\n+\n+    synchronized void setLock() throws InterruptedException {\n+        while (lockSet == true)\n+            wait();\n+        lockSet = true;\n+    }\n+\n+    synchronized void releaseLock() {\n+        if (lockSet == true) {\n+            lockSet = false;\n+            notify();\n+        }\n+    }\n@@ -108,36 +109,41 @@\n-   Lock lock;\n-   String name;\n-   MyThread(Lock l, String n) {this.lock = l; name = n;}\n-\n-   public void run() {\n-      \/\/ Concatenate strings in advance to avoid lambda calculations later\n-      final String ThreadFinished = \"Thread finished: \" + this.name;\n-      int square = func1(10);\n-      lock.releaseLock();\n-      System.out.println(ThreadFinished);\n-   }\n-\n-   public int func1(int i) {\n-      return func2(i);\n-   }\n-\n-   public int func2(int i) {\n-      return func3(i);\n-   }\n-\n-   public int func3(int i) {\n-      return func4(i);\n-   }\n-\n-   public int func4(int i) {\n-      return func5(i);\n-   }\n-\n-   public int func5(int i) {\n-      synchronized (where006a.waitnotify) {\n-         where006a.waitnotify.notify();\n-      }\n-      \/\/ prevent thread for early finish\n-      synchronized (where006a.lock) {}\n-      return i*i;\n-   }\n+    Lock lock;\n+    String name;\n+\n+    MyThread(Lock l, String n) {\n+        this.lock = l;\n+        name = n;\n+    }\n+\n+    public void run() {\n+        \/\/ Concatenate strings in advance to avoid lambda calculations later\n+        final String ThreadFinished = \"Thread finished: \" + this.name;\n+        int square = func1(10);\n+        lock.releaseLock();\n+        System.out.println(ThreadFinished);\n+    }\n+\n+    public int func1(int i) {\n+        return func2(i);\n+    }\n+\n+    public int func2(int i) {\n+        return func3(i);\n+    }\n+\n+    public int func3(int i) {\n+        return func4(i);\n+    }\n+\n+    public int func4(int i) {\n+        return func5(i);\n+    }\n+\n+    public int func5(int i) {\n+        synchronized (where006a.waitnotify) {\n+            where006a.waitnotify.notify();\n+        }\n+        \/\/ prevent thread for early finish\n+        synchronized (where006a.lock) {\n+        }\n+        return i * i;\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/where\/where006\/where006a.java","additions":81,"deletions":75,"binary":false,"changes":156,"status":"modified"},{"patch":"@@ -54,2 +54,3 @@\n-import nsk.share.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Paragrep;\n+import nsk.share.jdb.JdbCommand;\n+import nsk.share.jdb.JdbTest;\n@@ -57,2 +58,1 @@\n-import java.io.*;\n-import java.util.*;\n+import java.io.PrintStream;\n@@ -62,1 +62,1 @@\n-    public static void main (String argv[]) {\n+    public static void main(String[] argv) {\n@@ -66,2 +66,2 @@\n-    public static int run(String argv[], PrintStream out) {\n-        debuggeeClass =  DEBUGGEE_CLASS;\n+    public static int run(String[] argv, PrintStream out) {\n+        debuggeeClass = DEBUGGEE_CLASS;\n@@ -73,5 +73,5 @@\n-    static final String PACKAGE_NAME    = \"nsk.jdb.wherei.wherei001\";\n-    static final String TEST_CLASS      = PACKAGE_NAME + \".wherei001\";\n-    static final String DEBUGGEE_CLASS  = TEST_CLASS + \"a\";\n-    static final String FIRST_BREAK     = DEBUGGEE_CLASS + \".main\";\n-    static final String LAST_BREAK      = DEBUGGEE_CLASS + \".lastBreak\";\n+    static final String PACKAGE_NAME = \"nsk.jdb.wherei.wherei001\";\n+    static final String TEST_CLASS = PACKAGE_NAME + \".wherei001\";\n+    static final String DEBUGGEE_CLASS = TEST_CLASS + \"a\";\n+    static final String FIRST_BREAK = DEBUGGEE_CLASS + \".main\";\n+    static final String LAST_BREAK = DEBUGGEE_CLASS + \".lastBreak\";\n@@ -81,5 +81,0 @@\n-        String[] reply;\n-        Paragrep grep;\n-        int count;\n-        Vector v;\n-        String found;\n@@ -89,1 +84,1 @@\n-        reply = jdb.receiveReplyFor(JdbCommand.cont);\n+        jdb.receiveReplyFor(JdbCommand.cont);\n@@ -99,2 +94,2 @@\n-        for (int i = 0; i < threads.length; i++) {\n-            if (!checkStack(threads[i])) {\n+        for (String thread : threads) {\n+            if (!checkStack(thread)) {\n@@ -108,1 +103,1 @@\n-    private boolean checkStack (String threadId) {\n+    private boolean checkStack(String threadId) {\n@@ -111,1 +106,0 @@\n-        String found;\n@@ -113,1 +107,0 @@\n-        Vector v;\n@@ -115,1 +108,1 @@\n-        String[] func = { \"func5\", \"func4\", \"func3\", \"func2\", \"func1\", \"run\" };\n+        String[] func = {\"func5\", \"func4\", \"func3\", \"func2\", \"func1\", \"run\"};\n@@ -120,2 +113,2 @@\n-        for (int i = 0; i < func.length; i++) {\n-            count = grep.find(DEBUGGEE_THREAD + \".\" + func[i]);\n+        for (String s : func) {\n+            count = grep.find(DEBUGGEE_THREAD + \".\" + s);\n@@ -124,1 +117,1 @@\n-                log.complain(\"Searched for: \" + DEBUGGEE_THREAD + \".\" + func[i]);\n+                log.complain(\"Searched for: \" + DEBUGGEE_THREAD + \".\" + s);\n@@ -126,1 +119,1 @@\n-                result= false;\n+                result = false;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/wherei\/wherei001\/wherei001.java","additions":21,"deletions":28,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -26,3 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdb.*;\n+import nsk.share.Log;\n+import nsk.share.jdb.JdbArgumentHandler;\n@@ -30,1 +29,1 @@\n-import java.io.*;\n+import java.io.PrintStream;\n@@ -32,1 +31,1 @@\n-\/* This is debuggee aplication *\/\n+\/* This is debuggee application *\/\n@@ -34,3 +33,3 @@\n-    public static void main(String args[]) {\n-       wherei001a _wherei001a = new wherei001a();\n-       System.exit(wherei001.JCK_STATUS_BASE + _wherei001a.runIt(args, System.out));\n+    public static void main(String[] args) {\n+        wherei001a _wherei001a = new wherei001a();\n+        System.exit(wherei001.JCK_STATUS_BASE + _wherei001a.runIt(args, System.out));\n@@ -39,1 +38,2 @@\n-    static void lastBreak () {}\n+    static void lastBreak() {\n+    }\n@@ -48,1 +48,1 @@\n-    public int runIt(String args[], PrintStream out) {\n+    public int runIt(String[] args, PrintStream out) {\n@@ -54,1 +54,1 @@\n-        Thread holder [] = new Thread[numThreads];\n+        Thread holder[] = new Thread[numThreads];\n@@ -57,1 +57,1 @@\n-        for (i = 0; i < numThreads ; i++) {\n+        for (i = 0; i < numThreads; i++) {\n@@ -59,1 +59,1 @@\n-            holder[i] = new MyThread(locks[i],\"MyThread-\" + i);\n+            holder[i] = new MyThread(locks[i], \"MyThread-\" + i);\n@@ -65,1 +65,1 @@\n-                for (i = 0; i < numThreads ; i++) {\n+                for (i = 0; i < numThreads; i++) {\n@@ -69,1 +69,1 @@\n-                    } catch ( Exception e ) {\n+                    } catch (Exception e) {\n@@ -90,1 +90,1 @@\n-    public MyThread (Lock l, String n) {\n+    public MyThread(Lock l, String n) {\n@@ -135,1 +135,1 @@\n-        return i*i;\n+        return i * i;\n@@ -143,1 +143,1 @@\n-        while (lockSet == true ) {\n+        while (lockSet == true) {\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jdb\/wherei\/wherei001\/wherei001a.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -26,6 +26,2 @@\n-import nsk.share.*;\n-import nsk.share.jpda.*;\n-import nsk.share.jdi.ArgumentHandler;\n-\n-import java.io.*;\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.List;\n@@ -73,6 +69,4 @@\n-     * @param  args  Array of the raw command-line arguments.\n-     *\n-     * @throws  NullPointerException  If <code>args==null<\/code>.\n-     * @throws  IllegalArgumentException  If Binder or Log options\n-     *                                    are set incorrectly.\n-     *\n+     * @param args Array of the raw command-line arguments.\n+     * @throws NullPointerException     If <code>args==null<\/code>.\n+     * @throws IllegalArgumentException If Binder or Log options\n+     *                                  are set incorrectly.\n@@ -81,1 +75,1 @@\n-    public JdbArgumentHandler(String args[]) {\n+    public JdbArgumentHandler(String[] args) {\n@@ -91,2 +85,2 @@\n-     * @param value string representation of value (could be an empty string)\n-     *              null if this option has no value\n+     * @param value  string representation of value (could be an empty string)\n+     *               null if this option has no value\n@@ -94,2 +88,1 @@\n-     *         <i>false<\/i> if option is not admissible\n-     *\n+     * <i>false<\/i> if option is not admissible\n@@ -97,1 +90,0 @@\n-     *\n@@ -126,1 +118,1 @@\n-                    throw new BadOption(\"jdb option -listen is not admissible: \"  + value);\n+                    throw new BadOption(\"jdb option -listen is not admissible: \" + value);\n@@ -174,1 +166,0 @@\n-     *\n@@ -185,4 +176,1 @@\n-        if (value.length() > 1 && value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n-            value = value.substring(1, value.length() - 1).trim();\n-        }\n-        return value;\n+        return removeSurroundingQuotes(value);\n@@ -209,3 +197,1 @@\n-        if (value.length() > 1 && value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n-            value = value.substring(1, value.length() - 1).trim();\n-        }\n+        value = removeSurroundingQuotes(value);\n@@ -226,41 +212,1 @@\n-        if (value.length() > 1 && value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n-            value = value.substring(1, value.length() - 1).trim();\n-        }\n-        return value;\n-    }\n-\n-    \/**\n-     * Remove \"<code>-server<\/code>\" or \"<code>-client<\/code>\" from options string,\n-     * if anything of them are presented.\n-     *\/\n-    public static String removeVMFlavorOption(String javaOptions) {\n-        StringBuffer result = new StringBuffer();\n-        StringTokenizer tokenizer = new StringTokenizer(javaOptions);\n-        while (tokenizer.hasMoreTokens()) {\n-            String option = tokenizer.nextToken();\n-            if (!option.equals(\"-server\") && !option.equals(\"-client\")) {\n-                result.append( (result.length() > 0 ? \" \" : \"\") + option);\n-            }\n-        };\n-        return result.toString();\n-    }\n-\n-    \/**\n-     * @return \"<code>-tserver<\/code>\" if \"<code>-server<\/code>\" is presented in options string.\n-     * @return \"<code>-tclient<\/code>\" if \"<code>-client<\/code>\" is presented in options string.\n-     * @return empty string otherwise.\n-     *\/\n-    public static String stripVMFlavorOption(String javaOptions) {\n-        String result = \"\";\n-        StringTokenizer tokenizer = new StringTokenizer(javaOptions);\n-        while (tokenizer.hasMoreTokens()) {\n-            String option = tokenizer.nextToken();\n-            if (option.equals(\"-server\")) {\n-                result = \"-tserver\";\n-                break;\n-            } else if (option.equals(\"-client\")) {\n-                result = \"-tclient\";\n-                break;\n-            }\n-        };\n-        return result;\n+        return removeSurroundingQuotes(value);\n@@ -273,1 +219,1 @@\n-        if (NO_SUBSTR_MATCH == value.indexOf(subString)) {\n+        if (!value.contains(subString)) {\n@@ -300,1 +246,1 @@\n-            throw new BadOption(value +  \" not correctly quoted\");\n+            throw new BadOption(value + \" not correctly quoted\");\n@@ -305,1 +251,6 @@\n-    private static final int NO_SUBSTR_MATCH = -1;\n+    private static String removeSurroundingQuotes(String value) {\n+        if (value.length() > 1 && value.startsWith(\"\\\"\") && value.endsWith(\"\\\"\")) {\n+            value = value.substring(1, value.length() - 1).trim();\n+        }\n+        return value;\n+    }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jdb\/JdbArgumentHandler.java","additions":22,"deletions":71,"binary":false,"changes":93,"status":"modified"}]}