{"files":[{"patch":"@@ -928,4 +928,5 @@\n-# The policy for the XML Signature secure validation mode. The mode is\n-# enabled by setting the property \"org.jcp.xml.dsig.secureValidation\" to\n-# true with the javax.xml.crypto.XMLCryptoContext.setProperty() method,\n-# or by running the code with a SecurityManager.\n+# The policy for the XML Signature secure validation mode. Validation of\n+# XML Signatures that violate any of these constraints will fail. The\n+# mode is enforced by default. The mode can be disabled by setting the\n+# property \"org.jcp.xml.dsig.secureValidation\" to Boolean.FALSE with the\n+# javax.xml.crypto.XMLCryptoContext.setProperty() method.\n@@ -958,2 +959,2 @@\n-# Note: This property is currently used by the JDK Reference implementation. It\n-# is not guaranteed to be examined and used by other implementations.\n+# Note: This property is currently used by the JDK Reference implementation.\n+# It is not guaranteed to be examined and used by other implementations.\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,0 +54,8 @@\n+ * @implNote\n+ * By default, the JDK implementation enables a secure validation mode by\n+ * setting the <code>org.jcp.xml.dsig.secureValidation<\/code> property to\n+ * <code>Boolean.TRUE<\/code> (see the {@link #setProperty setProperty}\n+ * method). When enabled, validation of XML signatures are subject to\n+ * stricter checking of algorithms and other constraints as specified by the\n+ * <code>jdk.xml.dsig.secureValidationPolicy<\/code> security property.\n+ *\n@@ -106,4 +114,1 @@\n-        if (System.getSecurityManager() != null) {\n-            super.setProperty(\"org.jcp.xml.dsig.secureValidation\",\n-                              Boolean.TRUE);\n-        }\n+        super.setProperty(\"org.jcp.xml.dsig.secureValidation\", Boolean.TRUE);\n","filename":"src\/java.xml.crypto\/share\/classes\/javax\/xml\/crypto\/dsig\/dom\/DOMValidateContext.java","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -606,1 +606,1 @@\n-            (sha1, dsaSha1, dsa1024, signingKey, kvks, true);\n+            (sha1, dsaSha1, dsa1024, signingKey, kvks, true, true);\n@@ -613,1 +613,1 @@\n-            (sha1, dsaSha1, dsa1024, signingKey, kvks, false);\n+            (sha1, dsaSha1, dsa1024, signingKey, kvks, false, true);\n@@ -620,1 +620,1 @@\n-            (sha256, dsaSha1, dsa1024, signingKey, kvks, false);\n+            (sha256, dsaSha1, dsa1024, signingKey, kvks, false, true);\n@@ -629,1 +629,1 @@\n-                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -642,1 +642,1 @@\n-            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -650,1 +650,1 @@\n-                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+                getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -658,1 +658,1 @@\n-            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -666,1 +666,1 @@\n-            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false);\n+            getSecretKey(\"secret\".getBytes(\"ASCII\")), sks, false, true);\n@@ -673,1 +673,1 @@\n-            getPrivateKey(\"RSA\", 512), kvks, false);\n+            getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -681,1 +681,1 @@\n-            getPrivateKey(\"RSA\", 512), kvks, false);\n+            getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -689,1 +689,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -697,1 +697,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -705,1 +705,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -713,1 +713,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -721,1 +721,1 @@\n-                getPrivateKey(\"RSA\", 512), kvks, false);\n+                getPrivateKey(\"RSA\", 512), kvks, false, false);\n@@ -729,1 +729,1 @@\n-            getPrivateKey(\"RSA\", 1024), kvks, false);\n+            getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -737,1 +737,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -745,1 +745,1 @@\n-            getPrivateKey(\"RSA\", 1024), kvks, false);\n+            getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -753,1 +753,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -761,1 +761,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -769,1 +769,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -777,1 +777,1 @@\n-                getPrivateKey(\"RSA\", 1024), kvks, false);\n+                getPrivateKey(\"RSA\", 1024), kvks, false, true);\n@@ -785,1 +785,1 @@\n-                getPrivateKey(\"RSA\", 2048), kvks, false);\n+                getPrivateKey(\"RSA\", 2048), kvks, false, true);\n@@ -792,1 +792,1 @@\n-            getECPrivateKey(\"P256\"), kvks, false);\n+            getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -799,1 +799,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -806,1 +806,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -813,1 +813,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -820,1 +820,1 @@\n-                getECPrivateKey(\"P256\"), kvks, false);\n+                getECPrivateKey(\"P256\"), kvks, false, true);\n@@ -827,1 +827,1 @@\n-            getECPrivateKey(\"P384\"), kvks, false);\n+            getECPrivateKey(\"P384\"), kvks, false, true);\n@@ -834,1 +834,1 @@\n-            getECPrivateKey(\"P521\"), kvks, false);\n+            getECPrivateKey(\"P521\"), kvks, false, true);\n@@ -966,0 +966,1 @@\n+        dvc.setProperty(\"org.jcp.xml.dsig.secureValidation\", false);\n@@ -1013,0 +1014,1 @@\n+        dvc.setProperty(\"org.jcp.xml.dsig.secureValidation\", false);\n@@ -1454,1 +1456,1 @@\n-         KeySelector ks, boolean b64) throws Exception {\n+         KeySelector ks, boolean b64, boolean secVal) throws Exception {\n@@ -1489,0 +1491,1 @@\n+        dvc.setProperty(\"org.jcp.xml.dsig.secureValidation\", secVal);\n","filename":"test\/jdk\/javax\/xml\/crypto\/dsig\/GenerationTests.java","additions":35,"deletions":32,"binary":false,"changes":67,"status":"modified"}]}