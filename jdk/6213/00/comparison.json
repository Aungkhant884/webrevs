{"files":[{"patch":"@@ -564,1 +564,1 @@\n-        private final static Object serialFilterLock = new Object();\n+        private static final Object serialFilterLock = new Object();\n@@ -909,1 +909,1 @@\n-        final static class Global implements ObjectInputFilter {\n+        static final class Global implements ObjectInputFilter {\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputFilter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2518,1 +2518,1 @@\n-        static abstract class Key {\n+        abstract static class Key {\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -281,1 +281,1 @@\n-     *     synchronized static method of that class.\n+     *     static synchronized method of that class.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Object.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -848,1 +848,1 @@\n-        private final static Charset nativeCharset;\n+        private static final Charset nativeCharset;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Process.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -121,1 +121,1 @@\n-    static abstract class AbstractStackWalker<R, T> {\n+    abstract static class AbstractStackWalker<R, T> {\n@@ -786,1 +786,1 @@\n-    static abstract class FrameBuffer<F> {\n+    abstract static class FrameBuffer<F> {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StackStreamFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -334,1 +334,1 @@\n-        final static Map<Class<?>, Boolean> callers\n+        static final Map<Class<?>, Boolean> callers\n@@ -1598,1 +1598,1 @@\n-    public static abstract class LoggerFinder {\n+    public abstract static class LoggerFinder {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -343,1 +343,1 @@\n-    private static abstract class WeakRefPeer<K> extends WeakReference<K> {\n+    private abstract static class WeakRefPeer<K> extends WeakReference<K> {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/WeakPairMap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -247,1 +247,1 @@\n-    static abstract\n+    abstract static\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/AbstractConstantGroup.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,2 +87,2 @@\n-abstract\n-public class CallSite {\n+public\n+abstract class CallSite {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/CallSite.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -218,1 +218,1 @@\n-    static transient final int preferIPv6Address;\n+    static final transient int preferIPv6Address;\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -823,1 +823,1 @@\n-    private volatile transient boolean servicesChanged;\n+    private transient volatile boolean servicesChanged;\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-    static abstract class AbstractImmutableCollection<E> extends AbstractCollection<E> {\n+    abstract static class AbstractImmutableCollection<E> extends AbstractCollection<E> {\n@@ -252,1 +252,1 @@\n-    static abstract class AbstractImmutableList<E> extends AbstractImmutableCollection<E>\n+    abstract static class AbstractImmutableList<E> extends AbstractImmutableCollection<E>\n@@ -745,1 +745,1 @@\n-    static abstract class AbstractImmutableSet<E> extends AbstractImmutableCollection<E>\n+    abstract static class AbstractImmutableSet<E> extends AbstractImmutableCollection<E>\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -627,1 +627,1 @@\n-    private static abstract class Data {\n+    private abstract static class Data {\n@@ -771,1 +771,1 @@\n-    public static abstract class Fast extends CodePointTrie {\n+    public abstract static class Fast extends CodePointTrie {\n@@ -909,1 +909,1 @@\n-    public static abstract class Small extends CodePointTrie {\n+    public abstract static class Small extends CodePointTrie {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/icu\/util\/CodePointTrie.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n-    static private final boolean IS_64_BIT =\n+    private static final boolean IS_64_BIT =\n@@ -66,1 +66,1 @@\n-    static private final boolean USE_JVM_MAP =\n+    private static final boolean USE_JVM_MAP =\n@@ -68,1 +68,1 @@\n-    static private final boolean MAP_ALL =\n+    private static final boolean MAP_ALL =\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/BasicImageReader.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    native static ByteBuffer getNativeMap(String imagePath);\n+    static native ByteBuffer getNativeMap(String imagePath);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jimage\/NativeImageBuffer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -440,1 +440,1 @@\n-        static private final String[] skips;\n+        private static final String[] skips;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/logger\/SimpleConsoleLogger.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-    static abstract class SafeCloseModuleReader implements ModuleReader {\n+    abstract static class SafeCloseModuleReader implements ModuleReader {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleReferences.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -891,1 +891,1 @@\n-    private static abstract class Unmapper\n+    private abstract static class Unmapper\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-    static private PreferredList preferredPropList = null;\n+    private static PreferredList preferredPropList = null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderList.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-    private transient final KeyType type;\n+    private final transient KeyType type;\n@@ -68,1 +68,1 @@\n-    private transient final AlgorithmParameterSpec keyParams;\n+    private final transient AlgorithmParameterSpec keyParams;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPrivateKeyImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -553,1 +553,1 @@\n-    static abstract class HandshakeMessage {\n+    abstract static class HandshakeMessage {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLHandshake.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}