{"files":[{"patch":"@@ -66,0 +66,3 @@\n+@Fork(2)\n+@Warmup(iterations = 1)\n+@Measurement(iterations = 4)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/ArrayFiddle.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- * (cd $(git rev-parse --show-toplevel) && for size in 16 128 1024; do make test TEST='micro:java.util.regex.Exponential' MICRO=\"FORK=2;WARMUP_ITER=1;ITER=4;OPTIONS=-opi $size -p size=$size\" |& perl -ne 'print if \/^Benchmark\/ .. \/^Finished running test\/'; done)\n+ * (cd $(git rev-parse --show-toplevel) && for size in 16 128 1024; do make test TEST='micro:java.util.regex.Exponential' MICRO=\"FORK=1;WARMUP_ITER=1;ITER=4;OPTIONS=-opi $size -p size=$size\" |& perl -ne 'print if \/^Benchmark\/ .. \/^Finished running test\/'; done)\n@@ -47,0 +47,3 @@\n+@Fork(1)\n+@Warmup(iterations = 1)\n+@Measurement(iterations = 4)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/regex\/Exponential.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * (cd $(git rev-parse --show-toplevel) && for n in 16 17 256 257 4096 4099; do make test TEST='micro:java.util.regex.Primality' MICRO=\"FORK=2;WARMUP_ITER=1;ITER=4;OPTIONS=-opi $n -p n=$n\" |& perl -ne 'print if \/^Benchmark\/ .. \/^Finished running test\/'; done)\n+ * (cd $(git rev-parse --show-toplevel) && for n in 16 17 256 257 4096 4099; do make test TEST='micro:java.util.regex.Primality' MICRO=\"FORK=1;WARMUP_ITER=1;ITER=4;OPTIONS=-opi $n -p n=$n\" |& perl -ne 'print if \/^Benchmark\/ .. \/^Finished running test\/'; done)\n@@ -47,0 +47,3 @@\n+@Fork(1)\n+@Warmup(iterations = 1)\n+@Measurement(iterations = 4)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/regex\/Primality.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n- * (cd $(git rev-parse --show-toplevel) && for size in 16 256 4096; do make test TEST='micro:java.util.regex.Trim' MICRO=\"FORK=2;WARMUP_ITER=1;ITER=4;OPTIONS=-opi $size -p size=$size\" |& perl -ne 'print if \/^Benchmark\/ .. \/^Finished running test\/'; done)\n+ * (cd $(git rev-parse --show-toplevel) && for size in 16 256 4096; do make test TEST='micro:java.util.regex.Trim' MICRO=\"FORK=1;WARMUP_ITER=1;ITER=4;OPTIONS=-opi $size -p size=$size\" |& perl -ne 'print if \/^Benchmark\/ .. \/^Finished running test\/'; done)\n@@ -78,0 +78,3 @@\n+@Fork(1)\n+@Warmup(iterations = 1)\n+@Measurement(iterations = 4)\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/regex\/Trim.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}