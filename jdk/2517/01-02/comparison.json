{"files":[{"patch":"@@ -38,1 +38,1 @@\n-    \/\/ Extensions defined in RFC 6066\n+    \/\/ Extensions defined in RFC 6066 (TLS Extensions: Extension Definitions)\n@@ -66,0 +66,1 @@\n+\n@@ -93,0 +94,1 @@\n+\n@@ -126,1 +128,1 @@\n-    \/\/ extensions defined in RFC 4681\n+    \/\/ Extensions defined in RFC 4681 (TLS User Mapping Extension)\n@@ -129,1 +131,1 @@\n-    \/\/ extensions defined in RFC 5878\n+    \/\/ Extensions defined in RFC 5878 (TLS Authorization Extensions)\n@@ -133,1 +135,1 @@\n-    \/\/ extensions defined in RFC 5081\n+    \/\/ Extensions defined in RFC 6091 (Using OpenPGP Keys for TLS Authentication)\n@@ -136,1 +138,1 @@\n-    \/\/ extensions defined in RFC 4492 (ECC)\n+    \/\/ Extensions defined in RFC 8422 (ECC Cipher Suites for TLS Versions 1.2 and Earlier)\n@@ -175,1 +177,1 @@\n-    \/\/ extensions defined in RFC 5054\n+    \/\/ Extensions defined in RFC 5054 (Using the SRP Protocol for TLS Authentication)\n@@ -178,21 +180,1 @@\n-    \/\/ extensions defined in RFC 5246\n-    CH_SIGNATURE_ALGORITHMS (0x000D, \"signature_algorithms\",\n-                                SSLHandshake.CLIENT_HELLO,\n-                                ProtocolVersion.PROTOCOLS_12_13,\n-                                SignatureAlgorithmsExtension.chNetworkProducer,\n-                                SignatureAlgorithmsExtension.chOnLoadConsumer,\n-                                SignatureAlgorithmsExtension.chOnLoadAbsence,\n-                                SignatureAlgorithmsExtension.chOnTradeConsumer,\n-                                SignatureAlgorithmsExtension.chOnTradeAbsence,\n-                                SignatureAlgorithmsExtension.ssStringizer),\n-    CR_SIGNATURE_ALGORITHMS (0x000D, \"signature_algorithms\",\n-                                SSLHandshake.CERTIFICATE_REQUEST,\n-                                ProtocolVersion.PROTOCOLS_OF_13,\n-                                SignatureAlgorithmsExtension.crNetworkProducer,\n-                                SignatureAlgorithmsExtension.crOnLoadConsumer,\n-                                SignatureAlgorithmsExtension.crOnLoadAbsence,\n-                                SignatureAlgorithmsExtension.crOnTradeConsumer,\n-                                null,\n-                                SignatureAlgorithmsExtension.ssStringizer),\n-\n-    \/\/ extensions defined in RFC 5764\n+    \/\/ Extensions defined in RFC 5764 (DTLS Extension to Establish Keys for the SRTP)\n@@ -201,1 +183,1 @@\n-    \/\/ extensions defined in RFC 6520\n+    \/\/ Extensions defined in RFC 6520 (TLS and DTLS Heartbeat Extension)\n@@ -204,1 +186,1 @@\n-    \/\/ extensions defined in RFC 7301 (ALPN)\n+    \/\/ Extensions defined in RFC 7301 (TLS Application-Layer Protocol Negotiation Extension)\n@@ -233,1 +215,1 @@\n-    \/\/ extensions defined in RFC 6961\n+    \/\/ Extensions defined in RFC 6961 (TLS Multiple Certificate Status Request Extension)\n@@ -253,1 +235,1 @@\n-    \/\/ extensions defined in RFC 6962\n+    \/\/ Extensions defined in RFC 6962 (Certificate Transparency)\n@@ -256,1 +238,1 @@\n-    \/\/ extensions defined in RFC 7250\n+    \/\/ Extensions defined in RFC 7250 (Using Raw Public Keys in TLS and DTLS)\n@@ -260,1 +242,1 @@\n-    \/\/ extensions defined in RFC 7685\n+    \/\/ Extensions defined in RFC 7685 (TLS ClientHello Padding Extension)\n@@ -263,1 +245,1 @@\n-    \/\/ extensions defined in RFC 7366\n+    \/\/ Extensions defined in RFC 7366 (Encrypt-then-MAC for TLS and DTLS)\n@@ -266,1 +248,1 @@\n-    \/\/ extensions defined in RFC 7627\n+    \/\/ Extensions defined in RFC 7627 (TLS Session Hash and Extended Master Secret Extension)\n@@ -286,1 +268,1 @@\n-    \/\/ extensions defined in RFC 8472\n+    \/\/ Extensions defined in RFC 8472 (TLS Extension for Token Binding Protocol Negotiation)\n@@ -289,1 +271,1 @@\n-    \/\/ extensions defined in RFC 7924\n+    \/\/ Extensions defined in RFC 7924 (TLS Cached Information Extension)\n@@ -292,1 +274,1 @@\n-    \/\/ extensions defined in RFC 5077\n+    \/\/ Extensions defined in RFC 5077 (TLS Session Resumption without Server-Side State)\n@@ -314,1 +296,20 @@\n-    \/\/ extensions defined in RFC 8446\n+    \/\/ Extensions defined in RFC 8446 (TLS Protocol Version 1.3)\n+    CH_SIGNATURE_ALGORITHMS (0x000D, \"signature_algorithms\",\n+                                SSLHandshake.CLIENT_HELLO,\n+                                ProtocolVersion.PROTOCOLS_12_13,\n+                                SignatureAlgorithmsExtension.chNetworkProducer,\n+                                SignatureAlgorithmsExtension.chOnLoadConsumer,\n+                                SignatureAlgorithmsExtension.chOnLoadAbsence,\n+                                SignatureAlgorithmsExtension.chOnTradeConsumer,\n+                                SignatureAlgorithmsExtension.chOnTradeAbsence,\n+                                SignatureAlgorithmsExtension.ssStringizer),\n+    CR_SIGNATURE_ALGORITHMS (0x000D, \"signature_algorithms\",\n+                                SSLHandshake.CERTIFICATE_REQUEST,\n+                                ProtocolVersion.PROTOCOLS_OF_13,\n+                                SignatureAlgorithmsExtension.crNetworkProducer,\n+                                SignatureAlgorithmsExtension.crOnLoadConsumer,\n+                                SignatureAlgorithmsExtension.crOnLoadAbsence,\n+                                SignatureAlgorithmsExtension.crOnTradeConsumer,\n+                                null,\n+                                SignatureAlgorithmsExtension.ssStringizer),\n+\n@@ -330,1 +331,0 @@\n-                                        \/\/ and HelloRetryRequest\n@@ -462,1 +462,1 @@\n-    \/\/ Extensions defined in RFC 5746\n+    \/\/ Extensions defined in RFC 5746 (TLS Renegotiation Indication Extension)\n@@ -482,1 +482,1 @@\n-    \/\/ TLS 1.3 (RFC 8446) PSK extension must be last\n+    \/\/ RFC 8446 (TLS Protocol Version 1.3) PSK extension must be last\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLExtension.java","additions":42,"deletions":42,"binary":false,"changes":84,"status":"modified"}]}