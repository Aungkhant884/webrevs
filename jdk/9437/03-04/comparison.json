{"files":[{"patch":"@@ -56,1 +56,1 @@\n- * for the first time;<\/li>\n+ * for the first time (see note below on {@code DestroyJavaVM});<\/li>\n@@ -83,1 +83,1 @@\n- * effect on the shutdown sequence is unspecified.\n+ * behavior of the shutdown sequence is unspecified.\n@@ -85,1 +85,1 @@\n- * <h2><a id=\"termination\">Virtual Machine Termination<\/a><\/h2>\n+ * <h2><a id=\"termination\">Java Virtual Machine Termination<\/a><\/h2>\n@@ -97,1 +97,1 @@\n- * <a href=\"{@docRoot}\/..\/specs\/jni\/invocation.html#destroyjavavm\">DestroyJavaVM<\/a>.\n+ * <a href=\"{@docRoot}\/..\/specs\/jni\/invocation.html#destroyjavavm\">{@code DestroyJavaVM}<\/a>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1886,4 +1886,4 @@\n-     * Initiates the <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> of the Java Virtual\n-     * Machine. This method always blocks indefinitely. The\n-     * argument serves as a status code; by convention, a nonzero status\n-     * code indicates abnormal termination.\n+     * Initiates the <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> of the\n+     * Java Virtual Machine. This method always blocks indefinitely. The argument\n+     * serves as a status code; by convention, a nonzero status code indicates\n+     * abnormal termination.\n@@ -1891,2 +1891,2 @@\n-     * This method calls the {@code exit} method in class\n-     * {@code Runtime}. This method never returns normally.\n+     * This method calls the {@code exit} method in class {@code Runtime}. This\n+     * method never returns normally.\n@@ -1894,2 +1894,1 @@\n-     * The call {@code System.exit(n)} is effectively equivalent to\n-     * the call:\n+     * The call {@code System.exit(n)} is effectively equivalent to the call:\n@@ -1900,5 +1899,5 @@\n-     * @param      status   exit status.\n-     * @throws  SecurityException\n-     *        if a security manager exists and its {@code checkExit}\n-     *        method doesn't allow exit with the specified status.\n-     * @see        java.lang.Runtime#exit(int)\n+     * @param  status exit status.\n+     * @throws SecurityException\n+     *         if a security manager exists and its {@code checkExit} method\n+     *         doesn't allow exit with the specified status.\n+     * @see    java.lang.Runtime#exit(int)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -104,3 +104,1 @@\n- * the shutdown sequence from commencing. Invoking the {@linkplain Runtime#exit(int)}\n- * method will start the shutdown sequence regardless of whether non-daemon threads\n- * are still running.\n+ * the shutdown sequence from beginning.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}