{"files":[{"patch":"@@ -85,4 +85,1 @@\n-     * See doc comments at:\n-     * constructor CertAndKeyGen(String keyType, String sigAlg,\n-     * String providerName, PrivateKey signerPrivateKey,\n-     * X500Name signerSubjectName)\n+     * @see #CertAndKeyGen(String, String, String, PrivateKey, X500Name)\n@@ -130,3 +127,1 @@\n-        if (signerPrivateKey != null) {\n-            this.signerFlag = true;\n-        }\n+        this.signerFlag = signerPrivateKey != null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/CertAndKeyGen.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1932,6 +1932,0 @@\n-            if (signerCert == null) {\n-                MessageFormat form = new MessageFormat\n-                        (rb.getString(\"alias.has.no.public.key.certificate.\"));\n-                Object[] source = {signerCert};\n-                throw new Exception(form.format(source));\n-            }\n@@ -2006,2 +2000,1 @@\n-        X509Certificate[] chain = new X509Certificate[1];\n-        chain[0] = keypair.getSelfCertificate(\n+        X509Certificate newCert = keypair.getSelfCertificate(\n@@ -2017,1 +2010,1 @@\n-                    chain[0].getSigAlgName(),\n+                    newCert.getSigAlgName(),\n@@ -2028,1 +2021,1 @@\n-                    chain[0].getSigAlgName(),\n+                    newCert.getSigAlgName(),\n@@ -2038,0 +2031,1 @@\n+        Certificate[] finalChain;\n@@ -2040,2 +2034,2 @@\n-            Certificate[] finalChain = new X509Certificate[signerChain.length + 1];\n-            System.arraycopy(chain, 0, finalChain, 0, 1);\n+            finalChain = new X509Certificate[signerChain.length + 1];\n+            finalChain[0] = newCert;\n@@ -2043,2 +2037,0 @@\n-            checkWeak(rb.getString(\"the.generated.certificate\"), finalChain);\n-            keyStore.setKeyEntry(alias, privKey, keyPass, finalChain);\n@@ -2046,2 +2038,1 @@\n-            checkWeak(rb.getString(\"the.generated.certificate\"), chain[0]);\n-            keyStore.setKeyEntry(alias, privKey, keyPass, chain);\n+            finalChain = new Certificate[] { newCert };\n@@ -2049,0 +2040,2 @@\n+        checkWeak(rb.getString(\"the.generated.certificate\"), finalChain);\n+        keyStore.setKeyEntry(alias, privKey, keyPass, finalChain);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":9,"deletions":16,"binary":false,"changes":25,"status":"modified"}]}