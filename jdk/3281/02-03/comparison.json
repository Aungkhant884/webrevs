{"files":[{"patch":"@@ -104,2 +104,2 @@\n-     * @param signerPrivateKey signer's private key\n-     * @param signerSubjectName signer's subject name\n+     * @param signerPrivateKey (optional) signer's private key\n+     * @param signerSubjectName (optional) signer's subject name\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/CertAndKeyGen.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1877,1 +1877,0 @@\n-        boolean signerFlag = false;\n@@ -1926,0 +1925,1 @@\n+        KeyIdentifier signerSubjectKeyId = null;\n@@ -1927,2 +1927,0 @@\n-            signerFlag = true;\n-\n@@ -1947,0 +1945,5 @@\n+\n+            signerSubjectKeyId = signerCertImpl.getSubjectKeyId();\n+            if (signerSubjectKeyId == null) {\n+                signerSubjectKeyId = new KeyIdentifier(signerCert.getPublicKey());\n+            }\n@@ -1967,1 +1970,0 @@\n-        PrivateKey privKey = keypair.getPrivateKey();\n@@ -1969,16 +1971,1 @@\n-\n-        if (signerFlag) {\n-            Certificate signerCert = keyStore.getCertificate(signerAlias);\n-\n-            X509CertImpl certImpl;\n-            if (signerCert instanceof X509CertImpl) {\n-                    certImpl = (X509CertImpl) signerCert;\n-            } else {\n-                certImpl = new X509CertImpl(signerCert.getEncoded());\n-            }\n-\n-            KeyIdentifier signerSubjectKeyId = certImpl.getSubjectKeyId();\n-            if (signerSubjectKeyId == null) {\n-                signerSubjectKeyId = new KeyIdentifier(signerCert.getPublicKey());\n-            }\n-\n+        if (signerAlias != null) {\n@@ -2000,0 +1987,1 @@\n+        PrivateKey privKey = keypair.getPrivateKey();\n@@ -2004,1 +1992,1 @@\n-        if (signerFlag) {\n+        if (signerAlias != null) {\n@@ -2006,1 +1994,1 @@\n-                    (\"Generating.keysize.bit.keyAlgName.key.pair.and.a.certificate.sigAlgName.issued.by.an.entry.signerAlias.specified.by.the.signer.option.with.a.validity.of.validality.days.for\"));\n+                    (\"Generating.keysize.bit.keyAlgName.key.pair.and.a.certificate.sigAlgName.issued.by.an.entry.signerAlias.with.a.validity.of.validality.days.for\"));\n@@ -2032,1 +2020,1 @@\n-        if (signerFlag) {\n+        if (signerAlias != null) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":11,"deletions":23,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -309,2 +309,2 @@\n-        {\"Generating.keysize.bit.keyAlgName.key.pair.and.a.certificate.sigAlgName.issued.by.an.entry.signerAlias.specified.by.the.signer.option.with.a.validity.of.validality.days.for\",\n-                \"Generating {0} bit {1} key pair and a certificate ({2}) issued by an entry <{3}> specified by the -signer option with a validity of {4} days\\n\\tfor: {5}\"},\n+        {\"Generating.keysize.bit.keyAlgName.key.pair.and.a.certificate.sigAlgName.issued.by.an.entry.signerAlias.with.a.validity.of.validality.days.for\",\n+                \"Generating {0} bit {1} key pair and a certificate ({2}) issued by an entry <{3}> with a validity of {4} days\\n\\tfor: {5}\"},\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Resources.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-                .shouldContain(\"Generating 255 bit XDH key pair and a certificate (Ed25519) issued by an entry <ca> specified by the -signer option with a validity of 90 days\")\n+                .shouldContain(\"Generating 255 bit XDH key pair and a certificate (Ed25519) issued by an entry <ca> with a validity of 90 days\")\n@@ -160,1 +160,1 @@\n-                .shouldContain(\"Generating 448 bit XDH key pair and a certificate (SHA384withRSA) issued by an entry <ca2> specified by the -signer option with a validity of 90 days\")\n+                .shouldContain(\"Generating 448 bit XDH key pair and a certificate (SHA384withRSA) issued by an entry <ca2> with a validity of 90 days\")\n@@ -199,1 +199,1 @@\n-                .shouldContain(\"Generating 2,048 bit DH key pair and a certificate (SHA256withDSA) issued by an entry <ca3> specified by the -signer option with a validity of 90 days\")\n+                .shouldContain(\"Generating 2,048 bit DH key pair and a certificate (SHA256withDSA) issued by an entry <ca3> with a validity of 90 days\")\n@@ -255,1 +255,1 @@\n-                .shouldContain(\"Generating 1,024 bit DSA key pair and a certificate (SHA256withRSA) issued by an entry <ca> specified by the -signer option with a validity of 90 days\")\n+                .shouldContain(\"Generating 1,024 bit DSA key pair and a certificate (SHA256withRSA) issued by an entry <ca> with a validity of 90 days\")\n@@ -265,1 +265,1 @@\n-                .shouldContain(\"Generating 255 bit XDH key pair and a certificate (SHA256withDSA) issued by an entry <ca1> specified by the -signer option with a validity of 90 days\")\n+                .shouldContain(\"Generating 255 bit XDH key pair and a certificate (SHA256withDSA) issued by an entry <ca1> with a validity of 90 days\")\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/GenKeyPairSigner.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}