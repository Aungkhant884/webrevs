{"files":[{"patch":"@@ -231,1 +231,1 @@\n-        NativeCallStack ncs;\n+        NativeCallStack ncs(NULL, 0); \/\/ empty stack\n","filename":"src\/hotspot\/share\/services\/mallocTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-                    NativeCallStack(0) : NativeCallStack::empty_stack())\n+                    NativeCallStack(0) : NativeCallStack())\n@@ -40,1 +40,1 @@\n-                    NativeCallStack(1) : NativeCallStack::empty_stack())\n+                    NativeCallStack(1) : NativeCallStack())\n","filename":"src\/hotspot\/share\/services\/memTracker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-      NativeCallStack ncs; \/\/ empty stack\n+      NativeCallStack ncs(NULL, 0); \/\/ empty stack\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-const NativeCallStack NativeCallStack::_empty_stack; \/\/ Uses default ctor\n+const NativeCallStack NativeCallStack::_empty_stack (NULL, 0);\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,2 +61,7 @@\n-  \/\/ Default ctor creates an empty stack.\n-  \/\/ (it may make sense to remove this altogether but its used in a few places).\n+\n+  \/\/ JDK-8296437:\n+  \/\/ Default ctor is left intentionally empty to not initialize its stack.\n+  \/\/ This constructor is hot, since it gets used as part of CALLER_PC or CURRENT_PC\n+  \/\/ when NMT is off. Leaving this ctor empty will cause the compiler to optimize\n+  \/\/ it away. That the object remains uninitialized is fine, since it won't be used\n+  \/\/ anyway.\n@@ -64,1 +69,7 @@\n-    memset(_stack, 0, sizeof(_stack));\n+#ifdef ASSERT\n+    for (int i = 0; i < NMT_TrackingStackDepth; i ++) {\n+      \/\/ we zap the object with a pattern in debug builds only\n+      _stack[i] = (address)(LP64_ONLY(0x4E4D54535441434B) \/\/ \"NMTSTACK\"\n+                            NOT_LP64(0x4E4D5453));        \/\/ \"NMTS\"\n+    }\n+#endif\n@@ -68,1 +79,1 @@\n-  NativeCallStack(address* pc, int frameCount);\n+  explicit NativeCallStack(address* pc, int frameCount);\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.hpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"}]}