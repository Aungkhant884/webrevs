{"files":[{"patch":"@@ -220,6 +220,1 @@\n-Mutex* JvmtiManageCapabilities::lock() {\n-  if (Thread::current_or_null() == nullptr) {\n-    return nullptr;  \/\/ Detached thread, can be a call from Agent_OnLoad.\n-  }\n-  return _capabilities_lock;\n-}\n+\n@@ -249,1 +244,1 @@\n-  MutexLocker ml(lock(), Mutex::_no_safepoint_check_flag);\n+  CapabilitiesMutexLocker ml;\n@@ -257,1 +252,1 @@\n-  MutexLocker ml(lock(), Mutex::_no_safepoint_check_flag);\n+  CapabilitiesMutexLocker ml;\n@@ -299,1 +294,1 @@\n-  MutexLocker ml(lock(), Mutex::_no_safepoint_check_flag);\n+  CapabilitiesMutexLocker ml;\n","filename":"src\/hotspot\/share\/prims\/jvmtiManageCapabilities.cpp","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -57,0 +57,9 @@\n+  \/\/ lock, unless called from a detached thread (e.g. can be a call from Agent_OnLoad)\n+  class CapabilitiesMutexLocker: public ConditionalMutexLocker {\n+    public:\n+      CapabilitiesMutexLocker() :\n+        ConditionalMutexLocker(_capabilities_lock,\n+                               Thread::current_or_null() != nullptr,\n+                               Mutex::_no_safepoint_check_flag) {}\n+  };\n+\n@@ -70,3 +79,0 @@\n-  \/\/ returns nullptr in onload phase\n-  static Mutex* lock();\n-\n","filename":"src\/hotspot\/share\/prims\/jvmtiManageCapabilities.hpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -237,1 +237,1 @@\n-     assert(mutex != nullptr, \"null mutex is not allowed\");\n+     assert(mutex != nullptr, \"null mutex not allowed\");\n@@ -242,1 +242,1 @@\n-     assert(mutex != nullptr, \"null mutex is not allowed\");\n+     assert(mutex != nullptr, \"null mutex not allowed\");\n@@ -252,1 +252,1 @@\n-     assert(!condition || mutex != nullptr, \"null mutex is not allowed when locking\");\n+     assert(!condition || mutex != nullptr, \"null mutex not allowed when locking\");\n@@ -257,1 +257,1 @@\n-     assert(!condition || mutex != nullptr, \"null mutex is not allowed when locking\");\n+     assert(!condition || mutex != nullptr, \"null mutex not allowed when locking\");\n@@ -259,1 +259,1 @@\n- };\n+};\n@@ -264,1 +264,1 @@\n-class MonitorLocker: public MutexLocker {\n+class MonitorLocker: public MutexLockerImpl {\n@@ -274,1 +274,4 @@\n-    MutexLocker(monitor, flag), _flag(flag) {}\n+    MutexLockerImpl(monitor, flag), _flag(flag) {\n+    \/\/ Superclass constructor did locking\n+    assert(monitor != nullptr, \"null monitor not allowed\");\n+  }\n@@ -277,1 +280,4 @@\n-    MutexLocker(thread, monitor, flag), _flag(flag) {}\n+    MutexLockerImpl(thread, monitor, flag), _flag(flag) {\n+    \/\/ Superclass constructor did locking\n+    assert(monitor != nullptr, \"null monitor not allowed\");\n+  }\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"}]}