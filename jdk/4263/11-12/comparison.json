{"files":[{"patch":"@@ -33,0 +33,2 @@\n+import java.util.function.BiFunction;\n+import java.util.function.ToLongBiFunction;\n@@ -152,5 +154,2 @@\n-            WritableByteChannel wbc = cos.channel();\n-\n-            if (ch instanceof FileChannel fc) {\n-                return transfer(fc, wbc);\n-            }\n+            return transferInBlockingMode(this.ch, cos.channel());\n+        }\n@@ -158,5 +157,2 @@\n-            if (wbc instanceof FileChannel fc) {\n-                if (ch instanceof SelectableChannel sc) {\n-                    synchronized (sc.blockingLock()) {\n-                        if (!sc.isBlocking())\n-                            throw new IllegalBlockingModeException();\n+        return super.transferTo(out);\n+    }\n@@ -164,3 +160,3 @@\n-                        if (ch instanceof SeekableByteChannel sbc) {\n-                            return transfer(sbc, fc);\n-                        }\n+    private static long transferInBlockingMode(ReadableByteChannel rbc, WritableByteChannel wbc) throws IOException {\n+        return supplyUsingBlockingChannel(rbc, () -> supplyUsingBlockingChannel(wbc, () -> doTransfer(rbc, wbc)));\n+    }\n@@ -168,6 +164,4 @@\n-                        return transfer(ch, fc);\n-                    }\n-                } else {\n-                    if (ch instanceof SeekableByteChannel sbc) {\n-                        return transfer(sbc, fc);\n-                    }\n+    @FunctionalInterface\n+    private static interface ThrowingLongSupplier<E extends Exception> {\n+        long supply() throws E;\n+    }\n@@ -175,1 +169,5 @@\n-                    return transfer(ch, fc);\n+    private static long supplyUsingBlockingChannel(Channel c, ThrowingLongSupplier<IOException> tls) throws IOException {\n+        if (c instanceof SelectableChannel sc) {\n+            synchronized (sc.blockingLock()) {\n+                if (!sc.isBlocking()) {\n+                    throw new IllegalBlockingModeException();\n@@ -177,0 +175,1 @@\n+                return tls.supply();\n@@ -178,0 +177,4 @@\n+        } else {\n+            return tls.supply();\n+        }\n+    }\n@@ -179,1 +182,3 @@\n-            return transfer(ch, wbc);\n+    private static long doTransfer(ReadableByteChannel rbc, WritableByteChannel wbc) throws IOException {\n+        if (rbc instanceof FileChannel fc) {\n+            return transfer(fc, wbc);\n@@ -182,1 +187,9 @@\n-        return super.transferTo(out);\n+        if (wbc instanceof FileChannel fc) {\n+            if (rbc instanceof SeekableByteChannel sbc) {\n+                return transfer(sbc, fc);\n+            }\n+\n+            return transfer(rbc, fc);\n+        }\n+\n+        return transfer(rbc, wbc);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/ChannelInputStream.java","additions":35,"deletions":22,"binary":false,"changes":57,"status":"modified"}]}