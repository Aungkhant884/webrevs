{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import java.nio.file.Files;\n@@ -34,0 +35,1 @@\n+import jdk.jfr.consumer.RecordedEvent;\n@@ -41,1 +43,1 @@\n-    private static final long EVENTS = 150_000;\n+    private static final long EVENTS = 15_000;\n@@ -91,4 +93,15 @@\n-        long testEventCount = RecordingFile.readAllEvents(DUMP_PATH)\n-                .stream()\n-                .filter(e -> e.getEventType().getName().equals(\"Test\"))\n-                .count();\n+        long testEventCount = 0;\n+        try (RecordingFile rf = new RecordingFile(DUMP_PATH)) {\n+            while (rf.hasMoreEvents()) {\n+                RecordedEvent e = rf.readEvent();\n+                switch (e.getEventType().getName()) {\n+                case \"Test\":\n+                    testEventCount++;\n+                    break;\n+                case \"jdk.DataLoss\":\n+                    System.out.println(e);\n+                    break;\n+                }\n+            }\n+        }\n+        System.out.println(\"File size: \" + Files.size(DUMP_PATH));\n","filename":"test\/jdk\/jdk\/jfr\/javaagent\/EventEmitterAgent.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"}]}