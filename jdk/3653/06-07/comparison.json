{"files":[{"patch":"@@ -69,1 +69,1 @@\n-uint G1BatchedGangTask::num_busy_workers() const {\n+uint G1BatchedGangTask::num_workers_estimate() const {\n@@ -72,1 +72,1 @@\n-    sum += task->num_busy_workers();\n+    sum += task->worker_cost();\n@@ -75,1 +75,1 @@\n-    sum += task->num_busy_workers();\n+    sum += task->worker_cost();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BatchedGangTask.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-  virtual double num_busy_workers() const = 0;\n+  virtual double worker_cost() const = 0;\n@@ -139,2 +139,3 @@\n-  \/\/ How many workers can this gang task keep busy and could be started.\n-  uint num_busy_workers() const;\n+  \/\/ How many workers can this gang task keep busy and should be started for\n+  \/\/ \"optimal\" performance.\n+  uint num_workers_estimate() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BatchedGangTask.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-  double num_busy_workers() const override {\n+  double worker_cost() const override {\n@@ -124,2 +124,2 @@\n-  double num_busy_workers() const override {\n-    G1TestSubTask::num_busy_workers();\n+  double worker_cost() const override {\n+    G1TestSubTask::worker_cost();\n@@ -137,2 +137,2 @@\n-  double num_busy_workers() const override {\n-    G1TestSubTask::num_busy_workers();\n+  double worker_cost() const override {\n+    G1TestSubTask::worker_cost();\n@@ -153,1 +153,1 @@\n-  uint tasks = task.num_busy_workers();\n+  uint tasks = task.num_workers_estimate();\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1BatchedGangTask.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}