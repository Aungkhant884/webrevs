{"files":[{"patch":"@@ -705,8 +705,0 @@\n-int CodeCache::alignment_unit() {\n-  return (int)_heaps->first()->alignment_unit();\n-}\n-\n-int CodeCache::alignment_offset() {\n-  return (int)_heaps->first()->alignment_offset();\n-}\n-\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -154,2 +154,0 @@\n-  static int  alignment_unit();                            \/\/ guaranteed alignment of all CodeBlobs\n-  static int  alignment_offset();                          \/\/ guaranteed offset of first CodeBlob byte within alignment unit (i.e., allocation header)\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -491,12 +491,0 @@\n-size_t CodeHeap::alignment_unit() const {\n-  \/\/ this will be a power of two\n-  return _segment_size;\n-}\n-\n-\n-size_t CodeHeap::alignment_offset() const {\n-  \/\/ The lowest address in any allocated block will be\n-  \/\/ equal to alignment_offset (mod alignment_unit).\n-  return sizeof(HeapBlock) & (_segment_size - 1);\n-}\n-\n","filename":"src\/hotspot\/share\/memory\/heap.cpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -177,2 +177,0 @@\n-  size_t alignment_unit()       const;           \/\/ alignment of any block\n-  size_t alignment_offset()     const;           \/\/ offset of first byte of any block, within the enclosing alignment unit\n","filename":"src\/hotspot\/share\/memory\/heap.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}