{"files":[{"patch":"@@ -1104,1 +1104,1 @@\n-  PostCallNopCounter nopCounter(this);\n+  InlineSkippedInstructionsCounter skipCounter(this);\n@@ -1108,1 +1108,1 @@\n-  nopCounter.register_nop();\n+  skipCounter.register_skipped();\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2038,1 +2038,1 @@\n-  PostCallNopCounter nopCounter(this);\n+  InlineSkippedInstructionsCounter skipCounter(this);\n@@ -2044,1 +2044,1 @@\n-  nopCounter.register_nop();\n+  skipCounter.register_skipped();\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -245,1 +245,2 @@\n-  class PostCallNopCounter: public StackObj {\n+  \/\/ count size of instructions which are skipped from inline heuristics\n+  class InlineSkippedInstructionsCounter: public StackObj {\n@@ -248,1 +249,1 @@\n-    address _nop_start;\n+    address _start;\n@@ -250,1 +251,1 @@\n-    PostCallNopCounter(AbstractAssembler* assm) : _assm(assm), _nop_start(assm->pc()) {\n+    InlineSkippedInstructionsCounter(AbstractAssembler* assm) : _assm(assm), _start(assm->pc()) {\n@@ -252,2 +253,2 @@\n-    void register_nop() {\n-      _assm->count_post_call_nop(_assm->pc() - _nop_start);\n+    void register_skipped() {\n+      _assm->register_skipped(_assm->pc() - _start);\n@@ -256,1 +257,1 @@\n-  friend class PostCallNopCounter;\n+  friend class InlineSkippedInstructionsCounter;\n@@ -349,1 +350,1 @@\n-  void   count_post_call_nop(int size) { code_section()->count_post_call_nop(size); }\n+  void   register_skipped(int size) { code_section()->register_skipped(size); }\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -599,1 +599,1 @@\n-int CodeBuffer::total_post_call_nop_size() const {\n+int CodeBuffer::total_skipped_instructions_size() const {\n@@ -604,1 +604,1 @@\n-      total_nop_size += cur_cs->_post_call_nop_size;\n+      total_nop_size += cur_cs->_skipped_instructions_size;\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-  int         _post_call_nop_size;\n+  int         _skipped_instructions_size;\n@@ -118,1 +118,1 @@\n-    _post_call_nop_size = 0;\n+    _skipped_instructions_size = 0;\n@@ -149,1 +149,1 @@\n-    _post_call_nop_size = cs->_post_call_nop_size;\n+    _skipped_instructions_size = cs->_skipped_instructions_size;\n@@ -210,2 +210,2 @@\n-  void count_post_call_nop(int size) {\n-    _post_call_nop_size += size;\n+  void register_skipped(int size) {\n+    _skipped_instructions_size += size;\n@@ -648,1 +648,1 @@\n-  int total_post_call_nop_size() const;\n+  int total_skipped_instructions_size() const;\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1092,1 +1092,1 @@\n-  return instructions_size() > 0;\n+  return inline_instructions_size() > 0;\n@@ -1122,14 +1122,2 @@\n-int ciMethod::instructions_size() {\n-  if (_instructions_size == -1) {\n-    GUARDED_VM_ENTRY(\n-      CompiledMethod* code = get_Method()->code();\n-      if (code != NULL && (code->comp_level() == CompLevel_full_optimization)) {\n-        _instructions_size = code->insts_end() - code->verified_entry_point();\n-      } else {\n-        _instructions_size = 0;\n-      }\n-    );\n-  }\n-  return _instructions_size;\n-}\n-\n+\/\/ Also some instructions inside the code are excluded from inline\n+\/\/ heuristic (e.g. post call nop instructions; see InlineSkippedInstructionsCounter)\n@@ -1141,1 +1129,1 @@\n-        int isize = code->insts_end() - code->verified_entry_point() - code->post_call_nop_size();\n+        int isize = code->insts_end() - code->verified_entry_point() - code->skipped_instructions_size();\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":4,"deletions":16,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-  virtual int post_call_nop_size() const = 0;\n+  virtual int skipped_instructions_size() const = 0;\n","filename":"src\/hotspot\/share\/code\/compiledMethod.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -680,1 +680,1 @@\n-    _post_call_nop_size      = code_buffer->total_post_call_nop_size();\n+    _skipped_instructions_size = code_buffer->total_skipped_instructions_size();\n@@ -817,1 +817,1 @@\n-    _post_call_nop_size      = code_buffer->total_post_call_nop_size();\n+    _skipped_instructions_size      = code_buffer->total_skipped_instructions_size();\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -263,1 +263,1 @@\n-  int _post_call_nop_size;\n+  int _skipped_instructions_size;\n@@ -398,1 +398,2 @@\n-  int     post_call_nop_size    () const          { return           _post_call_nop_size                    ; }\n+\n+  int skipped_instructions_size () const          { return           _skipped_instructions_size             ; }\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}