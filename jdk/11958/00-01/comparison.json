{"files":[{"patch":"@@ -251,1 +251,0 @@\n-      assert(assm->inst_mark() == NULL, \"overlapping instructions\");\n@@ -254,1 +253,1 @@\n-        _assm->count_post_call_nop(_assm->pc() - _nop_start);\n+      _assm->count_post_call_nop(_assm->pc() - _nop_start);\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-      _post_call_nop_size += size;\n+    _post_call_nop_size += size;\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1125,7 +1125,7 @@\n-                     CompiledMethod* code = get_Method()->code();\n-                     if (code != NULL && (code->comp_level() == CompLevel_full_optimization)) {\n-                       _instructions_size = code->insts_end() - code->verified_entry_point();\n-                     } else {\n-                       _instructions_size = 0;\n-                     }\n-                     );\n+      CompiledMethod* code = get_Method()->code();\n+      if (code != NULL && (code->comp_level() == CompLevel_full_optimization)) {\n+        _instructions_size = code->insts_end() - code->verified_entry_point();\n+      } else {\n+        _instructions_size = 0;\n+      }\n+    );\n@@ -1139,8 +1139,8 @@\n-                     CompiledMethod* code = get_Method()->code();\n-                     if (code != NULL && (code->comp_level() == CompLevel_full_optimization)) {\n-                       int isize = code->insts_end() - code->verified_entry_point() - code->post_call_nop_size();\n-                       _inline_instructions_size = isize > 0 ? isize : 0;\n-                     } else {\n-                       _inline_instructions_size = 0;\n-                     }\n-                     );\n+      CompiledMethod* code = get_Method()->code();\n+      if (code != NULL && (code->comp_level() == CompLevel_full_optimization)) {\n+        int isize = code->insts_end() - code->verified_entry_point() - code->post_call_nop_size();\n+        _inline_instructions_size = isize > 0 ? isize : 0;\n+      } else {\n+        _inline_instructions_size = 0;\n+      }\n+    );\n","filename":"src\/hotspot\/share\/ci\/ciMethod.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"}]}