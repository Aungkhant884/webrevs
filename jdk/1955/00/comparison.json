{"files":[{"patch":"@@ -268,2 +268,1 @@\n-                byte[] finished = prfKey.getEncoded();\n-                return finished;\n+                return prfKey.getEncoded();\n@@ -320,2 +319,1 @@\n-                byte[] finished = prfKey.getEncoded();\n-                return finished;\n+                return prfKey.getEncoded();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/Finished.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -477,2 +477,1 @@\n-        int position = headerSize;\n-        int contentLen = count - position;\n+        int contentLen = count - headerSize;\n@@ -498,1 +497,1 @@\n-        ByteBuffer destination = ByteBuffer.wrap(buf, position, contentLen);\n+        ByteBuffer destination = ByteBuffer.wrap(buf, headerSize, contentLen);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/OutputRecord.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -677,2 +677,1 @@\n-            String encoded = hexEncoder.encode(byteBuffer.duplicate());\n-            extData = encoded;\n+            extData = hexEncoder.encode(byteBuffer.duplicate());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLExtension.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,2 +66,1 @@\n-            int position = headerSize + writeCipher.getExplicitNonceSize();\n-            count = position;\n+            count = headerSize + writeCipher.getExplicitNonceSize();\n@@ -224,2 +223,1 @@\n-            int position = headerSize + writeCipher.getExplicitNonceSize();\n-            count = position;\n+            count = headerSize + writeCipher.getExplicitNonceSize();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketOutputRecord.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.util.Collections;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ServerNameExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-import java.util.LinkedList;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SignatureAlgorithmsExtension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}