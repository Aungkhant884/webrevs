{"files":[{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) Ampere Computing and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * @test TestParallelAlwaysPreTouch\n- * @bug 8315923\n- * @requires vm.gc.Parallel & os.family == \"linux\" & os.maxMemory > 30G\n- * @summary Check if parallel pretouch performs normally with and without THP.\n- * @comment The test is not ParallelGC-specific, but a multi-threaded GC is\n- *          required. So ParallelGC is used here.\n- *\n- * @run main\/othervm -XX:-UseTransparentHugePages\n- *                   -XX:+UseParallelGC -XX:ParallelGCThreads=${os.processors}\n- *                   -Xlog:startuptime,pagesize,gc+heap=debug\n- *                   -Xms24G -Xmx24G -XX:+AlwaysPreTouch\n- *                   gc.parallel.TestParallelAlwaysPreTouch\n- *\n- * @run main\/othervm -XX:+UseTransparentHugePages\n- *                   -XX:+UseParallelGC -XX:ParallelGCThreads=${os.processors}\n- *                   -Xlog:startuptime,pagesize,gc+heap=debug\n- *                   -Xms24G -Xmx24G -XX:+AlwaysPreTouch\n- *                   gc.parallel.TestParallelAlwaysPreTouch\n- *\/\n-\n-package gc.parallel;\n-\n-public class TestParallelAlwaysPreTouch {\n-  public static void main(String[] args) throws Exception {\n-    \/\/ everything should happen before entry point\n-  }\n-}\n","filename":"test\/hotspot\/jtreg\/gc\/parallel\/TestParallelAlwaysPreTouch.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) Ampere Computing and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test TestTransparentHugePageUsage\n+ * @bug 8315923\n+ * @requires vm.gc.Parallel & os.family == \"linux\" & os.maxMemory > 30G\n+ * @summary Check if the usage of THP is zero when enabled.\n+ * @comment The test is not ParallelGC-specific, but a multi-threaded GC is\n+ *          required. So ParallelGC is used here.\n+ *\n+ * @run main\/othervm -XX:+UseTransparentHugePages\n+ *                   -XX:+UseParallelGC -XX:ParallelGCThreads=${os.processors}\n+ *                   -Xlog:startuptime,pagesize,gc+heap=debug\n+ *                   -Xms24G -Xmx24G -XX:+AlwaysPreTouch\n+ *                   runtime.os.TestTransparentHugePageUsage\n+ *\/\n+\n+package runtime.os;\n+\n+import com.sun.management.HotSpotDiagnosticMXBean;\n+import java.io.BufferedReader;\n+import java.io.FileReader;\n+import java.lang.management.ManagementFactory;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+public class TestTransparentHugePageUsage {\n+  public static void main(String[] args) throws Exception {\n+    HotSpotDiagnosticMXBean mxBean = ManagementFactory.getPlatformMXBean(HotSpotDiagnosticMXBean.class);\n+    \/\/ Ensure THP is not disabled by OS.\n+    if (mxBean.getVMOption(\"UseTransparentHugePages\").getValue() == \"true\") {\n+      BufferedReader reader = new BufferedReader(new FileReader(\"\/proc\/self\/smaps\"));\n+      \/\/ Match the start of a mapping, for example:\n+      \/\/ 200000000-800000000 rw-p 00000000 00:00 0\n+      Pattern mapping = Pattern.compile(\"^\\\\p{XDigit}+-\\\\p{XDigit}+.*\");\n+      String line = null;\n+      while ((line = reader.readLine()) != null) {\n+        if (mapping.matcher(line).matches()) {\n+          \/\/ Read the size. It is given right after the start of the mapping.\n+          Pattern size = Pattern.compile(\"^Size:\\\\s+(\\\\d+)\\\\skB\");\n+          if ((line = reader.readLine()) != null) {\n+            Matcher matcher = size.matcher(line);\n+            if (matcher.matches() &&\n+                Integer.valueOf(line.substring(matcher.start(1), matcher.end(1))) >= 24 * 1024 * 1024) {\n+              Pattern thpUsage = Pattern.compile(\"^AnonHugePages:\\\\s+(\\\\d+)\\\\skB\");\n+              while ((line = reader.readLine()) != null) {\n+                matcher = thpUsage.matcher(line);\n+                if (matcher.matches()) {\n+                  if (Integer.valueOf(line.substring(matcher.start(1), matcher.end(1))) == 0) {\n+                    \/\/ Trigger failure when the usage is 0. This does not cover\n+                    \/\/ all cases considered to be failures, but we can just say\n+                    \/\/ the non-usage of THP failes for sure.\n+                    System.exit(1);\n+                  }\n+                  System.exit(0);\n+                }\n+              }\n+            }\n+          }\n+        }\n+      }\n+    }\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTransparentHugePageUsage.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"}]}