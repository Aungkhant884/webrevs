{"files":[{"patch":"@@ -27,1 +27,1 @@\n- * @requires vm.gc.Parallel & os.family == \"linux\" & os.maxMemory > 30G\n+ * @requires vm.gc.Parallel & os.family == \"linux\" & os.maxMemory > 2G\n@@ -35,1 +35,1 @@\n- *                   -Xms24G -Xmx24G -XX:+AlwaysPreTouch\n+ *                   -Xms1G -Xmx1G -XX:+AlwaysPreTouch\n@@ -49,0 +49,28 @@\n+  private static boolean foundHeapFrom(BufferedReader reader) throws Exception {\n+    String line = null;\n+    \/\/ Read the size. It is given right after the start of the mapping.\n+    Pattern size = Pattern.compile(\"^Size:\\\\s+(\\\\d+)\\\\skB\");\n+    if ((line = reader.readLine()) != null) {\n+      Matcher matcher = size.matcher(line);\n+      \/\/ Found the heap based on its size.\n+      if (matcher.matches() &&\n+          Integer.valueOf(line.substring(matcher.start(1), matcher.end(1))) >= 1 * 1024 * 1024) {\n+        Pattern thpUsage = Pattern.compile(\"^AnonHugePages:\\\\s+(\\\\d+)\\\\skB\");\n+        while ((line = reader.readLine()) != null) {\n+          matcher = thpUsage.matcher(line);\n+          if (matcher.matches()) {\n+            if (Integer.valueOf(line.substring(matcher.start(1), matcher.end(1))) == 0) {\n+              \/\/ Trigger failure when the usage is 0. This does not cover\n+              \/\/ all cases considered to be failures, but we can just say\n+              \/\/ the non-usage of THP failes for sure.\n+              throw new RuntimeException(\"The usage of THP should not be zero.\");\n+            }\n+            break;\n+          }\n+        }\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n@@ -60,21 +88,1 @@\n-          \/\/ Read the size. It is given right after the start of the mapping.\n-          Pattern size = Pattern.compile(\"^Size:\\\\s+(\\\\d+)\\\\skB\");\n-          if ((line = reader.readLine()) != null) {\n-            Matcher matcher = size.matcher(line);\n-            if (matcher.matches() &&\n-                Integer.valueOf(line.substring(matcher.start(1), matcher.end(1))) >= 24 * 1024 * 1024) {\n-              Pattern thpUsage = Pattern.compile(\"^AnonHugePages:\\\\s+(\\\\d+)\\\\skB\");\n-              while ((line = reader.readLine()) != null) {\n-                matcher = thpUsage.matcher(line);\n-                if (matcher.matches()) {\n-                  if (Integer.valueOf(line.substring(matcher.start(1), matcher.end(1))) == 0) {\n-                    \/\/ Trigger a failure when the usage is 0. This does not\n-                    \/\/ cover all cases considered to be failures, but we can\n-                    \/\/ just say the non-usage of THP failes for sure.\n-                    System.exit(1);\n-                  }\n-                  System.exit(0);\n-                }\n-              }\n-            }\n-          }\n+          if (foundHeapFrom(reader)) break;\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTransparentHugePageUsage.java","additions":31,"deletions":23,"binary":false,"changes":54,"status":"modified"}]}