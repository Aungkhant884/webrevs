{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1109,1 +1109,1 @@\n-  bool has_Threads_lock = false;\n+  bool needs_unlock = false;\n@@ -1114,1 +1114,1 @@\n-    has_Threads_lock = true;\n+    needs_unlock = true;\n@@ -1130,1 +1130,1 @@\n-    if (has_Threads_lock) {\n+    if (Threads_lock->owned_by_self()) {\n@@ -1148,10 +1148,17 @@\n-  if (!EnableThreadSMRStatistics) {\n-    if (has_Threads_lock) {\n-      Threads_lock->unlock();\n-    } else {\n-      if (_java_thread_list != saved_threads_list) {\n-        st->print_cr(\"The _java_thread_list has changed from \" INTPTR_FORMAT\n-                     \" to \" INTPTR_FORMAT\n-                     \" so some of the above information may be stale.\",\n-                     p2i(saved_threads_list), p2i(_java_thread_list));\n-      }\n+  if (EnableThreadSMRStatistics) {\n+    st->print_cr(\"_java_thread_list_alloc_cnt=\" UINT64_FORMAT \", \"\n+                 \"_java_thread_list_free_cnt=\" UINT64_FORMAT \", \"\n+                 \"_java_thread_list_max=%u, \"\n+                 \"_nested_thread_list_max=%u\",\n+                 _java_thread_list_alloc_cnt,\n+                 _java_thread_list_free_cnt,\n+                 _java_thread_list_max,\n+                 _nested_thread_list_max);\n+    if (_tlh_cnt > 0) {\n+      st->print_cr(\"_tlh_cnt=%u\"\n+                   \", _tlh_times=%u\"\n+                   \", avg_tlh_time=%0.2f\"\n+                   \", _tlh_time_max=%u\",\n+                   _tlh_cnt, _tlh_times,\n+                   ((double) _tlh_times \/ _tlh_cnt),\n+                   _tlh_time_max);\n@@ -1159,27 +1166,13 @@\n-    return;\n-  }\n-  st->print_cr(\"_java_thread_list_alloc_cnt=\" UINT64_FORMAT \", \"\n-               \"_java_thread_list_free_cnt=\" UINT64_FORMAT \", \"\n-               \"_java_thread_list_max=%u, \"\n-               \"_nested_thread_list_max=%u\",\n-               _java_thread_list_alloc_cnt,\n-               _java_thread_list_free_cnt,\n-               _java_thread_list_max,\n-               _nested_thread_list_max);\n-  if (_tlh_cnt > 0) {\n-    st->print_cr(\"_tlh_cnt=%u\"\n-                 \", _tlh_times=%u\"\n-                 \", avg_tlh_time=%0.2f\"\n-                 \", _tlh_time_max=%u\",\n-                 _tlh_cnt, _tlh_times,\n-                 ((double) _tlh_times \/ _tlh_cnt),\n-                 _tlh_time_max);\n-  }\n-  if (_deleted_thread_cnt > 0) {\n-    st->print_cr(\"_deleted_thread_cnt=%u\"\n-                 \", _deleted_thread_times=%u\"\n-                 \", avg_deleted_thread_time=%0.2f\"\n-                 \", _deleted_thread_time_max=%u\",\n-                 _deleted_thread_cnt, _deleted_thread_times,\n-                 ((double) _deleted_thread_times \/ _deleted_thread_cnt),\n-                 _deleted_thread_time_max);\n+    if (_deleted_thread_cnt > 0) {\n+      st->print_cr(\"_deleted_thread_cnt=%u\"\n+                   \", _deleted_thread_times=%u\"\n+                   \", avg_deleted_thread_time=%0.2f\"\n+                   \", _deleted_thread_time_max=%u\",\n+                   _deleted_thread_cnt, _deleted_thread_times,\n+                   ((double) _deleted_thread_times \/ _deleted_thread_cnt),\n+                   _deleted_thread_time_max);\n+    }\n+    st->print_cr(\"_delete_lock_wait_cnt=%u, _delete_lock_wait_max=%u\",\n+                 _delete_lock_wait_cnt, _delete_lock_wait_max);\n+    st->print_cr(\"_to_delete_list_cnt=%u, _to_delete_list_max=%u\",\n+                 _to_delete_list_cnt, _to_delete_list_max);\n@@ -1187,5 +1180,1 @@\n-  st->print_cr(\"_delete_lock_wait_cnt=%u, _delete_lock_wait_max=%u\",\n-               _delete_lock_wait_cnt, _delete_lock_wait_max);\n-  st->print_cr(\"_to_delete_list_cnt=%u, _to_delete_list_max=%u\",\n-               _to_delete_list_cnt, _to_delete_list_max);\n-  if (has_Threads_lock) {\n+  if (needs_unlock) {\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.cpp","additions":35,"deletions":46,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/NestedThreadsListHandleInErrorHandlingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/ErrorHandling\/ThreadsListHandleInErrorHandlingTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}