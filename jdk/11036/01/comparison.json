{"files":[{"patch":"@@ -1693,3 +1693,5 @@\n-void C2_MacroAssembler::reduce_operation(Register dst, VectorRegister tmp,\n-                                         Register src1, VectorRegister src2,\n-                                         BasicType bt, REDUCTION_OP op) {\n+void C2_MacroAssembler::rvv_reduce_integral(Register dst, VectorRegister tmp,\n+                                            Register src1, VectorRegister src2,\n+                                            BasicType bt, int opc) {\n+  assert(bt == T_BYTE || bt == T_SHORT || bt == T_INT || bt == T_LONG, \"unsupported element type\");\n+\n@@ -1701,2 +1703,3 @@\n-  switch (op) {\n-    case REDUCTION_OP::ADD:\n+  switch (opc) {\n+    case Op_AddReductionVI:\n+    case Op_AddReductionVL:\n@@ -1705,1 +1708,1 @@\n-    case REDUCTION_OP::AND:\n+    case Op_AndReductionV:\n@@ -1708,1 +1711,1 @@\n-    case REDUCTION_OP::OR:\n+    case Op_OrReductionV:\n@@ -1711,1 +1714,1 @@\n-    case REDUCTION_OP::XOR:\n+    case Op_XorReductionV:\n@@ -1714,0 +1717,6 @@\n+    case Op_MaxReductionV:\n+      vredmax_vs(tmp, src2, tmp);\n+      break;\n+    case Op_MinReductionV:\n+      vredmin_vs(tmp, src2, tmp);\n+      break;\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -198,3 +198,3 @@\n- void reduce_operation(Register dst, VectorRegister tmp,\n-                       Register src1, VectorRegister src2,\n-                       BasicType bt, REDUCTION_OP op);\n+ void rvv_reduce_integral(Register dst, VectorRegister tmp,\n+                          Register src1, VectorRegister src2,\n+                          BasicType bt, int opc);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1303,3 +1303,0 @@\n-\/\/ reduction related operations\n-enum REDUCTION_OP {ADD, AND, OR, XOR};\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -812,1 +812,3 @@\n-  predicate(Matcher::vector_element_basic_type(n->in(2)) != T_LONG);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE || \n+            Matcher::vector_element_basic_type(n->in(2)) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n->in(2)) == T_INT);\n@@ -821,2 +823,2 @@\n-    __ reduce_operation($dst$$Register, as_VectorRegister($tmp$$reg),\n-                        $src1$$Register, as_VectorRegister($src2$$reg), bt, REDUCTION_OP::AND);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -837,2 +839,2 @@\n-    __ reduce_operation($dst$$Register, as_VectorRegister($tmp$$reg),\n-                        $src1$$Register, as_VectorRegister($src2$$reg), bt, REDUCTION_OP::AND);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -846,1 +848,3 @@\n-  predicate(Matcher::vector_element_basic_type(n->in(2)) != T_LONG);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE || \n+            Matcher::vector_element_basic_type(n->in(2)) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n->in(2)) == T_INT);\n@@ -855,2 +859,2 @@\n-    __ reduce_operation($dst$$Register, as_VectorRegister($tmp$$reg),\n-                        $src1$$Register, as_VectorRegister($src2$$reg), bt, REDUCTION_OP::OR);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -871,2 +875,2 @@\n-    __ reduce_operation($dst$$Register, as_VectorRegister($tmp$$reg),\n-                        $src1$$Register, as_VectorRegister($src2$$reg), bt, REDUCTION_OP::OR);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -880,1 +884,3 @@\n-  predicate(Matcher::vector_element_basic_type(n->in(2)) != T_LONG);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE || \n+            Matcher::vector_element_basic_type(n->in(2)) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n->in(2)) == T_INT);\n@@ -889,2 +895,2 @@\n-    __ reduce_operation($dst$$Register, as_VectorRegister($tmp$$reg),\n-                        $src1$$Register, as_VectorRegister($src2$$reg), bt, REDUCTION_OP::XOR);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -905,2 +911,2 @@\n-    __ reduce_operation($dst$$Register, as_VectorRegister($tmp$$reg),\n-                        $src1$$Register, as_VectorRegister($src2$$reg), bt, REDUCTION_OP::XOR);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -913,36 +919,0 @@\n-instruct reduce_addB(iRegINoSp dst, iRegIorL2I src1, vReg src2, vReg tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE);\n-  match(Set dst (AddReductionVI src1 src2));\n-  effect(TEMP tmp);\n-  ins_cost(VEC_COST);\n-  format %{ \"vmv.s.x $tmp, $src1\\t#@reduce_addB\\n\\t\"\n-            \"vredsum.vs $tmp, $src2, $tmp\\n\\t\"\n-            \"vmv.x.s  $dst, $tmp\" %}\n-  ins_encode %{\n-    __ vsetvli(t0, x0, Assembler::e8);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredsum_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg),\n-                  as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n-instruct reduce_addS(iRegINoSp dst, iRegIorL2I src1, vReg src2, vReg tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT);\n-  match(Set dst (AddReductionVI src1 src2));\n-  effect(TEMP tmp);\n-  ins_cost(VEC_COST);\n-  format %{ \"vmv.s.x $tmp, $src1\\t#@reduce_addS\\n\\t\"\n-            \"vredsum.vs $tmp, $src2, $tmp\\n\\t\"\n-            \"vmv.x.s  $dst, $tmp\" %}\n-  ins_encode %{\n-    __ vsetvli(t0, x0, Assembler::e16);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredsum_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg),\n-                  as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n@@ -950,1 +920,3 @@\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE || \n+            Matcher::vector_element_basic_type(n->in(2)) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n->in(2)) == T_INT);\n@@ -956,1 +928,1 @@\n-            \"vmv.x.s  $dst, $tmp\" %}\n+            \"vmv.x.s $dst, $tmp\" %}\n@@ -958,5 +930,3 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredsum_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg),\n-                  as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -968,1 +938,1 @@\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_LONG);\n@@ -974,1 +944,1 @@\n-            \"vmv.x.s  $dst, $tmp\" %}\n+            \"vmv.x.s $dst, $tmp\" %}\n@@ -976,5 +946,3 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredsum_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg),\n-                  as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -1020,35 +988,0 @@\n-instruct vreduce_maxB(iRegINoSp dst, iRegI src1, vReg src2, vReg tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE);\n-  match(Set dst (MaxReductionV src1 src2));\n-  ins_cost(VEC_COST);\n-  effect(TEMP tmp);\n-  format %{ \"vreduce_maxB $dst, $src1, $src2, $tmp\" %}\n-  ins_encode %{\n-    __ vsetvli(t0, x0, Assembler::e8);\n-    __ vredmax_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($src2$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n-    Label Ldone;\n-    __ ble(as_Register($src1$$reg), as_Register($dst$$reg), Ldone);\n-    __ mv(as_Register($dst$$reg), as_Register($src1$$reg));\n-    __ bind(Ldone);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n-instruct vreduce_maxS(iRegINoSp dst, iRegI src1, vReg src2, vReg tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT);\n-  match(Set dst (MaxReductionV src1 src2));\n-  ins_cost(VEC_COST);\n-  effect(TEMP tmp);\n-  format %{ \"vreduce_maxS $dst, $src1, $src2, $tmp\" %}\n-  ins_encode %{\n-    __ vsetvli(t0, x0, Assembler::e16);\n-    __ vredmax_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($src2$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n-    Label Ldone;\n-    __ ble(as_Register($src1$$reg), as_Register($dst$$reg), Ldone);\n-    __ mv(as_Register($dst$$reg), as_Register($src1$$reg));\n-    __ bind(Ldone);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n@@ -1057,1 +990,3 @@\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE || \n+            Matcher::vector_element_basic_type(n->in(2)) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n->in(2)) == T_INT);\n@@ -1063,4 +998,3 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredmax_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -1072,1 +1006,1 @@\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_LONG);\n@@ -1078,4 +1012,3 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredmax_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -1087,35 +1020,0 @@\n-instruct vreduce_minB(iRegINoSp dst, iRegI src1, vReg src2, vReg tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_BYTE);\n-  match(Set dst (MinReductionV src1 src2));\n-  ins_cost(VEC_COST);\n-  effect(TEMP tmp);\n-  format %{ \"vreduce_minB $dst, $src1, $src2, $tmp\" %}\n-  ins_encode %{\n-    __ vsetvli(t0, x0, Assembler::e8);\n-    __ vredmin_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($src2$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n-    Label Ldone;\n-    __ bge(as_Register($src1$$reg), as_Register($dst$$reg), Ldone);\n-    __ mv(as_Register($dst$$reg), as_Register($src1$$reg));\n-    __ bind(Ldone);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n-\n-instruct vreduce_minS(iRegINoSp dst, iRegI src1, vReg src2, vReg tmp) %{\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_SHORT);\n-  match(Set dst (MinReductionV src1 src2));\n-  ins_cost(VEC_COST);\n-  effect(TEMP tmp);\n-  format %{ \"vreduce_minS $dst, $src1, $src2, $tmp\" %}\n-  ins_encode %{\n-    __ vsetvli(t0, x0, Assembler::e16);\n-    __ vredmin_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($src2$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n-    Label Ldone;\n-    __ bge(as_Register($src1$$reg), as_Register($dst$$reg), Ldone);\n-    __ mv(as_Register($dst$$reg), as_Register($src1$$reg));\n-    __ bind(Ldone);\n-  %}\n-  ins_pipe(pipe_slow);\n-%}\n@@ -1124,1 +1022,3 @@\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_INT);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_BYTE || \n+            Matcher::vector_element_basic_type(n->in(2)) == T_SHORT ||\n+            Matcher::vector_element_basic_type(n->in(2)) == T_INT);\n@@ -1130,4 +1030,3 @@\n-    __ vsetvli(t0, x0, Assembler::e32);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredmin_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n@@ -1139,1 +1038,1 @@\n-  predicate(n->in(2)->bottom_type()->is_vect()->element_basic_type() == T_LONG);\n+  predicate(Matcher::vector_element_basic_type(n->in(2)) == T_LONG);\n@@ -1145,4 +1044,3 @@\n-    __ vsetvli(t0, x0, Assembler::e64);\n-    __ vmv_s_x(as_VectorRegister($tmp$$reg), $src1$$Register);\n-    __ vredmin_vs(as_VectorRegister($tmp$$reg), as_VectorRegister($src2$$reg), as_VectorRegister($tmp$$reg));\n-    __ vmv_x_s($dst$$Register, as_VectorRegister($tmp$$reg));\n+    BasicType bt = Matcher::vector_element_basic_type(this, $src2);\n+    __ rvv_reduce_integral($dst$$Register, as_VectorRegister($tmp$$reg),\n+                           $src1$$Register, as_VectorRegister($src2$$reg), bt, this->ideal_Opcode());\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":53,"deletions":155,"binary":false,"changes":208,"status":"modified"}]}