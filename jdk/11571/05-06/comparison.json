{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,0 +146,3 @@\n+    \/**\n+     * Used within border classes to add specific border implementation details.\n+     *\/\n@@ -149,1 +152,2 @@\n-                                 int w, int h, double scaleFactor);\n+                                 int w, int h,\n+                                 double scaleFactor);\n@@ -152,2 +156,8 @@\n-    public static void paintBorder(Component c, Graphics g, int x, int y,\n-                                   int w, int h, UnscaledBorderPainter painter) {\n+    \/**\n+     * Performs common scaling transformation steps required for rendering\n+     * the border correctly at different scales.\n+     *\/\n+    public static void paintBorder(Component c, Graphics g,\n+                                   int x, int y,\n+                                   int w, int h,\n+                                   UnscaledBorderPainter painter) {\n@@ -172,2 +182,2 @@\n-            \/\/ if m01 or m10 is non-zero, then there is a rotation or shear\n-            \/\/ or if scale=1, skip resetting the transform\n+            \/\/ if m01 or m10 is non-zero, then there is a rotation or shear,\n+            \/\/ or if scale=1, skip resetting the transform in these cases.\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/SwingUtilities3.java","additions":16,"deletions":6,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -153,1 +153,4 @@\n-        SwingUtilities3.paintBorder(c, g, x, y, width, height, this::paintUnscaledBorder);\n+        SwingUtilities3.paintBorder(c, g,\n+                                    x, y,\n+                                    width, height,\n+                                    this::paintUnscaledBorder);\n@@ -157,1 +160,2 @@\n-                                     int w, int h, double scaleFactor) {\n+                                     int w, int h,\n+                                     double scaleFactor) {\n@@ -160,2 +164,1 @@\n-            Graphics2D g2d = (Graphics2D) g;\n-            g2d.setStroke(new BasicStroke((float) stkWidth));\n+            ((Graphics2D) g).setStroke(new BasicStroke((float) stkWidth));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/EtchedBorder.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -146,1 +146,4 @@\n-        SwingUtilities3.paintBorder(c, g, x, y, width, height, this::paintUnscaledBorder);\n+        SwingUtilities3.paintBorder(c, g,\n+                                    x, y,\n+                                    width, height,\n+                                    this::paintUnscaledBorder);\n@@ -150,1 +153,2 @@\n-                                     int w, int h, double scaleFactor) {\n+                                     int w, int h,\n+                                     double scaleFactor) {\n@@ -153,1 +157,1 @@\n-            int offs = this.thickness * (int) scaleFactor;\n+\n@@ -159,0 +163,2 @@\n+\n+            int offs = this.thickness * (int) scaleFactor;\n@@ -173,1 +179,2 @@\n-            g.setColor(oldColor);\n+\n+            g2d.setColor(oldColor);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/LineBorder.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,1 +252,3 @@\n-            SwingUtilities3.paintBorder(c, g, x, y, w, h, this::paintUnscaledBorder);\n+            SwingUtilities3.paintBorder(c, g,\n+                                        x, y, w, h,\n+                                        this::paintUnscaledBorder);\n@@ -256,1 +258,2 @@\n-                                         int width, int height, double scaleFactor) {\n+                                         int width, int height,\n+                                         double scaleFactor) {\n@@ -292,2 +295,1 @@\n-                    Graphics2D g2d = (Graphics2D) g;\n-                    g2d.setStroke(new BasicStroke((float) stkWidth));\n+                    ((Graphics2D) g).setStroke(new BasicStroke((float) stkWidth));\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}