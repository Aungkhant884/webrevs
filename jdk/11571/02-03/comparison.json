{"files":[{"patch":"@@ -28,3 +28,1 @@\n-import sun.awt.AppContext;\n-import sun.awt.SunToolkit;\n-\n+import java.applet.Applet;\n@@ -32,0 +30,2 @@\n+import java.awt.Component;\n+import java.awt.Container;\n@@ -35,0 +35,1 @@\n+import java.awt.Window;\n@@ -39,4 +40,1 @@\n-import java.applet.Applet;\n-import java.awt.Component;\n-import java.awt.Container;\n-import java.awt.Window;\n+\n@@ -47,0 +45,4 @@\n+import sun.awt.AppContext;\n+import sun.awt.SunToolkit;\n+\n+\n@@ -148,1 +150,1 @@\n-    public interface PaintInterface {\n+    public interface UnscaledBorderPainter {\n@@ -150,1 +152,1 @@\n-                                 int w, int h, double scale, int strokeWidth);\n+                                 int w, int h, double scaleFactor, int strokeWidth);\n@@ -154,1 +156,1 @@\n-                            int w, int h, PaintInterface paintFunction) {\n+                            int w, int h, UnscaledBorderPainter painter) {\n@@ -156,2 +158,1 @@\n-        \/\/STEP 1: RESET TRANSFORM\n-        \/\/save old values\n+        \/\/ Step 1: Reset Transform\n@@ -161,1 +162,1 @@\n-        int stkWidth = 1;\n+        int strokeWidth = 1;\n@@ -164,1 +165,7 @@\n-        if (g instanceof Graphics2D g2d) {\n+        int xtranslation = x;\n+        int ytranslation = y;\n+        int width = w;\n+        int height = h;\n+\n+        if (g instanceof Graphics2D) {\n+            Graphics2D g2d = (Graphics2D) g;\n@@ -169,5 +176,4 @@\n-            \/* Deactivate the HiDPI scaling transform,\n-             * so we can do paint operations in the device\n-             * pixel coordinate system instead of the logical coordinate system.\n-             *\/\n-            resetTransform = ((at.getShearX() == 0) && (at.getShearY() == 0));\n+            \/\/ if m01 or m10 is non-zero, then there is a rotation or shear\n+            \/\/ or if scale=1, skip resetting the transform\n+            resetTransform = ((at.getShearX() == 0) && (at.getShearY() == 0)) &&\n+                    ((at.getScaleX() > 1) || (at.getScaleY() > 1));\n@@ -176,0 +182,4 @@\n+                \/* Deactivate the HiDPI scaling transform,\n+                 * so we can do paint operations in the device\n+                 * pixel coordinate system instead of the logical coordinate system.\n+                 *\/\n@@ -177,1 +187,1 @@\n-                stkWidth = c instanceof JInternalFrame ?\n+                strokeWidth = (c instanceof JInternalFrame) ?\n@@ -179,1 +189,8 @@\n-                g2d.setStroke(new BasicStroke((float) stkWidth));\n+                g2d.setStroke(new BasicStroke((float) strokeWidth));\n+\n+                double xx = at.getScaleX() * x + at.getTranslateX();\n+                double yy = at.getScaleY() * y + at.getTranslateY();\n+                xtranslation = clipRound(xx);\n+                ytranslation = clipRound(yy);\n+                width = clipRound(at.getScaleX() * w + xx) - xtranslation;\n+                height = clipRound(at.getScaleY() * h + yy) - ytranslation;\n@@ -183,18 +200,0 @@\n-        int xtranslation = 0;\n-        int ytranslation = 0;\n-        int width = 0;\n-        int height = 0;\n-\n-        if (resetTransform) {\n-            double xx = at.getScaleX() * x + at.getTranslateX();\n-            double yy = at.getScaleY() * y + at.getTranslateY();\n-            xtranslation = clipRound(xx);\n-            ytranslation = clipRound(yy);\n-            width = clipRound(at.getScaleX() * w + xx) - xtranslation;\n-            height = clipRound(at.getScaleY() * h + yy) - ytranslation;\n-        } else {\n-            xtranslation = x;\n-            ytranslation = y;\n-            width = w;\n-            height = h;\n-        }\n@@ -203,2 +202,2 @@\n-        \/\/STEP 2: Call respective paintBorder with transformed values\n-        paintFunction.paintUnscaledBorder(c, g, x, y, width, height, scaleFactor, stkWidth);\n+        \/\/ Step 2: Call respective paintBorder with transformed values\n+        painter.paintUnscaledBorder(c, g, x, y, width, height, scaleFactor, strokeWidth);\n@@ -206,1 +205,1 @@\n-        \/\/STEP 3: RESTORE TRANSFORM\n+        \/\/ Step 3: Restore Transform\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/SwingUtilities3.java","additions":41,"deletions":42,"binary":false,"changes":83,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-                                    int w, int h, double scale, int stroke) {\n+                                    int width, int height, double scaleFactor, int stkWidth) {\n@@ -159,1 +159,1 @@\n-                          w, h, stroke);\n+                          width, height, stkWidth);\n@@ -162,1 +162,1 @@\n-                             w, h, stroke);\n+                             width, height, stkWidth);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/EtchedBorder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -150,3 +150,4 @@\n-                                     int w, int h, double scale, int stroke) {\n-        if (this.thickness > 0) {\n-            int offs = this.thickness * (int) scale;\n+                                     int width, int height, double scaleFactor, int strokeWidth) {\n+        if ((this.thickness > 0) && (g instanceof Graphics2D)) {\n+            Graphics2D g2d = (Graphics2D) g;\n+            int offs = this.thickness * (int) scaleFactor;\n@@ -161,2 +162,2 @@\n-                outer = new RoundRectangle2D.Float(0, 0, w, h, offs, offs);\n-                inner = new RoundRectangle2D.Float(offs, offs, w - size, h - size, arc, arc);\n+                outer = new RoundRectangle2D.Float(0, 0, width, height, offs, offs);\n+                inner = new RoundRectangle2D.Float(offs, offs, width - size, height - size, arc, arc);\n@@ -165,2 +166,2 @@\n-                outer = new Rectangle2D.Float(0, 0, w, h);\n-                inner = new Rectangle2D.Float(offs, offs, w - size, h - size);\n+                outer = new Rectangle2D.Float(0, 0, width, height);\n+                inner = new Rectangle2D.Float(offs, offs, width - size, height - size);\n@@ -169,6 +170,4 @@\n-            if (g instanceof Graphics2D g2d) {\n-                Path2D path = new Path2D.Float(Path2D.WIND_EVEN_ODD);\n-                path.append(outer, false);\n-                path.append(inner, false);\n-                g2d.fill(path);\n-            }\n+            Path2D path = new Path2D.Float(Path2D.WIND_EVEN_ODD);\n+            path.append(outer, false);\n+            path.append(inner, false);\n+            g2d.fill(path);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/border\/LineBorder.java","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -253,1 +253,1 @@\n-                                         int w, int h, double scale, int stroke) {\n+                                         int width, int height, double scaleFactor, int strokeWidth) {\n@@ -269,1 +269,1 @@\n-            int thickness = (int) Math.ceil(4 * scale);\n+            int thickness = (int) Math.ceil(4 * scaleFactor);\n@@ -274,1 +274,1 @@\n-                g.drawRect(i, i, w - (i * 2), h - (i * 2));\n+                g.drawRect(i, i, width - (i * 2), height - (i * 2));\n@@ -281,3 +281,3 @@\n-                int offset = (((scale - stroke) >= 0) && ((stroke % 2) != 0)) ? 1 : 0;\n-                int loc1 = thickness % 2 == 0 ? midPoint + stroke \/ 2 - stroke : midPoint;\n-                int loc2 = thickness % 2 == 0 ? midPoint + stroke \/ 2 : midPoint + stroke;\n+                int offset = (((scaleFactor - strokeWidth) >= 0) && ((strokeWidth % 2) != 0)) ? 1 : 0;\n+                int loc1 = thickness % 2 == 0 ? midPoint + strokeWidth \/ 2 - strokeWidth : midPoint;\n+                int loc2 = thickness % 2 == 0 ? midPoint + strokeWidth \/ 2 : midPoint + strokeWidth;\n@@ -285,1 +285,1 @@\n-                int corner = (int) Math.round(CORNER * scale);\n+                int corner = (int) Math.round(CORNER * scaleFactor);\n@@ -289,6 +289,6 @@\n-                g.drawLine(corner + 1, loc2, w - corner, loc2); \/\/top\n-                g.drawLine(loc2, corner + 1, loc2, h - corner); \/\/left\n-                g.drawLine((w - offset) - loc1, corner + 1,\n-                        (w - offset) - loc1, h - corner); \/\/right\n-                g.drawLine(corner + 1, (h - offset) - loc1,\n-                        w - corner, (h - offset) - loc1); \/\/bottom\n+                g.drawLine(corner + 1, loc2, width - corner, loc2); \/\/top\n+                g.drawLine(loc2, corner + 1, loc2, height - corner); \/\/left\n+                g.drawLine((width - offset) - loc1, corner + 1,\n+                        (width - offset) - loc1, height - corner); \/\/right\n+                g.drawLine(corner + 1, (height - offset) - loc1,\n+                        width - corner, (height - offset) - loc1); \/\/bottom\n@@ -298,6 +298,6 @@\n-                g.drawLine(corner, loc1, w - corner - 1, loc1);\n-                g.drawLine(loc1, corner, loc1, h - corner - 1);\n-                g.drawLine((w - offset) - loc2, corner,\n-                        (w - offset) - loc2, h - corner - 1);\n-                g.drawLine(corner, (h - offset) - loc2,\n-                        w - corner - 1, (h - offset) - loc2);\n+                g.drawLine(corner, loc1, width - corner - 1, loc1);\n+                g.drawLine(loc1, corner, loc1, height - corner - 1);\n+                g.drawLine((width - offset) - loc2, corner,\n+                        (width - offset) - loc2, height - corner - 1);\n+                g.drawLine(corner, (height - offset) - loc2,\n+                        width - corner - 1, (height - offset) - loc2);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}