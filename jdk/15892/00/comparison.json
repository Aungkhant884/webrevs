{"files":[{"patch":"@@ -466,2 +466,1 @@\n-                throw new KrbApErrException(Krb5.KRB_AP_ERR_GEN_CRED,\n-                        \"No service creds\");\n+                throw new KrbException(\"No service creds\");\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/CredentialsUtil.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -253,0 +253,3 @@\n+    public static final int KDC_ERR_SERVER_NOMATCH       = 26;   \/\/Requested server and ticket don't match\n+    public static final int KDC_ERR_MUST_USE_USER2USER   = 27;   \/\/Server principal valid for user2user only\n+    public static final int KDC_ERR_PATH_NOT_ACCEPTED    = 28;   \/\/KDC Policy rejects transited path\n@@ -273,0 +276,1 @@\n+    public static final int KRB_AP_PATH_NOT_ACCEPTED     = 51;   \/\/Policy rejects transited path\n@@ -277,3 +281,2 @@\n-    public static final int KRB_CRYPTO_NOT_SUPPORT      = 100;    \/\/Client does not support this crypto type\n-    public static final int KRB_AP_ERR_NOREALM          = 62;\n-    public static final int KRB_AP_ERR_GEN_CRED         = 63;\n+\n+    public static final int KRB_CRYPTO_NOT_SUPPORT      = 100;   \/\/Client does not support this crypto type\n@@ -349,0 +352,4 @@\n+        errMsgList.put(KDC_ERR_SERVER_NOMATCH, \"Requested server and ticket don't match\");\n+        errMsgList.put(KDC_ERR_MUST_USE_USER2USER, \"Server principal valid for user2user only\");\n+        errMsgList.put(KDC_ERR_PATH_NOT_ACCEPTED, \"KDC Policy rejects transited path\");\n+        errMsgList.put(KDC_ERR_SVC_UNAVAILABLE, \"A service is not available\");\n@@ -368,0 +375,1 @@\n+        errMsgList.put(KRB_AP_PATH_NOT_ACCEPTED, \"Policy rejects transited path\");\n@@ -371,1 +379,1 @@\n-        errMsgList.put(KRB_AP_ERR_NOREALM, \"Realm name not available\"); \/\/used in setDefaultCreds() in sun.security.krb5.Credentials\n+        errMsgList.put(KRB_ERR_WRONG_REALM, \"Wrong realm\");\n@@ -401,1 +409,0 @@\n-        errMsgList.put(KRB_AP_ERR_GEN_CRED, \"Fail to create credential.\");\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/Krb5.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8316771\n+ * @library \/test\/lib\n+ * @modules java.security.jgss\/sun.security.krb5.internal:+open\n+ * @summary make sure each error code has a message\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import sun.security.krb5.internal.Krb5;\n+\n+import java.lang.reflect.Field;\n+import java.util.Hashtable;\n+\n+public class ErrorMessages {\n+    public static void main(String[] args) throws Exception {\n+        boolean isError = false;\n+        int count = 0;\n+        int size = -1;\n+        for (Field v : Krb5.class.getDeclaredFields()) {\n+            \/\/ The spec of the Class::getDeclaredFields method claims\n+            \/\/ \"The elements in the returned array are not sorted and\n+            \/\/ are not in any particular order\". However, the current\n+            \/\/ implementation seems to be listing them in the order\n+            \/\/ they appear in the code.\n+            if (v.getName().equals(\"errMsgList\")) {\n+                v.setAccessible(true);\n+                size = ((Hashtable)v.get(null)).size();\n+                break;\n+            }\n+            if (v.getName().equals(\"KDC_ERR_NONE\")) {\n+                isError = true;\n+            }\n+            if (!isError) continue;\n+            Asserts.assertNotEquals(Krb5.getErrorMessage((int)v.get(null)),\n+                    null, \"No msg for \" + v);\n+            count++;\n+        }\n+        Asserts.assertEQ(count, size, \"Different size\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/ErrorMessages.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}