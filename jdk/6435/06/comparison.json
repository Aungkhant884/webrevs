{"files":[{"patch":"@@ -177,3 +177,6 @@\n-        \/\/ short absolute paths can be used directly\n-        if (isAbsolute() && path.length() <= MAX_PATH)\n-            return path;\n+        return getPathForWin32Calls(false);\n+    }\n+\n+    String getPathWithPrefixForWin32Calls() throws WindowsException {\n+        return getPathForWin32Calls(true);\n+    }\n@@ -181,6 +184,13 @@\n-        \/\/ return cached values if available\n-        WeakReference<String> ref = pathForWin32Calls;\n-        String resolved = (ref != null) ? ref.get() : null;\n-        if (resolved != null) {\n-            \/\/ Win32 path already available\n-            return resolved;\n+    private String getPathForWin32Calls(boolean forceLongPrefix) throws WindowsException {\n+        if (!forceLongPrefix) {\n+            \/\/ short absolute paths can be used directly\n+            if (isAbsolute() && path.length() <= MAX_PATH)\n+                return path;\n+\n+            \/\/ returned cached value if possible\n+            WeakReference<String> ref = pathForWin32Calls;\n+            String cached = (ref != null) ? ref.get() : null;\n+            if (cached != null) {\n+                \/\/ Win32 path already available\n+                return cached;\n+            }\n@@ -190,1 +200,1 @@\n-        resolved = getAbsolutePath();\n+        String resolved = getAbsolutePath();\n@@ -197,1 +207,1 @@\n-        if (resolved.length() > MAX_PATH) {\n+        if (resolved.length() > MAX_PATH || forceLongPrefix) {\n@@ -202,1 +212,1 @@\n-            resolved = addPrefixIfNeeded(GetFullPathName(resolved));\n+            resolved = addPrefix(GetFullPathName(resolved));\n@@ -208,1 +218,1 @@\n-        if (type != WindowsPathType.DRIVE_RELATIVE) {\n+        if (!forceLongPrefix && type != WindowsPathType.DRIVE_RELATIVE) {\n@@ -282,0 +292,10 @@\n+    \/\/ Add long path prefix to path\n+    static String addPrefix(String path) {\n+        if (path.startsWith(\"\\\\\\\\\")) {\n+            path = \"\\\\\\\\?\\\\UNC\" + path.substring(1, path.length());\n+        } else {\n+            path = \"\\\\\\\\?\\\\\" + path;\n+        }\n+        return path;\n+    }\n+\n@@ -285,5 +305,1 @@\n-            if (path.startsWith(\"\\\\\\\\\")) {\n-                path = \"\\\\\\\\?\\\\UNC\" + path.substring(1, path.length());\n-            } else {\n-                path = \"\\\\\\\\?\\\\\" + path;\n-            }\n+            return addPrefix(path);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPath.java","additions":34,"deletions":18,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -64,3 +64,1 @@\n-        String path = join(file.getPathForWin32Calls(), name);\n-        WindowsPath wp = WindowsPath.createFromNormalizedPath(wfs, path);\n-        return wp.getPathForWin32Calls();\n+        return join(file.getPathWithPrefixForWin32Calls(), name);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsUserDefinedFileAttributeView.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-            int MAX_PATH = 247;\n+            int MAX_PATH = 250;\n@@ -255,1 +255,4 @@\n-                \/\/ Try to set absolute path as extended attribute; expect IAE\n+                System.out.println(\"Testing \" + longPath);\n+\n+                \/\/ Try to set absolute path as extended attribute;\n+                \/\/ expect IAE\n@@ -259,1 +262,2 @@\n-                    }});\n+                    }\n+                });\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView\/Basic.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}