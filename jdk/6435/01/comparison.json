{"files":[{"patch":"@@ -177,0 +177,8 @@\n+        return getPathForWin32Calls(false);\n+    }\n+\n+    String getPathWithPrefixForWin32Calls() throws WindowsException {\n+        return getPathForWin32Calls(true);\n+    }\n+\n+    String getPathForWin32Calls(boolean alwaysAddPrefix) throws WindowsException {\n@@ -179,1 +187,1 @@\n-            return path;\n+            return alwaysAddPrefix ? addPrefixIfAbsent(path) : path;\n@@ -186,1 +194,1 @@\n-            return resolved;\n+            return alwaysAddPrefix ? addPrefixIfAbsent(resolved) : resolved;\n@@ -197,1 +205,2 @@\n-        if (resolved.length() > MAX_PATH) {\n+        boolean eligibleToCache = true;\n+        if (resolved.length() > MAX_PATH || alwaysAddPrefix) {\n@@ -202,1 +211,7 @@\n-            resolved = addPrefixIfNeeded(GetFullPathName(resolved));\n+            String prefixed = addPrefixIfNeeded(GetFullPathName(resolved));\n+            if (prefixed != resolved) {\n+                resolved = prefixed;\n+            } else if (alwaysAddPrefix) {\n+                resolved = addPrefixIfAbsent(resolved);\n+                eligibleToCache = false;\n+            }\n@@ -208,1 +223,1 @@\n-        if (type != WindowsPathType.DRIVE_RELATIVE) {\n+        if (eligibleToCache && type != WindowsPathType.DRIVE_RELATIVE) {\n@@ -292,0 +307,9 @@\n+    }\n+\n+    static String addPrefixIfAbsent(String path) {\n+        if (!path.startsWith(\"\\\\\\\\\")) {\n+            path = \"\\\\\\\\?\\\\\" + path;\n+        } else if (path.charAt(2) != '?') {\n+            path = \"\\\\\\\\?\\\\UNC\" + path.substring(1);\n+        }\n+        return path;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPath.java","additions":29,"deletions":5,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -64,3 +64,1 @@\n-        String path = join(file.getPathForWin32Calls(), name);\n-        WindowsPath wp = WindowsPath.createFromNormalizedPath(wfs, path);\n-        return wp.getPathForWin32Calls();\n+        return join(file.getPathWithPrefixForWin32Calls(), name);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsUserDefinedFileAttributeView.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -245,1 +245,1 @@\n-            int MAX_PATH = 247;\n+            int MAX_PATH = 250;\n@@ -254,12 +254,25 @@\n-            try {\n-                \/\/ Try to set absolute path as extended attribute; expect IAE\n-                tryCatch(IllegalArgumentException.class, new Task() {\n-                    public void run() throws IOException {\n-                        setEA(longPath, \"user:C:\\\\\");\n-                    }});\n-\n-                \/\/ Try to set an extended attribute on it.\n-                setEA(longPath, \"user:short\");\n-                setEA(longPath, \"user:reallyquitelonglongattrname\");\n-            } finally {\n-                Files.delete(longPath);\n+            String[] elts = longPath.toString().split(\":\");\n+            String uncName = \"\\\\\\\\localhost\\\\\" + elts[0] + \"$\" + elts[1];\n+            Path uncPath = Path.of(uncName);\n+\n+            boolean exceptionCaught = false;\n+            for (Path p : new Path[] {longPath, uncPath}) {\n+                System.out.println(\"Testing \" + p);\n+\n+                try {\n+                    \/\/ Try to set absolute path as extended attribute; expect IAE\n+                    tryCatch(IllegalArgumentException.class, new Task() {\n+                        public void run() throws IOException {\n+                            setEA(p, \"user:C:\\\\\");\n+                        }\n+                    });\n+\n+                    \/\/ Try to set an extended attribute on it.\n+                    setEA(p, \"user:short\");\n+                    setEA(p, \"user:reallyquitelonglongattrname\");\n+                } catch (Exception e) {\n+                    exceptionCaught = true;\n+                } finally {\n+                    if (exceptionCaught || p == uncPath)\n+                        Files.delete(p);\n+                }\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView\/Basic.java","additions":26,"deletions":13,"binary":false,"changes":39,"status":"modified"}]}