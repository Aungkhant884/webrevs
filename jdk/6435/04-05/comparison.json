{"files":[{"patch":"@@ -177,1 +177,1 @@\n-        return getPathForWin32Calls(0);\n+        return getPathForWin32Calls(false);\n@@ -180,5 +180,2 @@\n-    \/\/ This method will prefix long paths with \\\\?\\ or \\\\?\\UNC if\n-    \/\/ path.length + pad > MAX_PATH. The parameter represents the\n-    \/\/ length by which the path will be extended.\n-    String getPathWithPadForWin32Calls(int pad) throws WindowsException {\n-        return getPathForWin32Calls(Math.max(0, pad));\n+    String getPathWithPrefixForWin32Calls() throws WindowsException {\n+        return getPathForWin32Calls(true);\n@@ -187,2 +184,2 @@\n-    private String getPathForWin32Calls(int pad) throws WindowsException {\n-        if (pad == 0) {\n+    private String getPathForWin32Calls(boolean forceLongPrefix) throws WindowsException {\n+        if (!forceLongPrefix) {\n@@ -193,1 +190,1 @@\n-            \/\/ return cached value if available\n+            \/\/ returned cached value if possible\n@@ -210,1 +207,1 @@\n-        if (resolved.length() + pad > MAX_PATH) {\n+        if (resolved.length() > MAX_PATH || forceLongPrefix) {\n@@ -221,1 +218,1 @@\n-        if (pad == 0 && type != WindowsPathType.DRIVE_RELATIVE) {\n+        if (!forceLongPrefix && type != WindowsPathType.DRIVE_RELATIVE) {\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPath.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -64,2 +64,1 @@\n-        int pad = 1 + name.length();  \/\/ colon + name length\n-        return join(file.getPathWithPadForWin32Calls(pad), name);\n+        return join(file.getPathWithPrefixForWin32Calls(), name);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsUserDefinedFileAttributeView.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}