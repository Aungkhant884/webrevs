{"files":[{"patch":"@@ -184,1 +184,1 @@\n-    String getPathForWin32Calls(boolean alwaysAddPrefix) throws WindowsException {\n+    private String getPathForWin32Calls(boolean forceLongPrefix) throws WindowsException {\n@@ -187,8 +187,10 @@\n-            return alwaysAddPrefix ? addPrefixIfAbsent(path) : path;\n-\n-        \/\/ return cached values if available\n-        WeakReference<String> ref = pathForWin32Calls;\n-        String resolved = (ref != null) ? ref.get() : null;\n-        if (resolved != null) {\n-            \/\/ Win32 path already available\n-            return alwaysAddPrefix ? addPrefixIfAbsent(resolved) : resolved;\n+            return forceLongPrefix ? addPrefix(path) : path;\n+\n+        \/\/ return cached value if available\n+        if (!forceLongPrefix) {\n+            WeakReference<String> ref = pathForWin32Calls;\n+            String cached = (ref != null) ? ref.get() : null;\n+            if (cached != null) {\n+                \/\/ Win32 path already available\n+                return cached;\n+            }\n@@ -198,1 +200,1 @@\n-        resolved = getAbsolutePath();\n+        String resolved = getAbsolutePath();\n@@ -205,2 +207,1 @@\n-        boolean eligibleToCache = true;\n-        if (resolved.length() > MAX_PATH || alwaysAddPrefix) {\n+        if (resolved.length() > MAX_PATH || forceLongPrefix) {\n@@ -211,7 +212,1 @@\n-            String prefixed = addPrefixIfNeeded(GetFullPathName(resolved));\n-            if (prefixed != resolved) {\n-                resolved = prefixed;\n-            } else if (alwaysAddPrefix) {\n-                resolved = addPrefixIfAbsent(resolved);\n-                eligibleToCache = false;\n-            }\n+            resolved = addPrefix(GetFullPathName(resolved));\n@@ -223,1 +218,1 @@\n-        if (eligibleToCache && type != WindowsPathType.DRIVE_RELATIVE) {\n+        if (!forceLongPrefix && type != WindowsPathType.DRIVE_RELATIVE) {\n@@ -297,0 +292,10 @@\n+    \/\/ Add long path prefix to path\n+    static String addPrefix(String path) {\n+        if (path.startsWith(\"\\\\\\\\\")) {\n+            path = \"\\\\\\\\?\\\\UNC\" + path.substring(1, path.length());\n+        } else {\n+            path = \"\\\\\\\\?\\\\\" + path;\n+        }\n+        return path;\n+    }\n+\n@@ -307,9 +312,0 @@\n-    }\n-\n-    static String addPrefixIfAbsent(String path) {\n-        if (!path.startsWith(\"\\\\\\\\\")) {\n-            path = \"\\\\\\\\?\\\\\" + path;\n-        } else if (path.charAt(2) != '?') {\n-            path = \"\\\\\\\\?\\\\UNC\" + path.substring(1);\n-        }\n-        return path;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPath.java","additions":25,"deletions":29,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -255,1 +255,3 @@\n-            String uncName = \"\\\\\\\\localhost\\\\\" + elts[0] + \"$\" + elts[1];\n+            \/\/String uncName = \"\\\\\\\\localhost\\\\\" + elts[0] + \"$\" + elts[1];\n+            String host = java.net.InetAddress.getLocalHost().getHostName();\n+            String uncName = \"\\\\\\\\\" + host + \"\\\\\" + elts[0] + \"$\" + elts[1];\n@@ -258,3 +260,2 @@\n-            boolean exceptionCaught = false;\n-            for (Path p : new Path[] {longPath, uncPath}) {\n-                System.out.println(\"Testing \" + p);\n+            System.out.printf(\"host: %s; dir: %s%n\", host,\n+                System.getProperty(\"user.dir\"));\n@@ -262,2 +263,6 @@\n-                try {\n-                    \/\/ Try to set absolute path as extended attribute; expect IAE\n+            try {\n+                for (Path p : new Path[] {longPath, uncPath}) {\n+                    System.out.println(\"Testing \" + p);\n+\n+                    \/\/ Try to set absolute path as extended attribute;\n+                    \/\/ expect IAE\n@@ -273,5 +278,0 @@\n-                } catch (Exception e) {\n-                    exceptionCaught = true;\n-                } finally {\n-                    if (exceptionCaught || p == uncPath)\n-                        Files.delete(p);\n@@ -279,0 +279,2 @@\n+            } finally {\n+                Files.delete(longPath);\n","filename":"test\/jdk\/java\/nio\/file\/attribute\/UserDefinedFileAttributeView\/Basic.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"}]}