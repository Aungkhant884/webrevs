{"files":[{"patch":"@@ -92,1 +92,1 @@\n-  product(bool, DisableTHPStackMitigation, false, DIAGNOSTIC,           \\\n+  product(bool, THPStackMitigation, true, DIAGNOSTIC,                   \\\n@@ -95,1 +95,1 @@\n-          \"thread stacks. This switch disables that mitigation and \"    \\\n+          \"thread stacks. When disabled, the absence of this mitigation\"\\\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -939,1 +939,1 @@\n-  if (!DisableTHPStackMitigation) {\n+  if (THPStackMitigation) {\n@@ -3105,1 +3105,1 @@\n-  if (!DisableTHPStackMitigation) {\n+  if (THPStackMitigation) {\n@@ -3767,1 +3767,1 @@\n-  \/\/ -XX:+DisableTHPStackMitigation.\n+  \/\/ -XX:-THPStackMitigation.\n@@ -3769,3 +3769,1 @@\n-    if (DisableTHPStackMitigation) {\n-      log_info(pagesize)(\"JVM will *not* prevent THPs in thread stacks. This may cause high RSS.\");\n-    } else {\n+    if (THPStackMitigation) {\n@@ -3773,0 +3771,2 @@\n+    } else {\n+      log_info(pagesize)(\"JVM will *not* prevent THPs in thread stacks. This may cause high RSS.\");\n@@ -3775,1 +3775,1 @@\n-    FLAG_SET_ERGO(DisableTHPStackMitigation, true); \/\/ Mitigation not needed\n+    FLAG_SET_ERGO(THPStackMitigation, false); \/\/ Mitigation not needed\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-                finalargs.add(\"-XX:+DisableTHPStackMitigation\");\n+                finalargs.add(\"-XX:-THPStackMitigation\");\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/THPsInThreadStackPreventionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}