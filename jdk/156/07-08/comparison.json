{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.io.UncheckedIOException;\n@@ -57,9 +58,1 @@\n-        Files.walkFileTree(jdk_test_dir, new CopyFileVisitor(jdk_test_dir, copy_jdk1_dir));\n-        Files.walkFileTree(jdk_test_dir, new CopyFileVisitor(jdk_test_dir, copy_jdk2_dir));\n-\n-        File jdk1_dir_file = copy_jdk1_dir.toFile();\n-        File jdk2_dir_file = copy_jdk2_dir.toFile();\n-\n-        if (!jdk2_dir_file.mkdir() && !jdk2_dir_file.exists() || !jdk1_dir_file.mkdir() && !jdk1_dir_file.exists()) {\n-            throw new RuntimeException(\"Unable to create copy jdk directory\");\n-        }\n+        copyJDKs(jdk_test_dir, copy_jdk1_dir, copy_jdk2_dir);\n@@ -86,1 +79,1 @@\n-    private static void runCopiedJlink(String...args) throws Exception {\n+    private static void runCopiedJlink(String... args) throws Exception {\n@@ -98,5 +91,0 @@\n-    }\n-\n-    private static class CopyFileVisitor extends SimpleFileVisitor<Path> {\n-        private final Path src;\n-        private final Path dst;\n@@ -104,4 +92,0 @@\n-        public CopyFileVisitor(Path src, Path dst) {\n-            this.src = src;\n-            this.dst = dst;\n-        }\n@@ -109,9 +93,1 @@\n-        @Override\n-        public FileVisitResult preVisitDirectory(Path file,\n-                                                 BasicFileAttributes attrs) throws IOException {\n-            Path dstDir = dst.resolve(src.relativize(file));\n-            if (!dstDir.toFile().exists()) {\n-                Files.createDirectories(dstDir);\n-            }\n-            return FileVisitResult.CONTINUE;\n-        }\n+    }\n@@ -119,5 +95,13 @@\n-        @Override\n-        public FileVisitResult visitFile(Path file,\n-                                         BasicFileAttributes attrs) throws IOException {\n-            if (!file.toFile().isFile()) {\n-                return FileVisitResult.CONTINUE;\n+    private static void copyJDKs(Path src, Path dst1, Path dst2) throws Exception {\n+        Files.walk(src).skip(1).forEach(file -> {\n+            try {\n+                System.out.println(file);\n+                if(Files.isDirectory(file)) {\n+                    Files.createDirectories(dst1.resolve(src.relativize(file)));\n+                    Files.createDirectories(dst2.resolve(src.relativize(file)));\n+                } else {\n+                    Files.copy(file, dst1.resolve(src.relativize(file)));\n+                    Files.copy(file, dst2.resolve(src.relativize(file)));\n+                }\n+            } catch (IOException ioe) {\n+                throw new UncheckedIOException(ioe);\n@@ -125,4 +109,1 @@\n-            Path dstFile = dst.resolve(src.relativize(file));\n-            Files.copy(file, dstFile, StandardCopyOption.COPY_ATTRIBUTES);\n-            return FileVisitResult.CONTINUE;\n-        }\n+        });\n@@ -130,1 +111,2 @@\n-}\n\\ No newline at end of file\n+}\n+\n","filename":"test\/jdk\/tools\/jlink\/JLinkReproducible3Test.java","additions":20,"deletions":38,"binary":false,"changes":58,"status":"modified"}]}