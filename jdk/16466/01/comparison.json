{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import java.net.URISyntaxException;\n@@ -81,1 +82,6 @@\n-        return cs != null ? cs.getLocation().getPath() : null;\n+        try {\n+            \/\/ same format as returned by TestLoadLibraryDeadlock::getLocation\n+            return cs != null ? cs.getLocation().toURI().getPath() : null;\n+        } catch (URISyntaxException ex) {\n+            throw new RuntimeException(ex);\n+        }\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/loadLibraryDeadlock\/LoadLibraryDeadlock.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -172,2 +172,2 @@\n-                countLines(outputAnalyzer, \"Class1 loaded from \" + bJar) > 0,\n-                \"Unable to load b.jar.\");\n+                countLines(outputAnalyzer, \"Class1 loaded from \" + toLocationString(bJar)) > 0,\n+                \"Unable to load \" + toLocationString(bJar));\n@@ -176,2 +176,2 @@\n-                countLines(outputAnalyzer, \"Class2 loaded from \" + cJar) > 0,\n-                \"Unable to load signed c.jar.\");\n+                countLines(outputAnalyzer, \"Class2 loaded from \" + toLocationString(cJar)) > 0,\n+                \"Unable to load signed \" + toLocationString(cJar));\n@@ -183,0 +183,5 @@\n+\n+    private static String toLocationString(Path path) {\n+        \/\/ same format as returned by LoadLibraryDeadlock::getLocation\n+        return path.toUri().getPath();\n+    }\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/loadLibraryDeadlock\/TestLoadLibraryDeadlock.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"}]}