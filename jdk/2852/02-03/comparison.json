{"files":[{"patch":"@@ -578,1 +578,1 @@\n-     * circumstances to span across differences in Java programming\n+     * circumstances to span differences in Java programming\n@@ -590,6 +590,8 @@\n-     * java.lang.Cloneable Cloneable} class where the {@code clone}\n-     * method inherited from {@code java.lang.Object} and returning {@code Object} is overridden\n-     * and declared to return the type of the class; for example\n-     * {@link java.util.EnumSet#clone() EnumSet.clone()} returns\n-     * {@code EnumSet<E>} rather than {@link java.lang.Object#clone()\n-     * Object}. If this technique was being used, the resulting class\n+     * java.lang.Cloneable Cloneable} class where the {@link Object#clone() clone}\n+     * method inherited from {@code java.lang.Object} is overridden\n+     * and declared to return the type of the class. For example, {@code Object}\n+     * declares<br>\n+     * {@code protected Object clone() throws CloneNotSupportedException {...}}<br>\n+     * and {@code EnumSet<E>} declares its language-level {@linkplain java.util.EnumSet#clone() covariant override}<br>\n+     * {@code public EnumSet<E> clone() {...}}<br>\n+     * If this technique was being used, the resulting class\n@@ -598,1 +600,2 @@\n-     * returning {@code Object}; the body of the {@code clone} bridge\n+     * returning {@code Object}. The bridge method is a JVM-level override of {@code Object.clone()}.\n+     * The body of the {@code clone} bridge\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"}]}