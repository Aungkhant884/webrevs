{"files":[{"patch":"@@ -109,1 +109,3 @@\n-  if (!cl->is_valid_counted_loop(T_INT)) return false; \/\/ skip malformed counted loop\n+  if (!cl->is_valid_counted_loop(T_INT)) {\n+    return false; \/\/ skip malformed counted loop\n+  }\n@@ -113,1 +115,3 @@\n-    if (cl->is_reduction_loop()) return false; \/\/ no predication mapping\n+    if (cl->is_reduction_loop()) {\n+      return false; \/\/ no predication mapping\n+    }\n@@ -115,1 +119,3 @@\n-    if (limit->is_Con()) return false; \/\/ non constant limits only\n+    if (limit->is_Con()) {\n+      return false; \/\/ non constant limits only\n+    }\n@@ -122,1 +128,3 @@\n-        if (val < 0) return false;\n+        if (val < 0) {\n+          return false;\n+        }\n@@ -129,1 +137,3 @@\n-    if (SuperWordLoopUnrollAnalysis && cl->slp_max_unroll() == 0) return false;\n+    if (SuperWordLoopUnrollAnalysis && cl->slp_max_unroll() == 0) {\n+      return false;\n+    }\n@@ -153,1 +163,3 @@\n-  if (cl->is_vectorized_loop()) return false;\n+  if (cl->is_vectorized_loop()) {\n+    return false;\n+  }\n@@ -155,1 +167,3 @@\n-  if (cl->is_unroll_only()) return false;\n+  if (cl->is_unroll_only()) {\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI compiler.c2.irTests.TestSuperwordFailsUnrolling\n+ * @run main\/othervm -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI compiler.c2.irTests.TestSuperwordFailsUnrolling\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestSuperwordFailsUnrolling.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}