{"files":[{"patch":"@@ -402,13 +402,4 @@\n-  \/\/ be (x^(-1))+1\n-  if (op1 == Op_XorI && phase->type(in2) == TypeInt::ONE) {\n-    if (phase->type(in1->in(1)) == TypeInt::MINUS_1) {\n-      return new SubINode(phase->makecon(TypeInt::ZERO), in1->in(2));\n-    } else if (phase->type(in1->in(2)) == TypeInt::MINUS_1) {\n-      return new SubINode(phase->makecon(TypeInt::ZERO), in1->in(1));\n-    }\n-  } else if (op2 == Op_XorI && phase->type(in1) == TypeInt::ONE) {\n-    if (phase->type(in2->in(1)) == TypeInt::MINUS_1) {\n-      return new SubINode(phase->makecon(TypeInt::ZERO), in2->in(2));\n-    } else if (phase->type(in2->in(2)) == TypeInt::MINUS_1) {\n-      return new SubINode(phase->makecon(TypeInt::ZERO), in2->in(1));\n-    }\n+  \/\/ be (x^(-1))+1.\n+  if (op1 == Op_XorI && phase->type(in2) == TypeInt::ONE &&\n+      phase->type(in1->in(2)) == TypeInt::MINUS_1) {\n+    return new SubINode(phase->makecon(TypeInt::ZERO), in1->in(1));\n@@ -576,12 +567,3 @@\n-  if (op1 == Op_XorL && phase->type(in2) == TypeLong::ONE) {\n-    if (phase->type(in1->in(1)) == TypeLong::MINUS_1) {\n-      return new SubLNode(phase->makecon(TypeLong::ZERO), in1->in(2));\n-    } else if (phase->type(in1->in(2)) == TypeLong::MINUS_1) {\n-      return new SubLNode(phase->makecon(TypeLong::ZERO), in1->in(1));\n-    }\n-  } else if (op2 == Op_XorL && phase->type(in1) == TypeLong::ONE) {\n-    if (phase->type(in2->in(1)) == TypeLong::MINUS_1) {\n-      return new SubLNode(phase->makecon(TypeLong::ZERO), in2->in(2));\n-    } else if (phase->type(in2->in(2)) == TypeLong::MINUS_1) {\n-      return new SubLNode(phase->makecon(TypeLong::ZERO), in2->in(1));\n-    }\n+  if (op1 == Op_XorL && phase->type(in2) == TypeLong::ONE &&\n+      phase->type(in1->in(2)) == TypeLong::MINUS_1) {\n+    return new SubLNode(phase->makecon(TypeLong::ZERO), in1->in(1));\n@@ -1001,0 +983,1 @@\n+\/\/------------------------------Idealize---------------------------------------\n@@ -1005,1 +988,0 @@\n-  int op2 = in2->Opcode();\n@@ -1009,9 +991,4 @@\n-  \/\/ be -1^(x+(-1)).\n-  if (op1 == Op_AddI && phase->type(in2) == TypeInt::MINUS_1) {\n-    if (phase->type(in1->in(2)) == TypeInt::MINUS_1) {\n-      return new SubINode(phase->makecon(TypeInt::ZERO), in1->in(1));\n-    }\n-  } else if (op2 == Op_AddI && phase->type(in1) == TypeInt::MINUS_1) {\n-    if (phase->type(in2->in(2)) == TypeInt::MINUS_1) {\n-      return new SubINode(phase->makecon(TypeInt::ZERO), in2->in(1));\n-    }\n+  \/\/ be (x+(-1))^-1.\n+  if (op1 == Op_AddI && phase->type(in2) == TypeInt::MINUS_1 &&\n+      phase->type(in1->in(2)) == TypeInt::MINUS_1) {\n+    return new SubINode(phase->makecon(TypeInt::ZERO), in1->in(1));\n@@ -1090,1 +1067,0 @@\n-  int op2 = in2->Opcode();\n@@ -1094,9 +1070,4 @@\n-  \/\/ be -1^(x+(-1)).\n-  if (op1 == Op_AddL && phase->type(in2) == TypeLong::MINUS_1) {\n-    if (phase->type(in1->in(2)) == TypeLong::MINUS_1) {\n-      return new SubLNode(phase->makecon(TypeLong::ZERO), in1->in(1));\n-    }\n-  } else if (op2 == Op_AddL && phase->type(in1) == TypeLong::MINUS_1) {\n-    if (phase->type(in2->in(2)) == TypeLong::MINUS_1) {\n-      return new SubLNode(phase->makecon(TypeLong::ZERO), in2->in(1));\n-    }\n+  \/\/ be (x+(-1))^-1.\n+  if (op1 == Op_AddL && phase->type(in2) == TypeLong::MINUS_1 &&\n+      phase->type(in1->in(2)) == TypeLong::MINUS_1) {\n+    return new SubLNode(phase->makecon(TypeLong::ZERO), in1->in(1));\n","filename":"src\/hotspot\/share\/opto\/addnode.cpp","additions":16,"deletions":45,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -30,1 +30,4 @@\n- * @run main\/othervm -XX:-Inline -XX:-TieredCompilation -XX:TieredStopAtLevel=4 -XX:CompileCommand=compileonly,compiler.c2.TestAddXorIdeal::* compiler.c2.TestAddXorIdeal\n+ * @run main\/othervm -XX:-TieredCompilation -XX:TieredStopAtLevel=4\n+ *                   -XX:CompileCommand=dontinline,compiler.c2.TestAddXorIdeal::test*\n+ *                   -XX:CompileCommand=compileonly,compiler.c2.TestAddXorIdeal::test*\n+ *                   compiler.c2.TestAddXorIdeal\n@@ -34,0 +37,2 @@\n+import java.util.Random;\n+\n@@ -54,0 +59,16 @@\n+    public static int test5(int x) {\n+        return 1 + ~x;\n+    }\n+\n+    public static int test6(int x) {\n+        return ~(-1 + x);\n+    }\n+\n+    public static long test7(long x) {\n+        return 1L + ~x;\n+    }\n+\n+    public static long test8(long x) {\n+        return ~(-1L + x);\n+    }\n+\n@@ -55,0 +76,2 @@\n+        Random random = new Random();\n+\n@@ -56,4 +79,10 @@\n-            Asserts.assertTrue(test1(i + 5) == -(i + 5));\n-            Asserts.assertTrue(test2(i - 7) == -(i - 7));\n-            Asserts.assertTrue(test3(i + 100) == -(i + 100));\n-            Asserts.assertTrue(test4(i - 1024) == -(i - 1024));\n+            int n = random.nextInt();\n+            long n1 = random.nextLong();\n+            Asserts.assertTrue(test1(i + n) == -(i + n));\n+            Asserts.assertTrue(test2(i - n) == -(i - n));\n+            Asserts.assertTrue(test3(i + n1) == -(i + n1));\n+            Asserts.assertTrue(test4(i - n1) == -(i - n1));\n+            Asserts.assertTrue(test5(i + n) == -(i + n));\n+            Asserts.assertTrue(test6(i - n) == -(i - n));\n+            Asserts.assertTrue(test7(i + n1) == -(i + n1));\n+            Asserts.assertTrue(test8(i - n1) == -(i - n1));\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestAddXorIdeal.java","additions":34,"deletions":5,"binary":false,"changes":39,"status":"modified"}]}