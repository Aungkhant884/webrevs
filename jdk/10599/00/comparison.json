{"files":[{"patch":"@@ -47,1 +47,0 @@\n-import jdk.jfr.internal.EventInstrumentation.SettingInfo;\n@@ -69,1 +68,1 @@\n-    private final ArrayList<SettingInfo> settingInfos = new ArrayList<>();\n+    private final ArrayList<SettingControl> settingControls = new ArrayList<>();\n@@ -166,1 +165,0 @@\n-            int index = settingInfos.size();\n@@ -183,1 +181,1 @@\n-                settingInfos.add(new SettingInfo(FIELD_SETTING_PREFIX + index, index, null, null, settingControl));\n+                settingControls.add(settingControl);\n@@ -311,2 +309,9 @@\n-    public List<SettingInfo> getSettingInfos() {\n-        return settingInfos;\n+    \/**\n+     * A malicious user must never be able to run a callback in the wrong\n+     * context. Methods on SettingControl must therefore never be invoked directly\n+     * by JFR, instead use jdk.jfr.internal.Control.\n+     *\n+     * The returned list is only to be used inside EventConfiguration\n+     *\/\n+    public List<SettingControl> getSettingControls() {\n+        return settingControls;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventControl.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -63,9 +63,1 @@\n-    record SettingInfo(String fieldName, int index, Type paramType, String methodName, SettingControl settingControl) {\n-        \/**\n-         * A malicious user must never be able to run a callback in the wrong\n-         * context. Methods on SettingControl must therefore never be invoked directly\n-         * by JFR, instead use jdk.jfr.internal.Control.\n-         *\/\n-        public SettingControl settingControl() {\n-            return this.settingControl;\n-        }\n+    record SettingInfo(Type paramType, String methodName) {\n@@ -247,2 +239,0 @@\n-                                String fieldName = EventControl.FIELD_SETTING_PREFIX + settingInfos.size();\n-                                int index = settingInfos.size();\n@@ -250,1 +240,1 @@\n-                                settingInfos.add(new SettingInfo(fieldName, index, paramType, m.name, null));\n+                                settingInfos.add(new SettingInfo(paramType, m.name));\n@@ -266,2 +256,0 @@\n-                                String fieldName = EventControl.FIELD_SETTING_PREFIX + settingInfos.size();\n-                                int index = settingInfos.size();\n@@ -269,1 +257,1 @@\n-                                settingInfos.add(new SettingInfo(fieldName, index, paramType, method.getName(), null));\n+                                settingInfos.add(new SettingInfo(paramType, method.getName()));\n@@ -636,2 +624,2 @@\n-            int index = 0;\n-            for (SettingInfo si : settingInfos) {\n+            for (int index = 0; index < settingInfos.size(); index++) {\n+                SettingInfo si = settingInfos.get(index);\n@@ -651,1 +639,0 @@\n-                index++;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/EventInstrumentation.java","additions":5,"deletions":18,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -191,1 +191,1 @@\n-    private EventConfiguration newEventConfiguration(EventType eventType, EventControl ec, SettingControl[] settings) {\n+    private EventConfiguration newEventConfiguration(EventType eventType, EventControl ec) {\n@@ -194,1 +194,1 @@\n-                var argClasses = new Class<?>[] { EventType.class, EventControl.class, SettingControl[].class };\n+                var argClasses = new Class<?>[] { EventType.class, EventControl.class};\n@@ -199,1 +199,1 @@\n-            return cachedEventConfigurationConstructor.newInstance(eventType, ec, settings);\n+            return cachedEventConfigurationConstructor.newInstance(eventType, ec);\n@@ -212,7 +212,1 @@\n-        List<SettingInfo> settingInfos = ec.getSettingInfos();\n-        SettingControl[] settings = new SettingControl[settingInfos.size()];\n-        int index = 0;\n-        for (var settingInfo : settingInfos) {\n-            settings[index++] = settingInfo.settingControl();\n-        }\n-        EventConfiguration configuration = newEventConfiguration(eventType, ec, settings);\n+        EventConfiguration configuration = newEventConfiguration(eventType, ec);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-    private EventConfiguration(EventType eventType, EventControl eventControl, SettingControl[] settings) {\n+    private EventConfiguration(EventType eventType, EventControl eventControl) {\n@@ -47,1 +47,1 @@\n-        this.settings = settings;\n+        this.settings = eventControl.getSettingControls().toArray(new SettingControl[0]);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/event\/EventConfiguration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}