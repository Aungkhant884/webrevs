{"files":[{"patch":"@@ -2410,4 +2410,0 @@\n-bool Matcher::parse_one_bytecode(Parse& parser) {\n-  return false;\n-}\n-\n@@ -2801,0 +2797,4 @@\n+}\n+\n+bool Parse::do_one_bytecode_targeted() {\n+  return false;\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -929,4 +929,0 @@\n-bool Matcher::parse_one_bytecode(Parse& parser) {\n-  return false;\n-}\n-\n@@ -1166,0 +1162,4 @@\n+bool Parse::do_one_bytecode_targeted() {\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2103,4 +2103,0 @@\n-bool Matcher::parse_one_bytecode(Parse& parser) {\n-  return false;\n-}\n-\n@@ -2414,0 +2410,4 @@\n+bool Parse::do_one_bytecode_targeted() {\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1823,4 +1823,0 @@\n-bool Matcher::parse_one_bytecode(Parse& parser) {\n-  return false;\n-}\n-\n@@ -2051,0 +2047,4 @@\n+bool Parse::do_one_bytecode_targeted() {\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1495,4 +1495,0 @@\n-bool Matcher::parse_one_bytecode(Parse& parser) {\n-  return false;\n-}\n-\n@@ -1705,0 +1701,4 @@\n+bool Parse::do_one_bytecode_targeted() {\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"opto\/matcher.hpp\"\n@@ -33,2 +32,2 @@\n-bool Matcher::parse_one_bytecode(Parse& parser) {\n-  switch (parser.bc()) {\n+bool Parse::do_one_bytecode_targeted() {\n+  switch (bc()) {\n@@ -39,1 +38,1 @@\n-      parser.do_divmod_fixup();\n+      do_divmod_fixup();\n","filename":"src\/hotspot\/cpu\/x86\/parse_x86.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"previous_filename":"src\/hotspot\/cpu\/x86\/matcher_x86.cpp","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -229,0 +229,1 @@\n+  AD.addInclude(AD._CPP_file, \"opto\/parse.hpp\");\n","filename":"src\/hotspot\/share\/adlc\/main.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,0 @@\n-class Parse;\n@@ -204,6 +203,0 @@\n-  \/\/ Parse a bytecode in a machine-dependent manner, return false if it is\n-  \/\/ not needed. Some machine instructions have a little different semantics\n-  \/\/ from the corresponding VM instructions, transforming during parsing\n-  \/\/ may result in more efficient transformations in later phases\n-  static bool parse_one_bytecode(Parse& parser);\n-\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -417,4 +417,0 @@\n-  \/\/ implementation of div\/rem bytecodes for handling of special case\n-  \/\/ min_jint \/ -1, called from Matcher::parse_one_bytecode\n-  void do_divmod_fixup();\n-\n@@ -469,1 +465,2 @@\n-  void do_one_bytecode();\n+  void do_one_bytecode_common();\n+  bool do_one_bytecode_targeted();\n@@ -541,0 +538,4 @@\n+  \/\/ implementation of div\/rem bytecodes for handling of special case\n+  \/\/ min_jint \/ -1\n+  void do_divmod_fixup();\n+\n","filename":"src\/hotspot\/share\/opto\/parse.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -1558,2 +1558,2 @@\n-    if (!Matcher::parse_one_bytecode(*this)) {\n-      do_one_bytecode();\n+    if (!do_one_bytecode_targeted()) {\n+      do_one_bytecode_common();\n","filename":"src\/hotspot\/share\/opto\/parse1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1805,1 +1805,1 @@\n-void Parse::do_one_bytecode() {\n+void Parse::do_one_bytecode_common() {\n","filename":"src\/hotspot\/share\/opto\/parse2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/opto\/parse3.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}