{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import java.nio.file.Files;\n@@ -709,1 +710,3 @@\n-                            && (useSetDirectory || !fsv.isFileSystem(((File)objects[0])))) {\n+                            && (useSetDirectory\n+                                || (!fsv.isFileSystem(((File)objects[0]))\n+                                    && !Files.isSymbolicLink(((File)objects[0]).toPath())))) {\n@@ -715,1 +718,1 @@\n-                                File f = (File) object;\n+                                File f = (File)object;\n@@ -719,1 +722,1 @@\n-                                        && fsv.isFileSystem(f)\n+                                        && (fsv.isFileSystem(f) || Files.isSymbolicLink(f.toPath()))\n@@ -741,1 +744,5 @@\n-                            chooser.setSelectedFile(null);\n+                            if (Files.isSymbolicLink(file.toPath())) {\n+                                chooser.setSelectedFile(file);\n+                            } else {\n+                                chooser.setSelectedFile(null);\n+                            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicFileChooserUI.java","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,158 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.io.File;\n+import java.lang.reflect.InvocationTargetException;\n+import java.util.Arrays;\n+\n+import javax.swing.JCheckBox;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.JScrollPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.WindowConstants;\n+\n+\/*\n+ * @test\n+ * @bug 8281966\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test to check if the absolute path of Symbolic Link folder\n+ *          is valid on ValueChanged property listener.\n+ * @run main\/manual FileChooserSymLinkTest\n+ *\/\n+public class FileChooserSymLinkTest {\n+    static JFrame frame;\n+    static JFileChooser jfc;\n+    static JPanel panel;\n+    static JTextArea pathList;\n+    static JCheckBox multiSelection;\n+    static PassFailJFrame passFailJFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                try {\n+                    initialize();\n+                } catch (InterruptedException | InvocationTargetException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        });\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    static void initialize() throws InterruptedException, InvocationTargetException {\n+        \/\/Initialize the components\n+        final String INSTRUCTIONS = \"\"\"\n+                Instructions to Test:\n+                1. Open an elevated Command Prompt.\n+                2. Paste the following commands:\n+                cd \/d C:\\\\\n+                mkdir FileChooserTest\n+                cd FileChooserTest\n+                mkdir target\n+                mklink \/d link target\n+\n+                3. Navigate to C:\\\\FileChooserTest in the JFileChooser.\n+                4. Use \"Enable Multi-Selection\" checkbox to enable\/disable\n+                   MultiSelection Mode\n+                5. Single-selection:\n+                   Click \"link\" directory, the absolute path of the symbolic\n+                   link should be displayed. If it's null, click FAIL.\n+                   Click \"target\" directory, its absolute path should be\n+                   displayed.\n+\n+                   Enable multiple selection by clicking the checkbox.\n+                   Multi-selection:\n+                   Click \"link\", press Ctrl and then click \"target\".\n+                   Both should be selected and their absolute paths should be\n+                   displayed.\n+\n+                   If \"link\" can't be selected or if its absolute path is null,\n+                   click FAIL.\n+\n+                   If \"link\" can be selected in both single- and multi-selection modes,\n+                   click PASS.\n+                6. When done with testing, paste the following commands to\n+                   remove the 'FileChooserTest' directory:\n+                cd \\\\\n+                rmdir \/s \/q C:\\\\FileChooserTest\n+\n+                or use File Explorer to clean it up.\n+                \"\"\";\n+        frame = new JFrame(\"JFileChooser Symbolic Link test\");\n+        panel = new JPanel(new BorderLayout());\n+        multiSelection = new JCheckBox(\"Enable Multi-Selection\");\n+        pathList = new JTextArea(10, 50);\n+        jfc = new JFileChooser(new File(\"C:\\\\\"));\n+        passFailJFrame = new PassFailJFrame(\"Test Instructions\", INSTRUCTIONS, 5L, 35, 40);\n+\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        panel.add(multiSelection, BorderLayout.EAST);\n+        panel.add(new JScrollPane(pathList), BorderLayout.WEST);\n+        jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);\n+        jfc.setControlButtonsAreShown(false);\n+        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+        jfc.setMultiSelectionEnabled(multiSelection.isSelected());\n+        pathList.append(\"Path List\\n\");\n+\n+        multiSelection.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                Object source = e.getSource();\n+                jfc.setMultiSelectionEnabled(((JCheckBox)source).isSelected());\n+            }\n+        });\n+        jfc.addPropertyChangeListener(new PropertyChangeListener() {\n+            public void propertyChange(PropertyChangeEvent evt) {\n+                String msg = null;\n+                if (JFileChooser.SELECTED_FILE_CHANGED_PROPERTY.equals(evt.getPropertyName())) {\n+                    msg = \"Absolute Path : \" + evt.getNewValue();\n+                } else if (JFileChooser.SELECTED_FILES_CHANGED_PROPERTY.equals(evt.getPropertyName())) {\n+                    msg = \"Selected Files : \" + Arrays.toString((File[]) evt.getNewValue());\n+                }\n+\n+                if (msg != null) {\n+                    System.out.println(msg);\n+                    pathList.append(msg + \"\\n\");\n+                }\n+            }\n+        });\n+        frame.add(panel, BorderLayout.NORTH);\n+        frame.add(jfc, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileChooserSymLinkTest.java","additions":158,"deletions":0,"binary":false,"changes":158,"status":"added"}]}