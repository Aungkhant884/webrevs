{"files":[{"patch":"@@ -712,1 +712,2 @@\n-                            && (useSetDirectory || !fsv.isFileSystem(((File)objects[0])))) {\n+                            && (useSetDirectory || (!fsv.isFileSystem(((File)objects[0]))\n+                            && !Files.isSymbolicLink(Paths.get(((File)objects[0]).getPath()))))) {\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicFileChooserUI.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,0 +24,1 @@\n+import java.awt.BorderLayout;\n@@ -25,1 +26,2 @@\n-import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n@@ -30,0 +32,1 @@\n+import javax.swing.JCheckBox;\n@@ -32,1 +35,2 @@\n-import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n@@ -36,10 +40,11 @@\n-\/** @test\n-  * @bug 8281966\n-  * @key headful\n-  * @library \/java\/awt\/regtesthelpers\n-  * @build PassFailJFrame\n-  * @summary Test to check if the absolute path of Symbolic Link folder\n-  *          is valid on ValueChanged property listener.\n-  * @run main\/manual FileChooserSymLinkTest\n-*\/\n-\n+\/*\n+ *@test\n+ * @bug 8281966\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test to check if the absolute path of Symbolic Link folder\n+ *          is valid on ValueChanged property listener.\n+ * @run main\/manual FileChooserSymLinkTest\n+ *\/\n@@ -48,0 +53,5 @@\n+    static Boolean bMultiSel_Enabled = false;\n+    static JFileChooser jfc = null;\n+    static JPanel panel = null;\n+    static JTextArea textArea = null;\n+    static JCheckBox checkMSelection = null;\n@@ -51,1 +61,0 @@\n-        Robot robot = new Robot();\n@@ -56,3 +65,1 @@\n-                } catch (InterruptedException e) {\n-                    throw new RuntimeException(e);\n-                } catch (InvocationTargetException e) {\n+                } catch (InterruptedException | InvocationTargetException e) {\n@@ -63,4 +70,0 @@\n-\n-        robot.delay(2000);\n-        robot.waitForIdle();\n-\n@@ -71,0 +74,1 @@\n+        \/\/Initialize the components\n@@ -73,8 +77,23 @@\n-                1. Create a regular directory in any specific path.\n-                    ex: mkdir C:\\\\target\n-                2. Create a Symbolic link targeting the created test directory.\n-                    ex : mklink \/D C:\\\\link C:\\\\target\n-                3. In JFileChooser, navigate to \"link\" created directed.\n-                4. On click of the \"link\" directory, if the Absolute path of\n-                    Symbolic Link is valid then Click PASS, else if it is\n-                    null then Click FAIL.(Including MultiSelection Mode SET)\n+                1. Open an elevated Command Prompt.\n+                2. Paste the following commands:\n+                cd \/d C:\\\n+                mkdir FileChooserTest\n+                cd FileChooserTest\n+                mkdir target\n+                mklink \/d link FileChooserTest\n+\n+                3. Navigate to C:\\\\FileChooserTest in the JFileChooser.\n+                4. Use \"Enable Multi-Selection\" checkbox to enable\/disable\n+                   MultiSelection Mode\n+                5. MultiSelection Mode disabled - On click of the \"link\"\n+                   directory, if the Absolute path of Symbolic Link is\n+                   valid then Click PASS, else if it is null then Click FAIL.\n+                   MultiSelection Mode Enabled - If Multi selection of\n+                   directories including Symbolic Link is possible along\n+                   with valid Absolute path then Click PASS, else either\n+                   of them failed click FAIL.\n+                6. When done with testing, paste the following commands to remove the 'filechooser' directory\n+                cd \\\n+                rmdir \/s \/q filechooser\n+\n+                or use File Explorer to clean it up.\n@@ -83,0 +102,4 @@\n+        panel = new JPanel(new BorderLayout());\n+        checkMSelection = new JCheckBox(\"Enable Multi-Selection\");\n+        textArea = new JTextArea();\n+        jfc = new JFileChooser();\n@@ -84,0 +107,1 @@\n+\n@@ -86,2 +110,0 @@\n-\n-        frame.setPreferredSize(new Dimension(600, 600));\n@@ -89,1 +111,2 @@\n-        JFileChooser jfc = new JFileChooser();\n+        panel.add(checkMSelection,BorderLayout.EAST);\n+        panel.add(textArea,BorderLayout.WEST);\n@@ -93,0 +116,16 @@\n+        jfc.setMultiSelectionEnabled(bMultiSel_Enabled);\n+        textArea.setPreferredSize(new Dimension(600,300));\n+        textArea.append(\"Path List\");\n+\n+        checkMSelection.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                Object source = e.getSource();\n+                if (((JCheckBox)source).isSelected()) {\n+                    bMultiSel_Enabled = true;\n+                } else {\n+                    bMultiSel_Enabled = false;\n+                }\n+                jfc.setMultiSelectionEnabled(bMultiSel_Enabled);\n+            }\n+        });\n@@ -96,4 +135,2 @@\n-                    System.out.println(String.format(\"Absolute Path : %s\",evt.getNewValue()));\n-                    JOptionPane.showMessageDialog(null, evt.getNewValue(),\n-                            \"Absolute path\",\n-                            JOptionPane.INFORMATION_MESSAGE);\n+                    System.out.println(\"Absolute Path : \"+evt.getNewValue());\n+                    textArea.append(\"\\nAbsolute Path : \"+evt.getNewValue());\n@@ -103,1 +140,2 @@\n-        frame.add(jfc);\n+        frame.add(panel,BorderLayout.NORTH);\n+        frame.add(jfc,BorderLayout.CENTER);\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileChooserSymLinkTest.java","additions":74,"deletions":36,"binary":false,"changes":110,"status":"modified"}]}