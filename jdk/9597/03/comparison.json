{"files":[{"patch":"@@ -40,0 +40,3 @@\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -709,1 +712,2 @@\n-                            && (useSetDirectory || !fsv.isFileSystem(((File)objects[0])))) {\n+                            && (useSetDirectory || (!fsv.isFileSystem(((File)objects[0]))\n+                            && !Files.isSymbolicLink(Paths.get(((File)objects[0]).getPath()))))) {\n@@ -717,0 +721,1 @@\n+                                Path path = Paths.get(f.getPath());\n@@ -719,1 +724,1 @@\n-                                        && fsv.isFileSystem(f)\n+                                        && (fsv.isFileSystem(f) || Files.isSymbolicLink(path))\n@@ -741,1 +746,6 @@\n-                            chooser.setSelectedFile(null);\n+                            Path path = Paths.get(file.getPath());\n+                            if (Files.isSymbolicLink(path)) {\n+                                chooser.setSelectedFile(file);\n+                            } else {\n+                                chooser.setSelectedFile(null);\n+                            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/basic\/BasicFileChooserUI.java","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -0,0 +1,145 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JCheckBox;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.WindowConstants;\n+\n+\/*\n+ *@test\n+ * @bug 8281966\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test to check if the absolute path of Symbolic Link folder\n+ *          is valid on ValueChanged property listener.\n+ * @run main\/manual FileChooserSymLinkTest\n+ *\/\n+public class FileChooserSymLinkTest {\n+    static JFrame frame = null;\n+    static Boolean bMultiSel_Enabled = false;\n+    static JFileChooser jfc = null;\n+    static JPanel panel = null;\n+    static JTextArea textArea = null;\n+    static JCheckBox checkMSelection = null;\n+    static PassFailJFrame passFailJFrame = null;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                try {\n+                    initialize();\n+                } catch (InterruptedException | InvocationTargetException e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        });\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    static void initialize() throws InterruptedException, InvocationTargetException {\n+        \/\/Initialize the components\n+        final String INSTRUCTIONS = \"\"\"\n+                Instructions to Test:\n+                1. Open an elevated Command Prompt.\n+                2. Paste the following commands:\n+                cd \/d C:\\\n+                mkdir FileChooserTest\n+                cd FileChooserTest\n+                mkdir target\n+                mklink \/d link FileChooserTest\n+\n+                3. Navigate to C:\\\\FileChooserTest in the JFileChooser.\n+                4. Use \"Enable Multi-Selection\" checkbox to enable\/disable\n+                   MultiSelection Mode\n+                5. MultiSelection Mode disabled - On click of the \"link\"\n+                   directory, if the Absolute path of Symbolic Link is\n+                   valid then Click PASS, else if it is null then Click FAIL.\n+                   MultiSelection Mode Enabled - If Multi selection of\n+                   directories including Symbolic Link is possible along\n+                   with valid Absolute path then Click PASS, else either\n+                   of them failed click FAIL.\n+                6. When done with testing, paste the following commands to remove the 'filechooser' directory\n+                cd \\\n+                rmdir \/s \/q filechooser\n+\n+                or use File Explorer to clean it up.\n+                \"\"\";\n+        frame = new JFrame(\"JFileChooser Symbolic Link test\");\n+        panel = new JPanel(new BorderLayout());\n+        checkMSelection = new JCheckBox(\"Enable Multi-Selection\");\n+        textArea = new JTextArea();\n+        jfc = new JFileChooser();\n+        passFailJFrame = new PassFailJFrame(INSTRUCTIONS);\n+\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        panel.add(checkMSelection,BorderLayout.EAST);\n+        panel.add(textArea,BorderLayout.WEST);\n+        jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);\n+        jfc.setControlButtonsAreShown(false);\n+        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n+        jfc.setMultiSelectionEnabled(bMultiSel_Enabled);\n+        textArea.setPreferredSize(new Dimension(600,300));\n+        textArea.append(\"Path List\");\n+\n+        checkMSelection.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                Object source = e.getSource();\n+                if (((JCheckBox)source).isSelected()) {\n+                    bMultiSel_Enabled = true;\n+                } else {\n+                    bMultiSel_Enabled = false;\n+                }\n+                jfc.setMultiSelectionEnabled(bMultiSel_Enabled);\n+            }\n+        });\n+        jfc.addPropertyChangeListener(new PropertyChangeListener() {\n+            public void propertyChange(PropertyChangeEvent evt) {\n+                if (JFileChooser.SELECTED_FILE_CHANGED_PROPERTY.equals(evt.getPropertyName())) {\n+                    System.out.println(\"Absolute Path : \"+evt.getNewValue());\n+                    textArea.append(\"\\nAbsolute Path : \"+evt.getNewValue());\n+                }\n+            }\n+        });\n+        frame.add(panel,BorderLayout.NORTH);\n+        frame.add(jfc,BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileChooserSymLinkTest.java","additions":145,"deletions":0,"binary":false,"changes":145,"status":"added"}]}