{"files":[{"patch":"@@ -17,2 +17,4 @@\n-public class MaximizeWindowTest extends JFrame\n-{\n+public class MaximizeWindowTest extends JFrame {\n+    private static JFrame frame;\n+    private static final Dimension ORIGINAL_SIZE = new Dimension(200, 200);\n+\n@@ -21,0 +23,5 @@\n+        try {\n+            SwingUtilities.invokeAndWait(new Runnable() {\n+                @Override\n+                public void run() {\n+                    JSplitPane splitPane = new JSplitPane();\n@@ -22,11 +29,6 @@\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-                JSplitPane splitPane = new JSplitPane();\n-\n-                JFrame frame = new JFrame();\n-                frame.setDefaultCloseOperation(EXIT_ON_CLOSE);\n-                frame.setSize(200, 200);\n-                frame.setLocation(400, 400);\n-                frame.add(splitPane);\n-                frame.setExtendedState(MAXIMIZED_BOTH);\n+                    frame = new JFrame();\n+                    frame.setDefaultCloseOperation(EXIT_ON_CLOSE);\n+                    frame.setSize(200, 200);\n+                    frame.setLocation(400, 400);\n+                    frame.add(splitPane);\n+                    frame.setExtendedState(MAXIMIZED_BOTH);\n@@ -34,7 +36,8 @@\n-                frame.addComponentListener(new ComponentAdapter() {\n-                    @Override\n-                    public void componentResized(ComponentEvent e) {\n-                        System.out.println(\"Component size: \" + e.getComponent().getSize());\n-                        if (e.getComponent().getSize().equals(new Dimension(200, 200))) {\n-                            throw new RuntimeException(\"Test Failed! \" +\n-                                    \"Frame was visible at original size before maximizing\");\n+                    frame.addComponentListener(new ComponentAdapter() {\n+                        @Override\n+                        public void componentResized(ComponentEvent e) {\n+                            System.out.println(\"Component size: \" + e.getComponent().getSize());\n+                            if (e.getComponent().getSize().equals(new Dimension(200, 200))) {\n+                                throw new RuntimeException(\"Test Failed! \" +\n+                                        \"Frame was visible at original size before maximizing\");\n+                            }\n@@ -42,2 +45,1 @@\n-                    }\n-                });\n+                    });\n@@ -45,1 +47,1 @@\n-                splitPane.setDividerLocation(1000);\n+                    splitPane.setDividerLocation(1000);\n@@ -47,1 +49,1 @@\n-                frame.setVisible(true);\n+                    frame.setVisible(true);\n@@ -49,1 +51,6 @@\n-                robot.delay(1000);\n+                }\n+            });\n+            robot.delay(1000);\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(() -> frame.dispose());\n@@ -51,1 +58,1 @@\n-        });\n+        }\n","filename":"test\/jdk\/javax\/swing\/JFrame\/MaximizeWindowTest.java","additions":33,"deletions":26,"binary":false,"changes":59,"status":"modified"}]}