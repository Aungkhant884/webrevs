{"files":[{"patch":"@@ -670,0 +670,38 @@\n+        \/\/ Manage the extended state when showing\n+        if (visible) {\n+                \/* Frame or Dialog should be set property WINDOW_FULLSCREENABLE to true if the\n+                Frame or Dialog is resizable.\n+                **\/\n+            final boolean resizable = (target instanceof Frame) ? ((Frame)target).isResizable() :\n+                    ((target instanceof Dialog) ? ((Dialog)target).isResizable() : false);\n+            if (resizable) {\n+                setCanFullscreen(true);\n+            }\n+\n+            \/\/ Apply the extended state as expected in shared code\n+            if (target instanceof Frame) {\n+                if (!wasMaximized && isMaximized()) {\n+                    \/\/ setVisible could have changed the native maximized state\n+                    deliverZoom(true);\n+                } else {\n+                    int frameState = ((Frame)target).getExtendedState();\n+                    if ((frameState & Frame.ICONIFIED) != 0) {\n+                        \/\/ Treat all state bit masks with ICONIFIED bit as ICONIFIED state.\n+                        frameState = Frame.ICONIFIED;\n+                    }\n+\n+                    switch (frameState) {\n+                        case Frame.ICONIFIED:\n+                            execute(CWrapper.NSWindow::miniaturize);\n+                            break;\n+                        case Frame.MAXIMIZED_BOTH:\n+                            maximize();\n+                            break;\n+                        default: \/\/ NORMAL\n+                            unmaximize(); \/\/ in case it was maximized, otherwise this is a no-op\n+                            break;\n+                    }\n+                }\n+            }\n+        }\n+\n@@ -730,38 +768,0 @@\n-        \/\/ Manage the extended state when showing\n-        if (visible) {\n-            \/* Frame or Dialog should be set property WINDOW_FULLSCREENABLE to true if the\n-            Frame or Dialog is resizable.\n-            **\/\n-            final boolean resizable = (target instanceof Frame) ? ((Frame)target).isResizable() :\n-            ((target instanceof Dialog) ? ((Dialog)target).isResizable() : false);\n-            if (resizable) {\n-                setCanFullscreen(true);\n-            }\n-\n-            \/\/ Apply the extended state as expected in shared code\n-            if (target instanceof Frame) {\n-                if (!wasMaximized && isMaximized()) {\n-                    \/\/ setVisible could have changed the native maximized state\n-                    deliverZoom(true);\n-                } else {\n-                    int frameState = ((Frame)target).getExtendedState();\n-                    if ((frameState & Frame.ICONIFIED) != 0) {\n-                        \/\/ Treat all state bit masks with ICONIFIED bit as ICONIFIED state.\n-                        frameState = Frame.ICONIFIED;\n-                    }\n-\n-                    switch (frameState) {\n-                        case Frame.ICONIFIED:\n-                            execute(CWrapper.NSWindow::miniaturize);\n-                            break;\n-                        case Frame.MAXIMIZED_BOTH:\n-                            maximize();\n-                            break;\n-                        default: \/\/ NORMAL\n-                            unmaximize(); \/\/ in case it was maximized, otherwise this is a no-op\n-                            break;\n-                    }\n-                }\n-            }\n-        }\n-\n@@ -1026,1 +1026,0 @@\n-\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPlatformWindow.java","additions":38,"deletions":39,"binary":false,"changes":77,"status":"modified"}]}