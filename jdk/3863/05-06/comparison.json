{"files":[{"patch":"@@ -1692,0 +1692,1 @@\n+                boolean wasTotalPattern = hasTotalPattern;\n@@ -1699,0 +1700,2 @@\n+                            } else if (wasTotalPattern) {\n+                                log.error(c.pos(), Errors.PatternDominated);\n@@ -1744,2 +1747,3 @@\n-                        } else {\n-                            hasDefault = true;\n+                        } else if (matchBindings.bindingsWhenTrue.nonEmpty()) {\n+                            \/\/there was a pattern, and the execution flows into a default:\n+                            log.error(pat.pos(), Errors.FlowsThroughFromPattern);\n@@ -1747,0 +1751,1 @@\n+                        hasDefault = true;\n@@ -1778,0 +1783,1 @@\n+                    prevCompletedNormally = !TreeInfo.isNull(pat);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -519,0 +519,3 @@\n+compiler.err.flows.through.from.pattern=\\\n+    illegal fall-through from a pattern\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -24,1 +24,1 @@\n-\/\/ key: compiler.err.flows.through.to.pattern\n+\/\/ key: compiler.err.flows.through.from.pattern\n@@ -33,1 +33,1 @@\n-            case Object obj: break;\n+            default: break;\n","filename":"test\/langtools\/tools\/javac\/diags\/examples\/FlowsThroughFromPattern.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/langtools\/tools\/javac\/diags\/examples\/FlowsThroughToPattern.java","status":"copied"},{"patch":"@@ -158,0 +158,28 @@\n+    void patternAndDefault1(Object o) {\n+        switch (o) {\n+            case String s, default: break;\n+        }\n+    }\n+    void patternAndDefault2(Object o) {\n+        switch (o) {\n+            case String s:\n+            case default: break;\n+        }\n+    }\n+    void patternAndDefault3(Object o) {\n+        switch (o) {\n+            case default, String s: break;\n+        }\n+    }\n+    void patternAndDefault4(Object o) {\n+        switch (o) {\n+            case default:\n+            case String s: break;\n+        }\n+    }\n+    void nullAfterTotal(Object o) {\n+        switch (o) {\n+            case Object obj: break;\n+            case null: break;\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/patterns\/SwitchErrors.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -9,0 +9,1 @@\n+SwitchErrors.java:65:13: compiler.err.pattern.dominated\n@@ -25,0 +26,5 @@\n+SwitchErrors.java:160:28: compiler.err.flows.through.from.pattern\n+SwitchErrors.java:166:18: compiler.err.flows.through.from.pattern\n+SwitchErrors.java:171:27: compiler.err.flows.through.to.pattern\n+SwitchErrors.java:177:18: compiler.err.flows.through.to.pattern\n+SwitchErrors.java:183:13: compiler.err.pattern.dominated\n@@ -37,1 +43,1 @@\n-34 errors\n+40 errors\n","filename":"test\/langtools\/tools\/javac\/patterns\/SwitchErrors.out","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -170,1 +170,0 @@\n-            case String s:  return s.length();\n@@ -172,0 +171,1 @@\n+            case String s:  return s.length();\n@@ -178,1 +178,0 @@\n-            case String s -> s.length();\n@@ -180,0 +179,1 @@\n+            case String s -> s.length();\n","filename":"test\/langtools\/tools\/javac\/patterns\/Switches.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}