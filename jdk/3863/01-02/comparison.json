{"files":[{"patch":"@@ -344,0 +344,3 @@\n+\n+            JCCase lastCase = cases.last();\n+\n@@ -345,1 +348,1 @@\n-                JCCase last = cases.last();\n+                JCCase last = lastCase;\n@@ -448,0 +451,4 @@\n+                        } else if (hasTotalPattern && c == lastCase && p.isPattern()) {\n+                            \/\/If the switch has total pattern, the last case will contain it.\n+                            \/\/Convert the total pattern to default:\n+                            translatedLabels.add(make.DefaultCaseLabel());\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -55,0 +55,2 @@\n+        exhaustiveStatementSane(\"\");\n+        exhaustiveStatementSane(null);\n@@ -211,0 +213,12 @@\n+    void exhaustiveStatementSane(Object o) {\n+        switch (o) {\n+            case Object obj:; \/\/no break intentionally - should not fall through to any possible default\n+        }\n+        switch (o) {\n+            case null, Object obj:; \/\/no break intentionally - should not fall through to any possible default\n+        }\n+        switch (o) {\n+            case Object obj, null:; \/\/no break intentionally - should not fall through to any possible default\n+        }\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/Switches.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"}]}