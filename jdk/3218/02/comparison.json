{"files":[{"patch":"@@ -172,2 +172,1 @@\n-            server = createServer(testCase.serverCase);\n-            executor.submit(new ServerTask(server));\n+            server = startAndGetServer(testCase.serverCase, executor);\n@@ -228,0 +227,17 @@\n+    \/*\n+     * Return a server once it is properly started to avoid client connection issues.\n+     *\/\n+    protected AbstractServer startAndGetServer(U useCase, ExecutorService executor)\n+            throws Exception {\n+        AbstractServer server = createServer(useCase, executor);\n+        if (!Utilities.waitFor(Server::isAlive, server)) {\n+            \/\/ Retry operation, server might have failed to bind a port\n+            server.signalStop();\n+            server = createServer(useCase, executor);\n+            if (!Utilities.waitFor(Server::isAlive, server))\n+                throw new RuntimeException(\"Server failed to start\");\n+        }\n+\n+        return server;\n+    }\n+\n@@ -254,2 +270,4 @@\n-    protected AbstractServer createServer(U useCase) throws Exception {\n-        return createServerBuilder(useCase).build();\n+    protected AbstractServer createServer(U useCase, ExecutorService executor) throws Exception {\n+        AbstractServer server = createServerBuilder(useCase).build();\n+        executor.submit(new ServerTask(server));\n+        return server;\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSCommon\/interop\/BaseInteropTest.java","additions":22,"deletions":4,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -145,1 +145,1 @@\n-        if (isAlive()) {\n+        if (!serverSocket.isClosed()) {\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSCommon\/interop\/JdkServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-    public boolean isAlive() throws IOException;\n+    public boolean isAlive();\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSCommon\/interop\/Server.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -222,1 +222,2 @@\n-        while (!predicate.test(t) && System.currentTimeMillis() < deadline) {\n+        boolean predicateResult = predicate.test(t);\n+        while (!predicateResult && System.currentTimeMillis() < deadline) {\n@@ -225,0 +226,1 @@\n+                predicateResult = predicate.test(t);\n@@ -230,1 +232,1 @@\n-        return predicate.test(t);\n+        return predicateResult;\n@@ -380,1 +382,1 @@\n-            long secondConnStartTime, long secondSessionCreationTime) {\n+            long firstSessionCreationTime, long secondSessionCreationTime) {\n@@ -384,1 +386,1 @@\n-        System.out.println(\"secondConnStartTime: \" + secondConnStartTime);\n+        System.out.println(\"firstSessionCreationTime: \" + firstSessionCreationTime);\n@@ -387,1 +389,1 @@\n-        boolean resumed = secondConnStartTime > secondSessionCreationTime;\n+        boolean resumed = firstSessionCreationTime == secondSessionCreationTime;\n","filename":"test\/jdk\/javax\/net\/ssl\/TLSCommon\/interop\/Utilities.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}