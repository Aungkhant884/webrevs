{"files":[{"patch":"@@ -72,2 +72,5 @@\n-<p>The source tree currently defines a few common test groups in the relevant <code>TEST.groups<\/code> files. The test groups are either covering a specific component, for example <code>hotspot_gc<\/code>, or represent one of the <em>tiered<\/em> test groups, for example <code>tier1<\/code>. It is a good idea to look into <code>TEST.groups<\/code> files to get a sense what tests to run for the changes in the particular JDK component.<\/p>\n-<p>A brief description of the common test groups:<\/p>\n+<p>In the ideal world, contributors would be advised to run all the tests for every change. But in real world, one could only be expected to run as many tests as practical, while being mindful of the scope for the change, the testing resources available, etc.<\/p>\n+<p>The source tree currently defines a few common test groups in the relevant <code>TEST.groups<\/code> files. The test groups are either covering a specific component, for example <code>hotspot_gc<\/code>. It is a good idea to look into <code>TEST.groups<\/code> files to get a sense what tests are relevant to a particular JDK component.<\/p>\n+<p>Component-specific tests may miss some unintended consequences of a change, so other tests should also be run. Again, it might be impractical to run all tests, and therefore <em>tiered<\/em> test groups exist. Tiered test groups are not component-specific, but rather cover the significant parts of the entire JDK.<\/p>\n+<p>Multiple tiers allow balancing test coverage and test costs. Lower test tiers are supposed to contain the simpler, quicker and more stable tests. Higher tiers are supposed to contain progressively more thorough, slower, and sometimes less stable\/reliable tests. When choosing which tiers to run, contributors are advised to run the first N tiers they can afford to run.<\/p>\n+<p>A brief description of the tiered test groups:<\/p>\n@@ -75,4 +78,4 @@\n-<li><p><code>tier1<\/code>: This test group is the first line of defense against bugs. Multiple developers run these tests every day. Normally, at least this tier is ran before integration. Because of the widespread, the tests in <code>tier1<\/code> are carefully selected and optimized to run fast, and to run in the most stable manner. The test failures in <code>tier1<\/code> are usually followed up on quickly, either with fixes, or adding relevant tests to problem list. <a href=\"..\/.github\/workflows\/\">GitHub Actions workflows<\/a>, if enabled, run <code>tier1<\/code> tests.<\/p><\/li>\n-<li><p><code>tier2<\/code>: This test group covers even more ground. These contain, among other things, tests that either run for too long to be at <code>tier1<\/code>, test unstable and\/or experimental features, test less essential JDK components.<\/p><\/li>\n-<li><p><code>tier3<\/code>: This test group covers more stressful tests, the tests for corner cases not covered by previous tiers, plus the tests that require GUIs. As such, this suite should either be run with low concurrency (<code>TEST_JOBS=1<\/code>), or without headful tests (<code>JTREG_KEYWORDS=\\!headful<\/code>), or both.<\/p><\/li>\n-<li><p><code>tier4<\/code>: This test group every other test not covered by previous tiers. It includes, for example, <code>vmTestbase<\/code> suites for Hotspot, which run for many hours even on large machines. It also runs GUI tests, so the same <code>TEST_JOBS<\/code> and <code>JTREG_KEYWORDS<\/code> caveats apply.<\/p><\/li>\n+<li><p><code>tier1<\/code>: This is the lowest test tier. Multiple developers run these tests every day. Normally, at least this tier should be clean before integration. Because of the widespread use, the tests in <code>tier1<\/code> are carefully selected and optimized to run fast, and to run in the most stable manner. The test failures in <code>tier1<\/code> are usually followed up on quickly, either with fixes, or adding relevant tests to problem list. <a href=\"..\/.github\/workflows\/\">GitHub Actions workflows<\/a>, if enabled, run <code>tier1<\/code> tests.<\/p><\/li>\n+<li><p><code>tier2<\/code>: This test group covers even more ground. These contain, among other things, tests that either run for too long to be at <code>tier1<\/code>, tests for less stable and\/or experimental features, tests for less essential JDK components (for example, jaxp).<\/p><\/li>\n+<li><p><code>tier3<\/code>: This test group includes more stressful tests, the tests for corner cases not covered by previous tiers, plus the tests that require GUIs. As such, this suite should either be run with low concurrency (<code>TEST_JOBS=1<\/code>), or without headful tests (<code>JTREG_KEYWORDS=\\!headful<\/code>), or both.<\/p><\/li>\n+<li><p><code>tier4<\/code>: This test group includes every other test not covered by previous tiers. It includes, for example, <code>vmTestbase<\/code> suites for Hotspot, which run for many hours even on large machines. It also runs GUI tests, so the same <code>TEST_JOBS<\/code> and <code>JTREG_KEYWORDS<\/code> caveats apply.<\/p><\/li>\n","filename":"doc\/testing.html","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -69,0 +69,4 @@\n+In the ideal world, contributors would be advised to run all the tests for every change. But in\n+real world, one could only be expected to run as many tests as practical, while being mindful\n+of the scope for the change, the testing resources available, etc.\n+\n@@ -70,4 +74,13 @@\n-files. The test groups are either covering a specific component, for example `hotspot_gc`,\n-or represent one of the _tiered_ test groups, for example `tier1`. It is a good idea\n-to look into `TEST.groups` files to get a sense what tests to run for the changes in\n-the particular JDK component.\n+files. The test groups are either covering a specific component, for example `hotspot_gc`.\n+It is a good idea to look into `TEST.groups` files to get a sense what tests are relevant\n+to a particular JDK component.\n+\n+Component-specific tests may miss some unintended consequences of a change, so other\n+tests should also be run. Again, it might be impractical to run all tests, and therefore\n+_tiered_ test groups exist. Tiered test groups are not component-specific, but rather cover\n+the significant parts of the entire JDK.\n+\n+Multiple tiers allow balancing test coverage and test costs. Lower test tiers are supposed to\n+contain the simpler, quicker and more stable tests. Higher tiers are supposed to contain progressively\n+more thorough, slower, and sometimes less stable\/reliable tests. When choosing which tiers to run,\n+contributors are advised to run the first N tiers they can afford to run.\n@@ -75,1 +88,1 @@\n-A brief description of the common test groups:\n+A brief description of the tiered test groups:\n@@ -77,6 +90,6 @@\n-- `tier1`: This test group is the first line of defense against bugs. Multiple developers\n-run these tests every day. Normally, at least this tier is passed before integration.\n-Because of the widespread use, the tests in `tier1` are carefully selected and optimized\n-to run fast, and to run in the most stable manner. The test failures in `tier1` are\n-usually followed up on quickly, either with fixes, or adding relevant tests to problem\n-list. [GitHub Actions workflows](..\/.github\/workflows\/), if enabled, run `tier1` tests.\n+- `tier1`: This is the lowest test tier. Multiple developers run these tests every day.\n+Normally, at least this tier should be clean before integration. Because of the widespread use,\n+the tests in `tier1` are carefully selected and optimized to run fast, and to run in the\n+most stable manner. The test failures in `tier1` are usually followed up on quickly, either\n+with fixes, or adding relevant tests to problem list. [GitHub Actions workflows](..\/.github\/workflows\/),\n+if enabled, run `tier1` tests.\n@@ -85,1 +98,1 @@\n-tests that either run for too long to be at `tier1`, tests for unstable and\/or experimental\n+tests that either run for too long to be at `tier1`, tests for less stable and\/or experimental\n","filename":"doc\/testing.md","additions":25,"deletions":12,"binary":false,"changes":37,"status":"modified"}]}