{"files":[{"patch":"@@ -72,1 +72,1 @@\n-<p>In the ideal world, contributors would be advised to run all the tests for every change. But in real world, one could only be expected to run as many tests as practical, while being mindful of the scope for the change, the testing resources available, etc.<\/p>\n+<p>Ideally, all tests are run for every change but this may not be practical due to the limited testing resources, the scope of the change, etc.<\/p>\n@@ -75,1 +75,2 @@\n-<p>Multiple tiers allow balancing test coverage and test costs. Lower test tiers are supposed to contain the simpler, quicker and more stable tests. Higher tiers are supposed to contain progressively more thorough, slower, and sometimes less stable tests, or the tests that require special configuration. When choosing which tiers to run, contributors are advised to run the first N tiers they can afford to run.<\/p>\n+<p>Multiple tiers allow balancing test coverage and testing costs. Lower test tiers are supposed to contain the simpler, quicker and more stable tests. Higher tiers are supposed to contain progressively more thorough, slower, and sometimes less stable tests, or the tests that require special configuration.<\/p>\n+<p>Contributors are expected to run the tests for the areas that are changed, and the first N tiers they can afford to run, but at least tier1.<\/p>\n@@ -78,2 +79,2 @@\n-<li><p><code>tier1<\/code>: This is the lowest test tier. Multiple developers run these tests every day. Normally, at least this tier should be clean before integration. Because of the widespread use, the tests in <code>tier1<\/code> are carefully selected and optimized to run fast, and to run in the most stable manner. The test failures in <code>tier1<\/code> are usually followed up on quickly, either with fixes, or adding relevant tests to problem list. GitHub Actions workflows, if enabled, run <code>tier1<\/code> tests.<\/p><\/li>\n-<li><p><code>tier2<\/code>: This test group covers even more ground. These contain, among other things, tests that either run for too long to be at <code>tier1<\/code>, tests for less stable and\/or experimental features, tests for less essential JDK components (for example, jaxp).<\/p><\/li>\n+<li><p><code>tier1<\/code>: This is the lowest test tier. Multiple developers run these tests every day. Because of the widespread use, the tests in <code>tier1<\/code> are carefully selected and optimized to run fast, and to run in the most stable manner. The test failures in <code>tier1<\/code> are usually followed up on quickly, either with fixes, or adding relevant tests to problem list. GitHub Actions workflows, if enabled, run <code>tier1<\/code> tests.<\/p><\/li>\n+<li><p><code>tier2<\/code>: This test group covers even more ground. These contain, among other things, tests that either run for too long to be at <code>tier1<\/code>, or may require special configuration, or tests that are less stable, or cover the broader range of less critical JVM and JDK features\/components (for example, jaxp).<\/p><\/li>\n","filename":"doc\/testing.html","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -69,3 +69,2 @@\n-In the ideal world, contributors would be advised to run all the tests for every change. But in\n-real world, one could only be expected to run as many tests as practical, while being mindful\n-of the scope for the change, the testing resources available, etc.\n+Ideally, all tests are run for every change but this may not be practical due to the limited\n+testing resources, the scope of the change, etc.\n@@ -83,1 +82,1 @@\n-Multiple tiers allow balancing test coverage and test costs. Lower test tiers are supposed to\n+Multiple tiers allow balancing test coverage and testing costs. Lower test tiers are supposed to\n@@ -86,2 +85,4 @@\n-special configuration. When choosing which tiers to run, contributors are advised to run the\n-first N tiers they can afford to run.\n+special configuration.\n+\n+Contributors are expected to run the tests for the areas that are changed, and the first N tiers\n+they can afford to run, but at least tier1.\n@@ -92,5 +93,4 @@\n-Normally, at least this tier should be clean before integration. Because of the widespread use,\n-the tests in `tier1` are carefully selected and optimized to run fast, and to run in the\n-most stable manner. The test failures in `tier1` are usually followed up on quickly, either\n-with fixes, or adding relevant tests to problem list. GitHub Actions workflows, if enabled,\n-run `tier1` tests.\n+Because of the widespread use, the tests in `tier1` are carefully selected and optimized to run\n+fast, and to run in the most stable manner. The test failures in `tier1` are usually followed up\n+on quickly, either with fixes, or adding relevant tests to problem list. GitHub Actions workflows,\n+if enabled, run `tier1` tests.\n@@ -99,2 +99,3 @@\n-tests that either run for too long to be at `tier1`, tests for less stable and\/or experimental\n-features, tests for less essential JDK components (for example, jaxp).\n+tests that either run for too long to be at `tier1`, or may require special configuration,\n+or tests that are less stable, or cover the broader range of less critical JVM and JDK\n+features\/components (for example, jaxp).\n","filename":"doc\/testing.md","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"}]}