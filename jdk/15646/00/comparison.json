{"files":[{"patch":"@@ -440,1 +440,1 @@\n-  ShenandoahInitLogger::print();\n+  print_init_logger();\n@@ -445,0 +445,4 @@\n+void ShenandoahHeap::print_init_logger() const {\n+  ShenandoahInitLogger::print();\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -156,1 +156,1 @@\n-\n+  virtual void print_init_logger() const;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#include \"runtime\/globals.hpp\"\n@@ -38,14 +37,5 @@\n-  ShenandoahHeap* heap = ShenandoahHeap::heap();\n-\n-  log_info(gc, init)(\"Mode: %s\",\n-                     heap->mode()->name());\n-\n-  log_info(gc, init)(\"Heuristics: %s\",\n-                     heap->heuristics()->name());\n-\n-  log_info(gc, init)(\"Heap Region Count: \" SIZE_FORMAT,\n-                     ShenandoahHeapRegion::region_count());\n-\n-  log_info(gc, init)(\"Heap Region Size: \" SIZE_FORMAT \"%s\",\n-                     byte_size_in_exact_unit(ShenandoahHeapRegion::region_size_bytes()),\n-                     exact_unit_for_byte_size(ShenandoahHeapRegion::region_size_bytes()));\n+  log_info(gc, init)(\"Heap Region Count: \" SIZE_FORMAT, ShenandoahHeapRegion::region_count());\n+  log_info(gc, init)(\"Heap Region Size: \" PROPERFMT, PROPERFMTARGS(ShenandoahHeapRegion::region_size_bytes()));\n+  log_info(gc, init)(\"TLAB Size Max: \" PROPERFMT, PROPERFMTARGS(ShenandoahHeapRegion::max_tlab_size_bytes()));\n+  log_info(gc, init)(\"Humongous Object Threshold: \" PROPERFMT, PROPERFMTARGS(ShenandoahHeapRegion::humongous_threshold_bytes()));\n+}\n@@ -53,3 +43,2 @@\n-  log_info(gc, init)(\"TLAB Size Max: \" SIZE_FORMAT \"%s\",\n-                     byte_size_in_exact_unit(ShenandoahHeapRegion::max_tlab_size_bytes()),\n-                     exact_unit_for_byte_size(ShenandoahHeapRegion::max_tlab_size_bytes()));\n+void ShenandoahInitLogger::print_gc_specific() {\n+  GCInitLogger::print_gc_specific();\n@@ -57,3 +46,3 @@\n-  log_info(gc, init)(\"Humongous Object Threshold: \" SIZE_FORMAT \"%s\",\n-          byte_size_in_exact_unit(ShenandoahHeapRegion::humongous_threshold_bytes()),\n-          exact_unit_for_byte_size(ShenandoahHeapRegion::humongous_threshold_bytes()));\n+  ShenandoahHeap* heap = ShenandoahHeap::heap();\n+  log_info(gc, init)(\"Mode: %s\", heap->mode()->name());\n+  log_info(gc, init)(\"Heuristics: %s\", heap->heuristics()->name());\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahInitLogger.cpp","additions":10,"deletions":21,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -32,1 +32,2 @@\n-  virtual void print_heap();\n+  void print_heap() override;\n+  void print_gc_specific() override;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahInitLogger.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}