{"files":[{"patch":"@@ -203,7 +203,0 @@\n-                    ColorTransform[] transforms = new ColorTransform[2];\n-                    var srgb = (ICC_ColorSpace) getInstance(CS_sRGB);\n-                    PCMM mdl = CMSManager.getModule();\n-                    transforms[0] = mdl.createTransform(thisProfile,\n-                                    ColorTransform.Any, ColorTransform.In);\n-                    transforms[1] = mdl.createTransform(srgb.getProfile(),\n-                                    ColorTransform.Any, ColorTransform.Out);\n@@ -213,1 +206,4 @@\n-                    this2srgb = mdl.createTransform(transforms);\n+                    var srgb = ICC_Profile.getInstance(CS_sRGB);\n+                    PCMM mdl = CMSManager.getModule();\n+                    this2srgb = mdl.createTransform(ColorTransform.Any,\n+                                                    thisProfile, srgb);\n@@ -255,7 +251,0 @@\n-                    ColorTransform[] transforms = new ColorTransform[2];\n-                    var srgb = (ICC_ColorSpace) getInstance(CS_sRGB);\n-                    PCMM mdl = CMSManager.getModule();\n-                    transforms[0] = mdl.createTransform(srgb.getProfile(),\n-                                    ColorTransform.Any, ColorTransform.In);\n-                    transforms[1] = mdl.createTransform(thisProfile,\n-                                    ColorTransform.Any, ColorTransform.Out);\n@@ -265,1 +254,4 @@\n-                    srgb2this = mdl.createTransform(transforms);\n+                    var srgb = ICC_Profile.getInstance(CS_sRGB);\n+                    PCMM mdl = CMSManager.getModule();\n+                    srgb2this = mdl.createTransform(ColorTransform.Any,\n+                                                    srgb, thisProfile);\n@@ -387,13 +379,0 @@\n-                    ColorTransform[] transforms = new ColorTransform[2];\n-                    var xyz = (ICC_ColorSpace) getInstance(CS_CIEXYZ);\n-                    PCMM mdl = CMSManager.getModule();\n-                    try {\n-                        transforms[0] = mdl.createTransform(thisProfile,\n-                                        ICC_Profile.icRelativeColorimetric,\n-                                        ColorTransform.In);\n-                    } catch (CMMException e) {\n-                        transforms[0] = mdl.createTransform(thisProfile,\n-                                        ColorTransform.Any, ColorTransform.In);\n-                    }\n-                    transforms[1] = mdl.createTransform(xyz.getProfile(),\n-                                    ColorTransform.Any, ColorTransform.Out);\n@@ -403,1 +382,5 @@\n-                    this2xyz = mdl.createTransform(transforms);\n+                    var xyz = ICC_Profile.getInstance(CS_CIEXYZ);\n+                    PCMM mdl = CMSManager.getModule();\n+                    this2xyz = mdl.createTransform(\n+                            ICC_Profile.icRelativeColorimetric,\n+                            thisProfile, xyz);\n@@ -527,13 +510,0 @@\n-                    ColorTransform[] transforms = new ColorTransform[2];\n-                    var xyz = (ICC_ColorSpace) getInstance(CS_CIEXYZ);\n-                    PCMM mdl = CMSManager.getModule();\n-                    try {\n-                        transforms[0] = mdl.createTransform(xyz.getProfile(),\n-                                        ICC_Profile.icRelativeColorimetric,\n-                                        ColorTransform.In);\n-                    } catch (CMMException e) {\n-                        transforms[0] = mdl.createTransform(xyz.getProfile(),\n-                                        ColorTransform.Any, ColorTransform.In);\n-                    }\n-                    transforms[1] = mdl.createTransform(thisProfile,\n-                                    ColorTransform.Any, ColorTransform.Out);\n@@ -543,1 +513,5 @@\n-                    xyz2this = mdl.createTransform(transforms);\n+                    var xyz = ICC_Profile.getInstance(CS_CIEXYZ);\n+                    PCMM mdl = CMSManager.getModule();\n+                    xyz2this = mdl.createTransform(\n+                            ICC_Profile.icRelativeColorimetric,\n+                            xyz, thisProfile);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_ColorSpace.java","additions":18,"deletions":44,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -358,2 +358,1 @@\n-        int              i1, nProfiles, nTransforms, whichTrans, renderState;\n-        ColorTransform[]  theTransforms;\n+        int              i1, nProfiles, nTransforms, renderingIntent;\n@@ -394,4 +393,0 @@\n-        \/* make the transform list *\/\n-        theTransforms = new ColorTransform [nTransforms];\n-\n-        \/* initialize transform get loop *\/\n@@ -401,1 +396,1 @@\n-            renderState = ICC_Profile.icRelativeColorimetric;\n+            renderingIntent = ICC_Profile.icRelativeColorimetric;\n@@ -404,1 +399,1 @@\n-            renderState = ICC_Profile.icPerceptual; \/* render any other\n+            renderingIntent = ICC_Profile.icPerceptual; \/* render any other\n@@ -407,3 +402,3 @@\n-\n-        whichTrans = ColorTransform.In;\n-\n+        \/* or get this profile's rendering intent to select transform\n+           from next profiles? *\/\n+        \/\/renderingIntent = getRenderingIntent(theProfiles[0]);\n@@ -411,28 +406,1 @@\n-\n-        \/* get the transforms from each profile *\/\n-        for (i1 = 0; i1 < nTransforms; i1++) {\n-            if (i1 == nTransforms -1) {         \/* last profile? *\/\n-                whichTrans = ColorTransform.Out; \/* get output transform *\/\n-            }\n-            else {      \/* check for abstract profile *\/\n-                if ((whichTrans == ColorTransform.Simulation) &&\n-                    (theProfiles[i1].getProfileClass () ==\n-                     ICC_Profile.CLASS_ABSTRACT)) {\n-                renderState = ICC_Profile.icPerceptual;\n-                    whichTrans = ColorTransform.In;\n-                }\n-            }\n-\n-            theTransforms[i1] = mdl.createTransform (\n-                theProfiles[i1], renderState, whichTrans);\n-\n-            \/* get this profile's rendering intent to select transform\n-               from next profile *\/\n-            renderState = getRenderingIntent(theProfiles[i1]);\n-\n-            \/* \"middle\" profiles use simulation transform *\/\n-            whichTrans = ColorTransform.Simulation;\n-        }\n-\n-        \/* make the net transform *\/\n-        thisTransform = mdl.createTransform(theTransforms);\n+        thisTransform = mdl.createTransform(renderingIntent, theProfiles);\n@@ -500,5 +468,1 @@\n-            int              i1, whichTrans, renderState;\n-            ColorTransform[]  theTransforms;\n-\n-            \/* make the transform list *\/\n-            theTransforms = new ColorTransform [nProfiles];\n+            int renderingIntent;\n@@ -506,1 +470,0 @@\n-            \/* initialize transform get loop *\/\n@@ -510,1 +473,1 @@\n-                renderState = ICC_Profile.icRelativeColorimetric;\n+                renderingIntent = ICC_Profile.icRelativeColorimetric;\n@@ -513,1 +476,1 @@\n-                renderState = ICC_Profile.icPerceptual; \/* render any other\n+                renderingIntent = ICC_Profile.icPerceptual; \/* render any other\n@@ -517,2 +480,3 @@\n-            whichTrans = ColorTransform.In;\n-\n+            \/* or get this profile's rendering intent to select transform\n+               from next profiles? *\/\n+            \/\/ renderingIntent = getRenderingIntent(profileList[i1]);\n@@ -520,28 +484,2 @@\n-\n-            \/* get the transforms from each profile *\/\n-            for (i1 = 0; i1 < nProfiles; i1++) {\n-                if (i1 == nProfiles -1) {         \/* last profile? *\/\n-                    whichTrans = ColorTransform.Out; \/* get output transform *\/\n-                }\n-                else {  \/* check for abstract profile *\/\n-                    if ((whichTrans == ColorTransform.Simulation) &&\n-                        (profileList[i1].getProfileClass () ==\n-                         ICC_Profile.CLASS_ABSTRACT)) {\n-                        renderState = ICC_Profile.icPerceptual;\n-                        whichTrans = ColorTransform.In;\n-                    }\n-                }\n-\n-                theTransforms[i1] = mdl.createTransform (\n-                    profileList[i1], renderState, whichTrans);\n-\n-                \/* get this profile's rendering intent to select transform\n-                   from next profile *\/\n-                renderState = getRenderingIntent(profileList[i1]);\n-\n-                \/* \"middle\" profiles use simulation transform *\/\n-                whichTrans = ColorTransform.Simulation;\n-            }\n-\n-            \/* make the net transform *\/\n-            thisRasterTransform = mdl.createTransform(theTransforms);\n+            thisRasterTransform = mdl.createTransform(renderingIntent,\n+                                                      profileList);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/ColorConvertOp.java","additions":16,"deletions":78,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,2 @@\n-import sun.java2d.cmm.CMSManager;\n-import sun.java2d.cmm.ColorTransform;\n-import sun.java2d.cmm.PCMM;\n+import java.awt.color.ICC_Profile;\n+import java.util.Arrays;\n@@ -37,1 +36,4 @@\n-import java.util.Arrays;\n+\n+import sun.java2d.cmm.CMSManager;\n+import sun.java2d.cmm.ColorTransform;\n+import sun.java2d.cmm.PCMM;\n@@ -1794,1 +1796,1 @@\n-        ColorTransform[] transformList = new ColorTransform[2];\n+        var srgb = ICC_Profile.getInstance(ColorSpace.CS_sRGB);\n@@ -1796,7 +1798,2 @@\n-        ICC_ColorSpace srgbCS =\n-            (ICC_ColorSpace) ColorSpace.getInstance(ColorSpace.CS_sRGB);\n-        transformList[0] = mdl.createTransform(\n-            grayCS.getProfile(), ColorTransform.Any, ColorTransform.In);\n-        transformList[1] = mdl.createTransform(\n-            srgbCS.getProfile(), ColorTransform.Any, ColorTransform.Out);\n-        ColorTransform t = mdl.createTransform(transformList);\n+        ColorTransform t = mdl.createTransform(ColorTransform.Any,\n+                                               grayCS.getProfile(), srgb);\n@@ -1835,1 +1832,1 @@\n-        ColorTransform[] transformList = new ColorTransform[2];\n+        var lg = ICC_Profile.getInstance(ColorSpace.CS_GRAY);\n@@ -1837,7 +1834,2 @@\n-        ICC_ColorSpace lgCS =\n-            (ICC_ColorSpace) ColorSpace.getInstance(ColorSpace.CS_GRAY);\n-        transformList[0] = mdl.createTransform (\n-            lgCS.getProfile(), ColorTransform.Any, ColorTransform.In);\n-        transformList[1] = mdl.createTransform (\n-            grayCS.getProfile(), ColorTransform.Any, ColorTransform.Out);\n-        ColorTransform t = mdl.createTransform(transformList);\n+        ColorTransform t = mdl.createTransform(ColorTransform.Any,\n+                                               lg, grayCS.getProfile());\n@@ -1879,1 +1871,1 @@\n-        ColorTransform[] transformList = new ColorTransform[2];\n+        var srgb = ICC_Profile.getInstance(ColorSpace.CS_sRGB);\n@@ -1881,7 +1873,2 @@\n-        ICC_ColorSpace srgbCS =\n-            (ICC_ColorSpace) ColorSpace.getInstance(ColorSpace.CS_sRGB);\n-        transformList[0] = mdl.createTransform (\n-            grayCS.getProfile(), ColorTransform.Any, ColorTransform.In);\n-        transformList[1] = mdl.createTransform (\n-            srgbCS.getProfile(), ColorTransform.Any, ColorTransform.Out);\n-        ColorTransform t = mdl.createTransform(transformList);\n+        ColorTransform t = mdl.createTransform(ColorTransform.Any,\n+                                               grayCS.getProfile(), srgb);\n@@ -1924,1 +1911,1 @@\n-        ColorTransform[] transformList = new ColorTransform[2];\n+        var lg = ICC_Profile.getInstance(ColorSpace.CS_GRAY);\n@@ -1926,8 +1913,2 @@\n-        ICC_ColorSpace lgCS =\n-            (ICC_ColorSpace) ColorSpace.getInstance(ColorSpace.CS_GRAY);\n-        transformList[0] = mdl.createTransform (\n-            lgCS.getProfile(), ColorTransform.Any, ColorTransform.In);\n-        transformList[1] = mdl.createTransform(\n-            grayCS.getProfile(), ColorTransform.Any, ColorTransform.Out);\n-        ColorTransform t = mdl.createTransform(\n-            transformList);\n+        ColorTransform t = mdl.createTransform(ColorTransform.Any,\n+                                               lg, grayCS.getProfile());\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/ColorModel.java","additions":19,"deletions":38,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -126,10 +126,5 @@\n-        public ColorTransform createTransform(ICC_Profile profile,\n-                                              int renderType,\n-                                              int transformType) {\n-            System.err.println(cName + \".createTransform(ICC_Profile,int,int)\");\n-            return tcmm.createTransform(profile, renderType, transformType);\n-        }\n-\n-        public ColorTransform createTransform(ColorTransform[] transforms) {\n-            System.err.println(cName + \".createTransform(ColorTransform[])\");\n-            return tcmm.createTransform(transforms);\n+        public ColorTransform createTransform(int renderingIntent,\n+                                              ICC_Profile... profiles)\n+        {\n+            System.err.println(cName + \".createTransform(int, ICC_Profile...)\");\n+            return tcmm.createTransform(renderingIntent, profiles);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/CMSManager.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,1 @@\n-    public int Any = -1;\/* any rendering type, whichever is\n-                           available *\/\n+    public int Any = -1;\/* any rendering intent, whichever is available *\/\n@@ -38,6 +37,0 @@\n-    \/* Transform types *\/\n-    public int In = 1;\n-    public int Out = 2;\n-    public int Gamut = 3;\n-    public int Simulation = 4;\n-\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/ColorTransform.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,4 +35,4 @@\n-    public Profile loadProfile(byte[] data);\n-    public byte[] getProfileData(Profile p);\n-    public byte[] getTagData(Profile p, int tagSignature);\n-    public void setTagData(Profile p, int tagSignature, byte[] data);\n+    Profile loadProfile(byte[] data);\n+    byte[] getProfileData(Profile p);\n+    byte[] getTagData(Profile p, int tagSignature);\n+    void setTagData(Profile p, int tagSignature, byte[] data);\n@@ -40,5 +40,3 @@\n-    \/* methods for creating ColorTransforms *\/\n-    public ColorTransform createTransform(ICC_Profile profile, int renderType,\n-                                          int transformType);\n-\n-    public ColorTransform createTransform(ColorTransform[] transforms);\n+    \/* Creates ColorTransform *\/\n+    ColorTransform createTransform(int renderingIntent,\n+                                   ICC_Profile... profiles);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/PCMM.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -102,1 +102,1 @@\n-        LCMSProfile[] profiles, int renderType,\n+        LCMSProfile[] profiles, int renderingIntent,\n@@ -117,1 +117,1 @@\n-            return createNativeTransform(ptrs, renderType, inFormatter,\n+            return createNativeTransform(ptrs, renderingIntent, inFormatter,\n@@ -125,1 +125,1 @@\n-        long[] profileIDs, int renderType,\n+        long[] profileIDs, int renderingIntent,\n@@ -130,10 +130,0 @@\n-   \/**\n-     * Constructs ColorTransform object corresponding to an ICC_profile\n-     *\/\n-    public ColorTransform createTransform(ICC_Profile profile,\n-                                                       int renderType,\n-                                                       int transformType)\n-    {\n-        return new LCMSTransform(profile, renderType, renderType);\n-    }\n-\n@@ -141,2 +131,1 @@\n-     * Constructs an ColorTransform object from a list of ColorTransform\n-     * objects\n+     * Constructs ColorTransform object corresponding to the ICC_profiles.\n@@ -144,2 +133,2 @@\n-    public synchronized ColorTransform createTransform(\n-        ColorTransform[] transforms)\n+    public ColorTransform createTransform(int renderingIntent,\n+                                          ICC_Profile... profiles)\n@@ -147,1 +136,1 @@\n-        return new LCMSTransform(transforms);\n+        return new LCMSTransform(renderingIntent, profiles);\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMS.java","additions":8,"deletions":19,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,44 +71,21 @@\n-    ICC_Profile[] profiles;\n-    LCMSProfile[] lcmsProfiles;\n-    int renderType;\n-    int transformType;\n-\n-    private int numInComponents = -1;\n-    private int numOutComponents = -1;\n-\n-    public LCMSTransform(ICC_Profile profile, int renderType,\n-                         int transformType)\n-    {\n-        \/* Actually, it is not a complete transform but just part of it *\/\n-        profiles = new ICC_Profile[1];\n-        profiles[0] = profile;\n-        lcmsProfiles = new LCMSProfile[1];\n-        lcmsProfiles[0] = LCMS.getProfileID(profile);\n-        this.renderType = (renderType == ColorTransform.Any)?\n-                              ICC_Profile.icPerceptual : renderType;\n-        this.transformType = transformType;\n-\n-        \/* Note that ICC_Profile.getNumComponents() is quite expensive\n-         * (it may results in a reading of the profile header).\n-         * So, here we cache the number of components of input and\n-         * output profiles for further usage.\n-         *\/\n-        numInComponents = profiles[0].getNumComponents();\n-        numOutComponents = profiles[profiles.length - 1].getNumComponents();\n-    }\n-\n-    public LCMSTransform (ColorTransform[] transforms) {\n-        int size = 0;\n-        for (int i=0; i < transforms.length; i++) {\n-            size+=((LCMSTransform)transforms[i]).profiles.length;\n-        }\n-        profiles = new ICC_Profile[size];\n-        lcmsProfiles = new LCMSProfile[size];\n-        int j = 0;\n-        for (int i=0; i < transforms.length; i++) {\n-            LCMSTransform curTrans = (LCMSTransform)transforms[i];\n-            System.arraycopy(curTrans.profiles, 0, profiles, j,\n-                             curTrans.profiles.length);\n-            System.arraycopy(curTrans.lcmsProfiles, 0, lcmsProfiles, j,\n-                             curTrans.lcmsProfiles.length);\n-            j += curTrans.profiles.length;\n+    private final LCMSProfile[] lcmsProfiles;\n+    private final int renderingIntent;\n+\n+    private final int numInComponents;\n+    private final int numOutComponents;\n+\n+    \/**\n+     * Creates a transform based on the list of profiles and rendering intent.\n+     * The first profile will be considered input, and the last profile will be\n+     * considered output.\n+     *\n+     * @param  renderingIntent the desired rendering intent, could be ignored if\n+     *         unsupported. If the {@link ColorTransform#Any} is passed then we\n+     *         will try to use {@code ICC_Profile.icPerceptual} intent.\n+     * @param  profiles the list of color profiles\n+     *\/\n+    LCMSTransform(int renderingIntent, ICC_Profile... profiles) {\n+        lcmsProfiles = new LCMSProfile[profiles.length];\n+        for (int i = 0; i < profiles.length; i++) {\n+            lcmsProfiles[i] = LCMS.getProfileID(profiles[i]);\n+            profiles[i].getNumComponents(); \/\/ force header initialization\n@@ -116,7 +93,5 @@\n-        renderType = ((LCMSTransform)transforms[0]).renderType;\n-\n-        \/* Note that ICC_Profile.getNumComponents() is quite expensive\n-         * (it may results in a reading of the profile header).\n-         * So, here we cache the number of components of input and\n-         * output profiles for further usage.\n-         *\/\n+        this.renderingIntent = (renderingIntent == ColorTransform.Any) ?\n+                ICC_Profile.icPerceptual : renderingIntent;\n+        \/\/ Note that ICC_Profile.getNumComponents() is quite expensive (it may\n+        \/\/ result in a reading of the profile header). So, here we cache the\n+        \/\/ number of components of input and output profiles for further usage.\n@@ -149,1 +124,1 @@\n-                    tfm.ID = LCMS.createTransform(lcmsProfiles, renderType,\n+                    tfm.ID = LCMS.createTransform(lcmsProfiles, renderingIntent,\n","filename":"src\/java.desktop\/share\/classes\/sun\/java2d\/cmm\/lcms\/LCMSTransform.java","additions":28,"deletions":53,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-  (JNIEnv *env, jclass cls, jlongArray profileIDs, jint renderType,\n+  (JNIEnv *env, jclass cls, jlongArray profileIDs, jint renderingIntent,\n@@ -203,1 +203,1 @@\n-        inFormatter, outFormatter, renderType, cmsFLAGS_COPY_ALPHA);\n+        inFormatter, outFormatter, renderingIntent, cmsFLAGS_COPY_ALPHA);\n","filename":"src\/java.desktop\/share\/native\/liblcms\/LCMS.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}