{"files":[{"patch":"@@ -33,1 +33,0 @@\n-import java.awt.AWTException;\n@@ -37,1 +36,0 @@\n-import java.lang.reflect.InvocationTargetException;\n@@ -47,2 +45,1 @@\n-   public static void main(String[] args) throws InterruptedException,\n-           InvocationTargetException, AWTException {\n+   public static void main(String[] args) throws Exception {\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/GetComponentAtTest.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.lang.reflect.InvocationTargetException;\n@@ -46,2 +45,1 @@\n-    public static void main(String[] args) throws InterruptedException,\n-            InvocationTargetException {\n+    public static void main(String[] args) throws Exception {\n@@ -74,2 +72,0 @@\n-                    System.out.println(e);\n-                    e.printStackTrace();\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/ReplaceCompTab.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,2 @@\n-import java.lang.reflect.InvocationTargetException;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -47,1 +48,1 @@\n-    static JFrame fr;\n+    static JFrame frame;\n@@ -49,1 +50,0 @@\n-    static JPanel panel;\n@@ -52,3 +52,3 @@\n-    static volatile boolean focusButtonTwo = false;\n-    static volatile boolean switchToTabTwo = false;\n-    static volatile boolean focusButtonOne = false;\n+    static final CountDownLatch focusButtonTwo = new CountDownLatch(1);\n+    static final CountDownLatch switchToTabTwo = new CountDownLatch(1);\n+    static final CountDownLatch focusButtonOne = new CountDownLatch(1);\n@@ -60,2 +60,1 @@\n-    public static void main(String[] args) throws InterruptedException,\n-            InvocationTargetException {\n+    public static void main(String[] args) throws Exception {\n@@ -65,1 +64,1 @@\n-                fr = new JFrame(\"bug4703690\");\n+                frame = new JFrame(\"bug4703690\");\n@@ -67,1 +66,1 @@\n-                panel = new JPanel();\n+                JPanel panel = new JPanel();\n@@ -74,1 +73,1 @@\n-                fr.getContentPane().add(tabbedPane);\n+                frame.getContentPane().add(tabbedPane);\n@@ -80,1 +79,1 @@\n-                        focusButtonTwo = true;\n+                        focusButtonTwo.countDown();\n@@ -86,1 +85,1 @@\n-                        switchToTabTwo = true;\n+                        switchToTabTwo.countDown();\n@@ -90,3 +89,3 @@\n-                fr.setBounds(10, 10, 200, 200);\n-                fr.setVisible(true);\n-                fr.setLocationRelativeTo(null);\n+                frame.setSize(200, 200);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n@@ -98,2 +97,2 @@\n-                if (fr != null) {\n-                    fr.dispose();\n+                if (frame != null) {\n+                    frame.dispose();\n@@ -105,23 +104,3 @@\n-    public void execute() {\n-        try {\n-            robot = new Robot();\n-            robot.setAutoDelay(50);\n-            robot.delay(1000);\n-            two.requestFocus();\n-\n-            one.addFocusListener(new FocusAdapter() {\n-                    public void focusGained(FocusEvent e) {\n-                        focusButtonOne = true;\n-                    }\n-                });\n-\n-            SwingUtilities.invokeAndWait(() -> {\n-                p = tabbedPane.getLocationOnScreen();\n-                rect = tabbedPane.getBoundsAt(1);\n-            });\n-\n-            robot.delay(1000);\n-            robot.mouseMove(p.x + rect.x + rect.width \/ 2,\n-                            p.y + rect.y + rect.height \/ 2);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+    public void execute() throws Exception {\n+        robot = new Robot();\n+        robot.setAutoDelay(50);\n@@ -129,1 +108,1 @@\n-            robot.delay(1000);\n+        two.requestFocus();\n@@ -131,4 +110,3 @@\n-            SwingUtilities.invokeAndWait(() -> {\n-                p = tabbedPane.getLocationOnScreen();\n-                rect = tabbedPane.getBoundsAt(0);\n-            });\n+        if (!focusButtonTwo.await(1, TimeUnit.SECONDS)) {\n+            throw new RuntimeException(\"Button two didn't receive focus\");\n+        }\n@@ -136,7 +114,18 @@\n-            robot.delay(1000);\n-            robot.mouseMove(p.x + rect.x + rect.width \/ 2,\n-                            p.y + rect.y + rect.height \/ 2);\n-            robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-            robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-        } catch (Exception t) {\n-            throw new RuntimeException(\"Test failed\", t);\n+        one.addFocusListener(new FocusAdapter() {\n+            public void focusGained(FocusEvent e) {\n+                focusButtonOne.countDown();\n+            }\n+        });\n+\n+        \/\/ Switch to tab two\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = tabbedPane.getLocationOnScreen();\n+            rect = tabbedPane.getBoundsAt(1);\n+        });\n+        robot.mouseMove(p.x + rect.x + rect.width \/ 2,\n+                p.y + rect.y + rect.height \/ 2);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+        if (!switchToTabTwo.await(1, TimeUnit.SECONDS)) {\n+            throw new RuntimeException(\"Switching to tab two failed\");\n@@ -145,1 +134,11 @@\n-        if (!focusButtonOne) {\n+        \/\/ Switch to tab one\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = tabbedPane.getLocationOnScreen();\n+            rect = tabbedPane.getBoundsAt(0);\n+        });\n+        robot.mouseMove(p.x + rect.x + rect.width \/ 2,\n+                p.y + rect.y + rect.height \/ 2);\n+        robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+        if (!focusButtonOne.await(1, TimeUnit.SECONDS)) {\n","filename":"test\/jdk\/javax\/swing\/JTabbedPane\/bug4703690.java","additions":53,"deletions":54,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-import java.awt.AWTException;\n@@ -35,1 +34,0 @@\n-import java.lang.reflect.InvocationTargetException;\n@@ -53,2 +51,1 @@\n-    public static void main(String[] args) throws InterruptedException,\n-            InvocationTargetException, AWTException {\n+    public static void main(String[] args) throws Exception {\n@@ -69,1 +66,0 @@\n-                f.setVisible(true);\n@@ -71,0 +67,1 @@\n+                f.setVisible(true);\n@@ -73,0 +70,1 @@\n+            robot.waitForIdle();\n@@ -75,2 +73,2 @@\n-            SwingUtilities.invokeAndWait(() -> p =\n-                    textArea.getLocationOnScreen());\n+            SwingUtilities.invokeAndWait(() ->\n+                    p = textArea.getLocationOnScreen());\n","filename":"test\/jdk\/javax\/swing\/JTextArea\/bug4849868.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import java.beans.PropertyChangeListener;\n@@ -34,0 +33,1 @@\n+import javax.swing.AbstractAction;\n@@ -40,7 +40,2 @@\n-    static class NullAction implements Action {\n-        public void addPropertyChangeListener(\n-                       PropertyChangeListener listener) {}\n-        public void removePropertyChangeListener(\n-                       PropertyChangeListener listener) {}\n-        public void putValue(String key, Object value) {}\n-        public void setEnabled(boolean b) {}\n+    static class NullAction extends AbstractAction {\n+        @Override\n@@ -48,1 +43,0 @@\n-\n","filename":"test\/jdk\/javax\/swing\/JTextField\/bug4244613.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}