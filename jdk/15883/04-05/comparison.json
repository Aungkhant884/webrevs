{"files":[{"patch":"@@ -385,10 +385,10 @@\n-    private CancellationException cancellationException(Throwable cause) {\n-        CancellationException original = interrupted.get();\n-        var message = original != null\n-                ? original.getMessage() : cause.getMessage();\n-        var cancel = new CancellationException(message);\n-        if (original != null) {\n-            \/\/ preserve the stack trace of the original exception to\n-            \/\/ show where the call to cancel(boolean) came from\n-            cancel.setStackTrace(original.getStackTrace());\n-        }\n+    \/\/ returns a CancellationExcpetion that wraps the given cause\n+    \/\/ if cancel(boolean) was called, the given cause otherwise\n+    private Throwable wrapIfCancelled(Throwable cause) {\n+        CancellationException interrupt = interrupted.get();\n+        if (interrupt == null) return cause;\n+\n+        var cancel = new CancellationException(interrupt.getMessage());\n+        \/\/ preserve the stack trace of the original exception to\n+        \/\/ show where the call to cancel(boolean) came from\n+        cancel.setStackTrace(interrupt.getStackTrace());\n@@ -402,4 +402,2 @@\n-        if (requestCancelled()) {\n-            \/\/ make sure to fail with CancellationException if cancel(true)\n-            \/\/ was called.\n-            t = cancellationException(t);\n+        var x = wrapIfCancelled(t);\n+        if (x instanceof CancellationException) {\n@@ -407,1 +405,1 @@\n-                debug.log(\"MultiExchange interrupted with: \" + t.getCause());\n+                debug.log(\"MultiExchange interrupted with: \" + x.getCause());\n@@ -410,1 +408,1 @@\n-        return MinimalFuture.failedFuture(t);\n+        return MinimalFuture.failedFuture(x);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/MultiExchange.java","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"}]}