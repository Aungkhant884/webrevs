[{"commit":{"message":"8310355: Move the stub test from initialize_final_stubs() to test\/hotspot\/gtest\n\nThree groups of runtime routines, i.e. arraycopy, copy and fill, are\ntested inside function `initialize_final_stubs()`. The test runs every\ntime the debug VM is started.\n\nI think it's a usual convention that it's better not to run functional\ntests on startup. Hence, this patch proposes to move the stub test under\n`test\/hotspot\/gtest`.\n\nIt's one copy-paste patch, except the following two minor changes:\n\n1) Remove `ASSERT` condition check, and the gtest case will be run for\nrelease build as well.\n\n2) Use the gtest helper `ASSERT_TRUE()` to replace the `assert()`.\n\nNote that the downside is that we won't catch stub implementation errors\nimmediately on startup.\n\nTest:\n\n1) Cross compilations on arm32\/s390\/ppc\/riscv passed.\n\n2) tier1 test passed on Linux\/AArch64, Linux\/x86_64 and macOS\/Apple\nsilicon. Note that hotspot\/gtest is run in tier1.\n\n3) VM builds with several different options (e.g., zero build, release\nbuild, fastdebug build, client variant, no C1\/c2) passed on\nLinux\/AArch64 and Linux\/x86_64.\n\n4) I manually injected errors in arraycopy\/copy\/fill stubs and verified\n`make test TEST=\"gtest:StubRoutines\"` fails or not. But this check only\nworked for array fill stub. For the remaining two stubs, VM build (`make\nimages`) failed firstly before running the gtest, because the built VM\nwith these \"erroneous\" stubs were executed to do something such as\nloading Java core library code."},"files":[{"filename":"src\/hotspot\/share\/runtime\/stubRoutines.cpp"},{"filename":"test\/hotspot\/gtest\/runtime\/test_stubRoutines.cpp"}],"sha":"24c33ae1624a527adf8661280f2a93dcf2e50497"}]