{"files":[{"patch":"@@ -816,1 +816,1 @@\n-                mv.visitVarInsn(ILOAD + prim.opcodeOffset, slot);\n+                mv.visitVarInsn(prim.loadOpcode, slot);\n@@ -838,1 +838,1 @@\n-                mv.visitInsn(IRETURN + prim.opcodeOffset);\n+                mv.visitInsn(prim.returnOpcode);\n@@ -932,8 +932,8 @@\n-        BYTE(byte.class, 0),\n-        CHAR(char.class, 0),\n-        DOUBLE(double.class, 3),\n-        FLOAT(float.class, 2),\n-        INT(int.class, 0),\n-        LONG(long.class, 1),\n-        SHORT(short.class, 0),\n-        BOOLEAN(boolean.class, 0);\n+        BYTE(byte.class, ILOAD),\n+        CHAR(char.class, ILOAD),\n+        DOUBLE(double.class, DLOAD),\n+        FLOAT(float.class, FLOAD),\n+        INT(int.class, ILOAD),\n+        LONG(long.class, LLOAD),\n+        SHORT(short.class, ILOAD),\n+        BOOLEAN(boolean.class, ILOAD);\n@@ -942,1 +942,1 @@\n-         * name of corresponding wrapper class\n+         * internal name of corresponding wrapper class\n@@ -958,2 +958,1 @@\n-         * Opcode offset from iload, ireturn, etc.\n-         * Order is i, l, f, d, a.\n+         * Load opcode used by this primitive\n@@ -961,1 +960,5 @@\n-        private final int opcodeOffset;\n+        private final int loadOpcode;\n+        \/**\n+         * Return opcode used by this primitive\n+         *\/\n+        private final int returnOpcode;\n@@ -963,1 +966,1 @@\n-        PrimitiveTypeInfo(Class<?> primitiveClass, int opcodeOffset) {\n+        PrimitiveTypeInfo(Class<?> primitiveClass, int loadOpcode) {\n@@ -969,1 +972,2 @@\n-            wrapperClassName = dotToSlash(wrapper.wrapperType().getName());\n+            var wrapperType = wrapper.wrapperType();\n+            wrapperClassName = dotToSlash(wrapperType.getName());\n@@ -971,1 +975,1 @@\n-                    \"(\" + baseTypeString + \")L\" + wrapperClassName + \";\";\n+                    \"(\" + baseTypeString + \")\" + wrapperType.descriptorString();\n@@ -974,1 +978,2 @@\n-            this.opcodeOffset = opcodeOffset;\n+            this.loadOpcode = loadOpcode;\n+            this.returnOpcode = loadOpcode - ILOAD + IRETURN;\n@@ -978,0 +983,1 @@\n+            \/\/ Uses if chain for speed: 8284880\n@@ -986,1 +992,1 @@\n-            throw new AssertionError();\n+            throw new AssertionError(cl);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/ProxyGenerator.java","additions":25,"deletions":19,"binary":false,"changes":44,"status":"modified"}]}