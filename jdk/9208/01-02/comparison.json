{"files":[{"patch":"@@ -427,8 +427,2 @@\n-            Integer totalSecs = totalSeconds;\n-            ZoneOffset result = SECONDS_CACHE.get(totalSecs);\n-            if (result == null) {\n-                result = new ZoneOffset(totalSeconds);\n-                ZoneOffset prev = SECONDS_CACHE.putIfAbsent(totalSecs, result);\n-                if (prev != null) {\n-                    result = prev;\n-                }\n+            return SECONDS_CACHE.computeIfAbsent(totalSeconds, totalSecs -> {\n+                ZoneOffset result = new ZoneOffset(totalSecs);\n@@ -436,2 +430,2 @@\n-            }\n-            return result;\n+                return result;\n+            });\n","filename":"src\/java.base\/share\/classes\/java\/time\/ZoneOffset.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-        return CACHE.computeIfAbsent(locale, l -> create(l));\n+        return CACHE.computeIfAbsent(locale, DecimalStyle::create);\n","filename":"src\/java.base\/share\/classes\/java\/time\/format\/DecimalStyle.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-    private static final ConcurrentMap<String, WeekFields> CACHE = new ConcurrentHashMap<>(4, 0.75f, 2);\n+    private static final ConcurrentMap<WeekFieldsKey, WeekFields> CACHE = new ConcurrentHashMap<>(4, 0.75f, 2);\n@@ -329,10 +329,5 @@\n-        String key = firstDayOfWeek.toString() + minimalDaysInFirstWeek;\n-        WeekFields rules = CACHE.get(key);\n-        if (rules == null) {\n-            rules = new WeekFields(firstDayOfWeek, minimalDaysInFirstWeek);\n-            WeekFields prev = CACHE.putIfAbsent(key, rules);\n-            if (prev != null) {\n-                rules = prev;\n-            }\n-        }\n-        return rules;\n+        WeekFieldsKey key = new WeekFieldsKey(firstDayOfWeek, minimalDaysInFirstWeek);\n+        return CACHE.computeIfAbsent(key, k -> new WeekFields(k.firstDayOfWeek, k.minimalDaysInFirstWeek));\n+    }\n+\n+    private record WeekFieldsKey(DayOfWeek firstDayOfWeek, int minimalDaysInFirstWeek) {\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/WeekFields.java","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"}]}