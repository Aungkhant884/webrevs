{"files":[{"patch":"@@ -5763,1 +5763,1 @@\n-instruct vtest_anytrue_neon(rFlagsReg cr, vReg src1, vReg src2, iRegINoSp tmp, vReg vtmp) %{\n+instruct vtest_anytrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg vtmp) %{\n@@ -5766,3 +5766,3 @@\n-  match(Set cr (VectorTest src1 src2 ));\n-  effect(TEMP tmp, TEMP vtmp);\n-  format %{ \"vtest_anytrue_neon $src1\\t# KILL $tmp, $vtmp\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP vtmp);\n+  format %{ \"vtest_anytrue_neon $src1\\t# KILL $vtmp\" %}\n@@ -5774,2 +5774,2 @@\n-    __ umov($tmp$$Register, $vtmp$$FloatRegister, __ B, 0);\n-    __ cmpw($tmp$$Register, zr);\n+    __ umov(rscratch1, $vtmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, zr);\n@@ -5794,1 +5794,1 @@\n-instruct vtest_alltrue_neon(rFlagsReg cr, vReg src1, vReg src2, iRegINoSp tmp, vReg vtmp) %{\n+instruct vtest_alltrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg vtmp) %{\n@@ -5798,2 +5798,2 @@\n-  effect(TEMP tmp, TEMP vtmp);\n-  format %{ \"vtest_alltrue_neon $src1\\t# KILL $tmp, $vtmp\" %}\n+  effect(TEMP vtmp);\n+  format %{ \"vtest_alltrue_neon $src1\\t# KILL $vtmp\" %}\n@@ -5805,2 +5805,2 @@\n-    __ umov($tmp$$Register, $vtmp$$FloatRegister, __ B, 0);\n-    __ cmpw($tmp$$Register, 0xff);\n+    __ umov(rscratch1, $vtmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, 0xff);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -4125,1 +4125,1 @@\n-instruct vtest_anytrue_neon(rFlagsReg cr, vReg src1, vReg src2, iRegINoSp tmp, vReg vtmp) %{\n+instruct vtest_anytrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg vtmp) %{\n@@ -4128,3 +4128,3 @@\n-  match(Set cr (VectorTest src1 src2 ));\n-  effect(TEMP tmp, TEMP vtmp);\n-  format %{ \"vtest_anytrue_neon $src1\\t# KILL $tmp, $vtmp\" %}\n+  match(Set cr (VectorTest src1 src2));\n+  effect(TEMP vtmp);\n+  format %{ \"vtest_anytrue_neon $src1\\t# KILL $vtmp\" %}\n@@ -4136,2 +4136,2 @@\n-    __ umov($tmp$$Register, $vtmp$$FloatRegister, __ B, 0);\n-    __ cmpw($tmp$$Register, zr);\n+    __ umov(rscratch1, $vtmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, zr);\n@@ -4156,1 +4156,1 @@\n-instruct vtest_alltrue_neon(rFlagsReg cr, vReg src1, vReg src2, iRegINoSp tmp, vReg vtmp) %{\n+instruct vtest_alltrue_neon(rFlagsReg cr, vReg src1, vReg src2, vReg vtmp) %{\n@@ -4160,2 +4160,2 @@\n-  effect(TEMP tmp, TEMP vtmp);\n-  format %{ \"vtest_alltrue_neon $src1\\t# KILL $tmp, $vtmp\" %}\n+  effect(TEMP vtmp);\n+  format %{ \"vtest_alltrue_neon $src1\\t# KILL $vtmp\" %}\n@@ -4167,2 +4167,2 @@\n-    __ umov($tmp$$Register, $vtmp$$FloatRegister, __ B, 0);\n-    __ cmpw($tmp$$Register, 0xff);\n+    __ umov(rscratch1, $vtmp$$FloatRegister, __ B, 0);\n+    __ cmpw(rscratch1, 0xff);\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1802,1 +1802,7 @@\n-  Node* opd2 = unbox_vector(argument(5), vbox_type, elem_bt, num_elem);\n+  Node* opd2;\n+  if (Matcher::vectortest_needs_second_argument(booltest == BoolTest::overflow,\n+                                                opd1->bottom_type()->isa_vectmask())) {\n+    opd2 = unbox_vector(argument(5), vbox_type, elem_bt, num_elem);\n+  } else {\n+    opd2 = opd1;\n+  }\n@@ -1806,4 +1812,1 @@\n-  if (!Matcher::vectortest_needs_second_argument(booltest == BoolTest::overflow,\n-                                                 opd1->bottom_type()->isa_vectmask())) {\n-    opd2 = opd1;\n-  }\n+\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1437,1 +1437,1 @@\n-  virtual const Type *sub( const Type *, const Type * ) const { return TypeInt::CC; }\n+  virtual const Type* sub(const Type*, const Type*) const { return TypeInt::CC; }\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}