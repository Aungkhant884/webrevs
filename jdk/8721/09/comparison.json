{"files":[{"patch":"@@ -0,0 +1,135 @@\n+\/*\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* @test\n+ * @bug 4380543\n+ * @key headful\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary setMargin() does not work for AbstractButton\n+ * @run main\/manual bug4380543\n+*\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Color;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.Insets;\n+\n+import javax.swing.BoxLayout;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JRadioButton;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+public class bug4380543 {\n+    static TestFrame testObj;\n+    static String instructions\n+            = \"\"\"\n+            INSTRUCTIONS:\n+               1. Check if the Left inset(margin) is set visually\n+                  similar to other three sides around Radio Button\n+                  and CheckBox (insets set to 20 on all 4 sides).\n+               2. Rendering depends on OS and supported Look and Feels.\n+                  Verify only with those L&F where margins are visible.\n+               3. If Left inset(margin) appears too small, press Fail,\n+                  else press Pass.\n+            \"\"\";\n+    static PassFailJFrame passFailJFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                try {\n+                    passFailJFrame = new PassFailJFrame(instructions);\n+                    testObj = new TestFrame();\n+                    \/\/Adding the Test Frame to handle dispose\n+                    PassFailJFrame.addTestFrame(testObj);\n+                    PassFailJFrame.positionTestFrame(testObj, PassFailJFrame.Position.HORIZONTAL);\n+                } catch (Exception e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        });\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n+class TestFrame extends JFrame implements ActionListener {\n+    public TestFrame() {\n+        initComponents();\n+    }\n+\n+    public void initComponents() {\n+        JPanel p = new JPanel();\n+        JPanel buttonsPanel = new JPanel();\n+        buttonsPanel.setLayout(new BoxLayout(buttonsPanel, BoxLayout.Y_AXIS));\n+\n+        JRadioButton rb  = new JRadioButton(\"JRadioButton\");\n+        rb.setMargin(new Insets(20, 20, 20, 20));\n+        rb.setBackground(Color.green);\n+        rb.setAlignmentX(0.5f);\n+        buttonsPanel.add(rb);\n+\n+        JCheckBox cb  = new JCheckBox(\"JCheckBox\");\n+        cb.setMargin(new Insets(20, 20, 20, 20));\n+        cb.setBackground(Color.yellow);\n+        cb.setAlignmentX(0.5f);\n+        buttonsPanel.add(cb);\n+\n+        getContentPane().add(buttonsPanel);\n+        UIManager.LookAndFeelInfo[] lookAndFeel = UIManager.getInstalledLookAndFeels();\n+        for (UIManager.LookAndFeelInfo look : lookAndFeel) {\n+            JButton btn = new JButton(look.getName());\n+            btn.setActionCommand(look.getClassName());\n+            btn.addActionListener(this);\n+            p.add(btn);\n+        }\n+\n+        getContentPane().add(p,BorderLayout.SOUTH);\n+\n+        setSize(500, 300);\n+        setVisible(true);\n+    }\n+\n+    private static void setLookAndFeel(String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf);\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    \/\/Changing the Look and Feel on user selection\n+    public void actionPerformed(ActionEvent e) {\n+        setLookAndFeel(e.getActionCommand());\n+        SwingUtilities.updateComponentTreeUI(this);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JRadioButton\/bug4380543.java","additions":135,"deletions":0,"binary":false,"changes":135,"status":"added"}]}