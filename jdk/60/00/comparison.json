{"files":[{"patch":"@@ -233,11 +233,0 @@\n-void JvmtiEnvThreadState::clear_to_frame_pop(int frame_number)  {\n-#ifdef ASSERT\n-  Thread *current = Thread::current();\n-#endif\n-  assert(get_thread() == current || current == get_thread()->active_handshaker(),\n-         \"frame pop data only accessible from same thread or direct handshake\");\n-  JvmtiFramePop fpop(frame_number);\n-  JvmtiEventController::clear_to_frame_pop(this, fpop);\n-}\n-\n-\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvThreadState.cpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -181,1 +181,0 @@\n-  void clear_to_frame_pop(int frame_number);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvThreadState.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -982,3 +982,0 @@\n-\n-\n-\n@@ -987,1 +984,1 @@\n-  assert_lock_strong(JvmtiThreadState_lock);\n+  assert(JvmtiThreadState_lock->is_locked(), \"Must be locked.\");\n@@ -991,1 +988,0 @@\n-\n@@ -994,1 +990,1 @@\n-  assert_lock_strong(JvmtiThreadState_lock);\n+  assert(JvmtiThreadState_lock->is_locked(), \"Must be locked.\");\n@@ -996,7 +992,0 @@\n-}\n-\n-\n-void\n-JvmtiEventController::clear_to_frame_pop(JvmtiEnvThreadState *ets, JvmtiFramePop fpop) {\n-  assert_lock_strong(JvmtiThreadState_lock);\n-  JvmtiEventControllerPrivate::clear_to_frame_pop(ets, fpop);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -229,1 +229,0 @@\n-  static void clear_to_frame_pop(JvmtiEnvThreadState *env_thread, JvmtiFramePop fpop);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}