{"files":[{"patch":"@@ -117,4 +117,5 @@\n-  Node *r = iff->in(0);\n-  if( !r->is_Region() ) return NULL;\n-  if (r->is_Loop()) return NULL;\n-  if( phi->region() != r ) return NULL;\n+  Node* r = iff->in(0);\n+  if (!r->is_Region() || r->is_Loop() || phi->region() != r) {\n+    return NULL;\n+  }\n+\n@@ -127,0 +128,16 @@\n+  uint non_top_inputs = 0;\n+  for (uint i = 1; i < r->req(); i++) {\n+    Node* in = r->in(i);\n+    if (in != NULL && !in->is_top() && \/\/ Input is not top?\n+        !(in->in(0) != NULL && in->in(0)->req() == 1 && in->in(0)->is_top())) {\n+      \/\/ Also check the control input of the region's input to catch the rare case of a dying loop header region\n+      \/\/ (that is not yet a LoopNode before loop opts) whose last predicate If was already replaced by top but\n+      \/\/ not its IfProj. The projection with a top input is an input into the region.\n+      non_top_inputs++;\n+    }\n+  }\n+  if (non_top_inputs <= 1) {\n+    \/\/ Bail out as Region will be removed anyways.\n+    return NULL;\n+  }\n+\n@@ -246,0 +263,2 @@\n+      \/\/ Bail out if splitting through a region with a predicate input (could\n+      \/\/ also be a loop header before loop opts creates a LoopNode for it).\n","filename":"src\/hotspot\/share\/opto\/ifnode.cpp","additions":23,"deletions":4,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key stress randomness\n+ * @requires vm.compiler2.enabled\n+ * @bug 8268019\n+ * @summary Splitting an If through a dying loop header region that is not a LoopNode, yet, results in a dead data loop.\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadLoopSplitIfLoop::test -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+StressIGVN -XX:StressSeed=2382674767 -XX:CompileCommand=dontinline,compiler.c2.TestDeadLoopSplitIfLoop::test\n+ *                   compiler.c2.TestDeadLoopSplitIfLoop\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:CompileCommand=compileonly,compiler.c2.TestDeadLoopSplitIfLoop::test -XX:+UnlockDiagnosticVMOptions\n+ *                   -XX:+StressIGVN -XX:CompileCommand=dontinline,compiler.c2.TestDeadLoopSplitIfLoop::test\n+ *                   compiler.c2.TestDeadLoopSplitIfLoop\n+ *\/\n+package compiler.c2;\n+\n+public class TestDeadLoopSplitIfLoop {\n+    int a;\n+    int b;\n+    boolean c;\n+\n+    public static void main(String[] g) {\n+        TestDeadLoopSplitIfLoop h = new TestDeadLoopSplitIfLoop();\n+        h.test();\n+    }\n+\n+    void test() {\n+        int e = 4;\n+        long f[] = new long[a];\n+        if (c) {\n+        } else if (c) {\n+            \/\/ Dead path is removed after parsing which results in a dead data loop for certain node orderings in IGVN.\n+            switch (126) {\n+                case 126:\n+                    do {\n+                        f[e] = b;\n+                        switch (6) {\n+                            case 7:\n+                                f = f;\n+                        }\n+                    } while (e++ < 93);\n+            }\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestDeadLoopSplitIfLoop.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"}]}