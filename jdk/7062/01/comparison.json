{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,4 +99,0 @@\n-  \/\/ Latency from the beginning of the containing basic block (base 1)\n-  \/\/ for each node.\n-  unsigned short *_node_latency;\n-\n@@ -165,4 +161,0 @@\n-  \/\/ Compute the local latencies walking forward over the list of\n-  \/\/ nodes for a basic block\n-  void ComputeLocalLatenciesForward(const Block *bb);\n-\n@@ -2030,1 +2022,0 @@\n-  _node_latency    = NEW_ARENA_ARRAY(arena, unsigned short, node_max);\n@@ -2038,1 +2029,0 @@\n-  memset(_node_latency,       0, node_max * sizeof(unsigned short));\n@@ -2144,48 +2134,0 @@\n-\/\/ Compute the latency of all the instructions.  This is fairly simple,\n-\/\/ because we already have a legal ordering.  Walk over the instructions\n-\/\/ from first to last, and compute the latency of the instruction based\n-\/\/ on the latency of the preceding instruction(s).\n-void Scheduling::ComputeLocalLatenciesForward(const Block *bb) {\n-#ifndef PRODUCT\n-  if (_cfg->C->trace_opto_output())\n-    tty->print(\"# -> ComputeLocalLatenciesForward\\n\");\n-#endif\n-\n-  \/\/ Walk over all the schedulable instructions\n-  for( uint j=_bb_start; j < _bb_end; j++ ) {\n-\n-    \/\/ This is a kludge, forcing all latency calculations to start at 1.\n-    \/\/ Used to allow latency 0 to force an instruction to the beginning\n-    \/\/ of the bb\n-    uint latency = 1;\n-    Node *use = bb->get_node(j);\n-    uint nlen = use->len();\n-\n-    \/\/ Walk over all the inputs\n-    for ( uint k=0; k < nlen; k++ ) {\n-      Node *def = use->in(k);\n-      if (!def)\n-        continue;\n-\n-      uint l = _node_latency[def->_idx] + use->latency(k);\n-      if (latency < l)\n-        latency = l;\n-    }\n-\n-    _node_latency[use->_idx] = latency;\n-\n-#ifndef PRODUCT\n-    if (_cfg->C->trace_opto_output()) {\n-      tty->print(\"# latency %4d: \", latency);\n-      use->dump();\n-    }\n-#endif\n-  }\n-\n-#ifndef PRODUCT\n-  if (_cfg->C->trace_opto_output())\n-    tty->print(\"# <- ComputeLocalLatenciesForward\\n\");\n-#endif\n-\n-} \/\/ end ComputeLocalLatenciesForward\n-\n@@ -2767,3 +2709,0 @@\n-    \/\/ Compute intra-bb latencies for the nodes\n-    ComputeLocalLatenciesForward(bb);\n-\n","filename":"src\/hotspot\/share\/opto\/output.cpp","additions":1,"deletions":62,"binary":false,"changes":63,"status":"modified"}]}