{"files":[{"patch":"@@ -256,4 +256,5 @@\n-     * extension cannot be determined, then the empty string is returned.  This\n-     * will occur if the path has zero elements ({@link #getFileName()} returns\n-     * {@code null}), or the file name string does not contain a dot, only the\n-     * first character is a dot, or the last character is a dot.\n+     * extension cannot be determined, then the parameter {@code ext} is\n+     * returned.  This will occur if the path has zero elements\n+     * ({@link #getFileName()} returns {@code null}), or the file name string\n+     * does not contain a dot, only the first character is a dot, or the last\n+     * character is a dot.\n@@ -264,0 +265,1 @@\n+     *     String ext; \/\/ default extension\n@@ -267,1 +269,1 @@\n-     *         name.substring(lastDot + 1) : \"\";\n+     *         name.substring(lastDot + 1) : ext;\n@@ -270,1 +272,5 @@\n-     * @return  the file name extension of this path, or the empty string\n+     * @param   ext\n+     *          the value to return if the extension is indeterminate;\n+     *          may be {@code null}\n+     *\n+     * @return  the file name extension of this path, or {@code ext}\n@@ -275,1 +281,1 @@\n-    default String getExtension() {\n+    default String getExtension(String ext) {\n@@ -278,1 +284,1 @@\n-            return \"\";\n+            return ext;\n@@ -292,1 +298,2 @@\n-        return \"\";\n+\n+        return ext;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"}]}