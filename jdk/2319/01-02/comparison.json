{"files":[{"patch":"@@ -253,6 +253,8 @@\n-     * where the extension is defined to be the portion of the file name string\n-     * after the last dot ('.').  If the first character in the name is a dot it\n-     * is ignored.  If the extension cannot be determined, then the empty string\n-     * is returned.  This will occur if the file name has fewer than three\n-     * characters, does not contain a dot, only the first character is a dot,\n-     * or the last character is a dot.\n+     * where the extension is defined to be the portion of the {@code String}\n+     * representation of the file name after the last dot ('.').  If the first\n+     * character in the file name string is a dot it is ignored.  If the\n+     * extension cannot be determined, then the empty string is returned.  This\n+     * will occur if the path has zero elements ({@link #getFileName()} returns\n+     * {@code null}), or the file name string  has fewer than three characters,\n+     * does not contain a dot, only the first character is a dot, or the last\n+     * character is a dot.\n@@ -274,2 +276,7 @@\n-        String name = getFileName().toString();\n-        int length = name.length();\n+        Path fileName = getFileName();\n+        if (fileName == null) {\n+            return \"\";\n+        }\n+\n+        String fileNameString = fileName.toString();\n+        int length = fileNameString.length();\n@@ -277,1 +284,1 @@\n-        \/\/ Indeterminate if name is too short\n+        \/\/ Indeterminate if fileNameString is too short\n@@ -279,1 +286,1 @@\n-            int lastDotIndex = name.lastIndexOf('.');\n+            int lastDotIndex = fileNameString.lastIndexOf('.');\n@@ -282,1 +289,1 @@\n-                return name.substring(lastDotIndex + 1);\n+                return fileNameString.substring(lastDotIndex + 1);\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"}]}