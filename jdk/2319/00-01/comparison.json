{"files":[{"patch":"@@ -256,2 +256,3 @@\n-     * is returned.  This will occur if the file name has length less than two,\n-     * only the first character is a dot, or the last character is a dot.\n+     * is returned.  This will occur if the file name has fewer than three\n+     * characters, does not contain a dot, only the first character is a dot,\n+     * or the last character is a dot.\n@@ -260,3 +261,1 @@\n-     * If the file name string is the typical case containing at least one dot\n-     * at neither the first nor the last character, then the default\n-     * implementation is equivalent for this path to:\n+     * The default implementation is equivalent for this path to:\n@@ -264,2 +263,5 @@\n-     *     String filename = getFileName().toString();\n-     *     filename.substring(filename.lastIndexOf('.') + 1);\n+     *     String name = getFileName().toString();\n+     *     int length = name.length();\n+     *     int lastDot = name.lastIndexOf('.');\n+     *     length > 2 && lastDot > 0 && lastDot < length - 1 ?\n+     *         name.substring(lastDot + 1) : \"\";\n@@ -274,1 +276,0 @@\n-        String extension = \"\";\n@@ -276,2 +277,2 @@\n-        \/\/ Indeterminate if name is too short or equal to \"..\".\n-        if (length > 1 && !name.equals(\"..\")) {\n+        \/\/ Indeterminate if name is too short\n+        if (length > 2) {\n@@ -281,1 +282,1 @@\n-                extension = name.substring(lastDotIndex + 1);\n+                return name.substring(lastDotIndex + 1);\n@@ -284,1 +285,1 @@\n-        return extension;\n+        return \"\";\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":13,"deletions":12,"binary":false,"changes":25,"status":"modified"}]}