{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -251,0 +251,50 @@\n+    \/**\n+     * Returns the file name extension of this path as a {@code String},\n+     * or a default value.  The extension is defined to be the portion of\n+     * the {@code String} representation of the file name after the last\n+     * dot ('.').  If the first character in the file name string is a dot\n+     * it is ignored.  If the extension cannot be determined, then the\n+     * parameter {@code defaultExtension} is returned.  This will occur if\n+     * the path has zero elements ({@link #getFileName()} returns\n+     * {@code null}), or the file name string does not contain a dot, only\n+     * the first character is a dot, or the last character is a dot.\n+     *\n+     * @implSpec\n+     * The default implementation is equivalent for this path to:\n+     * <pre>{@code\n+     *     String name = getFileName().toString();\n+     *     int lastDot = name.lastIndexOf('.');\n+     *     lastDot > 0 && lastDot < name.length() - 1 ?\n+     *         name.substring(lastDot + 1) : defaultExtension;\n+     * }<\/pre>\n+     *\n+     * @param   defaultExtension\n+     *          the value to return if the extension is indeterminate;\n+     *          may be {@code null}\n+     *\n+     * @return  the file name extension of this path, or {@code ext}\n+     *          if the extension is indeterminate\n+     *\n+     * @since 17\n+     *\/\n+    default String getExtension(String defaultExtension) {\n+        Path fileName = getFileName();\n+        if (fileName == null) {\n+            return defaultExtension;\n+        }\n+\n+        String fileNameString = fileName.toString();\n+        int length = fileNameString.length();\n+\n+        \/\/ Indeterminate if fileNameString is too short\n+        if (length > 2) {\n+            int lastDotIndex = fileNameString.lastIndexOf('.');\n+            \/\/ Indeterminate if no dot or found at last or only the first index\n+            if (lastDotIndex > 0 && lastDotIndex < length - 1) {\n+                return fileNameString.substring(lastDotIndex + 1);\n+            }\n+        }\n+\n+        return defaultExtension;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":51,"deletions":1,"binary":false,"changes":52,"status":"modified"}]}