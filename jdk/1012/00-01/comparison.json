{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -576,2 +576,6 @@\n-                    \/\/ \"last\", it works for now.\n-                    if (dom < 0 || dom >= 24) {\n+                    \/\/ \"last\", it works for now. From tzdata2020d this hacking\n+                    \/\/ will not work for Asia\/Gaza and Asia\/Hebron which follow\n+                    \/\/ Palestine DST rules.\n+                    if (dom < 0 || dom >= 24 &&\n+\t\t\t\t    !(zoneId.equals(\"Asia\/Gaza\") ||\n+\t\t\t\t      zoneId.equals(\"Asia\/Hebron\"))) {\n@@ -599,1 +603,3 @@\n-                    if (dom < 0 || dom >= 24) {\n+                    if (dom < 0 || dom >= 24 &&\n+                                    !(zoneId.equals(\"Asia\/Gaza\") ||\n+                                      zoneId.equals(\"Asia\/Hebron\"))) {\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -199,3 +199,1 @@\n-                zid.equals(\"Iran\") || \/\/ last rule mismatch\n-                zid.equals(\"Asia\/Gaza\") || \/\/ last rule mismatch\n-                zid.equals(\"Asia\/Hebron\")) { \/\/ last rule mismatch\n+                zid.equals(\"Iran\")) { \/\/ last rule mismatch\n","filename":"test\/jdk\/sun\/util\/calendar\/zi\/TestZoneInfo310.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}