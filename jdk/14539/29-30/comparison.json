{"files":[{"patch":"@@ -113,2 +113,2 @@\n-    public static final String VECTOR_SIZE_ANY = VECTOR_SIZE + VECTOR_SIZE_TAG_ANY; \/\/ default for count \"=0\" and failOn\n-    public static final String VECTOR_SIZE_MAX = VECTOR_SIZE + VECTOR_SIZE_TAG_MAX; \/\/ default in count\n+    public static final String VECTOR_SIZE_ANY = VECTOR_SIZE + VECTOR_SIZE_TAG_ANY; \/\/ default for counts \"=0\" and failOn\n+    public static final String VECTOR_SIZE_MAX = VECTOR_SIZE + VECTOR_SIZE_TAG_MAX; \/\/ default in counts\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+import compiler.lib.ir_framework.driver.irmatching.irrule.constraint.Constraint;\n+\n@@ -27,1 +29,1 @@\n- * Exception used to signal that the Constraint should always suceed.\n+ * Exception used to signal that a {@link Constraint} should always succeed.\n@@ -31,1 +33,1 @@\n-        super(\"Unhandled SuccessOnlyConstraintException, should have created a Constraint that alway suceeds:\" + System.lineSeparator() + message);\n+        super(\"Unhandled SuccessOnlyConstraintException, should have created a Constraint that always succeeds:\" + System.lineSeparator() + message);\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/SuccessOnlyConstraintException.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-                case Comparison.Bound.LOWER -> {\n+                case LOWER -> {\n@@ -105,1 +105,1 @@\n-                case Comparison.Bound.UPPER -> {\n+                case UPPER -> {\n@@ -120,1 +120,1 @@\n-                case Comparison.Bound.EQUAL -> {\n+                case EQUAL -> {\n@@ -127,1 +127,1 @@\n-                        \/\/ or too few cases. Because of this we forbid this case in general.\n+                        \/\/ or too few cases. We therefore skip such a constraint and treat it as success.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/checkattribute\/parsing\/RawIRNode.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import compiler.lib.ir_framework.IR;\n@@ -28,1 +27,0 @@\n-import compiler.lib.ir_framework.shared.Comparison;\n@@ -38,1 +36,0 @@\n-    public SuccessConstraintCheck() {}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/SuccessConstraintCheck.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -56,12 +56,0 @@\n-        System.err.println(\"--- VMInfo from Test VM ---\");\n-        System.err.println(\"cpuFeatures:   \" + getStringValue(\"cpuFeatures\"));\n-        System.err.println(\"MaxVectorSize: \" + getLongValue(\"MaxVectorSize\"));\n-        System.err.println(\"MaxVectorSizeIsDefault: \" + getLongValue(\"MaxVectorSizeIsDefault\"));\n-        System.err.println(\"LoopMaxUnroll: \" + getLongValue(\"LoopMaxUnroll\"));\n-        System.err.println(\"UseAVX: \" + getLongValue(\"UseAVX\"));\n-        System.err.println(\"UseAVXIsDefault: \" + getLongValue(\"UseAVXIsDefault\"));\n-        if (isDefaultCascadeLake()) {\n-            System.err.println(\" -> You are on default Cascade Lake\");\n-            System.err.println(\"   -> SuperWord expected to run with 32 byte, not 64 byte, VectorAPI expected to use 64 byte\");\n-            System.err.println(\"   -> \\\"canTrustVectorSize == false\\\", some vector node IR rules are made weaker.\");\n-        }\n@@ -107,2 +95,2 @@\n-     * make use of the full MaxVectorSize. For Cascade Lake we by default only use\n-     * 32 bytes for SuperWord even though MaxVectorSize is 64. But the VectorAPI still\n+     * make use of the full MaxVectorSize. For Cascade Lake, we only use 32 bytes for\n+     * SuperWord by default even though MaxVectorSize is 64. But the VectorAPI still\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/parser\/VMInfo.java","additions":2,"deletions":14,"binary":false,"changes":16,"status":"modified"}]}