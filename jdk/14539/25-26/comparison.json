{"files":[{"patch":"@@ -2087,1 +2087,2 @@\n-  return is_intel_skylake() && _stepping >= 5;\n+  return true; \/\/ TODO\n+  \/\/ return is_intel_skylake() && _stepping >= 5;\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -108,2 +108,0 @@\n-    public static final String IMPOSSIBLE_NODE_REGEX = \"impossible_node_regex\";\n-\n@@ -2329,1 +2327,3 @@\n-        long maxBytes = 64;\n+        long maxVectorSize = vmInfo.getLongValue(\"MaxVectorSize\");\n+        TestFormat.checkNoReport(maxVectorSize > 0, \"VMInfo: MaxVectorSize is not larger than zero\");\n+        long maxBytes = maxVectorSize;\n@@ -2332,1 +2332,1 @@\n-            maxBytes = getMaxElementsForTypeOnX86(typeString, vmInfo);\n+            maxBytes = Math.min(maxBytes, getMaxElementsForTypeOnX86(typeString, vmInfo));\n@@ -2335,4 +2335,0 @@\n-        long maxVectorSize = vmInfo.getLongValue(\"MaxVectorSize\");\n-        TestFormat.checkNoReport(maxVectorSize > 0, \"VMInfo: MaxVectorSize is not larger than zero\");\n-        maxBytes = Math.min(maxBytes, maxVectorSize);\n-\n@@ -2348,1 +2344,1 @@\n-        \/\/ restrict maxBytes for specific features, see Matcher::vector_width_in_bytes:\n+        \/\/ restrict maxBytes for specific features, see Matcher::vector_width_in_bytes in x86.ad:\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-However, the size does not have to be specified. In most cases, one either wants to have vectorization at the maximal possible vector width, or no vectorization at all. Hence, for lower bound counts ('>' or '>=') the default size is `IRNode.VECTOR_SIZE_MAX`, and for upper bound counts ('<' or '<=' or '=0' or failOn) the default is `IRNode.VECTOR_SIZE_ANY`. Equal count comparisons with a strictly positive count (e.g. '=2') are not allowed for vector nodes. On machines with 'canTrustVectorSize == false' (cascade lake) the maximal vector width is not predictable currently. Hence, on such a machine we have to automatically weaken the IR rules. All lower bound counts are performed checking with `IRNode.VECTOR_SIZE_ANY`. Upper bound counts with no user specified size are performed with `IRNode.VECTOR_SIZE_ANY` but upper bound counts with a user specified size are not checked at all. Details and reasoning can be found in [RawIRNode](.\/driver\/irmatching\/irrule\/checkattribute\/parsing\/RawIRNode.java).\n+However, the size does not have to be specified. In most cases, one either wants to have vectorization at the maximal possible vector width, or no vectorization at all. Hence, for lower bound counts ('>' or '>=') and equal count comparisons with strictly positive count (e.g. \"=2\") the default size is `IRNode.VECTOR_SIZE_MAX`, and for upper bound counts ('<' or '<=' or '=0' or failOn) the default is `IRNode.VECTOR_SIZE_ANY`. On machines with 'canTrustVectorSize == false' (default Cascade Lake) the maximal vector width is not predictable currently (32 byte for SuperWord and 64 byte for VectorAPI). Hence, on such a machine we have to automatically weaken the IR rules. All lower bound counts are performed checking with `IRNode.VECTOR_SIZE_ANY`. Upper bound counts with no user specified size are performed with `IRNode.VECTOR_SIZE_ANY` but upper bound counts with a user specified size are not checked at all. Equal count comparisons with strictly positive count are also not checked at all. Details and reasoning can be found in [RawIRNode](.\/driver\/irmatching\/irrule\/checkattribute\/parsing\/RawIRNode.java).\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/README.md","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.ir_framework.driver;\n+\n+\/**\n+ * Exception used to signal that the Constraint should always suceed.\n+ *\/\n+public class SuccessOnlyConstraintException extends RuntimeException {\n+    public SuccessOnlyConstraintException(String message) {\n+        super(\"Unhandled SuccessOnlyConstraintException, should have created a Constraint that alway suceeds:\" + System.lineSeparator() + message);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/SuccessOnlyConstraintException.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023 Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import compiler.lib.ir_framework.shared.TestFrameworkException;\n@@ -32,0 +31,1 @@\n+import compiler.lib.ir_framework.driver.SuccessOnlyConstraintException;\n@@ -72,2 +72,0 @@\n-        TestFormat.checkNoReport(bound != Comparison.Bound.EQUAL,\n-                                 \"IR Vector Nodes do not allow equal comparison with strictly positive number. Please use \\\"<=\\\" and \\\">=\\\"\");\n@@ -79,0 +77,1 @@\n+            \/\/ Size is explicitly stated\n@@ -97,0 +96,1 @@\n+                        \/\/ No size specified, so assume maximal size\n@@ -99,1 +99,1 @@\n-                        System.out.println(\"WARNING: you are on a system with \\\"canTrustVectorSize == false\\\" (cascade lake).\");\n+                        System.out.println(\"WARNING: you are on a system with \\\"canTrustVectorSize == false\\\" (default Cascade Lake).\");\n@@ -112,1 +112,1 @@\n-                        System.out.println(\"WARNING: you are on a system with \\\"canTrustVectorSize == false\\\" (cascade lake).\");\n+                        System.out.println(\"WARNING: you are on a system with \\\"canTrustVectorSize == false\\\" (default Cascade Lake).\");\n@@ -114,1 +114,1 @@\n-                        return IRNode.IMPOSSIBLE_NODE_REGEX;\n+                        throw new SuccessOnlyConstraintException(\"upper bound with specified size\");\n@@ -121,4 +121,11 @@\n-                    \/\/ Equal comparison to a strictly positive number would lead us to an impossible\n-                    \/\/ situation: we might have to know the exact vector size or else we count too many\n-                    \/\/ or too few cases. Because of this we forbid this case in general.\n-                    throw new TestFrameworkException(\"impossible\");\n+                    if (vmInfo.canTrustVectorSize()) {\n+                        \/\/ No size specified, so assume maximal size\n+                        size = IRNode.VECTOR_SIZE_TAG_MAX;\n+                    } else {\n+                        \/\/ Equal comparison to a strictly positive number would lead us to an impossible\n+                        \/\/ situation: we might have to know the exact vector size or else we count too many\n+                        \/\/ or too few cases. Because of this we forbid this case in general.\n+                        System.out.println(\"WARNING: you are on a system with \\\"canTrustVectorSize == false\\\" (default Cascade Lake).\");\n+                        System.out.println(\"         The equal count comparison rule for \\\"\" + node + \"\\\" cannot be checked.\");\n+                        throw new SuccessOnlyConstraintException(\"equal count comparison\");\n+                    }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/checkattribute\/parsing\/RawIRNode.java","additions":18,"deletions":11,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -64,0 +64,6 @@\n+    public static Constraint createSuccess() {\n+        String nodeRegex = \"impossible_regex\";\n+        String compilationOutput = \"\"; \/\/ empty\n+        return new Constraint(new SuccessConstraintCheck(), nodeRegex, compilationOutput);\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/Constraint.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.lib.ir_framework.driver.irmatching.irrule.constraint;\n+\n+import compiler.lib.ir_framework.IR;\n+import compiler.lib.ir_framework.driver.irmatching.MatchResult;\n+import compiler.lib.ir_framework.shared.Comparison;\n+\n+import java.util.List;\n+\n+\/**\n+ * This class provides a check that always succeeds.\n+ *\n+ * @see Constraint\n+ *\/\n+class SuccessConstraintCheck implements ConstraintCheck {\n+    public SuccessConstraintCheck() {}\n+\n+    @Override\n+    public MatchResult check(List<String> matchedNodes) {\n+        return SuccessResult.getInstance();\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/SuccessConstraintCheck.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -34,0 +34,1 @@\n+import compiler.lib.ir_framework.driver.SuccessOnlyConstraintException;\n@@ -98,1 +99,5 @@\n-        return Constraint.createCounts(rawIRNode.regex(compilePhase, vmInfo, getComparisonBound()), constraintIndex, comparison, compilationOutput);\n+        try {\n+            return Constraint.createCounts(rawIRNode.regex(compilePhase, vmInfo, getComparisonBound()), constraintIndex, comparison, compilationOutput);\n+        } catch (SuccessOnlyConstraintException e) {\n+            return Constraint.createSuccess();\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/raw\/RawCountsConstraint.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+        TestFramework.check(isKey(\"MaxVectorSizeIsDefault\"), \"VMInfo does not contain MaxVectorSizeIsDefault\");\n@@ -53,0 +54,2 @@\n+        TestFramework.check(isKey(\"UseAVX\"), \"VMInfo does not contain UseAVX\");\n+        TestFramework.check(isKey(\"UseAVXIsDefault\"), \"VMInfo does not contain UseAVXIsDefault\");\n@@ -55,4 +58,0 @@\n-        if (!canTrustVectorSize()) {\n-            System.err.println(\" -> \\\"canTrustVectorSize == false\\\". Some vector node checks are weaker on this platform.\");\n-            System.err.println(\"   -> isCascadeLake: \" + isCascadeLake());\n-        }\n@@ -60,0 +59,1 @@\n+        System.err.println(\"MaxVectorSizeIsDefault: \" + getLongValue(\"MaxVectorSizeIsDefault\"));\n@@ -61,0 +61,7 @@\n+        System.err.println(\"UseAVX: \" + getLongValue(\"UseAVX\"));\n+        System.err.println(\"UseAVXIsDefault: \" + getLongValue(\"UseAVXIsDefault\"));\n+        if (isDefaultCascadeLake()) {\n+            System.err.println(\" -> You are on default Cascade Lake\");\n+            System.err.println(\"   -> SuperWord expected to run with 32 byte, not 64 byte, VectorAPI expected to use 64 byte\");\n+            System.err.println(\"   -> \\\"canTrustVectorSize == false\\\", some vector node IR rules are made weaker.\");\n+        }\n@@ -82,6 +89,15 @@\n-        Matcher matcher = CPU_SKYLAKE_PATTERN.matcher(getStringValue(\"cpuFeatures\"));\n-        if (!matcher.find()) {\n-            return false; \/\/ skylake pattern not found\n-        }\n-        String stepping = matcher.group(1).trim();\n-        return Long.parseLong(stepping) >= 5; \/\/ this makes it cascade lake\n+        return true; \/\/ TODO\n+        \/\/ Matcher matcher = CPU_SKYLAKE_PATTERN.matcher(getStringValue(\"cpuFeatures\"));\n+        \/\/ if (!matcher.find()) {\n+        \/\/     return false; \/\/ skylake pattern not found\n+        \/\/ }\n+        \/\/ String stepping = matcher.group(1).trim();\n+        \/\/ return Long.parseLong(stepping) >= 5; \/\/ this makes it cascade lake\n+    }\n+\n+    public boolean isDefaultCascadeLake() {\n+        \/\/ See VM_Version::is_default_intel_cascade_lake\n+        return isCascadeLake() &&\n+               getLongValue(\"MaxVectorSizeIsDefault\") == 1 &&\n+               getLongValue(\"UseAVXIsDefault\") == 1 &&\n+               getLongValue(\"UseAVX\") > 2;\n@@ -93,3 +109,3 @@\n-     * 32 bytes even though MaxVectorSize is 64. But if the flag is explicitly set to\n-     * 64 then we use 64 bytes. Thus MaxVectorSize is not a reliable indicator for the\n-     * expected maximal vector size on that platform.\n+     * 32 bytes for SuperWord even though MaxVectorSize is 64. But the VectorAPI still\n+     * uses 64 bytes. Thus MaxVectorSize is not a reliable indicator for the expected\n+     * maximal vector size on that platform.\n@@ -98,1 +114,1 @@\n-        return !isCascadeLake();\n+        return !isDefaultCascadeLake();\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/parser\/VMInfo.java","additions":30,"deletions":14,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -42,0 +42,2 @@\n+\n+        \/\/ CPU feature independent info\n@@ -44,1 +46,1 @@\n-        long maxVectorSize = WHITE_BOX.getIntxVMFlag(\"MaxVectorSize\");\n+\tlong maxVectorSize = WHITE_BOX.getIntxVMFlag(\"MaxVectorSize\");\n@@ -46,0 +48,4 @@\n+\tboolean maxVectorSizeIsDefault = WHITE_BOX.isDefaultVMFlag(\"MaxVectorSize\");\n+        vmInfo.append(\"MaxVectorSizeIsDefault:\")\n+              .append(maxVectorSizeIsDefault ? 1 : 0)\n+              .append(System.lineSeparator());\n@@ -48,0 +54,13 @@\n+\n+        \/\/ CPU feature dependent info\n+        long useAVX = 0;\n+        boolean useAVXIsDefault = true;\n+        if (cpuFeatures.contains(\" sse, \")) {\n+\t    useAVX = WHITE_BOX.getIntVMFlag(\"UseAVX\");\n+\t    useAVXIsDefault = WHITE_BOX.isDefaultVMFlag(\"UseAVX\");\n+        }\n+        vmInfo.append(\"UseAVX:\").append(useAVX).append(System.lineSeparator());\n+        vmInfo.append(\"UseAVXIsDefault:\")\n+              .append(useAVXIsDefault ? 1 : 0)\n+              .append(System.lineSeparator());\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/VMInfoPrinter.java","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -245,2 +245,1 @@\n-    @IR(counts = {IRNode.AND_VI, \">=1\"})\n-    @IR(counts = {IRNode.AND_VI, \"<=1\"})\n+    @IR(counts = {IRNode.AND_VI, \"1\"})\n@@ -261,2 +260,1 @@\n-    @IR(counts = {IRNode.AND_VL, \">=1\"})\n-    @IR(counts = {IRNode.AND_VL, \"<=1\"})\n+    @IR(counts = {IRNode.AND_VL, \"1\"})\n@@ -277,2 +275,1 @@\n-    @IR(counts = {IRNode.AND_VI, \">=1\"})\n-    @IR(counts = {IRNode.AND_VI, \"<=1\"})\n+    @IR(counts = {IRNode.AND_VI, \"1\"})\n@@ -293,2 +290,1 @@\n-    @IR(counts = {IRNode.AND_VL, \">=1\"})\n-    @IR(counts = {IRNode.AND_VL, \"<=1\"})\n+    @IR(counts = {IRNode.AND_VL, \"1\"})\n@@ -309,2 +305,1 @@\n-    @IR(counts = {IRNode.AND_VI, \">=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n-    @IR(counts = {IRNode.AND_VI, \"<=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.AND_VI, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -331,2 +326,1 @@\n-    @IR(counts = {IRNode.AND_VL, \">=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n-    @IR(counts = {IRNode.AND_VL, \"<=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.AND_VL, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -353,2 +347,1 @@\n-    @IR(counts = {IRNode.AND_VI, \">=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n-    @IR(counts = {IRNode.AND_VI, \"<=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.AND_VI, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -516,2 +509,1 @@\n-    @IR(counts = {IRNode.OR_VI, \">=1\"})\n-    @IR(counts = {IRNode.OR_VI, \"<=1\"})\n+    @IR(counts = {IRNode.OR_VI, \"1\"})\n@@ -532,2 +524,1 @@\n-    @IR(counts = {IRNode.OR_VL, \">=1\"})\n-    @IR(counts = {IRNode.OR_VL, \"<=1\"})\n+    @IR(counts = {IRNode.OR_VL, \"1\"})\n@@ -548,2 +539,1 @@\n-    @IR(counts = {IRNode.OR_VI, \">=1\"})\n-    @IR(counts = {IRNode.OR_VI, \"<=1\"})\n+    @IR(counts = {IRNode.OR_VI, \"1\"})\n@@ -564,2 +554,1 @@\n-    @IR(counts = {IRNode.OR_VL, \">=1\"})\n-    @IR(counts = {IRNode.OR_VL, \"<=1\"})\n+    @IR(counts = {IRNode.OR_VL, \"1\"})\n@@ -580,2 +569,1 @@\n-    @IR(counts = {IRNode.OR_VI, \">=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n-    @IR(counts = {IRNode.OR_VI, \"<=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.OR_VI, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -602,2 +590,1 @@\n-    @IR(counts = {IRNode.OR_VL, \">=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n-    @IR(counts = {IRNode.OR_VL, \"<=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.OR_VL, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n@@ -624,2 +611,1 @@\n-    @IR(counts = {IRNode.OR_VI, \">=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n-    @IR(counts = {IRNode.OR_VI, \"<=1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n+    @IR(counts = {IRNode.OR_VI, \"1\"}, applyIfCPUFeatureOr = {\"sve\", \"true\", \"avx512\", \"true\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorLogicalOpIdentityTest.java","additions":14,"deletions":28,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -48,2 +48,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -60,2 +59,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -72,2 +70,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -84,2 +81,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_32, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_32, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2S, IRNode.VECTOR_SIZE_32, \"1\"})\n@@ -96,2 +92,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -108,2 +103,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -120,2 +114,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -132,2 +125,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2I, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -144,2 +136,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -156,2 +147,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -168,2 +158,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -180,2 +169,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -192,2 +180,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -204,2 +191,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -216,2 +202,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -228,2 +213,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2F, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -240,2 +224,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -252,2 +235,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -264,2 +246,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -276,2 +257,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_B2D, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -288,2 +268,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -300,2 +279,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -312,2 +290,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -324,2 +301,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_32, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_32, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2B, IRNode.VECTOR_SIZE_32, \"1\"})\n@@ -336,2 +312,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -348,2 +323,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -360,2 +334,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -372,2 +345,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2I, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -384,2 +356,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -396,2 +367,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -408,2 +378,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -420,2 +389,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -432,2 +400,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -444,2 +411,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -456,2 +422,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -468,2 +433,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2F, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -480,2 +444,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -492,2 +455,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -504,2 +466,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -516,2 +477,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_S2D, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -528,2 +488,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -540,2 +499,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -552,2 +510,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -564,2 +521,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2B, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -576,2 +532,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -588,2 +543,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -600,2 +554,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -612,2 +565,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2S, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -624,2 +576,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -636,2 +587,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -648,2 +598,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -660,2 +609,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -672,2 +620,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -684,2 +631,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -696,2 +642,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -708,2 +653,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2F, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -720,2 +664,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -732,2 +675,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -744,2 +686,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -756,2 +697,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_I2D, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -768,2 +708,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -780,2 +719,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -792,2 +730,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -804,2 +741,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2B, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -816,2 +752,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -828,2 +763,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -840,2 +774,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -852,2 +785,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2S, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -864,2 +796,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -876,2 +807,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -888,2 +818,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -900,2 +829,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2I, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -912,2 +840,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -924,2 +851,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -936,2 +862,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -948,2 +873,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2F, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -960,2 +884,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -972,2 +895,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -984,2 +906,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -996,2 +917,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_L2D, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1008,2 +928,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1020,2 +939,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1032,2 +950,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1044,2 +961,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2B, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -1056,2 +972,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1068,2 +983,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1080,2 +994,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1092,2 +1005,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2S, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -1104,2 +1016,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1116,2 +1027,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1128,2 +1038,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1140,2 +1049,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2I, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -1152,2 +1060,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1164,2 +1071,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1176,2 +1082,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1188,2 +1093,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1200,2 +1104,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1212,2 +1115,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1224,2 +1126,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1236,2 +1137,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_F2D, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1248,2 +1148,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1260,2 +1159,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1272,2 +1170,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1284,2 +1181,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2B, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1296,2 +1192,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1308,2 +1203,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1320,2 +1214,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1332,2 +1225,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2S, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1344,2 +1236,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1356,2 +1247,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1368,2 +1258,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1380,2 +1269,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2I, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1392,2 +1280,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1404,2 +1291,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1416,2 +1302,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1428,2 +1313,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1440,2 +1324,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1452,2 +1335,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1464,2 +1346,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1476,2 +1357,1 @@\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_CAST_D2F, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1488,2 +1368,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1500,2 +1379,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1512,2 +1390,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -1524,2 +1401,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_32, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_32, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2S, IRNode.VECTOR_SIZE_32, \"1\"})\n@@ -1536,2 +1412,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1548,2 +1423,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1560,2 +1434,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1572,2 +1445,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2I, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -1584,2 +1456,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1596,2 +1467,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1608,2 +1478,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1620,2 +1489,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_B2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1632,2 +1500,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1644,2 +1511,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1656,2 +1522,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1668,2 +1533,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_16, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_16, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2I, IRNode.VECTOR_SIZE_16, \"1\"})\n@@ -1680,2 +1544,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1692,2 +1555,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1704,2 +1566,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1716,2 +1577,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_S2L, IRNode.VECTOR_SIZE_8, \"1\"})\n@@ -1728,2 +1588,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1740,2 +1599,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_2, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_2, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_2, \"1\"})\n@@ -1752,2 +1610,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_4, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_4, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_4, \"1\"})\n@@ -1764,2 +1621,1 @@\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_8, \">=1\"})\n-    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_8, \"<=1\"})\n+    @IR(counts = {IRNode.VECTOR_UCAST_I2L, IRNode.VECTOR_SIZE_8, \"1\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/tests\/TestVectorCast.java","additions":144,"deletions":288,"binary":false,"changes":432,"status":"modified"}]}