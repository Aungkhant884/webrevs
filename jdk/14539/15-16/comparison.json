{"files":[{"patch":"@@ -83,1 +83,1 @@\n- *                              vectorization with maximal vector width, or no vectorization of any vectro width.\n+ *                              vectorization with maximal vector width, or no vectorization of any vector width.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,6 +81,2 @@\n-            case \"!=\" -> {\n-                throw new TestFormatException(\"Not-equal comparator not supported for node count: \\\"\" + comparison.getComparator() + \"\\\". Please rewrite the rule.\");\n-            }\n-            default -> {\n-                throw new TestFormatException(\"Comparator not handled: \" + comparison.getComparator());\n-            }\n+            case \"!=\" -> throw new TestFormatException(\"Not-equal comparator not supported for node count: \\\"\" + comparison.getComparator() + \"\\\". Please rewrite the rule.\");\n+            default -> throw new TestFormatException(\"Comparator not handled: \" + comparison.getComparator());\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/raw\/RawCountsConstraint.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import compiler.lib.ir_framework.IR;\n@@ -28,2 +27,0 @@\n-import compiler.lib.ir_framework.driver.irmatching.parser.hotspot.HotSpotPidFileParser;\n-import compiler.lib.ir_framework.shared.TestFormat;\n@@ -33,1 +30,0 @@\n-import java.lang.reflect.Method;\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/parser\/VMInfoParser.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,4 +26,1 @@\n-import compiler.lib.ir_framework.IR;\n-import compiler.lib.ir_framework.IRNode;\n-import compiler.lib.ir_framework.TestFramework;\n-import compiler.lib.ir_framework.shared.*;\n+import compiler.lib.ir_framework.shared.TestFrameworkSocket;\n@@ -32,7 +29,0 @@\n-import java.lang.reflect.Method;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Objects;\n-import java.util.function.Function;\n-\n@@ -53,1 +43,1 @@\n-        vmInfo.append(\"cpuFeatures:\" + cpuFeatures).append(System.lineSeparator());\n+        vmInfo.append(\"cpuFeatures:\").append(cpuFeatures).append(System.lineSeparator());\n@@ -55,1 +45,1 @@\n-        vmInfo.append(\"MaxVectorSize:\" + maxVectorSize).append(System.lineSeparator());\n+        vmInfo.append(\"MaxVectorSize:\").append(maxVectorSize).append(System.lineSeparator());\n@@ -57,1 +47,1 @@\n-        vmInfo.append(\"LoopMaxUnroll:\" + loopMaxUnroll).append(System.lineSeparator());\n+        vmInfo.append(\"LoopMaxUnroll:\").append(loopMaxUnroll).append(System.lineSeparator());\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/test\/VMInfoPrinter.java","additions":4,"deletions":14,"binary":false,"changes":18,"status":"modified"}]}