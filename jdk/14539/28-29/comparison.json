{"files":[{"patch":"@@ -110,1 +110,1 @@\n-                        \/\/ we may count either too many nodes. We just create a impossible regex which will\n+                        \/\/ we may count either too many nodes. We just create an impossible regex which will\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/checkattribute\/parsing\/RawIRNode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-                \/\/ \"=0\" is same as setting upper bound - just like for failOn. But i we compare equals a\n-                \/\/ strictly positive number it is like setting both and upper and lower bound (equal).\n+                \/\/ \"=0\" is same as setting upper bound - just like for failOn. But if we compare equals a\n+                \/\/ strictly positive number it is like setting both upper and lower bound (equal).\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/raw\/RawCountsConstraint.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-        return Long.parseLong(stepping) >= 5; \/\/ this makes it cascade lake\n+        return Long.parseLong(stepping) >= 5; \/\/ this makes it Cascade Lake\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/parser\/VMInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}