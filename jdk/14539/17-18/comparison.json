{"files":[{"patch":"@@ -62,0 +62,2 @@\n+                TestFormat.checkNoReport(comparison.getGivenValue() > 0, \"Node count comparison \\\"<\" +\n+                                         comparison.getGivenValue() + \"\\\" is not allowed: always false.\");\n@@ -67,0 +69,2 @@\n+                TestFormat.checkNoReport(comparison.getGivenValue() >= 0, \"Node count comparison \\\"<=\" +\n+                                         comparison.getGivenValue() + \"\\\" is not allowed: always false.\");\n@@ -85,2 +89,1 @@\n-            case \"!=\" -> throw new TestFormatException(\"Not-equal comparator not supported for node count: \\\"\" +\n-                                                       comparison.getComparator() + \"\\\". Please rewrite the rule.\");\n+            case \"!=\" -> throw new TestFormatException(\"Not-equal comparator not supported. Please rewrite the rule.\");\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/irrule\/constraint\/raw\/RawCountsConstraint.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-            throw new TestFrameworkException(\"VMInfo value for \\\"\" + key + \"\\\" is not long, got \\\"\" + getStringValue(key) + \"\\\"\");\n+            throw new TestFrameworkException(\"VMInfo value for \\\"\" + key + \"\\\" is not a long, got \\\"\" + getStringValue(key) + \"\\\"\");\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/irmatching\/parser\/VMInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}