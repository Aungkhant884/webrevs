{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,1 @@\n-        if (coll instanceof List12 || (coll instanceof ListN && ! ((ListN<?>)coll).allowNulls)) {\n+        if (coll instanceof List12 || (coll instanceof ListN<?> c && !c.allowNulls)) {\n@@ -171,0 +171,2 @@\n+        } else if (coll.isEmpty()) { \/\/ implicit nullcheck of coll\n+            return List.of();\n@@ -172,1 +174,1 @@\n-            return (List<E>)List.of(coll.toArray()); \/\/ implicit nullcheck of coll\n+            return (List<E>)List.of(coll.toArray());\n","filename":"src\/java.base\/share\/classes\/java\/util\/ImmutableCollections.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1731,0 +1731,2 @@\n+        } else if (map.isEmpty()) {\n+            return Map.of();\n","filename":"src\/java.base\/share\/classes\/java\/util\/Map.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -731,0 +731,2 @@\n+        } else if (coll.isEmpty()) {\n+            return Set.of();\n","filename":"src\/java.base\/share\/classes\/java\/util\/Set.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}