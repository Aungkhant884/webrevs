{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import org.openjdk.jmh.infra.ThreadParams;\n@@ -58,1 +59,1 @@\n-    @Param(\"100\")\n+    @Param(\"100\") \/\/ Will be expanded to at least the number of threads used\n@@ -68,1 +69,4 @@\n-    public void prepare() {\n+    public void prepare(ThreadParams params) {\n+\n+        capacity = Math.max(params.getThreadCount(), capacity);\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/ProducerConsumer.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+import org.openjdk.jmh.infra.ThreadParams;\n@@ -52,1 +53,1 @@\n-    @Param(\"100\")\n+    @Param(\"100\") \/\/ Will be expanded to at least the number of threads used\n@@ -68,1 +69,3 @@\n-    public void setup() {\n+    public void setup(ThreadParams params) {\n+        capacity = Math.max(params.getThreadCount(), capacity);\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/concurrent\/Queues.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}