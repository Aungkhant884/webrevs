{"files":[{"patch":"@@ -394,3 +394,0 @@\n-     * @implNote This constructor invokes {@link #readStreamHeader}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -236,3 +236,0 @@\n-     * @implNote This constructor invokes {@link #writeStreamHeader}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -119,3 +119,0 @@\n-     * @implNote This constructor invokes {@link #connect connect()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedInputStream.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -59,3 +59,0 @@\n-     * @implNote This constructor invokes {@link #connect connect()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedOutputStream.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -92,3 +92,0 @@\n-     * @implNote This constructor invokes {@link #connect connect()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedReader.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -55,3 +55,0 @@\n-     * @implNote This constructor invokes {@link #connect connect()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/io\/PipedWriter.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -71,3 +71,0 @@\n-     * @implNote This constructor invokes {@link #initCause initCause()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AssertionError.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -78,3 +78,0 @@\n-     * @implNote This constructor invokes {@link #initCause initCause()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/BootstrapMethodError.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -54,3 +54,0 @@\n-     *\n-     * @implNote This constructor invokes {@link #initCause initCause()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ExceptionInInitializerError.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -154,3 +154,0 @@\n-     * @implNote This constructor invokes {@link #append(CharSequence)}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n@@ -170,3 +167,0 @@\n-     * @implNote This constructor invokes {@link #append(CharSequence)}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringBuffer.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -127,3 +127,0 @@\n-     * @implNote This constructor invokes {@link #append(CharSequence)}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n@@ -143,3 +140,0 @@\n-     * @implNote This constructor invokes {@link #append(CharSequence)}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringBuilder.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -255,2 +255,1 @@\n-     * the stack trace data in the newly created throwable; see also\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n+     * the stack trace data in the newly created throwable.\n@@ -268,2 +267,1 @@\n-     * the stack trace data in the newly created throwable; see also\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n+     * the stack trace data in the newly created throwable.\n@@ -286,2 +284,1 @@\n-     * the stack trace data in the newly created throwable; see also\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n+     * the stack trace data in the newly created throwable.\n@@ -312,2 +309,1 @@\n-     * the stack trace data in the newly created throwable; see also\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n+     * the stack trace data in the newly created throwable.\n@@ -356,3 +352,0 @@\n-     * <p>This constructor may invoke {@link #fillInStackTrace()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Throwable.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,147 +0,0 @@\n-<!doctype html>\n-<!--\n- Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.  Oracle designates this\n- particular file as subject to the \"Classpath\" exception as provided\n- by Oracle in the LICENSE file that accompanied this code.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-<html lang=\"en\">\n-<head>\n-  <title>This Escape<\/title>\n-  <link rel=\"stylesheet\" type=\"text\/css\" href=\"..\/..\/..\/..\/stylesheet.css\" title=\"Style\">\n-<\/head>\n-<body>\n-<h1 id=\"ThisEscape\">{@index \"This Escape\"}<\/h1>\n-\n-<h2>What is a \"This Escape\"?<\/h2>\n-\n-<p>\n-The Java language requires subclass constructors to invoke a superclass constructor before\n-performing any other work, but superclass constructors are allowed to invoke instance methods as\n-part of their initialization. Therefore, if a superclass constructor invokes an instance method\n-that a subclass overrides, then that method will be invoked before the subclass has done any of\n-its own initialization, possibly leading to unexpected behavior.\n-\n-<p>\n-The following class demonstrates the problem:\n-<blockquote>\n-<pre>\n-import java.util.*;\n-import java.util.function.*;\n-\n-\/**\n- * A &#123;&#64;link Set} that only allows elements matching some &#123;&#64;link Predicate}.\n- *\/\n-public class FilteredSet&lt;E&gt; extends HashSet&lt;E&gt; {\n-\n-    private final Predicate&lt;? super E&gt; filter;\n-\n-    public FilteredSet(Predicate&lt;? super E&gt; filter, Collection&lt;? extends E&gt; elems) {\n-        super(elems);\n-        this.filter = filter;\n-    }\n-\n-    &#64;Override\n-    public boolean add(E elem) {\n-        if (!this.filter.test(elem))\n-            throw new IllegalArgumentException(\"disallowed element\");\n-        return super.add(elem);\n-    }\n-\n-    public static void main(String[] args) {\n-        new FilteredSet&lt;&gt;(s -&gt; true, Arrays.asList(\"abc\", \"def\"));  \/\/ NullPointerException\n-    }\n-}\n-<\/pre>\n-<\/blockquote>\n-\n-<p>\n-The above example appears bug-free at first glance, but it actually throws a <code>NullPointerException<\/code> if run.\n-Moreover, how this error happens is due to a tricky interplay of three different classes:\n-<ol>\n-    <li>The <code>FilteredSet<\/code> constructor invokes the <code>HashSet(Collection)<\/code> superclass constructor;\n-    <li><code>HashSet(Collection)<\/code> constructor invokes <code>AbstractCollection.addAll()<\/code>;\n-    <li><code>AbstractCollection.addAll()<\/code> invokes <code>add()<\/code> for each element;\n-    <li><code>FilteredSet.add()<\/code> invokes <code>this.filter.test()<\/code>, but that <code>this.filter<\/code> is still null.\n-<\/ol>\n-\n-<p>\n-This bug is possible because the <code>HashSet(Collection)<\/code> constructor has a <em>'this'\n-escape<\/em>. This term refers to any time a reference to <code>this<\/code> \"escapes\"\n-from a superclass constructor's control to some other code before it has been fully initialized.\n-\n-<p>\n-The example above illustrates a key difficulty with 'this' escape bugs, which is that they\n-typically involve an interplay among multiple source files. Inspecting any one file at a time\n-does not reveal the bug.\n-\n-<p>\n-Another example of a subtle 'this' escape bug would be a superclass constructor that adds\n-<code>this<\/code> to some <code>HashSet<\/code>, perhaps when registering itself as a listener. If a\n-subclass overrides <code>hashCode()<\/code> to include one or more of its own fields, then the\n-<code>HashSet<\/code> will record the object under the wrong hash value, because at that time those\n-subclass fields won't be initialized yet.\n-\n-<h2>Compiler Warnings<\/h2>\n-\n-<p>\n-The Java compiler can warn about possible 'this' escapes. To enable 'this' escape detection,\n-include the <code>-Xlint:this-escape<\/code> flag on the command line.\n-\n-<p>\n-The 'this' escape warning only looks for \"escapes\" in which some <em>subclass<\/em> might still be\n-uninitialized. It doesn't look for escapes in which the class doing the leaking might itself be\n-uninitialized. In other words, the warning assumes any individual constructor knows what it's\n-doing. Instead, it only looks for potential problems that necessarily span multiple classes.\n-\n-<p>\n-In fact, the boundary is actually larger than that: potential problems must span multiple\n-<em>source code files<\/em>. Warnings are only reported for constructors that could be invoked from\n-some subclass defined in a different file. So, for example, private constructors and constructors\n-in private classes don't generate warnings. This design choice reflects the \"key difficulty\" of\n-'this' escape bugs mentioned above.\n-\n-<p>\n-Use <code>&#64;SuppressWarnings(\"this-escape\")<\/code> to suppress this warning as needed.\n-\n-<h2>Mitigation Strategies<\/h2>\n-\n-<p>\n-To avoid 'this' escapes in superclasses, consider the following strategies:\n-<ul>\n-    <li>Mark initialization instance methods <code>final<\/code> when able\n-    <li>Move initialization logic into <code>static<\/code> methods\n-    <li>Mark constructors <code>private<\/code> when able\n-    <li>Mark classes <code>final<\/code> when able\n-<\/ul>\n-\n-<p>\n-If a 'this' escape can't be avoided, ideally it should be documented in the constructor's API Javadoc\n-so that subclasses work around it if needed.\n-\n-<!-- Uncomment when JDK-8194743 is implemented\n-<p>\n-To avoid problems from 'this' escapes in subclasses, consider moving instance field initialization\n-to before the <code>super()<\/code> invocation.\n--->\n-\n-<\/body>\n-<\/html>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/doc-files\/ThisEscape.html","additions":0,"deletions":147,"binary":false,"changes":147,"status":"deleted"},{"patch":"@@ -166,3 +166,0 @@\n-     * @implNote This constructor invokes {@link #implReplaceWith implReplaceWith()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n@@ -218,3 +215,0 @@\n-     * @implNote This constructor invokes {@link #implReplaceWith implReplaceWith()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset-X-Coder.java.template","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -205,3 +205,0 @@\n-     * @implNote This constructor invokes {@link #addLast addLast()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/ArrayDeque.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -163,3 +163,0 @@\n-     * @implNote This constructor invokes {@link #put put()} and {@link #putAll putAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/EnumMap.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -116,3 +116,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/HashSet.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -225,3 +225,0 @@\n-     * @implNote This constructor invokes {@link #put put()} and {@link #putAll putAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/Hashtable.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -273,3 +273,0 @@\n-     * @implNote This constructor invokes {@link #put put()} and {@link #putAll putAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/IdentityHashMap.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -172,3 +172,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/LinkedHashSet.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -118,4 +118,0 @@\n-     * @implNote This constructor invokes {@link #add(Object) add()} and\n-     * {@link #addAll(Collection) addAll()}; see\n-     * <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/LinkedList.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -180,3 +180,0 @@\n-     * @implNote This constructor invokes {@link #put put()} and {@link #putAll putAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/TreeMap.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -153,3 +153,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n@@ -170,3 +167,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/TreeSet.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -255,3 +255,0 @@\n-     * @implNote This constructor invokes {@link #put put()} and {@link #putAll putAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -848,3 +848,0 @@\n-     * @implNote This constructor invokes {@link #put put()} and {@link #putAll putAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentHashMap.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1093,3 +1093,0 @@\n-     * @implNote This constructor invokes {@link #put put()} and {@link #putAll putAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentSkipListMap.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -134,3 +134,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n@@ -152,3 +149,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentSkipListSet.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -117,3 +117,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/DelayQueue.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -194,3 +194,0 @@\n-     * @implNote This constructor invokes {@link #add add()} and {@link #addAll addAll()};\n-     * see <a href=\"{@docRoot}\/java.base\/java\/lang\/doc-files\/ThisEscape.html\">This Escape<\/a>.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/LinkedBlockingDeque.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}