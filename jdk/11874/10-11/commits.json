[{"commit":{"message":"Omit sealed classes when permitted subclasses are in the compilation unit."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java"},{"filename":"test\/langtools\/tools\/javac\/warnings\/ThisEscape.java"}],"sha":"24730cb3d070e83bf23472a5291f102c9c92cb62"},{"commit":{"message":"Add assertion check for reuse of analyzer, which is unsupported."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java"}],"sha":"53a430f44cea83dafd8035e133d2a52d04c03fdd"},{"commit":{"message":"Include assert detail expressions in the analysis."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java"}],"sha":"3cb201189fac2d5089f586f970ba5eb93fb789ca"},{"commit":{"message":"Use more modern patterned instanceof instead of hasTag() + cast."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java"}],"sha":"4062dea8b4543c65668bb7408fe690516d8b4104"},{"commit":{"message":"Use TreeInfo.isDirectlyOrIndirectlyLocal() to detect such classes."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java"}],"sha":"e8da090066173767088c61b8f20cc52eb9908941"},{"commit":{"message":"Clean up code a bit by using a record for \"MethodInfo\" class."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java"}],"sha":"63325523e7f3ffdd8d6cef12f82381d43cfdb007"},{"commit":{"message":"Properly indent switch statement."},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java"}],"sha":"d956592ad8da138f0d0c755f8437d7528d2f2b50"}]