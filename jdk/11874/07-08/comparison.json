{"files":[{"patch":"@@ -227,1 +227,1 @@\n-        new ThisEscapeAnalyzer(names, types, log, lint).analyzeTree(env);\n+        new ThisEscapeAnalyzer(names, syms, types, log, lint).analyzeTree(env);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+import com.sun.tools.javac.code.Symtab;\n@@ -130,0 +131,1 @@\n+    private final Symtab syms;\n@@ -189,1 +191,1 @@\n-    ThisEscapeAnalyzer(Names names, Types types, Log log, Lint lint) {\n+    ThisEscapeAnalyzer(Names names, Symtab syms, Types types, Log log, Lint lint) {\n@@ -191,0 +193,1 @@\n+        this.syms = syms;\n@@ -533,1 +536,1 @@\n-            ((ClassSymbol)sym.owner).fullname == names.java_lang_Object &&\n+            sym.owner.type.tsym == syms.objectType.tsym &&\n@@ -929,1 +932,0 @@\n-        RefSet<ExprRef> combinedRefs = new RefSet<>();\n@@ -931,1 +933,0 @@\n-        combinedRefs.addAll(refs.removeExprs(depth));\n@@ -933,2 +934,0 @@\n-        combinedRefs.addAll(refs.removeExprs(depth));\n-        refs.addAll(combinedRefs);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -262,2 +262,2 @@\n-    Warn when a constructor invokes a method that could be overriden in a subclass;\\n\\\n-    such a method would execute before the subclass constructor completes its initialization.\n+    Warn when a constructor invokes a method that could be overriden in an external subclass.\\n\\\n+\\                         Such a method would execute before the subclass constructor completes its initialization.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac.properties","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}