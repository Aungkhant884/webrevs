{"files":[{"patch":"@@ -220,5 +220,7 @@\n-    final String template = \"import java.util.List;\\n\" +\n-                            \"class Test {\\n\" +\n-                            \"   #{TRUSTME} #{SUPPRESS[0]} #{MOD} #{MTH[0].VARARG}\\n\" +\n-                            \"   #{SUPPRESS[1]} #{MTH[1].CLIENT}\\n\" +\n-                            \"}\";\n+    final String template = \"\"\"\n+        import java.util.List;\n+        class Test {\n+           #{TRUSTME} #{SUPPRESS[0]} #{MOD} #{MTH[0].VARARG}\n+           #{SUPPRESS[1]} #{MTH[1].CLIENT}\n+        }\n+        \"\"\";\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn4.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -128,0 +128,2 @@\n+    \/\/ Handling of varargs warnings changed in JDK 9 compared to JDK 8\n+    \/\/ and then remained consistent; test 8 and then current release.\n@@ -130,1 +132,0 @@\n-        JDK_9(\"9\"),\n@@ -162,0 +163,3 @@\n+    \/\/ javac does not currently perform analysis of the method body\n+    \/\/ with respect to the validity of the @SafeVargs annotation. If\n+    \/\/ that changes, the body tests should be expanded.\n@@ -163,2 +167,2 @@\n-        ASSIGN(\"Object o = x;\", true),\n-        CAST(\"Object o = (Object)x;\", true),\n+        \/\/ ASSIGN(\"Object o = x;\", true),\n+        \/\/ CAST(\"Object o = (Object)x;\", true),\n@@ -167,1 +171,1 @@\n-        ARRAY_ASSIGN(\"Object[] o = x;\", true),\n+        \/\/ ARRAY_ASSIGN(\"Object[] o = x;\", true),\n@@ -225,7 +229,9 @@\n-    String template = \"import com.sun.tools.javac.api.*;\\n\" +\n-                      \"import java.util.List;\\n\" +\n-                      \"class Test {\\n\" +\n-                      \"   static void test(Object o) {}\\n\" +\n-                      \"   static void testArr(Object[] o) {}\\n\" +\n-                      \"   #{TRUSTME} #{SUPPRESS} #{MOD} #{SIG} { #{BODY} }\\n\" +\n-                      \"}\\n\";\n+    String template = \"\"\"\n+        import com.sun.tols.javac.api.*;\n+        import java.util.List;\n+        class Test {\n+           static void test(Object o) {}\n+           static void testArr(Object[] o) {}\n+           #{TRUSTME} #{SUPPRESS} #{MOD} #{SIG} { #{BODY} }\n+        }\n+        \"\"\";\n@@ -268,1 +274,1 @@\n-              (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) >= 0)))) {\n+              (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_8) > 0)))) {\n@@ -282,1 +288,1 @@\n-               modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) < 0 ) &&\n+               modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_8) <= 0 ) &&\n@@ -291,1 +297,1 @@\n-             (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_9) >= 0) ||\n+             (modKind == ModifierKind.PRIVATE && sourceLevel.compareTo(SourceLevel.JDK_8) > 0) ||\n","filename":"test\/langtools\/tools\/javac\/varargs\/warning\/Warn5.java","additions":20,"deletions":14,"binary":false,"changes":34,"status":"modified"}]}