{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,1 @@\n-  assert(_stacks == NULL && _num == 0, \"do not re-initialize\");\n+  assert(_stacks == nullptr && _num == 0, \"do not re-initialize\");\n@@ -95,2 +95,1 @@\n-class ParRestoreTask : public AbstractGangTask {\n-private:\n+class RestorePreservedMarksTask : public AbstractGangTask {\n@@ -99,1 +98,4 @@\n-  volatile size_t* const _total_size_addr;\n+  volatile size_t _total_size;\n+#ifdef ASSERT\n+  size_t _total_size_before;\n+#endif \/\/ ASSERT\n@@ -102,1 +104,1 @@\n-  virtual void work(uint worker_id) {\n+  void work(uint worker_id) override {\n@@ -104,2 +106,2 @@\n-    while (_sub_tasks.try_claim_task(\/* reference *\/ task_id)) {\n-      _preserved_marks_set->get(task_id)->restore_and_increment(_total_size_addr);\n+    while (_sub_tasks.try_claim_task(task_id)) {\n+      _preserved_marks_set->get(task_id)->restore_and_increment(&_total_size);\n@@ -109,6 +111,10 @@\n-  ParRestoreTask(PreservedMarksSet* preserved_marks_set,\n-                 volatile size_t* total_size_addr)\n-      : AbstractGangTask(\"Parallel Preserved Mark Restoration\"),\n-        _preserved_marks_set(preserved_marks_set),\n-        _sub_tasks(preserved_marks_set->num()),\n-        _total_size_addr(total_size_addr) {\n+  RestorePreservedMarksTask(PreservedMarksSet* preserved_marks_set)\n+    : AbstractGangTask(\"Restore Preserved Marks\"),\n+      _preserved_marks_set(preserved_marks_set),\n+      _sub_tasks(preserved_marks_set->num()),\n+      _total_size(0)\n+      DEBUG_ONLY(COMMA _total_size_before(0)) {\n+#ifdef ASSERT\n+    \/\/ This is to make sure the total_size we'll calculate below is correct.\n+    for (uint i = 0; i < _preserved_marks_set->num(); ++i) {\n+      _total_size_before += _preserved_marks_set->get(i)->size();\n@@ -116,1 +122,2 @@\n-};\n+#endif \/\/ ASSERT\n+  }\n@@ -118,2 +125,2 @@\n-void PreservedMarksSet::restore(WorkGang* workers) {\n-  volatile size_t total_size = 0;\n+  ~RestorePreservedMarksTask() {\n+    assert(_total_size == _total_size_before, \"total_size = %zu before = %zu\", _total_size, _total_size_before);\n@@ -121,5 +128,1 @@\n-#ifdef ASSERT\n-  \/\/ This is to make sure the total_size we'll calculate below is correct.\n-  size_t total_size_before = 0;\n-  for (uint i = 0; i < _num; i += 1) {\n-    total_size_before += get(i)->size();\n+    log_trace(gc)(\"Restored %zu marks\", _total_size);\n@@ -127,1 +130,1 @@\n-#endif \/\/ ASSERT\n+};\n@@ -129,4 +132,7 @@\n-  if (workers == NULL) {\n-    for (uint i = 0; i < num(); i += 1) {\n-      total_size += get(i)->size();\n-      get(i)->restore();\n+void PreservedMarksSet::restore(WorkGang* workers) {\n+  {\n+    RestorePreservedMarksTask cl(this);\n+    if (workers == nullptr) {\n+      cl.work(0);\n+    } else {\n+      workers->run_task(&cl);\n@@ -134,3 +140,0 @@\n-  } else {\n-    ParRestoreTask task(this, &total_size);\n-    workers->run_task(&task);\n@@ -140,6 +143,0 @@\n-\n-  assert(total_size == total_size_before,\n-         \"total_size = \" SIZE_FORMAT \" before = \" SIZE_FORMAT,\n-         total_size, total_size_before);\n-\n-  log_trace(gc)(\"Restored \" SIZE_FORMAT \" marks\", total_size);\n@@ -160,1 +157,1 @@\n-  _stacks = NULL;\n+  _stacks = nullptr;\n@@ -166,1 +163,1 @@\n-  assert(_stacks != NULL && _num > 0, \"should have been initialized\");\n+  assert(_stacks != nullptr && _num > 0, \"should have been initialized\");\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.cpp","additions":35,"deletions":38,"binary":false,"changes":73,"status":"modified"}]}