{"files":[{"patch":"@@ -258,1 +258,1 @@\n-            log.error(TreeInfo.diagnosticPositionFor(anno.type.tsym, pos), Errors.AnnotationUnrecognizedAttributeName(anno.type, e.value.name));\n+            \/\/log.error(TreeInfo.diagnosticPositionFor(anno.type.tsym, pos), Errors.AnnotationUnrecognizedAttributeName(anno.type, e.value.name));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5662,1 +5662,1 @@\n-            chk.validateTypeAnnotation(tree, false);\n+            chk.validateTypeAnnotation(tree, null, false);\n@@ -5671,1 +5671,1 @@\n-            chk.validateTypeAnnotations(tree.annotations, true);\n+            chk.validateTypeAnnotations(tree.annotations, tree.type.tsym, true);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2959,1 +2959,1 @@\n-    public void validateTypeAnnotations(List<JCAnnotation> annotations, boolean isTypeParameter) {\n+    public void validateTypeAnnotations(List<JCAnnotation> annotations, Symbol s, boolean isTypeParameter) {\n@@ -2961,1 +2961,1 @@\n-            validateTypeAnnotation(a, isTypeParameter);\n+            validateTypeAnnotation(a, s, isTypeParameter);\n@@ -3130,1 +3130,1 @@\n-    public void validateTypeAnnotation(JCAnnotation a, boolean isTypeParameter) {\n+    public void validateTypeAnnotation(JCAnnotation a, Symbol s, boolean isTypeParameter) {\n@@ -3132,0 +3132,2 @@\n+        \/\/ we just want to validate that the anotation doesn't have any wrong target\n+        if (s != null) getApplicableTargets(a, s);\n@@ -3460,3 +3462,4 @@\n-            } else\n-                return Optional.empty(); \/\/ Unknown ElementType. This should be an error at declaration site,\n-                                         \/\/ assume applicable.\n+            } else {\n+                log.error(a, Errors.AnnotationUnrecognizedAttributeName(a.type, target));\n+                return Optional.empty(); \/\/ Unknown ElementType\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n-  55; \/\/ version\n+  65; \/\/ version\n@@ -7,14 +7,23 @@\n-    Utf8 \"A\"; \/\/ #1\n-    class #1; \/\/ #2\n-    Utf8 \"java\/lang\/Object\"; \/\/ #3\n-    class #3; \/\/ #4\n-    Utf8 \"java\/lang\/annotation\/Annotation\"; \/\/ #5\n-    class #5; \/\/ #6\n-    Utf8 \"A.java\"; \/\/ #7\n-    Utf8 \"Ljava\/lang\/annotation\/Target;\"; \/\/ #8\n-    Utf8 \"value\"; \/\/ #9\n-    Utf8 \"Ljava\/lang\/annotation\/ElementType;\"; \/\/ #10\n-    Utf8 \"FIELD\"; \/\/ #11\n-    Utf8 \"NO_SUCH\"; \/\/ #12\n-    Utf8 \"SourceFile\"; \/\/ #13\n-    Utf8 \"RuntimeVisibleAnnotations\"; \/\/ #14\n+    class #2; \/\/ #1\n+    Utf8 \"A\"; \/\/ #2\n+    class #4; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    class #6; \/\/ #5\n+    Utf8 \"java\/lang\/annotation\/Annotation\"; \/\/ #6\n+    Utf8 \"SourceFile\"; \/\/ #7\n+    Utf8 \"IncorrectAnno.java\"; \/\/ #8\n+    Utf8 \"RuntimeVisibleAnnotations\"; \/\/ #9\n+    Utf8 \"Ljava\/lang\/annotation\/Target;\"; \/\/ #10\n+    Utf8 \"value\"; \/\/ #11\n+    Utf8 \"Ljava\/lang\/annotation\/ElementType;\"; \/\/ #12\n+    Utf8 \"TYPE\"; \/\/ #13\n+    Utf8 \"FIELD\"; \/\/ #14\n+    Utf8 \"METHOD\"; \/\/ #15\n+    Utf8 \"PARAMETER\"; \/\/ #16\n+    Utf8 \"CONSTRUCTOR\"; \/\/ #17\n+    Utf8 \"LOCAL_VARIABLE\"; \/\/ #18\n+    Utf8 \"ANNOTATION_TYPE\"; \/\/ #19\n+    Utf8 \"TYPE_PARAMETER\"; \/\/ #20\n+    Utf8 \"TYPE_USE\"; \/\/ #21\n+    Utf8 \"RECORD_COMPONENT\"; \/\/ #22\n+    Utf8 \"NO_SUCH\"; \/\/ #23\n@@ -24,2 +33,2 @@\n-  #2;\/\/ this_cpx\n-  #4;\/\/ super_cpx\n+  #1;\/\/ this_cpx\n+  #3;\/\/ super_cpx\n@@ -28,1 +37,1 @@\n-    #6;\n+    #5;\n@@ -38,2 +47,2 @@\n-    Attr(#13) { \/\/ SourceFile\n-      #7;\n+    Attr(#7) { \/\/ SourceFile\n+      #8;\n@@ -42,1 +51,1 @@\n-    Attr(#14) { \/\/ RuntimeVisibleAnnotations\n+    Attr(#9) { \/\/ RuntimeVisibleAnnotations\n@@ -45,1 +54,1 @@\n-          #8;\n+          #10;\n@@ -48,1 +57,1 @@\n-              #9;\n+              #11;\n@@ -55,2 +64,74 @@\n-                      #10;\n-                      #11;\n+                      #12;\n+                      #13;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #14;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #15;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #16;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #17;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #18;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #19;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #20;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #21;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #22;\n@@ -63,1 +144,0 @@\n-                      #10;\n@@ -65,0 +145,1 @@\n+                      #23;\n@@ -75,1 +156,1 @@\n-} \/\/ end class A\n+} \/\/ end class A\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/annotations\/crashOnUnknownAttr\/A.jcod","additions":108,"deletions":27,"binary":false,"changes":135,"status":"modified"},{"patch":"@@ -11,0 +11,9 @@\n+    @A void m() {}\n+    void foo(@A int a) {\n+        @A int i = 0;\n+    }\n+    @A CrashOnUnknownTargetTypeTest() {}\n+    @A @interface B {}\n+    class Inner<@A T> {}\n+    @A class Inner2 {}\n+    record R(@A int i) {}\n","filename":"test\/langtools\/tools\/javac\/annotations\/crashOnUnknownAttr\/CrashOnUnknownTargetTypeTest.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,4 +1,12 @@\n-- compiler.warn.unknown.enum.constant: A.class, java.lang.annotation.ElementType, NO_SUCH\n-- compiler.warn.unknown.enum.constant: Annotation.class, java.lang.annotation.ElementType, NO_SUCH\n-CrashOnUnknownTargetTypeTest.java:10:6: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n-1 error\n+- compiler.warn.unknown.enum.constant: ElementType.class, java.lang.annotation.ElementType, NO_SUCH\n+- compiler.warn.unknown.enum.constant: String.class, java.lang.annotation.ElementType, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:10:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:11:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:12:14: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:15:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:16:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:17:17: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:18:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:19:14: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:13:9: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+9 errors\n","filename":"test\/langtools\/tools\/javac\/annotations\/crashOnUnknownAttr\/CrashOnUnknownTargetTypeTest.out","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"}]}