{"files":[{"patch":"@@ -184,1 +184,1 @@\n-    public AnnotationType annotationTargetType(Attribute.Compound a, Symbol s) {\n+    public AnnotationType annotationTargetType(JCTree pos, Attribute.Compound a, Symbol s) {\n@@ -192,1 +192,1 @@\n-                        .map(attr -> targetToAnnotationType(attr, s))\n+                        .map(attr -> targetToAnnotationType(pos, a, attr, s))\n@@ -208,1 +208,1 @@\n-    private AnnotationType targetToAnnotationType(Attribute a, Symbol s) {\n+    private AnnotationType targetToAnnotationType(JCTree pos, Attribute.Compound anno, Attribute a, Symbol s) {\n@@ -258,2 +258,1 @@\n-            Assert.error(\"annotationTargetType(): unrecognized Attribute name \" + e.value.name +\n-                    \" (\" + e.value.name.getClass() + \")\");\n+            \/\/ there is an erroneous target, an error should have been reported already\n@@ -309,2 +308,2 @@\n-        private void separateAnnotationsKinds(JCTree typetree, Type type,\n-                                              Symbol sym, TypeAnnotationPosition pos)\n+        private void separateAnnotationsKinds(JCTree pos, JCTree typetree, Type type,\n+                                              Symbol sym, TypeAnnotationPosition typeAnnotationPosition)\n@@ -318,1 +317,1 @@\n-                switch (annotationTargetType(a, sym)) {\n+                switch (annotationTargetType(pos, a, sym)) {\n@@ -324,1 +323,1 @@\n-                        Attribute.TypeCompound ta = toTypeCompound(a, pos);\n+                        Attribute.TypeCompound ta = toTypeCompound(a, typeAnnotationPosition);\n@@ -329,1 +328,1 @@\n-                        Attribute.TypeCompound ta = toTypeCompound(a, pos);\n+                        Attribute.TypeCompound ta = toTypeCompound(a, typeAnnotationPosition);\n@@ -359,1 +358,1 @@\n-                typeWithAnnotations(typetree, type, typeAnnotations, typeAnnotations, pos);\n+                typeWithAnnotations(typetree, type, typeAnnotations, typeAnnotations, typeAnnotationPosition);\n@@ -368,1 +367,1 @@\n-            type = typeWithAnnotations(typetree, type, typeAnnotations, onlyTypeAnnos.toList(), pos);\n+            type = typeWithAnnotations(typetree, type, typeAnnotations, onlyTypeAnnos.toList(), typeAnnotationPosition);\n@@ -1170,1 +1169,1 @@\n-                        separateAnnotationsKinds(tree, null, tree.sym, pos);\n+                        separateAnnotationsKinds(tree, tree, null, tree.sym, pos);\n@@ -1174,1 +1173,1 @@\n-                        separateAnnotationsKinds(tree.restype,\n+                        separateAnnotationsKinds(tree, tree.restype,\n@@ -1187,1 +1186,1 @@\n-                        separateAnnotationsKinds(tree.recvparam.vartype, tree.recvparam.sym.type, tree.recvparam.sym, pos);\n+                        separateAnnotationsKinds(tree, tree.recvparam.vartype, tree.recvparam.sym.type, tree.recvparam.sym, pos);\n@@ -1200,1 +1199,1 @@\n-                            separateAnnotationsKinds(param.vartype, param.sym.type, param.sym, pos);\n+                            separateAnnotationsKinds(param, param.vartype, param.sym.type, param.sym, pos);\n@@ -1242,1 +1241,1 @@\n-                                separateAnnotationsKinds(param.vartype, param.sym.type, param.sym, pos);\n+                                separateAnnotationsKinds(param, param.vartype, param.sym.type, param.sym, pos);\n@@ -1275,1 +1274,1 @@\n-                    separateAnnotationsKinds(tree.vartype, tree.sym.type, tree.sym, pos);\n+                    separateAnnotationsKinds(tree, tree.vartype, tree.sym.type, tree.sym, pos);\n@@ -1282,1 +1281,1 @@\n-                    separateAnnotationsKinds(tree.vartype, tree.sym.type, tree.sym, pos);\n+                    separateAnnotationsKinds(tree, tree.vartype, tree.sym.type, tree.sym, pos);\n@@ -1288,1 +1287,1 @@\n-                separateAnnotationsKinds(tree.vartype, tree.sym.type, tree.sym, pos);\n+                separateAnnotationsKinds(tree, tree.vartype, tree.sym.type, tree.sym, pos);\n@@ -1293,1 +1292,1 @@\n-                separateAnnotationsKinds(tree.vartype, tree.sym.type, tree.sym, pos);\n+                separateAnnotationsKinds(tree, tree.vartype, tree.sym.type, tree.sym, pos);\n@@ -1298,1 +1297,1 @@\n-                separateAnnotationsKinds(tree.vartype, tree.sym.type, tree.sym, pos);\n+                separateAnnotationsKinds(tree, tree.vartype, tree.sym.type, tree.sym, pos);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/TypeAnnotations.java","additions":21,"deletions":22,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -5662,1 +5662,1 @@\n-            chk.validateTypeAnnotation(tree, false);\n+            chk.validateTypeAnnotation(tree, null, false);\n@@ -5671,1 +5671,1 @@\n-            chk.validateTypeAnnotations(tree.annotations, true);\n+            chk.validateTypeAnnotations(tree.annotations, tree.type.tsym, true);\n@@ -5869,1 +5869,1 @@\n-                        typeAnnotations.annotationTargetType(ai.attribute, sym) == TypeAnnotations.AnnotationType.DECLARATION) {\n+                        typeAnnotations.annotationTargetType(ai, ai.attribute, sym) == TypeAnnotations.AnnotationType.DECLARATION) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2959,1 +2959,1 @@\n-    public void validateTypeAnnotations(List<JCAnnotation> annotations, boolean isTypeParameter) {\n+    public void validateTypeAnnotations(List<JCAnnotation> annotations, Symbol s, boolean isTypeParameter) {\n@@ -2961,1 +2961,1 @@\n-            validateTypeAnnotation(a, isTypeParameter);\n+            validateTypeAnnotation(a, s, isTypeParameter);\n@@ -3130,1 +3130,1 @@\n-    public void validateTypeAnnotation(JCAnnotation a, boolean isTypeParameter) {\n+    public void validateTypeAnnotation(JCAnnotation a, Symbol s, boolean isTypeParameter) {\n@@ -3132,0 +3132,2 @@\n+        \/\/ we just want to validate that the anotation doesn't have any wrong target\n+        if (s != null) getApplicableTargets(a, s);\n@@ -3460,3 +3462,4 @@\n-            } else\n-                return Optional.empty(); \/\/ Unknown ElementType. This should be an error at declaration site,\n-                                         \/\/ assume applicable.\n+            } else {\n+                log.error(a, Errors.AnnotationUnrecognizedAttributeName(a.type, target));\n+                return Optional.empty(); \/\/ Unknown ElementType\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -158,0 +158,4 @@\n+# 0: type, 1: name\n+compiler.err.annotation.unrecognized.attribute.name=\\\n+    annotation @{0} has an unrecognizable attribute named ''{1}''\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,156 @@\n+class A {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  65; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    class #2; \/\/ #1\n+    Utf8 \"A\"; \/\/ #2\n+    class #4; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    class #6; \/\/ #5\n+    Utf8 \"java\/lang\/annotation\/Annotation\"; \/\/ #6\n+    Utf8 \"SourceFile\"; \/\/ #7\n+    Utf8 \"IncorrectAnno.java\"; \/\/ #8\n+    Utf8 \"RuntimeVisibleAnnotations\"; \/\/ #9\n+    Utf8 \"Ljava\/lang\/annotation\/Target;\"; \/\/ #10\n+    Utf8 \"value\"; \/\/ #11\n+    Utf8 \"Ljava\/lang\/annotation\/ElementType;\"; \/\/ #12\n+    Utf8 \"TYPE\"; \/\/ #13\n+    Utf8 \"FIELD\"; \/\/ #14\n+    Utf8 \"METHOD\"; \/\/ #15\n+    Utf8 \"PARAMETER\"; \/\/ #16\n+    Utf8 \"CONSTRUCTOR\"; \/\/ #17\n+    Utf8 \"LOCAL_VARIABLE\"; \/\/ #18\n+    Utf8 \"ANNOTATION_TYPE\"; \/\/ #19\n+    Utf8 \"TYPE_PARAMETER\"; \/\/ #20\n+    Utf8 \"TYPE_USE\"; \/\/ #21\n+    Utf8 \"RECORD_COMPONENT\"; \/\/ #22\n+    Utf8 \"NO_SUCH\"; \/\/ #23\n+  } \/\/ Constant Pool\n+\n+  0x2600; \/\/ access\n+  #1;\/\/ this_cpx\n+  #3;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+    #5;\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#7) { \/\/ SourceFile\n+      #8;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#9) { \/\/ RuntimeVisibleAnnotations\n+      [] { \/\/ annotations\n+        {  \/\/  annotation\n+          #10;\n+          [] { \/\/ element_value_pairs\n+            {  \/\/  element value pair\n+              #11;\n+              {  \/\/  element_value\n+                '[';\n+                [] { \/\/ array_value\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #13;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #14;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #15;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #16;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #17;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #18;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #19;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #20;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #21;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #22;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                  ;\n+                  {  \/\/  element_value\n+                    'e';\n+                    {  \/\/  enum_const_value\n+                      #12;\n+                      #23;\n+                    }  \/\/  enum_const_value\n+                  }  \/\/  element_value\n+                }  \/\/  array_value\n+              }  \/\/  element_value\n+            }  \/\/  element value pair\n+          }  \/\/  element_value_pairs\n+        }  \/\/  annotation\n+      }\n+    } \/\/ end RuntimeVisibleAnnotations\n+  } \/\/ Attributes\n+} \/\/ end class A\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/annotations\/crashOnUnknownAttr\/A.jcod","additions":156,"deletions":0,"binary":false,"changes":156,"status":"added"},{"patch":"@@ -0,0 +1,20 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @summary compiler is crashing with AssertionError for annotations with unknown target type\n+ * @bug 8296010\n+ * @build A\n+ * @compile\/fail\/ref=CrashOnUnknownTargetTypeTest.out -XDrawDiagnostics CrashOnUnknownTargetTypeTest.java\n+ *\/\n+\n+public class CrashOnUnknownTargetTypeTest {\n+    @A Object o;\n+    @A void m() {}\n+    void foo(@A int a) {\n+        @A int i = 0;\n+    }\n+    @A CrashOnUnknownTargetTypeTest() {}\n+    @A @interface B {}\n+    class Inner<@A T> {}\n+    @A class Inner2 {}\n+    record R(@A int i) {}\n+}\n","filename":"test\/langtools\/tools\/javac\/annotations\/crashOnUnknownAttr\/CrashOnUnknownTargetTypeTest.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"added"},{"patch":"@@ -0,0 +1,13 @@\n+- compiler.warn.unknown.enum.constant: ElementType.class, java.lang.annotation.ElementType, NO_SUCH\n+- compiler.warn.unknown.enum.constant: String.class, java.lang.annotation.ElementType, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:10:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:11:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:12:14: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:15:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:16:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:17:17: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:18:5: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:19:14: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+CrashOnUnknownTargetTypeTest.java:13:9: compiler.err.annotation.unrecognized.attribute.name: A, NO_SUCH\n+9 errors\n+2 warnings\n","filename":"test\/langtools\/tools\/javac\/annotations\/crashOnUnknownAttr\/CrashOnUnknownTargetTypeTest.out","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -210,0 +210,3 @@\n+\n+# this one needs a forged class file to be reproduced\n+compiler.err.annotation.unrecognized.attribute.name\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/diags\/examples.not-yet.txt","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"}]}