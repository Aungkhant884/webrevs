{"files":[{"patch":"@@ -487,1 +487,1 @@\n-        this(bytes, offset, length, lookupCharset(charsetName), checkBoundsOffCount(offset, length, bytes.length));\n+        this(lookupCharset(charsetName), bytes, checkBoundsOffCount(offset, length, bytes.length), length);\n@@ -521,1 +521,1 @@\n-        this(bytes, offset, length, Objects.requireNonNull(charset), checkBoundsOffCount(offset, length, bytes.length));\n+        this(Objects.requireNonNull(charset), bytes, checkBoundsOffCount(offset, length, bytes.length), length);\n@@ -524,0 +524,6 @@\n+    \/**\n+     * This method does not do any precondition checks on its argument.\n+     * <p>\n+     * Important: parameter order of this method is deliberately changed in order to\n+     * disambiguate it against other similar methods ot this class.\n+     *\/\n@@ -525,1 +531,1 @@\n-    private String(byte[] bytes, int offset, int length, Charset charset, Void sig) {\n+    private String(Charset charset, byte[] bytes, int offset, int length) {\n@@ -1375,1 +1381,1 @@\n-        this(bytes, 0, bytes.length, lookupCharset(charsetName), null);\n+        this(lookupCharset(charsetName), bytes, 0, bytes.length);\n@@ -1399,1 +1405,1 @@\n-        this(bytes, 0, bytes.length, Objects.requireNonNull(charset), null);\n+        this(Objects.requireNonNull(charset), bytes, 0, bytes.length);\n@@ -1429,1 +1435,1 @@\n-        this(bytes, offset, length, Charset.defaultCharset(), checkBoundsOffCount(offset, length, bytes.length));\n+        this(Charset.defaultCharset(), bytes, checkBoundsOffCount(offset, length, bytes.length), length);\n@@ -1449,1 +1455,1 @@\n-        this(bytes, 0, bytes.length, Charset.defaultCharset(), null);\n+        this(Charset.defaultCharset(), bytes, 0, bytes.length);\n@@ -4587,0 +4593,1 @@\n+     * @return  {@code offset} if the sub-range within bounds of the range\n@@ -4591,3 +4598,2 @@\n-    static Void checkBoundsOffCount(int offset, int count, int length) {\n-        Preconditions.checkFromIndexSize(offset, count, length, Preconditions.SIOOBE_FORMATTER);\n-        return null;\n+    static int checkBoundsOffCount(int offset, int count, int length) {\n+        return Preconditions.checkFromIndexSize(offset, count, length, Preconditions.SIOOBE_FORMATTER);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":16,"deletions":10,"binary":false,"changes":26,"status":"modified"}]}