{"files":[{"patch":"@@ -40,0 +40,1 @@\n+import java.awt.Dimension;\n@@ -43,0 +44,1 @@\n+import java.awt.Rectangle;\n@@ -44,0 +46,1 @@\n+import java.awt.Toolkit;\n@@ -53,0 +56,2 @@\n+import java.io.File;\n+import java.io.IOException;\n@@ -55,0 +60,2 @@\n+import java.util.concurrent.atomic.AtomicReference;\n+import javax.imageio.ImageIO;\n@@ -60,1 +67,0 @@\n-    private static final int FRAME_LOCATION = 100;\n@@ -67,1 +73,3 @@\n-        f.setBounds(FRAME_LOCATION, FRAME_LOCATION, FRAME_SIZE, FRAME_SIZE);\n+        f.setSize(FRAME_SIZE, FRAME_SIZE);\n+        f.setLocationRelativeTo(null);\n+        f.setUndecorated(true);\n@@ -95,0 +103,1 @@\n+            r.setAutoDelay(50);\n@@ -96,0 +105,3 @@\n+            final AtomicReference<Point> frameLoc = new AtomicReference<>();\n+            SwingUtilities.invokeAndWait(() -> frameLoc.set(f.getLocationOnScreen()));\n+            Point loc = frameLoc.get();\n@@ -97,3 +109,3 @@\n-                    new Point(FRAME_LOCATION + FRAME_SIZE \/ 3, FRAME_LOCATION + FRAME_SIZE \/ 3),\n-                    new Point(FRAME_LOCATION + FRAME_SIZE \/ 3 * 2, FRAME_LOCATION + FRAME_SIZE \/ 3 * 2),\n-                    InputEvent.BUTTON1_MASK);\n+                    new Point(loc.x + FRAME_SIZE \/ 3, loc.y + FRAME_SIZE \/ 3),\n+                    new Point(loc.x + FRAME_SIZE \/ 3 * 2, loc.y + FRAME_SIZE \/ 3 * 2),\n+                    InputEvent.BUTTON1_DOWN_MASK);\n@@ -102,0 +114,1 @@\n+                captureScreen(r);\n@@ -110,1 +123,11 @@\n-\n+    private static void captureScreen(Robot r) {\n+        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+        try {\n+            ImageIO.write(\n+                    r.createScreenCapture(new Rectangle(0, 0, screenSize.width, screenSize.height)),\n+                    \"png\",\n+                    new File(\"FailedScreenImage.png\")\n+                         );\n+        } catch (IOException ignore) {\n+        }\n+    }\n","filename":"test\/jdk\/java\/awt\/dnd\/AcceptDropMultipleTimes\/AcceptDropMultipleTimes.java","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -35,0 +35,2 @@\n+import test.java.awt.regtesthelpers.Util;\n+\n@@ -36,0 +38,1 @@\n+import java.awt.Dimension;\n@@ -37,0 +40,1 @@\n+import java.awt.Rectangle;\n@@ -38,0 +42,1 @@\n+import java.awt.Toolkit;\n@@ -47,1 +52,2 @@\n-\n+import java.io.File;\n+import java.io.IOException;\n@@ -51,0 +57,1 @@\n+import javax.imageio.ImageIO;\n@@ -55,2 +62,0 @@\n-import test.java.awt.regtesthelpers.Util;\n-\n@@ -104,1 +109,1 @@\n-            inside.translate(20,20);\n+            inside.translate(2,20);\n@@ -106,1 +111,1 @@\n-            outer.translate(-40, 0);\n+            outer.translate(-20, 0);\n@@ -108,1 +113,1 @@\n-            r.mousePress(InputEvent.BUTTON1_MASK);\n+            r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n@@ -115,1 +120,1 @@\n-                r.mouseRelease(InputEvent.BUTTON1_MASK);\n+                r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n@@ -118,2 +123,4 @@\n-            if(!dropCompleteLatch.await(10, TimeUnit.SECONDS)) {\n-                throw new RuntimeException(\"Waited too long, but the drop is not completed\");\n+            if (!dropCompleteLatch.await(10, TimeUnit.SECONDS)) {\n+                captureScreen(r);\n+                throw new RuntimeException(\n+                        \"Waited too long, but the drop is not completed\");\n@@ -121,2 +128,8 @@\n-            if (FAILED || !MOUSE_ENTERED || !MOUSE_ENTERED_DT || !MOUSE_EXIT\n-                    || !MOUSE_EXIT_TD) {\n+            if (FAILED || !MOUSE_ENTERED || !MOUSE_ENTERED_DT || !MOUSE_EXIT ||\n+                !MOUSE_EXIT_TD) {\n+                System.out.println(\n+                        \"Events, FAILED = \" + FAILED + \", MOUSE_ENTERED = \" +\n+                        MOUSE_ENTERED + \", MOUSE_ENTERED_DT = \" +\n+                        MOUSE_ENTERED_DT + \", MOUSE_EXIT = \" + MOUSE_EXIT +\n+                        \", MOUSE_EXIT_TD = \" + MOUSE_EXIT_TD);\n+                captureScreen(r);\n@@ -132,0 +145,10 @@\n+    private static void captureScreen(Robot r) {\n+        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n+        try {\n+            ImageIO.write(r.createScreenCapture(\n+                    new Rectangle(0, 0, screenSize.width, screenSize.height)),\n+                          \"png\", new File(\"FailedScreenImage.png\"));\n+        } catch (IOException ignore) {\n+        }\n+    }\n+\n@@ -193,0 +216,1 @@\n+            System.out.println( \"Mouse exit\");\n","filename":"test\/jdk\/java\/awt\/dnd\/MissingDragExitEventTest\/MissingDragExitEventTest.java","additions":35,"deletions":11,"binary":false,"changes":46,"status":"modified"}]}