{"files":[{"patch":"@@ -2129,1 +2129,1 @@\n-char* os::pd_reserve_memory_special(size_t bytes, size_t alignment, char* req_addr, bool exec) {\n+char* os::pd_reserve_memory_special(size_t bytes, size_t alignment, size_t page_size, char* req_addr, bool exec) {\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1779,1 +1779,1 @@\n-char* os::pd_reserve_memory_special(size_t bytes, size_t alignment, char* req_addr, bool exec) {\n+char* os::pd_reserve_memory_special(size_t bytes, size_t alignment, size_t page_size, char* req_addr, bool exec) {\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3960,0 +3960,1 @@\n+                                                   size_t page_size,\n@@ -3964,1 +3965,1 @@\n-  assert(is_aligned(req_addr, os::large_page_size()), \"Must be\");\n+  assert(is_aligned(req_addr, page_size), \"Must be\");\n@@ -3966,2 +3967,2 @@\n-  assert(is_power_of_2(os::large_page_size()), \"Must be\");\n-  assert(bytes >= os::large_page_size(), \"Shouldn't allocate large pages for small sizes\");\n+  assert(is_power_of_2(page_size), \"Must be\");\n+  assert(bytes >= page_size, \"Shouldn't allocate large pages for small sizes\");\n@@ -3977,1 +3978,1 @@\n-  size_t required_alignment = MAX(os::large_page_size(), alignment);\n+  size_t required_alignment = MAX(page_size, alignment);\n@@ -3984,2 +3985,2 @@\n-  size_t large_bytes = align_down(bytes, os::large_page_size());\n-  bool large_committed = commit_memory_special(large_bytes, os::large_page_size(), aligned_start, exec);\n+  size_t large_bytes = align_down(bytes, page_size);\n+  bool large_committed = commit_memory_special(large_bytes, page_size, aligned_start, exec);\n@@ -4014,1 +4015,1 @@\n-char* os::pd_reserve_memory_special(size_t bytes, size_t alignment,\n+char* os::pd_reserve_memory_special(size_t bytes, size_t alignment, size_t page_size,\n@@ -4020,0 +4021,1 @@\n+    \/\/ No support for using specific page sizes with SHM.\n@@ -4023,1 +4025,1 @@\n-    addr = os::Linux::reserve_memory_special_huge_tlbfs(bytes, alignment, req_addr, exec);\n+    addr = os::Linux::reserve_memory_special_huge_tlbfs(bytes, alignment, page_size, req_addr, exec);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -93,1 +93,1 @@\n-  static char* reserve_memory_special_huge_tlbfs(size_t bytes, size_t alignment, char* req_addr, bool exec);\n+  static char* reserve_memory_special_huge_tlbfs(size_t bytes, size_t alignment, size_t page_size, char* req_addr, bool exec);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3277,1 +3277,1 @@\n-char* os::pd_reserve_memory_special(size_t bytes, size_t alignment, char* addr,\n+char* os::pd_reserve_memory_special(size_t bytes, size_t alignment, size_t page_size, char* addr,\n@@ -3280,0 +3280,1 @@\n+  assert(page_size == os::large_page_size(), \"Currently only support one large page size on Windows\");\n@@ -3281,1 +3282,1 @@\n-  if (!is_aligned(bytes, os::large_page_size()) || alignment > os::large_page_size()) {\n+  if (!is_aligned(bytes, page_size) || alignment > page_size) {\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -172,1 +172,1 @@\n-                                    const size_t alignment,  bool exec) {\n+                                    const size_t alignment, const size_t page_size, bool exec) {\n@@ -179,1 +179,1 @@\n-  char* base = os::reserve_memory_special(size, alignment, requested_address, exec);\n+  char* base = os::reserve_memory_special(size, alignment, page_size, requested_address, exec);\n@@ -239,1 +239,1 @@\n-    char* base = reserve_memory_special(requested_address, size, alignment, executable);\n+    char* base = reserve_memory_special(requested_address, size, alignment, page_size, executable);\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1891,1 +1891,1 @@\n-char* os::reserve_memory_special(size_t size, size_t alignment,\n+char* os::reserve_memory_special(size_t size, size_t alignment, size_t page_size,\n@@ -1896,1 +1896,1 @@\n-  char* result = pd_reserve_memory_special(size, alignment, addr, executable);\n+  char* result = pd_reserve_memory_special(size, alignment, page_size, addr, executable);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -162,1 +162,2 @@\n-  static char*  pd_reserve_memory_special(size_t size, size_t alignment,\n+  static char*  pd_reserve_memory_special(size_t size, size_t alignment, size_t page_size,\n+\n@@ -421,1 +422,1 @@\n-  static char*  reserve_memory_special(size_t size, size_t alignment,\n+  static char*  reserve_memory_special(size_t size, size_t alignment, size_t page_size,\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -50,2 +50,2 @@\n-    static char* reserve_memory_special_huge_tlbfs(size_t bytes, size_t alignment, char* req_addr, bool exec) {\n-      return os::Linux::reserve_memory_special_huge_tlbfs(bytes, alignment, req_addr, exec);\n+    static char* reserve_memory_special_huge_tlbfs(size_t bytes, size_t alignment, size_t page_size, char* req_addr, bool exec) {\n+      return os::Linux::reserve_memory_special_huge_tlbfs(bytes, alignment, page_size, req_addr, exec);\n@@ -103,1 +103,1 @@\n-    char* addr = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, lp, NULL, false);\n+    char* addr = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, lp, lp, NULL, false);\n@@ -129,1 +129,1 @@\n-      char* p = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, alignment, NULL, false);\n+      char* p = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, alignment, lp, NULL, false);\n@@ -169,1 +169,1 @@\n-      char* p = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, alignment, req_addr, false);\n+      char* p = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, alignment, lp, req_addr, false);\n@@ -219,1 +219,1 @@\n-      char* p = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, alignment, req_addr, false);\n+      char* p = HugeTlbfsMemory::reserve_memory_special_huge_tlbfs(size, alignment, lp, req_addr, false);\n@@ -256,1 +256,1 @@\n-  static void test_reserve_memory_special_huge_tlbfs_size_aligned(size_t size, size_t alignment) {\n+  static void test_reserve_memory_special_huge_tlbfs_size_aligned(size_t size, size_t alignment, size_t page_size) {\n@@ -261,1 +261,1 @@\n-    char* addr = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, NULL, false);\n+    char* addr = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, page_size, NULL, false);\n@@ -278,1 +278,1 @@\n-      test_reserve_memory_special_huge_tlbfs_size_aligned(size, lp);\n+      test_reserve_memory_special_huge_tlbfs_size_aligned(size, lp, lp);\n@@ -322,1 +322,1 @@\n-        char* p = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, NULL, false);\n+        char* p = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, lp, NULL, false);\n@@ -337,1 +337,1 @@\n-        char* p = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, req_addr, false);\n+        char* p = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, lp, req_addr, false);\n@@ -352,1 +352,1 @@\n-        char* p = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, req_addr, false);\n+        char* p = os::Linux::reserve_memory_special_huge_tlbfs(size, alignment, lp, req_addr, false);\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_linux.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  char* result = os::reserve_memory_special(large_allocation_size, os::large_page_size(), NULL, false);\n+  char* result = os::reserve_memory_special(large_allocation_size, os::large_page_size(), os::large_page_size(), NULL, false);\n@@ -78,1 +78,1 @@\n-  char* actual_location = os::reserve_memory_special(expected_allocation_size, os::large_page_size(), expected_location, false);\n+  char* actual_location = os::reserve_memory_special(expected_allocation_size, os::large_page_size(), os::large_page_size(), expected_location, false);\n","filename":"test\/hotspot\/gtest\/runtime\/test_os_windows.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}