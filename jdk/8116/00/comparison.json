{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+ * @LastModified: Apr 2022\n@@ -139,1 +140,1 @@\n-            if (type.isAssignableFrom(XPathEvaluationResult.class)) {\n+            if (type == XPathEvaluationResult.class) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/jaxp\/XPathExpressionImpl.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-            if (type.isAssignableFrom(XPathEvaluationResult.class)) {\n+            if (type == XPathEvaluationResult.class) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/jaxp\/XPathImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -215,8 +215,8 @@\n-        if (type.isAssignableFrom(Boolean.class) ||\n-                type.isAssignableFrom(Double.class) ||\n-                type.isAssignableFrom(Integer.class) ||\n-                type.isAssignableFrom(Long.class) ||\n-                type.isAssignableFrom(String.class) ||\n-                type.isAssignableFrom(XPathNodes.class) ||\n-                type.isAssignableFrom(Node.class) ||\n-                type.isAssignableFrom(XPathEvaluationResult.class)) {\n+        if (type == Boolean.class ||\n+                type == Double.class ||\n+                type == Integer.class ||\n+                type == Long.class ||\n+                type == String.class ||\n+                type == XPathNodes.class ||\n+                type == Node.class ||\n+                type == XPathEvaluationResult.class) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/jaxp\/XPathImplUtil.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-        if (type.isAssignableFrom(XPathEvaluationResult.class)) {\n+        if (type == XPathEvaluationResult.class) {\n@@ -153,1 +153,1 @@\n-                if (Double.class.isAssignableFrom(type)) {\n+                if (Double.class == type) {\n@@ -155,1 +155,1 @@\n-                } else if (Integer.class.isAssignableFrom(type)) {\n+                } else if (Integer.class == type) {\n@@ -157,1 +157,1 @@\n-                } else if (Long.class.isAssignableFrom(type)) {\n+                } else if (Long.class == type) {\n@@ -188,1 +188,1 @@\n-        if (type.isAssignableFrom(Boolean.class)) {\n+        if (type == Boolean.class) {\n@@ -192,1 +192,1 @@\n-        } else if (type.isAssignableFrom(String.class)) {\n+        } else if (type == String.class) {\n@@ -194,1 +194,1 @@\n-        } else if (type.isAssignableFrom(XPathNodes.class)) {\n+        } else if (type == XPathNodes.class) {\n@@ -196,1 +196,1 @@\n-        } else if (type.isAssignableFrom(Node.class)) {\n+        } else if (type == Node.class) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xpath\/internal\/jaxp\/XPathResultImpl.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -326,1 +326,1 @@\n-        if (Boolean.class.isAssignableFrom(value.getClass())) {\n+        if (Boolean.class.isInstance(value)) {\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/JdkXmlFeatures.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-        if (Integer.class.isAssignableFrom(type)) {\n+        if (Integer.class == type) {\n@@ -122,1 +122,1 @@\n-        } else if (Boolean.class.isAssignableFrom(type)) {\n+        } else if (Boolean.class == type) {\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/SecuritySupport.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}