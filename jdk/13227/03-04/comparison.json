{"files":[{"patch":"@@ -40,3 +40,1 @@\n-    assert(p != nullptr, \"null pointer\");\n-\n-    memcpy((void*)p, &x, sizeof(T));\n+    memcpy((void*)p, &x, sizeof x);\n@@ -228,1 +226,1 @@\n-  void emit_int16(uint16_t x) { put_native(end(), x); set_end(end() + sizeof(uint16_t)); }\n+  void emit_int16(uint16_t x) { put_native(end(), x); set_end(end() + sizeof x); }\n@@ -258,5 +256,6 @@\n-  void emit_int64( uint64_t x)  { put_native(end(), x); set_end(end() + sizeof(uint64_t)); }\n-\n-  void emit_float( jfloat  x)  { put_native(end(), jint_cast(x)); set_end(end() + sizeof(jfloat)); }\n-  void emit_double(jdouble x)  { put_native(end(), julong_cast(x)); set_end(end() + sizeof(jdouble)); }\n-  void emit_address(address x) { put_native(end(), p2i(x)); set_end(end() + sizeof(address)); }\n+  void emit_int64(uint64_t x)  { put_native(end(), x); set_end(end() + sizeof(uint64_t)); }\n+  template <typename T>\n+  void emit_native(T x) { put_native(end(), x); set_end(end() + sizeof x); }\n+  void emit_float(jfloat  x)  { emit_native(x); }\n+  void emit_double(jdouble x)  { emit_native(x); }\n+  void emit_address(address x) { emit_native(x); }\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"}]}