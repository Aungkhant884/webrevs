{"files":[{"patch":"@@ -38,38 +38,0 @@\n-    \/**\n-     * Each element of the array represents the ascii encoded\n-     * hex relative to its index, for example:<p>\n-     * <pre>\n-     *       0 -> '00' -> ('0' << 8) | '0' -> 0x3030\n-     *       1 -> '01' -> ('0' << 8) | '1' -> 0x3130\n-     *       2 -> '02' -> ('0' << 8) | '2' -> 0x3230\n-     *\n-     *     ...\n-     *\n-     *      10 -> '0a' -> ('0' << 8) | 'a' -> 0x3061\n-     *      11 -> '0b' -> ('0' << 8) | 'b' -> 0x3062\n-     *      12 -> '0c' -> ('0' << 8) | 'c' -> 0x3063\n-     *\n-     *     ...\n-     *\n-     *      26 -> '1a' -> ('1' << 8) | 'a' -> 0x3161\n-     *      27 -> '1b' -> ('1' << 8) | 'b' -> 0x3162\n-     *      28 -> '1c' -> ('1' << 8) | 'c' -> 0x3163\n-     *\n-     *     ...\n-     *\n-     *     253 -> 'fd' -> ('f' << 8) | 'd' -> 0x6664\n-     *     254 -> 'fe' -> ('f' << 8) | 'e' -> 0x6665\n-     *     255 -> 'ff' -> ('f' << 8) | 'f' -> 0x6666\n-     * <\/pre>\n-     * <p>use like this:\n-     * <pre>\n-     *     int v = 254;\n-     *\n-     *     char[] chars = new char[2];\n-     *\n-     *     short i = DIGITS[v]; \/\/ 26213\n-     *\n-     *     chars[0] = (char) (byte) (i >> 8); \/\/ 'f'\n-     *     chars[1] = (char) (byte) i;        \/\/ 'e'\n-     * <\/pre>\n-     *\/\n@@ -88,1 +50,1 @@\n-            short hi = (short) ((i < 10 ? i + '0' : i - 10 + 'a') << 8);\n+            short hi = (short) (i < 10 ? i + '0' : i - 10 + 'a');\n@@ -91,1 +53,1 @@\n-                short lo = (short) (j < 10 ? j + '0' : j - 10 + 'a');\n+                short lo = (short) ((j < 10 ? j + '0' : j - 10 + 'a') << 8);\n@@ -111,1 +73,1 @@\n-        return (DIGITS[b0 & 0xff] << 16) | DIGITS[b1 & 0xff];\n+        return DIGITS[b0 & 0xff] | (DIGITS[b1 & 0xff] << 16);\n@@ -120,4 +82,4 @@\n-        return (((long) DIGITS[b0 & 0xff]) << 48)\n-                | (((long) DIGITS[b1 & 0xff]) << 32)\n-                | (DIGITS[b2 & 0xff] << 16)\n-                | DIGITS[b3 & 0xff];\n+        return DIGITS[b0 & 0xff]\n+                | (DIGITS[b1 & 0xff] << 16)\n+                | (((long) DIGITS[b2 & 0xff]) << 32)\n+                | (((long) DIGITS[b3 & 0xff]) << 48);\n@@ -132,1 +94,0 @@\n-            putCharMH.invokeExact(buffer, --index, digits & 0xFF);\n@@ -134,0 +95,1 @@\n+            putCharMH.invokeExact(buffer, --index, digits & 0xFF);\n@@ -137,1 +99,1 @@\n-        putCharMH.invokeExact(buffer, --index, digits & 0xFF);\n+        putCharMH.invokeExact(buffer, --index, digits >> 8);\n@@ -140,1 +102,1 @@\n-            putCharMH.invokeExact(buffer, --index, digits >> 8);\n+            putCharMH.invokeExact(buffer, --index, digits & 0xFF);\n","filename":"src\/java.base\/share\/classes\/java\/util\/HexDigits.java","additions":10,"deletions":48,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -34,3 +34,1 @@\n-import jdk.internal.misc.Unsafe;\n-\n-import static jdk.internal.misc.Unsafe.ARRAY_BYTE_BASE_OFFSET;\n+import jdk.internal.util.ByteArrayLittleEndian;\n@@ -81,2 +79,0 @@\n-    private static final Unsafe UNSAFE = Unsafe.getUnsafe();\n-\n@@ -475,1 +471,1 @@\n-        UNSAFE.putLongUnaligned(\n+        ByteArrayLittleEndian.setLong(\n@@ -477,3 +473,2 @@\n-                ARRAY_BYTE_BASE_OFFSET,\n-                HexDigits.packDigits((int) (msb >> 56), (int) (msb >> 48), (int) (msb >> 40), (int) (msb >> 32)),\n-                true);\n+                0,\n+                HexDigits.packDigits((int) (msb >> 56), (int) (msb >> 48), (int) (msb >> 40), (int) (msb >> 32)));\n@@ -481,1 +476,1 @@\n-        UNSAFE.putIntUnaligned(\n+        ByteArrayLittleEndian.setInt(\n@@ -483,3 +478,2 @@\n-                ARRAY_BYTE_BASE_OFFSET + 9,\n-                HexDigits.packDigits(((int) msb) >> 24, ((int) msb) >> 16),\n-                true);\n+                9,\n+                HexDigits.packDigits(((int) msb) >> 24, ((int) msb) >> 16));\n@@ -487,1 +481,1 @@\n-        UNSAFE.putIntUnaligned(\n+        ByteArrayLittleEndian.setInt(\n@@ -489,3 +483,2 @@\n-                ARRAY_BYTE_BASE_OFFSET + 14,\n-                HexDigits.packDigits(((int) msb) >> 8, (int) msb),\n-                true);\n+                14,\n+                HexDigits.packDigits(((int) msb) >> 8, (int) msb));\n@@ -493,1 +486,1 @@\n-        UNSAFE.putIntUnaligned(\n+        ByteArrayLittleEndian.setInt(\n@@ -495,3 +488,2 @@\n-                ARRAY_BYTE_BASE_OFFSET + 19,\n-                HexDigits.packDigits((int) (lsb >> 56), (int) (lsb >> 48)),\n-                true);\n+                19,\n+                HexDigits.packDigits((int) (lsb >> 56), (int) (lsb >> 48)));\n@@ -499,1 +491,1 @@\n-        UNSAFE.putLongUnaligned(\n+        ByteArrayLittleEndian.setLong(\n@@ -501,4 +493,3 @@\n-                ARRAY_BYTE_BASE_OFFSET + 24,\n-                HexDigits.packDigits(((int) (lsb >> 40)), (int) (lsb >> 32), ((int) lsb) >> 24, ((int) lsb) >> 16),\n-                true);\n-        UNSAFE.putIntUnaligned(\n+                24,\n+                HexDigits.packDigits(((int) (lsb >> 40)), (int) (lsb >> 32), ((int) lsb) >> 24, ((int) lsb) >> 16));\n+        ByteArrayLittleEndian.setInt(\n@@ -506,3 +497,2 @@\n-                ARRAY_BYTE_BASE_OFFSET + 32,\n-                HexDigits.packDigits(((int) lsb) >> 8, (int) lsb),\n-                true);\n+                32,\n+                HexDigits.packDigits(((int) lsb) >> 8, (int) lsb));\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":19,"deletions":29,"binary":false,"changes":48,"status":"modified"}]}