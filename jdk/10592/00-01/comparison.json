{"files":[{"patch":"@@ -754,1 +754,1 @@\n-        if(uri.getHost() != null && uri.getPort() != -1) {\n+        if (uri.getHost() != null && uri.getPort() != -1) {\n@@ -756,1 +756,1 @@\n-        } else if (uri.getHost()!=null) {\n+        } else if (uri.getHost() != null) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,1 @@\n-    static class Http2TestHandler implements Http2Handler{\n+    static class Http2TestHandler implements Http2Handler {\n@@ -58,1 +58,1 @@\n-            if(e.getRequestURI().getAuthority().contains(\"user@\")){\n+            if (e.getRequestURI().getAuthority().contains(\"user@\")) {\n@@ -67,1 +67,1 @@\n-        Http2TestServer http2TestServer = new Http2TestServer(\"localhost\",true, sslContext);\n+        Http2TestServer http2TestServer = new Http2TestServer(\"localhost\", true, sslContext);\n@@ -92,1 +92,2 @@\n-        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n+        try {\n+            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n@@ -94,2 +95,5 @@\n-        if(response.statusCode()==500){\n-            throw new RuntimeException(\"Test Failed : \" + response.uri().getAuthority());\n+            if (response.statusCode() == 500) {\n+                throw new RuntimeException(\"Test Failed : \" + response.uri().getAuthority());\n+            }\n+        } finally {\n+            server.stop();\n@@ -97,1 +101,0 @@\n-        server.stop();\n@@ -99,1 +102,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/UserInfoTest.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"}]}