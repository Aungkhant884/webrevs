{"files":[{"patch":"@@ -110,2 +110,4 @@\n-void G1BarrierSetAssembler::g1_write_barrier_pre(MacroAssembler* masm, DecoratorSet decorators, Register obj, RegisterOrConstant ind_or_offs, Register pre_val,\n-                                                 Register tmp1, Register tmp2, MacroAssembler::PreservationLevel preservation_level) {\n+void G1BarrierSetAssembler::g1_write_barrier_pre(MacroAssembler* masm, DecoratorSet decorators,\n+                                                 Register obj, RegisterOrConstant ind_or_offs, Register pre_val,\n+                                                 Register tmp1, Register tmp2,\n+                                                 MacroAssembler::PreservationLevel preservation_level) {\n@@ -213,2 +215,4 @@\n-void G1BarrierSetAssembler::g1_write_barrier_post(MacroAssembler* masm, DecoratorSet decorators, Register store_addr, Register new_val,\n-                                                  Register tmp1, Register tmp2, Register tmp3, MacroAssembler::PreservationLevel preservation_level) {\n+void G1BarrierSetAssembler::g1_write_barrier_post(MacroAssembler* masm, DecoratorSet decorators,\n+                                                  Register store_addr, Register new_val,\n+                                                  Register tmp1, Register tmp2, Register tmp3,\n+                                                  MacroAssembler::PreservationLevel preservation_level) {\n@@ -290,1 +294,2 @@\n-                                       Register tmp1, Register tmp2, Register tmp3, MacroAssembler::PreservationLevel preservation_level) {\n+                                       Register tmp1, Register tmp2, Register tmp3,\n+                                       MacroAssembler::PreservationLevel preservation_level) {\n@@ -295,1 +300,4 @@\n-  g1_write_barrier_pre(masm, decorators, base, ind_or_offs, tmp1, tmp2, tmp3, preservation_level);\n+  g1_write_barrier_pre(masm, decorators,\n+                       base, ind_or_offs,\n+                       tmp1, tmp2, tmp3,\n+                       preservation_level);\n@@ -297,1 +305,4 @@\n-  BarrierSetAssembler::store_at(masm, decorators, type, base, ind_or_offs, val, tmp1, tmp2, tmp3, preservation_level);\n+  BarrierSetAssembler::store_at(masm, decorators,\n+                                type, base, ind_or_offs, val,\n+                                tmp1, tmp2, tmp3,\n+                                preservation_level);\n@@ -308,1 +319,4 @@\n-    g1_write_barrier_post(masm, decorators, base, val, tmp1, tmp2, tmp3, preservation_level);\n+    g1_write_barrier_post(masm, decorators,\n+                          base, val,\n+                          tmp1, tmp2, tmp3,\n+                          preservation_level);\n@@ -323,1 +337,4 @@\n-  ModRefBarrierSetAssembler::load_at(masm, decorators, type, base, ind_or_offs, dst, tmp1, tmp2, preservation_level, L_handle_null);\n+  ModRefBarrierSetAssembler::load_at(masm, decorators, type,\n+                                     base, ind_or_offs, dst,\n+                                     tmp1, tmp2,\n+                                     preservation_level, L_handle_null);\n@@ -330,2 +347,4 @@\n-    g1_write_barrier_pre(masm, decorators | IS_NOT_NULL, noreg \/* obj *\/, (intptr_t)0, dst \/* pre_val *\/,\n-                         tmp1, tmp2, preservation_level);\n+    g1_write_barrier_pre(masm, decorators | IS_NOT_NULL,\n+                         noreg \/* obj *\/, (intptr_t)0, dst \/* pre_val *\/,\n+                         tmp1, tmp2,\n+                         preservation_level);\n@@ -336,1 +355,3 @@\n-void G1BarrierSetAssembler::resolve_jobject(MacroAssembler* masm, Register value, Register tmp1, Register tmp2, MacroAssembler::PreservationLevel preservation_level) {\n+void G1BarrierSetAssembler::resolve_jobject(MacroAssembler* masm, Register value,\n+                                            Register tmp1, Register tmp2,\n+                                            MacroAssembler::PreservationLevel preservation_level) {\n@@ -347,1 +368,4 @@\n-  g1_write_barrier_pre(masm, IN_NATIVE | ON_PHANTOM_OOP_REF, noreg, noreg, value, tmp1, tmp2, preservation_level);\n+  g1_write_barrier_pre(masm, IN_NATIVE | ON_PHANTOM_OOP_REF,\n+                       noreg, noreg, value,\n+                       tmp1, tmp2,\n+                       preservation_level);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1BarrierSetAssembler_ppc.cpp","additions":37,"deletions":13,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -40,1 +40,2 @@\n-  virtual void gen_write_ref_array_pre_barrier(MacroAssembler* masm, DecoratorSet decorators, Register from, Register to, Register count,\n+  virtual void gen_write_ref_array_pre_barrier(MacroAssembler* masm, DecoratorSet decorators,\n+                                               Register from, Register to, Register count,\n@@ -42,1 +43,3 @@\n-  virtual void gen_write_ref_array_post_barrier(MacroAssembler* masm, DecoratorSet decorators, Register addr, Register count, Register preserve);\n+  virtual void gen_write_ref_array_post_barrier(MacroAssembler* masm, DecoratorSet decorators,\n+                                                Register addr, Register count,\n+                                                Register preserve);\n@@ -44,4 +47,8 @@\n-  void g1_write_barrier_pre(MacroAssembler* masm, DecoratorSet decorators, Register obj, RegisterOrConstant ind_or_offs, Register pre_val,\n-                            Register tmp1, Register tmp2, MacroAssembler::PreservationLevel preservation_level);\n-  void g1_write_barrier_post(MacroAssembler* masm, DecoratorSet decorators, Register store_addr, Register new_val,\n-                             Register tmp1, Register tmp2, Register tmp3, MacroAssembler::PreservationLevel preservation_level);\n+  void g1_write_barrier_pre(MacroAssembler* masm, DecoratorSet decorators,\n+                            Register obj, RegisterOrConstant ind_or_offs, Register pre_val,\n+                            Register tmp1, Register tmp2,\n+                            MacroAssembler::PreservationLevel preservation_level);\n+  void g1_write_barrier_post(MacroAssembler* masm, DecoratorSet decorators,\n+                             Register store_addr, Register new_val,\n+                             Register tmp1, Register tmp2, Register tmp3,\n+                             MacroAssembler::PreservationLevel preservation_level);\n@@ -51,1 +58,2 @@\n-                            Register tmp1, Register tmp2, Register tmp3, MacroAssembler::PreservationLevel preservation_level);\n+                            Register tmp1, Register tmp2, Register tmp3,\n+                            MacroAssembler::PreservationLevel preservation_level);\n@@ -64,1 +72,2 @@\n-                       Register tmp1, Register tmp2, MacroAssembler::PreservationLevel preservation_level,\n+                       Register tmp1, Register tmp2,\n+                       MacroAssembler::PreservationLevel preservation_level,\n@@ -67,1 +76,2 @@\n-  virtual void resolve_jobject(MacroAssembler* masm, Register value, Register tmp1, Register tmp2,\n+  virtual void resolve_jobject(MacroAssembler* masm, Register value,\n+                               Register tmp1, Register tmp2,\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/g1\/g1BarrierSetAssembler_ppc.hpp","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -52,1 +52,2 @@\n-  virtual void resolve_jobject(MacroAssembler* masm, Register value, Register tmp1, Register tmp2,\n+  virtual void resolve_jobject(MacroAssembler* masm, Register value,\n+                               Register tmp1, Register tmp2,\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/barrierSetAssembler_ppc.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -100,1 +100,4 @@\n-  BarrierSetAssembler::store_at(masm, decorators, type, base, ind_or_offs, val, tmp1, tmp2, tmp3, preservation_level);\n+  BarrierSetAssembler::store_at(masm, decorators, type,\n+                                base, ind_or_offs, val,\n+                                tmp1, tmp2, tmp3,\n+                                preservation_level);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/cardTableBarrierSetAssembler_ppc.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,3 @@\n-    gen_write_ref_array_pre_barrier(masm, decorators, src, dst, count, preserve1, preserve2);\n+    gen_write_ref_array_pre_barrier(masm, decorators,\n+                                    src, dst, count,\n+                                    preserve1, preserve2);\n@@ -64,1 +66,4 @@\n-    oop_store_at(masm, decorators, type, base, ind_or_offs, val, tmp1, tmp2, tmp3, preservation_level);\n+    oop_store_at(masm, decorators, type,\n+                 base, ind_or_offs, val,\n+                 tmp1, tmp2, tmp3,\n+                 preservation_level);\n@@ -66,1 +71,4 @@\n-    BarrierSetAssembler::store_at(masm, decorators, type, base, ind_or_offs, val, tmp1, tmp2, tmp3, preservation_level);\n+    BarrierSetAssembler::store_at(masm, decorators, type,\n+                                  base, ind_or_offs, val,\n+                                  tmp1, tmp2, tmp3,\n+                                  preservation_level);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/modRefBarrierSetAssembler_ppc.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,1 +38,2 @@\n-  virtual void gen_write_ref_array_pre_barrier(MacroAssembler* masm, DecoratorSet decorators, Register from, Register to, Register count,\n+  virtual void gen_write_ref_array_pre_barrier(MacroAssembler* masm, DecoratorSet decorators,\n+                                               Register from, Register to, Register count,\n@@ -40,1 +41,2 @@\n-  virtual void gen_write_ref_array_post_barrier(MacroAssembler* masm, DecoratorSet decorators, Register addr, Register count, Register preserve) {}\n+  virtual void gen_write_ref_array_post_barrier(MacroAssembler* masm, DecoratorSet decorators,\n+                                                Register addr, Register count, Register preserve) {}\n@@ -44,1 +46,2 @@\n-                            Register tmp1, Register tmp2, Register tmp3, MacroAssembler::PreservationLevel preservation_level) = 0;\n+                            Register tmp1, Register tmp2, Register tmp3,\n+                            MacroAssembler::PreservationLevel preservation_level) = 0;\n@@ -47,1 +50,2 @@\n-                                  Register src, Register dst, Register count, Register preserve1, Register preserve2);\n+                                  Register src, Register dst, Register count,\n+                                  Register preserve1, Register preserve2);\n@@ -49,1 +53,2 @@\n-                                  Register dst, Register count, Register preserve);\n+                                  Register dst, Register count,\n+                                  Register preserve);\n@@ -53,1 +58,2 @@\n-                        Register tmp1, Register tmp2, Register tmp3, MacroAssembler::PreservationLevel preservation_level);\n+                        Register tmp1, Register tmp2, Register tmp3,\n+                        MacroAssembler::PreservationLevel preservation_level);\n","filename":"src\/hotspot\/cpu\/ppc\/gc\/shared\/modRefBarrierSetAssembler_ppc.hpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -478,0 +478,2 @@\n+\/\/ Kills:\n+\/\/   - index\n@@ -502,1 +504,2 @@\n-  load_heap_oop(result, arrayOopDesc::base_offset_in_bytes(T_OBJECT), result, tmp1, tmp2,\n+  load_heap_oop(result, arrayOopDesc::base_offset_in_bytes(T_OBJECT), result,\n+                tmp1, tmp2,\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+  \/\/ Indicates whether and, if so, which registers must be preserved when calling runtime code.\n@@ -272,1 +273,1 @@\n-  \/\/ This is especially useful for making calls to the JRT in places in which this haven't been done before;\n+  \/\/ This is especially useful for making calls to the JRT in places in which this hasn't been done before;\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -238,3 +238,3 @@\n-  Register argbase    = R15_esp; \/\/ parameter (preserved)\n-  Register temp1      = R30;\n-  Register param_size = R7;\n+  Register R15_argbase   = R15_esp; \/\/ parameter (preserved)\n+  Register R30_tmp1      = R30;\n+  Register R7_param_size = R7;\n@@ -251,1 +251,1 @@\n-    __ load_sized_value(temp1, Method::intrinsic_id_offset_in_bytes(), R19_method,\n+    __ load_sized_value(R30_tmp1, Method::intrinsic_id_offset_in_bytes(), R19_method,\n@@ -253,1 +253,1 @@\n-    __ cmpwi(CCR1, temp1, (int) iid);\n+    __ cmpwi(CCR1, R30_tmp1, (int) iid);\n@@ -269,2 +269,2 @@\n-    __ ld(param_size, in_bytes(Method::const_offset()), R19_method);\n-    __ load_sized_value(param_size, in_bytes(ConstMethod::size_of_parameters_offset()), param_size,\n+    __ ld(R7_param_size, in_bytes(Method::const_offset()), R19_method);\n+    __ load_sized_value(R7_param_size, in_bytes(ConstMethod::size_of_parameters_offset()), R7_param_size,\n@@ -274,1 +274,1 @@\n-    DEBUG_ONLY(param_size = noreg);\n+    DEBUG_ONLY(R7_param_size = noreg);\n@@ -279,2 +279,2 @@\n-    __ ld(tmp_mh = temp1, __ argument_offset(param_size, param_size, 0), argbase);\n-    DEBUG_ONLY(param_size = noreg);\n+    __ ld(tmp_mh = R30_tmp1, __ argument_offset(R7_param_size, R7_param_size, 0), R15_argbase);\n+    DEBUG_ONLY(R7_param_size = noreg);\n@@ -298,2 +298,2 @@\n-      __ ld(tmp_recv = temp1, __ argument_offset(param_size, param_size, 0), argbase);\n-      DEBUG_ONLY(param_size = noreg);\n+      __ ld(tmp_recv = R30_tmp1, __ argument_offset(R7_param_size, R7_param_size, 0), R15_argbase);\n+      DEBUG_ONLY(R7_param_size = noreg);\n@@ -302,2 +302,2 @@\n-    __ ld(R19_member, RegisterOrConstant((intptr_t)8), argbase);\n-    __ add(argbase, Interpreter::stackElementSize, argbase);\n+    __ ld(R19_member, RegisterOrConstant((intptr_t)8), R15_argbase);\n+    __ add(R15_argbase, Interpreter::stackElementSize, R15_argbase);\n@@ -316,1 +316,1 @@\n-  Register temp1 = (for_compiler_entry ? R25_tmp5 : R31);\n+  Register temp1 = (for_compiler_entry ? R25_tmp5 : R31); \/\/ must be non-volatile due to runtime calls\n","filename":"src\/hotspot\/cpu\/ppc\/methodHandles_ppc.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2229,6 +2229,4 @@\n-    {\n-      Register tmp1 = R12_tmp, tmp2 = R11_klass;\n-      __ load_heap_oop(R10_oop, R8_offset, R3_from, tmp1, tmp2,\n-                       MacroAssembler::PRESERVATION_FRAME_LR_GP_REGS,\n-                       AS_RAW, &store_null);\n-    }\n+    __ load_heap_oop(R10_oop, R8_offset, R3_from,\n+                     R11_scratch1, R12_tmp,\n+                     MacroAssembler::PRESERVATION_FRAME_LR_GP_REGS,\n+                     AS_RAW, &store_null);\n","filename":"src\/hotspot\/cpu\/ppc\/stubGenerator_ppc.cpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -528,1 +528,2 @@\n-  __ load_heap_oop(R3_RET, referent_offset, R3_RET, \/* non-volatile temp *\/ R31, R11_scratch1,\n+  __ load_heap_oop(R3_RET, referent_offset, R3_RET,\n+                   \/* non-volatile temp *\/ R31, R11_scratch1,\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -308,2 +308,0 @@\n-  const Register tmp1 = R11_scratch1,\n-                 tmp2 = R12_scratch2;\n@@ -314,2 +312,2 @@\n-  __ get_cache_index_at_bcp(tmp1, 1, index_size);  \/\/ Load index.\n-  __ load_resolved_reference_at_index(R17_tos, tmp1, tmp2, &is_null);\n+  __ get_cache_index_at_bcp(R11_scratch1, 1, index_size);  \/\/ Load index.\n+  __ load_resolved_reference_at_index(R17_tos, R11_scratch1, R12_scratch2, &is_null);\n@@ -318,4 +316,4 @@\n-  int simm16_rest = __ load_const_optimized(tmp1, Universe::the_null_sentinel_addr(), R0, true);\n-  __ ld(tmp1, simm16_rest, tmp1);\n-  __ resolve_oop_handle(tmp1);\n-  __ cmpld(CCR0, R17_tos, tmp1);\n+  int simm16_rest = __ load_const_optimized(R11_scratch1, Universe::the_null_sentinel_addr(), R0, true);\n+  __ ld(R11_scratch1, simm16_rest, R11_scratch1);\n+  __ resolve_oop_handle(R11_scratch1);\n+  __ cmpld(CCR0, R17_tos, R11_scratch1);\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"}]}