{"files":[{"patch":"@@ -36,0 +36,3 @@\n+import java.nio.ByteBuffer;\n+import java.nio.channels.ServerSocketChannel;\n+import java.nio.channels.SocketChannel;\n@@ -48,1 +51,2 @@\n-            ServerSocket serversocket = new ServerSocket();\n+            ServerSocketChannel serverSocketChannel = ServerSocketChannel.open();\n+            ServerSocket serversocket = serverSocketChannel.socket();\n@@ -93,1 +97,2 @@\n-            try (OutputStreamWriter outputStreamWriter = new OutputStreamWriter(clientSocket.getOutputStream())) {\n+            try  {\n+                OutputStreamWriter outputStreamWriter = new OutputStreamWriter(clientSocket.getOutputStream());\n@@ -107,0 +112,1 @@\n+                clientSocket.getChannel().shutdownOutput();\n@@ -116,2 +122,6 @@\n-            if (clientSocket != null) {\n-                clientSocket.close();\n+            try {\n+                long drained = drain(clientSocket.getChannel());\n+                System.err.printf(\"Server drained %d bytes from the channel%n\", drained);\n+            } catch (Exception x) {\n+                System.err.println(\"Server failed to drain client socket: \" + x);\n+                x.printStackTrace();\n@@ -123,0 +133,22 @@\n+    \n+    static long drain(SocketChannel channel) throws IOException {\n+        if (!channel.isOpen()) return 0;\n+        System.err.println(\"Not reading server: draining socket\");\n+        var blocking = channel.isBlocking();\n+        if (blocking) channel.configureBlocking(false);\n+        long count = 0;\n+        try {\n+            ByteBuffer buffer = ByteBuffer.allocateDirect(8 * 1024);\n+            int read;\n+            while ((read = channel.read(buffer)) > 0) {\n+                count += read;\n+                buffer.clear();\n+            }\n+            return count;\n+        } finally {\n+            if (blocking != channel.isBlocking()) {\n+                channel.configureBlocking(blocking);\n+            }\n+        }\n+    }\n+\n","filename":"test\/jdk\/sun\/net\/www\/http\/KeepAliveStream\/KeepAliveStreamCloseWithWrongContentLength.java","additions":36,"deletions":4,"binary":false,"changes":40,"status":"modified"}]}