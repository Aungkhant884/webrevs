{"files":[{"patch":"@@ -273,2 +273,1 @@\n-    sun\/tools\/jrunscript \\\n-    sun\/tools\/jmod\n+    sun\/tools\/jrunscript\n","filename":"test\/jdk\/TEST.groups","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,66 +0,0 @@\n-#\n-# Copyright (c) 2005, 2012, Oracle and\/or its affiliates. All rights reserved.\n-# Copyright (c) 2022, Huawei Technologies Co., Ltd. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-#\n-\n-setup() {\n-    # Verify directory context variables are set\n-    if [ \"${TESTJAVA}\" = \"\" ] ; then\n-        echo \"TESTJAVA not set. Test cannot execute.  Failed.\"\n-        exit 1\n-    fi\n-\n-    if [ \"${TESTCLASSES}\" = \"\" ] ; then\n-        TESTCLASSES=\".\"\n-    fi\n-\n-    if [ \"${TESTSRC}\" = \"\" ] ; then\n-        TESTSRC=\".\"\n-    fi\n-\n-    OS=`uname -s`\n-    case ${OS} in\n-    Windows_*)\n-        PS=\";\"\n-        FS=\"\\\\\"\n-        # MKS diff deals with trailing CRs automatically\n-        golden_diff=\"diff\"\n-        ;;\n-    CYGWIN*)\n-        PS=\":\"\n-        FS=\"\/\"\n-        # Cygwin diff needs to be told to ignore trailing CRs\n-        golden_diff=\"diff --strip-trailing-cr\"\n-        ;;\n-    *)\n-        PS=\":\"\n-        FS=\"\/\"\n-        # Assume any other platform doesn't have the trailing CR stuff\n-        golden_diff=\"diff\"\n-        ;;\n-    esac\n-\n-    JAVAC=\"${TESTJAVA}\/bin\/javac\"\n-    JMOD=\"${TESTJAVA}\/bin\/jmod\"\n-}\n","filename":"test\/jdk\/sun\/tools\/jmod\/common.sh","additions":0,"deletions":66,"binary":false,"changes":66,"status":"deleted"},{"patch":"@@ -1,75 +0,0 @@\n-#!\/bin\/sh\n-\n-#\n-# Copyright (c) 2022, Huawei Technologies Co., Ltd. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-\n-# @test\n-# @bug 8240903\n-# @run shell jmod-moduleHashesTest.sh\n-# @summary Test consistency of moduleHashes attribute between builds\n-\n-. ${TESTSRC-.}\/common.sh\n-\n-setup\n-\n-NUM_MODULES=64\n-DATE=$(date +%Y-%m-%dT%H:%M:%SZ)\n-\n-mkdir -p src\/ma\n-echo \"module ma {}\" > src\/ma\/module-info.java\n-\n-for i in $(seq $NUM_MODULES); do\n-    mb_name=m${i}b\n-    mkdir -p src\/$mb_name\n-    echo \"module $mb_name {requires ma;}\" > src\/$mb_name\/module-info.java\n-    ${JAVAC} --module-source-path src --module $mb_name -d ${TESTCLASSES}\/classes\n-done\n-\n-mkdir jmods-first\n-mkdir jmods-second\n-\n-for i in $(seq $NUM_MODULES); do\n-    mb_name=m${i}b\n-\n-    ${JMOD} create -class-path ${TESTCLASSES}\/classes\/$mb_name --date=$DATE \\\n-        jmods-first\/$mb_name.jmod\n-\n-    ${JMOD} create -class-path ${TESTCLASSES}\/classes\/$mb_name --date=$DATE \\\n-        jmods-second\/$mb_name.jmod\n-done\n-\n-${JMOD} create -class-path ${TESTCLASSES}\/classes\/ma --date=$DATE \\\n-    --module-path jmods-first --hash-modules \".*\" jmods-first\/ma.jmod\n-\n-${JMOD} create -class-path ${TESTCLASSES}\/classes\/ma --date=$DATE \\\n-    --module-path jmods-second --hash-modules \".*\" jmods-second\/ma.jmod\n-\n-$golden_diff jmods-first\/ma.jmod jmods-second\/ma.jmod\n-if [ $? != 0 ]\n-then\n-    echo \"ModuleHashes attribute not reproducible between builds. Failed.\"\n-    exit 1\n-fi\n-echo \"Passed\"\n-exit 0\n","filename":"test\/jdk\/sun\/tools\/jmod\/jmod-moduleHashesTest.sh","additions":0,"deletions":75,"binary":false,"changes":75,"status":"deleted"},{"patch":"@@ -0,0 +1,136 @@\n+\/*\n+ * Copyright (c) 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8240903\n+ * @summary Test consistency of moduleHashes attribute between builds\n+ * @library \/test\/lib\n+ * @run testng HashesOrderTest\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.spi.ToolProvider;\n+import java.util.stream.Collectors;\n+\n+import jdk.test.lib.compiler.ModuleInfoMaker;\n+\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class HashesOrderTest {\n+    private ToolProvider JMOD_TOOL = ToolProvider.findFirst(\"jmod\")\n+        .orElseThrow(() ->\n+            new RuntimeException(\"jmod tool not found\")\n+        );\n+\n+    private String DATE = \"2021-01-06T14:36:00+02:00\";\n+    private int NUM_MODULES = 64;\n+    private Path mods;\n+    private Path lib1;\n+    private Path lib2;\n+    private ModuleInfoMaker builder;\n+\n+    @Test\n+    public void test() throws Exception {\n+        mods = Path.of(\"mods\");\n+        lib1 = Path.of(\"lib1\");\n+        lib2 = Path.of(\"lib2\");\n+        builder = new ModuleInfoMaker(Path.of(\"src\"));\n+\n+        Files.createDirectories(mods);\n+        Files.createDirectories(lib1);\n+        Files.createDirectories(lib2);\n+\n+        makeModule(\"ma\");\n+        String moduleName;\n+        for (int i = 0; i < NUM_MODULES; i++) {\n+            moduleName = \"m\" + i + \"b\";\n+            makeModule(moduleName, \"ma\");\n+            makeJmod(moduleName, lib1);\n+            makeJmod(moduleName, lib2);\n+        }\n+        makeJmod(\"ma\", lib1, \"--module-path\", lib1.toString(),\n+                \"--hash-modules\", \".*\");\n+        Path jmod1 = lib1.resolve(\"ma.jmod\");\n+\n+        makeJmod(\"ma\", lib2, \"--module-path\", lib2.toString(),\n+                \"--hash-modules\", \".*\");\n+        Path jmod2 = lib2.resolve(\"ma.jmod\");\n+\n+        assertEquals(Files.mismatch(jmod1, jmod2), -1);\n+    }\n+\n+\n+    private void makeModule(String mn, String... deps)\n+        throws IOException\n+    {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"module \")\n+          .append(mn)\n+          .append(\" {\")\n+          .append(\"\\n\");\n+        Arrays.stream(deps)\n+              .forEach(req -> {\n+                  sb.append(\"    requires \");\n+                  sb.append(req)\n+                    .append(\";\\n\");\n+              });\n+        sb.append(\"}\\n\");\n+        builder.writeJavaFiles(mn, sb.toString());\n+        builder.compile(mn, mods);\n+    }\n+\n+    private void makeJmod(String moduleName, Path libName, String... options) {\n+        Path mclasses = mods.resolve(moduleName);\n+        Path outfile = libName.resolve(moduleName + \".jmod\");\n+        List<String> args = new ArrayList<>();\n+        args.add(\"create\");\n+        Collections.addAll(args, options);\n+        Collections.addAll(args, \"--date\", DATE);\n+        Collections.addAll(args, \"--class-path\", mclasses.toString(),\n+                           outfile.toString());\n+\n+        runJmod(args);\n+    }\n+\n+    private void runJmod(List<String> args) {\n+        runJmod(args.toArray(new String[args.size()]));\n+    }\n+\n+    private void runJmod(String... args) {\n+        int rc = JMOD_TOOL.run(System.out, System.out, args);\n+        System.out.println(\"jmod \" + Arrays.stream(args).collect(Collectors.joining(\" \")));\n+        if (rc != 0) {\n+            throw new AssertionError(\"jmod failed: rc = \" + rc);\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/tools\/jmod\/hashes\/HashesOrderTest.java","additions":136,"deletions":0,"binary":false,"changes":136,"status":"added"}]}