{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -433,1 +433,1 @@\n-     * This will always create a new Object to comply with JLS 15.18.1:\n+     * This will always create a new Object to comply with JLS {@jls 15.18.1}:\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringConcatHelper.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -810,1 +810,1 @@\n-     *     conversion (JLS 5.3) is applied, if one exists.\n+     *     conversion (JLS {@jls 5.3}) is applied, if one exists.\n@@ -813,1 +813,1 @@\n-     *     a Java casting conversion (JLS 5.5) is applied if one exists.\n+     *     a Java casting conversion (JLS {@jls 5.5}) is applied if one exists.\n@@ -818,1 +818,1 @@\n-     *     by a Java method invocation conversion (JLS 5.3)\n+     *     by a Java method invocation conversion (JLS {@jls 5.3})\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandle.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1887,1 +1887,1 @@\n-             * by a garbage collector (JLS 12.7).\n+             * by a garbage collector (JLS {@jls 12.7}).\n@@ -2027,1 +2027,1 @@\n-         * by a garbage collector (JLS 12.7).\n+         * by a garbage collector (JLS {@jls 12.7}).\n@@ -4760,1 +4760,1 @@\n-     *     <em>T0<\/em> is converted to byte via Java casting conversion (JLS 5.5),\n+     *     <em>T0<\/em> is converted to byte via Java casting conversion (JLS {@jls 5.5}),\n@@ -4763,1 +4763,1 @@\n-     *     then a Java casting conversion (JLS 5.5) is applied.\n+     *     then a Java casting conversion (JLS {@jls 5.5}) is applied.\n@@ -4768,1 +4768,1 @@\n-     *     by a Java casting conversion (JLS 5.5) on the primitive value,\n+     *     by a Java casting conversion (JLS {@jls 5.5}) on the primitive value,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-     *     input converted as per JLS 5.1.11 \"String Conversion\"; otherwise<\/li>\n+     *     input converted as per JLS {@jls 5.1.11} \"String Conversion\"; otherwise<\/li>\n@@ -147,2 +147,2 @@\n-     *     requirements stated in JLS 15.18.1 \"String Concatenation Operator +\".\n-     *     The inputs are converted as per JLS 5.1.11 \"String Conversion\",\n+     *     requirements stated in JLS {@jls 15.18.1} \"String Concatenation Operator +\".\n+     *     The inputs are converted as per JLS {@jls 5.1.11} \"String Conversion\",\n@@ -226,1 +226,1 @@\n-     *     input converted as per JLS 5.1.11 \"String Conversion\"; otherwise<\/li>\n+     *     input converted as per JLS {@jls 5.1.11} \"String Conversion\"; otherwise<\/li>\n@@ -228,2 +228,2 @@\n-     *     requirements stated in JLS 15.18.1 \"String Concatenation Operator +\".\n-     *     The inputs are converted as per JLS 5.1.11 \"String Conversion\",\n+     *     requirements stated in JLS {@jls 15.18.1} \"String Concatenation Operator +\".\n+     *     The inputs are converted as per JLS {@jls 5.1.11} \"String Conversion\",\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,2 +33,2 @@\n- * by the nth enclosing class of T (see JLS 8.1.2), then the creation of t\n- * requires the resolution (see JVMS 5) of the ith enclosing class of T,\n+ * by the n<sup>th<\/sup> enclosing class of T (see JLS {@jls 8.1.2}), then the creation of t\n+ * requires the resolution (see JVMS {@jvms 5}) of the i<sup>th<\/sup> enclosing class of T,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/TypeVariable.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}