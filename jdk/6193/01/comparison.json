{"files":[{"patch":"@@ -55,0 +55,6 @@\n+  if (addr == (address)(intptr_t)-1) {\n+    \/\/ dladdr() in macOS12\/Monterey returns success for -1, but that addr value\n+    \/\/ won't work in this function. Should have been handled by the caller.\n+    ShouldNotReachHere();\n+    return false;\n+  }\n","filename":"src\/hotspot\/os\/bsd\/decoder_machO.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -841,0 +841,11 @@\n+static int local_dladdr(const void* addr, Dl_info* info) {\n+#ifdef __APPLE__\n+  if (addr == (void*)-1) {\n+    \/\/ dladdr() in macOS12\/Monterey returns success for -1, but that addr\n+    \/\/ value should not be allowed to work to avoid confusion.\n+    return 0;\n+  }\n+#endif\n+  return dladdr(addr, info);\n+}\n+\n@@ -880,3 +891,0 @@\n-\n-#define MACH_MAXSYMLEN 256\n-\n@@ -890,1 +898,0 @@\n-  char localbuf[MACH_MAXSYMLEN];\n@@ -892,1 +899,1 @@\n-  if (dladdr((void*)addr, &dlinfo) != 0) {\n+  if (local_dladdr((void*)addr, &dlinfo) != 0) {\n@@ -901,0 +908,8 @@\n+\n+#ifndef __APPLE__\n+    \/\/ The 6-parameter Decoder::decode() function is not implemented on macOS.\n+    \/\/ The Mach-O binary format does not contain a \"list of files\" with address\n+    \/\/ ranges like ELF. That makes sense since Mach-O can contain binaries for\n+    \/\/ than one instruction set so there can be more than one address range for\n+    \/\/ each \"file\".\n+\n@@ -909,0 +924,4 @@\n+#else  \/\/ __APPLE__\n+    #define MACH_MAXSYMLEN 256\n+\n+    char localbuf[MACH_MAXSYMLEN];\n@@ -918,0 +937,3 @@\n+\n+    #undef MACH_MAXSYMLEN\n+#endif  \/\/ __APPLE__\n@@ -932,1 +954,1 @@\n-  if (dladdr((void*)addr, &dlinfo) != 0) {\n+  if (local_dladdr((void*)addr, &dlinfo) != 0) {\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":28,"deletions":6,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -910,1 +910,1 @@\n-#endif \/\/ HANDLE_FUNCTION_DESCRIPTORS\n+#endif \/\/ HAVE_FUNCTION_DESCRIPTORS\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -712,5 +712,1 @@\n-#if defined(__APPLE__)  \/\/ See JDK-8273967.\n-  TEST_VM(os, DISABLED_dll_address_to_function_and_library_name) {\n-#else\n-  TEST_VM(os, dll_address_to_function_and_library_name) {\n-#endif\n+TEST_VM(os, dll_address_to_function_and_library_name) {\n@@ -729,0 +725,1 @@\n+  LOG(\"os::print_function_and_library_name(st, -1) expects FALSE.\");\n@@ -731,0 +728,1 @@\n+  LOG(\"os::print_function_and_library_name(st, NULL) expects FALSE.\");\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}