{"files":[{"patch":"@@ -1506,1 +1506,4 @@\n-        public RecordComponent getRecordComponent(JCVariableDecl var, boolean addIfMissing, List<JCAnnotation> annotations) {\n+        \/* creates a record component if non is related to the given variable and recreates a brand new one\n+         * in other case\n+         *\/\n+        public RecordComponent createRecordComponent(JCVariableDecl var, List<JCAnnotation> annotations) {\n@@ -1521,1 +1524,1 @@\n-            } else if (addIfMissing) {\n+            } else {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Symbol.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -986,1 +986,1 @@\n-                    sym.getRecordComponent(field, true,\n+                    sym.createRecordComponent(field,\n@@ -1254,3 +1254,1 @@\n-                List<JCAnnotation> originalAnnos = rec.getOriginalAnnos().isEmpty() ?\n-                        rec.getOriginalAnnos() :\n-                        tc.copy(rec.getOriginalAnnos());\n+                List<JCAnnotation> originalAnnos = tc.copy(rec.getOriginalAnnos());\n@@ -1258,0 +1256,1 @@\n+                field.mods.flags &= ~Flags.VARARGS;\n@@ -1259,3 +1258,1 @@\n-                    \/\/ if the field have less annotations than the record component, overwrite any annotation in the\n-                    \/\/ field with the original annotations declared by the user\n-                    field.mods = make.Modifiers(field.mods.flags & ~Flags.VARARGS, originalAnnos);\n+                    field.mods.annotations = originalAnnos;\n@@ -1263,3 +1260,0 @@\n-                } else {\n-                    \/\/ fields can't be varargs, lets remove the flag if present\n-                    field.mods.flags &= ~Flags.VARARGS;\n@@ -1267,0 +1261,1 @@\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -68,2 +68,2 @@\n-        if (trees == null)\n-            return null;\n+        if (trees == null || trees.isEmpty())\n+            return trees;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeCopier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}