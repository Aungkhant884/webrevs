[{"commit":{"message":"Revert the change that truncates the string in String::as_symbol."},"files":[{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"}],"sha":"5ee367bf9579b928d1854ffae83f1667e57b2bfd"},{"commit":{"message":"Update according to David Holmes' comments.\n- In java_lang_String::as_symbol and java_lang_String::as_symbol_or_null, check input string length and truncate to max symbol length if exceeding.\n- Change java_lang_Throwable::create_initialization_error to avoid using Symbol for message."},"files":[{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"},{"filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp"}],"sha":"19a7d3d4dd17147cc8a1da5b3fdfd5eab7d194ee"},{"commit":{"message":"Add jtreg test LongExceptionMessageTest, which is converted from the test case in https:\/\/bugs.openjdk.org\/browse\/JDK-8312401."},"files":[{"filename":"test\/hotspot\/jtreg\/runtime\/exceptionMsgs\/LongExceptionMessageTest.java"}],"sha":"b12eea84239858502e7780f07c475d90fe30c6dc"},{"commit":{"message":"Revert the new line change."},"files":[{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"}],"sha":"b19b4b58e7d261a8bd8441475b8e4feb28d25b8e"},{"commit":{"message":"Change java_lang_String::as_symbol to return nullptr if the length of 'java_string' exceeds Symbol::max_length().\nRevert java_lang_Throwable::create_initialization_error change that creates 'char *' message only."},"files":[{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"}],"sha":"fb381c44da5e0d778e5af8f553dd4a4b0277d19a"},{"commit":{"message":"Change java_lang_Throwable::create_initialization_error to create a 'char *' message without using a Symbol."},"files":[{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"}],"sha":"e2223f0613d53e89e11af587dc3d41a25ffd6849"}]