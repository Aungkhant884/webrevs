{"files":[{"patch":"@@ -1434,1 +1434,1 @@\n-  _free_card_set_memory_task(NULL),\n+  _free_segmented_array_memory_task(NULL),\n@@ -1726,2 +1726,2 @@\n-  _free_card_set_memory_task = new G1SegmentedArrayFreeMemoryTask(\"Card Set Free Memory Task\");\n-  _service_thread->register_task(_free_card_set_memory_task);\n+  _free_segmented_array_memory_task = new G1SegmentedArrayFreeMemoryTask(\"Segmented Array Free Memory Task\");\n+  _service_thread->register_task(_free_segmented_array_memory_task);\n@@ -2621,2 +2621,2 @@\n-  _free_card_set_memory_task->notify_new_stats(&_young_gen_card_set_stats,\n-                                               &_collection_set_candidates_card_set_stats);\n+  _free_segmented_array_memory_task->notify_new_stats(&_young_gen_card_set_stats,\n+                                                      &_collection_set_candidates_card_set_stats);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -68,1 +68,0 @@\n-class G1SegmentedArrayFreeMemoryTask;\n@@ -147,1 +146,1 @@\n-  G1SegmentedArrayFreeMemoryTask* _free_card_set_memory_task;\n+  G1SegmentedArrayFreeMemoryTask* _free_segmented_array_memory_task;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-bool G1SegmentedArrayFreeMemoryTask::free_excess_card_set_memory() {\n+bool G1SegmentedArrayFreeMemoryTask::free_excess_segmented_array_memory() {\n@@ -167,1 +167,1 @@\n-  log_trace(gc, task)(\"Card Set Free Memory: State change from %s to %s\",\n+  log_trace(gc, task)(\"Segmented Array Free Memory: State change from %s to %s\",\n@@ -187,1 +187,1 @@\n-  if (free_excess_card_set_memory()) {\n+  if (free_excess_segmented_array_memory()) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArrayFreeMemoryTask.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-\/\/ Task handling deallocation of free card set memory.\n+\/\/ Task handling deallocation of free segmented array memory.\n@@ -56,1 +56,1 @@\n-  \/\/ Current total card set memory usage.\n+  \/\/ Current total segmented array memory usage.\n@@ -74,1 +74,1 @@\n-  \/\/ Free excess card set memory, main method. Returns true if there is more work\n+  \/\/ Free excess segmented array memory, main method. Returns true if there is more work\n@@ -76,1 +76,1 @@\n-  bool free_excess_card_set_memory();\n+  bool free_excess_segmented_array_memory();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArrayFreeMemoryTask.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-  log_trace(gc, task)(\"Card Set Free Memory: Returned to VM %zu buffers size %zu\", keep_num, keep_size);\n+  log_trace(gc, task)(\"Segmented Array Free Memory: Returned to VM %zu buffers size %zu\", keep_num, keep_size);\n@@ -150,1 +150,1 @@\n-  log_trace(gc, task)(\"Card Set Free Memory: Return to OS %zu buffers size %zu\", num_delete, mem_size_deleted);\n+  log_trace(gc, task)(\"Segmented Array Free Memory: Return to OS %zu buffers size %zu\", num_delete, mem_size_deleted);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArrayFreePool.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -57,1 +57,2 @@\n-\/\/ A set of free lists holding memory buffers for use by G1CardSetAllocators.\n+\/\/ A set of free lists holding memory buffers for use by G1SegmentedArray,\n+\/\/ e.g. G1CardSetAllocators::SegmentedArray\n@@ -107,3 +108,3 @@\n-  \/\/ Updates the instance members about the given card set buffer list for the purpose\n-  \/\/ of giving back memory. Only necessary members are updated, e.g. if there is\n-  \/\/ nothing to return to the VM, do not set the source list.\n+  \/\/ Updates the instance members about the given segmented array buffer list for\n+  \/\/ the purpose of giving back memory. Only necessary members are updated,\n+  \/\/ e.g. if there is nothing to return to the VM, do not set the source list.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArrayFreePool.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-#include \"gc\/g1\/g1BufferListFreePool.hpp\"\n+#include \"gc\/g1\/g1SegmentedArrayFreePool.hpp\"\n@@ -216,1 +216,1 @@\n-  G1BufferListFreePool<mtGCCardSet> free_pool(config.num_mem_object_types());\n+  G1SegmentedArrayFreePool<mtGCCardSet> free_pool(config.num_mem_object_types());\n@@ -434,1 +434,1 @@\n-  G1BufferListFreePool<mtGCCardSet> free_pool(config.num_mem_object_types());\n+  G1SegmentedArrayFreePool<mtGCCardSet> free_pool(config.num_mem_object_types());\n","filename":"test\/hotspot\/gtest\/gc\/g1\/test_g1CardSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}