{"files":[{"patch":"@@ -100,3 +100,3 @@\n-            var cls = Class.forName(cn, true, ClassLoader.getSystemClassLoader());\n-            if (cls.getDeclaredConstructor().newInstance() instanceof HttpServerProvider p) {\n-                provider = p;\n+            var cls = Class.forName(cn, false, ClassLoader.getSystemClassLoader());\n+            if (HttpServerProvider.class.isAssignableFrom(cls)) {\n+                provider = (HttpServerProvider) cls.getDeclaredConstructor().newInstance();\n@@ -104,0 +104,3 @@\n+            } else {\n+                throw new ServiceConfigurationError(\"not assignable to HttpServerProvider: \"\n+                        + cls.getName());\n@@ -105,1 +108,0 @@\n-            return false;\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/spi\/HttpServerProvider.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,3 +28,12 @@\n- * @modules jdk.httpserver\/sun.net.httpserver:+open\n- *          jdk.httpserver\/com.sun.net.httpserver.spi:+open\n- * @run testng\/othervm HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderP\n+ *      HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderPNPC\n+ *      HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderNP\n+ *      HttpServerProviderTest\n+ * @run testng\/othervm\n+ *      -Dcom.sun.net.httpserver.HttpServerProvider=HttpServerProviderTest$ProviderT\n+ *      HttpServerProviderTest\n@@ -39,1 +48,0 @@\n-import org.testng.annotations.DataProvider;\n@@ -49,2 +57,10 @@\n-    public void testPublic() throws Exception {\n-        resetProperty();\n+    public void test() throws Exception {\n+        var provider = System.getProperty(PROPERTY_KEY);\n+        switch (provider) {\n+            case \"HttpServerProviderTest$ProviderP\" -> testPublic();\n+            case \"HttpServerProviderTest$ProviderPNPC\" -> testPublicNonPublicConstructor();\n+            case \"HttpServerProviderTest$ProviderNP\" -> testNonPublic();\n+            case \"HttpServerProviderTest$ProviderT\" -> testThrowingConstructor();\n+            default -> throw new AssertionError(\"unexpected test case\");\n+        }\n+    }\n@@ -52,0 +68,1 @@\n+    private void testPublic() throws Exception {\n@@ -53,1 +70,0 @@\n-        System.setProperty(PROPERTY_KEY, n);\n@@ -61,4 +77,3 @@\n-    @DataProvider\n-    public Object[][] classNames() {\n-        return new Object[][] { {ProviderPNPC.class.getName()}, {ProviderNP.class.getName()} };\n-    }\n+    private void testPublicNonPublicConstructor() {\n+        var n = ProviderPNPC.class.getName();\n+        assertEquals(System.getProperty(PROPERTY_KEY), n);\n@@ -66,3 +81,4 @@\n-    @Test(dataProvider = \"classNames\")\n-    public void testNonPublic(String n) throws Exception {\n-        resetProperty();\n+        var e = expectThrows(ServiceConfigurationError.class, HttpServerProvider::provider);\n+        assertEquals(e.getClass(), ServiceConfigurationError.class);\n+        assertEquals(e.getCause().getClass(), IllegalAccessException.class);\n+    }\n@@ -70,1 +86,2 @@\n-        System.setProperty(PROPERTY_KEY, n);\n+    private void testNonPublic() {\n+        var n = ProviderNP.class.getName();\n@@ -78,4 +95,1 @@\n-    @Test\n-    public void testThrowingConstructor() throws Exception {\n-        resetProperty();\n-\n+    private void testThrowingConstructor() {\n@@ -83,1 +97,0 @@\n-        System.setProperty(PROPERTY_KEY, cn);\n@@ -92,8 +105,0 @@\n-    \/\/ --- infra ---\n-\n-    private static void resetProperty() throws Exception {\n-        var field = HttpServerProvider.class.getDeclaredField(\"provider\");\n-        field.setAccessible(true);\n-        field.set(null, null);\n-    }\n-\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HttpServerProviderTest.java","additions":33,"deletions":28,"binary":false,"changes":61,"status":"modified"}]}