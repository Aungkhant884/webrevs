{"files":[{"patch":"@@ -832,16 +832,10 @@\n-            \/\/ inputTrust data is optional, so is tce.trustSettings\n-            if (inputTrust != null) {\n-                tce.trustSettings = new ArrayList<>();\n-                Map<String, String> tmpMap = new LinkedHashMap<>();\n-                for (int i = 0; i < inputTrust.size(); i++) {\n-                    if (inputTrust.get(i) == null) {\n-                        tce.trustSettings.add(tmpMap);\n-                        if (i < inputTrust.size() - 1) {\n-                            \/\/ Prepare an empty map for the next trust setting.\n-                            \/\/ Do not just clear(), must be a new object.\n-                            \/\/ Only create if not at end of list.\n-                            tmpMap = new LinkedHashMap<>();\n-                        }\n-                    } else {\n-                        tmpMap.put(inputTrust.get(i), inputTrust.get(i+1));\n-                        i++;\n+            tce.trustSettings = new ArrayList<>();\n+            Map<String, String> tmpMap = new LinkedHashMap<>();\n+            for (int i = 0; i < inputTrust.size(); i++) {\n+                if (inputTrust.get(i) == null) {\n+                    tce.trustSettings.add(tmpMap);\n+                    if (i < inputTrust.size() - 1) {\n+                        \/\/ Prepare an empty map for the next trust setting.\n+                        \/\/ Do not just clear(), must be a new object.\n+                        \/\/ Only create if not at end of list.\n+                        tmpMap = new LinkedHashMap<>();\n@@ -849,0 +843,3 @@\n+                } else {\n+                    tmpMap.put(inputTrust.get(i), inputTrust.get(i+1));\n+                    i++;\n@@ -856,4 +853,1 @@\n-                var usage = cert.getKeyUsage();\n-                if ((usage == null) || (!usage[5] && !usage[6])) {\n-                    isSelfSigned = true;\n-                }\n+                isSelfSigned = true;\n@@ -864,1 +858,1 @@\n-            if (tce.trustSettings == null) {\n+            if (tce.trustSettings.isEmpty()) {\n@@ -866,1 +860,1 @@\n-                    \/\/ If a self-signed certificate has no trust settings,\n+                    \/\/ If a self-signed certificate has empty trust settings,\n@@ -876,4 +870,1 @@\n-                if (tce.trustSettings.isEmpty()) {\n-                    \/\/ a trust dictionary with no entries means full\/default trust\n-                    values.add(KnownOIDs.anyExtendedKeyUsage.value());\n-                } else for (var oneTrust : tce.trustSettings) {\n+                for (var oneTrust : tce.trustSettings) {\n","filename":"src\/java.base\/macosx\/classes\/apple\/security\/KeychainStore.java","additions":17,"deletions":26,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -498,0 +498,5 @@\n+            \/\/ Only add certificates with trust settings\n+            if (inputTrust == NULL) {\n+                continue;\n+            }\n+\n","filename":"src\/java.base\/macosx\/native\/libosxsecurity\/KeystoreImpl.m","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}