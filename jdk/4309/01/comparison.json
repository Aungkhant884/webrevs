{"files":[{"patch":"@@ -881,1 +881,1 @@\n-        return (int)(bits ^ (bits >>> 32));\n+        return Long.hashCode(bits);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Double.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1600,1 +1600,1 @@\n-        return (int) (nod ^ (nod >>> 32));\n+        return Long.hashCode(nod);\n","filename":"src\/java.base\/share\/classes\/java\/time\/LocalTime.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -413,1 +413,1 @@\n-        return (int) (hash ^ (hash >>> 32));\n+        return Long.hashCode(hash);\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/ValueRange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-    private transient int wordsInUse = 0;\n+    private transient int wordsInUse;\n@@ -105,1 +105,1 @@\n-    private transient boolean sizeIsSticky = false;\n+    private transient boolean sizeIsSticky;\n@@ -1040,1 +1040,1 @@\n-        return (int)((h >> 32) ^ h);\n+        return Long.hashCode(h);\n","filename":"src\/java.base\/share\/classes\/java\/util\/BitSet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -114,2 +114,1 @@\n-            final long bits = Double.doubleToLongBits(doubleValue);\n-            return (int)(bits ^ (bits >>> 32));\n+            return Double.hashCode(doubleValue);\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIConstants.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -126,2 +126,1 @@\n-            long v = Double.doubleToLongBits(value);\n-            return (int) (v ^ (v >>> 32));\n+            return Double.hashCode(value);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/dv\/xs\/DoubleDV.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -279,1 +279,2 @@\n-        return (int) (asBits() ^ (asBits() >>> 32));\n+        long bits = asBits();\n+        return Long.hashCode(bits);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/Selector.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}