{"files":[{"patch":"@@ -28,8 +28,1 @@\n-\/\/ SpinWait provides a description for implementations of spin wait\/pause.\n-\/\/ The description includes:\n-\/\/ - what an instruction should be used by an implementation.\n-\/\/ - how many of the instructions.\n-\/\/ - a runner which can execute the requested number of instructions.\n-\/\/\n-\/\/ Creation of SpinWait is controlled by VM_Version.\n-class SpinWait final {\n+class SpinWait {\n@@ -43,1 +36,0 @@\n-  using InstRunner = void (*)(int count);\n@@ -48,24 +40,0 @@\n-  InstRunner _inst_runner;\n-\n-  static void run_nop(int count) {\n-    while (count-- > 0) {\n-      __asm volatile(\"nop\");\n-    }\n-  }\n-\n-  static void run_isb(int count) {\n-    while (count-- > 0) {\n-      __asm volatile(\"isb\");\n-    }\n-  }\n-\n-  static void run_yield(int count) {\n-    while (count-- > 0) {\n-      __asm volatile(\"yield\");\n-    }\n-  }\n-\n-  static void run_none(int) {}\n-\n-  SpinWait(Inst inst = NONE, int count = 0, InstRunner inst_runner = run_none) :\n-      _inst(inst), _count(count), _inst_runner(inst_runner)  {}\n@@ -74,0 +42,2 @@\n+  SpinWait(Inst inst = NONE, int count = 0) : _inst(inst), _count(count) {}\n+\n@@ -76,3 +46,0 @@\n-  InstRunner inst_runner() const { return _inst_runner; }\n-\n-  friend class VM_Version;\n","filename":"src\/hotspot\/cpu\/aarch64\/spin_wait_aarch64.hpp","additions":3,"deletions":36,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -6400,0 +6400,12 @@\n+  \/\/ Support for spin waits.\n+  address generate_spin_wait() {\n+    __ align(CodeEntryAlignment);\n+    StubCodeMark mark(this, \"StubRoutines\", \"spin_wait\");\n+    address start = __ pc();\n+\n+    __ spin_wait();\n+    __ ret(lr);\n+\n+    return start;\n+  }\n+\n@@ -7718,0 +7730,4 @@\n+    if (VM_Version::spin_wait_desc().inst() != SpinWait::NONE) {\n+      StubRoutines::aarch64::_spin_wait = generate_spin_wait();\n+    }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+address StubRoutines::aarch64::_spin_wait = NULL;\n","filename":"src\/hotspot\/cpu\/aarch64\/stubRoutines_aarch64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -75,0 +75,2 @@\n+  static address _spin_wait;\n+\n@@ -180,0 +182,4 @@\n+  static address spin_wait() {\n+    return _spin_wait;\n+  }\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/stubRoutines_aarch64.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-SpinWait VM_Version::get_spin_wait_desc() {\n+static SpinWait get_spin_wait_desc() {\n@@ -53,1 +53,1 @@\n-    return SpinWait(SpinWait::NOP, OnSpinWaitInstCount, SpinWait::run_nop);\n+    return SpinWait(SpinWait::NOP, OnSpinWaitInstCount);\n@@ -55,1 +55,1 @@\n-    return SpinWait(SpinWait::ISB, OnSpinWaitInstCount, SpinWait::run_isb);\n+    return SpinWait(SpinWait::ISB, OnSpinWaitInstCount);\n@@ -57,1 +57,1 @@\n-    return SpinWait(SpinWait::YIELD, OnSpinWaitInstCount, SpinWait::run_yield);\n+    return SpinWait(SpinWait::YIELD, OnSpinWaitInstCount);\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,4 +60,0 @@\n-  \/\/ Get SpinWait based on values of OnSpinWaitInst\/OnSpinWaitInstCount options\n-  \/\/ describing it.\n-  static SpinWait get_spin_wait_desc();\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -385,2 +385,1 @@\n-    const SpinWait& spin_wait = VM_Version::spin_wait_desc();\n-    if (spin_wait.inst() == SpinWait::NONE) {\n+    if (VM_Version::spin_wait_desc().inst() == SpinWait::NONE) {\n@@ -389,2 +388,4 @@\n-    SpinWait::InstRunner run_inst = spin_wait.inst_runner();\n-    (*run_inst)(spin_wait.inst_count());\n+\n+    using spin_wait_func_ptr_t = void (*)();\n+    spin_wait_func_ptr_t func = CAST_TO_FN_PTR(spin_wait_func_ptr_t, StubRoutines::aarch64::spin_wait());\n+    (*func)();\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-        final int iterCount = 1000;\n+        final int iterCount = 100;\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/TestSpinPause.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}