{"files":[{"patch":"@@ -179,1 +179,26 @@\n-    jlong n = sendfile64(dstFD, srcFD, &offset, (size_t)count);\n+\n+    jlong n;\n+    int dstFlags;\n+    if (my_copy_file_range_func != NULL &&\n+        (dstFlags = fcntl(dstFD, F_GETFL)) != -1 &&\n+        (dstFlags & O_APPEND) == 0) { \/\/ don't use copy_file_range if appending\n+        size_t len = (size_t)count;\n+        n = my_copy_file_range_func(srcFD, &offset, dstFD, NULL, len, 0);\n+        if (n < 0) {\n+            switch (errno) {\n+                case EINTR:\n+                    return IOS_INTERRUPTED;\n+                case EINVAL:\n+                case EXDEV:\n+                    \/\/ ignore and try sendfile()\n+                    break;\n+                default:\n+                    JNU_ThrowIOExceptionWithLastError(env, \"Copy failed\");\n+                    return IOS_THROWN;\n+            }\n+        }\n+        if (n >= 0)\n+            return n;\n+    }\n+\n+    n = sendfile64(dstFD, srcFD, &offset, (size_t)count);\n@@ -275,1 +300,2 @@\n-    jlong n = my_copy_file_range_func(srcFD, NULL, dstFD, &offset, count, 0);\n+    size_t len = (size_t)count;\n+    jlong n = my_copy_file_range_func(srcFD, NULL, dstFD, &offset, len, 0);\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/FileChannelImpl.c","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"}]}