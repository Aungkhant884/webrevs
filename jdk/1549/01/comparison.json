{"files":[{"patch":"@@ -33,0 +33,1 @@\n+#import \"a11y\/CommonComponentAccessibility.h\"\n@@ -64,0 +65,1 @@\n+static JNF_STATIC_MEMBER_CACHE(jm_doAccessibleAction, sjc_CAccessibility,\"doAccessibleAction\",\"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\");\n@@ -129,18 +131,0 @@\n-\n-\/\/ In order to use a new NSAccessibility API and since our components\n-\/\/ are represented as a custom UI elements we need to implement a set\n-\/\/ of custom protocols. Definitions of these protocols will start here.\n-\n-\/\/ This is a root interface in the NSAccessibility* protocols hierarchy\n-\/\/ and all the component-specific protocols should be derived from it.\n-\/\/ It is also a place for the functions that might be exposed by all the\n-\/\/ component accessibility peers.\n-\/\/ Please see https:\/\/developer.apple.com\/documentation\/appkit\/nsaccessibilityprotocol\n-\/\/ for more details.\n-@interface CommonComponentAccessibility : JavaComponentAccessibility <NSAccessibilityElement> {\n-\n-}\n-- (NSRect)accessibilityFrame;\n-- (nullable id)accessibilityParent;\n-@end\n-\n@@ -403,10 +387,8 @@\n-    if ([javaRole isEqualToString:@\"pagetablist\"]) {\n-        newChild = [TabGroupAccessibility alloc];\n-    } else if ([javaRole isEqualToString:@\"table\"]) {\n-        newChild = [TableAccessibility alloc];\n-    } else if ([javaRole isEqualToString:@\"scrollpane\"]) {\n-        newChild = [ScrollAreaAccessibility alloc];\n-    } else {\n-        NSString *nsRole = [sRoles objectForKey:javaRole];\n-        if ([nsRole isEqualToString:NSAccessibilityStaticTextRole] || [nsRole isEqualToString:NSAccessibilityTextAreaRole] || [nsRole isEqualToString:NSAccessibilityTextFieldRole]) {\n-            newChild = [JavaTextAccessibility alloc];\n+    newChild = [CommonComponentAccessibility getComponentAccessibility:javaRole];\n+    if (newChild == nil) {\n+        if ([javaRole isEqualToString:@\"pagetablist\"]) {\n+            newChild = [TabGroupAccessibility alloc];\n+        } else if ([javaRole isEqualToString:@\"table\"]) {\n+            newChild = [TableAccessibility alloc];\n+        } else if ([javaRole isEqualToString:@\"scrollpane\"]) {\n+            newChild = [ScrollAreaAccessibility alloc];\n@@ -414,1 +396,8 @@\n-            newChild = [JavaComponentAccessibility alloc];\n+            NSString *nsRole = [sRoles objectForKey:javaRole];\n+            if ([nsRole isEqualToString:NSAccessibilityStaticTextRole]\n+                || [nsRole isEqualToString:NSAccessibilityTextAreaRole]\n+                || [nsRole isEqualToString:NSAccessibilityTextFieldRole]) {\n+                newChild = [JavaTextAccessibility alloc];\n+            } else {\n+                newChild = [JavaComponentAccessibility alloc];\n+            }\n@@ -1937,26 +1926,0 @@\n-@implementation CommonComponentAccessibility\n-\/\/ NSAccessibilityElement protocol implementation\n-- (NSRect)accessibilityFrame\n-{\n-    JNIEnv* env = [ThreadUtilities getJNIEnv];\n-    jobject axComponent = JNFCallStaticObjectMethod(env, sjm_getAccessibleComponent,\n-                                                    fAccessible, fComponent);\n-\n-    NSSize size = getAxComponentSize(env, axComponent, fComponent);\n-    NSPoint point = getAxComponentLocationOnScreen(env, axComponent, fComponent);\n-    (*env)->DeleteLocalRef(env, axComponent);\n-    point.y += size.height;\n-\n-    point.y = [[[[self view] window] screen] frame].size.height - point.y;\n-\n-    NSRect retval = NSMakeRect(point.x, point.y, size.width, size.height);\n-    return retval;\n-}\n-\n-- (nullable id)accessibilityParent\n-{\n-    return [self accessibilityParentAttribute];\n-}\n-\n-@end\n-\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":18,"deletions":55,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"JavaComponentAccessibility.h\"\n+#import \"CommonComponentAccessibility.h\"\n+\n+#import <AppKit\/AppKit.h>\n+\n+@interface ButtonAccessibility : CommonComponentAccessibility <NSAccessibilityButton> {\n+\n+};\n+- (nullable NSString *)accessibilityLabel;\n+- (BOOL)accessibilityPerformPress;\n+@end\n\\ No newline at end of file\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ButtonAccessibility.h","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"ButtonAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+\n+static JNF_STATIC_MEMBER_CACHE(jm_doAccessibleAction, sjc_CAccessibility,\"doAccessibleAction\",\"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\");\n+\n+\/*\n+ * Implementation of the accessibility peer for the pushbutton role\n+ *\/\n+@implementation ButtonAccessibility\n+- (nullable NSString *)accessibilityLabel\n+{\n+    return [self accessibilityTitleAttribute];\n+}\n+\n+- (BOOL)accessibilityPerformPress\n+{\n+    AWT_ASSERT_APPKIT_THREAD;\n+\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    JNFCallStaticVoidMethod(env, jm_doAccessibleAction, [self axContextWithEnv:(env)], 0, fComponent);\n+    return TRUE;\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ButtonAccessibility.m","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef JAVA_COMPONENT_ACCESSIBILITY\n+#define JAVA_COMPONENT_ACCESSIBILITY\n+\n+#import \"JavaComponentAccessibility.h\"\n+#import \"JavaAccessibilityUtilities.h\"\n+\n+@interface CommonComponentAccessibility : JavaComponentAccessibility <NSAccessibilityElement> {\n+\n+}\n++ (void) initializeRolesMap;\n++ (JavaComponentAccessibility * _Nullable) getComponentAccessibility:(NSString * _Nonnull)role;\n+- (NSRect)accessibilityFrame;\n+- (nullable id)accessibilityParent;\n+@end\n+\n+#endif\n\\ No newline at end of file\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#import \"CommonComponentAccessibility.h\"\n+#import \"ThreadUtilities.h\"\n+\n+static JNF_STATIC_MEMBER_CACHE(sjm_getAccessibleComponent, sjc_CAccessibility, \"getAccessibleComponent\", \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleComponent;\");\n+static NSMutableDictionary * _Nullable rolesMap;\n+\n+\/*\n+ * Common ancestor for all the accessibility peers that implements the new method-based accessibility API\n+ *\/\n+@implementation CommonComponentAccessibility\n+\n++ (void) initializeRolesMap {\n+    \/*\n+     * Here we should keep all the mapping between the accessibility roles and implementing classes\n+     *\/\n+    rolesMap = [[NSMutableDictionary alloc] initWithCapacity:1];\n+\n+    [rolesMap setObject:@\"ButtonAccessibility\" forKey:@\"pushbutton\"];\n+}\n+\n+\/*\n+ * If new implementation of the accessible component peer for the given role exists\n+ * return the allocated class otherwise return nil to let old implementation being initialized\n+ *\/\n++ (JavaComponentAccessibility *) getComponentAccessibility:(NSString *)role\n+{\n+    if (rolesMap == nil) {\n+        [self initializeRolesMap];\n+    }\n+\n+    NSString *className = [rolesMap objectForKey:role];\n+    if (className != nil) {\n+        return [NSClassFromString(className) alloc];\n+    }\n+    return nil;\n+}\n+\n+\/\/ NSAccessibilityElement protocol implementation\n+- (NSRect)accessibilityFrame\n+{\n+    JNIEnv* env = [ThreadUtilities getJNIEnv];\n+    jobject axComponent = JNFCallStaticObjectMethod(env, sjm_getAccessibleComponent,\n+                                                    fAccessible, fComponent);\n+\n+    NSSize size = getAxComponentSize(env, axComponent, fComponent);\n+    NSPoint point = getAxComponentLocationOnScreen(env, axComponent, fComponent);\n+    (*env)->DeleteLocalRef(env, axComponent);\n+    point.y += size.height;\n+\n+    point.y = [[[[self view] window] screen] frame].size.height - point.y;\n+\n+    return NSMakeRect(point.x, point.y, size.width, size.height);\n+}\n+\n+- (nullable id)accessibilityParent\n+{\n+    return [self accessibilityParentAttribute];\n+}\n+\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"}]}