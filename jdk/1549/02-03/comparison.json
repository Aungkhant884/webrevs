{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-\n+#import \"a11y\/CommonComponentAccessibility.h\"\n@@ -148,18 +148,0 @@\n-\n-\/\/ In order to use a new NSAccessibility API and since our components\n-\/\/ are represented as a custom UI elements we need to implement a set\n-\/\/ of custom protocols. Definitions of these protocols will start here.\n-\n-\/\/ This is a root interface in the NSAccessibility* protocols hierarchy\n-\/\/ and all the component-specific protocols should be derived from it.\n-\/\/ It is also a place for the functions that might be exposed by all the\n-\/\/ component accessibility peers.\n-\/\/ Please see https:\/\/developer.apple.com\/documentation\/appkit\/nsaccessibilityprotocol\n-\/\/ for more details.\n-@interface CommonComponentAccessibility : JavaComponentAccessibility <NSAccessibilityElement> {\n-\n-}\n-- (NSRect)accessibilityFrame;\n-- (nullable id)accessibilityParent;\n-@end\n-\n@@ -441,10 +423,8 @@\n-    if ([javaRole isEqualToString:@\"pagetablist\"]) {\n-        newChild = [TabGroupAccessibility alloc];\n-    } else if ([javaRole isEqualToString:@\"table\"]) {\n-        newChild = [TableAccessibility alloc];\n-    } else if ([javaRole isEqualToString:@\"scrollpane\"]) {\n-        newChild = [ScrollAreaAccessibility alloc];\n-    } else {\n-        NSString *nsRole = [sRoles objectForKey:javaRole];\n-        if ([nsRole isEqualToString:NSAccessibilityStaticTextRole] || [nsRole isEqualToString:NSAccessibilityTextAreaRole] || [nsRole isEqualToString:NSAccessibilityTextFieldRole]) {\n-            newChild = [JavaTextAccessibility alloc];\n+    newChild = [CommonComponentAccessibility getComponentAccessibility:javaRole];\n+    if (newChild == nil) {\n+        if ([javaRole isEqualToString:@\"pagetablist\"]) {\n+            newChild = [TabGroupAccessibility alloc];\n+        } else if ([javaRole isEqualToString:@\"table\"]) {\n+            newChild = [TableAccessibility alloc];\n+        } else if ([javaRole isEqualToString:@\"scrollpane\"]) {\n+            newChild = [ScrollAreaAccessibility alloc];\n@@ -452,1 +432,8 @@\n-            newChild = [JavaComponentAccessibility alloc];\n+            NSString *nsRole = [sRoles objectForKey:javaRole];\n+            if ([nsRole isEqualToString:NSAccessibilityStaticTextRole] ||\n+                [nsRole isEqualToString:NSAccessibilityTextAreaRole] ||\n+                [nsRole isEqualToString:NSAccessibilityTextFieldRole]) {\n+                newChild = [JavaTextAccessibility alloc];\n+            } else {\n+                newChild = [JavaComponentAccessibility alloc];\n+            }\n@@ -2044,26 +2031,0 @@\n-@implementation CommonComponentAccessibility\n-\/\/ NSAccessibilityElement protocol implementation\n-- (NSRect)accessibilityFrame\n-{\n-    JNIEnv* env = [ThreadUtilities getJNIEnv];\n-    GET_ACCESSIBLECOMPONENT_STATIC_METHOD_RETURN(NSZeroRect);\n-    jobject axComponent = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility, sjm_getAccessibleComponent, fAccessible, fComponent);\n-    CHECK_EXCEPTION();\n-    NSSize size = getAxComponentSize(env, axComponent, fComponent);\n-    NSPoint point = getAxComponentLocationOnScreen(env, axComponent, fComponent);\n-    (*env)->DeleteLocalRef(env, axComponent);\n-    point.y += size.height;\n-\n-    point.y = [[[[self view] window] screen] frame].size.height - point.y;\n-\n-    NSRect retval = NSMakeRect(point.x, point.y, size.width, size.height);\n-    return retval;\n-}\n-\n-- (nullable id)accessibilityParent\n-{\n-    return [self accessibilityParentAttribute];\n-}\n-\n-@end\n-\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/JavaComponentAccessibility.m","additions":18,"deletions":57,"binary":false,"changes":75,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-@end\n\\ No newline at end of file\n+@end\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ButtonAccessibility.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+#import \"JNIUtilities.h\"\n@@ -29,1 +30,1 @@\n-static JNF_STATIC_MEMBER_CACHE(jm_doAccessibleAction, sjc_CAccessibility,\"doAccessibleAction\",\"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\");\n+static jclass sjc_CAccessibility = NULL;\n@@ -43,1 +44,0 @@\n-\n@@ -45,1 +45,8 @@\n-    JNFCallStaticVoidMethod(env, jm_doAccessibleAction, [self axContextWithEnv:(env)], 0, fComponent);\n+\n+    GET_CACCESSIBILITY_CLASS_RETURN(FALSE);\n+    DECLARE_STATIC_METHOD_RETURN(jm_doAccessibleAction, sjc_CAccessibility, \"doAccessibleAction\",\n+                     \"(Ljavax\/accessibility\/AccessibleAction;ILjava\/awt\/Component;)V\", FALSE);\n+    (*env)->CallStaticVoidMethod(env, sjc_CAccessibility, jm_doAccessibleAction,\n+                                 [self axContextWithEnv:(env)], 0, fComponent);\n+    CHECK_EXCEPTION();\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/ButtonAccessibility.m","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-#endif\n\\ No newline at end of file\n+#endif\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+#import \"JNIUtilities.h\"\n@@ -29,1 +30,8 @@\n-static JNF_STATIC_MEMBER_CACHE(sjm_getAccessibleComponent, sjc_CAccessibility, \"getAccessibleComponent\", \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleComponent;\");\n+static jclass sjc_CAccessibility = NULL;\n+static jmethodID sjm_getAccessibleComponent = NULL;\n+\n+#define GET_ACCESSIBLECOMPONENT_STATIC_METHOD_RETURN(ret) \\\n+    GET_CACCESSIBILITY_CLASS_RETURN(ret); \\\n+    GET_STATIC_METHOD_RETURN(sjm_getAccessibleComponent, sjc_CAccessibility, \"getAccessibleComponent\", \\\n+           \"(Ljavax\/accessibility\/Accessible;Ljava\/awt\/Component;)Ljavax\/accessibility\/AccessibleComponent;\", ret);\n+\n@@ -67,2 +75,5 @@\n-    jobject axComponent = JNFCallStaticObjectMethod(env, sjm_getAccessibleComponent,\n-                                                    fAccessible, fComponent);\n+    GET_ACCESSIBLECOMPONENT_STATIC_METHOD_RETURN(NSZeroRect);\n+    jobject axComponent = (*env)->CallStaticObjectMethod(env, sjc_CAccessibility,\n+                                                         sjm_getAccessibleComponent,\n+                                                         fAccessible, fComponent);\n+    CHECK_EXCEPTION();\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/a11y\/CommonComponentAccessibility.m","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"}]}