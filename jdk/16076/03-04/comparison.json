{"files":[{"patch":"@@ -361,2 +361,2 @@\n-  assert(directive->CollectMemStatOption || directive->PrintMemStatOption, \"Only call if memstat is active for this method\");\n-  const bool print = directive->PrintMemStatOption;\n+  assert(directive->should_collect_memstat(), \"Only call if memstat is enabled\");\n+  const bool print = directive->should_print_memstat();\n","filename":"src\/hotspot\/share\/compiler\/compilationMemoryStatistic.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -206,1 +206,5 @@\n-  return CollectMemStatOption || PrintMemStatOption;\n+  return MemStatOption > 0;\n+}\n+\n+bool DirectiveSet::should_print_memstat() const {\n+  return MemStatOption == (uintx)MemStatAction::print;\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-    cflags(CollectMemStat,          bool, false, CollectMemStat) \\\n@@ -45,0 +44,1 @@\n+    cflags(MemStat,                 uintx, 0, MemStat) \\\n@@ -48,1 +48,0 @@\n-    cflags(PrintMemStat,            bool, false, PrintMemStat) \\\n@@ -137,0 +136,1 @@\n+  bool should_print_memstat() const;\n","filename":"src\/hotspot\/share\/compiler\/compilerDirectives.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -104,0 +104,1 @@\n+static bool print_final_memstat_report = false;\n@@ -328,0 +329,1 @@\n+\n@@ -460,1 +462,1 @@\n-  return has_command(CompileCommand::PrintMemStat) || has_command(CompileCommand::CollectMemStat);\n+  return has_command(CompileCommand::MemStat);\n@@ -463,2 +465,2 @@\n-bool CompilerOracle::should_print_memstat() {\n-  return has_command(CompileCommand::PrintMemStat);\n+bool CompilerOracle::should_print_final_memstat_report() {\n+  return print_final_memstat_report;\n@@ -635,0 +637,16 @@\n+static bool parseEnumValueAsUintx(enum CompileCommand option, const char* line, uintx& value, int& bytes_read, char* errorbuf, const int buf_size) {\n+  if (option == CompileCommand::MemStat) {\n+    if (strncasecmp(line, \"collect\", 7) == 0) {\n+      value = (uintx)MemStatAction::collect;\n+    } else if (strncasecmp(line, \"print\", 5) == 0) {\n+      value = (uintx)MemStatAction::print;\n+      print_final_memstat_report = true;\n+    } else {\n+      jio_snprintf(errorbuf, buf_size, \"MemStat: invalid value expected 'collect' or 'print' (omitting value means 'collect')\");\n+    }\n+    return true; \/\/ handled\n+  }\n+  return false;\n+#undef HANDLE_VALUE\n+}\n+\n@@ -654,1 +672,7 @@\n-    if (sscanf(line, \"\" UINTX_FORMAT \"%n\", &value, &bytes_read) == 1) {\n+    \/\/ Is it a named enum?\n+    bool success = parseEnumValueAsUintx(option, line, value, bytes_read, errorbuf, buf_size);\n+    if (!success) {\n+      \/\/ Is it a raw number?\n+      success = (sscanf(line, \"\" UINTX_FORMAT \"%n\", &value, &bytes_read) == 1);\n+    }\n+    if (success) {\n@@ -926,1 +950,0 @@\n-      \/\/ if this is a bool option this implies true\n@@ -928,0 +951,1 @@\n+        \/\/ if this is a bool option this implies true\n@@ -930,0 +954,4 @@\n+      } else if (option == CompileCommand::MemStat) {\n+        \/\/ MemStat default action is to collect data but to not print\n+        register_command(matcher, option, (uintx)MemStatAction::collect);\n+        return true;\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.cpp","additions":33,"deletions":5,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  option(CollectMemStat, \"CollectMemStat\", Bool)   \\\n+  option(MemStat, \"MemStat\", Uintx) \\\n@@ -65,1 +65,0 @@\n-  option(PrintMemStat, \"PrintMemStat\", Bool)   \\\n@@ -118,0 +117,4 @@\n+enum class MemStatAction {\n+  collect = 1, print = 2\n+};\n+\n@@ -158,1 +161,1 @@\n-  static bool should_print_memstat();\n+  static bool should_print_final_memstat_report();\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.hpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-  if (CompilerOracle::should_print_memstat()) {\n+  if (CompilerOracle::should_print_final_memstat_report()) {\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-        options.add(\"-XX:CompileCommand=PrintMemStat,\" + getTestMethod(include));\n+        options.add(\"-XX:CompileCommand=MemStat,\" + getTestMethod(include) + \",print\");\n","filename":"test\/hotspot\/jtreg\/compiler\/print\/CompileCommandPrintMemStat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,13 @@\n- * @run main\/othervm -XX:CompileCommand=CollectMemStat,*.* CompilerMemoryStatisticTest\n+ * @run main\/othervm -XX:CompileCommand=memstat,*.* CompilerMemoryStatisticTest\n+ *\/\n+\n+\/*\n+ * @test CompilerMemoryStatisticTest\n+ * @summary Test Compiler.memory\n+ * @requires vm.compiler1.enabled\n+ * @requires vm.compiler2.enabled\n+ *\n+ * @library \/test\/lib\n+ * @modules java.base\/jdk.internal.misc\n+ *          java.management\n+ * @run main\/othervm -XX:CompileCommand=memstat,*.*,collect CompilerMemoryStatisticTest\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/compiler\/CompilerMemoryStatisticTest.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}