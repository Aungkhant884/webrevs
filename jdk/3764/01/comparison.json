{"files":[{"patch":"@@ -936,2 +936,0 @@\n-        \/\/ Create new keystore\n-        \/\/ Probe for keystore type when filename is available\n@@ -939,3 +937,11 @@\n-                storetype == null && !inplaceImport) {\n-            keyStore = KeyStore.getInstance(ksfile, storePass);\n-            storetype = keyStore.getType();\n+                !inplaceImport) {\n+            \/\/ existing keystore\n+            if (storetype == null) {\n+                \/\/ Probe for keystore type when filename is available\n+                keyStore = KeyStore.getInstance(ksfile, storePass);\n+                storetype = keyStore.getType();\n+            } else {\n+                keyStore = KeyStore.getInstance(storetype);\n+                \/\/ storePass might be null here, will probably prompt later\n+                keyStore.load(ksStream, storePass);\n+            }\n@@ -943,1 +949,5 @@\n-                isPasswordlessKeyStore = PKCS12KeyStore.isPasswordless(ksfile);\n+                try {\n+                    isPasswordlessKeyStore = PKCS12KeyStore.isPasswordless(ksfile);\n+                } catch (IOException ioe) {\n+                    \/\/ This must be a JKS keystore that's opened as a PKCS12\n+                }\n@@ -946,0 +956,1 @@\n+            \/\/ Create new keystore\n@@ -988,0 +999,1 @@\n+                    \/\/ both ksStream and storePass could be null\n@@ -990,3 +1002,0 @@\n-                if (ksStream != null) {\n-                    ksStream.close();\n-                }\n@@ -1089,3 +1098,4 @@\n-                ksStream = new FileInputStream(ksfile);\n-                keyStore.load(ksStream, storePass);\n-                ksStream.close();\n+                \/\/ Reload with user-provided password\n+                try (FileInputStream fis = new FileInputStream(ksfile)) {\n+                    keyStore.load(fis, storePass);\n+                }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8192988\n+ * @bug 8192988 8266220\n@@ -137,0 +137,15 @@\n+\n+        \/\/ A password-less keystore\n+        ktFull(\"-keystore nopass -genkeypair -keyalg EC \"\n+                + \"-storepass changeit -alias no -dname CN=no \"\n+                + \"-J-Dkeystore.pkcs12.certProtectionAlgorithm=NONE \"\n+                + \"-J-Dkeystore.pkcs12.macAlgorithm=NONE\")\n+                .shouldHaveExitValue(0);\n+\n+        ktFull(\"-keystore nopass -list\")\n+                .shouldHaveExitValue(0)\n+                .shouldNotContain(\"Enter keystore password:\");\n+\n+        ktFull(\"-keystore nopass -list -storetype pkcs12\")\n+                .shouldHaveExitValue(0)\n+                .shouldNotContain(\"Enter keystore password:\");\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/PKCS12Passwd.java","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"}]}