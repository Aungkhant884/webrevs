{"files":[{"patch":"@@ -796,1 +796,1 @@\n-         * NOTE: It is used by SWT, and JavaFX.\n+         * NOTE: It is used by SWT\n@@ -833,4 +833,0 @@\n-        \/*\n-         * Clears all errors caused by getCanonicalName() on the mainclass and\n-         * leaves the JAVA_MAIN_CLASS__<pid> empty.\n-         *\/\n@@ -841,17 +837,4 @@\n-    const char *mainClassName = NULL;\n-    NULL_CHECK(mainClassName = (*env)->GetStringUTFChars(env, mainClassString, NULL));\n-\n-    char envVar[80];\n-    \/*\n-     * The JAVA_MAIN_CLASS_<pid> environment variable is used to pass\n-     * the name of a Java class whose main() method is invoked by\n-     * the Java launcher code to start the application, to the AWT code\n-     * in order to assign the name to the Apple menu bar when the app\n-     * is active on the Mac.\n-     * The _<pid> part is added to avoid collisions with child processes.\n-     *\n-     * WARNING: This environment variable is an implementation detail and\n-     * isn't meant for use outside of the core platform. The mechanism for\n-     * passing this information from Java launcher to other modules may\n-     * change drastically between update release, and it may even be\n-     * removed or replaced with another mechanism.\n+    \/* There are multiple apple.awt.*\" system properties that AWT(the desktop module)\n+     * references that are inherited from Apple JDK.\n+     * This inherited AWT code looks for this property and uses it for the name\n+     * of the app as it appears in the system menu bar.\n@@ -859,1 +842,2 @@\n-     * NOTE: It is used by SWT, and JavaFX.\n+     * Not idea if how much external code ever sets it, but use it if set, else\n+     * if not set (the high probability event) set it to the application class name.\n@@ -861,2 +845,33 @@\n-    snprintf(envVar, sizeof(envVar), \"JAVA_MAIN_CLASS_%d\", getpid());\n-    setenv(envVar, mainClassName, 1);\n+    const char* propName = \"apple.awt.application.name\";\n+    jstring jKey = NULL;\n+    NULL_CHECK(jKey = (*env)->NewStringUTF(env, propName));\n+\n+    jclass sysClass = NULL;\n+    NULL_CHECK(sysClass = (*env)->FindClass(env, \"java\/lang\/System\"));\n+\n+    jmethodID getPropertyMID = NULL;\n+    NULL_CHECK(getPropertyMID = (*env)->GetStaticMethodID(env, sysClass,\n+               \"getProperty\", \"(Ljava\/lang\/String;)Ljava\/lang\/String;\"));\n+\n+    jmethodID setPropertyMID = NULL;\n+    NULL_CHECK(setPropertyMID = (*env)->GetStaticMethodID(env, sysClass,\n+               \"setProperty\",\n+               \"(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;\"));\n+\n+    jstring jValue = (*env)->CallStaticObjectMethod(env, sysClass, getPropertyMID, jKey);\n+    if ((*env)->ExceptionCheck(env)) {\n+        (*env)->ExceptionClear(env);\n+        (*env)->DeleteLocalRef(env, jKey);\n+        return;\n+    }\n+    if (jValue == NULL) {\n+        (*env)->CallStaticObjectMethod(env, sysClass, setPropertyMID,\n+                                       jKey, mainClassString);\n+        if ((*env)->ExceptionCheck(env)) {\n+            (*env)->ExceptionClear(env);\n+            (*env)->DeleteLocalRef(env, jKey);\n+            return;\n+        }\n+    } else {\n+        (*env)->DeleteLocalRef(env, jValue);\n+    }\n@@ -864,1 +879,1 @@\n-    (*env)->ReleaseStringUTFChars(env, mainClassString, mainClassName);\n+    (*env)->DeleteLocalRef(env, jKey);\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":41,"deletions":26,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -183,0 +183,1 @@\n+    \/\/ The launcher code sets this if it is not already set on the command line.\n@@ -187,16 +188,0 @@\n-    \/\/ If we STILL don't have it, the app name is retrieved from an environment variable (set in java.c) It should be UTF8.\n-    if (fApplicationName == nil) {\n-        char mainClassEnvVar[80];\n-        snprintf(mainClassEnvVar, sizeof(mainClassEnvVar), \"JAVA_MAIN_CLASS_%d\", getpid());\n-        char *mainClass = getenv(mainClassEnvVar);\n-        if (mainClass != NULL) {\n-            fApplicationName = [NSString stringWithUTF8String:mainClass];\n-            unsetenv(mainClassEnvVar);\n-\n-            NSRange lastPeriod = [fApplicationName rangeOfString:@\".\" options:NSBackwardsSearch];\n-            if (lastPeriod.location != NSNotFound) {\n-                fApplicationName = [fApplicationName substringFromIndex:lastPeriod.location + 1];\n-            }\n-        }\n-    }\n-\n","filename":"src\/java.desktop\/macosx\/native\/libosxapp\/NSApplicationAWT.m","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -86,2 +86,1 @@\n-            if (s.startsWith(\"JAVA_MAIN_CLASS_\")\n-                    || s.startsWith(\"APP_NAME_\")\n+            if (s.startsWith(\"APP_NAME_\")\n@@ -92,3 +91,0 @@\n-        runTest(envToRemove, javaCmd, \"-cp\", TEST_CLASSES_DIR.getAbsolutePath(),\n-                \"EnvironmentVariables\", \"JAVA_MAIN_CLASS_*\",\n-                \"EnvironmentVariables\");\n","filename":"test\/jdk\/tools\/launcher\/TestSpecialArgs.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}