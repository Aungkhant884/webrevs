{"files":[{"patch":"@@ -361,1 +361,1 @@\n-            if (! (standardTags.contains(name) || allTaglets.containsKey(name))) {\n+            if (! (standardTags.contains(name) || allTaglets.containsKey(name))) { \/\/ defunct, see 8314213\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/taglets\/TagletManager.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,0 +44,2 @@\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n@@ -1141,0 +1143,6 @@\n+        \/\/ if it were a standard tag, this method wouldn't be called:\n+        \/\/ a standard tag is never represented by Unknown{Block,Inline}TagTree\n+        assert tree instanceof UnknownBlockTagTree\n+                || tree instanceof UnknownInlineTagTree;\n+        assert !getStandardTags().contains(tagName);\n+        \/\/ report an unknown tag only if custom tags are set, see 8314213\n@@ -1145,0 +1153,7 @@\n+    private Set<String> getStandardTags() {\n+        return Stream.of(DocTree.Kind.values())\n+                .filter(k -> k.tagName != null) \/\/ not all DocTree represent tags\n+                .map(k -> k.tagName)\n+                .collect(Collectors.toUnmodifiableSet());\n+    }\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}