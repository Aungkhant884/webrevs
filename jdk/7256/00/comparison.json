{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -387,1 +387,1 @@\n-  MetaspaceShared::link_shared_classes(THREAD);\n+  MetaspaceShared::link_shared_classes(false\/*not from jcmd*\/, THREAD);\n@@ -403,1 +403,1 @@\n-  MetaspaceShared::link_shared_classes(CHECK);\n+  MetaspaceShared::link_shared_classes(true\/*from jcmd*\/, CHECK);\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -645,2 +645,4 @@\n-void MetaspaceShared::link_shared_classes(TRAPS) {\n-  LambdaFormInvokers::regenerate_holder_classes(CHECK);\n+void MetaspaceShared::link_shared_classes(bool jcmd_request, TRAPS) {\n+  if (!jcmd_request) {\n+    LambdaFormInvokers::regenerate_holder_classes(CHECK);\n+  }\n@@ -778,1 +780,1 @@\n-  link_shared_classes(CHECK);\n+  link_shared_classes(false\/*not from jcmd*\/, CHECK);\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,1 @@\n-  static void link_shared_classes(TRAPS) NOT_CDS_RETURN;\n+  static void link_shared_classes(bool jcmd_request, TRAPS) NOT_CDS_RETURN;\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,0 +120,11 @@\n+        \/\/ Test dynamic dump with -Xlog:cds to check lambda invoker class regeneration\n+        print2ln(test_count++ + \" Test dynamic dump with -Xlog:cds to check lambda invoker class regeneration\");\n+        app = createLingeredApp(\"-cp\", allJars, \"-XX:+RecordDynamicDumpInfo\", \"-Xlog:cds\",\n+                                \"-XX:SharedArchiveFile=\" + archiveFile);\n+        pid = app.getPid();\n+        test(null, pid, noBoot, EXPECT_PASS, DYNAMIC_MESSAGES);\n+        String stdout = app.getProcessStdout();\n+        if (stdout.contains(\"Regenerate MethodHandle Holder classes...\")) {\n+            throw new RuntimeException(\"jcmd VM.cds dynamic_dump should not regenerate MethodHandle Holder classes\");\n+        }\n+        app.stopApp();\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jcmd\/JCmdTestDynamicDump.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"}]}