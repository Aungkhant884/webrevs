{"files":[{"patch":"@@ -93,1 +93,1 @@\n-  verify_section_allocation();\n+  debug_only(verify_section_allocation();)\n@@ -120,1 +120,1 @@\n-  verify_section_allocation();\n+  debug_only(verify_section_allocation();)\n@@ -497,1 +497,1 @@\n-  dest->verify_section_allocation();\n+  debug_only(dest->verify_section_allocation();)\n@@ -917,1 +917,1 @@\n-                                 badCodeHeapFreeVal));\n+                                 badCodeHeapFreeVal);)\n@@ -920,1 +920,1 @@\n-  verify_section_allocation();\n+  debug_only(verify_section_allocation();)\n@@ -952,1 +952,0 @@\n-\n@@ -959,3 +958,4 @@\n-    if (!sect->is_allocated() || sect->is_empty())  continue;\n-    guarantee((intptr_t)sect->start() % sect->alignment() == 0\n-           || sect->is_empty() || _blob == NULL,\n+    if (!sect->is_allocated() || sect->is_empty()) {\n+       continue;\n+    }\n+    guarantee(_blob == nullptr || is_aligned(sect->start(), sect->alignment()),\n@@ -963,1 +963,1 @@\n-    for (int m = (int) SECT_FIRST; m < (int) SECT_LIMIT; m++) {\n+    for (int m = n + 1; m < (int) SECT_LIMIT; m++) {\n@@ -965,5 +965,4 @@\n-      if (!other->is_allocated() || other == sect)  continue;\n-      guarantee(!other->contains(sect->start()    ), \"sanity\");\n-      \/\/ limit is an exclusive address and can be the start of another\n-      \/\/ section.\n-      guarantee(!other->contains(sect->limit() - 1), \"sanity\");\n+      if (!other->is_allocated() || other == sect) {\n+        continue;\n+      }\n+      guarantee(other->disjoint(sect), \"sanity\");\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -180,0 +180,6 @@\n+  \/\/ checks if two CodeSections are disjoint\n+  \/\/\n+  \/\/ limit is an exclusive address and can be the start of another\n+  \/\/ section.\n+  bool disjoint(CodeSection* cs) const { return cs->_limit <= _start || cs->_start >= _limit; }\n+\n@@ -488,1 +494,1 @@\n-    verify_section_allocation();\n+    debug_only(verify_section_allocation();)\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}