{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -316,0 +316,7 @@\n+        \/**\n+         * @return the {@link Property}'s {@link #ordinal}.\n+         *\/\n+        public int ordinal() {\n+            return ordinal;\n+        }\n+\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIConstants.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -279,1 +279,1 @@\n-    Hit getHitForPoint(final int x, final int y, final int w, final int h, final int hitX, final int hitY) {\n+    public Hit getHitForPoint(int x, int y, int w, int h, int hitX, int hitY) {\n@@ -287,1 +287,1 @@\n-    void getPartBounds(final double[] rect, final int x, final int y, final int w, final int h, final int part) {\n+    public void getPartBounds(double[] rect, int x, int y, int w, int h, int part) {\n@@ -296,1 +296,1 @@\n-    double getScrollBarOffsetChange(final int x, final int y, final int w, final int h, final int offset, final int visibleAmount, final int extent) {\n+    public double getScrollBarOffsetChange(int x, int y, int w, int h, int offset, int visibleAmount, int extent) {\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIControl.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,3 +30,0 @@\n-import apple.laf.JRSUIConstants.Hit;\n-import apple.laf.JRSUIConstants.ScrollBarPart;\n-import com.apple.laf.AquaImageFactory.NineSliceMetrics;\n@@ -35,0 +32,3 @@\n+\/**\n+ * Utility class for JRSUI.\n+ *\/\n@@ -37,16 +37,4 @@\n-    static boolean isLeopard = isMacOSXLeopard();\n-    static boolean isSnowLeopardOrBelow = isMacOSXSnowLeopardOrBelow();\n-\n-    public static boolean isMacOSXBigSurOrAbove() {\n-        return currentMacOSXVersionMatchesGivenVersionRange(10, 16, true,\n-                false, true);\n-    }\n-\n-    static boolean isMacOSXLeopard() {\n-        return isCurrentMacOSXVersion(5);\n-    }\n-\n-    static boolean isMacOSXSnowLeopardOrBelow() {\n-        return currentMacOSXVersionMatchesGivenVersionRange(10, 6, true,\n-                true, false);\n-    }\n+    \/**\n+     * True if OSX is 10.5 exactly (ignoring patch versions).\n+     *\/\n+    public static final boolean isLeopard;\n@@ -54,3 +42,4 @@\n-    static boolean isCurrentMacOSXVersion(final int version) {\n-        return isCurrentMacOSXVersion(10, version);\n-    }\n+    \/**\n+     * True if OSX is 10.6 or below.\n+     *\/\n+    public static final boolean isSnowLeopardOrBelow;\n@@ -58,3 +47,4 @@\n-    static boolean isCurrentMacOSXVersion(final int major, final int minor) {\n-        return currentMacOSXVersionMatchesGivenVersionRange(major, minor, true, false, false);\n-    }\n+    \/**\n+     * True if macOS is 10.16 or higher.\n+     *\/\n+    public static final boolean isBigSurOrAbove;\n@@ -62,9 +52,1 @@\n-    static boolean currentMacOSXVersionMatchesGivenVersionRange(\n-            final int version, final boolean inclusive,\n-            final boolean matchBelow, final boolean matchAbove) {\n-        return currentMacOSXVersionMatchesGivenVersionRange(10, version, inclusive, matchBelow, matchAbove);\n-    }\n-\n-    static boolean currentMacOSXVersionMatchesGivenVersionRange(\n-            final int majorVersion, final int minorVersion, final boolean inclusive,\n-            final boolean matchBelow, final boolean matchAbove) {\n+    static {\n@@ -76,39 +58,26 @@\n-        if (fragments.length < 2) return false;\n-\n-        \/\/ check if os.version matches the given version using the given match method\n-        try {\n-            int majorVers = Integer.parseInt(fragments[0]);\n-            int minorVers = Integer.parseInt(fragments[1]);\n-\n-            if (inclusive && majorVers == majorVersion && minorVers == minorVersion) return true;\n-            if (matchBelow &&\n-                    (majorVers < majorVersion ||\n-                            (majorVers == majorVersion && minorVers < minorVersion))) return true;\n-            if (matchAbove &&\n-                    (majorVers > majorVersion ||\n-                            (majorVers == majorVersion && minorVers > minorVersion))) return true;\n-\n-        } catch (NumberFormatException e) {\n-            \/\/ was not an integer\n-        }\n-        return false;\n-    }\n-\n-    public static class TabbedPane {\n-        public static boolean useLegacyTabs() {\n-            return isLeopard;\n-        }\n-        public static boolean shouldUseTabbedPaneContrastUI() {\n-            return !isSnowLeopardOrBelow;\n-        }\n-    }\n-\n-    public static class InternalFrame {\n-        public static boolean shouldUseLegacyBorderMetrics() {\n-            return isSnowLeopardOrBelow;\n-        }\n-    }\n-\n-    public static class Tree {\n-        public static boolean useLegacyTreeKnobs() {\n-            return isLeopard;\n+        if (fragments.length < 2) {\n+            isLeopard = false;\n+            isSnowLeopardOrBelow = false;\n+            isBigSurOrAbove = false;\n+        } else {\n+            boolean isBigSurOrAbove1;\n+            boolean isSnowLeopardOrBelow1;\n+            boolean isLeopard1;\n+\n+            try {\n+                int majorVersion = Integer.parseInt(fragments[0]);\n+                int minorVersion = Integer.parseInt(fragments[1]);\n+\n+                isLeopard1 = majorVersion == 10 && minorVersion == 5; \/\/ exactly OSX 10.5\n+                isSnowLeopardOrBelow1 = majorVersion < 10 || majorVersion == 10 && minorVersion <= 6; \/\/ OSX 10.6 or below\n+                isBigSurOrAbove1 = majorVersion > 10 || majorVersion == 10 && minorVersion >= 16; \/\/ OSX 10.16 or above\n+            } catch (NumberFormatException e) {\n+                \/\/ was not an integer\n+                isLeopard1 = false;\n+                isSnowLeopardOrBelow1 = false;\n+                isBigSurOrAbove1 = false;\n+            }\n+\n+            isBigSurOrAbove = isBigSurOrAbove1;\n+            isSnowLeopardOrBelow = isSnowLeopardOrBelow1;\n+            isLeopard = isLeopard1;\n@@ -118,2 +87,2 @@\n-    public static class ScrollBar {\n-        private static native boolean shouldUseScrollToClick();\n+    \/\/ DENY\n+    private JRSUIUtils() {}\n@@ -121,41 +90,4 @@\n-        public static boolean useScrollToClick() {\n-            return shouldUseScrollToClick();\n-        }\n-\n-        public static void getPartBounds(final double[] rect,\n-                                         final JRSUIControl control,\n-                                         final int x, final int y, final int w,\n-                                         final int h,\n-                                         final ScrollBarPart part) {\n-            control.getPartBounds(rect, x, y, w, h, part.ordinal);\n-        }\n-\n-        public static double getNativeOffsetChange(final JRSUIControl control,\n-                                                   final int x, final int y,\n-                                                   final int w, final int h,\n-                                                   final int offset,\n-                                                   final int visibleAmount,\n-                                                   final int extent) {\n-            return control.getScrollBarOffsetChange(x, y, w, h, offset,\n-                                                    visibleAmount, extent);\n-        }\n-    }\n-\n-    public static class Images {\n-        public static boolean shouldUseLegacySecurityUIPath() {\n-            return isSnowLeopardOrBelow;\n-        }\n-    }\n-\n-    public static class HitDetection {\n-        public static Hit getHitForPoint(final JRSUIControl control,\n-                                         final int x, final int y, final int w,\n-                                         final int h, final int hitX,\n-                                         final int hitY) {\n-            return control.getHitForPoint(x, y, w, h, hitX, hitY);\n-        }\n-    }\n-\n-    public interface NineSliceMetricsProvider {\n-        public NineSliceMetrics getNineSliceMetricsForState(JRSUIState state);\n-    }\n+    \/**\n+     * Returns {@code JRSUIControlShouldScrollToClick();} from native code.\n+     *\/\n+    public static native boolean shouldUseScrollToClick();\n","filename":"src\/java.desktop\/macosx\/classes\/apple\/laf\/JRSUIUtils.java","additions":49,"deletions":117,"binary":false,"changes":166,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-import sun.swing.ImageIconUIResource;\n@@ -74,0 +73,1 @@\n+    \/\/ public, because UIDefaults.ProxyLazyValue uses reflection to get this value\n@@ -75,4 +75,5 @@\n-        \/\/ public, because UIDefaults.ProxyLazyValue uses reflection to get this value\n-        if (JRSUIUtils.Images.shouldUseLegacySecurityUIPath()) {\n-            final Image lockIcon = CImage.createImageFromFile(\"\/System\/Library\/CoreServices\/SecurityAgent.app\/Contents\/Resources\/Security.icns\", kAlertIconSize, kAlertIconSize);\n-            return getAppIconCompositedOn(lockIcon);\n+        Image lockIcon;\n+        if (JRSUIUtils.isSnowLeopardOrBelow) {\n+            lockIcon = CImage.createImageFromFile(\"\/System\/Library\/CoreServices\/SecurityAgent.app\/Contents\/Resources\/Security.icns\", kAlertIconSize, kAlertIconSize);\n+        } else {\n+            lockIcon = Toolkit.getDefaultToolkit().getImage(\"NSImage:\/\/NSSecurity\");\n@@ -81,1 +82,0 @@\n-        final Image lockIcon = Toolkit.getDefaultToolkit().getImage(\"NSImage:\/\/NSSecurity\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaImageFactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,0 @@\n-    private static final boolean useLegacyBorderMetrics = JRSUIUtils.InternalFrame.shouldUseLegacyBorderMetrics();\n@@ -51,1 +50,1 @@\n-        if (useLegacyBorderMetrics) {\n+        if (JRSUIUtils.isSnowLeopardOrBelow) {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaInternalFrameBorderMetrics.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -876,1 +876,1 @@\n-            \"TabbedPane.selectedTabTitlePressedColor\", JRSUIUtils.isMacOSXBigSurOrAbove() ? selectedControlTextColor : selectedTabTitlePressedColor,\n+            \"TabbedPane.selectedTabTitlePressedColor\", JRSUIUtils.isBigSurOrAbove ? selectedControlTextColor : selectedTabTitlePressedColor,\n@@ -879,1 +879,1 @@\n-            \"TabbedPane.selectedTabTitleNormalColor\", JRSUIUtils.isMacOSXBigSurOrAbove() ? selectedControlTextColor : selectedTabTitleNormalColor,\n+            \"TabbedPane.selectedTabTitleNormalColor\", JRSUIUtils.isBigSurOrAbove ? selectedControlTextColor : selectedTabTitleNormalColor,\n@@ -1089,1 +1089,1 @@\n-            \"TabbedPaneUI\", PKG_PREFIX + (JRSUIUtils.TabbedPane.shouldUseTabbedPaneContrastUI() ? \"AquaTabbedPaneContrastUI\" : \"AquaTabbedPaneUI\"),\n+            \"TabbedPaneUI\", PKG_PREFIX + (JRSUIUtils.isSnowLeopardOrBelow ? \"AquaTabbedPaneUI\" : \"AquaTabbedPaneContrastUI\"),\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaLookAndFeel.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.util.function.Function;\n@@ -40,1 +41,0 @@\n-import apple.laf.JRSUIUtils.NineSliceMetricsProvider;\n@@ -57,6 +57,1 @@\n-        return create(state, new NineSliceMetricsProvider() {\n-            @Override\n-               public NineSliceMetrics getNineSliceMetricsForState(JRSUIState state) {\n-                return new NineSliceMetrics(minWidth, minHeight, westCut, eastCut, northCut, southCut, useMiddle, stretchHorizontally, stretchVertically);\n-            }\n-        });\n+        return create(state, s -> new NineSliceMetrics(minWidth, minHeight, westCut, eastCut, northCut, southCut, useMiddle, stretchHorizontally, stretchVertically));\n@@ -65,1 +60,1 @@\n-    static <T extends JRSUIState> AquaPainter<T> create(final T state, final NineSliceMetricsProvider metricsProvider) {\n+    static <T extends JRSUIState> AquaPainter<T> create(T state, Function<JRSUIState, NineSliceMetrics> metricsProvider) {\n@@ -98,1 +93,1 @@\n-        private final NineSliceMetricsProvider metricsProvider;\n+        private final Function<JRSUIState, NineSliceMetrics> metricsProvider;\n@@ -104,1 +99,1 @@\n-        AquaNineSlicingImagePainter(final T state, final NineSliceMetricsProvider metricsProvider) {\n+        AquaNineSlicingImagePainter(T state, Function<JRSUIState, NineSliceMetrics> metricsProvider) {\n@@ -119,1 +114,1 @@\n-                final NineSliceMetrics metrics = metricsProvider.getNineSliceMetricsForState(stateToPaint);\n+                NineSliceMetrics metrics = metricsProvider.apply(stateToPaint);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaPainter.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -239,1 +239,1 @@\n-        return JRSUIUtils.HitDetection.getHitForPoint(painter.getControl(), insets.left, insets.top,\n+        return painter.getControl().getHitForPoint(insets.left, insets.top,\n@@ -358,2 +358,2 @@\n-            final double offsetChange = JRSUIUtils.ScrollBar.getNativeOffsetChange(painter.getControl(),\n-                    limitRect.x, limitRect.y, limitRect.width, limitRect.height, offsetWeCareAbout, visibleAmt, extent);\n+            double offsetChange = painter.getControl().getScrollBarOffsetChange(limitRect.x, limitRect.y,\n+                    limitRect.width, limitRect.height, offsetWeCareAbout, visibleAmt, extent);\n@@ -438,1 +438,1 @@\n-            boolean shouldScrollToHere = (part != ScrollBarHit.THUMB) && JRSUIUtils.ScrollBar.useScrollToClick();\n+            boolean shouldScrollToHere = part != ScrollBarHit.THUMB && JRSUIUtils.shouldUseScrollToClick();\n@@ -612,1 +612,2 @@\n-        JRSUIUtils.ScrollBar.getPartBounds(rect, painter.getControl(), limitRect.x, limitRect.y, limitRect.width, limitRect.height, ScrollBarPart.THUMB);\n+        painter.getControl().getPartBounds(rect, limitRect.x, limitRect.y, limitRect.width, limitRect.height,\n+                ScrollBarPart.THUMB.ordinal());\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaScrollBarUI.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,0 @@\n-import apple.laf.JRSUIUtils.NineSliceMetricsProvider;\n@@ -73,7 +72,3 @@\n-    static final AquaPainter<JRSUIState> trackPainter = AquaPainter.create(JRSUIStateFactory.getSliderTrack(), new NineSliceMetricsProvider() {\n-        @Override\n-        public NineSliceMetrics getNineSliceMetricsForState(JRSUIState state) {\n-            if (state.is(Orientation.VERTICAL)) {\n-                return new NineSliceMetrics(5, 7, 0, 0, 3, 3, true, false, true);\n-            }\n-            return new NineSliceMetrics(7, 5, 3, 3, 0, 0, true, true, false);\n+    static final AquaPainter<JRSUIState> trackPainter = AquaPainter.create(JRSUIStateFactory.getSliderTrack(), state -> {\n+        if (state.is(Orientation.VERTICAL)) {\n+            return new NineSliceMetrics(5, 7, 0, 0, 3, 3, true, false, true);\n@@ -81,0 +76,1 @@\n+        return new NineSliceMetrics(7, 5, 3, 3, 0, 0, true, true, false);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaSliderUI.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,3 +85,1 @@\n-        } else if (!JRSUIUtils.isMacOSXBigSurOrAbove() && !isFrameActive) {\n-            return UIManager.getColor(\"TabbedPane.selectedTabTitleNonFocusColor\");\n-        } else {\n+        } else if (JRSUIUtils.isBigSurOrAbove || isFrameActive) {\n@@ -89,0 +87,2 @@\n+        } else {\n+            return UIManager.getColor(\"TabbedPane.selectedTabTitleNonFocusColor\");\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTabbedPaneContrastUI.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -534,1 +534,1 @@\n-        if (JRSUIUtils.TabbedPane.useLegacyTabs()) {\n+        if (JRSUIUtils.isLeopard) {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTabbedPaneUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -244,1 +244,1 @@\n-        if (JRSUIUtils.Tree.useLegacyTreeKnobs()) {\n+        if (JRSUIUtils.isLeopard) {\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTreeUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -255,1 +255,1 @@\n- * Class:     apple_laf_JRSUIUtils_ScrollBar\n+ * Class:     apple_laf_JRSUIUtils\n@@ -259,1 +259,1 @@\n-JNIEXPORT jboolean JNICALL Java_apple_laf_JRSUIUtils_00024ScrollBar_shouldUseScrollToClick\n+JNIEXPORT jboolean JNICALL Java_apple_laf_JRSUIUtils_shouldUseScrollToClick\n","filename":"src\/java.desktop\/macosx\/native\/libosxui\/JRSUIController.m","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}