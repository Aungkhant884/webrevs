{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import nsk.share.test.ExecutionController;\n@@ -51,1 +52,1 @@\n-            locker.lock();\n+            ExecutionController stresser = getExecutionController();\n@@ -54,2 +55,6 @@\n-            GarbageUtils.engageGC(getExecutionController(), testMemory);\n-            locker.unlock();\n+\n+            while (stresser.continueExecution()) {\n+                locker.lock();\n+                GarbageUtils.engageGC(testMemory);\n+                locker.unlock();\n+            }\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/gc\/lock\/LockerTest.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n-        public static void engageGC(ExecutionController stresser, long testMemory) {\n+        public static void engageGC(long testMemory) {\n@@ -95,0 +95,2 @@\n+            \/\/ To be released only for full GC.\n+            Object initialAlloc = byteArrayProducer.create(memChunk);\n@@ -96,7 +98,3 @@\n-            while (stresser.continueExecution()) {\n-                while (iteration++ < YOUNG_GC_ITERATIONS) {\n-                    byteArrayProducer.create(memChunk);\n-                    WhiteBox.getWhiteBox().youngGC();\n-                }\n-                iteration = 0;\n-                WhiteBox.getWhiteBox().fullGC();\n+            while (++iteration < YOUNG_GC_ITERATIONS) {\n+                byteArrayProducer.create(memChunk);\n+                WhiteBox.getWhiteBox().youngGC();\n@@ -104,0 +102,2 @@\n+            initialAlloc = null;\n+            WhiteBox.getWhiteBox().fullGC();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/gp\/GarbageUtils.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}