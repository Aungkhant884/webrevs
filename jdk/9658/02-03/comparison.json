{"files":[{"patch":"@@ -90,0 +90,8 @@\n+        \/**\n+         * engages GC by allocating memory chunks and triggering youngGC.\n+         * Allocations are done for a total of YOUNG_GC_ITERATIONS times.\n+         * Each iteration, we allocate a memory chunk and trigger youngGC.\n+         * Finally fullGC is run once.\n+         * This way the objects get to travel to various GC regions.\n+         * @param testMemory - memory size to be operated on\n+         *\/\n@@ -91,2 +99,1 @@\n-            \/\/ Number of Young GC iterations before triggering full GC.\n-            final long YOUNG_GC_ITERATIONS = 100;\n+            final int YOUNG_GC_ITERATIONS = 100;\n@@ -95,2 +102,1 @@\n-            \/\/ To be released only for full GC.\n-            Object initialAlloc = byteArrayProducer.create(memChunk);\n+            Object referenceArray[] = new Object[YOUNG_GC_ITERATIONS];\n@@ -98,2 +104,2 @@\n-            while (++iteration < YOUNG_GC_ITERATIONS) {\n-                byteArrayProducer.create(memChunk);\n+            while (iteration < YOUNG_GC_ITERATIONS) {\n+                referenceArray[iteration++] = byteArrayProducer.create(memChunk);\n@@ -102,1 +108,0 @@\n-            initialAlloc = null;\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/gc\/gp\/GarbageUtils.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"}]}