{"files":[{"patch":"@@ -81,0 +81,1 @@\n+import java.time.LocalDate;\n@@ -1034,1 +1035,1 @@\n-                int wowby = weekDef.weekOfWeekBasedYear.range().checkValidIntValue(\n+                int wowby = weekDef.weekOfWeekBasedYear.rangeRefinedBy(LocalDate.of(yowby, 7, 2)).checkValidIntValue(\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/WeekFields.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,0 +63,1 @@\n+import static org.testng.Assert.assertEquals;\n@@ -64,0 +65,1 @@\n+import static org.testng.Assert.assertThrows;\n@@ -88,1 +90,1 @@\n-import java.time.format.TextStyle;\n+import java.time.format.ResolverStyle;\n@@ -99,1 +101,1 @@\n- * @bug 8085887\n+ * @bug 8085887 8293146\n@@ -275,0 +277,58 @@\n+    private static final DateTimeFormatter STRICT_WEEK = DateTimeFormatter.ofPattern(\"YYYY-'W'ww-e\")\n+            .withResolverStyle(ResolverStyle.STRICT);\n+    private static final Locale EGYPT = Locale.forLanguageTag(\"en-EG\");\n+    @DataProvider(name = \"week53Dates\")\n+    Object[][] data_week53Dates() {\n+        return new Object[][] {\n+                \/\/ WeekFields[SUNDAY,1]\n+                {\"2012-W53-1\", Locale.US, null},\n+                {\"2013-W53-1\", Locale.US, null},\n+                {\"2014-W53-1\", Locale.US, null},\n+                {\"2015-W53-1\", Locale.US, null},\n+                {\"2016-W53-1\", Locale.US, LocalDate.of(2016, 12, 25)},\n+                {\"2017-W53-1\", Locale.US, null},\n+                {\"2018-W53-1\", Locale.US, null},\n+                {\"2019-W53-1\", Locale.US, null},\n+                {\"2020-W53-1\", Locale.US, null},\n+                {\"2021-W53-1\", Locale.US, null},\n+                {\"2022-W53-1\", Locale.US, LocalDate.of(2022, 12, 25)},\n+\n+                \/\/ WeekFields[MONDAY,4]\n+                {\"2012-W53-1\", Locale.UK, null},\n+                {\"2013-W53-1\", Locale.UK, null},\n+                {\"2014-W53-1\", Locale.UK, null},\n+                {\"2015-W53-1\", Locale.UK, LocalDate.of(2015, 12, 28)},\n+                {\"2016-W53-1\", Locale.UK, null},\n+                {\"2017-W53-1\", Locale.UK, null},\n+                {\"2018-W53-1\", Locale.UK, null},\n+                {\"2019-W53-1\", Locale.UK, null},\n+                {\"2020-W53-1\", Locale.UK, LocalDate.of(2020, 12, 28)},\n+                {\"2021-W53-1\", Locale.UK, null},\n+                {\"2022-W53-1\", Locale.UK, null},\n+\n+                \/\/ WeekFields[SATURDAY,1]\n+                {\"2012-W53-1\", EGYPT, null},\n+                {\"2013-W53-1\", EGYPT, null},\n+                {\"2014-W53-1\", EGYPT, null},\n+                {\"2015-W53-1\", EGYPT, null},\n+                {\"2016-W53-1\", EGYPT, LocalDate.of(2016, 12, 24)},\n+                {\"2017-W53-1\", EGYPT, null},\n+                {\"2018-W53-1\", EGYPT, null},\n+                {\"2019-W53-1\", EGYPT, null},\n+                {\"2020-W53-1\", EGYPT, null},\n+                {\"2021-W53-1\", EGYPT, LocalDate.of(2021, 12, 25)},\n+                {\"2022-W53-1\", EGYPT, null}\n+        };\n+    }\n+\n+    @Test (dataProvider = \"week53Dates\")\n+    public void test_week_53(String weekDate, Locale locale, LocalDate expected) {\n+        var f = STRICT_WEEK.withLocale(locale);\n+        if (expected != null) {\n+            assertEquals(LocalDate.parse(weekDate, f), expected);\n+        } else {\n+            assertThrows(DateTimeException.class, () -> {\n+                LocalDate.parse(weekDate, f);\n+            });\n+        }\n+    }\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/format\/TestDateTimeFormatter.java","additions":63,"deletions":3,"binary":false,"changes":66,"status":"modified"}]}