{"files":[{"patch":"@@ -183,1 +183,1 @@\n-     * {@code compute()} and the result passed to @{code setLocalResult()}\n+     * {@code compute()} and the result passed to {@code setLocalResult()}\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/AbstractTask.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-     * Implementation of @{code TerminalSink} that implements the find\n+     * Implementation of {@code TerminalSink} that implements the find\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/FindOps.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-         * Specialized @{code Node.Builder} for int elements\n+         * Specialized {@code Node.Builder} for int elements\n@@ -211,1 +211,1 @@\n-         * Specialized @{code Node.Builder} for long elements\n+         * Specialized {@code Node.Builder} for long elements\n@@ -219,1 +219,1 @@\n-         * Specialized @{code Node.Builder} for double elements\n+         * Specialized {@code Node.Builder} for double elements\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Node.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-     * Produces a variable size @{link Node.Builder}.\n+     * Produces a variable size {@link Node.Builder}.\n@@ -211,1 +211,1 @@\n-     * Produces a variable size @{link Node.Builder.OfInt}.\n+     * Produces a variable size {@link Node.Builder.OfInt}.\n@@ -248,1 +248,1 @@\n-     * Produces a variable size @{link Node.Builder.OfLong}.\n+     * Produces a variable size {@link Node.Builder.OfLong}.\n@@ -285,1 +285,1 @@\n-     * Produces a variable size @{link Node.Builder.OfDouble}.\n+     * Produces a variable size {@link Node.Builder.OfDouble}.\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Nodes.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -166,1 +166,1 @@\n-     * Constructs a @{link Node.Builder} compatible with the output shape of\n+     * Constructs a {@link Node.Builder} compatible with the output shape of\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/PipelineHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-         * Set mode. Create, changed, or delete a feedback mode. For @{code \/set\n+         * Set mode. Create, changed, or delete a feedback mode. For {@code \/set\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/Feedback.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-     * @param classPath @{link File.pathSeparator} separated directories\n+     * @param classPath {@link File.pathSeparator} separated directories\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/ClassFileFinder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- * This class accumulates test results. Test results can be checked with method @{code checkStatus}.\n+ * This class accumulates test results. Test results can be checked with method {@code checkStatus}.\n","filename":"test\/langtools\/tools\/javac\/classfiles\/attributes\/lib\/TestResult.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}