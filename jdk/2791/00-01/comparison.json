{"files":[{"patch":"@@ -186,0 +186,2 @@\n+\/\/ Return value\n+\/\/   -1 : bailout, 0: no spillcopy created, 1: create a new spillcopy\n@@ -230,1 +232,1 @@\n-        insert_proj( b, bindex, spill, maxlrg++ );\n+        insert_proj( b, bindex, spill, maxlrg );\n@@ -279,1 +281,1 @@\n-  insert_proj( b, bindex, spill, maxlrg++ );\n+  insert_proj( b, bindex, spill, maxlrg );\n@@ -283,1 +285,0 @@\n-  \/\/ return generated node count\n@@ -961,1 +962,1 @@\n-                delta = split_USE(MachSpillCopyNode::BasePointerToMem, def,b,n,inpidx,maxlrg,false,false,splits,slidx);\n+                int delta = split_USE(MachSpillCopyNode::BasePointerToMem, def,b,n,inpidx,maxlrg,false,false,splits,slidx);\n@@ -1042,1 +1043,1 @@\n-              delta = split_USE(MachSpillCopyNode::Bound, def,b,n,inpidx,maxlrg,dup,false, splits,slidx);\n+              int delta = split_USE(MachSpillCopyNode::Bound, def,b,n,inpidx,maxlrg,dup,false, splits,slidx);\n@@ -1055,1 +1056,1 @@\n-              delta = split_USE(MachSpillCopyNode::CallUse, def,b,n,inpidx,maxlrg,dup,false, splits,slidx);\n+              int delta = split_USE(MachSpillCopyNode::CallUse, def,b,n,inpidx,maxlrg,dup,false, splits,slidx);\n@@ -1092,1 +1093,1 @@\n-                  delta = split_USE(MachSpillCopyNode::RegToReg, def,b,n,inpidx,maxlrg,false,false, splits,slidx);\n+                  int delta = split_USE(MachSpillCopyNode::RegToReg, def,b,n,inpidx,maxlrg,false,false, splits,slidx);\n@@ -1107,0 +1108,1 @@\n+                  maxlrg++; insidx++;\n@@ -1108,1 +1110,1 @@\n-                  delta = split_USE(MachSpillCopyNode::RegToMem, spill,b,n,inpidx,maxlrg,false,false, splits,slidx);\n+                  int delta = split_USE(MachSpillCopyNode::RegToMem, spill,b,n,inpidx,maxlrg,false,false, splits,slidx);\n@@ -1114,1 +1116,1 @@\n-                  insidx += delta+1;  \/\/ Reset iterator to skip USE side splits\n+                  insidx += delta;  \/\/ Reset iterator to skip USE side splits\n@@ -1134,1 +1136,1 @@\n-                delta = split_USE(MachSpillCopyNode::RegToMem, def,b,n,inpidx,maxlrg,false,false, splits,slidx);\n+                int delta = split_USE(MachSpillCopyNode::RegToMem, def,b,n,inpidx,maxlrg,false,false, splits,slidx);\n@@ -1150,1 +1152,1 @@\n-                  delta = split_USE(MachSpillCopyNode::MemToReg, def,b,n,inpidx,maxlrg,true,true, splits,slidx);\n+                  int delta = split_USE(MachSpillCopyNode::MemToReg, def,b,n,inpidx,maxlrg,true,true, splits,slidx);\n@@ -1159,1 +1161,1 @@\n-                  delta = split_USE(MachSpillCopyNode::MemToReg, def,b,n,inpidx,maxlrg,true,false, splits,slidx);\n+                  int delta = split_USE(MachSpillCopyNode::MemToReg, def,b,n,inpidx,maxlrg,true,false, splits,slidx);\n@@ -1371,1 +1373,1 @@\n-        delta = split_USE(MachSpillCopyNode::PhiLocationDifferToInputLocation, def, b, phi, i, maxlrg, !u1, false, splits,slidx);\n+        int delta = split_USE(MachSpillCopyNode::PhiLocationDifferToInputLocation, def, b, phi, i, maxlrg, !u1, false, splits,slidx);\n","filename":"src\/hotspot\/share\/opto\/reg_split.cpp","additions":15,"deletions":13,"binary":false,"changes":28,"status":"modified"}]}