{"files":[{"patch":"@@ -196,1 +196,1 @@\n-  bool do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n+  void do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n@@ -204,1 +204,0 @@\n-    return true; \/\/ keep on iterating\n@@ -212,1 +211,1 @@\n-  iterate(&counter);\n+  iterate_all_live_classes(&counter);\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,1 +0,0 @@\n-\n@@ -212,2 +211,2 @@\n-  \/\/ Overrides template<class ITER> ResourceHashtable<>::iterate(ITER* iter)\n-  template<class ITER> void iterate(ITER* iter) const;\n+  template<class ITER> void iterate_all_live_classes(ITER* iter) const;\n+  template<typename Function> void iterate_all_live_classes(Function function) const;\n@@ -215,1 +214,6 @@\n-  \/\/ Overrides template<typename Function> ResourceHashtable<>::iterate(Function function)\n+private:\n+  \/\/ It's unsafe to iterate on classes whose loader is dead.\n+  \/\/ Declare these private and don't implement them. This forces users of\n+  \/\/ DumpTimeSharedClassTable to use the iterate_all_live_classes() methods\n+  \/\/ instead.\n+  template<class ITER> void iterate(ITER* iter) const;\n@@ -217,2 +221,0 @@\n-\n-  \/\/ Overrides template<typename Function> ResourceHashtable<>::iterate_all(Function function)\n@@ -220,3 +222,0 @@\n-\n-private:\n-  template<class ITER> class IterationHelper;\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.hpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-void DumpTimeSharedClassTable::iterate(Function function) const {\n+void DumpTimeSharedClassTable::iterate_all_live_classes(Function function) const {\n@@ -47,1 +47,1 @@\n-      bool result = function(k, info);\n+      function(k, info);\n@@ -49,1 +49,0 @@\n-      return result;\n@@ -55,1 +54,0 @@\n-      return true;\n@@ -58,1 +56,1 @@\n-  DumpTimeSharedClassTableBaseType::iterate(wrapper);\n+  DumpTimeSharedClassTableBaseType::iterate_all(wrapper);\n@@ -61,9 +59,0 @@\n-\/\/ same as above, but unconditionally iterate all entries\n-template<typename Function>\n-void DumpTimeSharedClassTable::iterate_all(Function function) const {\n-  auto wrapper = [&] (InstanceKlass* k, DumpTimeClassInfo& v) {\n-    function(k, v);\n-    return true;\n-  };\n-  iterate(wrapper);\n-}\n@@ -72,1 +61,1 @@\n-void DumpTimeSharedClassTable::iterate(ITER* iter) const {\n+void DumpTimeSharedClassTable::iterate_all_live_classes(ITER* iter) const {\n@@ -74,1 +63,1 @@\n-    return iter->do_entry(k, v);\n+    iter->do_entry(k, v);\n@@ -76,1 +65,1 @@\n-  iterate(function);\n+  iterate_all_live_classes(function);\n","filename":"src\/hotspot\/share\/cds\/dumpTimeClassInfo.inline.hpp","additions":6,"deletions":17,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -620,1 +620,1 @@\n-  bool do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n+  void do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n@@ -624,1 +624,0 @@\n-    return true;  \/\/ keep on iterating\n@@ -665,1 +664,1 @@\n-    _dumptime_table->iterate(&dup_checker);\n+    _dumptime_table->iterate_all_live_classes(&dup_checker);\n@@ -672,1 +671,1 @@\n-  _dumptime_table->iterate_all(check_for_exclusion);\n+  _dumptime_table->iterate_all_live_classes(check_for_exclusion);\n@@ -730,1 +729,1 @@\n-  _dumptime_table->iterate_all(do_klass);\n+  _dumptime_table->iterate_all_live_classes(do_klass);\n@@ -1151,1 +1150,1 @@\n-  bool do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n+  void do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n@@ -1156,1 +1155,0 @@\n-    return true; \/\/ keep on iterating\n@@ -1166,1 +1164,1 @@\n-  _dumptime_table->iterate(&est);\n+  _dumptime_table->iterate_all_live_classes(&est);\n@@ -1260,1 +1258,1 @@\n-  bool do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n+  void do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n@@ -1284,1 +1282,0 @@\n-    return true; \/\/ keep on iterating\n@@ -1304,1 +1301,1 @@\n-  _dumptime_table->iterate(&copy);\n+  _dumptime_table->iterate_all_live_classes(&copy);\n@@ -1537,1 +1534,1 @@\n-  bool do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n+  void do_entry(InstanceKlass* k, DumpTimeClassInfo& info) {\n@@ -1542,1 +1539,0 @@\n-    return true; \/\/ keep on iterating\n@@ -1575,1 +1571,1 @@\n-    _dumptime_table->iterate(&copy_classes);\n+    _dumptime_table->iterate_all_live_classes(&copy_classes);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":10,"deletions":14,"binary":false,"changes":24,"status":"modified"}]}