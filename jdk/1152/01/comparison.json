{"files":[{"patch":"@@ -33,0 +33,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/jniFastGetField_aarch64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/methodHandles_aarch64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/arm\/jniFastGetField_arm.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/arm\/methodHandles_arm.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/arm\/templateTable_arm.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/ppc\/jniFastGetField_ppc.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/ppc\/methodHandles_ppc.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/ppc\/templateTable_ppc_64.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/s390\/jniFastGetField_s390.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/s390\/methodHandles_s390.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_32.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/jniFastGetField_x86_64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/methodHandles_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"jvmtifiles\/jvmti.h\"\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"jvmtifiles\/jvmti.h\"\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"jvmtifiles\/jvmti.h\"\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"jvmtifiles\/jvmti.h\"\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/aot\/aotLoader.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -58,0 +58,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/defaultMethods.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"classfile\/javaThreadStatus.hpp\"\n@@ -1818,2 +1819,2 @@\n-                                         java_lang_Thread::ThreadStatus status) {\n-  java_thread->int_field_put(_thread_status_offset, status);\n+                                         JavaThreadStatus status) {\n+  java_thread->int_field_put(_thread_status_offset, static_cast<int>(status));\n@@ -1823,1 +1824,1 @@\n-java_lang_Thread::ThreadStatus java_lang_Thread::get_thread_status(oop java_thread) {\n+JavaThreadStatus java_lang_Thread::get_thread_status(oop java_thread) {\n@@ -1829,1 +1830,1 @@\n-  return (java_lang_Thread::ThreadStatus)java_thread->int_field(_thread_status_offset);\n+  return static_cast<JavaThreadStatus>(java_thread->int_field(_thread_status_offset));\n@@ -1842,1 +1843,1 @@\n-  ThreadStatus status = (java_lang_Thread::ThreadStatus)java_thread->int_field(_thread_status_offset);\n+  JavaThreadStatus status = static_cast<JavaThreadStatus>(java_thread->int_field(_thread_status_offset));\n@@ -1844,9 +1845,9 @@\n-    case NEW                      : return \"NEW\";\n-    case RUNNABLE                 : return \"RUNNABLE\";\n-    case SLEEPING                 : return \"TIMED_WAITING (sleeping)\";\n-    case IN_OBJECT_WAIT           : return \"WAITING (on object monitor)\";\n-    case IN_OBJECT_WAIT_TIMED     : return \"TIMED_WAITING (on object monitor)\";\n-    case PARKED                   : return \"WAITING (parking)\";\n-    case PARKED_TIMED             : return \"TIMED_WAITING (parking)\";\n-    case BLOCKED_ON_MONITOR_ENTER : return \"BLOCKED (on object monitor)\";\n-    case TERMINATED               : return \"TERMINATED\";\n+    case JavaThreadStatus::NEW                      : return \"NEW\";\n+    case JavaThreadStatus::RUNNABLE                 : return \"RUNNABLE\";\n+    case JavaThreadStatus::SLEEPING                 : return \"TIMED_WAITING (sleeping)\";\n+    case JavaThreadStatus::IN_OBJECT_WAIT           : return \"WAITING (on object monitor)\";\n+    case JavaThreadStatus::IN_OBJECT_WAIT_TIMED     : return \"TIMED_WAITING (on object monitor)\";\n+    case JavaThreadStatus::PARKED                   : return \"WAITING (parking)\";\n+    case JavaThreadStatus::PARKED_TIMED             : return \"TIMED_WAITING (parking)\";\n+    case JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER : return \"BLOCKED (on object monitor)\";\n+    case JavaThreadStatus::TERMINATED               : return \"TERMINATED\";\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"jvmtifiles\/jvmti.h\"\n@@ -424,31 +423,0 @@\n-  \/\/ Java Thread Status for JVMTI and M&M use.\n-  \/\/ This thread status info is saved in threadStatus field of\n-  \/\/ java.lang.Thread java class.\n-  enum ThreadStatus {\n-    NEW                      = 0,\n-    RUNNABLE                 = JVMTI_THREAD_STATE_ALIVE +          \/\/ runnable \/ running\n-                               JVMTI_THREAD_STATE_RUNNABLE,\n-    SLEEPING                 = JVMTI_THREAD_STATE_ALIVE +          \/\/ Thread.sleep()\n-                               JVMTI_THREAD_STATE_WAITING +\n-                               JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT +\n-                               JVMTI_THREAD_STATE_SLEEPING,\n-    IN_OBJECT_WAIT           = JVMTI_THREAD_STATE_ALIVE +          \/\/ Object.wait()\n-                               JVMTI_THREAD_STATE_WAITING +\n-                               JVMTI_THREAD_STATE_WAITING_INDEFINITELY +\n-                               JVMTI_THREAD_STATE_IN_OBJECT_WAIT,\n-    IN_OBJECT_WAIT_TIMED     = JVMTI_THREAD_STATE_ALIVE +          \/\/ Object.wait(long)\n-                               JVMTI_THREAD_STATE_WAITING +\n-                               JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT +\n-                               JVMTI_THREAD_STATE_IN_OBJECT_WAIT,\n-    PARKED                   = JVMTI_THREAD_STATE_ALIVE +          \/\/ LockSupport.park()\n-                               JVMTI_THREAD_STATE_WAITING +\n-                               JVMTI_THREAD_STATE_WAITING_INDEFINITELY +\n-                               JVMTI_THREAD_STATE_PARKED,\n-    PARKED_TIMED             = JVMTI_THREAD_STATE_ALIVE +          \/\/ LockSupport.park(long)\n-                               JVMTI_THREAD_STATE_WAITING +\n-                               JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT +\n-                               JVMTI_THREAD_STATE_PARKED,\n-    BLOCKED_ON_MONITOR_ENTER = JVMTI_THREAD_STATE_ALIVE +          \/\/ (re-)entering a synchronization block\n-                               JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER,\n-    TERMINATED               = JVMTI_THREAD_STATE_TERMINATED\n-  };\n@@ -456,1 +424,1 @@\n-  static void set_thread_status(oop java_thread_oop, ThreadStatus status);\n+  static void set_thread_status(oop java_thread_oop, JavaThreadStatus status);\n@@ -458,1 +426,1 @@\n-  static ThreadStatus get_thread_status(oop java_thread_oop);\n+  static JavaThreadStatus get_thread_status(oop java_thread_oop);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":2,"deletions":34,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_CLASSFILE_JAVATHREADSTATUS_HPP\n+#define SHARE_CLASSFILE_JAVATHREADSTATUS_HPP\n+\n+#include \"jvmtifiles\/jvmti.h\"\n+\n+\/\/ Java Thread Status for JVMTI and M&M use.\n+\/\/ This thread status info is saved in threadStatus field of\n+\/\/ java.lang.Thread java class.\n+enum class JavaThreadStatus : int {\n+  NEW                      = 0,\n+  RUNNABLE                 = JVMTI_THREAD_STATE_ALIVE +          \/\/ runnable \/ running\n+                             JVMTI_THREAD_STATE_RUNNABLE,\n+  SLEEPING                 = JVMTI_THREAD_STATE_ALIVE +          \/\/ Thread.sleep()\n+                             JVMTI_THREAD_STATE_WAITING +\n+                             JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT +\n+                             JVMTI_THREAD_STATE_SLEEPING,\n+  IN_OBJECT_WAIT           = JVMTI_THREAD_STATE_ALIVE +          \/\/ Object.wait()\n+                             JVMTI_THREAD_STATE_WAITING +\n+                             JVMTI_THREAD_STATE_WAITING_INDEFINITELY +\n+                             JVMTI_THREAD_STATE_IN_OBJECT_WAIT,\n+  IN_OBJECT_WAIT_TIMED     = JVMTI_THREAD_STATE_ALIVE +          \/\/ Object.wait(long)\n+                             JVMTI_THREAD_STATE_WAITING +\n+                             JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT +\n+                             JVMTI_THREAD_STATE_IN_OBJECT_WAIT,\n+  PARKED                   = JVMTI_THREAD_STATE_ALIVE +          \/\/ LockSupport.park()\n+                             JVMTI_THREAD_STATE_WAITING +\n+                             JVMTI_THREAD_STATE_WAITING_INDEFINITELY +\n+                             JVMTI_THREAD_STATE_PARKED,\n+  PARKED_TIMED             = JVMTI_THREAD_STATE_ALIVE +          \/\/ LockSupport.park(long)\n+                             JVMTI_THREAD_STATE_WAITING +\n+                             JVMTI_THREAD_STATE_WAITING_WITH_TIMEOUT +\n+                             JVMTI_THREAD_STATE_PARKED,\n+  BLOCKED_ON_MONITOR_ENTER = JVMTI_THREAD_STATE_ALIVE +          \/\/ (re-)entering a synchronization block\n+                             JVMTI_THREAD_STATE_BLOCKED_ON_MONITOR_ENTER,\n+  TERMINATED               = JVMTI_THREAD_STATE_TERMINATED\n+};\n+\n+#endif \/\/ SHARE_CLASSFILE_JAVATHREADSTATUS_HPP\n","filename":"src\/hotspot\/share\/classfile\/javaThreadStatus.hpp","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -60,0 +60,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/compilationPolicy.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/compiler\/tieredThresholdPolicy.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -37,0 +37,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/interpreter\/templateInterpreter.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"jfrfiles\/jfrEventClasses.hpp\"\n@@ -195,1 +196,1 @@\n-      ev->set_state(java_lang_Thread::get_thread_status(_thread_oop));\n+      ev->set_state(static_cast<u8>(java_lang_Thread::get_thread_status(_thread_oop)));\n@@ -225,1 +226,1 @@\n-  ev->set_state(java_lang_Thread::get_thread_status(thread_oop));\n+  ev->set_state(static_cast<u8>(java_lang_Thread::get_thread_status(thread_oop)));\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrThreadSampler.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/jvmci\/jvmciEnv.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -41,0 +41,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -53,0 +53,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/oops\/constantPool.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -48,0 +48,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/prims\/forte.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"classfile\/javaThreadStatus.hpp\"\n@@ -4017,1 +4018,1 @@\n-              java_lang_Thread::RUNNABLE);\n+              JavaThreadStatus::RUNNABLE);\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/prims\/jvmtiThreadState.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/prims\/nativeLookup.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -52,0 +52,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/javaCalls.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -38,0 +38,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"jvmtifiles\/jvmti.h\"\n@@ -55,0 +54,2 @@\n+struct jvmtiTimerInfo;\n+\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,0 +32,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/stubCodeGenerator.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"classfile\/javaThreadStatus.hpp\"\n@@ -502,1 +503,1 @@\n-                                          java_lang_Thread::RUNNABLE);\n+                                          JavaThreadStatus::RUNNABLE);\n@@ -890,1 +891,1 @@\n-                                      java_lang_Thread::RUNNABLE);\n+                                      JavaThreadStatus::RUNNABLE);\n@@ -1821,1 +1822,1 @@\n-  java_lang_Thread::set_thread_status(threadObj(), java_lang_Thread::TERMINATED);\n+  java_lang_Thread::set_thread_status(threadObj(), JavaThreadStatus::TERMINATED);\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#include \"prims\/jvmtiExport.hpp\"\n@@ -66,0 +65,1 @@\n+class JvmtiSampledObjectAllocEventCollector;\n@@ -67,0 +67,1 @@\n+class JvmtiVMObjectAllocEventCollector;\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/threadHeapSampler.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"classfile\/javaThreadStatus.hpp\"\n@@ -39,0 +40,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n@@ -193,1 +195,1 @@\n-                                java_lang_Thread::BLOCKED_ON_MONITOR_ENTER) {\n+                                JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER) {\n","filename":"src\/hotspot\/share\/runtime\/vframe.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"classfile\/javaThreadStatus.hpp\"\n@@ -2334,1 +2335,1 @@\n-  \/* java_lang_Thread::ThreadStatus enum *\/                               \\\n+  \/* JavaThreadStatus enum               *\/                               \\\n@@ -2337,9 +2338,9 @@\n-  declare_constant(java_lang_Thread::NEW)                                 \\\n-  declare_constant(java_lang_Thread::RUNNABLE)                            \\\n-  declare_constant(java_lang_Thread::SLEEPING)                            \\\n-  declare_constant(java_lang_Thread::IN_OBJECT_WAIT)                      \\\n-  declare_constant(java_lang_Thread::IN_OBJECT_WAIT_TIMED)                \\\n-  declare_constant(java_lang_Thread::PARKED)                              \\\n-  declare_constant(java_lang_Thread::PARKED_TIMED)                        \\\n-  declare_constant(java_lang_Thread::BLOCKED_ON_MONITOR_ENTER)            \\\n-  declare_constant(java_lang_Thread::TERMINATED)                          \\\n+  declare_constant(JavaThreadStatus::NEW)                                 \\\n+  declare_constant(JavaThreadStatus::RUNNABLE)                            \\\n+  declare_constant(JavaThreadStatus::SLEEPING)                            \\\n+  declare_constant(JavaThreadStatus::IN_OBJECT_WAIT)                      \\\n+  declare_constant(JavaThreadStatus::IN_OBJECT_WAIT_TIMED)                \\\n+  declare_constant(JavaThreadStatus::PARKED)                              \\\n+  declare_constant(JavaThreadStatus::PARKED_TIMED)                        \\\n+  declare_constant(JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER)            \\\n+  declare_constant(JavaThreadStatus::TERMINATED)                          \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-  int thread_status = snapshot->thread_status();\n+  int thread_status = static_cast<int>(snapshot->thread_status());\n","filename":"src\/hotspot\/share\/services\/management.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -885,3 +885,3 @@\n-  if (_thread_status == java_lang_Thread::BLOCKED_ON_MONITOR_ENTER ||\n-      _thread_status == java_lang_Thread::IN_OBJECT_WAIT ||\n-      _thread_status == java_lang_Thread::IN_OBJECT_WAIT_TIMED) {\n+  if (_thread_status == JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER ||\n+      _thread_status == JavaThreadStatus::IN_OBJECT_WAIT ||\n+      _thread_status == JavaThreadStatus::IN_OBJECT_WAIT_TIMED) {\n@@ -891,1 +891,1 @@\n-      _thread_status = java_lang_Thread::RUNNABLE;\n+      _thread_status = JavaThreadStatus::RUNNABLE;\n@@ -895,1 +895,1 @@\n-      if ((owner == NULL && _thread_status == java_lang_Thread::BLOCKED_ON_MONITOR_ENTER)\n+      if ((owner == NULL && _thread_status == JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER)\n@@ -903,1 +903,1 @@\n-        _thread_status = java_lang_Thread::RUNNABLE;\n+        _thread_status = JavaThreadStatus::RUNNABLE;\n@@ -912,1 +912,1 @@\n-  if (_thread_status == java_lang_Thread::PARKED || _thread_status == java_lang_Thread::PARKED_TIMED) {\n+  if (_thread_status == JavaThreadStatus::PARKED || _thread_status == JavaThreadStatus::PARKED_TIMED) {\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+#include \"classfile\/javaThreadStatus.hpp\"\n@@ -197,1 +198,1 @@\n-  java_lang_Thread::ThreadStatus _thread_status;\n+  JavaThreadStatus _thread_status;\n@@ -226,1 +227,1 @@\n-  java_lang_Thread::ThreadStatus thread_status() { return _thread_status; }\n+  JavaThreadStatus thread_status() { return _thread_status; }\n@@ -421,1 +422,1 @@\n-  java_lang_Thread::ThreadStatus _old_state;\n+  JavaThreadStatus _old_state;\n@@ -435,1 +436,1 @@\n-                                java_lang_Thread::ThreadStatus state) {\n+                                JavaThreadStatus state) {\n@@ -439,1 +440,1 @@\n-  void set_thread_status(java_lang_Thread::ThreadStatus state) {\n+  void set_thread_status(JavaThreadStatus state) {\n@@ -446,1 +447,1 @@\n-                          java_lang_Thread::ThreadStatus state) : _old_state(java_lang_Thread::NEW) {\n+                          JavaThreadStatus state) : _old_state(JavaThreadStatus::NEW) {\n@@ -451,1 +452,1 @@\n-  JavaThreadStatusChanger(JavaThread* java_thread) : _old_state(java_lang_Thread::NEW) {\n+  JavaThreadStatusChanger(JavaThread* java_thread) : _old_state(JavaThreadStatus::NEW) {\n@@ -477,1 +478,1 @@\n-                            timed ? java_lang_Thread::IN_OBJECT_WAIT_TIMED : java_lang_Thread::IN_OBJECT_WAIT) {\n+                            timed ? JavaThreadStatus::IN_OBJECT_WAIT_TIMED : JavaThreadStatus::IN_OBJECT_WAIT) {\n@@ -506,1 +507,1 @@\n-                            timed ? java_lang_Thread::PARKED_TIMED : java_lang_Thread::PARKED) {\n+                            timed ? JavaThreadStatus::PARKED_TIMED : JavaThreadStatus::PARKED) {\n@@ -533,1 +534,1 @@\n-    set_thread_status(java_thread, java_lang_Thread::BLOCKED_ON_MONITOR_ENTER);\n+    set_thread_status(java_thread, JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER);\n@@ -559,1 +560,1 @@\n-    set_thread_status(java_thread, java_lang_Thread::RUNNABLE);\n+    set_thread_status(java_thread, JavaThreadStatus::RUNNABLE);\n@@ -590,1 +591,1 @@\n-    JavaThreadStatusChanger(java_thread, java_lang_Thread::SLEEPING) {\n+    JavaThreadStatusChanger(java_thread, JavaThreadStatus::SLEEPING) {\n","filename":"src\/hotspot\/share\/services\/threadService.hpp","additions":14,"deletions":13,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+enum class JavaThreadStatus : int;\n","filename":"src\/hotspot\/share\/utilities\/vmEnums.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-  \/\/ possible values of java_lang_Thread::ThreadStatus\n+  \/\/ possible values of JavaThreadStatus\n@@ -237,10 +237,10 @@\n-      THREAD_STATUS_NEW = db.lookupIntConstant(\"java_lang_Thread::NEW\").intValue();\n-\n-      THREAD_STATUS_RUNNABLE = db.lookupIntConstant(\"java_lang_Thread::RUNNABLE\").intValue();\n-      THREAD_STATUS_SLEEPING = db.lookupIntConstant(\"java_lang_Thread::SLEEPING\").intValue();\n-      THREAD_STATUS_IN_OBJECT_WAIT = db.lookupIntConstant(\"java_lang_Thread::IN_OBJECT_WAIT\").intValue();\n-      THREAD_STATUS_IN_OBJECT_WAIT_TIMED = db.lookupIntConstant(\"java_lang_Thread::IN_OBJECT_WAIT_TIMED\").intValue();\n-      THREAD_STATUS_PARKED = db.lookupIntConstant(\"java_lang_Thread::PARKED\").intValue();\n-      THREAD_STATUS_PARKED_TIMED = db.lookupIntConstant(\"java_lang_Thread::PARKED_TIMED\").intValue();\n-      THREAD_STATUS_BLOCKED_ON_MONITOR_ENTER = db.lookupIntConstant(\"java_lang_Thread::BLOCKED_ON_MONITOR_ENTER\").intValue();\n-      THREAD_STATUS_TERMINATED = db.lookupIntConstant(\"java_lang_Thread::TERMINATED\").intValue();\n+      THREAD_STATUS_NEW = db.lookupIntConstant(\"JavaThreadStatus::NEW\").intValue();\n+\n+      THREAD_STATUS_RUNNABLE = db.lookupIntConstant(\"JavaThreadStatus::RUNNABLE\").intValue();\n+      THREAD_STATUS_SLEEPING = db.lookupIntConstant(\"JavaThreadStatus::SLEEPING\").intValue();\n+      THREAD_STATUS_IN_OBJECT_WAIT = db.lookupIntConstant(\"JavaThreadStatus::IN_OBJECT_WAIT\").intValue();\n+      THREAD_STATUS_IN_OBJECT_WAIT_TIMED = db.lookupIntConstant(\"JavaThreadStatus::IN_OBJECT_WAIT_TIMED\").intValue();\n+      THREAD_STATUS_PARKED = db.lookupIntConstant(\"JavaThreadStatus::PARKED\").intValue();\n+      THREAD_STATUS_PARKED_TIMED = db.lookupIntConstant(\"JavaThreadStatus::PARKED_TIMED\").intValue();\n+      THREAD_STATUS_BLOCKED_ON_MONITOR_ENTER = db.lookupIntConstant(\"JavaThreadStatus::BLOCKED_ON_MONITOR_ENTER\").intValue();\n+      THREAD_STATUS_TERMINATED = db.lookupIntConstant(\"JavaThreadStatus::TERMINATED\").intValue();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/OopUtilities.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}