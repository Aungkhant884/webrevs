{"files":[{"patch":"@@ -79,0 +79,1 @@\n+import java.time.temporal.IsoFields;\n@@ -773,0 +774,24 @@\n+\n+    \/**\n+     * Checks if this chronology is ISO based.\n+     * <p>\n+     * An ISO based chronology has the same basic structure of days and\n+     * months as the ISO chronology, with month lengths generally aligned\n+     * with those in the ISO January to December definitions.\n+     * For example, the Minguo, ThaiBuddhist and Japanese chronologies.\n+     *\n+     * @implSpec\n+     * The default implementation returns {@code false}.\n+     *\n+     * @return true if the chronology is ISO based\n+     * @see IsoChronology\n+     * @see JapaneseChronology\n+     * @see MinguoChronology\n+     * @see ThaiBuddhistChronology\n+     * @see IsoFields\n+     * @since 19\n+     *\/\n+    default boolean isIsoBased() {\n+        return false;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/Chronology.java","additions":25,"deletions":0,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -1,47 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package java.time.chrono;\n-\n-import java.time.temporal.IsoFields;\n-\n-\/**\n- * An interface that confirms chronologies implementing this interface\n- * are ISO based.\n- * <p>\n- * An ISO based chronology has the same basic structure of days and\n- * months as the ISO chronology, with month lengths generally aligned\n- * with those in the ISO January to December definitions. For example,\n- * the Minguo, ThaiBuddhist and Japanese chronologies. Such\n- * chronology supports fields defined in {@code IsoFields}\n- *\n- * @see IsoChronology\n- * @see JapaneseChronology\n- * @see MinguoChronology\n- * @see ThaiBuddhistChronology\n- * @see IsoFields\n- * @since 19\n- *\/\n-public interface IsoBasedChronology {\n-}\n\\ No newline at end of file\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/IsoBasedChronology.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"deleted"},{"patch":"@@ -126,1 +126,1 @@\n-public final class IsoChronology extends AbstractChronology implements Serializable, IsoBasedChronology {\n+public final class IsoChronology extends AbstractChronology implements Serializable {\n@@ -680,0 +680,13 @@\n+    \/\/-----------------------------------------------------------------------\n+    \/**\n+     * {@code IsoChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * @implSpec The implementation always returns {@code true}.\n+     * @return {@code true}\n+     * @since 19\n+     *\/\n+    @Override\n+    public boolean isIsoBased() {\n+        return true;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/IsoChronology.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-public final class JapaneseChronology extends AbstractChronology implements Serializable, IsoBasedChronology {\n+public final class JapaneseChronology extends AbstractChronology implements Serializable {\n@@ -507,0 +507,13 @@\n+    \/\/-----------------------------------------------------------------------\n+    \/**\n+     * {@code JapaneseChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * @implSpec The implementation always returns {@code true}.\n+     * @return {@code true}\n+     * @since 19\n+     *\/\n+    @Override\n+    public boolean isIsoBased() {\n+        return true;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/JapaneseChronology.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-public final class MinguoChronology extends AbstractChronology implements Serializable, IsoBasedChronology {\n+public final class MinguoChronology extends AbstractChronology implements Serializable {\n@@ -338,0 +338,13 @@\n+    \/\/-----------------------------------------------------------------------\n+    \/**\n+     * {@code MinguoChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * @implSpec The implementation always returns {@code true}.\n+     * @return {@code true}\n+     * @since 19\n+     *\/\n+    @Override\n+    public boolean isIsoBased() {\n+        return true;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/MinguoChronology.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-public final class ThaiBuddhistChronology extends AbstractChronology implements Serializable, IsoBasedChronology {\n+public final class ThaiBuddhistChronology extends AbstractChronology implements Serializable {\n@@ -338,0 +338,13 @@\n+    \/\/-----------------------------------------------------------------------\n+    \/**\n+     * {@code ThaiBuddhistChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * @implSpec The implementation always returns {@code true}.\n+     * @return {@code true}\n+     * @since 19\n+     *\/\n+    @Override\n+    public boolean isIsoBased() {\n+        return true;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ThaiBuddhistChronology.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -77,1 +77,0 @@\n-import java.time.chrono.IsoBasedChronology;\n@@ -94,2 +93,0 @@\n- * Other non-ISO calendar systems may provide these fields by implementing\n- * {@link java.time.chrono.IsoBasedChronology} interface.\n@@ -162,1 +159,0 @@\n- * @see java.time.chrono.IsoBasedChronology\n@@ -743,1 +739,1 @@\n-        return Chronology.from(temporal) instanceof IsoBasedChronology;\n+        return Chronology.from(temporal).isIsoBased();\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/IsoFields.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-import java.time.chrono.IsoBasedChronology;\n@@ -424,2 +423,2 @@\n-    @DataProvider(name = \"data_IsoBasedChronology\")\n-    Object[][]  data_IsoBasedChronology() {\n+    @DataProvider\n+    Object[][]  data_isIsoBased() {\n@@ -436,1 +435,1 @@\n-    \/\/ IsoBasedChronology\n+    \/\/ isIsoBased()\n@@ -438,3 +437,3 @@\n-    @Test(dataProvider = \"data_IsoBasedChronology\")\n-    public void test_IsoBasedChronology(Chronology chrono, boolean expected) {\n-        assertEquals(chrono instanceof IsoBasedChronology, expected);\n+    @Test(dataProvider = \"data_isIsoBased\")\n+    public void test_isIsoBased(Chronology chrono, boolean expected) {\n+        assertEquals(chrono.isIsoBased(), expected);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKChronology.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -67,1 +67,0 @@\n-import java.time.chrono.IsoBasedChronology;\n@@ -84,1 +83,1 @@\n-        assertEquals(chrono instanceof IsoBasedChronology, false);\n+        assertEquals(chrono.isIsoBased(), false);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKTestServiceLoader.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-import java.time.chrono.IsoBasedChronology;\n@@ -89,1 +88,1 @@\n-        assertEquals(coptic instanceof IsoBasedChronology, false);\n+        assertEquals(coptic.isIsoBased(), false);\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/chrono\/TestServiceLoader.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}