{"files":[{"patch":"@@ -775,1 +775,1 @@\n-     * Checks if this chronology supports ISO based fields.\n+     * Checks if this chronology is ISO based.\n@@ -777,4 +777,3 @@\n-     * The chronology that supports ISO based fields has the same basic\n-     * structure of days and months as the ISO chronology, with month\n-     * lengths generally aligned with those in the ISO January to December\n-     * definitions.\n+     * An ISO based chronology has the same basic structure of days and\n+     * months as the ISO chronology, with month lengths generally aligned\n+     * with those in the ISO January to December definitions.\n@@ -786,1 +785,1 @@\n-     * @return true if the chronology supports ISO based fields\n+     * @return true if the chronology is ISO based\n@@ -794,1 +793,1 @@\n-    default boolean supportsIsoFields() {\n+    default boolean isIsoBased() {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/Chronology.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -682,2 +682,2 @@\n-     * {@code IsoChronology} supports ISO based fields, such as\n-     * {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * {@code IsoChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n@@ -689,1 +689,1 @@\n-    public boolean supportsIsoFields() {\n+    public boolean isIsoBased() {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/IsoChronology.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -509,2 +509,2 @@\n-     * {@code JapaneseChronology} supports ISO based fields, such as\n-     * {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * {@code JapaneseChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n@@ -516,1 +516,1 @@\n-    public boolean supportsIsoFields() {\n+    public boolean isIsoBased() {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/JapaneseChronology.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -340,2 +340,2 @@\n-     * {@code MinguoChronology} supports ISO based fields, such as\n-     * {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * {@code MinguoChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n@@ -347,1 +347,1 @@\n-    public boolean supportsIsoFields() {\n+    public boolean isIsoBased() {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/MinguoChronology.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -340,2 +340,2 @@\n-     * {@code ThaiBuddhistChronology} supports ISO based fields, such as\n-     * {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n+     * {@code ThaiBuddhistChronology} is an ISO based chronology, which supports fields,\n+     * such as {@code DAY_OF_QUARTER} and {@code QUARTER_OF_YEAR}.\n@@ -347,1 +347,1 @@\n-    public boolean supportsIsoFields() {\n+    public boolean isIsoBased() {\n","filename":"src\/java.base\/share\/classes\/java\/time\/chrono\/ThaiBuddhistChronology.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -312,1 +312,1 @@\n-                        temporal.isSupported(YEAR) && supportsIsoFields(temporal);\n+                        temporal.isSupported(YEAR) && isIsoBased(temporal);\n@@ -358,1 +358,1 @@\n-                ensureIsoLike(partialTemporal);\n+                ensureIsoBased(partialTemporal);\n@@ -400,1 +400,1 @@\n-                return temporal.isSupported(MONTH_OF_YEAR) && supportsIsoFields(temporal);\n+                return temporal.isSupported(MONTH_OF_YEAR) && isIsoBased(temporal);\n@@ -455,1 +455,1 @@\n-                return temporal.isSupported(EPOCH_DAY) && supportsIsoFields(temporal);\n+                return temporal.isSupported(EPOCH_DAY) && isIsoBased(temporal);\n@@ -488,1 +488,1 @@\n-                ensureIsoLike(partialTemporal);\n+                ensureIsoBased(partialTemporal);\n@@ -536,1 +536,1 @@\n-                return temporal.isSupported(EPOCH_DAY) && supportsIsoFields(temporal);\n+                return temporal.isSupported(EPOCH_DAY) && isIsoBased(temporal);\n@@ -597,2 +597,2 @@\n-        private static void ensureIsoLike(TemporalAccessor temporal) {\n-            if (!supportsIsoFields(temporal)) {\n+        private static void ensureIsoBased(TemporalAccessor temporal) {\n+            if (!isIsoBased(temporal)) {\n@@ -704,1 +704,1 @@\n-            return temporal.isSupported(EPOCH_DAY) && supportsIsoFields(temporal);\n+            return temporal.isSupported(EPOCH_DAY) && isIsoBased(temporal);\n@@ -738,2 +738,2 @@\n-    static boolean supportsIsoFields(TemporalAccessor temporal) {\n-        return Chronology.from(temporal).supportsIsoFields();\n+    static boolean isIsoBased(TemporalAccessor temporal) {\n+        return Chronology.from(temporal).isIsoBased();\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/IsoFields.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -427,2 +427,2 @@\n-    @DataProvider(name = \"data_supportsIsoFields\")\n-    Object[][]  data_supportsIsoFields() {\n+    @DataProvider(name = \"data_isIsoBased\")\n+    Object[][]  data_isIsoBased() {\n@@ -439,1 +439,1 @@\n-    \/\/ supportsIsoFields()\n+    \/\/ isIsoBased()\n@@ -441,3 +441,3 @@\n-    @Test(dataProvider = \"data_supportsIsoFields\")\n-    public void test_supportsIsoFields(Chronology chrono, boolean expected) {\n-        assertEquals(chrono.supportsIsoFields(), expected);\n+    @Test(dataProvider = \"data_isIsoBased\")\n+    public void test_isIsoBased(Chronology chrono, boolean expected) {\n+        assertEquals(chrono.isIsoBased(), expected);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKChronology.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-        assertEquals(chrono.supportsIsoFields(), false);\n+        assertEquals(chrono.isIsoBased(), false);\n","filename":"test\/jdk\/java\/time\/tck\/java\/time\/chrono\/TCKTestServiceLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-        assertEquals(coptic.supportsIsoFields(), false);\n+        assertEquals(coptic.isIsoBased(), false);\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/chrono\/TestServiceLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}