{"files":[{"patch":"@@ -155,1 +155,1 @@\n-                                                    \/*strict*\/ false,\n+                                                    \/*strict*\/ descriptor.isAutomatic(),\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModulePatcher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,175 @@\n+\/*\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @library \/test\/lib\n+ * @modules jdk.compiler\n+ * @build PatchTest\n+ *        jdk.test.lib.compiler.CompilerUtils\n+ *        jdk.test.lib.util.JarUtils\n+ *        jdk.test.lib.process.ProcessTools\n+ * @run testng PatchTest\n+ * @bug 8259395\n+ * @summary Runs tests that make use of automatic modules\n+ *\/\n+\n+import java.io.File;\n+import java.util.List;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import jdk.test.lib.compiler.CompilerUtils;\n+import jdk.test.lib.util.JarUtils;\n+import static jdk.test.lib.process.ProcessTools.*;\n+\n+import org.testng.annotations.Test;\n+import org.testng.annotations.BeforeClass;\n+import static org.testng.Assert.*;\n+\n+public class PatchTest {\n+\n+    private static final String APP_NAME = \"myapp\";\n+\n+    private static final String MODULE_NAME = \"somelib\";\n+\n+    private static final String PATCH1_NAME = \"patch1\";\n+    private static final String PATCH2_NAME = \"patch2\";\n+\n+    private static final String APP_MAIN = \"myapp.Main\";\n+    private static final String PATCH1_MAIN = \"somelib.test.TestMain\";\n+    private static final String PATCH2_MAIN = \"somelib.Dummy\";\n+\n+    private static final String TEST_SRC = System.getProperty(\"test.src\");\n+\n+    private static final Path APP_SRC = Path.of(TEST_SRC, APP_NAME);\n+    private static final Path APP_CLASSES = Path.of(\"classes\", APP_NAME);\n+    private static final Path SOMELIB_SRC = Path.of(TEST_SRC, MODULE_NAME);\n+    private static final Path SOMELIB_PATCH1_SRC = Path.of(TEST_SRC, PATCH1_NAME);\n+    private static final Path SOMELIB_PATCH2_SRC = Path.of(TEST_SRC, PATCH2_NAME);\n+    private static final Path SOMELIB_CLASSES = Path.of(\"classes\", MODULE_NAME);\n+    private static final Path SOMELIB_PATCH1_CLASSES = Path.of(\"classes\", PATCH1_NAME);\n+    private static final Path SOMELIB_PATCH2_CLASSES = Path.of(\"classes\", PATCH2_NAME);\n+    private static final Path SOMELIB_JAR = Path.of(\"mods\", MODULE_NAME + \"-0.19.jar\");\n+\n+    private static final String MODULE_PATH = String.join(File.pathSeparator, SOMELIB_JAR.toString(), APP_CLASSES.toString());\n+\n+    \/**\n+     * Test using --patch-module with main class in a new package in the patch\n+     *\n+     * The consists of 2 modules:\n+     *\n+     * somelib - dummy automatic module.\n+     * myapp - explicit module, uses somelib\n+     *\n+     * And two patches:\n+     *\n+     * patch1 - adds an additional package.\n+     * patch2 - only replaces existing classes.\n+     *\n+     *\/\n+    @BeforeClass\n+    public void compile() throws Exception {\n+        boolean compiled;\n+\n+        \/\/ create mods\/somelib-0.19.jar\n+\n+        compiled = CompilerUtils.compile(SOMELIB_SRC, SOMELIB_CLASSES);\n+        assertTrue(compiled);\n+\n+        JarUtils.createJarFile(SOMELIB_JAR, SOMELIB_CLASSES);\n+\n+\n+        \/\/ compile patch 1\n+        compiled = CompilerUtils.compile(SOMELIB_PATCH1_SRC, SOMELIB_PATCH1_CLASSES,\n+                        \"--module-path\", SOMELIB_JAR.toString(),\n+                        \"--add-modules\", MODULE_NAME,\n+                        \"--patch-module\", MODULE_NAME + \"=\" + SOMELIB_PATCH1_SRC);\n+        assertTrue(compiled);\n+\n+        \/\/ compile patch 2\n+        compiled = CompilerUtils.compile(SOMELIB_PATCH2_SRC, SOMELIB_PATCH2_CLASSES,\n+                        \"--module-path\", SOMELIB_JAR.toString(),\n+                        \"--add-modules\", MODULE_NAME,\n+                        \"--patch-module\", MODULE_NAME + \"=\" + SOMELIB_PATCH2_SRC);\n+        assertTrue(compiled);\n+\n+        \/\/ compile app\n+        compiled = CompilerUtils.compile(APP_SRC, APP_CLASSES,\n+                        \"--module-path\", SOMELIB_JAR.toString());\n+        assertTrue(compiled);\n+    }\n+\n+    @Test\n+    public void modulePathExtend() throws Exception {\n+        int exitValue\n+            = executeTestJava(\"--module-path\", MODULE_PATH,\n+                              \"--patch-module\", MODULE_NAME + \"=\" + SOMELIB_PATCH1_CLASSES,\n+                              \"-m\", APP_NAME + \"\/\" + APP_MAIN, \"patch1\")\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .getExitValue();\n+\n+        assertTrue(exitValue == 0);\n+    }\n+\n+    @Test\n+    public void modulePathAugment() throws Exception {\n+        int exitValue\n+            = executeTestJava(\"--module-path\", MODULE_PATH,\n+                              \"--patch-module\", MODULE_NAME + \"=\" + SOMELIB_PATCH2_CLASSES,\n+                              \"-m\", APP_NAME + \"\/\" + APP_MAIN, \"patch2\")\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .getExitValue();\n+\n+        assertTrue(exitValue == 0);\n+    }\n+\n+    @Test\n+    public void rootModuleExtend() throws Exception {\n+        int exitValue\n+            = executeTestJava(\"--module-path\", SOMELIB_JAR.toString(),\n+                              \"--patch-module\", MODULE_NAME + \"=\" + SOMELIB_PATCH1_CLASSES,\n+                              \"-m\", MODULE_NAME + \"\/\" + PATCH1_MAIN)\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .getExitValue();\n+\n+        assertTrue(exitValue == 0);\n+    }\n+\n+    @Test\n+    public void rootModuleAugment() throws Exception {\n+        int exitValue\n+            = executeTestJava(\"--module-path\", SOMELIB_JAR.toString(),\n+                              \"--patch-module\", MODULE_NAME + \"=\" + SOMELIB_PATCH2_CLASSES,\n+                              \"-m\", MODULE_NAME + \"\/\" + PATCH2_MAIN)\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .getExitValue();\n+\n+        assertTrue(exitValue == 0);\n+    }\n+\n+}\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/PatchTest.java","additions":175,"deletions":0,"binary":false,"changes":175,"status":"added"},{"patch":"@@ -0,0 +1,3 @@\n+module myapp {\n+    requires somelib;\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/myapp\/module-info.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package myapp;\n+\n+import somelib.Invariants;\n+\n+\/**\n+ * This test is modelled to use --patch-module to gain access to non-exported internals.\n+ *\/\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        Invariants.test(args[0]);\n+    }\n+}\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/myapp\/myapp\/Main.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package somelib;\n+\n+\/\/ This class will be patched\n+public class PatchInfo {\n+\n+    public static String patchName() {\n+        return \"patch1\";\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/patch1\/somelib\/PatchInfo.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package somelib.test;\n+\n+import somelib.Invariants;\n+\n+\/**\n+ * This test is modelled to use --patch-module to gain access to non-exported internals.\n+ *\/\n+\n+public class TestMain {\n+    public static void main(String[] args) {\n+        Invariants.test(\"patch1\");\n+    }\n+}\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/patch1\/somelib\/test\/TestMain.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package somelib;\n+\n+public class Dummy {\n+    public static boolean returnTrue() {\n+        return true;\n+    }\n+\n+    public static void main(String[] args) {\n+        Invariants.test(\"patch2\");\n+    }\n+}\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/patch2\/somelib\/Dummy.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package somelib;\n+\n+\/\/ This class will be patched\n+public class PatchInfo {\n+\n+    public static String patchName() {\n+        return \"patch2\";\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/patch2\/somelib\/PatchInfo.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package somelib;\n+\n+public class Dummy {\n+    public static boolean returnTrue() {\n+        return true;\n+    }\n+}\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/somelib\/somelib\/Dummy.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -0,0 +1,45 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package somelib;\n+\n+import java.lang.module.ModuleDescriptor;\n+\n+public class Invariants {\n+    public static void test(String expectPatch) {\n+        ModuleDescriptor ownDesc = Invariants.class.getModule().getDescriptor();\n+\n+        assertThat(ownDesc.isAutomatic(), \"Expected to be executed in an automatic module\");\n+        assertThat(ownDesc.requires().stream().anyMatch(\n+                r -> r.name().equals(\"java.base\") && r.modifiers().contains(ModuleDescriptor.Requires.Modifier.MANDATED)),\n+                \"requires mandated java.base\");\n+        assertThat(Dummy.returnTrue(), \"Dummy.returnTrue returns true\");\n+        assertThat(expectPatch.equals(PatchInfo.patchName()), \"Module is patched with the right patch\");\n+    }\n+\n+    private static void assertThat(boolean expected, String message) {\n+        if (!expected) {\n+            throw new AssertionError(message);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/somelib\/somelib\/Invariants.java","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package somelib;\n+\n+\/\/ This class will be patched\n+public class PatchInfo {\n+\n+    public static String patchName() {\n+        return \"original\";\n+    }\n+\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/tools\/launcher\/modules\/patch\/automatic\/somelib\/somelib\/PatchInfo.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"}]}