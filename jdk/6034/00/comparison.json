{"files":[{"patch":"@@ -100,1 +100,1 @@\n-  void add(G1SegmentedArrayBuffer<flag>& elem) { _list.prepend(elem); }\n+  void add(G1SegmentedArrayBuffer<flag>& elem);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArray.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,2 +64,13 @@\n-  Atomic::add(&_num_buffers, num, memory_order_relaxed);\n-  Atomic::add(&_mem_size, mem_size, memory_order_relaxed);\n+  size_t buffer = Atomic::add(&_num_buffers, num, memory_order_relaxed);\n+  size_t mem = Atomic::add(&_mem_size, mem_size, memory_order_relaxed);\n+  assert(buffer >= num, \"Must be\");\n+  assert(mem >= mem_size, \"Must be\");\n+}\n+\n+template<MEMFLAGS flag>\n+void G1SegmentedArrayBufferList<flag>::add(G1SegmentedArrayBuffer<flag>& elem) {\n+  _list.prepend(elem);\n+  size_t num_buffers = Atomic::add(&_num_buffers, (size_t)1, memory_order_relaxed);\n+  size_t mem_size = Atomic::add(&_mem_size, elem.elem_size(), memory_order_relaxed);\n+  assert(num_buffers >= (size_t)1, \"Must be\");\n+  assert(mem_size >= elem.elem_size(), \"Must be\");\n@@ -80,2 +91,4 @@\n-    Atomic::dec(&_num_buffers, memory_order_relaxed);\n-    Atomic::sub(&_mem_size, result->mem_size(), memory_order_relaxed);\n+    size_t num_buffers = Atomic::sub(&_num_buffers, (size_t)1,memory_order_relaxed);\n+    size_t mem_size = Atomic::sub(&_mem_size, result->mem_size(), memory_order_relaxed);\n+    assert(num_buffers >= 0, \"Must be\");\n+    assert(mem_size >= 0, \"Must be\");\n@@ -96,2 +109,4 @@\n-    Atomic::sub(&_num_buffers, num_buffers, memory_order_relaxed);\n-    Atomic::sub(&_mem_size, mem_size, memory_order_relaxed);\n+    size_t buffers = Atomic::sub(&_num_buffers, num_buffers, memory_order_relaxed);\n+    size_t mem = Atomic::sub(&_mem_size, mem_size, memory_order_relaxed);\n+    assert(buffers >= 0, \"Must be\");\n+    assert(mem >= 0, \"Must be\");\n@@ -135,0 +150,2 @@\n+    \/\/ reuse the newly allocated or poped buffer by adding it into free buffer list.\n+    _free_buffer_list->add(*next);\n@@ -136,1 +153,0 @@\n-    delete next;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArray.inline.hpp","additions":23,"deletions":7,"binary":false,"changes":30,"status":"modified"}]}