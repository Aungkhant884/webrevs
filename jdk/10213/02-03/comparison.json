{"files":[{"patch":"@@ -58,1 +58,1 @@\n-    static JmodOutputStream newOutputStream(Path file, LocalDateTime date, int compLevel) throws IOException {\n+    static JmodOutputStream newOutputStream(Path file, LocalDateTime date, int compressLevel) throws IOException {\n@@ -61,1 +61,1 @@\n-        return new JmodOutputStream(bos, date, compLevel);\n+        return new JmodOutputStream(bos, date, compressLevel);\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/JmodOutputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -171,1 +171,1 @@\n-        int compLevel;\n+        int compressLevel;\n@@ -443,1 +443,1 @@\n-            try (JmodOutputStream jos = JmodOutputStream.newOutputStream(tempTarget, options.date, options.compLevel)) {\n+            try (JmodOutputStream jos = JmodOutputStream.newOutputStream(tempTarget, options.date, options.compressLevel)) {\n@@ -1029,1 +1029,1 @@\n-                 JmodOutputStream jos = JmodOutputStream.newOutputStream(tempTarget, options.date, options.compLevel))\n+                 JmodOutputStream jos = JmodOutputStream.newOutputStream(tempTarget, options.date, options.compressLevel))\n@@ -1189,1 +1189,4 @@\n-            if (idx != lastIdx) {\n+            if (idx == -1 || idx != lastIdx) {\n+                throw new CommandException(\"err.compress.incorrect\", value);\n+            }\n+            if (!value.substring(0, idx).equals(\"zip\")) {\n@@ -1527,1 +1530,1 @@\n-                options.compLevel = getLastElement(opts.valuesOf(compress));\n+                options.compressLevel = getLastElement(opts.valuesOf(compress));\n@@ -1530,1 +1533,1 @@\n-                options.compLevel = Deflater.DEFAULT_COMPRESSION;\n+                options.compressLevel = Deflater.DEFAULT_COMPRESSION;\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jmod\/JmodTask.java","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -813,0 +813,11 @@\n+\n+        FileUtils.deleteFileIfExistsWithRetry(jmod);\n+\n+        jmod(\"create\",\n+             \"--class-path\", cp,\n+             \"--compress\", \"test-0\",\n+             jmod.toString())\n+            .assertFailure()\n+            .resultChecker(r -> {\n+                assertTrue(r.output.contains(\"--compress value is invalid\"), \"Error message printed\");\n+            });\n","filename":"test\/jdk\/tools\/jmod\/JmodTest.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}