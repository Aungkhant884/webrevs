{"files":[{"patch":"@@ -123,4 +123,0 @@\n-# Turn off all warnings for debug_mem.c This is needed because the specific warning\n-# about initializing a declared 'extern' cannot be turned off individually. Only\n-# applies to debug builds. This limitation in gcc is tracked in\n-# https:\/\/gcc.gnu.org\/bugzilla\/show_bug.cgi?id=45977\n@@ -128,1 +124,0 @@\n-  BUILD_LIBAWT_debug_mem.c_CFLAGS := -w\n@@ -141,1 +136,0 @@\n-    DISABLED_WARNINGS_gcc_awt_ImagingLib.c := unused-function sign-compare, \\\n@@ -143,3 +137,0 @@\n-    DISABLED_WARNINGS_gcc_awt_Mlib.c := unused-function, \\\n-    DISABLED_WARNINGS_gcc_awt_parseImage.c := sign-compare unused-function, \\\n-    DISABLED_WARNINGS_gcc_debug_trace.c := unused-function, \\\n@@ -150,3 +141,1 @@\n-    DISABLED_WARNINGS_clang_awt_ImagingLib.c := sign-compare deprecated-non-prototype, \\\n-    DISABLED_WARNINGS_clang_awt_parseImage.c := sign-compare, \\\n-    DISABLED_WARNINGS_clang_debug_mem.c := extern-initializer format-nonliteral, \\\n+    DISABLED_WARNINGS_clang_awt_ImagingLib.c := deprecated-non-prototype, \\\n@@ -158,1 +147,0 @@\n-    DISABLED_WARNINGS_microsoft_OGLContext.c := 4267, \\\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,4 +71,4 @@\n-static DMemState                DMemGlobalState;\n-extern const DMemState *        DMemStatePtr = &DMemGlobalState;\n-static MemoryListLink           MemoryList = {NULL,NULL,FALSE};\n-static dmutex_t                 DMemMutex = NULL;\n+static DMemState         DMemGlobalState;\n+const DMemState *        DMemStatePtr = &DMemGlobalState;\n+static MemoryListLink    MemoryList = {NULL,NULL,FALSE};\n+static dmutex_t          DMemMutex = NULL;\n@@ -274,2 +274,2 @@\n-    char        report[FILENAME_MAX+MAX_DECIMAL_DIGITS*3+1];\n-    static const char * reportFormat =\n+    char        report[FILENAME_MAX+MAX_DECIMAL_DIGITS*3+42];\n+    static const char * const reportFormat =\n@@ -277,1 +277,1 @@\n-        \"size:  %d bytes\\n\"\n+        \"size:  %zd bytes\\n\"\n@@ -282,1 +282,2 @@\n-    sprintf(report, reportFormat, header->filename, header->linenumber, header->size, header->order);\n+    snprintf(report, sizeof(report), reportFormat, header->filename,\n+            header->linenumber, header->size, header->order);\n","filename":"src\/java.desktop\/share\/native\/common\/awt\/debug\/debug_mem.c","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#if defined(DEBUG)\n@@ -30,1 +31,0 @@\n-#if defined(DEBUG)\n@@ -295,2 +295,0 @@\n-#endif \/* DEBUG *\/\n-\n@@ -305,22 +303,1 @@\n-\n-static void DTrace_JavaPrint(const char * msg) {\n-#if defined(DEBUG)\n-    DMutex_Enter(DTraceMutex);\n-    DTrace_ClientPrint(msg);\n-    DMutex_Exit(DTraceMutex);\n-#else\n-    DTrace_PrintStdErr(msg);\n-#endif\n-}\n-\n-static void DTrace_JavaPrintln(const char * msg) {\n-#if defined(DEBUG)\n-    DMutex_Enter(DTraceMutex);\n-    DTrace_ClientPrint(msg);\n-    DTrace_ClientPrint(\"\\n\");\n-    DMutex_Exit(DTraceMutex);\n-#else\n-    DTrace_PrintStdErr(msg);\n-    DTrace_PrintStdErr(\"\\n\");\n-#endif\n-}\n+#endif \/* DEBUG *\/\n","filename":"src\/java.desktop\/share\/native\/common\/awt\/debug\/debug_trace.c","additions":3,"deletions":26,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1042,1 +1042,1 @@\n-    int len;\n+    size_t len;\n","filename":"src\/java.desktop\/share\/native\/common\/java2d\/opengl\/OGLContext.c","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -1804,43 +1804,0 @@\n-\/* REMIND: How to specify border? *\/\n-static void extendEdge(JNIEnv *env, BufImageS_t *imageP,\n-                       int *widthP, int *heightP) {\n-    RasterS_t *rasterP = &imageP->raster;\n-    int width;\n-    int height;\n-    \/* Useful for convolution? *\/\n-\n-    jobject jbaseraster = (*env)->GetObjectField(env, rasterP->jraster,\n-                                                 g_RasterBaseRasterID);\n-    width = rasterP->width;\n-    height = rasterP->height;\n-#ifdef WORKING\n-    if (! JNU_IsNull(env, jbaseraster) &&\n-        !(*env)->IsSameObject(env, rasterP->jraster, jbaseraster)) {\n-        int xOff;\n-        int yOff;\n-        int baseWidth;\n-        int baseHeight;\n-        int baseXoff;\n-        int baseYoff;\n-        \/* Not the same object so get the width and height *\/\n-        xOff = (*env)->GetIntField(env, rasterP->jraster, g_RasterXOffsetID);\n-        yOff = (*env)->GetIntField(env, rasterP->jraster, g_RasterYOffsetID);\n-        baseWidth  = (*env)->GetIntField(env, jbaseraster, g_RasterWidthID);\n-        baseHeight = (*env)->GetIntField(env, jbaseraster, g_RasterHeightID);\n-        baseXoff   = (*env)->GetIntField(env, jbaseraster, g_RasterXOffsetID);\n-        baseYoff   = (*env)->GetIntField(env, jbaseraster, g_RasterYOffsetID);\n-\n-        if (xOff + rasterP->width < baseXoff + baseWidth) {\n-            \/* Can use edge *\/\n-            width++;\n-        }\n-        if (yOff + rasterP->height < baseYoff + baseHeight) {\n-            \/* Can use edge *\/\n-            height++;\n-        }\n-\n-    }\n-#endif\n-\n-}\n-\n@@ -2019,41 +1976,0 @@\n-\n-static int\n-expandPacked(JNIEnv *env, BufImageS_t *img, ColorModelS_t *cmP,\n-             RasterS_t *rasterP, int component, unsigned char *bdataP) {\n-\n-    if (rasterP->rasterType == COMPONENT_RASTER_TYPE) {\n-        switch (rasterP->dataType) {\n-        case BYTE_DATA_TYPE:\n-            if (expandPackedBCR(env, rasterP, component, bdataP) < 0) {\n-                \/* Must have been an error *\/\n-                return -1;\n-            }\n-            break;\n-\n-        case SHORT_DATA_TYPE:\n-            if (expandPackedICR(env, rasterP, component, bdataP) < 0) {\n-                \/* Must have been an error *\/\n-                return -1;\n-            }\n-            break;\n-\n-        case INT_DATA_TYPE:\n-            if (expandPackedICR(env, rasterP, component, bdataP) < 0) {\n-                \/* Must have been an error *\/\n-                return -1;\n-            }\n-            break;\n-\n-        default:\n-            \/* REMIND: Return some sort of error *\/\n-            return -1;\n-        }\n-    }\n-    else {\n-        \/* REMIND: Return some sort of error *\/\n-        return -1;\n-    }\n-\n-    return 0;\n-}\n-\n@@ -2448,2 +2364,2 @@\n-        if (!(SAFE_TO_ALLOC_2(width, rasterP->numBands) &&\n-              SAFE_TO_ALLOC_2(rasterP->scanlineStride, height)))\n+        if (!(SAFE_TO_ALLOC_3(width, rasterP->numBands, 1) &&\n+              SAFE_TO_ALLOC_3(rasterP->scanlineStride, height, 1)))\n","filename":"src\/java.desktop\/share\/native\/libawt\/awt\/medialib\/awt_ImagingLib.c","additions":3,"deletions":87,"binary":false,"changes":90,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-static mlib_type mlib_ImageGetType(const mlib_image *img)\n+static inline mlib_type mlib_ImageGetType(const mlib_image *img)\n@@ -40,1 +40,1 @@\n-static mlib_s32 mlib_ImageGetChannels(const mlib_image *img)\n+static inline mlib_s32 mlib_ImageGetChannels(const mlib_image *img)\n@@ -45,1 +45,1 @@\n-static mlib_s32 mlib_ImageGetWidth(const mlib_image *img)\n+static inline mlib_s32 mlib_ImageGetWidth(const mlib_image *img)\n@@ -50,1 +50,1 @@\n-static mlib_s32 mlib_ImageGetHeight(const mlib_image *img)\n+static inline mlib_s32 mlib_ImageGetHeight(const mlib_image *img)\n@@ -55,1 +55,1 @@\n-static mlib_s32 mlib_ImageGetStride(const mlib_image *img)\n+static inline mlib_s32 mlib_ImageGetStride(const mlib_image *img)\n@@ -60,1 +60,1 @@\n-static void *mlib_ImageGetData(const mlib_image *img)\n+static inline void *mlib_ImageGetData(const mlib_image *img)\n@@ -65,1 +65,1 @@\n-static mlib_s32 mlib_ImageGetFlags(const mlib_image *img)\n+static inline mlib_s32 mlib_ImageGetFlags(const mlib_image *img)\n@@ -70,1 +70,1 @@\n-static mlib_u8 *mlib_ImageGetPaddings(const mlib_image *img)\n+static inline mlib_u8 *mlib_ImageGetPaddings(const mlib_image *img)\n@@ -75,1 +75,1 @@\n-static mlib_s32 mlib_ImageGetBitOffset(const mlib_image *img)\n+static inline mlib_s32 mlib_ImageGetBitOffset(const mlib_image *img)\n@@ -80,1 +80,1 @@\n-static mlib_format mlib_ImageGetFormat(const mlib_image *img)\n+static inline mlib_format mlib_ImageGetFormat(const mlib_image *img)\n@@ -86,1 +86,1 @@\n-static int mlib_ImageTestFlags(const mlib_image *img, mlib_s32 flags)\n+static inline int mlib_ImageTestFlags(const mlib_image *img, mlib_s32 flags)\n@@ -92,1 +92,1 @@\n-static int mlib_ImageIsNotAligned64(const mlib_image *img)\n+static inline int mlib_ImageIsNotAligned64(const mlib_image *img)\n@@ -98,1 +98,1 @@\n-static int mlib_ImageIsNotAligned8(const mlib_image *img)\n+static inline int mlib_ImageIsNotAligned8(const mlib_image *img)\n@@ -104,1 +104,1 @@\n-static int mlib_ImageIsNotAligned4(const mlib_image *img)\n+static inline int mlib_ImageIsNotAligned4(const mlib_image *img)\n@@ -110,1 +110,1 @@\n-static int mlib_ImageIsNotAligned2(const mlib_image *img)\n+static inline int mlib_ImageIsNotAligned2(const mlib_image *img)\n@@ -116,1 +116,1 @@\n-static int mlib_ImageIsNotWidth8X(const mlib_image *img)\n+static inline int mlib_ImageIsNotWidth8X(const mlib_image *img)\n@@ -122,1 +122,1 @@\n-static int mlib_ImageIsNotWidth4X(const mlib_image *img)\n+static inline int mlib_ImageIsNotWidth4X(const mlib_image *img)\n@@ -128,1 +128,1 @@\n-static int mlib_ImageIsNotWidth2X(const mlib_image *img)\n+static inline int mlib_ImageIsNotWidth2X(const mlib_image *img)\n@@ -134,1 +134,1 @@\n-static int mlib_ImageIsNotHeight8X(const mlib_image *img)\n+static inline int mlib_ImageIsNotHeight8X(const mlib_image *img)\n@@ -140,1 +140,1 @@\n-static int mlib_ImageIsNotHeight4X(const mlib_image *img)\n+static inline int mlib_ImageIsNotHeight4X(const mlib_image *img)\n@@ -146,1 +146,1 @@\n-static int mlib_ImageIsNotHeight2X(const mlib_image *img)\n+static inline int mlib_ImageIsNotHeight2X(const mlib_image *img)\n@@ -152,1 +152,1 @@\n-static int mlib_ImageIsNotStride8X(const mlib_image *img)\n+static inline int mlib_ImageIsNotStride8X(const mlib_image *img)\n@@ -158,1 +158,1 @@\n-static int mlib_ImageIsNotOneDvector(const mlib_image *img)\n+static inline int mlib_ImageIsNotOneDvector(const mlib_image *img)\n@@ -164,1 +164,1 @@\n-static int mlib_ImageIsUserAllocated(const mlib_image *img)\n+static inline int mlib_ImageIsUserAllocated(const mlib_image *img)\n","filename":"src\/java.desktop\/share\/native\/libmlib_image\/mlib_image_get.h","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-     ((0x7fffffff \/ (c)) > (sz)))\n+     ((0x7fffffffu \/ (c)) > (sz)))\n@@ -42,1 +42,1 @@\n-     (((0x7fffffff \/ (w)) \/ (h)) > (sz)))\n+     (((0x7fffffffu \/ (w)) \/ (h)) > (sz)))\n","filename":"src\/java.desktop\/share\/native\/libmlib_image\/safe_alloc.h","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -444,2 +444,2 @@\n-    if (FAILED(res = d3dc->BeginScene(STATE_TEXTUREOP)   ||\n-        FAILED(res = d3dc->SetTexture(pSrc))))\n+    if (FAILED(res = d3dc->BeginScene(STATE_TEXTUREOP))  ||\n+        FAILED(res = d3dc->SetTexture(pSrc)))\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/d3d\/D3DBlitLoops.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -569,4 +569,4 @@\n-        float px1 = floor(px);\n-        float py1 = floor(py);\n-        float px2 = ceil(px + pw);\n-        float py2 = ceil(py + ph);\n+        float px1 = floorf(px);\n+        float py1 = floorf(py);\n+        float px2 = ceilf(px + pw);\n+        float py2 = ceilf(py + ph);\n@@ -618,4 +618,4 @@\n-        float ox11 = floor(ox);\n-        float oy11 = floor(oy);\n-        float ox22 = ceil(ox + ow);\n-        float oy22 = ceil(oy + oh);\n+        float ox11 = floorf(ox);\n+        float oy11 = floorf(oy);\n+        float ox22 = ceilf(ox + ow);\n+        float oy22 = ceilf(oy + oh);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/d3d\/D3DVertexCacher.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,2 +86,2 @@\n-typedef HRESULT (__stdcall *PFNISTHEMEBACKGROUNDPARTIALLYTRANSPARENT)\n-                (HTHEME hTheme, int iPartId, int iStateId);\n+typedef BOOL (__stdcall *PFNISTHEMEBACKGROUNDPARTIALLYTRANSPARENT)\n+             (HTHEME hTheme, int iPartId, int iStateId);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/ThemeReader.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -489,1 +489,1 @@\n-        logFont.lfWidth = (LONG) ScaleUpX((fabs) (avgWidth * awScale));\n+        logFont.lfWidth = (LONG) ScaleUpX((fabsf) (avgWidth * awScale));\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Font.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}