{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,0 +56,2 @@\n+static void throw_errno(JNIEnv *env);\n+\n@@ -57,1 +59,1 @@\n-  (JNIEnv *env, jclass) {\n+  (JNIEnv *env, jclass unused) {\n@@ -103,4 +105,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     errno);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -136,1 +135,1 @@\n-    env->GetByteArrayRegion(c_ccValue, 0, NCCS, (signed char *) data.c_cc);\/\/TODO: cast?\n+    env->GetByteArrayRegion(c_ccValue, 0, NCCS, (jbyte *) data.c_cc);\n@@ -141,4 +140,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     errno);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -163,4 +159,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     errno);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -197,4 +190,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     error);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -204,1 +194,1 @@\n-    env->SetByteArrayRegion(buf, 0, len, (signed char *) data);\n+    env->SetByteArrayRegion(buf, 0, len, (jbyte *) data);\n@@ -207,0 +197,10 @@\n+\n+\/*\n+ * Throws LastErrorException based on the errno:\n+ *\/\n+static void throw_errno(JNIEnv *env) {\n+    jobject exc = env->NewObject(lastErrorExceptionClass,\n+                                 lastErrorExceptionConstructor,\n+                                 errno);\n+    env->Throw((jthrowable) exc);\n+}\n","filename":"src\/jdk.internal.le\/linux\/native\/lible\/CLibrary.cpp","additions":20,"deletions":20,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,0 +58,2 @@\n+static void throw_errno(JNIEnv *env);\n+\n@@ -109,4 +111,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     errno);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -140,1 +139,1 @@\n-    env->GetByteArrayRegion(c_ccValue, 0, NCCS, (signed char *) data.c_cc);\n+    env->GetByteArrayRegion(c_ccValue, 0, NCCS, (jbyte *) data.c_cc);\n@@ -145,4 +144,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     errno);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -167,4 +163,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     errno);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -201,4 +194,1 @@\n-        jobject exc = env->NewObject(lastErrorExceptionClass,\n-                                     lastErrorExceptionConstructor,\n-                                     error);\n-        env->Throw((jthrowable) exc);\n+        throw_errno(env);\n@@ -208,1 +198,1 @@\n-    env->SetByteArrayRegion(buf, 0, len, (signed char *) data);\n+    env->SetByteArrayRegion(buf, 0, len, (jbyte *) data);\n@@ -211,0 +201,10 @@\n+\n+\/*\n+ * Throws LastErrorException based on the errno:\n+ *\/\n+static void throw_errno(JNIEnv *env) {\n+    jobject exc = env->NewObject(lastErrorExceptionClass,\n+                                 lastErrorExceptionConstructor,\n+                                 errno);\n+    env->Throw((jthrowable) exc);\n+}\n","filename":"src\/jdk.internal.le\/macosx\/native\/lible\/CLibrary.cpp","additions":19,"deletions":19,"binary":false,"changes":38,"status":"modified"}]}