{"files":[{"patch":"@@ -327,1 +327,1 @@\n-void NativeJump::check_verified_entry_alignment(address entry, address verified_entry) {\n+void NativeJump::check_verified_entry_alignment(address verified_entry) {\n@@ -476,1 +476,1 @@\n-void NativeJump::patch_verified_entry(address entry, address verified_entry, address dest) {\n+void NativeJump::patch_verified_entry(address verified_entry, address dest) {\n","filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -459,2 +459,2 @@\n-  static void check_verified_entry_alignment(address entry, address verified_entry);\n-  static void patch_verified_entry(address entry, address verified_entry, address dest);\n+  static void check_verified_entry_alignment(address verified_entry);\n+  static void patch_verified_entry(address verified_entry, address dest);\n","filename":"src\/hotspot\/cpu\/aarch64\/nativeInst_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1157,2 +1157,0 @@\n-  vmIntrinsics::ID iid = method->intrinsic_id();\n-  intptr_t start = (intptr_t)__ pc();\n@@ -1166,1 +1164,0 @@\n-  int frame_complete = ((intptr_t)__ pc()) - start;  \/\/ not complete, period\n@@ -1168,1 +1165,0 @@\n-  int stack_slots = SharedRuntime::out_preserve_stack_slots();  \/\/ no out slots at all, actually\n","filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -287,1 +287,1 @@\n-void RawNativeJump::check_verified_entry_alignment(address entry, address verified_entry) {\n+void RawNativeJump::check_verified_entry_alignment(address verified_entry) {\n@@ -290,1 +290,1 @@\n-void RawNativeJump::patch_verified_entry(address entry, address verified_entry, address dest) {\n+void RawNativeJump::patch_verified_entry(address verified_entry, address dest) {\n","filename":"src\/hotspot\/cpu\/arm\/nativeInst_arm_32.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -274,1 +274,1 @@\n-  static void check_verified_entry_alignment(address entry, address verified_entry);\n+  static void check_verified_entry_alignment(address verified_entry);\n@@ -276,1 +276,1 @@\n-  static void patch_verified_entry(address entry, address verified_entry, address dest);\n+  static void patch_verified_entry(address verified_entry, address dest);\n","filename":"src\/hotspot\/cpu\/arm\/nativeInst_arm_32.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -750,2 +750,0 @@\n-  vmIntrinsics::ID iid = method->intrinsic_id();\n-  intptr_t start = (intptr_t)__ pc();\n","filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -333,1 +333,1 @@\n-void NativeJump::patch_verified_entry(address entry, address verified_entry, address dest) {\n+void NativeJump::patch_verified_entry(address verified_entry, address dest) {\n","filename":"src\/hotspot\/cpu\/ppc\/nativeInst_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -328,1 +328,1 @@\n-  static void patch_verified_entry(address entry, address verified_entry, address dest);\n+  static void patch_verified_entry(address verified_entry, address dest);\n@@ -332,1 +332,1 @@\n-  static void check_verified_entry_alignment(address entry, address verified_entry) {\n+  static void check_verified_entry_alignment(address verified_entry) {\n","filename":"src\/hotspot\/cpu\/ppc\/nativeInst_ppc.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1628,2 +1628,0 @@\n-  vmIntrinsics::ID iid = method->intrinsic_id();\n-  intptr_t start = (intptr_t)__ pc();\n","filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -267,1 +267,1 @@\n-void NativeJump::check_verified_entry_alignment(address entry, address verified_entry) {\n+void NativeJump::check_verified_entry_alignment(address verified_entry) {\n@@ -350,1 +350,1 @@\n-void NativeJump::patch_verified_entry(address entry, address verified_entry, address dest) {\n+void NativeJump::patch_verified_entry(address verified_entry, address dest) {\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-  static void check_verified_entry_alignment(address entry, address verified_entry);\n-  static void patch_verified_entry(address entry, address verified_entry, address dest);\n+  static void check_verified_entry_alignment(address verified_entry);\n+  static void patch_verified_entry(address verified_entry, address dest);\n","filename":"src\/hotspot\/cpu\/riscv\/nativeInst_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1123,3 +1123,0 @@\n-  vmIntrinsics::ID iid = method->intrinsic_id();\n-  intptr_t start = (intptr_t)__ pc();\n-\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-void NativeJump::patch_verified_entry(address entry, address verified_entry, address dest) {\n+void NativeJump::patch_verified_entry(address verified_entry, address dest) {\n","filename":"src\/hotspot\/cpu\/s390\/nativeInst_s390.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -613,1 +613,1 @@\n-  static void check_verified_entry_alignment(address entry, address verified_entry) { }\n+  static void check_verified_entry_alignment(address verified_entry) { }\n@@ -615,1 +615,1 @@\n-  static void patch_verified_entry(address entry, address verified_entry, address dest);\n+  static void patch_verified_entry(address verified_entry, address dest);\n","filename":"src\/hotspot\/cpu\/s390\/nativeInst_s390.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1302,2 +1302,0 @@\n-  vmIntrinsics::ID iid = method->intrinsic_id();\n-  intptr_t start = (intptr_t) __ pc();\n@@ -1307,1 +1305,0 @@\n-\n","filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -477,1 +477,1 @@\n-void NativeJump::check_verified_entry_alignment(address entry, address verified_entry) {\n+void NativeJump::check_verified_entry_alignment(address verified_entry) {\n@@ -511,1 +511,1 @@\n-void NativeJump::patch_verified_entry(address entry, address verified_entry, address dest) {\n+void NativeJump::patch_verified_entry(address verified_entry, address dest) {\n@@ -521,1 +521,1 @@\n-  check_verified_entry_alignment(entry, verified_entry);\n+  check_verified_entry_alignment(verified_entry);\n","filename":"src\/hotspot\/cpu\/x86\/nativeInst_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -522,2 +522,2 @@\n-  static void check_verified_entry_alignment(address entry, address verified_entry);\n-  static void patch_verified_entry(address entry, address verified_entry, address dest);\n+  static void check_verified_entry_alignment(address verified_entry);\n+  static void patch_verified_entry(address verified_entry, address dest);\n","filename":"src\/hotspot\/cpu\/x86\/nativeInst_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1327,2 +1327,0 @@\n-  vmIntrinsics::ID iid = method->intrinsic_id();\n-  intptr_t start = (intptr_t)__ pc();\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1427,2 +1427,0 @@\n-  vmIntrinsics::ID iid = method->intrinsic_id();\n-  intptr_t start = (intptr_t)__ pc();\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,2 +38,1 @@\n-void NativeJump::patch_verified_entry(address entry,\n-                                      address verified_entry,\n+void NativeJump::patch_verified_entry(address verified_entry,\n","filename":"src\/hotspot\/cpu\/zero\/nativeInst_zero.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -179,2 +179,1 @@\n-  static void check_verified_entry_alignment(address entry,\n-                                             address verified_entry) {\n+  static void check_verified_entry_alignment(address verified_entry) {\n@@ -183,2 +182,1 @@\n-  static void patch_verified_entry(address entry,\n-                                   address verified_entry,\n+  static void patch_verified_entry(address verified_entry,\n","filename":"src\/hotspot\/cpu\/zero\/nativeInst_zero.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2675,1 +2675,1 @@\n-        sprintf(buf + (int)strlen(buf), \"(nmethod \" INTPTR_FORMAT \")\", (intptr_t)nm);\n+        sprintf(buf + (int)strlen(buf), \"(code \" INTPTR_FORMAT \")\", (intptr_t)nm);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2048,3 +2048,1 @@\n-  assert(Arguments::is_interpreter_only() || (spe->method()->has_compiled_code() &&\n-         spe->method()->code()->code_begin() == spe->method()->from_compiled_entry()),\n-         \"MH intrinsic invariant\");\n+  assert(Arguments::is_interpreter_only() || spe->method()->has_compiled_code(), \"MH intrinsic invariant\");\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -342,1 +342,0 @@\n-  code_buffer->finalize_oop_references(method);\n@@ -345,0 +344,1 @@\n+  int mhi_size = CodeBlob::allocation_size(code_buffer, sizeof(MethodHandleIntrinsicBlob));\n@@ -347,2 +347,0 @@\n-    int mhi_size = CodeBlob::allocation_size(code_buffer, sizeof(MethodHandleIntrinsicBlob));\n-\n@@ -360,7 +358,1 @@\n-  NativeJump::check_verified_entry_alignment(code_begin(), code_begin());\n-\n-  ResourceMark rm;\n-\n-  if (!CodeCache::contains((void*)this)) {\n-    fatal(\"MethodHandleIntrinsicBlob at \" INTPTR_FORMAT \" not in zone\", p2i(this));\n-  }\n+  NativeJump::check_verified_entry_alignment(code_begin());\n","filename":"src\/hotspot\/share\/code\/codeBlob.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1463,1 +1463,1 @@\n-      NativeJump::patch_verified_entry(entry_point(), verified_entry_point(),\n+      NativeJump::patch_verified_entry(verified_entry_point(),\n@@ -2496,1 +2496,1 @@\n-  NativeJump::check_verified_entry_alignment(entry_point(), verified_entry_point());\n+  NativeJump::check_verified_entry_alignment(verified_entry_point());\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1346,1 +1346,1 @@\n-CodeBlob* CompileBroker::compile_method(const methodHandle& method, int osr_bci,\n+nmethod* CompileBroker::compile_method(const methodHandle& method, int osr_bci,\n@@ -1361,1 +1361,1 @@\n-  CodeBlob* nm = CompileBroker::compile_method(method, osr_bci, comp_level, hot_method, hot_count, compile_reason, directive, THREAD);\n+  nmethod* nm = CompileBroker::compile_method(method, osr_bci, comp_level, hot_method, hot_count, compile_reason, directive, THREAD);\n@@ -1366,1 +1366,1 @@\n-CodeBlob* CompileBroker::compile_method(const methodHandle& method, int osr_bci,\n+nmethod* CompileBroker::compile_method(const methodHandle& method, int osr_bci,\n@@ -1378,0 +1378,1 @@\n+  assert(!method->is_method_handle_intrinsic(), \"cannot compile MH intrinsic\");\n@@ -1396,1 +1397,1 @@\n-    if (method_code != NULL && (method_code->is_nmethod() || method_code->is_mh_intrinsic())) {\n+    if (method_code != NULL && method_code->is_nmethod()) {\n@@ -1398,1 +1399,1 @@\n-        return method_code;\n+        return method_code->as_nmethod();\n@@ -1427,1 +1428,1 @@\n-  if (method->is_native() && !method->is_method_handle_intrinsic()) {\n+  if (method->is_native()) {\n@@ -1452,1 +1453,1 @@\n-    if (!PreferInterpreterNativeStubs || method->is_method_handle_intrinsic()) {\n+    if (!PreferInterpreterNativeStubs) {\n@@ -1499,1 +1500,2 @@\n-    return method->code();\n+    CodeBlob* method_code = method->code();\n+    return (method_code == nullptr) ? nullptr : method_code->as_nmethod();\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -299,1 +299,1 @@\n-  static CodeBlob* compile_method(const methodHandle& method,\n+  static nmethod* compile_method(const methodHandle& method,\n@@ -307,1 +307,1 @@\n-  static CodeBlob* compile_method(const methodHandle& method,\n+  static nmethod* compile_method(const methodHandle& method,\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1302,1 +1302,0 @@\n-    assert(blob->is_mh_intrinsic(), \"must be MH intrinsic\");\n@@ -1304,1 +1303,1 @@\n-    return (mhi->method() == nullptr) || (mhi->method() == this);\n+    return mhi->method() == this;\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1061,1 +1061,1 @@\n-  CodeBlob* nm = CompileBroker::compile_method(mh, bci, comp_level, mh, mh->invocation_count(), CompileTask::Reason_Whitebox, CHECK_false);\n+  nmethod* nm = CompileBroker::compile_method(mh, bci, comp_level, mh, mh->invocation_count(), CompileTask::Reason_Whitebox, CHECK_false);\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}