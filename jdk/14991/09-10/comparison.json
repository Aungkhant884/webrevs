{"files":[{"patch":"@@ -1380,1 +1380,2 @@\n-void C2_MacroAssembler::round_double_mode(FloatRegister dst, FloatRegister src, int round_mode, Register tmp1, Register tmp2, Register tmp3) {\n+void C2_MacroAssembler::round_double_mode(FloatRegister dst, FloatRegister src, int round_mode,\n+                                          Register tmp1, Register tmp2, Register tmp3) {\n@@ -1382,2 +1383,1 @@\n-  assert_different_registers(dst, src);\n-  assert_different_registers(tmp1, tmp2, tmp3);\n+  assert_different_registers(dst, src, tmp1, tmp2, tmp3);\n@@ -1385,4 +1385,4 @@\n-  \/\/ setting rounding mode for conversions\n-  \/\/ here we use similar modes to double->long and long->double conversions\n-  \/\/ different mode for long->double conversion matter only if long value was not representable as double\n-  \/\/ we got long value as a result of double->long conversion so it is defenitely representable\n+  \/\/ Set rounding mode for conversions\n+  \/\/ Here we use similar modes to double->long and long->double conversions\n+  \/\/ Different mode for long->double conversion matter only if long value was not representable as double,\n+  \/\/ we got long value as a result of double->long conversion so, it is definitely representable\n@@ -1409,2 +1409,0 @@\n-  \/\/ generating constant (tmp2)\n-  \/\/ tmp2 = 100...0000\n@@ -1413,1 +1411,1 @@\n-  \/\/ conversion from double to long\n+  \/\/ Conversion from double to long\n@@ -1416,1 +1414,3 @@\n-  \/\/ preparing converted long (tmp1)\n+  \/\/ Generate constant (tmp2)\n+  \/\/ tmp2 = 100...0000\n+  \/\/ Prepare converted long (tmp1)\n@@ -1419,1 +1419,1 @@\n-  \/\/ converting to: tmp3 = 100...0000\n+  \/\/ Convert it to: tmp3 = 100...0000\n@@ -1423,1 +1423,2 @@\n-  \/\/ conversion from long to double\n+\n+  \/\/ Conversion from long to double\n@@ -1425,1 +1426,1 @@\n-  \/\/ add sign of input value to result for +\/- 0 cases\n+  \/\/ Add sign of input value to result for +\/- 0 cases\n@@ -1428,1 +1429,2 @@\n-  \/\/ if got conversion overflow return src\n+\n+  \/\/ If got conversion overflow return src\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":17,"deletions":15,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -152,1 +152,2 @@\n-  void round_double_mode(FloatRegister dst, FloatRegister src, int round_mode, Register tmp1, Register tmp2, Register tmp3);\n+  void round_double_mode(FloatRegister dst, FloatRegister src, int round_mode,\n+                         Register tmp1, Register tmp2, Register tmp3);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}