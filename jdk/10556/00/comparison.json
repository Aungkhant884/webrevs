{"files":[{"patch":"@@ -27,0 +27,3 @@\n+#include \"logging\/log.hpp\"\n+#include \"logging\/logStream.hpp\"\n+#include \"memory\/resourceArea.hpp\"\n@@ -383,0 +386,10 @@\n+void MutexLocker::post_initialize() {\n+  \/\/ Print mutex ranks if requested.\n+  LogTarget(Info, vmmutex) lt;\n+  if (lt.is_enabled()) {\n+    ResourceMark rm;\n+    LogStream ls(lt);\n+    print_lock_ranks(&ls);\n+  }\n+}\n+\n@@ -412,0 +425,33 @@\n+\n+void print_lock_ranks(outputStream* st) {\n+  st->print_cr(\"VM Mutex\/Monitor ranks: \");\n+\n+#ifdef ASSERT\n+  int min_rank = INT_MAX;\n+  int max_rank = INT_MIN;\n+\n+  for (int i = 0; i < _num_mutex; i++) {\n+    Mutex *m = _mutex_array[i];\n+    int r = (int) m->rank();\n+    if (min_rank > r) min_rank = r;\n+    if (max_rank < r) max_rank = r;\n+  }\n+\n+  for (int r = min_rank; r <= max_rank; r++) {\n+    bool first = true;\n+    for (int i = 0; i < _num_mutex; i++) {\n+      Mutex *m = _mutex_array[i];\n+      if (r != (int) m->rank()) continue;\n+\n+      if (first) {\n+        st->cr();\n+        st->print_cr(\"Rank \\\"%s\\\":\", m->rank_name());\n+        first = false;\n+      }\n+      st->print_cr(\"  %s\", m->name());\n+    }\n+  }\n+#else\n+  st->print_cr(\"  Only known in debug builds.\");\n+#endif \/\/ ASSERT\n+}\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":46,"deletions":0,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -178,0 +178,1 @@\n+void print_lock_ranks(outputStream* st);\n@@ -228,0 +229,2 @@\n+\n+  static void post_initialize();\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -650,0 +650,1 @@\n+  MutexLocker::post_initialize();\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8294759\n+ * @summary Verify mutex rank logging works\n+ * @requires vm.flagless\n+ * @library \/test\/lib\n+ * @run driver MutexRankTest\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.Platform;\n+\n+public class MutexRankTest {\n+    public static void main(String[] args) throws Exception {\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:vmmutex\",\n+                                                                  \"-version\");\n+        OutputAnalyzer oa = new OutputAnalyzer(pb.start());\n+        oa.shouldContain(\"VM Mutex\/Monitor ranks:\");\n+        if (Platform.isDebugBuild()) {\n+            oa.shouldContain(\"Rank \\\"safepoint\\\"\");\n+            oa.shouldContain(\"Heap_lock\");\n+        } else {\n+            oa.shouldContain(\"Only known in debug builds\");\n+        }\n+        oa.shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/MutexRankTest.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}