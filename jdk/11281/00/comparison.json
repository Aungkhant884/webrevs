{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import javax.swing.text.AbstractDocument;\n@@ -41,0 +42,1 @@\n+import javax.swing.text.DocumentFilter;\n@@ -303,12 +305,20 @@\n-        int nleft = doc.getLength();\n-        Segment text = new Segment();\n-        \/\/ we would like to get direct data array access, not a copy of it\n-        text.setPartialReturn(true);\n-        int offs = 0;\n-        try {\n-            while (nleft > 0) {\n-                doc.getText(offs, nleft, text);\n-                Arrays.fill(text.array, text.offset,\n-                            text.count + text.offset, '\\u0000');\n-                nleft -= text.count;\n-                offs += text.count;\n+        DocumentFilter filter = null;\n+        if (doc instanceof AbstractDocument adoc) {\n+            filter = adoc.getDocumentFilter();\n+        }\n+        if (filter == null) {\n+            int nleft = doc.getLength();\n+            Segment text = new Segment();\n+            \/\/ we would like to get direct data array access, not a copy of it\n+            text.setPartialReturn(true);\n+            int offs = 0;\n+            try {\n+                while (nleft > 0) {\n+                    doc.getText(offs, nleft, text);\n+                    Arrays.fill(text.array, text.offset,\n+                                text.count + text.offset, '\\u0000');\n+                    nleft -= text.count;\n+                    offs += text.count;\n+                }\n+            } catch (BadLocationException ignored) {\n+                \/\/ we tried\n@@ -316,2 +326,0 @@\n-        } catch (BadLocationException ignored) {\n-            \/\/ we tried\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JPasswordField.java","additions":23,"deletions":15,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.util.Arrays;\n+\n+import javax.swing.JPasswordField;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.BadLocationException;\n+import javax.swing.text.Document;\n+import javax.swing.text.DocumentFilter;\n+import javax.swing.text.PlainDocument;\n+\n+\/**\n+ * @test\n+ * @bug 8296878\n+ * @summary can the old password be accessed in the DocumentFilter\n+ *\/\n+public final class OldPasswordInDocumentFilter {\n+\n+    public static void main(String[] args) throws Exception {\n+        EventQueue.invokeAndWait(OldPasswordInDocumentFilter::test);\n+    }\n+\n+    private static void test() {\n+        JPasswordField test = new JPasswordField();\n+        PlainDocument document = (PlainDocument) test.getDocument();\n+        document.setDocumentFilter(new DocumentFilter() {\n+            @Override\n+            public void replace(FilterBypass fb, int offset,\n+                                int length, String text, AttributeSet attrs)\n+                    throws BadLocationException\n+            {\n+                Document doc = fb.getDocument();\n+                String string = doc.getText(0, doc.getLength()) + text;\n+                if (string.length() <= 6 && string.matches(\"[0-9]+\")) {\n+                    super.replace(fb, offset, length, text, attrs);\n+                }\n+            }\n+        });\n+        test.setText(\"123456\");\n+        test.setText(\"\");\n+\n+        char[] password = test.getPassword();\n+        if (password.length != 0) {\n+            throw new RuntimeException(Arrays.toString(password));\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPasswordField\/OldPasswordInDocumentFilter.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}