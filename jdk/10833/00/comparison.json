{"files":[{"patch":"@@ -65,2 +65,2 @@\n-  {\n-    \/\/ Now the CM ref_processor roots.\n+  \/\/ Now the CM ref_processor roots.\n+  if (_process_strong_tasks.try_claim_task(G1RP_PS_refProcessor_oops_do)) {\n@@ -68,7 +68,5 @@\n-    if (_process_strong_tasks.try_claim_task(G1RP_PS_refProcessor_oops_do)) {\n-      \/\/ We need to treat the discovered reference lists of the\n-      \/\/ concurrent mark ref processor as roots and keep entries\n-      \/\/ (which are added by the marking threads) on them live\n-      \/\/ until they can be processed at the end of marking.\n-      _g1h->ref_processor_cm()->weak_oops_do(closures->strong_oops());\n-    }\n+    \/\/ We need to treat the discovered reference lists of the\n+    \/\/ concurrent mark ref processor as roots and keep entries\n+    \/\/ (which are added by the marking threads) on them live\n+    \/\/ until they can be processed at the end of marking.\n+    _g1h->ref_processor_cm()->weak_oops_do(closures->strong_oops());\n@@ -189,1 +187,1 @@\n-  {\n+  if (_process_strong_tasks.try_claim_task(G1RP_PS_ClassLoaderDataGraph_oops_do)) {\n@@ -191,3 +189,1 @@\n-    if (_process_strong_tasks.try_claim_task(G1RP_PS_ClassLoaderDataGraph_oops_do)) {\n-      ClassLoaderDataGraph::roots_cld_do(closures->strong_clds(), closures->weak_clds());\n-    }\n+    ClassLoaderDataGraph::roots_cld_do(closures->strong_clds(), closures->weak_clds());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RootProcessor.cpp","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"}]}