{"files":[{"patch":"@@ -417,1 +417,20 @@\n-                if (aborted) {\n+                boolean skip = false;\n+\n+                if (unhandledAction != null) {\n+                    switch (unhandledAction) {\n+                        case CREATE:\n+                            skip = true;\n+                            break;\n+                        case UNPACK:\n+                        case INSTALL:\n+                            skip = (action == Action.VERIFY_INSTALL);\n+                            break;\n+                        case UNINSTALL:\n+                            skip = (action == Action.VERIFY_UNINSTALL);\n+                            break;\n+                    }\n+                }\n+\n+                if (skip) {\n+                    TKit.trace(String.format(\"Skip [%s] action of %s command\",\n+                            action, cmd.getPrintableCommandLine()));\n@@ -432,3 +451,4 @@\n-                        var handler = packageHandlers.get(type).unpackHandler;\n-                        if (!(aborted = (handler == null))) {\n-                            unpackDir = TKit.createTempDirectory(\n+                        handleAction(action,\n+                                packageHandlers.get(type).unpackHandler,\n+                                handler -> {\n+                                    unpackDir = TKit.createTempDirectory(\n@@ -437,3 +457,3 @@\n-                            unpackDir = handler.apply(cmd, unpackDir);\n-                            cmd.setUnpackedPackageLocation(unpackDir);\n-                        }\n+                                    unpackDir = handler.apply(cmd, unpackDir);\n+                                    cmd.setUnpackedPackageLocation(unpackDir);\n+                                });\n@@ -445,4 +465,5 @@\n-                        var handler = packageHandlers.get(type).installHandler;\n-                        if (!(aborted = (handler == null))) {\n-                            handler.accept(curCmd.get());\n-                        }\n+                        handleAction(action,\n+                                packageHandlers.get(type).installHandler,\n+                                handler -> {\n+                                    handler.accept(curCmd.get());\n+                                });\n@@ -453,4 +474,5 @@\n-                        var handler = packageHandlers.get(type).uninstallHandler;\n-                        if (!(aborted = (handler == null))) {\n-                            handler.accept(curCmd.get());\n-                        }\n+                        handleAction(action,\n+                                packageHandlers.get(type).uninstallHandler,\n+                                handler -> {\n+                                    handler.accept(curCmd.get());\n+                                });\n@@ -463,1 +485,4 @@\n-                        aborted = (expectedJPackageExitCode != 0);\n+                        handleAction(action,\n+                                (expectedJPackageExitCode == 0) ? Boolean.TRUE : null,\n+                                handler -> {\n+                                });\n@@ -471,4 +496,14 @@\n-                if (aborted) {\n-                    TKit.trace(\n-                            String.format(\"Aborted [%s] action of %s command\",\n-                                    action, cmd.getPrintableCommandLine()));\n+                Optional.ofNullable(unhandledAction).ifPresent(v -> {\n+                    TKit.trace(String.format(\n+                            \"No handler of [%s] action for %s command\", v,\n+                            cmd.getPrintableCommandLine()));\n+                });\n+            }\n+\n+            private <T> void handleAction(Action action, T handler,\n+                    ThrowingConsumer<T> consumer) throws Throwable {\n+                if (handler == null) {\n+                    unhandledAction = action;\n+                } else {\n+                    unhandledAction = null;\n+                    consumer.accept(handler);\n@@ -479,1 +514,1 @@\n-            private boolean aborted;\n+            private Action unhandledAction;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PackageTest.java","additions":56,"deletions":21,"binary":false,"changes":77,"status":"modified"}]}