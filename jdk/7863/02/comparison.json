{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,4 +73,3 @@\n-    \/\/ shared base address test table\n-    private static final String[] testTable = {\n-        \"1g\", \"8g\", \"64g\",\"512g\", \"4t\",\n-        \"32t\", \"128t\", \"0\",\n+    \/\/ shared base address test table for {32, 64}bit VM\n+    private static final String[] testTableShared = {\n+        \"1g\", \"0\",\n@@ -78,0 +77,9 @@\n+        \"0xfff80000\",         \/\/ archive top wraps around 32-bit address space\n+        \"0xffffffff\",         \/\/ archive bottom wraps around 32-bit address space -- due to align_up()\n+        \"0\"                   \/\/ always let OS pick the base address at runtime (ASLR for CDS archive)\n+    };\n+\n+    \/\/ shared base address test table for 64bit VM only\n+    private static final String[] testTable64 = {\n+        \"8g\", \"64g\",\"512g\", \"4t\",\n+        \"32t\", \"128t\",\n@@ -80,1 +88,0 @@\n-        \"0xfff80000\",         \/\/ archive top wraps around 32-bit address space\n@@ -82,1 +89,0 @@\n-        \"0xffffffff\",         \/\/ archive bottom wraps around 32-bit address space -- due to align_up()\n@@ -84,1 +90,1 @@\n-        \"0x500000000\",        \/\/ (20g) below 32g at a 4g aligned address, but cannot be expressed with a logical\n+        \"0x500000000\"         \/\/ (20g) below 32g at a 4g aligned address, but cannot be expressed with a logical\n@@ -86,1 +92,0 @@\n-        \"0\",                  \/\/ always let OS pick the base address at runtime (ASLR for CDS archive)\n@@ -92,1 +97,1 @@\n-    public static void main(String[] args) throws Exception {\n+    public static void test(String[] args, String[] testTable) throws Exception {\n@@ -137,0 +142,7 @@\n+\n+    public static void main(String[] args) throws Exception {\n+        test(args, testTableShared);\n+        if (Platform.is64bit()) {\n+            test(args, testTable64);\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedBaseAddress.java","additions":22,"deletions":10,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import jdk.test.lib.Platform;\n@@ -40,5 +41,9 @@\n-    \/\/ shared base address test table\n-    private static final String[] testTable = {\n-        \"1g\", \"8g\", \"64g\",\"512g\", \"4t\",\n-        \"32t\", \"128t\", \"0\",\n-        \"1\", \"64k\", \"64M\", \"320g\",\n+    \/\/ shared base address test table for {32, 64}bit VM\n+    private static final String[] testTableShared = {\n+        \"1g\", \"0\", \"1\", \"64k\", \"64M\"\n+    };\n+\n+    \/\/ shared base address test table for 64bit VM only\n+    private static final String[] testTable64 = {\n+        \"8g\", \"64g\",\"512g\", \"4t\",\n+        \"32t\", \"128t\", \"320g\",\n@@ -48,1 +53,1 @@\n-    public static void main(String[] args) throws Exception {\n+    public static void test(String[] testTable) throws Exception {\n@@ -65,0 +70,7 @@\n+\n+    public static void main(String[] args) throws Exception {\n+        test(testTableShared);\n+        if (Platform.is64bit()) {\n+            test(testTable64);\n+        }\n+    }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedBaseAddress.java","additions":19,"deletions":7,"binary":false,"changes":26,"status":"modified"}]}