{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,0 @@\n-#include \"jvmti_common.h\"\n@@ -124,1 +123,1 @@\n-        jthread frameThr) {\n+        jobject frameThr) {\n@@ -156,2 +155,0 @@\n-    bool gotError = false;\n-\n@@ -166,1 +163,1 @@\n-        gotError = true;\n+        tot_result = STATUS_FAILED;\n@@ -179,1 +176,1 @@\n-        gotError = true;\n+        tot_result = STATUS_FAILED;\n@@ -187,1 +184,1 @@\n-        gotError = true;\n+        tot_result = STATUS_FAILED;\n@@ -193,5 +190,0 @@\n-    if (gotError) {\n-        tot_result = STATUS_FAILED;\n-        print_stack_trace(jvmti, env, frameThr);\n-    }\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/jvmti\/PopFrame\/popframe004\/popframe004.cpp","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -101,22 +101,0 @@\n-char *julong_to_string(julong value, char *string) {\n-    char buffer[32];\n-    char *pbuf, *pstr;\n-\n-    pstr = string;\n-    if (value == 0) {\n-        *pstr++ = '0';\n-    } else {\n-        pbuf = buffer;\n-        while (value != 0) {\n-            *pbuf++ = '0' + (char)(value % 10);\n-            value = value \/ 10;\n-        }\n-        while (pbuf != buffer) {\n-            *pstr++ = *--pbuf;\n-        }\n-    }\n-    *pstr = '\\0';\n-\n-    return string;\n-}\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/jni_tools.cpp","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -57,10 +57,0 @@\n-\/**\n- * Additional Java basic types\n- *\/\n-\n-#ifdef _WIN32\n-    typedef unsigned __int64 julong;\n-#else\n-    typedef unsigned long long julong;\n-#endif\n-\n@@ -128,17 +118,0 @@\n-\/**\n- * Convert the digits of the given value argument to a null-terminated\n- * character string and store the result (up to 32 bytes) in string.\n- * If value is negative, the first character of the stored string is\n- * the minus sign (-). The function returns a pointer to the begining\n- * of the result string.\n- * Declared and defined in jvmti_common.h\n- *\/\n-\/\/char *jlong_to_string(jlong value, char *string);\n-\n-\/**\n- * Convert the digits of the given value argument to a null-terminated\n- * character string and store the result (up to 32 bytes) in string.\n- * The function returns a pointer to the begining of the result string.\n- *\/\n-char *julong_to_string(julong value, char *string);\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/share\/jni\/jni_tools.h","additions":0,"deletions":27,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -41,0 +41,10 @@\n+\/**\n+ * Additional Java basic types\n+ *\/\n+\n+#ifdef _WIN32\n+    typedef unsigned __int64 julong;\n+#else\n+    typedef unsigned long long julong;\n+#endif\n+\n@@ -56,2 +66,8 @@\n-char*\n-jlong_to_string(jlong value, char *string) {\n+\/**\n+ * Convert the digits of the given value argument to a null-terminated\n+ * character string and store the result (up to 32 bytes) in string.\n+ * If value is negative, the first character of the stored string is\n+ * the minus sign (-). The function returns a pointer to the begining\n+ * of the result string.\n+ *\/\n+char* jlong_to_string(jlong value, char *string) {\n@@ -83,0 +99,27 @@\n+\/**\n+ * Convert the digits of the given value argument to a null-terminated\n+ * character string and store the result (up to 32 bytes) in string.\n+ * The function returns a pointer to the begining of the result string.\n+ *\/\n+char* julong_to_string(julong value, char *string) {\n+    char buffer[32];\n+    char *pbuf, *pstr;\n+\n+    pstr = string;\n+    if (value == 0) {\n+        *pstr++ = '0';\n+    } else {\n+        pbuf = buffer;\n+        while (value != 0) {\n+            *pbuf++ = '0' + (char)(value % 10);\n+            value = value \/ 10;\n+        }\n+        while (pbuf != buffer) {\n+            *pstr++ = *--pbuf;\n+        }\n+    }\n+    *pstr = '\\0';\n+\n+    return string;\n+}\n+\n","filename":"test\/lib\/jdk\/test\/lib\/jvmti\/jvmti_common.h","additions":45,"deletions":2,"binary":false,"changes":47,"status":"modified"}]}