{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import jdk.xml.internal.Utils;\n@@ -31,0 +32,1 @@\n+import org.xml.sax.SAXException;\n@@ -42,1 +44,1 @@\n- * @LastModified: July 2023\n+ * @LastModified: Sep 2023\n@@ -92,0 +94,1 @@\n+        initSecurityManager();\n@@ -128,0 +131,1 @@\n+        initSecurityManager();\n@@ -155,10 +159,0 @@\n-        if (securityManager == null) {\n-            securityManager = new XMLSecurityManager(true);\n-            super.setProperty(Constants.SECURITY_MANAGER, securityManager);\n-        }\n-\n-        if (securityPropertyManager == null) {\n-            securityPropertyManager = new XMLSecurityPropertyManager();\n-            super.setProperty(JdkConstants.XML_SECURITY_PROPERTY_MANAGER, securityPropertyManager);\n-        }\n-\n@@ -181,0 +175,21 @@\n+\n+    \/**\n+     * Initiates the SecurityManager. This becomes necessary when the SAXParser\n+     * is constructed directly by, for example, XMLReaderFactory rather than\n+     * through SAXParserFactory.\n+     *\/\n+    private void initSecurityManager() {\n+        try {\n+            if (securityManager == null) {\n+                securityManager = new XMLSecurityManager(true);\n+                super.setProperty(Constants.SECURITY_MANAGER, securityManager);\n+            }\n+\n+            if (securityPropertyManager == null) {\n+                securityPropertyManager = new XMLSecurityPropertyManager();\n+                super.setProperty(JdkConstants.XML_SECURITY_PROPERTY_MANAGER, securityPropertyManager);\n+            }\n+        } catch (SAXException e) {\n+            Utils.dPrint(() -> e.getMessage());\n+        }\n+    }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/parsers\/SAXParser.java","additions":26,"deletions":11,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.function.Supplier;\n@@ -34,0 +35,26 @@\n+    \/\/ The debug flag\n+    private static boolean debug = false;\n+\n+    \/*\n+     * The {@systemProperty jaxp.debug} property is supported by JAXP factories\n+     * and used to print out information related to the configuration of factories\n+     * and processors\n+     *\/\n+    static {\n+        try {\n+            String val = SecuritySupport.getSystemProperty(\"jaxp.debug\");\n+            \/\/ Allow simply setting the prop to turn on debug\n+            debug = val != null && !\"false\".equals(val);\n+        }\n+        catch (SecurityException se) {\n+            debug = false;\n+        }\n+    }\n+\n+    \/\/ print out debug information if jaxp.debug is enabled\n+    public static void dPrint(Supplier<String> msgGen) {\n+        if (debug) {\n+            System.err.println(\"JAXP: \" + msgGen.get());\n+        }\n+    }\n+\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/Utils.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,0 +36,1 @@\n+import org.xml.sax.XMLReader;\n@@ -37,0 +38,1 @@\n+import org.xml.sax.helpers.XMLReaderFactory;\n@@ -40,1 +42,1 @@\n- * @bug 8158246\n+ * @bug 8158246 8316383\n@@ -72,0 +74,11 @@\n+\n+    \/*\n+     * @bug 8316383\n+     * Verifies that the XMLReader is initialized properly when it's created\n+     * with XMLReaderFactory.\n+     *\/\n+    @Test\n+    public void testCreateXMLReaderWithXMLReaderFactory() throws SAXException, ParserConfigurationException {\n+        XMLReader reader = XMLReaderFactory.createXMLReader();\n+        reader.setFeature(\"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\", false);\n+    }\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/sax\/XMLReaderTest.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"}]}