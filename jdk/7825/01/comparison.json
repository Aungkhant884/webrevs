{"files":[{"patch":"@@ -462,0 +462,2 @@\n+  \/\/ Note: this code runs on startup, and therefore should not be slow.\n+\n@@ -463,1 +465,1 @@\n-  char data[2048] = {0}; \/\/ lines should fit in 2K buf\n+  char data[128] = {0}; \/\/ looking for short \"microcode\" line, should be enough\n@@ -465,3 +467,5 @@\n-  FILE *fp = os::fopen(\"\/proc\/cpuinfo\", \"r\");\n-  if (fp) {\n-    while (!feof(fp)) {\n+\n+  \/\/ Attempt 1 (faster): Read the microcode version off the sysfs.\n+  {\n+    FILE *fp = os::fopen(\"\/sys\/devices\/system\/cpu\/cpu0\/microcode\/version\", \"r\");\n+    if (fp) {\n@@ -469,4 +473,20 @@\n-        if (strstr(data, \"microcode\") != NULL) {\n-          char* rev = strchr(data, ':');\n-          if (rev != NULL) sscanf(rev + 1, \"%x\", &result);\n-          break;\n+        sscanf(data, \"%x\", &result);\n+      }\n+      fclose(fp);\n+    }\n+    if (result != 0) {\n+      return result;\n+    }\n+  }\n+\n+  \/\/ Attempt 2 (slower): Read the microcode version off the procfs.\n+  {\n+    FILE *fp = os::fopen(\"\/proc\/cpuinfo\", \"r\");\n+    if (fp) {\n+      while (!feof(fp)) {\n+        if (fgets(data, len, fp)) {\n+          if (strstr(data, \"microcode\") != NULL) {\n+            char* rev = strchr(data, ':');\n+            if (rev != NULL) sscanf(rev + 1, \"%x\", &result);\n+            break;\n+          }\n@@ -475,0 +495,4 @@\n+      fclose(fp);\n+    }\n+    if (result != 0) {\n+      return result;\n@@ -476,1 +500,0 @@\n-    fclose(fp);\n@@ -478,0 +501,2 @@\n+\n+  \/\/ No dice. Return the default.\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":34,"deletions":9,"binary":false,"changes":43,"status":"modified"}]}