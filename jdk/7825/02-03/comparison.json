{"files":[{"patch":"@@ -467,10 +467,5 @@\n-  {\n-    FILE *fp = os::fopen(\"\/sys\/devices\/system\/cpu\/cpu0\/microcode\/version\", \"r\");\n-    if (fp) {\n-      char data[128] = {0}; \/\/ looking for short line\n-      if (fgets(data, sizeof(data), fp)) {\n-        sscanf(data, \"%x\", &result);\n-      }\n-      fclose(fp);\n-    }\n-    if (result != 0) {\n+  FILE *fp = os::fopen(\"\/sys\/devices\/system\/cpu\/cpu0\/microcode\/version\", \"r\");\n+  if (fp) {\n+    int read = fscanf(fp, \"%x\", &result);\n+    fclose(fp);\n+    if (read > 0) {\n@@ -482,12 +477,10 @@\n-  {\n-    FILE *fp = os::fopen(\"\/proc\/cpuinfo\", \"r\");\n-    if (fp) {\n-      char data[2048] = {0}; \/\/ lines should fit in 2K buf\n-      size_t len = sizeof(data);\n-      while (!feof(fp)) {\n-        if (fgets(data, len, fp)) {\n-          if (strstr(data, \"microcode\") != NULL) {\n-            char* rev = strchr(data, ':');\n-            if (rev != NULL) sscanf(rev + 1, \"%x\", &result);\n-            break;\n-          }\n+  fp = os::fopen(\"\/proc\/cpuinfo\", \"r\");\n+  if (fp) {\n+    char data[2048] = {0}; \/\/ lines should fit in 2K buf\n+    size_t len = sizeof(data);\n+    while (!feof(fp)) {\n+      if (fgets(data, len, fp)) {\n+        if (strstr(data, \"microcode\") != NULL) {\n+          char* rev = strchr(data, ':');\n+          if (rev != NULL) sscanf(rev + 1, \"%x\", &result);\n+          break;\n@@ -496,4 +489,0 @@\n-      fclose(fp);\n-    }\n-    if (result != 0) {\n-      return result;\n@@ -501,0 +490,1 @@\n+    fclose(fp);\n@@ -503,1 +493,0 @@\n-  \/\/ No dice. Return the default.\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":16,"deletions":27,"binary":false,"changes":43,"status":"modified"}]}