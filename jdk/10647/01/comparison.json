{"files":[{"patch":"@@ -244,4 +244,0 @@\n-double G1Analytics::predict_young_card_merge_to_scan_ratio() const {\n-  return predict_in_unit_interval(_young_card_merge_to_scan_ratio_seq);\n-}\n-\n@@ -250,1 +246,1 @@\n-    return (size_t)(rs_length * predict_young_card_merge_to_scan_ratio());\n+    return (size_t)(rs_length * predict_in_unit_interval(_young_card_merge_to_scan_ratio_seq));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -142,3 +142,0 @@\n-  double predict_young_card_merge_to_scan_ratio() const;\n-\n-  double predict_mixed_card_merge_to_scan_ratio() const;\n@@ -146,0 +143,2 @@\n+  \/\/ Predict how many cards in a remembered set of length rs_length will need to\n+  \/\/ be scanned in addition to the pending log buffer cards.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Analytics.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1013,1 +1013,1 @@\n-  size_t effective_scanned_cards = _analytics->predict_scan_card_num(rs_length, collector_state()->in_young_only_phase());\n+  bool in_young_only_phase = collector_state()->in_young_only_phase();\n@@ -1015,2 +1015,7 @@\n-  double card_merge_time = _analytics->predict_card_merge_time_ms(pending_cards + rs_length, collector_state()->in_young_only_phase());\n-  double card_scan_time = _analytics->predict_card_scan_time_ms(effective_scanned_cards, collector_state()->in_young_only_phase());\n+  size_t remset_cards = _analytics->predict_scan_card_num(rs_length, in_young_only_phase);\n+  \/\/ Assume that all cards from the log buffers will be scanned, i.e. there are no\n+  \/\/ duplicates in that set.\n+  size_t effective_scanned_cards = remset_cards + pending_cards;\n+\n+  double card_merge_time = _analytics->predict_card_merge_time_ms(pending_cards + rs_length, in_young_only_phase);\n+  double card_scan_time = _analytics->predict_card_scan_time_ms(effective_scanned_cards, in_young_only_phase);\n@@ -1022,2 +1027,4 @@\n-  log_trace(gc, ergo, heap)(\"Predicted base time: total %f lb_cards %zu rs_length %zu effective_scanned_cards %zu card_merge_time %f card_scan_time %f constant_other_time %f survivor_evac_time %f\",\n-                            total_time, pending_cards, rs_length, effective_scanned_cards, card_merge_time, card_scan_time, constant_other_time, survivor_evac_time);\n+  log_trace(gc, ergo, heap)(\"Predicted base time: total %f lb_cards %zu rs_length %zu effective_scanned_cards %zu \"\n+                            \"card_merge_time %f card_scan_time %f constant_other_time %f survivor_evac_time %f\",\n+                            total_time, pending_cards, rs_length, effective_scanned_cards,\n+                            card_merge_time, card_scan_time, constant_other_time, survivor_evac_time);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"}]}