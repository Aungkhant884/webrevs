{"files":[{"patch":"@@ -60,0 +60,1 @@\n+#if INCLUDE_CDS\n@@ -64,0 +65,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5227,0 +5227,1 @@\n+#if INCLUDE_CDS\n@@ -5237,0 +5238,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -111,12 +111,11 @@\n-  if (!UseSharedSpaces) {\n-    return nullptr;\n-  }\n-  if (class_name == nullptr) {  \/\/ don't do this for hidden classes\n-    return nullptr;\n-  }\n-  if (class_loader.is_null() ||\n-      SystemDictionary::is_system_class_loader(class_loader()) ||\n-      SystemDictionary::is_platform_class_loader(class_loader())) {\n-    \/\/ Do nothing for the BUILTIN loaders.\n-    return nullptr;\n-  }\n+#if INCLUDE_CDS\n+  if (UseSharedSpaces) {\n+    if (class_name == nullptr) {  \/\/ don't do this for hidden classes\n+      return nullptr;\n+    }\n+    if (class_loader.is_null() ||\n+        SystemDictionary::is_system_class_loader(class_loader()) ||\n+        SystemDictionary::is_platform_class_loader(class_loader())) {\n+      \/\/ Do nothing for the BUILTIN loaders.\n+      return nullptr;\n+    }\n@@ -124,6 +123,6 @@\n-  const RunTimeClassInfo* record = find_record(&_static_archive._unregistered_dictionary,\n-                                               &_dynamic_archive._unregistered_dictionary,\n-                                               class_name);\n-  if (record == nullptr) {\n-    return nullptr;\n-  }\n+    const RunTimeClassInfo* record = find_record(&_static_archive._unregistered_dictionary,\n+                                                 &_dynamic_archive._unregistered_dictionary,\n+                                                 class_name);\n+    if (record == nullptr) {\n+      return nullptr;\n+    }\n@@ -131,2 +130,2 @@\n-  int clsfile_size  = cfs->length();\n-  int clsfile_crc32 = ClassLoader::crc32(0, (const char*)cfs->buffer(), cfs->length());\n+    int clsfile_size  = cfs->length();\n+    int clsfile_crc32 = ClassLoader::crc32(0, (const char*)cfs->buffer(), cfs->length());\n@@ -134,3 +133,3 @@\n-  if (!record->matches(clsfile_size, clsfile_crc32)) {\n-    return nullptr;\n-  }\n+    if (!record->matches(clsfile_size, clsfile_crc32)) {\n+      return nullptr;\n+    }\n@@ -138,3 +137,6 @@\n-  return acquire_class_for_current_thread(record->_klass, class_loader,\n-                                          protection_domain, cfs,\n-                                          THREAD);\n+    return acquire_class_for_current_thread(record->_klass, class_loader,\n+                                            protection_domain, cfs,\n+                                            THREAD);\n+  }\n+#endif\n+  return nullptr;\n@@ -393,0 +395,1 @@\n+#if INCLUDE_CDS\n@@ -425,0 +428,1 @@\n+#endif\n@@ -1279,2 +1283,0 @@\n-\n-  unsigned int hash = SystemDictionaryShared::hash_for_shared_dictionary_quick(name);\n@@ -1282,0 +1284,2 @@\n+#if INCLUDE_CDS\n+  unsigned int hash = SystemDictionaryShared::hash_for_shared_dictionary_quick(name);\n@@ -1305,1 +1309,1 @@\n-\n+#endif\n@@ -1408,0 +1412,1 @@\n+#if INCLUDE_CDS\n@@ -1417,0 +1422,1 @@\n+#endif\n@@ -1425,0 +1431,1 @@\n+#if INCLUDE_CDS\n@@ -1431,0 +1438,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":37,"deletions":29,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -170,0 +170,1 @@\n+#if INCLUDE_CDS\n@@ -177,1 +178,3 @@\n-  } else {\n+  } else\n+#endif\n+  {\n@@ -211,0 +214,1 @@\n+#if INCLUDE_CDS\n@@ -219,0 +223,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -204,0 +204,1 @@\n+#if INCLUDE_CDS\n@@ -238,2 +239,3 @@\n-  } else {\n-\n+  } else\n+#endif\n+  {\n@@ -257,1 +259,0 @@\n-\n","filename":"src\/hotspot\/share\/oops\/compressedOops.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}