{"files":[{"patch":"@@ -1524,1 +1524,2 @@\n-void C2_MacroAssembler::char_array_compress_v(Register src, Register dst, Register len, Register result, Register tmp) {\n+void C2_MacroAssembler::char_array_compress_v(Register src, Register dst, Register len,\n+                                              Register result, Register tmp) {\n@@ -1526,1 +1527,1 @@\n-  encode_iso_array_v(src, dst, len, result, tmp);\n+  encode_iso_array_v(src, dst, len, result, tmp, false);\n@@ -1532,3 +1533,15 @@\n-\/\/ result: the number of elements had been encoded.\n-void C2_MacroAssembler::encode_iso_array_v(Register src, Register dst, Register len, Register result, Register tmp) {\n-  Label loop, DIFFERENCE, DONE;\n+\/\/ Intrinsic for\n+\/\/\n+\/\/ - sun\/nio\/cs\/ISO_8859_1$Encoder.implEncodeISOArray\n+\/\/     return the number of characters copied.\n+\/\/ - java\/lang\/StringUTF16.compress\n+\/\/     return zero (0) if copy fails, otherwise 'len'.\n+\/\/\n+\/\/ This version always returns the number of characters copied. A successful\n+\/\/ copy will complete with the post-condition: 'res' == 'len', while an\n+\/\/ unsuccessful copy will exit with the post-condition: 0 <= 'res' < 'len'.\n+\/\/\n+\/\/ Clobbers: src, dst, len, result, t0\n+void C2_MacroAssembler::encode_iso_array_v(Register src, Register dst, Register len,\n+                                           Register result, Register tmp, bool ascii) {\n+  Label loop, fail, done;\n@@ -1540,1 +1553,1 @@\n-  mv(tmp, 0xff);\n+  mv(tmp, ascii ? 0x7f : 0xff);\n@@ -1543,1 +1556,1 @@\n-  \/\/ if element > 0xff, stop\n+\n@@ -1552,1 +1565,2 @@\n-  bgez(tmp, DIFFERENCE);\n+  \/\/ fail if char > 0x7f\/0xff\n+  bgez(tmp, fail);\n@@ -1558,1 +1572,1 @@\n-  j(DONE);\n+  j(done);\n@@ -1560,1 +1574,1 @@\n-  bind(DIFFERENCE);\n+  bind(fail);\n@@ -1563,1 +1577,1 @@\n-  bind(DONE);\n+  bind(done);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":25,"deletions":11,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-                         Register tmp);\n+                         Register tmp, bool ascii);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -162,1 +162,1 @@\n-  static const bool supports_encode_ascii_array = false;\n+  static const bool supports_encode_ascii_array = true;\n","filename":"src\/hotspot\/cpu\/riscv\/matcher_riscv.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2842,1 +2842,17 @@\n-  predicate(UseRVV);\n+  predicate(UseRVV && !((EncodeISOArrayNode*)n)->is_ascii());\n+  match(Set result (EncodeISOArray src (Binary dst len)));\n+  effect(TEMP_DEF result, USE_KILL src, USE_KILL dst, USE_KILL len,\n+         TEMP v0, TEMP v1, TEMP v2, TEMP v3, TEMP tmp);\n+\n+  format %{ \"Encode ISO array $src, $dst, $len -> $result # KILL $src, $dst, $len, $tmp, V0-V3\" %}\n+  ins_encode %{\n+    __ encode_iso_array_v($src$$Register, $dst$$Register, $len$$Register,\n+                          $result$$Register, $tmp$$Register, false \/* ascii *\/);\n+  %}\n+  ins_pipe(pipe_class_memory);\n+%}\n+\n+instruct vencode_ascii_array(iRegP_R12 src, iRegP_R11 dst, iRegI_R13 len, iRegI_R10 result,\n+                             vReg_V1 v1, vReg_V2 v2, vReg_V3 v3, vRegMask_V0 v0, iRegLNoSp tmp)\n+%{\n+  predicate(UseRVV && ((EncodeISOArrayNode*)n)->is_ascii());\n@@ -2845,1 +2861,1 @@\n-         TEMP v1, TEMP v2, TEMP v3, TEMP tmp, TEMP v0);\n+         TEMP v0, TEMP v1, TEMP v2, TEMP v3, TEMP tmp);\n@@ -2847,1 +2863,1 @@\n-  format %{ \"Encode array $src,$dst,$len -> $result\" %}\n+  format %{ \"Encode ASCII array $src, $dst, $len -> $result # KILL $src, $dst, $len, $tmp, V0-V3\" %}\n@@ -2850,1 +2866,1 @@\n-                          $result$$Register, $tmp$$Register);\n+                          $result$$Register, $tmp$$Register, true \/* ascii *\/);\n@@ -2862,1 +2878,1 @@\n-         TEMP v1, TEMP v2, TEMP v3, TEMP tmp, TEMP v0);\n+         TEMP v0, TEMP v1, TEMP v2, TEMP v3, TEMP tmp);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":21,"deletions":5,"binary":false,"changes":26,"status":"modified"}]}