{"files":[{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"runtime\/os.inline.hpp\"\n+#include \"mallocInfoDcmd.hpp\"\n+#include \"utilities\/debug.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n+#include \"utilities\/ostream.hpp\"\n+\n+#include <malloc.h>\n+\n+void MallocInfoDcmd::execute(DCmdSource source, TRAPS) {\n+#ifdef LINUX\n+  char* buf;\n+  size_t size;\n+  ALLOW_C_FUNCTION(::open_memstream, FILE* stream = ::open_memstream(&buf, &size);)\n+  if (!os::Linux::malloc_info(stream)) {\n+    ALLOW_C_FUNCTION(::fflush, fflush(stream);)\n+    _output->print_raw(buf);\n+  }\n+  ALLOW_C_FUNCTION(::fclose, ::fclose(stream);)\n+  ALLOW_C_FUNCTION(::free, ::free(buf);)\n+#else\n+    \/\/ Nothing.\n+#endif \/\/ LINUX\n+}\n","filename":"src\/hotspot\/os\/linux\/mallocInfoDcmd.cpp","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef OS_LINUX_MALLOCINFODCMD_HPP\n+#define OS_LINUX_MALLOCINFODCMD_HPP\n+\n+#include \"services\/diagnosticCommand.hpp\"\n+\n+class outputStream;\n+\n+class MallocInfoDcmd : public DCmd {\n+public:\n+  MallocInfoDcmd(outputStream* output, bool heap) : DCmd(output, heap) {}\n+  static const char* name() {\n+    return \"System.malloc_info\";\n+  }\n+  static const char* description() {\n+    return \"Prints the malloc information if available. Otherwise, prints nothing.\";\n+  }\n+  static const char* impact() {\n+    return \"Low\";\n+  }\n+  static const JavaPermission permission() {\n+    JavaPermission p = { \"java.lang.management.ManagementPermission\", \"monitor\", nullptr };\n+    return p;\n+  }\n+  void execute(DCmdSource source, TRAPS) override;\n+};\n+\n+#endif \/\/ OS_LINUX_MALLOCINFODCMD_HPP\n","filename":"src\/hotspot\/os\/linux\/mallocInfoDcmd.hpp","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"},{"patch":"@@ -117,0 +117,3 @@\n+\/\/ Forward (re-)declare malloc_info in order to support Alpine Linux.\n+int __attribute__((weak)) malloc_info(int options, FILE *stream);\n+\n@@ -220,0 +223,7 @@\n+int os::Linux::malloc_info(FILE* stream) {\n+  if (::malloc_info) {\n+    return ::malloc_info(0, stream);\n+  }\n+  return 0;\n+}\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -196,0 +196,4 @@\n+  \/\/ Calls out to GNU extension malloc_info if available\n+  \/\/ otherwise does nothing and returns 0.\n+  static int malloc_info(FILE* stream);\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+#include \"mallocInfoDcmd.hpp\"\n@@ -129,0 +130,1 @@\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<MallocInfoDcmd>(full_export, true, false));\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}