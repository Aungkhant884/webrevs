{"files":[{"patch":"@@ -82,1 +82,1 @@\n-             \"Use CPU_ALLOC code path in os::active_processor_count \")\n+          \"Use CPU_ALLOC code path in os::active_processor_count \")\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3220,1 +3220,11 @@\n-              cpu_to_node()->at_put(j * BitsPerCLong + k, closest_node);\n+              int cpu_index = j * BitsPerCLong + k;\n+\n+#ifndef PRODUCT\n+              if (UseDebuggerErgo1 && cpu_index >= (int)cpu_num) {\n+                \/\/ Some debuggers limit the processor count without\n+                \/\/ intercepting the NUMA APIs. Just fake the values.\n+                cpu_index = 0;\n+              }\n+#endif\n+\n+              cpu_to_node()->at_put(cpu_index, closest_node);\n@@ -4765,1 +4775,10 @@\n-  assert(id >= 0 && id < _processor_count, \"Invalid processor id\");\n+\n+#ifndef PRODUCT\n+  if (UseDebuggerErgo1 && id >= _processor_count) {\n+    \/\/ Some debuggers limit the processor count without limiting\n+    \/\/ the returned processor ids. Fake the processor id.\n+    return 0;\n+  }\n+#endif\n+\n+  assert(id >= 0 && id < _processor_count, \"Invalid processor id [%d]\", id);\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":21,"deletions":2,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -3903,0 +3903,16 @@\n+static void apply_debugger_ergo() {\n+  if (UseDebuggerErgo) {\n+    \/\/ Turn on sub-flags\n+    FLAG_SET_ERGO_IF_DEFAULT(UseDebuggerErgo1, true);\n+    FLAG_SET_ERGO_IF_DEFAULT(UseDebuggerErgo2, true);\n+  }\n+\n+  if (UseDebuggerErgo2) {\n+    \/\/ Debugging with limited number of CPUs\n+    FLAG_SET_ERGO_IF_DEFAULT(UseNUMA, false);\n+    FLAG_SET_ERGO_IF_DEFAULT(ConcGCThreads, 1);\n+    FLAG_SET_ERGO_IF_DEFAULT(ParallelGCThreads, 1);\n+    FLAG_SET_ERGO_IF_DEFAULT(CICompilerCount, 2);\n+  }\n+}\n+\n@@ -4099,0 +4115,2 @@\n+  apply_debugger_ergo();\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":18,"deletions":0,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2186,0 +2186,11 @@\n+  notproduct(bool, UseDebuggerErgo, false,                                  \\\n+          \"Debugging Only: Adjust the VM to be more debugger-friendly. \"    \\\n+          \"Turns on the other UseDebuggerErgo* flags\")                      \\\n+                                                                            \\\n+  notproduct(bool, UseDebuggerErgo1, false,                                 \\\n+          \"Debugging Only: Enable workarounds for debugger induced \"        \\\n+          \"os::processor_id() >= os::processor_count() problems\")           \\\n+                                                                            \\\n+  notproduct(bool, UseDebuggerErgo2, false,                                 \\\n+          \"Debugging Only: Limit the number of spawned JVM threads\")        \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}