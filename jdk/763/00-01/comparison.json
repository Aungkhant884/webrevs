{"files":[{"patch":"@@ -3220,1 +3220,11 @@\n-              cpu_to_node()->at_put(j * BitsPerCLong + k, closest_node);\n+              int cpu_index = j * BitsPerCLong + k;\n+\n+#ifndef PRODUCT\n+              if (UseDebuggerErgo1 && cpu_index >= (int)cpu_num) {\n+                \/\/ Some debuggers limit the processor count without\n+                \/\/ intercepting the NUMA APIs. Just fake the values.\n+                cpu_index = 0;\n+              }\n+#endif\n+\n+              cpu_to_node()->at_put(cpu_index, closest_node);\n@@ -4766,2 +4776,2 @@\n-  #ifndef PRODUCT\n-  if (LimitedCPUsDebugging && id >= _processor_count) {\n+#ifndef PRODUCT\n+  if (UseDebuggerErgo1 && id >= _processor_count) {\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":13,"deletions":3,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -3903,0 +3903,16 @@\n+static void apply_debugger_ergo() {\n+  if (UseDebuggerErgo) {\n+    \/\/ Turn on sub-flags\n+    FLAG_SET_ERGO_IF_DEFAULT(UseDebuggerErgo1, true);\n+    FLAG_SET_ERGO_IF_DEFAULT(UseDebuggerErgo2, true);\n+  }\n+\n+  if (UseDebuggerErgo2) {\n+    \/\/ Debugging with limited number of CPUs\n+    FLAG_SET_ERGO_IF_DEFAULT(UseNUMA, false);\n+    FLAG_SET_ERGO_IF_DEFAULT(ConcGCThreads, 1);\n+    FLAG_SET_ERGO_IF_DEFAULT(ParallelGCThreads, 1);\n+    FLAG_SET_ERGO_IF_DEFAULT(CICompilerCount, 2);\n+  }\n+}\n+\n@@ -4099,2 +4115,1 @@\n-  return JNI_OK;\n-}\n+  apply_debugger_ergo();\n@@ -4102,8 +4117,1 @@\n-static void override_for_debugger() {\n-  \/\/ Debugging with limited number of CPUs\n-  if (LimitedCPUsDebugging) {\n-    FLAG_SET_ERGO_IF_DEFAULT(UseNUMA, false);\n-    FLAG_SET_ERGO_IF_DEFAULT(ConcGCThreads, 1);\n-    FLAG_SET_ERGO_IF_DEFAULT(ParallelGCThreads, 1);\n-    FLAG_SET_ERGO_IF_DEFAULT(CICompilerCount, 2);\n-  }\n+  return JNI_OK;\n@@ -4112,1 +4120,0 @@\n-\n@@ -4121,2 +4128,0 @@\n-  override_for_debugger();\n-\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":18,"deletions":13,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -234,3 +234,0 @@\n-  notproduct(bool, LimitedCPUsDebugging, false    ,                         \\\n-          \"For debugging with limited CPUs\")                                \\\n-                                                                            \\\n@@ -2189,0 +2186,11 @@\n+  notproduct(bool, UseDebuggerErgo, false,                                  \\\n+          \"Debugging Only: Adjust the VM to be more debugger-friendly. \"    \\\n+          \"Turns on the other UseDebuggerErgo* flags\")                      \\\n+                                                                            \\\n+  notproduct(bool, UseDebuggerErgo1, false,                                 \\\n+          \"Debugging Only: Enable workarounds for debugger induced \"        \\\n+          \"os::processor_id() >= os::processor_count() problems\")           \\\n+                                                                            \\\n+  notproduct(bool, UseDebuggerErgo2, false,                                 \\\n+          \"Debugging Only: Limit the number of spawned JVM threads\")        \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}