{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,0 +23,2 @@\n+\n+import java.awt.BorderLayout;\n@@ -24,1 +26,5 @@\n-import javax.swing.JApplet;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import javax.swing.JButton;\n@@ -26,0 +32,1 @@\n+import javax.swing.JFrame;\n@@ -28,0 +35,4 @@\n+import javax.swing.JMenuItem;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n@@ -30,0 +41,1 @@\n+import javax.swing.text.JTextComponent;\n@@ -35,2 +47,1 @@\n- * @author Alexander Scherbatiy\n- * @run applet\/manual=yesno bug8031573.html\n+ * @run main\/manual bug8031573\n@@ -38,1 +49,0 @@\n-public class bug8031573 extends JApplet {\n@@ -40,3 +50,5 @@\n-    @Override\n-    public void init() {\n-        try {\n+public class bug8031573 {\n+\n+    private static JFrame frame;\n+    private static volatile boolean passed = false;\n+    private static final CountDownLatch latch = new CountDownLatch(1);\n@@ -44,1 +56,6 @@\n-            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+    public static final String INSTRUCTIONS = \"INSTRUCTIONS:\\n\\n\"\n+            + \"Verify that high resolution system icons are used JCheckBoxMenuItem on HiDPI displays.\\n\"\n+            + \"If the display does not support HiDPI mode press PASS.\\n\"\n+            + \"1. Run the test on HiDPI Display.\\n\"\n+            + \"2. Press the Menu in the applet.\\n\"\n+            + \"3. Check that the icon on the JCheckBoxMenuItem is smooth If so, press PASS, else press FAIL.\\n\";\n@@ -46,1 +63,3 @@\n-            SwingUtilities.invokeAndWait(new Runnable() {\n+    public static void main(String args[]) throws Exception {\n+        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+        SwingUtilities.invokeAndWait(() -> createTestGUI());\n@@ -48,14 +67,6 @@\n-                @Override\n-                public void run() {\n-                    JMenuBar bar = new JMenuBar();\n-                    JMenu menu = new JMenu(\"Menu\");\n-                    JCheckBoxMenuItem checkBoxMenuItem\n-                            = new JCheckBoxMenuItem(\"JCheckBoxMenuItem\");\n-                    checkBoxMenuItem.setSelected(true);\n-                    menu.add(checkBoxMenuItem);\n-                    bar.add(menu);\n-                    setJMenuBar(bar);\n-                }\n-            });\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n+        if (!latch.await(5, TimeUnit.MINUTES)) {\n+            frame.dispose();\n+            throw new RuntimeException(\"Test has timed out!\");\n+        }\n+        if (!passed) {\n+            throw new RuntimeException(\"Test failed!\");\n@@ -64,0 +75,49 @@\n+\n+    private static void createTestGUI() {\n+        frame = new JFrame(\"bug8031573\");\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        JMenuBar bar = new JMenuBar();\n+        JMenu menu = new JMenu(\"Menu\");\n+        JCheckBoxMenuItem checkBoxMenuItem = new JCheckBoxMenuItem(\"JCheckBoxMenuItem\");\n+        checkBoxMenuItem.setSelected(true);\n+        menu.add(checkBoxMenuItem);\n+        bar.add(menu);\n+        frame.setJMenuBar(bar);\n+\n+        JPanel panel = new JPanel(new BorderLayout());\n+        JTextComponent textComponent = new JTextArea(INSTRUCTIONS);\n+        textComponent.setEditable(false);\n+        panel.add(textComponent, BorderLayout.CENTER);\n+\n+        JPanel buttonsPanel = new JPanel(new FlowLayout());\n+        JButton passButton = new JButton(\"Pass\");\n+        passButton.addActionListener((e) -> {\n+            System.out.println(\"Test passed!\");\n+            passed = true;\n+            latch.countDown();\n+            frame.dispose();\n+        });\n+        JButton failsButton = new JButton(\"Fail\");\n+        failsButton.addActionListener((e) -> {\n+            passed = false;\n+            latch.countDown();\n+            frame.dispose();\n+            throw new RuntimeException(\"Test Failed!\");\n+        });\n+\n+        buttonsPanel.add(passButton);\n+        buttonsPanel.add(failsButton);\n+        panel.add(buttonsPanel, BorderLayout.SOUTH);\n+\n+        frame.getContentPane().add(panel);\n+\n+        frame.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowClosing(WindowEvent e) {\n+                latch.countDown();\n+            }\n+        });\n+        frame.setSize(760, 250);\n+        frame.setLocation(0, 250);\n+        frame.setVisible(true);\n+    }\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/8031573\/bug8031573.java","additions":84,"deletions":24,"binary":false,"changes":108,"status":"modified"}]}