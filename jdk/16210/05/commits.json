[{"commit":{"message":"alternative implementation"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java"},{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.java"},{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.out"}],"sha":"43f5fb74212a7abcebe39d28feb0fd539d4a1e7c"},{"commit":{"message":"forgot to add parameter to method"},"files":[{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.java"}],"sha":"733773262962b415d91a9322f004306b3996af43"},{"commit":{"message":"fixing bug in test"},"files":[{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.java"},{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.out"}],"sha":"be5760d51d20cc512a4bdaf5395817065d5b662c"},{"commit":{"message":"additional test"},"files":[{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.java"},{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.out"}],"sha":"0ddafd4d3d46d2acbc9b4350ccfe0bd07ca5178e"},{"commit":{"message":"additional fix"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java"}],"sha":"d540b00a6a4b9d3b7481dbce819c72c0f5e5311d"},{"commit":{"message":"8318160: javac does not reject private method reference with type-variable receiver"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java"},{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.java"},{"filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.out"}],"sha":"40276e923a29c4772e01e2821bcdd2f72cdf8a5d"}]