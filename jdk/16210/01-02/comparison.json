{"files":[{"patch":"@@ -15,1 +15,5 @@\n-    static <T extends Test> Function<T, String> foo() {\n+    private String asString2() {\n+        return \"bar\";\n+    }\n+\n+    static <T extends Test> Function<T, String> m1() {\n@@ -18,0 +22,4 @@\n+\n+    static <T extends Test> Function<T, String> m2(T t) {\n+        return t::asString2;\n+    }\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,3 +1,5 @@\n-PrivateMethodReferenceWithTypeVarTest.java:15:23: compiler.err.cant.resolve.location: kindname.class, Test, , , (compiler.misc.location: kindname.class, PrivateMethodReferenceWithTypeVarTest, null)\n-PrivateMethodReferenceWithTypeVarTest.java:16:16: compiler.err.invalid.mref: kindname.method, (compiler.misc.cant.resolve.location.args: kindname.method, asString, , T, (compiler.misc.location: kindname.type.variable.bound, T, null))\n-2 errors\n+PrivateMethodReferenceWithTypeVarTest.java:19:23: compiler.err.cant.resolve.location: kindname.class, Test, , , (compiler.misc.location: kindname.class, PrivateMethodReferenceWithTypeVarTest, null)\n+PrivateMethodReferenceWithTypeVarTest.java:23:23: compiler.err.cant.resolve.location: kindname.class, Test, , , (compiler.misc.location: kindname.class, PrivateMethodReferenceWithTypeVarTest, null)\n+PrivateMethodReferenceWithTypeVarTest.java:20:16: compiler.err.invalid.mref: kindname.method, (compiler.misc.cant.resolve.location.args: kindname.method, asString, , T, (compiler.misc.location: kindname.type.variable.bound, T, null))\n+PrivateMethodReferenceWithTypeVarTest.java:24:16: compiler.err.invalid.mref: kindname.method, (compiler.misc.cant.resolve.location.args: kindname.method, asString2, , T, (compiler.misc.location: kindname.type.variable.bound, T, null))\n+4 errors\n","filename":"test\/langtools\/tools\/javac\/lambda\/methodReference\/PrivateMethodReferenceWithTypeVarTest.out","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}