{"files":[{"patch":"@@ -772,13 +772,0 @@\n-    static String newStringNoRepl(byte[] src, Charset cs) throws CharacterCodingException {\n-        try {\n-            return newStringNoRepl1(src, cs);\n-        } catch (IllegalArgumentException e) {\n-            \/\/newStringNoRepl1 throws IAE with MalformedInputException or CCE as the cause\n-            Throwable cause = e.getCause();\n-            if (cause instanceof MalformedInputException mie) {\n-                throw mie;\n-            }\n-            throw (CharacterCodingException)cause;\n-        }\n-    }\n-\n@@ -786,1 +773,1 @@\n-    private static String newStringNoRepl1(byte[] src, Charset cs) {\n+    static String newStringNoRepl(byte[] src, Charset cs) {\n@@ -944,17 +931,1 @@\n-    \/*\n-     * Throws CCE, instead of replacing, if unmappable.\n-     *\/\n-    static byte[] getBytesNoRepl(String s, Charset cs) throws CharacterCodingException {\n-        try {\n-            return getBytesNoRepl1(s, cs);\n-        } catch (IllegalArgumentException e) {\n-            \/\/getBytesNoRepl1 throws IAE with UnmappableCharacterException or CCE as the cause\n-            Throwable cause = e.getCause();\n-            if (cause instanceof UnmappableCharacterException) {\n-                throw (UnmappableCharacterException)cause;\n-            }\n-            throw (CharacterCodingException)cause;\n-        }\n-    }\n-\n-    private static byte[] getBytesNoRepl1(String s, Charset cs) {\n+    static byte[] getBytesNoRepl(String s, Charset cs) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":2,"deletions":31,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -51,1 +51,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -2476,1 +2475,1 @@\n-            public String newStringNoRepl(byte[] bytes, Charset cs) throws CharacterCodingException  {\n+            public String newStringNoRepl(byte[] bytes, Charset cs) {\n@@ -2482,1 +2481,1 @@\n-            public byte[] getBytesNoRepl(String s, Charset cs) throws CharacterCodingException {\n+            public byte[] getBytesNoRepl(String s, Charset cs) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -468,6 +467,2 @@\n-        try {\n-            \/\/ Return a new string using the bytes without making a copy\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n+        \/\/ Return a new string using the bytes without making a copy\n+        return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -703,5 +698,1 @@\n-        try {\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n+        return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -739,5 +730,1 @@\n-        try {\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n+        return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -767,5 +754,1 @@\n-        try {\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n+        return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -803,5 +786,1 @@\n-        try {\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n+        return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n@@ -831,5 +810,1 @@\n-        try {\n-            return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n+        return jla.newStringNoRepl(rep, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.base\/share\/classes\/java\/util\/HexFormat.java","additions":7,"deletions":32,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -502,5 +501,1 @@\n-        try {\n-            return jla.newStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n-        } catch (CharacterCodingException cce) {\n-            throw new AssertionError(cce);\n-        }\n+        return jla.newStringNoRepl(buf, StandardCharsets.ISO_8859_1);\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -318,2 +318,6 @@\n-            } catch (CharacterCodingException e) {\n-                return Comparison.NO_MATCH;\n+            } catch (IllegalArgumentException e) {\n+                Throwable cause = e.getCause();\n+                if (cause instanceof CharacterCodingException) {\n+                    return Comparison.NO_MATCH;\n+                }\n+                throw e;\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -317,1 +316,1 @@\n-     * @throws CharacterCodingException for malformed or unmappable bytes\n+     * @throws IllegalArgumentException for malformed or unmappable bytes\n@@ -319,1 +318,1 @@\n-    String newStringNoRepl(byte[] bytes, Charset cs) throws CharacterCodingException;\n+    String newStringNoRepl(byte[] bytes, Charset cs);\n@@ -327,1 +326,1 @@\n-     * This method throws CharacterCodingException instead of replacing when\n+     * This method throws IllegalArgumentException instead of replacing when\n@@ -333,1 +332,1 @@\n-     * @throws CharacterCodingException for malformed input or unmappable characters\n+     * @throws IllegalArgumentException for malformed input or unmappable characters\n@@ -335,1 +334,1 @@\n-    byte[] getBytesNoRepl(String s, Charset cs) throws CharacterCodingException;\n+    byte[] getBytesNoRepl(String s, Charset cs);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangAccess.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.nio.charset.CharacterCodingException;\n@@ -130,1 +129,1 @@\n-        } catch (CharacterCodingException cce) {\n+        } catch (IllegalArgumentException iae) {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -62,2 +62,7 @@\n-        } catch (CharacterCodingException cce) {\n-            \/\/ success\n+        } catch (IllegalArgumentException e) {\n+            Throwable cause = e.getCause();\n+            if (cause instanceof CharacterCodingException) {\n+                \/\/ success\n+            } else {\n+                throw e;\n+            }\n@@ -79,2 +84,7 @@\n-        } catch (CharacterCodingException cce) {\n-            \/\/ success\n+        } catch (IllegalArgumentException e) {\n+            Throwable cause = e.getCause();\n+            if (cause instanceof CharacterCodingException) {\n+                \/\/ success\n+            } else {\n+                throw e;\n+            }\n","filename":"test\/jdk\/java\/lang\/String\/NoReplTest.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"}]}