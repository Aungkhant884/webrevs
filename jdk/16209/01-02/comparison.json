{"files":[{"patch":"@@ -43,0 +43,1 @@\n+import java.nio.charset.CharacterCodingException;\n@@ -3354,1 +3355,8 @@\n-        return JLA.newStringNoRepl(ba, cs);\n+        try {\n+            return JLA.newStringNoRepl(ba, cs);\n+        } catch (IllegalArgumentException e) {\n+            if (e.getCause() instanceof CharacterCodingException cause) {\n+                throw cause;\n+            }\n+            throw e;\n+        }\n@@ -3716,1 +3724,9 @@\n-        byte[] bytes = JLA.getBytesNoRepl(String.valueOf(csq), cs);\n+        byte[] bytes;\n+        try {\n+            bytes = JLA.getBytesNoRepl(String.valueOf(csq), cs);\n+        } catch (IllegalArgumentException e) {\n+            if (e.getCause() instanceof CharacterCodingException cause) {\n+                throw cause;\n+            }\n+            throw e;\n+        }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Files.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -319,2 +319,1 @@\n-                Throwable cause = e.getCause();\n-                if (cause instanceof CharacterCodingException) {\n+                if (e.getCause() instanceof CharacterCodingException) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,2 +63,1 @@\n-            Throwable cause = e.getCause();\n-            if (cause instanceof CharacterCodingException) {\n+            if (e.getCause() instanceof CharacterCodingException) {\n","filename":"test\/jdk\/java\/lang\/String\/NoReplTest.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}