{"files":[{"patch":"@@ -1,104 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!--\n- Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n-\n- Redistribution and use in source and binary forms, with or without\n- modification, are permitted provided that the following conditions\n- are met:\n-\n-   - Redistributions of source code must retain the above copyright\n-     notice, this list of conditions and the following disclaimer.\n-\n-   - Redistributions in binary form must reproduce the above copyright\n-     notice, this list of conditions and the following disclaimer in the\n-     documentation and\/or other materials provided with the distribution.\n-\n-   - Neither the name of Oracle nor the names of its\n-     contributors may be used to endorse or promote products derived\n-     from this software without specific prior written permission.\n-\n- THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n- IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n- THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n- PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n- CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n- EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n- PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n- PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n- LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n- NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--->\n-\n-<project xmlns=\"http:\/\/maven.apache.org\/POM\/4.0.0\" xmlns:xsi=\"http:\/\/www.w3.org\/2001\/XMLSchema-instance\" xsi:schemaLocation=\"http:\/\/maven.apache.org\/POM\/4.0.0 http:\/\/maven.apache.org\/xsd\/maven-4.0.0.xsd\">\n-    <modelVersion>4.0.0<\/modelVersion>\n-    <parent>\n-        <artifactId>IdealGraphVisualizer-parent<\/artifactId>\n-        <groupId>com.sun.hotspot.igv<\/groupId>\n-        <version>1.0-SNAPSHOT<\/version>\n-    <\/parent>\n-    <groupId>com.sun.hotspot.igv<\/groupId>\n-    <artifactId>Graal<\/artifactId>\n-    <version>1.0-SNAPSHOT<\/version>\n-    <packaging>nbm<\/packaging>\n-    <name>Graal<\/name>\n-    <properties>\n-        <project.build.sourceEncoding>UTF-8<\/project.build.sourceEncoding>\n-    <\/properties>\n-    <dependencies>\n-        <dependency>\n-            <groupId>com.sun.hotspot.igv<\/groupId>\n-            <artifactId>Data<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>com.sun.hotspot.igv<\/groupId>\n-            <artifactId>Filter<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>com.sun.hotspot.igv<\/groupId>\n-            <artifactId>Layout<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n-            <groupId>com.sun.hotspot.igv<\/groupId>\n-            <artifactId>Graph<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-    <\/dependencies>\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.netbeans.utilities<\/groupId>\n-                <artifactId>nbm-maven-plugin<\/artifactId>\n-                <version>${nbmmvnplugin.version}<\/version>\n-                <extensions>true<\/extensions>\n-            <\/plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins<\/groupId>\n-                <artifactId>maven-compiler-plugin<\/artifactId>\n-                <version>${mvncompilerplugin.version}<\/version>\n-                <configuration>\n-                    <source>1.8<\/source>\n-                    <target>1.8<\/target>\n-                <\/configuration>\n-            <\/plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins<\/groupId>\n-                <artifactId>maven-jar-plugin<\/artifactId>\n-                <version>${mvnjarplugin.version}<\/version>\n-                <configuration>\n-                    <!-- to have the jar plugin pickup the nbm generated manifest -->\n-                    <archive>\n-                        <manifestFile>${project.build.outputDirectory}\/META-INF\/MANIFEST.MF<\/manifestFile>\n-                    <\/archive>\n-                <\/configuration>\n-            <\/plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins<\/groupId>\n-                <artifactId>maven-enforcer-plugin<\/artifactId>\n-            <\/plugin>\n-        <\/plugins>\n-    <\/build>\n-<\/project>\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/pom.xml","additions":0,"deletions":104,"binary":false,"changes":104,"status":"deleted"},{"patch":"@@ -1,89 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.graal.filters;\n-\n-import com.sun.hotspot.igv.data.Properties;\n-import com.sun.hotspot.igv.filter.AbstractFilter;\n-import com.sun.hotspot.igv.graph.FigureConnection;\n-import com.sun.hotspot.igv.graph.Diagram;\n-import com.sun.hotspot.igv.graph.Figure;\n-import com.sun.hotspot.igv.graph.InputSlot;\n-import com.sun.hotspot.igv.graph.OutputSlot;\n-import java.util.HashSet;\n-import java.util.Set;\n-\n-public class GraalCFGFilter extends AbstractFilter {\n-\n-    @Override\n-    public String getName() {\n-        return \"Graal CFG Filter\";\n-    }\n-\n-    @Override\n-    public void apply(Diagram d) {\n-        Set<FigureConnection> connectionsToRemove = new HashSet<>();\n-\n-        for (Figure f : d.getFigures()) {\n-            Properties p = f.getProperties();\n-            int predCount;\n-            String predCountString = p.get(\"predecessorCount\");\n-            if (predCountString != null) {\n-                predCount = Integer.parseInt(predCountString);\n-            } else if (Boolean.parseBoolean(p.get(\"hasPredecessor\"))) {\n-                predCount = 1;\n-            } else {\n-                predCount = 0;\n-            }\n-            for (InputSlot is : f.getInputSlots()) {\n-                if (is.getPosition() >= predCount && !\"EndNode\".equals(is.getProperties().get(\"class\"))) {\n-                    for (FigureConnection c : is.getConnections()) {\n-                        if (!\"EndNode\".equals(c.getOutputSlot().getFigure().getProperties().get(\"class\"))) {\n-                            connectionsToRemove.add(c);\n-                        }\n-                    }\n-                }\n-            }\n-        }\n-\n-        for (FigureConnection c : connectionsToRemove) {\n-            c.remove();\n-        }\n-\n-        Set<Figure> figuresToRemove = new HashSet<>();\n-        next: for (Figure f : d.getFigures()) {\n-            for (InputSlot is : f.getInputSlots()) {\n-                if (!is.getConnections().isEmpty()) {\n-                    continue next;\n-                }\n-            }\n-            for (OutputSlot os : f.getOutputSlots()) {\n-                if (!os.getConnections().isEmpty()) {\n-                    continue next;\n-                }\n-            }\n-            figuresToRemove.add(f);\n-        }\n-        d.removeAllFigures(figuresToRemove);\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/java\/com\/sun\/hotspot\/igv\/graal\/filters\/GraalCFGFilter.java","additions":0,"deletions":89,"binary":false,"changes":89,"status":"deleted"},{"patch":"@@ -1,81 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2015, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.graal.filters;\n-\n-import com.sun.hotspot.igv.data.Properties;\n-import com.sun.hotspot.igv.filter.AbstractFilter;\n-import com.sun.hotspot.igv.graph.Diagram;\n-import com.sun.hotspot.igv.graph.Figure;\n-import java.awt.Color;\n-import java.util.List;\n-\n-public class GraalColoringFilter extends AbstractFilter {\n-\n-    private String colorName;\n-\n-    public GraalColoringFilter(String colorName) {\n-        this.colorName = colorName;\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return \"Graal Coloring Filter (\" + colorName + \")\";\n-    }\n-\n-    @Override\n-    public void apply(Diagram d) {\n-        List<Figure> figures = d.getFigures();\n-        int colors = 0;\n-        for (Figure f : figures) {\n-            Properties p = f.getProperties();\n-            final String prop = p.get(colorName + \"Color\");\n-            if (prop == null) {\n-                continue;\n-            }\n-            try {\n-                int color = Integer.parseInt(prop);\n-                if (color > colors) {\n-                    colors = color;\n-                }\n-            } catch (NumberFormatException nfe) {\n-                \/\/ nothing to do\n-            }\n-        }\n-        colors++;\n-        for (Figure f : figures) {\n-            Properties p = f.getProperties();\n-            final String prop = p.get(colorName + \"Color\");\n-            if (prop == null) {\n-                continue;\n-            }\n-            try {\n-                int color = Integer.parseInt(prop);\n-                Color c = Color.getHSBColor((float) color \/ colors, 1.0f, 0.7f);\n-                f.setColor(c);\n-            } catch (NumberFormatException nfe) {\n-                \/\/ nothing to do\n-            }\n-        }\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/java\/com\/sun\/hotspot\/igv\/graal\/filters\/GraalColoringFilter.java","additions":0,"deletions":81,"binary":false,"changes":81,"status":"deleted"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-package com.sun.hotspot.igv.graal.filters;\n-\n-import com.sun.hotspot.igv.filter.AbstractFilter;\n-import com.sun.hotspot.igv.graph.Diagram;\n-import java.awt.Color;\n-import java.util.HashMap;\n-\n-\/**\n- * Filter that colors usage and successor edges differently.\n- *\n- * @author Peter Hofer\n- *\/\n-public class GraalEdgeColorFilter extends AbstractFilter {\n-\n-    private final HashMap<String,Color> usageColor = new HashMap<>();\n-    private Color otherUsageColor = Color.BLACK;\n-\n-    public GraalEdgeColorFilter() {\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return \"Graal Edge Color Filter\";\n-    }\n-\n-    @Override\n-    public void apply(Diagram d) {\n-    }\n-\n-    public Color getUsageColor(String type) {\n-        return usageColor.get(type);\n-    }\n-\n-    public void setUsageColor(String type, Color usageColor) {\n-        this.usageColor.put(type, usageColor);\n-    }\n-\n-    public Color getOtherUsageColor() {\n-        return otherUsageColor;\n-    }\n-\n-    public void setOtherUsageColor(Color otherUsageColor) {\n-        this.otherUsageColor = otherUsageColor;\n-    }\n-}\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/java\/com\/sun\/hotspot\/igv\/graal\/filters\/GraalEdgeColorFilter.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"},{"patch":"@@ -1,6 +0,0 @@\n-Manifest-Version: 1.0\n-OpenIDE-Module: com.sun.hotspot.igv.graal\n-OpenIDE-Module-Layer: com\/sun\/hotspot\/igv\/graal\/layer.xml\n-OpenIDE-Module-Localizing-Bundle: com\/sun\/hotspot\/igv\/graal\/Bundle.properties\n-OpenIDE-Module-Specification-Version: 1.0\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/nbm\/manifest.mf","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"@@ -1,1 +0,0 @@\n-OpenIDE-Module-Name=Graal Compiler Support\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/Bundle.properties","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-colorize(\"name\", \"<init>.*\", yellow);\n-colorize(\"name\", \"<clinit>.*\", pink);\n-colorize(\"leaf\", \"1\", lightGray);\n-colorize(\"cutoff\", \"1\", red);\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/filters\/callgraph.filter","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,31 +0,0 @@\n-var red =  new java.awt.Color(240, 59, 32);\n-var orange = new java.awt.Color(254, 178, 76);\n-var yellow = new java.awt.Color(255, 237, 160);\n-var middleBlue = new java.awt.Color(100, 147, 224);\n-var lightGreen = new java.awt.Color(173, 221, 142);\n-var lightBlue = new java.awt.Color(200, 200, 250);\n-var gray = new java.awt.Color(220, 220, 220);\n-var violet = new java.awt.Color(201, 148, 199);\n-var black = new java.awt.Color(0, 0, 0);\n-\n-colorize(\"category\", \"controlSink\", red);\n-colorize(\"category\", \"controlSplit\", red);\n-colorize(\"category\", \"merge\", red);\n-colorize(\"category\", \"begin\", orange);\n-colorize(\"category\", \"end\", orange);\n-colorize(\"category\", \"fixed\", yellow);\n-colorize(\"category\", \"state\", lightGreen);\n-colorize(\"category\", \"phi\", middleBlue);\n-colorize(\"category\", \"proxy\", middleBlue);\n-colorize(\"category\", \"floating\", lightBlue);\n-colorize(\"class\", \"ConstantLocationNode\", gray);\n-colorize(\"class\", \"ParameterNode\", gray);\n-colorize(\"class\", \"ConstantNode\", gray);\n-colorize(\"class\", \"GuardNode\", violet);\n-colorize(\"class\", \"BlackholeNode\", black);\n-\n-var f = new com.sun.hotspot.igv.graal.filters.GraalEdgeColorFilter();\n-f.setUsageColor(\"Successor\", red);\n-f.setUsageColor(\"Value\", blue);\n-f.setUsageColor(\"Memory\", new Color(0.0, 0.5, 0.0));\n-f.apply(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/filters\/color.filter","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,3 +0,0 @@\n-colorizeGradientWithMode(\"probability\", 0, 500, \"logarithmic\");\n-\n-\/\/ more parameters: colorizeGradientCustom(\"probability\", 0, 500, \"logarithmic\", [blue, yellow, red], [0, 0.5, 1], 16);\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/filters\/probability.filter","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -1,3 +0,0 @@\n-split(\"class\", \"ConstantLocationNode\");\n-split(\"class\", \"ParameterNode\");\n-split(\"class\", \"ConstantNode\");\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/filters\/reduceEdges.filter","additions":0,"deletions":3,"binary":false,"changes":3,"status":"deleted"},{"patch":"@@ -1,4 +0,0 @@\n-remove(\"category\", \"floating\");\n-remove(\"category\", \"state\");\n-remove(\"category\", \"phi\");\n-remove(\"category\", \"proxy\");\n\\ No newline at end of file\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/filters\/removeFloating.filter","additions":0,"deletions":4,"binary":false,"changes":4,"status":"deleted"},{"patch":"@@ -1,1 +0,0 @@\n-remove(\"category\", \"state\");\n\\ No newline at end of file\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/filters\/removeState.filter","additions":0,"deletions":1,"binary":false,"changes":1,"status":"deleted"},{"patch":"@@ -1,16 +0,0 @@\n-var red =  new java.awt.Color(240, 59, 32);\n-var orange = new java.awt.Color(254, 178, 76);\n-var yellow = new java.awt.Color(255, 237, 160);\n-var middleBlue = new java.awt.Color(100, 147, 224);\n-var lightGreen = new java.awt.Color(173, 221, 142);\n-var lightBlue = new java.awt.Color(200, 200, 250);\n-var gray = new java.awt.Color(220, 220, 220);\n-var violet = new java.awt.Color(201, 148, 199);\n-\n-colorize(\"stamp\", \".*\", white);\n-colorize(\"stamp\", \"void\", gray);\n-colorize(\"stamp\", \"a.*\", yellow);\n-colorize(\"stamp\", \"a#.*\", orange);\n-colorize(\"stamp\", \"a!.*\", red);\n-colorize(\"stamp\", \"i.*\", middleBlue);\n-colorize(\"stamp\", \"f.*\", lightGreen);\n\\ No newline at end of file\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/filters\/stampColor.filter","additions":0,"deletions":16,"binary":false,"changes":16,"status":"deleted"},{"patch":"@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE filesystem PUBLIC \"-\/\/NetBeans\/\/DTD Filesystem 1.1\/\/EN\" \"http:\/\/www.netbeans.org\/dtds\/filesystem-1_1.dtd\">\n-<filesystem>\n-    <folder name=\"Filters\">\n-    <\/folder>\n-<\/filesystem>\n","filename":"src\/utils\/IdealGraphVisualizer\/Graal\/src\/main\/resources\/com\/sun\/hotspot\/igv\/graal\/layer.xml","additions":0,"deletions":6,"binary":false,"changes":6,"status":"deleted"},{"patch":"@@ -141,5 +141,0 @@\n-            <groupId>${project.groupId}<\/groupId>\n-            <artifactId>Graal<\/artifactId>\n-            <version>${project.version}<\/version>\n-        <\/dependency>\n-        <dependency>\n","filename":"src\/utils\/IdealGraphVisualizer\/application\/pom.xml","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -109,1 +109,0 @@\n-        <module>Graal<\/module>\n","filename":"src\/utils\/IdealGraphVisualizer\/pom.xml","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}