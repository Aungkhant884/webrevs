{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import java.util.List;\n@@ -51,18 +52,6 @@\n-        tb.checkEqual(Arrays.asList(\"1\", \"1\", \"public class T {\"),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(0)),\n-                        Integer.toString(ds.getColumnNumber(0, false)), ds.getLine(0)));\n-        tb.checkEqual(Arrays.asList(\"1\", \"4\", \"public class T {\"),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(3)),\n-                        Integer.toString(ds.getColumnNumber(3, false)), ds.getLine(3)));\n-        tb.checkEqual(Arrays.asList(\"2\", \"1\", \"}\"),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(17)),\n-                        Integer.toString(ds.getColumnNumber(17, false)), ds.getLine(17)));\n-        tb.checkEqual(Arrays.asList(\"0\", \"0\", null),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(18)),\n-                        Integer.toString(ds.getColumnNumber(18, false)), ds.getLine(18)));\n-        tb.checkEqual(Arrays.asList(\"0\", \"0\", null),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(19)),\n-                        Integer.toString(ds.getColumnNumber(19, false)), ds.getLine(19)));\n-        tb.checkEqual(Arrays.asList(\"0\", \"0\", null),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(20)),\n-                        Integer.toString(ds.getColumnNumber(20, false)), ds.getLine(20)));\n+        tb.checkEqual(Arrays.asList(\"1\", \"1\", \"public class T {\"), getActualOutputList(ds, 0));\n+        tb.checkEqual(Arrays.asList(\"1\", \"4\", \"public class T {\"), getActualOutputList(ds, 3));\n+        tb.checkEqual(Arrays.asList(\"2\", \"1\", \"}\"), getActualOutputList(ds, 17));\n+        tb.checkEqual(Arrays.asList(\"0\", \"0\", null), getActualOutputList(ds,18));\n+        tb.checkEqual(Arrays.asList(\"0\", \"0\", null), getActualOutputList(ds, 19));\n+        tb.checkEqual(Arrays.asList(\"0\", \"0\", null), getActualOutputList(ds, 20));\n@@ -73,18 +62,13 @@\n-        tb.checkEqual(Arrays.asList(\"1\", \"1\", \"public class T {\"),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(0)),\n-                        Integer.toString(ds.getColumnNumber(0, false)), ds.getLine(0)));\n-        tb.checkEqual(Arrays.asList(\"1\", \"4\", \"public class T {\"),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(3)),\n-                        Integer.toString(ds.getColumnNumber(3, false)), ds.getLine(3)));\n-        tb.checkEqual(Arrays.asList(\"2\", \"1\", \"}\"),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(17)),\n-                        Integer.toString(ds.getColumnNumber(17, false)), ds.getLine(17)));\n-        tb.checkEqual(Arrays.asList(\"2\", \"2\", \"}\"),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(18)),\n-                        Integer.toString(ds.getColumnNumber(18, false)), ds.getLine(18)));\n-        tb.checkEqual(Arrays.asList(\"0\", \"0\", null),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(19)),\n-                        Integer.toString(ds.getColumnNumber(19, false)), ds.getLine(19)));\n-        tb.checkEqual(Arrays.asList(\"0\", \"0\", null),\n-                Arrays.asList(Integer.toString(ds.getLineNumber(20)),\n-                        Integer.toString(ds.getColumnNumber(20, false)), ds.getLine(20)));\n+        tb.checkEqual(Arrays.asList(\"1\", \"1\", \"public class T {\"), getActualOutputList(ds, 0));\n+        tb.checkEqual(Arrays.asList(\"1\", \"4\", \"public class T {\"), getActualOutputList(ds, 3));\n+        tb.checkEqual(Arrays.asList(\"2\", \"1\", \"}\"), getActualOutputList(ds, 17));\n+        tb.checkEqual(Arrays.asList(\"2\", \"2\", \"}\"), getActualOutputList(ds, 18));\n+        tb.checkEqual(Arrays.asList(\"0\", \"0\", null), getActualOutputList(ds, 19));\n+        tb.checkEqual(Arrays.asList(\"0\", \"0\", null), getActualOutputList(ds, 20));\n+    }\n+\n+    public static List<String> getActualOutputList(DiagnosticSource ds, int pos) {\n+        return Arrays.asList(\n+                Integer.toString(ds.getLineNumber(pos)),\n+                Integer.toString(ds.getColumnNumber(pos, false)),\n+                ds.getLine(pos));\n","filename":"test\/langtools\/tools\/javac\/diags\/DiagnosticSourceTest.java","additions":20,"deletions":36,"binary":false,"changes":56,"status":"modified"}]}