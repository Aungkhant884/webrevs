{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,12 +29,8 @@\n- * A {@code FilterInputStream} contains\n- * some other input stream, which it uses as\n- * its  basic source of data, possibly transforming\n- * the data along the way or providing  additional\n- * functionality. The class {@code FilterInputStream}\n- * itself simply overrides all  methods of\n- * {@code InputStream} with versions that\n- * pass all requests to the contained  input\n- * stream. Subclasses of {@code FilterInputStream}\n- * may further override some of  these methods\n- * and may also provide additional methods\n- * and fields.\n+ * A {@code FilterInputStream} wraps some other input stream, which it uses as\n+ * its basic source of data, possibly transforming the data along the way or\n+ * providing additional functionality. The class {@code FilterInputStream}\n+ * itself simply overrides select methods of {@code InputStream} with versions\n+ * that pass all requests to the wrapped input stream. Subclasses of\n+ * {@code FilterInputStream} may of course override any methods declared or\n+ * inherited by {@code FilterInputStream}, and may also provide additional\n+ * fields and methods.\n@@ -72,3 +68,3 @@\n-     * <p>\n-     * This method\n-     * simply performs {@code in.read()} and returns the result.\n+     *\n+     * @implSpec\n+     * This method simply performs {@code in.read()} and returns the result.\n@@ -81,0 +77,1 @@\n+    @Override\n@@ -89,1 +86,2 @@\n-     * <p>\n+     *\n+     * @implSpec\n@@ -105,0 +103,1 @@\n+    @Override\n@@ -114,1 +113,2 @@\n-     * <p>\n+     *\n+     * @implSpec\n@@ -131,0 +131,1 @@\n+    @Override\n@@ -141,2 +142,3 @@\n-     * <p>\n-     * This method simply performs {@code in.skip(n)}.\n+     *\n+     * @implSpec\n+     * This method simply performs {@code in.skip(n)} and returns the result.\n@@ -148,0 +150,1 @@\n+    @Override\n@@ -158,2 +161,0 @@\n-     * <p>\n-     * This method returns the result of {@link #in in}.available().\n@@ -161,2 +162,5 @@\n-     * @return     an estimate of the number of bytes that can be read (or skipped\n-     *             over) from this input stream without blocking.\n+     * @implSpec\n+     * This method returns the result of {@code in.available()}.\n+     *\n+     * @return     an estimate of the number of bytes that can be read (or\n+     *             skipped over) from this input stream without blocking.\n@@ -165,0 +169,1 @@\n+    @Override\n@@ -172,2 +177,3 @@\n-     * This\n-     * method simply performs {@code in.close()}.\n+     *\n+     * @implSpec\n+     * This method simply performs {@code in.close()}.\n@@ -178,0 +184,1 @@\n+    @Override\n@@ -190,1 +197,2 @@\n-     * <p>\n+     *\n+     * @implSpec\n@@ -198,0 +206,1 @@\n+    @Override\n@@ -206,3 +215,0 @@\n-     * This method\n-     * simply performs {@code in.reset()}.\n-     * <p>\n@@ -218,0 +224,3 @@\n+     * @implSpec\n+     * This method simply performs {@code in.reset()}.\n+     *\n@@ -223,0 +232,1 @@\n+    @Override\n@@ -230,2 +240,3 @@\n-     * This method\n-     * simply performs {@code in.markSupported()}.\n+     *\n+     * @implSpec\n+     * This method simply performs {@code in.markSupported()}.\n@@ -240,0 +251,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/io\/FilterInputStream.java","additions":44,"deletions":32,"binary":false,"changes":76,"status":"modified"}]}