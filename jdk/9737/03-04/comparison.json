{"files":[{"patch":"@@ -2492,1 +2492,9 @@\n-    int cast_vopc = VectorCastNode::opcode(elem_bt_from, !is_ucast);\n+    BasicType new_elem_bt_to = elem_bt_to;\n+    BasicType new_elem_bt_from = elem_bt_from;\n+    if (is_mask && is_floating_point_type(elem_bt_from)) {\n+      new_elem_bt_from = elem_bt_from == T_FLOAT ? T_INT : T_LONG;\n+    }\n+    if (is_mask && is_floating_point_type(elem_bt_to)) {\n+      new_elem_bt_to = elem_bt_to == T_FLOAT ? T_INT : T_LONG;\n+    }\n+    int cast_vopc = VectorCastNode::opcode(new_elem_bt_from, !is_ucast);\n@@ -2494,3 +2502,4 @@\n-    \/\/ Make sure that vector cast is implemented to particular type\/size combination if it is not\n-    \/\/ a mask casting.\n-    if (!is_mask && !arch_supports_vector(cast_vopc, num_elem_to, elem_bt_to, VecMaskNotUsed)) {\n+    \/\/ Make sure that vector cast is implemented to particular type\/size combination.\n+    bool no_vec_cast_check = is_mask && (src_type->isa_vectmask() ||\n+                             type2aelembytes(elem_bt_from) == type2aelembytes(elem_bt_to));\n+    if (!no_vec_cast_check && !arch_supports_vector(cast_vopc, num_elem_to, new_elem_bt_to, VecMaskNotUsed)) {\n@@ -2499,1 +2508,1 @@\n-                      cast_vopc, num_elem_to, type2name(elem_bt_to), is_mask);\n+                      cast_vopc, num_elem_to, type2name(new_elem_bt_to), is_mask);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":14,"deletions":5,"binary":false,"changes":19,"status":"modified"}]}