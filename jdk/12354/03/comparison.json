{"files":[{"patch":"@@ -620,1 +620,0 @@\n-java\/security\/Policy\/Root\/Root.java                             8299994 generic-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -638,1 +638,2 @@\n-    sun\/security\/tools\/jarsigner\/compatibility\/Compatibility.java\n+    sun\/security\/tools\/jarsigner\/compatibility\/Compatibility.java \\\n+    java\/security\/Policy\/Root\/Root.java\n","filename":"test\/jdk\/TEST.groups","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n- * @run testng\/othervm Root\n+ * @run testng\/othervm\/manual Root\n@@ -33,0 +33,5 @@\n+\/*\n+* Run test as root user.\n+* *\/\n+\n+import jdk.test.lib.Platform;\n@@ -38,0 +43,1 @@\n+import java.io.BufferedReader;\n@@ -39,0 +45,1 @@\n+import java.io.InputStreamReader;\n@@ -50,0 +57,2 @@\n+    private static final Path BACKUP = Paths.get(ROOT, \".backup.policy\");\n+    private static final String ROOT_USER_ID = \"0\";\n@@ -53,0 +62,4 @@\n+        \/\/ Backup user policy file if it already exists\n+        if (TARGET.toFile().exists()) {\n+            Files.copy(TARGET, BACKUP, StandardCopyOption.REPLACE_EXISTING);\n+        }\n@@ -59,0 +72,5 @@\n+        \/\/ Restore original policy file if backup exists\n+        if (BACKUP.toFile().exists()) {\n+            Files.copy(BACKUP, TARGET, StandardCopyOption.REPLACE_EXISTING);\n+            Files.delete(BACKUP);\n+        }\n@@ -62,1 +80,21 @@\n-    private void test() {\n+    private void test() throws InterruptedException, IOException {\n+        System.out.println(\"Run test as root user.\");\n+\n+        if (!Platform.isWindows()) {\n+            Process process = Runtime.getRuntime().exec(\"id -u\");\n+            process.waitFor();\n+            if (process.exitValue() != 0) {\n+                throw new RuntimeException(\"Failed to retrieve user id.\");\n+            }\n+\n+            try (BufferedReader reader = new BufferedReader(\n+                    new InputStreamReader(process.getInputStream()))) {\n+                String line = reader.readLine();\n+\n+                if (!ROOT_USER_ID.equals(line)) {\n+                    throw new RuntimeException(\n+                            \"This test needs to be run with root privilege.\");\n+                }\n+            }\n+        }\n+\n","filename":"test\/jdk\/java\/security\/Policy\/Root\/Root.java","additions":40,"deletions":2,"binary":false,"changes":42,"status":"modified"}]}