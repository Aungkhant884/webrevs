{"files":[{"patch":"@@ -30,0 +30,1 @@\n+#include \"runtime\/flags\/jvmFlagConstraintsCompiler.hpp\"\n@@ -289,1 +290,4 @@\n-    FLAG_SET_ERGO(CompileThreshold, scaled_compile_threshold(CompileThreshold));\n+    intx scaled_value = scaled_compile_threshold(CompileThreshold);\n+    if (CompileThresholdConstraintFunc(scaled_value, true) != JVMFlag::VIOLATES_CONSTRAINT) {\n+      FLAG_SET_ERGO(CompileThreshold, scaled_value);\n+    }\n","filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -260,0 +260,7 @@\n+        \/*\n+         * Exclude CompileThresholdScaling from max range testing, because\n+         * it is expected to print \"outside the allowed range\" warnings for\n+         * the scaled flags\n+         *\/\n+        excludeTestMaxRange(\"CompileThresholdScaling\");\n+\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -130,4 +130,1 @@\n-            if (!name.equals(\"CompileThresholdScaling\")) {\n-                \/\/ See JDK-8283807: Max range for -XX:CompileThresholdScaling is too large\n-                validValues.add(formatValue(max));\n-            }\n+            validValues.add(formatValue(max));\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/common\/optionsvalidation\/DoubleJVMOption.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}