{"files":[{"patch":"@@ -51,3 +51,3 @@\n-      OutputAnalyzer out = ProcessTools.executeTestJvm(\"-XX:CompileThresholdScaling=\" + value, \"--version\");\n-      out.shouldHaveExitValue(0);\n-      String output = out.getOutput();\n+        OutputAnalyzer out = ProcessTools.executeTestJvm(\"-XX:CompileThresholdScaling=\" + value, \"--version\");\n+        out.shouldHaveExitValue(0);\n+        String output = out.getOutput();\n@@ -55,6 +55,6 @@\n-      List<String> thresholdList = List.of(\n-      \"Tier0InvokeNotifyFreqLog\", \"Tier0BackedgeNotifyFreqLog\", \"Tier3InvocationThreshold\",\n-      \"Tier3MinInvocationThreshold\", \"Tier3CompileThreshold\", \"Tier3BackEdgeThreshold\",\n-      \"Tier2InvokeNotifyFreqLog\", \"Tier2BackedgeNotifyFreqLog\", \"Tier3InvokeNotifyFreqLog\",\n-      \"Tier3BackedgeNotifyFreqLog\", \"Tier23InlineeNotifyFreqLog\", \"Tier4InvocationThreshold\",\n-      \"Tier4MinInvocationThreshold\", \"Tier4CompileThreshold\", \"Tier4BackEdgeThreshold\");\n+        List<String> thresholdList = List.of(\n+        \"Tier0InvokeNotifyFreqLog\", \"Tier0BackedgeNotifyFreqLog\", \"Tier3InvocationThreshold\",\n+        \"Tier3MinInvocationThreshold\", \"Tier3CompileThreshold\", \"Tier3BackEdgeThreshold\",\n+        \"Tier2InvokeNotifyFreqLog\", \"Tier2BackedgeNotifyFreqLog\", \"Tier3InvokeNotifyFreqLog\",\n+        \"Tier3BackedgeNotifyFreqLog\", \"Tier23InlineeNotifyFreqLog\", \"Tier4InvocationThreshold\",\n+        \"Tier4MinInvocationThreshold\", \"Tier4CompileThreshold\", \"Tier4BackEdgeThreshold\");\n@@ -62,3 +62,3 @@\n-      String pattern = \".*CompileThreshold .* must be between .* and .*\";\n-      boolean found = Pattern.compile(pattern).matcher(output).find();\n-      Asserts.assertEquals(found, fail, \"Unexpected result\");\n+        String pattern = \".*CompileThreshold .* must be between .* and .*\";\n+        boolean found = Pattern.compile(pattern).matcher(output).find();\n+        Asserts.assertEquals(found, fail, \"Unexpected result\");\n@@ -66,4 +66,4 @@\n-      for (String threshold : thresholdList) {\n-          pattern = \".*\" + threshold + \"=.* is outside the allowed range\";\n-          Asserts.assertEquals(found, fail, \"Unexpected result\");\n-      }\n+        for (String threshold : thresholdList) {\n+            pattern = \".*\" + threshold + \"=.* is outside the allowed range\";\n+            Asserts.assertEquals(found, fail, \"Unexpected result\");\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestCompileThresholdScaling.java","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -262,2 +262,3 @@\n-         * it is expected to print \"outside the allowed range\" warnings for\n-         * the scaled flags\n+         * it is expected to print \"outside the allowed range\" warnings for the\n+         * scaled flag and the \"outside the allowed range\" warning does not\n+         * refer to CompileThresholdScaling itself.\n","filename":"test\/hotspot\/jtreg\/runtime\/CommandLine\/OptionsValidation\/TestOptionsWithRanges.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}