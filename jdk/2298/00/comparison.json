{"files":[{"patch":"@@ -3341,1 +3341,3 @@\n-                if (type.hasTag(TYPEARRAY) && !compound) {\n+                if (typeName != names.var) {\n+                    reportSyntaxError(elemType.pos, Errors.RestrictedTypeNotAllowedHere(typeName));\n+                } else if (type.hasTag(TYPEARRAY) && !compound) {\n@@ -3343,1 +3345,1 @@\n-                    reportSyntaxError(pos, Errors.RestrictedTypeNotAllowedArray(typeName));\n+                    reportSyntaxError(elemType.pos, Errors.RestrictedTypeNotAllowedArray(typeName));\n@@ -3347,1 +3349,1 @@\n-                        reportSyntaxError(pos, Errors.RestrictedTypeNotAllowedCompound(typeName));\n+                        reportSyntaxError(elemType.pos, Errors.RestrictedTypeNotAllowedCompound(typeName));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -8,7 +8,7 @@\n-ParserTest.java:41:15: compiler.err.restricted.type.not.allowed.array: var\n-ParserTest.java:42:13: compiler.err.restricted.type.not.allowed.array: var\n-ParserTest.java:43:17: compiler.err.restricted.type.not.allowed.array: var\n-ParserTest.java:44:13: compiler.err.restricted.type.not.allowed.array: var\n-ParserTest.java:45:15: compiler.err.restricted.type.not.allowed.array: var\n-ParserTest.java:46:13: compiler.err.restricted.type.not.allowed.array: var\n-ParserTest.java:49:24: compiler.err.restricted.type.not.allowed.compound: var\n+ParserTest.java:41:9: compiler.err.restricted.type.not.allowed.array: var\n+ParserTest.java:42:9: compiler.err.restricted.type.not.allowed.array: var\n+ParserTest.java:43:9: compiler.err.restricted.type.not.allowed.array: var\n+ParserTest.java:44:9: compiler.err.restricted.type.not.allowed.array: var\n+ParserTest.java:45:9: compiler.err.restricted.type.not.allowed.array: var\n+ParserTest.java:46:9: compiler.err.restricted.type.not.allowed.array: var\n+ParserTest.java:49:9: compiler.err.restricted.type.not.allowed.compound: var\n","filename":"test\/langtools\/tools\/javac\/lvti\/ParserTest.out","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -261,22 +261,1 @@\n-                \"class SealedTest { void test() { String sealed = null; } }\"\n-        )) {\n-            assertOK(s);\n-        }\n-\n-        for (String s : List.of(\n-                \"class sealed {}\",\n-                \"enum sealed {}\",\n-                \"record sealed() {}\",\n-                \"interface sealed {}\",\n-                \"@interface sealed {}\"\n-        )) {\n-            assertFail(\"compiler.err.restricted.type.not.allowed\", s);\n-        }\n-\n-        for (String s : List.of(\n-                \"class Foo { sealed m() {} }\",\n-                \"class Foo { sealed i; }\",\n-                \"class Foo { void m(sealed i) {} }\"\n-                )) {\n-            assertFail(\"compiler.err.restricted.type.not.allowed.here\", s);\n-        }\n+                \"class SealedTest { void test() { String sealed = null; } }\",\n@@ -284,1 +263,0 @@\n-        for (String s : List.of(\n@@ -295,0 +273,6 @@\n+                \"class sealed {}\",\n+                \"enum sealed {}\",\n+                \"record sealed() {}\",\n+                \"interface sealed {}\",\n+                \"@interface sealed {}\",\n+\n@@ -305,0 +289,5 @@\n+                \"class Foo { sealed m() {} }\",\n+                \"class Foo { sealed i; }\",\n+                \"class Foo { void m() { sealed i; } }\",\n+                \"class Foo { void m(sealed i) {} }\",\n+\n@@ -307,0 +296,1 @@\n+                \"class Foo { void m() { permits i; } }\",\n@@ -308,1 +298,1 @@\n-        )) {\n+                )) {\n","filename":"test\/langtools\/tools\/javac\/sealed\/SealedCompilationTests.java","additions":14,"deletions":24,"binary":false,"changes":38,"status":"modified"}]}