{"files":[{"patch":"@@ -626,0 +626,1 @@\n+                return false;\n","filename":"src\/java.base\/share\/classes\/java\/security\/cert\/X509CRLSelector.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,77 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.Asserts;\n+import sun.security.x509.CRLExtensions;\n+import sun.security.x509.CRLNumberExtension;\n+import sun.security.x509.X500Name;\n+import sun.security.x509.X509CRLImpl;\n+\n+import java.math.BigInteger;\n+import java.security.KeyPairGenerator;\n+import java.security.cert.X509CRLSelector;\n+import java.util.Date;\n+\n+\/**\n+ * @test\n+ * @bug 8296399\n+ * @summary crlNumExtVal might be null inside X509CRLSelector::match\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.x509\n+ *\/\n+\n+public class CRLNumberMissing {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        var pk = KeyPairGenerator.getInstance(\"Ed25519\")\n+                .generateKeyPair().getPrivate();\n+\n+        var crlWithoutNum = X509CRLImpl.newSigned(\n+                new X509CRLImpl.TBSCertList(\n+                        new X500Name(\"CN=CRL\"), new Date(), new Date()),\n+                pk, \"Ed25519\");\n+\n+        var exts = new CRLExtensions();\n+        exts.setExtension(\"CRLNumber\", new CRLNumberExtension(1));\n+        var crlWithNum = X509CRLImpl.newSigned(\n+                new X509CRLImpl.TBSCertList(\n+                        new X500Name(\"CN=CRL\"), new Date(), new Date(),\n+                        null, exts),\n+                pk, \"Ed25519\");\n+\n+        var sel = new X509CRLSelector();\n+        Asserts.assertTrue(sel.match(crlWithNum));\n+        Asserts.assertTrue(sel.match(crlWithoutNum));\n+\n+        sel = new X509CRLSelector();\n+        sel.setMinCRLNumber(BigInteger.ZERO);\n+        Asserts.assertTrue(sel.match(crlWithNum));\n+        Asserts.assertFalse(sel.match(crlWithoutNum));\n+\n+        sel = new X509CRLSelector();\n+        sel.setMinCRLNumber(BigInteger.TWO);\n+        Asserts.assertFalse(sel.match(crlWithNum));\n+        Asserts.assertFalse(sel.match(crlWithoutNum));\n+    }\n+}\n","filename":"test\/jdk\/java\/security\/cert\/X509CRLSelector\/CRLNumberMissing.java","additions":77,"deletions":0,"binary":false,"changes":77,"status":"added"}]}