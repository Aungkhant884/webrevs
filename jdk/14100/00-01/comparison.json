{"files":[{"patch":"@@ -314,1 +314,1 @@\n-                if (codeLength >= 65536) {\n+                if (codeLength == 0 || codeLength >= 65536) {\n@@ -316,1 +316,1 @@\n-                            \"Code is too large %d in %s%s\",\n+                            \"Code length %d is outside the allowed range in %s%s\",\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/impl\/DirectCodeBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -258,0 +258,1 @@\n+                              xb.return_();\n@@ -278,0 +279,1 @@\n+                              xb.return_();\n","filename":"test\/jdk\/jdk\/classfile\/BuilderBlockTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+                xb.return_();\n@@ -64,0 +65,1 @@\n+                              xb.return_();\n","filename":"test\/jdk\/jdk\/classfile\/BuilderParamTest.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,0 +68,6 @@\n+\n+    @Test\n+    void testEmptyCode() {\n+        assertThrows(IllegalArgumentException.class, () -> Classfile.build(ClassDesc.of(\"EmptyClass\"), cb -> cb.withMethodBody(\n+                \"emptyMethod\", MethodTypeDesc.of(ConstantDescs.CD_void), 0, cob -> {})));\n+    }\n","filename":"test\/jdk\/jdk\/classfile\/LimitsTest.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}