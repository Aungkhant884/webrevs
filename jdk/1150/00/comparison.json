{"files":[{"patch":"@@ -121,0 +121,1 @@\n+  LOG_TAG(nmt) \\\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1671,0 +1671,3 @@\n+  } else {\n+    log_info(metaspace)(\"Attempt to reserve memory at \" INTPTR_FORMAT \" for \"\n+                         SIZE_FORMAT \" bytes failed\", p2i(addr), bytes);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -293,1 +293,1 @@\n-         \"Overwrite memory type for region [\" PTR_FORMAT \"-\" PTR_FORMAT \"), %u->%u.\",\n+         \"Overwrite memory type for region [\" INTPTR_FORMAT \"-\" INTPTR_FORMAT \"), %u->%u.\",\n@@ -346,0 +346,2 @@\n+  log_info(nmt)(\"Add reserved region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\",\n+                rgn.flag_name(), p2i(rgn.base()), rgn.size());\n@@ -384,0 +386,2 @@\n+        log_info(nmt)(\"CDS reserved region \\'%s\\' as a whole type class (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\",\n+                      reserved_rgn->flag_name(), p2i(reserved_rgn->base()), reserved_rgn->size());\n@@ -391,0 +395,2 @@\n+        log_info(nmt)(\"CDS reserved region \\'%s\\' as a whole type heap \" INTPTR_FORMAT \": \" SIZE_FORMAT,\n+                      reserved_rgn->flag_name(), p2i(reserved_rgn->base()), reserved_rgn->size());\n@@ -397,2 +403,2 @@\n-      tty->print_cr(\"Error: existing region: [\" PTR_FORMAT \"-\" PTR_FORMAT \"), flag %u.\\n\"\n-                    \"       new region: [\" PTR_FORMAT \"-\" PTR_FORMAT \"), flag %u.\",\n+      tty->print_cr(\"Error: existing region: [\" INTPTR_FORMAT \"-\" INTPTR_FORMAT \"), flag %u.\\n\"\n+                    \"       new region: [\" INTPTR_FORMAT \"-\" INTPTR_FORMAT \"), flag %u.\",\n@@ -433,1 +439,5 @@\n-  assert(reserved_rgn != NULL, \"No reserved region\");\n+  if (reserved_rgn == NULL) {\n+    log_info(nmt)(\"Add committed region \\'%s\\', No reserved region found for  (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\",\n+                  rgn.flag_name(),  p2i(rgn.base()), rgn.size());\n+  }\n+  assert(reserved_rgn != NULL, \"Add committed region, No reserved region found\");\n@@ -436,0 +446,2 @@\n+  log_info(nmt)(\"Add committed region \\'%s\\'(\" INTPTR_FORMAT \", \" SIZE_FORMAT \") %s\",\n+                rgn.flag_name(),  p2i(rgn.base()), rgn.size(), (result ? \"Succeeded\" : \"Failed\"));\n@@ -446,1 +458,1 @@\n-  assert(reserved_rgn != NULL, \"No reserved region\");\n+  assert(reserved_rgn != NULL, \"No reserved region (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")\", p2i(addr), size);\n@@ -448,0 +460,1 @@\n+  const char* flag_name = reserved_rgn->flag_name();  \/\/ after remove, info is not complete\n@@ -449,0 +462,2 @@\n+  log_info(nmt)(\"Removed uncommitted region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \") %s\",\n+                flag_name,  p2i(addr), size, (result ? \" Succeeded\" : \"Failed\"));\n@@ -457,1 +472,5 @@\n-  if (!rgn->remove_uncommitted_region(rgn->base(), rgn->size())) {\n+  ReservedMemoryRegion backup(*rgn);\n+  bool result = rgn->remove_uncommitted_region(rgn->base(), rgn->size());\n+  log_info(nmt)(\"Remove uncommitted region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \") %s\",\n+                backup.flag_name(), p2i(backup.base()), backup.size(), (result ? \"Succeeded\" : \"Failed\"));\n+  if (!result) {\n@@ -462,1 +481,4 @@\n-  return _reserved_regions->remove(*rgn);\n+  result =  _reserved_regions->remove(*rgn);\n+  log_info(nmt)(\"Removed region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \") from _resvered_regions %s\" ,\n+                backup.flag_name(), p2i(backup.base()), backup.size(), (result ? \"Succeeded\" : \"Failed\"));\n+  return result;\n@@ -473,0 +495,4 @@\n+  if (reserved_rgn == NULL) {\n+    log_info(nmt)(\"No reserved region found for (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")!\",\n+                  p2i(rgn.base()), rgn.size());\n+  }\n@@ -530,0 +556,1 @@\n+  const char* name = reserved_rgn->flag_name();\n@@ -531,1 +558,2 @@\n-\n+  log_info(nmt)(\"Split region \\'%s\\' (\" INTPTR_FORMAT \", \" SIZE_FORMAT \")  with size \" SIZE_FORMAT,\n+                name, p2i(rgn.base()), rgn.size(), split);\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.cpp","additions":36,"deletions":8,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -309,1 +309,0 @@\n-\n@@ -343,0 +342,2 @@\n+  const char* flag_name() { return NMTUtil::flag_to_name(_flag); }\n+\n","filename":"src\/hotspot\/share\/services\/virtualMemoryTracker.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,0 +63,2 @@\n+                .addPrefix(\"-Xlog:nmt\")\n+                .addPrefix(\"-Xlog:metaspace\")\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedBaseAddress.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}