{"files":[{"patch":"@@ -78,1 +78,1 @@\n-    guarantee(false, \"displacement = \" SIZE_FORMAT_HEX \", out of range for LA\/LAY\", a.disp());\n+    guarantee(false, \"displacement = \" SIZE_FORMAT_X \", out of range for LA\/LAY\", a.disp());\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -473,1 +473,1 @@\n-          trcVerbose(\"real page size (\" SIZE_FORMAT_HEX \") differs.\", real_pagesize);\n+          trcVerbose(\"real page size (\" SIZE_FORMAT_X \") differs.\", real_pagesize);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -548,1 +548,1 @@\n-  st->print (PTR64_FORMAT \" - \" PTR64_FORMAT \" \", sp2, lrsave);\n+  st->print (PTR_FORMAT \" - \" PTR_FORMAT \" \", p2i(sp2), p2i(lrsave));\n@@ -706,1 +706,1 @@\n-  st->print(\"iar:  \" PTR64_FORMAT \" \", p2i(cur_iar));\n+  st->print(\"iar:  \" PTR_FORMAT \" \", p2i(cur_iar));\n@@ -719,1 +719,1 @@\n-  st->print(\"lr:   \" PTR64_FORMAT \" \", p2i(cur_lr));\n+  st->print(\"lr:   \" PTR_FORMAT \" \", p2i(cur_lr));\n@@ -730,1 +730,1 @@\n-  st->print(\"sp:   \" PTR64_FORMAT \" \", p2i(cur_sp));\n+  st->print(\"sp:   \" PTR_FORMAT \" \", p2i(cur_sp));\n@@ -740,1 +740,1 @@\n-  st->print(\"rtoc: \"  PTR64_FORMAT \" \", p2i(cur_rtoc));\n+  st->print(\"rtoc: \"  PTR_FORMAT \" \", p2i(cur_rtoc));\n@@ -791,1 +791,1 @@\n-        st->print_cr(\"found something which looks like a backchain at \" PTR64_FORMAT \", after 0x%x bytes... \",\n+        st->print_cr(\"found something which looks like a backchain at \" PTR_FORMAT \", after 0x%x bytes... \",\n@@ -891,4 +891,0 @@\n-\n-\n-\n-\n","filename":"src\/hotspot\/os\/aix\/porting_aix.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -154,1 +154,1 @@\n-  log_info_p(gc, init)(\"Heap Backing Filesystem: %s (0x\" UINT64_FORMAT_X \")\",\n+  log_info_p(gc, init)(\"Heap Backing Filesystem: %s (\" UINT64_FORMAT_X \")\",\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -571,1 +571,1 @@\n-  st->print(\", CR2=\" PTR64_FORMAT, (uint64_t)uc->uc_mcontext.cr2);\n+  st->print(\", CR2=\" UINT64_FORMAT_X_0, (uint64_t)uc->uc_mcontext.cr2);\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -420,1 +420,1 @@\n-    fprintf(fp,\"    st->print(\\\"\/\\\" PTR64_FORMAT, (uint64_t)_c%d);\\n\", i);\n+    fprintf(fp,\"    st->print(\\\"\/\\\" UINT64_FORMAT_X_0, (uint64_t)_c%d);\\n\", i);\n@@ -432,1 +432,1 @@\n-    fprintf(fp,\"    st->print(\\\"\/\\\" PTR64_FORMAT, (uint64_t)_c%dl);\\n\", i);\n+    fprintf(fp,\"    st->print(\\\"\/\\\" UINT64_FORMAT_X_0, (uint64_t)_c%dl);\\n\", i);\n","filename":"src\/hotspot\/share\/adlc\/output_h.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1582,1 +1582,1 @@\n-    default:       out->print(\"%3d:0x\" UINT64_FORMAT_X, type(), (uint64_t)as_jlong()); break;\n+    default:       out->print(\"%3d:\" UINT64_FORMAT_X, type(), (uint64_t)as_jlong()); break;\n","filename":"src\/hotspot\/share\/c1\/c1_LIR.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -332,2 +332,2 @@\n-  st->print_cr(\"- cloned_vtables_offset:          \" SIZE_FORMAT_HEX, _cloned_vtables_offset);\n-  st->print_cr(\"- serialized_data_offset:         \" SIZE_FORMAT_HEX, _serialized_data_offset);\n+  st->print_cr(\"- cloned_vtables_offset:          \" SIZE_FORMAT_X, _cloned_vtables_offset);\n+  st->print_cr(\"- serialized_data_offset:         \" SIZE_FORMAT_X, _serialized_data_offset);\n@@ -337,1 +337,1 @@\n-  st->print_cr(\"- shared_path_table_offset:       \" SIZE_FORMAT_HEX, _shared_path_table_offset);\n+  st->print_cr(\"- shared_path_table_offset:       \" SIZE_FORMAT_X, _shared_path_table_offset);\n@@ -1512,2 +1512,2 @@\n-  st->print_cr(\"- file_offset:                    \" SIZE_FORMAT_HEX, _file_offset);\n-  st->print_cr(\"- mapping_offset:                 \" SIZE_FORMAT_HEX, _mapping_offset);\n+  st->print_cr(\"- file_offset:                    \" SIZE_FORMAT_X, _file_offset);\n+  st->print_cr(\"- mapping_offset:                 \" SIZE_FORMAT_X, _mapping_offset);\n@@ -1515,1 +1515,1 @@\n-  st->print_cr(\"- oopmap_offset:                  \" SIZE_FORMAT_HEX, _oopmap_offset);\n+  st->print_cr(\"- oopmap_offset:                  \" SIZE_FORMAT_X, _oopmap_offset);\n@@ -1555,1 +1555,1 @@\n-                   \" bytes, addr \" INTPTR_FORMAT \" file offset \" SIZE_FORMAT_HEX_W(08)\n+                   \" bytes, addr \" INTPTR_FORMAT \" file offset \" SIZE_FORMAT_X_W(08)\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -725,1 +725,1 @@\n-    out->print(\" \" INTPTRNZ_FORMAT, data()[i]);\n+    out->print(\" \" INTX_FORMAT_X, data()[i]);\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -5954,1 +5954,1 @@\n-    jio_snprintf(addr_buf, 20, SIZE_FORMAT_HEX, new_id);\n+    jio_snprintf(addr_buf, 20, SIZE_FORMAT_X, new_id);\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1401,1 +1401,1 @@\n-          ast->print(\"(+\" PTR32_FORMAT \")\", (unsigned int)((char*)this_blob-low_bound));\n+          ast->print(\"(+\" UINT32_FORMAT_X_0 \")\", (unsigned int)((char*)this_blob-low_bound));\n@@ -1408,1 +1408,1 @@\n-          ast->print(\"(+\" PTR32_FORMAT \")\", (unsigned int)((char*)TopSizeArray[i].start-low_bound));\n+          ast->print(\"(+\" UINT32_FORMAT_X_0 \")\", (unsigned int)((char*)TopSizeArray[i].start-low_bound));\n@@ -1416,1 +1416,1 @@\n-          ast->print(PTR32_FORMAT, TopSizeArray[i].nm_size);\n+          ast->print(UINT32_FORMAT_X_0, TopSizeArray[i].nm_size);\n@@ -1434,1 +1434,1 @@\n-          ast->print(PTR32_FORMAT, (unsigned int)(TopSizeArray[i].len<<log2_seg_size));\n+          ast->print(UINT32_FORMAT_X_0, (unsigned int)(TopSizeArray[i].len<<log2_seg_size));\n@@ -2303,1 +2303,1 @@\n-        ast->print(\"(+\" PTR32_FORMAT \")\", (unsigned int)((char*)this_blob-low_bound));\n+        ast->print(\"(+\" UINT32_FORMAT_X_0 \")\", (unsigned int)((char*)this_blob-low_bound));\n@@ -2316,1 +2316,1 @@\n-          ast->print(PTR32_FORMAT, total_size);\n+          ast->print(UINT32_FORMAT_X_0, total_size);\n@@ -2491,1 +2491,1 @@\n-    ast->print(\"(+\" PTR32_FORMAT \"): |\", (unsigned int)(ix*granule_size));\n+    ast->print(\"(+\" UINT32_FORMAT_X_0 \"): |\", (unsigned int)(ix*granule_size));\n@@ -2515,1 +2515,1 @@\n-    ast->print(\"(+\" PTR32_FORMAT \"): |\", (unsigned int)(ix*granule_size));\n+    ast->print(\"(+\" UINT32_FORMAT_X_0 \"): |\", (unsigned int)(ix*granule_size));\n","filename":"src\/hotspot\/share\/code\/codeHeapState.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -365,1 +365,4 @@\n-  st->print(\"|BTE \" INTPTR_FORMAT_W(12) \", \" INTPTR_FORMAT_W(12) \", \" INTPTR_FORMAT_W(12),\n+\n+#define SHR_PTR_FORMAT \"%12\" PRIxPTR\n+\n+  st->print(\"|BTE \" SHR_PTR_FORMAT  \", \" SHR_PTR_FORMAT \", \" SHR_PTR_FORMAT,\n@@ -367,1 +370,1 @@\n-  st->print(\"|TAMS \" INTPTR_FORMAT_W(12),\n+  st->print(\"|TAMS \" SHR_PTR_FORMAT,\n@@ -369,1 +372,1 @@\n-  st->print(\"|UWM \" INTPTR_FORMAT_W(12),\n+  st->print(\"|UWM \" SHR_PTR_FORMAT,\n@@ -378,0 +381,2 @@\n+\n+#undef SHR_PTR_FORMAT\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -774,1 +774,1 @@\n-                    \"(must be aligned to \" SIZE_FORMAT_HEX \").\",\n+                    \"(must be aligned to \" SIZE_FORMAT_X \").\",\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -81,2 +81,2 @@\n-         SIZE_FORMAT_HEX \" is not aligned to \"               \\\n-         SIZE_FORMAT_HEX, (size_t)(uintptr_t)value, (size_t)(alignment))\n+         SIZE_FORMAT_X \" is not aligned to \"                 \\\n+         SIZE_FORMAT_X, (size_t)(uintptr_t)value, (size_t)(alignment))\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceCommon.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -197,1 +197,1 @@\n-           \" alignment: \" SIZE_FORMAT_HEX,\n+           \" alignment: \" SIZE_FORMAT_X,\n@@ -407,1 +407,1 @@\n-                             \" heap of size \" SIZE_FORMAT_HEX,\n+                             \" heap of size \" SIZE_FORMAT_X,\n@@ -600,1 +600,1 @@\n-      log_trace(gc, heap, coops)(\"Trying to allocate at address NULL heap of size \" SIZE_FORMAT_HEX, size + noaccess_prefix);\n+      log_trace(gc, heap, coops)(\"Trying to allocate at address NULL heap of size \" SIZE_FORMAT_X, size + noaccess_prefix);\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -285,1 +285,1 @@\n-               \"Narrow klass range: \" SIZE_FORMAT_HEX, p2i(base()), shift(),\n+               \"Narrow klass range: \" SIZE_FORMAT_X, p2i(base()), shift(),\n","filename":"src\/hotspot\/share\/oops\/compressedOops.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1238,1 +1238,1 @@\n-  <xsl:text>=\" SIZE_FORMAT_HEX \"<\/xsl:text>\n+  <xsl:text>=\" SIZE_FORMAT_X \"<\/xsl:text>\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnter.xsl","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1904,1 +1904,1 @@\n-  Events::log_deopt_message(current, \"Uncommon trap: trap_request=\" PTR32_FORMAT \" fr.pc=\" INTPTR_FORMAT \" relative=\" INTPTR_FORMAT,\n+  Events::log_deopt_message(current, \"Uncommon trap: trap_request=\" INT32_FORMAT_X_0 \" fr.pc=\" INTPTR_FORMAT \" relative=\" INTPTR_FORMAT,\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1907,1 +1907,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_HEX, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n@@ -1912,1 +1912,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_HEX, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n@@ -1917,1 +1917,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_HEX, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n@@ -1926,1 +1926,1 @@\n-  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_HEX, page_size);\n+  assert(is_power_of_2(page_size), \"page_size must be a power of 2: \" SIZE_FORMAT_X, page_size);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -564,1 +564,1 @@\n-          \"class %s (in module %s) cannot access class %s (in unnamed module @\" SIZE_FORMAT_HEX \") because module %s does not read unnamed module @\" SIZE_FORMAT_HEX,\n+          \"class %s (in module %s) cannot access class %s (in unnamed module @\" SIZE_FORMAT_X \") because module %s does not read unnamed module @\" SIZE_FORMAT_X,\n@@ -591,1 +591,1 @@\n-          \"class %s (in unnamed module @\" SIZE_FORMAT_HEX \") cannot access class %s (in module %s) because module %s does not export %s to unnamed module @\" SIZE_FORMAT_HEX,\n+          \"class %s (in unnamed module @\" SIZE_FORMAT_X \") cannot access class %s (in module %s) because module %s does not export %s to unnamed module @\" SIZE_FORMAT_X,\n","filename":"src\/hotspot\/share\/runtime\/reflection.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-      tty->print(\"  \" PTR64_FORMAT \" (longhex)\", (int64_t)long_at(index));\n+      tty->print(\"  \" INT64_FORMAT_X_0 \" (longhex)\", (int64_t)long_at(index));\n","filename":"src\/hotspot\/share\/runtime\/stackValueCollection.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-  DWARF_LOG_INFO(\"##### Find filename and line number for offset \" PTR32_FORMAT \" in library %s #####\",\n+  DWARF_LOG_INFO(\"##### Find filename and line number for offset \" INT32_FORMAT_X_0 \" in library %s #####\",\n@@ -89,1 +89,1 @@\n-  DWARF_LOG_SUMMARY(\"pc: \" INTPTR_FORMAT \", offset: \" PTR32_FORMAT \", filename: %s, line: %u\",\n+  DWARF_LOG_SUMMARY(\"pc: \" INTPTR_FORMAT \", offset: \" INT32_FORMAT_X_0 \", filename: %s, line: %u\",\n","filename":"src\/hotspot\/share\/utilities\/decoder_elf.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -370,1 +370,1 @@\n-    DWARF_LOG_ERROR(\"Failed to retrieve file and line number information for %s at offset: \" PTR32_FORMAT, _filepath,\n+    DWARF_LOG_ERROR(\"Failed to retrieve file and line number information for %s at offset: \" UINT32_FORMAT_X_0, _filepath,\n@@ -639,1 +639,1 @@\n-    DWARF_LOG_ERROR(\"CRC did not match. Expected: \" PTR32_FORMAT \", found: \" PTR32_FORMAT, dwarf_file_path.crc(),\n+    DWARF_LOG_ERROR(\"CRC did not match. Expected: \" INT32_FORMAT_X_0 \", found: \" INT32_FORMAT_X_0, dwarf_file_path.crc(),\n@@ -693,1 +693,1 @@\n-  DWARF_LOG_INFO(\".debug_info offset:    \" PTR32_FORMAT, compilation_unit_offset);\n+  DWARF_LOG_INFO(\".debug_info offset:    \" INT32_FORMAT_X_0, compilation_unit_offset);\n@@ -701,1 +701,1 @@\n-  DWARF_LOG_INFO(\".debug_line offset:    \" PTR32_FORMAT, debug_line_offset);\n+  DWARF_LOG_INFO(\".debug_line offset:    \" INT32_FORMAT_X_0, debug_line_offset);\n@@ -736,1 +736,1 @@\n-      DWARF_LOG_INFO(\".debug_aranges offset: \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n+      DWARF_LOG_INFO(\".debug_aranges offset: \" UINT32_FORMAT, (uint32_t)_reader.get_position());\n@@ -843,1 +843,1 @@\n-    DWARF_LOG_ERROR(\"Failed to read the .debug_abbrev header at \" PTR32_FORMAT, _header._debug_abbrev_offset);\n+    DWARF_LOG_ERROR(\"Failed to read the .debug_abbrev header at \" UINT32_FORMAT_X_0, _header._debug_abbrev_offset);\n@@ -925,1 +925,1 @@\n-      DWARF_LOG_INFO(\".debug_abbrev offset:  \" PTR32_FORMAT, (uint32_t)_reader.get_position());\n+      DWARF_LOG_INFO(\".debug_abbrev offset:  \" UINT32_FORMAT_X_0, (uint32_t)_reader.get_position());\n@@ -955,1 +955,1 @@\n-  DWARF_LOG_TRACE(\"Code: 0x\" UINT64_FORMAT_X \", Tag: 0x\" UINT64_FORMAT_X, declaration._abbrev_code, declaration._tag);\n+  DWARF_LOG_TRACE(\"Code: \" UINT64_FORMAT_X \", Tag: \" UINT64_FORMAT_X, declaration._abbrev_code, declaration._tag);\n@@ -1014,1 +1014,1 @@\n-  DWARF_LOG_TRACE(\"  Name: 0x\" UINT64_FORMAT_X \", Form: 0x\" UINT64_FORMAT_X,\n+  DWARF_LOG_TRACE(\"  Name: \" UINT64_FORMAT_X \", Form: \" UINT64_FORMAT_X,\n@@ -1118,1 +1118,1 @@\n-        DWARF_LOG_TRACE(\"    Reading .debug_line offset from compilation unit at \" PTR32_FORMAT,\n+        DWARF_LOG_TRACE(\"    Reading .debug_line offset from compilation unit at \" UINT32_FORMAT_X_0,\n@@ -1344,1 +1344,1 @@\n-  assert(false, \"Did not find an entry in the line number information matrix that matches \" PTR32_FORMAT, _offset_in_library);\n+  assert(false, \"Did not find an entry in the line number information matrix that matches \" UINT32_FORMAT_X_0, _offset_in_library);\n@@ -1571,1 +1571,1 @@\n-        DWARF_LOG_DEBUG(\"^^^ Found line for requested offset \" PTR32_FORMAT \" ^^^\", _offset_in_library);\n+        DWARF_LOG_DEBUG(\"^^^ Found line for requested offset \" UINT32_FORMAT_X_0 \" ^^^\", _offset_in_library);\n@@ -1593,1 +1593,1 @@\n-  DWARF_LOG_DEBUG(\"^^^ Found line for requested offset \" PTR32_FORMAT \" ^^^\", _offset_in_library);\n+  DWARF_LOG_DEBUG(\"^^^ Found line for requested offset \" UINT32_FORMAT_X_0 \" ^^^\", _offset_in_library);\n@@ -1818,1 +1818,1 @@\n-#endif \/\/ !_WINDOWS && !__APPLE__\n\\ No newline at end of file\n+#endif \/\/ !_WINDOWS && !__APPLE__\n","filename":"src\/hotspot\/share\/utilities\/elfFile.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -93,1 +93,18 @@\n-#define BOOL_TO_STR(_b_) ((_b_) ? \"true\" : \"false\")\n+\/\/ Guide to the suffixes used in the format specifiers for integers:\n+\/\/        - print the decimal value:                   745565\n+\/\/  _X    - print as hexadecimal, without leading 0s: 0x12345\n+\/\/  _X_0  - print as hexadecimal, with leading 0s: 0x00012345\n+\/\/  _H    - print as hexadecimal, without 0x prefix\n+\/\/  _W(w) - prints w sized string with the given value right\n+\/\/          adjusted. Use -w to print left adjusted.\n+\/\/\n+\/\/ Note that the PTR format specifiers print using 0x with leading zeros,\n+\/\/ just like the _X_0 version for integers.\n+\n+\/\/ Format 8-bit quantities.\n+#define INT8_FORMAT_X_0          \"0x%02\"      PRIx8\n+#define UINT8_FORMAT_X_0         \"0x%02\"      PRIx8\n+\n+\/\/ Format 16-bit quantities.\n+#define INT16_FORMAT_X_0         \"0x%04\"      PRIx16\n+#define UINT16_FORMAT_X_0        \"0x%04\"      PRIx16\n@@ -96,7 +113,6 @@\n-#define INT32_FORMAT           \"%\" PRId32\n-#define UINT32_FORMAT          \"%\" PRIu32\n-#define INT32_FORMAT_W(width)  \"%\" #width PRId32\n-#define UINT32_FORMAT_W(width) \"%\" #width PRIu32\n-\n-#define PTR32_FORMAT           \"0x%08\" PRIx32\n-#define PTR32_FORMAT_W(width)  \"0x%\" #width PRIx32\n+#define INT32_FORMAT             \"%\"          PRId32\n+#define INT32_FORMAT_X_0         \"0x%08\"      PRIx32\n+#define INT32_FORMAT_W(width)    \"%\"   #width PRId32\n+#define UINT32_FORMAT            \"%\"          PRIu32\n+#define UINT32_FORMAT_X_0        \"0x%08\"      PRIx32\n+#define UINT32_FORMAT_W(width)   \"%\"   #width PRIu32\n@@ -105,6 +121,18 @@\n-#define INT64_FORMAT           \"%\" PRId64\n-#define UINT64_FORMAT          \"%\" PRIu64\n-#define UINT64_FORMAT_X        \"%\" PRIx64\n-#define INT64_FORMAT_W(width)  \"%\" #width PRId64\n-#define UINT64_FORMAT_W(width) \"%\" #width PRIu64\n-#define UINT64_FORMAT_X_W(width) \"%\" #width PRIx64\n+#define INT64_FORMAT             \"%\"          PRId64\n+#define INT64_FORMAT_X           \"0x%\"        PRIx64\n+#define INT64_FORMAT_X_0         \"0x%016\"     PRIx64\n+#define INT64_FORMAT_W(width)    \"%\"   #width PRId64\n+#define UINT64_FORMAT            \"%\"          PRIu64\n+#define UINT64_FORMAT_X          \"0x%\"        PRIx64\n+#define UINT64_FORMAT_X_0        \"0x%016\"     PRIx64\n+#define UINT64_FORMAT_W(width)   \"%\"   #width PRIu64\n+#define UINT64_FORMAT_X_W(width) \"0x%\" #width PRIx64\n+\n+\/\/ Format integers which change size between 32- and 64-bit.\n+#define SSIZE_FORMAT             \"%\"          PRIdPTR\n+#define SSIZE_FORMAT_W(width)    \"%\"   #width PRIdPTR\n+#define SIZE_FORMAT              \"%\"          PRIuPTR\n+#define SIZE_FORMAT_X            \"0x%\"        PRIxPTR\n+#define SIZE_FORMAT_H_W(width)   \"%\"   #width PRIxPTR\n+#define SIZE_FORMAT_W(width)     \"%\"   #width PRIuPTR\n+#define SIZE_FORMAT_X_W(width)   \"0x%\" #width PRIxPTR\n@@ -112,1 +140,6 @@\n-#define PTR64_FORMAT           \"0x%016\" PRIx64\n+#define INTX_FORMAT              \"%\"          PRIdPTR\n+#define INTX_FORMAT_X            \"0x%\"        PRIdPTR\n+#define INTX_FORMAT_W(width)     \"%\"   #width PRIdPTR\n+#define UINTX_FORMAT             \"%\"          PRIuPTR\n+#define UINTX_FORMAT_X           \"0x%\"        PRIuPTR\n+#define UINTX_FORMAT_W(width)    \"%\"   #width PRIuPTR\n@@ -116,1 +149,1 @@\n-#define JLONG_FORMAT           INT64_FORMAT\n+#define JLONG_FORMAT             INT64_FORMAT\n@@ -119,1 +152,1 @@\n-#define JLONG_FORMAT_W(width)  INT64_FORMAT_W(width)\n+#define JLONG_FORMAT_W(width)    INT64_FORMAT_W(width)\n@@ -122,1 +155,1 @@\n-#define JULONG_FORMAT          UINT64_FORMAT\n+#define JULONG_FORMAT            UINT64_FORMAT\n@@ -125,1 +158,1 @@\n-#define JULONG_FORMAT_X        UINT64_FORMAT_X\n+#define JULONG_FORMAT_X          UINT64_FORMAT_X\n@@ -130,2 +163,2 @@\n-#define INTPTR_FORMAT \"0x%016\" PRIxPTR\n-#define PTR_FORMAT    \"0x%016\" PRIxPTR\n+#define INTPTR_FORMAT            \"0x%016\"     PRIxPTR\n+#define PTR_FORMAT               \"0x%016\"     PRIxPTR\n@@ -133,2 +166,2 @@\n-#define INTPTR_FORMAT \"0x%08\"  PRIxPTR\n-#define PTR_FORMAT    \"0x%08\"  PRIxPTR\n+#define INTPTR_FORMAT            \"0x%08\"      PRIxPTR\n+#define PTR_FORMAT               \"0x%08\"      PRIxPTR\n@@ -137,17 +170,0 @@\n-\/\/ Format pointers without leading zeros\n-#define INTPTRNZ_FORMAT \"0x%\"  PRIxPTR\n-\n-#define INTPTR_FORMAT_W(width)   \"%\" #width PRIxPTR\n-\n-#define SSIZE_FORMAT             \"%\"   PRIdPTR\n-#define SIZE_FORMAT              \"%\"   PRIuPTR\n-#define SIZE_FORMAT_HEX          \"0x%\" PRIxPTR\n-#define SSIZE_FORMAT_W(width)    \"%\"   #width PRIdPTR\n-#define SIZE_FORMAT_W(width)     \"%\"   #width PRIuPTR\n-#define SIZE_FORMAT_HEX_W(width) \"0x%\" #width PRIxPTR\n-\n-#define INTX_FORMAT           \"%\" PRIdPTR\n-#define UINTX_FORMAT          \"%\" PRIuPTR\n-#define INTX_FORMAT_W(width)  \"%\" #width PRIdPTR\n-#define UINTX_FORMAT_W(width) \"%\" #width PRIuPTR\n-\n@@ -159,0 +175,1 @@\n+#define BOOL_TO_STR(_b_) ((_b_) ? \"true\" : \"false\")\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp","additions":57,"deletions":40,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -289,1 +289,1 @@\n-        indent().print(INTPTR_FORMAT_W(07) \":\", i);\n+        indent().print(SIZE_FORMAT_H_W(07) \":\", i);\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-        log(\"Testing align_up:   alignment: 0x\" UINT64_FORMAT_X \" value: 0x\" UINT64_FORMAT_X \" expected: 0x\" UINT64_FORMAT_X \"\\n\", (uint64_t)alignment, values[i], up);\n+        log(\"Testing align_up:   alignment: \" UINT64_FORMAT_X \" value: \" UINT64_FORMAT_X \" expected: \" UINT64_FORMAT_X \"\\n\", (uint64_t)alignment, values[i], up);\n@@ -133,1 +133,1 @@\n-        log(\"Testing align_down: alignment: 0x\" UINT64_FORMAT_X \" value: 0x\" UINT64_FORMAT_X \" expected: 0x\" UINT64_FORMAT_X \"\\n\", (uint64_t)alignment, values[i], down);\n+        log(\"Testing align_down: alignment: \" UINT64_FORMAT_X \" value: \" UINT64_FORMAT_X \" expected: \" UINT64_FORMAT_X \"\\n\", (uint64_t)alignment, values[i], down);\n@@ -146,1 +146,1 @@\n-        log(\"Testing is_aligned: alignment: 0x\" UINT64_FORMAT_X \" value: 0x\" UINT64_FORMAT_X \" expected: %s\\n\", (uint64_t)alignment, values[i], is ? \"true\" : \"false\");\n+        log(\"Testing is_aligned: alignment: \" UINT64_FORMAT_X \" value: \" UINT64_FORMAT_X \" expected: %s\\n\", (uint64_t)alignment, values[i], is ? \"true\" : \"false\");\n","filename":"test\/hotspot\/gtest\/utilities\/test_align.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}