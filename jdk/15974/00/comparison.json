{"files":[{"patch":"@@ -1653,1 +1653,1 @@\n-                    node.body.stats.nonEmpty() && TreeInfo.isSuperCall(node.body.stats.head) &&\n+                    node.body != null && node.body.stats.nonEmpty() && TreeInfo.isSuperCall(node.body.stats.head) &&\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/processing\/JavacProcessingEnvironment.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,13 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug 8305971\n+ * @summary NPE in JavacProcessingEnvironment for missing enum constructor body\n+ * @compile SimpleProcessor.java\n+ * @compile\/fail\/ref=CrashEmptyEnumConstructorTest.out -processor SimpleProcessor -XDrawDiagnostics CrashEmptyEnumConstructorTest.java\n+ *\/\n+\n+enum CrashEmptyEnumConstructorTest {\n+    ONE(\"\");\n+    CrashEmptyEnumConstructorTest(String one);\n+    final String one;\n+}\n","filename":"test\/langtools\/tools\/javac\/annotations\/crash_empty_enum_const\/CrashEmptyEnumConstructorTest.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+CrashEmptyEnumConstructorTest.java:11:5: compiler.err.missing.meth.body.or.decl.abstract\n+1 error\n","filename":"test\/langtools\/tools\/javac\/annotations\/crash_empty_enum_const\/CrashEmptyEnumConstructorTest.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.Set;\n+import javax.annotation.processing.AbstractProcessor;\n+import javax.annotation.processing.RoundEnvironment;\n+import javax.annotation.processing.SupportedAnnotationTypes;\n+import javax.lang.model.SourceVersion;\n+import javax.lang.model.element.TypeElement;\n+\n+@SupportedAnnotationTypes(\"*\")\n+public class SimpleProcessor extends AbstractProcessor {\n+\n+    @Override\n+    public SourceVersion getSupportedSourceVersion() {\n+        return SourceVersion.latestSupported();\n+    }\n+\n+    @Override\n+    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n+        return false;\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/annotations\/crash_empty_enum_const\/SimpleProcessor.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}