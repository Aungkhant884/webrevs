{"files":[{"patch":"@@ -1889,1 +1889,1 @@\n-  bool is_virtual = thread_obj != nullptr && thread_obj->is_a(vmClasses::BaseVirtualThread_klass());\n+  bool self = java_thread == current_thread;\n@@ -1891,14 +1891,3 @@\n-  if (is_virtual) {\n-    if (!is_JavaThread_current(java_thread, thread_obj)) {\n-      if (!is_vthread_suspended(thread_obj, java_thread)) {\n-        return JVMTI_ERROR_THREAD_NOT_SUSPENDED;\n-      }\n-      if (java_thread == nullptr) { \/\/ unmounted virtual thread\n-        return JVMTI_ERROR_OPAQUE_FRAME;\n-      }\n-    }\n-  } else { \/\/ platform thread\n-    if (java_thread != current_thread && !java_thread->is_suspended() &&\n-        !java_thread->is_carrier_thread_suspended()) {\n-      return JVMTI_ERROR_THREAD_NOT_SUSPENDED;\n-    }\n+  err = check_non_suspended_or_opaque_frame(java_thread, thread_obj, self);\n+  if (err != JVMTI_ERROR_NONE) {\n+    return err;\n@@ -1922,2 +1911,2 @@\n-  if (java_thread == current_thread) {\n-    op.doit(java_thread, true \/* self *\/);\n+  if (self) {\n+    op.doit(java_thread, self);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":6,"deletions":17,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1384,0 +1384,24 @@\n+\/\/ Check for JVMTI_ERROR_NOT_SUSPENDED and JVMTI_ERROR_OPAQUE_FRAME errors.\n+\/\/ Used in PopFrame and ForceEarlyReturn implementations.\n+jvmtiError\n+JvmtiEnvBase::check_non_suspended_or_opaque_frame(JavaThread* jt, oop thr_obj, bool self) {\n+  bool is_virtual = thr_obj != nullptr && thr_obj->is_a(vmClasses::BaseVirtualThread_klass());\n+\n+  if (is_virtual) {\n+    if (!is_JavaThread_current(jt, thr_obj)) {\n+      if (!is_vthread_suspended(thr_obj, jt)) {\n+        return JVMTI_ERROR_THREAD_NOT_SUSPENDED;\n+      }\n+      if (jt == nullptr) { \/\/ unmounted virtual thread\n+        return JVMTI_ERROR_OPAQUE_FRAME;\n+      }\n+    }\n+  } else { \/\/ platform thread\n+    if (!self && !jt->is_suspended() &&\n+        !jt->is_carrier_thread_suspended()) {\n+      return JVMTI_ERROR_THREAD_NOT_SUSPENDED;\n+    }\n+  }\n+  return JVMTI_ERROR_NONE;\n+}\n+\n@@ -2042,1 +2066,1 @@\n-  bool is_virtual = thread_obj != nullptr && thread_obj->is_a(vmClasses::BaseVirtualThread_klass());\n+  bool self = java_thread == current_thread;\n@@ -2044,14 +2068,3 @@\n-  if (is_virtual) {\n-    if (!is_JavaThread_current(java_thread, thread_obj)) {\n-      if (!is_vthread_suspended(thread_obj, java_thread)) {\n-        return JVMTI_ERROR_THREAD_NOT_SUSPENDED;\n-      }\n-      if (java_thread == nullptr) { \/\/ unmounted virtual thread\n-        return JVMTI_ERROR_OPAQUE_FRAME;\n-      }\n-    }\n-  } else { \/\/ platform thread\n-    if (java_thread != current_thread && !java_thread->is_suspended() &&\n-        !java_thread->is_carrier_thread_suspended()) {\n-      return JVMTI_ERROR_THREAD_NOT_SUSPENDED;\n-    }\n+  err = check_non_suspended_or_opaque_frame(java_thread, thread_obj, self);\n+  if (err != JVMTI_ERROR_NONE) {\n+    return err;\n@@ -2074,2 +2087,2 @@\n-  if (java_thread == current_thread) {\n-    op.doit(java_thread, true \/* self *\/);\n+  if (self) {\n+    op.doit(java_thread, self);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":30,"deletions":17,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -227,0 +227,4 @@\n+  \/\/ Check for JVMTI_ERROR_NOT_SUSPENDED and JVMTI_ERROR_OPAQUE_FRAME errors.\n+  \/\/ Used in PopFrame and ForceEarlyReturn implementations.\n+  static jvmtiError check_non_suspended_or_opaque_frame(JavaThread* jt, oop thr_obj, bool self);\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -128,0 +128,1 @@\n+vmTestbase\/nsk\/jdi\/ThreadReference\/forceEarlyReturn\/forceEarlyReturn002\/forceEarlyReturn002.java\n","filename":"test\/hotspot\/jtreg\/ProblemList-Virtual.txt","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}