{"files":[{"patch":"@@ -74,12 +74,9 @@\n-            FILTER_RETURN_TO_ZERO = 7,\n-            COLLECT_ARGS = 8,\n-            COLLECT_ARGS_TO_VOID = 9,\n-            COLLECT_ARGS_TO_ARRAY = 10,\n-            FOLD_ARGS = 11,\n-            FOLD_ARGS_TO_VOID = 12,\n-            PERMUTE_ARGS = 13,\n-            LOCAL_TYPES = 14,\n-            FOLD_SELECT_ARGS = 15,\n-            FOLD_SELECT_ARGS_TO_VOID = 16,\n-            FILTER_SELECT_ARGS = 17,\n-            REPEAT_FILTER_ARGS = 18;\n+            COLLECT_ARGS = 7,\n+            COLLECT_ARGS_TO_VOID = 8,\n+            REPEAT_FILTER_ARGS = 9,\n+            FOLD_ARGS = 10,\n+            FOLD_ARGS_TO_VOID = 11,\n+            PERMUTE_ARGS = 12,\n+            LOCAL_TYPES = 13,\n+            FILTER_SELECT_ARGS = 14,\n+            FOLD_SELECT_ARGS = 15;\n@@ -162,0 +159,1 @@\n+            assert(fullBytes == null || packedBytes == 0);\n@@ -195,0 +193,4 @@\n+            long packedBytes = packedBytes(kind, b1, b23456);\n+            if (packedBytes != 0) {\n+                return new TransformKey(packedBytes);\n+            }\n@@ -201,5 +203,1 @@\n-            long packedBytes = packedBytes(fullBytes);\n-            if (packedBytes != 0)\n-                return new TransformKey(packedBytes);\n-            else\n-                return new TransformKey(fullBytes);\n+            return new TransformKey(fullBytes);\n@@ -234,0 +232,16 @@\n+        private static long packedBytes(byte b0, int b1, int[] b23456) {\n+            if (b23456.length + 2 > PACKED_BYTE_MAX_LENGTH)\n+                return 0;\n+            long pb = 0;\n+            int bitset = b0 | b1;\n+            for (int i = 0; i < b23456.length; i++) {\n+                int b = b23456[i] & 0xFF;\n+                bitset |= b;\n+                pb |= (long)b << (i * PACKED_BYTE_SIZE);\n+            }\n+            if (!inRange(bitset))\n+                return 0;\n+            pb = pb << (2 * PACKED_BYTE_SIZE) | b1 << PACKED_BYTE_SIZE | b0;\n+            return pb;\n+        }\n+\n@@ -323,1 +337,0 @@\n-                assert(fullBytes == null);\n@@ -890,2 +903,1 @@\n-        byte kind = (constantZero ? FILTER_RETURN_TO_ZERO : FILTER_RETURN);\n-        TransformKey key = TransformKey.of(kind, newType.ordinal());\n+        TransformKey key = TransformKey.of(FILTER_RETURN, constantZero ? (byte) 1 : (byte)0, newType.ordinal());\n@@ -1005,2 +1017,1 @@\n-        byte kind = (dropResult ? FOLD_SELECT_ARGS_TO_VOID : FOLD_SELECT_ARGS);\n-        TransformKey key = TransformKey.of(kind, foldPos, argPositions);\n+        TransformKey key = TransformKey.of(FOLD_SELECT_ARGS, foldPos << 1 | (dropResult ? 1 : 0), argPositions);\n@@ -1009,1 +1020,1 @@\n-            assert(form.arity == lambdaForm.arity - (kind == FOLD_SELECT_ARGS ? 1 : 0));\n+            assert(form.arity == lambdaForm.arity - (dropResult ? 0 : 1));\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaFormEditor.java","additions":34,"deletions":23,"binary":false,"changes":57,"status":"modified"}]}