{"files":[{"patch":"@@ -30,0 +30,1 @@\n+ * @requires os.family != \"mac\"\n@@ -321,0 +322,6 @@\n+        \/\/ Testing compressed class pointers without compressed oops.\n+        \/\/ This is only possible if the platform supports it. Notably,\n+        \/\/ on macOS, when compressed oops is disabled and the heap is\n+        \/\/ given an arbitrary address, that address occasionally collides\n+        \/\/ with where we would ideally have placed the compressed class\n+        \/\/ space. Therefore, macOS is omitted for now.\n@@ -329,14 +336,6 @@\n-        if (!Platform.isOSX()) {\n-            \/\/ Testing compressed class pointers without compressed oops.\n-            \/\/ This is only possible if the platform supports it. Notably,\n-            \/\/ on macOS, when compressed oops is disabled and the heap is\n-            \/\/ given an arbitrary address, that address occasionally collides\n-            \/\/ with where we would ideally have placed the compressed class\n-            \/\/ space. Therefore, macOS is omitted for now.\n-            smallHeapTestNoCoop();\n-            smallHeapTestWith1GNoCoop();\n-            largeHeapTestNoCoop();\n-            largePagesTestNoCoop();\n-            heapBaseMinAddressTestNoCoop();\n-            sharingTestNoCoop();\n-        }\n+        smallHeapTestNoCoop();\n+        smallHeapTestWith1GNoCoop();\n+        largeHeapTestNoCoop();\n+        largePagesTestNoCoop();\n+        heapBaseMinAddressTestNoCoop();\n+        sharingTestNoCoop();\n","filename":"test\/hotspot\/jtreg\/runtime\/CompressedOops\/CompressedClassPointers.java","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"}]}