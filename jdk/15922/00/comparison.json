{"files":[{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/shared\/genCollectedHeap.hpp\"\n+#include \"gc\/serial\/serialHeap.hpp\"\n@@ -135,1 +135,1 @@\n-  assert(GenCollectedHeap::heap()->is_old_gen(old_gen), \"precondition\");\n+  assert(SerialHeap::heap()->is_old_gen(old_gen), \"precondition\");\n@@ -196,1 +196,1 @@\n-class VerifyCTGenClosure: public GenCollectedHeap::GenClosure {\n+class VerifyCTGenClosure: public SerialHeap::GenClosure {\n@@ -202,1 +202,1 @@\n-    if (GenCollectedHeap::heap()->is_young_gen(gen)) {\n+    if (SerialHeap::heap()->is_young_gen(gen)) {\n@@ -419,1 +419,1 @@\n-  GenCollectedHeap::heap()->generation_iterate(&blk, false);\n+  SerialHeap::heap()->generation_iterate(&blk, false);\n@@ -442,1 +442,1 @@\n-  return GenCollectedHeap::heap()->is_in_young(p);\n+  return SerialHeap::heap()->is_in_young(p);\n","filename":"src\/hotspot\/share\/gc\/serial\/cardTableRS.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n+  SerialHeap* gch = SerialHeap::heap();\n@@ -559,1 +559,1 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n+  SerialHeap* gch = SerialHeap::heap();\n@@ -695,1 +695,1 @@\n-                        GenCollectedHeap::heap()->incremental_collection_will_fail(false \/* don't consult_young *\/) ?\n+                        SerialHeap::heap()->incremental_collection_will_fail(false \/* don't consult_young *\/) ?\n@@ -719,1 +719,1 @@\n-    GCPolicyCounters* gc_counters = GenCollectedHeap::heap()->counters();\n+    GCPolicyCounters* gc_counters = SerialHeap::heap()->counters();\n@@ -1012,2 +1012,1 @@\n-    GenCollectedHeap* gch = GenCollectedHeap::heap();\n-    _old_gen = gch->old_gen();\n+    _old_gen = SerialHeap::heap()->old_gen();\n@@ -1026,1 +1025,1 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n+  SerialHeap* gch = SerialHeap::heap();\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"gc\/shared\/genCollectedHeap.hpp\"\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.inline.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+#include \"gc\/serial\/serialHeap.hpp\"\n@@ -44,1 +45,0 @@\n-#include \"gc\/shared\/genCollectedHeap.hpp\"\n@@ -71,1 +71,1 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n+  SerialHeap* gch = SerialHeap::heap();\n@@ -132,1 +132,1 @@\n-  DefNewGeneration* young_gen = (DefNewGeneration*)GenCollectedHeap::heap()->young_gen();\n+  DefNewGeneration* young_gen = (DefNewGeneration*)SerialHeap::heap()->young_gen();\n@@ -150,1 +150,1 @@\n-    DefNewGeneration* young_gen = (DefNewGeneration*)GenCollectedHeap::heap()->young_gen();\n+    DefNewGeneration* young_gen = (DefNewGeneration*)SerialHeap::heap()->young_gen();\n@@ -163,1 +163,1 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n+  SerialHeap* gch = SerialHeap::heap();\n@@ -174,1 +174,1 @@\n-    gch->process_roots(GenCollectedHeap::SO_None,\n+    gch->process_roots(SerialHeap::SO_None,\n@@ -228,1 +228,1 @@\n-  GenCollectedHeap::heap()->prepare_for_compaction();\n+  SerialHeap::heap()->prepare_for_compaction();\n@@ -231,1 +231,1 @@\n-class GenAdjustPointersClosure: public GenCollectedHeap::GenClosure {\n+class GenAdjustPointersClosure: public SerialHeap::GenClosure {\n@@ -239,1 +239,1 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n+  SerialHeap* gch = SerialHeap::heap();\n@@ -247,1 +247,1 @@\n-  gch->process_roots(GenCollectedHeap::SO_AllCodeCache,\n+  gch->process_roots(SerialHeap::SO_AllCodeCache,\n@@ -260,1 +260,1 @@\n-class GenCompactClosure: public GenCollectedHeap::GenClosure {\n+class GenCompactClosure: public SerialHeap::GenClosure {\n@@ -272,1 +272,1 @@\n-  GenCollectedHeap::heap()->generation_iterate(&blk, true);\n+  SerialHeap::heap()->generation_iterate(&blk, true);\n","filename":"src\/hotspot\/share\/gc\/serial\/genMarkSweep.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-\/\/ GenCollectedHeap using a four-phase pointer forwarding algorithm.  All\n+\/\/ SerialHeap using a four-phase pointer forwarding algorithm.  All\n","filename":"src\/hotspot\/share\/gc\/serial\/markSweep.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/serial\/serialHeap.hpp\"\n@@ -34,1 +35,0 @@\n-#include \"gc\/shared\/genCollectedHeap.hpp\"\n@@ -51,1 +51,1 @@\n-    GenCollectedHeap::heap()->rem_set()->resize_covered_region(mr);\n+    SerialHeap::heap()->rem_set()->resize_covered_region(mr);\n@@ -138,1 +138,1 @@\n-  GenCollectedHeap::heap()->rem_set()->resize_covered_region(mr);\n+  SerialHeap::heap()->rem_set()->resize_covered_region(mr);\n@@ -308,1 +308,1 @@\n-  if (reserved_mr.end() != GenCollectedHeap::heap()->reserved_region().end()) {\n+  if (reserved_mr.end() != SerialHeap::heap()->reserved_region().end()) {\n@@ -393,1 +393,1 @@\n-  bool current_is_young = GenCollectedHeap::heap()->is_young_gen(current_generation);\n+  bool current_is_young = SerialHeap::heap()->is_young_gen(current_generation);\n@@ -432,1 +432,1 @@\n-  GenCollectedHeap* gch = GenCollectedHeap::heap();\n+  SerialHeap* gch = SerialHeap::heap();\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}