{"files":[{"patch":"@@ -54,2 +54,1 @@\n-       special        = tty            +   3,\n-       oopstorage     = special        +   3,\n+       oopstorage     = tty            +   3,\n","filename":"src\/hotspot\/share\/runtime\/mutex.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -228,3 +228,3 @@\n-  def(CodeCache_lock               , PaddedMonitor, special,     true,  _safepoint_check_never);\n-  def(CodeSweeper_lock             , PaddedMonitor, special-2,   true,  _safepoint_check_never);\n-  def(RawMonitor_lock              , PaddedMutex  , special,     true,  _safepoint_check_never);\n+  def(CodeCache_lock               , PaddedMonitor, nosafepoint-3, true,  _safepoint_check_never);\n+  def(CodeSweeper_lock             , PaddedMonitor, nosafepoint-5, true,  _safepoint_check_never);\n+  def(RawMonitor_lock              , PaddedMutex  , nosafepoint-1, true,  _safepoint_check_never);\n@@ -236,3 +236,3 @@\n-  def(Patching_lock                , PaddedMutex  , special,     true,  _safepoint_check_never);      \/\/ used for safepointing and code patching.\n-  def(CompiledMethod_lock          , PaddedMutex  , special-1,   true,  _safepoint_check_never);\n-  def(MonitorDeflation_lock        , PaddedMonitor, special,     true,  _safepoint_check_never);      \/\/ used for monitor deflation thread operations\n+  def(Patching_lock                , PaddedMutex  , nosafepoint,     true,  _safepoint_check_never);      \/\/ used for safepointing and code patching.\n+  def(CompiledMethod_lock          , PaddedMutex  , nosafepoint-4,   true,  _safepoint_check_never);\n+  def(MonitorDeflation_lock        , PaddedMonitor, nosafepoint,     true,  _safepoint_check_never);      \/\/ used for monitor deflation thread operations\n@@ -247,1 +247,1 @@\n-  def(JmethodIdCreation_lock       , PaddedMutex  , special-2,   true,  _safepoint_check_never); \/\/ used for creating jmethodIDs.\n+  def(JmethodIdCreation_lock       , PaddedMutex  , nosafepoint-2,   true,  _safepoint_check_never); \/\/ used for creating jmethodIDs.\n@@ -286,1 +286,1 @@\n-  def(DirectivesStack_lock         , PaddedMutex  , special,     true,  _safepoint_check_never);\n+  def(DirectivesStack_lock         , PaddedMutex  , nosafepoint,     true,  _safepoint_check_never);\n@@ -317,1 +317,1 @@\n-  def(UnsafeJlong_lock             , PaddedMutex  , special,     true,  _safepoint_check_never);\n+  def(UnsafeJlong_lock             , PaddedMutex  , nosafepoint,     true,  _safepoint_check_never);\n@@ -321,2 +321,2 @@\n-  def(NMethodSweeperStats_lock     , PaddedMutex  , special,     true,  _safepoint_check_never);\n-  def(ThreadsSMRDelete_lock        , PaddedMonitor, special,     true,  _safepoint_check_never);\n+  def(NMethodSweeperStats_lock     , PaddedMutex  , nosafepoint,   true,  _safepoint_check_never);\n+  def(ThreadsSMRDelete_lock        , PaddedMonitor, nosafepoint-3, true,  _safepoint_check_never); \/\/ Holds ConcurrentHashTableResize_lock\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -199,2 +199,0 @@\n-      assert(_mutex->rank() > Mutex::special || no_safepoint_check,\n-             \"Mutexes with rank special or lower should not do safepoint checks\");\n@@ -213,2 +211,0 @@\n-      assert(_mutex->rank() > Mutex::special || no_safepoint_check,\n-             \"Mutexes with rank special or lower should not do safepoint checks\");\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -146,2 +146,2 @@\n-TEST_VM_ASSERT_MSG(MutexRank, mutex_lock_tty_special,\n-                   \".* Attempting to acquire lock mutex_rank_special\/.* out of order with lock mutex_rank_tty\/.*\"\n+TEST_VM_ASSERT_MSG(MutexRank, mutex_lock_tty_nosafepoint,\n+                   \".* Attempting to acquire lock mutex_rank_nosafepoint\/.* out of order with lock mutex_rank_tty\/.*\"\n@@ -153,1 +153,1 @@\n-  Mutex* mutex_rank_special = new Mutex(Mutex::special, \"mutex_rank_special\", Mutex::_safepoint_check_never);\n+  Mutex* mutex_rank_nosafepoint = new Mutex(Mutex::nosafepoint, \"mutex_rank_nosafepoint\", Mutex::_safepoint_check_never);\n@@ -156,2 +156,2 @@\n-  mutex_rank_special->lock_without_safepoint_check();\n-  mutex_rank_special->unlock();\n+  mutex_rank_nosafepoint->lock_without_safepoint_check();\n+  mutex_rank_nosafepoint->unlock();\n@@ -207,2 +207,2 @@\n-TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_rank_special,\n-                   \".* Attempting to wait on monitor monitor_rank_special_minus_one\/.* while holding lock monitor_rank_special\/.*\"\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_rank_nosafepoint,\n+                   \".* Attempting to wait on monitor monitor_rank_nosafepoint_minus_one\/.* while holding lock monitor_rank_nosafepoint\/.*\"\n@@ -213,2 +213,2 @@\n-  Monitor* monitor_rank_special = new Monitor(Mutex::special, \"monitor_rank_special\", Mutex::_safepoint_check_never);\n-  Monitor* monitor_rank_special_minus_one = new Monitor(Mutex::special - 1, \"monitor_rank_special_minus_one\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_nosafepoint_minus_one = new Monitor(Mutex::nosafepoint - 1, \"monitor_rank_nosafepoint_minus_one\", Mutex::_safepoint_check_never);\n@@ -216,5 +216,5 @@\n-  monitor_rank_special->lock_without_safepoint_check();\n-  monitor_rank_special_minus_one->lock_without_safepoint_check();\n-  monitor_rank_special_minus_one->wait_without_safepoint_check(1);\n-  monitor_rank_special_minus_one->unlock();\n-  monitor_rank_special->unlock();\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint_minus_one->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint_minus_one->wait_without_safepoint_check(1);\n+  monitor_rank_nosafepoint_minus_one->unlock();\n+  monitor_rank_nosafepoint->unlock();\n@@ -239,2 +239,2 @@\n-TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_tty_special,\n-                   \".* Attempting to wait on monitor monitor_rank_tty\/.* while holding lock monitor_rank_special\/.*\"\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_tty_nosafepoint,\n+                   \".* Attempting to wait on monitor monitor_rank_tty\/.* while holding lock monitor_rank_nosafepoint\/.*\"\n@@ -245,1 +245,1 @@\n-  Monitor* monitor_rank_special = new Monitor(Mutex::special, \"monitor_rank_special\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never);\n@@ -248,1 +248,1 @@\n-  monitor_rank_special->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n@@ -252,1 +252,1 @@\n-  monitor_rank_special->unlock();\n+  monitor_rank_nosafepoint->unlock();\n@@ -255,1 +255,1 @@\n-TEST_VM_ASSERT_MSG(MutexRank, monitor_special_vm_block,\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_nosafepoint_vm_block,\n@@ -260,3 +260,3 @@\n-  Monitor* monitor_rank_special = new Monitor(Mutex::special, \"monitor_rank_special\", Mutex::_safepoint_check_never, false);\n-  monitor_rank_special->lock_without_safepoint_check();\n-  monitor_rank_special->unlock();\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never, false);\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint->unlock();\n","filename":"test\/hotspot\/gtest\/runtime\/test_mutex.cpp","additions":23,"deletions":23,"binary":false,"changes":46,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-TEST_VM_ASSERT_MSG(SafepointLockAssertTest, special_locks,\n+TEST_VM_ASSERT_MSG(SafepointLockAssertTest, nosafepoint_locks,\n@@ -47,1 +47,1 @@\n-  MutexLocker ml(new Mutex(Mutex::special, \"SpecialTest_lock\", Mutex::_safepoint_check_always),\n+  MutexLocker ml(new Mutex(Mutex::nosafepoint, \"SpecialTest_lock\", Mutex::_safepoint_check_always),\n@@ -55,1 +55,1 @@\n-  MutexLocker ml(new Mutex(Mutex::special, \"SpecialTest_lock\", Mutex::_safepoint_check_never),\n+  MutexLocker ml(new Mutex(Mutex::nosafepoint, \"SpecialTest_lock\", Mutex::_safepoint_check_never),\n@@ -58,1 +58,1 @@\n-  \/\/ If the lock above succeeds, try to safepoint to test the NSV implied with this special lock.\n+  \/\/ If the lock above succeeds, try to safepoint to test the NSV implied with this nosafepoint lock.\n","filename":"test\/hotspot\/gtest\/runtime\/test_safepoint_locks.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}