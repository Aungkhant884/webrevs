{"files":[{"patch":"@@ -136,1 +136,1 @@\n-  _metaspace_lock(new Mutex(Mutex::leaf-2, \"MetaspaceAllocation_lock\",\n+  _metaspace_lock(new Mutex(Mutex::nosafepoint-2, \"MetaspaceAllocation_lock\",\n","filename":"src\/hotspot\/share\/classfile\/classLoaderData.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n-    _monitor(Mutex::leaf,\n-             \"G1ServiceThread monitor\",\n+    _monitor(Mutex::nosafepoint,\n+             \"G1ServiceThread_lock\",\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ServiceThread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  _shadow_region_monitor = new Monitor(Mutex::barrier, \"CompactionManager monitor\",\n+  _shadow_region_monitor = new Monitor(Mutex::nosafepoint, \"CompactionManager_lock\",\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-  _blocker(Mutex::leaf, \"TaskTerminator\", Monitor::_safepoint_check_never),\n+  _blocker(Mutex::nosafepoint, \"TaskTerminator_lock\", Monitor::_safepoint_check_never),\n","filename":"src\/hotspot\/share\/gc\/shared\/taskTerminator.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-  : _monitor(Mutex::safepoint, \"work gang barrier sync\",\n+  : _monitor(Mutex::nosafepoint, \"WorkGangBarrierSync_lock\",\n","filename":"src\/hotspot\/share\/gc\/shared\/workgroup.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,2 +69,2 @@\n-    _monitor(Monitor::leaf,\n-             \"ZMessagePort\",\n+    _monitor(Monitor::nosafepoint,\n+             \"ZMessagePort_lock\",\n","filename":"src\/hotspot\/share\/gc\/z\/zMessagePort.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-    _monitor(Monitor::leaf, \"ZMetronome\", Monitor::_safepoint_check_never),\n+    _monitor(Monitor::nosafepoint, \"ZMetronome_lock\", Monitor::_safepoint_check_never),\n","filename":"src\/hotspot\/share\/gc\/z\/zMetronome.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -248,1 +248,1 @@\n-      _mutex(Mutex::leaf, \"ParHeapInspectTask_lock\", Mutex::_safepoint_check_never) {}\n+      _mutex(Mutex::nosafepoint, \"ParHeapInspectTask_lock\", Mutex::_safepoint_check_never) {}\n","filename":"src\/hotspot\/share\/memory\/heapInspection.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  Mutex* lock = new Mutex(Monitor::leaf, \"MetaspaceTestArea-lock\", Monitor::_safepoint_check_never);\n+  Mutex* lock = new Mutex(Monitor::nosafepoint, \"MetaspaceTestArea_lock\", Monitor::_safepoint_check_never);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/testHelpers.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-  _lock(Mutex::leaf, \"JvmtiTagMap_lock\", Mutex::_safepoint_check_never),\n+  _lock(Mutex::nosafepoint, \"JvmtiTagMap_lock\", Mutex::_safepoint_check_never),\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -411,1 +411,1 @@\n-  _lock(Monitor::leaf, \"HandshakeState\", Monitor::_safepoint_check_never),\n+  _lock(Monitor::nosafepoint, \"HandshakeState_lock\", Monitor::_safepoint_check_never),\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+\n@@ -101,1 +102,1 @@\n-      assert(rank() > Mutex::special, \"Potential deadlock with special or lesser rank mutex\");\n+      assert(rank() > Mutex::nosafepoint, \"Potential deadlock with nosafepoint or lesser rank mutex\");\n@@ -288,2 +289,2 @@\n-  assert(_rank < nonleaf || _safepoint_check_required == _safepoint_check_always,\n-         \"higher than nonleaf should safepoint %s\", name);\n+  assert(_rank > nosafepoint || _safepoint_check_required == _safepoint_check_never,\n+         \"Locks below nosafepoint rank should never safepoint: %s\", name);\n@@ -291,2 +292,2 @@\n-  assert(_rank > special || _safepoint_check_required == _safepoint_check_never,\n-         \"Special locks or below should never safepoint: %s\", name);\n+  assert(_rank <= nosafepoint || _safepoint_check_required == _safepoint_check_always,\n+         \"Locks above nosafepoint rank should safepoint: %s\", name);\n@@ -387,1 +388,1 @@\n-    \/\/ We enforce not holding locks of rank special or lower while waiting.\n+    \/\/ We enforce not holding locks of rank nosafepoint or lower while waiting.\n@@ -389,1 +390,1 @@\n-    if (least != NULL && (least->rank() <= special || least->rank() <= this->rank())) {\n+    if (least != NULL && (least->rank() <= nosafepoint || least->rank() <= this->rank())) {\n@@ -392,2 +393,3 @@\n-             least->rank() <= this->rank() ? \"Should wait on the least ranked monitor from \"\n-             \"all owned locks.\" : \"Should not block(wait) while holding a lock of rank special.\");\n+             least->rank() <= this->rank() ?\n+              \"Should wait on the least ranked monitor from all owned locks.\" :\n+              \"Should not block(wait) while holding a lock of rank nosafepoint or below.\");\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -51,3 +51,3 @@\n-       special        = tty            +   3,\n-       oopstorage     = special        +   3,\n-       leaf           = oopstorage     +  10,\n+       oopstorage     = tty            +   3,\n+       nosafepoint    = oopstorage     +   6,\n+       leaf           = nosafepoint    +   6,\n","filename":"src\/hotspot\/share\/runtime\/mutex.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -207,1 +207,1 @@\n-  def(STS_lock                     , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n+  def(STS_lock                     , PaddedMonitor, nosafepoint, true,  _safepoint_check_never);\n@@ -210,1 +210,1 @@\n-    def(CGC_lock                   , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n+    def(CGC_lock                   , PaddedMonitor, nosafepoint, true,  _safepoint_check_never);\n@@ -213,1 +213,1 @@\n-    def(G1DetachedRefinementStats_lock, PaddedMutex, leaf-2,     true, _safepoint_check_never);\n+    def(G1DetachedRefinementStats_lock, PaddedMutex, nosafepoint-2, true, _safepoint_check_never);\n@@ -216,1 +216,1 @@\n-    def(OldSets_lock               , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+    def(OldSets_lock               , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n@@ -218,1 +218,1 @@\n-    def(RootRegionScan_lock        , PaddedMonitor, leaf-1,      true,  _safepoint_check_never);\n+    def(RootRegionScan_lock        , PaddedMonitor, nosafepoint-1, true,  _safepoint_check_never);\n@@ -220,2 +220,2 @@\n-    def(MarkStackFreeList_lock     , PaddedMutex  , leaf     ,   true,  _safepoint_check_never);\n-    def(MarkStackChunkList_lock    , PaddedMutex  , leaf     ,   true,  _safepoint_check_never);\n+    def(MarkStackFreeList_lock     , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n+    def(MarkStackChunkList_lock    , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n@@ -225,2 +225,2 @@\n-  def(StringDedup_lock             , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n-  def(StringDedupIntern_lock       , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+  def(StringDedup_lock             , PaddedMonitor, nosafepoint, true,  _safepoint_check_never);\n+  def(StringDedupIntern_lock       , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n@@ -228,3 +228,3 @@\n-  def(CodeCache_lock               , PaddedMonitor, special,     true,  _safepoint_check_never);\n-  def(CodeSweeper_lock             , PaddedMonitor, special-2,   true,  _safepoint_check_never);\n-  def(RawMonitor_lock              , PaddedMutex  , special,     true,  _safepoint_check_never);\n+  def(CodeCache_lock               , PaddedMonitor, nosafepoint-3, true,  _safepoint_check_never);\n+  def(CodeSweeper_lock             , PaddedMonitor, nosafepoint-5, true,  _safepoint_check_never);\n+  def(RawMonitor_lock              , PaddedMutex  , nosafepoint-1, true,  _safepoint_check_never);\n@@ -233,1 +233,1 @@\n-  def(Metaspace_lock               , PaddedMutex  , leaf-3,      true,  _safepoint_check_never);\n+  def(Metaspace_lock               , PaddedMutex  , nosafepoint-3, true,  _safepoint_check_never);\n@@ -236,3 +236,3 @@\n-  def(Patching_lock                , PaddedMutex  , special,     true,  _safepoint_check_never);      \/\/ used for safepointing and code patching.\n-  def(CompiledMethod_lock          , PaddedMutex  , special-1,   true,  _safepoint_check_never);\n-  def(MonitorDeflation_lock        , PaddedMonitor, special,     true,  _safepoint_check_never);      \/\/ used for monitor deflation thread operations\n+  def(Patching_lock                , PaddedMutex  , nosafepoint,     true,  _safepoint_check_never);      \/\/ used for safepointing and code patching.\n+  def(CompiledMethod_lock          , PaddedMutex  , nosafepoint-4,   true,  _safepoint_check_never);\n+  def(MonitorDeflation_lock        , PaddedMonitor, nosafepoint,     true,  _safepoint_check_never);      \/\/ used for monitor deflation thread operations\n@@ -247,1 +247,1 @@\n-  def(JmethodIdCreation_lock       , PaddedMutex  , special-2,   true,  _safepoint_check_never); \/\/ used for creating jmethodIDs.\n+  def(JmethodIdCreation_lock       , PaddedMutex  , nosafepoint-2,   true,  _safepoint_check_never); \/\/ used for creating jmethodIDs.\n@@ -253,1 +253,1 @@\n-  def(InlineCacheBuffer_lock       , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+  def(InlineCacheBuffer_lock       , PaddedMutex  , nosafepoint-1, true,  _safepoint_check_never);\n@@ -256,1 +256,1 @@\n-  def(JNIHandleBlockFreeList_lock  , PaddedMutex  , leaf-1,      true,  _safepoint_check_never);      \/\/ handles are used by VM thread\n+  def(JNIHandleBlockFreeList_lock  , PaddedMutex  , nosafepoint-1, true,  _safepoint_check_never);      \/\/ handles are used by VM thread\n@@ -258,1 +258,1 @@\n-  def(SymbolArena_lock             , PaddedMutex  , leaf+2,      true,  _safepoint_check_never);\n+  def(SymbolArena_lock             , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n@@ -268,2 +268,2 @@\n-  def(NonJavaThreadsList_lock      , PaddedMutex,   leaf-1,      true,  _safepoint_check_never);\n-  def(NonJavaThreadsListSync_lock  , PaddedMutex,   leaf,        true,  _safepoint_check_never);\n+  def(NonJavaThreadsList_lock      , PaddedMutex,   nosafepoint-1, true,  _safepoint_check_never);\n+  def(NonJavaThreadsListSync_lock  , PaddedMutex,   nosafepoint, true,  _safepoint_check_never);\n@@ -274,2 +274,2 @@\n-  def(InitCompleted_lock           , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n-  def(VtableStubs_lock             , PaddedMutex  , leaf-2,      true,  _safepoint_check_never);\n+  def(InitCompleted_lock           , PaddedMonitor, nosafepoint, true,  _safepoint_check_never);\n+  def(VtableStubs_lock             , PaddedMutex  , nosafepoint-2, true,  _safepoint_check_never);\n@@ -283,1 +283,1 @@\n-  def(CompiledIC_lock              , PaddedMutex  , leaf+2,      true,  _safepoint_check_never);      \/\/ locks VtableStubs_lock, InlineCacheBuffer_lock\n+  def(CompiledIC_lock              , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);      \/\/ locks VtableStubs_lock, InlineCacheBuffer_lock\n@@ -286,1 +286,1 @@\n-  def(DirectivesStack_lock         , PaddedMutex  , special,     true,  _safepoint_check_never);\n+  def(DirectivesStack_lock         , PaddedMutex  , nosafepoint,     true,  _safepoint_check_never);\n@@ -290,1 +290,1 @@\n-  def(EscapeBarrier_lock           , PaddedMonitor, leaf,        true,  _safepoint_check_never);  \/\/ Used to synchronize object reallocation\/relocking triggered by JVMTI\n+  def(EscapeBarrier_lock           , PaddedMonitor, nosafepoint, true,  _safepoint_check_never);  \/\/ Used to synchronize object reallocation\/relocking triggered by JVMTI\n@@ -303,1 +303,1 @@\n-  def(Zip_lock                     , PaddedMonitor, leaf-2,      true,  _safepoint_check_never);\n+  def(Zip_lock                     , PaddedMonitor, nosafepoint-2, true,  _safepoint_check_never);\n@@ -306,1 +306,1 @@\n-    def(Compilation_lock           , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n+    def(Compilation_lock           , PaddedMonitor, nosafepoint, true,  _safepoint_check_never);\n@@ -311,1 +311,1 @@\n-  def(JfrBuffer_lock               , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+  def(JfrBuffer_lock               , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n@@ -313,1 +313,1 @@\n-  def(JfrThreadSampler_lock        , PaddedMonitor, leaf,        true,  _safepoint_check_never);\n+  def(JfrThreadSampler_lock        , PaddedMonitor, nosafepoint, true,  _safepoint_check_never);\n@@ -317,1 +317,1 @@\n-  def(UnsafeJlong_lock             , PaddedMutex  , special,     true,  _safepoint_check_never);\n+  def(UnsafeJlong_lock             , PaddedMutex  , nosafepoint,     true,  _safepoint_check_never);\n@@ -321,2 +321,2 @@\n-  def(NMethodSweeperStats_lock     , PaddedMutex  , special,     true,  _safepoint_check_never);\n-  def(ThreadsSMRDelete_lock        , PaddedMonitor, special,     true,  _safepoint_check_never);\n+  def(NMethodSweeperStats_lock     , PaddedMutex  , nosafepoint,   true,  _safepoint_check_never);\n+  def(ThreadsSMRDelete_lock        , PaddedMonitor, nosafepoint-3, true,  _safepoint_check_never);\n@@ -325,1 +325,1 @@\n-  def(DCmdFactory_lock             , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+  def(DCmdFactory_lock             , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n@@ -333,4 +333,4 @@\n-  def(DumpTimeTable_lock           , PaddedMutex  , leaf-1,      true,  _safepoint_check_never);\n-  def(CDSLambda_lock               , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n-  def(DumpRegion_lock              , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n-  def(ClassListFile_lock           , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+  def(DumpTimeTable_lock           , PaddedMutex  , nosafepoint-1, true,  _safepoint_check_never);\n+  def(CDSLambda_lock               , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n+  def(DumpRegion_lock              , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n+  def(ClassListFile_lock           , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n@@ -339,1 +339,1 @@\n-  def(Bootclasspath_lock           , PaddedMutex  , leaf,        true,  _safepoint_check_never);\n+  def(Bootclasspath_lock           , PaddedMutex  , nosafepoint, true,  _safepoint_check_never);\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.cpp","additions":40,"deletions":40,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -199,2 +199,0 @@\n-      assert(_mutex->rank() > Mutex::special || no_safepoint_check,\n-             \"Mutexes with rank special or lower should not do safepoint checks\");\n@@ -213,2 +211,0 @@\n-      assert(_mutex->rank() > Mutex::special || no_safepoint_check,\n-             \"Mutexes with rank special or lower should not do safepoint checks\");\n","filename":"src\/hotspot\/share\/runtime\/mutexLocker.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -371,1 +371,1 @@\n-  Monitor timer(Mutex::leaf, \"VM_Exit timer\", Monitor::_safepoint_check_never);\n+  Monitor timer(Mutex::nosafepoint, \"VM_ExitTimer_lock\", Monitor::_safepoint_check_never);\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -131,1 +131,1 @@\n-  _terminate_lock = new Monitor(Mutex::safepoint, \"VMThread::_terminate_lock\",\n+  _terminate_lock = new Monitor(Mutex::nosafepoint, \"VMThreadTerminate_lock\",\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-  _lock(new (std::nothrow) PaddedMonitor(Mutex::leaf, \"HProf Compression Backend\",\n+  _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"HProfCompressionBackend_lock\",\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-  _last_gc_lock = new Mutex(Mutex::leaf, \"_last_gc_lock\",\n+  _last_gc_lock = new Mutex(Mutex::nosafepoint, \"GCMemoryManager_lock\",\n","filename":"src\/hotspot\/share\/services\/memoryManager.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1017,1 +1017,1 @@\n-    new Mutex(Mutex::leaf-2, \"ConcurrentHashTableResize_lock\",\n+    new Mutex(Mutex::nosafepoint-2, \"ConcurrentHashTableResize_lock\",\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-    _lock = new Mutex(Monitor::leaf, \"gtest-IsMetaspaceObjTest-lock\", Monitor::_safepoint_check_never);\n+    _lock = new Mutex(Monitor::nosafepoint, \"gtest-IsMetaspaceObjTest_lock\", Monitor::_safepoint_check_never);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_is_metaspace_obj.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    _lock = new Mutex(Monitor::leaf, \"gtest-MetaspaceArenaTest-lock\", Monitor::_safepoint_check_never);\n+    _lock = new Mutex(Monitor::nosafepoint, \"gtest-MetaspaceArenaTest_lock\", Monitor::_safepoint_check_never);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    _lock = new Mutex(Monitor::leaf, \"gtest-MetaspaceArenaTestBed-lock\", Monitor::_safepoint_check_never);\n+    _lock = new Mutex(Monitor::nosafepoint, \"gtest-MetaspaceArenaTestBed_lock\", Monitor::_safepoint_check_never);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena_stress.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  m[i] = new Mutex(Mutex::leaf, FormatBuffer<128>(\"MyLock lock #%u\", i), Mutex::_safepoint_check_never);\n+  m[i] = new Mutex(Mutex::nosafepoint, FormatBuffer<128>(\"MyLock#%u_lock\", i), Mutex::_safepoint_check_never);\n@@ -49,1 +49,1 @@\n-    FormatBuffer<128> f(\"MyLock lock #%u\", i);\n+    FormatBuffer<128> f(\"MyLock#%u_lock\", i);\n@@ -131,2 +131,2 @@\n-TEST_VM_ASSERT_MSG(MutexRank, mutex_lock_event_leaf,\n-                   \".* Attempting to acquire lock mutex_rank_leaf\/.* out of order with lock mutex_rank_event\/0 \"\n+TEST_VM_ASSERT_MSG(MutexRank, mutex_lock_event_nosafepoint,\n+                   \".* Attempting to acquire lock mutex_rank_nosafepoint\/.* out of order with lock mutex_rank_event\/0 \"\n@@ -138,1 +138,1 @@\n-  Mutex* mutex_rank_leaf = new Mutex(Mutex::leaf, \"mutex_rank_leaf\", Mutex::_safepoint_check_never);\n+  Mutex* mutex_rank_nonleaf = new Mutex(Mutex::nosafepoint, \"mutex_rank_nosafepoint\", Mutex::_safepoint_check_never);\n@@ -141,2 +141,2 @@\n-  mutex_rank_leaf->lock_without_safepoint_check();\n-  mutex_rank_leaf->unlock();\n+  mutex_rank_nonleaf->lock_without_safepoint_check();\n+  mutex_rank_nonleaf->unlock();\n@@ -146,2 +146,2 @@\n-TEST_VM_ASSERT_MSG(MutexRank, mutex_lock_tty_special,\n-                   \".* Attempting to acquire lock mutex_rank_special\/.* out of order with lock mutex_rank_tty\/.*\"\n+TEST_VM_ASSERT_MSG(MutexRank, mutex_lock_tty_nosafepoint,\n+                   \".* Attempting to acquire lock mutex_rank_nosafepoint\/.* out of order with lock mutex_rank_tty\/.*\"\n@@ -153,1 +153,1 @@\n-  Mutex* mutex_rank_special = new Mutex(Mutex::special, \"mutex_rank_special\", Mutex::_safepoint_check_never);\n+  Mutex* mutex_rank_nosafepoint = new Mutex(Mutex::nosafepoint, \"mutex_rank_nosafepoint\", Mutex::_safepoint_check_never);\n@@ -156,2 +156,2 @@\n-  mutex_rank_special->lock_without_safepoint_check();\n-  mutex_rank_special->unlock();\n+  mutex_rank_nosafepoint->lock_without_safepoint_check();\n+  mutex_rank_nosafepoint->unlock();\n@@ -207,3 +207,3 @@\n-TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_rank_special,\n-                   \".* Attempting to wait on monitor monitor_rank_special_minus_one\/.* while holding lock monitor_rank_special\/.*\"\n-                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank special.\") {\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_rank_nosafepoint,\n+                   \".* Attempting to wait on monitor monitor_rank_nosafepoint_minus_one\/.* while holding lock monitor_rank_nosafepoint\/.*\"\n+                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank nosafepoint or below.\") {\n@@ -213,2 +213,2 @@\n-  Monitor* monitor_rank_special = new Monitor(Mutex::special, \"monitor_rank_special\", Mutex::_safepoint_check_never);\n-  Monitor* monitor_rank_special_minus_one = new Monitor(Mutex::special - 1, \"monitor_rank_special_minus_one\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_nosafepoint_minus_one = new Monitor(Mutex::nosafepoint - 1, \"monitor_rank_nosafepoint_minus_one\", Mutex::_safepoint_check_never);\n@@ -216,5 +216,5 @@\n-  monitor_rank_special->lock_without_safepoint_check();\n-  monitor_rank_special_minus_one->lock_without_safepoint_check();\n-  monitor_rank_special_minus_one->wait_without_safepoint_check(1);\n-  monitor_rank_special_minus_one->unlock();\n-  monitor_rank_special->unlock();\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint_minus_one->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint_minus_one->wait_without_safepoint_check(1);\n+  monitor_rank_nosafepoint_minus_one->unlock();\n+  monitor_rank_nosafepoint->unlock();\n@@ -225,1 +225,1 @@\n-                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank special.\") {\n+                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank nosafepoint or below.\") {\n@@ -239,3 +239,3 @@\n-TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_tty_special,\n-                   \".* Attempting to wait on monitor monitor_rank_tty\/.* while holding lock monitor_rank_special\/.*\"\n-                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank special.\") {\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_tty_nosafepoint,\n+                   \".* Attempting to wait on monitor monitor_rank_tty\/.* while holding lock monitor_rank_nosafepoint\/.*\"\n+                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank nosafepoint or below.\") {\n@@ -245,1 +245,1 @@\n-  Monitor* monitor_rank_special = new Monitor(Mutex::special, \"monitor_rank_special\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never);\n@@ -248,1 +248,1 @@\n-  monitor_rank_special->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n@@ -252,1 +252,1 @@\n-  monitor_rank_special->unlock();\n+  monitor_rank_nosafepoint->unlock();\n@@ -255,1 +255,1 @@\n-TEST_VM_ASSERT_MSG(MutexRank, monitor_special_vm_block,\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_nosafepoint_vm_block,\n@@ -260,3 +260,3 @@\n-  Monitor* monitor_rank_special = new Monitor(Mutex::special, \"monitor_rank_special\", Mutex::_safepoint_check_never, false);\n-  monitor_rank_special->lock_without_safepoint_check();\n-  monitor_rank_special->unlock();\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never, false);\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint->unlock();\n@@ -274,0 +274,10 @@\n+\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_nosafepoint_rank,\n+                   \".*failed: Locks above nosafepoint rank should safepoint: monitor_rank_leaf\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Monitor* monitor_rank_leaf = new Monitor(Mutex::leaf, \"monitor_rank_leaf\", Mutex::_safepoint_check_never);\n+  monitor_rank_leaf->lock_without_safepoint_check();\n+  monitor_rank_leaf->unlock();\n+}\n","filename":"test\/hotspot\/gtest\/runtime\/test_mutex.cpp","additions":43,"deletions":33,"binary":false,"changes":76,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-  MutexLocker ml(new Mutex(Mutex::leaf, \"SFPT_Test_lock\", Mutex::_safepoint_check_never),\n+  MutexLocker ml(new Mutex(Mutex::nosafepoint, \"SFPT_Test_lock\", Mutex::_safepoint_check_never),\n@@ -45,3 +45,3 @@\n-TEST_VM_ASSERT_MSG(SafepointLockAssertTest, special_locks,\n-    \".*Special locks or below should never safepoint\") {\n-  MutexLocker ml(new Mutex(Mutex::special, \"SpecialTest_lock\", Mutex::_safepoint_check_always),\n+TEST_VM_ASSERT_MSG(SafepointLockAssertTest, nosafepoint_locks,\n+    \".*Locks below nosafepoint rank should never safepoint: SpecialTest_lock\") {\n+  MutexLocker ml(new Mutex(Mutex::nosafepoint, \"SpecialTest_lock\", Mutex::_safepoint_check_always),\n@@ -55,1 +55,1 @@\n-  MutexLocker ml(new Mutex(Mutex::special, \"SpecialTest_lock\", Mutex::_safepoint_check_never),\n+  MutexLocker ml(new Mutex(Mutex::nosafepoint, \"SpecialTest_lock\", Mutex::_safepoint_check_never),\n@@ -58,1 +58,1 @@\n-  \/\/ If the lock above succeeds, try to safepoint to test the NSV implied with this special lock.\n+  \/\/ If the lock above succeeds, try to safepoint to test the NSV implied with this nosafepoint lock.\n","filename":"test\/hotspot\/gtest\/runtime\/test_safepoint_locks.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-  Mutex lock(Mutex::leaf, \"Test Lock\", Mutex::_safepoint_check_never);\n+  Mutex lock(Mutex::nosafepoint, \"Test_lock\", Mutex::_safepoint_check_never);\n","filename":"test\/hotspot\/gtest\/utilities\/test_filterQueue.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}