{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-  if (old_map != NULL) {\n+  if (old_map != nullptr) {\n@@ -57,1 +57,1 @@\n-  assert(map() == NULL, \"precondition\");\n+  assert(map() == nullptr, \"precondition\");\n@@ -83,1 +83,1 @@\n-    update(NULL, 0);\n+    update(nullptr, 0);\n","filename":"src\/hotspot\/share\/utilities\/bitMap.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-  ChunkedList<T, F>() : _top(_values), _next_used(NULL), _next_free(NULL) {}\n+  ChunkedList<T, F>() : _top(_values), _next_used(nullptr), _next_free(nullptr) {}\n","filename":"src\/hotspot\/share\/utilities\/chunkedList.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    Node(const VALUE& value, Node* next = NULL)\n+    Node(const VALUE& value, Node* next = nullptr)\n@@ -83,1 +83,1 @@\n-    static Node* create_node(void* context, const VALUE& value, Node* next = NULL) {\n+    static Node* create_node(void* context, const VALUE& value, Node* next = nullptr) {\n@@ -141,1 +141,1 @@\n-    Bucket() : _first(NULL) {};\n+    Bucket() : _first(nullptr) {};\n@@ -315,1 +315,1 @@\n-                 bool* have_dead, size_t* loops = NULL) const;\n+                 bool* have_dead, size_t* loops = nullptr) const;\n@@ -336,1 +336,1 @@\n-                      bool* grow_hint = NULL);\n+                      bool* grow_hint = nullptr);\n@@ -424,1 +424,1 @@\n-  bool is_safepoint_safe() { return _resize_lock_owner == NULL; }\n+  bool is_safepoint_safe() { return _resize_lock_owner == nullptr; }\n@@ -443,1 +443,1 @@\n-           bool* grow_hint = NULL);\n+           bool* grow_hint = nullptr);\n@@ -449,1 +449,1 @@\n-              bool* grow_hint = NULL, bool* clean_hint = NULL) {\n+              bool* grow_hint = nullptr, bool* clean_hint = nullptr) {\n@@ -460,1 +460,1 @@\n-                  bool* grow_hint = NULL, bool* clean_hint = NULL) {\n+                  bool* grow_hint = nullptr, bool* clean_hint = nullptr) {\n@@ -537,1 +537,1 @@\n-    VALUE* get(LOOKUP_FUNC& lookup_f, bool* grow_hint = NULL);\n+    VALUE* get(LOOKUP_FUNC& lookup_f, bool* grow_hint = nullptr);\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,1 @@\n-  while (clear_state(*ret) != NULL) {\n+  while (clear_state(*ret) != nullptr) {\n@@ -223,2 +223,2 @@\n-  if (Atomic::load_acquire(&_cht->_invisible_epoch) != NULL) {\n-    Atomic::release_store_fence(&_cht->_invisible_epoch, (Thread*)NULL);\n+  if (Atomic::load_acquire(&_cht->_invisible_epoch) != nullptr) {\n+    Atomic::release_store_fence(&_cht->_invisible_epoch, (Thread*)nullptr);\n@@ -253,3 +253,3 @@\n-  Node* pref = prefetch_bucket != NULL ? prefetch_bucket->first() : NULL;\n-  for (Node* next = bucket->first(); next != NULL ; next = next->next()) {\n-    if (pref != NULL) {\n+  Node* pref = prefetch_bucket != nullptr ? prefetch_bucket->first() : nullptr;\n+  for (Node* next = bucket->first(); next != nullptr ; next = next->next()) {\n+    if (pref != nullptr) {\n@@ -262,1 +262,1 @@\n-    if (next_pref != NULL) {\n+    if (next_pref != nullptr) {\n@@ -279,1 +279,1 @@\n-  for (Node* next = bucket->first(); next != NULL ; next = next->next()) {\n+  for (Node* next = bucket->first(); next != nullptr ; next = next->next()) {\n@@ -298,1 +298,1 @@\n-  assert(_invisible_epoch == NULL, \"Two thread doing bulk operations\");\n+  assert(_invisible_epoch == nullptr, \"Two thread doing bulk operations\");\n@@ -310,1 +310,1 @@\n-    if (_resize_lock_owner != NULL) {\n+    if (_resize_lock_owner != nullptr) {\n@@ -336,1 +336,1 @@\n-    if (_resize_lock_owner != NULL) {\n+    if (_resize_lock_owner != nullptr) {\n@@ -355,1 +355,1 @@\n-  _resize_lock_owner = NULL;\n+  _resize_lock_owner = nullptr;\n@@ -367,1 +367,1 @@\n-    while (node != NULL) {\n+    while (node != nullptr) {\n@@ -402,1 +402,1 @@\n-  _new_table = NULL;\n+  _new_table = nullptr;\n@@ -412,1 +412,1 @@\n-  assert(_new_table != NULL, \"Grow not proper setup before start\");\n+  assert(_new_table != nullptr, \"Grow not proper setup before start\");\n@@ -457,1 +457,1 @@\n-  while (rem_n != NULL) {\n+  while (rem_n != nullptr) {\n@@ -469,1 +469,1 @@\n-  if (rem_n == NULL) {\n+  if (rem_n == nullptr) {\n@@ -488,1 +488,1 @@\n-  assert((is_mt && _resize_lock_owner != NULL) ||\n+  assert((is_mt && _resize_lock_owner != nullptr) ||\n@@ -503,1 +503,1 @@\n-                              table->get_bucket(bucket_it+1) : NULL;\n+                              table->get_bucket(bucket_it+1) : nullptr;\n@@ -546,1 +546,1 @@\n-  while (rem_n != NULL) {\n+  while (rem_n != nullptr) {\n@@ -626,1 +626,1 @@\n-  while (node != NULL) {\n+  while (node != nullptr) {\n@@ -637,1 +637,1 @@\n-  if (loops != NULL) {\n+  if (loops != nullptr) {\n@@ -649,1 +649,1 @@\n-  if (aux == NULL) {\n+  if (aux == nullptr) {\n@@ -655,1 +655,1 @@\n-  Node* delete_me = NULL;\n+  Node* delete_me = nullptr;\n@@ -658,1 +658,1 @@\n-  while (aux != NULL) {\n+  while (aux != nullptr) {\n@@ -693,1 +693,1 @@\n-    if (delete_me != NULL) {\n+    if (delete_me != nullptr) {\n@@ -695,1 +695,1 @@\n-      delete_me = NULL;\n+      delete_me = nullptr;\n@@ -793,1 +793,1 @@\n-  assert(_table != NULL, \"table failed\");\n+  assert(_table != nullptr, \"table failed\");\n@@ -870,1 +870,1 @@\n-  VALUE* ret = NULL;\n+  VALUE* ret = nullptr;\n@@ -874,1 +874,1 @@\n-  if (node != NULL) {\n+  if (node != nullptr) {\n@@ -877,1 +877,1 @@\n-  if (grow_hint != NULL) {\n+  if (grow_hint != nullptr) {\n@@ -896,1 +896,1 @@\n-  Node* new_node = Node::create_node(_context, value, NULL);\n+  Node* new_node = Node::create_node(_context, value, nullptr);\n@@ -904,1 +904,1 @@\n-      if (old == NULL) {\n+      if (old == nullptr) {\n@@ -909,1 +909,1 @@\n-          new_node = NULL;\n+          new_node = nullptr;\n@@ -929,1 +929,1 @@\n-  if (new_node != NULL) {\n+  if (new_node != nullptr) {\n@@ -940,1 +940,1 @@\n-  if (grow_hint != NULL) {\n+  if (grow_hint != nullptr) {\n@@ -944,1 +944,1 @@\n-  if (clean_hint != NULL) {\n+  if (clean_hint != nullptr) {\n@@ -957,1 +957,1 @@\n-  while (current_node != NULL) {\n+  while (current_node != nullptr) {\n@@ -1018,1 +1018,1 @@\n-    : _context(context), _new_table(NULL), _log2_size_limit(log2size_limit),\n+    : _context(context), _new_table(nullptr), _log2_size_limit(log2size_limit),\n@@ -1020,1 +1020,1 @@\n-      _size_limit_reached(false), _resize_lock_owner(NULL),\n+      _size_limit_reached(false), _resize_lock_owner(nullptr),\n@@ -1094,1 +1094,1 @@\n-  if (val != NULL) {\n+  if (val != nullptr) {\n@@ -1164,1 +1164,1 @@\n-  if (table == NULL) {\n+  if (table == nullptr) {\n@@ -1239,1 +1239,1 @@\n-    while (current_node != NULL) {\n+    while (current_node != nullptr) {\n@@ -1293,1 +1293,1 @@\n-  assert(_new_table == NULL || _new_table == POISON_PTR, \"Must be NULL\");\n+  assert(_new_table == nullptr || _new_table == POISON_PTR, \"Must be nullptr\");\n@@ -1297,1 +1297,1 @@\n-    while (bucket->first() != NULL) {\n+    while (bucket->first() != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTable.inline.hpp","additions":46,"deletions":46,"binary":false,"changes":92,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -172,1 +172,1 @@\n-    assert(BucketsOperation::_cht->_resize_lock_owner != NULL,\n+    assert(BucketsOperation::_cht->_resize_lock_owner != nullptr,\n@@ -180,1 +180,1 @@\n-    assert(BucketsOperation::_cht->_resize_lock_owner != NULL,\n+    assert(BucketsOperation::_cht->_resize_lock_owner != nullptr,\n@@ -213,1 +213,1 @@\n-    assert(BucketsOperation::_cht->_resize_lock_owner != NULL,\n+    assert(BucketsOperation::_cht->_resize_lock_owner != nullptr,\n@@ -219,1 +219,1 @@\n-    assert(BucketsOperation::_cht->_resize_lock_owner != NULL,\n+    assert(BucketsOperation::_cht->_resize_lock_owner != nullptr,\n","filename":"src\/hotspot\/share\/utilities\/concurrentHashTableTasks.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,2 +70,2 @@\n-    assert(src != NULL, \"address must not be NULL\");\n-    assert(dst != NULL, \"address must not be NULL\");\n+    assert(src != nullptr, \"address must not be nullptr\");\n+    assert(dst != nullptr, \"address must not be nullptr\");\n","filename":"src\/hotspot\/share\/utilities\/copy.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-static void* g_assertion_context = NULL;\n+static void* g_assertion_context = nullptr;\n@@ -113,1 +113,1 @@\n-    if (s != NULL && ::strcmp(s, \"1\") == 0) {\n+    if (s != nullptr && ::strcmp(s, \"1\") == 0) {\n@@ -138,1 +138,1 @@\n-static const char* last_file_name = NULL;\n+static const char* last_file_name = nullptr;\n@@ -152,1 +152,1 @@\n-  if (base_name == NULL)\n+  if (base_name == nullptr)\n@@ -188,1 +188,1 @@\n-             && (foundp = strchr(look, sfile[0])) != NULL\n+             && (foundp = strchr(look, sfile[0])) != nullptr\n@@ -248,1 +248,1 @@\n-    if (detail_fmt != NULL) {\n+    if (detail_fmt != nullptr) {\n@@ -257,1 +257,1 @@\n-      if (message == NULL) {\n+      if (message == nullptr) {\n@@ -277,1 +277,1 @@\n-  void* context = NULL;\n+  void* context = nullptr;\n@@ -279,1 +279,1 @@\n-  if (g_assertion_context != NULL && os::current_thread_id() == g_asserting_thread) {\n+  if (g_assertion_context != nullptr && os::current_thread_id() == g_asserting_thread) {\n@@ -299,1 +299,1 @@\n-  void* context = NULL;\n+  void* context = nullptr;\n@@ -301,1 +301,1 @@\n-  if (g_assertion_context != NULL && os::current_thread_id() == g_asserting_thread) {\n+  if (g_assertion_context != nullptr && os::current_thread_id() == g_asserting_thread) {\n@@ -309,1 +309,1 @@\n-                          Thread::current_or_null(), NULL, NULL, context,\n+                          Thread::current_or_null(), nullptr, nullptr, context,\n@@ -320,1 +320,1 @@\n-  print_error_for_unit_test(NULL, detail_fmt, detail_args);\n+  print_error_for_unit_test(nullptr, detail_fmt, detail_args);\n@@ -424,2 +424,2 @@\n-  if (cb == NULL) {\n-    tty->print_cr(\"NULL\");\n+  if (cb == nullptr) {\n+    tty->print_cr(\"nullptr\");\n@@ -435,1 +435,1 @@\n-  if (cb != NULL) {\n+  if (cb != nullptr) {\n@@ -437,1 +437,1 @@\n-    if (nm != NULL) {\n+    if (nm != nullptr) {\n@@ -452,1 +452,1 @@\n-  if (cb != NULL && cb->is_nmethod()) {\n+  if (cb != nullptr && cb->is_nmethod()) {\n@@ -487,2 +487,2 @@\n-  if (p == NULL) {\n-    tty->print_cr(\"NULL\");\n+  if (p == nullptr) {\n+    tty->print_cr(\"nullptr\");\n@@ -519,1 +519,1 @@\n-  if (Thread::current_or_null() == NULL) return;\n+  if (Thread::current_or_null() == nullptr) return;\n@@ -586,1 +586,1 @@\n-  if (Thread::current_or_null() == NULL) return;\n+  if (Thread::current_or_null() == nullptr) return;\n@@ -623,1 +623,1 @@\n-  return (nm == NULL) ? (Method*)NULL : nm->method();\n+  return (nm == nullptr) ? (Method*)nullptr : nm->method();\n@@ -764,1 +764,1 @@\n-  if (os::platform_print_native_stack(tty, NULL, buf, sizeof(buf))) {\n+  if (os::platform_print_native_stack(tty, nullptr, buf, sizeof(buf))) {\n@@ -778,1 +778,1 @@\n-  return p != NULL && SafeFetchN((intptr_t*)const_cast<void*>(p), errvalue) != errvalue;\n+  return p != nullptr && SafeFetchN((intptr_t*)const_cast<void*>(p), errvalue) != errvalue;\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":26,"deletions":26,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,2 +41,2 @@\n-AbstractDecoder*  Decoder::_shared_decoder = NULL;\n-AbstractDecoder*  Decoder::_error_handler_decoder = NULL;\n+AbstractDecoder*  Decoder::_shared_decoder = nullptr;\n+AbstractDecoder*  Decoder::_error_handler_decoder = nullptr;\n@@ -48,1 +48,1 @@\n-  if (_shared_decoder == NULL) {\n+  if (_shared_decoder == nullptr) {\n@@ -55,1 +55,1 @@\n-  if (_error_handler_decoder == NULL) {\n+  if (_error_handler_decoder == nullptr) {\n@@ -72,2 +72,2 @@\n-  if (decoder == NULL || decoder->has_error()) {\n-    if (decoder != NULL) {\n+  if (decoder == nullptr || decoder->has_error()) {\n+    if (decoder != nullptr) {\n@@ -82,1 +82,1 @@\n-  assert(SharedDecoder_lock != NULL, \"Just check\");\n+  assert(SharedDecoder_lock != nullptr, \"Just check\");\n","filename":"src\/hotspot\/share\/utilities\/decoder.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-                      const char* modulepath = NULL, bool demangle = true) = 0;\n+                      const char* modulepath = nullptr, bool demangle = true) = 0;\n@@ -109,1 +109,1 @@\n-  static bool decode(address pc, char* buf, int buflen, int* offset, const char* modulepath = NULL, bool demangle = true);\n+  static bool decode(address pc, char* buf, int buflen, int* offset, const char* modulepath = nullptr, bool demangle = true);\n@@ -111,1 +111,1 @@\n-    return decode(pc, buf, buflen, offset, (const char*) NULL, demangle);\n+    return decode(pc, buf, buflen, offset, (const char*) nullptr, demangle);\n@@ -117,1 +117,1 @@\n-  \/\/ If filename != NULL, points to a buffer of size filename_len which will receive the\n+  \/\/ If filename != nullptr, points to a buffer of size filename_len which will receive the\n","filename":"src\/hotspot\/share\/utilities\/decoder.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n-  if (_opened_elf_files != NULL) {\n+  if (_opened_elf_files != nullptr) {\n@@ -35,1 +35,1 @@\n-    _opened_elf_files = NULL;\n+    _opened_elf_files = nullptr;\n@@ -41,1 +41,1 @@\n-  assert(buf != NULL && buflen > 0, \"Invalid buffer\");\n+  assert(buf != nullptr && buflen > 0, \"Invalid buffer\");\n@@ -44,1 +44,1 @@\n-  if (file == NULL) {\n+  if (file == nullptr) {\n@@ -84,1 +84,1 @@\n-  if (file == NULL) {\n+  if (file == nullptr) {\n@@ -109,1 +109,1 @@\n-  while (file != NULL) {\n+  while (file != nullptr) {\n@@ -117,2 +117,2 @@\n-  if (file != NULL) {\n-    if (_opened_elf_files != NULL) {\n+  if (file != nullptr) {\n+    if (_opened_elf_files != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/decoder_elf.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-    _opened_elf_files = NULL;\n+    _opened_elf_files = nullptr;\n","filename":"src\/hotspot\/share\/utilities\/decoder_elf.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-    _log_file = NULL;\n+    _log_file = nullptr;\n","filename":"src\/hotspot\/share\/utilities\/defaultStream.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-ElfSection::ElfSection(FILE* fd, const Elf_Shdr& hdr) : _section_data(NULL) {\n+ElfSection::ElfSection(FILE* fd, const Elf_Shdr& hdr) : _section_data(nullptr) {\n@@ -54,1 +54,1 @@\n-  if (_section_data != NULL) {\n+  if (_section_data != nullptr) {\n@@ -70,1 +70,1 @@\n-  if (_section_data == NULL) return NullDecoder::no_error;\n+  if (_section_data == nullptr) return NullDecoder::no_error;\n@@ -79,1 +79,1 @@\n-    _section_data = NULL;\n+    _section_data = nullptr;\n@@ -85,1 +85,1 @@\n-  assert(buf != NULL, \"no buffer\");\n+  assert(buf != nullptr, \"no buffer\");\n@@ -91,1 +91,1 @@\n-  assert(buf != NULL, \"no buffer\");\n+  assert(buf != nullptr, \"no buffer\");\n@@ -110,2 +110,2 @@\n-  _next(NULL), _filepath(os::strdup(filepath)), _file(NULL),\n-  _symbol_tables(NULL), _string_tables(NULL), _shdr_string_table(NULL), _funcDesc_table(NULL),\n+  _next(nullptr), _filepath(os::strdup(filepath)), _file(nullptr),\n+  _symbol_tables(nullptr), _string_tables(nullptr), _shdr_string_table(nullptr), _funcDesc_table(nullptr),\n@@ -124,1 +124,1 @@\n-  if (_file != NULL) {\n+  if (_file != nullptr) {\n@@ -168,1 +168,1 @@\n-  if (_file != NULL) {\n+  if (_file != nullptr) {\n@@ -214,1 +214,1 @@\n-      if (table == NULL) {\n+      if (table == nullptr) {\n@@ -218,1 +218,1 @@\n-        assert(_shdr_string_table == NULL, \"Only set once\");\n+        assert(_shdr_string_table == nullptr, \"Only set once\");\n@@ -226,1 +226,1 @@\n-      if (table == NULL) {\n+      if (table == nullptr) {\n@@ -250,1 +250,1 @@\n-  if (_funcDesc_table == NULL) {\n+  if (_funcDesc_table == nullptr) {\n@@ -259,1 +259,1 @@\n-  assert(name != NULL, \"No section name\");\n+  assert(name != nullptr, \"No section name\");\n@@ -262,1 +262,1 @@\n-  if (buf == NULL) {\n+  if (buf == nullptr) {\n@@ -266,1 +266,1 @@\n-  assert(_shdr_string_table != NULL, \"Section header string table should be loaded\");\n+  assert(_shdr_string_table != nullptr, \"Section header string table should be loaded\");\n@@ -302,1 +302,1 @@\n-  while (symbol_table != NULL) {\n+  while (symbol_table != nullptr) {\n@@ -315,1 +315,1 @@\n-  if (string_table == NULL) {\n+  if (string_table == nullptr) {\n@@ -325,1 +325,1 @@\n-  if (_symbol_tables == NULL) {\n+  if (_symbol_tables == nullptr) {\n@@ -334,1 +334,1 @@\n-  if (_string_tables == NULL) {\n+  if (_string_tables == nullptr) {\n@@ -344,1 +344,1 @@\n-  while (p != NULL) {\n+  while (p != nullptr) {\n@@ -348,1 +348,1 @@\n-  return NULL;\n+  return nullptr;\n","filename":"src\/hotspot\/share\/utilities\/elfFile.cpp","additions":24,"deletions":24,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -186,2 +186,2 @@\n-    assert(filepath != NULL, \"null file path\");\n-    return (_filepath != NULL && !strcmp(filepath, _filepath));\n+    assert(filepath != nullptr, \"null file path\");\n+    return (_filepath != nullptr && !strcmp(filepath, _filepath));\n","filename":"src\/hotspot\/share\/utilities\/elfFile.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -58,1 +58,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -61,1 +61,1 @@\n-  if (func_descs != NULL) {\n+  if (func_descs != nullptr) {\n@@ -70,1 +70,1 @@\n-      return NULL;\n+      return nullptr;\n","filename":"src\/hotspot\/share\/utilities\/elfFuncDescTable.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -135,1 +135,1 @@\n-  \/\/ return the function address for the function descriptor at 'index' or NULL on error\n+  \/\/ return the function address for the function descriptor at 'index' or nullptr on error\n","filename":"src\/hotspot\/share\/utilities\/elfFuncDescTable.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-  _next(NULL), _index(index), _section(file, shdr), _fd(file) {\n+  _next(nullptr), _index(index), _section(file, shdr), _fd(file) {\n@@ -42,1 +42,1 @@\n-  if (_next != NULL) {\n+  if (_next != nullptr) {\n@@ -58,1 +58,1 @@\n-  if (data != NULL) {\n+  if (data != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/elfStringTable.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,2 +34,2 @@\n-  _next(NULL), _fd(file), _section(file, shdr) {\n-  assert(file != NULL, \"null file handle\");\n+  _next(nullptr), _fd(file), _section(file, shdr) {\n+  assert(file != nullptr, \"null file handle\");\n@@ -44,1 +44,1 @@\n-  if (_next != NULL) {\n+  if (_next != nullptr) {\n@@ -54,1 +54,1 @@\n-    if (funcDescTable != NULL && funcDescTable->get_index() == sym->st_shndx) {\n+    if (funcDescTable != nullptr && funcDescTable->get_index() == sym->st_shndx) {\n@@ -83,1 +83,1 @@\n-  if (symbols != NULL) {\n+  if (symbols != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/elfSymbolTable.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,9 +36,9 @@\n-EventLog* Events::_logs = NULL;\n-StringEventLog* Events::_messages = NULL;\n-StringEventLog* Events::_vm_operations = NULL;\n-ExceptionsEventLog* Events::_exceptions = NULL;\n-StringEventLog* Events::_redefinitions = NULL;\n-UnloadingEventLog* Events::_class_unloading = NULL;\n-StringEventLog* Events::_class_loading = NULL;\n-StringEventLog* Events::_deopt_messages = NULL;\n-StringEventLog* Events::_dll_messages = NULL;\n+EventLog* Events::_logs = nullptr;\n+StringEventLog* Events::_messages = nullptr;\n+StringEventLog* Events::_vm_operations = nullptr;\n+ExceptionsEventLog* Events::_exceptions = nullptr;\n+StringEventLog* Events::_redefinitions = nullptr;\n+UnloadingEventLog* Events::_class_unloading = nullptr;\n+StringEventLog* Events::_class_loading = nullptr;\n+StringEventLog* Events::_deopt_messages = nullptr;\n+StringEventLog* Events::_dll_messages = nullptr;\n@@ -59,1 +59,1 @@\n-  while (log != NULL) {\n+  while (log != nullptr) {\n@@ -69,1 +69,1 @@\n-  while (log != NULL) {\n+  while (log != nullptr) {\n@@ -81,1 +81,1 @@\n-    while (log != NULL) {\n+    while (log != nullptr) {\n@@ -121,1 +121,1 @@\n-  _log_function(NULL, \"%s\", _buffer.buffer());\n+  _log_function(nullptr, \"%s\", _buffer.buffer());\n@@ -127,1 +127,1 @@\n-  _log_function(NULL, \"%s\", _buffer.buffer());\n+  _log_function(nullptr, \"%s\", _buffer.buffer());\n","filename":"src\/hotspot\/share\/utilities\/events.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,1 +151,1 @@\n-    if (e.thread != NULL) {\n+    if (e.thread != nullptr) {\n@@ -280,1 +280,1 @@\n-  if (LogEvents && _messages != NULL) {\n+  if (LogEvents && _messages != nullptr) {\n@@ -289,1 +289,1 @@\n-  if (LogEvents && _vm_operations != NULL) {\n+  if (LogEvents && _vm_operations != nullptr) {\n@@ -298,1 +298,1 @@\n-  if (LogEvents && _exceptions != NULL) {\n+  if (LogEvents && _exceptions != nullptr) {\n@@ -307,1 +307,1 @@\n-  if (LogEvents && _exceptions != NULL) {\n+  if (LogEvents && _exceptions != nullptr) {\n@@ -313,1 +313,1 @@\n-  if (LogEvents && _redefinitions != NULL) {\n+  if (LogEvents && _redefinitions != nullptr) {\n@@ -322,1 +322,1 @@\n-  if (LogEvents && _class_unloading != NULL) {\n+  if (LogEvents && _class_unloading != nullptr) {\n@@ -328,1 +328,1 @@\n-  if (LogEvents && _class_loading != NULL) {\n+  if (LogEvents && _class_loading != nullptr) {\n@@ -337,1 +337,1 @@\n-  if (LogEvents && _deopt_messages != NULL) {\n+  if (LogEvents && _deopt_messages != nullptr) {\n@@ -346,1 +346,1 @@\n-  if (LogEvents && _dll_messages != NULL) {\n+  if (LogEvents && _dll_messages != nullptr) {\n@@ -362,1 +362,1 @@\n-      if (Thread::current_or_null() == NULL) {\n+      if (Thread::current_or_null() == nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/events.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-  assert(exception != NULL && oopDesc::is_oop(exception), \"invalid exception oop\");\n+  assert(exception != nullptr && oopDesc::is_oop(exception), \"invalid exception oop\");\n@@ -64,1 +64,1 @@\n-  if (_pending_exception != NULL && lt.is_enabled()) {\n+  if (_pending_exception != nullptr && lt.is_enabled()) {\n@@ -70,2 +70,2 @@\n-  _pending_exception = NULL;\n-  _exception_file    = NULL;\n+  _pending_exception = nullptr;\n+  _exception_file    = nullptr;\n@@ -117,1 +117,1 @@\n-    if (h_name == NULL) {\n+    if (h_name == nullptr) {\n@@ -138,1 +138,1 @@\n-  assert(exception != NULL, \"exception should not be NULL\");\n+  assert(exception != nullptr, \"exception should not be nullptr\");\n@@ -145,1 +145,1 @@\n-  assert(h_exception() != NULL, \"exception should not be NULL\");\n+  assert(h_exception() != nullptr, \"exception should not be nullptr\");\n@@ -192,1 +192,1 @@\n-  Handle h_cause(thread, NULL);\n+  Handle h_cause(thread, nullptr);\n@@ -212,1 +212,1 @@\n-  _throw(thread, file, line, h_exception, NULL);\n+  _throw(thread, file, line, h_exception, nullptr);\n@@ -217,1 +217,1 @@\n-  if (special_exception(thread, file, line, name, NULL)) return;\n+  if (special_exception(thread, file, line, name, nullptr)) return;\n@@ -219,2 +219,2 @@\n-  Handle h_loader(thread, NULL);\n-  Handle h_prot(thread, NULL);\n+  Handle h_loader(thread, nullptr);\n+  Handle h_prot(thread, nullptr);\n@@ -229,1 +229,1 @@\n-  _throw_msg_cause(thread, file, line, name, message, h_cause, Handle(thread, NULL), Handle(thread, NULL));\n+  _throw_msg_cause(thread, file, line, name, message, h_cause, Handle(thread, nullptr), Handle(thread, nullptr));\n@@ -232,1 +232,1 @@\n-  _throw_msg(thread, file, line, name, message, Handle(thread, NULL), Handle(thread, NULL));\n+  _throw_msg(thread, file, line, name, message, Handle(thread, nullptr), Handle(thread, nullptr));\n@@ -235,1 +235,1 @@\n-  _throw_cause(thread, file, line, name, h_cause, Handle(thread, NULL), Handle(thread, NULL));\n+  _throw_cause(thread, file, line, name, h_cause, Handle(thread, nullptr), Handle(thread, nullptr));\n@@ -284,1 +284,1 @@\n-    assert(klass != NULL, \"klass must exist\");\n+    assert(klass != nullptr, \"klass must exist\");\n@@ -338,1 +338,1 @@\n-  Symbol* signature = NULL;\n+  Symbol* signature = nullptr;\n@@ -355,2 +355,2 @@\n-  Symbol* signature = NULL;\n-  if (message == NULL) {\n+  Symbol* signature = nullptr;\n+  if (message == nullptr) {\n@@ -404,3 +404,3 @@\n-  Handle       h_loader(thread, NULL);\n-  Handle       h_prot(thread, NULL);\n-  Handle       h_cause(thread, NULL);\n+  Handle       h_loader(thread, nullptr);\n+  Handle       h_prot(thread, nullptr);\n+  Handle       h_cause(thread, nullptr);\n@@ -423,1 +423,1 @@\n-    LogStream* ls = NULL;\n+    LogStream* ls = nullptr;\n@@ -436,1 +436,1 @@\n-      if (ls != NULL) {\n+      if (ls != nullptr) {\n@@ -444,1 +444,1 @@\n-    if (ls != NULL) {\n+    if (ls != nullptr) {\n@@ -535,1 +535,1 @@\n-  if (AbortVMOnException != NULL && value_string != NULL &&\n+  if (AbortVMOnException != nullptr && value_string != nullptr &&\n@@ -537,1 +537,1 @@\n-    if (AbortVMOnExceptionMessage == NULL || (message != NULL &&\n+    if (AbortVMOnExceptionMessage == nullptr || (message != nullptr &&\n@@ -539,1 +539,1 @@\n-      if (message == NULL) {\n+      if (message == nullptr) {\n@@ -549,1 +549,1 @@\n-  if (AbortVMOnException != NULL) {\n+  if (AbortVMOnException != nullptr) {\n@@ -556,1 +556,1 @@\n-  if (message == NULL && exception->is_a(vmClasses::Throwable_klass())) {\n+  if (message == nullptr && exception->is_a(vmClasses::Throwable_klass())) {\n@@ -558,1 +558,1 @@\n-    if (msg != NULL) {\n+    if (msg != nullptr) {\n@@ -569,1 +569,1 @@\n-  if (detail_message != NULL) {\n+  if (detail_message != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/exceptions.cpp","additions":33,"deletions":33,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-  bool has_pending_exception() const             { return _pending_exception != NULL; }\n+  bool has_pending_exception() const             { return _pending_exception != nullptr; }\n@@ -97,2 +97,2 @@\n-  ThreadShadow() : _pending_exception(NULL),\n-                   _exception_file(NULL), _exception_line(0) {}\n+  ThreadShadow() : _pending_exception(nullptr),\n+                   _exception_file(nullptr), _exception_line(0) {}\n@@ -127,1 +127,1 @@\n-  static void _throw(JavaThread* thread, const char* file, int line, Handle exception, const char* msg = NULL);\n+  static void _throw(JavaThread* thread, const char* file, int line, Handle exception, const char* msg = nullptr);\n@@ -187,3 +187,3 @@\n-  static void debug_check_abort(Handle exception, const char* message = NULL);\n-  static void debug_check_abort_helper(Handle exception, const char* message = NULL);\n-  static void debug_check_abort(const char *value_string, const char* message = NULL);\n+  static void debug_check_abort(Handle exception, const char* message = nullptr);\n+  static void debug_check_abort_helper(Handle exception, const char* message = nullptr);\n+  static void debug_check_abort(const char *value_string, const char* message = nullptr);\n@@ -228,1 +228,1 @@\n-#define CHECK_NULL                               CHECK_(NULL)\n+#define CHECK_NULL                               CHECK_(nullptr)\n@@ -237,1 +237,1 @@\n-#define CHECK_AND_CLEAR_NULL                    CHECK_AND_CLEAR_(NULL)\n+#define CHECK_AND_CLEAR_NULL                    CHECK_AND_CLEAR_(nullptr)\n@@ -247,1 +247,1 @@\n-#define CHECK_AND_CLEAR_NONASYNC_NULL           CHECK_AND_CLEAR_NONASYNC_(NULL)\n+#define CHECK_AND_CLEAR_NONASYNC_NULL           CHECK_AND_CLEAR_NONASYNC_(nullptr)\n@@ -263,1 +263,1 @@\n-  { Exceptions::_throw_msg(THREAD_AND_LOCATION, name, NULL); return;  }\n+  { Exceptions::_throw_msg(THREAD_AND_LOCATION, name, nullptr); return;  }\n@@ -284,1 +284,1 @@\n-  { Exceptions::_throw_msg(THREAD_AND_LOCATION, name, NULL); return result; }\n+  { Exceptions::_throw_msg(THREAD_AND_LOCATION, name, nullptr); return result; }\n@@ -309,1 +309,1 @@\n-#define THROW_MSG_CAUSE_NULL(name, message, cause) THROW_MSG_CAUSE_(name, message, cause, NULL)\n+#define THROW_MSG_CAUSE_NULL(name, message, cause) THROW_MSG_CAUSE_(name, message, cause, nullptr)\n@@ -311,2 +311,2 @@\n-#define THROW_NULL(name)                    THROW_(name, NULL)\n-#define THROW_MSG_NULL(name, message)       THROW_MSG_(name, message, NULL)\n+#define THROW_NULL(name)                    THROW_(name, nullptr)\n+#define THROW_MSG_NULL(name, message)       THROW_MSG_(name, message, nullptr)\n","filename":"src\/hotspot\/share\/utilities\/exceptions.hpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n-    Node(const E& e): _next(NULL), _data(e) { }\n+    Node(const E& e): _next(nullptr), _data(e) { }\n@@ -53,1 +53,1 @@\n-  FilterQueue() : _first(NULL) { }\n+  FilterQueue() : _first(nullptr) { }\n@@ -56,1 +56,1 @@\n-    return load_first() == NULL;\n+    return load_first() == nullptr;\n","filename":"src\/hotspot\/share\/utilities\/filterQueue.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,1 +52,1 @@\n-  if (cur == NULL) {\n+  if (cur == nullptr) {\n@@ -60,1 +60,1 @@\n-  } while (cur != NULL);\n+  } while (cur != nullptr);\n@@ -70,3 +70,3 @@\n-  Node*  prev        = NULL;\n-  Node*  match       = NULL;\n-  Node*  match_prev  = NULL;\n+  Node*  prev        = nullptr;\n+  Node*  match       = nullptr;\n+  Node*  match_prev  = nullptr;\n@@ -74,2 +74,2 @@\n-  if (cur == NULL) {\n-    return (E)NULL;\n+  if (cur == nullptr) {\n+    return (E)nullptr;\n@@ -86,1 +86,1 @@\n-    } while (cur != NULL);\n+    } while (cur != nullptr);\n@@ -88,2 +88,2 @@\n-    if (match == NULL) {\n-      return (E)NULL;\n+    if (match == nullptr) {\n+      return (E)nullptr;\n@@ -92,1 +92,1 @@\n-    if (match_prev == NULL) {\n+    if (match_prev == nullptr) {\n@@ -103,3 +103,3 @@\n-      prev        = NULL;\n-      match       = NULL;\n-      match_prev  = NULL;\n+      prev        = nullptr;\n+      match       = nullptr;\n+      match_prev  = nullptr;\n@@ -121,1 +121,1 @@\n-  Node*  match       = NULL;\n+  Node*  match       = nullptr;\n@@ -123,2 +123,2 @@\n-  if (cur == NULL) {\n-    return (E)NULL;\n+  if (cur == nullptr) {\n+    return (E)nullptr;\n@@ -131,1 +131,1 @@\n-  } while (cur != NULL);\n+  } while (cur != nullptr);\n@@ -133,2 +133,2 @@\n-  if (match == NULL) {\n-    return (E)NULL;\n+  if (match == nullptr) {\n+    return (E)nullptr;\n","filename":"src\/hotspot\/share\/utilities\/filterQueue.inline.hpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -163,0 +163,1 @@\n+  static_assert(sizeof(nullptr) == sizeof(char*), \"nullptr must be same size as pointer\");\n@@ -221,1 +222,1 @@\n-  NULL, NULL, NULL, NULL,\n+  nullptr, nullptr, nullptr, nullptr,\n@@ -255,1 +256,1 @@\n-    if (type2name_tab[t] != NULL && 0 == strcmp(type2name_tab[t], name))\n+    if (type2name_tab[t] != nullptr && 0 == strcmp(type2name_tab[t], name))\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.cpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -508,1 +508,1 @@\n-  if (this->_data != NULL) {\n+  if (this->_data != nullptr) {\n@@ -788,1 +788,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -845,1 +845,1 @@\n-  GrowableArrayIterator() : _array(NULL), _position(0) { }\n+  GrowableArrayIterator() : _array(nullptr), _position(0) { }\n","filename":"src\/hotspot\/share\/utilities\/growableArray.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-  _buckets = NULL;\n+  _buckets = nullptr;\n@@ -77,1 +77,1 @@\n-  if (obj == NULL) {\n+  if (obj == nullptr) {\n@@ -124,1 +124,1 @@\n-  if (buckets_new == NULL) {\n+  if (buckets_new == nullptr) {\n@@ -139,1 +139,1 @@\n-    for (BasicHashtableEntry<F>* p = _buckets[index_old].get_entry(); p != NULL; ) {\n+    for (BasicHashtableEntry<F>* p = _buckets[index_old].get_entry(); p != nullptr; ) {\n@@ -178,1 +178,1 @@\n-         e != NULL; e = e->next()) {\n+         e != nullptr; e = e->next()) {\n@@ -180,1 +180,1 @@\n-      T l = (literal_load_barrier != NULL) ? literal_load_barrier(e) : e->literal();\n+      T l = (literal_load_barrier != nullptr) ? literal_load_barrier(e) : e->literal();\n@@ -205,1 +205,1 @@\n-    while(entry != NULL) {\n+    while(entry != nullptr) {\n@@ -221,1 +221,1 @@\n-    for (T* probe = (T*)bucket(index); probe != NULL; probe = probe->next()) {\n+    for (T* probe = (T*)bucket(index); probe != nullptr; probe = probe->next()) {\n@@ -240,1 +240,1 @@\n-      for (T* probe = (T*)bucket(index); probe != NULL; probe = probe->next()) {\n+      for (T* probe = (T*)bucket(index); probe != nullptr; probe = probe->next()) {\n","filename":"src\/hotspot\/share\/utilities\/hashtable.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-  void clear()                        { _entry = NULL; }\n+  void clear()                        { _entry = nullptr; }\n@@ -157,1 +157,1 @@\n-    entry->set_next(NULL);\n+    entry->set_next(nullptr);\n@@ -205,2 +205,2 @@\n-  TableStatistics statistics_calculate(T (*literal_load_barrier)(HashtableEntry<T, F>*) = NULL);\n-  void print_table_statistics(outputStream* st, const char *table_name, T (*literal_load_barrier)(HashtableEntry<T, F>*) = NULL);\n+  TableStatistics statistics_calculate(T (*literal_load_barrier)(HashtableEntry<T, F>*) = nullptr);\n+  void print_table_statistics(outputStream* st, const char *table_name, T (*literal_load_barrier)(HashtableEntry<T, F>*) = nullptr);\n","filename":"src\/hotspot\/share\/utilities\/hashtable.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -100,1 +100,1 @@\n-  if (entry != NULL) {\n+  if (entry != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/hashtable.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-  return tmp == NULL ? s + strlen(s) : tmp;\n+  return tmp == nullptr ? s + strlen(s) : tmp;\n@@ -51,2 +51,2 @@\n-  assert(start != NULL, \"Need something to parse\");\n-  if (start == NULL) {\n+  assert(start != nullptr, \"Need something to parse\");\n+  if (start == nullptr) {\n@@ -54,1 +54,1 @@\n-    error(INTERNAL_ERROR, \"JSON parser was called with a string that was NULL.\");\n+    error(INTERNAL_ERROR, \"JSON parser was called with a string that was null.\");\n@@ -161,1 +161,1 @@\n-  if (!callback(JSON_OBJECT_BEGIN, NULL, level++)) {\n+  if (!callback(JSON_OBJECT_BEGIN, nullptr, level++)) {\n@@ -210,1 +210,1 @@\n-  return callback(JSON_OBJECT_END, NULL, --level);\n+  return callback(JSON_OBJECT_END, nullptr, --level);\n@@ -225,1 +225,1 @@\n-  if (!callback(JSON_ARRAY_BEGIN, NULL, level++)) {\n+  if (!callback(JSON_ARRAY_BEGIN, nullptr, level++)) {\n@@ -261,1 +261,1 @@\n-  return callback(JSON_ARRAY_END, NULL, --level);\n+  return callback(JSON_ARRAY_END, nullptr, --level);\n@@ -274,1 +274,1 @@\n-  if (end == NULL) {\n+  if (end == nullptr) {\n@@ -387,1 +387,1 @@\n-  return callback(symbol, NULL, level);\n+  return callback(symbol, nullptr, level);\n@@ -479,1 +479,1 @@\n-  assert(expected_string != NULL, \"need non-null string\");\n+  assert(expected_string != nullptr, \"need non-null string\");\n","filename":"src\/hotspot\/share\/utilities\/json.cpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-  LinkedListNode() : _next(NULL) { }\n+  LinkedListNode() : _next(nullptr) { }\n@@ -66,1 +66,1 @@\n-  LinkedListNode(const E& e): _data(e), _next(NULL) { }\n+  LinkedListNode(const E& e): _data(e), _next(nullptr) { }\n@@ -75,1 +75,1 @@\n-    return equal<E>(_data, t, NULL);\n+    return equal<E>(_data, t, nullptr);\n@@ -88,1 +88,1 @@\n-  LinkedList() : _head(NULL) { }\n+  LinkedList() : _head(nullptr) { }\n@@ -93,1 +93,1 @@\n-  inline bool is_empty()           const     { return head() == NULL; }\n+  inline bool is_empty()           const     { return head() == nullptr; }\n@@ -98,1 +98,1 @@\n-    for (p = head(); p != NULL; count++, p = p->next());\n+    for (p = head(); p != nullptr; count++, p = p->next());\n@@ -129,1 +129,1 @@\n-    if (h != NULL) {\n+    if (h != nullptr) {\n@@ -146,1 +146,1 @@\n-  LinkedListImpl() :  _arena(NULL) { }\n+  LinkedListImpl() :  _arena(nullptr) { }\n@@ -155,2 +155,2 @@\n-    this->set_head(NULL);\n-    while (p != NULL) {\n+    this->set_head(nullptr);\n+    while (p != nullptr) {\n@@ -166,1 +166,1 @@\n-    if (node != NULL) {\n+    if (node != nullptr) {\n@@ -174,1 +174,1 @@\n-    assert(node != NULL, \"NULL pointer\");\n+    assert(node != nullptr, \"nullptr pointer\");\n@@ -184,1 +184,1 @@\n-    while (node != NULL && node->next() != NULL) {\n+    while (node != nullptr && node->next() != nullptr) {\n@@ -187,1 +187,1 @@\n-    if (node == NULL) {\n+    if (node == nullptr) {\n@@ -193,1 +193,1 @@\n-    list->set_head(NULL);\n+    list->set_head(nullptr);\n@@ -198,2 +198,2 @@\n-    while (node != NULL) {\n-      if (this->add(*node->peek()) == NULL) {\n+    while (node != nullptr) {\n+      if (this->add(*node->peek()) == nullptr) {\n@@ -210,1 +210,1 @@\n-    while (p != NULL && !p->equals(e)) {\n+    while (p != nullptr && !p->equals(e)) {\n@@ -218,1 +218,1 @@\n-    return (node == NULL) ? NULL : node->data();\n+    return (node == nullptr) ? nullptr : node->data();\n@@ -225,1 +225,1 @@\n-    if (node == NULL) return NULL;\n+    if (node == nullptr) return nullptr;\n@@ -231,1 +231,1 @@\n-      while (p != NULL && p->next() != ref_node) {\n+      while (p != nullptr && p->next() != ref_node) {\n@@ -234,1 +234,1 @@\n-      assert(p != NULL, \"ref_node not in the list\");\n+      assert(p != nullptr, \"ref_node not in the list\");\n@@ -244,1 +244,1 @@\n-     if (node == NULL) return NULL;\n+     if (node == nullptr) return nullptr;\n@@ -254,1 +254,1 @@\n-     LinkedListNode<E>* prev = NULL;\n+     LinkedListNode<E>* prev = nullptr;\n@@ -256,1 +256,1 @@\n-     while (tmp != NULL) {\n+     while (tmp != nullptr) {\n@@ -269,1 +269,1 @@\n-    if (prev == NULL) {\n+    if (prev == nullptr) {\n@@ -273,1 +273,1 @@\n-      if (to_delete != NULL) {\n+      if (to_delete != nullptr) {\n@@ -278,1 +278,1 @@\n-    if (to_delete != NULL) {\n+    if (to_delete != nullptr) {\n@@ -292,1 +292,1 @@\n-    while (p != NULL && p->next() != node) {\n+    while (p != nullptr && p->next() != node) {\n@@ -295,1 +295,1 @@\n-    if (p != NULL) {\n+    if (p != nullptr) {\n@@ -305,1 +305,1 @@\n-    assert(ref != NULL, \"NULL pointer\");\n+    assert(ref != nullptr, \"nullptr pointer\");\n@@ -307,3 +307,3 @@\n-    LinkedListNode<E>* to_delete = NULL; \/\/ to be deleted\n-    LinkedListNode<E>* prev = NULL;      \/\/ node before the node to be deleted\n-    while (p != NULL && p != ref) {\n+    LinkedListNode<E>* to_delete = nullptr; \/\/ to be deleted\n+    LinkedListNode<E>* prev = nullptr;      \/\/ node before the node to be deleted\n+    while (p != nullptr && p != ref) {\n@@ -314,1 +314,1 @@\n-    if (p == NULL || to_delete == NULL) return false;\n+    if (p == nullptr || to_delete == nullptr) return false;\n@@ -316,1 +316,1 @@\n-    assert(prev == NULL || prev->next() == to_delete,\n+    assert(prev == nullptr || prev->next() == to_delete,\n@@ -318,1 +318,1 @@\n-    if (prev == NULL) {\n+    if (prev == nullptr) {\n@@ -334,1 +334,1 @@\n-         assert(_arena != NULL, \"Arena not set\");\n+         assert(_arena != nullptr, \"Arena not set\");\n@@ -353,1 +353,1 @@\n-     return NULL;\n+     return nullptr;\n@@ -381,1 +381,1 @@\n-    while ((node = list->unlink_head()) != NULL) {\n+    while ((node = list->unlink_head()) != nullptr) {\n@@ -388,1 +388,1 @@\n-    assert(node != NULL, \"NULL pointer\");\n+    assert(node != nullptr, \"nullptr pointer\");\n@@ -390,1 +390,1 @@\n-    LinkedListNode<E>* prev = NULL;\n+    LinkedListNode<E>* prev = nullptr;\n@@ -393,1 +393,1 @@\n-    while (tmp != NULL) {\n+    while (tmp != nullptr) {\n@@ -402,1 +402,1 @@\n-    if (prev != NULL) {\n+    if (prev != nullptr) {\n@@ -418,1 +418,1 @@\n-    while (p != NULL) {\n+    while (p != nullptr) {\n@@ -423,1 +423,1 @@\n-        return NULL;\n+        return nullptr;\n@@ -427,1 +427,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -439,1 +439,1 @@\n-  bool is_empty() const { return _p == NULL; }\n+  bool is_empty() const { return _p == nullptr; }\n@@ -442,1 +442,1 @@\n-    if (_p == NULL) return NULL;\n+    if (_p == nullptr) return nullptr;\n@@ -449,1 +449,1 @@\n-    if (_p == NULL) return NULL;\n+    if (_p == nullptr) return nullptr;\n","filename":"src\/hotspot\/share\/utilities\/linkedlist.hpp","additions":51,"deletions":51,"binary":false,"changes":102,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,1 +75,1 @@\n-  LockFreeStack() : _top(NULL) {}\n+  LockFreeStack() : _top(nullptr) {}\n@@ -79,1 +79,1 @@\n-  \/\/ pointer to that object, or NULL if this stack is empty. Acts as a\n+  \/\/ pointer to that object, or nullptr if this stack is empty. Acts as a\n@@ -87,2 +87,2 @@\n-      T* new_top = NULL;\n-      if (result != NULL) {\n+      T* new_top = nullptr;\n+      if (result != nullptr) {\n@@ -94,2 +94,2 @@\n-    if (result != NULL) {\n-      set_next(*result, NULL);\n+    if (result != nullptr) {\n+      set_next(*result, nullptr);\n@@ -100,1 +100,1 @@\n-  \/\/ Atomically exchange the list of elements with NULL, returning the old\n+  \/\/ Atomically exchange the list of elements with nullptr, returning the old\n@@ -104,1 +104,1 @@\n-    return Atomic::xchg(&_top, (T*)NULL);\n+    return Atomic::xchg(&_top, (T*)nullptr);\n@@ -110,1 +110,1 @@\n-    assert(next(value) == NULL, \"precondition\");\n+    assert(next(value) == nullptr, \"precondition\");\n@@ -117,1 +117,1 @@\n-  \/\/ precondition: next(last) == NULL.\n+  \/\/ precondition: next(last) == nullptr.\n@@ -120,1 +120,1 @@\n-    assert(next(last) == NULL, \"precondition\");\n+    assert(next(last) == nullptr, \"precondition\");\n@@ -123,1 +123,1 @@\n-      assert(p != NULL, \"invalid prepend list\");\n+      assert(p != nullptr, \"invalid prepend list\");\n@@ -137,1 +137,1 @@\n-      if (step_to == NULL) break;\n+      if (step_to == nullptr) break;\n@@ -144,1 +144,1 @@\n-  bool empty() const { return top() == NULL; }\n+  bool empty() const { return top() == nullptr; }\n@@ -146,1 +146,1 @@\n-  \/\/ Return the most recently pushed element, or NULL if the stack is empty.\n+  \/\/ Return the most recently pushed element, or nullptr if the stack is empty.\n@@ -154,1 +154,1 @@\n-    for (const T* current = top(); current != NULL; current = next(*current)) {\n+    for (const T* current = top(); current != nullptr; current = next(*current)) {\n","filename":"src\/hotspot\/share\/utilities\/lockFreeStack.hpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-    _stack[index] = NULL;\n+    _stack[index] = nullptr;\n@@ -67,1 +67,1 @@\n-    if (_stack[index] == NULL) {\n+    if (_stack[index] == nullptr) {\n@@ -90,1 +90,1 @@\n-      if (pc == NULL) break;\n+      if (pc == nullptr) break;\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-    return _stack[0] == NULL;\n+    return _stack[0] == nullptr;\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -119,1 +119,1 @@\n-    if (parts[i] != NULL && total->num() != parts[i]->num())\n+    if (parts[i] != nullptr && total->num() != parts[i]->num())\n","filename":"src\/hotspot\/share\/utilities\/numberSeq.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-        _fragment_list(NULL),\n-        _last_fragment_bits(NULL),\n+        _fragment_list(nullptr),\n+        _last_fragment_bits(nullptr),\n@@ -50,1 +50,1 @@\n-  while (current != NULL) {\n+  while (current != nullptr) {\n@@ -70,1 +70,1 @@\n-  CHeapBitMap* bits = NULL;\n+  CHeapBitMap* bits = nullptr;\n@@ -73,1 +73,1 @@\n-  if (found != NULL) {\n+  if (found != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/objectBitSet.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  _scratch     = NULL;\n+  _scratch     = nullptr;\n@@ -58,1 +58,1 @@\n-  _scratch     = NULL;\n+  _scratch     = nullptr;\n@@ -249,1 +249,1 @@\n-  if (iso8601_result != NULL) {\n+  if (iso8601_result != nullptr) {\n@@ -393,1 +393,1 @@\n-  assert(_buffer != NULL &&\n+  assert(_buffer != nullptr &&\n@@ -466,1 +466,1 @@\n-  if (force_directory != NULL) {\n+  if (force_directory != nullptr) {\n@@ -474,1 +474,1 @@\n-  int pid_pos = (pts == NULL) ? -1 : (pts - nametail);\n+  int pid_pos = (pts == nullptr) ? -1 : (pts - nametail);\n@@ -482,1 +482,1 @@\n-  int tms_pos = (pts == NULL) ? -1 : (pts - nametail);\n+  int tms_pos = (pts == nullptr) ? -1 : (pts - nametail);\n@@ -489,1 +489,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -496,1 +496,1 @@\n-  if (force_directory != NULL) {\n+  if (force_directory != nullptr) {\n@@ -504,2 +504,2 @@\n-  const char *p1st = NULL;\n-  const char *p2nd = NULL;\n+  const char *p1st = nullptr;\n+  const char *p2nd = nullptr;\n@@ -563,1 +563,1 @@\n-  if (_file != NULL) {\n+  if (_file != nullptr) {\n@@ -573,1 +573,1 @@\n-  if (_file != NULL) {\n+  if (_file != nullptr) {\n@@ -582,1 +582,1 @@\n-  if (_file != NULL)  {\n+  if (_file != nullptr)  {\n@@ -591,1 +591,1 @@\n-  if (_file != NULL) {\n+  if (_file != nullptr) {\n@@ -603,2 +603,2 @@\n-  char * ret = NULL;\n-  if (_file != NULL) {\n+  char * ret = nullptr;\n+  if (_file != nullptr) {\n@@ -616,1 +616,1 @@\n-  if (_file != NULL) {\n+  if (_file != nullptr) {\n@@ -618,1 +618,1 @@\n-    _file      = NULL;\n+    _file      = nullptr;\n@@ -623,1 +623,1 @@\n-  if (_file != NULL) {\n+  if (_file != nullptr) {\n@@ -639,1 +639,1 @@\n-defaultStream* defaultStream::instance = NULL;\n+defaultStream* defaultStream::instance = nullptr;\n@@ -661,1 +661,1 @@\n-  return _log_file != NULL;\n+  return _log_file != nullptr;\n@@ -665,2 +665,2 @@\n-  const char* try_name = make_log_name(log_name, NULL);\n-  if (try_name == NULL) {\n+  const char* try_name = make_log_name(log_name, nullptr);\n+  if (try_name == nullptr) {\n@@ -668,1 +668,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -682,1 +682,1 @@\n-  if (try_name == NULL) {\n+  if (try_name == nullptr) {\n@@ -684,1 +684,1 @@\n-    return NULL;\n+    return nullptr;\n@@ -696,1 +696,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -701,1 +701,1 @@\n-  const char* log_name = LogFile != NULL ? LogFile : \"hotspot_%p.log\";\n+  const char* log_name = LogFile != nullptr ? LogFile : \"hotspot_%p.log\";\n@@ -704,1 +704,1 @@\n-  if (file != NULL) {\n+  if (file != nullptr) {\n@@ -709,1 +709,1 @@\n-    \/\/ and leave xtty as NULL\n+    \/\/ and leave xtty as nullptr\n@@ -751,1 +751,1 @@\n-    if (Arguments::java_command() != NULL) {\n+    if (Arguments::java_command() != nullptr) {\n@@ -755,1 +755,1 @@\n-    if (Arguments::sun_java_launcher() != NULL) {\n+    if (Arguments::sun_java_launcher() != nullptr) {\n@@ -759,1 +759,1 @@\n-    if (Arguments::system_properties() !=  NULL) {\n+    if (Arguments::system_properties() !=  nullptr) {\n@@ -764,2 +764,2 @@\n-      for (SystemProperty* p = Arguments::system_properties(); p != NULL; p = p->next()) {\n-        assert(p->key() != NULL, \"p->key() is NULL\");\n+      for (SystemProperty* p = Arguments::system_properties(); p != nullptr; p = p->next()) {\n+        assert(p->key() != nullptr, \"p->key() is nullptr\");\n@@ -771,1 +771,1 @@\n-          assert(p->value() != NULL, \"p->value() is NULL\");\n+          assert(p->value() != nullptr, \"p->value() is nullptr\");\n@@ -798,1 +798,1 @@\n-  _log_file = NULL;\n+  _log_file = nullptr;\n@@ -801,1 +801,1 @@\n-  _outer_xmlStream = NULL;\n+  _outer_xmlStream = nullptr;\n@@ -821,2 +821,2 @@\n-    _log_file = NULL;\n-    _outer_xmlStream = NULL;\n+    _log_file = nullptr;\n+    _outer_xmlStream = nullptr;\n@@ -840,1 +840,1 @@\n-      tty_lock == NULL ||\n+      tty_lock == nullptr ||\n@@ -843,1 +843,1 @@\n-      Thread::current_or_null() == NULL ||\n+      Thread::current_or_null() == nullptr ||\n@@ -914,1 +914,1 @@\n-  if (defaultStream::instance == NULL)  return defaultStream::NO_WRITER;\n+  if (defaultStream::instance == nullptr)  return defaultStream::NO_WRITER;\n@@ -936,1 +936,1 @@\n-  if (defaultStream::instance != NULL &&\n+  if (defaultStream::instance != nullptr &&\n@@ -938,1 +938,1 @@\n-    if (xtty != NULL) {\n+    if (xtty != nullptr) {\n@@ -947,1 +947,1 @@\n-  if (defaultStream::instance == NULL) {\n+  if (defaultStream::instance == nullptr) {\n@@ -984,2 +984,2 @@\n-  xtty = NULL;\n-  defaultStream::instance = NULL;\n+  xtty = nullptr;\n+  defaultStream::instance = nullptr;\n@@ -993,1 +993,1 @@\n-  if (defaultStream::instance != NULL) {\n+  if (defaultStream::instance != nullptr) {\n@@ -1142,1 +1142,1 @@\n-    if (host != NULL) {\n+    if (host != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":52,"deletions":52,"binary":false,"changes":104,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -131,1 +131,1 @@\n-   virtual void rotate_log(bool force, outputStream* out = NULL) {} \/\/ GC log rotation\n+   virtual void rotate_log(bool force, outputStream* out = nullptr) {} \/\/ GC log rotation\n@@ -238,1 +238,1 @@\n-  fileStream() { _file = NULL; _need_close = false; }\n+  fileStream() { _file = nullptr; _need_close = false; }\n@@ -243,1 +243,1 @@\n-  bool is_open() const { return _file != NULL; }\n+  bool is_open() const { return _file != nullptr; }\n@@ -245,1 +245,1 @@\n-  size_t read(void *data, size_t size, size_t count) { return _file != NULL ? ::fread(data, size, count, _file) : 0; }\n+  size_t read(void *data, size_t size, size_t count) { return _file != nullptr ? ::fread(data, size, count, _file) : 0; }\n@@ -247,1 +247,1 @@\n-  int eof() { return _file != NULL ? feof(_file) : -1; }\n+  int eof() { return _file != nullptr ? feof(_file) : -1; }\n@@ -249,1 +249,1 @@\n-  void rewind() { if (_file != NULL) ::rewind(_file); }\n+  void rewind() { if (_file != nullptr) ::rewind(_file); }\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-  if (_preserved_exception_oop() != NULL) {\n+  if (_preserved_exception_oop() != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/preserveException.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-      while (node != NULL) {\n+      while (node != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/resizeableResourceHash.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-    _hash(hash), _key(key), _value(value), _next(NULL) {}\n+    _hash(hash), _key(key), _value(value), _next(nullptr) {}\n@@ -46,1 +46,1 @@\n-    _hash(hash), _key(key), _value(), _next(NULL) {}\n+    _hash(hash), _key(key), _value(), _next(nullptr) {}\n@@ -77,1 +77,1 @@\n-    while (*ptr != NULL) {\n+    while (*ptr != nullptr) {\n@@ -105,1 +105,1 @@\n-        while (node != NULL) {\n+        while (node != nullptr) {\n@@ -120,1 +120,1 @@\n-    return get(key) != NULL;\n+    return get(key) != nullptr;\n@@ -126,1 +126,1 @@\n-    if (*ptr != NULL) {\n+    if (*ptr != nullptr) {\n@@ -129,1 +129,1 @@\n-      return NULL;\n+      return nullptr;\n@@ -141,1 +141,1 @@\n-    if (*ptr != NULL) {\n+    if (*ptr != nullptr) {\n@@ -163,1 +163,1 @@\n-    if (*ptr == NULL) {\n+    if (*ptr == nullptr) {\n@@ -185,1 +185,1 @@\n-    if (*ptr == NULL) {\n+    if (*ptr == nullptr) {\n@@ -205,1 +205,1 @@\n-    if (node != NULL) {\n+    if (node != nullptr) {\n@@ -235,1 +235,1 @@\n-      while (node != NULL) {\n+      while (node != nullptr) {\n@@ -263,1 +263,1 @@\n-      while (*ptr != NULL) {\n+      while (*ptr != nullptr) {\n@@ -289,1 +289,1 @@\n-      while (node != NULL) {\n+      while (node != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/resourceHash.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -107,1 +107,1 @@\n-  inline bool is_empty() const { return this->_cur_seg == NULL; }\n+  inline bool is_empty() const { return this->_cur_seg == nullptr; }\n@@ -172,1 +172,1 @@\n-  \/\/ Set the segment pointers to NULL so the parent dtor does not free them;\n+  \/\/ Set the segment pointers to nullptr so the parent dtor does not free them;\n@@ -192,1 +192,1 @@\n-  bool is_empty() const { return _cur_seg == NULL; }\n+  bool is_empty() const { return _cur_seg == nullptr; }\n","filename":"src\/hotspot\/share\/utilities\/stack.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -190,1 +190,1 @@\n-  const bool at_empty_transition = prev == NULL;\n+  const bool at_empty_transition = prev == nullptr;\n@@ -201,1 +201,1 @@\n-  while (seg != NULL) {\n+  while (seg != nullptr) {\n@@ -213,1 +213,1 @@\n-  _cur_seg = NULL;\n+  _cur_seg = nullptr;\n@@ -216,1 +216,1 @@\n-    _cache = NULL;\n+    _cache = nullptr;\n@@ -230,1 +230,1 @@\n-  assert((_cache == NULL) == (this->cache_size() == 0), \"mismatch\");\n+  assert((_cache == nullptr) == (this->cache_size() == 0), \"mismatch\");\n","filename":"src\/hotspot\/share\/utilities\/stack.inline.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n-  for (char* dst = string; *dst && (dst = strstr(dst, from)) != NULL;) {\n+  for (char* dst = string; *dst && (dst = strstr(dst, from)) != nullptr;) {\n@@ -51,1 +51,1 @@\n-  assert(str1 != NULL && str2 != NULL, \"sanity\");\n+  assert(str1 != nullptr && str2 != nullptr, \"sanity\");\n","filename":"src\/hotspot\/share\/utilities\/stringUtils.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,2 +47,2 @@\n-  if (left == NULL)   left = \"U5: [\";\n-  if (right == NULL)  right = \"] (values=%d\/length=%d)\\n\";\n+  if (left == nullptr)   left = \"U5: [\";\n+  if (right == nullptr)  right = \"] (values=%d\/length=%d)\\n\";\n","filename":"src\/hotspot\/share\/utilities\/unsigned5.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -309,1 +309,1 @@\n-                  const char* left = NULL, const char* right = NULL);\n+                  const char* left = nullptr, const char* right = nullptr);\n@@ -326,2 +326,2 @@\n-      : _array(const_cast<ARR&>(array)), _limit_ptr(NULL), _position(0) {\n-      \/\/ Note: if _limit_ptr is NULL, the ARR& is never reassigned,\n+      : _array(const_cast<ARR&>(array)), _limit_ptr(nullptr), _position(0) {\n+      \/\/ Note: if _limit_ptr is nullptr, the ARR& is never reassigned,\n@@ -366,1 +366,1 @@\n-    bool has_limit() { return _limit_ptr != NULL; }\n+    bool has_limit() { return _limit_ptr != nullptr; }\n","filename":"src\/hotspot\/share\/utilities\/unsigned5.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -240,1 +240,1 @@\n-  char* result = NULL;\n+  char* result = nullptr;\n@@ -251,1 +251,1 @@\n-  char* buffer = NULL;\n+  char* buffer = nullptr;\n@@ -255,1 +255,1 @@\n-        if (buffer != NULL) {\n+        if (buffer != nullptr) {\n@@ -283,1 +283,1 @@\n-            if (buffer == NULL) {\n+            if (buffer == nullptr) {\n@@ -293,4 +293,4 @@\n-          case 't': if (buffer != NULL) buffer[length] = '\\t'; ptr += 2; length++; break;\n-          case 'n': if (buffer != NULL) buffer[length] = '\\n'; ptr += 2; length++; break;\n-          case 'r': if (buffer != NULL) buffer[length] = '\\r'; ptr += 2; length++; break;\n-          case 'f': if (buffer != NULL) buffer[length] = '\\f'; ptr += 2; length++; break;\n+          case 't': if (buffer != nullptr) buffer[length] = '\\t'; ptr += 2; length++; break;\n+          case 'n': if (buffer != nullptr) buffer[length] = '\\n'; ptr += 2; length++; break;\n+          case 'r': if (buffer != nullptr) buffer[length] = '\\r'; ptr += 2; length++; break;\n+          case 'f': if (buffer != nullptr) buffer[length] = '\\f'; ptr += 2; length++; break;\n","filename":"src\/hotspot\/share\/utilities\/utf8.cpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-  \/\/ Returns NULL if 'c' it not found. This only works as long\n+  \/\/ Returns nullptr if 'c' it not found. This only works as long\n@@ -83,1 +83,1 @@\n-    return (length < 0) ? NULL : &base[length];\n+    return (length < 0) ? nullptr : &base[length];\n","filename":"src\/hotspot\/share\/utilities\/utf8.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-static void *dlHandle = NULL;\n+static void *dlHandle = nullptr;\n@@ -33,2 +33,2 @@\n-static GuestLib_StatGet_t GuestLib_StatGet = NULL;\n-static GuestLib_StatFree_t GuestLib_StatFree = NULL;\n+static GuestLib_StatGet_t GuestLib_StatGet = nullptr;\n+static GuestLib_StatFree_t GuestLib_StatFree = nullptr;\n@@ -51,1 +51,1 @@\n-  if (dlHandle == NULL) {\n+  if (dlHandle == nullptr) {\n@@ -58,1 +58,1 @@\n-  if (dlHandle == NULL) {\n+  if (dlHandle == nullptr) {\n@@ -65,2 +65,2 @@\n-  if (GuestLib_StatGet != NULL && GuestLib_StatFree != NULL) {\n-    char* result_info = NULL;\n+  if (GuestLib_StatGet != nullptr && GuestLib_StatFree != nullptr) {\n+    char* result_info = nullptr;\n@@ -94,2 +94,2 @@\n-  if (GuestLib_StatGet != NULL && GuestLib_StatFree != NULL) {\n-    char* result_info = NULL;\n+  if (GuestLib_StatGet != nullptr && GuestLib_StatFree != nullptr) {\n+    char* result_info = nullptr;\n","filename":"src\/hotspot\/share\/utilities\/virtualizationSupport.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-\/\/  while ((cmd = next_OnError_command(buffer, sizeof(buffer), &ptr) != NULL)\n+\/\/  while ((cmd = next_OnError_command(buffer, sizeof(buffer), &ptr) != nullptr)\n@@ -130,1 +130,1 @@\n-  if (ptr == NULL || *ptr == NULL) return NULL;\n+  if (ptr == nullptr || *ptr == nullptr) return nullptr;\n@@ -137,1 +137,1 @@\n-  if (*cmd == '\\0') return NULL;\n+  if (*cmd == '\\0') return nullptr;\n@@ -149,1 +149,1 @@\n-  if (out == NULL) return;\n+  if (out == nullptr) return;\n@@ -151,1 +151,1 @@\n-  if (url == NULL || *url == '\\0')\n+  if (url == nullptr || *url == '\\0')\n@@ -153,1 +153,1 @@\n-  if (url != NULL && *url != '\\0') {\n+  if (url != nullptr && *url != '\\0') {\n@@ -185,1 +185,1 @@\n-  } else if (_filename != NULL && _lineno > 0) {\n+  } else if (_filename != nullptr && _lineno > 0) {\n@@ -274,1 +274,1 @@\n- * @param printed array of code units that have already been printed (delimited by NULL entry)\n+ * @param printed array of code units that have already been printed (delimited by nullptr entry)\n@@ -429,1 +429,1 @@\n-   const char* runtime_name = JDK_Version::runtime_name() != NULL ?\n+   const char* runtime_name = JDK_Version::runtime_name() != nullptr ?\n@@ -431,1 +431,1 @@\n-   const char* runtime_version = JDK_Version::runtime_version() != NULL ?\n+   const char* runtime_version = JDK_Version::runtime_version() != nullptr ?\n@@ -433,1 +433,1 @@\n-   const char* vendor_version = JDK_Version::runtime_vendor_version() != NULL ?\n+   const char* vendor_version = JDK_Version::runtime_vendor_version() != nullptr ?\n@@ -435,1 +435,1 @@\n-   const char* jdk_debug_level = VM_Version::printable_jdk_debug_level() != NULL ?\n+   const char* jdk_debug_level = VM_Version::printable_jdk_debug_level() != nullptr ?\n@@ -674,1 +674,1 @@\n-      if (_siginfo != NULL && os::signal_sent_by_kill(_siginfo)) {\n+      if (_siginfo != nullptr && os::signal_sent_by_kill(_siginfo)) {\n@@ -683,1 +683,1 @@\n-      if (_filename != NULL && _lineno > 0) {\n+      if (_filename != nullptr && _lineno > 0) {\n@@ -841,1 +841,1 @@\n-    if (thread != NULL && thread->is_Java_thread()) {\n+    if (thread != nullptr && thread->is_Java_thread()) {\n@@ -1009,1 +1009,1 @@\n-    if (Universe::heap() != NULL) {\n+    if (Universe::heap() != nullptr) {\n@@ -1302,1 +1302,1 @@\n-  if (pattern != NULL) {\n+  if (pattern != nullptr) {\n@@ -1310,1 +1310,1 @@\n-    if (cwd != NULL) {\n+    if (cwd != nullptr) {\n@@ -1323,1 +1323,1 @@\n-     if (tmpdir != NULL && strlen(tmpdir) > 0) {\n+     if (tmpdir != nullptr && strlen(tmpdir) > 0) {\n@@ -1339,1 +1339,1 @@\n-  report_and_die(sig, NULL, detail_fmt, detail_args, thread, pc, siginfo, context, NULL, 0, 0);\n+  report_and_die(sig, nullptr, detail_fmt, detail_args, thread, pc, siginfo, context, nullptr, 0, 0);\n@@ -1351,1 +1351,1 @@\n-  report_and_die(INTERNAL_ERROR, message, detail_fmt, detail_args, thread, NULL, NULL, context, filename, lineno, 0);\n+  report_and_die(INTERNAL_ERROR, message, detail_fmt, detail_args, thread, nullptr, nullptr, context, filename, lineno, 0);\n@@ -1356,1 +1356,1 @@\n-  report_and_die(vm_err_type, NULL, detail_fmt, detail_args, thread, NULL, NULL, NULL, filename, lineno, size);\n+  report_and_die(vm_err_type, nullptr, detail_fmt, detail_args, thread, nullptr, nullptr, nullptr, filename, lineno, size);\n@@ -1517,1 +1517,1 @@\n-              filename == NULL ? \"??\" : filename, lineno);\n+              filename == nullptr ? \"??\" : filename, lineno);\n@@ -1520,1 +1520,1 @@\n-              filename == NULL ? \"??\" : filename, lineno);\n+              filename == nullptr ? \"??\" : filename, lineno);\n@@ -1612,1 +1612,1 @@\n-    if (env != NULL) {\n+    if (env != nullptr) {\n@@ -1617,1 +1617,1 @@\n-        if (replay_data_file != NULL) {\n+        if (replay_data_file != nullptr) {\n@@ -1632,1 +1632,1 @@\n-  if (JVMCI::fatal_log_filename() != NULL) {\n+  if (JVMCI::fatal_log_filename() != nullptr) {\n@@ -1660,1 +1660,1 @@\n-    while ((cmd = next_OnError_command(buffer, sizeof(buffer), &ptr)) != NULL){\n+    while ((cmd = next_OnError_command(buffer, sizeof(buffer), &ptr)) != nullptr){\n@@ -1678,1 +1678,1 @@\n-    OnError = NULL;\n+    OnError = nullptr;\n@@ -1721,1 +1721,1 @@\n-  while ((cmd = next_OnError_command(buffer, sizeof(buffer), &ptr)) != NULL){\n+  while ((cmd = next_OnError_command(buffer, sizeof(buffer), &ptr)) != nullptr){\n@@ -1763,2 +1763,2 @@\n-      || (OnError != NULL && OnError[0] != '\\0')\n-      || Arguments::abort_hook() != NULL) {\n+      || (OnError != nullptr && OnError[0] != '\\0')\n+      || Arguments::abort_hook() != nullptr) {\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-  static Thread*     _thread;           \/\/ NULL if it's native thread\n+  static Thread*     _thread;           \/\/ nullptr if it's native thread\n@@ -190,1 +190,1 @@\n-  \/\/ Non-NULL address guaranteed to generate a SEGV mapping error on read, for test purposes.\n+  \/\/ Non-nullptr address guaranteed to generate a SEGV mapping error on read, for test purposes.\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-    const char* esc = NULL;\n+    const char* esc = nullptr;\n@@ -107,1 +107,1 @@\n-    if (esc != NULL) {\n+    if (esc != nullptr) {\n@@ -156,1 +156,1 @@\n-  size_t tag_len = (tag_end == NULL) ? strlen(tag) : tag_end - tag;\n+  size_t tag_len = (tag_end == nullptr) ? strlen(tag) : tag_end - tag;\n@@ -358,1 +358,1 @@\n-  if (kind_end != NULL) {\n+  if (kind_end != nullptr) {\n@@ -391,1 +391,1 @@\n-  if (method == NULL)  return;\n+  if (method == nullptr)  return;\n@@ -402,1 +402,1 @@\n-  if (mdo != NULL) {\n+  if (mdo != nullptr) {\n@@ -420,1 +420,1 @@\n-  if (method == NULL)  return;\n+  if (method == nullptr)  return;\n@@ -434,1 +434,1 @@\n-  if (klass == NULL) return;\n+  if (klass == nullptr) return;\n@@ -442,1 +442,1 @@\n-  if (klass == NULL) return;\n+  if (klass == nullptr) return;\n@@ -449,1 +449,1 @@\n-  if (name == NULL)  return;\n+  if (name == nullptr)  return;\n@@ -457,1 +457,1 @@\n-  if (name == NULL)  return;\n+  if (name == nullptr)  return;\n@@ -464,1 +464,1 @@\n-  if (x == NULL)  return;\n+  if (x == nullptr)  return;\n@@ -474,1 +474,1 @@\n-  if (x == NULL)  return;\n+  if (x == nullptr)  return;\n@@ -481,1 +481,1 @@\n-  if (x == NULL)  return;\n+  if (x == nullptr)  return;\n@@ -491,1 +491,1 @@\n-  if (x == NULL)  return;\n+  if (x == nullptr)  return;\n@@ -508,1 +508,1 @@\n-  if (_outer_xmlStream == NULL)  return;\n+  if (_outer_xmlStream == nullptr)  return;\n@@ -513,1 +513,1 @@\n-  if (_outer_xmlStream == NULL)  return;\n+  if (_outer_xmlStream == nullptr)  return;\n","filename":"src\/hotspot\/share\/utilities\/xmlstream.cpp","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-  xmlTextStream() { _outer_xmlStream = NULL; }\n+  xmlTextStream() { _outer_xmlStream = nullptr; }\n@@ -100,1 +100,1 @@\n-  bool is_open() { return _out != NULL; }\n+  bool is_open() { return _out != nullptr; }\n@@ -185,1 +185,1 @@\n-\/\/ Note:  If ::xtty != NULL, ::tty == ::xtty->text().\n+\/\/ Note:  If ::xtty != nullptr, ::tty == ::xtty->text().\n","filename":"src\/hotspot\/share\/utilities\/xmlstream.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}