{"files":[{"patch":"@@ -425,1 +425,1 @@\n-    tty->print_cr(\"nullptr\");\n+    tty->print_cr(\"null\");\n@@ -488,1 +488,1 @@\n-    tty->print_cr(\"nullptr\");\n+    tty->print_cr(\"null\");\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -163,1 +163,0 @@\n-  static_assert(sizeof(nullptr) == sizeof(char*), \"nullptr must be same size as pointer\");\n","filename":"src\/hotspot\/share\/utilities\/globalDefinitions.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -305,1 +305,1 @@\n-    assert(ref != nullptr, \"nullptr pointer\");\n+    assert(ref != nullptr, \"null pointer\");\n","filename":"src\/hotspot\/share\/utilities\/linkedlist.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -190,1 +190,1 @@\n-  \/\/ Non-nullptr address guaranteed to generate a SEGV mapping error on read, for test purposes.\n+  \/\/ Non-null address guaranteed to generate a SEGV mapping error on read, for test purposes.\n","filename":"src\/hotspot\/share\/utilities\/vmError.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}