{"files":[{"patch":"@@ -719,25 +719,0 @@\n-void Compilation::compile_only_this_method() {\n-  ResourceMark rm;\n-  fileStream stream(os::fopen(\"c1_compile_only\", \"wt\"));\n-  stream.print_cr(\"# c1 compile only directives\");\n-  compile_only_this_scope(&stream, hir()->top_scope());\n-}\n-\n-void Compilation::compile_only_this_scope(outputStream* st, IRScope* scope) {\n-  st->print(\"CompileOnly=\");\n-  scope->method()->holder()->name()->print_symbol_on(st);\n-  st->print(\".\");\n-  scope->method()->name()->print_symbol_on(st);\n-  st->cr();\n-}\n-\n-void Compilation::exclude_this_method() {\n-  fileStream stream(os::fopen(\".hotspot_compiler\", \"at\"));\n-  stream.print(\"exclude \");\n-  method()->holder()->name()->print_symbol_on(&stream);\n-  stream.print(\" \");\n-  method()->name()->print_symbol_on(&stream);\n-  stream.cr();\n-  stream.cr();\n-}\n-\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.cpp","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -223,10 +223,0 @@\n-#ifndef PRODUCT\n-  \/\/ debugging support.\n-  \/\/ produces a file named c1compileonly in the current directory with\n-  \/\/ directives to compile only the current method and it's inlines.\n-  \/\/ The file can be passed to the command line option -XX:Flags=<filename>\n-  void compile_only_this_method();\n-  void compile_only_this_scope(outputStream* st, IRScope* scope);\n-  void exclude_this_method();\n-#endif \/\/ PRODUCT\n-\n","filename":"src\/hotspot\/share\/c1\/c1_Compilation.hpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}