{"files":[{"patch":"@@ -287,1 +287,1 @@\n-        \/\/ overflows around 709.8, sinh(x) ~= exp(x)\/2; will will test\n+        \/\/ overflows around 709.8, sinh(x) ~= exp(x)\/2; will test\n@@ -628,1 +628,1 @@\n-        \/\/ overflows around 709.8, cosh(x) ~= exp(x)\/2; will will test\n+        \/\/ overflows around 709.8, cosh(x) ~= exp(x)\/2; will test\n","filename":"test\/jdk\/java\/lang\/Math\/HyperbolicTests.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n- * Class to have an indirectly missing annotation applied for for\n+ * Class to have an indirectly missing annotation applied for\n","filename":"test\/jdk\/java\/lang\/annotation\/Missing\/B.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-             * dividend (i.e. this) and and divisor since the scales\n+             * dividend (i.e. this) and divisor since the scales\n","filename":"test\/jdk\/java\/math\/BigDecimal\/DivideTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-            \/\/ schedule s2 to be be closed\n+            \/\/ schedule s2 to be closed\n","filename":"test\/jdk\/java\/net\/Socket\/Timeouts.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-                            System.err.println(\"ERROR: Client closed before before \" +\n+                            System.err.println(\"ERROR: Client closed before \" +\n","filename":"test\/jdk\/java\/net\/URLConnection\/DisconnectAfterEOF.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-   * Sometimes you may want to implement your own custom custom helper Publisher - to validate behaviour of a Subscriber\n+   * Sometimes you may want to implement your own custom helper Publisher - to validate behaviour of a Subscriber\n","filename":"test\/jdk\/java\/net\/httpclient\/reactivestreams-tck\/org\/reactivestreams\/tck\/WithHelperPublisher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-     * An abstract server identifies a server which listens on a port on on a\n+     * An abstract server identifies a server which listens on a port on a\n","filename":"test\/jdk\/java\/nio\/channels\/TestServers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n- *  multiple interfaces using using RMI class unmarshalling.  Test is\n+ *  multiple interfaces using RMI class unmarshalling.  Test is\n","filename":"test\/jdk\/java\/rmi\/server\/RMIClassLoader\/loadProxyClasses\/LoadProxyClasses.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -445,1 +445,1 @@\n-     * Check the status database for revocation information one one or more\n+     * Check the status database for revocation information on one or more\n","filename":"test\/jdk\/java\/security\/testlibrary\/SimpleOCSPServer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -328,1 +328,1 @@\n-     * Create a PrintWriter and use to to send output via DriverManager.println\n+     * Create a PrintWriter and use it to send output via DriverManager.println\n","filename":"test\/jdk\/java\/sql\/testng\/test\/sql\/DriverManagerTests.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -99,1 +99,1 @@\n-            \/\/ give them time to interfere with each each\n+            \/\/ give them time to interfere with each other\n","filename":"test\/jdk\/java\/util\/Properties\/ConcurrentLoadAndStoreXML.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -303,1 +303,1 @@\n-            \/\/ content of the file should have had no no effect yet.\n+            \/\/ content of the file should have had no effect yet.\n","filename":"test\/jdk\/java\/util\/logging\/LogManager\/Configuration\/updateConfiguration\/SimpleUpdateConfigurationTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -3116,1 +3116,1 @@\n-     * not in the file because the escapes should be be processed\n+     * not in the file because the escapes should be processed\n","filename":"test\/jdk\/java\/util\/regex\/RegExTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-                    throw new Error(\"exception exception not thrown\");\n+                    throw new Error(\"exception not thrown\");\n","filename":"test\/jdk\/java\/util\/spi\/ToolProviderTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -260,1 +260,1 @@\n-     * @return return true if starts with either \/packages or \/modules\n+     * @return true if starts with either \/packages or \/modules\n","filename":"test\/jdk\/jdk\/internal\/jimage\/JImageReadTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-                \/\/ nested remove for for same key and any value (even null)\n+                \/\/ nested remove for same key and any value (even null)\n","filename":"test\/jdk\/jdk\/internal\/loader\/ClassLoaderValue\/ClassLoaderValueTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        \/\/ Test: zip should should be returned in provider list\n+        \/\/ Test: zip should be returned in provider list\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-    \/\/ the the return value is not null.\n+    \/\/ the return value is not null.\n","filename":"test\/jdk\/jni\/nullCaller\/CallHelper.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n- *          that are are executable by all users\n+ *          that are executable by all users\n","filename":"test\/jdk\/tools\/jlink\/CheckExecutable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n- * <p> two char arrays arrays: <\/p>\n+ * <p> two char arrays: <\/p>\n","filename":"test\/lib\/jdk\/test\/lib\/format\/ArrayDiff.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}