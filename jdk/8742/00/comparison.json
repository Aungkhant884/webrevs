{"files":[{"patch":"@@ -82,0 +82,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -3295,1 +3296,2 @@\n-    private transient volatile ClassRepository genericInfo;\n+    @Stable\n+    private transient ClassRepository genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -76,0 +76,1 @@\n+    @Stable\n@@ -90,0 +91,1 @@\n+        var genericInfo = this.genericInfo;\n@@ -96,0 +98,1 @@\n+            this.genericInfo = genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Constructor.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,1 @@\n+    @Stable\n@@ -108,0 +109,1 @@\n+        var genericInfo = this.genericInfo;\n@@ -113,0 +115,1 @@\n+            this.genericInfo = genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Field.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -85,0 +85,1 @@\n+    @Stable\n@@ -111,0 +112,1 @@\n+        var genericInfo = this.genericInfo;\n@@ -116,0 +118,1 @@\n+            this.genericInfo = genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -57,0 +58,1 @@\n+    @Stable\n@@ -130,0 +132,1 @@\n+        var genericInfo = this.genericInfo;\n@@ -134,0 +137,1 @@\n+            this.genericInfo = genericInfo;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/RecordComponent.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -46,1 +47,2 @@\n-    private volatile Type superclass;\n+    @Stable\n+    private Type superclass;\n@@ -49,1 +51,2 @@\n-    private volatile Type[] superInterfaces;\n+    @Stable\n+    private Type[] superInterfaces;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/repository\/ClassRepository.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -47,1 +48,2 @@\n-    private volatile Type[] parameterTypes;\n+    @Stable\n+    private Type[] parameterTypes;\n@@ -50,1 +52,2 @@\n-    private volatile Type[] exceptionTypes;\n+    @Stable\n+    private Type[] exceptionTypes;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/repository\/ConstructorRepository.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -45,1 +46,2 @@\n-    private volatile Type genericType;\n+    @Stable\n+    private Type genericType;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/repository\/FieldRepository.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -48,1 +49,2 @@\n-    private volatile TypeVariable<?>[] typeParameters;\n+    @Stable\n+    private TypeVariable<?>[] typeParameters;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/repository\/GenericDeclRepository.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -43,1 +44,2 @@\n-    private volatile Type returnType;\n+    @Stable\n+    private Type returnType;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/repository\/MethodRepository.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import jdk.internal.vm.annotation.Stable;\n@@ -46,1 +47,2 @@\n-    private volatile Scope enclosingScope;\n+    @Stable\n+    private Scope enclosingScope;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/scope\/AbstractScope.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}