{"files":[{"patch":"@@ -2551,1 +2551,0 @@\n-    \/\/__ andr(flags, flags, 0x1);\n@@ -2772,1 +2771,0 @@\n-    \/\/__ andr(r5, r5, 0x1);\n@@ -3023,2 +3021,0 @@\n-  \/\/ Test for volatile\n-  \/\/__ andr(r3, r3, 0x1);\n@@ -3135,1 +3131,0 @@\n-    \/\/__ andr(r3, r3, 0x1);\n@@ -3198,1 +3193,0 @@\n-    \/\/__ andr(r3, r3, 0x1);\n@@ -3226,1 +3220,0 @@\n-    \/\/__ andr(r3, r3, 0x1);\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2937,0 +2937,1 @@\n+  const Register flags = rdx;\n@@ -2941,1 +2942,1 @@\n-  load_resolved_field_entry(obj, cache, tos, off, noreg, is_static);\n+  load_resolved_field_entry(obj, cache, tos, off, flags, is_static);\n@@ -3182,2 +3183,0 @@\n-  \/\/ Swap registers so flags has TOS state\n-  __ andl(flags, (1 << ResolvedFieldEntry::is_volatile_shift));\n@@ -3185,0 +3184,1 @@\n+  __ andl(flags, (1 << ResolvedFieldEntry::is_volatile_shift));\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}