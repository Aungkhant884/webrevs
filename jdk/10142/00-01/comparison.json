{"files":[{"patch":"@@ -1479,0 +1479,1 @@\n+      ResourceMark rm;\n@@ -1484,2 +1485,2 @@\n-      const char *msg1 = msg1_stream.base();\n-      const char *msg2 = msg2_stream.base();\n+      const char *msg1 = msg1_stream.as_string();\n+      const char *msg2 = msg2_stream.as_string();\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -218,4 +218,2 @@\n-  \/\/ Borrow the currently allocated string.\n-  \/\/ A stringStream may free the pointer returned\n-  \/\/ if any of its methods are called, therefore\n-  \/\/ take care in using this method.\n+  \/\/ Returns internal buffer containing the accumulated string.\n+  \/\/ Returned buffer is only guaranteed to be valid as long as stream is not modified\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -576,1 +576,1 @@\n-      tty->print_cr(\"%s\", message.base());\n+      tty->print_cr(\"%s\", message.as_string());\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}