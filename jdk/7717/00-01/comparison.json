{"files":[{"patch":"@@ -4306,1 +4306,1 @@\n-                                           XMMRegister xtmp1, KRegister ktmp1, KRegister ktmp2, int vec_enc) {\n+                                           KRegister ktmp1, int vec_enc) {\n@@ -4308,3 +4308,0 @@\n-    evfpclasspd(ktmp1, src, 0x7, vec_enc);\n-    evpmovq2m(ktmp2, src, vec_enc);\n-    evsubpd(xtmp1, k0, zero, one, true, vec_enc);\n@@ -4312,1 +4309,3 @@\n-    evmovdquq(dst, ktmp2, xtmp1, true, vec_enc);\n+    evfpclasspd(ktmp1, src, 0x50, vec_enc);\n+    evsubpd(dst, ktmp1, zero, one, true, vec_enc);\n+    evfpclasspd(ktmp1, src, 0x7, vec_enc);\n@@ -4316,3 +4315,0 @@\n-    evfpclassps(ktmp1, src, 0x7, vec_enc);\n-    evpmovd2m(ktmp2, src, vec_enc);\n-    evsubps(xtmp1, k0, zero, one, true, vec_enc);\n@@ -4320,1 +4316,3 @@\n-    evmovdqul(dst, ktmp2, xtmp1, true, vec_enc);\n+    evfpclassps(ktmp1, src, 0x50, vec_enc);\n+    evsubps(dst, ktmp1, zero, one, true, vec_enc);\n+    evfpclassps(ktmp1, src, 0x7, vec_enc);\n@@ -4326,1 +4324,1 @@\n-                                          XMMRegister xtmp1, XMMRegister xtmp2, XMMRegister xtmp3, int vec_enc) {\n+                                          XMMRegister xtmp1, XMMRegister xtmp2, int vec_enc) {\n@@ -4328,0 +4326,4 @@\n+    vmovdqu(dst, one);\n+    vcmppd(xtmp1, zero, src, Assembler::LT_OQ, vec_enc);\n+    vsubpd(xtmp2, zero, one, vec_enc);\n+    vblendvpd(dst, xtmp2, one, xtmp1, vec_enc);\n@@ -4331,3 +4333,0 @@\n-    vcmppd(xtmp2, zero, src, Assembler::LT_OS, vec_enc);\n-    vsubpd(xtmp3, zero, one, vec_enc);\n-    vblendvpd(dst, xtmp3, one, xtmp2, vec_enc);\n@@ -4337,0 +4336,4 @@\n+    vmovdqu(dst, one);\n+    vcmpps(xtmp1, zero, src, Assembler::LT_OQ, vec_enc);\n+    vsubps(xtmp2, zero, one, vec_enc);\n+    vblendvps(dst, xtmp2, one, xtmp1, vec_enc);\n@@ -4340,3 +4343,0 @@\n-    vcmpps(xtmp2, zero, src, Assembler::LT_OS, vec_enc);\n-    vsubps(xtmp3, zero, one, vec_enc);\n-    vblendvps(dst, xtmp3, one, xtmp2, vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -321,1 +321,1 @@\n-                         XMMRegister xtmp1, XMMRegister xtmp2, XMMRegister xtmp3, int vec_enc);\n+                         XMMRegister xtmp1, XMMRegister xtmp2, int vec_enc);\n@@ -324,1 +324,1 @@\n-                          XMMRegister xtmp1, KRegister ktmp1, KRegister ktmp2, int vec_enc);\n+                          KRegister ktmp1, int vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -6080,1 +6080,1 @@\n-instruct signumV_reg_avx(vec dst, vec src, vec zero, vec one, vec xtmp1, vec xtmp2, vec xtmp3, rFlagsReg cr) %{\n+instruct signumV_reg_avx(vec dst, vec src, vec zero, vec one, vec xtmp1, vec xtmp2, rFlagsReg cr) %{\n@@ -6084,2 +6084,2 @@\n-  effect(TEMP dst, TEMP xtmp1, TEMP xtmp2, TEMP xtmp3, KILL cr);\n-  format %{ \"vector_signum_avx $dst, $src\\t! using $xtmp1, $xtmp2, and $xtmp3 as TEMP\" %}\n+  effect(TEMP dst, TEMP xtmp1, TEMP xtmp2, KILL cr);\n+  format %{ \"vector_signum_avx $dst, $src\\t! using $xtmp1, and $xtmp2 as TEMP\" %}\n@@ -6090,1 +6090,1 @@\n-                         $xtmp1$$XMMRegister, $xtmp2$$XMMRegister, $xtmp3$$XMMRegister, vec_enc);\n+                         $xtmp1$$XMMRegister, $xtmp2$$XMMRegister, vec_enc);\n@@ -6095,1 +6095,1 @@\n-instruct signumV_reg_evex(vec dst, vec src, vec zero, vec one, vec xtmp1, kReg ktmp1, kReg ktmp2, rFlagsReg cr) %{\n+instruct signumV_reg_evex(vec dst, vec src, vec zero, vec one, kReg ktmp1, rFlagsReg cr) %{\n@@ -6099,2 +6099,2 @@\n-  effect(TEMP dst, TEMP xtmp1, TEMP ktmp1, TEMP ktmp2, KILL cr);\n-  format %{ \"vector_signum_evex $dst, $src\\t! using $xtmp1, $ktmp1 and $ktmp2 as TEMP\" %}\n+  effect(TEMP dst, TEMP ktmp1, KILL cr);\n+  format %{ \"vector_signum_evex $dst, $src\\t! using $ktmp1 as TEMP\" %}\n@@ -6105,1 +6105,1 @@\n-                          $xtmp1$$XMMRegister, $ktmp1$$KRegister, $ktmp2$$KRegister, vec_enc);\n+                          $ktmp1$$KRegister, vec_enc);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -359,11 +359,0 @@\n-      test_signum(a0, a1);\n-      errn += verify(\"test_signum: \", 0, a0[0], (Double.NaN));\n-      errn += verify(\"test_signum: \", 1, a0[1],  1.0);\n-      errn += verify(\"test_signum: \", 2, a0[2], -1.0);\n-      errn += verify(\"test_signum: \", 3, a0[3],  1.0);\n-      errn += verify(\"test_signum: \", 4, a0[4],  1.0);\n-      errn += verify(\"test_signum: \", 5, a0[5],  1.0);\n-      for (int i=6; i<ARRLEN; i++) {\n-        errn += verify(\"test_signum: \", i, a0[i], (double)(((double)(ADD_INIT+i)) > 0.0 ? 1.0 : -1.0));\n-      }\n-\n@@ -436,0 +425,14 @@\n+\n+      test_signum(a0, a1);\n+      errn += verify(\"test_signum: \", 0, a0[0], (Double.NaN));\n+      errn += verify(\"test_signum: \", 1, a0[1],  1.0);\n+      errn += verify(\"test_signum: \", 2, a0[2], -1.0);\n+      errn += verify(\"test_signum: \", 3, a0[3],  1.0);\n+      errn += verify(\"test_signum: \", 4, a0[4],  1.0);\n+      errn += verify(\"test_signum: \", 5, a0[5],  1.0);\n+      errn += verify(\"test_signum: \", 6, a0[6],  0.0);\n+      errn += verify(\"test_signum: \", 7, a0[7], -0.0);\n+      for (int i=8; i<ARRLEN; i++) {\n+        errn += verify(\"test_signum: \", i, a0[i], (double)(((double)(ADD_INIT+i)) > 0.0 ? 1.0 : -1.0));\n+      }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestDoubleVect.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -346,11 +346,0 @@\n-      test_signum(a0, a1);\n-      errn += verify(\"test_signum: \", 0, a0[0], (Float.NaN));\n-      errn += verify(\"test_signum: \", 1, a0[1],  1.0f);\n-      errn += verify(\"test_signum: \", 2, a0[2], -1.0f);\n-      errn += verify(\"test_signum: \", 3, a0[3],  1.0f);\n-      errn += verify(\"test_signum: \", 4, a0[4],  1.0f);\n-      errn += verify(\"test_signum: \", 5, a0[5],  1.0f);\n-      for (int i=6; i<ARRLEN; i++) {\n-        errn += verify(\"test_signum: \", i, a0[i], (((float)(ADD_INIT+i)) > 0.0f ? 1.0f : -1.0f));\n-      }\n-\n@@ -385,0 +374,13 @@\n+      test_signum(a0, a1);\n+      errn += verify(\"test_signum: \", 0, a0[0], (Float.NaN));\n+      errn += verify(\"test_signum: \", 1, a0[1],  1.0f);\n+      errn += verify(\"test_signum: \", 2, a0[2], -1.0f);\n+      errn += verify(\"test_signum: \", 3, a0[3],  1.0f);\n+      errn += verify(\"test_signum: \", 4, a0[4],  1.0f);\n+      errn += verify(\"test_signum: \", 5, a0[5],  1.0f);\n+      errn += verify(\"test_signum: \", 6, a0[6],  0.0f);\n+      errn += verify(\"test_signum: \", 7, a0[7], -0.0f);\n+      for (int i=8; i<ARRLEN; i++) {\n+        errn += verify(\"test_signum: \", i, a0[i], (((float)(ADD_INIT+i)) > 0.0f ? 1.0f : -1.0f));\n+      }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/cr6340864\/TestFloatVect.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"}]}