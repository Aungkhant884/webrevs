{"files":[{"patch":"@@ -3038,30 +3038,0 @@\n-  \/\/ Use release_store for card-marking to ensure that previous\n-  \/\/ oop-stores are visible before the card-mark change.\n-  enc_class enc_cms_card_mark(memory mem, iRegLdst releaseFieldAddr, flagsReg crx) %{\n-    \/\/ FIXME: Implement this as a cmove and use a fixed condition code\n-    \/\/ register which is written on every transition to compiled code,\n-    \/\/ e.g. in call-stub and when returning from runtime stubs.\n-    \/\/\n-    \/\/ Proposed code sequence for the cmove implementation:\n-    \/\/\n-    \/\/ Label skip_release;\n-    \/\/ __ beq(CCRfixed, skip_release);\n-    \/\/ __ release();\n-    \/\/ __ bind(skip_release);\n-    \/\/ __ stb(card mark);\n-\n-    C2_MacroAssembler _masm(&cbuf);\n-    Label skip_storestore;\n-\n-    __ li(R0, 0);\n-    __ membar(Assembler::StoreStore);\n-\n-    \/\/ Do the store.\n-    if ($mem$$index == 0) {\n-      __ stb(R0, $mem$$disp, $mem$$base$$Register);\n-    } else {\n-      assert(0 == $mem$$disp, \"no displacement possible with indexed load\/stores on ppc\");\n-      __ stbx(R0, $mem$$base$$Register, $mem$$index$$Register);\n-    }\n-  %}\n-\n@@ -6604,20 +6574,1 @@\n-\/\/ Card-mark for CMS garbage collection.\n-\/\/ This cardmark does an optimization so that it must not always\n-\/\/ do a releasing store. For this, it gets the address of\n-\/\/ CMSCollectorCardTableBarrierSetBSExt::_requires_release as input.\n-\/\/ (Using releaseFieldAddr in the match rule is a hack.)\n-instruct storeCM_CMS(memory mem, iRegLdst releaseFieldAddr, flagsReg crx) %{\n-  match(Set mem (StoreCM mem releaseFieldAddr));\n-  effect(TEMP crx);\n-  predicate(false);\n-  ins_cost(MEMORY_REF_COST);\n-\n-  \/\/ See loadConP.\n-  ins_cannot_rematerialize(true);\n-\n-  format %{ \"STB     #0, $mem \\t\/\/ CMS card-mark byte (must be 0!), checking requires_release in [$releaseFieldAddr]\" %}\n-  ins_encode( enc_cms_card_mark(mem, releaseFieldAddr, crx) );\n-  ins_pipe(pipe_class_memory);\n-%}\n-\n-instruct storeCM_G1(memory mem, immI_0 zero) %{\n+instruct storeCM(memory mem, immI_0 zero) %{\n@@ -6625,1 +6576,0 @@\n-  predicate(UseG1GC);\n@@ -6628,3 +6578,1 @@\n-  ins_cannot_rematerialize(true);\n-\n-  format %{ \"STB     #0, $mem \\t\/\/ CMS card-mark byte store (G1)\" %}\n+  format %{ \"STB     #0, $mem \\t\/\/ CMS card-mark byte store\" %}\n@@ -6634,1 +6582,1 @@\n-    \/\/__ release(); \/\/ G1: oops are allowed to get visible after dirty marking\n+    \/\/ No release barrier: Oops are allowed to get visible after marking.\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":3,"deletions":55,"binary":false,"changes":58,"status":"modified"}]}