{"files":[{"patch":"@@ -176,1 +176,2 @@\n-     * <p> A subclass must provide an implementation of this method.\n+     * @apiNote\n+     * A subclass must provide an implementation of this method.\n@@ -204,1 +205,2 @@\n-     * <p> The {@code read(b)} method for class {@code InputStream}\n+     * @implSpec\n+     * The {@code read(b)} method for class {@code InputStream}\n@@ -248,1 +250,2 @@\n-     * <p> The {@code read(b, off, len)} method\n+     * @implSpec\n+     * The {@code read(b, off, len)} method\n@@ -525,1 +528,2 @@\n-     * <p> The {@code skip} method implementation of this class creates a\n+     * @implSpec\n+     * The {@code skip} method implementation of this class creates a\n@@ -635,1 +639,2 @@\n-     * <p> The {@code available} method of {@code InputStream} always returns\n+     * @implSpec\n+     * The {@code available} method of {@code InputStream} always returns\n@@ -638,1 +643,2 @@\n-     * <p> This method should be overridden by subclasses.\n+     * @apiNote\n+     * This method should be overridden by subclasses.\n@@ -653,1 +659,2 @@\n-     * <p> The {@code close} method of {@code InputStream} does\n+     * @implSpec\n+     * The {@code close} method of {@code InputStream} does\n@@ -679,1 +686,2 @@\n-     * <p> The {@code mark} method of {@code InputStream} does\n+     * @implSpec\n+     * The {@code mark} method of {@code InputStream} does\n@@ -724,1 +732,2 @@\n-     * <p>The method {@code reset} for class {@code InputStream}\n+     * @implSpec\n+     * The method {@code reset} for class {@code InputStream}\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStream.java","additions":18,"deletions":9,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,2 @@\n-     * <p>\n+     *\n+     * @apiNote\n@@ -138,5 +139,1 @@\n-     * <p>\n-     * The {@code write} method of {@code OutputStream} calls\n-     * the write method of one argument on each of the bytes to be\n-     * written out. Subclasses are encouraged to override this method and\n-     * provide a more efficient implementation.\n+     *\n@@ -151,0 +148,6 @@\n+     * @implSpec\n+     * The {@code write} method of {@code OutputStream} calls\n+     * the write method of one argument on each of the bytes to be\n+     * written out. Subclasses are encouraged to override this method and\n+     * provide a more efficient implementation.\n+     *\n@@ -179,1 +182,2 @@\n-     * <p>\n+     *\n+     * @implSpec\n@@ -192,1 +196,2 @@\n-     * <p>\n+     *\n+     * @implSpec\n","filename":"src\/java.base\/share\/classes\/java\/io\/OutputStream.java","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"}]}