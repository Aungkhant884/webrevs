{"files":[{"patch":"@@ -407,1 +407,1 @@\n-  Address(Register r, int64_t o)\n+  Address(Register r, int o)\n","filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -499,1 +499,1 @@\n-  inline void mov(Register dst, intptr_t imm32)           { mov_immediate64(dst, imm32); }\n+  inline void mov(Register dst, intptr_t imm64)           { mov_immediate64(dst, imm64); }\n@@ -501,2 +501,2 @@\n-  inline void mov(Register dst, int64_t imm32)           { mov_immediate64(dst, imm32); }\n-  inline void mov(Register dst, uint64_t imm32)           { mov_immediate64(dst, imm32); }\n+  inline void mov(Register dst, int64_t imm64)            { mov_immediate64(dst, imm64); }\n+  inline void mov(Register dst, uint64_t imm64)           { mov_immediate64(dst, imm64); }\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -74,1 +74,1 @@\n-  __ str(rscratch1, Address(sp, (int)layout.stack_args));  \/\/ x86 casts to int also\n+  __ str(rscratch1, Address(sp, checked_cast<int>(layout.stack_args)));  \/\/ x86 casts to int also\n","filename":"src\/hotspot\/cpu\/aarch64\/universalUpcallHandler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}