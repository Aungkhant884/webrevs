{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,2 +40,0 @@\n-\n-\n@@ -49,1 +47,1 @@\n- * exactly spins the field where cursor is there.\n+ *          spins the field where cursor is located.\n@@ -54,2 +52,2 @@\n-    private static final Calendar cal1 = Calendar.getInstance();\n-    private static final Calendar cal2 = Calendar.getInstance();\n+    private static final Calendar expected = Calendar.getInstance();\n+    private static final Calendar actual = Calendar.getInstance();\n@@ -67,26 +65,2 @@\n-    private static void createUI() {\n-        frame = new JFrame();\n-        JPanel panel = new JPanel();\n-\n-        spinner = new JSpinner(new SpinnerDateModel());\n-        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, \" dd\/MM\/yy \");\n-        spinner.setEditor(editor);\n-        spinner.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n-        panel.add(spinner);\n-\n-        frame.add(panel);\n-        frame.setUndecorated(true);\n-        frame.pack();\n-        frame.setAlwaysOnTop(true);\n-        frame.setLocationRelativeTo(null);\n-        frame.setVisible(true);\n-\n-    }\n-\n-    private static void setLookAndFeel(final String laf) {\n-        try {\n-            UIManager.setLookAndFeel(laf);\n-            System.out.println(\"LookAndFeel: \" + laf);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n+    public static void main(String[] s) throws Exception {\n+        runTest();\n@@ -122,1 +96,0 @@\n-                updateSpinnerValue();\n@@ -124,1 +97,1 @@\n-                initValue = spinnerValue;\n+                initValue = getSpinnerValue();\n@@ -126,2 +99,1 @@\n-                updateSpinnerValue();\n-                upValue = spinnerValue;\n+                upValue = getSpinnerValue();\n@@ -130,2 +102,1 @@\n-                updateSpinnerValue();\n-                initValue = spinnerValue;\n+                initValue = getSpinnerValue();\n@@ -133,2 +104,1 @@\n-                updateSpinnerValue();\n-                downValue = spinnerValue;\n+                downValue = getSpinnerValue();\n@@ -140,2 +110,1 @@\n-                updateSpinnerValue();\n-                initValue = spinnerValue;\n+                initValue = getSpinnerValue();\n@@ -143,2 +112,1 @@\n-                updateSpinnerValue();\n-                upValue = spinnerValue;\n+                upValue = getSpinnerValue();\n@@ -147,2 +115,1 @@\n-                updateSpinnerValue();\n-                initValue = spinnerValue;\n+                initValue = getSpinnerValue();\n@@ -150,2 +117,1 @@\n-                updateSpinnerValue();\n-                downValue = spinnerValue;\n+                downValue = getSpinnerValue();\n@@ -157,2 +123,1 @@\n-                updateSpinnerValue();\n-                initValue = spinnerValue;\n+                initValue = getSpinnerValue();\n@@ -160,2 +125,1 @@\n-                updateSpinnerValue();\n-                upValue = spinnerValue;\n+                upValue = getSpinnerValue();\n@@ -164,2 +128,1 @@\n-                updateSpinnerValue();\n-                initValue = spinnerValue;\n+                initValue = getSpinnerValue();\n@@ -167,2 +130,1 @@\n-                updateSpinnerValue();\n-                downValue = spinnerValue;\n+                downValue = getSpinnerValue();\n@@ -182,1 +144,1 @@\n-    private static void updateSpinnerValue() throws Exception {\n+    private static Date getSpinnerValue() throws Exception {\n@@ -184,0 +146,1 @@\n+        return spinnerValue;\n@@ -186,1 +149,0 @@\n-\n@@ -192,1 +154,0 @@\n-\n@@ -197,1 +158,0 @@\n-\n@@ -206,9 +166,0 @@\n-    public static void main(String[] s) throws Exception {\n-        runTest();\n-    }\n-\n-    public static boolean compareDates(Calendar d1, Calendar d2) {\n-        return (d1.get(Calendar.DATE) == d2.get(Calendar.DATE)) &&\n-                (d1.get(Calendar.DAY_OF_YEAR) == d2.get(Calendar.DAY_OF_YEAR)) &&\n-                (d1.get(Calendar.DAY_OF_MONTH) == d2.get(Calendar.DAY_OF_MONTH));\n-    }\n@@ -216,5 +167,4 @@\n-    private static void disposeFrame() {\n-        if (frame != null) {\n-            frame.dispose();\n-            frame = null;\n-        }\n+    public static boolean compareDates() {\n+        return (expected.get(Calendar.DATE) == actual.get(Calendar.DATE)) &&\n+                (expected.get(Calendar.MONTH) == actual.get(Calendar.MONTH)) &&\n+                (expected.get(Calendar.YEAR) == actual.get(Calendar.YEAR));\n@@ -223,1 +173,0 @@\n-\n@@ -225,1 +174,1 @@\n-        if (compareDates(cal1, cal2)) {\n+        if (compareDates()) {\n@@ -229,2 +178,2 @@\n-            System.out.println(\" Case Failed because the expected: \" + cal1.getTime()\n-                    + \" and actual: \" + cal2.getTime() + \" outputs do not match.\");\n+            System.out.println(\" Case Failed because the expected: \" + expected.getTime()\n+                    + \" and actual: \" + actual.getTime() + \" outputs do not match.\");\n@@ -234,1 +183,0 @@\n-\n@@ -236,2 +184,2 @@\n-        cal1.setTime(initValue);\n-        cal2.setTime(finalValue);\n+        expected.setTime(initValue);\n+        actual.setTime(finalValue);\n@@ -240,1 +188,0 @@\n-\n@@ -247,1 +194,1 @@\n-        cal1.add(Calendar.DATE, 1);\n+        expected.add(Calendar.DATE, 1);\n@@ -257,1 +204,1 @@\n-        cal1.add(Calendar.DATE, -1);\n+        expected.add(Calendar.DATE, -1);\n@@ -267,1 +214,1 @@\n-        cal1.add(Calendar.MONTH, 1);\n+        expected.add(Calendar.MONTH, 1);\n@@ -271,1 +218,0 @@\n-\n@@ -278,1 +224,1 @@\n-        cal1.add(Calendar.MONTH, -1);\n+        expected.add(Calendar.MONTH, -1);\n@@ -288,1 +234,1 @@\n-        cal1.add(Calendar.YEAR, -1);\n+        expected.add(Calendar.YEAR, -1);\n@@ -298,1 +244,1 @@\n-        cal1.add(Calendar.YEAR, 1);\n+        expected.add(Calendar.YEAR, 1);\n@@ -302,0 +248,33 @@\n+    private static void createUI() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        spinner = new JSpinner(new SpinnerDateModel());\n+        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, \" dd\/MM\/yy \");\n+        spinner.setEditor(editor);\n+        spinner.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);\n+        panel.add(spinner);\n+\n+        frame.add(panel);\n+        frame.setUndecorated(true);\n+        frame.pack();\n+        frame.setAlwaysOnTop(true);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    private static void setLookAndFeel(final String laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf);\n+            System.out.println(\"LookAndFeel: \" + laf);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/4670051\/JSpinnerFieldUnderCursorTest.java","additions":68,"deletions":89,"binary":false,"changes":157,"status":"modified"}]}