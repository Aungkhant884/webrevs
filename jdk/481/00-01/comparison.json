{"files":[{"patch":"@@ -48,0 +48,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -72,0 +74,4 @@\n+    private final static boolean useTemplateImages = AccessController.doPrivileged((PrivilegedAction<Boolean>)\n+        () -> Boolean.getBoolean(\"apple.awt.enableTemplateImages\")\n+    );\n+\n@@ -197,2 +203,0 @@\n-        boolean imageTemplate = Boolean.parseBoolean(System.getProperty(\"sun.awt.enableTemplateImages\", \"false\"));\n-\n@@ -216,1 +220,1 @@\n-                    setNativeImage(ptr, imagePtr, imageAutoSize, imageTemplate);\n+                    setNativeImage(ptr, imagePtr, imageAutoSize, useTemplateImages);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CTrayIcon.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-@class AWTTrayIconDelegate;\n+@class AWTTrayIconView;\n@@ -45,1 +45,1 @@\n-@interface AWTTrayIcon : NSResponder {\n+@interface AWTTrayIcon : NSObject {\n@@ -47,1 +47,1 @@\n-    AWTTrayIconDelegate *menuDelegate;\n+    AWTTrayIconView *view;\n@@ -49,1 +49,0 @@\n-    NSTrackingArea *trackingArea;\n@@ -59,11 +58,1 @@\n-- (void) setMenu:(NSMenu *)menu;\n-- (void) mouseDown:(id)sender;\n-- (void) mouseUp:(NSEvent *)event;\n-- (void) mouseDragged:(NSEvent *)event;\n-- (void) mouseMoved: (NSEvent *)event;\n-- (void) rightMouseDown:(NSEvent *)event;\n-- (void) rightMouseUp:(NSEvent *)event;\n-- (void) rightMouseDragged:(NSEvent *)event;\n-- (void) otherMouseDown:(NSEvent *)event;\n-- (void) otherMouseUp:(NSEvent *)event;\n-- (void) otherMouseDragged:(NSEvent *)event;\n+\n@@ -74,2 +63,2 @@\n- * AWTTrayIconDelegate *\/\n-@interface AWTTrayIconDelegate : NSObject<NSMenuDelegate> {\n+ * AWTTrayIconView *\/\n+@interface AWTTrayIconView : NSStatusBarButton <NSMenuDelegate> {\n@@ -78,1 +67,1 @@\n-    NSImage* image;\n+    NSTrackingArea *trackingArea;\n@@ -83,1 +72,0 @@\n--(void)setImage:(NSImage*)anImage;\n@@ -86,2 +74,0 @@\n--(void)updateMenuRes;\n--(NSMenu *)getMenu;\n@@ -89,1 +75,1 @@\n-@end \/\/AWTTrayIconDelegate\n+@end \/\/AWTTrayIconView\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/CTrayIcon.h","additions":8,"deletions":22,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -70,14 +70,2 @@\n-    menuDelegate = [[AWTTrayIconDelegate alloc] initWithTrayIcon:self];\n-\n-    [theItem.button sendActionOn: NSEventMaskLeftMouseDown | NSEventMaskRightMouseDown];\n-    theItem.button.action = @selector(mouseDown:);\n-    theItem.button.target = self;\n-\n-    trackingArea = [[NSTrackingArea alloc] initWithRect: CGRectZero\n-                                            options: NSTrackingMouseMoved |\n-                                                NSTrackingInVisibleRect |\n-                                                NSTrackingActiveAlways\n-                                            owner: self\n-                                            userInfo: nil];\n-\n-    [[theItem button] addTrackingArea:trackingArea];\n+    view = [[AWTTrayIconView alloc] initWithTrayIcon:self];\n+    [theItem setView:view];\n@@ -88,4 +76,0 @@\n--(void) setMenu:(NSMenu *) menu{\n-    [theItem setMenu: menu];\n-}\n-\n@@ -102,0 +86,3 @@\n+    [view setImage: nil];\n+    [view setTrayIcon: nil];\n+    [view release];\n@@ -103,5 +90,0 @@\n-    [menuDelegate setImage: nil];\n-    [menuDelegate setTrayIcon: nil];\n-    [menuDelegate release];\n-\n-    [trackingArea release];\n@@ -114,5 +96,1 @@\n-    [[theItem button] setToolTip:tooltip];\n-}\n-\n-- (void) updateMenuRes {\n-    [menuDelegate updateMenuRes];\n+    [view setToolTip:tooltip];\n@@ -139,1 +117,0 @@\n-    theItem.button.image = imagePtr;\n@@ -141,2 +118,6 @@\n-    [[[theItem button] image] setTemplate: isTemplate];\n-    [[theItem button] setNeedsDisplay: true];\n+    [imagePtr setTemplate: isTemplate];\n+    [view setImage:imagePtr];\n+}\n+\n+- (NSPoint) getLocationOnScreen {\n+    return [[view window] convertBaseToScreen: NSZeroPoint];\n@@ -151,3 +132,2 @@\n-\n-    NSPoint localPoint = [[theItem button] convertPoint: eventLocation fromView: nil];\n-    localPoint.y = [[theItem button] bounds].size.height - localPoint.y;\n+    NSPoint localPoint = [view convertPoint: eventLocation fromView: nil];\n+    localPoint.y = [view bounds].size.height - localPoint.y;\n@@ -190,0 +170,2 @@\n+@end \/\/AWTTrayIcon\n+\/\/================================================\n@@ -191,2 +173,1 @@\n-- (void) mouseDown:(id)sender {\n-    [self deliverJavaMouseEvent: [NSApp currentEvent]];\n+@implementation AWTTrayIconView\n@@ -194,13 +175,2 @@\n-    \/\/find CTrayIcon.getPopupMenuModel method and call it to get popup menu ptr.\n-    JNIEnv *env = [ThreadUtilities getJNIEnv];\n-    static JNF_CLASS_CACHE(jc_CTrayIcon, \"sun\/lwawt\/macosx\/CTrayIcon\");\n-    static JNF_MEMBER_CACHE(jm_getPopupMenuModel, jc_CTrayIcon, \"getPopupMenuModel\", \"()J\");\n-    jlong res = JNFCallLongMethod(env, menuDelegate->trayIcon->peer, jm_getPopupMenuModel);\n-\n-    if (res != 0) {\n-        CPopupMenu *cmenu = jlong_to_ptr(res);\n-        NSMenu* menu = [cmenu menu];\n-        [menu setDelegate:menuDelegate];\n-        [theItem popUpStatusItemMenu: menu];\n-    }\n-}\n+-(id)initWithTrayIcon:(AWTTrayIcon *)theTrayIcon {\n+    self = [super initWithFrame:NSMakeRect(0, 0, 1, 1)];\n@@ -208,0 +178,4 @@\n+    [self setTrayIcon: theTrayIcon];\n+    [self setImage: nil];\n+    isHighlighted = NO;\n+    trackingArea = nil;\n@@ -209,3 +183,1 @@\n-- (void) mouseUp:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n-}\n+    [self addTrackingArea];\n@@ -213,2 +185,1 @@\n-- (void) mouseDragged:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+    return self;\n@@ -217,2 +188,9 @@\n-- (void) mouseMoved: (NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+- (void)addTrackingArea {\n+    NSTrackingAreaOptions options = NSTrackingMouseMoved |\n+                                    NSTrackingInVisibleRect |\n+                                    NSTrackingActiveAlways;\n+    trackingArea = [[NSTrackingArea alloc] initWithRect: CGRectZero\n+                                                options: options\n+                                                owner: self\n+                                                userInfo: nil];\n+    [self addTrackingArea:trackingArea];\n@@ -221,2 +199,3 @@\n-- (void) rightMouseDown:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+-(void) dealloc {\n+    [trackingArea release];\n+    [super dealloc];\n@@ -225,2 +204,6 @@\n-- (void) rightMouseUp:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+- (void)setHighlighted:(BOOL)aFlag\n+{\n+    if (isHighlighted != aFlag) {\n+        isHighlighted = aFlag;\n+        [self setNeedsDisplay:YES];\n+    }\n@@ -229,2 +212,2 @@\n-- (void) rightMouseDragged:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+-(void)setTrayIcon:(AWTTrayIcon*)theTrayIcon {\n+    trayIcon = theTrayIcon;\n@@ -233,2 +216,3 @@\n-- (void) otherMouseDown:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+- (void)menuWillOpen:(NSMenu *)menu\n+{\n+    [self setHighlighted:YES];\n@@ -237,2 +221,4 @@\n-- (void) otherMouseUp:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+- (void)menuDidClose:(NSMenu *)menu\n+{\n+    [menu setDelegate:nil];\n+    [self setHighlighted:NO];\n@@ -241,2 +227,11 @@\n-- (void) otherMouseDragged:(NSEvent *)event {\n-    [self deliverJavaMouseEvent: event];\n+- (void)drawRect:(NSRect)dirtyRect\n+{\n+    if (self.image == nil) {\n+        return;\n+    }\n+\n+    NSRect bounds = [self bounds];\n+    [trayIcon.theItem drawStatusBarBackgroundInRect:bounds\n+                                withHighlight:isHighlighted];\n+\n+    [super drawRect: dirtyRect];\n@@ -245,2 +240,20 @@\n-@end \/\/AWTTrayIcon\n-\/\/================================================\n+- (void)mouseDown:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n+\n+    \/\/ don't show the menu on ctrl+click: it triggers ACTION event, like right click\n+    if (([event modifierFlags] & NSControlKeyMask) == 0) {\n+        \/\/find CTrayIcon.getPopupMenuModel method and call it to get popup menu ptr.\n+        JNIEnv *env = [ThreadUtilities getJNIEnv];\n+        static JNF_CLASS_CACHE(jc_CTrayIcon, \"sun\/lwawt\/macosx\/CTrayIcon\");\n+        static JNF_MEMBER_CACHE(jm_getPopupMenuModel, jc_CTrayIcon, \"getPopupMenuModel\", \"()J\");\n+        jlong res = JNFCallLongMethod(env, trayIcon.peer, jm_getPopupMenuModel);\n+\n+        if (res != 0) {\n+            CPopupMenu *cmenu = jlong_to_ptr(res);\n+            NSMenu* menu = [cmenu menu];\n+            [menu setDelegate:self];\n+            [trayIcon.theItem popUpStatusItemMenu:menu];\n+            [self setNeedsDisplay:YES];\n+        }\n+    }\n+}\n@@ -248,1 +261,3 @@\n-@implementation AWTTrayIconDelegate\n+- (void) mouseUp:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n+}\n@@ -250,2 +265,3 @@\n--(id)initWithTrayIcon:(AWTTrayIcon *)theTrayIcon {\n-    self = [super init];\n+- (void) mouseDragged:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n+}\n@@ -253,2 +269,3 @@\n-    [self setTrayIcon: theTrayIcon];\n-    image = nil;\n+- (void) mouseMoved: (NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n+}\n@@ -256,1 +273,2 @@\n-    return self;\n+- (void) rightMouseDown:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n@@ -259,3 +277,2 @@\n--(void) dealloc {\n-    [image release];\n-    [super dealloc];\n+- (void) rightMouseUp:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n@@ -264,4 +281,3 @@\n--(void)setImage:(NSImage*)anImage {\n-    [anImage retain];\n-    [image release];\n-    image = anImage;\n+- (void) rightMouseDragged:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n+}\n@@ -269,3 +285,2 @@\n-    if (image != nil) {\n-        [self setNeedsDisplay:YES];\n-    }\n+- (void) otherMouseDown:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n@@ -274,2 +289,2 @@\n--(void)setTrayIcon:(AWTTrayIcon*)theTrayIcon {\n-    trayIcon = theTrayIcon;\n+- (void) otherMouseUp:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n@@ -278,16 +293,2 @@\n-- (NSMenu *) getMenu {\n-    JNIEnv *env = [ThreadUtilities getJNIEnv];\n-    static JNF_CLASS_CACHE(jc_CTrayIcon, \"sun\/lwawt\/macosx\/CTrayIcon\");\n-    static JNF_MEMBER_CACHE(jm_getPopupMenuModel, jc_CTrayIcon, \"getPopupMenuModel\", \"()J\");\n-    jlong res = JNFCallLongMethod(env, trayIcon.peer, jm_getPopupMenuModel);\n-    if (res != 0) {\n-        CPopupMenu *cmenu = jlong_to_ptr(res);\n-        NSMenu* menu = [cmenu menu];\n-        [menu setDelegate:self];\n-        return menu;\n-    } else {\n-        NSMenu* menu = [[NSMenu alloc] initWithTitle:@\"\"];\n-        [menu setDelegate:self];\n-        return menu;\n-    }\n-    return NULL;\n+- (void) otherMouseDragged:(NSEvent *)event {\n+    [trayIcon deliverJavaMouseEvent: event];\n@@ -296,1 +297,2 @@\n-@end \/\/AWTTrayIconDelegate\n+\n+@end \/\/AWTTrayIconView\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/awt\/CTrayIcon.m","additions":107,"deletions":105,"binary":false,"changes":212,"status":"modified"},{"patch":"@@ -74,0 +74,9 @@\n+ * <p>\n+ * @implnote\n+ * When the {@systemProperty apple.awt.enableTemplateImages} property is\n+ * set, all images associated with instances of this class are treated\n+ * as template images by the native desktop system. This means all color\n+ * information is discarded, and the image is adapted automatically to\n+ * be visible when desktop theme and\/or colors change. This property\n+ * only affects MacOSX.\n+ *\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/TrayIcon.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}