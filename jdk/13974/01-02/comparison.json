{"files":[{"patch":"@@ -5517,2 +5517,1 @@\n-instruct vstoremask_truecount(iRegINoSp dst, vReg src, immI_gt_1 size, vReg vtmp) %{\n-  predicate(UseSVE == 0);\n+instruct vstoremask_truecount_neon(iRegINoSp dst, vReg src, immI_gt_1 size, vReg vtmp) %{\n@@ -5521,1 +5520,1 @@\n-  format %{ \"vstoremask_truecount $dst, $src\\t# KILL $vtmp\" %}\n+  format %{ \"vstoremask_truecount_neon $dst, $src\\t# KILL $vtmp\" %}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3827,2 +3827,1 @@\n-instruct vstoremask_truecount(iRegINoSp dst, vReg src, immI_gt_1 size, vReg vtmp) %{\n-  predicate(UseSVE == 0);\n+instruct vstoremask_truecount_neon(iRegINoSp dst, vReg src, immI_gt_1 size, vReg vtmp) %{\n@@ -3831,1 +3830,1 @@\n-  format %{ \"vstoremask_truecount $dst, $src\\t# KILL $vtmp\" %}\n+  format %{ \"vstoremask_truecount_neon $dst, $src\\t# KILL $vtmp\" %}\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1473,1 +1473,1 @@\n-        machOnlyNameRegex(VSTOREMASK_TRUECOUNT, \"vstoremask_truecount\");\n+        machOnlyNameRegex(VSTOREMASK_TRUECOUNT, \"vstoremask_truecount_neon\");\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-    private static final int LENGTH = 1024;\n+    private static final int LENGTH = 128;\n@@ -51,1 +51,0 @@\n-        VectorMask<Short> m = VectorMask.fromArray(S_SPECIES, ba, 0);\n@@ -53,3 +52,3 @@\n-        for (int i = 0; i < LENGTH; i++) {\n-            m = m.not();\n-            res += m.trueCount();\n+        for (int i = 0; i < LENGTH; i += S_SPECIES.length()) {\n+            VectorMask<Short> m = VectorMask.fromArray(S_SPECIES, ba, i);\n+            res += m.not().trueCount();\n@@ -63,1 +62,0 @@\n-        VectorMask<Integer> m = VectorMask.fromArray(I_SPECIES, ba, 0);\n@@ -65,3 +63,3 @@\n-        for (int i = 0; i < LENGTH; i++) {\n-            m = m.not();\n-            res += m.trueCount();\n+        for (int i = 0; i < LENGTH; i += I_SPECIES.length()) {\n+            VectorMask<Integer> m = VectorMask.fromArray(I_SPECIES, ba, i);\n+            res += m.not().trueCount();\n@@ -75,1 +73,0 @@\n-        VectorMask<Long> m = VectorMask.fromArray(L_SPECIES, ba, 0);\n@@ -77,3 +74,3 @@\n-        for (int i = 0; i < LENGTH; i++) {\n-            m = m.not();\n-            res += m.trueCount();\n+        for (int i = 0; i < LENGTH; i += L_SPECIES.length()) {\n+            VectorMask<Long> m = VectorMask.fromArray(L_SPECIES, ba, i);\n+            res += m.not().trueCount();\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/StoreMaskTrueCount.java","additions":10,"deletions":13,"binary":false,"changes":23,"status":"modified"}]}