{"files":[{"patch":"@@ -97,1 +97,0 @@\n-\n@@ -103,2 +102,2 @@\n-                { hangUri,  417, false, HTTP_1_1},\n-                { h2postUri, 200, false,  HTTP_2 },\n+                { hangUri, 417, false, HTTP_1_1},\n+                { h2postUri, 200, false, HTTP_2 },\n","filename":"test\/jdk\/java\/net\/httpclient\/ExpectContinueTest.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -72,1 +72,0 @@\n-    final byte[] data = new byte[65535];\n@@ -75,2 +74,2 @@\n-    URI http2WarmupURI, http2PostSuccessfullyUri, http2PostExceptionallyUri;\n-    URI h2resetStreamAfter100NoErrorUri, h2resetStreamAfter100ErrorUri , h2ResetStreamAfter200UriNoError, h2ResetStreamAfter200UriError;\n+    URI warmup, postSuccessfully, postExceptionally;\n+    URI resetStreamAfter100NoError, resetStreamAfter100Error, resetStreamAfter200NoError, resetStreamAfter200Error;\n@@ -84,2 +83,2 @@\n-                { http2PostSuccessfullyUri, false }, \/\/ Checks RST_STREAM is ignored after client sees an END_STREAM\n-                { http2PostExceptionallyUri, true }  \/\/ Checks RST_STREAM is processed if client sees no END_STREAM\n+                { postSuccessfully, false }, \/\/ Checks RST_STREAM is ignored after client sees an END_STREAM\n+                { postExceptionally, true }  \/\/ Checks RST_STREAM is processed if client sees no END_STREAM\n@@ -93,4 +92,4 @@\n-                { h2resetStreamAfter100NoErrorUri }, \/\/ Client receives RST_STREAM before END_STREAM and 200\n-                { h2resetStreamAfter100ErrorUri },  \/\/ Client receives RST_STREAM before END_STREAM and 200\n-                { h2ResetStreamAfter200UriNoError }, \/\/ Client receives RST_STREAM after 200 but before server sends END_STREAM\n-                { h2ResetStreamAfter200UriError } \/\/ Client receives RST_STREAM after 200 but before server sends END_STREAM\n+                { resetStreamAfter100NoError }, \/\/ Client receives RST_STREAM before END_STREAM and 200\n+                { resetStreamAfter100Error },  \/\/ Client receives RST_STREAM before END_STREAM and 200\n+                { resetStreamAfter200NoError }, \/\/ Client receives RST_STREAM after 200 but before server sends END_STREAM\n+                { resetStreamAfter200Error } \/\/ Client receives RST_STREAM after 200 but before server sends END_STREAM\n@@ -148,1 +147,1 @@\n-        http2WarmupURI = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/warmup\");\n+        warmup = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/warmup\");\n@@ -150,0 +149,4 @@\n+        resetStreamAfter100NoError = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter100NoError\");\n+        resetStreamAfter100Error = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter100Error\");\n+        resetStreamAfter200NoError = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter200NoError\");\n+        resetStreamAfter200Error = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter200Error\");\n@@ -151,8 +154,2 @@\n-        h2resetStreamAfter100NoErrorUri =  URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter100NoError\");\n-        h2resetStreamAfter100ErrorUri =  URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter100Error\");\n-        h2ResetStreamAfter200UriNoError = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter200NoError\");\n-        h2ResetStreamAfter200UriError = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/http2\/resetStreamAfter200Error\");\n-\n-\n-        http2PostSuccessfullyUri = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/testHandlerSuccessfully\");\n-        http2PostExceptionallyUri = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/testHandlerExceptionally\");\n+        postSuccessfully = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/testHandlerSuccessfully\");\n+        postExceptionally = URI.create(\"http:\/\/\" + http2TestServer.serverAuthority() + \"\/testHandlerExceptionally\");\n@@ -170,3 +167,2 @@\n-            err.printf(\"Performing warmup request to %s\", http2WarmupURI);\n-            client.send(HttpRequest.newBuilder(http2WarmupURI).GET().version(HTTP_2).build(), HttpResponse.BodyHandlers.discarding());\n-\n+            err.printf(\"Performing warmup request to %s\", warmup);\n+            client.send(HttpRequest.newBuilder(warmup).GET().version(HTTP_2).build(), HttpResponse.BodyHandlers.discarding());\n@@ -228,1 +224,1 @@\n-            exchange.sendResponseHeaders(100,   0);\n+            exchange.sendResponseHeaders(100, 0);\n","filename":"test\/jdk\/java\/net\/httpclient\/http2\/ExpectContinueResetTest.java","additions":18,"deletions":22,"binary":false,"changes":40,"status":"modified"}]}