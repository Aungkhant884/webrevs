{"files":[{"patch":"@@ -5562,1 +5562,0 @@\n-  _rt(REF_NONE),\n@@ -6043,4 +6042,0 @@\n-\n-  \/\/ Compute reference typ\n-  _rt = (NULL ==_super_klass) ? REF_NONE : _super_klass->reference_type();\n-\n@@ -6078,0 +6073,17 @@\n+\n+ReferenceType ClassFileParser::super_reference_type() const {\n+  return _super_klass == NULL ? REF_NONE : _super_klass->reference_type();\n+}\n+\n+bool ClassFileParser::is_java_lang_ref_Reference_subclass() const {\n+  if (_super_klass == NULL) {\n+    return false;\n+  }\n+\n+  if (_super_klass->name() == vmSymbols::java_lang_ref_Reference()) {\n+    return true;\n+  }\n+\n+  return _super_klass->reference_type() != REF_NONE;\n+}\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":17,"deletions":5,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -157,1 +157,0 @@\n-  ReferenceType _rt;\n@@ -564,1 +563,3 @@\n-  ReferenceType reference_type() const { return _rt; }\n+  ReferenceType super_reference_type() const;\n+  bool is_java_lang_ref_Reference_subclass() const;\n+\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -178,1 +178,0 @@\n-  vmClasses::Reference_klass()->set_reference_type(REF_OTHER);\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -440,1 +440,0 @@\n-    case REF_OTHER:\n@@ -843,2 +842,0 @@\n-    case REF_OTHER:\n-      \/\/ Unknown reference type, impossible\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -296,1 +296,1 @@\n-  static int number_of_subclasses_of_ref() { return (REF_PHANTOM - REF_OTHER); }\n+  static int number_of_subclasses_of_ref() { return (REF_PHANTOM - REF_NONE); }\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-       \"None\", \"Other\", \"SoftReference\", \"WeakReference\", \"FinalReference\", \"PhantomReference\"\n+       \"None\", \"SoftReference\", \"WeakReference\", \"FinalReference\", \"PhantomReference\"\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorPhaseTimes.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  static const int number_of_subclasses_of_ref = REF_PHANTOM - REF_OTHER; \/\/ 5 - 1 = 4\n+  static const int number_of_subclasses_of_ref = REF_PHANTOM - REF_NONE; \/\/ 4 - 0 = 4\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessorPhaseTimes.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -217,1 +217,0 @@\n-    case REF_OTHER: return \"Other reference\";\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrType.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-  REF_OTHER,     \/\/ Subclass of java\/lang\/ref\/Reference, but not subclass of one of the classes below\n","filename":"src\/hotspot\/share\/memory\/referenceType.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -441,12 +441,1 @@\n-  if (REF_NONE == parser.reference_type()) {\n-    if (class_name == vmSymbols::java_lang_Class()) {\n-      \/\/ mirror\n-      ik = new (loader_data, size, THREAD) InstanceMirrorKlass(parser);\n-    } else if (is_class_loader(class_name, parser)) {\n-      \/\/ class loader\n-      ik = new (loader_data, size, THREAD) InstanceClassLoaderKlass(parser);\n-    } else {\n-      \/\/ normal\n-      ik = new (loader_data, size, THREAD) InstanceKlass(parser);\n-    }\n-  } else {\n+  if (parser.is_java_lang_ref_Reference_subclass()) {\n@@ -455,0 +444,9 @@\n+  } else if (class_name == vmSymbols::java_lang_Class()) {\n+    \/\/ mirror\n+    ik = new (loader_data, size, THREAD) InstanceMirrorKlass(parser);\n+  } else if (is_class_loader(class_name, parser)) {\n+    \/\/ class loader\n+    ik = new (loader_data, size, THREAD) InstanceClassLoaderKlass(parser);\n+  } else {\n+    \/\/ normal\n+    ik = new (loader_data, size, THREAD) InstanceKlass(parser);\n@@ -499,1 +497,1 @@\n-  _reference_type(parser.reference_type()),\n+  _reference_type(parser.super_reference_type()),\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":11,"deletions":13,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-  REF_OTHER (\"Other reference\"),     \/\/ Subclass of java\/lang\/ref\/Reference, but not subclass of one of the classes below\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/memory\/ReferenceType.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}