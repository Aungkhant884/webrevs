{"files":[{"patch":"@@ -4924,2 +4924,4 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(lseek64);\n+off64_t call_lseek64(int fd, off64_t offset, int whence) {\n+  ALLOW_CALL(\"lseek64\", return ::lseek64(fd, offset, whence))\n+}\n+\n@@ -4928,1 +4930,1 @@\n-  return (jlong)::lseek64(fd, (off64_t)0, SEEK_CUR);\n+  return (jlong)call_lseek64(fd, (off64_t)0, SEEK_CUR);\n@@ -4933,1 +4935,1 @@\n-  return (jlong)::lseek64(fd, (off64_t)offset, SEEK_SET);\n+  return (jlong)call_lseek64(fd, (off64_t)offset, SEEK_SET);\n@@ -4954,1 +4956,1 @@\n-  if ((cur = ::lseek64(fd, 0L, SEEK_CUR)) == -1) {\n+  if ((cur = call_lseek64(fd, 0L, SEEK_CUR)) == -1) {\n@@ -4956,1 +4958,1 @@\n-  } else if ((end = ::lseek64(fd, 0L, SEEK_END)) == -1) {\n+  } else if ((end = call_lseek64(fd, 0L, SEEK_END)) == -1) {\n@@ -4958,1 +4960,1 @@\n-  } else if (::lseek64(fd, cur, SEEK_SET) == -1) {\n+  } else if (call_lseek64(fd, cur, SEEK_SET) == -1) {\n@@ -4964,1 +4966,0 @@\n-PRAGMA_DIAG_POP\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -662,2 +662,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(lseek);\n@@ -665,1 +663,5 @@\n-  return (jlong) BSD_ONLY(::lseek) NOT_BSD(::lseek64)(fd, offset, whence);\n+#ifdef BSD\n+  ALLOW_CALL(\"lseek\", return (jlong)::lseek(fd, offset, whence))\n+#else\n+  ALLOW_CALL(\"lseek64\", return (jlong)::lseek64(fd, offset, whence))\n+#endif\n@@ -667,1 +669,0 @@\n-PRAGMA_DIAG_POP\n@@ -669,2 +670,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fsync);\n@@ -672,1 +671,1 @@\n-  return ::fsync(fd);\n+  ALLOW_CALL(\"fsync\", return ::fsync(fd))\n@@ -674,1 +673,0 @@\n-PRAGMA_DIAG_POP\n@@ -676,2 +674,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(ftruncate64);\n@@ -679,1 +675,5 @@\n-   return BSD_ONLY(::ftruncate) NOT_BSD(::ftruncate64)(fd, length);\n+#ifdef BSD\n+  ALLOW_CALL(\"ftruncate\", return ::ftruncate(fd, length))\n+#else\n+  ALLOW_CALL(\"ftruncate64\", return ::ftruncate64(fd, length))\n+#endif\n@@ -681,1 +681,0 @@\n-PRAGMA_DIAG_POP\n@@ -687,2 +686,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fdopen);\n@@ -690,1 +687,1 @@\n-  return ::fdopen(fd, mode);\n+  ALLOW_CALL(\"fdopen\", return ::fdopen(fd, mode))\n@@ -692,1 +689,0 @@\n-PRAGMA_DIAG_POP\n@@ -694,2 +690,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(write);\n@@ -698,1 +692,1 @@\n-  RESTARTABLE(::write(fd, buf, (size_t) nBytes), res);\n+  ALLOW_CALL(\"write\", RESTARTABLE(::write(fd, buf, (size_t) nBytes), res))\n@@ -701,1 +695,0 @@\n-PRAGMA_DIAG_POP\n@@ -707,2 +700,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(flockfile);\n@@ -710,1 +701,1 @@\n-  ::flockfile(fp);\n+  ALLOW_CALL(\"flockfile\", ::flockfile(fp))\n@@ -712,1 +703,0 @@\n-PRAGMA_DIAG_POP\n@@ -714,2 +704,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(funlockfile);\n@@ -717,1 +705,1 @@\n-  ::funlockfile(fp);\n+  ALLOW_CALL(\"funlockfile\", ::funlockfile(fp))\n@@ -719,1 +707,0 @@\n-PRAGMA_DIAG_POP\n@@ -721,2 +708,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(opendir);\n@@ -725,1 +710,1 @@\n-  return ::opendir(dirname);\n+  ALLOW_CALL(\"opendir\", return ::opendir(dirname))\n@@ -727,1 +712,0 @@\n-PRAGMA_DIAG_POP\n@@ -729,2 +713,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(readdir);\n@@ -733,1 +715,1 @@\n-  return ::readdir(dirp);\n+  ALLOW_CALL(\"readdir\", return ::readdir(dirp))\n@@ -735,1 +717,0 @@\n-PRAGMA_DIAG_POP\n@@ -737,2 +718,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(closedir);\n@@ -741,1 +720,1 @@\n-  return ::closedir(dirp);\n+  ALLOW_CALL(\"closedir\", return ::closedir(dirp))\n@@ -743,1 +722,0 @@\n-PRAGMA_DIAG_POP\n@@ -749,2 +727,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(recv);\n@@ -752,1 +728,1 @@\n-  RESTARTABLE_RETURN_INT(::recv(fd, buf, nBytes, flags));\n+  ALLOW_CALL(\"recv\", RESTARTABLE_RETURN_INT(::recv(fd, buf, nBytes, flags)))\n@@ -754,1 +730,0 @@\n-PRAGMA_DIAG_POP\n@@ -756,2 +731,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(send);\n@@ -759,1 +732,1 @@\n-  RESTARTABLE_RETURN_INT(::send(fd, buf, nBytes, flags));\n+  ALLOW_CALL(\"send\", RESTARTABLE_RETURN_INT(::send(fd, buf, nBytes, flags)))\n@@ -761,1 +734,0 @@\n-PRAGMA_DIAG_POP\n@@ -767,2 +739,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(connect);\n@@ -770,1 +740,1 @@\n-  RESTARTABLE_RETURN_INT(::connect(fd, him, len));\n+  ALLOW_CALL(\"connect\", RESTARTABLE_RETURN_INT(::connect(fd, him, len)))\n@@ -772,1 +742,0 @@\n-PRAGMA_DIAG_POP\n@@ -903,2 +872,0 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(stat);\n@@ -906,1 +873,1 @@\n-  return ::stat(path, sbuf);\n+  ALLOW_CALL(\"stat\", return ::stat(path, sbuf))\n@@ -908,1 +875,0 @@\n-PRAGMA_DIAG_POP\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":22,"deletions":56,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -1271,4 +1271,2 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(fopen);\n-  FILE* file = ::fopen(path, modified_mode);\n-PRAGMA_DIAG_POP\n+\n+  ALLOW_CALL(\"fopen\", FILE* file = ::fopen(path, modified_mode))\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -77,2 +77,2 @@\n-#ifndef PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION\n-#define PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(name)\n+#ifndef ALLOW_CALL\n+#define ALLOW_CALL(name, invocation) invocation;\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,2 +74,6 @@\n-#define PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(name) \\\n-  PRAGMA_DISABLE_GCC_WARNING(\"-Wattribute-warning\")\n+#define ALLOW_CALL(name, invocation) \\\n+PRAGMA_DIAG_PUSH \\\n+PRAGMA_DISABLE_GCC_WARNING(\"-Wattribute-warning\") \\\n+invocation; \\\n+PRAGMA_DIAG_POP\n+\n","filename":"src\/hotspot\/share\/utilities\/compilerWarnings_gcc.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -281,4 +281,1 @@\n-PRAGMA_DIAG_PUSH\n-PRAGMA_PERMIT_FORBIDDEN_C_FUNCTION(abort);\n-      ::abort();\n-PRAGMA_DIAG_POP\n+      ALLOW_CALL(\"abort\", ::abort())\n","filename":"test\/hotspot\/gtest\/gtestMain.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}