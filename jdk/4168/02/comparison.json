{"files":[{"patch":"@@ -195,4 +195,2 @@\n-  int _table_size;\n-  \/\/ ResourceHashtable SIZE is specified at compile time so our\n-  \/\/ dynamic _table_size is unused for now; 1031 is the first prime\n-  \/\/ after 1024.\n+  \/\/ ResourceHashtable SIZE is specified at compile time so we\n+  \/\/ use 1031 which is the first prime after 1024.\n@@ -208,1 +206,1 @@\n-  ThreadScanHashtable(int table_size) : _table_size(table_size), _ptrs(new (ResourceObj::C_HEAP, mtThread) PtrTable()) {}\n+  ThreadScanHashtable() : _ptrs(new (ResourceObj::C_HEAP, mtThread) PtrTable()) {}\n@@ -873,4 +871,0 @@\n-  \/\/ Hash table size should be first power of two higher than twice the length of the ThreadsList\n-  int hash_table_size = MIN2((int)get_java_thread_list()->length(), 32) << 1;\n-  hash_table_size = round_up_power_of_2(hash_table_size);\n-\n@@ -878,1 +872,1 @@\n-  ThreadScanHashtable *scan_table = new ThreadScanHashtable(hash_table_size);\n+  ThreadScanHashtable *scan_table = new ThreadScanHashtable();\n@@ -932,5 +926,0 @@\n-  \/\/ Hash table size should be first power of two higher than twice\n-  \/\/ the length of the Threads list.\n-  int hash_table_size = MIN2((int)get_java_thread_list()->length(), 32) << 1;\n-  hash_table_size = round_up_power_of_2(hash_table_size);\n-\n@@ -939,1 +928,1 @@\n-  ThreadScanHashtable *scan_table = new ThreadScanHashtable(hash_table_size);\n+  ThreadScanHashtable *scan_table = new ThreadScanHashtable();\n","filename":"src\/hotspot\/share\/runtime\/threadSMR.cpp","additions":5,"deletions":16,"binary":false,"changes":21,"status":"modified"}]}