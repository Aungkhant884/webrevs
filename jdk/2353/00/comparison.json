{"files":[{"patch":"@@ -1228,13 +1228,18 @@\n-      assert(in_vt->length() == out_vt->length(), \"mismatch on number of elements\");\n-      Node* value = vbox->in(VectorBoxNode::Value);\n-\n-      bool is_vector_mask    = vbox_klass->is_subclass_of(ciEnv::current()->vector_VectorMask_klass());\n-      bool is_vector_shuffle = vbox_klass->is_subclass_of(ciEnv::current()->vector_VectorShuffle_klass());\n-      if (is_vector_mask) {\n-        \/\/ VectorUnbox (VectorBox vmask) ==> VectorLoadMask (VectorStoreMask vmask)\n-        value = phase->transform(VectorStoreMaskNode::make(*phase, value, in_vt->element_basic_type(), in_vt->length()));\n-        return new VectorLoadMaskNode(value, out_vt);\n-      } else if (is_vector_shuffle) {\n-        if (is_shuffle_to_vector()) {\n-          \/\/ VectorUnbox (VectorBox vshuffle) ==> VectorCastB2X vshuffle\n-          return new VectorCastB2XNode(value, out_vt);\n+\n+      if (in_vt->length() == out_vt->length()) {\n+        Node* value = vbox->in(VectorBoxNode::Value);\n+\n+        bool is_vector_mask    = vbox_klass->is_subclass_of(ciEnv::current()->vector_VectorMask_klass());\n+        bool is_vector_shuffle = vbox_klass->is_subclass_of(ciEnv::current()->vector_VectorShuffle_klass());\n+        if (is_vector_mask) {\n+          \/\/ VectorUnbox (VectorBox vmask) ==> VectorLoadMask (VectorStoreMask vmask)\n+          value = phase->transform(VectorStoreMaskNode::make(*phase, value, in_vt->element_basic_type(), in_vt->length()));\n+          return new VectorLoadMaskNode(value, out_vt);\n+        } else if (is_vector_shuffle) {\n+          if (is_shuffle_to_vector()) {\n+            \/\/ VectorUnbox (VectorBox vshuffle) ==> VectorCastB2X vshuffle\n+            return new VectorCastB2XNode(value, out_vt);\n+          } else {\n+            \/\/ VectorUnbox (VectorBox vshuffle) ==> VectorLoadShuffle vshuffle\n+            return new VectorLoadShuffleNode(value, out_vt);\n+          }\n@@ -1242,2 +1247,1 @@\n-          \/\/ VectorUnbox (VectorBox vshuffle) ==> VectorLoadShuffle vshuffle\n-          return new VectorLoadShuffleNode(value, out_vt);\n+          \/\/ Vector type mismatch is only supported for masks and shuffles, but sometimes it happens in pathological cases.\n@@ -1246,1 +1250,2 @@\n-        assert(false, \"type mismatch on vector: %s\", vbox_klass->name()->as_utf8());\n+        \/\/ Vector length mismatch.\n+        \/\/ Sometimes happen in pathological cases (e.g., when unboxing happens in effectively dead code).\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-jdk\/incubator\/vector\/VectorHash.java 8259430 generic-all\n","filename":"test\/jdk\/ProblemList-Xcomp.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}