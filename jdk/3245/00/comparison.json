{"files":[{"patch":"@@ -1810,1 +1810,1 @@\n-              assert(n->in(0) == be, \"should be on the backedge\");\n+              assert(n->in(0) == be || n->find_prec_edge(be) > 0, \"should be on the backedge\");\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8264360\n+ * @summary Loop strip mining verification fails with \"should be on the backedge\"\n+ *\n+ * @run main\/othervm -XX:-TieredCompilation -XX:-BackgroundCompilation TestLoadOnBackedgeWithPrec\n+ *\n+ *\/\n+\n+\n+class a {\n+    int g = 20;\n+    float h = 2;\n+    long b = 6;\n+}\n+\n+public class TestLoadOnBackedgeWithPrec {\n+    int c ;\n+    a[] i =   {\n+        new a()};\n+    float j() {\n+        a k = new a();\n+        float l = 5     ;\n+        for (int d = 0; d < 8; ++d) {\n+            for (int e = 0; e < 9; ++e) {\n+                k = k;\n+                l *= k.g;\n+            }\n+            for (int f = 0; f < 9; ++f) {\n+                new a();\n+            }\n+            {\n+                a[] m = {\n+                    new a(), new a(), new a(),\n+                    new a(), new a(), new a(),\n+                    new a(), new a(), new a()};\n+                c = i[0].g   + k.g;\n+            }\n+        }\n+        return k.h;\n+    }\n+    public static void main(String[] args) {\n+        TestLoadOnBackedgeWithPrec n = new TestLoadOnBackedgeWithPrec();\n+        for (int i = 0; i < 5_000; i++) {\n+            n.j();\n+        }\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestLoadOnBackedgeWithPrec.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}