{"files":[{"patch":"@@ -37,1 +37,1 @@\n-class ClassPrinter::KlassPrintClosure : public KlassClosure {\n+class ClassPrinter::KlassPrintClosure : public LockedClassesDo {\n@@ -127,1 +127,1 @@\n-void ClassPrinter::print_classes_unlocked(const char* class_name_pattern, int flags) {\n+void ClassPrinter::print_classes(const char* class_name_pattern, int flags) {\n@@ -132,2 +132,2 @@\n-void ClassPrinter::print_methods_unlocked(const char* class_name_pattern,\n-                                          const char* method_name_pattern, int flags) {\n+void ClassPrinter::print_methods(const char* class_name_pattern,\n+                                 const char* method_name_pattern, int flags) {\n@@ -140,3 +140,3 @@\n-void ClassPrinter::print_methods_unlocked(const char* class_name_pattern,\n-                                          const char* method_name_pattern,\n-                                          const char* method_signature_pattern, int flags) {\n+void ClassPrinter::print_methods(const char* class_name_pattern,\n+                                 const char* method_name_pattern,\n+                                 const char* method_signature_pattern, int flags) {\n","filename":"src\/hotspot\/share\/classfile\/classPrinter.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -35,5 +35,1 @@\n-\/\/ in debug.cpp (inside a debugger, such as gdb). To avoid deadlocks (as the JVM\n-\/\/ may be at an arbitrary native breakpoint), ClassPrinter calls\n-\/\/ ClassLoaderDataGraph::classes_do without holding any locks. The down side is\n-\/\/ that the printing may proceed while other threads are running, so race conditions\n-\/\/ are possible. Use with care.\n+\/\/ in debug.cpp (inside a debugger, such as gdb).\n@@ -41,2 +37,5 @@\n-\/\/ If you want to call these functions programmatically, make sure the caller\n-\/\/ holds the appropriate locks.\n+\/\/ The ClassPrinter::print_xxx() functions hold the ClassLoaderDataGraph_lock\n+\/\/ (and the ttyLocker if ClassPrinter::PRINT_BYTECODE is selected). A deadlock\n+\/\/ may happen if these functions are called in a context where these locks\n+\/\/ are already held. Use with caution.\n+\n@@ -61,6 +60,6 @@\n-  static void print_classes_unlocked(const char* class_name_pattern, int flags);\n-  static void print_methods_unlocked(const char* class_name_pattern,\n-                                     const char* method_name_pattern, int flags);\n-  static void print_methods_unlocked(const char* class_name_pattern,\n-                                     const char* method_name_pattern,\n-                                     const char* method_signature_pattern, int flags);\n+  static void print_classes(const char* class_name_pattern, int flags);\n+  static void print_methods(const char* class_name_pattern,\n+                            const char* method_name_pattern, int flags);\n+  static void print_methods(const char* class_name_pattern,\n+                            const char* method_name_pattern,\n+                            const char* method_signature_pattern, int flags);\n","filename":"src\/hotspot\/share\/classfile\/classPrinter.hpp","additions":12,"deletions":13,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -647,1 +647,1 @@\n-  ClassPrinter::print_classes_unlocked(class_name_pattern, flags);\n+  ClassPrinter::print_classes(class_name_pattern, flags);\n@@ -653,1 +653,1 @@\n-  ClassPrinter::print_methods_unlocked(class_name_pattern, method_name_pattern, flags);\n+  ClassPrinter::print_methods(class_name_pattern, method_name_pattern, flags);\n@@ -660,2 +660,2 @@\n-  ClassPrinter::print_methods_unlocked(class_name_pattern, method_name_pattern,\n-                                       method_signature_pattern, flags);\n+  ClassPrinter::print_methods(class_name_pattern, method_name_pattern,\n+                              method_signature_pattern, flags);\n","filename":"src\/hotspot\/share\/utilities\/debug.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}