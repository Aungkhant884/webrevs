{"files":[{"patch":"@@ -86,4 +86,5 @@\n-          \"power efficiency. Set -1 to disable the override. In current \"\\\n-          \"Linux, 0 means using the system-wide default, which is the \" \\\n-          \"same as disabled override. See prctl(PR_SET_TIMERSLACK) for \"\\\n-          \"more info.\")                                                 \\\n+          \"power efficiency. In current Linux, 0 means using the \"      \\\n+          \"system-wide default, which would disable the override, but \" \\\n+          \"VM would still print the current timer slack values. Use -1 \"\\\n+          \"to disable both the override and the printouts.\"             \\\n+          \"See prctl(PR_SET_TIMERSLACK) for more info.\")                \\\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -972,5 +972,8 @@\n-      \/\/ Print current timer slack, if available\n-      int slack = prctl(PR_GET_TIMERSLACK);\n-      if (slack >= 0) {\n-        log_info(os, thread)(\"Thread \\\"%s\\\" (pthread id: \" UINTX_FORMAT \") timer slack: %dns\",\n-                             thread->name(), (uintx) tid, slack);\n+      \/\/ Print current timer slack if override is enabled and timer slack value is available.\n+      \/\/ Avoid calling prctl otherwise for extra safety.\n+      if (TimerSlack >= 0) {\n+        int slack = prctl(PR_GET_TIMERSLACK);\n+        if (slack >= 0) {\n+          log_info(os, thread)(\"Thread \\\"%s\\\" (pthread id: \" UINTX_FORMAT \") timer slack: %dns\",\n+                               thread->name(), (uintx) tid, slack);\n+        }\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        \/\/ Check the timer slack value is good by default\n+        \/\/ Check the timer slack value is not printed by default\n@@ -50,1 +50,2 @@\n-            output.shouldContain(\"timer slack:\");\n+            output.shouldNotContain(\"timer slack:\");\n+        }\n@@ -52,1 +53,6 @@\n-            defaultSlack = parseSlackValue(output);\n+        \/\/ Check the timer slack value is not printed when explicitly disabled\n+        {\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\"-Xlog:os+thread\",\n+                                                      \"-XX:+UnlockExperimentalVMOptions\",\n+                                                      \"-XX:TimerSlack=-1\",\n+                                                      \"TestTimerSlack$TestMain\");\n@@ -54,3 +60,3 @@\n-            if (defaultSlack == 0) {\n-                fail(output, \"Default slack value (\" + defaultSlack + \") is unexpected\");\n-            }\n+            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+            output.shouldHaveExitValue(0);\n+            output.shouldNotContain(\"timer slack:\");\n@@ -59,2 +65,2 @@\n-        \/\/ Check the timer slack value is still default when explicitly disabled\/default\n-        for (int slack : new int[] {-1, 0}) {\n+        \/\/ Check the timer slack value is good when system-wide default is requested\n+        {\n@@ -63,1 +69,1 @@\n-                                                      \"-XX:TimerSlack=\" + slack,\n+                                                      \"-XX:TimerSlack=0\",\n@@ -70,3 +76,4 @@\n-            int disabledSlack = parseSlackValue(output);\n-            if (disabledSlack != defaultSlack) {\n-                fail(output, \"Disabled slack value (\" + disabledSlack + \") is not default (\" + defaultSlack + \") when requested (\" + slack + \")\");\n+            defaultSlack = parseSlackValue(output);\n+\n+            if (defaultSlack == 0) {\n+                fail(output, \"Default slack value (\" + defaultSlack + \") is unexpected\");\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTimerSlack.java","additions":19,"deletions":12,"binary":false,"changes":31,"status":"modified"}]}