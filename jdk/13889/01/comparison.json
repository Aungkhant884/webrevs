{"files":[{"patch":"@@ -80,1 +80,12 @@\n-          \"Write map file for Linux perf tool at exit\")\n+          \"Write map file for Linux perf tool at exit\")                 \\\n+                                                                        \\\n+  product(intx, TimerSlack, -1, EXPERIMENTAL,                           \\\n+          \"(Linux-specific) Override the timer slack value to this \"    \\\n+          \"number of nanoseconds. Lower value provides more accurate \"  \\\n+          \"high-precision timers, at the expense of (possibly) worse \"  \\\n+          \"power efficiency. Set -1 to disable the override. In current \"\\\n+          \"Linux, 0 means using the system-wide default, which is the \" \\\n+          \"same as disabled override. See prctl(PR_SET_TIMERSLACK) for \"\\\n+          \"more info.\")                                                 \\\n+                                                                        \\\n+\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -113,0 +113,1 @@\n+# include <sys\/prctl.h>\n@@ -979,0 +980,9 @@\n+    {\n+      \/\/ Print current thread slack\n+      int slack = prctl(PR_GET_TIMERSLACK);\n+      if (slack >= 0) {\n+        log_info(os, thread)(\"Thread \\\"%s\\\" (pthread id: \" UINTX_FORMAT \") timer slack: %dns\",\n+                             thread->name(), (uintx) tid, slack);\n+      }\n+    }\n+\n@@ -4649,0 +4659,9 @@\n+  \/\/ Override the timer slack value if needed. The adjustment for the main\n+  \/\/ thread would inherit the setting the children threads, which would be\n+  \/\/ most threads in JDK\/JVM.\n+  if (TimerSlack > 0) {\n+    if (prctl(PR_SET_TIMERSLACK, TimerSlack) < 0) {\n+      vm_exit_during_initialization(\"Setting timer slack failed: %s\", os::strerror(errno));\n+    }\n+  }\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"}]}