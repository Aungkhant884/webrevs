{"files":[{"patch":"@@ -83,2 +83,2 @@\n-          \"(Linux-specific) Override the timer slack value to this \"    \\\n-          \"number of nanoseconds. Lower value provides more accurate \"  \\\n+          \"Overrides the timer slack value to the given number of \"     \\\n+          \"nanoseconds. Lower value provides more accurate \"            \\\n","filename":"src\/hotspot\/os\/linux\/globals_linux.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -971,0 +971,7 @@\n+\n+      \/\/ Print current timer slack, if available\n+      int slack = prctl(PR_GET_TIMERSLACK);\n+      if (slack >= 0) {\n+        log_info(os, thread)(\"Thread \\\"%s\\\" (pthread id: \" UINTX_FORMAT \") timer slack: %dns\",\n+                             thread->name(), (uintx) tid, slack);\n+      }\n@@ -992,9 +999,0 @@\n-    {\n-      \/\/ Print current timer slack, if available\n-      int slack = prctl(PR_GET_TIMERSLACK);\n-      if (slack >= 0) {\n-        log_info(os, thread)(\"Thread \\\"%s\\\" (pthread id: \" UINTX_FORMAT \") timer slack: %dns\",\n-                             thread->name(), (uintx) tid, slack);\n-      }\n-    }\n-\n@@ -4717,1 +4715,1 @@\n-  if (TimerSlack > 0) {\n+  if (TimerSlack >= 0) {\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                                                      \"TestTimerSlack$Hello\");\n+                                                      \"TestTimerSlack$TestMain\");\n@@ -55,2 +55,1 @@\n-                output.reportDiagnosticSummary();\n-                throw new IllegalStateException(\"Default slack value (\" + defaultSlack + \") is unexpected\");\n+                fail(output, \"Default slack value (\" + defaultSlack + \") is unexpected\");\n@@ -65,1 +64,1 @@\n-                                                      \"TestTimerSlack$Hello\");\n+                                                      \"TestTimerSlack$TestMain\");\n@@ -73,3 +72,1 @@\n-                output.reportDiagnosticSummary();\n-                throw new IllegalStateException(\"Disabled slack value (\" + disabledSlack +\n-                    \") is not default (\" + defaultSlack + \") when requested (\" + slack + \")\");\n+                fail(output, \"Disabled slack value (\" + disabledSlack + \") is not default (\" + defaultSlack + \") when requested (\" + slack + \")\");\n@@ -84,1 +81,1 @@\n-                                                      \"TestTimerSlack$Hello\");\n+                                                      \"TestTimerSlack$TestMain\");\n@@ -92,3 +89,1 @@\n-                output.reportDiagnosticSummary();\n-                throw new IllegalStateException(\"Actual slack value (\" + actualSlack +\n-                    \") is not the requested one (\" + slack + \")\");\n+                fail(output, \"Actual slack value (\" + actualSlack + \") is not the requested one (\" + slack + \")\");\n@@ -110,2 +105,1 @@\n-                    output.reportDiagnosticSummary();\n-                    throw new IllegalStateException(\"Multiple timer slack values detected\");\n+                    fail(output, \"Multiple timer slack values detected\");\n@@ -116,2 +110,1 @@\n-            output.reportDiagnosticSummary();\n-            throw new IllegalStateException(\"No timer slack values detected\");\n+            fail(output, \"No timer slack values detected\");\n@@ -122,3 +115,18 @@\n-    public static class Hello {\n-        public static void main(String... args) {\n-            System.out.println(\"Hello!\");\n+    private static void fail(OutputAnalyzer output, String msg) {\n+        output.reportDiagnosticSummary();\n+        throw new IllegalStateException(msg);\n+    }\n+\n+    public static class TestMain {\n+        static final int THREADS = 8;\n+\n+        public static void main(String... args) throws Exception {\n+            Thread[] ts = new Thread[THREADS];\n+            for (int c = 0; c < THREADS; c++) {\n+                ts[c] = new Thread();\n+                ts[c].start();\n+            }\n+\n+            for (int c = 0; c < THREADS; c++) {\n+                ts[c].join();\n+            }\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTimerSlack.java","additions":26,"deletions":18,"binary":false,"changes":44,"status":"modified"}]}