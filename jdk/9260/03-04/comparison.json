{"files":[{"patch":"@@ -0,0 +1,102 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.data.ChangedListener;\n+import com.sun.hotspot.igv.util.ContextAction;\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import javax.swing.Action;\n+import javax.swing.ImageIcon;\n+import org.openide.util.*;\n+\n+public final class ExpandDiffAction extends ContextAction<DiagramViewModel> implements ChangedListener<DiagramViewModel> {\n+\n+    private DiagramViewModel model;\n+\n+    public ExpandDiffAction() {\n+        this(Utilities.actionsGlobalContext());\n+    }\n+\n+    public ExpandDiffAction(Lookup lookup) {\n+        putValue(Action.SHORT_DESCRIPTION, \"Expand the difference selection\");\n+        putValue(Action.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/view\/images\/expand_right.png\")));\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return NbBundle.getMessage(ExpandDiffAction.class, \"CTL_ExpandDiffAction\");\n+    }\n+\n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return HelpCtx.DEFAULT_HELP;\n+    }\n+\n+    @Override\n+    public Class<DiagramViewModel> contextClass() {\n+        return DiagramViewModel.class;\n+    }\n+\n+    @Override\n+    public void performAction(DiagramViewModel model) {\n+        int fp = model.getFirstPosition();\n+        int sp = model.getSecondPosition();\n+        if (sp != model.getPositions().size() - 1) {\n+            int nfp = fp;\n+            int nsp = sp + 1;\n+            model.setPositions(nfp, nsp);\n+        }\n+    }\n+\n+    @Override\n+    public void update(DiagramViewModel model) {\n+        super.update(model);\n+\n+        if (this.model != model) {\n+            if (this.model != null) {\n+                this.model.getDiagramChangedEvent().removeListener(this);\n+            }\n+\n+            this.model = model;\n+            if (this.model != null) {\n+                this.model.getDiagramChangedEvent().addListener(this);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public boolean isEnabled(DiagramViewModel model) {\n+        return model.getSecondPosition() != model.getPositions().size() - 1;\n+    }\n+\n+    @Override\n+    public Action createContextAwareInstance(Lookup arg0) {\n+        return new ExpandDiffAction(arg0);\n+    }\n+\n+    @Override\n+    public void changed(DiagramViewModel source) {\n+        update(source);\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ExpandDiffAction.java","additions":102,"deletions":0,"binary":false,"changes":102,"status":"added"},{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import com.sun.hotspot.igv.data.ChangedListener;\n+import com.sun.hotspot.igv.util.ContextAction;\n+import com.sun.hotspot.igv.view.DiagramViewModel;\n+import javax.swing.Action;\n+import javax.swing.ImageIcon;\n+import org.openide.util.*;\n+\n+public final class ShrinkDiffAction extends ContextAction<DiagramViewModel> implements ChangedListener<DiagramViewModel> {\n+    private DiagramViewModel model;\n+\n+    public ShrinkDiffAction() {\n+        this(Utilities.actionsGlobalContext());\n+    }\n+\n+    public ShrinkDiffAction(Lookup lookup) {\n+        putValue(Action.SHORT_DESCRIPTION, \"Reduce the difference selection\");\n+        putValue(Action.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(\"com\/sun\/hotspot\/igv\/view\/images\/shrink_right.png\")));\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return NbBundle.getMessage(ShrinkDiffAction.class, \"CTL_ShrinkDiffAction\");\n+    }\n+\n+    @Override\n+    public HelpCtx getHelpCtx() {\n+        return HelpCtx.DEFAULT_HELP;\n+    }\n+\n+    @Override\n+    public Class<DiagramViewModel> contextClass() {\n+        return DiagramViewModel.class;\n+    }\n+\n+    @Override\n+    public void performAction(DiagramViewModel model) {\n+        int fp = model.getFirstPosition();\n+        int sp = model.getSecondPosition();\n+        if (sp != model.getPositions().size() - 1) {\n+            int nfp = fp;\n+            int nsp = (fp < sp) ? sp - 1 : sp;\n+            model.setPositions(nfp, nsp);\n+        }\n+    }\n+\n+    @Override\n+    public void update(DiagramViewModel model) {\n+        super.update(model);\n+\n+        if (this.model != model) {\n+            if (this.model != null) {\n+                this.model.getDiagramChangedEvent().removeListener(this);\n+            }\n+\n+            this.model = model;\n+            if (this.model != null) {\n+                this.model.getDiagramChangedEvent().addListener(this);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public boolean isEnabled(DiagramViewModel model) {\n+        return model.getSecondPosition() != model.getPositions().size() - 1;\n+    }\n+\n+    @Override\n+    public Action createContextAwareInstance(Lookup arg0) {\n+        return new ShrinkDiffAction(arg0);\n+    }\n+\n+    @Override\n+    public void changed(DiagramViewModel source) {\n+        update(source);\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShrinkDiffAction.java","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"}]}