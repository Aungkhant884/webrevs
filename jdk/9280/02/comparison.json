{"files":[{"patch":"@@ -56,9 +56,9 @@\n-    oopSize     = VM.getVM().getOopSize();\n-    byteSize    = db.getJByteType().getSize();\n-    charSize    = db.getJCharType().getSize();\n-    booleanSize = db.getJBooleanType().getSize();\n-    intSize     = db.getJIntType().getSize();\n-    shortSize   = db.getJShortType().getSize();\n-    longSize    = db.getJLongType().getSize();\n-    floatSize   = db.getJFloatType().getSize();\n-    doubleSize  = db.getJDoubleType().getSize();\n+    oopSize     = (int) VM.getVM().getOopSize();\n+    byteSize    = (int) db.getJByteType().getSize();\n+    charSize    = (int) db.getJCharType().getSize();\n+    booleanSize = (int) db.getJBooleanType().getSize();\n+    intSize     = (int) db.getJIntType().getSize();\n+    shortSize   = (int) db.getJShortType().getSize();\n+    longSize    = (int) db.getJLongType().getSize();\n+    floatSize   = (int) db.getJFloatType().getSize();\n+    doubleSize  = (int) db.getJDoubleType().getSize();\n@@ -74,9 +74,9 @@\n-  private long oopSize;\n-  private long byteSize;\n-  private long charSize;\n-  private long booleanSize;\n-  private long intSize;\n-  private long shortSize;\n-  private long longSize;\n-  private long floatSize;\n-  private long doubleSize;\n+  private final int oopSize;\n+  private final int byteSize;\n+  private final int charSize;\n+  private final int booleanSize;\n+  private final int intSize;\n+  private final int shortSize;\n+  private final int longSize;\n+  private final int floatSize;\n+  private final int doubleSize;\n@@ -84,9 +84,9 @@\n-  public long getOopSize()     { return oopSize;     }\n-  public long getByteSize()    { return byteSize;    }\n-  public long getCharSize()    { return charSize;    }\n-  public long getBooleanSize() { return booleanSize; }\n-  public long getIntSize()     { return intSize;     }\n-  public long getShortSize()   { return shortSize;   }\n-  public long getLongSize()    { return longSize;    }\n-  public long getFloatSize()   { return floatSize;   }\n-  public long getDoubleSize()  { return doubleSize;  }\n+  public int getOopSize()     { return oopSize;     }\n+  public int getByteSize()    { return byteSize;    }\n+  public int getCharSize()    { return charSize;    }\n+  public int getBooleanSize() { return booleanSize; }\n+  public int getIntSize()     { return intSize;     }\n+  public int getShortSize()   { return shortSize;   }\n+  public int getLongSize()    { return longSize;    }\n+  public int getFloatSize()   { return floatSize;   }\n+  public int getDoubleSize()  { return doubleSize;  }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ObjectHeap.java","additions":27,"deletions":27,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -952,1 +952,1 @@\n-         instrSize += endPc - pc;\n+         instrSize += (int) (endPc - pc);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/classbrowser\/HTMLGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -527,1 +527,1 @@\n-        return (int) BYTE_SIZE + (int)OBJ_ID_SIZE * 2 + (int)INT_SIZE * 2 + getSizeForFields(fields);\n+        return BYTE_SIZE + OBJ_ID_SIZE * 2 + INT_SIZE * 2 + getSizeForFields(fields);\n@@ -532,1 +532,1 @@\n-        int size = (int)BYTE_SIZE + (int)INT_SIZE + (int)OBJ_ID_SIZE * 2;\n+        int size = BYTE_SIZE + INT_SIZE + OBJ_ID_SIZE * 2;\n@@ -595,1 +595,1 @@\n-        final int type = (int) tak.getElementType();\n+        final int type = tak.getElementType();\n@@ -657,1 +657,1 @@\n-    private long getSizeForType(int type) throws IOException {\n+    private int getSizeForType(int type) throws IOException {\n@@ -683,2 +683,2 @@\n-            ((int) BYTE_SIZE + 2 * (int) INT_SIZE + 2 * (int) OBJ_ID_SIZE):\n-            (2 * (int) BYTE_SIZE + 2 * (int) INT_SIZE + (int) OBJ_ID_SIZE);\n+            (BYTE_SIZE + 2 * INT_SIZE + 2 * OBJ_ID_SIZE):\n+            (2 * BYTE_SIZE + 2 * INT_SIZE + OBJ_ID_SIZE);\n@@ -820,1 +820,1 @@\n-        writeHeader(HPROF_TRACE, 3 * (int)INT_SIZE );\n+        writeHeader(HPROF_TRACE, 3 * INT_SIZE );\n@@ -851,1 +851,1 @@\n-                writeHeader(HPROF_TRACE, 3 * (int)INT_SIZE + depth * (int)VM.getVM().getOopSize());\n+                writeHeader(HPROF_TRACE, 3 * INT_SIZE + depth * OBJ_ID_SIZE);\n@@ -875,1 +875,1 @@\n-        writeHeader(HPROF_FRAME, 4 * (int)VM.getVM().getOopSize() + 2 * (int)INT_SIZE);\n+        writeHeader(HPROF_FRAME, 4 * OBJ_ID_SIZE + 2 * INT_SIZE);\n@@ -885,1 +885,1 @@\n-        int size = (int)BYTE_SIZE + (int)OBJ_ID_SIZE + (int)INT_SIZE * 2;\n+        int size = BYTE_SIZE + OBJ_ID_SIZE + INT_SIZE * 2;\n@@ -907,1 +907,1 @@\n-                                           int size = (int)BYTE_SIZE + (int)OBJ_ID_SIZE + (int)INT_SIZE * 2;\n+                                           int size = BYTE_SIZE + OBJ_ID_SIZE + INT_SIZE * 2;\n@@ -935,1 +935,1 @@\n-            int size = (int)BYTE_SIZE + (int)OBJ_ID_SIZE * 2;\n+            int size = BYTE_SIZE + OBJ_ID_SIZE * 2;\n@@ -964,1 +964,1 @@\n-        final int type = (int) tak.getElementType();\n+        final int type = tak.getElementType();\n@@ -1393,8 +1393,8 @@\n-    private long BOOLEAN_SIZE;\n-    private long BYTE_SIZE;\n-    private long CHAR_SIZE;\n-    private long SHORT_SIZE;\n-    private long INT_SIZE;\n-    private long LONG_SIZE;\n-    private long FLOAT_SIZE;\n-    private long DOUBLE_SIZE;\n+    private int BOOLEAN_SIZE;\n+    private int BYTE_SIZE;\n+    private int CHAR_SIZE;\n+    private int SHORT_SIZE;\n+    private int INT_SIZE;\n+    private int LONG_SIZE;\n+    private int FLOAT_SIZE;\n+    private int DOUBLE_SIZE;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/HeapHprofBinWriter.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"}]}