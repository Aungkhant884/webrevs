{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -410,29 +410,24 @@\n-                try {\n-                    udpSocket.send(opkt);\n-\n-                    \/\/ timeout remaining after successive 'receive()'\n-                    int timeoutLeft = pktTimeout;\n-                    int cnt = 0;\n-                    do {\n-                        if (debug) {\n-                           cnt++;\n-                            dprint(\"Trying RECEIVE(\" +\n-                                    cnt + \") retry(\" + (retry + 1) +\n-                                    \") for:\" + xid  + \"    sock-timeout:\" +\n-                                    timeoutLeft + \" ms.\");\n-                        }\n-                        udpSocket.setSoTimeout(timeoutLeft);\n-                        long start = System.currentTimeMillis();\n-                        udpSocket.receive(ipkt);\n-                        long end = System.currentTimeMillis();\n-\n-                        byte[] data = ipkt.getData();\n-                        if (isMatchResponse(data, xid)) {\n-                            return data;\n-                        }\n-                        timeoutLeft = pktTimeout - ((int) (end - start));\n-                    } while (timeoutLeft > minTimeout);\n-\n-                } finally {\n-                    udpSocket.disconnect();\n-                }\n+                udpSocket.send(opkt);\n+\n+                \/\/ timeout remaining after successive 'receive()'\n+                int timeoutLeft = pktTimeout;\n+                int cnt = 0;\n+                do {\n+                    if (debug) {\n+                        cnt++;\n+                        dprint(\"Trying RECEIVE(\" +\n+                                cnt + \") retry(\" + (retry + 1) +\n+                                \") for:\" + xid + \"    sock-timeout:\" +\n+                                timeoutLeft + \" ms.\");\n+                    }\n+                    udpSocket.setSoTimeout(timeoutLeft);\n+                    long start = System.currentTimeMillis();\n+                    udpSocket.receive(ipkt);\n+                    long end = System.currentTimeMillis();\n+\n+                    byte[] data = ipkt.getData();\n+                    if (isMatchResponse(data, xid)) {\n+                        return data;\n+                    }\n+                    timeoutLeft = pktTimeout - ((int) (end - start));\n+                } while (timeoutLeft > minTimeout);\n","filename":"src\/jdk.naming.dns\/share\/classes\/com\/sun\/jndi\/dns\/DnsClient.java","additions":25,"deletions":30,"binary":false,"changes":55,"status":"modified"}]}