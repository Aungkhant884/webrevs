{"files":[{"patch":"@@ -1748,0 +1748,15 @@\n+\n+  if (x->Opcode() == Op_Region) {\n+    \/\/ x has not yet been transformed to Loop or LongCountedLoop.\n+    \/\/ This should only happen if we are inside an infinite loop.\n+    \/\/ It happens like this:\n+    \/\/   build_loop_tree -> do not attach infinite loop and nested loops\n+    \/\/   beautify_loops  -> does not transform the infinite and nested loops to LoopNode, because not attached yet\n+    \/\/   build_loop_tree -> find and attach infinite and nested loops\n+    \/\/   counted_loop    -> nested Regions are not yet transformed to LoopNodes, we land here\n+    assert(x->as_Region()->is_in_infinite_subgraph(),\n+           \"x can only be a Region and not Loop if inside infinite loop\");\n+    \/\/ Come back later when Region is transformed to LoopNode\n+    return false;\n+  }\n+\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+super public class TestCountedLoopInsideInfiniteLoop\n+{\n+    public Method \"<init>\":\"()V\"\n+    stack 2 locals 1\n+    {\n+        aload_0;\n+        invokespecial  Method java\/lang\/Object.\"<init>\":\"()V\";\n+        return;\n+    }\n+    static Method test:\"(IIII)V\"\n+    stack 200 locals 4\n+    {\n+        iload      0; \/\/ arg0 == 0\n+        ifeq LEND;\n+\n+    LOOP1: \/\/ counted loop to kick off beautify_loops\n+        iload      1;\n+        ifeq LOOP1;\n+        iload      2;\n+        ifle LOOP1;\n+\n+    LOOP2: \/\/ infinite loop (still Region)\n+        goto LOOP2b;\n+\n+    LOOP2b: \/\/ counted loop (still Region)\n+        iinc       3, -1;\n+        iload      3;\n+        ifgt LOOP2b;\n+\n+        iconst_0;\n+        ifeq LOOP2; \/\/ always true\n+        goto LOOP2b;\n+\n+    LEND:\n+        return;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCountedLoopInsideInfiniteLoop.jasm","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8308749\n+ * @compile TestCountedLoopInsideInfiniteLoop.jasm\n+ * @summary Counted Loops inside infinite loops are only detected later,\n+ *          and may still be a Region and not a LoopNode as expected.\n+ * @run main\/othervm -Xcomp -XX:-TieredCompilation -XX:PerMethodTrapLimit=0\n+ *      -XX:CompileCommand=compileonly,TestCountedLoopInsideInfiniteLoop::test\n+ *      TestCountedLoopInsideInfiniteLoopMain\n+ *\/\n+\n+public class TestCountedLoopInsideInfiniteLoopMain {\n+    public static void main (String[] args) {\n+        TestCountedLoopInsideInfiniteLoop.test(0, 0, 0, 0);\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/TestCountedLoopInsideInfiniteLoopMain.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"}]}