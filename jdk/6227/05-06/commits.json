[{"commit":{"message":"8176501: Method Shape.getBounds2D() incorrectly includes Bezier control points in bounding box\n\nThis adds a new unit test that calculates a high-precision bounding box (using BigDecimals), and then makes sure our double-based logic contains that high-precision bounds.\n\nThis restores getBounds2D() to its original contract: it should only ever be *larger* than the actual bounds -- it should never be smaller.\n\nAlso we want to only apply this margin (aka \"padding\") when we deal with polynomial-based extrema. We should never apply it to line-based polygons. For ex: a Path2D that represents an int-based rectangle should return the same bounds as before 8176501 was addressed.\n\nThis test currently only addresses very small cubic curves.\n\nI experimented with very large cubic & quadratic curves, but I didn't come up with a unit test that failed before and after this commit. Adding unit tests for large curve segments is a possible area of improvement."},"files":[{"filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java"},{"filename":"test\/jdk\/java\/awt\/geom\/Path2D\/GetBounds2DPrecisionTest.java"}],"sha":"40bda064f1e6ed81817dcc9bcbf33f325924f259"},{"commit":{"message":"8176501: Method Shape.getBounds2D() incorrectly includes Bezier control points in bounding box\n\nAddressing code review comments: given current code structure we don't need separate data structures for x and y equations."},"files":[{"filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java"}],"sha":"af4c5f03b7c9687cde53ea6c3770846bbfcc8fbc"},{"commit":{"message":"8176501: Method Shape.getBounds2D() incorrectly includes Bezier control points in bounding box\n\nRemoving accidental leftover code. This should have been removed in a recent previous commit. The preceding code already defines these values."},"files":[{"filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java"}],"sha":"8db26a255d21584fd3f4462064d06f4e216f0f72"}]