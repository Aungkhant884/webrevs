[{"commit":{"message":"8176501: Method Shape.getBounds2D() incorrectly includes Bezier control points in bounding box\n\nThis adds an exploratory algorithm that tries to identify how to expand the double-based bounding box. It is currently problematic, but I'm committing it for review\/feedback. Maybe this will look like a familiar problem to someone more familiar with this subject? Once we settle on how to address machine error: I'll either adapt this file into a more proper unit test or delete it.\n\nThis is an attempt to explore Laurent's comments here:\nhttps:\/\/github.com\/openjdk\/jdk\/pull\/6227#discussion_r746450132\n\nThe problem is our double-based approach can be a little bit too small because of machine error. We need it to only ever err on the side of being too large.\n\nCurrently in this class we're applying a `margin` as follows:\n```\n       double x = coeff[0] + t * (coeff[1] + t * coeff[2]);\n       double margin = marginMultiplier * Math.ulp(x);\n       if (x - margin < leftX) leftX = x - margin;\n       if (x + margin> rightX) rightX = x + margin;\n```\n\nThis class tests a million shapes and tries to identify the smallest constant `marginMultiplier` that always returns an appropriate bounding box.\n\nThe current problem is this constant is multiplied by the ulp of a value. So as the value (for ex: the left x-value) approaches zero the ulp becomes increasingly small, so the multiplier has to become extremely large. Currently this algorithm settles on a multiplier of: 7.864956084850002E10\n\nIf we treat the constant as a multiplier of the x-value itself (for ex: `margin = multiplier * Math.abs(x)``), then this algorithm settles on 0.000013173867835580114.\n\nWhat is a good way to evaluate `margin` in the code snippet above?\n\nOr at some point we could switch back to using the bezier control point: what fuzzy sliding scale logic do we use to determine when to use \"the old way\" and when to use \"the new way\"?"},"files":[{"filename":"test\/jdk\/java\/awt\/geom\/Path2D\/GetBounds2DPrecisionTest.java"}],"sha":"4b9d87d6d03e923bb2663fc8f4f77b7549df6e70"}]