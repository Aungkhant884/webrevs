[{"commit":{"message":"8176501: Method Shape.getBounds2D() incorrectly includes Bezier control points in bounding box\n\nAddressing more of Laurent's code review recommendations\/comments:\n\n1. solve the quadratic equation using QuadCurve2d.solveQuadratic() or like Helpers.quadraticRoots()\n\n(I was pleasantly surprised to see QuadCurve2D.solveQuadratic(..) does well for the unit test where the t^2 coefficient approaches zero. We still get an extra root, but it's greater than 10^13, so it is ignored by our (0,1) bounds check later.)\n\n2. determine the derivatives da \/ db\n\nWe now define x_deriv_coeff and y_deriv_coeff.\n\n3. remove the label pathIteratorLoop\n\n4. use `for (final PathIterator it = shape.getPathIterator(null); !it.isDone(); it.next()) {`\n\n(The initial statement is empty in this case because PathIterator is an argument.)\n\n5. make arrays final to be obvious\n\n6. add a shortcut test for better readability \/ close the shortcut test\n\n7. after computing coefficients (abcd), also compute (da db c) needed by root finding next\n\n8. useless with the shortcut test (re \"definedParametricEquations\" boolean)\n\n9. use if (t > 0.0 && t < 1.0)\n\n(Sorry, that got lost in the prev refactor.)\n\n10. add explicitely the SEG_CLOSE case (skip = continue) before the default case\n\nThis commit does not address comments about accuracy\/precision. I'll explore those separately later."},"files":[{"filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java"},{"filename":"src\/java.desktop\/share\/classes\/sun\/awt\/geom\/Curve.java"}],"sha":"410cd6ce0f25f4425803e8b61d10a0b85e86929e"}]