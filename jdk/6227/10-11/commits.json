[{"commit":{"message":"8176501: Method Shape.getBounds2D() incorrectly includes Bezier control points in bounding box\n\nThis is a second follow-up response to prrace's code review feedback about method modifiers.\n\nThis commit more carefully preserves the getBounds2D() method modifiers for all 3 classes: the Path2D.Double, the Path2D.Float, and the Path2D itself.\n\nIt is possible (if unlikely) that someone previously extended the Path2D class and overrode getBounds2D(), because the Path2D#getBounds2D() method was *not* final. So with this commit: any such existing code will not break. Meanwhile the subclasses (Double and Float) preserve their previous modifiers (final, synchronized).\n\nThis is in response to prrace's code review:\n\n>    You are changing the signature of public API\n>    src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java\n>    public final synchronized Rectangle2D getBounds2D() => public Rectangle2D getBounds2D() {\n>\n> So no longer final, and no longer synchronized.\n> This means a CSR is required and we need to think about it ..\n> the intention was that the subclass not over-ride.\n> And why remove synchronized ? I am fairly sure it was there to\n> make sure no one was mutating the Path whilst\n> bounds are being calculated.\n> And you are using getPathIterator(AffineTransform) and the docs\n> for that say it isn't thread safe.\n> So I think this implementation needs to be thought about very carefully."},"files":[{"filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java"}],"sha":"faeb24198480c94b682617523282daaff55f7fab"}]