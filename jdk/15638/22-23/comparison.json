{"files":[{"patch":"@@ -62,0 +62,1 @@\n+    private static final MethodHandle LONG_EQ_CHECK;\n@@ -84,0 +85,2 @@\n+            LONG_EQ_CHECK = LOOKUP.findStatic(SwitchBootstraps.class, \"longEqCheck\",\n+                    MethodType.methodType(boolean.class, long.class, Long.class));\n@@ -194,0 +197,1 @@\n+            labelClass != Long.class &&\n@@ -252,1 +256,2 @@\n-                } else if (currentLabel instanceof Integer ii) {\n+                }\n+                else if (currentLabel instanceof Integer ii) {\n@@ -260,0 +265,3 @@\n+                else if (selectorType.isPrimitive() && currentLabel instanceof Long) {\n+                    currentTest = LONG_EQ_CHECK;\n+                }\n@@ -320,0 +328,1 @@\n+    \/\/<editor-fold desc=\"Equality checks for numerics and boolean\">\n@@ -334,0 +343,7 @@\n+    private static boolean longEqCheck(long value, Long constant) {\n+        if (Long.valueOf(value).equals(constant.longValue())) {\n+            return true;\n+        }\n+        return false;\n+    }\n+\n@@ -352,0 +368,1 @@\n+    \/\/<\/editor-fold>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/SwitchBootstraps.java","additions":18,"deletions":1,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -90,0 +90,2 @@\n+        assertEquals(1, switchLongAndUnconditional(32778L));\n+        assertEquals(2, switchLongAndUnconditional(42L));\n@@ -443,0 +445,7 @@\n+    public static int switchLongAndUnconditional(long l) {\n+        return switch (l) {\n+            case 32778L -> 1;\n+            case long c -> 2;\n+        };\n+    }\n+\n","filename":"test\/langtools\/tools\/javac\/patterns\/PrimitivePatterns.java","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}