{"files":[{"patch":"@@ -1160,3 +1160,4 @@\n-            if (getDesktopIcon().getParent() instanceof JLayeredPane) {\n-                ((JLayeredPane)getDesktopIcon().getParent()).\n-                    moveToFront(getDesktopIcon());\n+            JDesktopIcon icon = getDesktopIcon();\n+            if (icon.getParent() instanceof JLayeredPane) {\n+                ((JLayeredPane)icon.getParent()).\n+                    moveToFront(icon);\n@@ -1176,3 +1177,4 @@\n-            if (getDesktopIcon().getParent() instanceof JLayeredPane) {\n-                ((JLayeredPane)getDesktopIcon().getParent()).\n-                    moveToBack(getDesktopIcon());\n+            JDesktopIcon icon = getDesktopIcon();\n+            if (icon.getParent() instanceof JLayeredPane) {\n+                ((JLayeredPane)icon.getParent()).\n+                    moveToBack(icon);\n@@ -1297,1 +1299,4 @@\n-           p = getDesktopIcon().getParent();\n+           JInternalFrame.JDesktopIcon icon = getDesktopIcon();\n+           if (icon != null) {\n+               p = icon.getParent();\n+           }\n@@ -1733,1 +1738,4 @@\n-        getDesktopIcon().setVisible(true);\n+        JInternalFrame.JDesktopIcon icon = getDesktopIcon();\n+        if (icon != null) {\n+            icon.setVisible(true);\n+        }\n@@ -1752,1 +1760,4 @@\n-            getDesktopIcon().setVisible(false);\n+            JInternalFrame.JDesktopIcon icon = getDesktopIcon();\n+            if (icon != null) {\n+                icon.setVisible(false);\n+            }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JInternalFrame.java","additions":20,"deletions":9,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 5015261\n+ * @summary  Verifies if JInternalFrame causes NPE\n+ * @run main JInternalFrameBug\n+ *\/\n+\n+import java.awt.Toolkit;\n+import java.awt.AWTEvent;\n+import java.awt.event.AWTEventListener;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JDesktopPane;\n+\n+\/** Demonstrates NPE when creating a JInternalFrame *\/\n+public class JInternalFrameBug {\n+\n+    private static class Listener implements AWTEventListener {\n+        public void eventDispatched(AWTEvent e) {\n+            if (e.getSource() instanceof JInternalFrame) {\n+                JInternalFrame f = (JInternalFrame)e.getSource();\n+                JDesktopPane df = f.getDesktopPane();\n+            }\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        Toolkit.getDefaultToolkit().addAWTEventListener(new Listener(), -1);\n+        JInternalFrame f = new JInternalFrame();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JInternalFrame\/JInternalFrameBug.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"}]}