{"files":[{"patch":"@@ -134,1 +134,1 @@\n-                item.setContainingPackage(utils.getPackageName(utils.containingPackage(element)));\n+                item.setContainingPackage(utils.getPackageName(utils.containingPackage(containingType)));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlIndexBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -330,1 +330,14 @@\n-                return elementComparator.compare(ii1.getElement(), ii2.getElement());\n+                int d = elementComparator.compare(ii1.getElement(), ii2.getElement());\n+                if (d == 0) {\n+                    \/*\n+                     * Members inherited from classes with package access are\n+                     * documented as though they were declared in the inheriting\n+                     * subclass (see JDK-4780441).\n+                     *\/\n+                    Element subclass1 = ii1.getContainingTypeElement();\n+                    Element subclass2 = ii2.getContainingTypeElement();\n+                    if (subclass1 != null && subclass2 != null) {\n+                        d = elementComparator.compare(subclass1, subclass2);\n+                    }\n+                }\n+                return d;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/IndexBuilder.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,159 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+ \/*\n+ * @test\n+ * @bug      8292892\n+ * @summary  Tests that members inherited from classes with package access are\n+ *           documented in the index as though they were declared in the\n+ *           inheriting class.\n+ * @library  ..\/..\/lib\n+ * @modules  jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build    javadoc.tester.*\n+ * @run main TestIndexInherited\n+ *\/\n+import java.nio.file.Path;\n+import javadoc.tester.JavadocTester;\n+\n+\/**\n+ * Tests the index for members inherited from a class with package access.\n+ *\/\n+public class TestIndexInherited extends JavadocTester {\n+\n+    \/**\n+     * The name of the HTML index file.\n+     *\/\n+    private static final String INDEX_FILE = \"index-all.html\";\n+\n+    \/**\n+     * The name of the JavaScript member search index file.\n+     *\/\n+    private static final String SEARCH_FILE = \"member-search-index.js\";\n+\n+    \/**\n+     * Index entries for members inherited by the subclasses.\n+     *\/\n+    private static final String[] INDEX_SUBCLASSES = {\"\"\"\n+        <dt><a href=\"pkg1\/ClassB.html#methodA()\" class=\"member-name-link\">methodA()<\/a> \\\n+        - Method in class pkg1.<a href=\"pkg1\/ClassB.html\" title=\"class in pkg1\">ClassB<\/a><\/dt>\n+        \"\"\", \"\"\"\n+        <dt><a href=\"pkg2\/ClassC.html#methodA()\" class=\"member-name-link\">methodA()<\/a> \\\n+        - Method in class pkg2.<a href=\"pkg2\/ClassC.html\" title=\"class in pkg2\">ClassC<\/a><\/dt>\n+        \"\"\", \"\"\"\n+        <dt><a href=\"pkg1\/ClassB.html#STRING_A\" class=\"member-name-link\">STRING_A<\/a> \\\n+        - Static variable in class pkg1.<a href=\"pkg1\/ClassB.html\" title=\"class in pkg1\">ClassB<\/a><\/dt>\n+        \"\"\", \"\"\"\n+        <dt><a href=\"pkg2\/ClassC.html#STRING_A\" class=\"member-name-link\">STRING_A<\/a> \\\n+        - Static variable in class pkg2.<a href=\"pkg2\/ClassC.html\" title=\"class in pkg2\">ClassC<\/a><\/dt>\n+        \"\"\"};\n+\n+    \/**\n+     * Search entries for members inherited by the subclasses.\n+     *\/\n+    private static final String[] SEARCH_SUBCLASSES = {\"\"\"\n+        {\"p\":\"pkg1\",\"c\":\"ClassB\",\"l\":\"methodA()\"}\"\"\", \"\"\"\n+        {\"p\":\"pkg2\",\"c\":\"ClassC\",\"l\":\"methodA()\"}\"\"\", \"\"\"\n+        {\"p\":\"pkg1\",\"c\":\"ClassB\",\"l\":\"STRING_A\"}\"\"\", \"\"\"\n+        {\"p\":\"pkg2\",\"c\":\"ClassC\",\"l\":\"STRING_A\"}\"\"\"};\n+\n+    \/**\n+     * Index entries for members declared in the superclass.\n+     *\/\n+    private static final String[] INDEX_SUPERCLASS = {\"\"\"\n+        <dt><a href=\"pkg1\/ClassA.html#methodA()\" class=\"member-name-link\">methodA()<\/a> \\\n+        - Method in interface pkg1.<a href=\"pkg1\/ClassA.html\" title=\"interface in pkg1\">ClassA<\/a><\/dt>\n+        \"\"\", \"\"\"\n+        <dt><a href=\"pkg1\/ClassA.html#STRING_A\" class=\"member-name-link\">STRING_A<\/a> \\\n+        - Static variable in interface pkg1.<a href=\"pkg1\/ClassA.html\" title=\"interface in pkg1\">ClassA<\/a><\/dt>\n+        \"\"\"};\n+\n+    \/**\n+     * Search entries for members declared in the superclass.\n+     *\/\n+    private static final String[] SEARCH_SUPERCLASS = {\"\"\"\n+        {\"p\":\"pkg1\",\"c\":\"ClassA\",\"l\":\"methodA()\"}\"\"\", \"\"\"\n+        {\"p\":\"pkg1\",\"c\":\"ClassA\",\"l\":\"STRING_A\"}\"\"\"};\n+\n+    \/**\n+     * The default constructor.\n+     *\/\n+    public TestIndexInherited() {\n+    }\n+\n+    \/**\n+     * Runs the test methods.\n+     *\n+     * @param args the command-line arguments\n+     * @throws Exception if an errors occurs while executing a test method\n+     *\/\n+    public static void main(String... args) throws Exception {\n+        TestIndexInherited tester = new TestIndexInherited();\n+        tester.runTests(m -> new Object[]{Path.of(m.getName())});\n+    }\n+\n+    \/**\n+     * Tests entries in the subclasses, loaded in alphabetical order.\n+     *\n+     * @param base the base directory for test output\n+     *\/\n+    @Test\n+    public void testSubclasses1(Path base) {\n+        String dir = base.resolve(\"out\").toString();\n+        javadoc(\"-d\", dir, \"-sourcepath\", testSrc, \"pkg1\", \"pkg2\");\n+        checkExit(Exit.OK);\n+        checkOrder(INDEX_FILE, INDEX_SUBCLASSES);\n+        checkOrder(SEARCH_FILE, SEARCH_SUBCLASSES);\n+        checkOutput(INDEX_FILE, false, \"ClassA\");\n+        checkOutput(SEARCH_FILE, false, \"ClassA\");\n+    }\n+\n+    \/**\n+     * Tests entries in the subclasses, loaded in reverse alphabetical order.\n+     *\n+     * @param base the base directory for test output\n+     *\/\n+    @Test\n+    public void testSubclasses2(Path base) {\n+        String dir = base.resolve(\"out\").toString();\n+        javadoc(\"-d\", dir, \"-sourcepath\", testSrc, \"pkg2\", \"pkg1\");\n+        checkExit(Exit.OK);\n+        checkOrder(INDEX_FILE, INDEX_SUBCLASSES);\n+        checkOrder(SEARCH_FILE, SEARCH_SUBCLASSES);\n+        checkOutput(INDEX_FILE, false, \"ClassA\");\n+        checkOutput(SEARCH_FILE, false, \"ClassA\");\n+    }\n+\n+    \/**\n+     * Tests entries in the superclass.\n+     *\n+     * @param base the base directory for test output\n+     *\/\n+    @Test\n+    public void testSuperclass(Path base) {\n+        String dir = base.resolve(\"out\").toString();\n+        javadoc(\"-d\", dir, \"-sourcepath\", testSrc, \"-private\", \"pkg1\", \"pkg2\");\n+        checkExit(Exit.OK);\n+        checkOrder(INDEX_FILE, INDEX_SUPERCLASS);\n+        checkOrder(SEARCH_FILE, SEARCH_SUPERCLASS);\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexInherited\/TestIndexInherited.java","additions":159,"deletions":0,"binary":false,"changes":159,"status":"added"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package pkg1;\n+\n+\/**\n+ * A class with package access, inaccessible to classes outside its package.\n+ *\/\n+interface ClassA {\n+\n+    \/**\n+     * A string constant with package access.\n+     *\/\n+    static final String STRING_A = \"A string in pkg1 with package access.\";\n+\n+    \/**\n+     * A method with package access.\n+     *\/\n+    default void methodA() {\n+        System.out.println(ClassA.class.getName() + \": \" + STRING_A);\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexInherited\/pkg1\/ClassA.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package pkg1;\n+\n+\/**\n+ * A public subclass in the same package as its superclass.\n+ *\/\n+public class ClassB implements ClassA {\n+\n+    \/**\n+     * The default constructor.\n+     *\/\n+    public ClassB() {\n+    }\n+\n+    \/**\n+     * A public method.\n+     *\/\n+    public void methodB() {\n+        System.out.println(ClassB.class.getName() + \": \" + STRING_A);\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexInherited\/pkg1\/ClassB.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package pkg2;\n+\n+import pkg1.ClassB;\n+\n+\/**\n+ * A public subclass in a different package than its superclass.\n+ *\/\n+public class ClassC extends ClassB {\n+\n+    \/**\n+     * The default constructor.\n+     *\/\n+    public ClassC() {\n+    }\n+\n+    \/**\n+     * A public method.\n+     *\/\n+    public void methodC() {\n+        methodA();\n+        methodB();\n+        System.out.println(ClassC.class.getName() + \": \" + STRING_A);\n+    }\n+\n+    \/**\n+     * The main method.\n+     *\n+     * @param args the command-line arguments\n+     *\/\n+    public static void main(String[] args) {\n+        new ClassC().methodC();\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testIndexInherited\/pkg2\/ClassC.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}