{"files":[{"patch":"@@ -1508,0 +1508,1 @@\n+#if !defined(AIX)\n@@ -1509,0 +1510,1 @@\n+#endif\n@@ -1515,0 +1517,1 @@\n+#if !defined(AIX)\n@@ -1516,1 +1519,0 @@\n-          \/\/ double check AIX doesn't need this!\n@@ -1522,0 +1524,5 @@\n+#else\n+        if (result == os::SuspendResume::SR_RUNNING) {\n+          break;\n+        }\n+#endif\n@@ -1537,0 +1544,3 @@\n+#if defined(AIX)\n+    ShouldNotReachHere();\n+#endif\n@@ -1589,0 +1599,8 @@\n+#if defined(AIX)\n+\/\/ \"Randomly\" selected value for how long we want to spin\n+\/\/ before bailing out on suspending a thread, also how often\n+\/\/ we send a signal to a thread we want to resume\n+static const int RANDOMLY_LARGE_INTEGER = 1000000;\n+static const int RANDOMLY_LARGE_INTEGER2 = 100;\n+#endif\n+\n@@ -1602,0 +1620,1 @@\n+#if !defined(AIX)\n@@ -1625,0 +1644,38 @@\n+#else\n+  if (sr_notify(osthread) != 0) {\n+    \/\/ try to cancel, switch to running\n+\n+    os::SuspendResume::State result = osthread->sr.cancel_suspend();\n+    if (result == os::SuspendResume::SR_RUNNING) {\n+      \/\/ cancelled\n+      return false;\n+    } else if (result == os::SuspendResume::SR_SUSPENDED) {\n+      \/\/ somehow managed to suspend\n+      return true;\n+    } else {\n+      ShouldNotReachHere();\n+      return false;\n+    }\n+  }\n+\n+  \/\/ managed to send the signal and switch to SUSPEND_REQUEST, now wait for SUSPENDED\n+\n+  for (int n = 0; !osthread->sr.is_suspended(); n++) {\n+    for (int i = 0; i < RANDOMLY_LARGE_INTEGER2 && !osthread->sr.is_suspended(); i++) {\n+      os::naked_yield();\n+    }\n+\n+    \/\/ timeout, try to cancel the request\n+    if (n >= RANDOMLY_LARGE_INTEGER) {\n+      os::SuspendResume::State cancelled = osthread->sr.cancel_suspend();\n+      if (cancelled == os::SuspendResume::SR_RUNNING) {\n+        return false;\n+      } else if (cancelled == os::SuspendResume::SR_SUSPENDED) {\n+        return true;\n+      } else {\n+        ShouldNotReachHere();\n+        return false;\n+      }\n+    }\n+  }\n+#endif\n@@ -1631,0 +1688,1 @@\n+#if !defined(AIX)\n@@ -1633,0 +1691,1 @@\n+#endif\n@@ -1642,0 +1701,1 @@\n+#if !defined(AIX)\n@@ -1647,0 +1707,8 @@\n+#else\n+      for (int n = 0; n < RANDOMLY_LARGE_INTEGER && !osthread->sr.is_running(); n++) {\n+        for (int i = 0; i < 100 && !osthread->sr.is_running(); i++) {\n+          os::naked_yield();\n+        }\n+      }\n+\n+#endif\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":69,"deletions":1,"binary":false,"changes":70,"status":"modified"}]}