{"files":[{"patch":"@@ -404,0 +404,2 @@\n+        VM_FindDeadlocks op1(tty);\n+        VMThread::execute(&op1);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -203,2 +203,1 @@\n-  bool timeout = false;\n-  _deadlocks = ThreadService::find_deadlocks_at_safepoint(_setter.list(), _concurrent_locks, _deadline, &timeout);\n+  _deadlocks = ThreadService::find_deadlocks_at_safepoint(_setter.list(), _concurrent_locks);\n@@ -206,5 +205,0 @@\n-\n-    if (timeout) {\n-      _out->print_cr(\"Deadlock detection is interrupted due to timeout\");\n-    }\n-\n@@ -503,2 +497,0 @@\n-  \/\/ Deadlock detection\n-  _find_dead_locks.doit();\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -185,1 +185,1 @@\n-  jlong             _deadline;\n+\n@@ -187,3 +187,2 @@\n-  VM_FindDeadlocks(bool concurrent_locks) :  _concurrent_locks(concurrent_locks), _deadlocks(NULL), _out(NULL), _setter(), _deadline(0) {};\n-  VM_FindDeadlocks(outputStream* st) : _concurrent_locks(true), _deadlocks(NULL), _out(st), _deadline(0) {};\n-  VM_FindDeadlocks(outputStream* st, jlong deadline) : _concurrent_locks(true), _deadlocks(NULL), _out(st), _deadline(deadline) {};\n+  VM_FindDeadlocks(bool concurrent_locks) :  _concurrent_locks(concurrent_locks), _deadlocks(NULL), _out(NULL), _setter() {};\n+  VM_FindDeadlocks(outputStream* st) : _concurrent_locks(true), _deadlocks(NULL), _out(st) {};\n@@ -266,3 +265,0 @@\n- private:\n-   VM_FindDeadlocks _find_dead_locks;\n-\n@@ -270,4 +266,3 @@\n-  VM_ExtendedPrintThreads() : VM_PrintThreads(), _find_dead_locks(tty) {}\n-  VM_ExtendedPrintThreads(outputStream* out, bool print_concurrent_locks, bool print_extended_info, jlong cutoff = 200000000 \/* 200ms *\/)\n-    : VM_PrintThreads(out, print_concurrent_locks, print_extended_info),\n-      _find_dead_locks(out, cutoff > 0 ? os::elapsed_counter() + cutoff : 0) {}\n+  VM_ExtendedPrintThreads() : VM_PrintThreads() {}\n+  VM_ExtendedPrintThreads(outputStream* out, bool print_concurrent_locks, bool print_extended_info)\n+    : VM_PrintThreads(out, print_concurrent_locks, print_extended_info) {}\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.hpp","additions":6,"deletions":11,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -186,2 +186,7 @@\n-  VM_ExtendedPrintThreads vm_op(out, print_concurrent_locks, print_extended_info);\n-  VMThread::execute(&vm_op);\n+  \/\/ thread stacks and JNI global handles\n+  VM_ExtendedPrintThreads op1(out, print_concurrent_locks, print_extended_info);\n+  VMThread::execute(&op1);\n+\n+  \/\/ Deadlock detection\n+  VM_FindDeadlocks op2(out);\n+  VMThread::execute(&op2);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -537,2 +537,7 @@\n-  VM_ExtendedPrintThreads op(output(), _locks.value(), _extended.value());\n-  VMThread::execute(&op);\n+  \/\/ thread stacks and JNI global handles\n+  VM_ExtendedPrintThreads op1(output(), _locks.value(), _extended.value());\n+  VMThread::execute(&op1);\n+\n+  \/\/ Deadlock detection\n+  VM_FindDeadlocks op2(output());\n+  VMThread::execute(&op2);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -372,2 +372,1 @@\n-#define CHECK_INTERVAL 2000\n-DeadlockCycle* ThreadService::find_deadlocks_at_safepoint(ThreadsList * t_list, bool concurrent_locks, jlong deadline, bool* timeout) {\n+DeadlockCycle* ThreadService::find_deadlocks_at_safepoint(ThreadsList * t_list, bool concurrent_locks) {\n@@ -375,8 +374,0 @@\n-  assert(deadline == 0 || timeout != NULL, \"sanity\");\n-\n-  bool check_deadline = deadline > 0;\n-  if (check_deadline && os::elapsed_counter() >= deadline) {\n-    *timeout = true;\n-    return NULL;\n-  }\n-  int check_interval = CHECK_INTERVAL;\n@@ -408,9 +399,0 @@\n-    if (check_deadline && check_interval-- == 0) {\n-      if (os::elapsed_counter() >= deadline) {\n-        *timeout = true;\n-        delete cycle;\n-        return deadlocks;\n-      }\n-      check_interval = CHECK_INTERVAL;\n-    }\n-\n@@ -513,10 +495,0 @@\n-\n-      if (check_deadline && check_interval-- == 0) {\n-        if (os::elapsed_counter() >= deadline) {\n-          *timeout = true;\n-          delete cycle;\n-          return deadlocks;\n-        }\n-        check_interval = CHECK_INTERVAL;\n-      }\n-\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":1,"deletions":29,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -115,2 +115,1 @@\n-  static DeadlockCycle*       find_deadlocks_at_safepoint(ThreadsList * t_list, bool object_monitors_only,\n-                                                          jlong deadline = 0, bool* timeout = NULL);\n+  static DeadlockCycle*       find_deadlocks_at_safepoint(ThreadsList * t_list, bool object_monitors_only);\n","filename":"src\/hotspot\/share\/services\/threadService.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}