{"files":[{"patch":"@@ -402,1 +402,1 @@\n-        VM_PrintThreads op;\n+        VM_ExtendedPrintThreads op;\n@@ -404,4 +404,0 @@\n-        VM_PrintJNI jni_op;\n-        VMThread::execute(&jni_op);\n-        VM_FindDeadlocks op1(tty);\n-        VMThread::execute(&op1);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,1 +50,0 @@\n-  template(PrintJNI)                              \\\n@@ -112,1 +111,2 @@\n-  template(JvmtiPostObjectFree)\n+  template(JvmtiPostObjectFree)                   \\\n+  template(ExtendedPrintThreads)\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -180,4 +180,0 @@\n-void VM_PrintJNI::doit() {\n-  JNIHandles::print_on(_out);\n-}\n-\n@@ -207,1 +203,2 @@\n-  _deadlocks = ThreadService::find_deadlocks_at_safepoint(_setter.list(), _concurrent_locks);\n+  bool timeout = false;\n+  _deadlocks = ThreadService::find_deadlocks_at_safepoint(_setter.list(), _concurrent_locks, _deadline, &timeout);\n@@ -209,0 +206,5 @@\n+\n+    if (timeout) {\n+      _out->print_cr(\"Deadlock detection is interrupted due to timeout\");\n+    }\n+\n@@ -496,0 +498,9 @@\n+void VM_ExtendedPrintThreads::doit() {\n+  \/\/ thread stacks\n+  VM_PrintThreads::doit();\n+  \/\/ JNI global handles\n+  JNIHandles::print_on(_out);\n+  \/\/ Deadlock detection\n+  _find_dead_locks.doit();\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.cpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n- private:\n+ protected:\n@@ -144,0 +144,1 @@\n+ private:\n@@ -161,10 +162,0 @@\n-class VM_PrintJNI: public VM_Operation {\n- private:\n-  outputStream* _out;\n- public:\n-  VM_PrintJNI()                         { _out = tty; }\n-  VM_PrintJNI(outputStream* out)        { _out = out; }\n-  VMOp_Type type() const                { return VMOp_PrintJNI; }\n-  void doit();\n-};\n-\n@@ -194,1 +185,1 @@\n-\n+  jlong             _deadline;\n@@ -196,2 +187,3 @@\n-  VM_FindDeadlocks(bool concurrent_locks) :  _concurrent_locks(concurrent_locks), _deadlocks(NULL), _out(NULL), _setter() {};\n-  VM_FindDeadlocks(outputStream* st) : _concurrent_locks(true), _deadlocks(NULL), _out(st) {};\n+  VM_FindDeadlocks(bool concurrent_locks) :  _concurrent_locks(concurrent_locks), _deadlocks(NULL), _out(NULL), _setter(), _deadline(0) {};\n+  VM_FindDeadlocks(outputStream* st) : _concurrent_locks(true), _deadlocks(NULL), _out(st), _deadline(0) {};\n+  VM_FindDeadlocks(outputStream* st, jlong deadline) : _concurrent_locks(true), _deadlocks(NULL), _out(st), _deadline(deadline) {};\n@@ -273,0 +265,16 @@\n+class VM_ExtendedPrintThreads: public VM_PrintThreads {\n+ private:\n+   VM_FindDeadlocks _find_dead_locks;\n+\n+ public:\n+  VM_ExtendedPrintThreads() : VM_PrintThreads(), _find_dead_locks(tty) {}\n+  VM_ExtendedPrintThreads(outputStream* out, bool print_concurrent_locks, bool print_extended_info, jlong cutoff = 200000000 \/* 200ms *\/)\n+    : VM_PrintThreads(out, print_concurrent_locks, print_extended_info),\n+      _find_dead_locks(out, cutoff > 0 ? os::elapsed_counter() + cutoff : 0) {}\n+\n+  VMOp_Type type() const {\n+    return VMOp_ExtendedPrintThreads;\n+  }\n+  void doit();\n+};\n+\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.hpp","additions":22,"deletions":14,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -186,11 +186,2 @@\n-  \/\/ thread stacks\n-  VM_PrintThreads op1(out, print_concurrent_locks, print_extended_info);\n-  VMThread::execute(&op1);\n-\n-  \/\/ JNI global handles\n-  VM_PrintJNI op2(out);\n-  VMThread::execute(&op2);\n-\n-  \/\/ Deadlock detection\n-  VM_FindDeadlocks op3(out);\n-  VMThread::execute(&op3);\n+  VM_ExtendedPrintThreads vm_op(out, print_concurrent_locks, print_extended_info);\n+  VMThread::execute(&vm_op);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -537,11 +537,2 @@\n-  \/\/ thread stacks\n-  VM_PrintThreads op1(output(), _locks.value(), _extended.value());\n-  VMThread::execute(&op1);\n-\n-  \/\/ JNI global handles\n-  VM_PrintJNI op2(output());\n-  VMThread::execute(&op2);\n-\n-  \/\/ Deadlock detection\n-  VM_FindDeadlocks op3(output());\n-  VMThread::execute(&op3);\n+  VM_ExtendedPrintThreads op(output(), _locks.value(), _extended.value());\n+  VMThread::execute(&op);\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -372,1 +372,2 @@\n-DeadlockCycle* ThreadService::find_deadlocks_at_safepoint(ThreadsList * t_list, bool concurrent_locks) {\n+#define CHECK_INTERVAL 2000\n+DeadlockCycle* ThreadService::find_deadlocks_at_safepoint(ThreadsList * t_list, bool concurrent_locks, jlong deadline, bool* timeout) {\n@@ -374,0 +375,8 @@\n+  assert(deadline == 0 || timeout != NULL, \"sanity\");\n+\n+  bool check_deadline = deadline > 0;\n+  if (check_deadline && os::elapsed_counter() >= deadline) {\n+    *timeout = true;\n+    return NULL;\n+  }\n+  int check_interval = CHECK_INTERVAL;\n@@ -399,0 +408,9 @@\n+    if (check_deadline && check_interval-- == 0) {\n+      if (os::elapsed_counter() >= deadline) {\n+        *timeout = true;\n+        delete cycle;\n+        return deadlocks;\n+      }\n+      check_interval = CHECK_INTERVAL;\n+    }\n+\n@@ -444,2 +462,0 @@\n-            cycle->set_deadlock(true);\n-\n@@ -487,2 +503,0 @@\n-        cycle->set_deadlock(true);\n-\n@@ -499,0 +513,10 @@\n+\n+      if (check_deadline && check_interval-- == 0) {\n+        if (os::elapsed_counter() >= deadline) {\n+          *timeout = true;\n+          delete cycle;\n+          return deadlocks;\n+        }\n+        check_interval = CHECK_INTERVAL;\n+      }\n+\n@@ -958,1 +982,0 @@\n-  _is_deadlock = false;\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -115,1 +115,2 @@\n-  static DeadlockCycle*       find_deadlocks_at_safepoint(ThreadsList * t_list, bool object_monitors_only);\n+  static DeadlockCycle*       find_deadlocks_at_safepoint(ThreadsList * t_list, bool object_monitors_only,\n+                                                          jlong deadline = 0, bool* timeout = NULL);\n@@ -387,1 +388,0 @@\n-  bool _is_deadlock;\n@@ -397,3 +397,1 @@\n-  void           reset()                    { _is_deadlock = false; _threads->clear(); }\n-  void           set_deadlock(bool value)   { _is_deadlock = value; }\n-  bool           is_deadlock()              { return _is_deadlock; }\n+  void           reset()                    { _threads->clear(); }\n","filename":"src\/hotspot\/share\/services\/threadService.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}