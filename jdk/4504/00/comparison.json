{"files":[{"patch":"@@ -402,1 +402,1 @@\n-        VM_PrintThreads op;\n+        VM_ExtendedPrintThreads op;\n@@ -404,4 +404,0 @@\n-        VM_PrintJNI jni_op;\n-        VMThread::execute(&jni_op);\n-        VM_FindDeadlocks op1(tty);\n-        VMThread::execute(&op1);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -112,1 +112,2 @@\n-  template(JvmtiPostObjectFree)\n+  template(JvmtiPostObjectFree)                   \\\n+  template(ExtendedPrintThreads)\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -496,0 +496,6 @@\n+void VM_ExtendedPrintThreads::doit() {\n+  VM_PrintThreads::doit();\n+  _print_jni.doit();\n+  _find_dead_locks.doit();\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -273,0 +273,17 @@\n+class VM_ExtendedPrintThreads: public VM_PrintThreads {\n+ private:\n+   VM_PrintJNI _print_jni;\n+   VM_FindDeadlocks _find_dead_locks;\n+\n+ public:\n+  VM_ExtendedPrintThreads() : VM_PrintThreads(), _print_jni(), _find_dead_locks(tty) {}\n+  VM_ExtendedPrintThreads(outputStream* out, bool print_concurrent_locks, bool print_extended_info)\n+    : VM_PrintThreads(out, print_concurrent_locks, print_extended_info),\n+      _print_jni(out), _find_dead_locks(out) {}\n+\n+  VMOp_Type type() const {\n+    return VMOp_ExtendedPrintThreads;\n+  }\n+  void doit();\n+};\n+\n","filename":"src\/hotspot\/share\/runtime\/vmOperations.hpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -187,3 +187,0 @@\n-  VM_PrintThreads op1(out, print_concurrent_locks, print_extended_info);\n-  VMThread::execute(&op1);\n-\n@@ -191,3 +188,0 @@\n-  VM_PrintJNI op2(out);\n-  VMThread::execute(&op2);\n-\n@@ -195,2 +189,2 @@\n-  VM_FindDeadlocks op3(out);\n-  VMThread::execute(&op3);\n+  VM_ExtendedPrintThreads vm_op(out, print_concurrent_locks, print_extended_info);\n+  VMThread::execute(&vm_op);\n","filename":"src\/hotspot\/share\/services\/attachListener.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"}]}