{"files":[{"patch":"@@ -162,0 +162,1 @@\n+        ensureOpen();\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedOutputStream.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -209,1 +209,1 @@\n-    protected boolean isOpen(){\n+    boolean isOpen(){\n","filename":"src\/java.base\/share\/classes\/java\/io\/FilterOutputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    static void testWrite(OutputStream os) throws IOException{\n+    static void testWrite(OutputStream os) throws IOException {\n@@ -46,1 +46,8 @@\n-            throw new RuntimeException(\"Should not allow write on a closed stream\");\n+            throw new RuntimeException(\"Should not allow write(byte[]) on a closed stream\");\n+        } catch (IOException e) {\n+            System.out.println(\"Caught the IOException as expected: \" + e.getMessage());\n+        }\n+\n+        try {\n+            os.write(1);\n+            throw new RuntimeException(\"Should not allow write(int) on a closed stream\");\n","filename":"test\/jdk\/java\/io\/BufferedOutputStream\/WriteAfterClose.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"}]}