{"files":[{"patch":"@@ -3685,7 +3685,6 @@\n-        MethodParametersElement* elem = method->method_parameters_start();\n-        for (int j = 0; j < mp_length; j++) {\n-            const int cp_index = elem[j].name_cp_index;\n-            const int new_cp_index = find_new_index(cp_index);\n-            if (new_cp_index != 0) {\n-                elem[j].name_cp_index = new_cp_index;\n-            }\n+      MethodParametersElement* elem = method->method_parameters_start();\n+      for (int j = 0; j < mp_length; j++) {\n+        const int cp_index = elem[j].name_cp_index;\n+        const int new_cp_index = find_new_index(cp_index);\n+        if (new_cp_index != 0) {\n+          elem[j].name_cp_index = (u2)new_cp_index;\n@@ -3693,0 +3692,1 @@\n+      }\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -53,2 +53,3 @@\n- * - classfile bytes passed to transformers (and JVMTI ClassFileLoadHook event callback) contain the attribute;\n- * - the attribute is updated.\n+ * 1) classfile bytes passed to transformers (and JVMTI ClassFileLoadHook event callback) contain the attribute;\n+ * 2) the attribute is updated if new version has the attribute with different values;\n+ * 3) the attribute is removed if new version doesn't contain the attribute.\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformWithMethodParametersTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}