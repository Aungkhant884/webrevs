{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,6 @@\n+\n+    @SuppressWarnings(\"removal\")\n+    @Override\n+    protected void finalize() throws Throwable {\n+        super.finalize();\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/AbstractClassExtender.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/AnotherSingleImplementer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,0 +62,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/MultipleAbstractImplementer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,6 @@\n+\n+    @SuppressWarnings(\"removal\")\n+    @Override\n+    public void finalize() throws Throwable {\n+        super.finalize();\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/MultipleImplementer1.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,1 @@\n+    @SuppressWarnings(\"removal\")\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/MultipleImplementer2.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,5 @@\n+    @SuppressWarnings(\"removal\")\n+    default void finalize() throws Throwable {\n+        \/\/ empty\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/MultipleImplementersInterface.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,3 @@\n+  @SuppressWarnings(\"removal\")\n+  public void finalize() {\n+  }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/MultipleSuperImplementers.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,5 @@\n+    @SuppressWarnings(\"removal\")\n+    @Override\n+    public void finalize() throws Throwable {\n+        super.finalize();\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/SingleImplementer.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-    \/\/void finalize() throws Throwable;\n+    void finalize() throws Throwable;\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/common\/testcases\/SingleImplementerInterface.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,7 +76,4 @@\n-        \/\/ class which implements iface\n-        \/\/ since the deprecated finalize() method is removed from the class,\n-        \/\/ the expected value here should be false\n-        result.add(new TestCase(MultipleImplementer1.class, false));\n-        \/\/ abstract class with subclass that has no finalize\n-        \/\/ The finalize() method of the exxtender is removed due to deprecation\n-        result.add(new TestCase(AbstractClass.class, false));\n+        \/\/ class which implements iface w\/ default finalize method\n+        result.add(new TestCase(MultipleImplementer1.class, true));\n+        \/\/ abstract class with finalizeable subclass\n+        result.add(new TestCase(AbstractClass.class, true));\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/compilerToVM\/HasFinalizableSubclassTest.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"}]}