{"files":[{"patch":"@@ -442,0 +442,26 @@\n+JVMFlag::Error InlineCacheBufferSizeConstraintFunc(int value, bool verbose) {\n+  if (value <= 0) {\n+      JVMFlag::printError(verbose,\n+                          \"InlineCacheBufferSize (%d) must be \"\n+                          \"greater than %d\\n\",\n+                          value, 0);\n+      return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+\n+  if ((uintx)value >= NonNMethodCodeHeapSize) {\n+    JVMFlag::printError(verbose,\n+                        \"InlineCacheBufferSize (%d) must be \"\n+                        \"less than NonNMethodCodeHeapSize (\" UINTX_FORMAT \")\\n\",\n+                        value, NonNMethodCodeHeapSize);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+\n+  if ((value % CodeEntryAlignment) != 0) {\n+    JVMFlag::printError(verbose,\n+                        \"InlineCacheBufferSize (%d) must be a multiple of \" INTX_FORMAT \"\\n\",\n+                        value, CodeEntryAlignment);\n+    return JVMFlag::VIOLATES_CONSTRAINT;\n+  }\n+\n+  return JVMFlag::SUCCESS;\n+}\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.cpp","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -55,0 +55,1 @@\n+  f(int,   InlineCacheBufferSizeConstraintFunc)         \\\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsCompiler.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-  product(uintx, InlineCacheBufferSize, 10*K, EXPERIMENTAL,                 \\\n+  product(int, InlineCacheBufferSize, 10*K, EXPERIMENTAL,                   \\\n@@ -300,0 +300,1 @@\n+          constraint(InlineCacheBufferSizeConstraintFunc, AfterErgo)        \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}