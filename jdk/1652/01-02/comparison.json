{"files":[{"patch":"@@ -0,0 +1,76 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8257800\n+ * @summary Tests CompileCommand=option,package\/class,ccstrlist,ControlIntrinsic,+_id\n+ * @library \/test\/lib \/\n+ *\n+ * @run driver compiler.compilercontrol.commands.OptionTest\n+ *\/\n+\n+package compiler.compilercontrol.commands;\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class OptionTest {\n+    public static void main(String[] args) throws Exception {\n+        ProcessTools.executeTestJvm(\"-XX:CompileCommand=option,package\/class,ccstrlist,ControlIntrinsic,+_id\", \"-version\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldContain(\"CompileCommand: An error occurred during parsing\")\n+                    .shouldContain(\"Error: Did not specify any method name\")\n+                    .shouldNotContain(\"# A fatal error has been detected by the Java Runtime Environment\");\n+\n+        ProcessTools.executeTestJvm(\"-XX:CompileCommand=option,*,ccstrlist,ControlIntrinsic,+_id\", \"-version\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldContain(\"CompileCommand: An error occurred during parsing\")\n+                    .shouldContain(\"Error: Did not specify any method name\")\n+                    .shouldNotContain(\"# A fatal error has been detected by the Java Runtime Environment\");\n+\n+        \/\/ corner case:\n+        \/\/ ccstrlist could be a valid method name, so it is accepted in the well-formed case.\n+        ProcessTools.executeTestJvm(\"-XX:CompileCommand=option,*.ccstrlist,ccstrlist,ControlIntrinsic,+_id\", \"-version\")\n+                    .shouldContain(\"CompileCommand: ControlIntrinsic *.ccstrlist const char* ControlIntrinsic\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldNotContain(\"# A fatal error has been detected by the Java Runtime Environment\");\n+\n+        ProcessTools.executeTestJvm(\"-XX:CompileCommand=option,*.*,ccstrlist,ControlIntrinsic,+_id\", \"-version\")\n+                    .shouldContain(\"CompileCommand: ControlIntrinsic *.* const char* ControlIntrinsic\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldNotContain(\"# A fatal error has been detected by the Java Runtime Environment\");\n+\n+        ProcessTools.executeTestJvm(\"-XX:CompileCommand=option,class,PrintIntrinsics\", \"-version\")\n+                    .shouldContain(\"CompileCommand: An error occurred during parsing\")\n+                    .shouldContain(\"Error: Did not specify any method name\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldNotContain(\"# A fatal error has been detected by the Java Runtime Environment\");\n+\n+        \/\/ corner case:\n+        \/\/ PrintIntrinsics could be a valid method name, so it is accepted in the well-formed case.\n+        ProcessTools.executeTestJvm(\"-XX:CompileCommand=option,class.PrintIntrinsics,PrintIntrinsics\", \"-version\")\n+                    .shouldContain(\"CompileCommand: PrintIntrinsics class.PrintIntrinsics bool PrintIntrinsics = true\")\n+                    .shouldHaveExitValue(0)\n+                    .shouldNotContain(\"# A fatal error has been detected by the Java Runtime Environment\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/commands\/OptionTest.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}