{"files":[{"patch":"@@ -54,1 +54,0 @@\n-        boolean isValid = true;\n@@ -60,0 +59,1 @@\n+            boolean isValid = true;\n@@ -83,1 +83,1 @@\n-                isValid = false;\n+                isValid &= md.isValid();\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/share\/MultiCommand.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,1 +48,0 @@\n-    private final boolean isValid;\n@@ -60,2 +59,0 @@\n-     * @param isValid      shows that the input given to the VM is valid and\n-     *                     VM shouldn't fail\n@@ -67,3 +64,2 @@\n-    public Executor(boolean isValid, List<String> vmOptions,\n-            Map<Executable, State> states, List<String> jcmdCommands) {\n-        this.isValid = isValid;\n+    public Executor(List<String> vmOptions, Map<Executable, State> states,\n+                    List<String> jcmdCommands) {\n@@ -80,1 +76,1 @@\n-     * Executes separate VM a gets an OutputAnalyzer instance with the results\n+     * Executes separate VM and gets an OutputAnalyzer instance with the results\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/share\/scenario\/Executor.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-        executor = new Executor(isValid, vmopts, states, jcmdExecCommands);\n+        executor = new Executor(vmopts, states, jcmdExecCommands);\n","filename":"test\/hotspot\/jtreg\/compiler\/compilercontrol\/share\/scenario\/Scenario.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}