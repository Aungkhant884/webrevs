{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,2 +60,2 @@\n-    private byte bytearr[] = new byte[80];\n-    private char chararr[] = new char[80];\n+    private byte[] bytearr = new byte[80];\n+    private char[] chararr = new char[80];\n@@ -318,0 +318,1 @@\n+        InputStream in = this.in;\n@@ -343,0 +344,1 @@\n+        InputStream in = this.in;\n@@ -368,0 +370,1 @@\n+        InputStream in = this.in;\n@@ -393,0 +396,1 @@\n+        InputStream in = this.in;\n@@ -402,1 +406,1 @@\n-    private byte readBuffer[] = new byte[8];\n+    private final byte[] readBuffer = new byte[8];\n@@ -477,1 +481,1 @@\n-    private char lineBuffer[];\n+    private char[] lineBuffer;\n@@ -508,1 +512,1 @@\n-        char buf[] = lineBuffer;\n+        char[] buf = lineBuffer;\n@@ -637,1 +641,1 @@\n-                    char2 = (int) bytearr[count-1];\n+                    char2 = bytearr[count-1];\n@@ -650,2 +654,2 @@\n-                    char2 = (int) bytearr[count-2];\n-                    char3 = (int) bytearr[count-1];\n+                    char2 = bytearr[count-2];\n+                    char3 = bytearr[count-1];\n","filename":"src\/java.base\/share\/classes\/java\/io\/DataInputStream.java","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2020, 2021, Red Hat Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package micro.org.openjdk.bench.java.io;\n+\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.DataInputStream;\n+import java.util.concurrent.ThreadLocalRandom;\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.MICROSECONDS)\n+@Fork(value = 4, warmups = 0)\n+@Measurement(iterations = 5, time = 1)\n+@Warmup(iterations = 2, time = 2)\n+@State(Scope.Benchmark)\n+public class DataInputStreamTest {\n+    private final int size = 1024;\n+\n+    private ByteArrayInputStream bais;\n+\n+    @Setup(Level.Iteration)\n+    public void setup() {\n+        byte[] bytes = new byte[size];\n+        ThreadLocalRandom.current().nextBytes(bytes);\n+        bais = new ByteArrayInputStream(bytes);\n+    }\n+\n+    @Benchmark\n+    public void readChar(Blackhole bh) throws Exception {\n+        bais.reset();\n+        DataInputStream dis = new DataInputStream(bais);\n+        for (int i = 0; i < size \/ 2; i++) {\n+            bh.consume(dis.readChar());\n+        }\n+    }\n+\n+    @Benchmark\n+    public void readInt(Blackhole bh) throws Exception {\n+        bais.reset();\n+        DataInputStream dis = new DataInputStream(bais);\n+        for (int i = 0; i < size \/ 4; i++) {\n+            bh.consume(dis.readInt());\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/io\/DataInputStreamTest.java","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"}]}