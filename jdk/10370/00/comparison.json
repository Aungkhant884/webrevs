{"files":[{"patch":"@@ -1352,1 +1352,1 @@\n-  __ align(4);\n+  __ align(NativeInstruction::instruction_size);\n@@ -1375,1 +1375,1 @@\n-  assert((__ offset() % 4) == 0, \"bad alignment\");\n+  __ assert_alignment(call_pc);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -258,1 +258,1 @@\n-  assert(offset() % 4 == 0, \"bad alignment\");\n+  assert_alignment();\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -265,1 +265,1 @@\n-    assert(__ offset() % 4 == 0, \"bad alignment\");\n+    __ assert_alignment();\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/shared\/barrierSetAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,0 +94,8 @@\n+void MacroAssembler::assert_alignment() {\n+  assert_alignment(pc());\n+}\n+\n+void MacroAssembler::assert_alignment(address pc) {\n+  assert(is_aligned(pc, NativeInstruction::instruction_size), \"bad alignment\");\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+  static void assert_alignment(address pc);\n+  void assert_alignment();\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}