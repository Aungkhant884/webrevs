{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import jdk.internal.ref.CleanerFactory;\n+\n@@ -64,0 +66,2 @@\n+\n+        CleanerFactory.cleaner().register(this, this::tryClose);\n@@ -66,0 +70,1 @@\n+\n@@ -70,0 +75,2 @@\n+\n+        CleanerFactory.cleaner().register(this, this::tryClose);\n@@ -76,0 +83,2 @@\n+\n+        CleanerFactory.cleaner().register(this, this::tryClose);\n@@ -270,1 +279,1 @@\n-     * the penalty of prematurly killing SSL sessions.\n+     * the penalty of prematurely killing SSL sessions.\n@@ -272,3 +281,1 @@\n-    @Override\n-    @SuppressWarnings(\"removal\")\n-    protected final void finalize() throws Throwable {\n+    private void tryClose() {\n@@ -277,1 +284,1 @@\n-        } catch (IOException e1) {\n+        } catch (IOException ioe) {\n@@ -282,1 +289,1 @@\n-            } catch (IOException e2) {\n+            } catch (IOException e) {\n@@ -285,8 +292,0 @@\n-        } finally {\n-            \/\/ We called close on the underlying socket above to\n-            \/\/ make doubly sure all resources got released.  We\n-            \/\/ don't finalize self in the case of overlain sockets,\n-            \/\/ that's a different object which the GC will finalize\n-            \/\/ separately.\n-\n-            super.finalize();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/BaseSSLSocketImpl.java","additions":14,"deletions":15,"binary":false,"changes":29,"status":"modified"}]}