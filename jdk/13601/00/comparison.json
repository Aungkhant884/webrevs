{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -725,2 +725,9 @@\n-  \/\/ This may happen if there are duplicate cards in different log buffers.\n-  if (logged_dirty_cards > scan_heap_roots_cards) {\n+  \/\/ Approximate the time spent processing cards from log buffers by scaling\n+  \/\/ the total processing time by the ratio of logged cards to total cards\n+  \/\/ processed.  There might be duplicate cards in different log buffers,\n+  \/\/ leading to an overestimate.  That effect should be relatively small\n+  \/\/ unless there are few cards to process, because cards in buffers are\n+  \/\/ dirtied to limit duplication.  Also need to avoid scaling when both\n+  \/\/ counts are zero, which happens especially during early GCs.  So ascribe\n+  \/\/ all of the time to the logged cards unless there are more total cards.\n+  if (logged_dirty_cards >= scan_heap_roots_cards) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"}]}