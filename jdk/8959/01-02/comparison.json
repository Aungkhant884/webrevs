{"files":[{"patch":"@@ -1719,2 +1719,2 @@\n-                    if (label.hasTag(CONSTANTCASELABEL)) {\n-                        JCExpression expr = ((JCConstantCaseLabel) label).expr;\n+                    if (label instanceof JCConstantCaseLabel constLabel) {\n+                        JCExpression expr = constLabel.expr;\n@@ -1775,1 +1775,1 @@\n-                    } else if (label.hasTag(DEFAULTCASELABEL)) {\n+                    } else if (label instanceof JCDefaultCaseLabel def) {\n@@ -1783,1 +1783,1 @@\n-                    } else {\n+                    } else if (label instanceof JCPatternCaseLabel patternlabel) {\n@@ -1785,1 +1785,1 @@\n-                        JCPattern pat = ((JCPatternCaseLabel) label).pat;\n+                        JCPattern pat = patternlabel.pat;\n@@ -1793,1 +1793,1 @@\n-                        JCExpression guard = ((JCPatternCaseLabel) label).guard;\n+                        JCExpression guard = patternlabel.guard;\n@@ -1830,0 +1830,2 @@\n+                    } else {\n+                        Assert.error();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -741,8 +741,8 @@\n-            HashSet<JCTree> labels = cases.stream()\n-                                          .flatMap(c -> c.labels.stream())\n-                                          .filter(TreeInfo::unguardedCaseLabel)\n-                                          .filter(l -> !l.hasTag(DEFAULTCASELABEL))\n-                                          .map(l -> l.hasTag(CONSTANTCASELABEL) ? ((JCConstantCaseLabel) l).expr\n-                                                                                : ((JCPatternCaseLabel) l).pat)\n-                                          .collect(Collectors.toCollection(HashSet::new));\n-            return coveredSymbols(pos, selector.type, labels);\n+            HashSet<JCTree> labelValues = cases.stream()\n+                                               .flatMap(c -> c.labels.stream())\n+                                               .filter(TreeInfo::unguardedCaseLabel)\n+                                               .filter(l -> !l.hasTag(DEFAULTCASELABEL))\n+                                               .map(l -> l.hasTag(CONSTANTCASELABEL) ? ((JCConstantCaseLabel) l).expr\n+                                                                                     : ((JCPatternCaseLabel) l).pat)\n+                                               .collect(Collectors.toCollection(HashSet::new));\n+            return coveredSymbols(pos, selector.type, labelValues);\n@@ -756,2 +756,2 @@\n-            for (JCTree label : labels) {\n-                switch (label.getTag()) {\n+            for (JCTree labelValue : labels) {\n+                switch (labelValue.getTag()) {\n@@ -759,1 +759,1 @@\n-                        Type primaryPatternType = TreeInfo.primaryPatternType((JCPattern) label);\n+                        Type primaryPatternType = TreeInfo.primaryPatternType((JCPattern) labelValue);\n@@ -765,1 +765,1 @@\n-                        JCRecordPattern dpat = (JCRecordPattern) label;\n+                        JCRecordPattern dpat = (JCRecordPattern) labelValue;\n@@ -775,2 +775,2 @@\n-                        Assert.check(label instanceof JCExpression, label.getTag().name());\n-                        JCExpression expr = (JCExpression) label;\n+                        Assert.check(labelValue instanceof JCExpression, labelValue.getTag().name());\n+                        JCExpression expr = (JCExpression) labelValue;\n@@ -2586,2 +2586,1 @@\n-                    l.tail.head.labels.head.hasTag(CONSTANTCASELABEL) &&\n-                    TreeInfo.isNull(((JCConstantCaseLabel) l.tail.head.labels.head).expr)) {\n+                    TreeInfo.isNullCaseLabel(l.tail.head.labels.head)) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -1302,1 +1302,1 @@\n-                if (l.head.labels.head.hasTag(CONSTANTCASELABEL)) {\n+                if (l.head.labels.head instanceof JCConstantCaseLabel constLabel) {\n@@ -1304,1 +1304,1 @@\n-                    int val = ((Number)((JCConstantCaseLabel) l.head.labels.head).expr.type.constValue()).intValue();\n+                    int val = ((Number) constLabel.expr.type.constValue()).intValue();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}