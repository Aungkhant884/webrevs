{"files":[{"patch":"@@ -107,1 +107,1 @@\n-    decl(ASIMD,         simd,          1)     \\\n+    decl(ASIMD,         asimd,         1)     \\\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @requires vm.cpu.features ~= \".*simd.*\"\n+ * @requires vm.cpu.features ~= \".*asimd.*\"\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/AllBitsSetVectorMatchRuleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n@@ -99,1 +99,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n@@ -119,1 +119,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, failOn = {IRNode.REVERSE_BYTES_V})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, failOn = {IRNode.REVERSE_BYTES_V})\n@@ -137,1 +137,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n@@ -156,1 +156,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n@@ -176,1 +176,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, failOn = {IRNode.REVERSE_BYTES_V})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, failOn = {IRNode.REVERSE_BYTES_V})\n@@ -194,1 +194,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n@@ -213,1 +213,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, counts = {IRNode.REVERSE_BYTES_V , \" > 0 \"})\n@@ -233,1 +233,1 @@\n-    @IR(applyIfCPUFeatureOr = {\"simd\", \"true\", \"avx2\", \"true\"}, failOn = {IRNode.REVERSE_BYTES_V})\n+    @IR(applyIfCPUFeatureOr = {\"asimd\", \"true\", \"avx2\", \"true\"}, failOn = {IRNode.REVERSE_BYTES_V})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestReverseByteTransforms.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -160,1 +160,1 @@\n-    @IR(failOn = IRNode.AND_V, applyIfCPUFeatureAnd = {\"simd\", \"true\", \"sve\", \"false\"})\n+    @IR(failOn = IRNode.AND_V, applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"})\n@@ -181,1 +181,1 @@\n-    @IR(failOn = IRNode.AND_V, applyIfCPUFeatureAnd = {\"simd\", \"true\", \"sve\", \"false\"})\n+    @IR(failOn = IRNode.AND_V, applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"})\n@@ -282,1 +282,1 @@\n-    @IR(failOn = IRNode.OR_V, applyIfCPUFeatureAnd = {\"simd\", \"true\", \"sve\", \"false\"})\n+    @IR(failOn = IRNode.OR_V, applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"})\n@@ -341,1 +341,1 @@\n-    @IR(failOn = IRNode.OR_V, applyIfCPUFeatureAnd = {\"simd\", \"true\", \"sve\", \"false\"})\n+    @IR(failOn = IRNode.OR_V, applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"})\n@@ -397,1 +397,1 @@\n-    @IR(failOn = IRNode.XOR_V, applyIfCPUFeatureAnd = {\"simd\", \"true\", \"sve\", \"false\"})\n+    @IR(failOn = IRNode.XOR_V, applyIfCPUFeatureAnd = {\"asimd\", \"true\", \"sve\", \"false\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorLogicalOpIdentityTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @requires vm.cpu.features ~= \".*simd.*\"\n+ * @requires vm.cpu.features ~= \".*asimd.*\"\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/reshape\/TestVectorCastNeon.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}