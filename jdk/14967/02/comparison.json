{"files":[{"patch":"@@ -3566,21 +3566,0 @@\n-bool os::Linux::transparent_huge_pages_sanity_check(bool warn,\n-                                                    size_t page_size) {\n-  bool result = false;\n-  void *p = mmap(nullptr, page_size * 2, PROT_READ|PROT_WRITE,\n-                 MAP_ANONYMOUS|MAP_PRIVATE,\n-                 -1, 0);\n-  if (p != MAP_FAILED) {\n-    void *aligned_p = align_up(p, page_size);\n-\n-    result = madvise(aligned_p, page_size, MADV_HUGEPAGE) == 0;\n-\n-    munmap(p, page_size * 2);\n-  }\n-\n-  if (warn && !result) {\n-    warning(\"TransparentHugePages is not supported by the operating system.\");\n-  }\n-\n-  return result;\n-}\n-\n@@ -3718,7 +3697,3 @@\n-    bool warn_on_failure = !FLAG_IS_DEFAULT(UseTransparentHugePages);\n-    if (transparent_huge_pages_sanity_check(warn_on_failure, page_size)) {\n-      UseHugeTLBFS = false;\n-      UseSHM = false;\n-      return true;\n-    }\n-    UseTransparentHugePages = false;\n+    UseHugeTLBFS = false;\n+    UseSHM = false;\n+    return true;\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":3,"deletions":28,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-  static bool transparent_huge_pages_sanity_check(bool warn, size_t pages_size);\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.util.Arrays;\n@@ -302,0 +303,3 @@\n+      System.out.println(\"Using: \" + Arrays.toString(useFlags));\n+      System.out.println(\"Expecting: \" + Arrays.toString(expectedFlags));\n+\n@@ -384,0 +388,3 @@\n+\n+    @Override\n+    public String toString() { return flagString(); }\n","filename":"test\/hotspot\/jtreg\/runtime\/memory\/LargePages\/TestLargePagesFlags.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}