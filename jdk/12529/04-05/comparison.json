{"files":[{"patch":"@@ -385,0 +385,1 @@\n+  HeapRegion* start_hr = _heap->region_at(start_serial);\n@@ -387,2 +388,7 @@\n-  HeapWord* dense_prefix_top = nullptr;\n-  for (uint i = start_serial; i < _heap->max_reserved_regions(); i++) {\n+  assert(!serial_cp->is_initialized(), \"sanity!\");\n+\n+  serial_cp->add(start_hr);\n+  serial_cp->initialize(start_hr);\n+  HeapWord* dense_prefix_top = compaction_top(start_hr);\n+\n+  for (uint i = start_serial + 1; i < _heap->max_reserved_regions(); i++) {\n@@ -392,11 +398,5 @@\n-      if (!serial_cp->is_initialized()) {\n-        \/\/ Initialize the compaction point. Nothing more is needed for the first heap region\n-        \/\/ since it is already prepared for compaction.\n-        serial_cp->initialize(current);\n-        dense_prefix_top = compaction_top(current);\n-      } else {\n-        assert(!current->is_humongous(), \"Should be no humongous regions in compaction queue\");\n-        G1SerialRePrepareClosure re_prepare(serial_cp, current, dense_prefix_top);\n-        set_compaction_top(current, current->bottom());\n-        current->apply_to_marked_objects(mark_bitmap(), &re_prepare);\n-      }\n+\n+      assert(!current->is_humongous(), \"Should be no humongous regions in compaction queue\");\n+      G1SerialRePrepareClosure re_prepare(serial_cp, current, dense_prefix_top);\n+      set_compaction_top(current, current->bottom());\n+      current->apply_to_marked_objects(mark_bitmap(), &re_prepare);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -124,1 +124,0 @@\n-  uint _bottom_index;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}