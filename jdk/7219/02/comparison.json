{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-        painter.paint(g, c, newX - 1, newY - 1, newWidth + 1, newHeight);\n+        painter.paint(g, c, newX - 1, newY - 1, newWidth + 1, newHeight + 1);\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaTableHeaderBorder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,122 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8016524\n+ * @key headful\n+ * @summary Tests whether the bottom line of JTableHeader border is visible for MacOS default LAF\n+ * @run main JTHeaderBorderTest\n+ *\/\n+\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.Color;\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.UIManager;\n+import javax.swing.SwingUtilities;\n+import javax.swing.table.JTableHeader;\n+\n+public class JTHeaderBorderTest {\n+\n+    private static JFrame frame;\n+    private static JTable table;\n+    private static JScrollPane scrollableTable;\n+    private static JTableHeader header;\n+    private static Point point;\n+\n+    \/\/ added so as to get the correct pixel value of the bottom border\n+    public static final int X_OFFSET = 10;\n+    public static final int Y_OFFSET = 1;\n+\n+    public static final int FRAME_HT = 300;\n+    public static final int FRAME_WT = 300;\n+    public static final int TABLE_COLS = 5;\n+    public static final int TABLE_ROWS = 2;\n+\n+    private static final int WHITE_RGB = Color.WHITE.getRGB();\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try {\n+            \/\/to keep track of header dimensions\n+            final int[] header_dim = new int[2];\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+\n+            try {\n+                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+            } catch (ClassNotFoundException | InstantiationException | IllegalAccessException e) {\n+                throw new RuntimeException(\"Unsupported LookAndFeel Class\");\n+            }\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                table = new JTable(TABLE_ROWS, TABLE_COLS);\n+                table.setBackground(Color.WHITE);\n+                table.getTableHeader().setBackground(Color.WHITE);\n+                scrollableTable = new JScrollPane(table);\n+                frame = new JFrame();\n+                frame.getContentPane().add(scrollableTable);\n+                frame.setSize(FRAME_WT, FRAME_HT);\n+                frame.setLocationRelativeTo(null);\n+                frame.pack();\n+                frame.setVisible(true);\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+\n+                \/\/ retrieve JTableHeader coordinate position on screen (x,y)\n+                point = table.getTableHeader().getLocationOnScreen();\n+                \/\/ retrieve height and width of the header\n+                header = table.getTableHeader();\n+                header_dim[0] = header.getHeight();\n+                header_dim[1] = header.getWidth();\n+            });\n+\n+            robot.waitForIdle();\n+\n+            \/\/ to check mouse pointer position on screen\n+            robot.mouseMove(point.x + X_OFFSET, point.y + header_dim[0] - Y_OFFSET);\n+            robot.waitForIdle();\n+\n+            \/\/ get pixel color at lower left and lower right on the JTableHeader border\n+            Color lowerLeft = robot.getPixelColor(point.x + X_OFFSET, point.y + header_dim[0] - Y_OFFSET);\n+            Color lowerRight = robot.getPixelColor(point.x + header_dim[1] - X_OFFSET, point.y + header_dim[0] - Y_OFFSET);\n+\n+            \/\/ if pixel color is white then border not visible, throw Exception\n+            if (lowerLeft.getRGB() == WHITE_RGB || lowerRight.getRGB() == WHITE_RGB) {\n+                throw new RuntimeException(\"JTableHeader Bottom Border not visible\");\n+            }\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+        finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(()-> frame.dispose());\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/8016524\/JTHeaderBorderTest.java","additions":122,"deletions":0,"binary":false,"changes":122,"status":"added"}]}