{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import sun.security.util.SecurityProperties;\n@@ -1989,0 +1990,8 @@\n+\n+        \/\/ print out the error message for java.io.tmpdir setting\n+        static {\n+            if (tmpdir.isInvalid() || !fs.hasBooleanAttributes(tmpdir, FileSystem.BA_DIRECTORY)) {\n+                System.err.println(\"WARNING: java.io.tmpdir location does not exist\");\n+            }\n+        }\n+\n@@ -2403,1 +2412,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"src\/java.base\/share\/classes\/java\/io\/File.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n@@ -42,1 +44,1 @@\n-\n+@SuppressWarnings(\"removal\")\n@@ -49,0 +51,7 @@\n+    \/\/ print out the error message for java.io.tmpdir setting\n+    static {\n+        if (!Files.isDirectory(tmpdir)) {\n+            System.err.println(\"WARNING: java.io.tmpdir location does not exist\");\n+        }\n+    }\n+\n@@ -173,1 +182,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/TempFileHelper.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1425,1 +1425,1 @@\n-#jdk.security.krb5.s4u2proxy.acceptNonForwardableServiceTicket=false\n+#jdk.security.krb5.s4u2proxy.acceptNonForwardableServiceTicket=false\n\\ No newline at end of file\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8290313\n+ * @library \/test\/lib\n+ * @summary Produce warning when user specified java.io.tmpdir directory doesn't exist\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.io.File;\n+\n+public class TempDirectoryNotExistingErrorMessage {\n+\n+    public static void main(String ... args) throws Exception{\n+\n+        String userDir = System.getProperty(\"user.home\");\n+\n+        if (args.length != 0) {\n+            File tmpFile = File.createTempFile(\"prefix\", \".suffix\");\n+        } else {\n+\n+            String timeStamp = System.currentTimeMillis() + \"\";\n+            String tempDir = userDir + \"\\\\non-existing-\" + timeStamp;\n+            String errorMsg1 = \"WARNING: java.io.tmpdir location does not exist\";\n+\n+            test(errorMsg1, \"-Djava.io.tmpdir=\" + tempDir, \"TempDirectoryNotExistingErrorMessage\", \"runTest\");\n+\n+            test(errorMsg1, \"-Djava.io.tmpdir=\" + tempDir, \"-Djava.security.manager=allow\",\n+                    \"TempDirectoryNotExistingErrorMessage\", \"runTest\");\n+        }\n+    }\n+\n+    private static void test( String errorMsg, String ... options) throws Exception {\n+        ProcessTools.executeTestJvm(options)\n+                .shouldContain(errorMsg);\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/io\/File\/TempDirectoryNotExistingErrorMessage.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8290313\n+ * @library \/test\/lib\n+ * @summary Produce warning when user specified java.io.tmpdir directory doesn't exist\n+ *\/\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+import java.io.File;\n+import java.nio.file.Files;\n+\n+public class TempDirectoryNotExistingErrorMessage {\n+\n+    public static void main(String ... args) throws Exception{\n+        String userDir = System.getProperty(\"user.home\");\n+\n+        if (args.length != 0) {\n+            Files.createTempFile(\"prefix\", \".suffix\");\n+        } else {\n+\n+            String timeStamp = System.currentTimeMillis() + \"\";\n+            String tempDir = userDir + \"\\\\non-existing-\" + timeStamp;\n+            String errorMsg1 = \"WARNING: java.io.tmpdir location does not exist\";\n+\n+            test(errorMsg1, \"-Djava.io.tmpdir=\" + tempDir, \"TempDirectoryNotExistingErrorMessage\", \"runTest\");\n+\n+            test(errorMsg1, \"-Djava.io.tmpdir=\" + tempDir, \"-Djava.security.manager=allow\",\n+                    \"TempDirectoryNotExistingErrorMessage\", \"runTest\");\n+        }\n+    }\n+\n+    private static void test( String errorMsg, String ... options) throws Exception {\n+        ProcessTools.executeTestJvm(options)\n+                .shouldContain(errorMsg);\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/nio\/file\/Path\/TempDirectoryNotExistingErrorMessage.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"},{"patch":"@@ -128,2 +128,2 @@\n-            \"-Dtest.classes=\" + testClasses, \"-Djava.security.manager\",\n-            \"-Djava.security.policy==\" + policyFile, \"p.Main\");\n+            \"-Dtest.classes=\" + testClasses, \"-Djava.security.manager=allow\",\n+            \"-Djava.security.policy=\" + policyFile, \"p.Main\");\n@@ -225,1 +225,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/java\/nio\/file\/spi\/SetDefaultProvider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}