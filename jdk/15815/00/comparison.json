{"files":[{"patch":"@@ -132,7 +132,0 @@\n-static inline void relativize_one(intptr_t* const vfp, intptr_t* const hfp, int offset) {\n-  assert(*(hfp + offset) == *(vfp + offset), \"\");\n-  intptr_t* addr = hfp + offset;\n-  intptr_t value = *(intptr_t**)addr - vfp;\n-  *addr = value;\n-}\n-\n@@ -145,1 +138,1 @@\n-  assert(f.fp() > (intptr_t*)f.at(frame::interpreter_frame_initial_sp_offset), \"\");\n+  assert(f.fp() > (intptr_t*)f.at_relative(frame::interpreter_frame_initial_sp_offset), \"\");\n@@ -155,1 +148,2 @@\n-  relativize_one(vfp, hfp, frame::interpreter_frame_initial_sp_offset); \/\/ == block_top == block_bottom\n+  \/\/ Make sure that monitor_block_top is already relativized.\n+  assert(hf.at_absolute(frame::interpreter_frame_monitor_block_top_offset) <= frame::interpreter_frame_initial_sp_offset, \"\");\n@@ -288,5 +282,0 @@\n-static inline void derelativize_one(intptr_t* const fp, int offset) {\n-  intptr_t* addr = fp + offset;\n-  *addr = (intptr_t)(fp + *addr);\n-}\n-\n@@ -299,1 +288,2 @@\n-  derelativize_one(vfp, frame::interpreter_frame_initial_sp_offset);\n+  \/\/ Make sure that monitor_block_top is still relativized.\n+  assert(f.at_absolute(frame::interpreter_frame_monitor_block_top_offset) <= frame::interpreter_frame_initial_sp_offset, \"\");\n","filename":"src\/hotspot\/cpu\/aarch64\/continuationFreezeThaw_aarch64.inline.hpp","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  intptr_t* res = *(intptr_t**)f.addr_at(frame::interpreter_frame_initial_sp_offset) - expression_stack_sz;\n+  intptr_t* res = (intptr_t*)f.at_relative(frame::interpreter_frame_initial_sp_offset) - expression_stack_sz;\n","filename":"src\/hotspot\/cpu\/aarch64\/continuationHelper_aarch64.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -345,1 +345,1 @@\n-  BasicObjectLock* result = (BasicObjectLock*) at(interpreter_frame_monitor_block_top_offset);\n+  BasicObjectLock* result = (BasicObjectLock*) at_relative(interpreter_frame_monitor_block_top_offset);\n@@ -353,1 +353,4 @@\n-  *((BasicObjectLock**)addr_at(interpreter_frame_monitor_block_top_offset)) = value;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized monitor_block_top\n+  ptr_at_put(interpreter_frame_monitor_block_top_offset, (intptr_t*)value - fp());\n+  assert(at_absolute(interpreter_frame_monitor_block_top_offset) <= interpreter_frame_monitor_block_top_offset, \"\");\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -635,2 +635,4 @@\n-    ldr(c_rarg1, monitor_block_top); \/\/ points to current entry, starting\n-                                     \/\/ with top-most entry\n+    ldr(c_rarg1, monitor_block_top); \/\/ derelativize pointer\n+    lea(c_rarg1, Address(rfp, c_rarg1, Address::lsl(Interpreter::logStackElementSize)));\n+    \/\/ c_rarg1 points to current entry, starting with top-most entry\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -179,1 +179,2 @@\n-    ldr(esp, Address(rfp, frame::interpreter_frame_monitor_block_top_offset * wordSize));\n+    ldr(rscratch1, Address(rfp, frame::interpreter_frame_monitor_block_top_offset * wordSize));\n+    lea(esp, Address(rfp, rscratch1, Address::lsl(LogBytesPerWord)));\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -372,0 +372,1 @@\n+    __ lea(rscratch1, Address(rfp, rscratch1, Address::lsl(Interpreter::logStackElementSize)));\n@@ -819,1 +820,4 @@\n-  __ str(esp, monitor_block_top);  \/\/ set new monitor block top\n+  __ sub(rscratch1, esp, rfp);\n+  __ asr(rscratch1, rscratch1, Interpreter::logStackElementSize);\n+  __ str(rscratch1, monitor_block_top);  \/\/ set new monitor block top\n+\n@@ -840,1 +844,2 @@\n-    __ stp(esp, zr, Address(__ pre(sp, -14 * wordSize)));\n+    __ mov(rscratch1, frame::interpreter_frame_initial_sp_offset);\n+    __ stp(rscratch1, zr, Address(__ pre(sp, -14 * wordSize)));\n@@ -847,1 +852,2 @@\n-    __ stp(esp, rbcp, Address(__ pre(sp, -12 * wordSize)));\n+    __ mov(rscratch1, frame::interpreter_frame_initial_sp_offset);\n+    __ stp(rscratch1, rbcp, Address(__ pre(sp, -12 * wordSize)));\n@@ -1261,0 +1267,1 @@\n+    __ lea(rscratch1, Address(rfp, rscratch1, Address::lsl(Interpreter::logStackElementSize)));\n@@ -1713,0 +1720,1 @@\n+    __ lea(rscratch1, Address(rfp, rscratch1, Address::lsl(Interpreter::logStackElementSize)));\n","filename":"src\/hotspot\/cpu\/aarch64\/templateInterpreterGenerator_aarch64.cpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -3877,2 +3877,4 @@\n-    __ ldr(c_rarg3, monitor_block_top); \/\/ points to current entry,\n-                                        \/\/ starting with top-most entry\n+    __ ldr(c_rarg3, monitor_block_top); \/\/ derelativize pointer\n+    __ lea(c_rarg3, Address(rfp, c_rarg3, Address::lsl(Interpreter::logStackElementSize)));\n+    \/\/ c_rarg3 points to current entry, starting with top-most entry\n+\n@@ -3917,1 +3919,4 @@\n-    __ ldr(c_rarg1, monitor_block_bot);   \/\/ c_rarg1: old expression stack bottom\n+    __ ldr(c_rarg1, monitor_block_bot);   \/\/ derelativize pointer\n+    __ lea(c_rarg1, Address(rfp, c_rarg1, Address::lsl(Interpreter::logStackElementSize)));\n+    \/\/ c_rarg1 points to the old expression stack bottom\n+\n@@ -3921,1 +3926,3 @@\n-    __ str(c_rarg1, monitor_block_bot);   \/\/ set new monitor block bottom\n+    __ sub(rscratch1, c_rarg1, rfp);      \/\/ relativize pointer\n+    __ asr(rscratch1, rscratch1, Interpreter::logStackElementSize);\n+    __ str(rscratch1, monitor_block_bot);  \/\/ set new monitor block bottom\n@@ -3978,2 +3985,4 @@\n-    __ ldr(c_rarg1, monitor_block_top); \/\/ points to current entry,\n-                                        \/\/ starting with top-most entry\n+    __ ldr(c_rarg1, monitor_block_top); \/\/ derelativize pointer\n+    __ lea(c_rarg1, Address(rfp, c_rarg1, Address::lsl(Interpreter::logStackElementSize)));\n+    \/\/ c_rarg1 points to current entry, starting with top-most entry\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/templateTable_aarch64.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -90,1 +90,3 @@\n-  relativize_one(vfp, hfp, ijava_idx(monitors));\n+  \/\/ Make sure that monitors is already relativized.\n+  assert(hf.at_absolute(ijava_idx(monitors)) <= -(frame::ijava_state_size \/ wordSize), \"\");\n+\n@@ -545,1 +547,3 @@\n-  derelativize_one(vfp, ijava_idx(monitors));\n+  \/\/ Make sure that monitors is still relativized.\n+  assert(f.at_absolute(ijava_idx(monitors)) <= -(frame::ijava_state_size \/ wordSize), \"\");\n+\n","filename":"src\/hotspot\/cpu\/ppc\/continuationFreezeThaw_ppc.inline.hpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -459,1 +459,1 @@\n-  BasicObjectLock* result = (BasicObjectLock*) at(ijava_idx(monitors));\n+  BasicObjectLock* result = (BasicObjectLock*) at_relative(ijava_idx(monitors));\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,1 +231,6 @@\n-inline void frame::interpreter_frame_set_monitor_end(BasicObjectLock* end)    { get_ijava_state()->monitors = (intptr_t) end;}\n+inline void frame::interpreter_frame_set_monitor_end(BasicObjectLock* end) {\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized monitors\n+  get_ijava_state()->monitors = (intptr_t) ((intptr_t*)end - fp());\n+}\n+\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.inline.hpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -204,1 +204,1 @@\n-  void save_interpreter_state(Register scratch);\n+  void save_interpreter_state(Register scratch1, Register scratch2);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1242,1 +1242,1 @@\n-  save_interpreter_state(Rscratch2);\n+  save_interpreter_state(Rscratch2, Rscratch1);\n@@ -2192,1 +2192,1 @@\n-  save_interpreter_state(Rtmp);\n+  save_interpreter_state(Rscratch1, Rscratch2);\n@@ -2200,1 +2200,1 @@\n-  save_interpreter_state(R11_scratch1);\n+  save_interpreter_state(R11_scratch1, R12_scratch2);\n@@ -2243,6 +2243,9 @@\n-void InterpreterMacroAssembler::save_interpreter_state(Register scratch) {\n-  ld(scratch, 0, R1_SP);\n-  std(R15_esp, _ijava_state_neg(esp), scratch);\n-  std(R14_bcp, _ijava_state_neg(bcp), scratch);\n-  std(R26_monitor, _ijava_state_neg(monitors), scratch);\n-  if (ProfileInterpreter) { std(R28_mdx, _ijava_state_neg(mdx), scratch); }\n+void InterpreterMacroAssembler::save_interpreter_state(Register scratch1, Register scratch2) {\n+  assert_different_registers(scratch1, scratch2);\n+  ld(scratch1, 0, R1_SP);\n+  std(R15_esp, _ijava_state_neg(esp), scratch1);\n+  std(R14_bcp, _ijava_state_neg(bcp), scratch1);\n+  subf(scratch2, scratch1, R26_monitor);\n+  sradi(scratch2, scratch2, Interpreter::logStackElementSize);\n+  std(scratch2, _ijava_state_neg(monitors), scratch1);\n+  if (ProfileInterpreter) { std(R28_mdx, _ijava_state_neg(mdx), scratch1); }\n@@ -2278,0 +2281,3 @@\n+    \/\/ Derelativize monitors\n+    sldi(R26_monitor, R26_monitor, Interpreter::logStackElementSize);\n+    add(R26_monitor, R26_monitor, scratch);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":15,"deletions":9,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -1058,1 +1058,2 @@\n-  __ std(R26_monitor, _ijava_state_neg(monitors), R1_SP);\n+  __ li(R12_scratch2, -(frame::ijava_state_size \/ wordSize));\n+  __ std(R12_scratch2, _ijava_state_neg(monitors), R1_SP);\n@@ -1291,1 +1292,3 @@\n-    __ std(R26_monitor, _ijava_state_neg(monitors), R11_scratch1);\n+    __ sub(R12_scratch2, R26_monitor, R11_scratch1);\n+    __ sradi(R12_scratch2, R12_scratch2, Interpreter::logStackElementSize);\n+    __ std(R12_scratch2, _ijava_state_neg(monitors), R11_scratch1);\n","filename":"src\/hotspot\/cpu\/ppc\/templateInterpreterGenerator_ppc.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -130,7 +130,0 @@\n-static inline void relativize_one(intptr_t* const vfp, intptr_t* const hfp, int offset) {\n-  assert(*(hfp + offset) == *(vfp + offset), \"\");\n-  intptr_t* addr = hfp + offset;\n-  intptr_t value = *(intptr_t**)addr - vfp;\n-  *addr = value;\n-}\n-\n@@ -143,1 +136,1 @@\n-  assert(f.fp() > (intptr_t*)f.at(frame::interpreter_frame_initial_sp_offset), \"\");\n+  assert(f.fp() > (intptr_t*)f.at_relative(frame::interpreter_frame_initial_sp_offset), \"\");\n@@ -153,1 +146,2 @@\n-  relativize_one(vfp, hfp, frame::interpreter_frame_initial_sp_offset); \/\/ == block_top == block_bottom\n+  \/\/ Make sure that monitor_block_top is already relativized.\n+  assert(hf.at_absolute(frame::interpreter_frame_monitor_block_top_offset) <= frame::interpreter_frame_initial_sp_offset, \"\");\n@@ -290,5 +284,0 @@\n-static inline void derelativize_one(intptr_t* const fp, int offset) {\n-  intptr_t* addr = fp + offset;\n-  *addr = (intptr_t)(fp + *addr);\n-}\n-\n@@ -301,1 +290,2 @@\n-  derelativize_one(vfp, frame::interpreter_frame_initial_sp_offset);\n+  \/\/ Make sure that monitor_block_top is still relativized.\n+  assert(f.at_absolute(frame::interpreter_frame_monitor_block_top_offset) <= frame::interpreter_frame_initial_sp_offset, \"\");\n","filename":"src\/hotspot\/cpu\/riscv\/continuationFreezeThaw_riscv.inline.hpp","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  intptr_t* res = *(intptr_t**)f.addr_at(frame::interpreter_frame_initial_sp_offset) - expression_stack_sz;\n+  intptr_t* res = (intptr_t*)f.at_relative(frame::interpreter_frame_initial_sp_offset) - expression_stack_sz;\n","filename":"src\/hotspot\/cpu\/riscv\/continuationHelper_riscv.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -321,1 +321,1 @@\n-  BasicObjectLock* result = (BasicObjectLock*) at(interpreter_frame_monitor_block_top_offset);\n+  BasicObjectLock* result = (BasicObjectLock*) at_relative(interpreter_frame_monitor_block_top_offset);\n@@ -329,1 +329,4 @@\n-  *((BasicObjectLock**)addr_at(interpreter_frame_monitor_block_top_offset)) = value;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized monitor_block_top\n+  ptr_at_put(interpreter_frame_monitor_block_top_offset, (intptr_t*)value - fp());\n+  assert(at_absolute(interpreter_frame_monitor_block_top_offset) <= interpreter_frame_monitor_block_top_offset, \"\");\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -703,2 +703,4 @@\n-    ld(c_rarg1, monitor_block_top); \/\/ points to current entry, starting\n-                                     \/\/ with top-most entry\n+    ld(c_rarg1, monitor_block_top); \/\/ derelativize pointer\n+    shadd(c_rarg1, c_rarg1, fp,  c_rarg1, LogBytesPerWord);\n+    \/\/ c_rarg1 points to current entry, starting with top-most entry\n+\n@@ -2011,0 +2013,1 @@\n+  shadd(t0, t0, fp, t0, LogBytesPerWord);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -168,1 +168,2 @@\n-    ld(esp, Address(fp, frame::interpreter_frame_monitor_block_top_offset * wordSize));\n+    ld(t0, Address(fp, frame::interpreter_frame_monitor_block_top_offset * wordSize));\n+    shadd(esp, t0, fp,  t0, LogBytesPerWord);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -335,0 +335,1 @@\n+    __ shadd(t0, t0, fp,  t0, LogBytesPerWord);\n@@ -716,1 +717,3 @@\n-  __ sd(esp, monitor_block_top);  \/\/ set new monitor block top\n+  __ sub(t0, esp, fp);\n+  __ srai(t0, t0, Interpreter::logStackElementSize);\n+  __ sd(t0, monitor_block_top);  \/\/ set new monitor block top\n@@ -748,1 +751,2 @@\n-  __ sd(esp, Address(sp, 0));\n+  __ mv(t0, frame::interpreter_frame_initial_sp_offset);\n+  __ sd(t0, Address(sp, 0));\n","filename":"src\/hotspot\/cpu\/riscv\/templateInterpreterGenerator_riscv.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -3812,2 +3812,4 @@\n-     __ ld(c_rarg3, monitor_block_top); \/\/ points to current entry,\n-                                        \/\/ starting with top-most entry\n+     __ ld(c_rarg3, monitor_block_top); \/\/ derelativize pointer\n+     __ shadd(c_rarg3, c_rarg3, fp,  c_rarg3, LogBytesPerWord);\n+     \/\/ Now c_rarg3 points to current entry, starting with top-most entry\n+\n@@ -3851,1 +3853,4 @@\n-     __ ld(c_rarg1, monitor_block_bot);    \/\/ c_rarg1: old expression stack bottom\n+     __ ld(c_rarg1, monitor_block_bot);    \/\/ derelativize pointer\n+     __ shadd(c_rarg1, c_rarg1, fp,  c_rarg1, LogBytesPerWord);\n+     \/\/ Now c_rarg1 points to the old expression stack bottom\n+\n@@ -3855,1 +3860,3 @@\n-     __ sd(c_rarg1, monitor_block_bot);    \/\/ set new monitor block bottom\n+     __ sub(t0, c_rarg1, fp);              \/\/ relativize pointer\n+     __ srai(t0, t0, Interpreter::logStackElementSize);\n+     __ sd(t0, monitor_block_bot);         \/\/ set new monitor block bottom\n@@ -3909,2 +3916,4 @@\n-    __ ld(c_rarg1, monitor_block_top); \/\/ points to current entry,\n-                                        \/\/ starting with top-most entry\n+    __ ld(c_rarg1, monitor_block_top); \/\/ derelativize pointer\n+    __ shadd(c_rarg1, c_rarg1, fp,  c_rarg1, LogBytesPerWord);\n+    \/\/ Now c_rarg1 points to current entry, starting with top-most entry\n+\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":15,"deletions":6,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -129,7 +129,0 @@\n-static inline void relativize_one(intptr_t* const vfp, intptr_t* const hfp, int offset) {\n-  assert(*(hfp + offset) == *(vfp + offset), \"\");\n-  intptr_t* addr = hfp + offset;\n-  intptr_t value = *(intptr_t**)addr - vfp;\n-  *addr = value;\n-}\n-\n@@ -142,1 +135,1 @@\n-  assert(f.fp() > (intptr_t*)f.at(frame::interpreter_frame_initial_sp_offset), \"\");\n+  assert(f.fp() > (intptr_t*)f.at_relative(frame::interpreter_frame_initial_sp_offset), \"\");\n@@ -150,1 +143,2 @@\n-  relativize_one(vfp, hfp, frame::interpreter_frame_initial_sp_offset); \/\/ == block_top == block_bottom\n+  \/\/ Make sure that monitor_block_top is already relativized.\n+  assert(hf.at_absolute(frame::interpreter_frame_monitor_block_top_offset) <= frame::interpreter_frame_initial_sp_offset, \"\");\n@@ -277,5 +271,0 @@\n-static inline void derelativize_one(intptr_t* const fp, int offset) {\n-  intptr_t* addr = fp + offset;\n-  *addr = (intptr_t)(fp + *addr);\n-}\n-\n@@ -288,1 +277,2 @@\n-  derelativize_one(vfp, frame::interpreter_frame_initial_sp_offset);\n+  \/\/ Make sure that monitor_block_top is still relativized.\n+  assert(f.at_absolute(frame::interpreter_frame_monitor_block_top_offset) <= frame::interpreter_frame_initial_sp_offset, \"\");\n","filename":"src\/hotspot\/cpu\/x86\/continuationFreezeThaw_x86.inline.hpp","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -124,1 +124,1 @@\n-  intptr_t* res = *(intptr_t**)f.addr_at(frame::interpreter_frame_initial_sp_offset) - expression_stack_sz;\n+  intptr_t* res = (intptr_t*)f.at_relative(frame::interpreter_frame_initial_sp_offset) - expression_stack_sz;\n","filename":"src\/hotspot\/cpu\/x86\/continuationHelper_x86.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -342,1 +342,1 @@\n-  BasicObjectLock* result = (BasicObjectLock*) at(interpreter_frame_monitor_block_top_offset);\n+  BasicObjectLock* result = (BasicObjectLock*) at_relative(interpreter_frame_monitor_block_top_offset);\n@@ -350,1 +350,4 @@\n-  *((BasicObjectLock**)addr_at(interpreter_frame_monitor_block_top_offset)) = value;\n+  assert(is_interpreted_frame(), \"interpreted frame expected\");\n+  \/\/ set relativized monitor_block_top\n+  ptr_at_put(interpreter_frame_monitor_block_top_offset, (intptr_t*)value - fp());\n+  assert(at_absolute(interpreter_frame_monitor_block_top_offset) <= interpreter_frame_monitor_block_top_offset, \"\");\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1088,2 +1088,4 @@\n-    movptr(rmon, monitor_block_top); \/\/ points to current entry, starting\n-                                  \/\/ with top-most entry\n+    movptr(rmon, monitor_block_top); \/\/ derelativize pointer\n+    lea(rmon, Address(rbp, rmon, Address::times_ptr));\n+    \/\/ c_rarg1 points to current entry, starting with top-most entry\n+\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -180,1 +180,2 @@\n-    movptr(rsp, Address(rbp, frame::interpreter_frame_monitor_block_top_offset * wordSize));\n+    movptr(rcx, Address(rbp, frame::interpreter_frame_monitor_block_top_offset * wordSize));\n+    lea(rsp, Address(rbp, rcx, Address::times_ptr));\n","filename":"src\/hotspot\/cpu\/x86\/interp_masm_x86.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -89,3 +89,4 @@\n-    __ lea(rax, Address(rbp,\n-                        frame::interpreter_frame_monitor_block_top_offset *\n-                        wordSize));\n+    __ movptr(rax, Address(rbp,\n+                           frame::interpreter_frame_monitor_block_top_offset *\n+                           wordSize));\n+    __ lea(rax, Address(rbp, rax, Address::times_ptr));\n@@ -611,1 +612,1 @@\n-  __ movptr(monitor_block_top, rsp);  \/\/ set new monitor block top\n+  __ subptr(monitor_block_top, entry_size \/ wordSize); \/\/ set new monitor block top\n@@ -667,2 +668,2 @@\n-  __ push(0); \/\/ reserve word for pointer to expression stack bottom\n-  __ movptr(Address(rsp, 0), rsp); \/\/ set expression stack bottom\n+  \/\/ initialize relativized pointer to expression stack bottom\n+  __ push(frame::interpreter_frame_initial_sp_offset);\n@@ -907,0 +908,1 @@\n+    __ lea(rax, Address(rbp, rax, Address::times_ptr));\n@@ -1461,0 +1463,1 @@\n+    __ lea(rax, Address(rbp, rax, Address::times_ptr));\n","filename":"src\/hotspot\/cpu\/x86\/templateInterpreterGenerator_x86.cpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -4361,2 +4361,4 @@\n-    __ movptr(rtop, monitor_block_top); \/\/ points to current entry,\n-                                        \/\/ starting with top-most entry\n+    __ movptr(rtop, monitor_block_top); \/\/ derelativize pointer\n+    __ lea(rtop, Address(rbp, rtop, Address::times_ptr));\n+    \/\/ rtop points to current entry, starting with top-most entry\n+\n@@ -4394,0 +4396,1 @@\n+    __ lea(rmon, Address(rbp, rmon, Address::times_ptr));\n@@ -4397,1 +4400,1 @@\n-    __ movptr(monitor_block_bot, rmon); \/\/ set new monitor block bottom\n+    __ subptr(monitor_block_bot, entry_size \/ wordSize); \/\/ set new monitor block bottom\n@@ -4454,2 +4457,4 @@\n-    __ movptr(rtop, monitor_block_top); \/\/ points to current entry,\n-                                        \/\/ starting with top-most entry\n+    __ movptr(rtop, monitor_block_top); \/\/ derelativize pointer\n+    __ lea(rtop, Address(rbp, rtop, Address::times_ptr));\n+    \/\/ rtop points to current entry, starting with top-most entry\n+\n","filename":"src\/hotspot\/cpu\/x86\/templateTable_x86.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -527,1 +527,2 @@\n-    Address result = addressOfStackSlot(INTERPRETER_FRAME_MONITOR_BLOCK_TOP_OFFSET).getAddressAt(0);\n+    long n = addressOfStackSlot(INTERPRETER_FRAME_MONITOR_BLOCK_TOP_OFFSET).getCIntegerAt(0, VM.getVM().getAddressSize(), false);\n+    Address result = getFP().addOffsetTo(n * VM.getVM().getAddressSize());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/aarch64\/AARCH64Frame.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -448,1 +448,2 @@\n-    Address result = addressOfStackSlot(INTERPRETER_FRAME_MONITORS_OFFSET).getAddressAt(0);\n+    long n = addressOfStackSlot(INTERPRETER_FRAME_MONITORS_OFFSET).getCIntegerAt(0, VM.getVM().getAddressSize(), false);\n+    Address result = getFP().addOffsetTo(n * VM.getVM().getAddressSize());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/ppc64\/PPC64Frame.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -499,1 +499,2 @@\n-    Address result = addressOfStackSlot(INTERPRETER_FRAME_MONITOR_BLOCK_TOP_OFFSET).getAddressAt(0);\n+    long n = addressOfStackSlot(INTERPRETER_FRAME_MONITOR_BLOCK_TOP_OFFSET).getCIntegerAt(0, VM.getVM().getAddressSize(), false);\n+    Address result = getFP().addOffsetTo(n * VM.getVM().getAddressSize());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/riscv64\/RISCV64Frame.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -515,1 +515,2 @@\n-    Address result = addressOfStackSlot(INTERPRETER_FRAME_MONITOR_BLOCK_TOP_OFFSET).getAddressAt(0);\n+    long n = addressOfStackSlot(INTERPRETER_FRAME_MONITOR_BLOCK_TOP_OFFSET).getCIntegerAt(0, VM.getVM().getAddressSize(), false);\n+    Address result = getFP().addOffsetTo(n * VM.getVM().getAddressSize());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/x86\/X86Frame.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}