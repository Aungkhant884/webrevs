{"files":[{"patch":"@@ -1648,3 +1648,0 @@\n-\n-    rp->verify_no_references_recorded();\n-    assert(!rp->discovery_enabled(), \"Post condition\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -84,1 +84,0 @@\n-    _references_done(false),\n@@ -100,3 +99,4 @@\n-  \/\/ Adjust the weak roots.\n-  if (!Atomic::cmpxchg(&_references_done, false, true)) {\n-    G1CollectedHeap::heap()->ref_processor_stw()->weak_oops_do(&_adjust);\n+  {\n+    \/\/ Adjust the weak roots.\n+    AlwaysTrueClosure always_alive;\n+    _weak_proc_task.work(worker_id, &always_alive, &_adjust);\n@@ -105,3 +105,0 @@\n-  AlwaysTrueClosure always_alive;\n-  _weak_proc_task.work(worker_id, &always_alive, &_adjust);\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-  volatile bool            _references_done;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCAdjustTask.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -987,2 +987,0 @@\n-  rp->verify_no_references_recorded();\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1925,2 +1925,0 @@\n-  NOT_PRODUCT(ref_processor()->verify_no_references_recorded());\n-\n@@ -2163,2 +2161,0 @@\n-    PSAdjustSubTask_old_ref_process,\n-    PSAdjustSubTask_young_ref_process,\n@@ -2206,10 +2202,0 @@\n-    if (_sub_tasks.try_claim_task(PSAdjustSubTask_old_ref_process)) {\n-      PSParallelCompact::ref_processor()->weak_oops_do(&adjust);\n-    }\n-    if (_sub_tasks.try_claim_task(PSAdjustSubTask_young_ref_process)) {\n-      \/\/ Roots were visited so references into the young gen in roots\n-      \/\/ may have been scanned.  Process them also.\n-      \/\/ Should the reference processor have a span that excludes\n-      \/\/ young gen objects?\n-      PSScavenge::reference_processor()->weak_oops_do(&adjust);\n-    }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -656,2 +656,0 @@\n-    NOT_PRODUCT(reference_processor()->verify_no_references_recorded());\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -801,2 +801,0 @@\n-  _young_gen->ref_processor()->weak_oops_do(root_closure);\n-  _old_gen->ref_processor()->weak_oops_do(root_closure);\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -219,0 +219,3 @@\n+  \/\/ Elements on discovered lists were pushed to the pending list.\n+  verify_no_references_recorded();\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -423,2 +423,0 @@\n-  void verify_list(DiscoveredList& ref_list);\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}