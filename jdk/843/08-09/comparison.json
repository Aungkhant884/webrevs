{"files":[{"patch":"@@ -99,2 +99,4 @@\n-    public VarHandle withInvokeExactBehaviour() {\n-        return new IndirectVarHandle(target, value, coordinates, handleFactory, vform, true);\n+    public VarHandle withInvokeExactBehavior() {\n+        return hasInvokeExactBehavior()\n+            ? this\n+            : new IndirectVarHandle(target, value, coordinates, handleFactory, vform, true);\n@@ -104,2 +106,4 @@\n-    public VarHandle withInvokeBehaviour() {\n-        return new IndirectVarHandle(target, value, coordinates, handleFactory, vform, false);\n+    public VarHandle withInvokeBehavior() {\n+        return !hasInvokeExactBehavior()\n+            ? this\n+            : new IndirectVarHandle(target, value, coordinates, handleFactory, vform, false);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/IndirectVarHandle.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -469,1 +469,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/Invokers.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -332,1 +332,1 @@\n- * A VarHandle's invocation behaviour can be adjusted (see {@link #withInvokeExactBehaviour}) such that invocation of\n+ * A VarHandle's invocation behaviour can be adjusted (see {@link #withInvokeExactBehavior}) such that invocation of\n@@ -508,2 +508,2 @@\n-     * @see #withInvokeExactBehaviour()\n-     * @see #withInvokeBehaviour()\n+     * @see #withInvokeExactBehavior()\n+     * @see #withInvokeBehavior()\n@@ -513,1 +513,1 @@\n-    public boolean hasInvokeExactBehaviour() {\n+    public boolean hasInvokeExactBehavior() {\n@@ -1604,2 +1604,2 @@\n-     * @see #withInvokeBehaviour()\n-     * @see #hasInvokeExactBehaviour()\n+     * @see #withInvokeBehavior()\n+     * @see #hasInvokeExactBehavior()\n@@ -1609,1 +1609,1 @@\n-    public abstract VarHandle withInvokeExactBehaviour();\n+    public abstract VarHandle withInvokeExactBehavior();\n@@ -1618,2 +1618,2 @@\n-     * @see #withInvokeExactBehaviour()\n-     * @see #hasInvokeExactBehaviour()\n+     * @see #withInvokeExactBehavior()\n+     * @see #hasInvokeExactBehavior()\n@@ -1623,1 +1623,1 @@\n-    public abstract VarHandle withInvokeBehaviour();\n+    public abstract VarHandle withInvokeBehavior();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandle.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -54,1 +54,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -72,1 +72,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -88,1 +88,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -105,1 +105,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -122,1 +122,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -138,1 +138,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -156,1 +156,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -172,1 +172,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -188,1 +188,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -204,1 +204,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -220,1 +220,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -238,1 +238,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -254,1 +254,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -270,1 +270,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -286,1 +286,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -302,1 +302,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -320,1 +320,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -336,1 +336,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -352,1 +352,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -368,1 +368,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -384,1 +384,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -402,1 +402,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -418,1 +418,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -434,1 +434,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -450,1 +450,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -467,1 +467,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -485,1 +485,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -501,1 +501,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -517,1 +517,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -535,1 +535,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -551,1 +551,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -567,1 +567,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -583,1 +583,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -599,1 +599,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -617,1 +617,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -633,1 +633,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -649,1 +649,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -665,1 +665,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -681,1 +681,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -699,1 +699,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -715,1 +715,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -731,1 +731,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -747,1 +747,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -763,1 +763,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -781,1 +781,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -797,1 +797,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -813,1 +813,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -829,1 +829,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -846,1 +846,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -864,1 +864,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -880,1 +880,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -897,1 +897,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -914,1 +914,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -932,1 +932,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -948,1 +948,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -964,1 +964,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -980,1 +980,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -998,1 +998,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1014,1 +1014,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1030,1 +1030,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1046,1 +1046,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1062,1 +1062,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1080,1 +1080,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1096,1 +1096,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1112,1 +1112,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1128,1 +1128,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1144,1 +1144,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1162,1 +1162,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1178,1 +1178,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1194,1 +1194,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1210,1 +1210,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1226,1 +1226,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1244,1 +1244,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1260,1 +1260,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1276,1 +1276,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1292,1 +1292,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1310,1 +1310,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -1326,1 +1326,1 @@\n-        if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+        if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandleGuards.java","additions":79,"deletions":79,"binary":false,"changes":158,"status":"modified"},{"patch":"@@ -684,1 +684,1 @@\n-\/\/                    if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+\/\/                    if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n@@ -702,1 +702,1 @@\n-\/\/                    if (handle.hasInvokeExactBehaviour() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n+\/\/                    if (handle.hasInvokeExactBehavior() && handle.accessModeType(ad.type) != ad.symbolicMethodTypeExact) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -62,2 +62,4 @@\n-        public FieldInstanceReadOnly withInvokeExactBehaviour() {\n-            return new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType}, vform, true);\n+        public FieldInstanceReadOnly withInvokeExactBehavior() {\n+            return hasInvokeExactBehavior()\n+                ? this\n+                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType}, vform, true);\n@@ -67,2 +69,4 @@\n-        public FieldInstanceReadOnly withInvokeBehaviour() {\n-            return new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType}, vform, false);\n+        public FieldInstanceReadOnly withInvokeBehavior() {\n+            return !hasInvokeExactBehavior()\n+                ? this\n+                : new FieldInstanceReadOnly(receiverType, fieldOffset{#if[Object]?, fieldType}, vform, false);\n@@ -132,2 +136,4 @@\n-        public FieldInstanceReadWrite withInvokeExactBehaviour() {\n-            return new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType}, true);\n+        public FieldInstanceReadWrite withInvokeExactBehavior() {\n+            return hasInvokeExactBehavior()\n+                ? this\n+                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType}, true);\n@@ -137,2 +143,4 @@\n-        public FieldInstanceReadWrite withInvokeBehaviour() {\n-            return new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType}, false);\n+        public FieldInstanceReadWrite withInvokeBehavior() {\n+            return !hasInvokeExactBehavior()\n+                ? this\n+                : new FieldInstanceReadWrite(receiverType, fieldOffset{#if[Object]?, fieldType}, false);\n@@ -398,2 +406,4 @@\n-        public FieldStaticReadOnly withInvokeExactBehaviour() {\n-            return new FieldStaticReadOnly(base, fieldOffset{#if[Object]?, fieldType}, vform, true);\n+        public FieldStaticReadOnly withInvokeExactBehavior() {\n+            return hasInvokeExactBehavior()\n+                ? this\n+                : new FieldStaticReadOnly(base, fieldOffset{#if[Object]?, fieldType}, vform, true);\n@@ -403,2 +413,4 @@\n-        public FieldStaticReadOnly withInvokeBehaviour() {\n-            return new FieldStaticReadOnly(base, fieldOffset{#if[Object]?, fieldType}, vform, false);\n+        public FieldStaticReadOnly withInvokeBehavior() {\n+            return !hasInvokeExactBehavior()\n+                ? this\n+                : new FieldStaticReadOnly(base, fieldOffset{#if[Object]?, fieldType}, vform, false);\n@@ -470,2 +482,4 @@\n-        public FieldStaticReadWrite withInvokeExactBehaviour() {\n-            return new FieldStaticReadWrite(base, fieldOffset{#if[Object]?, fieldType}, true);\n+        public FieldStaticReadWrite withInvokeExactBehavior() {\n+            return hasInvokeExactBehavior()\n+                ? this\n+                : new FieldStaticReadWrite(base, fieldOffset{#if[Object]?, fieldType}, true);\n@@ -475,2 +489,4 @@\n-        public FieldStaticReadWrite withInvokeBehaviour() {\n-            return new FieldStaticReadWrite(base, fieldOffset{#if[Object]?, fieldType}, false);\n+        public FieldStaticReadWrite withInvokeBehavior() {\n+            return !hasInvokeExactBehavior()\n+                ? this\n+                : new FieldStaticReadWrite(base, fieldOffset{#if[Object]?, fieldType}, false);\n@@ -737,2 +753,4 @@\n-        public Array withInvokeExactBehaviour() {\n-            return new Array(abase, ashift{#if[Object]?, arrayType}, true);\n+        public Array withInvokeExactBehavior() {\n+            return hasInvokeExactBehavior()\n+                ? this\n+                : new Array(abase, ashift{#if[Object]?, arrayType}, true);\n@@ -742,2 +760,4 @@\n-        public Array withInvokeBehaviour() {\n-            return new Array(abase, ashift{#if[Object]?, arrayType}, false);\n+        public Array withInvokeBehavior() {\n+            return !hasInvokeExactBehavior()\n+                ? this\n+                : new Array(abase, ashift{#if[Object]?, arrayType}, false);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandle.java.template","additions":40,"deletions":20,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -88,2 +88,4 @@\n-        public ArrayHandle withInvokeExactBehaviour() {\n-            return new ArrayHandle(be, true);\n+        public ArrayHandle withInvokeExactBehavior() {\n+            return hasInvokeExactBehavior()\n+                ? this\n+                : new ArrayHandle(be, true);\n@@ -93,2 +95,4 @@\n-        public ArrayHandle withInvokeBehaviour() {\n-            return new ArrayHandle(be, false);\n+        public ArrayHandle withInvokeBehavior() {\n+            return !hasInvokeExactBehavior()\n+                ? this\n+                : new ArrayHandle(be, false);\n@@ -580,2 +584,4 @@\n-        public ByteBufferHandle withInvokeExactBehaviour() {\n-            return new ByteBufferHandle(be, true);\n+        public ByteBufferHandle withInvokeExactBehavior() {\n+            return hasInvokeExactBehavior()\n+                ? this\n+                : new ByteBufferHandle(be, true);\n@@ -585,2 +591,4 @@\n-        public ByteBufferHandle withInvokeBehaviour() {\n-            return new ByteBufferHandle(be, false);\n+        public ByteBufferHandle withInvokeBehavior() {\n+            return !hasInvokeExactBehavior()\n+                ? this\n+                : new ByteBufferHandle(be, false);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandleByteArrayView.java.template","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -87,1 +87,1 @@\n-            vh.withInvokeBehaviour().set(w, testValue);\n+            vh.withInvokeBehavior().set(w, testValue);\n@@ -92,1 +92,1 @@\n-        vh = vh.withInvokeExactBehaviour();\n+        vh = vh.withInvokeExactBehavior();\n@@ -111,1 +111,1 @@\n-            Object o2 = vh.withInvokeBehaviour().get(w);\n+            Object o2 = vh.withInvokeBehavior().get(w);\n@@ -116,1 +116,1 @@\n-        vh = vh.withInvokeExactBehaviour();\n+        vh = vh.withInvokeExactBehavior();\n@@ -135,1 +135,1 @@\n-            vh.withInvokeBehaviour().set(testValue);\n+            vh.withInvokeBehavior().set(testValue);\n@@ -140,1 +140,1 @@\n-        vh = vh.withInvokeExactBehaviour();\n+        vh = vh.withInvokeExactBehavior();\n@@ -158,1 +158,1 @@\n-            Object o2 = vh.withInvokeBehaviour().get();\n+            Object o2 = vh.withInvokeBehavior().get();\n@@ -163,1 +163,1 @@\n-        vh = vh.withInvokeExactBehaviour();\n+        vh = vh.withInvokeExactBehavior();\n@@ -179,1 +179,1 @@\n-            vh.withInvokeBehaviour().set(arr, 0, testValue);\n+            vh.withInvokeBehavior().set(arr, 0, testValue);\n@@ -184,1 +184,1 @@\n-        vh = vh.withInvokeExactBehaviour();\n+        vh = vh.withInvokeExactBehavior();\n@@ -201,1 +201,1 @@\n-            vh.withInvokeBehaviour().set(buff, 0, testValue);\n+            vh.withInvokeBehavior().set(buff, 0, testValue);\n@@ -206,1 +206,1 @@\n-        vh = vh.withInvokeExactBehaviour();\n+        vh = vh.withInvokeExactBehavior();\n@@ -223,1 +223,1 @@\n-                vh.withInvokeBehaviour().set(base, testValue);\n+                vh.withInvokeBehavior().set(base, testValue);\n@@ -228,1 +228,1 @@\n-            vh = vh.withInvokeExactBehaviour();\n+            vh = vh.withInvokeExactBehavior();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestExact.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-        exact = generic.withInvokeExactBehaviour();\n+        exact = generic.withInvokeExactBehavior();\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/VarHandleExact.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-        exact = generic.withInvokeExactBehaviour();\n+        exact = generic.withInvokeExactBehavior();\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/VarHandleExact.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}