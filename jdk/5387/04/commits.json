[{"commit":{"message":"Merge branch 'master' into _8269537"},"files":[],"sha":"64381198e08ab3e13c793d8618c0ae73b22a0199"},{"commit":{"message":"Merge branch 'master' into _8269537"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/space.hpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.cpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.hpp"}],"sha":"fec852f8708a449f928666de864f719c3f112ee8"},{"commit":{"message":"review updates"},"files":[{"filename":"src\/hotspot\/share\/gc\/shared\/space.hpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.cpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.hpp"},{"filename":"src\/hotspot\/share\/memory\/memRegion.hpp"}],"sha":"640f2d83386e8bd49fbee07aa412e8f46ba87307"},{"commit":{"message":"Use a thread local buffer so that the compiler might reorder operator new."},"files":[{"filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp"},{"filename":"src\/hotspot\/share\/classfile\/stackMapFrame.hpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.cpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.hpp"},{"filename":"src\/hotspot\/share\/memory\/memRegion.hpp"}],"sha":"c9d459066992733a3f5bc7c431b6d0c8f71d72c6"},{"commit":{"message":"First update\n\n* Change backing type of ResourceObj::allocation_type to be u8. Also remove no longer needed mask and explicit zero value of STACK_OR_EMBEDDED value.\n\n* Now setting allocation type with set_type() with assert."},"files":[{"filename":"src\/hotspot\/share\/memory\/allocation.cpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.hpp"}],"sha":"d8acedb0546b4ed12c1f3fe6bf057cd2cfb05aff"},{"commit":{"message":"8269537: memset() is called after operator new"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1Allocator.hpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.cpp"},{"filename":"src\/hotspot\/share\/memory\/allocation.hpp"},{"filename":"src\/hotspot\/share\/prims\/jvmtiDeferredUpdates.hpp"}],"sha":"31633583c8c3f1f64db0bcdd520c48ba5b10cc74"}]