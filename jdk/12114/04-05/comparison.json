{"files":[{"patch":"@@ -48,3 +48,3 @@\n-  static inline u2   get_Java_u2(address p)           { return swap_u2(get_native_u2(p)); }\n-  static inline u4   get_Java_u4(address p)           { return swap_u4(get_native_u4(p)); }\n-  static inline u8   get_Java_u8(address p)           { return swap_u8(get_native_u8(p)); }\n+  static inline u2   get_Java_u2(address p)           { return byteswap<u2>(get_native_u2(p)); }\n+  static inline u4   get_Java_u4(address p)           { return byteswap<u4>(get_native_u4(p)); }\n+  static inline u8   get_Java_u8(address p)           { return byteswap<u8>(get_native_u8(p)); }\n@@ -52,13 +52,3 @@\n-  static inline void put_Java_u2(address p, u2 x)     { put_native_u2(p, swap_u2(x)); }\n-  static inline void put_Java_u4(address p, u4 x)     { put_native_u4(p, swap_u4(x)); }\n-  static inline void put_Java_u8(address p, u8 x)     { put_native_u8(p, swap_u8(x)); }\n-\n-#ifdef VM_LITTLE_ENDIAN\n-  static inline u2 swap_u2(u2 x) { return byteswap<u2>(x); }\n-  static inline u4 swap_u4(u4 x) { return byteswap<u4>(x); }\n-  static inline u8 swap_u8(u8 x) { return byteswap<u8>(x); }\n-#else\n-  static inline u2 swap_u2(u2 x) { return x; }\n-  static inline u4 swap_u4(u4 x) { return x; }\n-  static inline u8 swap_u8(u8 x) { return x; }\n-#endif\n+  static inline void put_Java_u2(address p, u2 x)     { put_native_u2(p, byteswap<u2>(x)); }\n+  static inline void put_Java_u4(address p, u4 x)     { put_native_u4(p, byteswap<u4>(x)); }\n+  static inline void put_Java_u8(address p, u8 x)     { put_native_u8(p, byteswap<u8>(x)); }\n","filename":"src\/hotspot\/cpu\/aarch64\/bytes_aarch64.hpp","additions":6,"deletions":16,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"utilities\/byteswap.hpp\"\n@@ -179,10 +178,0 @@\n-\n-#ifdef VM_LITTLE_ENDIAN\n-  static inline u2 swap_u2(u2 x) { return byteswap<u2>(x); }\n-  static inline u4 swap_u4(u4 x) { return byteswap<u4>(x); }\n-  static inline u8 swap_u8(u8 x) { return byteswap<u8>(x); }\n-#else\n-  static inline u2 swap_u2(u2 x) { return x; }\n-  static inline u4 swap_u4(u4 x) { return x; }\n-  static inline u8 swap_u8(u8 x) { return x; }\n-#endif\n","filename":"src\/hotspot\/cpu\/arm\/bytes_arm.hpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -140,3 +140,3 @@\n-  static inline u2   get_Java_u2(address p) { return swap_u2(get_native_u2(p)); }\n-  static inline u4   get_Java_u4(address p) { return swap_u4(get_native_u4(p)); }\n-  static inline u8   get_Java_u8(address p) { return swap_u8(get_native_u8(p)); }\n+  static inline u2   get_Java_u2(address p) { return byteswap<u2>(get_native_u2(p)); }\n+  static inline u4   get_Java_u4(address p) { return byteswap<u4>(get_native_u4(p)); }\n+  static inline u8   get_Java_u8(address p) { return byteswap<u8>(get_native_u8(p)); }\n@@ -144,3 +144,3 @@\n-  static inline void put_Java_u2(address p, u2 x)     { put_native_u2(p, swap_u2(x)); }\n-  static inline void put_Java_u4(address p, u4 x)     { put_native_u4(p, swap_u4(x)); }\n-  static inline void put_Java_u8(address p, u8 x)     { put_native_u8(p, swap_u8(x)); }\n+  static inline void put_Java_u2(address p, u2 x)     { put_native_u2(p, byteswap<u2>(x)); }\n+  static inline void put_Java_u4(address p, u4 x)     { put_native_u4(p, byteswap<u4>(x)); }\n+  static inline void put_Java_u8(address p, u8 x)     { put_native_u8(p, byteswap<u8>(x)); }\n@@ -258,10 +258,0 @@\n-\n-#ifdef VM_LITTLE_ENDIAN\n-  static inline u2 swap_u2(u2 x) { return byteswap<u2>(x); }\n-  static inline u4 swap_u4(u4 x) { return byteswap<u4>(x); }\n-  static inline u8 swap_u8(u8 x) { return byteswap<u8>(x); }\n-#else\n-  static inline u2 swap_u2(u2 x) { return x; }\n-  static inline u4 swap_u4(u4 x) { return x; }\n-  static inline u8 swap_u8(u8 x) { return x; }\n-#endif\n","filename":"src\/hotspot\/cpu\/ppc\/bytes_ppc.hpp","additions":6,"deletions":16,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -38,10 +38,0 @@\n-#ifdef VM_LITTLE_ENDIAN\n-  static inline u2 swap_u2(u2 x) { return byteswap<u2>(x); }\n-  static inline u4 swap_u4(u4 x) { return byteswap<u4>(x); }\n-  static inline u8 swap_u8(u8 x) { return byteswap<u8>(x); }\n-#else\n-  static inline u2 swap_u2(u2 x) { return x; }\n-  static inline u4 swap_u4(u4 x) { return x; }\n-  static inline u8 swap_u8(u8 x) { return x; }\n-#endif\n-\n@@ -163,0 +153,4 @@\n+#ifndef VM_LITTLE_ENDIAN\n+#error RISC-V is little endian, the preprocessor macro VM_LITTLE_ENDIAN should be defined.\n+#endif\n+\n@@ -164,3 +158,3 @@\n-  static inline u2 get_Java_u2(address p) { return swap_u2(get_native_u2(p)); }\n-  static inline u4 get_Java_u4(address p) { return swap_u4(get_native_u4(p)); }\n-  static inline u8 get_Java_u8(address p) { return swap_u8(get_native_u8(p)); }\n+  static inline u2 get_Java_u2(address p) { return byteswap<u2>(get_native_u2(p)); }\n+  static inline u4 get_Java_u4(address p) { return byteswap<u4>(get_native_u4(p)); }\n+  static inline u8 get_Java_u8(address p) { return byteswap<u8>(get_native_u8(p)); }\n@@ -168,3 +162,3 @@\n-  static inline void put_Java_u2(address p, u2 x) { put_native_u2(p, swap_u2(x)); }\n-  static inline void put_Java_u4(address p, u4 x) { put_native_u4(p, swap_u4(x)); }\n-  static inline void put_Java_u8(address p, u8 x) { put_native_u8(p, swap_u8(x)); }\n+  static inline void put_Java_u2(address p, u2 x) { put_native_u2(p, byteswap<u2>(x)); }\n+  static inline void put_Java_u4(address p, u4 x) { put_native_u4(p, byteswap<u4>(x)); }\n+  static inline void put_Java_u8(address p, u8 x) { put_native_u8(p, byteswap<u8>(x)); }\n","filename":"src\/hotspot\/cpu\/riscv\/bytes_riscv.hpp","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"utilities\/byteswap.hpp\"\n@@ -54,10 +53,0 @@\n-#ifdef VM_LITTLE_ENDIAN\n-  static inline u2 swap_u2(u2 x) { return byteswap<u2>(x); }\n-  static inline u4 swap_u4(u4 x) { return byteswap<u4>(x); }\n-  static inline u8 swap_u8(u8 x) { return byteswap<u8>(x); }\n-#else\n-  static inline u2 swap_u2(u2 x) { return x; }\n-  static inline u4 swap_u4(u4 x) { return x; }\n-  static inline u8 swap_u8(u8 x) { return x; }\n-#endif\n-\n","filename":"src\/hotspot\/cpu\/s390\/bytes_s390.hpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-      x = swap<T>(x);\n+      x = byteswap<T>(x);\n@@ -86,1 +86,1 @@\n-      x = swap<T>(x);\n+      x = byteswap<T>(x);\n@@ -99,24 +99,0 @@\n-\n-  \/\/ Efficient swapping of byte ordering\n-  template <typename T>\n-  static T swap(T x) {\n-    switch (sizeof(T)) {\n-    case sizeof(u1): return x;\n-    case sizeof(u2): return swap_u2(x);\n-    case sizeof(u4): return swap_u4(x);\n-    case sizeof(u8): return swap_u8(x);\n-    default:\n-      guarantee(false, \"invalid size: \" SIZE_FORMAT \"\\n\", sizeof(T));\n-      return 0;\n-    }\n-  }\n-\n-#ifdef VM_LITTLE_ENDIAN\n-  static inline u2 swap_u2(u2 x) { return byteswap<u2>(x); }\n-  static inline u4 swap_u4(u4 x) { return byteswap<u4>(x); }\n-  static inline u8 swap_u8(u8 x) { return byteswap<u8>(x); }\n-#else\n-  static inline u2 swap_u2(u2 x) { return x; }\n-  static inline u4 swap_u4(u4 x) { return x; }\n-  static inline u8 swap_u8(u8 x) { return x; }\n-#endif\n","filename":"src\/hotspot\/cpu\/x86\/bytes_x86.hpp","additions":2,"deletions":26,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"utilities\/byteswap.hpp\"\n@@ -144,10 +143,0 @@\n-\n-#ifdef VM_LITTLE_ENDIAN\n-  static inline u2 swap_u2(u2 x) { return byteswap<u2>(x); }\n-  static inline u4 swap_u4(u4 x) { return byteswap<u4>(x); }\n-  static inline u8 swap_u8(u8 x) { return byteswap<u8>(x); }\n-#else\n-  static inline u2 swap_u2(u2 x) { return x; }\n-  static inline u4 swap_u4(u4 x) { return x; }\n-  static inline u8 swap_u8(u8 x) { return x; }\n-#endif\n","filename":"src\/hotspot\/cpu\/zero\/bytes_zero.hpp","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,2 @@\n-#include \"utilities\/bytes.hpp\"\n+#include \"utilities\/byteswap.hpp\"\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -37,3 +38,3 @@\n-# define bigendian_16(x) Bytes::swap_u2(x)\n-# define bigendian_32(x) Bytes::swap_u4(x)\n-# define bigendian_64(x) Bytes::swap_u8(x)\n+# define bigendian_16(x) byteswap<u2>(x)\n+# define bigendian_32(x) byteswap<u4>(x)\n+# define bigendian_64(x) byteswap<u8>(x)\n","filename":"src\/hotspot\/share\/jfr\/utilities\/jfrBigEndian.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -45,2 +45,1 @@\n-struct CanByteswapImpl final\n-    : public std::integral_constant<bool, (std::is_integral<T>::value && sizeof(T) <= 8)> {};\n+using CanByteswapImpl = std::integral_constant<bool, (std::is_integral<T>::value && sizeof(T) <= 8)>;\n","filename":"src\/hotspot\/share\/utilities\/byteswap.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}