{"files":[{"patch":"@@ -51,5 +51,5 @@\n-        Recording recording = new Recording();\n-        recording.enable(EVENT_NAME);\n-        recording.start();\n-        System.loadLibrary(\"awt\");\n-        recording.stop();\n+        try (Recording recording = new Recording()) {\n+            recording.enable(EVENT_NAME);\n+            recording.start();\n+            System.loadLibrary(\"awt\");\n+            recording.stop();\n@@ -57,8 +57,9 @@\n-        List<String> expectedLibs = getExpectedLibs();\n-        for (RecordedEvent event : Events.fromRecording(recording)) {\n-            System.out.println(\"Event:\" + event);\n-            String lib = Events.assertField(event, \"name\").notEmpty().getValue();\n-            Events.assertField(event, \"success\");\n-            for (String expectedLib : new ArrayList<>(expectedLibs)) {\n-                if (lib.contains(expectedLib)) {\n-                    expectedLibs.remove(expectedLib);\n+            List<String> expectedLibs = getExpectedLibs();\n+            for (RecordedEvent event : Events.fromRecording(recording)) {\n+                System.out.println(\"Event:\" + event);\n+                String lib = Events.assertField(event, \"name\").notEmpty().getValue();\n+                Events.assertField(event, \"success\");\n+                for (String expectedLib : new ArrayList<>(expectedLibs)) {\n+                    if (lib.contains(expectedLib)) {\n+                        expectedLibs.remove(expectedLib);\n+                    }\n@@ -67,0 +68,1 @@\n+            assertTrue(expectedLibs.isEmpty(), \"Missing libraries:\" + expectedLibs.stream().collect(Collectors.joining(\", \")));\n@@ -68,1 +70,0 @@\n-        assertTrue(expectedLibs.isEmpty(), \"Missing libraries:\" + expectedLibs.stream().collect(Collectors.joining(\", \")));\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestNativeLibraryLoadEvent.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"}]}