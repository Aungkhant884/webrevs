{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -224,1 +224,0 @@\n-    private static ColorModel RGBdefault;\n@@ -243,7 +242,5 @@\n-        if (RGBdefault == null) {\n-            RGBdefault = new DirectColorModel(32,\n-                                              0x00ff0000,       \/\/ Red\n-                                              0x0000ff00,       \/\/ Green\n-                                              0x000000ff,       \/\/ Blue\n-                                              0xff000000        \/\/ Alpha\n-                                              );\n+        interface RGBdefault {\n+            ColorModel INSTANCE = new DirectColorModel(32, 0x00ff0000,  \/\/ Red\n+                                                           0x0000ff00,  \/\/ Green\n+                                                           0x000000ff,  \/\/ Blue\n+                                                           0xff000000); \/\/ Alpha\n@@ -251,1 +248,1 @@\n-        return RGBdefault;\n+        return RGBdefault.INSTANCE;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/image\/ColorModel.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,70 @@\n+\/*\n+ * Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.image.ColorModel;\n+import java.util.Collections;\n+import java.util.IdentityHashMap;\n+import java.util.Map;\n+import java.util.concurrent.CountDownLatch;\n+\n+\/**\n+ * @test\n+ * @bug 8299772\n+ * @summary \"ColorModel.getRGBdefault()\" should always return the same object\n+ *\/\n+public final class RGBdefaultSingleton {\n+\n+    private static volatile boolean failed;\n+    private static final Map<ColorModel, ?> map =\n+            Collections.synchronizedMap(new IdentityHashMap<>(1));\n+\n+    public static void main(String[] args) throws Exception {\n+        Thread[] ts = new Thread[10];\n+        CountDownLatch latch = new CountDownLatch(ts.length);\n+        for (int i = 0; i < ts.length; i++) {\n+            ts[i] = new Thread(() -> {\n+                latch.countDown();\n+                try {\n+                    ColorModel cm;\n+                    latch.await();\n+                    cm = ColorModel.getRGBdefault();\n+                    map.put(cm, null);\n+                } catch (Throwable t) {\n+                    t.printStackTrace();\n+                    failed = true;\n+                }\n+            });\n+        }\n+        for (Thread t : ts) {\n+            t.start();\n+        }\n+        for (Thread t : ts) {\n+            t.join();\n+        }\n+        if (failed) {\n+            throw new RuntimeException(\"Unexpected exception\");\n+        } else if (map.size() != 1) {\n+            throw new RuntimeException(\"The size of the map != 1\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/image\/ColorModel\/RGBdefaultSingleton.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"added"}]}