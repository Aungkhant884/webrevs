{"files":[{"patch":"@@ -600,0 +600,7 @@\n+     * <p> A package {@code p} opened to module {@code M} means that code in\n+     * {@code M} can do deep reflection on all types in the package.\n+     * Further, if {@code M} reads this module, it can obtain a\n+     * {@link java.lang.invoke.MethodHandles.Lookup Lookup} object that is allowed to\n+     * {@link java.lang.invoke.MethodHandles.Lookup#defineClass(byte[]) define classes}\n+     * in package {@code p}. <\/p>\n+     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Module.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -235,0 +235,6 @@\n+     * <p>\n+     * The {@code Lookup} object returned by this method is allowed to\n+     * {@linkplain Lookup#defineClass(byte[]) define classes} in the runtime package\n+     * of {@code targetClass}. Extreme caution should be taken when opening a package\n+     * to another module as such defined classes have the same full privilege\n+     * access as other members in the target module.\n@@ -854,1 +860,1 @@\n-     * and create a new {@code Lookup} with <a href=\"#privacc\">private access<\/a>\n+     * and produce a new {@code Lookup} with <a href=\"#privacc\">private access<\/a>\n@@ -872,0 +878,6 @@\n+     * <p>\n+     * The {@code Lookup} object returned by {@code privateLookupIn} is allowed to\n+     * {@linkplain Lookup#defineClass(byte[]) define classes} in the runtime package\n+     * of {@code T}. Extreme caution should be taken when opening a package\n+     * to another module as such defined classes have the same full privilege\n+     * access as other members in {@code M2}.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"}]}