{"files":[{"patch":"@@ -999,1 +999,1 @@\n-                Type(mtype.getReturnType()),\n+                m.name != names.init ? Type(mtype.getReturnType()) : null,\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/tree\/TreeMaker.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050\n+ * @bug 7073631 7159445 7156633 8028235 8065753 8205418 8205913 8228451 8237041 8253584 8246774 8256411 8256149 8259050 8266436\n@@ -1761,0 +1761,17 @@\n+    @Test \/\/JDK-8266436\n+    void testSyntheticConstructorReturnType() throws IOException {\n+        String code = \"\"\"\n+                      package test;\n+                      public class Test {\n+                      }\n+                      \"\"\";\n+\n+        JavacTaskImpl ct = (JavacTaskImpl) tool.getTask(null, fm, null,\n+                null, null, Arrays.asList(new MyFileObject(code)));\n+        CompilationUnitTree cut = ct.parse().iterator().next();\n+        ct.analyze();\n+        ClassTree clazz = (ClassTree) cut.getTypeDecls().get(0);\n+        MethodTree constr = (MethodTree) clazz.getMembers().get(0);\n+        assertEquals(\"expected null as constructor return type\", constr.getReturnType(), null);\n+    }\n+\n@@ -1819,4 +1836,1 @@\n-        if (o1 != null && o2 != null && !o1.equals(o2)) {\n-            fail(message);\n-        }\n-        if (o1 == null && o2 != null) {\n+        if (!Objects.equals(o1, o2)) {\n","filename":"test\/langtools\/tools\/javac\/parser\/JavacParserTest.java","additions":19,"deletions":5,"binary":false,"changes":24,"status":"modified"}]}