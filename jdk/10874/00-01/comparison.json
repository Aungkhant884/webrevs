{"files":[{"patch":"@@ -176,1 +176,1 @@\n-        var tmp = jarFileURL = new URL(spec.substring(0, separator++));\n+        var _unused = jarFileURL = new URL(spec.substring(0, separator++));\n@@ -185,1 +185,1 @@\n-            var rtmp = jarFileURL = new URL(jarFileURL, \"#runtime\");\n+            var _unused2 = jarFileURL = new URL(jarFileURL, \"#runtime\");\n","filename":"src\/java.base\/share\/classes\/java\/net\/JarURLConnection.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1136,1 +1136,1 @@\n-        return URL.fromURI(this, null);\n+        return URL.of(this, null);\n","filename":"src\/java.base\/share\/classes\/java\/net\/URI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -485,1 +485,1 @@\n-     * Use {@link #fromURI(URI, URLStreamHandler)} to construct an instance of URL\n+     * Use {@link #of(URI, URLStreamHandler)} to construct an instance of URL\n@@ -679,1 +679,1 @@\n-     * Use {@link #fromURI(URI, URLStreamHandler)} to construct an instance of URL\n+     * Use {@link #of(URI, URLStreamHandler)} to construct an instance of URL\n@@ -852,1 +852,1 @@\n-    public static URL fromURI(URI uri, URLStreamHandler streamHandler)\n+    public static URL of(URI uri, URLStreamHandler streamHandler)\n@@ -891,1 +891,1 @@\n-        if (\"url\".equals(protocol)) {;\n+        if (\"url\".equalsIgnoreCase(protocol)) {;\n@@ -1834,1 +1834,1 @@\n-            var tmp = replacementURL = new URL(urlString);\n+            var _unused = replacementURL = new URL(urlString);\n","filename":"src\/java.base\/share\/classes\/java\/net\/URL.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -247,1 +247,1 @@\n-            var tmp = NULL_URL = new URL(\"http:\/\/null.oracle.com\/\");\n+            var _unused = NULL_URL = new URL(\"http:\/\/null.oracle.com\/\");\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/JceSecurity.java.template","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -610,1 +610,1 @@\n-                var tmp = url = new URL(base, ParseUtil.encodePath(name, false));\n+                var _unused = url = new URL(base, ParseUtil.encodePath(name, false));\n@@ -647,1 +647,1 @@\n-                var tmp = url = new URL(base, ParseUtil.encodePath(name, false));\n+                var _unused = url = new URL(base, ParseUtil.encodePath(name, false));\n@@ -878,1 +878,1 @@\n-                var tmp = url = new URL(getBaseURL(), ParseUtil.encodePath(nm, false));\n+                var _unused = url = new URL(getBaseURL(), ParseUtil.encodePath(nm, false));\n@@ -1010,1 +1010,1 @@\n-                        var tmp = url = new URL(csu, jarName);\n+                        var _unused = url = new URL(csu, jarName);\n@@ -1238,1 +1238,1 @@\n-            var tmp = normalizedBase = new URL(getBaseURL(), \".\");\n+            var _unused = normalizedBase = new URL(getBaseURL(), \".\");\n@@ -1258,1 +1258,1 @@\n-                var tmp = url = new URL(getBaseURL(), ParseUtil.encodePath(name, false));\n+                var _unused = url = new URL(getBaseURL(), ParseUtil.encodePath(name, false));\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/loader\/URLClassPath.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -4000,3 +4000,1 @@\n-    private static URL newURL(String spec)\n-            throws MalformedURLException\n-    {\n+    private static URL newURL(String spec) throws MalformedURLException {\n@@ -4007,3 +4005,1 @@\n-    private static URL newURL(URL context, String spec)\n-            throws MalformedURLException\n-    {\n+    private static URL newURL(URL context, String spec) throws MalformedURLException {\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -187,1 +187,1 @@\n-                var tmp = url = new URL(encodedGetReq.toString());\n+                var _unused = url = new URL(encodedGetReq.toString());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSP.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-                    var tmp = url = new URL(arg);\n+                    var _unused = url = new URL(arg);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/KeyStoreUtil.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-                    var tmp = passURL = new URL(storePassURL);\n+                    var _unused = passURL = new URL(storePassURL);\n@@ -122,1 +122,1 @@\n-                    var tmp = passURL = new URL(policyUrl, storePassURL);\n+                    var _unused = passURL = new URL(policyUrl, storePassURL);\n@@ -144,1 +144,1 @@\n-                    var tmp = keyStoreUrl = new URL(keyStoreName);\n+                    var _unused = keyStoreUrl = new URL(keyStoreName);\n@@ -152,1 +152,1 @@\n-                    var tmp = keyStoreUrl = new URL(policyUrl, keyStoreName);\n+                    var _unused = keyStoreUrl = new URL(policyUrl, keyStoreName);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/PolicyUtil.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-            var tmp = ru = new URL(\"ftp\", host, u.getFile() +\n+            var _unused = ru = new URL(\"ftp\", host, u.getFile() +\n","filename":"src\/java.base\/unix\/classes\/sun\/net\/www\/protocol\/file\/Handler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -112,1 +112,1 @@\n-                var tmp = egdUrl = new URL(egdSource);\n+                var _unused = egdUrl = new URL(egdSource);\n","filename":"src\/java.base\/unix\/classes\/sun\/security\/provider\/NativePRNG.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -98,1 +98,1 @@\n-            var tmp = newurl = new URL(\"ftp\", host, file +\n+            var _unused = newurl = new URL(\"ftp\", host, file +\n","filename":"src\/java.base\/windows\/classes\/sun\/net\/www\/protocol\/file\/Handler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-                var tmp = url = new URL(\"file\", \"\", \"\/\/\" + host + url.getPath());\n+                var _unused = url = new URL(\"file\", \"\", \"\/\/\" + host + url.getPath());\n","filename":"src\/java.base\/windows\/classes\/sun\/net\/www\/protocol\/jar\/JarFileFactory.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -563,1 +563,1 @@\n-                            var tmp = themeDir = new URL(str.substring(0, str.lastIndexOf('\/'))+\"\/\");\n+                            var _unused = themeDir = new URL(str.substring(0, str.lastIndexOf('\/'))+\"\/\");\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/Metacity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-                            var tmp = imageURL =\n+                            var _unused = imageURL =\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/SplashScreen.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -799,1 +799,1 @@\n-                    var tmp = page = new URL(loc);\n+                    var _unused = page = new URL(loc);\n@@ -802,1 +802,1 @@\n-                    var tmp = page = new URL(page, loc);\n+                    var _unused = page = new URL(page, loc);\n@@ -1955,1 +1955,1 @@\n-                            var tmp = u = new URL(JEditorPane.this.getPage(), href);\n+                            var _unused = u = new URL(JEditorPane.this.getPage(), href);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JEditorPane.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -520,1 +520,1 @@\n-            var tmp = actionURL = (action == null)\n+            var _unused = actionURL = (action == null)\n@@ -527,1 +527,1 @@\n-                var tmp2 = actionURL = new URL(actionURL + \"?\" + query);\n+                var _unused2 = actionURL = new URL(actionURL + \"?\" + query);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/FormView.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-                var tmp = src = new URL(base, srcAtt);\n+                var _unused = src = new URL(base, srcAtt);\n@@ -378,1 +378,1 @@\n-            var tmp = src = new URL(base, srcAtt);\n+            var _unused = src = new URL(base, srcAtt);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/FrameView.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4127,1 +4127,1 @@\n-                var tmp = url = new URL(base, href);\n+                var _unused = url = new URL(base, href);\n@@ -4131,1 +4131,1 @@\n-                    var tmp = url = new URL(href);\n+                    var _unused = url = new URL(href);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLDocument.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -973,1 +973,1 @@\n-                var tmp = u = new URL(base, href);\n+                var _unused = u = new URL(base, href);\n@@ -984,1 +984,1 @@\n-                        var tmp2 = u = new URL(base, baseFile + href);\n+                        var _unused2 = u = new URL(base, baseFile + href);\n@@ -1019,1 +1019,1 @@\n-                    var tmp = u = new URL(doc.getBase(), this.href);\n+                    var _unused = u = new URL(doc.getBase(), this.href);\n@@ -1033,1 +1033,1 @@\n-                    var tmp = u = new URL(doc.getBase(), href);\n+                    var _unused = u = new URL(doc.getBase(), href);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/HTMLEditorKit.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -164,3 +164,1 @@\n-    private static URL newURL(URL context, String spec)\n-            throws MalformedURLException\n-    {\n+    private static URL newURL(URL context, String spec) throws MalformedURLException {\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/image\/URLImageSource.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-                var tmp = baseURL = new URL(documentURL, att);\n+                var _unused = baseURL = new URL(documentURL, att);\n@@ -117,1 +117,1 @@\n-                    var tmp = baseURL = new URL(documentURL, file.substring(0, i + 1));\n+                    var _unused = baseURL = new URL(documentURL, file.substring(0, i + 1));\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLetContent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1609,1 +1609,1 @@\n-                    var tmp = url = new URL(systemId);\n+                    URL _unused = url = new URL(systemId);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TransformerFactoryImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -525,1 +525,1 @@\n-                    var tmp = url = new URL(systemId);\n+                    URL _unused = url = new URL(systemId);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TransformerImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-                var tmp = url = new URL(base, uri);\n+                URL _unused = url = new URL(base, uri);\n@@ -230,1 +230,1 @@\n-                var tmp = url = new URL(uri);\n+                URL _unused = url = new URL(uri);\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/catalog\/BaseEntry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-                        var tmp = baseURI = new URL(systemId);\n+                        URL _unused = baseURI = new URL(systemId);\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/catalog\/CatalogImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -159,1 +159,1 @@\n-                    var url = new URL(uri);\n+                    URL url = new URL(uri);\n@@ -165,1 +165,1 @@\n-                    var url = (href.length() == 0 ? baseURL : new URL(baseURL, uri));\n+                    URL url = (href.length() == 0 ? baseURL : new URL(baseURL, uri));\n@@ -224,1 +224,1 @@\n-                var result = new URL(is.getSystemId()).openStream();\n+                InputStream result = new URL(is.getSystemId()).openStream();\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/catalog\/CatalogResolverImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2257,1 +2257,1 @@\n-                        var tmp = url = new URL(keyStoreName);\n+                        var _unused = url = new URL(keyStoreName);\n","filename":"src\/jdk.jartool\/share\/classes\/sun\/security\/tools\/jarsigner\/Main.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -462,1 +462,1 @@\n-                            var tmp = new URL(docrootParent);\n+                            var _unused = new URL(docrootParent);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlOptions.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -582,1 +582,1 @@\n-            var tmp = new URL(urlCandidate);\n+            var _unused = new URL(urlCandidate);\n@@ -638,1 +638,1 @@\n-                            var tmp = target = new URL(base, loc);\n+                            var _unused = target = new URL(base, loc);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Extern.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3081,1 +3081,1 @@\n-                            var tmp = url = new URL(filename);\n+                            var _unused = url = new URL(filename);\n@@ -3097,1 +3097,1 @@\n-                                var tmp = url = new URL(filename);\n+                                var _unused = url = new URL(filename);\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -188,3 +188,2 @@\n-                    return URL.fromURI(\n-                                   new URI(\"jshell\", null, \"\/\" + name, null),\n-                                   new ResourceURLStreamHandler(name));\n+                    return URL.of(new URI(\"jshell\", null, \"\/\" + name, null),\n+                                  new ResourceURLStreamHandler(name));\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/DefaultLoaderDelegate.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @library \/test\/lib\n@@ -41,0 +42,1 @@\n+import java.util.Random;\n@@ -43,0 +45,1 @@\n+import jdk.test.lib.RandomFactory;\n@@ -52,0 +55,2 @@\n+    static final Random RAND = RandomFactory.getRandom();\n+\n@@ -62,0 +67,9 @@\n+    static URI uriWithUrlPrefix(URI uri) {\n+        return URI.create(stringWithUrlPrefix(uri.toString()));\n+    }\n+\n+    static String stringWithUrlPrefix(String uriStr) {\n+        if (uriStr.regionMatches(true, 0, \"url:\", 0, 4)) return uriStr;\n+        return RAND.nextBoolean() ? \"url:\" + uriStr : \"Url:\" + uriStr;\n+    }\n+\n@@ -65,2 +79,4 @@\n-        if (uriStr.startsWith(\"url:\")) return null;\n-        var urlUriStr = \"url:\" + uriStr;\n+\n+        var urlUriStr = stringWithUrlPrefix(uriStr);\n+        if (uriStr.equals(urlUriStr)) return null;\n+\n@@ -133,5 +149,5 @@\n-        var unoscheme = URI.create(\"url:http\");\n-        var uunknown = URI.create(\"url:unknown:\/\/\/foo\/bar\");\n-        var uopaque = URI.create(\"url:opaque:opaque-path\");\n-        var ujrt = URI.create(\"url:jrt:\/java.base\/java.lang.Integer.class\");\n-        var ufile = URI.create(\"url:file:\/\");\n+        var unoscheme = uriWithUrlPrefix(noscheme);\n+        var uunknown = uriWithUrlPrefix(unknown);\n+        var uopaque = uriWithUrlPrefix(opaque);\n+        var ujrt = uriWithUrlPrefix(jrt);\n+        var ufile = uriWithUrlPrefix(file);\n@@ -139,14 +155,14 @@\n-        assertThrows(NullPointerException.class, () -> URL.fromURI(null, null));\n-        assertThrows(NullPointerException.class, () -> URL.fromURI(null, handler));\n-        assertThrows(IllegalArgumentException.class, () -> URL.fromURI(noscheme, null));\n-        assertThrows(IllegalArgumentException.class, () -> URL.fromURI(noscheme, handler));\n-        assertThrows(IllegalArgumentException.class, () -> URL.fromURI(jrt, handler));\n-        assertThrows(IllegalArgumentException.class, () -> URL.fromURI(file, handler));\n-        assertThrows(IllegalArgumentException.class, () -> URL.fromURI(ujrt, handler));\n-        assertThrows(IllegalArgumentException.class, () -> URL.fromURI(ufile, handler));\n-        assertThrows(MalformedURLException.class, () -> URL.fromURI(unknown, null));\n-        assertThrows(MalformedURLException.class, () -> URL.fromURI(opaque, null));\n-        assertThrows(MalformedURLException.class, () -> URL.fromURI(uunknown, null));\n-        assertThrows(MalformedURLException.class, () -> URL.fromURI(uopaque, null));\n-        assertThrows(MalformedURLException.class, () -> URL.fromURI(unoscheme, null));\n-        assertThrows(MalformedURLException.class, () -> URL.fromURI(unoscheme, handler));\n+        assertThrows(NullPointerException.class, () -> URL.of(null, null));\n+        assertThrows(NullPointerException.class, () -> URL.of(null, handler));\n+        assertThrows(IllegalArgumentException.class, () -> URL.of(noscheme, null));\n+        assertThrows(IllegalArgumentException.class, () -> URL.of(noscheme, handler));\n+        assertThrows(IllegalArgumentException.class, () -> URL.of(jrt, handler));\n+        assertThrows(IllegalArgumentException.class, () -> URL.of(file, handler));\n+        assertThrows(IllegalArgumentException.class, () -> URL.of(ujrt, handler));\n+        assertThrows(IllegalArgumentException.class, () -> URL.of(ufile, handler));\n+        assertThrows(MalformedURLException.class, () -> URL.of(unknown, null));\n+        assertThrows(MalformedURLException.class, () -> URL.of(opaque, null));\n+        assertThrows(MalformedURLException.class, () -> URL.of(uunknown, null));\n+        assertThrows(MalformedURLException.class, () -> URL.of(uopaque, null));\n+        assertThrows(MalformedURLException.class, () -> URL.of(unoscheme, null));\n+        assertThrows(MalformedURLException.class, () -> URL.of(unoscheme, handler));\n@@ -163,1 +179,1 @@\n-        URL url = URL.fromURI(uri, handler);\n+        URL url = URL.of(uri, handler);\n@@ -169,1 +185,1 @@\n-                checkNoHandler(urlInput, uri, URL.fromURI(urlURI, null));\n+                checkNoHandler(urlInput, uri, URL.of(urlURI, null));\n@@ -193,1 +209,1 @@\n-        URL url = URL.fromURI(uri, handler);\n+        URL url = URL.of(uri, handler);\n@@ -201,1 +217,1 @@\n-                checkCustomHandler(urlInput, uri, URL.fromURI(urlURI, handler), handler);\n+                checkCustomHandler(urlInput, uri, URL.of(urlURI, handler), handler);\n@@ -235,1 +251,1 @@\n-            URL url = URL.fromURI(uri, handler);\n+            URL url = URL.of(uri, handler);\n@@ -268,1 +284,1 @@\n-            if (isFileBased  && authority == null) {\n+            if (isFileBased && authority == null) {\n","filename":"test\/jdk\/java\/net\/URL\/URLFromURITest.java","additions":43,"deletions":27,"binary":false,"changes":70,"status":"modified"}]}