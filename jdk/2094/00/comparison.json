{"files":[{"patch":"@@ -1,36 +0,0 @@\n-<!--\n- Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n- DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n- This code is free software; you can redistribute it and\/or modify it\n- under the terms of the GNU General Public License version 2 only, as\n- published by the Free Software Foundation.\n-\n- This code is distributed in the hope that it will be useful, but WITHOUT\n- ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- version 2 for more details (a copy is included in the LICENSE file that\n- accompanied this code).\n-\n- You should have received a copy of the GNU General Public License version\n- 2 along with this work; if not, write to the Free Software Foundation,\n- Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-\n- Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- or visit www.oracle.com if you need additional information or have any\n- questions.\n--->\n-\n-<html>\n-<body>\n-\n-Verify that scaled components are rendered smoothly to image.\n-\n-1. Run the test.\n-2. Check that Selected and Deselected JCheckBox icons are drawn smoothly.\n-If so, press PASS, else press FAIL.\n-\n-<applet  code=\"bug8032667.class\" width=400 height=400><\/applet>\n-\n-<\/body>\n-<\/html>\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667.html","additions":0,"deletions":36,"binary":false,"changes":36,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021 Oracle and\/or its affiliates. All rights reserved.\n@@ -23,0 +23,1 @@\n+\n@@ -26,1 +27,1 @@\n-import java.awt.Graphics;\n+import java.awt.FlowLayout;\n@@ -28,0 +29,1 @@\n+import java.awt.Graphics;\n@@ -29,0 +31,2 @@\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n@@ -30,1 +34,4 @@\n-import javax.swing.JApplet;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import javax.swing.BoxLayout;\n+import javax.swing.JButton;\n@@ -33,0 +40,4 @@\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n@@ -34,0 +45,1 @@\n+import javax.swing.text.JTextComponent;\n@@ -38,1 +50,1 @@\n- * @run applet\/manual=yesno bug8032667.html\n+ * @run main bug8032667\n@@ -40,1 +52,1 @@\n-public class bug8032667 extends JApplet {\n+public class bug8032667 {\n@@ -43,1 +55,1 @@\n-    static final int width = 130;\n+    static final int width = 100;\n@@ -47,0 +59,37 @@\n+    private static JFrame frame;\n+\n+    private static volatile boolean passed = false;\n+    private static final CountDownLatch latch = new CountDownLatch(1);\n+\n+    public static final String INSTRUCTIONS = \"INSTRUCTIONS:\\n\\n\"\n+            + \"  Verify that scaled components are rendered smoothly to image.\\n\\n\"\n+            + \"  1. Run the test.\\n\"\n+            + \"  2. Check that Selected and Deselected JCheckBox icons are drawn smoothly.\\n\\n\"\n+            + \"  If so, press PASS, else press FAIL.\\n\";\n+\n+    public static void main(String args[]) throws Exception {\n+        try {\n+            SwingUtilities.invokeLater(() -> createTestGUI());\n+\n+            if (!latch.await(5, TimeUnit.MINUTES)) {\n+                throw new RuntimeException(\"Test has timed out!\");\n+            }\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed!\");\n+            }\n+        } finally {\n+              SwingUtilities.invokeAndWait(() -> {\n+                  if (frame != null) {\n+                      frame.dispose();\n+                  }\n+              });\n+        }\n+    }\n+\n+    private static void createTestGUI() {\n+        JPanel panel = new JPanel();\n+        BoxLayout layout = new BoxLayout(panel, BoxLayout.Y_AXIS);\n+        panel.setLayout(layout);\n+\n+        frame = new JFrame(\"bug8032667\");\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n@@ -48,3 +97,2 @@\n-    @Override\n-    public void init() {\n-        SwingUtilities.invokeLater(new Runnable() {\n+        final Image image1 = getImage(getCheckBox(\"Deselected\", false));\n+        final Image image2 = getImage(getCheckBox(\"Selected\", true));\n@@ -52,0 +100,1 @@\n+        Canvas canvas = new Canvas() {\n@@ -53,1 +102,8 @@\n-            public void run() {\n+            public void paint(Graphics g) {\n+                super.paint(g);\n+                g.drawImage(image1, 0, 0, scaledWidth, scaledHeight, this);\n+                g.drawImage(image2, 0, scaledHeight + 5,\n+                        scaledWidth, scaledHeight, this);\n+            }\n+        };\n+        panel.add(canvas);\n@@ -55,2 +111,4 @@\n-                final Image image1 = getImage(getCheckBox(\"Deselected\", false));\n-                final Image image2 = getImage(getCheckBox(\"Selected\", true));\n+        frame.getContentPane().add(panel, BorderLayout.CENTER);\n+        frame.setSize(200, 300);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n@@ -58,1 +116,4 @@\n-                Canvas canvas = new Canvas() {\n+        JTextComponent textComponent = new JTextArea(INSTRUCTIONS);\n+        textComponent.setEditable(false);\n+        panel.add(textComponent, BorderLayout.CENTER);\n+        frame.getContentPane().add(panel, BorderLayout.SOUTH);\n@@ -60,8 +121,16 @@\n-                    @Override\n-                    public void paint(Graphics g) {\n-                        super.paint(g);\n-                        g.drawImage(image1, 0, 0, scaledWidth, scaledHeight, this);\n-                        g.drawImage(image2, 0, scaledHeight + 5,\n-                                scaledWidth, scaledHeight, this);\n-                    }\n-                };\n+        JPanel buttonsPanel = new JPanel(new FlowLayout());\n+        JButton passButton = new JButton(\"Pass\");\n+        passButton.addActionListener((e) -> {\n+            System.out.println(\"Test passed!\");\n+            passed = true;\n+            latch.countDown();\n+        });\n+        JButton failsButton = new JButton(\"Fail\");\n+        failsButton.addActionListener((e) -> {\n+            passed = false;\n+            latch.countDown();\n+        });\n+\n+        buttonsPanel.add(passButton);\n+        buttonsPanel.add(failsButton);\n+        panel.add(buttonsPanel, BorderLayout.SOUTH);\n@@ -69,1 +138,5 @@\n-                getContentPane().add(canvas, BorderLayout.CENTER);\n+        frame.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowClosing(WindowEvent e) {\n+                latch.countDown();\n+                frame.dispose();\n@@ -72,0 +145,3 @@\n+\n+        frame.getContentPane().add(panel);\n+        frame.pack();\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/8032667\/bug8032667.java","additions":98,"deletions":22,"binary":false,"changes":120,"status":"modified"}]}