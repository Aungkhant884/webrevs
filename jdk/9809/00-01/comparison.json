{"files":[{"patch":"@@ -96,0 +96,1 @@\n+  MutexLocker ml(current, Module_lock);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -266,1 +266,1 @@\n-    _version(version),\n+    _version(nullptr),\n@@ -287,1 +287,1 @@\n-  Symbol::maybe_increment_refcount(_version);\n+  set_version(version);\n@@ -359,4 +359,6 @@\n-    ResourceMark rm;\n-    const char* str = name->as_C_string();\n-    log_info(module, unload)(\"unloading module %s\", str);\n-    log_debug(module)(\"ModuleEntryTable: deleting module: %s\", str);\n+    if (log_is_enabled(Info, module, unload) || log_is_enabled(Debug, module)) {\n+      ResourceMark rm;\n+      const char* str = name->as_C_string();\n+      log_info(module, unload)(\"unloading module %s\", str);\n+      log_debug(module)(\"ModuleEntryTable: deleting module: %s\", str);\n+    }\n@@ -677,0 +679,1 @@\n+  assert_locked_or_safepoint(Module_lock);\n@@ -684,0 +687,1 @@\n+  assert_locked_or_safepoint(Module_lock);\n@@ -691,0 +695,1 @@\n+  assert_locked_or_safepoint(Module_lock);\n@@ -709,0 +714,1 @@\n+  assert_locked_or_safepoint(Module_lock);\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.cpp","additions":12,"deletions":6,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-\/\/ data structure.\n+\/\/ data structure.  This lock must be taken on all accesses to either table.\n@@ -209,1 +209,1 @@\n-                    Symbol::compute_hash, Symbol::compare> _table;\n+                    Symbol::compute_hash> _table;\n","filename":"src\/hotspot\/share\/classfile\/moduleEntry.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -304,4 +304,0 @@\n-  static bool compare(const Symbol* const& name, const Symbol* const& name2) {\n-    return name == name2;\n-  }\n-\n","filename":"src\/hotspot\/share\/oops\/symbol.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}