{"files":[{"patch":"@@ -119,1 +119,1 @@\n-  } else if (!UseG1GC && !UseShenandoahGC) {\n+  } else if (!UseG1GC && !UseShenandoahGC && !UseZGC) {\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupConfig.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-#include \"gc\/z\/zMarkCache.inline.hpp\"\n+#include \"gc\/z\/zMarkContext.inline.hpp\"\n@@ -282,1 +282,1 @@\n-void ZMark::mark_and_follow(ZMarkCache* cache, ZMarkStackEntry entry) {\n+void ZMark::mark_and_follow(ZMarkContext* context, ZMarkStackEntry entry) {\n@@ -314,1 +314,1 @@\n-    cache->inc_live(page, aligned_size);\n+    context->inc_live(page, aligned_size);\n@@ -322,1 +322,5 @@\n-      follow_object(ZOop::from_address(addr), finalizable);\n+      const oop obj = ZOop::from_address(addr);\n+      follow_object(obj, finalizable);\n+\n+      \/\/ Try deduplicate\n+      context->try_deduplicate(obj);\n@@ -328,1 +332,1 @@\n-bool ZMark::drain(ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, ZMarkCache* cache, T* timeout) {\n+bool ZMark::drain(ZMarkContext* context, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, T* timeout) {\n@@ -333,1 +337,1 @@\n-    mark_and_follow(cache, entry);\n+    mark_and_follow(context, entry);\n@@ -499,1 +503,1 @@\n-void ZMark::work_without_timeout(ZMarkCache* cache, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks) {\n+void ZMark::work_without_timeout(ZMarkContext* context, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks) {\n@@ -504,1 +508,1 @@\n-    if (!drain(stripe, stacks, cache, &no_timeout)) {\n+    if (!drain(context, stripe, stacks, &no_timeout)) {\n@@ -564,1 +568,1 @@\n-void ZMark::work_with_timeout(ZMarkCache* cache, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, uint64_t timeout_in_micros) {\n+void ZMark::work_with_timeout(ZMarkContext* context, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, uint64_t timeout_in_micros) {\n@@ -569,1 +573,1 @@\n-    if (!drain(stripe, stacks, cache, &timeout)) {\n+    if (!drain(context, stripe, stacks, &timeout)) {\n@@ -585,1 +589,1 @@\n-  ZMarkCache cache(_stripes.nstripes());\n+  ZMarkContext context(_stripes.nstripes());\n@@ -590,1 +594,1 @@\n-    work_without_timeout(&cache, stripe, stacks);\n+    work_without_timeout(&context, stripe, stacks);\n@@ -592,1 +596,1 @@\n-    work_with_timeout(&cache, stripe, stacks, timeout_in_micros);\n+    work_with_timeout(&context, stripe, stacks, timeout_in_micros);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class ZMarkCache;\n+class ZMarkContext;\n@@ -67,1 +67,1 @@\n-  void mark_and_follow(ZMarkCache* cache, ZMarkStackEntry entry);\n+  void mark_and_follow(ZMarkContext* context, ZMarkStackEntry entry);\n@@ -69,1 +69,2 @@\n-  template <typename T> bool drain(ZMarkStripe* stripe,\n+  template <typename T> bool drain(ZMarkContext* context,\n+                                   ZMarkStripe* stripe,\n@@ -71,1 +72,0 @@\n-                                   ZMarkCache* cache,\n@@ -87,1 +87,1 @@\n-  void work_without_timeout(ZMarkCache* cache,\n+  void work_without_timeout(ZMarkContext* context,\n@@ -90,1 +90,1 @@\n-  void work_with_timeout(ZMarkCache* cache,\n+  void work_with_timeout(ZMarkContext* context,\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,29 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/z\/zMarkContext.hpp\"\n+\n+ZMarkContext::ZMarkContext(size_t nstripes) :\n+    _cache(nstripes),\n+    _string_dedup_requests() {}\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkContext.cpp","additions":29,"deletions":0,"binary":false,"changes":29,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef SHARE_GC_Z_ZMARKCONTEXT_HPP\n+#define SHARE_GC_Z_ZMARKCONTEXT_HPP\n+\n+#include \"gc\/z\/zMarkCache.hpp\"\n+#include \"gc\/shared\/stringdedup\/stringDedup.hpp\"\n+#include \"memory\/allocation.hpp\"\n+\n+class ZMarkContext : public StackObj {\n+private:\n+  ZMarkCache            _cache;\n+  StringDedup::Requests _string_dedup_requests;\n+\n+public:\n+  ZMarkContext(size_t nstripes);\n+\n+  void inc_live(ZPage* page, size_t bytes);\n+\n+  void try_deduplicate(oop obj);\n+};\n+\n+#endif \/\/ SHARE_GC_Z_ZMARKCONTEXT_HPP\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkContext.hpp","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef SHARE_GC_Z_ZMARKCONTEXT_INLINE_HPP\n+#define SHARE_GC_Z_ZMARKCONTEXT_INLINE_HPP\n+\n+#include \"classfile\/javaClasses.inline.hpp\"\n+#include \"gc\/z\/zMarkCache.inline.hpp\"\n+#include \"gc\/z\/zMarkContext.hpp\"\n+\n+inline void ZMarkContext::inc_live(ZPage* page, size_t bytes) {\n+  _cache.inc_live(page, bytes);\n+}\n+\n+inline void ZMarkContext::try_deduplicate(oop obj) {\n+  if (!StringDedup::is_enabled()) {\n+    \/\/ Not enabled\n+    return;\n+  }\n+\n+  if (!java_lang_String::is_instance_inlined(obj)) {\n+    \/\/ Not a String object\n+    return;\n+  }\n+\n+  if (java_lang_String::test_and_set_deduplication_requested(obj)) {\n+    \/\/ Already deduplicated\n+    return;\n+  }\n+\n+  \/\/ Request deduplication\n+  _string_dedup_requests.add(obj);\n+}\n+\n+#endif \/\/ SHARE_GC_Z_ZMARKCACHE_INLINE_HPP\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkContext.inline.hpp","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"},{"patch":"@@ -52,0 +52,13 @@\n+\/*\n+ * @test TestStringDeduplicationAgeThreshold\n+ * @summary Test string deduplication age threshold\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationAgeThreshold Z\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationAgeThreshold.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -52,0 +52,13 @@\n+\/*\n+ * @test TestStringDeduplicationFullGC\n+ * @summary Test string deduplication during full GC\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationFullGC Z\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationFullGC.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,0 +39,13 @@\n+\/*\n+ * @test TestStringDeduplicationInterned\n+ * @summary Test string deduplication of interned strings\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationInterned Z\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationInterned.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -52,0 +52,13 @@\n+\/*\n+ * @test TestStringDeduplicationPrintOptions\n+ * @summary Test string deduplication print options\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationPrintOptions Z\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationPrintOptions.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -52,0 +52,13 @@\n+\/*\n+ * @test TestStringDeduplicationTableResize\n+ * @summary Test string deduplication table resize\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationTableResize Z\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationTableResize.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -52,0 +52,13 @@\n+\/*\n+ * @test TestStringDeduplicationYoungGC\n+ * @summary Test string deduplication during young GC\n+ * @bug 8029075\n+ * @requires vm.gc.Z\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationYoungGC Z\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationYoungGC.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}