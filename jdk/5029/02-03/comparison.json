{"files":[{"patch":"@@ -27,0 +27,1 @@\n+#include \"classfile\/javaClasses.inline.hpp\"\n@@ -29,0 +30,1 @@\n+#include \"gc\/shared\/stringdedup\/stringDedup.hpp\"\n@@ -35,0 +37,1 @@\n+#include \"gc\/z\/zMarkCache.inline.hpp\"\n@@ -282,0 +285,20 @@\n+static void try_deduplicate(ZMarkContext* context, oop obj) {\n+  if (!StringDedup::is_enabled()) {\n+    \/\/ Not enabled\n+    return;\n+  }\n+\n+  if (!java_lang_String::is_instance_inlined(obj)) {\n+    \/\/ Not a String object\n+    return;\n+  }\n+\n+  if (java_lang_String::test_and_set_deduplication_requested(obj)) {\n+    \/\/ Already requested deduplication\n+    return;\n+  }\n+\n+  \/\/ Request deduplication\n+  context->string_dedup_requests()->add(obj);\n+}\n+\n@@ -314,1 +337,1 @@\n-    context->inc_live(page, aligned_size);\n+    context->cache()->inc_live(page, aligned_size);\n@@ -326,1 +349,1 @@\n-      context->try_deduplicate(obj);\n+      try_deduplicate(context, obj);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":25,"deletions":2,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+  ZMarkCache* cache();\n@@ -47,1 +48,0 @@\n-\n@@ -49,4 +49,1 @@\n-\n-  void inc_live(ZPage* page, size_t bytes);\n-\n-  void try_deduplicate(oop obj);\n+  StringDedup::Requests* string_dedup_requests();\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkContext.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,3 +29,0 @@\n-#include \"classfile\/javaClasses.inline.hpp\"\n-#include \"gc\/z\/zMarkCache.inline.hpp\"\n-\n@@ -40,0 +37,4 @@\n+inline ZMarkCache* ZMarkContext::cache() {\n+  return &_cache;\n+}\n+\n@@ -48,22 +49,2 @@\n-inline void ZMarkContext::inc_live(ZPage* page, size_t bytes) {\n-  _cache.inc_live(page, bytes);\n-}\n-\n-inline void ZMarkContext::try_deduplicate(oop obj) {\n-  if (!StringDedup::is_enabled()) {\n-    \/\/ Not enabled\n-    return;\n-  }\n-\n-  if (!java_lang_String::is_instance_inlined(obj)) {\n-    \/\/ Not a String object\n-    return;\n-  }\n-\n-  if (java_lang_String::test_and_set_deduplication_requested(obj)) {\n-    \/\/ Already deduplicated\n-    return;\n-  }\n-\n-  \/\/ Request deduplication\n-  _string_dedup_requests.add(obj);\n+inline StringDedup::Requests* ZMarkContext::string_dedup_requests() {\n+  return &_string_dedup_requests;\n","filename":"src\/hotspot\/share\/gc\/z\/zMarkContext.inline.hpp","additions":6,"deletions":25,"binary":false,"changes":31,"status":"modified"}]}