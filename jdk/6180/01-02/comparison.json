{"files":[{"patch":"@@ -30,0 +30,1 @@\n+import java.awt.RenderingHints;\n@@ -32,0 +33,1 @@\n+import java.awt.font.TextLayout;\n@@ -47,1 +49,0 @@\n- * @compile WindowIconUpdateOnDPIChangingTest.java\n@@ -53,1 +54,1 @@\n-    private static volatile CountDownLatch countDownLatch;\n+    private static final CountDownLatch countDownLatch = new CountDownLatch(1);\n@@ -76,1 +77,0 @@\n-        countDownLatch = new CountDownLatch(1);\n@@ -78,2 +78,4 @@\n-        countDownLatch.await(15, TimeUnit.MINUTES);\n-        if (!testResult) {\n+        if (!countDownLatch.await(15, TimeUnit.MINUTES)) {\n+            frame.dispose();\n+            throw new RuntimeException(\"Timed out!\");\n+        } else if (!testResult) {\n@@ -96,1 +98,2 @@\n-        frame.setIconImages(IntStream.rangeClosed(16, 32).mapToObj(WindowIconUpdateOnDPIChangingTest::createIcon).toList());\n+        frame.setIconImages(IntStream.rangeClosed(16, 32).mapToObj(size -> createIcon(size)).toList());\n+        frame.setLocationRelativeTo(null);\n@@ -132,0 +135,3 @@\n+        g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);\n+        g.setColor(Color.WHITE);\n+        g.fillRect(0, 0, size, size);\n@@ -134,1 +140,5 @@\n-        g.drawString(String.valueOf(size), 0, size - (size - g.getFont().getSize()) \/ 2);\n+\n+        TextLayout layout = new TextLayout(String.valueOf(size), g.getFont(), g.getFontRenderContext());\n+        int height = (int) layout.getBounds().getHeight();\n+        int width = (int) layout.getBounds().getWidth();\n+        layout.draw(g, (size - width) \/ 2f - 1, (size + height) \/ 2f);\n","filename":"test\/jdk\/java\/awt\/Window\/WindowIconUpdateOnDPIChanging\/WindowIconUpdateOnDPIChangingTest.java","additions":17,"deletions":7,"binary":false,"changes":24,"status":"modified"}]}