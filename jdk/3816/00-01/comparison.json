{"files":[{"patch":"@@ -685,1 +685,1 @@\n-    static native boolean discardOOB(FileDescriptor fd);\n+    static native boolean discardOOB(FileDescriptor fd) throws IOException;\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/Net.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WEPoll.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -111,1 +111,1 @@\n-            numEntries = WEPoll.wait(eph, pollArrayAddress, NUM_EPOLLEVENTS, (int) timeout);\n+            numEntries = WEPoll.wait(eph, pollArrayAddress, NUM_EPOLLEVENTS, to);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WEPollSelectorImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WEPollSelectorProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -368,1 +368,3 @@\n-        private int processSelectedKeys(long updateCount, Consumer<SelectionKey> action) {\n+        private int processSelectedKeys(long updateCount, Consumer<SelectionKey> action)\n+            throws IOException\n+        {\n@@ -395,0 +397,1 @@\n+            throws IOException\n@@ -524,1 +527,1 @@\n-    private int updateSelectedKeys(Consumer<SelectionKey> action) {\n+    private int updateSelectedKeys(Consumer<SelectionKey> action) throws IOException {\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/WindowsSelectorImpl.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -157,1 +157,7 @@\n-        int n = recv(fd, buf, sizeof(buf), 0);\n+        int n = recv((SOCKET) fd, buf, sizeof(buf), 0);\n+        if (n == SOCKET_ERROR) {\n+            if (WSAGetLastError() != WSAEWOULDBLOCK) {\n+                JNU_ThrowIOExceptionWithLastError(env, \"recv failed\");\n+            }\n+            return readBytes;\n+        }\n@@ -169,2 +175,5 @@\n-    SOCKET s = (SOCKET) fd;\n-    int n = send(s, &b, 1, 0);\n+    int n = send((SOCKET) fd, &b, 1, 0);\n+    if (n == SOCKET_ERROR && WSAGetLastError() != WSAEWOULDBLOCK) {\n+        JNU_ThrowIOExceptionWithLastError(env, \"send failed\");\n+        return IOS_THROWN;\n+    }\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/IOUtil.c","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -792,1 +792,1 @@\n-    char data[8];\n+    char buf[8];\n@@ -794,5 +794,7 @@\n-    int n;\n-    do {\n-        n = recv(fdval(env, fdo), (char*)&data, sizeof(data), MSG_OOB);\n-        if (n > 0) {\n-            discarded = JNI_TRUE;\n+    for (;;) {\n+        int n = recv(fdval(env, fdo), (char*)&buf, sizeof(buf), MSG_OOB);\n+        if (n == SOCKET_ERROR) {\n+            if (WSAGetLastError() != WSAEWOULDBLOCK) {\n+                JNU_ThrowIOExceptionWithLastError(env, \"recv failed\");\n+            }\n+            return discarded;\n@@ -800,2 +802,6 @@\n-    } while (n > 0);\n-    return discarded;\n+        if (n <= 0)\n+            return discarded;\n+        if (n < (int)sizeof(buf))\n+            return JNI_TRUE;\n+        discarded = JNI_TRUE;\n+    }\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/Net.c","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/WEPollNatives.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"","filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/channels\/SelectorWakeup.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/micro\/org\/openjdk\/bench\/java\/nio\/SelectorWakeup.java","status":"renamed"}]}