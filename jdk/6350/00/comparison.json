{"files":[{"patch":"@@ -2218,0 +2218,4 @@\n+            \/\/ Pop the left operand if rhs is switch expression and the code generation is not enabled.\n+            if (rhs.hasTag(SWITCH_EXPRESSION) && !code.isAlive()) {\n+                code.state.pop(lhs.type);\n+            }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/Gen.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,55 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8276836\n+ * @summary the switch expression without result causes Internal error: stack sim error.\n+ * @compile SwitchExpressionWithoutResult.java\n+ *\/\n+\n+public class SwitchExpressionWithoutResult {\n+    private int testSwitchExpressionInPlusOp(int p) {\n+        return 4 + switch (p) {\n+            case 1 -> throw new RuntimeException(\"1\");\n+            case 2 -> throw new RuntimeException(\"2\");\n+            case 3 -> throw new RuntimeException(\"3\");\n+            default -> {\n+                if (true) throw new RuntimeException();\n+                else yield 0;\n+            }\n+        };\n+    }\n+\n+    private int testSwitchExpressionInMultiOp(int p) {\n+        return 4 * switch (p) {\n+            case 1 -> throw new RuntimeException(\"1\");\n+            case 2 -> throw new RuntimeException(\"2\");\n+            case 3 -> throw new RuntimeException(\"3\");\n+            default -> {\n+                if (true) throw new RuntimeException();\n+                else yield 0;\n+            }\n+        };\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/switchexpr\/SwitchExpressionWithoutResult.java","additions":55,"deletions":0,"binary":false,"changes":55,"status":"added"}]}