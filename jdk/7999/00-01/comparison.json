{"files":[{"patch":"@@ -171,10 +171,0 @@\n-    \/\/ These nodes generate lower cost NEON instructions when vector length is\n-    \/\/ 64 or 128 bits.\n-    if (opcode == Op_AddReductionVI || opcode == Op_AddReductionVL) {\n-      assert(is_integral_type(bt), \"should be\");\n-      return length_in_bytes > 16;\n-    }\n-    if ((opcode == Op_MinReductionV || opcode == Op_MaxReductionV) &&\n-        (bt == T_BYTE || bt == T_SHORT || bt == T_INT)) {\n-      return length_in_bytes > 16;\n-    }\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve.ad","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -166,10 +166,0 @@\n-    \/\/ These nodes generate lower cost NEON instructions when vector length is\n-    \/\/ 64 or 128 bits.\n-    if (opcode == Op_AddReductionVI || opcode == Op_AddReductionVL) {\n-      assert(is_integral_type(bt), \"should be\");\n-      return length_in_bytes > 16;\n-    }\n-    if ((opcode == Op_MinReductionV || opcode == Op_MaxReductionV) &&\n-        (bt == T_BYTE || bt == T_SHORT || bt == T_INT)) {\n-      return length_in_bytes > 16;\n-    }\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64_sve_ad.m4","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"}]}