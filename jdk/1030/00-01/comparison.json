{"files":[{"patch":"@@ -30,1 +30,0 @@\n-    private static long end_time;\n@@ -41,5 +40,1 @@\n-            \/\/ Runs with fixed workload that is capped by the TimeLimitedRunner\n-            end_time = System.nanoTime() + 60 * 1000 * 1000 * 1000L;\n-            long timeout = Utils.adjustTimeout(Utils.DEFAULT_TEST_TIMEOUT);\n-            timeout *= 0.75;\n-            new TimeLimitedRunner(timeout, 2.0d, this::test).call();\n+            new TimeLimitedRunner(60 * 1000, 2.0d, this::test).call();\n@@ -54,1 +49,1 @@\n-        return end_time > System.nanoTime();\n+        return true;\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/CodeCacheStressRunner.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-            Thread.sleep(100);\n+            Thread.sleep(10);\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/UnexpectedDeoptimizationAllTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}