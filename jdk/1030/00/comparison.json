{"files":[{"patch":"@@ -30,0 +30,1 @@\n+    private static long end_time;\n@@ -31,0 +32,1 @@\n+\n@@ -38,1 +40,3 @@\n-            \/\/ adjust timeout and substract vm init and exit time\n+            \/\/ Adjust timeout and substract vm init and exit time\n+            \/\/ Runs with fixed workload that is capped by the TimeLimitedRunner\n+            end_time = System.nanoTime() + 60 * 1000 * 1000 * 1000L;\n@@ -40,1 +44,1 @@\n-            timeout *= 0.8;\n+            timeout *= 0.75;\n@@ -50,1 +54,1 @@\n-        return true;\n+        return end_time > System.nanoTime();\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/CodeCacheStressRunner.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-            Thread.sleep(10);\n+            Thread.sleep(100);\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/UnexpectedDeoptimizationAllTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,0 +63,5 @@\n+        try {\n+            Thread.sleep(10);\n+        } catch (Exception e) {\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/codecache\/stress\/UnexpectedDeoptimizationTest.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}