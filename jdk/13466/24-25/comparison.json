{"files":[{"patch":"@@ -30,0 +30,1 @@\n+ * @run main\/othervm -Djavax.net.debug=all TestBadDNForPeerCA\n@@ -49,2 +50,0 @@\n-    private static final boolean debug = false;\n-\n@@ -55,1 +54,0 @@\n-    private ByteBuffer clientOut;        \/\/ read side of serverEngine\n@@ -61,1 +59,1 @@\n-            + \"\/..\/..\/..\/..\/javax\/net\/ssl\/etc\/keystore\";\n+        + \"\/open\/test\/jdk\/javax\/net\/ssl\/etc\/keystore\";\n@@ -88,3 +86,0 @@\n-        if (debug) {\n-            System.setProperty(\"javax.net.debug\", \"all\");\n-        }\n@@ -95,1 +90,1 @@\n-            test.runTest(payload);\n+            test.runTest();\n@@ -131,1 +126,1 @@\n-    private void runTest(byte[] injected) throws Exception {\n+    private void runTest() throws Exception {\n@@ -136,1 +131,1 @@\n-        cTOs = ByteBuffer.wrap(injected);\n+        cTOs = ByteBuffer.wrap(payload);\n@@ -162,1 +157,0 @@\n-        clientOut = ByteBuffer.wrap(\"Hi Server, I'm Client\".getBytes());\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/TestBadDNForPeerCA.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+ * @library \/javax\/net\/ssl\/templates\n@@ -30,0 +31,1 @@\n+ * @run main\/othervm -Djavax.net.debug=all TestBadDNForPeerCA12\n@@ -43,2 +45,0 @@\n-import java.util.HexFormat;\n-\n@@ -51,2 +51,0 @@\n-    private static final boolean debug = false;\n-\n@@ -56,0 +54,1 @@\n+    protected SSLEngine serverEngine;     \/\/ server Engine\n@@ -57,0 +56,1 @@\n+    protected ByteBuffer serverOut;       \/\/ write side of serverEngine\n@@ -58,0 +58,1 @@\n+    protected ByteBuffer serverIn;        \/\/ read side of serverEngine\n@@ -67,22 +68,1 @@\n-        \"FgMDBD0CAABVAwNKWHt3CgoZpm\/OCew8thyunjMH+x098nzpC1eKd\/PNpCBRO9+fS\"\n-        + \"2VPFA7Do9BOr\/LUkTGhHZP9meD0Sm8zSccrPsAsAAANABcAAAAjAAD\/AQABAAsAAnUAA\"\n-        + \"nIAAm8wggJrMIIBU6ADAgECAgkA7b7I9wWvJRQwDQYJKoZIhvcNAQELBQAwOzELMAkGA\"\n-        + \"1UEBhMCVVMxDTALBgNVBAoMBEphdmExHTAbBgNVBAsMFFN1bkpTU0UgVGVzdCBTZXJpd\"\n-        + \"mNlMB4XDTE4MDUyMjA3MTgxNloXDTI4MDUyMTA3MTgxNlowVTELMAkGA1UEBhMCVVMxD\"\n-        + \"TALBgNVBAoMBEphdmExHTAbBgNVBAsMFFN1bkpTU0UgVGVzdCBTZXJpdmNlMRgwFgYDV\"\n-        + \"QQDDA9SZWdyZXNzaW9uIFRlc3QwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATn0wRE1\"\n-        + \"OVVnV56mzxnc657lmSBB0+0P5YgTq2Pc9sgqnEY8PG980\/3n0DJCMQr96FZBWsIyY2gS\"\n-        + \"QjNj4ggGAHToyMwITAfBgNVHSMEGDAWgBQN3ZPJ\/ku9NbfomXiQ+9taPdsVTDANBgkqh\"\n-        + \"kiG9w0BAQsFAAOCAQEAU5NUSqzvTKSFmIh2sSwXVFojcHasu\/BdmTna5KW2Tb9vNW97A\"\n-        + \"DnvtkKjFDWkvvKeSKw98E3W5Vi0eMzVUDdEL7j5MArvx2cjui1iNagenmu+ziXpz8hs6\"\n-        + \"ylLb3QiU24NTEwSsSbnDEjCP4C6TH\/XLryE7IK8cEsxjZzUuyQfUwwFsO5LVoj6WcalO\"\n-        + \"iL4yhg5vEZxXjny\/G5Pz7DBXwWSm92WXwggWZ409G\/7UT6VdsRLoJI0JVpn+UWE+B2Bg\"\n-        + \"qV43ux+ymLPnQMbh2pp+4QBpfnForU1ZcnFNHPRE4f8hTOLK4NbqOmGuWCK3j7c0LOnq\"\n-        + \"8\/2EAlDxWFyPSfXkEochAwAAHADAB0gUsYb5i8nNJxMG2c6TY4P6TgXukhGhn2EqtOMC\"\n-        + \"MYP1hUEAwBIMEYCIQCZN6uqbBUVnbWEVGacgAi8Inz+vbYB+nXxzXpS7B\/rHgIhALedP\"\n-        + \"TzefR4lNrQ5d4V42z0VIgIAEh811usG1hg58iFmDQAA7wNAAQIAKgQDBQMGAwgHCAgIB\"\n-        + \"AgFCAYICQgKCAsEAQUBBgEEAgMDAwEDAgIDAgECAgC9AD0wOzELMAkRA1UEBhMCVVMxD\"\n-        + \"TALBgNVBAoMBEphdmExHTAbBgNVBAsMFFN1bkpTU0UgVGVzdCBTZXJpdmNlAD0wOzELM\"\n-        + \"AkRA1UEBhMCVVMxDTALBgNVBAoMBEphdmExHTAbBgNVBAsMFFN1bkpTU0UgVGVzdCBTZ\"\n-        + \"XJpdmNlAD0wOzELMAkRA1UEBhMCVVMxDTALBgNVBAoMBEphdmExHTAbBgNVBAsMFFN1b\"\n-        + \"kpTU0UgVGVzdCBTZXJpdmNlDgAAAA==\");\n+        \"FgMDBSYCAABVAwPU0IrHPvJuIvTO6\/Y+FaKcEJQdaMtrQJqC4jWJ9gnUsyCTfLM7CCg8lCjgTKFBrf44AEvb5HXOmW56ssFpmgHKbMAsAAANABcAAAAjAAD\/AQABAAsAAfYAAfMAAfAwggHsMIIBj6ADAgECAgRGZGRDMAwGCCqGSM49BAMCBQAwajELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRIwEAYDVQQHEwlDdXBlcnRpbm8xDjAMBgNVBAoTBUR1bW15MQ4wDAYDVQQLEwVEdW1teTEaMBgGA1UEAxMRZHVtbXkuZXhhbXBsZS5jb20wHhcNMTgwMzI3MjI0MTMxWhcNMjgwMzI2MjI0MTMxWjBqMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExEjAQBgNVBAcTCUN1cGVydGlubzEOMAwGA1UEChMFRHVtbXkxDjAMBgNVBAsTBUR1bW15MRowGAYDVQQDExFkdW1teS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABI0sz\/qT0Es+i5F3Ae3czRsbFsMntuLUnntoOGWqLAEPPsLM4GEEDFNzWrlGxBrPsILKArunM5jrkqsfEc1VqfyjITAfMB0GA1UdDgQWBBQLzGwgL76ANOYop3WzQ3XjT9ulQTAMBggqhkjOPQQDAgUAA0kAMEYCIQC9nJbGueD7SkKrJmGQLNE4mFjB4wJKRT8AnWoH5BltQAIhAMibIWGQmR1iIAcrdmho9vU6YV9y7Oh6gPeFzGkfYeJnDAAAbwMAHSA\/fEXlxdJD\/2SshJYmnuInis+G7Rl2syMQ3yFunfm7dQQDAEcwRQIgEef2rIOJK6G\/JsM5CwRzANMUhlzqm9IzwtARgMhFpc8CIQDq5Rk317feUvqAgCJ+h9MT20ljXou9SBk3YjA9tQ89EA0AAlgDQAECACoEAwUDBgMIBwgICAQIBQgGCAkICggLBAEFAQYBBAIDAwMBAwICAwIBAgICJgBsMGoxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTESMBAGA1UEBxMJQ3VwZXJ0aW5vMQ4wDAYDVQQKEwVEdW1teTEOMAwGA1UECxMFRHVtbXkxGjAYBgNVBAMTEWR1bW15LmV4YW1wbGUuY29tAGwwajELMAkGA1UEBhMCVVMxCzAJBgNVBAgMAkNBMRIwEAYDVQQHDAlDdXBlcnRpbm8xDjAMBgNVBAoMBUR1bW15MQ4wDAYDVQQLDAVEdW1teTEaMBgGA1UEAwwRZHVtbXkuZXhhbXBsZS5jb20AbDBqMQswCQYDVQQGEwJVUzELMAkGA1UECAwCQ0ExEjAQBgNVBAcMCUN1cGVydGlubzEOMAwGA1UECgwFRHVtbXkxDjAMBgNVBAsMBUR1bW15MRowGAYDVQQDDBFkdW1teS5leGFtcGxlLmNvbQBsMGoxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTESMBAGA1UEBxMJQ3VwZXJ0aW5vMQ4wDAYDVQQKEwVEdW1teTEOMAwGA1UECxMFRHVtbXkxGjAYBgNVBAMTEWR1bW15LmV4YW1wbGUuY29tAGwwajELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRIwEAYDVQQHEwlDdXBlcnRpbm8xDjAMBgNVBAoTBUR1bW15MQ4wDAYDVQQLEwVEdW1teTEaMBgGA1UEAxMRZHVtbXkuZXhhbXBsZS5jb20OAAAA\");\n@@ -99,3 +79,0 @@\n-        if (debug) {\n-            System.setProperty(\"javax.net.debug\", \"all\");\n-        }\n@@ -147,2 +124,24 @@\n-        System.out.println(\"forcing client hello\");\n-        \/\/sTOc = ByteBuffer.wrap(serverHello);\n+        \/*\n+         * the following was used to generate the serverPayload value\n+         *\/\n+        \/\/ ignore output\n+        \/*SSLEngineResult clientResult = clientEngine.wrap(clientOut, cTOs);\n+        runDelegatedTasks(clientResult, clientEngine);\n+        cTOs.flip();\n+\n+        \/\/ ignore output\n+        SSLEngineResult serverResult = serverEngine.unwrap(cTOs, serverIn);\n+        runDelegatedTasks(serverResult, serverEngine);\n+        \/\/ server hello, cert material, etc\n+        SSLEngineResult serverWrapResult = serverEngine.wrap(serverOut, sTOc);\n+        runDelegatedTasks(serverWrapResult, serverEngine);\n+        sTOc.flip();\n+        ByteBuffer sTOcBuff = sTOc.asReadOnlyBuffer();\n+        byte[] serverContents = new byte[sTOcBuff.remaining()];\n+        sTOcBuff.get(serverContents);\n+        System.out.println(\"sw: \" + Base64.getEncoder().encodeToString\n+        (serverContents));\n+         *\/\n+\n+\n+        System.out.println(\"sending client hello\");\n@@ -160,2 +159,2 @@\n-        sTOc.compact();\n-        cTOs.compact();\n+        \/\/sTOc.compact();\n+        \/\/cTOs.compact();\n@@ -163,1 +162,1 @@\n-        SSLEngineResult clientExGen = clientEngine.wrap(clientOut, cTOs);\n+        SSLEngineResult clientExGen = clientEngine.wrap(clientIn, cTOs);\n@@ -170,1 +169,0 @@\n-\n@@ -173,0 +171,5 @@\n+\n+        serverEngine = sslc.createSSLEngine();\n+        serverEngine.setEnabledProtocols(new String[] {proto});\n+        serverEngine.setUseClientMode(false);\n+        serverEngine.setNeedClientAuth(true);\n@@ -183,0 +186,4 @@\n+\n+        serverOut = ByteBuffer.wrap(\"Hi Client, I'm Server\".getBytes());\n+\n+        serverIn = ByteBuffer.allocateDirect(65536);\n","filename":"test\/jdk\/sun\/security\/ssl\/SSLEngineImpl\/TestBadDNForPeerCA12.java","additions":42,"deletions":35,"binary":false,"changes":77,"status":"modified"}]}