{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import javax.net.ssl.SSLException;\n@@ -125,1 +126,1 @@\n-        X500Principal[] getAuthorities() {\n+        X500Principal[] getAuthorities() throws IllegalArgumentException {\n@@ -127,0 +128,1 @@\n+\n@@ -141,2 +143,6 @@\n-                X500Principal principal = new X500Principal(encoded);\n-                builder.append(principal.toString());\n+                try {\n+                    X500Principal principal = new X500Principal(encoded);\n+                    builder.append(principal.toString());\n+                } catch (IllegalArgumentException iae) {\n+                    builder.append(\"unparseable X500Principal\");\n+                }\n@@ -280,1 +286,5 @@\n-            shc.peerSupportedAuthorities = spec.getAuthorities();\n+            try {\n+                shc.peerSupportedAuthorities = spec.getAuthorities();\n+            } catch (IllegalArgumentException iae) {\n+                shc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\");\n+            }\n@@ -401,1 +411,5 @@\n-            chc.peerSupportedAuthorities = spec.getAuthorities();\n+            try {\n+                chc.peerSupportedAuthorities = spec.getAuthorities();\n+            } catch (IllegalArgumentException iae) {\n+                chc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\");\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateAuthoritiesExtension.java","additions":20,"deletions":6,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,0 +35,1 @@\n+import javax.net.ssl.SSLException;\n@@ -201,1 +202,1 @@\n-        X500Principal[] getAuthorities() {\n+        X500Principal[] getAuthorities() throws IllegalArgumentException {\n@@ -204,0 +205,1 @@\n+\n@@ -257,2 +259,6 @@\n-                X500Principal principal = new X500Principal(encoded);\n-                authorityNames.add(principal.toString());\n+                try {\n+                    X500Principal principal = new X500Principal(encoded);\n+                    authorityNames.add(principal.toString());\n+                } catch (IllegalArgumentException iae) {\n+                    authorityNames.add(\"unparseable X500Principal\");\n+                }\n@@ -373,6 +379,11 @@\n-            if (chc.conContext.transport instanceof SSLSocketImpl) {\n-                clientAlias = km.chooseClientAlias(crm.getKeyTypes(),\n-                    crm.getAuthorities(), (SSLSocket)chc.conContext.transport);\n-            } else if (chc.conContext.transport instanceof SSLEngineImpl) {\n-                clientAlias = km.chooseEngineClientAlias(crm.getKeyTypes(),\n-                    crm.getAuthorities(), (SSLEngine)chc.conContext.transport);\n+\n+            try {\n+                if (chc.conContext.transport instanceof SSLSocketImpl) {\n+                    clientAlias = km.chooseClientAlias(crm.getKeyTypes(),\n+                            crm.getAuthorities(), (SSLSocket) chc.conContext.transport);\n+                } else if (chc.conContext.transport instanceof SSLEngineImpl) {\n+                    clientAlias = km.chooseEngineClientAlias(crm.getKeyTypes(),\n+                            crm.getAuthorities(), (SSLEngine) chc.conContext.transport);\n+                }\n+            } catch (IllegalArgumentException iae) {\n+                chc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\");\n@@ -515,1 +526,1 @@\n-        X500Principal[] getAuthorities() {\n+        X500Principal[] getAuthorities() throws IllegalArgumentException {\n@@ -518,0 +529,1 @@\n+\n@@ -582,2 +594,6 @@\n-                X500Principal principal = new X500Principal(encoded);\n-                authorityNames.add(principal.toString());\n+                try {\n+                    X500Principal principal = new X500Principal(encoded);\n+                    authorityNames.add(principal.toString());\n+                } catch (IllegalArgumentException iae) {\n+                    authorityNames.add(\"unparseable X500Principal\");\n+                }\n@@ -720,2 +736,6 @@\n-            chc.peerSupportedAuthorities = crm.getAuthorities();\n-\n+            try {\n+                chc.peerSupportedAuthorities = crm.getAuthorities();\n+            }\n+            catch (IllegalArgumentException iae) {\n+                chc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\");\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateRequest.java","additions":35,"deletions":15,"binary":false,"changes":50,"status":"modified"}]}