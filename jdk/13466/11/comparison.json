{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,6 @@\n+import sun.security.ssl.SSLExtension.ExtensionConsumer;\n+import sun.security.ssl.SSLExtension.SSLExtensionSpec;\n+import sun.security.ssl.SSLHandshake.HandshakeMessage;\n+\n+import javax.net.ssl.SSLProtocolException;\n+import javax.security.auth.x500.X500Principal;\n@@ -32,6 +38,5 @@\n-import java.util.*;\n-import javax.net.ssl.SSLProtocolException;\n-import javax.security.auth.x500.X500Principal;\n-import sun.security.ssl.SSLExtension.ExtensionConsumer;\n-import sun.security.ssl.SSLExtension.SSLExtensionSpec;\n-import sun.security.ssl.SSLHandshake.HandshakeMessage;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Locale;\n@@ -125,0 +130,1 @@\n+        \/\/ This method will throw IllegalArgumentException if the X500Principal cannot be parsed.\n@@ -127,0 +133,1 @@\n+\n@@ -141,2 +148,6 @@\n-                X500Principal principal = new X500Principal(encoded);\n-                builder.append(principal.toString());\n+                try {\n+                    X500Principal principal = new X500Principal(encoded);\n+                    builder.append(principal.toString());\n+                } catch (IllegalArgumentException iae) {\n+                    builder.append(\"unparseable X500Principal: \" + iae);\n+                }\n@@ -280,1 +291,5 @@\n-            shc.peerSupportedAuthorities = spec.getAuthorities();\n+            try {\n+                shc.peerSupportedAuthorities = spec.getAuthorities();\n+            } catch (IllegalArgumentException iae) {\n+                shc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\", iae);\n+            }\n@@ -401,1 +416,5 @@\n-            chc.peerSupportedAuthorities = spec.getAuthorities();\n+            try {\n+                chc.peerSupportedAuthorities = spec.getAuthorities();\n+            } catch (IllegalArgumentException iae) {\n+                chc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\", iae);\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateAuthoritiesExtension.java","additions":30,"deletions":11,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,8 @@\n+import sun.security.ssl.CipherSuite.KeyExchange;\n+import sun.security.ssl.SSLHandshake.HandshakeMessage;\n+import sun.security.ssl.X509Authentication.X509Possession;\n+\n+import javax.net.ssl.SSLEngine;\n+import javax.net.ssl.SSLSocket;\n+import javax.net.ssl.X509ExtendedKeyManager;\n+import javax.security.auth.x500.X500Principal;\n@@ -33,8 +41,6 @@\n-import java.util.*;\n-import javax.net.ssl.SSLEngine;\n-import javax.net.ssl.SSLSocket;\n-import javax.net.ssl.X509ExtendedKeyManager;\n-import javax.security.auth.x500.X500Principal;\n-import sun.security.ssl.CipherSuite.KeyExchange;\n-import sun.security.ssl.SSLHandshake.HandshakeMessage;\n-import sun.security.ssl.X509Authentication.X509Possession;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Locale;\n@@ -201,0 +207,1 @@\n+        \/\/ This method will throw IllegalArgumentException if the X500Principal cannot be parsed.\n@@ -204,0 +211,1 @@\n+\n@@ -257,2 +265,6 @@\n-                X500Principal principal = new X500Principal(encoded);\n-                authorityNames.add(principal.toString());\n+                try {\n+                    X500Principal principal = new X500Principal(encoded);\n+                    authorityNames.add(principal.toString());\n+                } catch (IllegalArgumentException iae) {\n+                    authorityNames.add(\"unparseable X500Principal: \" + iae);\n+                }\n@@ -373,6 +385,11 @@\n-            if (chc.conContext.transport instanceof SSLSocketImpl) {\n-                clientAlias = km.chooseClientAlias(crm.getKeyTypes(),\n-                    crm.getAuthorities(), (SSLSocket)chc.conContext.transport);\n-            } else if (chc.conContext.transport instanceof SSLEngineImpl) {\n-                clientAlias = km.chooseEngineClientAlias(crm.getKeyTypes(),\n-                    crm.getAuthorities(), (SSLEngine)chc.conContext.transport);\n+\n+            try {\n+                if (chc.conContext.transport instanceof SSLSocketImpl) {\n+                    clientAlias = km.chooseClientAlias(crm.getKeyTypes(),\n+                            crm.getAuthorities(), (SSLSocket) chc.conContext.transport);\n+                } else if (chc.conContext.transport instanceof SSLEngineImpl) {\n+                    clientAlias = km.chooseEngineClientAlias(crm.getKeyTypes(),\n+                            crm.getAuthorities(), (SSLEngine) chc.conContext.transport);\n+                }\n+            } catch (IllegalArgumentException iae) {\n+                chc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\", iae);\n@@ -515,0 +532,1 @@\n+        \/\/ This method will throw IllegalArgumentException if the X500Principal cannot be parsed.\n@@ -518,0 +536,1 @@\n+\n@@ -582,2 +601,6 @@\n-                X500Principal principal = new X500Principal(encoded);\n-                authorityNames.add(principal.toString());\n+                try {\n+                    X500Principal principal = new X500Principal(encoded);\n+                    authorityNames.add(principal.toString());\n+                } catch (IllegalArgumentException iae) {\n+                    authorityNames.add(\"unparseable X500Principal: \" + iae);\n+                }\n@@ -720,2 +743,5 @@\n-            chc.peerSupportedAuthorities = crm.getAuthorities();\n-\n+            try {\n+                chc.peerSupportedAuthorities = crm.getAuthorities();\n+            } catch (IllegalArgumentException iae) {\n+                chc.conContext.fatal(Alert.DECODE_ERROR, \"X500Principal could not be parsed\", iae);\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertificateRequest.java","additions":47,"deletions":21,"binary":false,"changes":68,"status":"modified"}]}