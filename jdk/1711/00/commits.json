[{"commit":{"message":"8257882: Implement linkToNative intrinsic on AArch64\n\nThis is more-or-less a straight port of the x86 code to AArch64.\nGraphKit::make_native_call() calls SharedRuntime::make_native_invoker()\nto generate a blob that jumps to the native function entry point. This\nsimply switches the thread state from Java to native and handles the\nsafepoint poll on return from native code.\n\nAArch64 suffers the same problem as x86 in JDK-8251047 where R29 (frame\npointer) may hold a live oop over the MachCallNative node. Normally this\nwould be saved by RegisterSaver::save_live_registers() but the native\ninvoker blob is not a \"proper\" stub routine so doesn't have an oop map.\nI copied the x86 solution to this where the frame pointer register is\nsaved to the stack and a pointer to that is stored in the frame anchor.\nThis is then read back and added to the register map when walking the\nstack. I saw in the PR comments [1] that this might be a temporary fix,\nbut I'm not sure if there's any plan to change that now?\n\nAnother potential fix might be to change the C2 register definition of\nR29 and R29_H to be save-on-call as below. This works for the\nTestStackWalk.java test case but I don't know whether it has other\nunintended side-effects.\n\n  reg_def R29     ( SOC,  NS, Op_RegI, 29, r29->as_VMReg()        ); \/\/ fp\n  reg_def R29_H   ( SOC,  NS, Op_RegI, 29, r29->as_VMReg()->next());\n\nJMH results from jdk\/incubator\/foreign\/CallOverhead.java to show it's\nworking:\n\n-Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=false:\n\nBenchmark                                    Mode  Cnt     Score     Error  Units\nCallOverhead.jni_blank                       avgt   30    51.450 ?   0.363  ns\/op\nCallOverhead.jni_identity                    avgt   30    54.145 ?   0.627  ns\/op\nCallOverhead.panama_args10                   avgt   30  1914.431 ?  73.771  ns\/op\nCallOverhead.panama_args5                    avgt   30  1394.274 ?  49.369  ns\/op\nCallOverhead.panama_blank                    avgt   30   872.878 ?  20.716  ns\/op\nCallOverhead.panama_blank_trivial            avgt   30   873.852 ?  21.350  ns\/op\nCallOverhead.panama_identity                 avgt   30  1058.729 ?  20.229  ns\/op\nCallOverhead.panama_identity_memory_address  avgt   30  1041.648 ?  22.930  ns\/op\nCallOverhead.panama_identity_struct          avgt   30  3212.483 ? 151.627  ns\/op\nCallOverhead.panama_identity_trivial         avgt   30  1056.398 ?  18.779  ns\/op\n\n-Djdk.internal.foreign.ProgrammableInvoker.USE_INTRINSICS=true:\n\nBenchmark                                    Mode  Cnt     Score     Error  Units\nCallOverhead.jni_blank                       avgt   30    51.519 ?   0.345  ns\/op\nCallOverhead.jni_identity                    avgt   30    54.689 ?   0.687  ns\/op\nCallOverhead.panama_args10                   avgt   30    42.856 ?   0.760  ns\/op\nCallOverhead.panama_args5                    avgt   30    42.192 ?   0.712  ns\/op\nCallOverhead.panama_blank                    avgt   30    41.934 ?   0.349  ns\/op\nCallOverhead.panama_blank_trivial            avgt   30     2.806 ?   0.545  ns\/op\nCallOverhead.panama_identity                 avgt   30    44.043 ?   0.398  ns\/op\nCallOverhead.panama_identity_memory_address  avgt   30    45.021 ?   0.409  ns\/op\nCallOverhead.panama_identity_struct          avgt   30  3206.829 ? 175.750  ns\/op\nCallOverhead.panama_identity_trivial         avgt   30     7.849 ?   1.651  ns\/op\n\n[1] https:\/\/github.com\/openjdk\/panama-foreign\/pull\/279#issuecomment-679172326"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/javaFrameAnchor_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/thread_linux_aarch64.hpp"},{"filename":"src\/hotspot\/os_cpu\/windows_aarch64\/thread_windows_aarch64.hpp"},{"filename":"test\/jdk\/java\/foreign\/TestIntrinsics.java"}],"sha":"a5f1b33b52dd56abd008a773d8212979d8862e1d"}]