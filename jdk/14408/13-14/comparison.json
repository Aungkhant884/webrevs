{"files":[{"patch":"@@ -720,8 +720,12 @@\n-            \/\/ Instead of adding the module descriptor calls in this method,\n-            \/\/ helper methods are created in separate helper methods.\n-            \/\/ Let m1, m2, ..., mn be the calls to the module descriptor builder\n-            \/\/ Here, n is larger than moduleDescriptorsPerMethod, which will hit the 64kb limit of method length.\n-            \/\/ thus, we create f1, f2, ... where\n-            \/\/   - f1 calls m1, ... m_{moduleDescriptorsPerMethod-1},\n-            \/\/   - f2 calls m_{moduleDescriptorsPerMethod}, ... m_{2xmoduleDescriptorsPerMethod-1},\n-            \/\/   - etc.\n+\n+            \/\/ Split the module descriptors be created by multiple helper methods.\n+            \/\/ Each helper method \"subi\" creates the maximum N number of module descriptors\n+            \/\/     mi, m{i+1} ...\n+            \/\/ to avoid exceeding the 64kb limit of method length.  Then it will call\n+            \/\/ \"sub{i+1}\" to creates the next batch of module descriptors m{i+n}, m{i+n+1}...\n+            \/\/ and so on.  During the construction of the module descriptors, the string sets and\n+            \/\/ modifier sets are deduplicated (see SystemModulesClassGenerator.DedupSetBuilder)\n+            \/\/ and cached in the locals. These locals are saved in an array list so\n+            \/\/ that the helper method can restore the local variables that may be\n+            \/\/ referenced by the bytecode generated for creating module descriptors.\n+            \/\/ Pseudo code looks like this:\n@@ -729,4 +733,15 @@\n-            \/\/ Inside m, the class SystemModulesClassGenerator.DedupSetBuilder is used.\n-            \/\/ That class creates sets caching variables. It stores its caches in the local storage.\n-            \/\/ Since the local storage is destroyed across each method, but the sets are needed across methods,\n-            \/\/ the local variables are passed on to the next helper method using a list of these variables.\n+            \/\/ void subi(ModuleDescriptor[] mdescs, ArrayList<Object> localvars) {\n+            \/\/      \/\/ assign localvars to local variables\n+            \/\/      var l3 = localvars.get(0);\n+            \/\/      var l4 = localvars.get(1);\n+            \/\/        :\n+            \/\/      \/\/ fill mdescs[i] to mdescs[i+n-1]\n+            \/\/      mdescs[i] = ...\n+            \/\/      mdescs[i+1] = ...\n+            \/\/        :\n+            \/\/      \/\/ save new local variables added\n+            \/\/      localvars.add(lx)\n+            \/\/      localvars.add(l{x+1})\n+            \/\/        :\n+            \/\/      sub{i+i}(mdescs, localvars);\n+            \/\/ }\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":27,"deletions":12,"binary":false,"changes":39,"status":"modified"}]}