{"files":[{"patch":"@@ -64,1 +64,1 @@\n-        StringJoiner mainModuleInfoContent = new StringJoiner(\";\\n  requires \", \"module bug8240567x {\\n  requires \", \"\\n;}\");\n+        StringJoiner mainModuleInfoContent = new StringJoiner(\";\\n  requires \", \"module bug8240567x {\\n  requires \", \";\\n}\");\n@@ -66,2 +66,1 @@\n-        \/\/ create 100 modules. With this naming schema up to 130 seem to work\n-        for (int i = 0; i < 150; i++) {\n+        for (int i = 0; i < 1_000; i++) {\n@@ -71,5 +70,5 @@\n-            StringBuilder builder = new StringBuilder(\"module \");\n-            builder.append(name).append(\" {\");\n-\n-            if (i != 0) {\n-                builder.append(\"requires module0x;\");\n+            StringBuilder moduleInfoContent = new StringBuilder(\"module \");\n+            moduleInfoContent.append(name).append(\" {\\n\");\n+            \/\/ feed SystemModulesPlugin.SystemModulesClassGenerator.DedupSetBuilder\n+            for (int j = 0; j < i % 20; j++) {\n+                moduleInfoContent.append(\"  requires module\" + j + \"x;\\n\");\n@@ -77,0 +76,2 @@\n+            moduleInfoContent.append(\"}\\n\");\n+            Files.writeString(moduleDir.resolve(\"module-info.java\"), moduleInfoContent.toString());\n@@ -78,2 +79,0 @@\n-            builder.append(\"}\\n\");\n-            Files.writeString(moduleDir.resolve(\"module-info.java\"), builder.toString());\n","filename":"test\/jdk\/tools\/jlink\/JLink100Modules.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"}]}