{"files":[{"patch":"@@ -121,0 +121,1 @@\n+    private final int moduleDescriptorsPerMethod;\n@@ -124,0 +125,3 @@\n+        this(75);\n+    }\n+    public SystemModulesPlugin(int moduleDescriptorsPerMethod) {\n@@ -125,0 +129,1 @@\n+        this.moduleDescriptorsPerMethod = moduleDescriptorsPerMethod;\n@@ -319,1 +324,1 @@\n-            = new SystemModulesClassGenerator(className, moduleInfos);\n+            = new SystemModulesClassGenerator(className, moduleInfos, moduleDescriptorsPerMethod);\n@@ -534,0 +539,2 @@\n+        private final int moduleDescriptorsPerMethod;\n+\n@@ -541,1 +548,2 @@\n-                                           List<ModuleInfo> moduleInfos) {\n+                                           List<ModuleInfo> moduleInfos,\n+                                           int moduleDescriptorsPerMethod) {\n@@ -544,0 +552,1 @@\n+            this.moduleDescriptorsPerMethod = moduleDescriptorsPerMethod;\n@@ -669,1 +678,1 @@\n-            if (moduleInfos.size() <= 75) {\n+            if (moduleInfos.size() <= moduleDescriptorsPerMethod) {\n@@ -681,3 +690,3 @@\n-                                        minfo.descriptor(),\n-                                        minfo.packages(),\n-                                        index).build();\n+                                                            minfo.descriptor(),\n+                                                            minfo.packages(),\n+                                                            index).build();\n@@ -691,0 +700,14 @@\n+            \/\/ Instead of adding the module descriptor calls in this method,\n+            \/\/ helper methods are created in separate helper methods.\n+            \/\/ Let m1, m2, ..., mn be the calls to the module descriptor builder\n+            \/\/ Here, n is larger than moduleDescriptorsPerMethod, which will hit the 64kb limit of method length.\n+            \/\/ thus, we create f1, f2, ... where\n+            \/\/   - f1 calls m1, ... m_{moduleDescriptorsPerMethod-1},\n+            \/\/   - f2 calls m_{moduleDescriptorsPerMethod}, ... m_{2xmoduleDescriptorsPerMethod-1},\n+            \/\/   - etc.\n+            \/\/\n+            \/\/ Inside m, the class SystemModulesClassGenerator.DedupSetBuilder is used.\n+            \/\/ That class creates sets caching variables. It stores its caches in the local storage.\n+            \/\/ Since the local storage is destroyed across each method, but the sets are needed across methods,\n+            \/\/ the local variables are passed on to the next helper method using a list of these variables.\n+\n@@ -694,1 +717,1 @@\n-                if (index % 75 == 0) {\n+                if (index % moduleDescriptorsPerMethod == 0) {\n@@ -751,3 +774,3 @@\n-                                        minfo.descriptor(),\n-                                        minfo.packages(),\n-                                        globalCount[0]).build();\n+                                                            minfo.descriptor(),\n+                                                            minfo.packages(),\n+                                                            globalCount[0]).build();\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":33,"deletions":10,"binary":false,"changes":43,"status":"modified"}]}