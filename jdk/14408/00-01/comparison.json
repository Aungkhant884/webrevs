{"files":[{"patch":"@@ -121,1 +121,1 @@\n-    private final boolean enabled;\n+    private boolean enabled;\n@@ -520,1 +520,0 @@\n-        \/\/ Constant chosen for this generator, can be higher in practice\n@@ -523,1 +522,1 @@\n-        private final int BUILDER_VAR    = MAX_LOCAL_VARS + 1; \/\/ we need 0 for \"this\"\n+        private final int BUILDER_VAR    = MAX_LOCAL_VARS + 1;\n@@ -671,1 +670,0 @@\n-                \/\/ In case there won't be a Method_Too_Large exception, we use the unsplit method to generate the method \"moduleDescriptors\"\n@@ -693,1 +691,0 @@\n-            \/\/ split up module infos in \"consumable\" packages\n@@ -697,2 +694,0 @@\n-                \/\/ The method is \"manually split\" based on the heuristics that 90 ModuleDescriptors are smaller than 64kb\n-                \/\/ The number 50 is chosen \"randomly\" to be below the 64kb limit of a method\n@@ -700,1 +695,0 @@\n-                    \/\/ Prepare new list\n@@ -708,2 +702,0 @@\n-            \/\/ Variable holding List<Set>, which needs to be restored at each helper method\n-            \/\/ This list grows at each call of each helper method\n@@ -712,1 +704,0 @@\n-            \/\/ dedupSetBuilder will (!) use this index for the first variable\n@@ -715,1 +706,0 @@\n-            \/\/ generate call to first helper method\n@@ -723,1 +713,1 @@\n-                                .dup() \/\/ storing for the return at the end\n+                                .dup()\n@@ -725,2 +715,0 @@\n-                        \/\/ Generate List of Sets required by dedupSetBuilder\n-                        \/\/ We use slot \"nextLocalVar\" temporarily. We do net need the list later as the helper methods modify the list and pass it on.\n@@ -742,1 +730,0 @@\n-            \/\/ generate all helper methods\n@@ -752,1 +739,0 @@\n-                            \/\/ Restore all (!) sets from parameter to local variables\n@@ -754,1 +740,0 @@\n-                                \/\/ We need to go from the end to the beginning as we will probably overwrite position 2 (which holds the list at the beginning)\n@@ -765,1 +750,0 @@\n-                                \/\/ executed after the call, thus it is OK to overwrite index 0 (BUILDER_VAR)\n@@ -774,4 +758,0 @@\n-                                \/\/ We are not the last one of the calling chain of helper methods\n-                                \/\/ Prepare next call\n-\n-                                \/\/ Store all new sets to List\n@@ -787,1 +767,1 @@\n-                                           .pop(); \/\/ remove boolean result value\n+                                           .pop();\n@@ -790,1 +770,0 @@\n-                                \/\/ call to next helper method\n@@ -792,1 +771,1 @@\n-                                   .aload(MD_VAR) \/\/ load first parameter, which is MD_VAR\n+                                   .aload(MD_VAR)\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":5,"deletions":26,"binary":false,"changes":31,"status":"modified"}]}