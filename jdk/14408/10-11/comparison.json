{"files":[{"patch":"@@ -747,1 +747,1 @@\n-                int lastCopiedVar = nextLocalVar;\n+                int lastCopiedVar = firstVar - 1;\n@@ -761,3 +761,3 @@\n-                           .sipush(moduleInfos.size())\n-                           .invokespecial(arrayListClassDesc, INIT_NAME, MethodTypeDesc.of(CD_int))\n-                           .astore(nextLocalVar);\n+                           .constantInstruction(moduleInfos.size())\n+                           .invokespecial(arrayListClassDesc, INIT_NAME, MethodTypeDesc.of(CD_void, CD_int))\n+                           .astore(DEDUP_LIST_VAR);\n@@ -766,1 +766,1 @@\n-                           .aload(nextLocalVar)\n+                           .aload(DEDUP_LIST_VAR)\n@@ -805,1 +805,1 @@\n-                                if (nextLocalVar > wrapper.lastCopiedVar) {\n+                                if ((nextLocalVar > firstVar) && (nextLocalVar > wrapper.lastCopiedVar)) {\n@@ -812,1 +812,1 @@\n-                                    wrapper.lastCopiedVar = nextLocalVar;\n+                                    wrapper.lastCopiedVar = nextLocalVar - 1;\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-import tests.JImageGenerator.JLinkTask;\n@@ -52,2 +51,0 @@\n-    private static final ToolProvider JLINK_TOOL = ToolProvider.findFirst(\"jlink\")\n-            .orElseThrow(() -> new RuntimeException(\"jlink tool not found\"));\n@@ -64,5 +61,0 @@\n-    static void jlink(String[] args) {\n-        report(\"jlink\", args);\n-        JLINK_TOOL.run(System.out, System.err, args);\n-    }\n-\n@@ -111,1 +103,0 @@\n-\n@@ -125,1 +116,2 @@\n-        Path bin = src.resolve(\"out-jlink\").resolve(\"bin\");\n+        Path binDir = src.resolve(\"out-jlink\").resolve(\"bin\").toAbsolutePath();\n+        Path bin = binDir.resolve(\"java\");\n@@ -127,7 +119,1 @@\n-        \/\/ String binName = jdk.internal.util.OperatingSystem.isWindows() ? \"java.exe\" : \"java\";\n-        String binName = \"java.exe\";\n-        if (!Files.exists(Path.of(binName))) {\n-            binName = \"java\";\n-        }\n-\n-        ProcessBuilder processBuilder = new ProcessBuilder(binName, \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+BytecodeVerificationLocal\", \"-m\", \"bug8240567x\/testpackage.JLink100ModulesTest\");\n+        ProcessBuilder processBuilder = new ProcessBuilder(bin.toString(), \"-XX:+UnlockDiagnosticVMOptions\", \"-XX:+BytecodeVerificationLocal\", \"-m\", \"bug8240567x\/testpackage.JLink100ModulesTest\");\n@@ -135,1 +121,1 @@\n-        processBuilder.directory(bin.toFile());\n+        processBuilder.directory(binDir.toFile());\n@@ -138,2 +124,0 @@\n-\n-        System.err.println(exitCode);\n","filename":"test\/jdk\/tools\/jlink\/JLink100Modules.java","additions":4,"deletions":20,"binary":false,"changes":24,"status":"modified"}]}