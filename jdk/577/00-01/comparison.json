{"files":[{"patch":"@@ -946,0 +946,2 @@\n+  JavaThread* self = thread();\n+  assert(self == Thread::current()->as_Java_thread(), \"wrong thread\");\n@@ -948,1 +950,1 @@\n-  address real_return_addr = thread()->saved_exception_pc();\n+  address real_return_addr = self->saved_exception_pc();\n@@ -955,1 +957,1 @@\n-  frame stub_fr = thread()->last_frame();\n+  frame stub_fr = self->last_frame();\n@@ -958,1 +960,1 @@\n-  RegisterMap map(thread(), true, false);\n+  RegisterMap map(self, true, false);\n@@ -979,1 +981,1 @@\n-      return_value = Handle(thread(), result);\n+      return_value = Handle(self, result);\n@@ -986,1 +988,1 @@\n-    StackWatermarkSet::after_unwind(thread());\n+    StackWatermarkSet::after_unwind(self);\n@@ -989,1 +991,2 @@\n-    SafepointMechanism::process_if_requested(thread());\n+    SafepointMechanism::process_if_requested(self);\n+    self->check_and_handle_async_exceptions();\n@@ -1005,1 +1008,1 @@\n-    SafepointMechanism::process_if_requested(thread());\n+    SafepointMechanism::process_if_requested(self);\n@@ -1010,3 +1013,3 @@\n-    if (thread()->has_async_condition()) {\n-      ThreadInVMfromJavaNoAsyncException __tiv(thread());\n-      Deoptimization::deoptimize_frame(thread(), caller_fr.id());\n+    if (self->has_async_condition()) {\n+      ThreadInVMfromJavaNoAsyncException __tiv(self);\n+      Deoptimization::deoptimize_frame(self, caller_fr.id());\n@@ -1018,2 +1021,2 @@\n-    if (thread()->has_pending_exception() ) {\n-      RegisterMap map(thread(), true, false);\n+    if (self->has_pending_exception() ) {\n+      RegisterMap map(self, true, false);\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":15,"deletions":12,"binary":false,"changes":27,"status":"modified"}]}