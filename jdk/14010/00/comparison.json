{"files":[{"patch":"@@ -45,1 +45,1 @@\n-  if (code == NULL)  return;\n+  if (code == nullptr)  return;\n@@ -48,1 +48,1 @@\n-  if (cs->start() == NULL)  {\n+  if (cs->start() == nullptr)  {\n@@ -69,2 +69,2 @@\n-      && cb->blob() == NULL) {\n-    return NULL;\n+      && cb->blob() == nullptr) {\n+    return nullptr;\n@@ -77,1 +77,1 @@\n-\/\/ Should not be called if start_a_stub() returned NULL\n+\/\/ Should not be called if start_a_stub() returned null\n@@ -91,1 +91,1 @@\n-    if (cb->blob() == NULL)  return NULL;\n+    if (cb->blob() == nullptr)  return nullptr;\n@@ -165,1 +165,1 @@\n-    if (_patch_overflow == NULL) {\n+    if (_patch_overflow == nullptr) {\n@@ -182,1 +182,1 @@\n-    const char* file = NULL;\n+    const char* file = nullptr;\n@@ -215,1 +215,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -224,1 +224,1 @@\n-  if (UseCompressedOops && CompressedOops::base() != NULL) {\n+  if (UseCompressedOops && CompressedOops::base() != nullptr) {\n","filename":"src\/hotspot\/share\/asm\/assembler.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-  void add_patch_at(CodeBuffer* cb, int branch_loc, const char* file = NULL, int line = 0);\n+  void add_patch_at(CodeBuffer* cb, int branch_loc, const char* file = nullptr, int line = 0);\n@@ -159,1 +159,1 @@\n-    _patch_overflow = NULL;\n+    _patch_overflow = nullptr;\n@@ -236,1 +236,1 @@\n-      assert(assm->inst_mark() == NULL, \"overlapping instructions\");\n+      assert(assm->inst_mark() == nullptr, \"overlapping instructions\");\n@@ -359,1 +359,1 @@\n-        || inst_mark() == NULL || inst_mark() == code_section()->end(),\n+        || inst_mark() == nullptr || inst_mark() == code_section()->end(),\n@@ -396,1 +396,1 @@\n-    if (ptr != NULL) {\n+    if (ptr != nullptr) {\n@@ -405,1 +405,1 @@\n-    if (ptr != NULL) {\n+    if (ptr != nullptr) {\n@@ -414,1 +414,1 @@\n-    if (ptr != NULL) {\n+    if (ptr != nullptr) {\n@@ -423,1 +423,1 @@\n-    if (ptr != NULL) {\n+    if (ptr != nullptr) {\n@@ -432,1 +432,1 @@\n-    if (ptr != NULL) {\n+    if (ptr != nullptr) {\n@@ -441,1 +441,1 @@\n-    if (ptr != NULL) {\n+    if (ptr != nullptr) {\n@@ -453,1 +453,1 @@\n-    if (ptr != NULL) {\n+    if (ptr != nullptr) {\n","filename":"src\/hotspot\/share\/asm\/assembler.hpp","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-  assert(blob() == NULL, \"only once\");\n+  assert(blob() == nullptr, \"only once\");\n@@ -107,1 +107,1 @@\n-  if (blob() == NULL) {\n+  if (blob() == nullptr) {\n@@ -133,1 +133,1 @@\n-  for (CodeBuffer* cb = this; cb != NULL; cb = cb->before_expand()) {\n+  for (CodeBuffer* cb = this; cb != nullptr; cb = cb->before_expand()) {\n@@ -174,1 +174,1 @@\n-  if (blob != NULL) {\n+  if (blob != nullptr) {\n@@ -194,1 +194,1 @@\n-  if (_blob != NULL) {\n+  if (_blob != nullptr) {\n@@ -196,1 +196,1 @@\n-    set_blob(NULL);\n+    set_blob(nullptr);\n@@ -202,1 +202,1 @@\n-  return NULL;\n+  return nullptr;\n@@ -208,1 +208,1 @@\n-  default:                     return NULL;\n+  default:                     return nullptr;\n@@ -239,1 +239,1 @@\n-  if (_decode_begin != NULL && _decode_begin > begin)\n+  if (_decode_begin != nullptr && _decode_begin > begin)\n@@ -246,1 +246,1 @@\n-  if (_overflow_arena == NULL) {\n+  if (_overflow_arena == nullptr) {\n@@ -272,1 +272,1 @@\n-    \/\/ Don't return NULL or badAddress, since branches shouldn't overflow.\n+    \/\/ Don't return null or badAddress, since branches shouldn't overflow.\n@@ -367,1 +367,1 @@\n-  assert(_locs_start == NULL, \"only one locs init step, please\");\n+  assert(_locs_start == nullptr, \"only one locs init step, please\");\n@@ -379,1 +379,1 @@\n-  assert(_locs_start == NULL, \"do this before locs are allocated\");\n+  assert(_locs_start == nullptr, \"do this before locs are allocated\");\n@@ -405,1 +405,1 @@\n-  if (_locs_start == NULL) {\n+  if (_locs_start == nullptr) {\n@@ -470,2 +470,2 @@\n-  const CodeSection* prev_cs      = NULL;\n-  CodeSection*       prev_dest_cs = NULL;\n+  const CodeSection* prev_cs      = nullptr;\n+  CodeSection*       prev_dest_cs = nullptr;\n@@ -483,1 +483,1 @@\n-      if (prev_dest_cs != NULL) {\n+      if (prev_dest_cs != nullptr) {\n@@ -495,1 +495,1 @@\n-    debug_only(dest_cs->_start = NULL);  \/\/ defeat double-initialization assert\n+    debug_only(dest_cs->_start = nullptr);  \/\/ defeat double-initialization assert\n@@ -512,1 +512,1 @@\n-  if (cl != NULL && !oops->contains(cl)) {\n+  if (cl != nullptr && !oops->contains(cl)) {\n@@ -615,1 +615,1 @@\n-  csize_t total = copy_relocations_to(NULL);  \/\/ dry run only\n+  csize_t total = copy_relocations_to(nullptr);  \/\/ dry run only\n@@ -658,1 +658,1 @@\n-        if (buf != NULL) {\n+        if (buf != nullptr) {\n@@ -673,1 +673,1 @@\n-    if (buf != NULL && lsize != 0) {\n+    if (buf != nullptr && lsize != 0) {\n@@ -690,1 +690,1 @@\n-    if (buf != NULL) {\n+    if (buf != nullptr) {\n@@ -704,1 +704,1 @@\n-  address buf = NULL;\n+  address buf = nullptr;\n@@ -708,1 +708,1 @@\n-  if (dest != NULL) {\n+  if (dest != nullptr) {\n@@ -712,1 +712,1 @@\n-  \/\/ if dest == NULL, this is just the sizing pass\n+  \/\/ if dest is null, this is just the sizing pass\n@@ -754,1 +754,1 @@\n-  address dest_filled = NULL;\n+  address dest_filled = nullptr;\n@@ -770,1 +770,1 @@\n-    if (dest->blob() == NULL) {\n+    if (dest->blob() == nullptr) {\n@@ -804,1 +804,1 @@\n-  if (dest->blob() == NULL && dest_filled != NULL) {\n+  if (dest->blob() == nullptr && dest_filled != nullptr) {\n@@ -867,1 +867,1 @@\n-  if (StressCodeBuffers && blob() != NULL) {\n+  if (StressCodeBuffers && blob() != nullptr) {\n@@ -880,1 +880,1 @@\n-    if (blob() == NULL)  return;  \/\/ caller must check for blob == NULL\n+    if (blob() == nullptr)  return;  \/\/ caller must check if blob is null\n@@ -891,1 +891,1 @@\n-  if (cb.blob() == NULL) {\n+  if (cb.blob() == nullptr) {\n@@ -903,1 +903,1 @@\n-  DEBUG_ONLY(this->_blob = NULL);  \/\/ silence a later assert\n+  DEBUG_ONLY(this->_blob = nullptr);  \/\/ silence a later assert\n@@ -918,1 +918,1 @@\n-    if (this_sect->mark() == NULL) {\n+    if (this_sect->mark() == nullptr) {\n@@ -934,1 +934,1 @@\n-  cb.set_blob(NULL);\n+  cb.set_blob(nullptr);\n@@ -944,1 +944,1 @@\n-  _decode_begin = NULL;  \/\/ sanity\n+  _decode_begin = nullptr;  \/\/ sanity\n@@ -954,1 +954,1 @@\n-  assert(blob() == NULL, \"must be empty\");\n+  assert(blob() == nullptr, \"must be empty\");\n@@ -964,1 +964,1 @@\n-  cb->_overflow_arena = NULL;\n+  cb->_overflow_arena = nullptr;\n@@ -971,1 +971,1 @@\n-  if (tstart == badAddress)  return;  \/\/ smashed by set_blob(NULL)\n+  if (tstart == badAddress)  return;  \/\/ smashed by set_blob(nullptr)\n@@ -973,1 +973,1 @@\n-  if (_blob != NULL) {\n+  if (_blob != nullptr) {\n@@ -998,1 +998,1 @@\n-  if (xtty != NULL) {\n+  if (xtty != nullptr) {\n@@ -1022,1 +1022,1 @@\n-  if (_shared_stub_to_interp_requests == NULL) {\n+  if (_shared_stub_to_interp_requests == nullptr) {\n@@ -1063,2 +1063,2 @@\n-  if (this == NULL) {\n-    tty->print_cr(\"NULL CodeBuffer pointer\");\n+  if (this == nullptr) {\n+    tty->print_cr(\"null CodeBuffer pointer\");\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":44,"deletions":44,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -113,8 +113,8 @@\n-    _start         = NULL;\n-    _mark          = NULL;\n-    _end           = NULL;\n-    _limit         = NULL;\n-    _locs_start    = NULL;\n-    _locs_end      = NULL;\n-    _locs_limit    = NULL;\n-    _locs_point    = NULL;\n+    _start         = nullptr;\n+    _mark          = nullptr;\n+    _end           = nullptr;\n+    _limit         = nullptr;\n+    _locs_start    = nullptr;\n+    _locs_end      = nullptr;\n+    _locs_limit    = nullptr;\n+    _locs_point    = nullptr;\n@@ -134,1 +134,1 @@\n-    assert(_start == NULL, \"only one init step, please\");\n+    assert(_start == nullptr, \"only one init step, please\");\n@@ -136,1 +136,1 @@\n-    _mark          = NULL;\n+    _mark          = nullptr;\n@@ -163,1 +163,1 @@\n-  csize_t     mark_off() const      { assert(_mark != NULL, \"not an offset\");\n+  csize_t     mark_off() const      { assert(_mark != nullptr, \"not an offset\");\n@@ -177,1 +177,1 @@\n-  bool        is_allocated() const  { return _start != NULL; }\n+  bool        is_allocated() const  { return _start != nullptr; }\n@@ -179,1 +179,1 @@\n-  bool        has_locs() const      { return _locs_end != NULL; }\n+  bool        has_locs() const      { return _locs_end != nullptr; }\n@@ -203,1 +203,1 @@\n-  void    clear_mark()              { _mark = NULL; }\n+  void    clear_mark()              { _mark = nullptr; }\n@@ -452,1 +452,1 @@\n-    assert(name != NULL, \"must have a name\");\n+    assert(name != nullptr, \"must have a name\");\n@@ -454,5 +454,5 @@\n-    _before_expand   = NULL;\n-    _blob            = NULL;\n-    _oop_recorder    = NULL;\n-    _overflow_arena  = NULL;\n-    _last_insn       = NULL;\n+    _before_expand   = nullptr;\n+    _blob            = nullptr;\n+    _oop_recorder    = nullptr;\n+    _overflow_arena  = nullptr;\n+    _last_insn       = nullptr;\n@@ -460,2 +460,2 @@\n-    _shared_stub_to_interp_requests = NULL;\n-    _shared_trampoline_requests = NULL;\n+    _shared_stub_to_interp_requests = nullptr;\n+    _shared_trampoline_requests = nullptr;\n@@ -472,1 +472,1 @@\n-    _decode_begin    = NULL;\n+    _decode_begin    = nullptr;\n@@ -527,1 +527,1 @@\n-    assert(code_start != NULL, \"sanity\");\n+    assert(code_start != nullptr, \"sanity\");\n@@ -569,1 +569,1 @@\n-  \/\/ present sections in order; return NULL at end; consts is #0, etc.\n+  \/\/ present sections in order; return null at end; consts is #0, etc.\n@@ -594,1 +594,1 @@\n-    if (locator < 0)  return NULL;\n+    if (locator < 0)  return nullptr;\n@@ -658,1 +658,1 @@\n-    return (recorder == NULL)? 0: recorder->oop_size();\n+    return (recorder == nullptr)? 0: recorder->oop_size();\n@@ -664,1 +664,1 @@\n-    return (recorder == NULL)? 0: recorder->metadata_size();\n+    return (recorder == nullptr)? 0: recorder->metadata_size();\n@@ -679,1 +679,1 @@\n-  void clear_last_insn() { set_last_insn(NULL); }\n+  void clear_last_insn() { set_last_insn(nullptr); }\n@@ -704,1 +704,1 @@\n-    assert(blob != NULL, \"sane\");\n+    assert(blob != nullptr, \"sane\");\n@@ -715,1 +715,1 @@\n-  const char* code_string(const char* str) PRODUCT_RETURN_(return NULL;);\n+  const char* code_string(const char* str) PRODUCT_RETURN_(return nullptr;);\n@@ -755,1 +755,1 @@\n-  SharedStubToInterpRequest(ciMethod* method = NULL, CodeBuffer::csize_t call_offset = -1) : _shared_method(method),\n+  SharedStubToInterpRequest(ciMethod* method = nullptr, CodeBuffer::csize_t call_offset = -1) : _shared_method(method),\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  if (shared_stub_to_interp_requests == NULL) {\n+  if (shared_stub_to_interp_requests == nullptr) {\n@@ -52,1 +52,1 @@\n-    if (stub == NULL) {\n+    if (stub == nullptr) {\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}