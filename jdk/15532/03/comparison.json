{"files":[{"patch":"@@ -527,0 +527,2 @@\n+            cases = patchCompletingNormallyCases(cases);\n+\n@@ -544,1 +546,1 @@\n-                if (validCaseLabelList && !previousCompletesNormally) {\n+                if (validCaseLabelList && !previousCompletesNormally || c.guard != null) {\n@@ -660,0 +662,35 @@\n+\n+    \/\/ Duplicates the block statement where needed.\n+    \/\/ Processes cases in reverse order, e.g.\n+    \/\/ switch (obj) {\n+    \/\/     case Integer _ when ((Integer) obj) > 0:\n+    \/\/     case String _  when !((String) obj).isEmpty():\n+    \/\/         return 1;\n+    \/\/     ...\n+    \/\/ }\n+    \/\/ =>\n+    \/\/ switch (typeSwitch(...)) {\n+    \/\/     case 0:\n+    \/\/         if (!((Integer)obj) > 0) { ... }\n+    \/\/         return 1;\n+    \/\/     case 1:\n+    \/\/         if (!((String)obj).isEmpty()) { ... }\n+    \/\/         return 1;\n+    \/\/     ...\n+    \/\/ }\n+    private static List<JCCase> patchCompletingNormallyCases(List<JCCase> cases) {\n+        ListBuffer<JCCase> newCases = new ListBuffer<>();\n+        for (int j = cases.size() - 1; j >= 0; j--) {\n+            var currentCase = cases.get(j);\n+\n+            if (currentCase != cases.last() && currentCase.guard != null &&\n+                    currentCase.caseKind == CaseKind.STATEMENT &&\n+                    currentCase.completesNormally) {\n+                var nextCase = cases.get(j + 1);\n+                currentCase.stats = currentCase.stats.appendList(nextCase.stats);\n+            }\n+            newCases.add(currentCase);\n+        }\n+        return newCases.toList().reverse();\n+    }\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":38,"deletions":1,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -0,0 +1,111 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/**\n+ * @test\n+ * @bug 8314226\n+ * @summary Series of colon-style fallthrough switch cases with guards compiled incorrectly\n+ * @enablePreview\n+ * @compile T8314226.java\n+ * @run main T8314226\n+ *\/\n+\n+public class T8314226 {\n+    int multipleGuardedCases(Object obj) {\n+        switch (obj) {\n+            case Integer _ when ((Integer) obj) > 0:\n+            case String _  when !((String) obj).isEmpty():\n+                return 1;\n+            default:\n+                return -1;\n+        }\n+    }\n+\n+    int multipleGuardedCases2a(Object obj) {\n+        switch (obj) {\n+            case Integer _ when ((Integer) obj) > 0:\n+            case Float _   when ((Float) obj) > 0.0f:\n+            case String _  when !((String) obj).isEmpty():\n+                return 1;\n+            default:\n+                return -1;\n+        }\n+    }\n+\n+    int multipleGuardedCases2b(Object obj) {\n+        switch (obj) {\n+            case Float _   when ((Float) obj) > 0.0f: \/\/ reversing the order\n+            case Integer _ when ((Integer) obj) > 0:\n+            case String _  when !((String) obj).isEmpty():\n+                return 1;\n+            default:\n+                return -1;\n+        }\n+    }\n+\n+    int multipleGuardedCasesMultiplePatterns(Object obj) {\n+        switch (obj) {\n+            case String _          when !((String) obj).isEmpty():\n+            case Integer _, Byte _ when ((Number) obj).intValue() > 0:\n+                return 1;\n+            default:\n+                return -1;\n+        }\n+    }\n+\n+    int singleGuardedCase(Object obj) {\n+        switch (obj) {\n+            case String _ when !((String) obj).isEmpty():\n+                return 1;\n+            default:\n+                return -1;\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        new T8314226().run();\n+    }\n+\n+    private void run() {\n+        assertEquals(1, multipleGuardedCases(42));\n+        assertEquals(1, multipleGuardedCases(\"test\"));\n+        assertEquals(-1, multipleGuardedCases(\"\"));\n+        assertEquals(1, multipleGuardedCases2a(42.0f));\n+        assertEquals(1, multipleGuardedCases2a(\"test\"));\n+        assertEquals(-1, multipleGuardedCases2a(\"\"));\n+        assertEquals(1, multipleGuardedCases2b(42.0f));\n+        assertEquals(1, multipleGuardedCases2b(\"test\"));\n+        assertEquals(-1, multipleGuardedCases2b(\"\"));\n+        assertEquals(1, multipleGuardedCasesMultiplePatterns((byte) 42));\n+        assertEquals(1, multipleGuardedCasesMultiplePatterns(\"test\"));\n+        assertEquals(-1, multipleGuardedCasesMultiplePatterns(\"\"));\n+        assertEquals(-1, singleGuardedCase(42));\n+        assertEquals(1, singleGuardedCase(\"test\"));\n+        assertEquals(-1, singleGuardedCase(\"\"));\n+    }\n+\n+    void assertEquals(int expected, int actual) {\n+        if (expected != actual) {\n+            throw new AssertionError(\"Expected: \" + expected + \", but got: \" + actual);\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314226.java","additions":111,"deletions":0,"binary":false,"changes":111,"status":"added"}]}