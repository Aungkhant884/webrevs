{"files":[{"patch":"@@ -686,1 +686,1 @@\n-            if (currentCase != cases.last() && currentCase.guard != null &&\n+            if (currentCase != cases.last() && (currentCase.guard != null || TreeInfo.isNullCaseLabel(currentCase.labels.head)) &&\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,0 +84,38 @@\n+    int multipleCasesWithReturn(Object obj) {\n+        switch (obj) {\n+            case Integer _ when ((Integer) obj) > 0:\n+            case String _ when !((String) obj).isEmpty():\n+                return 1;\n+            case null:\n+                return 2;\n+            default:\n+                return 3;\n+        }\n+    }\n+\n+    int multipleCasesWithEffectNoReturn(Object obj) {\n+        int i = 0;\n+        switch (obj) {\n+            case Integer _ when ((Integer) obj) > 0:\n+            case String _ when !((String) obj).isEmpty():\n+                i = i + 1;\n+            case null:\n+                i = i + 10;\n+            default:\n+                i = i + 100;\n+        }\n+        return i;\n+    }\n+\n+    int multipleCasesWithLoop(Object obj) {\n+        switch (obj) {\n+            case Integer _ when ((Integer) obj) > 0:\n+            case String _ when !((String) obj).isEmpty():\n+                return 1;\n+            case null:\n+                while (true) {break;}\n+            default:\n+                return 3;\n+        }\n+    }\n+\n@@ -104,0 +142,12 @@\n+        assertEquals(1, multipleCasesWithReturn(42));\n+        assertEquals(1, multipleCasesWithReturn(\"test\"));\n+        assertEquals(2, multipleCasesWithReturn(null));\n+        assertEquals(3, multipleCasesWithReturn(\"\"));\n+        assertEquals(111, multipleCasesWithEffectNoReturn(42));\n+        assertEquals(111, multipleCasesWithEffectNoReturn(\"test\"));\n+        assertEquals(110, multipleCasesWithEffectNoReturn(null));\n+        assertEquals(100, multipleCasesWithEffectNoReturn(\"\"));\n+        assertEquals(1, multipleCasesWithLoop(42));\n+        assertEquals(1, multipleCasesWithLoop(\"test\"));\n+        assertEquals(3, multipleCasesWithLoop(null));\n+        assertEquals(3, multipleCasesWithLoop(\"\"));\n@@ -106,1 +156,1 @@\n-    void assertEquals(int expected, int actual) {\n+    void assertEquals(Object expected, Object actual) {\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314226.java","additions":51,"deletions":1,"binary":false,"changes":52,"status":"modified"}]}