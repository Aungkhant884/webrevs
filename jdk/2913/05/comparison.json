{"files":[{"patch":"@@ -676,1 +676,1 @@\n-            if (! (obj instanceof Redirect))\n+            if (! (obj instanceof Redirect r))\n@@ -678,1 +678,0 @@\n-            Redirect r = (Redirect) obj;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ProcessBuilder.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -522,8 +522,3 @@\n-        if (obj instanceof ProcessHandleImpl) {\n-            ProcessHandleImpl other = (ProcessHandleImpl) obj;\n-            return (pid == other.pid) &&\n-                    (startTime == other.startTime\n-                        || startTime == 0\n-                        || other.startTime == 0);\n-        }\n-        return false;\n+        return (obj instanceof ProcessHandleImpl other)\n+                && (pid == other.pid)\n+                && (startTime == other.startTime || startTime == 0 || other.startTime == 0);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ProcessHandleImpl.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -116,2 +116,0 @@\n-            if (!(o instanceof Key)) return false;\n-            Key that = (Key) o;\n@@ -119,2 +117,3 @@\n-            return name == that.name &&\n-                   Arrays.equals(ptypes, that.ptypes);\n+            return (o instanceof Key that)\n+                    && name == that.name\n+                    && Arrays.equals(ptypes, that.ptypes);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/PublicMethods.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1428,5 +1428,2 @@\n-            if (!(obj instanceof Version))\n-                return false;\n-\n-            Version that = (Version)obj;\n-            return (this.version().equals(that.version())\n+            return (obj instanceof Version that)\n+                && (this.version().equals(that.version())\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -132,2 +132,1 @@\n-                if (t instanceof ThreadDeath) {\n-                    ThreadDeath td = (ThreadDeath)t;\n+                if (t instanceof ThreadDeath td) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Shutdown.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -409,10 +409,8 @@\n-        if (!(obj instanceof StackTraceElement))\n-            return false;\n-        StackTraceElement e = (StackTraceElement)obj;\n-        return Objects.equals(classLoaderName, e.classLoaderName) &&\n-            Objects.equals(moduleName, e.moduleName) &&\n-            Objects.equals(moduleVersion, e.moduleVersion) &&\n-            e.declaringClass.equals(declaringClass) &&\n-            e.lineNumber == lineNumber &&\n-            Objects.equals(methodName, e.methodName) &&\n-            Objects.equals(fileName, e.fileName);\n+        return (obj instanceof StackTraceElement e)\n+                && Objects.equals(classLoaderName, e.classLoaderName)\n+                && Objects.equals(moduleName, e.moduleName)\n+                && Objects.equals(moduleVersion, e.moduleVersion)\n+                && e.declaringClass.equals(declaringClass)\n+                && e.lineNumber == lineNumber\n+                && Objects.equals(methodName, e.methodName)\n+                && Objects.equals(fileName, e.fileName);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StackTraceElement.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1821,7 +1821,3 @@\n-        if (anObject instanceof String) {\n-            String aString = (String)anObject;\n-            if (!COMPACT_STRINGS || this.coder == aString.coder) {\n-                return StringLatin1.equals(value, aString.value);\n-            }\n-        }\n-        return false;\n+        return (anObject instanceof String aString)\n+                && (!COMPACT_STRINGS || this.coder == aString.coder)\n+                && StringLatin1.equals(value, aString.value);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -353,6 +353,5 @@\n-        if (!(o instanceof DynamicConstantDesc)) return false;\n-        DynamicConstantDesc<?> desc = (DynamicConstantDesc<?>) o;\n-        return Objects.equals(bootstrapMethod, desc.bootstrapMethod) &&\n-               Arrays.equals(bootstrapArgs, desc.bootstrapArgs) &&\n-               Objects.equals(constantName, desc.constantName) &&\n-               Objects.equals(constantType, desc.constantType);\n+        return (o instanceof DynamicConstantDesc desc)\n+                && Objects.equals(bootstrapMethod, desc.bootstrapMethod)\n+                && Arrays.equals(bootstrapArgs, desc.bootstrapArgs)\n+                && Objects.equals(constantName, desc.constantName)\n+                && Objects.equals(constantType, desc.constantType);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/DynamicConstantDesc.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -305,2 +305,1 @@\n-        if (arg instanceof MethodHandle) {\n-            MethodHandle mh = (MethodHandle) arg;\n+        if (arg instanceof MethodHandle mh) {\n@@ -630,2 +629,1 @@\n-        if (arg instanceof Name) {\n-            Name n = (Name) arg;\n+        if (arg instanceof Name n) {\n@@ -1682,2 +1680,1 @@\n-        if (arg instanceof Name) {\n-            Name n = (Name) arg;\n+        if (arg instanceof Name n) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/InvokerBytecodeGenerator.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -571,2 +571,1 @@\n-                if (arg instanceof Name) {\n-                    Name n2 = (Name) arg;\n+                if (arg instanceof Name n2) {\n@@ -1136,3 +1135,3 @@\n-            if (!(other instanceof NamedFunction)) return false;\n-            NamedFunction that = (NamedFunction) other;\n-            return this.member != null && this.member.equals(that.member);\n+            return (other instanceof NamedFunction that)\n+                    && this.member != null\n+                    && this.member.equals(that.member);\n@@ -1410,2 +1409,1 @@\n-                if (arguments[j] instanceof Name) {\n-                    Name n = (Name) arguments[j];\n+                if (arguments[j] instanceof Name n) {\n@@ -1438,2 +1436,1 @@\n-                if (arguments[j] instanceof Name) {\n-                    Name n = (Name) arguments[j];\n+                if (arguments[j] instanceof Name n) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaForm.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -340,1 +340,1 @@\n-        } else if (c instanceof Transform) {\n+        } else if (c instanceof Transform t) {\n@@ -342,1 +342,0 @@\n-            Transform t = (Transform)c;\n@@ -392,2 +391,1 @@\n-                if (c instanceof Transform) {\n-                    Transform k = (Transform)c;\n+                if (c instanceof Transform k) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaFormEditor.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -150,2 +150,1 @@\n-            if (type instanceof String) {\n-                String sig = (String) type;\n+            if (type instanceof String sig) {\n@@ -154,2 +153,1 @@\n-            } else if (type instanceof Object[]) {\n-                Object[] typeInfo = (Object[]) type;\n+            } else if (type instanceof Object[] typeInfo) {\n@@ -238,2 +236,1 @@\n-            if (type instanceof String) {\n-                String sig = (String) type;\n+            if (type instanceof String sig) {\n@@ -941,2 +938,1 @@\n-                if (from instanceof MethodHandles.Lookup) {\n-                    MethodHandles.Lookup lookup = (MethodHandles.Lookup)from;\n+                if (from instanceof MethodHandles.Lookup lookup) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MemberName.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2265,1 +2265,1 @@\n-                    if (!(constant instanceof Type)) {\n+                    if (!(constant instanceof Type type)) {\n@@ -2268,1 +2268,0 @@\n-                    Type type = ((Type) constant);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -608,2 +608,1 @@\n-        if (handle instanceof DirectMethodHandle) {\n-            DirectMethodHandle directHandle = (DirectMethodHandle)handle;\n+        if (handle instanceof DirectMethodHandle directHandle) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/VarHandles.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -313,4 +313,2 @@\n-            if (!(ob instanceof Requires))\n-                return false;\n-            Requires that = (Requires)ob;\n-            return name.equals(that.name) && mods.equals(that.mods)\n+            return (ob instanceof Requires that)\n+                    && name.equals(that.name) && mods.equals(that.mods)\n@@ -534,4 +532,2 @@\n-            if (!(ob instanceof Exports))\n-                return false;\n-            Exports other = (Exports)ob;\n-            return Objects.equals(this.mods, other.mods)\n+            return (ob instanceof Exports other)\n+                    && Objects.equals(this.mods, other.mods)\n@@ -739,6 +735,4 @@\n-            if (!(ob instanceof Opens))\n-                return false;\n-            Opens other = (Opens)ob;\n-            return Objects.equals(this.mods, other.mods)\n-                    && Objects.equals(this.source, other.source)\n-                    && Objects.equals(this.targets, other.targets);\n+           return (ob instanceof Opens other)\n+                   && Objects.equals(this.mods, other.mods)\n+                   && Objects.equals(this.source, other.source)\n+                   && Objects.equals(this.targets, other.targets);\n@@ -875,5 +869,3 @@\n-            if (!(ob instanceof Provides))\n-                return false;\n-            Provides other = (Provides)ob;\n-            return Objects.equals(this.service, other.service) &&\n-                    Objects.equals(this.providers, other.providers);\n+            return (ob instanceof Provides other)\n+                    && Objects.equals(this.service, other.service)\n+                    && Objects.equals(this.providers, other.providers);\n@@ -2244,4 +2236,2 @@\n-        if (!(ob instanceof ModuleDescriptor))\n-            return false;\n-        ModuleDescriptor that = (ModuleDescriptor)ob;\n-        return (name.equals(that.name)\n+        return (ob instanceof ModuleDescriptor that)\n+                && (name.equals(that.name)\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java","additions":13,"deletions":23,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -141,6 +141,3 @@\n-        if (!(ob instanceof ResolvedModule))\n-            return false;\n-\n-        ResolvedModule that = (ResolvedModule) ob;\n-        return Objects.equals(this.cf, that.cf)\n-                && Objects.equals(this.mref, that.mref);\n+        return (ob instanceof ResolvedModule that)\n+            && Objects.equals(this.cf, that.cf)\n+            && Objects.equals(this.mref, that.mref);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ResolvedModule.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -717,2 +717,1 @@\n-            if (result instanceof TypeNotPresentExceptionProxy) {\n-                TypeNotPresentExceptionProxy proxy = (TypeNotPresentExceptionProxy)result;\n+            if (result instanceof TypeNotPresentExceptionProxy proxy) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Method.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -80,6 +80,3 @@\n-        if(obj instanceof Parameter) {\n-            Parameter other = (Parameter)obj;\n-            return (other.executable.equals(executable) &&\n-                    other.index == index);\n-        }\n-        return false;\n+        return (obj instanceof Parameter other)\n+                && other.executable.equals(executable)\n+                && other.index == index;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Parameter.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}