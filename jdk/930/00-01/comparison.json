{"files":[{"patch":"@@ -1567,5 +1567,0 @@\n-  EVT_TRIG_TRACE(JVMTI_EVENT_METHOD_EXIT, (\"[%s] Trg Method Exit triggered %s.%s\",\n-                     JvmtiTrace::safe_get_thread_name(thread),\n-                     (mh() == NULL) ? \"NULL\" : mh()->klass_name()->as_C_string(),\n-                     (mh() == NULL) ? \"NULL\" : mh()->name()->as_C_string() ));\n-\n@@ -1573,5 +1568,0 @@\n-  if (state == NULL || !state->is_interp_only_mode()) {\n-    \/\/ for any thread that actually wants method exit, interp_only_mode is set\n-    return;\n-  }\n-\n@@ -1595,0 +1585,1 @@\n+        value.l = JNIHandles::make_local(thread, result());\n@@ -1599,10 +1590,6 @@\n-  if (exception_exit) {\n-    post_method_exit_inner(thread, mh, state, exception_exit, current_frame, result, value);\n-  } else {\n-    \/\/ Deferred transition to VM, so we can stash away the return oop before GC\n-    \/\/ Note that this transition is not needed when throwing an exception, because\n-    \/\/ there is no oop to retain.\n-    JRT_BLOCK\n-      post_method_exit_inner(thread, mh, state, exception_exit, current_frame, result, value);\n-    JRT_BLOCK_END\n-  }\n+  \/\/ Deferred transition to VM, so we can stash away the return oop before GC\n+  \/\/ Note that this transition is not needed when throwing an exception, because\n+  \/\/ there is no oop to retain.\n+  JRT_BLOCK\n+    post_method_exit_inner(thread, mh, state, exception_exit, current_frame, value);\n+  JRT_BLOCK_END\n@@ -1620,2 +1607,1 @@\n-                                         frame& current_frame,\n-                                         Handle& result,\n+                                         frame current_frame,\n@@ -1623,0 +1609,10 @@\n+  EVT_TRIG_TRACE(JVMTI_EVENT_METHOD_EXIT, (\"[%s] Trg Method Exit triggered %s.%s\",\n+                                           JvmtiTrace::safe_get_thread_name(thread),\n+                                           (mh() == NULL) ? \"NULL\" : mh()->klass_name()->as_C_string(),\n+                                           (mh() == NULL) ? \"NULL\" : mh()->name()->as_C_string() ));\n+\n+  if (state == NULL || !state->is_interp_only_mode()) {\n+    \/\/ for any thread that actually wants method exit, interp_only_mode is set\n+    return;\n+  }\n+\n@@ -1634,3 +1630,0 @@\n-        if (result.not_null()) {\n-          value.l = JNIHandles::make_local(thread, result());\n-        }\n@@ -1828,1 +1821,3 @@\n-        JvmtiExport::post_method_exit(thread, method, thread->last_frame());\n+        jvalue no_value;\n+        no_value.j = 0L;\n+        JvmtiExport::post_method_exit_inner(thread, mh, state, true, thread->last_frame(), no_value);\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":21,"deletions":26,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -200,2 +200,1 @@\n-                                     frame& current_frame,\n-                                     Handle& result,\n+                                     frame current_frame,\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}