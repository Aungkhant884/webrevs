{"files":[{"patch":"@@ -304,0 +304,5 @@\n+void ReadClosure::do_int(int* p) {\n+  intptr_t obj = nextPtr();\n+  *p = (int)(intx(obj));\n+}\n+\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -195,0 +195,4 @@\n+  void do_int(int* p) {\n+    _dump_region->append_intptr_t((intptr_t)(*p));\n+  }\n+\n@@ -224,0 +228,1 @@\n+  void do_int(int* p);\n","filename":"src\/hotspot\/share\/cds\/archiveUtils.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -231,1 +231,1 @@\n-  soc->do_ptr((void**)&_index);\n+  soc->do_ptr(&_index);\n","filename":"src\/hotspot\/share\/cds\/cppVtables.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -858,1 +858,1 @@\n-  soc->do_ptr((void**)&_archived_ArchiveHeapTestClass);\n+  soc->do_ptr(&_archived_ArchiveHeapTestClass);\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -269,1 +269,1 @@\n-  soc->do_ptr((void**)&_static_archive_invokers);\n+  soc->do_ptr(&_static_archive_invokers);\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,2 +59,2 @@\n-    f->do_ptr((void**)&_packages);\n-    f->do_ptr((void**)&_modules);\n+    f->do_ptr(&_packages);\n+    f->do_ptr(&_modules);\n@@ -172,1 +172,1 @@\n-  f->do_ptr((void**)&_archived_javabase_moduleEntry);\n+  f->do_ptr(&_archived_javabase_moduleEntry);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataShared.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -216,2 +216,2 @@\n-  soc->do_ptr((void**)&_buckets);\n-  soc->do_ptr((void**)&_entries);\n+  soc->do_ptr(&_buckets);\n+  soc->do_ptr(&_entries);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-  f->do_u4((u4*)&_##name##_offset);\n+  f->do_int(&_##name##_offset);\n@@ -55,1 +55,1 @@\n-  f->do_u4((u4*)&offset)\n+  f->do_int(&offset)\n","filename":"src\/hotspot\/share\/classfile\/javaClassesImpl.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -935,1 +935,1 @@\n-  soc->do_u4((u4*)(&_shared_strings_array_root_index));\n+  soc->do_int(&_shared_strings_array_root_index);\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1271,1 +1271,1 @@\n-    soc->do_ptr((void**)vmClasses::klass_addr_at(id));\n+    soc->do_ptr(vmClasses::klass_addr_at(id));\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -344,0 +344,3 @@\n+  \/\/ Read\/write the int pointed to by p.\n+  virtual void do_int(int* p) = 0;\n+\n@@ -362,0 +365,3 @@\n+\n+  \/\/ Useful alias\n+  template <typename T> void do_ptr(T** p) { do_ptr((void**)p); }\n","filename":"src\/hotspot\/share\/memory\/iterator.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-    f->do_u4((u4*)&_archived_basic_type_mirror_indices[i]);\n+    f->do_int(&_archived_basic_type_mirror_indices[i]);\n@@ -271,1 +271,1 @@\n-  f->do_ptr((void**)&_fillerArrayKlassObj);\n+  f->do_ptr(&_fillerArrayKlassObj);\n@@ -273,1 +273,1 @@\n-    f->do_ptr((void**)&_typeArrayKlassObjs[i]);\n+    f->do_ptr(&_typeArrayKlassObjs[i]);\n@@ -276,7 +276,7 @@\n-  f->do_ptr((void**)&_objectArrayKlassObj);\n-  f->do_ptr((void**)&_the_array_interfaces_array);\n-  f->do_ptr((void**)&_the_empty_int_array);\n-  f->do_ptr((void**)&_the_empty_short_array);\n-  f->do_ptr((void**)&_the_empty_method_array);\n-  f->do_ptr((void**)&_the_empty_klass_array);\n-  f->do_ptr((void**)&_the_empty_instance_klass_array);\n+  f->do_ptr(&_objectArrayKlassObj);\n+  f->do_ptr(&_the_array_interfaces_array);\n+  f->do_ptr(&_the_empty_int_array);\n+  f->do_ptr(&_the_empty_short_array);\n+  f->do_ptr(&_the_empty_method_array);\n+  f->do_ptr(&_the_empty_klass_array);\n+  f->do_ptr(&_the_empty_instance_klass_array);\n@@ -1271,0 +1271,4 @@\n+void LatestMethodCache::serialize(SerializeClosure* f) {\n+  f->do_ptr(&_klass);\n+}\n+\n","filename":"src\/hotspot\/share\/memory\/universe.cpp","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -46,0 +46,1 @@\n+class SerializeClosure;\n@@ -70,3 +71,1 @@\n-  void serialize(SerializeClosure* f) {\n-    f->do_ptr((void**)&_klass);\n-  }\n+  void serialize(SerializeClosure* f);\n","filename":"src\/hotspot\/share\/memory\/universe.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-  f->do_u4((u4*)&_offset_of_static_fields);\n+  f->do_int(&_offset_of_static_fields);\n","filename":"src\/hotspot\/share\/oops\/instanceMirrorKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-  f->do_u4((u4*)&_offset_of_stack);\n+  f->do_int(&_offset_of_stack);\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}