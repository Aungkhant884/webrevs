{"files":[{"patch":"@@ -750,3 +750,1 @@\n-  \/\/ Can't use strtol because it doesn't detect (at least on Linux\/gcc) overflowing\n-  \/\/ input such as \"0x123456789\" or \"-0x800000001\"\n-  STATIC_ASSERT(sizeof(long long) >= 8); \/\/ C++ specification\n+  STATIC_ASSERT(sizeof(long) >= 4); \/\/ need to have enough bits\n@@ -754,2 +752,3 @@\n-  long long v = strtoll(s, endptr, base);\n-  if (errno != 0 || v < min_jint || v > max_jint) {\n+  long v = strtol(s, endptr, base);\n+  if (errno != 0 LP64_ONLY(|| v < min_jint || v > max_jint)) {\n+    \/\/ long is 64-bit on LP64, so we need explicit range check.\n@@ -767,3 +766,1 @@\n-  \/\/ Can't use strtoul because it doesn't detect (at least on Linux\/gcc) overflowing\n-  \/\/ input such as \"0x123456789\"\n-  STATIC_ASSERT(sizeof(unsigned long long) >= 8); \/\/ C++ specification\n+  STATIC_ASSERT(sizeof(unsigned long) >= 4); \/\/ need to have enough bits\n@@ -771,2 +768,3 @@\n-  unsigned long long v = strtoull(s, endptr, base);\n-  if (errno != 0 || v > max_juint) {\n+  unsigned long v = strtoul(s, endptr, base);\n+  if (errno != 0 LP64_ONLY(|| v > max_juint)) {\n+    \/\/ unsigned long is 64-bit on LP64, so we need explicit range check.\n@@ -944,0 +942,4 @@\n+    \/\/ This function parses only input strings without a decimal\n+    \/\/ point character (.)\n+    \/\/ If a string looks like a FP number, it would be parsed by\n+    \/\/ set_fp_numeric_flag(). See Arguments::parse_argument().\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -339,0 +339,21 @@\n+  \/* All edge cases without a k\/m\/g\/t suffix *\/                                                                \\\n+  f(\"0x7ffffffe\",              max_jint-1,   0x7ffffffe,   0x7ffffffeLL,            0x7ffffffeULL            ) \\\n+  f(\"0x7fffffff\",              max_jint,     0x7fffffff,   0x7fffffffLL,            0x7fffffffULL            ) \\\n+  f(\"0x80000000\",              BAD,          0x80000000,   0x80000000LL,            0x80000000ULL            ) \\\n+  f(\"0xfffffffe\",              BAD,          max_juint-1,  0xfffffffeLL,            0xfffffffeULL            ) \\\n+  f(\"0xffffffff\",              BAD,          max_juint,    0xffffffffLL,            0xffffffffULL            ) \\\n+  f(\"0x100000000\",             BAD,          BAD,          0x100000000LL,           0x100000000ULL           ) \\\n+  f(\"-0x7fffffff\",             min_jint+1,   BAD,         -0x7fffffffLL,            BAD                      ) \\\n+  f(\"-0x80000000\",             min_jint,     BAD,         -0x80000000LL,            BAD                      ) \\\n+  f(\"-0x80000001\",             BAD,          BAD,         -0x80000001LL,            BAD                      ) \\\n+                                                                                                               \\\n+  f(\"0x7ffffffffffffffe\",      BAD,          BAD,          max_jlong-1,             0x7ffffffffffffffeULL    ) \\\n+  f(\"0x7fffffffffffffff\",      BAD,          BAD,          max_jlong,               0x7fffffffffffffffULL    ) \\\n+  f(\"0x8000000000000000\",      BAD,          BAD,          BAD,                     0x8000000000000000ULL    ) \\\n+  f(\"0xfffffffffffffffe\",      BAD,          BAD,          BAD,                     max_julong-1             ) \\\n+  f(\"0xffffffffffffffff\",      BAD,          BAD,          BAD,                     max_julong               ) \\\n+  f(\"0x10000000000000000\",     BAD,          BAD,          BAD,                     BAD                      ) \\\n+  f(\"-0x7fffffffffffffff\",     BAD,          BAD,          min_jlong+1,             BAD                      ) \\\n+  f(\"-0x8000000000000000\",     BAD,          BAD,          min_jlong,               BAD                      ) \\\n+  f(\"-0x8000000000000001\",     BAD,          BAD,          BAD,                     BAD                      ) \\\n+                                                                                                               \\\n","filename":"test\/hotspot\/gtest\/runtime\/test_arguments.cpp","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"}]}