{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include <errno.h>\n@@ -48,0 +49,14 @@\n+\/*\n+ *\n+ *\/\n+static void\n+set_classloader_malloc_error(JNIEnv *env)\n+{\n+    if (errno == ENOMEM) {\n+        JNU_ThrowOutOfMemoryError(env, 0);\n+    } else {\n+        JNU_ThrowByName(env, \"java\/lang\/ClassFormatError\", \"ClassLoader internal allocation failure\");\n+    }\n+}\n+\n+\n@@ -60,1 +75,1 @@\n-            JNU_ThrowOutOfMemoryError(env, NULL);\n+            set_classloader_malloc_error(env);\n@@ -91,1 +106,1 @@\n-        return 0;\n+        return NULL;\n@@ -99,1 +114,1 @@\n-        return 0;\n+        return NULL;\n@@ -104,3 +119,3 @@\n-    if (body == 0) {\n-        JNU_ThrowOutOfMemoryError(env, 0);\n-        return 0;\n+    if (body == NULL) {\n+        set_classloader_malloc_error(env);\n+        return NULL;\n@@ -111,1 +126,1 @@\n-    if ((*env)->ExceptionOccurred(env))\n+    if ((*env)->ExceptionOccurred(env)) {\n@@ -113,0 +128,1 @@\n+    }\n@@ -171,1 +187,1 @@\n-    if (body == 0) {\n+    if (body == NULL) {\n@@ -173,1 +189,1 @@\n-        return 0;\n+        return NULL;\n@@ -181,1 +197,1 @@\n-            JNU_ThrowOutOfMemoryError(env, NULL);\n+            set_classloader_malloc_error(env);\n@@ -192,1 +208,1 @@\n-            JNU_ThrowOutOfMemoryError(env, NULL);\n+            set_classloader_malloc_error(env);\n@@ -231,1 +247,1 @@\n-        return 0;\n+        return NULL;\n@@ -239,1 +255,1 @@\n-        return 0;\n+        return NULL;\n@@ -243,3 +259,4 @@\n-    if (body == 0) {\n-        JNU_ThrowOutOfMemoryError(env, 0);\n-        return 0;\n+\n+    if (body == NULL) {\n+        set_classloader_malloc_error(env);\n+        return NULL;\n@@ -285,1 +302,1 @@\n-        return 0;\n+        return NULL;\n@@ -290,1 +307,1 @@\n-        JNU_ThrowOutOfMemoryError(env, NULL);\n+        set_classloader_malloc_error(env);\n@@ -314,1 +331,1 @@\n-        return 0;\n+        return NULL;\n","filename":"src\/java.base\/share\/native\/libjava\/ClassLoader.c","additions":37,"deletions":20,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8262913\n+ * @bug 8262913 8283225\n@@ -83,1 +83,4 @@\n-            if (!cfe.getMessage().contains(\"Truncated class file\")) {\n+            String emsg = cfe.getMessage();\n+            if (!emsg.contains(\"Truncated class file\") &&\n+                !emsg.contains(\"ClassLoader internal allocation failure\"))\n+            {\n","filename":"test\/hotspot\/jtreg\/runtime\/DefineClass\/NullClassBytesTest.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"}]}