{"files":[{"patch":"@@ -2,2 +2,1 @@\n- * Copyright (c) 2011, 2017, Oracle and\/or its affiliates. All rights reserved.\n- * @LastModified: Sep 2017\n+ * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,0 +177,2 @@\n+    \/\/ spec-compatible name with a prefix \"jdk.xml\"\n+    public static final String JDK_EXT_CLASSLOADER = \"jdk.xml.extensionClassLoader\";\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/XalanConstants.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -120,1 +120,1 @@\n-        String systemProperty() {\n+        public String systemProperty() {\n@@ -262,2 +262,4 @@\n-            int temp = 0;\n-            try {\n+            int temp;\n+            if (value instanceof Integer) {\n+                temp = (Integer)value;\n+            } else {\n@@ -268,2 +270,3 @@\n-            } catch (NumberFormatException e) {}\n-            setLimit(index, state, temp);        }\n+            }\n+            setLimit(index, state, temp);\n+        }\n@@ -380,1 +383,3 @@\n-            if (limit.equalsAPIPropertyName(propertyName)) {\n+            \/\/ see JDK-8265248, accept both the URL and jdk.xml as prefix\n+            if (limit.equalsAPIPropertyName(propertyName) ||\n+                    limit.equalsSystemPropertyName(propertyName)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/utils\/XMLSecurityManager.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,1 @@\n+import jdk.xml.internal.JdkXmlUtils.ImplPropMap;\n@@ -88,1 +89,1 @@\n- * @LastModified: Aug 2019\n+ * @LastModified: Apr 2021\n@@ -360,1 +361,1 @@\n-        } else if (name.equals(XalanConstants.JDK_EXTENSION_CLASSLOADER)) {\n+        } else if (ImplPropMap.EXTCLSLOADER.is(name)) {\n@@ -372,1 +373,1 @@\n-        } else if (JdkXmlUtils.CDATA_CHUNK_SIZE.equals(name)) {\n+        } else if (ImplPropMap.CDATACHUNKSIZE.is(name)) {\n@@ -489,1 +490,1 @@\n-        else if ( name.equals(XalanConstants.JDK_EXTENSION_CLASSLOADER)) {\n+        else if (ImplPropMap.EXTCLSLOADER.is(name)) {\n@@ -514,1 +515,1 @@\n-        } else if (JdkXmlUtils.CDATA_CHUNK_SIZE.equals(name)) {\n+        } else if (ImplPropMap.CDATACHUNKSIZE.is(name)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TransformerFactoryImpl.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -86,0 +86,1 @@\n+import jdk.xml.internal.JdkXmlUtils.ImplPropMap;\n@@ -98,1 +99,1 @@\n- * @LastModified: Feb 2021\n+ * @LastModified: Apr 2021\n@@ -233,0 +234,3 @@\n+    \/\/ Impl-specific property: xsltcIsStandalone\n+    String _xsltcIsStandalone;\n+\n@@ -284,0 +288,1 @@\n+            _xsltcIsStandalone = v;\n@@ -908,0 +913,3 @@\n+        if (ImplPropMap.XSLTCISSTANDALONE.is(name)) {\n+            return _xsltcIsStandalone;\n+        }\n@@ -969,0 +977,3 @@\n+        if (ImplPropMap.XSLTCISSTANDALONE.is(name)) {\n+            _xsltcIsStandalone = value;\n+        }\n@@ -1040,1 +1051,1 @@\n-            else if (isStandaloneProperty(name)) {\n+            else if (ImplPropMap.XSLTCISSTANDALONE.is(name)) {\n@@ -1104,1 +1115,1 @@\n-            else if (isStandaloneProperty(name)) {\n+            else if (ImplPropMap.XSLTCISSTANDALONE.is(name)) {\n@@ -1222,1 +1233,1 @@\n-                isStandaloneProperty(name) ||\n+                ImplPropMap.XSLTCISSTANDALONE.is(name) ||\n@@ -1226,10 +1237,0 @@\n-    \/**\n-     * Checks whether the property requested is the isStandalone property. Both\n-     * the new and legacy property names are supported.\n-     * @param name the property name\n-     * @return true if the property is \"isStandalone\", false otherwise\n-     *\/\n-    private boolean isStandaloneProperty(String name) {\n-        return (name.equals(OutputPropertiesFactory.JDK_IS_STANDALONE) ||\n-                    name.equals(OutputPropertiesFactory.ORACLE_IS_STANDALONE));\n-    }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xalan\/internal\/xsltc\/trax\/TransformerImpl.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,4 @@\n-        return supportedProps.get(property);\n+        \/** Check to see if the property is managed by the security manager **\/\n+        String propertyValue = (fSecurityManager != null) ?\n+                fSecurityManager.getLimitAsString(property) : null;\n+        return propertyValue != null ? propertyValue : supportedProps.get(property);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/impl\/PropertyManager.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+import com.sun.org.apache.xerces.internal.utils.XMLSecurityManager;\n@@ -39,0 +40,2 @@\n+ *\n+ * @LastModified: Apr 2021\n@@ -107,1 +110,7 @@\n-        attributes.put(name, value);\n+        String limitName = XMLSecurityManager.mapPropertyName(name);\n+        \/\/ use the limit name if found, otherwise continue as usual\n+        if (limitName != null) {\n+            attributes.put(limitName, value);\n+        } else {\n+            attributes.put(name, value);\n+        }\n@@ -127,1 +136,9 @@\n-            Object val = attributes.get(name);\n+            Object val;\n+            String limitName = XMLSecurityManager.mapPropertyName(name);\n+            \/\/ use the limit name if found, otherwise continue as usual\n+            if (limitName != null) {\n+                val = attributes.get(limitName);\n+            } else {\n+                val = attributes.get(name);\n+            }\n+\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/DocumentBuilderFactoryImpl.java","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,0 +69,2 @@\n+ *\n+ * @LastModified: Apr 2021\n@@ -403,1 +405,5 @@\n-            return fXMLSchemaLoader.getProperty(name);\n+            \/** Check to see if the property is managed by the security manager **\/\n+            String propertyValue = (fSecurityManager != null) ?\n+                    fSecurityManager.getLimitAsString(name) : null;\n+            return propertyValue != null ? propertyValue :\n+                    fXMLSchemaLoader.getProperty(name);\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/jaxp\/validation\/XMLSchemaFactory.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-        String systemProperty() {\n+        public String systemProperty() {\n@@ -272,2 +272,2 @@\n-            if (Integer.class.isAssignableFrom(value.getClass())) {\n-                temp = ((Integer)value).intValue();\n+            if (value instanceof Integer) {\n+                temp = (Integer)value;\n@@ -382,1 +382,3 @@\n-            if (limit.equalsAPIPropertyName(propertyName)) {\n+            \/\/ see JDK-8265248, accept both the URL and jdk.xml as prefix\n+            if (limit.equalsAPIPropertyName(propertyName) ||\n+                    limit.equalsSystemPropertyName(propertyName)) {\n@@ -560,1 +562,1 @@\n-    static public XMLSecurityManager convert(Object value, XMLSecurityManager securityManager) {\n+    public static XMLSecurityManager convert(Object value, XMLSecurityManager securityManager) {\n@@ -567,1 +569,1 @@\n-        if (XMLSecurityManager.class.isAssignableFrom(value.getClass())) {\n+        if (value instanceof XMLSecurityManager) {\n@@ -573,1 +575,1 @@\n-            if (SecurityManager.class.isAssignableFrom(value.getClass())) {\n+            if (value instanceof SecurityManager) {\n@@ -582,0 +584,21 @@\n+\n+    \/**\n+     * Maps to the qualified property name if the specified name is the System\n+     * Property. This method can be used to accept input of a property with\n+     * \"jdk.xml\" prefix as specified in the module summary, but allow the\n+     * internal operations to continue using the existing name with an URL\n+     * style prefix.\n+     *\n+     * @param name the specified name\n+     * @return the qualified property name if the specified name matches the\n+     * System Property of one of the limits, null otherwise\n+     * @see JDK-8265248\n+     *\/\n+    public static String mapPropertyName(String name) {\n+        for (Limit limit : Limit.values()) {\n+            if (limit.equalsSystemPropertyName(name)) {\n+                return limit.apiProperty();\n+            }\n+        }\n+        return null;\n+    }\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xerces\/internal\/utils\/XMLSecurityManager.java","additions":31,"deletions":8,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-import com.sun.org.apache.xerces.internal.impl.Constants;\n@@ -42,1 +41,0 @@\n-import com.sun.org.apache.xml.internal.serializer.SerializerFactory;\n@@ -46,0 +44,1 @@\n+import jdk.xml.internal.JdkXmlUtils.ImplPropMap;\n@@ -71,1 +70,1 @@\n- * @LastModified: Jan 2021\n+ * @LastModified: Apr 2021\n@@ -191,0 +190,1 @@\n+            DOMConstants.SP_IS_STANDALONE,\n@@ -399,1 +399,2 @@\n-                    || name.equalsIgnoreCase(DOMConstants.FQ_IS_STANDALONE)){\n+                    || name.equalsIgnoreCase(DOMConstants.FQ_IS_STANDALONE)\n+                    || name.equalsIgnoreCase(DOMConstants.SP_IS_STANDALONE)){\n@@ -457,1 +458,1 @@\n-        } else if (name.equalsIgnoreCase(DOMConstants.FQ_IS_STANDALONE)) {\n+        } else if (ImplPropMap.ISSTANDALONE.is(name)) {\n@@ -629,1 +630,1 @@\n-            } else if (name.equalsIgnoreCase(DOMConstants.FQ_IS_STANDALONE)) {\n+            } else if (ImplPropMap.ISSTANDALONE.is(name)) {\n","filename":"src\/java.xml\/share\/classes\/com\/sun\/org\/apache\/xml\/internal\/serializer\/dom3\/LSSerializerImpl.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,43 +39,3 @@\n- * that uses the following implementation resolution mechanisms to determine an implementation:\n- * <ol>\n- *    <li>\n- *      If the system property specified by {@link #DATATYPEFACTORY_PROPERTY}, \"{@code javax.xml.datatype.DatatypeFactory}\",\n- *      exists, a class with the name of the property value is instantiated.\n- *      Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.\n- *    <\/li>\n- *    <li>\n- *      <p>\n- *      Use the configuration file \"jaxp.properties\". The file is in standard\n- *      {@link java.util.Properties} format and typically located in the\n- *      {@code conf} directory of the Java installation. It contains the fully qualified\n- *      name of the implementation class with the key being the system property\n- *      defined above.\n- *      <p>\n- *      The jaxp.properties file is read only once by the JAXP implementation\n- *      and its values are then cached for future use.  If the file does not exist\n- *      when the first attempt is made to read from it, no further attempts are\n- *      made to check for its existence.  It is not possible to change the value\n- *      of any property in jaxp.properties after it has been read for the first time.\n- *    <\/li>\n- *    <li>\n- *     <p>\n- *     Use the service-provider loading facility, defined by the {@link java.util.ServiceLoader} class, to attempt\n- *     to locate and load an implementation of the service using the {@linkplain\n- *     java.util.ServiceLoader#load(java.lang.Class) default loading mechanism}:\n- *     the service-provider loading facility will use the {@linkplain\n- *     java.lang.Thread#getContextClassLoader() current thread's context class loader}\n- *     to attempt to load the service. If the context class\n- *     loader is null, the {@linkplain\n- *     ClassLoader#getSystemClassLoader() system class loader} will be used.\n- *     <p>\n- *     In case of {@link java.util.ServiceConfigurationError service\n- *     configuration error}, a {@link javax.xml.datatype.DatatypeConfigurationException}\n- *     will be thrown.\n- *    <\/li>\n- *    <li>\n- *      <p>\n- *      The final mechanism is to attempt to instantiate the {@code Class} specified by\n- *      {@link #DATATYPEFACTORY_IMPLEMENTATION_CLASS}.\n- *      Any Exception thrown during the instantiation process is wrapped as a {@link DatatypeConfigurationException}.\n- *    <\/li>\n- * <\/ol>\n+ * that uses the\n+ * <a href=\"..\/..\/..\/module-summary.html#LookupMechanism\">JAXP Lookup Mechanism<\/a>\n+ * to determine the {@code DatatypeFactory} implementation class to load.\n@@ -155,3 +115,3 @@\n-     *\n-     * <p>The implementation resolution mechanisms are <a href=\"#DatatypeFactory.newInstance\">defined<\/a> in this\n-     * {@code Class}'s documentation.\n+     * This method uses the\n+     * <a href=\"..\/..\/..\/module-summary.html#LookupMechanism\">JAXP Lookup Mechanism<\/a>\n+     * to determine the {@code DatatypeFactory} implementation class to load.\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/datatype\/DatatypeFactory.java","additions":7,"deletions":47,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,1 +29,1 @@\n-import static jdk.xml.internal.JdkXmlUtils.OVERRIDE_PARSER;\n+import jdk.xml.internal.JdkXmlUtils.ImplPropMap;\n@@ -31,1 +31,0 @@\n-import static jdk.xml.internal.JdkXmlUtils.RESET_SYMBOL_TABLE;\n@@ -67,2 +66,1 @@\n-        ENABLE_EXTENSION_FUNCTION(ORACLE_ENABLE_EXTENSION_FUNCTION, SP_ENABLE_EXTENSION_FUNCTION_SPEC,\n-                ORACLE_ENABLE_EXTENSION_FUNCTION, SP_ENABLE_EXTENSION_FUNCTION,\n+        ENABLE_EXTENSION_FUNCTION(ImplPropMap.ENABLEEXTFUNC, null, null, null, null,\n@@ -74,1 +72,1 @@\n-        USE_CATALOG(PROPERTY_USE_CATALOG, SP_USE_CATALOG,\n+        USE_CATALOG(null, PROPERTY_USE_CATALOG, SP_USE_CATALOG,\n@@ -82,2 +80,1 @@\n-        RESET_SYMBOL_TABLE_FEATURE(RESET_SYMBOL_TABLE, RESET_SYMBOL_TABLE,\n-                null, null,\n+        RESET_SYMBOL_TABLE_FEATURE(ImplPropMap.RESETSYMBOLTABLE, null, null, null, null,\n@@ -90,2 +87,1 @@\n-        JDK_OVERRIDE_PARSER(OVERRIDE_PARSER, OVERRIDE_PARSER,\n-                ORACLE_FEATURE_SERVICE_MECHANISM, ORACLE_FEATURE_SERVICE_MECHANISM,\n+        JDK_OVERRIDE_PARSER(ImplPropMap.OVERRIDEPARSER, null, null, null, null,\n@@ -94,0 +90,1 @@\n+        private final ImplPropMap implMap;\n@@ -115,6 +112,15 @@\n-        XmlFeature(String name, String nameSP, String nameOld, String nameOldSP,\n-                boolean value, boolean valueEnforced, boolean hasSystem, boolean enforced) {\n-            this.name = name;\n-            this.nameSP = nameSP;\n-            this.nameOld = nameOld;\n-            this.nameOldSP = nameOldSP;\n+        XmlFeature(ImplPropMap implMap, String name, String nameSP, String nameOld,\n+                String nameOldSP, boolean value, boolean valueEnforced,\n+                boolean hasSystem, boolean enforced) {\n+            this.implMap = implMap;\n+            if (implMap != null) {\n+                this.name = implMap.qName();\n+                this.nameSP = implMap.systemProperty();\n+                this.nameOld = implMap.qNameOld();\n+                this.nameOldSP = implMap.systemPropertyOld();\n+            } else {\n+                this.name = name;\n+                this.nameSP = nameSP;\n+                this.nameOld = nameOld;\n+                this.nameOldSP = nameOldSP;\n+            }\n@@ -134,0 +140,3 @@\n+            if (implMap != null) {\n+                return implMap.is(propertyName);\n+            }\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/JdkXmlFeatures.java","additions":25,"deletions":16,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,12 @@\n+import static com.sun.org.apache.xalan.internal.XalanConstants.JDK_EXTENSION_CLASSLOADER;\n+import static com.sun.org.apache.xalan.internal.XalanConstants.JDK_EXT_CLASSLOADER;\n+import com.sun.org.apache.xml.internal.serializer.OutputPropertiesFactory;\n+import static com.sun.org.apache.xml.internal.serializer.OutputPropertiesFactory.JDK_IS_STANDALONE;\n+import static com.sun.org.apache.xml.internal.serializer.OutputPropertiesFactory.ORACLE_IS_STANDALONE;\n+import static com.sun.org.apache.xml.internal.serializer.dom3.DOMConstants.FQ_IS_STANDALONE;\n+import static com.sun.org.apache.xml.internal.serializer.dom3.DOMConstants.SP_IS_STANDALONE;\n+import static jdk.xml.internal.JdkXmlFeatures.ORACLE_ENABLE_EXTENSION_FUNCTION;\n+import static jdk.xml.internal.JdkXmlFeatures.ORACLE_FEATURE_SERVICE_MECHANISM;\n+import static jdk.xml.internal.JdkXmlFeatures.SP_ENABLE_EXTENSION_FUNCTION;\n+import static jdk.xml.internal.JdkXmlFeatures.SP_ENABLE_EXTENSION_FUNCTION_SPEC;\n+\n@@ -65,0 +77,4 @@\n+    \/**\n+     * JDK Implementation Specific Features and Properties\n+     *\/\n+    public static final String SP_XSLTC_IS_STANDALONE = OutputPropertiesFactory.SP_IS_STANDALONE;\n@@ -413,0 +429,102 @@\n+\n+    \/**\n+     * Properties Name Map that includes Implementation-Specific Features and\n+     * Properties except the limits that are defined in XMLSecurityManager.\n+     * The purpose of the map is to provide a map between names with URL style\n+     * prefix and those with \"jdk.xml\". The later are currently specified in the\n+     * module summary, and share the same name with their System Properties.\n+     *\/\n+    public static enum ImplPropMap {\n+\n+        ISSTANDALONE(\"isStandalone\", FQ_IS_STANDALONE, SP_IS_STANDALONE, true, null, null),\n+        XSLTCISSTANDALONE(\"xsltcIsStandalone\", JDK_IS_STANDALONE, SP_XSLTC_IS_STANDALONE,\n+            true, ORACLE_IS_STANDALONE, null),\n+        CDATACHUNKSIZE(\"cdataChunkSize\", CDATA_CHUNK_SIZE, CDATA_CHUNK_SIZE, false, null, null),\n+        EXTCLSLOADER(\"extensionClassLoader\", JDK_EXTENSION_CLASSLOADER, null,\n+            true, JDK_EXT_CLASSLOADER, null),\n+        ENABLEEXTFUNC(\"enableExtensionFunctions\", ORACLE_ENABLE_EXTENSION_FUNCTION,\n+            SP_ENABLE_EXTENSION_FUNCTION_SPEC, true, null, SP_ENABLE_EXTENSION_FUNCTION),\n+        OVERRIDEPARSER(\"overrideDefaultParser\", OVERRIDE_PARSER, OVERRIDE_PARSER,\n+            false, ORACLE_FEATURE_SERVICE_MECHANISM, ORACLE_FEATURE_SERVICE_MECHANISM),\n+        RESETSYMBOLTABLE(\"resetSymbolTable\", RESET_SYMBOL_TABLE, RESET_SYMBOL_TABLE,\n+            false, null, null);\n+\n+        private final String name;\n+        private final String qName;\n+        private final String spName;\n+        private final boolean differ;\n+        private final String oldQName;\n+        private final String oldSPName;\n+\n+        \/**\n+         * Constructs an instance.\n+         * @param name the property name\n+         * @param qName the qualified property name\n+         * @param spName the corresponding System Property\n+         * @param differ a flag indicating whether qName and spName are the same\n+         * @param oldName the legacy property name, null if N\/A\n+         * @param oldSPName the legacy System Property name, null if N\/A\n+         *\/\n+        ImplPropMap(String name, String qName, String spName, boolean differ,\n+                String oldQName, String oldSPName) {\n+            this.name = name;\n+            this.qName = qName;\n+            this.spName = spName;\n+            this.differ = differ;\n+            this.oldQName = oldQName;\n+            this.oldSPName = oldSPName;\n+        }\n+\n+        \/**\n+         * Checks whether the specified name is the property. Checks both the\n+         * property and System Property if they differ. Checks also the legacy\n+         * name if applicable.\n+         *\n+         * @param name the specified name\n+         * @return true if there is a match, false otherwise\n+         *\/\n+        public boolean is(String name) {\n+                   \/\/ current spec calls for using a name same as spName\n+            return (spName != null && spName.equals(name)) ||\n+                   \/\/ check qName only if it differs from spName\n+                   (differ && qName.equals(name)) ||\n+                   \/\/ check the legacy name if applicable\n+                   (oldQName != null && oldQName.equals(name));\n+        }\n+\n+        \/**\n+         * Returns the qualified name of the property.\n+         *\n+         * @return the qualified name of the property\n+         *\/\n+        public String qName() {\n+            return qName;\n+        }\n+\n+        \/**\n+         * Returns the legacy name of the property.\n+         *\n+         * @return the legacy name of the property\n+         *\/\n+        public String qNameOld() {\n+            return oldQName;\n+        }\n+\n+        \/**\n+         * Returns the name of the corresponding System Property.\n+         *\n+         * @return the name of the System Property\n+         *\/\n+        public String systemProperty() {\n+            return spName;\n+        }\n+\n+        \/**\n+         * Returns the name of the legacy System Property.\n+         *\n+         * @return the name of the legacy System Property\n+         *\/\n+        public String systemPropertyOld() {\n+            return oldSPName;\n+        }\n+    }\n","filename":"src\/java.xml\/share\/classes\/jdk\/xml\/internal\/JdkXmlUtils.java","additions":119,"deletions":1,"binary":false,"changes":120,"status":"modified"},{"patch":"@@ -50,0 +50,9 @@\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"DATA\">\n+ *     {@link javax.xml.datatype.DatatypeFactory DatatypeFactory}\n+ * <\/th>\n+ * <td style=\"text-align:center\">{@link javax.xml.datatype.DatatypeFactory#newInstance() newInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.datatype.DatatypeFactory}<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.datatype.DatatypeFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n+ * <\/tr>\n+ * <tr>\n@@ -53,4 +62,4 @@\n- * <td>{@link javax.xml.parsers.DocumentBuilderFactory#newInstance() newInstance()}<\/td>\n- * <td>{@code javax.xml.parsers.DocumentBuilderFactory}<\/td>\n- * <td><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n- * <td>{@link javax.xml.parsers.DocumentBuilderFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.parsers.DocumentBuilderFactory#newInstance() newInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.parsers.DocumentBuilderFactory}<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.parsers.DocumentBuilderFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n@@ -62,4 +71,4 @@\n- * <td>{@link javax.xml.parsers.SAXParserFactory#newInstance() newInstance()}<\/td>\n- * <td>{@code javax.xml.parsers.SAXParserFactory}<\/td>\n- * <td><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n- * <td>{@link javax.xml.parsers.SAXParserFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.parsers.SAXParserFactory#newInstance() newInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.parsers.SAXParserFactory}<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.parsers.SAXParserFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n@@ -71,3 +80,3 @@\n- * <td>{@link javax.xml.stream.XMLEventFactory#newFactory() newFactory()}<\/td>\n- * <td>{@code javax.xml.stream.XMLEventFactory}<\/td>\n- * <td>\n+ * <td style=\"text-align:center\">{@link javax.xml.stream.XMLEventFactory#newFactory() newFactory()}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.stream.XMLEventFactory}<\/td>\n+ * <td style=\"text-align:center\">\n@@ -77,1 +86,1 @@\n- * <td>{@link javax.xml.stream.XMLEventFactory#newDefaultFactory() newDefaultFactory()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.stream.XMLEventFactory#newDefaultFactory() newDefaultFactory()}<\/td>\n@@ -83,3 +92,3 @@\n- * <td>{@link javax.xml.stream.XMLInputFactory#newFactory() newFactory()}<\/td>\n- * <td>{@code javax.xml.stream.XMLInputFactory}<\/td>\n- * <td>\n+ * <td style=\"text-align:center\">{@link javax.xml.stream.XMLInputFactory#newFactory() newFactory()}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.stream.XMLInputFactory}<\/td>\n+ * <td style=\"text-align:center\">\n@@ -89,1 +98,1 @@\n- * <td>{@link javax.xml.stream.XMLInputFactory#newDefaultFactory() newDefaultFactory()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.stream.XMLInputFactory#newDefaultFactory() newDefaultFactory()}<\/td>\n@@ -95,3 +104,3 @@\n- * <td>{@link javax.xml.stream.XMLOutputFactory#newFactory() newFactory()}<\/td>\n- * <td>{@code javax.xml.stream.XMLOutputFactory}<\/td>\n- * <td>\n+ * <td style=\"text-align:center\">{@link javax.xml.stream.XMLOutputFactory#newFactory() newFactory()}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.stream.XMLOutputFactory}<\/td>\n+ * <td style=\"text-align:center\">\n@@ -101,1 +110,1 @@\n- * <td>{@link javax.xml.stream.XMLOutputFactory#newDefaultFactory() newDefaultFactory()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.stream.XMLOutputFactory#newDefaultFactory() newDefaultFactory()}<\/td>\n@@ -107,4 +116,4 @@\n- * <td>{@link javax.xml.transform.TransformerFactory#newInstance() newInstance()}<\/td>\n- * <td>{@code javax.xml.transform.TransformerFactory}<\/td>\n- * <td><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n- * <td>{@link javax.xml.transform.TransformerFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.transform.TransformerFactory#newInstance() newInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.transform.TransformerFactory}<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.transform.TransformerFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n@@ -116,4 +125,4 @@\n- * <td>{@link javax.xml.validation.SchemaFactory#newInstance(java.lang.String) newInstance(schemaLanguage)}<\/td>\n- * <td>{@code javax.xml.validation.SchemaFactory:}<i>schemaLanguage<\/i>[1]<\/td>\n- * <td><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n- * <td>{@link javax.xml.validation.SchemaFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.validation.SchemaFactory#newInstance(java.lang.String) newInstance(schemaLanguage)}<\/td>\n+ * <td style=\"text-align:center\">{@code javax.xml.validation.SchemaFactory:}<i>schemaLanguage<\/i>[1]<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.validation.SchemaFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n@@ -125,4 +134,4 @@\n- * <td>{@link javax.xml.xpath.XPathFactory#newInstance(java.lang.String) newInstance(uri)}<\/td>\n- * <td>{@link javax.xml.xpath.XPathFactory#DEFAULT_PROPERTY_NAME DEFAULT_PROPERTY_NAME} + \":uri\"[2]<\/td>\n- * <td><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n- * <td>{@link javax.xml.xpath.XPathFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.xpath.XPathFactory#newInstance(java.lang.String) newInstance(uri)}<\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.xpath.XPathFactory#DEFAULT_PROPERTY_NAME DEFAULT_PROPERTY_NAME} + \":uri\"[2]<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#JaxpProperties\">jaxp.properties<\/a><\/td>\n+ * <td style=\"text-align:center\">{@link javax.xml.xpath.XPathFactory#newDefaultInstance() newDefaultInstance()}<\/td>\n@@ -234,1 +243,1 @@\n- * <h3>Naming Convention<\/h3>\n+ * <h3 id=\"NamingConvention\">Naming Convention<\/h3>\n@@ -239,11 +248,2 @@\n- * The prefix for JDK properties is defined as:\n- * <pre>\n- *     {@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/}\n- * <\/pre>\n- *\n- * The prefix for features:\n- * <pre>\n- *     {@code http:\/\/www.oracle.com\/xml\/jaxp\/features\/}\n- * <\/pre>\n- *\n- * The prefix for System Properties:\n+ * The prefix for JDK features and properties, as well as their corresponding\n+ * System Properties if any, is defined as:\n@@ -262,1 +262,1 @@\n- *     {@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/isStandalone}\n+ *     {@code jdk.xml.isStandalone}\n@@ -270,3 +270,3 @@\n- * A property may have a corresponding System Property that has the same name\n- * except for the prefix as shown above. A System Property should be set prior\n- * to the creation of a processor and may be cleared afterwards.\n+ * A property may have a corresponding System Property with the same name.\n+ * A System Property should be set prior to the creation of a processor and\n+ * may be cleared afterwards.\n@@ -285,1 +285,2 @@\n- * including DOM, SAX, Schema Validation, XSLT, and XPath. Any properties flagged\n+ * including DOM, SAX, Schema Validation, XSLT, and XPath. When secure processing\n+ * is set to true, security related features and properties, such as those flagged\n@@ -287,5 +288,6 @@\n- * table <a href=\"#Properties\">Implementation Specific Properties<\/a>\n- * are enforced when secure processing is set to true. Such enforcement includes\n- * setting security features to true and limits to the defined values shown in\n- * the table. The property values will not be affected, however, when setting\n- * secure processing to false.\n+ * table <a href=\"#Features\">Implementation Specific Features<\/a> and\n+ * <a href=\"#Properties\">Properties<\/a>,\n+ * are enforced. Such enforcement includes setting security properties and features\n+ * to more restrictive values and limits as shown in {@code \"Value\"}'s\n+ * subcolumn {@code \"Enforced\"} in the tables. When secure processing\n+ * is set to false, however, the property values will not be affected.\n@@ -319,0 +321,1 @@\n+ * <th scope=\"col\">How to set the feature<\/th>\n@@ -325,1 +328,1 @@\n- * <td>DOM Parser<\/td>\n+ * <td style=\"text-align:center\">DOM Parser<\/td>\n@@ -330,0 +333,4 @@\n+ * <td>\n+ * {@code DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();}<br>\n+ * {@code dbf.setFeature(name, value);}\n+ * <\/td>\n@@ -333,1 +340,1 @@\n- * <td>SAX Parser<\/td>\n+ * <td style=\"text-align:center\">SAX Parser<\/td>\n@@ -339,0 +346,4 @@\n+ * <td>\n+ * {@code SAXParserFactory spf = SAXParserFactory.newInstance();}<br>\n+ * {@code spf.setFeature(name, value);}<br>\n+ * <\/td>\n@@ -342,1 +353,5 @@\n- * <td>StAX Parser<\/td>\n+ * <td style=\"text-align:center\">StAX Parser<\/td>\n+ * <td>\n+ * {@code XMLInputFactory xif = XMLInputFactory.newInstance();}<br>\n+ * {@code xif.setProperty(name, value);}\n+ * <\/td>\n@@ -350,1 +365,1 @@\n- * <td>XML Validation API<\/td>\n+ * <td style=\"text-align:center\">XML Validation API<\/td>\n@@ -355,0 +370,4 @@\n+ * <td>\n+ * {@code SchemaFactory schemaFactory = SchemaFactory.newInstance(schemaLanguage);}<br>\n+ * {@code schemaFactory.setFeature(name, value);}\n+ * <\/td>\n@@ -358,1 +377,1 @@\n- * <td>XML Transform API<\/td>\n+ * <td style=\"text-align:center\">XML Transform API<\/td>\n@@ -363,0 +382,4 @@\n+ * <td>\n+ * {@code TransformerFactory factory = TransformerFactory.newInstance();}<br>\n+ * {@code factory.setFeature(name, value);}\n+ * <\/td>\n@@ -366,1 +389,1 @@\n- * <td>XSLTC Serializer<\/td>\n+ * <td style=\"text-align:center\">XSLTC Serializer<\/td>\n@@ -371,0 +394,2 @@\n+ * <td>\n+ * <\/td>\n@@ -374,1 +399,1 @@\n- * <td>DOM Load and Save<\/td>\n+ * <td style=\"text-align:center\">DOM Load and Save<\/td>\n@@ -379,0 +404,12 @@\n+ * <td>\n+ * <\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"row\" style=\"font-weight:normal\" id=\"XPATH\">XPath<\/th>\n+ * <td style=\"text-align:center\">XPath<\/td>\n+ * <td>\n+ * <\/td>\n+ * <td>\n+ * {@code XPathFactory factory = XPathFactory.newInstance();} <br>\n+ * {@code factory.setFeature(name, value);}\n+ * <\/td>\n@@ -395,1 +432,2 @@\n- * <th scope=\"col\" rowspan=\"2\">Name [1]<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Full Name (<a href=\"#NamingConvention\">prefix + name<\/a>)\n+ * <a href=\"#Note1\">[1]<\/a><\/th>\n@@ -397,6 +435,6 @@\n- * <th scope=\"col\" rowspan=\"2\">System Property [2]<\/th>\n- * <th scope=\"col\" rowspan=\"2\">jaxp.properties [2]<\/th>\n- * <th scope=\"col\" colspan=\"3\" style=\"text-align:center\">Value [3]<\/th>\n- * <th scope=\"col\" rowspan=\"2\">Security [4]<\/th>\n- * <th scope=\"col\" rowspan=\"2\">Supported Processor [5]<\/th>\n- * <th scope=\"col\" rowspan=\"2\">Since [6]<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">System Property <a href=\"#Note2\">[2]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">jaxp.properties <a href=\"#Note2\">[2]<\/a><\/th>\n+ * <th scope=\"col\" colspan=\"4\" style=\"text-align:center\">Value <a href=\"#Note3\">[3]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Security <a href=\"#Note4\">[4]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Supported Processor <a href=\"#Note5\">[5]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Since <a href=\"#Note6\">[6]<\/a><\/th>\n@@ -408,0 +446,1 @@\n+ * <th scope=\"col\">Enforced<\/th>\n@@ -414,1 +453,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"EELimit\">entityExpansionLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"EELimit\">{@systemProperty jdk.xml.entityExpansionLimit}<\/td>\n@@ -417,4 +456,4 @@\n- * <td rowspan=\"9\">yes<\/td>\n- * <td rowspan=\"9\">yes<\/td>\n- * <td rowspan=\"9\">Integer<\/td>\n- * <th scope=\"row\" style=\"font-weight:normal\" rowspan=\"9\">\n+ * <td style=\"text-align:center\" rowspan=\"9\">yes<\/td>\n+ * <td style=\"text-align:center\" rowspan=\"9\">yes<\/td>\n+ * <td style=\"text-align:center\" rowspan=\"9\">Integer<\/td>\n+ * <td rowspan=\"9\">\n@@ -423,4 +462,5 @@\n- * <\/th>\n- * <th scope=\"row\" style=\"font-weight:normal\">64000<\/th>\n- * <td rowspan=\"9\">Yes<\/td>\n- * <td rowspan=\"9\">\n+ * <\/td>\n+ * <td style=\"text-align:center\">64000<\/td>\n+ * <td style=\"text-align:center\">64000<\/td>\n+ * <td style=\"text-align:center\" rowspan=\"9\">Yes<\/td>\n+ * <td style=\"text-align:center\" rowspan=\"9\">\n@@ -433,1 +473,1 @@\n- * <td rowspan=\"9\">8<\/td>\n+ * <td style=\"text-align:center\" rowspan=\"9\">8<\/td>\n@@ -436,1 +476,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"EALimit\">elementAttributeLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"EALimit\">{@systemProperty jdk.xml.elementAttributeLimit}<\/td>\n@@ -439,1 +479,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">10000<\/th>\n+ * <td style=\"text-align:center\">10000<\/td>\n+ * <td style=\"text-align:center\">10000<\/td>\n@@ -442,1 +483,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"OccurLimit\">maxOccurLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"OccurLimit\">jdk.xml.maxOccurLimit<\/td>\n@@ -447,1 +488,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">5000<\/th>\n+ * <td style=\"text-align:center\">5000<\/td>\n+ * <td style=\"text-align:center\">5000<\/td>\n@@ -450,1 +492,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"SizeLimit\">totalEntitySizeLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"SizeLimit\">{@systemProperty jdk.xml.totalEntitySizeLimit}<\/td>\n@@ -454,1 +496,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">5x10^7<\/th>\n+ * <td style=\"text-align:center\">5x10^7<\/td>\n+ * <td style=\"text-align:center\">5x10^7<\/td>\n@@ -457,1 +500,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"GELimit\">maxGeneralEntitySizeLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"GELimit\">jdk.xml.maxGeneralEntitySizeLimit<\/td>\n@@ -460,1 +503,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">0<\/th>\n+ * <td style=\"text-align:center\">0<\/td>\n+ * <td style=\"text-align:center\">0<\/td>\n@@ -463,1 +507,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"PELimit\">maxParameterEntitySizeLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"PELimit\">{@systemProperty jdk.xml.maxParameterEntitySizeLimit}<\/td>\n@@ -467,1 +511,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">10^6<\/th>\n+ * <td style=\"text-align:center\">10^6<\/td>\n+ * <td style=\"text-align:center\">10^6<\/td>\n@@ -470,1 +515,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"ERLimit\">entityReplacementLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"ERLimit\">{@systemProperty jdk.xml.entityReplacementLimit}<\/td>\n@@ -473,1 +518,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">3x10^6<\/th>\n+ * <td style=\"text-align:center\">3x10^6<\/td>\n+ * <td style=\"text-align:center\">3x10^6<\/td>\n@@ -476,1 +522,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"ElementDepth\">maxElementDepth<\/th>\n+ * <td style=\"text-align:center\" id=\"ElementDepth\">{@systemProperty jdk.xml.maxElementDepth}<\/td>\n@@ -479,1 +525,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">0<\/th>\n+ * <td style=\"text-align:center\">0<\/td>\n+ * <td style=\"text-align:center\">0<\/td>\n@@ -482,1 +529,1 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"NameLimit\">maxXMLNameLimit<\/th>\n+ * <td style=\"text-align:center\" id=\"NameLimit\">{@systemProperty jdk.xml.maxXMLNameLimit}<\/td>\n@@ -486,1 +533,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\">1000<\/th>\n+ * <td style=\"text-align:center\">1000<\/td>\n+ * <td style=\"text-align:center\">1000<\/td>\n@@ -490,2 +538,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"ISSTANDALONE\">isStandalone<\/th>\n- * <td>indicates that the serializer should treat the output as a\n+ * <td style=\"text-align:center\" id=\"ISSTANDALONE\">{@systemProperty jdk.xml.isStandalone}<\/td>\n+ * <td>Indicates that the serializer should treat the output as a\n@@ -497,8 +545,9 @@\n- * <td>yes<\/td>\n- * <td>yes<\/td>\n- * <td>boolean<\/td>\n- * <th scope=\"row\" style=\"font-weight:normal\">true\/false<\/th>\n- * <th scope=\"row\" style=\"font-weight:normal\">false<\/th>\n- * <td>No<\/td>\n- * <td><a href=\"#DOMLS\">DOMLS<\/a><\/td>\n- * <td>17<\/td>\n+ * <td style=\"text-align:center\">yes<\/td>\n+ * <td style=\"text-align:center\">yes<\/td>\n+ * <td style=\"text-align:center\">boolean<\/td>\n+ * <td style=\"text-align:center\">true\/false<\/td>\n+ * <td style=\"text-align:center\">false<\/td>\n+ * <td style=\"text-align:center\">N\/A<\/td>\n+ * <td style=\"text-align:center\">No<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#DOMLS\">DOMLS<\/a><\/td>\n+ * <td style=\"text-align:center\">17<\/td>\n@@ -507,2 +556,2 @@\n- * <th scope=\"row\" style=\"font-weight:normal\" id=\"XSLTCISSTANDALONE\">xsltcIsStandalone<\/th>\n- * <td>indicates that the <a href=\"#XSLTCSerializer\">XSLTC serializer<\/a> should\n+ * <td style=\"text-align:center\" id=\"XSLTCISSTANDALONE\">{@systemProperty jdk.xml.xsltcIsStandalone}<\/td>\n+ * <td>Indicates that the <a href=\"#XSLTCSerializer\">XSLTC serializer<\/a> should\n@@ -519,8 +568,43 @@\n- * <td>yes<\/td>\n- * <td>yes<\/td>\n- * <td>String<\/td>\n- * <th scope=\"row\" style=\"font-weight:normal\">yes\/no<\/th>\n- * <th scope=\"row\" style=\"font-weight:normal\">no<\/th>\n- * <td>No<\/td>\n- * <td><a href=\"#XSLTCSerializer\">XSLTC Serializer<\/a><\/td>\n- * <td>17<\/td>\n+ * <td style=\"text-align:center\">yes<\/td>\n+ * <td style=\"text-align:center\">yes<\/td>\n+ * <td style=\"text-align:center\">String<\/td>\n+ * <td style=\"text-align:center\">yes\/no<\/td>\n+ * <td style=\"text-align:center\">no<\/td>\n+ * <td style=\"text-align:center\">N\/A<\/td>\n+ * <td style=\"text-align:center\">No<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#XSLTCSerializer\">XSLTC Serializer<\/a><\/td>\n+ * <td style=\"text-align:center\">17<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\" id=\"cdataChunkSize\">{@systemProperty jdk.xml.cdataChunkSize}<\/td>\n+ * <td>Instructs the parser to return the data in a CData section in a single chunk\n+ * when the property is zero or unspecified, or in multiple chunks when it is greater\n+ * than zero. The parser shall split the data by linebreaks, and any chunks that are\n+ * larger than the specified size to ones that are equal to or smaller than the size.\n+ * <\/td>\n+ * <td style=\"text-align:center\">yes<\/td>\n+ * <td style=\"text-align:center\">yes<\/td>\n+ * <td style=\"text-align:center\">Integer<\/td>\n+ * <td>A positive integer. A value less than\n+ * or equal to 0 indicates that the property is not specified. If the value is not\n+ * an integer, a NumberFormatException is thrown.<\/td>\n+ * <td style=\"text-align:center\">0<\/td>\n+ * <td style=\"text-align:center\">N\/A<\/td>\n+ * <td style=\"text-align:center\">No<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#SAX\">SAX<\/a><br><a href=\"#StAX\">StAX<\/a><\/td>\n+ * <td style=\"text-align:center\">9<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\" id=\"extensionClassLoader\">jdk.xml.extensionClassLoader<\/td>\n+ * <td>Sets a non-null ClassLoader instance to be used for loading XSLTC java\n+ * extension functions.\n+ * <\/td>\n+ * <td style=\"text-align:center\">no<\/td>\n+ * <td style=\"text-align:center\">no<\/td>\n+ * <td style=\"text-align:center\">Object<\/td>\n+ * <td>A reference to a ClassLoader object. Null if the value is not specified.<\/td>\n+ * <td style=\"text-align:center\">null<\/td>\n+ * <td style=\"text-align:center\">N\/A<\/td>\n+ * <td style=\"text-align:center\">No<\/td>\n+ * <td style=\"text-align:center\"><a href=\"#Transform\">Transform<\/a><\/td>\n+ * <td style=\"text-align:center\">9<\/td>\n@@ -531,3 +615,88 @@\n- * <b>[1]<\/b> The name of a property. The fully-qualified name, prefix + name,\n- * should be used when setting the property.\n- * <p>\n+ * The table below lists the Implementation Specific Features currently supported\n+ * by the JDK. More features may be added in the future if necessary.\n+ *\n+ * <table class=\"striped\" id=\"Features\">\n+ * <caption>Implementation Specific Features<\/caption>\n+ * <thead>\n+ * <tr>\n+ * <th scope=\"col\" rowspan=\"2\">Full Name (<a href=\"#NamingConvention\">prefix + name<\/a>)\n+ * <a href=\"#Note1\">[1]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Description<\/th>\n+ * <th scope=\"col\" rowspan=\"2\">System Property <a href=\"#Note2\">[2]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">jaxp.properties <a href=\"#Note2\">[2]<\/a><\/th>\n+ * <th scope=\"col\" colspan=\"4\" style=\"text-align:center\">Value <a href=\"#Note3\">[3]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Security <a href=\"#Note4\">[4]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Supported Processor <a href=\"#Note5\">[5]<\/a><\/th>\n+ * <th scope=\"col\" rowspan=\"2\">Since <a href=\"#Note6\">[6]<\/a><\/th>\n+ * <\/tr>\n+ * <tr>\n+ * <th scope=\"col\">Type<\/th>\n+ * <th scope=\"col\">Value<\/th>\n+ * <th scope=\"col\">Default<\/th>\n+ * <th scope=\"col\">Enforced<\/th>\n+ * <\/tr>\n+ * <\/thead>\n+ * <tbody>\n+ * <tr>\n+ * <td style=\"text-align:center\" id=\"ExtFunc\">{@systemProperty jdk.xml.enableExtensionFunctions}<\/td>\n+ * <td>Determines if XSLT and XPath extension functions are to be allowed.\n+ * <\/td>\n+ * <td style=\"text-align:center\" rowspan=\"3\">yes<\/td>\n+ * <td style=\"text-align:center\" rowspan=\"3\">yes<\/td>\n+ * <td style=\"text-align:center\" rowspan=\"3\">Boolean<\/td>\n+ * <td>\n+ * true or false. True indicates that extension functions are allowed; False otherwise.\n+ * <\/td>\n+ * <td style=\"text-align:center\">true<\/td>\n+ * <td style=\"text-align:center\">false<\/td>\n+ * <td style=\"text-align:center\">Yes<\/td>\n+ * <td style=\"text-align:center\">\n+ *     <a href=\"#Transform\">Transform<\/a><br>\n+ *     <a href=\"#XPAth\">XPath<\/a>\n+ * <\/td>\n+ * <td style=\"text-align:center\">8<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\" id=\"ORParser\">{@systemProperty jdk.xml.overrideDefaultParser}<\/td>\n+ * <td>Enables the use of a 3rd party's parser implementation to override the\n+ * system-default parser for the JDK's Transform, Validation and XPath implementations.\n+ * <\/td>\n+ * <td>\n+ * true or false. True enables the use of 3rd party's parser implementations\n+ * to override the system-default implementation during XML Transform, Validation\n+ * or XPath operation. False disables the use of 3rd party's parser\n+ * implementations.\n+ * <\/td>\n+ * <td style=\"text-align:center\">false<\/td>\n+ * <td style=\"text-align:center\">false<\/td>\n+ * <td style=\"text-align:center\">Yes<\/td>\n+ * <td style=\"text-align:center\">\n+ *     <a href=\"#Transform\">Transform<\/a><br>\n+ *     <a href=\"#Validation\">Validation<\/a><br>\n+ *     <a href=\"#XPAth\">XPath<\/a>\n+ * <\/td>\n+ * <td style=\"text-align:center\">9<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\" id=\"symbolTable\">{@systemProperty jdk.xml.resetSymbolTable}<\/td>\n+ * <td>Instructs the parser to reset its internal symbol table during each parse operation.\n+ * <\/td>\n+ * <td>\n+ * true or false. True indicates that the SymbolTable associated with a parser needs to be\n+ * reallocated during each parse operation.<br>\n+ * False indicates that the parser's SymbolTable instance shall be reused\n+ * during subsequent parse operations.\n+ * <\/td>\n+ * <td style=\"text-align:center\">false<\/td>\n+ * <td style=\"text-align:center\">N\/A<\/td>\n+ * <td style=\"text-align:center\">No<\/td>\n+ * <td style=\"text-align:center\">\n+ *     <a href=\"#SAX\">SAX<\/a>\n+ * <\/td>\n+ * <td style=\"text-align:center\">9<\/td>\n+ * <\/tr>\n+ * <\/tbody>\n+ * <\/table>\n+ * <p id=\"Note1\">\n+ * <b>[1]<\/b> The full name of a property should be used to set the property.\n+ * <p id=\"Note2\">\n@@ -537,1 +706,1 @@\n- * <p>\n+ * <p id=\"Note3\">\n@@ -547,1 +716,1 @@\n- * <p>\n+ * <p id=\"Note4\">\n@@ -551,1 +720,1 @@\n- * <p>\n+ * <p id=\"Note5\">\n@@ -554,1 +723,1 @@\n- * <p>\n+ * <p id=\"Note6\">\n@@ -557,0 +726,4 @@\n+ * <h3>Legacy Property Names<\/h3>\n+ * JDK releases prior to JDK 17 support the use of URI style prefix for properties\n+ * which will continue to be supported. The following table lists the legacy names\n+ * for the properties.\n@@ -558,0 +731,64 @@\n+ * <table class=\"striped\" id=\"LegacyProperties\">\n+ * <caption>Legacy Property Names<\/caption>\n+ * <thead>\n+ * <tr>\n+ * <th>Property<\/th>\n+ * <th>Legacy Property Name(s)<\/th>\n+ * <\/tr>\n+ * <\/thead>\n+ * <tbody>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code entityExpansionLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/entityExpansionLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code elementAttributeLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/elementAttributeLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code maxOccurLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/maxOccurLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code totalEntitySizeLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/totalEntitySizeLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code maxGeneralEntitySizeLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/maxGeneralEntitySizeLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code maxParameterEntitySizeLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/maxParameterEntitySizeLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code entityReplacementLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/entityReplacementLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code maxElementDepth}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/maxElementDepth}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code maxXMLNameLimit}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/maxXMLNameLimit}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code isStandalone}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/isStandalone}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code xsltcIsStandalone}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/is-standalone}<br>\n+ * {@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/xsltcIsStandalone}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code extensionClassLoader}<\/td>\n+ * <td>{@code jdk.xml.transform.extensionClassLoader}<\/td>\n+ * <\/tr>\n+ * <tr>\n+ * <td style=\"text-align:center\">{@code enableExtensionFunctions}<\/td>\n+ * <td>{@code http:\/\/www.oracle.com\/xml\/jaxp\/properties\/enableExtensionFunctions}<\/td>\n+ * <\/tr>\n+ * <\/tbody>\n+ * <\/table>\n","filename":"src\/java.xml\/share\/classes\/module-info.java","additions":358,"deletions":121,"binary":false,"changes":479,"status":"modified"},{"patch":"@@ -0,0 +1,261 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package common;\n+\n+import com.sun.org.apache.xerces.internal.utils.XMLSecurityManager.Limit;\n+import java.util.EnumSet;\n+import java.util.Set;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.SAXParser;\n+import javax.xml.parsers.SAXParserFactory;\n+import javax.xml.stream.XMLInputFactory;\n+import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerFactory;\n+import javax.xml.validation.SchemaFactory;\n+import javax.xml.xpath.XPathFactory;\n+import jdk.xml.internal.JdkXmlUtils.ImplPropMap;\n+import org.testng.Assert;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.Test;\n+import org.w3c.dom.DOMConfiguration;\n+import org.w3c.dom.bootstrap.DOMImplementationRegistry;\n+import org.w3c.dom.ls.DOMImplementationLS;\n+import org.w3c.dom.ls.LSSerializer;\n+import org.xml.sax.XMLReader;\n+\n+\/*\n+ * @test\n+ * @bug 8265248\n+ * @modules java.xml\/com.sun.org.apache.xerces.internal.utils\n+ * @modules java.xml\/jdk.xml.internal\n+ * @run testng common.ImplPropertyTest\n+ * @summary Verifies Implementation-specific Features and Properties as specified\n+ * in the java.xml module summary.\n+ *\/\n+public class ImplPropertyTest {\n+    private final SAXParserFactory spf = SAXParserFactory.newDefaultInstance();\n+    private SAXParser sp;\n+    private XMLReader reader;\n+    private final DocumentBuilderFactory dbf = DocumentBuilderFactory.newDefaultInstance();\n+    private final XMLInputFactory xif = XMLInputFactory.newDefaultFactory();\n+    private final SchemaFactory sf = SchemaFactory.newDefaultInstance();\n+    private final TransformerFactory tf = TransformerFactory.newDefaultInstance();\n+    private Transformer transformer;\n+    private LSSerializer serializer;\n+    private DOMConfiguration domConfig;\n+    private final XPathFactory xf = XPathFactory.newDefaultInstance();\n+\n+    \/\/ as in the Processors table in java.xml module summary\n+    private enum Processor {\n+        DOM,\n+        SAX,\n+        XMLREADER,\n+        StAX,\n+        VALIDATION,\n+        TRANSFORM,\n+        XSLTC,\n+        DOMLS,\n+        XPATH\n+    };\n+\n+    @BeforeClass\n+    public void setUpClass() throws Exception {\n+        sp = spf.newSAXParser();\n+        reader = sp.getXMLReader();\n+\n+        DOMImplementationRegistry registry = DOMImplementationRegistry.newInstance();\n+        DOMImplementationLS impl = (DOMImplementationLS) registry.getDOMImplementation(\"LS\");\n+        serializer = impl.createLSSerializer();\n+        domConfig = serializer.getDomConfig();\n+\n+        transformer = TransformerFactory.newInstance().newTransformer();\n+    }\n+\n+    @Test\n+    public void testLimits() throws Exception {\n+        \/\/ Supported processors for Limits\n+        Set<Processor> pLimit = EnumSet.of(Processor.DOM, Processor.SAX, Processor.XMLREADER,\n+                Processor.StAX, Processor.VALIDATION, Processor.TRANSFORM);\n+\n+        for (Limit limit : Limit.values()) {\n+            for (Processor p : pLimit) {\n+                testProperties(p, limit.apiProperty(), limit.systemProperty(), 100);\n+                testProperties(p, limit.systemProperty(), limit.apiProperty(), 200);\n+            }\n+        }\n+\n+    }\n+\n+    \/\/ Supported processor for isStandalone: DOMLS\n+    @Test\n+    public void testIsStandalone() throws Exception {\n+        testProperties(Processor.DOMLS, ImplPropMap.ISSTANDALONE.qName(),\n+                ImplPropMap.ISSTANDALONE.systemProperty(), true);\n+        testProperties(Processor.DOMLS, ImplPropMap.ISSTANDALONE.systemProperty(),\n+                ImplPropMap.ISSTANDALONE.qName(), false);\n+    }\n+\n+    \/\/ Supported processor for xsltcIsStandalone: XSLTC Serializer\n+    @Test\n+    public void testXSLTCIsStandalone() throws Exception {\n+        testProperties(Processor.XSLTC, ImplPropMap.XSLTCISSTANDALONE.qName(),\n+                ImplPropMap.XSLTCISSTANDALONE.systemProperty(), \"yes\");\n+        testProperties(Processor.XSLTC, ImplPropMap.XSLTCISSTANDALONE.systemProperty(),\n+                ImplPropMap.XSLTCISSTANDALONE.qName(), \"no\");\n+    }\n+\n+    \/\/ Supported processor for cdataChunkSize: SAX and StAX\n+    @Test\n+    public void testCData() throws Exception {\n+        \/\/ Supported processors for CDATA\n+        Set<Processor> pCData = EnumSet.of(Processor.SAX, Processor.XMLREADER,\n+                Processor.StAX);\n+        ImplPropMap CDATA = ImplPropMap.CDATACHUNKSIZE;\n+        for (Processor p : pCData) {\n+            testProperties(p, CDATA.qName(), CDATA.systemProperty(), 100);\n+            testProperties(p, CDATA.systemProperty(), CDATA.qName(), 200);\n+        }\n+    }\n+\n+    \/\/ Supported processor for extensionClassLoader: Transform\n+    @Test\n+    public void testExtensionClassLoader() throws Exception {\n+        ImplPropMap ECL = ImplPropMap.EXTCLSLOADER;\n+        testProperties(Processor.TRANSFORM, ECL.qName(), ECL.qNameOld(), new TestCL());\n+        testProperties(Processor.TRANSFORM, ECL.qNameOld(), ECL.qName(), new TestCL());\n+    }\n+\n+    \/\/ Supported processor for feature enableExtensionFunctions: Transform, XPath\n+    @Test\n+    public void testEnableExtensionFunctions() throws Exception {\n+        Set<Processor> pEEF = EnumSet.of(Processor.TRANSFORM, Processor.XPATH);\n+        ImplPropMap EEF = ImplPropMap.ENABLEEXTFUNC;\n+        for (Processor p : pEEF) {\n+            testFeatures(p, EEF.qName(), EEF.systemProperty(), true);\n+            testFeatures(p, EEF.systemProperty(), EEF.qName(), true);\n+        }\n+    }\n+\n+    \/\/ Supported processor for feature overrideDefaultParser: Transform, Validation, XPath\n+    @Test\n+    public void testOverrideDefaultParser() throws Exception {\n+        Set<Processor> pEEF = EnumSet.of(Processor.TRANSFORM, Processor.VALIDATION, Processor.XPATH);\n+        ImplPropMap ODP = ImplPropMap.OVERRIDEPARSER;\n+        for (Processor p : pEEF) {\n+            testFeatures(p, ODP.qName(), ODP.systemProperty(), true);\n+            testFeatures(p, ODP.systemProperty(), ODP.qName(), true);\n+        }\n+    }\n+\n+    \/\/ Supported processor for feature resetSymbolTable: SAX\n+    @Test\n+    public void testResetSymbolTable() throws Exception {\n+        ImplPropMap RST = ImplPropMap.RESETSYMBOLTABLE;\n+        testFeatures(Processor.SAX, RST.qName(), RST.systemProperty(), true);\n+        testFeatures(Processor.SAX, RST.systemProperty(), RST.qName(), true);\n+    }\n+\n+    private void testProperties(Processor processor, String name1, String name2, Object value)\n+            throws Exception {\n+        Object ret = null;\n+        switch (processor) {\n+            case DOM:\n+                dbf.setAttribute(name1, value);\n+                ret = dbf.getAttribute(name2);\n+                break;\n+            case SAX:\n+                sp.setProperty(name1, value);\n+                ret = sp.getProperty(name2);\n+                break;\n+            case XMLREADER:\n+                reader.setProperty(name1, value);\n+                ret = reader.getProperty(name2);\n+                break;\n+            case StAX:\n+                xif.setProperty(name1, value);\n+                ret = xif.getProperty(name2);\n+                break;\n+            case VALIDATION:\n+                sf.setProperty(name1, value);\n+                ret = sf.getProperty(name2);\n+                break;\n+            case TRANSFORM:\n+                tf.setAttribute(name1, value);\n+                ret = tf.getAttribute(name2);\n+                break;\n+            case XSLTC:\n+                transformer.setOutputProperty(name1, (String)value);\n+                ret = transformer.getOutputProperty(name2);\n+                break;\n+            case DOMLS:\n+                domConfig.setParameter(name1, value);\n+                ret = domConfig.getParameter(name2);\n+                break;\n+            case XPATH:\n+                break;\n+        }\n+        if ((value instanceof Integer) && ret instanceof String) {\n+            ret = Integer.parseInt((String)ret);\n+        }\n+        Assert.assertEquals(ret, value);\n+    }\n+\n+    private void testFeatures(Processor processor, String name1, String name2, boolean value)\n+            throws Exception {\n+        switch (processor) {\n+            case DOM:\n+                dbf.setFeature(name1, value);\n+                Assert.assertEquals(dbf.getFeature(name2), value);\n+                return;\n+            case SAX:\n+                spf.setFeature(name1, value);\n+                Assert.assertEquals(spf.getFeature(name2), value);\n+                return;\n+            case VALIDATION:\n+                sf.setFeature(name1, value);\n+                Assert.assertEquals(sf.getFeature(name2), value);\n+                return;\n+            case TRANSFORM:\n+                tf.setFeature(name1, value);\n+                Assert.assertEquals(tf.getFeature(name2), value);\n+                return;\n+            case XPATH:\n+                xf.setFeature(name1, value);\n+                Assert.assertEquals(xf.getFeature(name2), value);\n+                return;\n+        }\n+\n+        Assert.fail(\"Failed setting features for : \" + processor);\n+    }\n+\n+\n+    class TestCL extends ClassLoader {\n+\n+        public TestCL() {\n+        }\n+\n+        public Class<?> loadClass(String name) throws ClassNotFoundException {\n+            throw new ClassNotFoundException( name );\n+        }\n+    }\n+}\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/common\/ImplPropertyTest.java","additions":261,"deletions":0,"binary":false,"changes":261,"status":"added"}]}