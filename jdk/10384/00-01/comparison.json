{"files":[{"patch":"@@ -2130,15 +2130,0 @@\n-public:\n-  \/\/ Emit a relocation.\n-  void relocate(address at, RelocationHolder const& rspec, int format = 0) {\n-    code_section()->relocate(at, rspec, format);\n-  }\n-  void relocate(address at, relocInfo::relocType rtype, int format = 0, jint method_index = 0) {\n-    code_section()->relocate(at, rtype, format, method_index);\n-  }\n-  void relocate(RelocationHolder const& rspec, int format = 0) {\n-    AbstractAssembler::relocate(rspec, format);\n-  }\n-  void relocate(relocInfo::relocType rtype, int format = 0) {\n-    AbstractAssembler::relocate(rtype, format);\n-  }\n-\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2147,10 +2147,0 @@\n-void LIR_Assembler::add_debug_info_for_branch(address adr, CodeEmitInfo* info) {\n-  _masm->relocate(adr, relocInfo::poll_type);\n-  int pc_offset = code_offset();\n-  flush_debug_info(pc_offset);\n-  info->record_debug_info(compilation()->debug_info_recorder(), pc_offset);\n-  if (info->exception_handlers() != NULL) {\n-    compilation()->add_exception_handlers_for_pco(pc_offset, info->exception_handlers());\n-  }\n-}\n-\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -61,2 +61,0 @@\n-  void add_debug_info_for_branch(address adr, CodeEmitInfo* info);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}