{"files":[{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4715496\n+ * @summary AccessibleJTableCell.getAccessible name incorrectly returns\n+ * cell instance string instead of cell text.\n+ * @run main AccessibleJTableCellNameTest\n+ *\/\n+\n+import java.awt.Robot;\n+\n+import javax.accessibility.Accessible;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.SwingUtilities;\n+\n+public class AccessibleJTableCellNameTest {\n+    private static JTable jTable;\n+    private static JFrame jFrame;\n+    private static volatile Accessible accessible;\n+\n+    private static Object[][] rowData = {\n+        { \"01\", \"02\", \"03\", \"04\", \"05\" },\n+        { \"11\", \"12\", \"13\", \"14\", \"15\" },\n+        { \"21\", \"22\", \"23\", \"24\", \"25\" },\n+        { \"31\", \"32\", \"33\", \"34\", \"35\" },\n+        { \"41\", \"42\", \"43\", \"44\", \"45\" } };\n+\n+    private static Object[] colNames = { \"1\", \"2\", \"3\", \"4\", \"5\" };\n+\n+    private static void doTest() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> createGUI());\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(500);\n+            robot.waitForIdle();\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                for (int i = 0; i <= colNames.length - 1; i++) {\n+                    Accessible accessible = jTable.getAccessibleContext().getAccessibleTable()\n+                        .getAccessibleColumnHeader().getAccessibleAt(0, i);\n+\n+                    if (!(accessible.getAccessibleContext().getAccessibleName().equals(colNames[i]))) {\n+                        throw new RuntimeException(\n+                            \"AccessibleJTableCell.getAccessibleName returns correct name for header cells\");\n+                    }\n+                }\n+\t    });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> jFrame.dispose());\n+        }\n+    }\n+\n+    private static void createGUI() {\n+        jTable = new JTable(rowData, colNames);\n+        jFrame = new JFrame();\n+        jFrame.setBounds(100, 100, 300, 300);\n+        jFrame.getContentPane().add(jTable);\n+        jFrame.setVisible(true);\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        doTest();\n+        System.out.println(\"Test Passed\");\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/accessibility\/8283015\/AccessibleJTableCellNameTest.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"}]}