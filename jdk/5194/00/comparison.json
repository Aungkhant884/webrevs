{"files":[{"patch":"@@ -720,2 +720,2 @@\n-  JvmtiMonitorClosure jmc(java_thread, calling_thread, owned_monitors_list, this);\n-  ObjectSynchronizer::monitors_iterate(&jmc);\n+  JvmtiMonitorClosure jmc(calling_thread, owned_monitors_list, this);\n+  ObjectSynchronizer::monitors_iterate(&jmc, java_thread);\n@@ -1453,12 +1453,10 @@\n-  if (mon->owner() == _java_thread ) {\n-    \/\/ Filter out on stack monitors collected during stack walk.\n-    oop obj = mon->object();\n-    bool found = false;\n-    for (int j = 0; j < _owned_monitors_list->length(); j++) {\n-      jobject jobj = ((jvmtiMonitorStackDepthInfo*)_owned_monitors_list->at(j))->monitor;\n-      oop check = JNIHandles::resolve(jobj);\n-      if (check == obj) {\n-        \/\/ On stack monitor already collected during the stack walk.\n-        found = true;\n-        break;\n-      }\n+  \/\/ Filter out on stack monitors collected during stack walk.\n+  oop obj = mon->object();\n+  bool found = false;\n+  for (int j = 0; j < _owned_monitors_list->length(); j++) {\n+    jobject jobj = ((jvmtiMonitorStackDepthInfo*)_owned_monitors_list->at(j))->monitor;\n+    oop check = JNIHandles::resolve(jobj);\n+    if (check == obj) {\n+      \/\/ On stack monitor already collected during the stack walk.\n+      found = true;\n+      break;\n@@ -1466,14 +1464,9 @@\n-    if (found == false) {\n-      \/\/ This is off stack monitor (e.g. acquired via jni MonitorEnter).\n-      jvmtiError err;\n-      jvmtiMonitorStackDepthInfo *jmsdi;\n-      err = _env->allocate(sizeof(jvmtiMonitorStackDepthInfo), (unsigned char **)&jmsdi);\n-      if (err != JVMTI_ERROR_NONE) {\n-        _error = err;\n-        return;\n-      }\n-      Handle hobj(Thread::current(), obj);\n-      jmsdi->monitor = _env->jni_reference(_calling_thread, hobj);\n-      \/\/ stack depth is unknown for this monitor.\n-      jmsdi->stack_depth = -1;\n-      _owned_monitors_list->append(jmsdi);\n+  }\n+  if (found == false) {\n+    \/\/ This is off stack monitor (e.g. acquired via jni MonitorEnter).\n+    jvmtiError err;\n+    jvmtiMonitorStackDepthInfo *jmsdi;\n+    err = _env->allocate(sizeof(jvmtiMonitorStackDepthInfo), (unsigned char **)&jmsdi);\n+    if (err != JVMTI_ERROR_NONE) {\n+      _error = err;\n+      return;\n@@ -1481,0 +1474,5 @@\n+    Handle hobj(Thread::current(), obj);\n+    jmsdi->monitor = _env->jni_reference(_calling_thread, hobj);\n+    \/\/ stack depth is unknown for this monitor.\n+    jmsdi->stack_depth = -1;\n+    _owned_monitors_list->append(jmsdi);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":26,"deletions":28,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -642,1 +642,0 @@\n-  JavaThread *_java_thread;\n@@ -649,1 +648,1 @@\n-  JvmtiMonitorClosure(JavaThread* thread, JavaThread *calling_thread,\n+  JvmtiMonitorClosure(JavaThread *calling_thread,\n@@ -652,1 +651,0 @@\n-    _java_thread = thread;\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -975,1 +975,1 @@\n-void ObjectSynchronizer::monitors_iterate(MonitorClosure* closure) {\n+void ObjectSynchronizer::monitors_iterate(MonitorClosure* closure, JavaThread* thread) {\n@@ -979,0 +979,3 @@\n+    if (mid->owner() != thread) {\n+      continue;\n+    }\n@@ -1464,3 +1467,1 @@\n-    if (mid->owner() == _thread) {\n-      (void)mid->complete_exit(_thread);\n-    }\n+    (void)mid->complete_exit(_thread);\n@@ -1489,1 +1490,1 @@\n-  ObjectSynchronizer::monitors_iterate(&rjmc);\n+  ObjectSynchronizer::monitors_iterate(&rjmc, current);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-  static void monitors_iterate(MonitorClosure* m);\n+  static void monitors_iterate(MonitorClosure* m, JavaThread* thread);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -621,1 +621,0 @@\n-  Thread* _thread;\n@@ -623,2 +622,1 @@\n-  InflatedMonitorsClosure(Thread* t, ThreadStackTrace* st) {\n-    _thread = t;\n+  InflatedMonitorsClosure(ThreadStackTrace* st) {\n@@ -628,5 +626,3 @@\n-    if (mid->owner() == _thread) {\n-      oop object = mid->object();\n-      if (!_stack_trace->is_owned_monitor_on_stack(object)) {\n-        _stack_trace->add_jni_locked_monitor(object);\n-      }\n+    oop object = mid->object();\n+    if (!_stack_trace->is_owned_monitor_on_stack(object)) {\n+      _stack_trace->add_jni_locked_monitor(object);\n@@ -691,2 +687,2 @@\n-    InflatedMonitorsClosure imc(_thread, this);\n-    ObjectSynchronizer::monitors_iterate(&imc);\n+    InflatedMonitorsClosure imc(this);\n+    ObjectSynchronizer::monitors_iterate(&imc, _thread);\n","filename":"src\/hotspot\/share\/services\/threadService.cpp","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"}]}