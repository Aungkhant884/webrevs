{"files":[{"patch":"@@ -44,8 +44,6 @@\n-struct CodeBlobType {\n-  enum {\n-    MethodNonProfiled   = 0,    \/\/ Execution level 1 and 4 (non-profiled) nmethods (including native nmethods)\n-    MethodProfiled      = 1,    \/\/ Execution level 2 and 3 (profiled) nmethods\n-    NonNMethod          = 2,    \/\/ Non-nmethods like Buffers, Adapters and Runtime Stubs\n-    All                 = 3,    \/\/ All types (No code cache segmentation)\n-    NumTypes            = 4     \/\/ Number of CodeBlobTypes\n-  };\n+enum class CodeBlobType {\n+  MethodNonProfiled   = 0,    \/\/ Execution level 1 and 4 (non-profiled) nmethods (including native nmethods)\n+  MethodProfiled      = 1,    \/\/ Execution level 2 and 3 (profiled) nmethods\n+  NonNMethod          = 2,    \/\/ Non-nmethods like Buffers, Adapters and Runtime Stubs\n+  All                 = 3,    \/\/ All types (No code cache segmentation)\n+  NumTypes            = 4     \/\/ Number of CodeBlobTypes\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -175,4 +175,4 @@\n-GrowableArray<CodeHeap*>* CodeCache::_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (CodeBlobType::All, mtCode);\n-GrowableArray<CodeHeap*>* CodeCache::_compiled_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (CodeBlobType::All, mtCode);\n-GrowableArray<CodeHeap*>* CodeCache::_nmethod_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (CodeBlobType::All, mtCode);\n-GrowableArray<CodeHeap*>* CodeCache::_allocable_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (CodeBlobType::All, mtCode);\n+GrowableArray<CodeHeap*>* CodeCache::_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n+GrowableArray<CodeHeap*>* CodeCache::_compiled_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n+GrowableArray<CodeHeap*>* CodeCache::_nmethod_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n+GrowableArray<CodeHeap*>* CodeCache::_allocable_heaps = new(ResourceObj::C_HEAP, mtCode) GrowableArray<CodeHeap*> (static_cast<int>(CodeBlobType::All), mtCode);\n@@ -372,1 +372,1 @@\n-bool CodeCache::heap_available(int code_blob_type) {\n+bool CodeCache::heap_available(CodeBlobType code_blob_type) {\n@@ -389,1 +389,1 @@\n-const char* CodeCache::get_code_heap_flag_name(int code_blob_type) {\n+const char* CodeCache::get_code_heap_flag_name(CodeBlobType code_blob_type) {\n@@ -400,0 +400,3 @@\n+  default:\n+    ShouldNotReachHere();\n+    return NULL;\n@@ -401,2 +404,0 @@\n-  ShouldNotReachHere();\n-  return NULL;\n@@ -409,1 +410,1 @@\n-    return lhs->code_blob_type() - rhs->code_blob_type();\n+    return static_cast<int>(lhs->code_blob_type()) - static_cast<int>(rhs->code_blob_type());\n@@ -418,1 +419,1 @@\n-  int type = heap->code_blob_type();\n+  CodeBlobType type = heap->code_blob_type();\n@@ -430,1 +431,1 @@\n-void CodeCache::add_heap(ReservedSpace rs, const char* name, int code_blob_type) {\n+void CodeCache::add_heap(ReservedSpace rs, const char* name, CodeBlobType code_blob_type) {\n@@ -472,1 +473,1 @@\n-CodeHeap* CodeCache::get_code_heap(int code_blob_type) {\n+CodeHeap* CodeCache::get_code_heap(CodeBlobType code_blob_type) {\n@@ -521,1 +522,1 @@\n-CodeBlob* CodeCache::first_blob(int code_blob_type) {\n+CodeBlob* CodeCache::first_blob(CodeBlobType code_blob_type) {\n@@ -542,1 +543,1 @@\n-CodeBlob* CodeCache::allocate(int size, int code_blob_type, bool handle_alloc_failure, int orig_code_blob_type) {\n+CodeBlob* CodeCache::allocate(int size, CodeBlobType code_blob_type, bool handle_alloc_failure, CodeBlobType orig_code_blob_type) {\n@@ -570,1 +571,1 @@\n-        int type = code_blob_type;\n+        CodeBlobType type = code_blob_type;\n@@ -584,0 +585,2 @@\n+        default:\n+          break;\n@@ -875,1 +878,1 @@\n-int CodeCache::blob_count(int code_blob_type) {\n+int CodeCache::blob_count(CodeBlobType code_blob_type) {\n@@ -888,1 +891,1 @@\n-int CodeCache::nmethod_count(int code_blob_type) {\n+int CodeCache::nmethod_count(CodeBlobType code_blob_type) {\n@@ -901,1 +904,1 @@\n-int CodeCache::adapter_count(int code_blob_type) {\n+int CodeCache::adapter_count(CodeBlobType code_blob_type) {\n@@ -914,1 +917,1 @@\n-address CodeCache::low_bound(int code_blob_type) {\n+address CodeCache::low_bound(CodeBlobType code_blob_type) {\n@@ -919,1 +922,1 @@\n-address CodeCache::high_bound(int code_blob_type) {\n+address CodeCache::high_bound(CodeBlobType code_blob_type) {\n@@ -932,1 +935,1 @@\n-size_t CodeCache::unallocated_capacity(int code_blob_type) {\n+size_t CodeCache::unallocated_capacity(CodeBlobType code_blob_type) {\n@@ -1307,1 +1310,1 @@\n-void CodeCache::report_codemem_full(int code_blob_type, bool print) {\n+void CodeCache::report_codemem_full(CodeBlobType code_blob_type, bool print) {\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":25,"deletions":22,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n-  static void add_heap(ReservedSpace rs, const char* name, int code_blob_type);\n+  static void add_heap(ReservedSpace rs, const char* name, CodeBlobType code_blob_type);\n@@ -110,1 +110,1 @@\n-  static CodeHeap* get_code_heap(int code_blob_type);         \/\/ Returns the CodeHeap for the given CodeBlobType\n+  static CodeHeap* get_code_heap(CodeBlobType code_blob_type);         \/\/ Returns the CodeHeap for the given CodeBlobType\n@@ -112,1 +112,1 @@\n-  static const char* get_code_heap_flag_name(int code_blob_type);\n+  static const char* get_code_heap_flag_name(CodeBlobType code_blob_type);\n@@ -117,1 +117,1 @@\n-  static CodeBlob* first_blob(int code_blob_type);            \/\/ Returns the first CodeBlob of the given type\n+  static CodeBlob* first_blob(CodeBlobType code_blob_type);            \/\/ Returns the first CodeBlob of the given type\n@@ -156,1 +156,1 @@\n-  static CodeBlob* allocate(int size, int code_blob_type, bool handle_alloc_failure = true, int orig_code_blob_type = CodeBlobType::All); \/\/ allocates a new CodeBlob\n+  static CodeBlob* allocate(int size, CodeBlobType code_blob_type, bool handle_alloc_failure = true, CodeBlobType orig_code_blob_type = CodeBlobType::All); \/\/ allocates a new CodeBlob\n@@ -179,1 +179,1 @@\n-  static int       blob_count(int code_blob_type);\n+  static int       blob_count(CodeBlobType code_blob_type);\n@@ -181,1 +181,1 @@\n-  static int       adapter_count(int code_blob_type);\n+  static int       adapter_count(CodeBlobType code_blob_type);\n@@ -183,1 +183,1 @@\n-  static int       nmethod_count(int code_blob_type);\n+  static int       nmethod_count(CodeBlobType code_blob_type);\n@@ -217,2 +217,2 @@\n-  static const char* get_code_heap_name(int code_blob_type)  { return (heap_available(code_blob_type) ? get_code_heap(code_blob_type)->name() : \"Unused\"); }\n-  static void report_codemem_full(int code_blob_type, bool print);\n+  static const char* get_code_heap_name(CodeBlobType code_blob_type)  { return (heap_available(code_blob_type) ? get_code_heap(code_blob_type)->name() : \"Unused\"); }\n+  static void report_codemem_full(CodeBlobType code_blob_type, bool print);\n@@ -226,1 +226,1 @@\n-  static address low_bound(int code_blob_type);\n+  static address low_bound(CodeBlobType code_blob_type);\n@@ -228,1 +228,1 @@\n-  static address high_bound(int code_blob_type);\n+  static address high_bound(CodeBlobType code_blob_type);\n@@ -232,1 +232,1 @@\n-  static size_t unallocated_capacity(int code_blob_type);\n+  static size_t unallocated_capacity(CodeBlobType code_blob_type);\n@@ -245,1 +245,1 @@\n-  static bool heap_available(int code_blob_type);\n+  static bool heap_available(CodeBlobType code_blob_type);\n@@ -248,1 +248,1 @@\n-  static int get_code_blob_type(CompiledMethod* cm) {\n+  static CodeBlobType get_code_blob_type(CompiledMethod* cm) {\n@@ -252,2 +252,2 @@\n-  static bool code_blob_type_accepts_compiled(int type) {\n-    bool result = type == CodeBlobType::All || type <= CodeBlobType::MethodProfiled;\n+  static bool code_blob_type_accepts_compiled(CodeBlobType code_blob_type) {\n+    bool result = code_blob_type == CodeBlobType::All || code_blob_type <= CodeBlobType::MethodProfiled;\n@@ -257,1 +257,1 @@\n-  static bool code_blob_type_accepts_nmethod(int type) {\n+  static bool code_blob_type_accepts_nmethod(CodeBlobType type) {\n@@ -261,1 +261,1 @@\n-  static bool code_blob_type_accepts_allocable(int type) {\n+  static bool code_blob_type_accepts_allocable(CodeBlobType type) {\n@@ -267,1 +267,1 @@\n-  static int get_code_blob_type(int comp_level) {\n+  static CodeBlobType get_code_blob_type(int comp_level) {\n@@ -279,1 +279,1 @@\n-    return 0;\n+    return static_cast<CodeBlobType>(0);\n@@ -312,1 +312,1 @@\n-  static int get_codemem_full_count(int code_blob_type) {\n+  static int get_codemem_full_count(CodeBlobType code_blob_type) {\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -2420,1 +2420,1 @@\n-void CompileBroker::handle_full_code_cache(int code_blob_type) {\n+void CompileBroker::handle_full_code_cache(CodeBlobType code_blob_type) {\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -361,1 +361,1 @@\n-  static void handle_full_code_cache(int code_blob_type);\n+  static void handle_full_code_cache(CodeBlobType code_blob_type);\n","filename":"src\/hotspot\/share\/compiler\/compileBroker.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -595,1 +595,2 @@\n-  for (int bt = 0; bt < CodeBlobType::NumTypes; ++bt) {\n+  for (int bt_index = 0; bt_index < static_cast<int>(CodeBlobType::NumTypes); ++bt_index) {\n+    const CodeBlobType bt = static_cast<CodeBlobType>(bt_index);\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrPeriodic.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -251,1 +251,1 @@\n-  static const u4 nof_entries = CodeBlobType::NumTypes;\n+  static const u4 nof_entries = static_cast<u4>(CodeBlobType::NumTypes);\n@@ -255,1 +255,1 @@\n-    writer.write(CodeCache::get_code_heap_name(i));\n+    writer.write(CodeCache::get_code_heap_name(static_cast<CodeBlobType>(i)));\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrType.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-CodeHeap::CodeHeap(const char* name, const int code_blob_type)\n+CodeHeap::CodeHeap(const char* name, const CodeBlobType code_blob_type)\n","filename":"src\/hotspot\/share\/memory\/heap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-  const int    _code_blob_type;                  \/\/ CodeBlobType it contains\n+  const CodeBlobType _code_blob_type;            \/\/ CodeBlobType it contains\n@@ -149,1 +149,1 @@\n-  CodeHeap(const char* name, const int code_blob_type);\n+  CodeHeap(const char* name, const CodeBlobType code_blob_type);\n@@ -208,1 +208,1 @@\n-  bool accepts(int code_blob_type) const         { return (_code_blob_type == CodeBlobType::All) ||\n+  bool accepts(CodeBlobType code_blob_type) const{ return (_code_blob_type == CodeBlobType::All) ||\n@@ -210,1 +210,1 @@\n-  int code_blob_type() const                     { return _code_blob_type; }\n+  CodeBlobType code_blob_type() const            { return _code_blob_type; }\n","filename":"src\/hotspot\/share\/memory\/heap.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1475,1 +1475,1 @@\n-int WhiteBox::get_blob_type(const CodeBlob* code) {\n+CodeBlobType WhiteBox::get_blob_type(const CodeBlob* code) {\n@@ -1480,1 +1480,1 @@\n-CodeHeap* WhiteBox::get_code_heap(int blob_type) {\n+CodeHeap* WhiteBox::get_code_heap(CodeBlobType blob_type) {\n@@ -1489,1 +1489,1 @@\n-      blob_type(WhiteBox::get_blob_type(blob)),\n+      blob_type(static_cast<jint>(WhiteBox::get_blob_type(blob))),\n@@ -1569,1 +1569,1 @@\n-CodeBlob* WhiteBox::allocate_code_blob(int size, int blob_type) {\n+CodeBlob* WhiteBox::allocate_code_blob(int size, CodeBlobType blob_type) {\n@@ -1593,1 +1593,1 @@\n-  return (jlong) WhiteBox::allocate_code_blob(size, blob_type);\n+  return (jlong) WhiteBox::allocate_code_blob(size, static_cast<CodeBlobType>(blob_type));\n@@ -1608,1 +1608,1 @@\n-    CodeHeap* heap = WhiteBox::get_code_heap(blob_type);\n+    CodeHeap* heap = WhiteBox::get_code_heap(static_cast<CodeBlobType>(blob_type));\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -49,0 +49,1 @@\n+enum class CodeBlobType;\n@@ -63,3 +64,3 @@\n-  static int get_blob_type(const CodeBlob* code);\n-  static CodeHeap* get_code_heap(int blob_type);\n-  static CodeBlob* allocate_code_blob(int size, int blob_type);\n+  static CodeBlobType get_blob_type(const CodeBlob* code);\n+  static CodeHeap* get_code_heap(CodeBlobType blob_type);\n+  static CodeBlob* allocate_code_blob(int size, CodeBlobType blob_type);\n","filename":"src\/hotspot\/share\/prims\/whitebox.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}