{"files":[{"patch":"@@ -45,1 +45,0 @@\n-import java.util.function.Function;\n@@ -70,1 +69,1 @@\n-import sun.swing.AccessibleComponentAccessor;\n+import sun.swing.SwingAccessor;\n@@ -826,1 +825,4 @@\n-            return ac == null ? null : AccessibleComponentAccessor.getAccessible(ac);\n+            if (ac != null) {\n+                return SwingAccessor.getAccessibleComponentAccessor().getCurrentAccessible(ac);\n+            }\n+            return null;\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CAccessibility.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-import sun.swing.AccessibleComponentAccessor;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JList.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -117,1 +117,0 @@\n-import sun.swing.AccessibleComponentAccessor;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTable.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-import sun.swing.AccessibleComponentAccessor;\n+import sun.swing.SwingAccessor;\n@@ -4745,4 +4745,17 @@\n-                AccessibleComponentAccessor.addAccessor(c ->\n-                        c instanceof AccessibleJTreeNode ?\n-                                ((AccessibleJTreeNode) c).getCurrentComponent()\n-                                : null);\n+                SwingAccessor.setAccessibleComponentAccessor(new AccessibleJTreeNodeAccessor());\n+            }\n+\n+            private static class AccessibleJTreeNodeAccessor implements SwingAccessor.AccessibleComponentAccessor {\n+\n+                private AccessibleJTreeNodeAccessor() {}\n+\n+                @Override\n+                public Accessible getCurrentAccessible(AccessibleContext ac) {\n+                    if (ac instanceof AccessibleJTreeNode) {\n+                        Component c = ((AccessibleJTreeNode) ac).getCurrentComponent();\n+                        if (c instanceof Accessible) {\n+                            return (Accessible)c;\n+                        }\n+                    }\n+                    return null;\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTree.java","additions":18,"deletions":5,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -1,51 +0,0 @@\n-\/*\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2021, JetBrains s.r.o.. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.swing;\n-\n-import javax.accessibility.Accessible;\n-import javax.accessibility.AccessibleContext;\n-import java.util.List;\n-import java.util.function.Function;\n-import java.util.concurrent.CopyOnWriteArrayList;\n-\n-public class AccessibleComponentAccessor {\n-    private static final List<Function<AccessibleContext, Object>> accessors = new CopyOnWriteArrayList<>();\n-\n-    public static void addAccessor(Function<AccessibleContext, Object> accessor) {\n-        accessors.add(accessor);\n-    }\n-\n-    public static Accessible getAccessible(AccessibleContext context) {\n-        for (Function<AccessibleContext, Object> accessor : accessors) {\n-            Object o = accessor.apply(context);\n-            if (o instanceof Accessible accessible) {\n-                return accessible;\n-            }\n-        }\n-        return null;\n-    }\n-}\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/AccessibleComponentAccessor.java","additions":0,"deletions":51,"binary":false,"changes":51,"status":"deleted"},{"patch":"@@ -28,1 +28,2 @@\n-import java.awt.*;\n+import java.awt.Component;\n+import java.awt.Point;\n@@ -30,1 +31,2 @@\n-import javax.swing.*;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n@@ -32,0 +34,7 @@\n+import javax.swing.JComponent;\n+import javax.swing.KeyStroke;\n+import javax.swing.Popup;\n+import javax.swing.PopupFactory;\n+import javax.swing.RepaintManager;\n+import javax.swing.TransferHandler;\n+import javax.swing.UIDefaults;\n@@ -50,0 +59,20 @@\n+    public static AccessibleComponentAccessor getAccessibleComponentAccessor() {\n+        return accessibleComponentAccessor;\n+    }\n+\n+    public static void setAccessibleComponentAccessor(final AccessibleComponentAccessor accessibleAccessor) {\n+        accessibleComponentAccessor = accessibleAccessor;\n+    }\n+\n+    \/**\n+     * This interface provides access to the renderer's accessibility component.\n+     * For example, the renderer of a list element, a table cell, or a tree node\n+     *\/\n+    public interface AccessibleComponentAccessor {\n+        Accessible getCurrentAccessible(AccessibleContext ac);\n+    }\n+\n+    private static AccessibleComponentAccessor accessibleComponentAccessor = null;\n+\n+\n+\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/SwingAccessor.java","additions":31,"deletions":2,"binary":false,"changes":33,"status":"modified"}]}