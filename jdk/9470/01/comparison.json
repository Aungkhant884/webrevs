{"files":[{"patch":"@@ -40,1 +40,1 @@\n-import com.sun.hotspot.igv.selectioncoordinator.*;\n+import com.sun.hotspot.igv.selectioncoordinator.SelectionCoordinator;\n@@ -94,1 +94,0 @@\n-    private WidgetAction zoomAction;\n@@ -270,10 +269,0 @@\n-    private MouseWheelListener mouseWheelListener = new MouseWheelListener() {\n-\n-        @Override\n-        public void mouseWheelMoved(MouseWheelEvent e) {\n-            if (e.isControlDown()) {\n-                DiagramScene.this.relayoutWithoutLayout(null);\n-            }\n-        }\n-    };\n-\n@@ -409,1 +398,1 @@\n-        panAction = new CustomizablePanAction(~0, MouseEvent.BUTTON1_DOWN_MASK);\n+        panAction = new CustomizablePanAction(MouseEvent.BUTTON1_DOWN_MASK);\n@@ -458,3 +447,0 @@\n-        LayerWidget selectionLayer = new LayerWidget(this);\n-        this.addChild(selectionLayer);\n-\n@@ -462,1 +448,0 @@\n-\n@@ -464,3 +449,1 @@\n-        zoomAction = ActionFactory.createMouseCenteredZoomAction(1.2);\n-        this.getActions().addAction(zoomAction);\n-        this.getView().addMouseWheelListener(mouseWheelListener);\n+        this.getActions().addAction(ActionFactory.createMouseCenteredZoomAction(1.1));\n@@ -468,1 +451,0 @@\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,0 +53,1 @@\n+import javax.swing.JScrollBar;\n@@ -65,0 +66,1 @@\n+    private boolean active = true;\n@@ -69,2 +71,1 @@\n-\n-    private final int modifiersExMask;\n+    private Rectangle rectangle;\n@@ -73,2 +74,1 @@\n-    public CustomizablePanAction(int modifiersExMask, int modifiersEx) {\n-        this.modifiersExMask = modifiersExMask;\n+    public CustomizablePanAction(int modifiersEx) {\n@@ -83,0 +83,8 @@\n+    private void lock() {\n+        scrollPane = findScrollPane(scene.getView());\n+    }\n+\n+    private void unlock() {\n+        scrollPane = null;\n+    }\n+\n@@ -85,1 +93,1 @@\n-            if (isLocked())\n+            if (this.isLocked()) {\n@@ -87,1 +95,1 @@\n-\n+            }\n@@ -93,1 +101,13 @@\n-    public State mousePressed (Widget widget, WidgetMouseEvent event) {\n+    public State mouseEntered(Widget widget, WidgetMouseEvent event) {\n+        active = true;\n+        return super.mouseEntered(widget, event);\n+    }\n+\n+    @Override\n+    public State mouseExited(Widget widget, WidgetMouseEvent event) {\n+        active = false;\n+        return super.mouseExited(widget, event);\n+    }\n+\n+    @Override\n+    public State mousePressed(Widget widget, WidgetMouseEvent event) {\n@@ -98,9 +118,7 @@\n-        if (isLocked ())\n-            return State.createLocked (widget, this);\n-        if (enabled && (event.getModifiersEx() & modifiersExMask) == modifiersEx) {\n-            scene = widget.getScene ();\n-            scrollPane = findScrollPane (scene.getView ());\n-            if (scrollPane != null) {\n-                lastLocation = scene.convertSceneToView (widget.convertLocalToScene (event.getPoint ()));\n-                SwingUtilities.convertPointToScreen (lastLocation, scene.getView ());\n-                return State.createLocked (widget, this);\n+        if (!this.isLocked() && active && enabled && (event.getModifiersEx() == modifiersEx)) {\n+            scene = widget.getScene();\n+            this.lock();\n+            if (this.isLocked()) {\n+                lastLocation = scene.convertSceneToView(widget.convertLocalToScene(event.getPoint()));\n+                SwingUtilities.convertPointToScreen(lastLocation, scene.getView());\n+                rectangle = scene.getView().getVisibleRect();\n@@ -109,1 +127,1 @@\n-        return State.REJECTED;\n+        return super.mousePressed(widget, event);\n@@ -112,1 +130,1 @@\n-    private JScrollPane findScrollPane (JComponent component) {\n+    private JScrollPane findScrollPane(JComponent component) {\n@@ -114,1 +132,1 @@\n-            if (component == null)\n+            if (component == null) {\n@@ -116,1 +134,2 @@\n-            if (component instanceof JScrollPane)\n+            }\n+            if (component instanceof JScrollPane) {\n@@ -118,2 +137,3 @@\n-            Container parent = component.getParent ();\n-            if (! (parent instanceof JComponent))\n+            }\n+            Container parent = component.getParent();\n+            if (!(parent instanceof JComponent)) {\n@@ -121,0 +141,1 @@\n+            }\n@@ -126,5 +147,5 @@\n-    public State mouseReleased (Widget widget, WidgetMouseEvent event) {\n-        boolean state = pan (widget, event.getPoint ());\n-        if (state)\n-            scrollPane = null;\n-        return state ? State.createLocked (widget, this) : State.REJECTED;\n+    public State mouseReleased(Widget widget, WidgetMouseEvent event) {\n+        if (this.isLocked() && scene == widget.getScene()) {\n+            this.unlock();\n+        }\n+        return super.mouseReleased(widget, event);\n@@ -134,16 +155,12 @@\n-    public State mouseDragged (Widget widget, WidgetMouseEvent event) {\n-        return pan (widget, event.getPoint ()) ? State.createLocked (widget, this) : State.REJECTED;\n-    }\n-\n-    private boolean pan (Widget widget, Point newLocation) {\n-        if (scrollPane == null  ||  scene != widget.getScene ())\n-            return false;\n-        newLocation = scene.convertSceneToView (widget.convertLocalToScene (newLocation));\n-        SwingUtilities.convertPointToScreen (newLocation, scene.getView ());\n-        JComponent view = scene.getView ();\n-        Rectangle rectangle = view.getVisibleRect ();\n-        rectangle.x += lastLocation.x - newLocation.x;\n-        rectangle.y += lastLocation.y - newLocation.y;\n-        view.scrollRectToVisible (rectangle);\n-        lastLocation = newLocation;\n-        return true;\n+    public State mouseDragged(Widget widget, WidgetMouseEvent event) {\n+        if (active && this.isLocked() && scene == widget.getScene()) {\n+            Point newLocation = event.getPoint();\n+            newLocation = scene.convertSceneToView(widget.convertLocalToScene(newLocation));\n+            SwingUtilities.convertPointToScreen(newLocation, scene.getView());\n+            rectangle.x += lastLocation.x - newLocation.x;\n+            rectangle.y += lastLocation.y - newLocation.y;\n+            scene.getView().scrollRectToVisible(rectangle);\n+            lastLocation = newLocation;\n+            return State.createLocked(widget, this);\n+        }\n+        return State.REJECTED;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/CustomizablePanAction.java","additions":61,"deletions":44,"binary":false,"changes":105,"status":"modified"}]}