{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -232,5 +232,1 @@\n-                if (!ExtendedOptions.SENSITIVITY_HIGH.matches(modifier) &&\n-                        !ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier) &&\n-                        !ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n-                    return new UnsupportedOperationException(\"Modifier not supported\");\n-                }\n+                return new UnsupportedOperationException(\"Modifier not supported\");\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/fs\/LinuxWatchService.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,6 +50,0 @@\n-    public static final FileSystemOption<Integer> SENSITIVITY_HIGH =\n-        new FileSystemOption<>(ExtendedOptions.SENSITIVITY_HIGH);\n-    public static final FileSystemOption<Integer> SENSITIVITY_MEDIUM =\n-        new FileSystemOption<>(ExtendedOptions.SENSITIVITY_MEDIUM);\n-    public static final FileSystemOption<Integer> SENSITIVITY_LOW =\n-        new FileSystemOption<>(ExtendedOptions.SENSITIVITY_LOW);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/FileSystemOption.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -141,4 +141,0 @@\n-\n-    public static final InternalOption<Integer> SENSITIVITY_HIGH = new InternalOption<>();\n-    public static final InternalOption<Integer> SENSITIVITY_MEDIUM = new InternalOption<>();\n-    public static final InternalOption<Integer> SENSITIVITY_LOW = new InternalOption<>();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/ExtendedOptions.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -125,5 +125,2 @@\n-            if (!ExtendedOptions.SENSITIVITY_HIGH.matches(modifier) &&\n-                !ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier) &&\n-                !ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n-                throw new UnsupportedOperationException(\"Modifier not supported\");\n-            }\n+\n+            throw new UnsupportedOperationException(\"Modifier not supported\");\n@@ -143,1 +140,2 @@\n-                        return doPrivilegedRegister(path, eventSet);\n+                        return doPrivilegedRegister(path, eventSet,\n+                                                    POLLING_INTERVAL);\n@@ -157,1 +155,2 @@\n-                                                 Set<? extends WatchEvent.Kind<?>> events)\n+                                                 Set<? extends WatchEvent.Kind<?>> events,\n+                                                 int sensitivityInSeconds)\n@@ -186,1 +185,1 @@\n-            watchKey.enable(events);\n+            watchKey.enable(events, sensitivityInSeconds);\n@@ -296,1 +295,1 @@\n-        void enable(Set<? extends WatchEvent.Kind<?>> events) {\n+        void enable(Set<? extends WatchEvent.Kind<?>> events, long period) {\n@@ -304,2 +303,1 @@\n-                    .scheduleAtFixedRate(thunk, POLLING_INTERVAL,\n-                                         POLLING_INTERVAL, TimeUnit.SECONDS);\n+                    .scheduleAtFixedRate(thunk, period, period, TimeUnit.SECONDS);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/PollingWatchService.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -349,5 +349,1 @@\n-                    if (!ExtendedOptions.SENSITIVITY_HIGH.matches(modifier) &&\n-                            !ExtendedOptions.SENSITIVITY_MEDIUM.matches(modifier) &&\n-                            !ExtendedOptions.SENSITIVITY_LOW.matches(modifier)) {\n-                        return new UnsupportedOperationException(\"Modifier not supported\");\n-                    }\n+                    return new UnsupportedOperationException(\"Modifier not supported\");\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsWatchService.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}