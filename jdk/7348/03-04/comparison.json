{"files":[{"patch":"@@ -709,1 +709,1 @@\n-            \/\/ We will modify 0x53, \"S\" within the CEN filename entry\n+            \/\/ We will modify 0x53, \"S\", within the CEN filename entry\n@@ -754,0 +754,27 @@\n+     * The signed jar was created from the jar {@code Valid-EntryName.jar} via:\n+     * <pre>\n+     *     {@code\n+     *        keytool -genkey -keyalg RSA -alias myFirstKey -keystore myKeystore -storepass changeit -keypass changeit}\n+     *        jarsigner -keystore myKeystore -verbose Valid-EntryName.jar -signedjar signed.jar myFirstKey}\n+     *      }\n+     * <\/pre>\n+     *\n+     * The {@code Valid-EntryName.jar} and {@code Signed-Valid-EntryName.jar}\n+     * that are written to disk at the start of the test run within\n+     * the {@code setup} method were converted to a {@code ByteArray} using the\n+     * utility method {@code createByteArray} using code similar to:\n+     *\n+     * <pre>\n+     *  {@code\n+     *     var jar = Files.readAllBytes(VALID_ENTRY_NAME_JAR);\n+     *     var validEntryName = createByteArray(fooJar, \"VALID_ENTRY_NAME\");\n+     *     var signedJar = Files.readAllBytes(SIGNED_VALID_ENTRY_NAME_JAR);\n+     *     var signedValidEntryName = createByteArray(fooJar, \"SIGNED_VALID_ENTRY_NAME\");\n+     *  }\n+     * <\/pre>\n+     *\n+     * The jar files {@code Invalid-EntryName.jar} and\n+     * {@code Signed-Invalid-EntryName.jar} are created by modifying\n+     * the CEN filename entry changing the value from\n+     * {@code 0x53}, \"S\", to the value {@code 0x13}\n+     * \n@@ -755,0 +782,1 @@\n+     *\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/GetInputStreamNPETest.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"}]}