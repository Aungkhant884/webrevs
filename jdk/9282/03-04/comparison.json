{"files":[{"patch":"@@ -248,3 +248,3 @@\n-     * {@code AlgorithmParameterGeneratorSpi} implementation from the provider\n-     * object is returned.  Note that the specified provider object\n-     * does not have to be registered in the provider list.\n+     * {@code AlgorithmParameterGeneratorSpi} implementation from the specified\n+     * provider is returned.  Note that the specified provider does not\n+     * have to be registered in the provider list.\n","filename":"src\/java.base\/share\/classes\/java\/security\/AlgorithmParameterGenerator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-     * provider object is returned.  Note that the specified provider object\n+     * provider is returned.  Note that the specified provider\n","filename":"src\/java.base\/share\/classes\/java\/security\/AlgorithmParameters.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-     * to instantiate new Permission objects.\n+     * to instantiate new {@code Permission} objects.\n@@ -129,1 +129,1 @@\n-     * storing AllPermission objects.\n+     * storing {@code AllPermission} objects.\n@@ -139,1 +139,1 @@\n- * of AllPermission permissions. {@code AllPermission} objects\n+ * of {@code AllPermission} permissions. {@code AllPermission} objects\n@@ -163,1 +163,1 @@\n-     * True if any AllPermissions have been added.\n+     * True if any {@code AllPermissionCollection} objects have been added.\n@@ -168,1 +168,1 @@\n-     * Create an empty AllPermissions object.\n+     * Create an empty {@code AllPermissionCollection} object.\n@@ -177,1 +177,1 @@\n-     * Adds a permission to the {@code AllPermissions} object.\n+     * Adds a permission to the {@code AllPermissionCollection} object.\n","filename":"src\/java.base\/share\/classes\/java\/security\/AllPermission.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-     * BasicPermissions.\n+     * {@code BasicPermission} objects.\n@@ -250,1 +250,1 @@\n-     * {@code PermissionCollection} {@code implies} method\n+     * {@link PermissionCollection#implies} method\n@@ -254,1 +254,1 @@\n-     * storing BasicPermissions.\n+     * storing {@code BasicPermission} objects.\n@@ -334,1 +334,1 @@\n-     * The class to which all BasicPermissions in this\n+     * The class to which all {@code BasicPermission} objects in this\n@@ -352,2 +352,2 @@\n-     * Adds a permission to the BasicPermissions. The key for the hash is\n-     * permission.path.\n+     * Adds a permission to the {@code BasicPermission} object.\n+     * The key for the hash is permission.path.\n@@ -360,1 +360,1 @@\n-     *                                       same Class as the other\n+     *                                       same class as the other\n@@ -374,1 +374,1 @@\n-        \/\/ make sure we only add new BasicPermissions of the same class\n+        \/\/ make sure we only add new BasicPermission objects of the same class\n@@ -474,4 +474,6 @@\n-     *    The BasicPermissions in this BasicPermissionCollection.\n-     *    All BasicPermissions in the collection must belong to the same class.\n-     *    The Hashtable is indexed by the BasicPermission name; the value\n-     *    of the Hashtable entry is the permission.\n+     *    The {@code BasicPermission} objects in this\n+     *    {@code BasicPermissionCollection}.\n+     *    All {@code BasicPermission} objects in the collection must belong\n+     *    to the same class.\n+     *    The Hashtable is indexed by the {@code BasicPermission} name;\n+     *    the value of the Hashtable entry is the permission.\n@@ -479,2 +481,3 @@\n-     *   This is set to {@code true} if this BasicPermissionCollection\n-     *   contains a BasicPermission with '*' as its permission name.\n+     *   This is set to {@code true} if this {@code BasicPermissionCollection}\n+     *   contains a {@code BasicPermission} object\n+     *   with '*' as its permission name.\n@@ -482,2 +485,2 @@\n-     *   The class to which all BasicPermissions in this\n-     *   BasicPermissionCollection belongs.\n+     *   The class to which all {@code BasicPermission} objectss in this\n+     *   {@code BasicPermissionCollection} belongs.\n@@ -524,1 +527,1 @@\n-     * BasicPermissionCollection from a stream.\n+     * {@code BasicPermissionCollection} from a stream.\n","filename":"src\/java.base\/share\/classes\/java\/security\/BasicPermission.java","additions":20,"deletions":17,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * kinds, including Signers. All types of {@code Identity} objects can be\n+ * kinds, including signers. All types of {@code Identity} objects can be\n@@ -190,1 +190,2 @@\n-     * specified principal. (Note: Identity implements Principal.)\n+     * specified principal. (Note: {@code Identity} implements\n+     * {@code Principal}.)\n","filename":"src\/java.base\/share\/classes\/java\/security\/IdentityScope.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -147,2 +147,2 @@\n-     * <p> This method traverses the list of registered security Providers,\n-     * starting with the most preferred Provider.\n+     * <p> This method traverses the list of registered security providers,\n+     * starting with the most preferred provider.\n@@ -151,1 +151,1 @@\n-     * Provider that supports the specified algorithm is returned.\n+     * provider that supports the specified algorithm is returned.\n@@ -236,3 +236,3 @@\n-     * {@code KeyFactorySpi} implementation from the specified Provider\n-     * object is returned.  Note that the specified provider object\n-     * does not have to be registered in the provider list.\n+     * {@code KeyFactorySpi} implementation from the specified provider\n+     * is returned.  Note that the specified provider does not\n+     * have to be registered in the provider list.\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyFactory.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -201,1 +201,1 @@\n-     * Provider that supports the specified algorithm is returned.\n+     * provider that supports the specified algorithm is returned.\n@@ -311,3 +311,3 @@\n-     * {@code KeyPairGeneratorSpi} implementation from the specified Provider\n-     * object is returned.  Note that the specified {@code Provider} object\n-     * does not have to be registered in the provider list.\n+     * {@code KeyPairGeneratorSpi} implementation from the specified provider\n+     * is returned.  Note that the specified provider does not\n+     * have to be registered in the provider list.\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyPairGenerator.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -385,1 +385,1 @@\n-     * A ProtectionParameter encapsulating a CallbackHandler.\n+     * A {@code ProtectionParameter} encapsulating a CallbackHandler.\n@@ -832,2 +832,2 @@\n-     * <p> This method traverses the list of registered security Providers,\n-     * starting with the most preferred Provider.\n+     * <p> This method traverses the list of registered security providers,\n+     * starting with the most preferred provider.\n@@ -836,1 +836,1 @@\n-     * Provider that supports the specified type is returned.\n+     * provider that supports the specified type is returned.\n@@ -857,1 +857,1 @@\n-     * @throws KeyStoreException if no {@code Provider} supports a\n+     * @throws KeyStoreException if no provider supports a\n@@ -930,1 +930,1 @@\n-     * {@code KeyStoreSpi} implementation from the specified Provider\n+     * {@code KeyStoreSpi} implementation from the specified provider\n@@ -1507,1 +1507,1 @@\n-     * <p> Note that if this KeyStore has already been loaded, it is\n+     * <p> Note that if this {@code KeyStore} has already been loaded, it is\n@@ -1666,1 +1666,1 @@\n-     * preferred Provider.\n+     * preferred provider.\n@@ -1668,1 +1668,1 @@\n-     * Provider, it invokes the {@link\n+     * provider, it invokes the {@link\n@@ -1673,1 +1673,1 @@\n-     * implementation from the first Provider that supports the specified file.\n+     * implementation from the first provider that supports the specified file.\n@@ -1683,1 +1683,1 @@\n-     * @throws KeyStoreException if no Provider supports a {@code KeyStoreSpi}\n+     * @throws KeyStoreException if no provider supports a {@code KeyStoreSpi}\n@@ -1722,1 +1722,1 @@\n-     * Provider providers}, starting with the most preferred Provider.\n+     * Provider providers}, starting with the most preferred provider.\n@@ -1724,1 +1724,1 @@\n-     * Provider, it invokes the {@link\n+     * provider, it invokes the {@link\n@@ -1729,1 +1729,1 @@\n-     * implementation from the first Provider that supports the specified file.\n+     * implementation from the first provider that supports the specified file.\n@@ -1740,1 +1740,1 @@\n-     * @throws KeyStoreException if no Provider supports a {@code KeyStoreSpi}\n+     * @throws KeyStoreException if no provider supports a {@code KeyStoreSpi}\n@@ -1848,1 +1848,1 @@\n-     * <p>This makes it possible to decouple configuration from KeyStore\n+     * <p>This makes it possible to decouple configuration from {@code KeyStore}\n@@ -1862,1 +1862,1 @@\n-         * Construct a new Builder.\n+         * Construct a new {@code Builder}.\n@@ -1869,1 +1869,1 @@\n-         * Returns the KeyStore described by this object.\n+         * Returns the {@code KeyStore} described by this object.\n@@ -1873,1 +1873,1 @@\n-         *   operation, for example if the KeyStore could not be\n+         *   operation, for example if the {@code KeyStore} could not be\n@@ -1879,1 +1879,1 @@\n-         * Returns the ProtectionParameters that should be used to obtain\n+         * Returns the {@code ProtectionParameter} that should be used to obtain\n@@ -1884,1 +1884,1 @@\n-         * @return the ProtectionParameters that should be used to obtain\n+         * @return the {@code ProtectionParameter} that should be used to obtain\n@@ -1886,1 +1886,1 @@\n-         * @param alias the alias of the KeyStore entry\n+         * @param alias the alias of the {@code KeyStore} entry\n@@ -1890,1 +1890,1 @@\n-         * @throws IllegalStateException if the getKeyStore method has\n+         * @throws IllegalStateException if the {@code getKeyStore} method has\n@@ -1897,1 +1897,2 @@\n-         * Returns a new Builder that encapsulates the given KeyStore.\n+         * Returns a new {@code Builder} that encapsulates the given\n+         * {@code KeyStore}.\n@@ -1904,9 +1905,9 @@\n-         * used with Builder-based APIs.\n-         *\n-         * @return a new Builder object\n-         * @param keyStore the KeyStore to be encapsulated\n-         * @param protectionParameter the ProtectionParameter used to\n-         *   protect the KeyStore entries\n-         * @throws NullPointerException if keyStore or\n-         *   protectionParameters is {@code null}\n-         * @throws IllegalArgumentException if the keyStore has not been\n+         * used with builder-based APIs.\n+         *\n+         * @return a new {@code Builder} object\n+         * @param keyStore the {@code KeyStore} to be encapsulated\n+         * @param protectionParameter the {@code ProtectionParameter} used to\n+         *   protect the {@code KeyStore} entries\n+         * @throws NullPointerException if {@code keyStore} or\n+         *   {@code protectionParameter} is {@code null}\n+         * @throws IllegalArgumentException if the {@code keyStore} has not been\n@@ -1946,1 +1947,1 @@\n-         * Returns a new Builder object.\n+         * Returns a new {@code Builder} object.\n@@ -1949,1 +1950,1 @@\n-         * builder will create a KeyStore of type {@code type} and call\n+         * builder will create a {@code KeyStore} of type {@code type} and call\n@@ -1965,1 +1966,1 @@\n-         * <p>The KeyStore is instantiated from {@code provider} if\n+         * <p>The {@code KeyStore} is instantiated from {@code provider} if\n@@ -1977,3 +1978,3 @@\n-         * @return a new Builder object\n-         * @param type the type of KeyStore to be constructed\n-         * @param provider the provider from which the KeyStore is to\n+         * @return a new {@code Builder} object\n+         * @param type the type of {@code KeyStore} to be constructed\n+         * @param provider the provider from which the {@code KeyStore} is to\n@@ -1981,2 +1982,3 @@\n-         * @param file the File that contains the KeyStore data\n-         * @param protection the ProtectionParameter securing the KeyStore data\n+         * @param file the File that contains the {@code KeyStore} data\n+         * @param protection the {@code ProtectionParameter} securing the\n+         * {@code KeyStore} data\n@@ -2011,1 +2013,1 @@\n-         * Returns a new Builder object.\n+         * Returns a new {@code Builder} object.\n@@ -2014,2 +2016,3 @@\n-         * builder will create a KeyStore using {@code file} to detect the\n-         * keystore type and then call its {@link KeyStore#load load()} method.\n+         * builder will create a {@code KeyStore} using {@code file} to detect\n+         * the keystore type and then call its {@link KeyStore#load load()}\n+         * method.\n@@ -2039,3 +2042,4 @@\n-         * @return a new Builder object\n-         * @param file the File that contains the KeyStore data\n-         * @param protection the ProtectionParameter securing the KeyStore data\n+         * @return a new {@code Builder} object\n+         * @param file the File that contains the {@code KeyStore} data\n+         * @param protection the {@code ProtectionParameter} securing the\n+         * {@code KeyStore} data\n@@ -2180,1 +2184,1 @@\n-         * Returns a new Builder object.\n+         * Returns a new {@code Builder} object.\n@@ -2190,1 +2194,1 @@\n-         * <p>The KeyStore is instantiated from {@code provider} if\n+         * <p>The {@code KeyStore} is instantiated from {@code provider} if\n@@ -2200,3 +2204,3 @@\n-         * @return a new Builder object\n-         * @param type the type of KeyStore to be constructed\n-         * @param provider the provider from which the KeyStore is to\n+         * @return a new {@code Builder} object\n+         * @param type the type of {@code KeyStore} to be constructed\n+         * @param provider the provider from which the {@code KeyStore} is to\n@@ -2204,1 +2208,2 @@\n-         * @param protection the ProtectionParameter securing the Keystore\n+         * @param protection the {@code ProtectionParameter} securing the\n+         * {@code Keystore}\n","filename":"src\/java.base\/share\/classes\/java\/security\/KeyStore.java","additions":58,"deletions":53,"binary":false,"changes":111,"status":"modified"},{"patch":"@@ -149,1 +149,1 @@\n-     * Provider that supports the specified algorithm is returned.\n+     * provider that supports the specified algorithm is returned.\n@@ -265,3 +265,3 @@\n-     * {@code MessageDigestSpi} implementation from the specified Provider\n-     * object is returned.  Note that the specified provider object\n-     * does not have to be registered in the provider list.\n+     * {@code MessageDigestSpi} implementation from the specified provider\n+     * is returned.  Note that the specified provider does not\n+     * have to be registered in the provider list.\n@@ -562,1 +562,1 @@\n-     * It represents a MessageDigest with an\n+     * It represents a message digest with an\n@@ -565,2 +565,2 @@\n-     * {@code MessageDigestSpi}, the getInstance() methods above return an\n-     * instance of this class, with the SPI object encapsulated.\n+     * {@code MessageDigestSpi}, the {@code getInstance()} methods\n+     * above return an instance of this class, with the SPI object encapsulated.\n@@ -568,4 +568,4 @@\n-     * Note: All SPI methods from the original MessageDigest class have been\n-     * moved up the hierarchy into a new class (MessageDigestSpi), which has\n-     * been interposed in the hierarchy between the API (MessageDigest)\n-     * and its original parent (Object).\n+     * Note: All SPI methods from the original {@code MessageDigest} class\n+     * have been moved up the hierarchy into a new class\n+     * ({@code MessageDigestSpi}), which has been interposed in the hierarchy\n+     * between the API ({@code MessageDigest}) and its original parent (Object).\n","filename":"src\/java.base\/share\/classes\/java\/security\/MessageDigest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -43,8 +43,8 @@\n- * <p>When it is desirable to group together a number of Permission objects\n- * of the same type, the {@code newPermissionCollection} method on that\n- * particular type of Permission object should first be called. The default\n- * behavior (from the Permission class) is to simply return {@code null}.\n- * Subclasses of class Permission override the method if they need to store\n- * their permissions in a particular {@code PermissionCollection} object\n- * in order to provide the correct semantics when the\n- * {@code PermissionCollection.implies} method is called.\n+ * <p>When it is desirable to group together a number of {@code Permission}\n+ * objects of the same type, the {@code newPermissionCollection} method on that\n+ * particular type of {@code Permission} object should first be called. The\n+ * default behavior (from the {@code Permission} class) is to simply return\n+ * {@code null}. Subclasses of class {@code Permission} override the method if\n+ * they need to store their permissions in a particular\n+ * {@code PermissionCollection} object in order to provide the correct\n+ * semantics when the {@code PermissionCollection.implies} method is called.\n@@ -55,1 +55,1 @@\n- * (one that uses a Hashtable, one that uses a Vector, etc.).\n+ * (one that uses a {@code Hashtable}, one that uses a {@code Vector}, etc.).\n@@ -58,4 +58,5 @@\n- * method is a homogeneous collection, which stores only Permission\n- * objects for a given Permission type.  A {@code PermissionCollection} may\n- * also be heterogeneous.  For example, Permissions is a PermissionCollection\n- * subclass that represents a collection of PermissionCollections.\n+ * method is a homogeneous collection, which stores only {@code Permission}\n+ * objects for a given permission type.  A {@code PermissionCollection} may\n+ * also be heterogeneous.  For example, {@code Permissions} is a\n+ * {@code PermissionCollection} subclass that represents a collection of\n+ * {@code PermissionCollection} objects.\n@@ -63,3 +64,4 @@\n- * For example, a Permissions object might have a FilePermissionCollection\n- * for all the FilePermission objects, a SocketPermissionCollection for all the\n- * SocketPermission objects, and so on. Its {@code add} method adds a\n+ * For example, a {@code Permission} object might have a\n+ * {@code FilePermissionCollection} for all the {@code FilePermission} objects,\n+ * a {@code SocketPermissionCollection} for all the {@code SocketPermission}\n+ * objects, and so on. Its {@code add} method adds a\n@@ -69,1 +71,1 @@\n- * {@code PermissionCollection} such as Permissions, and the\n+ * {@code PermissionCollection} such as {@code Permissions}, and the\n@@ -78,3 +80,4 @@\n- * it desires (one using a Hashtable, one using a Vector, etc.). For example,\n- * the Permissions object uses a default {@code PermissionCollection}\n- * implementation that stores the permission objects in a Hashtable.\n+ * it desires (one using a {@code Hashtable}, one using a {@code Vector}, etc.).\n+ * For example, the {@code Permissions} object uses a default\n+ * {@code PermissionCollection} implementation that stores the permission\n+ * objects in a {@code Hashtable}.\n@@ -130,1 +133,1 @@\n-     * the collection of Permission objects held in this\n+     * the collection of {@code Permission} objects held in this\n@@ -133,1 +136,1 @@\n-     * @param permission the Permission object to compare.\n+     * @param permission the {@code Permission} object to compare.\n@@ -175,2 +178,2 @@\n-     * is marked as readonly, no new Permission objects can be added to it\n-     * using {@code add}.\n+     * is marked as readonly, no new {@code Permission} objects\n+     * can be added to it using {@code add}.\n@@ -183,3 +186,3 @@\n-     * Returns true if this {@code PermissionCollection} object is marked\n-     * as readonly. If it is readonly, no new Permission objects can be added\n-     * to it using {@code add}.\n+     * Returns {@code true} if this {@code PermissionCollection} object is\n+     * marked as readonly. If it is readonly, no new {@code Permission}\n+     * objects can be added to it using {@code add}.\n@@ -210,2 +213,2 @@\n-     * object's superclass, which is Object. The result is\n-     * this PermissionCollection's type name followed by this object's\n+     * object's superclass, which is {@code Object}. The result is\n+     * this collection's type name followed by this object's\n","filename":"src\/java.base\/share\/classes\/java\/security\/PermissionCollection.java","additions":32,"deletions":29,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n- * This class represents a heterogeneous collection of Permissions. That is,\n- * it contains different types of Permission objects, organized into\n- * PermissionCollections. For example, if any\n+ * This class represents a heterogeneous collection of permissions.\n+ * That is, it contains different types of {@code Permission} objects,\n+ * organized into {@code PermissionCollection} objects. For example, if any\n@@ -47,8 +47,8 @@\n- * this class, they are all stored in a single\n- * PermissionCollection. It is the PermissionCollection returned by a call to\n- * the {@code newPermissionCollection} method in the FilePermission class.\n- * Similarly, any {@code java.lang.RuntimePermission} objects are\n- * stored in the PermissionCollection returned by a call to the\n- * {@code newPermissionCollection} method in the\n- * RuntimePermission class. Thus, this class represents a collection of\n- * PermissionCollections.\n+ * this class, they are all stored in a single {@code PermissionCollection}.\n+ * It is the {@code PermissionCollection} returned by a call to\n+ * the {@code newPermissionCollection} method in the {@code FilePermission}\n+ * class. Similarly, any {@code java.lang.RuntimePermission} objects are\n+ * stored in the {@code PermissionCollection} returned by a call to the\n+ * {@code newPermissionCollection} method in the {@code RuntimePermission}\n+ * class. Thus, this class represents a collection of\n+ * {@code PermissionCollection} objects.\n@@ -56,8 +56,9 @@\n- * <p>When the {@code add} method is called to add a Permission, the\n- * Permission is stored in the appropriate PermissionCollection. If no such\n- * collection exists yet, the Permission object's class is determined and the\n- * {@code newPermissionCollection} method is called on that class to create\n- * the PermissionCollection and add it to the {@code Permissions} object. If\n- * {@code newPermissionCollection} returns {@code null}, then a default\n- * PermissionCollection that uses a hashtable will be created and used. Each\n- * hashtable entry stores a Permission object as both the key and the value.\n+ * <p>When the {@code add} method is called to add a {@code Permission}, the\n+ * {@code Permission} is stored in the appropriate {@code PermissionCollection}.\n+ * If no such collection exists yet, the {@code Permission} object's class is\n+ * determined and the {@code newPermissionCollection} method is called on that\n+ * class to create the {@code PermissionCollection} and add it to the\n+ * {@code Permissions} object. If {@code newPermissionCollection} returns\n+ * {@code null}, then a default {@code PermissionCollection} that uses a\n+ * hashtable will be created and used. Each hashtable entry stores a\n+ * {@code Permission} object as both the key and the value.\n@@ -85,2 +86,2 @@\n-     * Key is permissions Class, value is PermissionCollection for that class.\n-     * Not serialized; see serialization section at end of class.\n+     * Key is permissions Class, value is {@code PermissionCollection} for\n+     * that class. Not serialized; see serialization section at end of class.\n@@ -100,1 +101,1 @@\n-     * PermissionCollections.\n+     * {@code PermissionCollection} objects.\n@@ -108,4 +109,5 @@\n-     * Adds a permission object to the PermissionCollection for the class the\n-     * permission belongs to. For example, if <i>permission<\/i> is a\n-     * FilePermission, it is added to the FilePermissionCollection stored\n-     * in this {@code Permissions} object.\n+     * Adds a {@code Permission} object to the {@code PermissionCollection}\n+     * for the class the permission belongs to. For example,\n+     * if <i>permission<\/i> is a {@code FilePermission}, it is added to\n+     * the {@code FilePermissionCollection} stored in this\n+     * {@code Permissions} object.\n@@ -113,3 +115,3 @@\n-     * This method creates\n-     * a new PermissionCollection object (and adds the permission to it)\n-     * if an appropriate collection does not yet exist.\n+     * This method creates a new {@code PermissionCollection} object\n+     * (and adds the permission to it) if an appropriate collection does\n+     * not yet exist.\n@@ -117,1 +119,1 @@\n-     * @param permission the Permission object to add.\n+     * @param permission the {@code Permission} object to add.\n@@ -143,2 +145,2 @@\n-     * Checks to see if this object's PermissionCollection for permissions of\n-     * the specified permission's class implies the permissions\n+     * Checks to see if this object's {@code PermissionCollection} for\n+     * permissions of the specified permission's class implies the permissions\n@@ -146,3 +148,3 @@\n-     * combination of permissions in the appropriate PermissionCollection\n-     * (e.g., a FilePermissionCollection for a FilePermission) together\n-     * imply the specified permission.\n+     * combination of permissions in the appropriate\n+     * {@code PermissionCollection} (e.g., a {@code FilePermissionCollection}\n+     * for a {@code FilePermission}) together imply the specified permission.\n@@ -150,6 +152,6 @@\n-     * <p>For example, suppose there is a FilePermissionCollection in this\n-     * {@code Permissions} object, and it contains one FilePermission that\n-     * specifies \"read\" access for  all files in all subdirectories of the\n-     * \"\/tmp\" directory, and another FilePermission that specifies \"write\"\n-     * access for all files in the \"\/tmp\/scratch\/foo\" directory.\n-     * Then if the {@code implies} method\n+     * <p>For example, suppose there is a {@code FilePermissionCollection}\n+     * in this {@code Permissions} object, and it contains one\n+     * {@code FilePermission} that specifies \"read\" access for all files\n+     * in all subdirectories of the \"\/tmp\" directory, and another\n+     * {@code FilePermission} that specifies \"write\" access for all files\n+     * in the \"\/tmp\/scratch\/foo\" directory. Then if the {@code implies} method\n@@ -160,2 +162,2 @@\n-     * <p>Additionally, if this PermissionCollection contains the\n-     * AllPermission, this method will always return {@code true}.\n+     * <p>Additionally, if this {@code PermissionCollection} contains the\n+     * {@code AllPermission}, this method will always return {@code true}.\n@@ -163,1 +165,1 @@\n-     * @param permission the Permission object to check.\n+     * @param permission the {@code Permission} object to check.\n@@ -166,2 +168,1 @@\n-     * PermissionCollection it\n-     * belongs to, {@code false} if not.\n+     * {@code PermissionCollection} it belongs to, {@code false} if not.\n@@ -187,2 +188,2 @@\n-     * Returns an enumeration of all the Permission objects in all the\n-     * PermissionCollections in this {@code Permissions} object.\n+     * Returns an enumeration of all the {@code Permission} objects in all the\n+     * {@code PermissionCollection} objects in this {@code Permissions} object.\n@@ -190,1 +191,1 @@\n-     * @return an enumeration of all the Permissions.\n+     * @return an enumeration of all the {@code Permission} objects.\n@@ -201,5 +202,5 @@\n-     * Gets the PermissionCollection in this {@code Permissions} object for\n-     * permissions whose type is the same as that of <i>p<\/i>.\n-     * For example, if <i>p<\/i> is a FilePermission,\n-     * the FilePermissionCollection\n-     * stored in this {@code Permissions} object will be returned.\n+     * Gets the {@code PermissionCollection} in this {@code Permissions}\n+     * object for permissions whose type is the same as that of <i>p<\/i>.\n+     * For example, if <i>p<\/i> is a {@code FilePermission},\n+     * the {@code FilePermissionCollection} stored in this {@code Permissions}\n+     * object will be returned.\n@@ -207,3 +208,3 @@\n-     * If createEmpty is {@code true},\n-     * this method creates a new PermissionCollection object for the specified\n-     * type of permission objects if one does not yet exist.\n+     * If {@code createEmpty} is {@code true},\n+     * this method creates a new {@code PermissionCollection} object for the\n+     * specified type of permission objects if one does not yet exist.\n@@ -211,1 +212,1 @@\n-     * on <i>p<\/i>.  Subclasses of class Permission\n+     * on <i>p<\/i>.  Subclasses of class {@code Permission}\n@@ -213,1 +214,1 @@\n-     * particular PermissionCollection object in order to provide the\n+     * particular {@code PermissionCollection} object in order to provide the\n@@ -216,4 +217,4 @@\n-     * If the call returns a PermissionCollection, that collection is stored\n-     * in this {@code Permissions} object. If the call returns {@code null} and\n-     * createEmpty is {@code true}, then\n-     * this method instantiates and stores a default PermissionCollection\n+     * If the call returns a {@code PermissionCollection}, that collection is\n+     * stored in this {@code Permissions} object. If the call returns\n+     * {@code null} and {@code createEmpty} is {@code true}, then this method\n+     * instantiates and stores a default {@code PermissionCollection}\n@@ -222,3 +223,3 @@\n-     * createEmpty is ignored when creating empty PermissionCollection\n-     * for unresolved permissions because of the overhead of determining the\n-     * PermissionCollection to use.\n+     * {@code createEmpty} is ignored when creating empty\n+     * {@code PermissionCollection} for unresolved permissions because of the\n+     * overhead of determining the {@code PermissionCollection} to use.\n@@ -226,3 +227,4 @@\n-     * createEmpty should be set to {@code false} when this method is invoked\n-     * from implies() because it incurs the additional overhead of creating and\n-     * adding an empty PermissionCollection that will just return {@code false}.\n+     * {@code createEmpty} should be set to {@code false} when this method is\n+     * invoked from implies() because it incurs the additional overhead of\n+     * creating and adding an empty {@code PermissionCollection} that will\n+     * just return {@code false}.\n@@ -352,1 +354,2 @@\n-     *     A table of the Permission classes and PermissionCollections.\n+     *     A table of the {@code Permission} classes and\n+     *     {@code PermissionCollection} objects.\n@@ -492,1 +495,2 @@\n- * A PermissionsHash stores a homogeneous set of permissions in a hashtable.\n+ * A {@code PermissionsHash} stores a homogeneous set of permissions in a\n+ * hashtable.\n@@ -513,1 +517,1 @@\n-     * Create an empty PermissionsHash object.\n+     * Create an empty {@code PermissionsHash} object.\n@@ -520,1 +524,1 @@\n-     * Adds a permission to the PermissionsHash.\n+     * Adds a permission to the {@code PermissionsHash}.\n@@ -522,1 +526,1 @@\n-     * @param permission the Permission object to add.\n+     * @param permission the {@code Permission} object to add.\n@@ -533,1 +537,1 @@\n-     * @param permission the Permission object to compare\n+     * @param permission the {@code Permission} object to compare\n@@ -557,1 +561,2 @@\n-     * Returns an enumeration of all the Permission objects in the container.\n+     * Returns an enumeration of all the {@code Permission} objects in the\n+     * container.\n@@ -559,1 +564,1 @@\n-     * @return an enumeration of all the Permissions.\n+     * @return an enumeration of all the {@code Permission} objects.\n@@ -573,1 +578,1 @@\n-     *     A table of the Permissions (both key and value are same).\n+     *     A table of the permissions (both key and value are same).\n@@ -603,2 +608,2 @@\n-     * Reads in a Hashtable of Permission\/Permission and saves them in the\n-     * permsMap field.\n+     * Reads in a {@code Hashtable} of Permission\/Permission and saves them\n+     * in the permsMap field.\n","filename":"src\/java.base\/share\/classes\/java\/security\/Permissions.java","additions":85,"deletions":80,"binary":false,"changes":165,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n- * {@code getPolicy} installs an instance of the default Policy\n+ * {@code getPolicy} installs an instance of the default {@code Policy}\n@@ -50,1 +50,1 @@\n- * The default Policy implementation can be changed by setting the value\n+ * The default {@code Policy} implementation can be changed by setting the value\n@@ -65,2 +65,2 @@\n- * object retrieves its policy data is up to the Policy implementation itself.\n- * The policy data may be stored, for example, in a flat ASCII file,\n+ * object retrieves its policy data is up to the {@code Policy} implementation\n+ * itself. The policy data may be stored, for example, in a flat ASCII file,\n@@ -75,1 +75,1 @@\n- * in a particular ProtectionDomain. This is dependent on the Policy\n+ * in a particular ProtectionDomain. This is dependent on the policy\n@@ -368,1 +368,1 @@\n-     * starting with the most preferred Provider.\n+     * starting with the most preferred provider.\n@@ -371,1 +371,1 @@\n-     * Provider that supports the specified type is returned.\n+     * provider that supports the specified type is returned.\n@@ -505,2 +505,2 @@\n-     * object is returned.  Note that the specified provider object\n-     * does not have to be registered in the provider list.\n+     * is returned.  Note that the specified provider does not\n+     * have to be registered in the provider list.\n@@ -517,1 +517,1 @@\n-     * @param provider the Provider.\n+     * @param provider the {@code Provider}.\n@@ -575,1 +575,1 @@\n-     * Return the Provider of this Policy.\n+     * Return the {@code Provider} of this policy.\n@@ -577,1 +577,1 @@\n-     * <p> This {@code Policy} instance will only have a Provider if it\n+     * <p> This {@code Policy} instance will only have a provider if it\n@@ -581,1 +581,1 @@\n-     * @return the Provider of this Policy, or {@code null}.\n+     * @return the {@code Provider} of this policy, or {@code null}.\n@@ -590,1 +590,1 @@\n-     * Return the type of this Policy.\n+     * Return the type of this {@code Policy}.\n@@ -596,1 +596,1 @@\n-     * @return the type of this Policy, or {@code null}.\n+     * @return the type of this {@code Policy}, or {@code null}.\n@@ -605,1 +605,1 @@\n-     * Return Policy parameters.\n+     * Return {@code Policy} parameters.\n@@ -611,1 +611,1 @@\n-     * @return Policy parameters, or {@code null}.\n+     * @return {@code Policy} parameters, or {@code null}.\n","filename":"src\/java.base\/share\/classes\/java\/security\/Policy.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * regardless of the Policy in force. However, to support dynamic security\n+ * regardless of the policy in force. However, to support dynamic security\n@@ -52,1 +52,1 @@\n- * is dynamically mapped to a set of permissions by the current Policy whenever\n+ * is dynamically mapped to a set of permissions by the current policy whenever\n@@ -162,2 +162,2 @@\n-     * Creates a new {@code ProtectionDomain} with the given CodeSource and\n-     * Permissions. If the permissions object is not {@code null}, then\n+     * Creates a new {@code ProtectionDomain} with the given {@code CodeSource}\n+     * and permissions. If permissions is not {@code null}, then\n@@ -165,1 +165,1 @@\n-     * Permissions object.\n+     * permissions.\n@@ -171,1 +171,1 @@\n-     * the current Policy will not be consulted.\n+     * the current policy will not be consulted.\n@@ -193,4 +193,4 @@\n-     * Creates a new {@code ProtectionDomain} qualified by the given CodeSource,\n-     * Permissions, ClassLoader and array of Principals. If the\n-     * permissions object is not null, then {@code setReadOnly()}\n-     * will be called on the passed in Permissions object.\n+     * Creates a new {@code ProtectionDomain} qualified by the given\n+     * {@code CodeSource}, permissions, {@code ClassLoader} and array\n+     * of principals. If permissions is not {@code null}, then\n+     * {@code setReadOnly()} will be called on the passed in permissions.\n@@ -199,1 +199,2 @@\n-     * invoking the {@link #staticPermissionsOnly()} method returns false.\n+     * invoking the {@link #staticPermissionsOnly()} method returns\n+     * {@code false}.\n@@ -201,1 +202,1 @@\n-     * and any permissions granted to this domain by the current Policy at the\n+     * and any permissions granted to this domain by the current policy at the\n@@ -206,2 +207,2 @@\n-     * and {@link DomainCombiner DomainCombiners} which delegate to\n-     * {@code Policy} to actively associate the permissions granted to\n+     * and {@link DomainCombiner DomainCombiners} which delegate to the\n+     * {@code Policy} object to actively associate the permissions granted to\n@@ -209,2 +210,2 @@\n-     * Policy provider the opportunity to augment the supplied\n-     * PermissionCollection to reflect policy changes.\n+     * policy provider the opportunity to augment the supplied\n+     * {@code PermissionCollection} to reflect policy changes.\n@@ -212,1 +213,1 @@\n-     * @param codesource the CodeSource associated with this domain\n+     * @param codesource the {@code CodeSource} associated with this domain\n@@ -214,3 +215,3 @@\n-     * @param classloader the ClassLoader associated with this domain\n-     * @param principals the array of Principals associated with this\n-     * domain. The contents of the array are copied to protect against\n+     * @param classloader the {@code ClassLoader} associated with this domain\n+     * @param principals the array of {@code Principal} objects associated\n+     * with this domain. The contents of the array are copied to protect against\n@@ -242,2 +243,2 @@\n-     * Returns the CodeSource of this domain.\n-     * @return the CodeSource of this domain which may be {@code null}.\n+     * Returns the {@code CodeSource} of this domain.\n+     * @return the {@code CodeSource} of this domain which may be {@code null}.\n@@ -252,2 +253,2 @@\n-     * Returns the ClassLoader of this domain.\n-     * @return the ClassLoader of this domain which may be {@code null}.\n+     * Returns the {@code ClassLoader} of this domain.\n+     * @return the {@code ClassLoader} of this domain which may be {@code null}.\n@@ -300,1 +301,1 @@\n-     * expressed in the Permission object.\n+     * expressed in the {@code Permission} object.\n@@ -308,1 +309,1 @@\n-     * PermissionCollection supplied at construction.\n+     * {@code PermissionCollection} supplied at construction.\n@@ -311,2 +312,2 @@\n-     * of the PermissionCollection supplied at construction and\n-     * the current Policy binding.\n+     * of the {@code PermissionCollection} supplied at construction and\n+     * the current policy binding.\n@@ -314,1 +315,1 @@\n-     * @param perm the Permission object to check.\n+     * @param perm the {code Permission} object to check.\n@@ -316,1 +317,2 @@\n-     * @return {@code true} if {@code perm} is implied by this ProtectionDomain.\n+     * @return {@code true} if {@code perm} is implied by this\n+     * {@code ProtectionDomain}.\n","filename":"src\/java.base\/share\/classes\/java\/security\/ProtectionDomain.java","additions":32,"deletions":30,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -205,3 +205,3 @@\n-     * {@code SecureRandomSpi} implementation from the first\n-     * Provider that supports a {@code SecureRandom} (RNG) algorithm is returned.\n-     * If none of the Providers support an RNG algorithm,\n+     * {@code SecureRandomSpi} implementation from the first provider\n+     * that supports a {@code SecureRandom} (RNG) algorithm is returned.\n+     * If none of the providers support an RNG algorithm,\n@@ -246,3 +246,3 @@\n-     * {@code SecureRandomSpi} implementation from the first\n-     * Provider that supports a {@code SecureRandom} (RNG) algorithm is returned.\n-     * If none of the Providers support an RNG algorithm,\n+     * {@code SecureRandomSpi} implementation from the first provider\n+     * that supports a {@code SecureRandom} (RNG) algorithm is returned.\n+     * If none of the providers support an RNG algorithm,\n@@ -353,1 +353,1 @@\n-     * Provider that supports the specified algorithm is returned.\n+     * provider that supports the specified algorithm is returned.\n@@ -445,3 +445,3 @@\n-     * {@code SecureRandomSpi} implementation from the specified {@code Provider}\n-     * object is returned.  Note that the specified {@code Provider} object\n-     * does not have to be registered in the provider list.\n+     * {@code SecureRandomSpi} implementation from the specified provider\n+     * is returned.  Note that the specified provider does not\n+     * have to be registered in the provider list.\n@@ -486,2 +486,2 @@\n-     * <p> This method traverses the list of registered security Providers,\n-     * starting with the most preferred Provider.\n+     * <p> This method traverses the list of registered security providers,\n+     * starting with the most preferred provider.\n@@ -490,1 +490,1 @@\n-     * Provider that supports the specified algorithm and the specified\n+     * provider that supports the specified algorithm and the specified\n@@ -602,3 +602,2 @@\n-     * {@code Provider} object is returned.  Note that the specified\n-     * {@code Provider} object does not have to be registered in the\n-     * provider list.\n+     * provider is returned.  Note that the specified provider\n+     * does not have to be registered in the provider list.\n","filename":"src\/java.base\/share\/classes\/java\/security\/SecureRandom.java","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-     * Provider that supports the specified algorithm is returned.\n+     * provider that supports the specified algorithm is returned.\n@@ -412,3 +412,3 @@\n-     * {@code SignatureSpi} implementation from the specified Provider\n-     * object is returned.  Note that the specified provider object\n-     * does not have to be registered in the provider list.\n+     * {@code SignatureSpi} implementation from the specified provider\n+     * is returned.  Note that the specified provider does not\n+     * have to be registered in the provider list.\n","filename":"src\/java.base\/share\/classes\/java\/security\/Signature.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}