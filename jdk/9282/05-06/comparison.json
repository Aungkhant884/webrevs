{"files":[{"patch":"@@ -183,1 +183,1 @@\n-     *                                       {@crypto AllPermission}\n+     *                                       {@code AllPermission}\n","filename":"src\/java.base\/share\/classes\/java\/security\/AllPermission.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -305,2 +305,2 @@\n-     * and {@code null} certificates all imply\n-     * the codesource with the location \"http:\/\/www.example.com\/classes\/foo.jar\"\n+     * and {@code null} certificates all imply the codesource with the location\n+     * {@code http:\/\/www.example.com\/classes\/foo.jar}\n","filename":"src\/java.base\/share\/classes\/java\/security\/CodeSource.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -144,2 +144,2 @@\n- * the following standard {@code Cipher} objecttransformations with the keysizes\n- * in parentheses:\n+ * the following standard {@code Cipher} object transformations with\n+ * the keysizes in parentheses:\n@@ -1069,1 +1069,2 @@\n-     * Returns the exemption mechanism object used with this {@code Cipher}.\n+     * Returns the exemption mechanism object used with this {@code Cipher}\n+     * object.\n@@ -1071,2 +1072,2 @@\n-     * @return the exemption mechanism object used with this {@code Cipher}, or\n-     * {@code null} if this {@code Cipher} object does not use any\n+     * @return the exemption mechanism object used with this {@code Cipher}\n+     * object, or {@code null} if this {@code Cipher} object does not use any\n@@ -1224,1 +1225,1 @@\n-     * and initializing it.\n+     * object and initializing it.\n@@ -1801,1 +1802,1 @@\n-     * @throws IllegalStateException if this {@code Cipher} objectis not in\n+     * @throws IllegalStateException if this {@code Cipher} object is not in\n@@ -2707,1 +2708,1 @@\n-     * {@code Cipher} is operating in either GCM or CCM mode, all AAD\n+     * {@code Cipher} object is operating in either GCM or CCM mode, all AAD\n@@ -2785,2 +2786,2 @@\n-     *  when operating in modes such as AEAD (GCM\/CCM).  If this\n-     * {@code Cipher} is operating in either GCM or CCM mode, all AAD\n+     * when operating in modes such as AEAD (GCM\/CCM).  If this\n+     * {@code Cipher} object is operating in either GCM or CCM mode, all AAD\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-     * {@code OutputStream} and a {@code Cipher}.\n+     * {@code OutputStream} and a {@code Cipher} object.\n@@ -206,1 +206,1 @@\n-     * if the encapsulated {@code Cipher} is a block cipher, and the\n+     * if the encapsulated {@code Cipher} object is a block cipher, and the\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherOutputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-     * Initializes this {@code Cipher} object with a key and a source\n+     * Initializes this {@code CipherSpi} object with a key and a source\n@@ -304,2 +304,2 @@\n-     * <p>The {@code Cipher} object is initialized for one of the following four\n-     * operations:\n+     * <p>The {@code CipherSpi} object is initialized for one of the\n+     * following four operations:\n@@ -329,4 +329,4 @@\n-     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a {@code Cipher}\n-     * object is equivalent to creating a new instance of that\n-     * {@code Cipher} object and initializing it.\n+     * <p>Note that when a {@code CipherSpi} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a\n+     * {@code CipherSpi} object is equivalent to creating a new instance\n+     * of that {@code CipherSpi} object and initializing it.\n@@ -334,1 +334,1 @@\n-     * @param opmode the operation mode of this {@code Cipher} object\n+     * @param opmode the operation mode of this {@code CipherSpi} object\n@@ -354,1 +354,1 @@\n-     * Initializes this {@code Cipher} object with a key, a set of\n+     * Initializes this {@code CipherSpi} object with a key, a set of\n@@ -357,2 +357,2 @@\n-     * <p>The {@code Cipher} object is initialized for one of the following four\n-     * operations:\n+     * <p>The {@code CipherSpi} object is initialized for one of the\n+     * following four operations:\n@@ -382,4 +382,4 @@\n-     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a {@code Cipher}\n-     * object is equivalent to creating a new instance of that\n-     * {@code Cipher} and initializing it.\n+     * <p>Note that when a {@code CipherSpi} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a\n+     * {@code CipherSpi} object is equivalent to creating a new instance of that\n+     * {@code CipherSpi} object and initializing it.\n@@ -387,1 +387,1 @@\n-     * @param opmode the operation mode of this {@code Cipher} object\n+     * @param opmode the operation mode of this {@code CipherSpi} object\n@@ -411,1 +411,1 @@\n-     * Initializes this {@code Cipher} object with a key, a set of\n+     * Initializes this {@code CipherSpi} object with a key, a set of\n@@ -414,2 +414,2 @@\n-     * <p>The {@code Cipher} object is initialized for one of the following four\n-     * operations:\n+     * <p>The {@code CipherSpi} object is initialized for one of the\n+     * following four operations:\n@@ -439,4 +439,4 @@\n-     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a {@code Cipher}\n-     * object is equivalent to creating a new instance of that\n-     * {@code Cipher} object and initializing it.\n+     * <p>Note that when a {@code CipherSpi} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a\n+     * {@code CipherSpi} object is equivalent to creating a new instance of that\n+     * {@code CipherSpi} object and initializing it.\n@@ -444,2 +444,2 @@\n-     * @param opmode the operation mode of this {@code Cipher} (this is one of\n-     * the following:\n+     * @param opmode the operation mode of this {@code CipherSpi} object\n+     * (this is one of the following:\n@@ -469,1 +469,1 @@\n-     * (depending on how this {@code Cipher} object was initialized),\n+     * (depending on how this {@code CipherSpi} object was initialized),\n@@ -489,1 +489,1 @@\n-     * (depending on how this {@code Cipher} object was initialized),\n+     * (depending on how this {@code CipherSpi} object was initialized),\n@@ -520,1 +520,1 @@\n-     * (depending on how this {@code Cipher} object was initialized),\n+     * (depending on how this {@code CipherSpi} object was initialized),\n@@ -561,2 +561,2 @@\n-     * The data is encrypted or decrypted, depending on how this {@code Cipher}\n-     * object was initialized.\n+     * The data is encrypted or decrypted, depending on how this\n+     * {@code CipherSpi} object was initialized.\n@@ -573,1 +573,1 @@\n-     * <p>Upon finishing, this method resets this {@code Cipher} object\n+     * <p>Upon finishing, this method resets this {@code CipherSpi} object\n@@ -580,1 +580,1 @@\n-     * <p>Note: if any exception is thrown, this {@code Cipher} object\n+     * <p>Note: if any exception is thrown, this {@code CipherSpi} object\n@@ -594,1 +594,1 @@\n-     * @throws BadPaddingException if this {@code Cipher} object is in\n+     * @throws BadPaddingException if this {@code CipherSpi} object is in\n@@ -597,3 +597,3 @@\n-     * @throws AEADBadTagException if this {@code Cipher} is decrypting in an\n-     * AEAD mode (such as GCM or CCM), and the received authentication tag\n-     * does not match the calculated value\n+     * @throws AEADBadTagException if this {@code CipherSpi} object is\n+     * decrypting in an AEAD mode (such as GCM or CCM), and the received\n+     * authentication tag does not match the calculated value\n@@ -608,2 +608,2 @@\n-     * The data is encrypted or decrypted, depending on how this {@code Cipher}\n-     * was initialized.\n+     * The data is encrypted or decrypted, depending on how this\n+     * {@code CipherSpi} object was initialized.\n@@ -624,2 +624,2 @@\n-     * <p>Upon finishing, this method resets this {@code Cipher} to the state\n-     * it was in when previously initialized via a call to\n+     * <p>Upon finishing, this method resets this {@code CipherSpi} object\n+     * to the state it was in when previously initialized via a call to\n@@ -631,2 +631,2 @@\n-     * <p>Note: if any exception is thrown, this {@code Cipher} may need to\n-     * be reset before it can be used again.\n+     * <p>Note: if any exception is thrown, this {@code CipherSpi} object\n+     * may need to be reset before it can be used again.\n@@ -651,1 +651,2 @@\n-     * @throws BadPaddingException if this {@code Cipher} is in decryption mode,\n+     * @throws BadPaddingException if this {@code CipherSpi} object is in\n+     * decryption mode,\n@@ -654,3 +655,3 @@\n-     * @throws AEADBadTagException if this {@code Cipher} object is decrypting\n-     * in an AEAD mode (such as GCM or CCM), and the received authentication tag\n-     * does not match the calculated value\n+     * @throws AEADBadTagException if this {@code CipherSpi} object is\n+     * decrypting in an AEAD mode (such as GCM or CCM), and the received\n+     * authentication tag does not match the calculated value\n@@ -667,2 +668,2 @@\n-     * The data is encrypted or decrypted, depending on how this {@code Cipher}\n-     * object was initialized.\n+     * The data is encrypted or decrypted, depending on how this\n+     * {@code CipherSpi} object was initialized.\n@@ -684,1 +685,1 @@\n-     * <p>Upon finishing, this method resets this {@code Cipher} object\n+     * <p>Upon finishing, this method resets this {@code CipherSpi} object\n@@ -691,1 +692,1 @@\n-     * <p>Note: if any exception is thrown, this {@code Cipher} object\n+     * <p>Note: if any exception is thrown, this {@code CipherSpi} object\n@@ -709,1 +710,1 @@\n-     * @throws BadPaddingException if this {@code Cipher} object is in\n+     * @throws BadPaddingException if this {@code CipherSpi} object is in\n@@ -712,3 +713,3 @@\n-     * @throws AEADBadTagException if this {@code Cipher} object is decrypting\n-     * in an AEAD mode (such as GCM or CCM), and the received authentication tag\n-     * does not match the calculated value\n+     * @throws AEADBadTagException if this {@code CipherSpi} object is\n+     * decrypting in an AEAD mode (such as GCM or CCM), and the received\n+     * authentication tag does not match the calculated value\n@@ -941,1 +942,1 @@\n-     * @throws IllegalStateException if this {@code Cipher} object is in\n+     * @throws IllegalStateException if this {@code CipherSpi} object is in\n@@ -974,1 +975,1 @@\n-     * @throws IllegalStateException if this {@code Cipher} object is in\n+     * @throws IllegalStateException if this {@code CipherSpi} object is in\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherSpi.java","additions":57,"deletions":56,"binary":false,"changes":113,"status":"modified"},{"patch":"@@ -107,1 +107,1 @@\n- * of {@code CryptoAllPermission} permissions.\n+ * of {@code CryptoAllPermission} objects.\n@@ -158,1 +158,1 @@\n-     * CryptoAllPermissionCollection.\n+     * {@code CryptoAllPermissionCollection} object.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoAllPermission.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-     * Returns a string describing this {@code CryptoPermission}.\n+     * Returns a string describing this {@code CryptoPermission} object.\n@@ -365,1 +365,1 @@\n-     * @return information about this {@code CryptoPermission}.\n+     * @return information about this {@code CryptoPermission} object.\n@@ -451,2 +451,2 @@\n- * A {@code CryptoPermissionCollection} stores a set of\n- * {@code CryptoPermission} permissions.\n+ * A {@code CryptoPermissionCollection} object stores a set of\n+ * {@code CryptoPermission} objects.\n@@ -477,1 +477,1 @@\n-     * Adds a permission to the {@code CryptoPermissionCollection}.\n+     * Adds a permission to the {@code CryptoPermissionCollection} object.\n@@ -502,1 +502,1 @@\n-     * @return {@code true} if the given permission  is implied by this\n+     * @return {@code true} if the given permission is implied by this\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPermission.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n- * PermissionCollections according to algorithm names.\n+ * {@code PermissionCollection} objects according to algorithm names.\n@@ -94,1 +94,1 @@\n-     * InputStream into this {@code CryptoPermissions} object.\n+     * {@code InputStream} into this {@code CryptoPermissions} object.\n@@ -135,1 +135,1 @@\n-     * @see isReadOnly\n+     * @see PermissionCollection#isReadOnly\n@@ -164,2 +164,2 @@\n-     * @return true if \"permission\" is implied by the permissions\n-     * in the {@code PermissionCollection} it belongs to, false if not.\n+     * @return {@code true} if {@code permission} is implied by the permissions\n+     * in the {@code PermissionCollection} it belongs to, {@code false} if not.\n@@ -187,3 +187,2 @@\n-     * in all the PermissionCollections in this\n-     * {@code CryptoPermissions} object.\n-     * @return an enumeration of all the {@code Permissions}.\n+     * in this {@code CryptoPermissions} object.\n+     * @return an enumeration of all the {@code Permission} objects.\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPermissions.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"}]}