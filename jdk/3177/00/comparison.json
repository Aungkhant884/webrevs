{"files":[{"patch":"@@ -431,4 +431,8 @@\n- * If both shares and quotas have been specified, the results are\n- * based on the flag PreferContainerQuotaForCPUCount.  If true,\n- * return the quota value.  If false return the smallest value\n- * between shares or quotas.\n+ * If the PreferContainerQuotaForCPUCount flag is set to true\n+ * the result will be either the quota value (if quota is specified)\n+ * or the number of active processors (if quota was not set).\n+ * If the PreferContainerQuotaForCPUCount flag is set to false (or is unset)\n+ * and both shares and quota are specified the smaller value will be\n+ * chosen.\n+ * If only one of shares or quota is specified than that value will\n+ * be taken.\n@@ -436,2 +440,1 @@\n- * If shares and\/or quotas have been specified, the resulting number\n- * returned will never exceed the number of active processors.\n+ * The resulting number returned will never exceed the number of active processors.\n@@ -472,8 +475,11 @@\n-  \/\/ If both shares and quotas are setup results depend\n-  \/\/ on flag PreferContainerQuotaForCPUCount.\n-  \/\/ If true, limit CPU count to quota\n-  \/\/ If false, use minimum of shares and quotas\n-  if (quota_count !=0 && share_count != 0) {\n-    if (PreferContainerQuotaForCPUCount) {\n-      limit_count = quota_count;\n-    } else {\n+  \/\/ 1. If the PreferContainerQuotaForCPUCount flag is specified\n+  \/\/    the CPU count will be limited by quota, if set.\n+  \/\/    If quota is not set the limit will be equal to number\n+  \/\/    of available CPUs derived from the cpu affinity information.\n+  \/\/ 2. If the PreferContainerQuotaForCPUCount flag is not specified\n+  \/\/    the result will be the minimum of non-zero values of the number\n+  \/\/    of shares and quotas.\n+  if (PreferContainerQuotaForCPUCount) {\n+      limit_count = quota_count > 0 ? quota_count : cpu_count;\n+  } else {\n+    if (quota_count != 0 && share_count != 0) {\n@@ -481,0 +487,4 @@\n+    } else if (quota_count != 0) {\n+      limit_count = quota_count;\n+    } else if (share_count != 0) {\n+      limit_count = share_count;\n@@ -482,4 +492,0 @@\n-  } else if (quota_count != 0) {\n-    limit_count = quota_count;\n-  } else if (share_count != 0) {\n-    limit_count = share_count;\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":24,"deletions":18,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -62,3 +62,9 @@\n-            testCpuShares(256, 1);\n-            testCpuShares(2048, 2);\n-            testCpuShares(4096, 4);\n+            \/\/ If PreferContainerQuotaForCPUCount is set then specifying only shares\n+            \/\/ should not affect the active processor count and it should be all the\n+            \/\/ available CPUs.\n+            testCpuShares(256,   true, availableCPUs);\n+            testCpuShares(256,  false,             1);\n+            testCpuShares(2048,  true, availableCPUs);\n+            testCpuShares(2048, false,             2);\n+            testCpuShares(4096,  true, availableCPUs);\n+            testCpuShares(4096, false,             4);\n@@ -119,1 +125,3 @@\n-                testAPCCombo(testCpuSet, 200*1000, 100*1000, 1023,   false,  1);\n+                testAPCCombo(testCpuSet,       -1,       -1, 1023,   true, 2);\n+                testAPCCombo(testCpuSet, 200*1000, 100*1000, 1023,  false, 1);\n+                testAPCCombo(testCpuSet,       -1,       -1, 1023,  false, 1);\n@@ -127,1 +135,3 @@\n-                testAPCCombo(testCpuSet, 200*1000, 100*1000, 1023,   false,  1);\n+                testAPCCombo(testCpuSet,       -1,       -1, 1023,   true, 3);\n+                testAPCCombo(testCpuSet, 200*1000, 100*1000, 1023,  false, 1);\n+                testAPCCombo(testCpuSet,       -1,       -1, 1023,  false, 1);\n@@ -200,2 +210,0 @@\n-            .addDockerOpts(\"--cpu-period=\" + period)\n-            .addDockerOpts(\"--cpu-quota=\" + quota)\n@@ -203,0 +211,3 @@\n+        if (period > -1 && quota > -1) {\n+            opts.addDockerOpts(\"--cpu-period=\" + period).addDockerOpts(\"--cpu-quota=\" + quota);\n+        }\n@@ -211,1 +222,1 @@\n-    private static void testCpuShares(int shares, int expectedAPC) throws Exception {\n+    private static void testCpuShares(int shares, boolean usePreferContainerQuotaForCPUCount, int expectedAPC) throws Exception {\n@@ -219,0 +230,2 @@\n+        if (!usePreferContainerQuotaForCPUCount) opts.addJavaOpts(\"-XX:-PreferContainerQuotaForCPUCount\");\n+\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestCPUAwareness.java","additions":21,"deletions":8,"binary":false,"changes":29,"status":"modified"}]}