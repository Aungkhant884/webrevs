{"files":[{"patch":"@@ -28,0 +28,1 @@\n+    \/\/Returns byte array of serialized GregorianCalendar.\n@@ -29,0 +30,2 @@\n+\n+    \/\/Returns Base64 encoded string of serialized GregorianCalendar.\n@@ -30,0 +33,2 @@\n+\n+    \/\/Returns byte array of serialized Duration.\n@@ -31,0 +36,2 @@\n+\n+    \/\/Returns Base64 encoded string of serialized Duration.\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/GregorianCalendarAndDurationSerData.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -63,4 +63,4 @@\n-     * Create the Serialization Bytes using JDK under test.\n-     * @throws DatatypeConfigurationException\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * Create the serialized Bytes array and serialized bytes base64 string for GregorianCalender and Duration\n+     * with jdk under test.\n+     * @throws DatatypeConfigurationException Unexpected.\n+     * @throws IOException Unexpected.\n@@ -72,10 +72,0 @@\n-        \/\/Serialize the given xmlGregorianCalendar\n-        final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        final ObjectOutputStream oos = new ObjectOutputStream(baos);\n-        oos.writeObject(xmlGregorianCalendar);\n-        oos.flush();\n-        oos.close();\n-        \/\/ Now get a Base64 string representation of the serialized bytes.\n-        final String base64 = Base64.getEncoder().encodeToString(baos.toByteArray());\n-\n-       \/\/Create the Duration instance\n@@ -83,8 +73,10 @@\n-        \/\/Serialize the given xml Duration\n-        final ByteArrayOutputStream baos2 = new ByteArrayOutputStream();\n-        final ObjectOutputStream oos2 = new ObjectOutputStream(baos2);\n-        oos2.writeObject(duration);\n-        oos2.flush();\n-        oos2.close();\n-        \/\/ Now get a Base64 string representation of the serialized bytes.\n-        final String base64dur = Base64.getEncoder().encodeToString(baos2.toByteArray());\n+        try(ByteArrayOutputStream baos = new ByteArrayOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(baos);\n+            ByteArrayOutputStream baos2 = new ByteArrayOutputStream(); ObjectOutputStream oos2 = new ObjectOutputStream(baos2)) {\n+            \/\/Serialize the given xmlGregorianCalendar\n+            oos.writeObject(xmlGregorianCalendar);\n+            \/\/Serialize the given xml Duration\n+            oos2.writeObject(duration);\n+            \/\/ Now get a Base64 string representation of the xmlGregorianCalendar serialized bytes.\n+            final String base64 = Base64.getEncoder().encodeToString(baos.toByteArray());\n+            \/\/ Now get a Base64 string representation of Duration the serialized bytes.\n+            final String base64dur = Base64.getEncoder().encodeToString(baos2.toByteArray());\n@@ -92,6 +84,6 @@\n-        \/\/ Create the Data for JDK under test.\n-        gregorianCalendarAndDurationSerData[0] = new GregorianCalendarAndDurationSerData() {\n-            @Override\n-            public byte[] getGregorianCalendarByteArray() {\n-                return baos.toByteArray();\n-            }\n+            \/\/ Create the Data for JDK under test.\n+            gregorianCalendarAndDurationSerData[0] = new GregorianCalendarAndDurationSerData() {\n+                @Override\n+                public byte[] getGregorianCalendarByteArray() {\n+                    return baos.toByteArray();\n+                }\n@@ -99,4 +91,4 @@\n-            @Override\n-            public String getGregorianCalendarBase64() {\n-                return base64;\n-            }\n+                @Override\n+                public String getGregorianCalendarBase64() {\n+                    return base64;\n+                }\n@@ -104,4 +96,4 @@\n-            @Override\n-            public byte[] getDurationBytes() {\n-                return baos2.toByteArray();\n-            }\n+                @Override\n+                public byte[] getDurationBytes() {\n+                    return baos2.toByteArray();\n+                }\n@@ -109,5 +101,14 @@\n-            @Override\n-            public String getDurationBase64() {\n-                return base64dur;\n-            }\n-        };\n+                @Override\n+                public String getDurationBase64() {\n+                    return base64dur;\n+                }\n+            };\n+            \/\/ To create the pseudocode for <JDK version>GregorianCalendarAndDurationSerData.java for specific version\n+            \/\/ of JDK (other than 6, 7, 8 and 9), execute this test with that specific JDK version after uncommenting\n+            \/\/ the below methods calls :\n+\n+            \/\/ generatePseudoCodeForGregCalSerBytes(baos);\n+            \/\/ generatePseudoCodeForGregCalSerBytesAsBase64(base64);\n+            \/\/ generatePseudoCodeForDurationSerBytes(baos2);\n+            \/\/ generatePseudoCodeForDurationSerBytesAsBase64(base64dur);\n+        }\n@@ -117,1 +118,4 @@\n-     *Provide data for JDK version and Gregorian Calendar serialized bytes\n+     * Provide data for JDK version and Gregorian Calendar serialized bytes.\n+     * @return A two-dimensional Array of objects where each element is an array of size three. First element contain JDK version,\n+     * second element contain object reference to GregorianCalendarAndDurationSerData specific to JDK version\n+     * and third element contain expected Gregorian Calendar as string.\n@@ -129,1 +133,4 @@\n-     *Provide data for JDK version and serialized Gregorian Calendar Base64 encoded string\n+     * Provide data for JDK version and serialized Gregorian Calendar Base64 encoded string.\n+     * @return A two-dimensional Array of objects where each element is an array of size three. First element contain JDK version,\n+     * second element contain object reference to GregorianCalendarAndDurationSerData specific to JDK version\n+     * and third element contain expected Gregorian Calendar as string.\n@@ -139,1 +146,4 @@\n-     *Provide data for JDK version and Duration serialized bytes\n+     * Provide data for JDK version and Duration serialized bytes.\n+     * @return A two-dimensional Array of objects where each element is an array of size three. First element contain JDK version,\n+     * second element contain object reference to GregorianCalendarAndDurationSerData specific to JDK version\n+     * and third element contain expected Duration as string.\n@@ -151,1 +161,4 @@\n-     *Provide data for JDK version and Duration Base64 encode serialized bytes string\n+     * Provide data for JDK version and Duration Base64 encode serialized bytes string.\n+     * @return A two-dimensional Array of objects where each element is an array of size three. First element contain JDK version,\n+     * second element contain object reference to GregorianCalendarAndDurationSerData specific to JDK version\n+     * and third element contain expected Duration as string.\n@@ -161,6 +174,7 @@\n-     * verify serialization compatibility for XMLGregorianCalendar\n-     * @param javaVersion\n-     * @param gcsd\n-     * @param gregorianDate\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * Verify that GregorianCalendar serialized with different old JDK versions can be deserialized correctly with\n+     * JDK under test.\n+     * @param javaVersion JDK version used to GregorianCalendar serialization.\n+     * @param gcsd JDK version specific GregorianCalendarAndDurationSerData.\n+     * @param gregorianDate String representation of GregorianCalendar Date.\n+     * @throws IOException Unexpected.\n+     * @throws ClassNotFoundException Unexpected.\n@@ -178,6 +192,7 @@\n-     * verify serialization compatibility for XMLGregorianCalendar\n-     * @param javaVersion\n-     * @param gcsd\n-     * @param gregorianDate\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * Verify that GregorianCalendar serialized and encoded as base64 string with different old JDK versions can be\n+     * deserialized correctly with JDK under test.\n+     * @param javaVersion JDK version used to GregorianCalendar serialization.\n+     * @param gcsd JDK version specific GregorianCalendarAndDurationSerData.\n+     * @param gregorianDate String representation of GregorianCalendar Date.\n+     * @throws IOException Unexpected.\n+     * @throws ClassNotFoundException Unexpected.\n@@ -195,6 +210,7 @@\n-     * verify serialization compatibility for Duration\n-     * @param javaVersion\n-     * @param gcsd\n-     * @param duration\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * Verify that Duration serialized with different old JDK versions can be deserialized correctly with\n+     * JDK under test.\n+     * @param javaVersion JDK version used to GregorianCalendar serialization.\n+     * @param gcsd JDK version specific GregorianCalendarAndDurationSerData.\n+     * @param duration String representation of Duration.\n+     * @throws IOException Unexpected.\n+     * @throws ClassNotFoundException Unexpected.\n@@ -212,6 +228,7 @@\n-     * verify serialization compatibility for Duration\n-     * @param javaVersion\n-     * @param gcsd\n-     * @param duration\n-     * @throws IOException\n-     * @throws ClassNotFoundException\n+     * Verify that Duration serialized  and encoded as base64 string with different old JDK versions can be deserialized correctly\n+     * with JDK under test.\n+     * @param javaVersion JDK version used to GregorianCalendar serialization.\n+     * @param gcsd JDK version specific GregorianCalendarAndDurationSerData.\n+     * @param duration String representation of Duration.\n+     * @throws IOException Unexpected.\n+     * @throws ClassNotFoundException Unexpected.\n@@ -230,2 +247,2 @@\n-     * JDK<version>GregorianCalendarAndDurationSerData.java files.\n-     * @param baos\n+     * JDK<version>GregorianCalendarAndDurationSerData.java files. Use of this method is explained in setup() method.\n+     * @param baos Serialized GregorianCalendar ByteArrayOutputStream.\n@@ -251,2 +268,2 @@\n-     * JDK<version>GregorianCalendarAndDurationSerData.java files.\n-     * @param baos\n+     * JDK<version>GregorianCalendarAndDurationSerData.java files. Use of this method is explained in setup() method.\n+     * @param baos Serialized Duration ByteArrayOutputStream.\n@@ -272,2 +289,3 @@\n-     * can be cut & pasted into the JDK<version>GregorianCalendarAndDurationSerData.java files.\n-     * @param base64\n+     * can be cut & pasted into the JDK<version>GregorianCalendarAndDurationSerData.java files. Use of this method is\n+     * explained in setup() method.\n+     * @param base64 Serialized GregorianCalendar bytes encoded as Base64 string.\n@@ -297,2 +315,3 @@\n-     * can be cut & pasted into the JDK<version>GregorianCalendarAndDurationSerData.java files.\n-     * @param base64\n+     * can be cut & pasted into the JDK<version>GregorianCalendarAndDurationSerData.java files. Use of this method is\n+     * explained in setup() method.\n+     * @param base64 Serialized Duration bytes encoded as Base64 string.\n","filename":"test\/jdk\/javax\/xml\/jaxp\/datatype\/8033980\/SerializationTest.java","additions":96,"deletions":77,"binary":false,"changes":173,"status":"modified"}]}