{"files":[{"patch":"@@ -869,1 +869,1 @@\n-  char* runtime_boot_path = Arguments::get_sysclasspath();\n+  char* runtime_boot_path = Arguments::get_boot_class_path();\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -510,2 +510,2 @@\n-  const char* sys_class_path = Arguments::get_sysclasspath();\n-  assert(sys_class_path != NULL, \"System boot class path must not be NULL\");\n+  const char* bootcp = Arguments::get_boot_class_path();\n+  assert(bootcp != NULL, \"Boot class path must not be NULL\");\n@@ -513,2 +513,2 @@\n-    \/\/ Don't print sys_class_path - this is the bootcp of this current VM process, not necessarily\n-    \/\/ the same as the bootcp of the shared archive.\n+    \/\/ Don't print bootcp - this is the bootcp of this current VM process, not necessarily\n+    \/\/ the same as the boot classpath of the shared archive.\n@@ -516,1 +516,1 @@\n-    trace_class_path(\"bootstrap loader class path=\", sys_class_path);\n+    trace_class_path(\"bootstrap loader class path=\", bootcp);\n@@ -518,1 +518,1 @@\n-  setup_bootstrap_search_path_impl(current, sys_class_path);\n+  setup_bootstrap_search_path_impl(current, bootcp);\n@@ -676,1 +676,1 @@\n-      \/\/ Every entry on the system boot class path after the initial base piece,\n+      \/\/ Every entry on the boot class path after the initial base piece,\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-* Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+* Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -450,1 +450,1 @@\n-  \/\/ used, prepend <java.home>\/modules\/modules_name to the system boot class path.\n+  \/\/ used, prepend <java.home>\/modules\/modules_name to the boot class path.\n","filename":"src\/hotspot\/share\/classfile\/modules.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -120,1 +120,1 @@\n-PathString *Arguments::_system_boot_class_path = NULL;\n+PathString *Arguments::_boot_class_path = NULL;\n@@ -392,1 +392,1 @@\n-  \/\/ Set up _system_boot_class_path which is not a property but\n+  \/\/ Set up _boot_class_path which is not a property but\n@@ -394,2 +394,2 @@\n-  \/\/ property. It is used to store the underlying system boot class path.\n-  _system_boot_class_path = new PathString(NULL);\n+  \/\/ property. It is used to store the underlying boot class path.\n+  _boot_class_path = new PathString(NULL);\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-\/\/  - the string that represents the system boot class path, Arguments::_system_boot_class_path.\n+\/\/  - the string that represents the boot class path, Arguments::_boot_class_path.\n@@ -308,1 +308,1 @@\n-  \/\/ system boot class path string no longer contains the \"prefix\"\n+  \/\/ boot class path string no longer contains the \"prefix\"\n@@ -311,1 +311,1 @@\n-  static PathString *_system_boot_class_path;\n+  static PathString* _boot_class_path;\n@@ -602,1 +602,1 @@\n-  \/\/ Set up the underlying pieces of the system boot class path\n+  \/\/ Set up the underlying pieces of the boot class path\n@@ -604,1 +604,1 @@\n-  static void set_sysclasspath(const char *value, bool has_jimage) {\n+  static void set_boot_class_path(const char *value, bool has_jimage) {\n@@ -606,2 +606,2 @@\n-    assert(get_sysclasspath() == NULL, \"System boot class path previously set\");\n-    _system_boot_class_path->set_value(value);\n+    assert(get_boot_class_path() == NULL, \"Boot class path previously set\");\n+    _boot_class_path->set_value(value);\n@@ -611,1 +611,1 @@\n-    _system_boot_class_path->append_value(value);\n+    _boot_class_path->append_value(value);\n@@ -616,1 +616,1 @@\n-  static char* get_sysclasspath() { return _system_boot_class_path->value(); }\n+  static char* get_boot_class_path() { return _boot_class_path->value(); }\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1299,1 +1299,1 @@\n-    Arguments::set_sysclasspath(jimage, true);\n+    Arguments::set_boot_class_path(jimage, true);\n@@ -1309,1 +1309,1 @@\n-    Arguments::set_sysclasspath(base_classes, false);\n+    Arguments::set_boot_class_path(base_classes, false);\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}