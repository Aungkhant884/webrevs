[{"commit":{"message":"8275317: AArch64: Support some type conversion vectorization in SLP\n\nCurrent SLP vectorizer in C2 compiler doesn't support type conversion\noperations. But AArch64 has vector type conversion instructions in\nboth NEON and SVE.\n\nThe type conversion involves two kinds of scenarios, conversion between\nthe same data sizes and conversion between different data sizes. If we\nwant to support casts between different data sizes, we need to amend\nthe code part for identifying adjacent memory references and the code\npart for justifying if the combination is profitable. I suppose it\nwould be easier to review if we split the whole task to support type\nconversion into two separate patches, one for the same data sizes and\nthe other one for different data sizes. The goal of this patch is just\nto support conversions within the same data size, including:\n  int -> float\n  float -> int\n  long -> double\n  double -> long\n\nA typical test case:\n\nfor (int i = start; i < limit; i++) {\n    b[i] = (float) a[i];\n}\n\nTo implement it, the patch completed the necessary instructions and\nmatching rules in the backend and added implementation for SLP in\nthe middle end.\n\nThe percentage of performance uplift on aarch64 system:\n\nbenchmark\t        Mode   Cnt    percentage change        Metric\n                                    (After-Before)\/Before\nVectorLoop.convertD2L\tavgt    15       -48.46%\t        ns\/op\nVectorLoop.convertF2I\tavgt    15       -55.67%\t        ns\/op\nVectorLoop.convertI2F\tavgt    15       -55.27%\t        ns\/op\nVectorLoop.convertL2D\tavgt    15       -48.75%\t        ns\/op\n\nChange-Id: I91fe4455fa63047e980ffd212ec6e9233210ef47"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestIntFloatVect.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/codegen\/TestLongDoubleVect.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/TypeVectorOperations.java"}],"sha":"8b9394d03dd372278db055f8f5da1a016f5ea8b6"}]