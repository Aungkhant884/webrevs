{"files":[{"patch":"@@ -398,1 +398,1 @@\n-         * <i>Internet Protocol<\/i> address and a security manager is installed, then\n+         * address and a security manager is installed, then\n@@ -408,3 +408,1 @@\n-         * @throws SecurityException If a security manager has been installed and\n-         *         the {@link #localAddress(InetAddress) local address} is an\n-         *         <i>Internet Protocol<\/i> address and the\n+         * @throws SecurityException If a security manager has been installed and the\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpClient.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -268,0 +268,1 @@\n+     * behaviour when that method is called on a builder returned by {@link HttpClient#newBuilder()}\n@@ -279,0 +280,69 @@\n+    \/**\n+     * Tests that the default method implementation of\n+     * {@link HttpClient,java.net.http.HttpClient.Builder#localAddress(InetAddress)} throws\n+     * an {@link UnsupportedOperationException}\n+     *\/\n+    @Test\n+    public void testDefaultMethodImplForLocalAddress() throws Exception {\n+        HttpClient.Builder noOpBuilder = new HttpClient.Builder() {\n+            @Override\n+            public HttpClient.Builder cookieHandler(CookieHandler cookieHandler) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder connectTimeout(Duration duration) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder sslContext(SSLContext sslContext) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder sslParameters(SSLParameters sslParameters) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder executor(Executor executor) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder followRedirects(Redirect policy) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder version(Version version) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder priority(int priority) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder proxy(ProxySelector proxySelector) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient.Builder authenticator(Authenticator authenticator) {\n+                return null;\n+            }\n+\n+            @Override\n+            public HttpClient build() {\n+                return null;\n+            }\n+        };\n+        \/\/ expected to throw a UnsupportedOperationException\n+        assertThrows(UOE, () -> noOpBuilder.localAddress(null));\n+        \/\/ a non-null address should also throw a UnsupportedOperationException\n+        assertThrows(UOE, () -> noOpBuilder.localAddress(InetAddress.getLoopbackAddress()));\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpClientBuilderTest.java","additions":70,"deletions":0,"binary":false,"changes":70,"status":"modified"}]}