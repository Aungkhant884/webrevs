{"files":[{"patch":"@@ -382,0 +382,6 @@\n+         * @implNote {@code Builder}s obtained through {@link HttpClient#newBuilder()}\n+         * provide an implementation of this method that only supports\n+         * a {@code localAddr} of type {@link InetSocketAddress} and\n+         * the {@link InetSocketAddress#getPort() port} of such an address is\n+         * expected to be {@code 0}.\n+         *\n@@ -385,1 +391,2 @@\n-         *         configuring a local address\n+         *         configuring a local address or if the passed {@code localAddr}\n+         *         is not supported by this {@code HttpClient} implementation.\n","filename":"src\/java.net.http\/share\/classes\/java\/net\/http\/HttpClient.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+import java.net.InetSocketAddress;\n@@ -137,0 +138,4 @@\n+        \/\/ we only support InetSocketAddress type and that too with port 0\n+        if (localAddr != null && (!(localAddr instanceof InetSocketAddress isa) || isa.getPort() != 0)) {\n+            throw new UnsupportedOperationException(\"Only InetSocketAddress with port 0 is allowed\");\n+        }\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpClientBuilderImpl.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -282,6 +282,5 @@\n-        if (builder.localAddr instanceof InetSocketAddress isa) {\n-            @SuppressWarnings(\"removal\")\n-            var sm = System.getSecurityManager();\n-            if (sm != null) {\n-                sm.checkListen(isa.getPort());\n-            }\n+        assert builder.localAddr instanceof InetSocketAddress isa && isa.getPort() == 0;\n+        @SuppressWarnings(\"removal\")\n+        var sm = System.getSecurityManager();\n+        if (sm != null) {\n+            sm.checkListen(((InetSocketAddress) (builder.localAddr)).getPort());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpClientImpl.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import java.net.InetAddress;\n@@ -31,0 +32,1 @@\n+import java.net.SocketAddress;\n@@ -58,0 +60,1 @@\n+ * @bug 8209137\n@@ -68,0 +71,1 @@\n+    static final Class<UnsupportedOperationException> UOE = UnsupportedOperationException.class;\n@@ -265,0 +269,21 @@\n+    \/**\n+     * Tests the {@link HttpClient,java.net.http.HttpClient.Builder#localAddress(SocketAddress)} method\n+     *\/\n+    @Test\n+    public void testLocalAddress() throws Exception {\n+        HttpClient.Builder builder = HttpClient.newBuilder();\n+        \/\/ setting null should work fine\n+        builder.localAddress(null);\n+        \/\/ setting to InetSocketAddress with port 0 should work fine\n+        builder.localAddress(new InetSocketAddress(0));\n+        builder.localAddress(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n+        builder.localAddress(new JustAnotherInetSocketAddress(0));\n+        \/\/ resetting back to null should work fine\n+        builder.localAddress(null);\n+        \/\/ using a InetSocketAddress with non-zero port should throw UnsupportedOperationException\n+        assertThrows(UOE, () -> builder.localAddress(new InetSocketAddress(12345)));\n+        assertThrows(UOE, () -> builder.localAddress(new InetSocketAddress(InetAddress.getLoopbackAddress(), 12345)));\n+        \/\/ using a SocketAddress which isn't of type InetSocketAddress should throw UnsupportedOperationException\n+        assertThrows(UOE, () -> builder.localAddress(new SocketAddress() {}));\n+    }\n+\n@@ -306,3 +331,0 @@\n-    static final Class<UnsupportedOperationException> UOE =\n-            UnsupportedOperationException.class;\n-\n@@ -342,0 +364,8 @@\n+    \/\/ used in HttpClient.Builder.localAddr(...) testing\n+    private static final class JustAnotherInetSocketAddress extends InetSocketAddress {\n+\n+        public JustAnotherInetSocketAddress(int port) {\n+            super(port);\n+        }\n+    }\n+\n","filename":"test\/jdk\/java\/net\/httpclient\/HttpClientBuilderTest.java","additions":34,"deletions":4,"binary":false,"changes":38,"status":"modified"}]}