{"files":[{"patch":"@@ -176,0 +176,5 @@\n+    @Override\n+    void disposeWriteCipher() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/DTLSOutputRecord.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -144,0 +144,3 @@\n+    \/\/ SSLEngine and SSLSocket\n+    abstract void disposeWriteCipher();\n+\n@@ -185,0 +188,10 @@\n+            \/*\n+             * Dispose of any intermediate state in the underlying cipher.\n+             * For PKCS11 ciphers, this will release any attached sessions,\n+             * and thus make finalization faster.\n+             *\n+             * Since MAC's doFinal() is called for every SSL\/TLS packet, it's\n+             * not necessary to do the same with MAC's.\n+             *\/\n+            disposeWriteCipher();\n+\n@@ -211,0 +224,3 @@\n+            \/\/ Dispose of any intermediate state in the underlying cipher.\n+            disposeWriteCipher();\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/OutputRecord.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -154,0 +154,9 @@\n+    @Override\n+    void disposeWriteCipher() {\n+        if (fragmenter == null) {\n+            writeCipher.dispose();\n+        } else {\n+            fragmenter.queueUpCipherDispose();\n+        }\n+    }\n+\n@@ -364,0 +373,1 @@\n+        boolean         disposeCipher;\n@@ -425,0 +435,9 @@\n+        void queueUpCipherDispose() {\n+            RecordMemo lastMemo = handshakeMemos.getLast();\n+            if (lastMemo != null) {\n+                lastMemo.disposeCipher = true;\n+            } else {\n+                writeCipher.dispose();\n+            }\n+        }\n+\n@@ -524,0 +543,3 @@\n+            if (memo.disposeCipher) {\n+                memo.encodeCipher.dispose();\n+            }\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLEngineOutputRecord.java","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -246,0 +246,5 @@\n+    @Override\n+    void disposeWriteCipher() {\n+        writeCipher.dispose();\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketOutputRecord.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}