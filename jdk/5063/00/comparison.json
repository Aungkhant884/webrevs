{"files":[{"patch":"@@ -58,0 +58,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -179,1 +181,1 @@\n-                            \"UTF-8\");\n+                                      UTF_8);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/OCSP.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,2 +33,0 @@\n-import java.nio.charset.Charset;\n-import java.nio.charset.StandardCharsets;\n@@ -44,0 +42,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -142,1 +142,1 @@\n-            byte[] hash = digest.digest(password.getBytes(StandardCharsets.UTF_8));\n+            byte[] hash = digest.digest(password.getBytes(UTF_8));\n@@ -170,1 +170,1 @@\n-            String str = new String(data, StandardCharsets.UTF_8);\n+            String str = new String(data, UTF_8);\n@@ -178,1 +178,1 @@\n-                    OutputStreamWriter out = new OutputStreamWriter(fout, StandardCharsets.UTF_8);\n+                    OutputStreamWriter out = new OutputStreamWriter(fout, UTF_8);\n@@ -202,1 +202,1 @@\n-                ByteBuffer byteBuffer = Charset.forName(\"UTF-8\").encode(CharBuffer.wrap(inputPassword));\n+                ByteBuffer byteBuffer = UTF_8.encode(CharBuffer.wrap(inputPassword));\n","filename":"src\/java.management\/share\/classes\/com\/sun\/jmx\/remote\/security\/HashedPasswordManager.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -167,1 +168,1 @@\n-                                                             \"UTF-8\"));\n+                                                             UTF_8));\n","filename":"src\/java.management\/share\/classes\/javax\/management\/loading\/MLetParser.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,2 @@\n-import java.io.UnsupportedEncodingException;\n+\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -130,8 +131,1 @@\n-        try {\n-            name = new String(symbolBytes, \"UTF-8\");\n-        }\n-        catch (UnsupportedEncodingException e) {\n-            \/\/ should not reach here\n-            \/\/ \"UTF-8\" is always a known encoding\n-            throw new InternalError(e.getMessage(), e);\n-        }\n+        name = new String(symbolBytes, UTF_8);\n","filename":"src\/java.management\/share\/classes\/sun\/management\/counter\/perf\/PerfDataEntry.java","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-import java.io.UnsupportedEncodingException;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -91,7 +91,2 @@\n-        try {\n-            byte[] b = c.getBytes(\"UTF-8\");\n-            this.value = b[0];\n-        } catch (UnsupportedEncodingException e) {\n-            \/\/ ignore, \"UTF-8\" is always a known encoding\n-            throw new InternalError(\"Unknown encoding\", e);\n-        }\n+        byte[] b = c.getBytes(UTF_8);\n+        this.value = b[0];\n","filename":"src\/java.management\/share\/classes\/sun\/management\/counter\/perf\/PerfDataType.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -53,1 +55,1 @@\n-            outStream.write(tag.getBytes(\"UTF8\"));\n+            outStream.write(tag.getBytes(UTF_8));\n@@ -63,1 +65,1 @@\n-                    \"Ber.dumpBER(): error encountered\\n\".getBytes(\"UTF8\"));\n+                    \"Ber.dumpBER(): error encountered\\n\".getBytes(UTF_8));\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Ber.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-import java.io.UnsupportedEncodingException;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -269,5 +270,1 @@\n-                try {\n-                    retstr = new String(buf2, \"UTF8\");\n-                } catch (UnsupportedEncodingException e) {\n-                    throw new DecodeException(\"UTF8 not available on platform\");\n-                }\n+                retstr = new String(buf2, UTF_8);\n@@ -275,5 +272,1 @@\n-                try {\n-                    retstr = new String(buf2, \"8859_1\");\n-                } catch (UnsupportedEncodingException e) {\n-                    throw new DecodeException(\"8859_1 not available on platform\");\n-                }\n+                retstr = new String(buf2, ISO_8859_1);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/BerDecoder.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n-import java.io.UnsupportedEncodingException;\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -319,6 +320,2 @@\n-            try {\n-                bytes = str.getBytes(\"UTF8\");\n-                count = bytes.length;\n-            } catch (UnsupportedEncodingException e) {\n-                throw new EncodeException(\"UTF8 not available on platform\");\n-            }\n+            bytes = str.getBytes(UTF_8);\n+            count = bytes.length;\n@@ -326,6 +323,2 @@\n-            try {\n-                bytes = str.getBytes(\"8859_1\");\n-                count = bytes.length;\n-            } catch (UnsupportedEncodingException e) {\n-                throw new EncodeException(\"8859_1 not available on platform\");\n-            }\n+            bytes = str.getBytes(ISO_8859_1);\n+            count = bytes.length;\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/BerEncoder.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,3 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -62,1 +65,1 @@\n-            filter = filterStr.getBytes(\"UTF8\");\n+            filter = filterStr.getBytes(UTF_8);\n@@ -64,1 +67,1 @@\n-            filter = filterStr.getBytes(\"8859_1\");\n+            filter = filterStr.getBytes(ISO_8859_1);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/Filter.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,0 +42,3 @@\n+import static java.nio.charset.StandardCharsets.ISO_8859_1;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -424,1 +427,1 @@\n-                return ((String)pw).getBytes(\"UTF8\");\n+                return ((String)pw).getBytes(UTF_8);\n@@ -426,1 +429,1 @@\n-                return ((String)pw).getBytes(\"8859_1\");\n+                return ((String)pw).getBytes(ISO_8859_1);\n@@ -1156,1 +1159,1 @@\n-                            value.getBytes(\"UTF8\") : value.getBytes(\"8859_1\");\n+                            value.getBytes(UTF_8) : value.getBytes(ISO_8859_1);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapClient.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -903,5 +904,1 @@\n-                            try {\n-                                buf.append(new String(utf8, \"UTF8\"));\n-                            } catch (java.io.UnsupportedEncodingException e) {\n-                                \/\/ shouldn't happen\n-                            }\n+                            buf.append(new String(utf8, UTF_8));\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/LdapName.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -63,1 +65,1 @@\n-            String orig = new String((byte[])cred, \"UTF8\");\n+            String orig = new String((byte[])cred, UTF_8);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/sasl\/DefaultCallbackHandler.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -646,5 +648,1 @@\n-                            try {\n-                                builder.append(new String(utf8, \"UTF8\"));\n-                            } catch (java.io.UnsupportedEncodingException e) {\n-                                \/\/ shouldn't happen\n-                            }\n+                            builder.append(new String(utf8, UTF_8));\n","filename":"src\/java.naming\/share\/classes\/javax\/naming\/ldap\/Rdn.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,1 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n@@ -162,1 +163,1 @@\n-                var str = new String(bytes, \"UTF-8\");\n+                var str = new String(bytes, UTF_8);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/ResponseContent.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,1 +27,0 @@\n-import java.io.UnsupportedEncodingException;\n@@ -31,0 +30,2 @@\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n@@ -96,7 +97,3 @@\n-        try {\n-            urn = URLEncoder.encode(urn, \"UTF-8\");\n-            urn = urn.replace(\"::\", \";\");\n-            urn = urn.replace(\"\/\/\", \":\");\n-        } catch (UnsupportedEncodingException ex) {\n-            CatalogMessages.reportRunTimeError(CatalogMessages.ERR_OTHER, ex);\n-        }\n+        urn = URLEncoder.encode(urn, UTF_8);\n+        urn = urn.replace(\"::\", \";\");\n+        urn = urn.replace(\"\/\/\", \":\");\n@@ -122,7 +119,3 @@\n-        try {\n-            publicId = publicId.replace(\":\", \"\/\/\");\n-            publicId = publicId.replace(\";\", \"::\");\n-            publicId = URLDecoder.decode(publicId, \"UTF-8\");\n-        } catch (UnsupportedEncodingException ex) {\n-            CatalogMessages.reportRunTimeError(CatalogMessages.ERR_OTHER, ex);\n-        }\n+        publicId = publicId.replace(\":\", \"\/\/\");\n+        publicId = publicId.replace(\";\", \"::\");\n+        publicId = URLDecoder.decode(publicId, UTF_8);\n@@ -144,1 +137,0 @@\n-        byte[] bytes;\n@@ -146,6 +138,1 @@\n-        try {\n-            bytes = uriref.getBytes(\"UTF-8\");\n-        } catch (UnsupportedEncodingException uee) {\n-            \/\/ this can't happen\n-            return uriref;\n-        }\n+        byte[] bytes = uriref.getBytes(UTF_8);\n","filename":"src\/java.xml\/share\/classes\/javax\/xml\/catalog\/Normalizer.java","additions":10,"deletions":23,"binary":false,"changes":33,"status":"modified"}]}