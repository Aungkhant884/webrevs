{"files":[{"patch":"@@ -424,2 +424,2 @@\n-    \/\/ Logicaly, the above is a Hashtable<Class<?>, TableCellRenderer>.\n-    \/\/ It is declared otherwise to accomodate using UIDefaults.\n+    \/\/ Logically, the above is a Hashtable<Class<?>, TableCellRenderer>.\n+    \/\/ It is declared otherwise to accommodate using UIDefaults.\n@@ -433,2 +433,2 @@\n-    \/\/ Logicaly, the above is a Hashtable<Class<?>, TableCellEditor>.\n-    \/\/ It is declared otherwise to accomodate using UIDefaults.\n+    \/\/ Logically, the above is a Hashtable<Class<?>, TableCellEditor>.\n+    \/\/ It is declared otherwise to accommodate using UIDefaults.\n@@ -687,0 +687,1 @@\n+\n@@ -705,1 +706,0 @@\n-\n@@ -1401,0 +1401,3 @@\n+            if (defaultRenderersByColumnClass == null) {\n+                createDefaultRenderers();\n+            }\n@@ -1458,0 +1461,3 @@\n+            if (defaultEditorsByColumnClass == null) {\n+                createDefaultEditors();\n+            }\n@@ -3177,1 +3183,1 @@\n-            \/\/ JTable behaves like a layout manger - but one in which the\n+            \/\/ JTable behaves like a layout manager - but one in which the\n@@ -3188,1 +3194,1 @@\n-            \/\/ If the delta cannot be completely accomodated, then the\n+            \/\/ If the delta cannot be completely accommodated, then the\n@@ -7304,1 +7310,1 @@\n-                    \/\/   wherein three colums and one row selected\n+                    \/\/   wherein three columns and one row selected\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTable.java","additions":14,"deletions":8,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 6257207\n+ * @key headful\n+ * @summary Verifies if JTable.getDefaultEditor throws NullPointerException\n+ * @run main JTableEditorNPE\n+ *\/\n+import java.awt.Component;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.table.DefaultTableModel;\n+import javax.swing.table.TableModel;\n+import javax.swing.table.TableCellEditor;\n+import javax.swing.table.TableCellRenderer;\n+import javax.swing.event.TableModelEvent;\n+import javax.swing.event.TableModelListener;\n+import javax.swing.SwingUtilities;\n+\n+public class JTableEditorNPE {\n+    private static JFrame frame;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                frame = new JFrame();\n+                frame.setSize(100, 100);\n+\n+                DefaultTableModel myModel = new DefaultTableModel();\n+                myModel.addColumn(\"Col1\");\n+                myModel.addColumn(\"Col2\");\n+                myModel.addColumn(\"Col3\");\n+                myModel.addRow(new Object[]{\"item1.1\", \"item1.2\", \"item1.3\"});\n+                myModel.addRow(new Object[]{\"item2.1\", \"item2.2\", \"item2.3\"});\n+                MyTable tbl = new MyTable(myModel);\n+                frame.getContentPane().add(tbl);\n+                frame.validate();\n+            });\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    static class MyTable extends JTable implements TableModelListener {\n+        public MyTable(TableModel model) {\n+            super(model);\n+        }\n+\n+        public void tableChanged(TableModelEvent event) {\n+            super.tableChanged(event);\n+\n+            int column = event.getColumn();\n+            if (column == TableModelEvent.ALL_COLUMNS) {\n+                resizeAll();\n+            } else {\n+                resize(column);\n+            }\n+        }\n+\n+        protected void resizeAll() {\n+            for (int i = 0; i < getModel().getColumnCount(); i++) {\n+                resize(i);\n+            }\n+        }\n+\n+        protected void resize(int column) {\n+            TableCellEditor editor = null;\n+            TableCellRenderer renderer = null;\n+            Component comp;\n+            int width=0;\n+            for (int row = 0; row < getModel().getRowCount(); row++) {\n+                editor = this.getCellEditor(row, column);\n+                if (editor != null) {\n+                    comp = editor.getTableCellEditorComponent(\n+                            this, \/\/ table\n+                            getModel().getValueAt(row,column), \/\/ value\n+                            false, \/\/ isSelected\n+                            row, \/\/ row\n+                            column \/\/ column\n+                    );\n+                    if (comp != null) {\n+                        width = Math.max(width, comp.getPreferredSize().width);\n+                    }\n+                }\n+\n+                renderer = this.getCellRenderer(row, column);\n+                if (renderer != null) {\n+                    comp = renderer.getTableCellRendererComponent(\n+                            this, \/\/ table\n+                            getModel().getValueAt(row, column), \/\/ value\n+                            false, \/\/ isSelected\n+                            false, \/\/ hasFocus\n+                            row, \/\/ row\n+                            column \/\/ column\n+                    );\n+                    if (comp != null) {\n+                        width = Math.max(width, comp.getPreferredSize().width);\n+                    }\n+                }\n+            }\n+\n+            getColumnModel().getColumn(column).setPreferredWidth(width);\n+\n+            this.revalidate();\n+            this.repaint();\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JTable\/JTableEditorNPE.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"}]}