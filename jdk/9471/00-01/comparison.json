{"files":[{"patch":"@@ -59,1 +59,1 @@\n-double G1MMUTracker::calculate_gc_time(double time_stamp) {\n+double G1MMUTracker::calculate_gc_time(double timestamp) {\n@@ -61,1 +61,1 @@\n-  double limit = time_stamp - _time_slice;\n+  double limit = timestamp - _time_slice;\n@@ -114,1 +114,1 @@\n-double G1MMUTracker::when_sec(double current_time, double pause_time) {\n+double G1MMUTracker::when_sec(double current_timestamp, double pause_time) {\n@@ -120,1 +120,1 @@\n-  double earliest_end_time = current_time + adjusted_pause_time;\n+  double earliest_end_time = current_timestamp + adjusted_pause_time;\n@@ -135,1 +135,1 @@\n-    return (elem->end_time() + (_time_slice - max_gc_time())) - current_time;\n+    return (elem->end_time() + (_time_slice - max_gc_time())) - current_timestamp;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MMUTracker.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -104,2 +104,2 @@\n-  \/\/ given time stamp.\n-  double calculate_gc_time(double time_stamp);\n+  \/\/ given timestamp.\n+  double calculate_gc_time(double timestamp);\n@@ -112,3 +112,3 @@\n-  \/\/ Determines how many seconds relative to current_time a pause of pause_time length\n-  \/\/ would fit the MMU.\n-  double when_sec(double current_time, double pause_time);\n+  \/\/ Distance to the earliest possible GC pause of length pause_time from\n+  \/\/ current_timestamp without violating the MMU constraint.\n+  double when_sec(double current_timestamp, double pause_time);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MMUTracker.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}