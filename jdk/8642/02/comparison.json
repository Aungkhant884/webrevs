{"files":[{"patch":"@@ -128,1 +128,1 @@\n-                    to -= TimeUnit.MILLISECONDS.convert(adjust, TimeUnit.NANOSECONDS);\n+                    to =- (int) TimeUnit.NANOSECONDS.toMillis(adjust);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -220,1 +220,1 @@\n-                    cox[i][t] ^= A[t][j] * box[i][j];\n+                    cox[i][t] ^= (byte)(A[t][j] * box[i][j]);\n@@ -230,1 +230,1 @@\n-                    S[i] ^= cox[i][t] << (7-t);\n+                    S[i] ^= (byte)(cox[i][t] << (7-t));\n@@ -279,1 +279,1 @@\n-                        AA[t][j] ^= mul(AA[i][j], AA[t][i]);\n+                        AA[t][j] ^= (byte)(mul(AA[i][j], AA[t][i]));\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/AESCrypt.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -249,3 +249,3 @@\n-        keyBytes[4] &= 252;\n-        keyBytes[8] &= 252;\n-        keyBytes[12] &= 252;\n+        keyBytes[4] &= (byte)252;\n+        keyBytes[8] &= (byte)252;\n+        keyBytes[12] &= (byte)252;\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/Poly1305.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -439,1 +439,1 @@\n-        pos += skipped;\n+        pos += (int)skipped;\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -478,1 +478,1 @@\n-                nextChar += r;\n+                nextChar += (int)r;\n","filename":"src\/java.base\/share\/classes\/java\/io\/BufferedReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -231,1 +231,1 @@\n-        pos += k;\n+        pos += (int) k;\n","filename":"src\/java.base\/share\/classes\/java\/io\/ByteArrayInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,1 +199,1 @@\n-            pos += n;\n+            pos += (int) n;\n","filename":"src\/java.base\/share\/classes\/java\/io\/CharArrayReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-            pos += pskip;\n+            pos += (int) pskip;\n","filename":"src\/java.base\/share\/classes\/java\/io\/PushbackInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -254,1 +254,1 @@\n-                    pos += n;\n+                    pos += (int)n;\n","filename":"src\/java.base\/share\/classes\/java\/io\/PushbackReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-        pos += n;\n+        pos += (int) n;\n","filename":"src\/java.base\/share\/classes\/java\/io\/StringBufferInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -139,1 +139,1 @@\n-            next += r;\n+            next += (int)r;\n","filename":"src\/java.base\/share\/classes\/java\/io\/StringReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -723,1 +723,1 @@\n-            randomBits[0] &= (1 << (8-excessBits)) - 1;\n+            randomBits[0] &= (byte)((1 << (8-excessBits)) - 1);\n@@ -3392,1 +3392,1 @@\n-        mag[0] &= (1L << (32-excessBits)) - 1;\n+        mag[0] &= (int)((1L << (32-excessBits)) - 1);\n","filename":"src\/java.base\/share\/classes\/java\/math\/BigInteger.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -421,1 +421,1 @@\n-                    c += 'A' - 'a';\n+                    c += (char) ('A' - 'a');\n@@ -440,1 +440,1 @@\n-                    c += 'A' - 'a';\n+                    c += (char) ('A' - 'a');\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLPermission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1535,1 +1535,1 @@\n-                digitsBuffer[cursor] += fastPathData.zeroDelta;\n+                digitsBuffer[cursor] += (char)fastPathData.zeroDelta;\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormat.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -286,1 +286,1 @@\n-            nos += NANOS_PER_SECOND;\n+            nos += (int) NANOS_PER_SECOND;\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -354,1 +354,1 @@\n-                dowDiff += (ordinal - 1L) * 7L;  \/\/ safe from overflow\n+                dowDiff += (int) ((ordinal - 1L) * 7L);  \/\/ safe from overflow\n@@ -363,1 +363,1 @@\n-                daysDiff -= (-ordinal - 1L) * 7L;  \/\/ safe from overflow\n+                daysDiff -= (int) ((-ordinal - 1L) * 7L);  \/\/ safe from overflow\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/TemporalAdjusters.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2326,1 +2326,1 @@\n-            timeOfDay -= ONE_DAY;\n+            timeOfDay -= (int)ONE_DAY;\n@@ -2330,1 +2330,1 @@\n-                timeOfDay += ONE_DAY;\n+                timeOfDay += (int)ONE_DAY;\n","filename":"src\/java.base\/share\/classes\/java\/util\/GregorianCalendar.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1610,1 +1610,1 @@\n-            timeOfDay -= ONE_DAY;\n+            timeOfDay -= (int) ONE_DAY;\n@@ -1614,1 +1614,1 @@\n-                timeOfDay += ONE_DAY;\n+                timeOfDay += (int) ONE_DAY;\n","filename":"src\/java.base\/share\/classes\/java\/util\/JapaneseImperialCalendar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-        randomBytes[8]  |= 0x80;  \/* set to IETF variant  *\/\n+        randomBytes[8]  |= (byte) 0x80;  \/* set to IETF variant  *\/\n@@ -179,1 +179,1 @@\n-        md5Bytes[8]  |= 0x80;  \/* set to IETF variant  *\/\n+        md5Bytes[8]  |= (byte) 0x80;  \/* set to IETF variant  *\/\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -536,1 +536,1 @@\n-            pos += n;\n+            pos += (int) n;\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/Manifest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2058,1 +2058,1 @@\n-                    int size = 0;\n+                    long size = 0;\n@@ -2061,1 +2061,1 @@\n-                        K leftTask = task.makeChild(i, task.offset + size);\n+                        K leftTask = task.makeChild(i, (int) (task.offset + size));\n@@ -2065,1 +2065,1 @@\n-                    task = task.makeChild(i, task.offset + size);\n+                    task = task.makeChild(i, (int) (task.offset + size));\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Nodes.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-        ostart += n;\n+        ostart += (int) n;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -837,1 +837,1 @@\n-        private static int insignificantDigits(int insignificant) {\n+        private static int insignificantDigits(long insignificant) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatingDecimal.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-            outputStackTop -= elements;\n+            outputStackTop -= (short) elements;\n@@ -618,1 +618,1 @@\n-            outputStackStart -= elements - outputStackTop;\n+            outputStackStart -= (short) (elements - outputStackTop);\n@@ -1506,1 +1506,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Frame.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1247,1 +1247,1 @@\n-                    currentBasicBlock.flags |= (label.flags & Label.FLAG_JUMP_TARGET);\n+                    currentBasicBlock.flags |= (short) (label.flags & Label.FLAG_JUMP_TARGET);\n@@ -1263,1 +1263,1 @@\n-                    lastBasicBlock.flags |= (label.flags & Label.FLAG_JUMP_TARGET);\n+                    lastBasicBlock.flags |= (short) (label.flags & Label.FLAG_JUMP_TARGET);\n@@ -2427,1 +2427,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/MethodWriter.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -4869,1 +4869,1 @@\n-                                    data[pos\/2] += hex;\n+                                    data[pos\/2] += (byte)hex;\n@@ -5341,1 +5341,0 @@\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/tools\/keytool\/Main.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-            repn[idx] |= bit;\n+            repn[idx] |= (byte) bit;\n@@ -147,1 +147,1 @@\n-            repn[idx] &= ~bit;\n+            repn[idx] &= (byte) ~bit;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/BitArray.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -720,1 +720,1 @@\n-            retval[end - start - 2] &= (0xff << numOfPadBits);\n+            retval[end - start - 2] &= (byte)((0xff << numOfPadBits));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -527,1 +527,1 @@\n-                (((in[ioffset+ipos\/iw]+256)     \/\/ locate the byte (+256 so that it's never negative)\n+                (byte)((((in[ioffset+ipos\/iw]+256)     \/\/ locate the byte (+256 so that it's never negative)\n@@ -530,1 +530,1 @@\n-                        << (ow-opos%ow-count);  \/\/ move to the output position\n+                        << (ow-opos%ow-count));  \/\/ move to the output position\n@@ -554,1 +554,1 @@\n-            pack[i] |= 0x80;\n+            pack[i] |= (byte)0x80;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ObjectIdentifier.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -423,2 +423,2 @@\n-                dst[dstIndex] += (curLimbValue & (0xFF >> bitsAdded))\n-                    << bitsAdded;\n+                dst[dstIndex] += (byte) ((curLimbValue & (0xFF >> bitsAdded))\n+                    << bitsAdded);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/IntegerPolynomial.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -193,1 +193,1 @@\n-            buf[4] += hh \/ 10;\n+            buf[4] += (char)(hh \/ 10);\n@@ -195,1 +195,1 @@\n-        buf[5] += hh % 10;\n+        buf[5] += (char)(hh % 10);\n@@ -197,2 +197,2 @@\n-            buf[7] += mm \/ 10;\n-            buf[8] += mm % 10;\n+            buf[7] += (char)(mm \/ 10);\n+            buf[8] += (char)(mm % 10);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                    to -= TimeUnit.MILLISECONDS.convert(adjust, TimeUnit.NANOSECONDS);\n+                    to =- (int) TimeUnit.NANOSECONDS.toMillis(adjust);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/PollSelectorImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}