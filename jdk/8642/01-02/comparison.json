{"files":[{"patch":"@@ -128,1 +128,1 @@\n-                    to -= (int)TimeUnit.MILLISECONDS.convert(adjust, TimeUnit.NANOSECONDS);\n+                    to =- (int) TimeUnit.NANOSECONDS.toMillis(adjust);\n","filename":"src\/java.base\/linux\/classes\/sun\/nio\/ch\/EPollSelectorImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -231,1 +231,1 @@\n-        pos += (int)k;\n+        pos += (int) k;\n","filename":"src\/java.base\/share\/classes\/java\/io\/ByteArrayInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -199,1 +199,1 @@\n-            pos += (int)n;\n+            pos += (int) n;\n","filename":"src\/java.base\/share\/classes\/java\/io\/CharArrayReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -326,1 +326,1 @@\n-            pos += (int)pskip;\n+            pos += (int) pskip;\n","filename":"src\/java.base\/share\/classes\/java\/io\/PushbackInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/io\/PushbackReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -148,1 +148,1 @@\n-        pos += (int)n;\n+        pos += (int) n;\n","filename":"src\/java.base\/share\/classes\/java\/io\/StringBufferInputStream.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/io\/StringReader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -421,1 +421,1 @@\n-                    c += (char)('A' - 'a');\n+                    c += (char) ('A' - 'a');\n@@ -440,1 +440,1 @@\n-                    c += (char)('A' - 'a');\n+                    c += (char) ('A' - 'a');\n","filename":"src\/java.base\/share\/classes\/java\/net\/URLPermission.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -286,1 +286,1 @@\n-            nos += (int)NANOS_PER_SECOND;\n+            nos += (int) NANOS_PER_SECOND;\n","filename":"src\/java.base\/share\/classes\/java\/time\/Duration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -354,1 +354,1 @@\n-                dowDiff += (int)((ordinal - 1L) * 7L);  \/\/ safe from overflow\n+                dowDiff += (int) ((ordinal - 1L) * 7L);  \/\/ safe from overflow\n@@ -363,1 +363,1 @@\n-                daysDiff -= (int)((-ordinal - 1L) * 7L);  \/\/ safe from overflow\n+                daysDiff -= (int) ((-ordinal - 1L) * 7L);  \/\/ safe from overflow\n","filename":"src\/java.base\/share\/classes\/java\/time\/temporal\/TemporalAdjusters.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/java\/util\/GregorianCalendar.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1610,1 +1610,1 @@\n-            timeOfDay -= (int)ONE_DAY;\n+            timeOfDay -= (int) ONE_DAY;\n@@ -1614,1 +1614,1 @@\n-                timeOfDay += (int)ONE_DAY;\n+                timeOfDay += (int) ONE_DAY;\n","filename":"src\/java.base\/share\/classes\/java\/util\/JapaneseImperialCalendar.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-        randomBytes[8]  |= (byte)0x80;  \/* set to IETF variant  *\/\n+        randomBytes[8]  |= (byte) 0x80;  \/* set to IETF variant  *\/\n@@ -179,1 +179,1 @@\n-        md5Bytes[8]  |= (byte)0x80;  \/* set to IETF variant  *\/\n+        md5Bytes[8]  |= (byte) 0x80;  \/* set to IETF variant  *\/\n","filename":"src\/java.base\/share\/classes\/java\/util\/UUID.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -536,1 +536,1 @@\n-            pos += (int)n;\n+            pos += (int) n;\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/Manifest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2061,1 +2061,1 @@\n-                        K leftTask = task.makeChild(i, (int)(task.offset + size));\n+                        K leftTask = task.makeChild(i, (int) (task.offset + size));\n@@ -2065,1 +2065,1 @@\n-                    task = task.makeChild(i, (int)(task.offset + size));\n+                    task = task.makeChild(i, (int) (task.offset + size));\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Nodes.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -300,1 +300,1 @@\n-        ostart += (int)n;\n+        ostart += (int) n;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/math\/FloatingDecimal.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -614,1 +614,1 @@\n-            outputStackTop -= (short)elements;\n+            outputStackTop -= (short) elements;\n@@ -618,1 +618,1 @@\n-            outputStackStart -= (short)(elements - outputStackTop);\n+            outputStackStart -= (short) (elements - outputStackTop);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/Frame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1247,1 +1247,1 @@\n-                    currentBasicBlock.flags |= (short)(label.flags & Label.FLAG_JUMP_TARGET);\n+                    currentBasicBlock.flags |= (short) (label.flags & Label.FLAG_JUMP_TARGET);\n@@ -1263,1 +1263,1 @@\n-                    lastBasicBlock.flags |= (short)(label.flags & Label.FLAG_JUMP_TARGET);\n+                    lastBasicBlock.flags |= (short) (label.flags & Label.FLAG_JUMP_TARGET);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/org\/objectweb\/asm\/MethodWriter.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,1 +145,1 @@\n-            repn[idx] |= (byte)bit;\n+            repn[idx] |= (byte) bit;\n@@ -147,1 +147,1 @@\n-            repn[idx] &= (byte)~bit;\n+            repn[idx] &= (byte) ~bit;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/BitArray.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-                dst[dstIndex] += (byte)((curLimbValue & (0xFF >> bitsAdded))\n+                dst[dstIndex] += (byte) ((curLimbValue & (0xFF >> bitsAdded))\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/math\/intpoly\/IntegerPolynomial.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ZoneInfoFile.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                    to -= (int)TimeUnit.MILLISECONDS.convert(adjust, TimeUnit.NANOSECONDS);\n+                    to =- (int) TimeUnit.NANOSECONDS.toMillis(adjust);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/PollSelectorImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}