{"files":[{"patch":"@@ -838,10 +838,0 @@\n-  }\n-\n-  \/\/ Op_MaskAll is required in VectorNode::scalar2vector for mask operations.\n-  \/\/ So bail out if Op_MaskAll is unavailable.\n-  if (is_vector_mask(vbox_klass) && !Matcher::match_rule_supported_vector(Op_MaskAll, num_elem, elem_bt)) {\n-    if (C->print_intrinsics()) {\n-      tty->print_cr(\"  ** not supported: arity=0 op=broadcast vlen=%d etype=%s ismask=1 due to Op_MaskAll is unavailable\",\n-                    num_elem, type2name(elem_bt));\n-    }\n-    return false; \/\/ not supported\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":0,"deletions":10,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -599,5 +599,2 @@\n-  const TypeVect* vt = opd_t->singleton() ? TypeVect::make(opd_t, vlen, is_mask)\n-                                          : TypeVect::make(bt, vlen, is_mask);\n-\n-  if (is_mask) {\n-    guarantee(Matcher::match_rule_supported_vector(Op_MaskAll, vlen, bt), \"must be\");\n+  if (is_mask && Matcher::match_rule_supported_vector(Op_MaskAll, vlen, bt)) {\n+    const TypeVect* vt = TypeVect::make(opd_t, vlen, true);\n@@ -607,0 +604,2 @@\n+  const TypeVect* vt = opd_t->singleton() ? TypeVect::make(opd_t, vlen)\n+                                          : TypeVect::make(bt, vlen);\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}