{"files":[{"patch":"@@ -64,1 +64,0 @@\n-#include \"runtime\/stackChunkFrameStream.inline.hpp\"\n@@ -2230,2 +2229,2 @@\n-\/\/ Helper class to collect\/report stack roots.\n-class StackRootCollector {\n+\/\/ Helper class to collect\/report stack references.\n+class StackRefCollector {\n@@ -2250,1 +2249,1 @@\n-  StackRootCollector(JvmtiTagMap* tag_map, JNILocalRootsClosure* blk, JavaThread* java_thread)\n+  StackRefCollector(JvmtiTagMap* tag_map, JNILocalRootsClosure* blk, JavaThread* java_thread)\n@@ -2264,1 +2263,1 @@\n-bool StackRootCollector::set_thread(oop o) {\n+bool StackRefCollector::set_thread(oop o) {\n@@ -2276,1 +2275,1 @@\n-bool StackRootCollector::set_thread(jvmtiHeapReferenceKind kind, oop o) {\n+bool StackRefCollector::set_thread(jvmtiHeapReferenceKind kind, oop o) {\n@@ -2281,1 +2280,1 @@\n-bool StackRootCollector::report_stack_refs(StackValueCollection* values, jmethodID method, jlocation bci, jint slot_offset) {\n+bool StackRefCollector::report_stack_refs(StackValueCollection* values, jmethodID method, jlocation bci, jint slot_offset) {\n@@ -2284,2 +2283,2 @@\n-      oop o = values->obj_at(index)();\n-      if (o == nullptr) {\n+      oop obj = values->obj_at(index)();\n+      if (obj == nullptr) {\n@@ -2291,1 +2290,1 @@\n-                                                  bci, slot_offset + index, o)) {\n+                                                  bci, slot_offset + index, obj)) {\n@@ -2299,1 +2298,1 @@\n-bool StackRootCollector::do_frame(vframe* vf) {\n+bool StackRefCollector::do_frame(vframe* vf) {\n@@ -2425,2 +2424,2 @@\n-  inline bool collect_stack_roots(JavaThread* java_thread, JNILocalRootsClosure* blk);\n-  inline bool collect_vthread_stack_roots(oop vt);\n+  inline bool collect_stack_refs(JavaThread* java_thread, JNILocalRootsClosure* blk);\n+  inline bool collect_vthread_stack_refs(oop vt);\n@@ -2778,2 +2777,2 @@\n-inline bool VM_HeapWalkOperation::collect_stack_roots(JavaThread* java_thread,\n-                                                      JNILocalRootsClosure* blk)\n+inline bool VM_HeapWalkOperation::collect_stack_refs(JavaThread* java_thread,\n+                                                     JNILocalRootsClosure* blk)\n@@ -2788,1 +2787,1 @@\n-  StackRootCollector stack_collector(tag_map(), blk, java_thread);\n+  StackRefCollector stack_collector(tag_map(), blk, java_thread);\n@@ -2862,1 +2861,1 @@\n-      if (!collect_stack_roots(thread, &blk)) {\n+      if (!collect_stack_refs(thread, &blk)) {\n@@ -2870,4 +2869,2 @@\n-\/\/ Reports the unmounted virtual thread as JVMTI_HEAP_REFERENCE_THREAD,\n-\/\/ walks the stack of the thread, finds all references (locals\n-\/\/ and JNI calls) and reports these as stack references.\n-inline bool VM_HeapWalkOperation::collect_vthread_stack_roots(oop vt) {\n+\/\/ Reports stack references for the unmounted virtual thread.\n+inline bool VM_HeapWalkOperation::collect_vthread_stack_refs(oop vt) {\n@@ -2877,2 +2874,2 @@\n-  ContinuationWrapper c(java_lang_VirtualThread::continuation(vt));\n-  if (c.is_empty()) {\n+  ContinuationWrapper cont(java_lang_VirtualThread::continuation(vt));\n+  if (cont.is_empty()) {\n@@ -2881,1 +2878,1 @@\n-  assert(!c.is_mounted(), \"sanity check\");\n+  assert(!cont.is_mounted(), \"sanity check\");\n@@ -2883,1 +2880,1 @@\n-  stackChunkOop chunk = c.last_nonempty_chunk();\n+  stackChunkOop chunk = cont.last_nonempty_chunk();\n@@ -2893,6 +2890,1 @@\n-  StackChunkFrameStream<ChunkFrames::Mixed> fs(chunk);\n-  RegisterMap reg_map(nullptr,\n-                      RegisterMap::UpdateMap::include,\n-                      RegisterMap::ProcessFrames::include,\n-                      RegisterMap::WalkContinuation::include);\n-  fs.initialize_register_map(&reg_map);\n+  RegisterMap reg_map(cont.continuation(), RegisterMap::UpdateMap::include);\n@@ -2902,1 +2894,1 @@\n-  StackRootCollector stack_collector(tag_map(), &blk, nullptr);\n+  StackRefCollector stack_collector(tag_map(), &blk, nullptr);\n@@ -2908,3 +2900,3 @@\n-  for (; !fs.is_done(); fs.next(&reg_map)) {\n-    frame fr = fs.to_frame();\n-    vframe* vf = vframe::new_vframe(&fr, &reg_map, nullptr);\n+  frame fr = chunk->top_frame(&reg_map);\n+  vframe* vf = vframe::new_vframe(&fr, &reg_map, nullptr);\n+  while (vf != nullptr) {\n@@ -2914,0 +2906,1 @@\n+    vf = vf->sender();\n@@ -2937,1 +2930,1 @@\n-        if (!collect_vthread_stack_roots(o)) {\n+        if (!collect_vthread_stack_refs(o)) {\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":29,"deletions":36,"binary":false,"changes":65,"status":"modified"}]}