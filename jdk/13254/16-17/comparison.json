{"files":[{"patch":"@@ -2246,1 +2246,2 @@\n-  bool report_stack_refs(StackValueCollection* values, jmethodID method, jlocation bci, jint slot_offset);\n+  bool report_java_stack_refs(StackValueCollection* values, jmethodID method, jlocation bci, jint slot_offset);\n+  bool report_native_stack_refs(jmethodID method);\n@@ -2280,1 +2281,1 @@\n-bool StackRefCollector::report_stack_refs(StackValueCollection* values, jmethodID method, jlocation bci, jint slot_offset) {\n+bool StackRefCollector::report_java_stack_refs(StackValueCollection* values, jmethodID method, jlocation bci, jint slot_offset) {\n@@ -2298,0 +2299,22 @@\n+bool StackRefCollector::report_native_stack_refs(jmethodID method) {\n+  _blk->set_context(_thread_tag, _tid, _depth, method);\n+  if (_is_top_frame) {\n+    \/\/ JNI locals for the top frame.\n+    assert(_java_thread != nullptr, \"sanity\");\n+    _java_thread->active_handles()->oops_do(_blk);\n+    if (_blk->stopped()) {\n+      return false;\n+    }\n+  } else {\n+    if (_last_entry_frame != nullptr) {\n+      \/\/ JNI locals for the entry frame\n+      assert(_last_entry_frame->is_entry_frame(), \"checking\");\n+      _last_entry_frame->entry_frame_call_wrapper()->handles()->oops_do(_blk);\n+      if (_blk->stopped()) {\n+        return false;\n+      }\n+    }\n+  }\n+  return true;\n+}\n+\n@@ -2309,1 +2332,1 @@\n-      if (!report_stack_refs(locals, method, bci, 0)) {\n+      if (!report_java_stack_refs(locals, method, bci, 0)) {\n@@ -2312,1 +2335,1 @@\n-      if (!report_stack_refs(jvf->expressions(), method, bci, locals->size())) {\n+      if (!report_java_stack_refs(jvf->expressions(), method, bci, locals->size())) {\n@@ -2326,17 +2349,2 @@\n-      _blk->set_context(_thread_tag, _tid, _depth, method);\n-      if (_is_top_frame) {\n-        \/\/ JNI locals for the top frame.\n-        assert(_java_thread != nullptr, \"sanity\");\n-        _java_thread->active_handles()->oops_do(_blk);\n-        if (_blk->stopped()) {\n-          return false;\n-        }\n-      } else {\n-        if (_last_entry_frame != nullptr) {\n-          \/\/ JNI locals for the entry frame\n-          assert(_last_entry_frame->is_entry_frame(), \"checking\");\n-          _last_entry_frame->entry_frame_call_wrapper()->handles()->oops_do(_blk);\n-          if (_blk->stopped()) {\n-            return false;\n-          }\n-        }\n+      if (!report_native_stack_refs(method)) {\n+        return false;\n","filename":"src\/hotspot\/share\/prims\/jvmtiTagMap.cpp","additions":29,"deletions":21,"binary":false,"changes":50,"status":"modified"}]}