{"files":[{"patch":"@@ -1207,1 +1207,1 @@\n-        Objects.checkFromToIndex(off, len, buf.length);\n+        Objects.checkFromIndexSize(off, len, buf.length);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import java.util.Arrays;\n@@ -40,0 +41,11 @@\n+        int i = 123456;\n+        byte b = 12;\n+        short s = 45;\n+        char c = 'A';\n+        long l = 1234567890000L;\n+        float f = 3.14159f;\n+        double d = f * 2;\n+        boolean z = true;\n+        String string = \"The String\";\n+        PrimitivesTest prim = new PrimitivesTest();\n+        byte[] ba = {1, 2, 3, 4, 5, 6, 7};  \/\/ byte array to write\n@@ -41,16 +53,3 @@\n-        FileInputStream istream = null;\n-        FileOutputStream ostream = null;\n-        try {\n-            int i = 123456;\n-            byte b = 12;\n-            short s = 45;\n-            char c = 'A';\n-            long l = 1234567890000L;\n-            float f = 3.14159f;\n-            double d = f*2;\n-            boolean z = true;\n-            String string = \"The String\";\n-            PrimitivesTest prim = new PrimitivesTest();\n-\n-            ostream = new FileOutputStream(\"piotest1.tmp\");\n-            ObjectOutputStream p = new ObjectOutputStream(ostream);\n+        byte[] bytes;\n+        try (ByteArrayOutputStream ostream = new ByteArrayOutputStream();\n+             ObjectOutputStream p = new ObjectOutputStream(ostream)) {\n@@ -66,0 +65,3 @@\n+            p.write(ba); \/\/ for simple read(byte[])\n+            p.write(ba); \/\/ for readFully(byte[])\n+            p.write(ba, 0, ba.length - 2); \/\/ for readFully(byte[], 0, 7)\n@@ -71,0 +73,3 @@\n+            bytes = ostream.toByteArray();\n+\n+        }\n@@ -72,2 +77,2 @@\n-            istream = new FileInputStream(\"piotest1.tmp\");\n-            ObjectInputStream q = new ObjectInputStream(istream);\n+        ByteArrayInputStream istream = new ByteArrayInputStream(bytes);\n+        try (ObjectInputStream q = new ObjectInputStream(istream);) {\n@@ -83,0 +88,6 @@\n+            byte[] ba_readBuf = new byte[ba.length];\n+            int ba_readLen = q.read(ba_readBuf);\n+            byte[] ba_readFullyBuf = new byte[ba.length];\n+            int ba_readFullyLen = q.read(ba_readFullyBuf);\n+            byte[] ba_readFullySizedBuf = new byte[ba.length];\n+            int ba_readFullySizedLen = q.read(ba_readFullySizedBuf, 0, ba.length - 1);\n@@ -123,0 +134,4 @@\n+            checkArray(\"read(byte[])\", ba, ba.length, ba_readBuf, ba_readLen);\n+            checkArray(\"readFully(byte[])\", ba, ba.length, ba_readFullyBuf, ba_readFullyLen);\n+            checkArray(\"readFully(byte[], off, len)\", ba, ba.length - 2, ba_readFullySizedBuf, ba_readFullySizedLen);\n+\n@@ -147,1 +162,2 @@\n-            System.err.println(\"\\nInput remaining\");\n+            System.err.println(\"\\nBytes read: \" + (bytes.length - istream.available()) +\n+                    \", Input remaining: \" + istream.available());\n@@ -154,1 +170,1 @@\n-            } catch (Exception f) {\n+            } catch (Exception fex) {\n@@ -158,3 +174,8 @@\n-        } finally {\n-            if (istream != null) istream.close();\n-            if (ostream != null) ostream.close();\n+        }\n+    }\n+\n+    static void checkArray(String label, byte[] expected, int expectedLen, byte[] actual, int actualLen) {\n+        int mismatch = Arrays.mismatch(expected, 0, expectedLen, actual, 0, actualLen);\n+        if (actualLen != expectedLen || mismatch >= 0) {\n+            System.err.println(\"\\n\" + label + \":  expected \" + expectedLen + \" actual \" + actualLen + \", mismatch: \" + mismatch);\n+            throw new Error();\n","filename":"test\/jdk\/java\/io\/Serializable\/oldTests\/WritePrimitive.java","additions":44,"deletions":23,"binary":false,"changes":67,"status":"modified"}]}