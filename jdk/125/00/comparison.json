{"files":[{"patch":"@@ -4046,3 +4046,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for C & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1667,3 +1667,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for native & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n","filename":"src\/hotspot\/cpu\/arm\/arm.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4121,3 +4121,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for native & Java).\n-  stack_direction(TOWARDS_LOW);\n-\n","filename":"src\/hotspot\/cpu\/ppc\/ppc.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2459,3 +2459,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for native & Java).\n-  stack_direction(TOWARDS_LOW);\n-\n","filename":"src\/hotspot\/cpu\/s390\/s390.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -3194,3 +3194,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for C & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2743,3 +2743,0 @@\n-  \/\/ What direction does stack grow in (assumed to be same for C & Java)\n-  stack_direction(TOWARDS_LOW);\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -988,3 +988,0 @@\n-      if (strcmp(token,\"stack_direction\")==0) {\n-        stack_dir_parse(frame);\n-      }\n@@ -1112,15 +1109,0 @@\n-\/\/------------------------------stack_dir_parse--------------------------------\n-void ADLParser::stack_dir_parse(FrameForm *frame) {\n-  char *direction = parse_one_arg(\"stack direction entry\");\n-  if (strcmp(direction, \"TOWARDS_LOW\") == 0) {\n-    frame->_direction = false;\n-  }\n-  else if (strcmp(direction, \"TOWARDS_HIGH\") == 0) {\n-    frame->_direction = true;\n-  }\n-  else {\n-    parse_err(SYNERR, \"invalid value inside stack direction entry.\\n\");\n-    return;\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/adlc\/adlparse.cpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -113,1 +113,0 @@\n-  void stack_dir_parse(FrameForm *frame);   \/\/ Parse the stack direction entry\n","filename":"src\/hotspot\/share\/adlc\/adlparse.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -337,1 +337,0 @@\n-  bool  _direction;                \/\/ Direction of stack growth\n","filename":"src\/hotspot\/share\/adlc\/formsopt.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -4146,3 +4146,0 @@\n-  \/\/ Stack Direction\n-  fprintf(fp_cpp,\"bool Matcher::stack_direction() const { return %s; }\\n\\n\",\n-          _frame->_direction ? \"true\" : \"false\");\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -361,3 +361,0 @@\n-  \/\/ TRUE - grows up, FALSE - grows down (Intel)\n-  virtual bool stack_direction() const;\n-\n","filename":"src\/hotspot\/share\/opto\/matcher.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}