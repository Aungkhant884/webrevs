{"files":[{"patch":"@@ -1956,2 +1956,2 @@\n-      if (met != nullptr && Atomic::load_acquire(met) != nullptr) {\n-        return Atomic::load_acquire(met);\n+      if (met != nullptr && *met != nullptr) {\n+        return *met;\n@@ -1959,1 +1959,2 @@\n-        break;  \/\/ This thread gets to create the entry.\n+        \/\/ The current thread won the race and will try to create the full entry.\n+        break;\n@@ -1961,2 +1962,2 @@\n-        \/\/ Second thread waits for first to actually create the entry and returns\n-        \/\/ it after notify. Loop until method returned from hashtable is non-null.\n+        \/\/ Another thread beat us to it, so wait for them to complete\n+        \/\/ and return *met; or if they hit an error we get another try.\n@@ -1964,0 +1965,2 @@\n+        \/\/ Note it is not safe to read *met here as that entry could have\n+        \/\/ been deleted, so we must loop and try put_if_absent again.\n@@ -1990,1 +1993,1 @@\n-      Atomic::release_store(met, m()); \/\/ insert the element\n+      *met = m(); \/\/ insert the element\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"}]}