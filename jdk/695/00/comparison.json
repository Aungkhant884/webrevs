{"files":[{"patch":"@@ -114,21 +114,3 @@\n-\/\/ Iterator types\n-#define ZLIST_FORWARD        true\n-#define ZLIST_REVERSE        false\n-\n-template <typename T>\n-class ZListIterator : public ZListIteratorImpl<T, ZLIST_FORWARD> {\n-public:\n-  ZListIterator(const ZList<T>* list);\n-};\n-\n-template <typename T>\n-class ZListReverseIterator : public ZListIteratorImpl<T, ZLIST_REVERSE> {\n-public:\n-  ZListReverseIterator(const ZList<T>* list);\n-};\n-\n-template <typename T>\n-class ZListRemoveIterator : public ZListRemoveIteratorImpl<T, ZLIST_FORWARD> {\n-public:\n-  ZListRemoveIterator(ZList<T>* list);\n-};\n+template <typename T> using ZListIterator = ZListIteratorImpl<T, true \/* Forward *\/>;\n+template <typename T> using ZListReverseIterator = ZListIteratorImpl<T, false \/* Forward *\/>;\n+template <typename T> using ZListRemoveIterator = ZListRemoveIteratorImpl<T, true \/* Forward *\/>;\n","filename":"src\/hotspot\/share\/gc\/z\/zList.hpp","additions":3,"deletions":21,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -235,12 +235,0 @@\n-template <typename T>\n-inline ZListIterator<T>::ZListIterator(const ZList<T>* list) :\n-    ZListIteratorImpl<T, ZLIST_FORWARD>(list) {}\n-\n-template <typename T>\n-inline ZListReverseIterator<T>::ZListReverseIterator(const ZList<T>* list) :\n-    ZListIteratorImpl<T, ZLIST_REVERSE>(list) {}\n-\n-template <typename T>\n-inline ZListRemoveIterator<T>::ZListRemoveIterator(ZList<T>* list) :\n-    ZListRemoveIteratorImpl<T, ZLIST_FORWARD>(list) {}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zList.inline.hpp","additions":0,"deletions":12,"binary":false,"changes":12,"status":"modified"}]}