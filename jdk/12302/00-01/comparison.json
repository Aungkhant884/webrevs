{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/CalleeSavedRegisters\/FPRegs.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/runtime\/jni\/CalleeSavedRegisters\/exeFPRegs.c","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -245,12 +245,12 @@\n-   size_t adjusted_stack_size = 1024*1024;\n-   pthread_t id;\n-   int result;\n-   pthread_attr_t attr;\n-   pthread_attr_init(&attr);\n-   pthread_attr_setstacksize(&attr, adjusted_stack_size);\n-   result = pthread_create(&id, &attr, run, (void *)&argv);\n-   if (result != 0)  {\n-     fprintf(stderr, \"Error: pthread_create failed with error code %d \\n\", result);\n-     return -1;\n-   }\n-   pthread_join(id, NULL);\n+    size_t adjusted_stack_size = 1024*1024;\n+    pthread_t id;\n+    int result;\n+    pthread_attr_t attr;\n+    pthread_attr_init(&attr);\n+    pthread_attr_setstacksize(&attr, adjusted_stack_size);\n+    result = pthread_create(&id, &attr, run, (void *)&argv);\n+    if (result != 0)  {\n+      fprintf(stderr, \"Error: pthread_create failed with error code %d \\n\", result);\n+      return -1;\n+    }\n+    pthread_join(id, NULL);\n@@ -258,1 +258,1 @@\n-   run(&argv);\n+    run(&argv);\n","filename":"test\/jdk\/java\/lang\/reflect\/exeCallerAccessTest\/exeCallerAccessTest.c","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -192,12 +192,12 @@\n-   size_t adjusted_stack_size = 1024*1024;\n-   pthread_t id;\n-   int result;\n-   pthread_attr_t attr;\n-   pthread_attr_init(&attr);\n-   pthread_attr_setstacksize(&attr, adjusted_stack_size);\n-   result = pthread_create(&id, &attr, run, (void *)argv);\n-   if (result != 0) {\n-     fprintf(stderr, \"Error: pthread_create failed with error code %d \\n\", result);\n-     return -1;\n-   }\n-   pthread_join(id, NULL);\n+    size_t adjusted_stack_size = 1024*1024;\n+    pthread_t id;\n+    int result;\n+    pthread_attr_t attr;\n+    pthread_attr_init(&attr);\n+    pthread_attr_setstacksize(&attr, adjusted_stack_size);\n+    result = pthread_create(&id, &attr, run, (void *)argv);\n+    if (result != 0) {\n+      fprintf(stderr, \"Error: pthread_create failed with error code %d \\n\", result);\n+      return -1;\n+    }\n+    pthread_join(id, NULL);\n@@ -205,1 +205,1 @@\n-   run(&argv);\n+    run(&argv);\n","filename":"test\/jdk\/jni\/nullCaller\/exeNullCallerTest.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,12 +71,12 @@\n-   size_t adjusted_stack_size = 1024*1024;\n-   pthread_t id;\n-   int result;\n-   pthread_attr_t attr;\n-   pthread_attr_init(&attr);\n-   pthread_attr_setstacksize(&attr, adjusted_stack_size);\n-   result = pthread_create(&id, &attr, run, (void *)argv);\n-   if (result != 0) {\n-     fprintf(stderr, \"Error: pthread_create failed with error code %d \\n\", result);\n-     return -1;\n-   }\n-   pthread_join(id, NULL);\n+    size_t adjusted_stack_size = 1024*1024;\n+    pthread_t id;\n+    int result;\n+    pthread_attr_t attr;\n+    pthread_attr_init(&attr);\n+    pthread_attr_setstacksize(&attr, adjusted_stack_size);\n+    result = pthread_create(&id, &attr, run, (void *)argv);\n+    if (result != 0) {\n+      fprintf(stderr, \"Error: pthread_create failed with error code %d \\n\", result);\n+      return -1;\n+    }\n+    pthread_join(id, NULL);\n@@ -84,1 +84,1 @@\n-   run(&argv);\n+    run(&argv);\n","filename":"test\/lib-test\/jdk\/test\/lib\/process\/exejvm-test-launcher.c","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"}]}