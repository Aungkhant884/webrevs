{"files":[{"patch":"@@ -170,1 +170,2 @@\n-  STATIC_ASSERT(flip == find_ones_flip || flip == find_zeros_flip);\n+  static_assert(flip == find_ones_flip || flip == find_zeros_flip,\n+                \"flip must be either find_ones_flip or find_zero_flip\");\n@@ -233,1 +234,2 @@\n-  STATIC_ASSERT(flip == find_ones_flip || flip == find_zeros_flip);\n+  static_assert(flip == find_ones_flip || flip == find_zeros_flip,\n+                \"flip must be either find_ones_flip or find_zero_flip\");\n@@ -246,1 +248,1 @@\n-  \/\/ The return value of l_index when no bit is found is BitMap::NotFound.\n+  \/\/ The return value when no bit is found is BitMap::NotFound.\n@@ -252,1 +254,1 @@\n-    bm_word_t cword = (map(index) ^ flip) << (BitsPerWord - 1 - bit_in_word(r_index));\n+    bm_word_t cword = (map(index) ^ flip) << ((BitsPerWord - 1) - bit_in_word(r_index));\n@@ -254,1 +256,1 @@\n-    STATIC_ASSERT(sizeof(intptr_t) == sizeof(bm_word_t));\n+    static_assert(sizeof(intptr_t) == sizeof(bm_word_t), \"can not use sign comparison otherwise\");\n@@ -270,1 +272,1 @@\n-      \/\/ Result is beyond range bound.\n+      \/\/ Result is beyond range bound. Fall through.\n@@ -274,1 +276,1 @@\n-      idx_t limit = to_words_align_down(l_index); \/\/ Minuscule savings when aligned.\n+      idx_t limit = to_words_align_down(l_index);\n@@ -278,1 +280,1 @@\n-          idx_t result = bit_index(index + 1) - count_leading_zeros(cword) - 1;\n+          idx_t result = bit_index(index) + (BitsPerWord - 1) - count_leading_zeros(cword);\n@@ -287,1 +289,1 @@\n-      \/\/ No bits in range.\n+      \/\/ No bits in range. Fall through.\n","filename":"src\/hotspot\/share\/utilities\/bitMap.inline.hpp","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"}]}