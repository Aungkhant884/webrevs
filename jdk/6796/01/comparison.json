{"files":[{"patch":"@@ -44,0 +44,1 @@\n+import sun.awt.OSInfo;\n@@ -298,1 +299,1 @@\n-        if (f.equals(canonical)) {\n+        if (f.equals(canonical) || OSInfo.getOSType() == OSInfo.OSType.WINDOWS) {\n","filename":"src\/java.desktop\/share\/classes\/sun\/awt\/shell\/ShellFolder.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,126 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 8277463\n+   @requires (os.family == \"windows\")\n+   @summary JFileChooser with Metal L&F doesn't show non-canonical UNC path in - Look in\n+   @run main\/manual UNCFileChooserTest\n+*\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.JOptionPane;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.WindowConstants;\n+import java.awt.BorderLayout;\n+import java.awt.FlowLayout;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+public class UNCFileChooserTest {\n+    private static volatile CountDownLatch countDownLatch;\n+    private static JFrame instructionFrame;\n+    private static JFrame testFrame;\n+    private static volatile boolean testPassed = false;\n+\n+    private static boolean validatePlatform() {\n+        String osName = System.getProperty(\"os.name\");\n+        if (osName == null) {\n+            throw new RuntimeException(\"Name of the current OS could not be\" +\n+                    \" retrieved.\");\n+        }\n+        return osName.startsWith(\"Windows\");\n+    }\n+\n+    private static void createInstructionUI() {\n+        SwingUtilities.invokeLater(() -> {\n+            UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+            String instructions =\n+                    \"1. Enter the non-canonical UNC path of the directory to test\\n\"\n+                    + \"example: \\\\\\\\pc-name\\\\dir\\\\..\\n\"\n+                    + \"2. An \\\"Open File\\\" file chooser dialog pops up\\n\"\n+                    + \"3. Check the \\\"Look in\\\" Combobox at the top for quickly changing directory is not empty\\n\"\n+                    + \"4. Close the file chooser Dialog\\n\"\n+                    + \"5. If the \\\"Look in\\\" Combobox is not empty then press PASS else press FAIL\\n\";\n+            instructionFrame = new JFrame(\"InstructionFrame\");\n+            JTextArea textArea = new JTextArea(instructions);\n+            textArea.setEditable(false);\n+            final JButton passButton = new JButton(\"PASS\");\n+            passButton.addActionListener((e) -> {\n+                testPassed = true;\n+                instructionFrame.dispose();\n+                countDownLatch.countDown();\n+            });\n+            final JButton failButton = new JButton(\"FAIL\");\n+            failButton.addActionListener((e) -> {\n+                instructionFrame.dispose();\n+                countDownLatch.countDown();\n+            });\n+\n+            JPanel mainPanel = new JPanel(new BorderLayout());\n+            mainPanel.add(textArea, BorderLayout.CENTER);\n+\n+            JPanel buttonPanel = new JPanel(new FlowLayout());\n+            buttonPanel.add(passButton);\n+            buttonPanel.add(failButton);\n+            mainPanel.add(buttonPanel, BorderLayout.SOUTH);\n+            instructionFrame.setDefaultCloseOperation(\n+                    WindowConstants.DISPOSE_ON_CLOSE);\n+            instructionFrame.setBounds(0,0,500,500);\n+            instructionFrame.add(mainPanel);\n+            instructionFrame.pack();\n+            instructionFrame.setVisible(true);\n+        });\n+    }\n+\n+    private static void showOpenDialog() throws Exception {\n+        String path = JOptionPane.showInputDialog(testFrame, \"Enter the non-canonical UNC path of the directory to test.\\nexample: \\\\\\\\pc-name\\\\dir\\\\..\");\n+        if (path == null) {\n+            throw new RuntimeException(\"Enter the directory path to test.\");\n+        }\n+        new JFileChooser(path).showOpenDialog(null);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        if (!validatePlatform()) {\n+            System.out.println(\"This test is only for MS Windows OS.\");\n+            return;\n+        }\n+        countDownLatch = new CountDownLatch(1);\n+        UNCFileChooserTest uncFileChooserTest =\n+                new UNCFileChooserTest();\n+\n+        uncFileChooserTest.createInstructionUI();\n+        uncFileChooserTest.showOpenDialog();\n+        countDownLatch.await(15, TimeUnit.MINUTES);\n+\n+        if(!testPassed) {\n+            throw new RuntimeException(\"Test failed!\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/8277463\/UNCFileChooserTest.java","additions":126,"deletions":0,"binary":false,"changes":126,"status":"added"}]}