{"files":[{"patch":"@@ -256,1 +256,2 @@\n-  if (o->cas_forward_to(new_obj, test_mark, memory_order_release)) {\n+  oop forwardee = o->forward_to_atomic(new_obj, test_mark, memory_order_release);\n+  if (forwardee == NULL) {  \/\/ forwardee is NULL when forwarding is successful\n@@ -287,0 +288,1 @@\n+    return new_obj;\n@@ -289,4 +291,2 @@\n-    \/\/ Ensure loads of or from the forwardee follow all changes that\n-    \/\/ preceeded the release-cmpxchg that performed the forwarding in\n-    \/\/ another thread.  Don't let them float above the failed cmpxchg by\n-    \/\/ this thread, which is effectively a relaxed-load.\n+    \/\/ Ensure loads from the forwardee follow all changes that preceeded the\n+    \/\/ release-cmpxchg that performed the forwarding in another thread.\n@@ -296,0 +296,1 @@\n+    assert(o->forwardee() == forwardee, \"invariant\");\n@@ -307,3 +308,1 @@\n-\n-    \/\/ don't update this before the unallocation!\n-    new_obj = o->forwardee();\n+    return forwardee;\n@@ -311,2 +310,0 @@\n-\n-  return new_obj;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"}]}