{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n- * @ignore This test has huge disk space requirements\n@@ -29,0 +28,1 @@\n+ * @library \/test\/lib\/\n@@ -45,0 +45,1 @@\n+import java.util.List;\n@@ -50,0 +51,1 @@\n+import jtreg.SkippedException;\n@@ -60,0 +62,3 @@\n+    private static final long FILESIZE = 3L * 1024L * 1024L * 1024L;\n+    private static final int PARALLELISM = 3;\n+\n@@ -73,0 +78,1 @@\n+\n@@ -80,0 +86,2 @@\n+        checkRequiredDiskSpace(defaultFolder);\n+\n@@ -83,1 +91,1 @@\n-        ForkJoinPool fjPool = new ForkJoinPool(3);\n+        ForkJoinPool fjPool = new ForkJoinPool(PARALLELISM);\n@@ -120,0 +128,27 @@\n+    private static void checkRequiredDiskSpace(String destinationFolder) throws IOException {\n+        Path destinationPath = Path.of(destinationFolder);\n+        Path tmpDir = Path.of(TMPDIR);\n+\n+        long totalDiskSpaceNeeded = FILESIZE * PARALLELISM;\n+\n+        if (Files.getFileStore(tmpDir).equals(Files.getFileStore(destinationPath))) {\n+            totalDiskSpaceNeeded *= 2; \/\/ writing and copying to same FS\n+            long usableDiskSpace = Files.getFileStore(tmpDir).getUsableSpace();\n+            if (usableDiskSpace < totalDiskSpaceNeeded) {\n+                throw new SkippedException(\"Insufficient disk space on \" + TMPDIR\n+                        + \". Test requires: \" + totalDiskSpaceNeeded\n+                        + \". Available on disk: \" + usableDiskSpace);\n+            }\n+\n+        } else {\n+            for (Path p : List.of(destinationPath, tmpDir)) {\n+                long usableDiskSpace = Files.getFileStore(p).getUsableSpace();\n+                if(usableDiskSpace < totalDiskSpaceNeeded) {\n+                    throw new SkippedException(\"Insufficient disk space on \" + p\n+                            + \". Test requires: \" + totalDiskSpaceNeeded\n+                            + \". Available on disk: \" + usableDiskSpace);\n+                }\n+            }\n+        }\n+    }\n+\n@@ -130,1 +165,1 @@\n-        long fileSize = 3L * 1024L * 1024L * 1024L;\n+\n@@ -132,1 +167,1 @@\n-        int loopCount = (int) Math.floorDiv(fileSize, blockSize);\n+        int loopCount = (int) Math.floorDiv(FILESIZE, blockSize);\n@@ -138,1 +173,1 @@\n-                raf.setLength(fileSize);\n+                raf.setLength(FILESIZE);\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/FileExtensionAndMap.java","additions":41,"deletions":6,"binary":false,"changes":47,"status":"modified"}]}