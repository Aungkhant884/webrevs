{"files":[{"patch":"@@ -70,0 +70,9 @@\n+    }\n+  }\n+  return false;\n+}\n+\n+bool LogTagSet::has_output_to_file() {\n+  for (LogOutputList::Iterator it = _output_list.iterator(); it != _output_list.end(); it++) {\n+    if (strncmp((*it)->name(), \"file=\", 5) == 0) {\n+      return true;\n","filename":"src\/hotspot\/share\/logging\/logTagSet.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -122,0 +122,1 @@\n+  bool has_output_to_file();\n","filename":"src\/hotspot\/share\/logging\/logTagSet.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2308,0 +2308,5 @@\n+  bool has_verbose_class = false;\n+  bool has_verbose_module = false;\n+  bool has_verbose_gc = false;\n+  bool has_verbose_jni = false;\n+\n@@ -2329,2 +2334,1 @@\n-        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, load));\n-        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, unload));\n+        has_verbose_class = true;\n@@ -2332,2 +2336,1 @@\n-        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, load));\n-        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, unload));\n+        has_verbose_module = true;\n@@ -2335,1 +2338,1 @@\n-        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(gc));\n+        has_verbose_gc = true;\n@@ -2337,1 +2340,1 @@\n-        LogConfiguration::configure_stdout(LogLevel::Debug, true, LOG_TAGS(jni, resolve));\n+        has_verbose_jni = true;\n@@ -2955,0 +2958,31 @@\n+  \/\/ This must be done after all options have been processed\n+  \/\/ since -Xlog and -Xloggc override corresponding -verbose\n+  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+    if (ts->contains(LogTag::_gc) && ts->has_output_to_file()) {\n+      has_verbose_gc = false;\n+    }\n+    if (ts->contains(LogTag::_class) && ts->has_output_to_file()) {\n+      has_verbose_class = false;\n+    }\n+    if (ts->contains(LogTag::_jni) && ts->has_output_to_file()) {\n+      has_verbose_jni = false;\n+    }\n+    if (ts->contains(LogTag::_module) && ts->has_output_to_file()) {\n+      has_verbose_module = false;\n+    }\n+  }\n+  if (has_verbose_gc && !_gc_log_filename) {\n+    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(gc));\n+  }\n+  if (has_verbose_module) {\n+    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, load));\n+    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, unload));\n+  }\n+  if (has_verbose_jni) {\n+    LogConfiguration::configure_stdout(LogLevel::Debug, true, LOG_TAGS(jni, resolve));\n+  }\n+  if (has_verbose_class) {\n+    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, load));\n+    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, unload));\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":40,"deletions":6,"binary":false,"changes":46,"status":"modified"}]}