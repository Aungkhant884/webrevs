{"files":[{"patch":"@@ -75,1 +75,0 @@\n-const char*  Arguments::_gc_log_filename        = NULL;\n@@ -96,0 +95,2 @@\n+LegacyGCLogging Arguments::_legacyGCLogging     = { 0 };\n+\n@@ -2308,5 +2309,0 @@\n-  bool has_verbose_class = false;\n-  bool has_verbose_module = false;\n-  bool has_verbose_gc = false;\n-  bool has_verbose_jni = false;\n-\n@@ -2334,1 +2330,2 @@\n-        has_verbose_class = true;\n+        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, load));\n+        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, unload));\n@@ -2336,1 +2333,2 @@\n-        has_verbose_module = true;\n+        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, load));\n+        LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, unload));\n@@ -2338,1 +2336,3 @@\n-        has_verbose_gc = true;\n+        if (_legacyGCLogging.lastFlag == 0) {\n+          _legacyGCLogging.lastFlag = 1;\n+        }\n@@ -2340,1 +2340,1 @@\n-        has_verbose_jni = true;\n+        LogConfiguration::configure_stdout(LogLevel::Debug, true, LOG_TAGS(jni, resolve));\n@@ -2745,1 +2745,2 @@\n-      _gc_log_filename = os::strdup_check_oom(tail);\n+      _legacyGCLogging.lastFlag = 2;\n+      _legacyGCLogging.file = os::strdup_check_oom(tail);\n@@ -2958,31 +2959,0 @@\n-  \/\/ This must be done after all options have been processed\n-  \/\/ since -Xlog and -Xloggc override corresponding -verbose\n-  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n-    if (ts->contains(LogTag::_gc) && ts->has_output_to_file()) {\n-      has_verbose_gc = false;\n-    }\n-    if (ts->contains(LogTag::_class) && ts->has_output_to_file()) {\n-      has_verbose_class = false;\n-    }\n-    if (ts->contains(LogTag::_jni) && ts->has_output_to_file()) {\n-      has_verbose_jni = false;\n-    }\n-    if (ts->contains(LogTag::_module) && ts->has_output_to_file()) {\n-      has_verbose_module = false;\n-    }\n-  }\n-  if (has_verbose_gc && !_gc_log_filename) {\n-    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(gc));\n-  }\n-  if (has_verbose_module) {\n-    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, load));\n-    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(module, unload));\n-  }\n-  if (has_verbose_jni) {\n-    LogConfiguration::configure_stdout(LogLevel::Debug, true, LOG_TAGS(jni, resolve));\n-  }\n-  if (has_verbose_class) {\n-    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, load));\n-    LogConfiguration::configure_stdout(LogLevel::Info, true, LOG_TAGS(class, unload));\n-  }\n-\n@@ -3764,1 +3734,1 @@\n-  if (_gc_log_filename != NULL) {\n+  if (_legacyGCLogging.lastFlag == 2) {\n@@ -3770,2 +3740,2 @@\n-    return LogConfiguration::parse_log_arguments(_gc_log_filename, gc_conf, NULL, NULL, &errstream);\n-  } else if (PrintGC || PrintGCDetails) {\n+    return LogConfiguration::parse_log_arguments(_legacyGCLogging.file, gc_conf, NULL, NULL, &errstream);\n+  } else if (PrintGC || PrintGCDetails || (_legacyGCLogging.lastFlag == 1)) {\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":15,"deletions":45,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -54,0 +54,5 @@\n+struct LegacyGCLogging {\n+    const char* file;        \/\/ NULL -> stdout\n+    int lastFlag;            \/\/ 0 not set; 1 -> -verbose:gc; 2 -> -Xloggc\n+};\n+\n@@ -320,2 +325,3 @@\n-  \/\/ Option flags\n-  static const char*  _gc_log_filename;\n+  \/\/ for legacy gc options (-verbose:gc and -Xloggc:)\n+  static LegacyGCLogging _legacyGCLogging;\n+\n","filename":"src\/hotspot\/share\/runtime\/arguments.hpp","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}