{"files":[{"patch":"@@ -42,2 +42,3 @@\n- * the maximum network packet size, the algorithm constraints and whether\n- * SSL\/TLS\/DTLS servers should request or require client authentication, etc.\n+ * the maximum network packet size, the algorithm constraints, the signature\n+ * schemes and whether SSL\/TLS\/DTLS servers should request or require client\n+ * authentication, etc.\n@@ -79,2 +80,0 @@\n-    private static String[] EMPTY_STRING_ARRAY = new String[0];\n-\n@@ -92,2 +91,2 @@\n-    private String[] applicationProtocols = EMPTY_STRING_ARRAY;\n-    private String[] signatureSchemes = EMPTY_STRING_ARRAY;\n+    private String[] applicationProtocols = new String[0];\n+    private String[] signatureSchemes = null;\n@@ -99,5 +98,5 @@\n-     * constraints, endpoint identification algorithm, server names and\n-     * server name matchers are set to {@code null}; useCipherSuitesOrder,\n-     * wantClientAuth and needClientAuth are set to {@code false};\n-     * enableRetransmissions is set to {@code true}; maximum network packet\n-     * size is set to {@code 0}.\n+     * constraints, endpoint identification algorithm, signature schemes,\n+     * server names and server name matchers are set to {@code null};\n+     * useCipherSuitesOrder, wantClientAuth and needClientAuth are set\n+     * to {@code false}; enableRetransmissions is set to {@code true};\n+     * maximum network packet size is set to {@code 0}.\n@@ -715,0 +714,4 @@\n+     * The returned array could be {@code null}, in which case the underlying\n+     * provider-specific default signature schemes will be used over the\n+     * SSL\/TLS\/DTLS connections.\n+     * <p>\n@@ -716,1 +719,6 @@\n-     * underlying provider-specific default signature schemes will be used\n+     * signature scheme negotiation mechanism is turned off for SSL\/TLS\/DTLS\n+     * protocols, and the connections may not be able estabilished if the\n+     * negotiation mechanism is required by a certain SSL\/TLS\/DTLS protocol.\n+     * <p>\n+     * The returned array could be neither {@code null} nor empty (zero-length),\n+     * in which case the signature schemes in the returned array will be used\n@@ -720,3 +728,3 @@\n-     * This method will return a new array each time it is invoked. Providers\n-     * should ignore unknown signature scheme names while establishing the\n-     * SSL\/TLS\/DTLS connections.\n+     * For non-null returns, this method will return a new array each time it\n+     * is invoked. Providers should ignore unknown signature scheme names\n+     * while establishing the SSL\/TLS\/DTLS connections.\n@@ -727,10 +735,10 @@\n-     * System Property, \"jdk.tls.client.SignatureSchemes\" and\/or\n-     * \"jdk.tls.server.SignatureSchemes\", to customize the provider-specific\n-     * default signature schemes. If the {@link #setSignatureSchemes} method\n-     * has not been called, this method should return the default signature\n-     * schemes for connection populated objects, or an empty array for\n-     * pre-populated objects.\n-     *\n-     * @return a non-null, possibly zero-length array of signature scheme\n-     *         {@code String}s.  The array is ordered based on signature scheme\n-     *         preference, with the first entry being the most preferred.\n+     * System Property, {@systemProperty jdk.tls.client.SignatureSchemes}\n+     * and\/or {@systemProperty jdk.tls.server.SignatureSchemes}, to customize\n+     * the provider-specific default signature schemes. If the\n+     * {@link #setSignatureSchemes} method has not been called, this method\n+     * should return the default signature schemes for connection populated\n+     * objects, or {@code null} for pre-populated objects.\n+     *\n+     * @return {@code null} or an array of signature scheme {@code String}s.\n+     *         The array is ordered based on signature scheme preference, with\n+     *         the first entry being the most preferred.\n@@ -742,1 +750,1 @@\n-        return signatureSchemes.clone();\n+        return clone(signatureSchemes);\n@@ -760,16 +768,4 @@\n-     * @implNote\n-     * Note that the underlying provider may define the default signature\n-     * schemes for each SSL\/TLS\/DTLS connection.  Applications may also use\n-     * System Property, \"jdk.tls.client.SignatureSchemes\" and\/or\n-     * \"jdk.tls.server.SignatureSchemes\", to customize the provider-specific\n-     * default signature schemes. If the {@code signatureSchemes} array is\n-     * not empty, the {@code signatureSchemes} specified signature schemes\n-     * rather than the provider-specific default signature schemes should be\n-     * used for the SSL\/TLS\/DTLS connections.\n-     *\n-     * @param signatureSchemes an ordered array of signature scheme names,\n-     *        with the first entry being the most preferred. If the array\n-     *        is empty (zero-length), the provider-specific default signature\n-     *        schemes will be used for the SSL\/TLS\/DTLS connection.\n-     * @throws IllegalArgumentException if signatureSchemes is null, or if\n-     *        any element in a non-empty array is null or\n+     * @param signatureSchemes {@code null} or an ordered array of signature\n+     *        scheme names, with the first entry being the most preferred.\n+     * @throws IllegalArgumentException if any element in the non-empty\n+     *        {@code signatureSchemes} array is {@code null} or\n@@ -783,3 +779,1 @@\n-        if (signatureSchemes == null) {\n-            throw new IllegalArgumentException(\"signatureSchemes was null\");\n-        }\n+        String[] tempSchemes = null;\n@@ -787,4 +781,5 @@\n-        String[] tempSchemes = signatureSchemes.clone();\n-        for (String scheme : tempSchemes) {\n-            if (scheme == null || scheme.isBlank()) {\n-                throw new IllegalArgumentException(\n+        if (signatureSchemes != null) {\n+            tempSchemes = signatureSchemes.clone();\n+            for (String scheme : tempSchemes) {\n+                if (scheme == null || scheme.isBlank()) {\n+                    throw new IllegalArgumentException(\n@@ -792,0 +787,1 @@\n+                }\n@@ -798,0 +794,1 @@\n+\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLParameters.java","additions":46,"deletions":49,"binary":false,"changes":95,"status":"modified"}]}