{"files":[{"patch":"@@ -371,1 +371,1 @@\n-     * In the following examples, the server name could be represented by an\n+     * In the following examples, the server name may be represented by an\n@@ -706,1 +706,1 @@\n-     * Note that the standard list of signature scheme names may be found in\n+     * Note that the standard list of signature scheme names are defined in\n@@ -710,2 +710,2 @@\n-     * Names Specification. Providers may support signature schemes not found\n-     * in this list or might not use the recommended name for a certain\n+     * Names Specification.  Providers may support signature schemes not defined\n+     * in this list or may not use the recommended name for a certain\n@@ -714,1 +714,1 @@\n-     * The returned array could be {@code null}, in which case the underlying\n+     * If the returned array is {@code null}, then the underlying\n@@ -718,4 +718,4 @@\n-     * The returned array could be empty (zero-length), in which case the\n-     * signature scheme negotiation mechanism is turned off for SSL\/TLS\/DTLS\n-     * protocols, and the connections may not be able estabilished if the\n-     * negotiation mechanism is required by a certain SSL\/TLS\/DTLS protocol.\n+     * If the returned array is empty (zero-length), then the signature scheme\n+     * negotiation mechanism is turned off for SSL\/TLS\/DTLS protocols, and\n+     * the connections may not be able to be established if the negotiation\n+     * mechanism is required by a certain SSL\/TLS\/DTLS protocol.\n@@ -723,8 +723,3 @@\n-     * The returned array could be neither {@code null} nor empty (zero-length),\n-     * in which case the signature schemes in the returned array will be used\n-     * over the SSL\/TLS\/DTLS connections.\n-     *\n-     * @implSpec\n-     * For non-null returns, this method will return a new array each time it\n-     * is invoked. Providers should ignore unknown signature scheme names\n-     * while establishing the SSL\/TLS\/DTLS connections.\n+     * If the returned array is not {@code null} or empty (zero-length),\n+     * then the signature schemes in the returned array will be used over\n+     * the SSL\/TLS\/DTLS connections.\n@@ -735,3 +730,3 @@\n-     * System Property, {@systemProperty jdk.tls.client.SignatureSchemes}\n-     * and\/or {@systemProperty jdk.tls.server.SignatureSchemes}, to customize\n-     * the provider-specific default signature schemes. If the\n+     * the {@systemProperty jdk.tls.client.SignatureSchemes} and\/or\n+     * {@systemProperty jdk.tls.server.SignatureSchemes} system properties to\n+     * customize the provider-specific default signature schemes. If the\n@@ -742,3 +737,6 @@\n-     * @return {@code null} or an array of signature scheme {@code String}s.\n-     *         The array is ordered based on signature scheme preference, with\n-     *         the first entry being the most preferred.\n+     * @return an array of signature scheme {@code Strings} or {@null} if none\n+     *         have been set.  For non-null returns, this method will return\n+     *         a new array each time it is invoked.  The array is ordered based\n+     *         on signature scheme preference, with the first entry being the\n+     *         most preferred.  Providers should ignore unknown signature\n+     *         scheme names while establishing the SSL\/TLS\/DTLS connections.\n@@ -757,1 +755,1 @@\n-     * Note that the standard list of signature scheme names may be found in\n+     * Note that the standard list of signature scheme names are defined in\n@@ -761,2 +759,2 @@\n-     * Names Specification. Providers may support signature schemes not found\n-     * in this list or might not use the recommended name for a certain\n+     * Names Specification.  Providers may support signature schemes not defined\n+     * in this list or may not use the recommended name for a certain\n@@ -765,2 +763,0 @@\n-     * @implSpec\n-     * This method will make a copy of the {@code signatureSchemes} array.\n@@ -768,3 +764,4 @@\n-     * @param signatureSchemes {@code null} or an ordered array of signature\n-     *        scheme names, with the first entry being the most preferred.\n-     * @throws IllegalArgumentException if any element in the non-empty\n+     * @param signatureSchemes an ordered array of signature scheme names with\n+     *        the first entry being the most preferred, or {@null}.  This\n+     *        method will make a copy of this array.\n+     * @throws IllegalArgumentException if any element in the\n@@ -786,1 +783,1 @@\n-                        \"An element of signatureSchemes was null or blank\");\n+                        \"An element of signatureSchemes is null or blank\");\n","filename":"src\/java.base\/share\/classes\/javax\/net\/ssl\/SSLParameters.java","additions":29,"deletions":32,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -262,1 +262,3 @@\n-        if (ss != null && ss.length != 0) {\n+        if (ss != null) {\n+            \/\/ Note if 'ss' is empty, then no signature schemes should be\n+            \/\/ specified over the connections.\n@@ -498,1 +500,5 @@\n-            return signatureSchemes.toArray(new String[0]);\n+            \/\/ Note that if the System Property value is not defined (JDK\n+            \/\/ default value) or empty, the provider-specific default is used.\n+            if (!signatureSchemes.isEmpty()) {\n+                return signatureSchemes.toArray(new String[0]);\n+            }\n@@ -501,1 +507,3 @@\n-        return new String[0];\n+        \/\/ Note that if the System Property value is not defined (JDK\n+        \/\/ default value) or empty, the provider-specific default is used.\n+        return null;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLConfiguration.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -380,2 +380,1 @@\n-                config.signatureSchemes == null ||\n-                        config.signatureSchemes.length == 0 ?\n+                config.signatureSchemes == null ?\n@@ -437,1 +436,0 @@\n-                        config.signatureSchemes.length == 0 ||\n@@ -587,1 +585,1 @@\n-        return Collections.unmodifiableList(sss);\n+        return sss;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SignatureScheme.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,6 +35,3 @@\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InterruptedIOException;\n-import java.io.OutputStream;\n-import java.net.InetAddress;\n-import java.net.SocketException;\n+import javax.net.ssl.SSLParameters;\n+import javax.net.ssl.SSLServerSocket;\n+import javax.net.ssl.SSLSocket;\n@@ -43,2 +40,0 @@\n-import javax.net.ssl.*;\n-\n@@ -114,1 +109,1 @@\n-        runTest(new String[0],\n+        runTest(null,\n@@ -122,1 +117,1 @@\n-                new String[0],\n+                null,\n@@ -124,0 +119,10 @@\n+        runTest(new String[0],\n+                new String[] {\n+                        \"ecdsa_secp256r1_sha256\"\n+                },\n+                true);\n+        runTest(new String[] {\n+                        \"ecdsa_secp256r1_sha256\"\n+                },\n+                new String[0],\n+                true);\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLParameters\/SignatureSchemes.java","additions":15,"deletions":10,"binary":false,"changes":25,"status":"modified"}]}