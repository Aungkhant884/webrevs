{"files":[{"patch":"@@ -27,0 +27,1 @@\n+import java.io.PrintStream;\n@@ -88,1 +89,8 @@\n-                \"outstanding operations\");\n+                \"outstanding operations\", true);\n+    }\n+\n+    private void printThreads(String why, PrintStream out) {\n+        out.println(why);\n+        Arrays.stream(ManagementFactory.getThreadMXBean()\n+                        .dumpAllThreads(true, true))\n+                .forEach(out::println);\n@@ -93,1 +101,2 @@\n-                                String description) {\n+                                String description,\n+                                boolean printThreads) {\n@@ -119,0 +128,7 @@\n+        if (fail != null) {\n+            Predicate<Tracker> isAlive = Tracker::isSelectorAlive;\n+            if (printThreads && TRACKERS.stream().anyMatch(isAlive)) {\n+                printThreads(\"Some selector manager threads are still alive: \", System.out);\n+                printThreads(\"Some selector manager threads are still alive: \", System.err);\n+            }\n+        }\n@@ -177,7 +193,1 @@\n-                \"outstanding unclosed resources\");\n-        if (TRACKERS.stream().anyMatch(isAlive)) {\n-            System.err.println(\"Some selector manager threads are still alive: \");\n-            Arrays.stream(ManagementFactory.getThreadMXBean()\n-                    .dumpAllThreads(true, true))\n-                    .forEach(System.err::println);\n-        }\n+                \"outstanding unclosed resources\", true);\n","filename":"test\/jdk\/java\/net\/httpclient\/ReferenceTracker.java","additions":19,"deletions":9,"binary":false,"changes":28,"status":"modified"}]}