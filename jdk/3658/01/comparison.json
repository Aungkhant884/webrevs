{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -252,1 +252,1 @@\n-                    arrayType().findComponentType(srcComponentSignature);\n+                    arrayType().findType(srcComponentSignature);\n@@ -284,1 +284,1 @@\n-            return arrayType().findComponentType(signature);\n+            return arrayType().findType(signature);\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ArrayReferenceImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,34 +84,0 @@\n-    \/*\n-     * Find the type object, if any, of a component type of this array.\n-     * The component type does not have to be immediate; e.g. this method\n-     * can be used to find the component Foo of Foo[][]. This method takes\n-     * advantage of the property that an array and its component must have\n-     * the same class loader. Since array set operations don't have an\n-     * implicit enclosing type like field and variable set operations,\n-     * this method is sometimes needed for proper type checking.\n-     *\/\n-    Type findComponentType(String signature) throws ClassNotLoadedException {\n-\n-        JNITypeParser sig = new JNITypeParser(signature);\n-        if (sig.isReference()) {\n-            \/\/ It's a reference type\n-            JNITypeParser parser = new JNITypeParser(componentSignature());\n-            List<ReferenceType> list = vm.classesByName(parser.typeName());\n-            Iterator<ReferenceType> iter = list.iterator();\n-            while (iter.hasNext()) {\n-                ReferenceType type = iter.next();\n-                ClassLoaderReference cl = type.classLoader();\n-                if ((cl == null)?\n-                         (classLoader() == null) :\n-                         (cl.equals(classLoader()))) {\n-                    return type;\n-                }\n-            }\n-            \/\/ Component class has not yet been loaded\n-            throw new ClassNotLoadedException(componentTypeName());\n-        } else {\n-            \/\/ It's a primitive type\n-            return vm.primitiveTypeMirror(sig.jdwpTag());\n-        }\n-    }\n-\n@@ -119,1 +85,1 @@\n-        return findComponentType(componentSignature());\n+        return findType(componentSignature());\n","filename":"src\/jdk.jdi\/share\/classes\/com\/sun\/tools\/jdi\/ArrayTypeImpl.java","additions":2,"deletions":36,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -129,2 +129,0 @@\n-vmTestbase\/nsk\/jdb\/eval\/eval001\/eval001.java 8221503 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}