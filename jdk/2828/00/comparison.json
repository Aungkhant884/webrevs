{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,0 +43,2 @@\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n@@ -44,0 +46,1 @@\n+import java.net.URI;\n@@ -94,0 +97,1 @@\n+import jdk.jshell.SourceCodeAnalysis.CompletionContext;\n@@ -212,2 +216,0 @@\n-    static final EditorSetting BUILT_IN_EDITOR = new EditorSetting(null, false);\n-\n@@ -220,1 +222,2 @@\n-    private EditorSetting editor = BUILT_IN_EDITOR;\n+    private ToolSetting browser = ToolType.BROWSER.defaultTool;\n+    private ToolSetting editor = ToolType.EDITOR.defaultTool;\n@@ -223,3 +226,0 @@\n-    private static final String[] EDITOR_ENV_VARS = new String[] {\n-        \"JSHELLEDITOR\", \"VISUAL\", \"EDITOR\"};\n-\n@@ -232,0 +232,1 @@\n+    static final String BROWSER_KEY   = \"BROWSER\";\n@@ -937,1 +938,2 @@\n-        \/\/ initialize editor settings\n+        \/\/ initialize browser and editor settings\n+        configBrowser();\n@@ -1008,1 +1010,9 @@\n-    private EditorSetting configEditor() {\n+    private void configBrowser() {\n+        browser = configTool(ToolType.BROWSER);\n+    }\n+\n+    private void configEditor() {\n+        editor = configTool(ToolType.EDITOR);\n+    }\n+\n+    private ToolSetting configTool(ToolType type) {\n@@ -1010,3 +1020,3 @@\n-        editor = EditorSetting.fromPrefs(prefs);\n-        if (editor != null) {\n-            return editor;\n+        ToolSetting tool = ToolSetting.fromPrefs(prefs, type);\n+        if (tool != null) {\n+            return tool;\n@@ -1015,1 +1025,1 @@\n-        for (String envvar : EDITOR_ENV_VARS) {\n+        for (String envvar : type.envVars) {\n@@ -1018,1 +1028,1 @@\n-                return editor = new EditorSetting(v.split(\"\\\\s+\"), false);\n+                return new ToolSetting(v.split(\"\\\\s+\"), false, type);\n@@ -1022,1 +1032,1 @@\n-        return editor = BUILT_IN_EDITOR;\n+        return type.defaultTool;\n@@ -1843,0 +1853,12 @@\n+        registerCommand(new Command(\"\/doc\",\n+                this::cmdDoc,\n+                (sn, c, a) -> {\n+                    if (analysis == null || sn.isEmpty()) {\n+                        \/\/ No completions if uninitialized or snippet not started\n+                        return Collections.emptyList();\n+                    } else {\n+                        \/\/ Give exit code an int context by prefixing the arg\n+                        List<Suggestion> suggestions = analysis.completionSuggestions(sn, c, CompletionContext.LOOKUP, a);\n+                        return suggestions;\n+                    }\n+                }));\n@@ -1857,0 +1879,1 @@\n+                        \"browser\", fileCompletions(Files::isExecutable),\n@@ -1970,1 +1993,1 @@\n-        \"format\", \"truncation\", \"feedback\", \"mode\", \"prompt\", \"editor\", \"start\", \"indent\"};\n+        \"format\", \"truncation\", \"feedback\", \"mode\", \"prompt\", \"browser\", \"editor\", \"start\", \"indent\"};\n@@ -1986,1 +2009,2 @@\n-                new SetEditor().set();\n+                new SetTool(ToolType.BROWSER).set();\n+                new SetTool(ToolType.EDITOR).set();\n@@ -2004,0 +2028,2 @@\n+            case \"browser\":\n+                return new SetTool(at, ToolType.BROWSER).set();\n@@ -2005,1 +2031,1 @@\n-                return new SetEditor(at).set();\n+                return new SetTool(at, ToolType.EDITOR).set();\n@@ -2069,1 +2095,20 @@\n-    static class EditorSetting {\n+    enum ToolType {\n+\n+        BROWSER(\"browser\", BROWSER_KEY, \"JSHELLBROWSER\", \"BROWSER\"),\n+        EDITOR(\"editor\", EDITOR_KEY, \"JSHELLEDITOR\", \"VISUAL\", \"EDITOR\");\n+\n+        private final ToolSetting defaultTool;\n+        private final String toolName;\n+        private final String prefKey;\n+        private final String[] envVars;\n+\n+        private ToolType(String toolName, String prefKey, String... envVars) {\n+            this.defaultTool = new ToolSetting(null, false, this);\n+            this.toolName = toolName;\n+            this.prefKey = prefKey;\n+            this.envVars = envVars;\n+        }\n+\n+    }\n+\n+    static class ToolSetting {\n@@ -2077,0 +2122,1 @@\n+        final ToolType tool;\n@@ -2078,1 +2124,1 @@\n-        EditorSetting(String[] cmd, boolean wait) {\n+        ToolSetting(String[] cmd, boolean wait, ToolType tool) {\n@@ -2081,0 +2127,1 @@\n+            this.tool = tool;\n@@ -2084,1 +2131,1 @@\n-        static EditorSetting fromPrefs(PersistentStorage prefs) {\n+        static ToolSetting fromPrefs(PersistentStorage prefs, ToolType tool) {\n@@ -2086,1 +2133,1 @@\n-            String editorString = prefs.get(EDITOR_KEY);\n+            String editorString = prefs.get(tool.prefKey);\n@@ -2090,1 +2137,1 @@\n-                return BUILT_IN_EDITOR;\n+                return tool.defaultTool;\n@@ -2099,1 +2146,1 @@\n-                return new EditorSetting(cmd, wait);\n+                return new ToolSetting(cmd, wait, tool);\n@@ -2103,2 +2150,2 @@\n-        static void removePrefs(PersistentStorage prefs) {\n-            prefs.remove(EDITOR_KEY);\n+        static void removePrefs(PersistentStorage prefs, ToolType tool) {\n+            prefs.remove(tool.prefKey);\n@@ -2108,1 +2155,1 @@\n-            prefs.put(EDITOR_KEY, (this == BUILT_IN_EDITOR)\n+            prefs.put(tool.prefKey, (this == tool.defaultTool)\n@@ -2115,2 +2162,2 @@\n-            if (o instanceof EditorSetting) {\n-                EditorSetting ed = (EditorSetting) o;\n+            if (o instanceof ToolSetting) {\n+                ToolSetting ed = (ToolSetting) o;\n@@ -2132,1 +2179,1 @@\n-    class SetEditor {\n+    class SetTool {\n@@ -2134,0 +2181,1 @@\n+        private final ToolType type;\n@@ -2143,2 +2191,7 @@\n-        SetEditor(ArgTokenizer at) {\n-            at.allowedOptions(\"-default\", \"-wait\", \"-retain\", \"-delete\");\n+        SetTool(ArgTokenizer at, ToolType tool) {\n+            this.type = tool;\n+            if (tool == ToolType.EDITOR) {\n+                at.allowedOptions(\"-default\", \"-wait\", \"-retain\", \"-delete\");\n+            } else {\n+                at.allowedOptions(\"-default\", \"-retain\", \"-delete\");\n+            }\n@@ -2156,1 +2209,1 @@\n-            this.waitOption = at.hasOption(\"-wait\");\n+            this.waitOption = tool == ToolType.EDITOR ? at.hasOption(\"-wait\") : false;\n@@ -2161,2 +2214,2 @@\n-        SetEditor() {\n-            this(new ArgTokenizer(\"\", \"\"));\n+        SetTool(ToolType tool) {\n+            this(new ArgTokenizer(\"\", \"\"), tool);\n@@ -2170,0 +2223,1 @@\n+                ToolSetting tool = type == ToolType.BROWSER ? browser : editor;\n@@ -2171,1 +2225,1 @@\n-                EditorSetting retained = EditorSetting.fromPrefs(prefs);\n+                ToolSetting retained = ToolSetting.fromPrefs(prefs, type);\n@@ -2174,1 +2228,1 @@\n-                    hard(\"\/set editor -retain %s\", format(retained));\n+                    hard(\"\/set \" + type.toolName + \" -retain %s\", format(retained));\n@@ -2176,1 +2230,1 @@\n-                if (retained == null || !retained.equals(editor)) {\n+                if (retained == null || !retained.equals(tool)) {\n@@ -2178,1 +2232,1 @@\n-                    hard(\"\/set editor %s\", format(editor));\n+                    hard(\"\/set \" + type.toolName + \" %s\", format(tool));\n@@ -2183,1 +2237,1 @@\n-                EditorSetting.removePrefs(prefs);\n+                ToolSetting.removePrefs(prefs, type);\n@@ -2187,2 +2241,3 @@\n-                editor.toPrefs(prefs);\n-                fluffmsg(\"jshell.msg.set.editor.retain\", format(editor));\n+                ToolSetting tool = type == ToolType.BROWSER ? browser : editor;\n+                tool.toPrefs(prefs);\n+                fluffmsg(\"jshell.msg.set.\" + type.toolName + \".retain\", format(tool));\n@@ -2209,0 +2264,1 @@\n+            ToolSetting tool;\n@@ -2210,1 +2266,1 @@\n-                editor = new EditorSetting(command, waitOption);\n+                tool = new ToolSetting(command, waitOption, type);\n@@ -2212,1 +2268,1 @@\n-                editor = BUILT_IN_EDITOR;\n+                tool = type.defaultTool;\n@@ -2214,1 +2270,1 @@\n-                configEditor();\n+                tool = configTool(type);\n@@ -2218,1 +2274,6 @@\n-            fluffmsg(\"jshell.msg.set.editor.set\", format(editor));\n+            if (type == ToolType.BROWSER) {\n+                browser = tool;\n+            } else {\n+                editor = tool;\n+            }\n+            fluffmsg(\"jshell.msg.set.\" + type.toolName + \".set\", format(tool));\n@@ -2221,2 +2282,2 @@\n-        private String format(EditorSetting ed) {\n-            if (ed == BUILT_IN_EDITOR) {\n+        private String format(ToolSetting ed) {\n+            if (ed == type.defaultTool) {\n@@ -2360,0 +2421,30 @@\n+    boolean cmdDoc(String arg) {\n+        List<SourceCodeAnalysis.Documentation> documentations = analysis.documentation(arg, arg.length(), CompletionContext.LOOKUP, false);\n+        Optional<SourceCodeAnalysis.Documentation> doc = documentations.stream().filter(d -> d.uri() != null).findFirst();\n+        if (doc.isPresent()) {\n+            if (browser == ToolType.BROWSER.defaultTool) {\n+                try {\n+                    Class<?> desktop = Class.forName(\"java.awt.Desktop\");\n+                    Method getDesktop = desktop.getDeclaredMethod(\"getDesktop\");\n+                    Method browse = desktop.getDeclaredMethod(\"browse\", URI.class);\n+                    browse.invoke(getDesktop.invoke(null), doc.get().uri());\n+                    return true;\n+                } catch (ClassNotFoundException | IllegalAccessException | InvocationTargetException | NoSuchMethodException | SecurityException ex) {\n+                }\n+                hardmsg(\"jshell.no.browser.configured\", doc.get().uri());\n+            } else {\n+                List<String> cmd = new ArrayList<>();\n+                cmd.addAll(List.of(browser.cmd));\n+                cmd.add(doc.get().uri().toString());\n+                try {\n+                    new ProcessBuilder(cmd).start();\n+                } catch (IOException ex) {\n+                    hard(\"Browser Error: %s\", ex.getLocalizedMessage());\n+                }\n+            }\n+        } else {\n+            hardmsg(\"jshell.no.documentation.found\");\n+        }\n+        return true;\n+    }\n+\n@@ -2915,1 +3006,1 @@\n-        if (editor == BUILT_IN_EDITOR) {\n+        if (editor == ToolType.EDITOR.defaultTool) {\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":140,"deletions":49,"binary":false,"changes":189,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,0 +55,2 @@\n+jshell.msg.set.browser.set = Browser set to: {0}\n+jshell.msg.set.browser.retain = Browser setting retained: {0}\n@@ -202,0 +204,6 @@\n+jshell.no.browser.configured=No browser configured, please use \/set browser <path-to-browser>.\\n\\\n+Documentation URI:\\n\\\n+{0}\n+\n+jshell.no.documentation.found=No source documentation found.\n+\n@@ -506,0 +514,3 @@\n+\/set browser <command> <optional-arg>...\\n\\t\\\n+     Specify the command to launch for the \/doc command.\\n\\t\\\n+     The <command> is an operating system dependent string\\n\\n\\\n@@ -743,0 +754,6 @@\n+help.doc.summary = show a documentation for specified element\n+help.doc.args = element specification\n+help.doc =\\\n+Show the documentation for a given element.\\n\\\n+The element may be a type, a field or a method.\n+\n@@ -1053,0 +1070,38 @@\n+help.set.browser.summary =\\\n+Specify the command to launch for the \/doc command\n+\n+help.set.browser =\\\n+Specify the command to launch for the \/doc command:\\n\\\n+\\n\\t\\\n+\/set browser [-retain] <command>\\n\\\n+\\n\\t\\\n+\/set browser [-retain] -default\\n\\\n+\\n\\t\\\n+\/set browser [-retain] -delete\\n\\\n+\\n\\\n+Retain the current browser setting for future sessions:\\n\\\n+\\n\\t\\\n+\/set browser -retain\\n\\\n+\\n\\\n+Show the command to launch for the \/doc command:\\n\\\n+\\n\\t\\\n+\/set browser\\n\\\n+\\n\\\n+The <command> is an operating system dependent string.\\n\\\n+The <command> may include space-separated arguments (such as flags)\\n\\n\\\n+If the -default option is specified, the default browser will be used.\\n\\n\\\n+If the -delete option is specified, previous settings are ignored -- the browser\\n\\\n+settings are initialized as when starting the jshell tool.  Specifically, if there\\n\\\n+is a retained setting it is used (unless both -retain and -delete are specified --\\n\\\n+which deletes the retained setting), if one of these environment variables is set\\n\\\n+it will be used: JSHELLBROWSER, or BROWSER (in that order).  Otherwise the\\n\\\n+default browser will be used.\\n\\n\\\n+If <command> is specified, it will be used as the external browser. The <command>\\n\\\n+consists of the program and zero or more program arguments.  When <command>\\n\\\n+is used, the URL that should be shown will be appended as the last argument.\\n\\\n+\\n\\\n+When the -retain option is used, the setting will be used in this and future\\n\\\n+runs of the jshell tool.\\n\\\n+\\n\\\n+The form without <command> or options shows the browser setting.\\n\n+\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n.properties","additions":56,"deletions":1,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.net.URI;\n@@ -58,0 +59,5 @@\n+     *\n+     * It is equivalent to calling\n+     * {@link #completionSuggestions(java.lang.String, int, jdk.jshell.SourceCodeAnalysis.CompletionContext, int[]) }\n+     * with context {@link CompletionContext#SNIPPET}.\n+     *\n@@ -66,0 +72,17 @@\n+    \/**\n+     * Compute possible follow-ups for the given input.\n+     * Uses information from the current {@code JShell} state, including\n+     * type information, to filter the suggestions.\n+     * @param input the user input, so far\n+     * @param cursor the current position of the cursors in the given {@code input} text\n+     * @param context the context in which the completion has been invoked\n+     * @param anchor outgoing parameter - when an option will be completed, the text between\n+     *               the anchor and cursor will be deleted and replaced with the given option\n+     * @return list of candidate continuations of the given input.\n+     *\n+     * @since 16\n+     *\/\n+    public List<Suggestion> completionSuggestions(String input, int cursor, CompletionContext context, int[] anchor) {\n+        return context == CompletionContext.SNIPPET ? completionSuggestions(input, cursor, anchor) : List.of();\n+    }\n+\n@@ -69,0 +92,5 @@\n+     *\n+     * It is equivalent to calling\n+     * {@link #documentation(java.lang.String, int, jdk.jshell.SourceCodeAnalysis.CompletionContext, boolean) }\n+     * with context {@link CompletionContext#SNIPPET}.\n+     *\n@@ -78,0 +106,18 @@\n+    \/**\n+     * Compute documentation for the given user's input.Multiple {@code Documentation} objects may\n+     * be returned when multiple elements match the user's input (like for overloaded methods).\n+     * @param input the snippet the user wrote so far\n+     * @param cursor the current position of the cursors in the given {@code input} text\n+     * @param context the context in which the documentation has been requested\n+     * @param computeJavadoc true if the javadoc for the given input should be computed in\n+     *                       addition to the signature\n+     * @return the documentations for the given user's input, if multiple elements match the input,\n+     *         multiple {@code Documentation} objects are returned.\n+     *\n+     * @since 16\n+     *\/\n+    public List<Documentation> documentation(String input, int cursor, CompletionContext context, boolean computeJavadoc) {\n+        return context == CompletionContext.SNIPPET ? documentation(input, cursor, computeJavadoc)\n+                                                    : List.of();\n+    }\n+\n@@ -319,0 +365,26 @@\n+\n+        \/**\n+         * URI of the full documentation of the given element, if known.\n+         *\n+         * @return the URI of the element's documentation.\n+         *\n+         * @since 16\n+         *\/\n+        default URI uri() { return null; }\n+    }\n+\n+    \/**\n+     * A context in which completion or documentation is requested.\n+     *\n+     * @since 16\n+     *\/\n+    public enum CompletionContext {\n+        \/**\n+         * The context is a snippet.\n+         *\/\n+        SNIPPET,\n+\n+        \/**\n+         * The context is an element reference.\n+         *\/\n+        LOOKUP;\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/SourceCodeAnalysis.java","additions":73,"deletions":1,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,0 +79,1 @@\n+import java.net.MalformedURLException;\n@@ -80,0 +81,2 @@\n+import java.net.URISyntaxException;\n+import java.net.URL;\n@@ -102,0 +105,1 @@\n+import java.util.function.Supplier;\n@@ -254,0 +258,5 @@\n+        return completionSuggestions(code, cursor, CompletionContext.SNIPPET, anchor);\n+    }\n+\n+    @Override\n+    public List<Suggestion> completionSuggestions(String code, int cursor, CompletionContext context, int[] anchor) {\n@@ -256,1 +265,1 @@\n-            return completionSuggestionsImpl(code, cursor, anchor);\n+            return completionSuggestionsImpl(code, cursor, context, anchor);\n@@ -265,1 +274,1 @@\n-    private List<Suggestion> completionSuggestionsImpl(String code, int cursor, int[] anchor) {\n+    private List<Suggestion> completionSuggestionsImpl(String code, int cursor, CompletionContext context, int[] anchor) {\n@@ -294,1 +303,1 @@\n-        return computeSuggestions(codeWrap, cursor, anchor).stream()\n+        return computeSuggestions(codeWrap, cursor, context, anchor).stream()\n@@ -300,1 +309,1 @@\n-    private List<Suggestion> computeSuggestions(OuterWrap code, int cursor, int[] anchor) {\n+    private List<Suggestion> computeSuggestions(OuterWrap code, int cursor, CompletionContext context, int[] anchor) {\n@@ -389,1 +398,1 @@\n-                        boolean staticOnly = isStaticContext(at, exprPath);\n+                        boolean staticOnly = isStaticContext(at, context, exprPath);\n@@ -420,1 +429,5 @@\n-                        filter = filter.and(staticOnly ? STATIC_ONLY : INSTANCE_ONLY);\n+                        if (context == CompletionContext.SNIPPET) {\n+                            filter = filter.and(staticOnly ? STATIC_ONLY : INSTANCE_ONLY);\n+                        } else {\n+                            paren = NO_PAREN;\n+                        }\n@@ -610,1 +623,5 @@\n-    private boolean isStaticContext(AnalyzeTask at, TreePath path) {\n+    private boolean isStaticContext(AnalyzeTask at, CompletionContext context, TreePath path) {\n+        if (context == CompletionContext.LOOKUP) {\n+            \/\/non-static methods OK in lookup:\n+            return false;\n+        }\n@@ -739,0 +756,1 @@\n+\n@@ -1031,1 +1049,1 @@\n-                Iterable<Pair<ExecutableElement, ExecutableType>> candidateMethods = methodCandidates(at, forPath.getParentPath());\n+                Iterable<Pair<ExecutableElement, ExecutableType>> candidateMethods = methodCandidates(at, CompletionContext.SNIPPET, new TreePath(forPath.getParentPath(), mit.getMethodSelect()));\n@@ -1123,3 +1141,3 @@\n-    private Iterable<Pair<ExecutableElement, ExecutableType>> methodCandidates(AnalyzeTask at, TreePath invocation) {\n-        MethodInvocationTree mit = (MethodInvocationTree) invocation.getLeaf();\n-        ExpressionTree select = mit.getMethodSelect();\n+    private Iterable<Pair<ExecutableElement, ExecutableType>> methodCandidates(AnalyzeTask at, CompletionContext context, TreePath selectPath) {\n+\/\/        MethodInvocationTree mit = (MethodInvocationTree) invocation.getLeaf();\n+        ExpressionTree select = (ExpressionTree) selectPath.getLeaf();\n@@ -1127,1 +1145,1 @@\n-        Predicate<Element> accessibility = createAccessibilityFilter(at, invocation);\n+        Predicate<Element> accessibility = createAccessibilityFilter(at, selectPath);\n@@ -1132,1 +1150,1 @@\n-                TreePath tp = new TreePath(new TreePath(invocation, select), mst.getExpression());\n+                TreePath tp = new TreePath(new TreePath(selectPath, select), mst.getExpression());\n@@ -1143,1 +1161,1 @@\n-                if (isStaticContext(at, tp)) {\n+                if (isStaticContext(at, context, tp)) {\n@@ -1157,1 +1175,1 @@\n-                for (ExecutableElement ee : ElementFilter.methodsIn(scopeContent(at, at.trees().getScope(invocation), IDENTITY))) {\n+                for (ExecutableElement ee : ElementFilter.methodsIn(scopeContent(at, at.trees().getScope(selectPath), IDENTITY))) {\n@@ -1206,1 +1224,6 @@\n-    public List<Documentation> documentation(String code, int cursor, boolean computeJavadoc) {\n+    public List<Documentation> documentation(String input, int cursor, boolean computeJavadoc) {\n+        return documentation(input, cursor, CompletionContext.SNIPPET, computeJavadoc);\n+    }\n+\n+    @Override\n+    public List<Documentation> documentation(String code, int cursor, CompletionContext context, boolean computeJavadoc) {\n@@ -1209,1 +1232,1 @@\n-            return documentationImpl(code, cursor, computeJavadoc);\n+            return documentationImpl(code, cursor, context, computeJavadoc);\n@@ -1224,1 +1247,1 @@\n-    private List<Documentation> documentationImpl(String code, int cursor, boolean computeJavadoc) {\n+    private List<Documentation> documentationImpl(String code, int cursor, CompletionContext context, boolean computeJavadoc) {\n@@ -1254,1 +1277,0 @@\n-            Iterable<Pair<ExecutableElement, ExecutableType>> candidates;\n@@ -1258,0 +1280,1 @@\n+                Iterable<Pair<ExecutableElement, ExecutableType>> candidates;\n@@ -1260,1 +1283,1 @@\n-                    candidates = methodCandidates(at, tp);\n+                    candidates = methodCandidates(at, context, new TreePath(tp, mit.getMethodSelect()));\n@@ -1287,2 +1310,7 @@\n-                    return Collections.emptyList();\n-                }\n+                    if (context == CompletionContext.SNIPPET) {\n+                        return Collections.emptyList();\n+                    } else {\n+                        elements = Util.stream(methodCandidates(at, context, tp)).map(method -> method.fst);\n+                    }\n+                } else {\n+                    Predicate<Element> accessibility = createAccessibilityFilter(at, tp);\n@@ -1290,1 +1318,4 @@\n-                Predicate<Element> accessibility = createAccessibilityFilter(at, tp);\n+                    if (!accessibility.test(el)) {\n+                        \/\/not accessible\n+                        return Collections.emptyList();\n+                    }\n@@ -1292,3 +1323,1 @@\n-                if (!accessibility.test(el)) {\n-                    \/\/not accessible\n-                    return Collections.emptyList();\n+                    elements = Stream.of(el);\n@@ -1296,2 +1325,0 @@\n-\n-                elements = Stream.of(el);\n@@ -1329,1 +1356,24 @@\n-        return new DocumentationImpl(signature,  javadoc);\n+        String moduleName = at.getElements().getModuleOf(el).getQualifiedName().toString();\n+        String typeName;\n+        String anchor;\n+        if (el.getKind().isClass() || el.getKind().isInterface()) {\n+            typeName = ((QualifiedNameable) el).getQualifiedName().toString();\n+            anchor = null;\n+        } else {\n+            typeName = ((QualifiedNameable) el.getEnclosingElement()).getQualifiedName().toString();\n+            anchor = switch (el.getKind()) {\n+                case METHOD -> {\n+                    yield el.getSimpleName() + \"(\" + ((ExecutableElement) el).getParameters().stream().map(p -> p.asType()).map(Object::toString).collect(Collectors.joining(\",\")) + \")\";\n+                }\n+                default -> null;\n+            };\n+        }\n+        String baseURL = BASE_DOCUMENTATION_URI.get();\n+        URI uri;\n+        try {\n+            uri = new URL(baseURL + moduleName + \"\/\" + typeName.replace(\".\", \"\/\") + \".html\" + (anchor != null ? \"#\" + anchor : \"\")).toURI();\n+        } catch (MalformedURLException | URISyntaxException ex) {\n+            proc.debug(ex, \"SourceCodeAnalysisImpl.element2String(..., \" + el + \")\");\n+            uri = null;\n+        }\n+        return new DocumentationImpl(signature,  javadoc, uri);\n@@ -1346,0 +1396,1 @@\n+        private final URI uri;\n@@ -1347,1 +1398,1 @@\n-        public DocumentationImpl(String signature, String javadoc) {\n+        public DocumentationImpl(String signature, String javadoc, URI uri) {\n@@ -1350,0 +1401,1 @@\n+            this.uri = uri;\n@@ -1362,0 +1414,5 @@\n+        @Override\n+        public URI uri() {\n+            return uri;\n+        }\n+\n@@ -1959,0 +2016,11 @@\n+    private static Supplier<String> BASE_DOCUMENTATION_URI = () -> {\n+        Runtime.Version version = Runtime.version();\n+        String template;\n+        \/\/based on URLs hardcoded in javadoc:\n+        if (version.pre().isPresent()) {\n+            template = \"https:\/\/download.java.net\/java\/early_access\/jdk{0}\/docs\/api\/\";\n+        } else {\n+            template = \"https:\/\/docs.oracle.com\/en\/java\/javase\/{0}\/docs\/api\/\";\n+        }\n+        return template.replace(\"{0}\", String.valueOf(version.feature()));\n+    };\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/SourceCodeAnalysisImpl.java","additions":99,"deletions":31,"binary":false,"changes":130,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,2 @@\n- *          jdk.jshell\/jdk.internal.jshell.tool\n+ *          jdk.jshell\/jdk.internal.jshell.tool:+open\n+ *          jdk.jshell\/jdk.jshell:open\n@@ -39,0 +40,2 @@\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n@@ -137,1 +140,1 @@\n-                a -> assertCompletion(a, \"\/d|\", false, \"\/drop \"),\n+                a -> assertCompletion(a, \"\/d|\", false, \"\/doc \", \"\/drop \"),\n@@ -169,1 +172,1 @@\n-                \"\/! \", \"\/-<n> \", \"\/<id> \", \"\/? \", \"\/drop \",\n+                \"\/! \", \"\/-<n> \", \"\/<id> \", \"\/? \", \"\/doc \", \"\/drop \",\n@@ -176,1 +179,1 @@\n-                \"\/! \", \"\/-<n> \", \"\/<id> \", \"\/? \", \"\/drop \",\n+                \"\/! \", \"\/-<n> \", \"\/<id> \", \"\/? \", \"\/doc \", \"\/drop \",\n@@ -185,1 +188,1 @@\n-                \"editor\", \"feedback\", \"format\", \"indent\", \"mode\", \"prompt\", \"start\", \"truncation\"),\n+                \"browser\", \"editor\", \"feedback\", \"format\", \"indent\", \"mode\", \"prompt\", \"start\", \"truncation\"),\n@@ -187,1 +190,1 @@\n-                \"editor\", \"feedback\", \"format\", \"indent\", \"mode\", \"prompt\", \"start\", \"truncation\"),\n+                \"browser\", \"editor\", \"feedback\", \"format\", \"indent\", \"mode\", \"prompt\", \"start\", \"truncation\"),\n@@ -357,1 +360,5 @@\n-                a -> assertCompletion(a, \"\/set |\", false, \"editor \", \"feedback \", \"format \", \"indent \", \"mode \", \"prompt \", \"start \", \"truncation \"),\n+                a -> assertCompletion(a, \"\/set |\", false, \"browser \", \"editor \", \"feedback \", \"format \", \"indent \", \"mode \", \"prompt \", \"start \", \"truncation \"),\n+\n+                \/\/ \/set browser\n+                a -> assertCompletion(a, \"\/set b|\", false, \"browser \"),\n+                a -> assertCompletion(a, \"\/set browser |\", false, p1.toArray(new String[p1.size()])),\n@@ -393,0 +400,18 @@\n+    @Test\n+    public void testDoc() throws IOException {\n+        test(false, new String[]{\"--no-startup\"},\n+                a -> assertCompletion(a, \"\/do|\", false, \"\/doc \"),\n+                a -> {\n+                    if (!a) {\n+                        setCommandInput(\"\\n\");\n+                    } else {\n+                                waitIndexingFinished();\n+                    }\n+                },\n+                a -> assertCompletion(a, \"\/doc java.la|\", true, \"lang.\"),\n+                a -> assertCompletion(a, \"\/doc java.lang.Byt|\", true, \"Byte\"),\n+                a -> assertCompletion(a, \"\/doc java.lang.Byte.valu|\", true, \"valueOf\"),\n+                a -> assertCompletion(a, \"\/doc java.lang.Byte.MIN|\", true, \"MIN_VALUE\")\n+        );\n+    }\n+\n@@ -427,0 +452,15 @@\n+\n+    protected void waitIndexingFinished() {\n+        try {\n+            Field analysisField = JShellTool.class.getDeclaredField(\"analysis\");\n+            analysisField.setAccessible(true);\n+            Object analysis = analysisField.get(repl);\n+            Method waitBackgroundTaskFinished = analysis.getClass().getDeclaredMethod(\"waitBackgroundTaskFinished\");\n+\n+            waitBackgroundTaskFinished.setAccessible(true);\n+            waitBackgroundTaskFinished.invoke(analysis);\n+        } catch (Exception ex) {\n+            throw new AssertionError(\"Cannot wait for indexing end.\", ex);\n+        }\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/CommandCompletionTest.java","additions":48,"deletions":8,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,0 +49,1 @@\n+import java.util.function.Supplier;\n@@ -58,0 +59,2 @@\n+import jdk.jshell.SourceCodeAnalysis;\n+import jdk.jshell.SourceCodeAnalysis.CompletionContext;\n@@ -722,0 +725,11 @@\n+    public void testLookupCompletion() {\n+        assertCompletion(\"Bool|\", CompletionContext.LOOKUP, \"Boolean\");\n+        assertCompletion(\"Boolean.val|\", CompletionContext.LOOKUP, \"valueOf\");\n+        assertCompletion(\"Boolean.boo|\", CompletionContext.LOOKUP, \"booleanValue\");\n+    }\n+\n+    public void testDocURL() {\n+        assertDocumentationURL(\"java.lang.String|\", CompletionContext.LOOKUP, \"http:\/\/documentation\/java.base\/java\/lang\/String.html\");\n+        assertDocumentationURL(\"java.lang.String.charAt|\", CompletionContext.LOOKUP, \"http:\/\/documentation\/java.base\/java\/lang\/String.html#charAt(int)\");\n+    }\n+\n@@ -776,0 +790,11 @@\n+\n+    static {\n+        try {\n+            Class scai = Class.forName(\"jdk.jshell.SourceCodeAnalysisImpl\");\n+            Field baseDocumentation = scai.getDeclaredField(\"BASE_DOCUMENTATION_URI\");\n+            baseDocumentation.setAccessible(true);\n+            baseDocumentation.set(null, (Supplier<String>) () -> \"http:\/\/documentation\/\");\n+        } catch (Throwable t) {\n+            throw new AssertionError(t);\n+        }\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/CompletionSuggestionTest.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,0 +85,1 @@\n+import jdk.jshell.SourceCodeAnalysis.CompletionContext;\n@@ -900,1 +901,5 @@\n-        assertCompletion(code, null, expected);\n+        assertCompletion(code, CompletionContext.SNIPPET, expected);\n+    }\n+\n+    public void assertCompletion(String code, CompletionContext context, String... expected) {\n+        assertCompletion(code, null, context, expected);\n@@ -904,1 +909,5 @@\n-        List<String> completions = computeCompletions(code, isSmart);\n+        assertCompletion(code, isSmart, CompletionContext.SNIPPET, expected);\n+    }\n+\n+    public void assertCompletion(String code, Boolean isSmart, CompletionContext context, String... expected) {\n+        List<String> completions = computeCompletions(code, isSmart, context);\n@@ -922,0 +931,4 @@\n+        return computeCompletions(code, isSmart, CompletionContext.SNIPPET);\n+    }\n+\n+    private List<String> computeCompletions(String code, Boolean isSmart, CompletionContext context) {\n@@ -928,1 +941,1 @@\n-                getAnalysis().completionSuggestions(code, cursor, new int[1]); \/\/XXX: ignoring anchor for now\n+                getAnalysis().completionSuggestions(code, cursor, context, new int[1]); \/\/XXX: ignoring anchor for now\n@@ -989,0 +1002,10 @@\n+    public void assertDocumentationURL(String code, CompletionContext context, String... expected) {\n+        int cursor =  code.indexOf('|');\n+        code = code.replace(\"|\", \"\");\n+        assertTrue(cursor > -1, \"'|' expected, but not found in: \" + code);\n+        List<Documentation> documentation = getAnalysis().documentation(code, cursor, context, false);\n+        Set<String> uriSet = documentation.stream().map(doc -> doc.uri().toString()).collect(Collectors.toSet());\n+        Set<String> expectedSet = Stream.of(expected).collect(Collectors.toSet());\n+        assertEquals(uriSet, expectedSet, \"Input: \" + code);\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/KullaTesting.java","additions":27,"deletions":4,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -247,0 +247,117 @@\n+    public void setBrowserTest() {\n+        test(\n+                (a) -> assertCommand(a, \"\/set browser -furball\",\n+                        \"|  Unknown option: -furball -- \/set browser -furball\"),\n+                (a) -> assertCommand(a, \"\/set browser -furball prog\",\n+                        \"|  Unknown option: -furball -- \/set browser -furball prog\"),\n+                (a) -> assertCommand(a, \"\/set browser -furball -mattress\",\n+                        \"|  Unknown option: -furball -mattress -- \/set browser -furball -mattress\"),\n+                (a) -> assertCommand(a, \"\/set browser -default prog\",\n+                        \"|  Specify -default option, -delete option, or program -- \/set browser -default prog\"),\n+                (a) -> assertCommand(a, \"\/set browser prog\",\n+                        \"|  Browser set to: prog\"),\n+                (a) -> assertCommand(a, \"\/set browser prog -default\",\n+                        \"|  Browser set to: prog -default\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser prog -default\"),\n+                (a) -> assertCommand(a, \"\/se br prog -furball\",\n+                        \"|  Browser set to: prog -furball\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser prog -furball\"),\n+                (a) -> assertCommand(a, \"\/se br -delete\",\n+                        \"|  Browser set to: -default\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -default\"),\n+                (a) -> assertCommand(a, \"\/set browser prog arg1 -furball arg3 -default arg4\",\n+                        \"|  Browser set to: prog arg1 -furball arg3 -default arg4\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser prog arg1 -furball arg3 -default arg4\"),\n+                (a) -> assertCommand(a, \"\/set browser -default\",\n+                        \"|  Browser set to: -default\"),\n+                (a) -> assertCommand(a, \"\/se br -def\",\n+                        \"|  Browser set to: -default\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -default\")\n+        );\n+    }\n+\n+    public void retainBrowserTest() {\n+        test(\n+                (a) -> assertCommand(a, \"\/set browser -retain -furball\",\n+                        \"|  Unknown option: -furball -- \/set browser -retain -furball\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain -furball prog\",\n+                        \"|  Unknown option: -furball -- \/set browser -retain -furball prog\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain -furball -mattress\",\n+                        \"|  Unknown option: -furball -mattress -- \/set browser -retain -furball -mattress\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain -default prog\",\n+                        \"|  Specify -default option, -delete option, or program -- \/set browser -retain -default prog\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain prog\",\n+                        \"|  Browser set to: prog\\n\" +\n+                        \"|  Browser setting retained: prog\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -retain prog\"),\n+                (a) -> assertCommand(a, \"\/se br other\",\n+                        \"|  Browser set to: other\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -retain prog\\n\" +\n+                        \"|  \/set browser other\"),\n+                (a) -> assertCommand(a, \"\/se br -delete\",\n+                        \"|  Browser set to: prog\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -retain prog\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain prog -default\",\n+                        \"|  Browser set to: prog -default\\n\" +\n+                        \"|  Browser setting retained: prog -default\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -retain prog -default\"),\n+                (a) -> assertCommand(a, \"\/se br -retain prog -furball\",\n+                        \"|  Browser set to: prog -furball\\n\" +\n+                        \"|  Browser setting retained: prog -furball\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain prog arg1 -furball arg3 -default arg4\",\n+                        \"|  Browser set to: prog arg1 -furball arg3 -default arg4\\n\" +\n+                        \"|  Browser setting retained: prog arg1 -furball arg3 -default arg4\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -retain prog arg1 -furball arg3 -default arg4\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain -default\",\n+                        \"|  Browser set to: -default\\n\" +\n+                        \"|  Browser setting retained: -default\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -retain -default\"),\n+                (a) -> assertCommand(a, \"\/se b -ret -def\",\n+                        \"|  Browser set to: -default\\n\" +\n+                        \"|  Browser setting retained: -default\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain\",\n+                        \"|  Browser setting retained: -default\")\n+        );\n+    }\n+\n+    public void setBwoserEnvTest() {\n+        setEnvVar(\"BROWSER\", \"best one\");\n+        setBrowserEnvSubtest();\n+        setEnvVar(\"BROWSER\", \"not this\");\n+        setEnvVar(\"JSHELLBROWSER\", \"best one\");\n+        setBrowserEnvSubtest();\n+    }\n+\n+    private void setBrowserEnvSubtest() {\n+        test(\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser best one\"),\n+                (a) -> assertCommand(a, \"\/set browser prog\",\n+                        \"|  Browser set to: prog\"),\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser prog\"),\n+                (a) -> assertCommand(a, \"\/set browser -delete\",\n+                        \"|  Browser set to: best one\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain stored browser\",\n+                        \"|  Browser set to: stored browser\\n\" +\n+                        \"|  Browser setting retained: stored browser\")\n+        );\n+        test(\n+                (a) -> assertCommand(a, \"\/set browser\",\n+                        \"|  \/set browser -retain stored browser\"),\n+                (a) -> assertCommand(a, \"\/set browser -delete -retain\",\n+                        \"|  Browser set to: best one\")\n+        );\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/ToolCommandOptionTest.java","additions":118,"deletions":1,"binary":false,"changes":119,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -145,0 +145,25 @@\n+    public void testRetainBrowser() {\n+        test(\n+                (a) -> assertCommand(a, \"\/set browser -retain nonexistent\",\n+                        \"|  Browser set to: nonexistent\\n\" +\n+                        \"|  Browser setting retained: nonexistent\"),\n+                (a) -> assertCommand(a, \"\/exit\", \"\")\n+        );\n+        test(\n+                (a) -> assertCommand(a, \"\/set browser\", \"|  \/set browser -retain nonexistent\"),\n+                (a) -> assertCommandOutputContains(a, \"\/doc String\", \"Browser Error:\")\n+        );\n+    }\n+\n+    public void testRetainBrowserBlank() {\n+        test(\n+                (a) -> assertCommand(a, \"\/set browser nonexistent\", \"|  Browser set to: nonexistent\"),\n+                (a) -> assertCommand(a, \"\/set browser -retain\", \"|  Browser setting retained: nonexistent\"),\n+                (a) -> assertCommand(a, \"\/exit\", \"\")\n+        );\n+        test(\n+                (a) -> assertCommandOutputContains(a, \"int h =8\", \"\"),\n+                (a) -> assertCommandOutputContains(a, \"\/doc String\", \"Browser Error:\")\n+        );\n+    }\n+\n","filename":"test\/langtools\/jdk\/jshell\/ToolRetainTest.java","additions":26,"deletions":1,"binary":false,"changes":27,"status":"modified"}]}