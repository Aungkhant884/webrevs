{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -92,1 +92,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"connect\");\n@@ -139,1 +139,4 @@\n-            } else return handleSocketError(env, theErr);\n+            } else {\n+                NET_ThrowNew(env, theErr, \"recvfrom\");\n+                return IOS_THROWN;\n+            }\n@@ -163,1 +166,2 @@\n-        return handleSocketError(env, (jint)WSAGetLastError());\n+        NET_ThrowNew(env, (jint)WSAGetLastError(), \"sendto\");\n+        return IOS_THROWN;\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/DatagramChannelImpl.c","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -152,2 +152,1 @@\n-        int error = WSAGetLastError();\n-        handleSocketError(env, (jint)error);\n+        NET_ThrowNew(env, WSAGetLastError(), \"ioctlsocket\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/IOUtil.c","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -80,6 +80,0 @@\n-jint handleSocketError(JNIEnv *env, int errorValue)\n-{\n-    NET_ThrowNew(env, errorValue, NULL);\n-    return IOS_THROWN;\n-}\n-\n@@ -395,1 +389,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"getsockopt\");\n@@ -439,1 +433,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"setsocketopt\");\n@@ -470,1 +464,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"setsocketopt\");\n@@ -492,1 +486,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"setsockopt\");\n@@ -532,0 +526,1 @@\n+    char* error_message = \"setsockopt\";\n@@ -542,0 +537,1 @@\n+        error_message = \"setsockopt with group source request\";\n@@ -545,1 +541,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), error_message);\n@@ -557,1 +553,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"setsocketopt to block or unblock source\");\n@@ -574,1 +570,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"setsockopt\");\n@@ -587,1 +583,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"getsockopt\");\n@@ -603,1 +599,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"setsockopt\");\n@@ -616,1 +612,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"getsockopt\");\n@@ -634,3 +630,3 @@\n-    int count = 0;\n-    if (NET_SocketAvailable(fdval(env, fdo), &count) != 0) {\n-        handleSocketError(env, WSAGetLastError());\n+    u_long arg;\n+    if (ioctlsocket((SOCKET) fdval(env, fdo), FIONREAD, &arg) == SOCKET_ERROR) {\n+        NET_ThrowNew(env, WSAGetLastError(), \"ioctlsocket\");\n@@ -639,1 +635,1 @@\n-    return (jint) count;\n+    return (jint) arg;\n@@ -670,1 +666,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"select\");\n@@ -710,1 +706,1 @@\n-        handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"select\");\n@@ -730,1 +726,1 @@\n-            handleSocketError(env, optError);\n+            NET_ThrowNew(env, optError, \"getsockopt issue with option value\");\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/Net.c","additions":19,"deletions":23,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -161,1 +161,2 @@\n-        return handleSocketError(env, WSAGetLastError());\n+        NET_ThrowNew(env, WSAGetLastError(), \"WSASocketW\");\n+        return IOS_THROWN;\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/UnixDomainSockets.c","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,0 @@\n-jint handleSocketError(JNIEnv *env, int errorValue);\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/nio_util.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}