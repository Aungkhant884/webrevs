{"files":[{"patch":"@@ -232,0 +232,1 @@\n+  AOT_ONLY(nonstatic_field(MethodCounters,     _method,                                       Method*))                              \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -299,0 +299,1 @@\n+  AOT_ONLY(nonstatic_field(MethodCounters,     _method,                                       Method*))                              \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -320,3 +320,3 @@\n-    \/\/ set during compilation, which is not true in PowerPC platforms.\n-    if (PlatformInfo.getCPU().equals(\"ppc64\")) {\n-        return false;\n+    \/\/ set during compilation.\n+    if (!VM.getVM().hasAOT()) {\n+      return false;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/InstanceKlass.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -92,0 +92,2 @@\n+  \/** Flag indicating if AOT is enabled in the build *\/\n+  private boolean      hasAOT;\n@@ -447,0 +449,10 @@\n+    \/\/ We infer AOT if _method @ methodCounters is declared.\n+    {\n+      Type type = db.lookupType(\"MethodCounters\");\n+      if (type.getField(\"_method\", false, false) == null) {\n+        hasAOT = false;\n+      } else {\n+        hasAOT = true;\n+      }\n+    }\n+\n@@ -832,0 +844,5 @@\n+  \/** Returns true if AOT is enabled, false otherwise *\/\n+  public boolean hasAOT() {\n+    return hasAOT;\n+  }\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/VM.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}