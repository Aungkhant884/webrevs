{"files":[{"patch":"@@ -232,0 +232,1 @@\n+  AOT_ONLY(nonstatic_field(MethodCounters,     _method,                                       Method*))                              \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -299,0 +299,1 @@\n+  AOT_ONLY(nonstatic_field(MethodCounters,     _method,                                       Method*))                              \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -319,0 +319,5 @@\n+    \/\/ has_stored_fingerprint() @ instanceKlass.cpp can return true only if INCLUDE_AOT is\n+    \/\/ set during compilation.\n+    if (!VM.getVM().hasAOT()) {\n+      return false;\n+    }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/InstanceKlass.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -92,0 +92,2 @@\n+  \/** Flag indicating if AOT is enabled in the build *\/\n+  private boolean      hasAOT;\n@@ -447,0 +449,10 @@\n+    \/\/ We infer AOT if _method @ methodCounters is declared.\n+    {\n+      Type type = db.lookupType(\"MethodCounters\");\n+      if (type.getField(\"_method\", false, false) == null) {\n+        hasAOT = false;\n+      } else {\n+        hasAOT = true;\n+      }\n+    }\n+\n@@ -832,0 +844,5 @@\n+  \/** Returns true if AOT is enabled, false otherwise *\/\n+  public boolean hasAOT() {\n+    return hasAOT;\n+  }\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/VM.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -95,2 +95,7 @@\n-serviceability\/sa\/TestInstanceKlassSize.java 8230664 linux-ppc64le,linux-ppc64\n-serviceability\/sa\/TestInstanceKlassSizeForInterface.java 8230664 linux-ppc64le,linux-ppc64\n+\n+# The solution to bug JDK-8253900 seems to fix tests TestInstanceKlassSize and\n+# TestInstanceKlassSizeForInterface. However, while JDK-8230664 is not resolved,\n+# these tests may be disabled again if necessary.\n+# serviceability\/sa\/TestInstanceKlassSize.java 8230664 linux-ppc64le,linux-ppc64\n+# serviceability\/sa\/TestInstanceKlassSizeForInterface.java 8230664 linux-ppc64le,linux-ppc64\n+\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-                          s.contains(size), \"The size computed by SA for\" +\n+                          s.contains(size), \"The size computed by SA for \" +\n","filename":"test\/hotspot\/jtreg\/serviceability\/sa\/TestInstanceKlassSize.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}