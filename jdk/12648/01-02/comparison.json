{"files":[{"patch":"@@ -16526,17 +16526,0 @@\n-\/\/ counted loop end branch near Unsigned\n-instruct branchLoopEndU(cmpOpU cmp, rFlagsRegU cr, label lbl)\n-%{\n-  match(CountedLoopEnd cmp cr);\n-\n-  effect(USE lbl);\n-\n-  ins_cost(BRANCH_COST);\n-  \/\/ short variant.\n-  \/\/ ins_short_branch(1);\n-  format %{ \"b$cmp $lbl \\t\/\/ counted loop end unsigned\" %}\n-\n-  ins_encode(aarch64_enc_br_conU(cmp, lbl));\n-\n-  ins_pipe(pipe_branch);\n-%}\n-\n@@ -16544,1 +16527,0 @@\n-\/\/ counted loop end branch far unsigned\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -8966,0 +8966,19 @@\n+instruct cmpL_loop(cmpOp cmp, iRegL op1, iRegL op2, label lbl)\n+%{\n+  \/\/ Same match rule as `far_cmpL_loop'.\n+  match(CountedLoopEnd cmp (CmpL op1 op2));\n+\n+  effect(USE lbl);\n+\n+  ins_cost(BRANCH_COST);\n+\n+  format %{ \"b$cmp  $op1, $op2, $lbl\\t#@cmpL_loop\" %}\n+\n+  ins_encode %{\n+    __ cmp_branch($cmp$$cmpcode, as_Register($op1$$reg), as_Register($op2$$reg), *($lbl$$label));\n+  %}\n+\n+  ins_pipe(pipe_cmp_branch);\n+  ins_short_branch(1);\n+%}\n+\n@@ -9293,0 +9312,14 @@\n+instruct far_cmpLloop(cmpOp cmp, iRegL op1, iRegL op2, label lbl) %{\n+  match(CountedLoopEnd cmp (CmpL op1 op2));\n+  effect(USE lbl);\n+\n+  ins_cost(BRANCH_COST * 2);\n+  format %{ \"far_b$cmp  $op1, $op2, $lbl\\t#@far_cmpL_loop\" %}\n+\n+  ins_encode %{\n+    __ cmp_branch($cmp$$cmpcode, as_Register($op1$$reg), as_Register($op2$$reg), *($lbl$$label), \/* is_far *\/ true);\n+  %}\n+\n+  ins_pipe(pipe_cmp_branch);\n+%}\n+\n@@ -9463,0 +9496,17 @@\n+instruct far_cmpL_reg_imm0_loop(cmpOp cmp, iRegL op1, immL0 zero, label lbl)\n+%{\n+  match(CountedLoopEnd cmp (CmpL op1 zero));\n+\n+  effect(USE op1, USE lbl);\n+\n+  ins_cost(BRANCH_COST * 2);\n+\n+  format %{ \"far_b$cmp  $op1, zr, $lbl\\t#@far_cmpL_reg_imm0_loop\" %}\n+\n+  ins_encode %{\n+    __ cmp_branch($cmp$$cmpcode, as_Register($op1$$reg), zr, *($lbl$$label), \/* is_far *\/ true);\n+  %}\n+\n+  ins_pipe(pipe_cmpz_branch);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":50,"deletions":0,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -12684,15 +12684,0 @@\n-\/\/ Jump Direct Conditional - Label defines a relative address from Jcc+1\n-instruct jmpLoopEndU(cmpOpU cop, eFlagsRegU cmp, label labl) %{\n-  match(CountedLoopEnd cop cmp);\n-  effect(USE labl);\n-\n-  ins_cost(300);\n-  format %{ \"J$cop,u  $labl\\t# Loop end\" %}\n-  size(6);\n-  ins_encode %{\n-    Label* L = $labl$$label;\n-    __ jcc((Assembler::Condition)($cop$$cmpcode), *L, false); \/\/ Always long jump\n-  %}\n-  ins_pipe( pipe_jcc );\n-%}\n-\n@@ -12877,15 +12862,0 @@\n-instruct jmpLoopEndU_short(cmpOpU cop, eFlagsRegU cmp, label labl) %{\n-  match(CountedLoopEnd cop cmp);\n-  effect(USE labl);\n-\n-  ins_cost(300);\n-  format %{ \"J$cop,us $labl\\t# Loop end\" %}\n-  size(2);\n-  ins_encode %{\n-    Label* L = $labl$$label;\n-    __ jccb((Assembler::Condition)($cop$$cmpcode), *L);\n-  %}\n-  ins_pipe( pipe_jcc );\n-  ins_short_branch(1);\n-%}\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":0,"deletions":30,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -13056,15 +13056,0 @@\n-\/\/ Jump Direct Conditional - Label defines a relative address from Jcc+1\n-instruct jmpLoopEndU(cmpOpU cop, rFlagsRegU cmp, label labl) %{\n-  match(CountedLoopEnd cop cmp);\n-  effect(USE labl);\n-\n-  ins_cost(300);\n-  format %{ \"j$cop,u   $labl\\t# loop end\" %}\n-  size(6);\n-  ins_encode %{\n-    Label* L = $labl$$label;\n-    __ jcc((Assembler::Condition)($cop$$cmpcode), *L, false); \/\/ Always long jump\n-  %}\n-  ins_pipe(pipe_jcc);\n-%}\n-\n@@ -13250,16 +13235,0 @@\n-    Label* L = $labl$$label;\n-    __ jccb((Assembler::Condition)($cop$$cmpcode), *L);\n-  %}\n-  ins_pipe(pipe_jcc);\n-  ins_short_branch(1);\n-%}\n-\n-\/\/ Jump Direct Conditional - Label defines a relative address from Jcc+1\n-instruct jmpLoopEndU_short(cmpOpU cop, rFlagsRegU cmp, label labl) %{\n-  match(CountedLoopEnd cop cmp);\n-  effect(USE labl);\n-\n-  ins_cost(300);\n-  format %{ \"j$cop,us  $labl\\t# loop end\" %}\n-  size(2);\n-  ins_encode %{\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":0,"deletions":31,"binary":false,"changes":31,"status":"modified"}]}