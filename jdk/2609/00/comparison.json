{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,0 +65,2 @@\n+import sun.hotspot.WhiteBox;\n+\n@@ -69,1 +71,0 @@\n-import vm.mlvm.share.WhiteBoxHelper;\n@@ -90,0 +91,1 @@\n+    private static final WhiteBox WHITE_BOX = WhiteBox.getWhiteBox();\n@@ -136,9 +138,0 @@\n-    private MethodHandle getFullGCMethod() throws NoSuchMethodException, IllegalAccessException {\n-        try {\n-            return WhiteBoxHelper.getMethod(\"fullGC\", MethodType.methodType(void.class));\n-        } catch (NoSuchMethodException | ClassNotFoundException | InvocationTargetException e) {\n-            Env.traceDebug(e, \"No WhiteBox API. Will use System.gc() instead of WhiteBox.fullGC()\");\n-            return MethodHandles.lookup().findStatic(System.class, \"gc\", MethodType.methodType(void.class));\n-        }\n-    }\n-\n@@ -153,2 +146,0 @@\n-        MethodHandle mhCollectHeap = getFullGCMethod();\n-\n@@ -186,1 +177,1 @@\n-            mhCollectHeap.invoke();\n+            WHITE_BOX.fullGC();\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/indy\/stress\/gc\/lotsOfCallSites\/Test.java","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1,68 +0,0 @@\n-\/*\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package vm.mlvm.share;\n-\n-import java.lang.invoke.MethodHandle;\n-import java.lang.invoke.MethodHandles;\n-import java.lang.invoke.MethodType;\n-import java.lang.reflect.InvocationTargetException;\n-\n-\/**\n- * WhiteBoxHelper class obtains a MethodHandle to a method defined in sun.hotspot.WhiteBox class.\n- * If WhiteBox is not available or cannot be initialized, or the method is not available,\n- * it throws an appropriate exception.\n- *\n- * This class was introduced to avoid \"hard link\" to WhiteBox.\n- *\n- *\/\n-public class WhiteBoxHelper {\n-\n-    \/**\n-     * Obtains {@link java.lang.invoke.MethodHandle} to a method in sun.hotspot.WhiteBox class.\n-     * If there is an error obtaining method handle, an exception is thrown.\n-     *\n-     * @param name Method name\n-     * @type Method type\n-     * @return {@link java.lang.invoke.MethodHandle} to the method. You can call it directly, WhiteBox instance is already bound to the handle.\n-     * @throws IllegalAccessException if method cannot be accessed (see {@link java.lang.invoke.MethodHandles.Lookup#findStatic()} for details)\n-     * @throws NoSuchMethodException if method cannot be found (see {@link java.lang.invoke.MethodHandles.Lookup#findStatic()} for details)\n-     * @throws ClassNotFoundException if WhiteBox class cannot be loaded\n-     * @throws InvocationTargetException if WhiteBox.getWhiteBox() method throws exception for some reason\n-     *\/\n-    public static MethodHandle getMethod(String name, MethodType type)\n-            throws IllegalAccessException, NoSuchMethodException, ClassNotFoundException, InvocationTargetException {\n-\n-        Class<?> wbClass = Class.forName(\"sun.hotspot.WhiteBox\");\n-        MethodHandles.Lookup lu = MethodHandles.lookup();\n-        MethodHandle getWB = lu.findStatic(wbClass, \"getWhiteBox\", MethodType.methodType(wbClass));\n-        Object wb;\n-        try {\n-            wb = getWB.invoke();\n-        } catch (Throwable e) {\n-            throw new InvocationTargetException(e, \"Can't obtain WhiteBox instance\");\n-        }\n-        return lu.findVirtual(wbClass, name, type).bindTo(wb);\n-    }\n-\n-}\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/mlvm\/share\/WhiteBoxHelper.java","additions":0,"deletions":68,"binary":false,"changes":68,"status":"deleted"}]}