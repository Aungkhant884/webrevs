{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,0 +39,4 @@\n+HSDIS_TOOLCHAIN := TOOLCHAIN_DEFAULT\n+HSDIS_TOOLCHAIN_CFLAGS := $(CFLAGS_JDKLIB)\n+HSDIS_TOOLCHAIN_LDFLAGS := $(LDFLAGS_JDKLIB)\n+\n@@ -41,0 +45,5 @@\n+  IMAGE_HSDIS_DIR := $(JDK_IMAGE_DIR)\/bin\n+else\n+  INSTALLED_HSDIS_DIR := $(JDK_OUTPUTDIR)\/lib\n+  IMAGE_HSDIS_DIR := $(JDK_IMAGE_DIR)\/lib\n+endif\n@@ -42,2 +51,10 @@\n-  # On windows, we need to \"fake\" a completely different toolchain using gcc\n-  # instead of the normal microsoft toolchain. This is quite hacky...\n+ifeq ($(HSDIS_BACKEND), capstone)\n+  ifeq ($(call isTargetCpuArch, x86), true)\n+    CAPSTONE_ARCH := CS_ARCH_X86\n+    CAPSTONE_MODE := CS_MODE_$(OPENJDK_TARGET_CPU_BITS)\n+  else ifeq ($(call isTargetCpuArch, aarch64), true)\n+    CAPSTONE_ARCH := CS_ARCH_ARM64\n+    CAPSTONE_MODE := CS_MODE_ARM\n+  else\n+    $(error No support for Capstone on this platform)\n+  endif\n@@ -45,1 +62,8 @@\n-  MINGW_BASE := x86_64-w64-mingw32\n+  HSDIS_CFLAGS += -DCAPSTONE_ARCH=$(CAPSTONE_ARCH) \\\n+      -DCAPSTONE_MODE=$(CAPSTONE_MODE)\n+endif\n+\n+ifeq ($(HSDIS_BACKEND), binutils)\n+  ifeq ($(call isTargetOs, windows), true)\n+    # On windows, we need to \"fake\" a completely different toolchain using gcc\n+    # instead of the normal microsoft toolchain. This is quite hacky...\n@@ -47,4 +71,3 @@\n-  MINGW_SYSROOT = $(shell $(MINGW_BASE)-gcc -print-sysroot)\n-  ifeq ($(wildcard $(MINGW_SYSROOT)), )\n-    # Use fallback path\n-    MINGW_SYSROOT := \/usr\/$(MINGW_BASE)\n+    MINGW_BASE := x86_64-w64-mingw32\n+\n+    MINGW_SYSROOT = $(shell $(MINGW_BASE)-gcc -print-sysroot)\n@@ -52,1 +75,5 @@\n-      $(error mingw sysroot not found)\n+      # Use fallback path\n+      MINGW_SYSROOT := \/usr\/$(MINGW_BASE)\n+      ifeq ($(wildcard $(MINGW_SYSROOT)), )\n+        $(error mingw sysroot not found)\n+      endif\n@@ -54,1 +81,0 @@\n-  endif\n@@ -56,13 +82,10 @@\n-  $(eval $(call DefineNativeToolchain, TOOLCHAIN_MINGW, \\\n-      CC := $(MINGW_BASE)-gcc, \\\n-      LD := $(MINGW_BASE)-ld, \\\n-      OBJCOPY := $(MINGW_BASE)-objcopy, \\\n-      RC := $(RC), \\\n-      SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-      SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n-  ))\n-\n-  MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/mingw\/lib\n-  ifeq ($(wildcard $(MINGW_SYSROOT_LIB_PATH)), )\n-    # Try without mingw\n-    MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/lib\n+    $(eval $(call DefineNativeToolchain, TOOLCHAIN_MINGW, \\\n+        CC := $(MINGW_BASE)-gcc, \\\n+        LD := $(MINGW_BASE)-ld, \\\n+        OBJCOPY := $(MINGW_BASE)-objcopy, \\\n+        RC := $(RC), \\\n+        SYSROOT_CFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n+        SYSROOT_LDFLAGS := --sysroot=$(MINGW_SYSROOT), \\\n+    ))\n+\n+    MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/mingw\/lib\n@@ -70,1 +93,5 @@\n-      $(error mingw sysroot lib path not found)\n+      # Try without mingw\n+      MINGW_SYSROOT_LIB_PATH := $(MINGW_SYSROOT)\/lib\n+      ifeq ($(wildcard $(MINGW_SYSROOT_LIB_PATH)), )\n+        $(error mingw sysroot lib path not found)\n+      endif\n@@ -72,1 +99,0 @@\n-  endif\n@@ -74,6 +100,2 @@\n-  MINGW_VERSION = $(shell $(MINGW_BASE)-gcc -v 2>&1 | $(GREP) \"gcc version\" | $(CUT) -d \" \" -f 3)\n-  MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION)\n-  ifeq ($(wildcard $(MINGW_GCC_LIB_PATH)), )\n-    # Try using only major version number\n-    MINGW_VERSION_MAJOR := $(firstword $(subst ., , $(MINGW_VERSION)))\n-    MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION_MAJOR)\n+    MINGW_VERSION = $(shell $(MINGW_BASE)-gcc -v 2>&1 | $(GREP) \"gcc version\" | $(CUT) -d \" \" -f 3)\n+    MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION)\n@@ -81,1 +103,6 @@\n-      $(error mingw gcc lib path not found)\n+      # Try using only major version number\n+      MINGW_VERSION_MAJOR := $(firstword $(subst ., , $(MINGW_VERSION)))\n+      MINGW_GCC_LIB_PATH := \/usr\/lib\/gcc\/$(MINGW_BASE)\/$(MINGW_VERSION_MAJOR)\n+      ifeq ($(wildcard $(MINGW_GCC_LIB_PATH)), )\n+        $(error mingw gcc lib path not found)\n+      endif\n@@ -83,1 +110,0 @@\n-  endif\n@@ -85,24 +111,20 @@\n-  TOOLCHAIN_TYPE := gcc\n-  OPENJDK_TARGET_OS := linux\n-  CC_OUT_OPTION := -o$(SPACE)\n-  LD_OUT_OPTION := -o$(SPACE)\n-  GENDEPS_FLAGS := -MMD -MF\n-  CFLAGS_DEBUG_SYMBOLS := -g\n-  DISABLED_WARNINGS :=\n-  DISABLE_WARNING_PREFIX := -Wno-\n-  CFLAGS_WARNINGS_ARE_ERRORS := -Werror\n-  SHARED_LIBRARY_FLAGS := -shared\n-\n-  HSDIS_TOOLCHAIN := TOOLCHAIN_MINGW\n-  HSDIS_TOOLCHAIN_CFLAGS :=\n-  HSDIS_TOOLCHAIN_LDFLAGS := -L$(MINGW_GCC_LIB_PATH) -L$(MINGW_SYSROOT_LIB_PATH)\n-  MINGW_DLLCRT := $(MINGW_SYSROOT_LIB_PATH)\/dllcrt2.o\n-  HSDIS_TOOLCHAIN_LIBS := $(MINGW_DLLCRT) -lmingw32 -lgcc -lgcc_eh -lmoldname \\\n-      -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32\n-else\n-  INSTALLED_HSDIS_DIR := $(JDK_OUTPUTDIR)\/lib\n-\n-  HSDIS_TOOLCHAIN := TOOLCHAIN_DEFAULT\n-  HSDIS_TOOLCHAIN_CFLAGS := $(CFLAGS_JDKLIB)\n-  HSDIS_TOOLCHAIN_LDFLAGS := $(LDFLAGS_JDKLIB)\n-  HSDIS_TOOLCHAIN_LIBS := -ldl\n+    TOOLCHAIN_TYPE := gcc\n+    OPENJDK_TARGET_OS := linux\n+    CC_OUT_OPTION := -o$(SPACE)\n+    LD_OUT_OPTION := -o$(SPACE)\n+    GENDEPS_FLAGS := -MMD -MF\n+    CFLAGS_DEBUG_SYMBOLS := -g\n+    DISABLED_WARNINGS :=\n+    DISABLE_WARNING_PREFIX := -Wno-\n+    CFLAGS_WARNINGS_ARE_ERRORS := -Werror\n+    SHARED_LIBRARY_FLAGS := -shared\n+\n+    HSDIS_TOOLCHAIN := TOOLCHAIN_MINGW\n+    HSDIS_TOOLCHAIN_CFLAGS :=\n+    HSDIS_TOOLCHAIN_LDFLAGS := -L$(MINGW_GCC_LIB_PATH) -L$(MINGW_SYSROOT_LIB_PATH)\n+    MINGW_DLLCRT := $(MINGW_SYSROOT_LIB_PATH)\/dllcrt2.o\n+    HSDIS_TOOLCHAIN_LIBS := $(MINGW_DLLCRT) -lmingw32 -lgcc -lgcc_eh -lmoldname \\\n+        -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32\n+  else\n+    HSDIS_TOOLCHAIN_LIBS := -ldl\n+  endif\n@@ -111,1 +133,0 @@\n-\n@@ -114,1 +135,2 @@\n-    SRC := $(TOPDIR)\/src\/utils\/hsdis, \\\n+    SRC := $(TOPDIR)\/src\/utils\/hsdis\/$(HSDIS_BACKEND), \\\n+    EXTRA_HEADER_DIRS := $(TOPDIR)\/src\/utils\/hsdis, \\\n@@ -121,1 +143,1 @@\n-    LDFLAGS := $(HSDIS_TOOLCHAIN_LDFLAGS) $(SHARED_LIBRARY_FLAGS), \\\n+    LDFLAGS := $(HSDIS_TOOLCHAIN_LDFLAGS) $(HSDIS_LDFLAGS) $(SHARED_LIBRARY_FLAGS), \\\n@@ -132,0 +154,1 @@\n+INSTALLED_HSDIS_IMAGE := $(IMAGE_HSDIS_DIR)\/$(INSTALLED_HSDIS_NAME)\n@@ -134,1 +157,3 @@\n-\t$(call LogWarn, NOTE: The resulting build might not be redistributable. Seek legal advice before distibuting.)\n+        ifeq ($(HSDIS_BACKEND), binutils)\n+\t  $(call LogWarn, NOTE: The resulting build might not be redistributable. Seek legal advice before distributing.)\n+        endif\n@@ -137,0 +162,2 @@\n+$(INSTALLED_HSDIS_IMAGE): $(INSTALLED_HSDIS)\n+\t$(install-file)\n@@ -138,1 +165,1 @@\n-install: $(INSTALLED_HSDIS)\n+install: $(INSTALLED_HSDIS_IMAGE)\n","filename":"make\/Hsdis.gmk","additions":89,"deletions":62,"binary":false,"changes":151,"status":"modified"},{"patch":"@@ -120,0 +120,2 @@\n+    capstone)\n+      PKGHANDLER_COMMAND=\"sudo apt-get install libcapstone-dev\" ;;\n@@ -171,0 +173,2 @@\n+    capstone)\n+      PKGHANDLER_COMMAND=\"brew install capstone\" ;;\n","filename":"make\/autoconf\/help.m4","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -814,1 +814,4 @@\n-      [what hsdis backend to use ('none', 'binutils') @<:@none@:>@])])\n+      [what hsdis backend to use ('none', 'capstone', 'binutils') @<:@none@:>@])])\n+\n+  AC_ARG_WITH(capstone, [AS_HELP_STRING([--with-capstone],\n+      [where to find the Capstone files needed for hsdis\/capstone])])\n@@ -829,0 +832,35 @@\n+  elif test \"x$with_hsdis\" = xcapstone; then\n+    HSDIS_BACKEND=capstone\n+    AC_MSG_RESULT(['capstone'])\n+\n+    if test \"x$with_capstone\" != x; then\n+      AC_MSG_CHECKING([for capstone])\n+      CAPSTONE=\"$with_capstone\"\n+      AC_MSG_RESULT([$CAPSTONE])\n+\n+      HSDIS_CFLAGS=\"-I${CAPSTONE}\/include\/capstone\"\n+      if test \"x$OPENJDK_TARGET_OS\" != xwindows; then\n+        HSDIS_LDFLAGS=\"-L${CAPSTONE}\/lib\"\n+        HSDIS_LIBS=\"-lcapstone\"\n+      else\n+        HSDIS_LDFLAGS=\"-nodefaultlib:libcmt.lib\"\n+        HSDIS_LIBS=\"${CAPSTONE}\/capstone.lib\"\n+      fi\n+    else\n+      if test \"x$OPENJDK_TARGET_OS\" = xwindows; then\n+        # There is no way to auto-detect capstone on Windowos\n+        AC_MSG_NOTICE([You must specify capstone location using --with-capstone=<path>])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+\n+      PKG_CHECK_MODULES(CAPSTONE, capstone, [CAPSTONE_FOUND=yes], [CAPSTONE_FOUND=no])\n+      if test \"x$CAPSTONE_FOUND\" = xyes; then\n+        HSDIS_CFLAGS=\"$CAPSTONE_CFLAGS\"\n+        HSDIS_LDFLAGS=\"$CAPSTONE_LDFLAGS\"\n+        HSDIS_LIBS=\"$CAPSTONE_LIBS\"\n+      else\n+        HELP_MSG_MISSING_DEPENDENCY([capstone])\n+        AC_MSG_NOTICE([Cannot locate capstone which is needed for hsdis\/capstone. Try using --with-capstone=<path>. $HELP_MSG])\n+        AC_MSG_ERROR([Cannot continue])\n+      fi\n+    fi\n@@ -856,0 +894,1 @@\n+        HSDIS_LDFLAGS=\"\"\n@@ -898,0 +937,1 @@\n+  AC_SUBST(HSDIS_LDFLAGS)\n","filename":"make\/autoconf\/jdk-options.m4","additions":41,"deletions":1,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -364,0 +364,1 @@\n+HSDIS_LDFLAGS := @HSDIS_LDFLAGS@\n","filename":"make\/autoconf\/spec.gmk.in","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,102 +0,0 @@\n-Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n-DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-\n-The Universal Permissive License (UPL), Version 1.0\n-\n-Subject to the condition set forth below, permission is hereby granted to\n-any person obtaining a copy of this software, associated documentation\n-and\/or data (collectively the \"Software\"), free of charge and under any\n-and all copyright rights in the Software, and any and all patent rights\n-owned or freely licensable by each licensor hereunder covering either (i)\n-the unmodified Software as contributed to or provided by such licensor,\n-or (ii) the Larger Works (as defined below), to deal in both\n-\n-(a) the Software, and\n-\n-(b) any piece of software and\/or hardware listed in the lrgrwrks.txt file\n-if one is included with the Software (each a \"Larger Work\" to which the\n-Software is contributed by such licensors),\n-\n-without restriction, including without limitation the rights to copy,\n-create derivative works of, display, perform, and distribute the Software\n-and make, use, sell, offer for sale, import, export, have made, and have\n-sold the Software and the Larger Work(s), and to sublicense the foregoing\n-rights on either these or other terms.\n-\n-This license is subject to the following condition:\n-\n-The above copyright notice and either this complete permission notice or\n-at a minimum a reference to the UPL must be included in all copies or\n-substantial portions of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n-OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n-NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n-DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n-OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n-USE OR OTHER DEALINGS IN THE SOFTWARE.\n-\n-Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-or visit www.oracle.com if you need additional information or have any\n-questions.\n-\n-________________________________________________________________________\n-\n-'hsdis': A HotSpot plugin for disassembling dynamically generated code.\n-\n-The files in this directory are built independently of the HotSpot JVM.\n-\n-* Building\n-\n-To build this project you need a copy of GNU binutils to build against. It is\n-known to work with binutils 2.37. Building against versions older than 2.29 is\n-not supported. Download a copy of the software from\n-http:\/\/directory.fsf.org\/project\/binutils or one of its mirrors.\n-\n-To build this library, you must enable building in configure by \"bash configure\n---with-hsdis=binutils\".\n-\n-You must also specify where binutils is located. To facilitate building, you can\n-point to a place where the (unpacked) binutils sources are located using\n-\"--with-binutils-src=<location>\", and configure will build binutils for you. On\n-repeated runs, you can keep this command line option, since configure will\n-figure out that the binutils binaries are already present and skip building, or\n-you can replace it with \"--with-binutils=<location>\".\n-\n-If you have pre-built binutils binaries, you can point to them directly using\n-\"--with-binutils=<location>\".\n-\n-If you want to build hsdis with binutils provided by system\n-(e.g. binutils-devel from Fedora, binutils-dev from Ubuntu), you can pass\n-\"--with-binutils=system\". \"system\" is available on Linux only.\n-\n-When you have created a proper configuration, you can then build the hsdis\n-library using \"make build-hsdis\".\n-\n-* Building on Windows\n-\n-On Windows, the normal Microsoft Visual Studio toolchain cannot build binutils.\n-Instead we need to use the mingw compiler. This is available as a cygwin\n-package. You need to install the \"gcc-core\" and \"mingw64-x86_64-gcc-core\"\n-packages (or \"mingw64-i686-gcc-core\", if you want the 32-bit version) and\n-\"mingw64-x86_64-glib2.0\".\n-\n-* Installing\n-\n-To build the hsdis library, run \"make build-hsdis\". This will build the library\n-in a separate directory, but not make it available to the JDK in the\n-configuration. To actually install it in the JDK, run \"make install-hsdis\".\n-\n-Note: The resulting build may not be distributable. Please get legal advice if\n-you intend to distribute the result of your build.\n-\n-* Using the library\n-\n-The hsdis library will be automatically loaded by Hotspot when you use the\n-diagnostic option \"-XX:+PrintAssembly\". Note that since this is a diagnostic\n-option, you need to unlock these first, so in practice you activate it using\n-\"-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly\".\n-\n-More information is available at the wiki\n-[https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/PrintAssembly].\n","filename":"src\/utils\/hsdis\/README","additions":0,"deletions":102,"binary":false,"changes":102,"status":"deleted"},{"patch":"@@ -0,0 +1,133 @@\n+```\n+Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+\n+The Universal Permissive License (UPL), Version 1.0\n+\n+Subject to the condition set forth below, permission is hereby granted to\n+any person obtaining a copy of this software, associated documentation\n+and\/or data (collectively the \"Software\"), free of charge and under any\n+and all copyright rights in the Software, and any and all patent rights\n+owned or freely licensable by each licensor hereunder covering either (i)\n+the unmodified Software as contributed to or provided by such licensor,\n+or (ii) the Larger Works (as defined below), to deal in both\n+\n+(a) the Software, and\n+\n+(b) any piece of software and\/or hardware listed in the lrgrwrks.txt file\n+if one is included with the Software (each a \"Larger Work\" to which the\n+Software is contributed by such licensors),\n+\n+without restriction, including without limitation the rights to copy,\n+create derivative works of, display, perform, and distribute the Software\n+and make, use, sell, offer for sale, import, export, have made, and have\n+sold the Software and the Larger Work(s), and to sublicense the foregoing\n+rights on either these or other terms.\n+\n+This license is subject to the following condition:\n+\n+The above copyright notice and either this complete permission notice or\n+at a minimum a reference to the UPL must be included in all copies or\n+substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n+NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n+DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n+OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n+USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+or visit www.oracle.com if you need additional information or have any\n+questions.\n+```\n+\n+---\n+\n+# hsdis - a HotSpot plugin for disassembling dynamically generated code\n+\n+The files in this directory are built independently of the HotSpot JVM.\n+\n+hsdis is an interface exposed by Hotspot. There are several backends that\n+implement this interface, using different disassembly engines. Included in the\n+JDK is support for building hsdis with Capstone or GNU binutils. The interface\n+is fairly straightforward and easy to implement using other backends.\n+\n+## Building and installing\n+\n+To compile hsdis, you need to activate hsdis support, and select the proper\n+backend to use. This is done with the configure switch `--with-hsdis=<backend>`,\n+where `<backend>` is either `capstone` or `binutils`. For details, see the\n+sections on the respective backends below.\n+\n+To build the hsdis library, run `make build-hsdis`. This will build the library\n+in a separate directory, but not make it available to the JDK in the\n+configuration. To actually install it in the JDK, run `make install-hsdis`.\n+\n+**NOTE:** If you do this using the binutils backend, the resulting build may not\n+be distributable. Please get legal advice if you intend to distribute the result\n+of your build.\n+\n+## Using the library\n+\n+The hsdis library will be automatically loaded by Hotspot when you use the\n+diagnostic option `-XX:+PrintAssembly`. Note that since this is a diagnostic\n+option, you need to unlock these first, so in practice you activate it using\n+`-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly`.\n+\n+More information is available at the [HotSpot\n+wiki](https:\/\/wiki.openjdk.java.net\/display\/HotSpot\/PrintAssembly).\n+\n+## Building with Capstone\n+\n+To build this project using Capstone you need to have Capstone installed.\n+Typical ways of installation can be `sudo apt install libcapstone-dev` (on\n+Debian and derivatives), or `brew install capstone` (on macOS with Homebrew).\n+For Windows, you need to download the \"Core Engine\", and unzip it. See the\n+[Capstone Download\n+page](https:\/\/www.capstone-engine.org\/download.html#windows---core-engine-) for\n+up-to-date download links.\n+\n+This has been tested with Capstone v4.0.2, but earlier (and later) versions are\n+also likely to work.\n+\n+To build hsdis using Capstone, you must enable it in configure by `bash\n+configure --with-hsdis=capstone`.\n+\n+On Linux and macOS, the location Capstone can most often be auto-detected. If\n+this fails, or if you are building on Windows, you need to specify where\n+Capstone is located using `--with-capstone=<path>`. This path should point to\n+where you have extracted the Core Engine zip file.\n+\n+## Building with binutils\n+\n+To build this project using binutils you need a copy of GNU binutils to build\n+against. It is known to work with binutils 2.37. Building against versions older\n+than 2.29 is not supported. Download a copy of the software from [FSF binutils\n+page](http:\/\/directory.fsf.org\/project\/binutils) or one of its mirrors.\n+\n+To build this library, you must enable building in configure by `bash configure\n+--with-hsdis=binutils`.\n+\n+You must also specify where binutils is located. To facilitate building, you can\n+point to a place where the (unpacked) binutils sources are located using\n+`--with-binutils-src=<location>`, and configure will build binutils for you. On\n+repeated runs, you can keep this command line option, since configure will\n+figure out that the binutils binaries are already present and skip building, or\n+you can replace it with `--with-binutils=<location>`.\n+\n+If you have pre-built binutils binaries, you can point to them directly using\n+`--with-binutils=<location>`.\n+\n+If you want to build hsdis with binutils provided by system (e.g. binutils-devel\n+from Fedora, binutils-dev from Ubuntu), you can pass `--with-binutils=system`.\n+`system` is available on Linux only.\n+\n+### Building with binutils on Windows\n+\n+On Windows, the normal Microsoft Visual Studio toolchain cannot build binutils.\n+Instead we need to use the mingw compiler. This is available as a cygwin\n+package. You need to install the `gcc-core` and `mingw64-x86_64-gcc-core`\n+packages (or `mingw64-i686-gcc-core`, if you want the 32-bit version) and\n+`mingw64-x86_64-glib2.0`.\n","filename":"src\/utils\/hsdis\/README.md","additions":133,"deletions":0,"binary":false,"changes":133,"status":"added"},{"patch":"","filename":"src\/utils\/hsdis\/binutils\/hsdis-binutils.c","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/utils\/hsdis\/hsdis.c","status":"renamed"},{"patch":"@@ -0,0 +1,97 @@\n+\/*\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * The Universal Permissive License (UPL), Version 1.0\n+ *\n+ * Subject to the condition set forth below, permission is hereby granted to\n+ * any person obtaining a copy of this software, associated documentation\n+ * and\/or data (collectively the \"Software\"), free of charge and under any\n+ * and all copyright rights in the Software, and any and all patent rights\n+ * owned or freely licensable by each licensor hereunder covering either (i)\n+ * the unmodified Software as contributed to or provided by such licensor,\n+ * or (ii) the Larger Works (as defined below), to deal in both\n+ *\n+ * (a) the Software, and\n+ *\n+ * (b) any piece of software and\/or hardware listed in the lrgrwrks.txt file\n+ * if one is included with the Software (each a \"Larger Work\" to which the\n+ * Software is contributed by such licensors),\n+ *\n+ * without restriction, including without limitation the rights to copy,\n+ * create derivative works of, display, perform, and distribute the Software\n+ * and make, use, sell, offer for sale, import, export, have made, and have\n+ * sold the Software and the Larger Work(s), and to sublicense the foregoing\n+ * rights on either these or other terms.\n+ *\n+ * This license is subject to the following condition:\n+ *\n+ * The above copyright notice and either this complete permission notice or\n+ * at a minimum a reference to the UPL must be included in all copies or\n+ * substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+ * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+ * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n+ * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n+ * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n+ * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n+ * USE OR OTHER DEALINGS IN THE SOFTWARE.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/* hsdis.c -- dump a range of addresses as native instructions\n+   This implements the plugin protocol required by the\n+   HotSpot PrintAssembly option.\n+*\/\n+\n+#include <inttypes.h>\n+\n+#include <capstone.h>\n+\n+#include \"hsdis.h\"\n+\n+\/* short names for stuff in hsdis.h *\/\n+typedef decode_instructions_event_callback_ftype  event_callback_t;\n+typedef decode_instructions_printf_callback_ftype printf_callback_t;\n+\n+#define print(...) (*printf_callback) (printf_stream, __VA_ARGS__)\n+\n+#ifdef _WIN32\n+__declspec(dllexport)\n+#endif\n+void* decode_instructions_virtual(uintptr_t start_va, uintptr_t end_va,\n+                                  unsigned char* buffer, uintptr_t length,\n+                                  void* (*event_callback)(void*, const char*, void*),\n+                                  void* event_stream,\n+                                  int (*printf_callback)(void*, const char*, ...),\n+                                  void* printf_stream,\n+                                  const char* options,\n+                                  int newline \/* bool value for nice new line *\/) {\n+  csh cs_handle;\n+\n+  if (cs_open(CAPSTONE_ARCH, CAPSTONE_MODE, &cs_handle) != CS_ERR_OK) {\n+    print(\"Could not open cs_handle\");\n+    return NULL;\n+  }\n+\n+  \/\/ TODO: Support intel syntax\n+  cs_option(cs_handle, CS_OPT_SYNTAX, CS_OPT_SYNTAX_ATT);\n+\n+  cs_insn *insn;\n+  size_t count = cs_disasm(cs_handle, buffer, length, (uintptr_t) buffer, 0 , &insn);\n+  if (count) {\n+    for (unsigned int j = 0; j < count; j++) {\n+      print(\"  0x%\" PRIx64 \":\\t%s\\t\\t%s\\n\", insn[j].address, insn[j].mnemonic, insn[j].op_str);\n+    }\n+    cs_free(insn, count);\n+  }\n+\n+  cs_close(&cs_handle);\n+\n+  return NULL;\n+}\n","filename":"src\/utils\/hsdis\/capstone\/hsdis-capstone.c","additions":97,"deletions":0,"binary":false,"changes":97,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -75,0 +75,5 @@\n+#ifdef __cplusplus\n+extern \"C\"\n+{\n+#endif\n+\n@@ -76,2 +81,2 @@\n-#ifdef DLL_EXPORT\n-  DLL_EXPORT\n+#ifdef _WIN32\n+__declspec(dllexport)\n@@ -90,2 +95,2 @@\n-#ifdef DLL_ENTRY\n-  DLL_ENTRY\n+#ifdef _WIN32\n+__declspec(dllexport)\n@@ -118,0 +123,5 @@\n+\n+#ifdef __cplusplus\n+}\n+#endif\n+\n","filename":"src\/utils\/hsdis\/hsdis.h","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"}]}