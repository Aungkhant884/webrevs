{"files":[{"patch":"@@ -38,2 +38,0 @@\n-import java.security.Security;\n-import java.util.Arrays;\n@@ -43,0 +41,1 @@\n+import java.util.Objects;\n@@ -655,2 +654,2 @@\n-     void getCanonName() throws UnknownHostException {\n-         if (cnames != null || invalid || untrusted) {\n+    void getCanonName() throws UnknownHostException {\n+        if (cnames != null || invalid || untrusted) {\n@@ -658,1 +657,1 @@\n-         }\n+        }\n@@ -661,0 +660,7 @@\n+            \/\/ first get the IP addresses if we don't have them yet\n+            \/\/ this is because we need the IP address to then get\n+            \/\/ FQDN.\n+            if (addresses == null) {\n+                getIP();\n+            }\n+\n@@ -664,1 +670,1 @@\n-                    cnames = new String[]{addresses[0].getHostName(false).toLowerCase()};\n+                cnames = new String[]{addresses[0].getHostName(false).toLowerCase()};\n@@ -666,1 +672,1 @@\n-               cnames = new String[addresses.length];\n+                cnames = new String[addresses.length];\n@@ -669,2 +675,6 @@\n-                    cnames[index++] = InetAddress.getByName(inAdd.getHostAddress()).\n-                            getHostName(false).toLowerCase();\n+                    try {\n+                        cnames[index++] = InetAddress.getByName(inAdd.getHostAddress()).\n+                                getHostName(false).toLowerCase();\n+                    } catch (UnknownHostException ex) {\n+                        cnames[index - 1] = null;\n+                    }\n@@ -693,3 +703,3 @@\n-    private boolean matchArr(String[] cnames, String hname){\n-        for(String cname: cnames){\n-            if(match(cname, hname)){\n+    private boolean matchArr(String[] cnames, String hname) {\n+        for (String cname : cnames) {\n+            if (Objects.nonNull(cname) && match(cname, hname)) {\n@@ -817,1 +827,0 @@\n-\n@@ -923,1 +932,0 @@\n-\n@@ -937,1 +945,0 @@\n-\n@@ -953,1 +960,0 @@\n-\n@@ -973,1 +979,0 @@\n-\n@@ -982,1 +987,0 @@\n-\n@@ -1000,2 +1004,1 @@\n-\n-                return (this.cnames[0].equalsIgnoreCase(that.cnames[0]));\n+                return this.cnames[0].equalsIgnoreCase(that.cnames[0]);\n","filename":"src\/java.base\/share\/classes\/java\/net\/SocketPermission.java","additions":23,"deletions":20,"binary":false,"changes":43,"status":"modified"},{"patch":"@@ -11,0 +11,1 @@\n+import java.io.File;\n@@ -13,4 +14,4 @@\n-           public static void main(String[] args) throws Exception {\n-             String hostname = \"www.exmp.com\";\n-             String hostsFileName = System.getProperty(\"test.src\", \".\") + File.separator + \"Host.txt\";\n-             System.setProperty(\"jdk.net.hosts.file\", hostsFileName);\n+    public static void main(String[] args) throws Exception {\n+        String hostname = \"www.exmp.com\";\n+        String hostsFileName = System.getProperty(\"test.src\", \".\") + File.separator + \"Host.txt\";\n+        System.setProperty(\"jdk.net.hosts.file\", hostsFileName);\n@@ -18,2 +19,2 @@\n-             int testPass = 0;\n-             SocketPermission sp = new SocketPermission(hostname, \"connect,resolve\");\n+        int testPass = 0;\n+        SocketPermission sp = new SocketPermission(hostname, \"connect,resolve\");\n@@ -21,9 +22,9 @@\n-             do{\n-                    if (!sp.implies(new SocketPermission(hostname, \"connect,resolve\"))) {\n-                              System.out.println(\"Expected true, returned false\");\n-                              break;\n-                     }\n-                     addIpToHostsFile(hostname, \"1.2.3.\"+testPass, hostsFileName);\n-                     Thread.sleep(1000);\n-                testPass++;\n-               }while(testPass <= 2);\n+            do {\n+                   if (!sp.implies(new SocketPermission(hostname, \"connect,resolve\"))) {\n+                       System.out.println(\"Expected true, returned false\");\n+                       break;\n+                   }\n+                   addIpToHostsFile(hostname, \"1.2.3.\"+testPass, hostsFileName);\n+                   Thread.sleep(1000);\n+                   testPass++;\n+               } while (testPass <= 2);\n","filename":"test\/jdk\/java\/net\/SocketPermission\/SocketPermissionIm.java","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"}]}