{"files":[{"patch":"@@ -39,0 +39,1 @@\n+import java.util.Arrays;\n@@ -210,1 +211,1 @@\n-    private transient String cname;\n+    private transient String[] cnames;\n@@ -460,1 +461,1 @@\n-                cname = \"\";\n+                cnames = new String[]{\"\"};\n@@ -462,1 +463,1 @@\n-                cname = host.substring(1).toLowerCase();\n+                cnames = new String[]{host.substring(1).toLowerCase()};\n@@ -627,1 +628,1 @@\n-                if (this.cname == null) {\n+                if (this.cnames == null) {\n@@ -630,1 +631,1 @@\n-                if (!match(cname, hostname)) {\n+                if (!matchArr(cnames, hostname)) {\n@@ -636,1 +637,1 @@\n-                            debug.println(\"socket access restriction: proxied host \" + \"(\" + addresses[0] + \")\" + \" does not match \" + cname + \" from reverse lookup\");\n+                            debug.println(\"socket access restriction: proxied host \" + \"(\" + addresses[0] + \")\" + \" does not match \" + cnames[0] + \" from reverse lookup\");\n@@ -655,1 +656,1 @@\n-         if (invalid || untrusted) {\n+         if (cnames != null || invalid || untrusted) {\n@@ -663,3 +664,1 @@\n-                if (cname == null) {\n-                    cname = addresses[0].getHostName(false).toLowerCase();\n-                }\n+                    cnames = new String[]{addresses[0].getHostName(false).toLowerCase()};\n@@ -667,5 +666,6 @@\n-               \/\/ Always calls getIP(), this will make sure that if order of IP\n-               \/\/ addresses changed then cname also get's change.\n-                 getIP();\n-                 cname = InetAddress.getByName(addresses[0].getHostAddress()).\n-                               getHostName(false).toLowerCase();\n+               cnames = new String[addresses.length];\n+                int index = 0;\n+                for (InetAddress inAdd : addresses) {\n+                    cnames[index++] = InetAddress.getByName(inAdd.getHostAddress()).\n+                            getHostName(false).toLowerCase();\n+                }\n@@ -693,0 +693,9 @@\n+    private boolean matchArr(String[] cnames, String hname){\n+        for(String cname: cnames){\n+            if(match(cname, hname)){\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n@@ -916,1 +925,1 @@\n-        if (this.wildcard && \"\".equals(this.cname))\n+        if (this.wildcard && \"\".equals(this.cnames[0]))\n@@ -951,1 +960,1 @@\n-                    return (that.cname.endsWith(this.cname));\n+                    return (that.cnames[0].endsWith(this.cnames[0]));\n@@ -957,1 +966,1 @@\n-                \/\/ this is a wildcard, lets see if that's cname ends with\n+                \/\/ this is a wildcard, lets see if that's cnames ends with\n@@ -959,1 +968,1 @@\n-                if (that.cname == null) {\n+                if (that.cnames == null) {\n@@ -962,1 +971,1 @@\n-                return (that.cname.endsWith(this.cname));\n+                return (that.cnames[0].endsWith(this.cnames[0]));\n@@ -984,1 +993,1 @@\n-                if (this.cname == null) {\n+                if (this.cnames == null) {\n@@ -988,1 +997,1 @@\n-                if (that.cname == null) {\n+                if (that.cnames == null) {\n@@ -992,1 +1001,1 @@\n-                return (this.cname.equalsIgnoreCase(that.cname));\n+                return (this.cnames[0].equalsIgnoreCase(that.cnames[0]));\n@@ -1014,1 +1023,1 @@\n-            final int cnameLength = this.cname.length();\n+            final int cnameLength = this.cnames[0].length();\n@@ -1017,1 +1026,1 @@\n-                                          this.cname, 0, cnameLength);\n+                                          this.cnames[0], 0, cnameLength);\n@@ -1081,2 +1090,2 @@\n-        if (this.cname != null) {\n-            return this.cname.equalsIgnoreCase(that.cname);\n+        if (this.cnames != null) {\n+            return this.cnames[0].equalsIgnoreCase(that.cnames[0]);\n@@ -1112,1 +1121,1 @@\n-        if (invalid || cname == null)\n+        if (invalid || cnames == null)\n@@ -1115,1 +1124,1 @@\n-            return this.cname.hashCode();\n+            return this.cnames[0].hashCode();\n","filename":"src\/java.base\/share\/classes\/java\/net\/SocketPermission.java","additions":38,"deletions":29,"binary":false,"changes":67,"status":"modified"}]}