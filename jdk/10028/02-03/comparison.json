{"files":[{"patch":"@@ -211,1 +211,1 @@\n-  \/\/ Print  a hint as to the underlying integer representation.\n+  \/\/ Print a hint as to the underlying integer representation.\n@@ -223,14 +223,12 @@\n-    if (ft == T_LONG || ft == T_DOUBLE) {\n-      st->print(\" (\" PTR64_FORMAT \")\", obj->long_field(offset()));\n-    } else {\n-      switch (ft) {\n-        case T_BYTE:    st->print(\" (\" PTR8_FORMAT  \")\", obj->byte_field(offset()));  break;\n-        case T_CHAR:    st->print(\" (\" PTR16_FORMAT \")\", obj->char_field(offset()));  break;\n-        case T_FLOAT:   st->print(\" (\" PTR32_FORMAT \")\", obj->int_field(offset()));   break;\n-        case T_INT:     st->print(\" (\" PTR32_FORMAT \")\", obj->int_field(offset()));   break;\n-        case T_SHORT:   st->print(\" (\" PTR16_FORMAT \")\", obj->short_field(offset())); break;\n-        case T_BOOLEAN: st->print(\" (\" PTR8_FORMAT  \")\", obj->bool_field(offset()));  break;\n-      default:\n-        ShouldNotReachHere();\n-        break;\n-      }\n+    switch (ft) {\n+      case T_LONG:    st->print(\" (\" PTR_FORMAT   \")\", obj->long_field(offset()));  break;\n+      case T_DOUBLE:  st->print(\" (\" PTR_FORMAT   \")\", obj->long_field(offset()));  break;\n+      case T_BYTE:    st->print(\" (\" PTR8_FORMAT  \")\", obj->byte_field(offset()));  break;\n+      case T_CHAR:    st->print(\" (\" PTR16_FORMAT \")\", obj->char_field(offset()));  break;\n+      case T_FLOAT:   st->print(\" (\" PTR32_FORMAT \")\", obj->int_field(offset()));   break;\n+      case T_INT:     st->print(\" (\" PTR32_FORMAT \")\", obj->int_field(offset()));   break;\n+      case T_SHORT:   st->print(\" (\" PTR16_FORMAT \")\", obj->short_field(offset())); break;\n+      case T_BOOLEAN: st->print(\" (\" PTR8_FORMAT  \")\", obj->bool_field(offset()));  break;\n+    default:\n+      ShouldNotReachHere();\n+      break;\n","filename":"src\/hotspot\/share\/runtime\/fieldDescriptor.cpp","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"}]}