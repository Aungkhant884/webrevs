{"files":[{"patch":"@@ -46,2 +46,2 @@\n-     * Tests the containment of standard charsets against itself and the\n-     * other standard charset values. This test takes both true and false for 'cont'.\n+     * Tests the containment of some charsets against themselves.\n+     * This test takes both true and false for 'cont'.\n@@ -50,2 +50,2 @@\n-    @MethodSource(\"standardCharsets\")\n-    public void standardCharsetsTest(Charset containerCs, Charset cs, boolean cont){\n+    @MethodSource(\"charsets\")\n+    public void charsetsTest(Charset containerCs, Charset cs, boolean cont){\n@@ -158,1 +158,1 @@\n-    private static Stream<Arguments> standardCharsets() {\n+    private static Stream<Arguments> charsets() {\n","filename":"test\/jdk\/java\/nio\/charset\/Charset\/Contains.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ *\/\n+\n+import java.nio.charset.*;\n+\n+\n+public class Default {\n+\n+    public static void main(String[] args) {\n+        System.out.println(Charset.defaultCharset());\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/nio\/charset\/Charset\/Default.java","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -25,1 +25,1 @@\n- * @bug 4448594 4786884 6330020 8184665 8260265\n+ * @bug 4448594 4786884 6330020 8184665\n@@ -35,1 +35,0 @@\n-import java.nio.charset.UnsupportedCharsetException;\n@@ -46,7 +45,0 @@\n-    \/\/ Charset.forName should throw an exception when passed \"default\"\n-    @Test\n-    public void defaultCharsetTest() {\n-        assertThrows(UnsupportedCharsetException.class,\n-                () -> Charset.forName(\"default\"));\n-    }\n-\n","filename":"test\/jdk\/java\/nio\/charset\/Charset\/IllegalCharsetName.java","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n-        6911753 8071447 8186751 8242541 8301119\n+        6911753 8071447 8186751 8242541 8260265 8301119\n@@ -34,0 +34,1 @@\n+import java.nio.charset.UnsupportedCharsetException;\n@@ -36,0 +37,1 @@\n+import org.junit.jupiter.api.Test;\n@@ -41,0 +43,1 @@\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n@@ -44,0 +47,7 @@\n+    \/\/ Charset.forName should throw an exception when passed \"default\"\n+    @Test\n+    public void defaultCharsetTest() {\n+        assertThrows(UnsupportedCharsetException.class,\n+                () -> Charset.forName(\"default\"));\n+    }\n+\n","filename":"test\/jdk\/java\/nio\/charset\/Charset\/RegisteredCharsets.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}