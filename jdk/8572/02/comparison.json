{"files":[{"patch":"@@ -355,1 +355,0 @@\n-  bool             _par;\n@@ -361,3 +360,2 @@\n-  VerifyRegionClosure(bool par, VerifyOption vo)\n-    : _par(par),\n-      _vo(vo),\n+  VerifyRegionClosure(VerifyOption vo)\n+    : _vo(vo),\n@@ -418,1 +416,1 @@\n-\/\/ This is the task used for parallel verification of the heap regions\n+\/\/ This is the task used for verification of the heap regions\n@@ -420,1 +418,1 @@\n-class G1ParVerifyTask: public WorkerTask {\n+class G1VerifyTask: public WorkerTask {\n@@ -430,2 +428,2 @@\n-  G1ParVerifyTask(G1CollectedHeap* g1h, VerifyOption vo) :\n-      WorkerTask(\"Parallel verify task\"),\n+  G1VerifyTask(G1CollectedHeap* g1h, VerifyOption vo) :\n+      WorkerTask(\"Verify task\"),\n@@ -442,1 +440,1 @@\n-    VerifyRegionClosure blk(true, _vo);\n+    VerifyRegionClosure blk(_vo);\n@@ -494,7 +492,0 @@\n-  if (GCParallelVerificationEnabled && ParallelGCThreads > 1) {\n-\n-    G1ParVerifyTask task(_g1h, vo);\n-    _g1h->workers()->run_task(&task);\n-    if (task.failures()) {\n-      failures = true;\n-    }\n@@ -502,6 +493,5 @@\n-  } else {\n-    VerifyRegionClosure blk(false, vo);\n-    _g1h->heap_region_iterate(&blk);\n-    if (blk.failures()) {\n-      failures = true;\n-    }\n+  uint num_workers = GCParallelVerificationEnabled ? _g1h->workers()->active_workers() : 1u;\n+  G1VerifyTask task(_g1h, vo);\n+  _g1h->workers()->run_task(&task, num_workers);\n+  if (task.failures()) {\n+    failures = true;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.cpp","additions":12,"deletions":22,"binary":false,"changes":34,"status":"modified"}]}