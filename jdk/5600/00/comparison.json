{"files":[{"patch":"@@ -84,1 +84,0 @@\n-  const bool _is_young;\n@@ -99,1 +98,0 @@\n-    _is_young(hr->is_young()),\n@@ -146,8 +144,13 @@\n-      \/\/ During evacuation failure we do not record inter-region\n-      \/\/ references referencing regions that need a remembered set\n-      \/\/ update originating from young regions (including eden) that\n-      \/\/ failed evacuation. Make up for that omission now by rescanning\n-      \/\/ these failed objects.\n-      if (_is_young) {\n-        obj->oop_iterate(_log_buffer_cl);\n-      }\n+      \/\/ While we were processing RSet buffers during the collection,\n+      \/\/ we actually didn't scan any cards on the collection set,\n+      \/\/ since we didn't want to update remembered sets with entries\n+      \/\/ that point into the collection set, given that live objects\n+      \/\/ from the collection set are about to move and such entries\n+      \/\/ will be stale very soon.\n+      \/\/ This change also dealt with a reliability issue which\n+      \/\/ involved scanning a card in the collection set and coming\n+      \/\/ across an array that was being chunked and looking malformed.\n+      \/\/ The problem is that, if evacuation fails, we might have\n+      \/\/ remembered set entries missing given that we skipped cards on\n+      \/\/ the collection set. So, we'll recreate such entries now.\n+      obj->oop_iterate(_log_buffer_cl);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp","additions":13,"deletions":10,"binary":false,"changes":23,"status":"modified"}]}