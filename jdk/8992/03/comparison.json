{"files":[{"patch":"@@ -400,6 +400,2 @@\n-      if (thread->is_handshake_safe_for(current)) {\n-        op.do_thread(thread);\n-      } else {\n-        Handshake::execute(&op, thread);\n-        guarantee(op.completed(), \"Handshake failed. Target thread is not alive?\");\n-      }\n+      Handshake::execute(&op, thread);\n+      guarantee(op.completed(), \"Handshake failed. Target thread is not alive?\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvThreadState.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -370,7 +370,3 @@\n-  if (target->is_handshake_safe_for(current)) {\n-    hs.do_thread(target);\n-  } else {\n-    assert(state->get_thread() != NULL, \"sanity check\");\n-    Handshake::execute(&hs, target);\n-    guarantee(hs.completed(), \"Handshake failed: Target thread is not alive?\");\n-  }\n+  assert(state->get_thread() != NULL, \"sanity check\");\n+  Handshake::execute(&hs, target);\n+  guarantee(hs.completed(), \"Handshake failed: Target thread is not alive?\");\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -355,0 +355,5 @@\n+  if (target->is_handshake_safe_for(self)) {\n+    hs_cl->do_thread(target);\n+    return;\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/handshake.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}