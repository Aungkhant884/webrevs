{"files":[{"patch":"@@ -209,1 +209,1 @@\n-        FontManager fm = FontManagerFactory.getInstance();\n+        CFontManager fm = (CFontManager) FontManagerFactory.getInstance();\n@@ -225,1 +225,1 @@\n-            Font2D f2d = fm.findFont2D(s, Font.PLAIN, FontManager.NO_FALLBACK);\n+            Font2D f2d = fm.getOrCreateFallbackFont(s);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFont.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,0 +36,1 @@\n+import java.util.Map;\n@@ -38,0 +39,1 @@\n+import java.util.concurrent.ConcurrentHashMap;\n@@ -48,0 +50,1 @@\n+    private final Map<String, Font2D> fallbackFonts = new ConcurrentHashMap<>();\n@@ -324,0 +327,13 @@\n+\n+    Font2D getOrCreateFallbackFont(String fontName) {\n+        Font2D font2D = findFont2D(fontName, Font.PLAIN, FontManager.NO_FALLBACK);\n+        if (font2D != null || fontName.startsWith(\".\")) {\n+            return font2D;\n+        } else {\n+            \/\/ macOS doesn't list some system fonts in [NSFontManager availableFontFamilies] output,\n+            \/\/ so they are not registered in font manager as part of 'loadNativeFonts'.\n+            \/\/ These fonts are present in [NSFontManager availableFonts] output though,\n+            \/\/ and can be accessed in the same way as other system fonts.\n+            return fallbackFonts.computeIfAbsent(fontName, name -> new CFont(name, null));\n+        }\n+    }\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/font\/CFontManager.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}