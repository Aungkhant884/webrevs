{"files":[{"patch":"@@ -249,1 +249,1 @@\n-bool G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTask::should_execute() {\n+bool G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTaskProxy::should_execute() {\n@@ -253,2 +253,4 @@\n-G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTask::RestorePreservedMarksTask(PreservedMarksSet* preserved_marks) :\n-  G1AbstractSubTask(G1GCPhaseTimes::RestorePreservedMarks), _preserved_marks(preserved_marks), _task(preserved_marks->create_task()) { }\n+G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTaskProxy::RestorePreservedMarksTaskProxy(PreservedMarksSet* preserved_marks) :\n+  G1AbstractSubTask(G1GCPhaseTimes::RestorePreservedMarks),\n+  _preserved_marks(preserved_marks),\n+  _task(preserved_marks) { }\n@@ -256,5 +258,1 @@\n-G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTask::~RestorePreservedMarksTask() {\n-  delete _task;\n-}\n-\n-double G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTask::worker_cost() const {\n+double G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTaskProxy::worker_cost() const {\n@@ -265,2 +263,2 @@\n-void G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTask::do_work(uint worker_id) {\n-  _task->work(worker_id);\n+void G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTaskProxy::do_work(uint worker_id) {\n+  _task.work(worker_id);\n@@ -601,2 +599,2 @@\n-  if (RestorePreservedMarksTask::should_execute()) {\n-    add_parallel_task(new RestorePreservedMarksTask(preserved_marks_set));\n+  if (RestorePreservedMarksTaskProxy::should_execute()) {\n+    add_parallel_task(new RestorePreservedMarksTaskProxy(preserved_marks_set));\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/preservedMarks.hpp\"\n@@ -101,1 +102,1 @@\n-  class RestorePreservedMarksTask;\n+  class RestorePreservedMarksTaskProxy;\n@@ -151,1 +152,1 @@\n-class G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTask : public G1AbstractSubTask {\n+class G1PostEvacuateCollectionSetCleanupTask2::RestorePreservedMarksTaskProxy : public G1AbstractSubTask {\n@@ -153,1 +154,1 @@\n-  AbstractGangTask* _task;\n+  RestorePreservedMarksTask _task;\n@@ -156,2 +157,1 @@\n-  RestorePreservedMarksTask(PreservedMarksSet* preserved_marks);\n-  virtual ~RestorePreservedMarksTask();\n+  RestorePreservedMarksTaskProxy(PreservedMarksSet* preserved_marks);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -95,14 +95,4 @@\n-class RestorePreservedMarksTask : public AbstractGangTask {\n-  PreservedMarksSet* const _preserved_marks_set;\n-  SequentialSubTasksDone _sub_tasks;\n-  volatile size_t _total_size;\n-#ifdef ASSERT\n-  size_t _total_size_before;\n-#endif \/\/ ASSERT\n-\n-public:\n-  void work(uint worker_id) override {\n-    uint task_id = 0;\n-    while (_sub_tasks.try_claim_task(task_id)) {\n-      _preserved_marks_set->get(task_id)->restore_and_increment(&_total_size);\n-    }\n+void RestorePreservedMarksTask::work(uint worker_id) {\n+  uint task_id = 0;\n+  while (_sub_tasks.try_claim_task(task_id)) {\n+    _preserved_marks_set->get(task_id)->restore_and_increment(&_total_size);\n@@ -110,0 +100,1 @@\n+}\n@@ -111,6 +102,6 @@\n-  RestorePreservedMarksTask(PreservedMarksSet* preserved_marks_set)\n-    : AbstractGangTask(\"Restore Preserved Marks\"),\n-      _preserved_marks_set(preserved_marks_set),\n-      _sub_tasks(preserved_marks_set->num()),\n-      _total_size(0)\n-      DEBUG_ONLY(COMMA _total_size_before(0)) {\n+RestorePreservedMarksTask::RestorePreservedMarksTask(PreservedMarksSet* preserved_marks_set)\n+  : AbstractGangTask(\"Restore Preserved Marks\"),\n+    _preserved_marks_set(preserved_marks_set),\n+    _sub_tasks(preserved_marks_set->num()),\n+    _total_size(0)\n+    DEBUG_ONLY(COMMA _total_size_before(0)) {\n@@ -118,5 +109,3 @@\n-    \/\/ This is to make sure the total_size we'll calculate below is correct.\n-    for (uint i = 0; i < _preserved_marks_set->num(); ++i) {\n-      _total_size_before += _preserved_marks_set->get(i)->size();\n-    }\n-#endif \/\/ ASSERT\n+  \/\/ This is to make sure the total_size we'll calculate below is correct.\n+  for (uint i = 0; i < _preserved_marks_set->num(); ++i) {\n+    _total_size_before += _preserved_marks_set->get(i)->size();\n@@ -124,0 +113,2 @@\n+#endif \/\/ ASSERT\n+}\n@@ -125,2 +116,2 @@\n-  ~RestorePreservedMarksTask() {\n-    assert(_total_size == _total_size_before, \"total_size = %zu before = %zu\", _total_size, _total_size_before);\n+RestorePreservedMarksTask::~RestorePreservedMarksTask() {\n+  assert(_total_size == _total_size_before, \"total_size = %zu before = %zu\", _total_size, _total_size_before);\n@@ -128,3 +119,2 @@\n-    log_trace(gc)(\"Restored %zu marks\", _total_size);\n-  }\n-};\n+  log_trace(gc)(\"Restored %zu marks\", _total_size);\n+}\n@@ -145,4 +135,0 @@\n-AbstractGangTask* PreservedMarksSet::create_task() {\n-  return new RestorePreservedMarksTask(this);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.cpp","additions":20,"deletions":34,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"workgroup.hpp\"\n@@ -117,2 +118,0 @@\n-  AbstractGangTask* create_task();\n-\n@@ -133,0 +132,16 @@\n+class RestorePreservedMarksTask : public AbstractGangTask {\n+  PreservedMarksSet* const _preserved_marks_set;\n+  SequentialSubTasksDone _sub_tasks;\n+  volatile size_t _total_size;\n+#ifdef ASSERT\n+  size_t _total_size_before;\n+#endif \/\/ ASSERT\n+\n+public:\n+  void work(uint worker_id) override;\n+\n+  explicit RestorePreservedMarksTask(PreservedMarksSet* preserved_marks_set);\n+\n+  ~RestorePreservedMarksTask();\n+};\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/preservedMarks.hpp","additions":17,"deletions":2,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n-class AbstractGangTask : public CHeapObj<mtInternal> {\n+class AbstractGangTask {\n","filename":"src\/hotspot\/share\/gc\/shared\/workgroup.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}