[{"commit":{"message":"8264020: Optimize double negation elimination\n\nFor the double negation '-(-x)', c2 could reduce the redundant 'sub'\nthrough SubNode::Ideal. But every time when 'sub' is removed, there\nwould generate two useless nodes SubNode(x, 0)[1] and AddNode(x, -0)[2],\nwhich would be removed by later phases but should have optimized better\nto 'x' itself without generating those new stuffs.\n\nThis patch is a small fix for SubNode's Ideal, by leaving this special\ncase to 'Identity' which handled double negation already[3].\n\n[1] https:\/\/github.com\/openjdk\/jdk\/blob\/master\/src\/hotspot\/share\/opto\/subnode.cpp#L238\n[2] https:\/\/github.com\/openjdk\/jdk\/blob\/master\/src\/hotspot\/share\/opto\/subnode.cpp#L181\n[3] https:\/\/github.com\/openjdk\/jdk\/blob\/master\/src\/hotspot\/share\/opto\/subnode.cpp#L55\n\nChange-Id: I5597e43001a4593b32b1bb25d4a4bef0ba1bcc09"},"files":[{"filename":"src\/hotspot\/share\/opto\/subnode.cpp"}],"sha":"934fe11d8962ff0720b74cf85954b33a1556d18a"}]