{"files":[{"patch":"@@ -31,1 +31,0 @@\n-import java.util.List;\n@@ -44,2 +43,1 @@\n-    private HexDumpReader() {\n-    }\n+    private HexDumpReader() {}\n@@ -47,2 +45,12 @@\n-    \/\/ Converts a Hex dump file (String) into an InputStream containing bytes\n-    public static InputStream getStreamFromHexDump(String fileName) {\n+    \/*\n+     * Converts a Hex dump file given by the String name into an InputStream\n+     * containing bytes. The expected format of the file should be given as lines\n+     * that are either:\n+     *  - Valid hexadecimal value(s) (two hexadecimal characters) combined with no\n+     *    spaces between. E.g. \"ace95365\" represents four hexadecimal values.\n+     *    There should not be an odd amount of hexadecimal characters. E.g. \"ace\"\n+     *  - Contain leading comments given by '#' (which are ignored). E.g. \"#foo\"\n+     *    Non-leading comments are not allowed. E.g. \"ace953 #foo\"\n+     *  - Empty (which are ignored).\n+     *\/\n+    public static InputStream getStreamFromHexDump(String fileName) throws IOException {\n@@ -53,13 +61,9 @@\n-    \/\/ Converts a Hex dump file (File) into an InputStream containing bytes\n-    public static InputStream getStreamFromHexDump(File hexFile) {\n-        List<String> lines;\n-        try {\n-            lines = Files.readAllLines(hexFile.toPath(), StandardCharsets.UTF_8);\n-        } catch (IOException e) {\n-            throw new RuntimeException(String.format(\"Utility class HexDumpReader\" +\n-                    \" threw %s when trying to read the file %s\", e, hexFile.getName()));\n-        }\n-        \/\/ Grab all non-empty lines up until a '#' if one exists\n-        String hexString = lines.stream().map(String::trim)\n-                .map(s -> (s.contains(\"#\")) ? s.substring(0, s.indexOf(\"#\")).trim() : s)\n-                .filter(s -> !s.isEmpty()).collect(Collectors.joining());\n+    \/\/ Overloaded version of getStreamFromHexDump() that takes the File itself as input.\n+    public static InputStream getStreamFromHexDump(File hexFile) throws IOException {\n+        \/\/ This hexString should only consist of valid hexadecimal digits and be even\n+        \/\/ otherwise an exception will be thrown when converting to bytes\n+        String hexString = Files.readAllLines(hexFile.toPath(), StandardCharsets.UTF_8)\n+                .stream()\n+                .map(String::trim)\n+                .filter(s -> !s.isEmpty() && !s.startsWith(\"#\"))\n+                .collect(Collectors.joining());\n","filename":"test\/jdk\/java\/text\/testlib\/HexDumpReader.java","additions":22,"deletions":18,"binary":false,"changes":40,"status":"modified"}]}