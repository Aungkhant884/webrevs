{"files":[{"patch":"@@ -24,1 +24,0 @@\n-import java.io.BufferedReader;\n@@ -27,1 +26,1 @@\n-import java.io.FileInputStream;\n+import java.io.IOException;\n@@ -29,1 +28,0 @@\n-import java.io.InputStreamReader;\n@@ -31,2 +29,3 @@\n-import java.util.ArrayList;\n-import java.util.List;\n+import java.nio.file.Files;\n+import java.util.HexFormat;\n+import java.util.stream.Collectors;\n@@ -46,1 +45,12 @@\n-    public static InputStream getStreamFromHexDump(String fileName) {\n+    \/*\n+     * Converts a Hex dump file given by the String name into an InputStream\n+     * containing bytes. The expected format of the file should be given as lines\n+     * that are either:\n+     *  - Valid hexadecimal value(s) (two hexadecimal characters) combined with no\n+     *    spaces between. E.g. \"ace95365\" represents four hexadecimal values.\n+     *    There should not be an odd amount of hexadecimal characters. E.g. \"ace\"\n+     *  - Contain leading comments given by '#' (which are ignored). E.g. \"#foo\"\n+     *    Non-leading comments are not allowed. E.g. \"ace953 #foo\"\n+     *  - Empty (which are ignored).\n+     *\/\n+    public static InputStream getStreamFromHexDump(String fileName) throws IOException {\n@@ -48,1 +58,1 @@\n-                                             fileName));\n+                fileName));\n@@ -51,30 +61,12 @@\n-    public static InputStream getStreamFromHexDump(File hexFile) {\n-        ByteArrayBuilder bab = new ByteArrayBuilder();\n-        int lineNo = 0;\n-        try (BufferedReader reader\n-                 = new BufferedReader(new InputStreamReader(new FileInputStream(hexFile),\n-                StandardCharsets.US_ASCII))) {\n-            String line;\n-            while ((line = reader.readLine()) != null) {\n-                lineNo++;\n-                line = line.trim();\n-                \/\/ Skip blank and comment lines.\n-                if (line.length() == 0) {\n-                    continue;\n-                }\n-                int x = line.indexOf('#');\n-                if (x == 0) {\n-                    continue;\n-                }\n-                if (x > 0) {\n-                    line = line.substring(0, x).trim();\n-                }\n-                int len = line.length();\n-                for (int i = 0; i < len; i += 2) {\n-                    bab.put((byte)Integer.parseInt(line, i, i + 2, 16));\n-                }\n-            }\n-        } catch (Exception e) {\n-            throw new RuntimeException(hexFile.getName() + \":error:\" + lineNo + \": \" + e, e);\n-        }\n-        return new ByteArrayInputStream(bab.toArray());\n+    \/\/ Overloaded version of getStreamFromHexDump() that takes the File itself as input.\n+    public static InputStream getStreamFromHexDump(File hexFile) throws IOException {\n+        \/\/ This hexString should only consist of valid hexadecimal digits and be even\n+        \/\/ otherwise an exception will be thrown when converting to bytes\n+        String hexString = Files.readAllLines(hexFile.toPath(), StandardCharsets.UTF_8)\n+                .stream()\n+                .map(String::trim)\n+                .filter(s -> !s.isEmpty() && !s.startsWith(\"#\"))\n+                .collect(Collectors.joining());\n+        \/\/ Iterate the hex string and convert it to bytes\n+        byte[] bArray = HexFormat.of().parseHex(hexString);\n+        return new ByteArrayInputStream(bArray);\n@@ -82,38 +74,0 @@\n-\n-\n-    private static class ByteArrayBuilder {\n-        private static final int BUFFER_SIZE = 4096;\n-\n-        private int size;\n-        private List<byte[]> bytes;\n-        private byte[] current;\n-        private int offset;\n-\n-        ByteArrayBuilder() {\n-            bytes = new ArrayList<>();\n-            current = new byte[BUFFER_SIZE];\n-        }\n-\n-        void put(byte b) {\n-            if (offset == BUFFER_SIZE) {\n-                bytes.add(current);\n-                current = new byte[BUFFER_SIZE];\n-                offset = 0;\n-            }\n-            current[offset++] = b;\n-            size++;\n-        }\n-\n-        byte[] toArray() {\n-            byte[] buf = new byte[size];\n-            int ptr = 0;\n-            for (byte[] ba : bytes) {\n-                System.arraycopy(ba, 0, buf, ptr, ba.length);\n-                ptr += ba.length;\n-            }\n-            System.arraycopy(current, 0, buf, ptr, offset);\n-            assert ptr + offset == size;\n-            return buf;\n-        }\n-    }\n-\n","filename":"test\/jdk\/java\/text\/testlib\/HexDumpReader.java","additions":29,"deletions":75,"binary":false,"changes":104,"status":"modified"}]}