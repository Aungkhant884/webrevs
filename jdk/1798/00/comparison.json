{"files":[{"patch":"@@ -4230,1 +4230,0 @@\n-  \/\/ whitelist AccessControlContexts created by the JVM\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -143,1 +143,1 @@\n-  \/\/ The 'is_intrinsic_supported' method is a white list, that is,\n+  \/\/ The 'is_intrinsic_supported' method is an allow-list, that is,\n","filename":"src\/hotspot\/share\/compiler\/abstractCompiler.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -266,1 +266,1 @@\n-static bool is_classloader_klass_whitelisted(const Klass* k) {\n+static bool is_classloader_klass_allowed(const Klass* k) {\n@@ -278,1 +278,1 @@\n-    if (is_classloader_klass_whitelisted(current)) {\n+    if (is_classloader_klass_allowed(current)) {\n","filename":"src\/hotspot\/share\/jfr\/recorder\/checkpoint\/types\/jfrTypeSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-static bool is_whitelisted(const Klass* k) {\n+static bool is_allowed(const Klass* k) {\n@@ -90,1 +90,1 @@\n-    if (is_whitelisted(current)) {\n+    if (is_allowed(current)) {\n@@ -115,1 +115,1 @@\n-    assert(is_whitelisted(k), \"invariant\");\n+    assert(is_allowed(k), \"invariant\");\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrJdkJfrEvent.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -44939,5 +44939,0 @@\n-blacklist\n-blacklisted\n-blacklister\n-blacklisting\n-blacklists\n@@ -71940,1 +71935,0 @@\n-chop-chop\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/stemmer\/words","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}