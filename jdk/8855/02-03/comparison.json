{"files":[{"patch":"@@ -658,17 +658,12 @@\n-        if (count == 1) {\n-            return MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n-                    1 + pos \/\/ selected arguments\n-            );\n-        } else if (count == 2) {\n-            return MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n-                    1 + pos, 2 + pos \/\/ selected arguments\n-            );\n-        } else if (count == 3) {\n-            return MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n-                    1 + pos, 2 + pos, 3 + pos \/\/ selected arguments\n-            );\n-        } else {\n-            return MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n-                    1 + pos, 2 + pos, 3 + pos, 4 + pos \/\/ selected arguments\n-            );\n-        }\n+        \/\/ apply selected arguments on the 1-4 arg mixer and fold in the result\n+        return switch (count) {\n+            case 1 -> MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n+                    1 + pos);\n+            case 2 -> MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n+                    1 + pos, 2 + pos);\n+            case 3 -> MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n+                    1 + pos, 2 + pos, 3 + pos);\n+            case 4 -> MethodHandles.foldArgumentsWithCombiner(mh, 0, mix,\n+                    1 + pos, 2 + pos, 3 + pos, 4 + pos);\n+            default -> throw new IllegalArgumentException();\n+        };\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/StringConcatFactory.java","additions":12,"deletions":17,"binary":false,"changes":29,"status":"modified"}]}