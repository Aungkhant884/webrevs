{"files":[{"patch":"@@ -934,2 +934,2 @@\n-  static void write_metaspace_region(const char* name, DumpRegion* region,\n-                                     const ArchiveBuilder::SourceObjList* src_objs) {\n+  static void log_metaspace_region(const char* name, DumpRegion* region,\n+                                   const ArchiveBuilder::SourceObjList* src_objs) {\n@@ -938,2 +938,2 @@\n-    write_region(name, region_base, region_top, region_base + buffer_to_runtime_delta());\n-    write_metaspace_objects(region, src_objs);\n+    log_region(name, region_base, region_top, region_base + buffer_to_runtime_delta());\n+    log_metaspace_objects(region, src_objs);\n@@ -944,1 +944,1 @@\n-  static void write_klass(Klass* k, address runtime_dest, const char* type_name, int bytes, Thread* current) {\n+  static void log_klass(Klass* k, address runtime_dest, const char* type_name, int bytes, Thread* current) {\n@@ -949,1 +949,1 @@\n-  static void write_method(Method* m, address runtime_dest, const char* type_name, int bytes, Thread* current) {\n+  static void log_method(Method* m, address runtime_dest, const char* type_name, int bytes, Thread* current) {\n@@ -956,1 +956,1 @@\n-  static void write_metaspace_objects(DumpRegion* region, const ArchiveBuilder::SourceObjList* src_objs) {\n+  static void log_metaspace_objects(DumpRegion* region, const ArchiveBuilder::SourceObjList* src_objs) {\n@@ -965,1 +965,1 @@\n-      write_data(last_obj_base, dest, last_obj_base + buffer_to_runtime_delta());\n+      log_data(last_obj_base, dest, last_obj_base + buffer_to_runtime_delta());\n@@ -974,1 +974,1 @@\n-        write_klass((Klass*)src, runtime_dest, type_name, bytes, current);\n+        log_klass((Klass*)src, runtime_dest, type_name, bytes, current);\n@@ -977,1 +977,1 @@\n-        write_klass(((ConstantPool*)src)->pool_holder(),\n+        log_klass(((ConstantPool*)src)->pool_holder(),\n@@ -981,1 +981,1 @@\n-        write_klass(((ConstantPoolCache*)src)->constant_pool()->pool_holder(),\n+        log_klass(((ConstantPoolCache*)src)->constant_pool()->pool_holder(),\n@@ -985,1 +985,1 @@\n-        write_method((Method*)src, runtime_dest, type_name, bytes, current);\n+        log_method((Method*)src, runtime_dest, type_name, bytes, current);\n@@ -988,1 +988,1 @@\n-        write_method(((ConstMethod*)src)->method(), runtime_dest, type_name, bytes, current);\n+        log_method(((ConstMethod*)src)->method(), runtime_dest, type_name, bytes, current);\n@@ -1007,1 +1007,1 @@\n-    write_data(last_obj_base, last_obj_end, last_obj_base + buffer_to_runtime_delta());\n+    log_data(last_obj_base, last_obj_end, last_obj_base + buffer_to_runtime_delta());\n@@ -1012,1 +1012,1 @@\n-      write_data(last_obj_end, region_end, last_obj_end + buffer_to_runtime_delta());\n+      log_data(last_obj_end, region_end, last_obj_end + buffer_to_runtime_delta());\n@@ -1018,1 +1018,1 @@\n-  \/\/ Write information about a region, whose address at dump time is [base .. top). At\n+  \/\/ Log information about a region, whose address at dump time is [base .. top). At\n@@ -1022,1 +1022,1 @@\n-  static void write_region(const char* name, address base, address top, address runtime_base) {\n+  static void log_region(const char* name, address base, address top, address runtime_base) {\n@@ -1031,1 +1031,1 @@\n-  static void write_heap_regions(const char* which, GrowableArray<MemRegion> *regions) {\n+  static void log_heap_regions(const char* which, GrowableArray<MemRegion> *regions) {\n@@ -1036,1 +1036,1 @@\n-      write_region(which, start, end, start);\n+      log_region(which, start, end, start);\n@@ -1058,1 +1058,1 @@\n-        write_data(start, oop_end, start);\n+        log_data(start, oop_end, start, \/*is_heap=*\/true);\n@@ -1064,1 +1064,1 @@\n-        write_data(start, end, start);\n+        log_data(start, end, start, \/*is_heap=*\/true);\n@@ -1070,1 +1070,1 @@\n-  \/\/ Dump all the data [base...top). Pretend that the base address\n+  \/\/ Log all the data [base...top). Pretend that the base address\n@@ -1072,1 +1072,1 @@\n-  static void write_data(address base, address top, address runtime_base) {\n+  static void log_data(address base, address top, address runtime_base, bool is_heap = false) {\n@@ -1077,1 +1077,7 @@\n-      os::print_hex_dump(&lsh, base, top, sizeof(address), 32, runtime_base);\n+      size_t unitsize = sizeof(address);\n+      if (is_heap && UseCompressedOops) {\n+        \/\/ This makes the compressed oop pointers easier to read, but\n+        \/\/ longs and doubles will be split into two words.\n+        unitsize = sizeof(narrowOop);\n+      }\n+      os::print_hex_dump(&lsh, base, top, unitsize, 32, runtime_base);\n@@ -1081,1 +1087,1 @@\n-  static void write_header(FileMapInfo* mapinfo) {\n+  static void log_header(FileMapInfo* mapinfo) {\n@@ -1089,4 +1095,4 @@\n-  static void write(ArchiveBuilder* builder, FileMapInfo* mapinfo,\n-             GrowableArray<MemRegion> *closed_heap_regions,\n-             GrowableArray<MemRegion> *open_heap_regions,\n-             char* bitmap, size_t bitmap_size_in_bytes) {\n+  static void log(ArchiveBuilder* builder, FileMapInfo* mapinfo,\n+                  GrowableArray<MemRegion> *closed_heap_regions,\n+                  GrowableArray<MemRegion> *open_heap_regions,\n+                  char* bitmap, size_t bitmap_size_in_bytes) {\n@@ -1097,3 +1103,3 @@\n-    write_region(\"header\", header, header_end, 0);\n-    write_header(mapinfo);\n-    write_data(header, header_end, 0);\n+    log_region(\"header\", header, header_end, 0);\n+    log_header(mapinfo);\n+    log_data(header, header_end, 0);\n@@ -1104,2 +1110,2 @@\n-    write_metaspace_region(\"rw region\", rw_region, &builder->_rw_src_objs);\n-    write_metaspace_region(\"ro region\", ro_region, &builder->_ro_src_objs);\n+    log_metaspace_region(\"rw region\", rw_region, &builder->_rw_src_objs);\n+    log_metaspace_region(\"ro region\", ro_region, &builder->_ro_src_objs);\n@@ -1108,2 +1114,2 @@\n-    write_region(\"bitmap\", address(bitmap), bitmap_end, 0);\n-    write_data((address)bitmap, bitmap_end, 0);\n+    log_region(\"bitmap\", address(bitmap), bitmap_end, 0);\n+    log_data((address)bitmap, bitmap_end, 0);\n@@ -1112,1 +1118,1 @@\n-      write_heap_regions(\"closed heap region\", closed_heap_regions);\n+      log_heap_regions(\"closed heap region\", closed_heap_regions);\n@@ -1115,1 +1121,1 @@\n-      write_heap_regions(\"open heap region\", open_heap_regions);\n+      log_heap_regions(\"open heap region\", open_heap_regions);\n@@ -1120,1 +1126,1 @@\n-};\n+}; \/\/ end ArchiveBuilder::CDSMapLogger\n@@ -1174,2 +1180,2 @@\n-    CDSMapLogger::write(this, mapinfo, closed_heap_regions, open_heap_regions,\n-                        bitmap, bitmap_size_in_bytes);\n+    CDSMapLogger::log(this, mapinfo, closed_heap_regions, open_heap_regions,\n+                      bitmap, bitmap_size_in_bytes);\n","filename":"src\/hotspot\/share\/cds\/archiveBuilder.cpp","additions":47,"deletions":41,"binary":false,"changes":88,"status":"modified"},{"patch":"@@ -322,1 +322,3 @@\n-    _original_object_table->put(archived_oop, obj);\n+    if (_original_object_table != NULL) {\n+      _original_object_table->put(archived_oop, obj);\n+    }\n@@ -472,1 +474,1 @@\n-    create_archived_object_cache();\n+    create_archived_object_cache(log_is_enabled(Info, cds, map));\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -250,1 +250,1 @@\n-      15889, \/\/ prime number\n+      36137, \/\/ prime number\n@@ -257,1 +257,1 @@\n-      15889, \/\/ prime number\n+      36137, \/\/ prime number\n@@ -385,1 +385,1 @@\n-  static void create_archived_object_cache() {\n+  static void create_archived_object_cache(bool create_orig_table) {\n@@ -388,2 +388,6 @@\n-    _original_object_table =\n-      new (ResourceObj::C_HEAP, mtClass)OriginalObjectTable();\n+    if (create_orig_table) {\n+      _original_object_table =\n+        new (ResourceObj::C_HEAP, mtClass)OriginalObjectTable();\n+    } else {\n+      _original_object_table = NULL;\n+    }\n@@ -394,2 +398,4 @@\n-    delete _original_object_table;\n-    _original_object_table = NULL;\n+    if (_original_object_table != NULL) {\n+      delete _original_object_table;\n+      _original_object_table = NULL;\n+    }\n@@ -401,0 +407,1 @@\n+    assert(_original_object_table != NULL, \"sanity\");\n","filename":"src\/hotspot\/share\/cds\/heapShared.hpp","additions":14,"deletions":7,"binary":false,"changes":21,"status":"modified"}]}