{"files":[{"patch":"@@ -173,5 +173,0 @@\n-  APPLE_LIBZ_CFLAGS=\"\"\n-  if test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n-    APPLE_LIBZ_CFLAGS=\"-DHAVE_UNISTD_H\"\n-  fi\n-\n@@ -224,1 +219,4 @@\n-    LIBZ_CFLAGS=\"$LIBZ_CFLAGS $APPLE_LIBZ_CFLAGS -I$TOPDIR\/src\/java.base\/share\/native\/libzip\/zlib\"\n+    LIBZ_CFLAGS=\"$LIBZ_CFLAGS -I$TOPDIR\/src\/java.base\/share\/native\/libzip\/zlib\"\n+    if test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+        LIBZ_CFLAGS=\"$LIBZ_CFLAGS -DHAVE_UNISTD_H\"\n+    fi\n","filename":"make\/autoconf\/lib-bundled.m4","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,0 +138,1 @@\n+    DISABLED_WARNINGS_clang := format-nonliteral, \\\n","filename":"make\/modules\/java.base\/lib\/CoreLibraries.gmk","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -683,0 +683,1 @@\n+    LIBZ_DISABLED_WARNINGS_CLANG := format-nonliteral\n@@ -752,1 +753,1 @@\n-          deprecated-declarations null-pointer-subtraction, \\\n+          deprecated-declarations null-pointer-subtraction $(LIBZ_DISABLED_WARNINGS_CLANG), \\\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -452,8 +452,1 @@\n-#   ifdef __APPLE__ \/\/ ignore format-nonliteral warning on macOS\n-#       pragma clang diagnostic push\n-#       pragma clang diagnostic ignored \"-Wformat-nonliteral\"\n-        len = vsnprintf(next, state->size, format, va);\n-#       pragma clang diagnostic pop\n-#   else \/\/ not macOS\n-        len = vsnprintf(next, state->size, format, va);\n-#   endif \/\/ end of __APPLE__\n+    len = vsnprintf(next, state->size, format, va);\n","filename":"src\/java.base\/share\/native\/libzip\/zlib\/gzwrite.c","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -98,19 +98,1 @@\n-(8) Applied following patch to allow building against macOS:\n-\n---- a\/src\/java.base\/share\/native\/libzip\/zlib\/gzwrite.c\n-+++ b\/src\/java.base\/share\/native\/libzip\/zlib\/gzwrite.c\n-@@ -449,7 +449,14 @@ int ZEXPORTVA gzvprintf(gzFile file, const char *format, va_list va)\n-     (void)vsnprintf(next, state->size, format, va);\n-     len = strlen(next);\n- #  else\n--    len = vsnprintf(next, state->size, format, va);\n-+#   ifdef __APPLE__ \/\/ ignore format-nonliteral warning on macOS\n-+#       pragma clang diagnostic push\n-+#       pragma clang diagnostic ignored \"-Wformat-nonliteral\"\n-+        len = vsnprintf(next, state->size, format, va);\n-+#       pragma clang diagnostic pop\n-+#   else \/\/ not macOS\n-+        len = vsnprintf(next, state->size, format, va);\n-+#   endif \/\/ end of __APPLE__\n- #  endif\n- #endif\n+  \n","filename":"src\/java.base\/share\/native\/libzip\/zlib\/patches\/ChangeLog_java","additions":1,"deletions":19,"binary":false,"changes":20,"status":"modified"}]}