{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2019, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -173,0 +173,5 @@\n+  APPLE_LIBZ_CFLAGS=\"\"\n+  if test \"x$OPENJDK_TARGET_OS\" = xmacosx; then\n+    APPLE_LIBZ_CFLAGS=\"-DHAVE_UNISTD_H\"\n+  fi\n+\n@@ -219,1 +224,1 @@\n-    LIBZ_CFLAGS=\"$LIBZ_CFLAGS -I$TOPDIR\/src\/java.base\/share\/native\/libzip\/zlib\"\n+    LIBZ_CFLAGS=\"$LIBZ_CFLAGS $APPLE_LIBZ_CFLAGS -I$TOPDIR\/src\/java.base\/share\/native\/libzip\/zlib\"\n","filename":"make\/autoconf\/lib-bundled.m4","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -452,1 +452,8 @@\n-    len = vsnprintf(next, state->size, format, va);\n+#   ifdef __APPLE__ \/\/ ignore format-nonliteral warning on macOS\n+#       pragma clang diagnostic push\n+#       pragma clang diagnostic ignored \"-Wformat-nonliteral\"\n+        len = vsnprintf(next, state->size, format, va);\n+#       pragma clang diagnostic pop\n+#   else \/\/ not macOS\n+        len = vsnprintf(next, state->size, format, va);\n+#   endif \/\/ end of __APPLE__\n","filename":"src\/java.base\/share\/native\/libzip\/zlib\/gzwrite.c","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -98,1 +98,19 @@\n-  \n+(8) Applied following patch to allow building against macOS:\n+\n+--- a\/src\/java.base\/share\/native\/libzip\/zlib\/gzwrite.c\n++++ b\/src\/java.base\/share\/native\/libzip\/zlib\/gzwrite.c\n+@@ -449,7 +449,14 @@ int ZEXPORTVA gzvprintf(gzFile file, const char *format, va_list va)\n+     (void)vsnprintf(next, state->size, format, va);\n+     len = strlen(next);\n+ #  else\n+-    len = vsnprintf(next, state->size, format, va);\n++#   ifdef __APPLE__ \/\/ ignore format-nonliteral warning on macOS\n++#       pragma clang diagnostic push\n++#       pragma clang diagnostic ignored \"-Wformat-nonliteral\"\n++        len = vsnprintf(next, state->size, format, va);\n++#       pragma clang diagnostic pop\n++#   else \/\/ not macOS\n++        len = vsnprintf(next, state->size, format, va);\n++#   endif \/\/ end of __APPLE__\n+ #  endif\n+ #endif\n","filename":"src\/java.base\/share\/native\/libzip\/zlib\/patches\/ChangeLog_java","additions":19,"deletions":1,"binary":false,"changes":20,"status":"modified"}]}