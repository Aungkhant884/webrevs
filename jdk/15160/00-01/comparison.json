{"files":[{"patch":"@@ -209,1 +209,1 @@\n-intptr_t jfieldIDWorkaround::encode_klass_hash(Klass* k, intptr_t offset) {\n+intptr_t jfieldIDWorkaround::encode_klass_hash(Klass* k, int offset) {\n@@ -211,1 +211,0 @@\n-    int small_offset = checked_cast<int>(offset);\n@@ -217,1 +216,1 @@\n-           InstanceKlass::cast(super_klass)->contains_field_offset(small_offset)) {\n+           InstanceKlass::cast(super_klass)->contains_field_offset(offset)) {\n@@ -1906,1 +1905,0 @@\n-  if (SigType == JVM_SIGNATURE_BOOLEAN) { value = (Argument)(((jboolean)value) & 1); } \\\n@@ -2099,1 +2097,0 @@\n-  if (SigType == JVM_SIGNATURE_BOOLEAN) { value = (Argument)(((jboolean)value) & 1); } \\\n","filename":"src\/hotspot\/share\/prims\/jni.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  static intptr_t encode_klass_hash(Klass* k, intptr_t offset);\n+  static intptr_t encode_klass_hash(Klass* k, int offset);\n","filename":"src\/hotspot\/share\/runtime\/jfieldIDWorkaround.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}