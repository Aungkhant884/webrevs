{"files":[{"patch":"@@ -1050,1 +1050,1 @@\n-    return (is_intel() && supports_avx()) || \/\/ Sandy Bride and above\n+    return (is_intel() && supports_avx()) || \/\/ Sandy Bridge and above\n","filename":"src\/hotspot\/cpu\/x86\/vm_version_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,121 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.vm.compiler;\n+\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Fork(value = 2, jvmArgsAppend = {\"-XX:LoopUnrollLimit=1\"})\n+@State(Scope.Thread)\n+public class LeaInstruction {\n+    static final int ITERATION = 1000;\n+\n+    int x, y;\n+\n+    @Benchmark\n+    public void IS_D_int(Blackhole bh) {\n+        int x = this.x;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x * 4 + 10;\n+        }\n+    }\n+\n+    @Benchmark\n+    public void B_I_D_int(Blackhole bh) {\n+        int x = this.x, y = this.y;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x + y + 10;\n+            y = x + y + 20;\n+            bh.consume(x);\n+            bh.consume(y);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void B_IS_int(Blackhole bh) {\n+        int x = this.x, y = this.y;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x + y * 4;\n+            y = x + y * 8;\n+            bh.consume(x);\n+            bh.consume(y);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void B_IS_D_int(Blackhole bh) {\n+        int x = this.x, y = this.y;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x + y * 4 + 10;\n+            y = x + y * 8 + 20;\n+            bh.consume(x);\n+            bh.consume(y);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void IS_D_long(Blackhole bh) {\n+        long x = this.x;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x * 4 + 10;\n+            bh.consume(x);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void B_I_D_long(Blackhole bh) {\n+        long x = this.x, y = this.y;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x + y + 10;\n+            y = x + y + 20;\n+            bh.consume(x);\n+            bh.consume(y);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void B_IS_long(Blackhole bh) {\n+        long x = this.x, y = this.y;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x + y * 4;\n+            y = x + y * 8;\n+            bh.consume(x);\n+            bh.consume(y);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void B_IS_D_long(Blackhole bh) {\n+        long x = this.x, y = this.y;\n+        for (int i = 0; i < ITERATION; i++) {\n+            x = x + y * 4 + 10;\n+            y = x + y * 8 + 20;\n+            bh.consume(x);\n+            bh.consume(y);\n+        }\n+    }\n+}\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LeaInstruction.java","additions":121,"deletions":0,"binary":false,"changes":121,"status":"added"}]}