{"files":[{"patch":"@@ -214,1 +214,1 @@\n-  \/\/ No default displacement otherwise Register can be implicitly\n+  \/\/ Make this explicit otherwise Register can be implicitly\n@@ -216,2 +216,1 @@\n-\n-  Address(Register base, int disp)\n+  explicit Address(Register base, int disp = 0)\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7446,1 +7446,1 @@\n-instruct leaI_rReg_immI(rRegI dst, rRegI src0, immI src1)\n+instruct leaI_rReg_immI2_immI(rRegI dst, rRegI index, immI2 scale, immI disp)\n@@ -7448,1 +7448,1 @@\n-  match(Set dst (AddI src0 src1));\n+  match(Set dst (AddI (LShiftI index scale) disp));\n@@ -7450,2 +7450,1 @@\n-  ins_cost(110);\n-  format %{ \"addr32 leal $dst, [$src0 + $src1]\\t# int\" %}\n+  format %{ \"addr32 leal $dst, [$index * $scale + $disp]\\t# int\" %}\n@@ -7453,1 +7452,2 @@\n-    __ leal($dst$$Register, Address($src0$$Register, $src1$$constant));\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($scale$$constant);\n+    __ leal($dst$$Register, Address(noreg, $index$$Register, scale, $disp$$constant));\n@@ -7455,1 +7455,38 @@\n-  ins_pipe(ialu_reg_reg);\n+  ins_pipe(ialu_reg_reg_fat);\n+%}\n+\n+instruct leaI_rReg_rReg_immI(rRegI dst, rRegI src1, rRegI src2, immI disp)\n+%{\n+  match(Set dst (AddI (AddI src1 src2) disp));\n+\n+  format %{ \"addr32 leal $dst, [$src1 + $src2 + $disp]\\t# int\" %}\n+  ins_encode %{\n+    __ leal($dst$$Register, Address($src1$$Register, $src2$$Register, Address::times_1, $disp$$constant));\n+  %}\n+  ins_pipe(ialu_reg_reg_fat);\n+%}\n+\n+instruct leaI_rReg_rReg_immI2(rRegI dst, rRegI base, rRegI index, immI2 scale)\n+%{\n+  match(Set dst (AddI base (LShiftI index scale)));\n+  match(Set dst (AddI (LShiftI index scale) base));\n+\n+  format %{ \"addr32 leal $dst, [$base + $index * $scale]\\t# int\" %}\n+  ins_encode %{\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($scale$$constant);\n+    __ leal($dst$$Register, Address($base$$Register, $index$$Register, scale));\n+  %}\n+  ins_pipe(ialu_reg_reg_fat);\n+%}\n+\n+instruct leaI_rReg_rReg_immI2_immI(rRegI dst, rRegI base, rRegI index, immI2 scale, immI disp)\n+%{\n+  match(Set dst (AddI (AddI base (LShiftI index scale)) disp));\n+  match(Set dst (AddI (AddI (LShiftI index scale) base) disp));\n+\n+  format %{ \"addr32 leal $dst, [$base + $index * $scale + $disp]\\t# int\" %}\n+  ins_encode %{\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($scale$$constant);\n+    __ leal($dst$$Register, Address($base$$Register, $index$$Register, scale, $disp$$constant));\n+  %}\n+  ins_pipe(ialu_reg_reg_fat);\n@@ -7577,1 +7614,1 @@\n-instruct leaL_rReg_immL(rRegL dst, rRegL src0, immL32 src1)\n+instruct leaL_rReg_immI2_immL32(rRegL dst, rRegL index, immI2 scale, immL32 disp)\n@@ -7579,1 +7616,1 @@\n-  match(Set dst (AddL src0 src1));\n+  match(Set dst (AddL (LShiftL index scale) disp));\n@@ -7581,2 +7618,1 @@\n-  ins_cost(110);\n-  format %{ \"leaq    $dst, [$src0 + $src1]\\t# long\" %}\n+  format %{ \"leaq $dst, [$index * $scale + $disp]\\t# long\" %}\n@@ -7584,1 +7620,2 @@\n-    __ leaq($dst$$Register, Address($src0$$Register, $src1$$constant));\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($scale$$constant);\n+    __ leaq($dst$$Register, Address(noreg, $index$$Register, scale, $disp$$constant));\n@@ -7586,1 +7623,38 @@\n-  ins_pipe(ialu_reg_reg);\n+  ins_pipe(ialu_reg_reg_fat);\n+%}\n+\n+instruct leaL_rReg_rReg_immL32(rRegL dst, rRegL src1, rRegL src2, immL32 disp)\n+%{\n+  match(Set dst (AddL (AddL src1 src2) disp));\n+\n+  format %{ \"leaq $dst, [$src1 + $src2 + $disp]\\t# long\" %}\n+  ins_encode %{\n+    __ leaq($dst$$Register, Address($src1$$Register, $src2$$Register, Address::times_1, $disp$$constant));\n+  %}\n+  ins_pipe(ialu_reg_reg_fat);\n+%}\n+\n+instruct leaL_rReg_rReg_immI2(rRegL dst, rRegL base, rRegL index, immI2 scale)\n+%{\n+  match(Set dst (AddL base (LShiftL index scale)));\n+  match(Set dst (AddL (LShiftL index scale) base));\n+\n+  format %{ \"leaq $dst, [$base + $index * $scale]\\t# long\" %}\n+  ins_encode %{\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($scale$$constant);\n+    __ leaq($dst$$Register, Address($base$$Register, $index$$Register, scale));\n+  %}\n+  ins_pipe(ialu_reg_reg_fat);\n+%}\n+\n+instruct leaL_rReg_rReg_immI2_immL(rRegL dst, rRegL base, rRegL index, immI2 scale, immL32 disp)\n+%{\n+  match(Set dst (AddL (AddL base (LShiftL index scale)) disp));\n+  match(Set dst (AddL (AddL (LShiftL index scale) base) disp));\n+\n+  format %{ \"leaq $dst, [$base + $index * $scale + $disp]\\t# long\" %}\n+  ins_encode %{\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($scale$$constant);\n+    __ leaq($dst$$Register, Address($base$$Register, $index$$Register, scale, $disp$$constant));\n+  %}\n+  ins_pipe(ialu_reg_reg_fat);\n@@ -8728,2 +8802,2 @@\n-\/\/ Shift Left by one\n-instruct salI_rReg_1(rRegI dst, immI_1 shift, rFlagsReg cr)\n+\/\/ Shift Left by one, two, three\n+instruct salI_rReg_immI2(rRegI dst, rRegI src, immI2 shift)\n@@ -8731,2 +8805,1 @@\n-  match(Set dst (LShiftI dst shift));\n-  effect(KILL cr);\n+  match(Set dst (LShiftI src shift));\n@@ -8734,1 +8807,1 @@\n-  format %{ \"sall    $dst, $shift\" %}\n+  format %{ \"leal    $dst, [$src << $shift]\" %}\n@@ -8736,1 +8809,2 @@\n-    __ sall($dst$$Register, $shift$$constant);\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($shift$$constant);\n+    __ leal($dst$$Register, Address(noreg, $src$$Register, scale));\n@@ -8738,1 +8812,1 @@\n-  ins_pipe(ialu_reg);\n+  ins_pipe(ialu_reg_reg);\n@@ -8962,2 +9036,2 @@\n-\/\/ Shift Left by one\n-instruct salL_rReg_1(rRegL dst, immI_1 shift, rFlagsReg cr)\n+\/\/ Shift Left by one, two, three\n+instruct salL_rReg_immI2(rRegL dst, rRegL src, immI2 shift)\n@@ -8965,2 +9039,1 @@\n-  match(Set dst (LShiftL dst shift));\n-  effect(KILL cr);\n+  match(Set dst (LShiftL src shift));\n@@ -8968,1 +9041,1 @@\n-  format %{ \"salq    $dst, $shift\" %}\n+  format %{ \"leaq    $dst, [$src << $shift]\" %}\n@@ -8970,1 +9043,2 @@\n-    __ salq($dst$$Register, $shift$$constant);\n+    Address::ScaleFactor scale = static_cast<Address::ScaleFactor>($shift$$constant);\n+    __ leaq($dst$$Register, Address(noreg, $src$$Register, scale));\n@@ -8972,1 +9046,1 @@\n-  ins_pipe(ialu_reg);\n+  ins_pipe(ialu_reg_reg);\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":100,"deletions":26,"binary":false,"changes":126,"status":"modified"}]}