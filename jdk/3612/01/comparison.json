{"files":[{"patch":"@@ -377,1 +377,1 @@\n-                .collect(Collectors.toList());\n+                .collect(Collectors.toCollection(ArrayList::new));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -370,1 +370,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/IndexWriter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-                    .collect(Collectors.toList());\n+                    .toList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TableHeader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -416,1 +416,1 @@\n-            List<Element> members = inheritedMembersFromMap.stream()\n+            List<? extends Element> members = inheritedMembersFromMap.stream()\n@@ -418,1 +418,2 @@\n-                    .collect(Collectors.toList());\n+                    .toList();\n+\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/MemberSummaryBuilder.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -350,1 +350,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/PackageSummaryBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-                            .collect(Collectors.toList());\n+                            .toList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/ThrowsTaglet.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2100,1 +2100,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -2107,1 +2107,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -2114,1 +2114,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -2604,1 +2604,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -2612,1 +2612,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -3030,1 +3030,1 @@\n-                usedInDeclaration.addAll(types2Classes(te.getRecordComponents().stream().map(c -> c.asType()).collect(Collectors.toList()))); \/\/TODO: annotations on record components???\n+                usedInDeclaration.addAll(types2Classes(te.getRecordComponents().stream().map(c -> c.asType()).toList())); \/\/TODO: annotations on record components???\n@@ -3040,1 +3040,1 @@\n-                usedInDeclaration.addAll(types2Classes(ee.getParameters().stream().map(p -> p.asType()).collect(Collectors.toList())));\n+                usedInDeclaration.addAll(types2Classes(ee.getParameters().stream().map(p -> p.asType()).toList()));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+import java.util.stream.Stream;\n@@ -202,1 +203,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -411,2 +412,2 @@\n-                        .collect(Collectors.toList());\n-                visibleMembers.put(kind, Collections.unmodifiableList(list));\n+                        .toList();\n+                visibleMembers.put(kind, list);\n@@ -457,6 +458,2 @@\n-        List<Element> list = result.stream()\n-                .filter(e -> allowInheritedMembers(e, kind, lmt))\n-                .collect(Collectors.toList());\n-\n-        \/\/ Prefix local results first\n-        list.addAll(0, lmt.getOrderedMembers(kind));\n+        Stream<Element> inheritedStream = result.stream()\n+                .filter(e -> allowInheritedMembers(e, kind, lmt));\n@@ -465,3 +462,0 @@\n-        list = list.stream()\n-                .filter(this::mustDocument)\n-                .collect(Collectors.toList());\n@@ -469,1 +463,5 @@\n-        visibleMembers.put(kind, Collections.unmodifiableList(list));\n+        List<Element> list = Stream.concat(lmt.getOrderedMembers(kind).stream(), inheritedStream)\n+                                   .filter(this::mustDocument)\n+                                   .toList();\n+\n+        visibleMembers.put(kind, list);\n@@ -495,1 +493,1 @@\n-                .collect(Collectors.toList());\n+                .collect(Collectors.toCollection(ArrayList::new));\n@@ -504,1 +502,1 @@\n-        List<Element> localList = lmt.getOrderedMembers(Kind.METHODS)\n+        List<ExecutableElement> localList = lmt.getOrderedMembers(Kind.METHODS)\n@@ -508,1 +506,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -516,1 +514,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -518,1 +516,1 @@\n-        visibleMembers.put(Kind.METHODS, Collections.unmodifiableList(list));\n+        visibleMembers.put(Kind.METHODS, list);\n@@ -798,1 +796,1 @@\n-                    .collect(Collectors.toList());\n+                    .toList();\n@@ -860,1 +858,1 @@\n-        List<ExecutableElement> list = visibleMembers.getOrDefault(Kind.METHODS, Collections.emptyList())\n+        List<Element> list = visibleMembers.getOrDefault(Kind.METHODS, Collections.emptyList())\n@@ -862,3 +860,2 @@\n-                .map(m -> (ExecutableElement)m)\n-                .filter(pUtils::isPropertyMethod)\n-                .collect(Collectors.toList());\n+                .filter(e -> pUtils.isPropertyMethod((ExecutableElement) e))\n+                .toList();\n@@ -866,1 +863,1 @@\n-        visibleMembers.put(Kind.PROPERTIES, Collections.unmodifiableList(list));\n+        visibleMembers.put(Kind.PROPERTIES, list);\n@@ -869,0 +866,1 @@\n+                .map(e -> (ExecutableElement) e)\n@@ -870,1 +868,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n@@ -934,1 +932,1 @@\n-                .collect(Collectors.toList());\n+                .toList();\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":24,"deletions":26,"binary":false,"changes":50,"status":"modified"}]}