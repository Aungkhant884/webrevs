{"files":[{"patch":"@@ -462,1 +462,1 @@\n-\n+        \/\/ Prefix local results first\n@@ -491,1 +491,4 @@\n-        List<Element> list = inheritedMethods.stream()\n+        \/\/ nb. This statement has side effects that can initialize\n+        \/\/ members of the overridenMethodTable field, so it must be\n+        \/\/ evaluated eagerly with toList().\n+        List<Element> inheritedMethodsList = inheritedMethods.stream()\n@@ -493,1 +496,1 @@\n-                .collect(Collectors.toCollection(ArrayList::new));\n+                .toList();\n@@ -502,1 +505,2 @@\n-        List<ExecutableElement> localList = lmt.getOrderedMembers(Kind.METHODS)\n+\n+        Stream<ExecutableElement> localStream = lmt.getOrderedMembers(Kind.METHODS)\n@@ -505,5 +509,1 @@\n-                .filter(isVisible)\n-                .toList();\n-\n-        \/\/ Merge the above lists, making sure the local methods precede the others\n-        list.addAll(0, localList);\n+                .filter(isVisible);\n@@ -511,0 +511,1 @@\n+        \/\/ Merge the above list and stream, making sure the local methods precede the others\n@@ -512,1 +513,1 @@\n-        list = list.stream()\n+        List<Element> list = Stream.concat(localStream,inheritedMethodsList.stream())\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"}]}