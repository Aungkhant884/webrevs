{"files":[{"patch":"@@ -30,1 +30,1 @@\n-  * @run main TestDuplicateSimpleLoopBackedge\n+  * @run main\/othervm -Xbatch TestDuplicateSimpleLoopBackedge\n@@ -34,4 +34,2 @@\n-import jdk.test.lib.Utils;\n-\n-class Foo {\n-    static void c(Byte[] a, Byte d) {\n+public class TestDuplicateSimpleLoopBackedge {\n+    static void zero(Byte[] a) {\n@@ -41,1 +39,0 @@\n-}\n@@ -43,2 +40,1 @@\n-public class TestDuplicateSimpleLoopBackedge {\n-    int f(int g) {\n+    int foo(int g) {\n@@ -46,1 +42,1 @@\n-        Foo.c(h, (byte)4);\n+        zero(h);\n@@ -53,1 +49,1 @@\n-    void j(String[] k) {\n+    void bar(String[] k) {\n@@ -56,1 +52,1 @@\n-            if (l < f(l));\n+            if (l < foo(l));\n@@ -61,13 +57,5 @@\n-    public static void main(String[] args) throws Exception{\n-        Thread thread = new Thread() {\n-                public void run() {\n-                    TestDuplicateSimpleLoopBackedge n = new TestDuplicateSimpleLoopBackedge();\n-                    for (int i = 0; i < 10000; ++i) {\n-                        n.j(args);\n-                    }\n-                }\n-            };\n-        \/\/ Give thread some time to trigger compilation\n-        thread.setDaemon(true);\n-        thread.start();\n-        Thread.sleep(Utils.adjustTimeout(4000));\n+    public static void main(String[] args) {\n+        TestDuplicateSimpleLoopBackedge n = new TestDuplicateSimpleLoopBackedge();\n+        for (int i = 0; i < 10000; ++i) {\n+            n.bar(args);\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestDuplicateSimpleLoopBackedge.java","additions":12,"deletions":24,"binary":false,"changes":36,"status":"modified"}]}