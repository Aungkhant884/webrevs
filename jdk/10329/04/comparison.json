{"files":[{"patch":"@@ -3923,1 +3923,2 @@\n-    if (!incr->is_Phi()) {\n+    \/\/ Or the region node is the loop head\n+    if (!incr->is_Phi() || incr->in(0) == head) {\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+  * Copyright (c) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+  *\n+  * This code is free software; you can redistribute it and\/or modify it\n+  * under the terms of the GNU General Public License version 2 only, as\n+  * published by the Free Software Foundation.\n+  *\n+  * This code is distributed in the hope that it will be useful, but WITHOUT\n+  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+  * version 2 for more details (a copy is included in the LICENSE file that\n+  * accompanied this code).\n+  *\n+  * You should have received a copy of the GNU General Public License version\n+  * 2 along with this work; if not, write to the Free Software Foundation,\n+  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+  *\n+  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+  * or visit www.oracle.com if you need additional information or have any\n+  * questions.\n+  *\/\n+\n+ \/**\n+  * @test\n+  * @bug 8293978\n+  * @summary Crash in PhaseIdealLoop::verify_strip_mined_scheduling\n+  *\n+  * @run main\/othervm -Xbatch TestDuplicateSimpleLoopBackedge\n+  *\n+  *\/\n+\n+public class TestDuplicateSimpleLoopBackedge {\n+    static void zero(Byte[] a) {\n+        for (int e = 0; e < a.length; e++) {\n+            a[e] = 0;\n+        }\n+    }\n+\n+    int foo(int g) {\n+        Byte h[] = new Byte[500];\n+        zero(h);\n+        short i = 7;\n+        while (i != 1) {\n+            i = (short)(i - 3);\n+        }\n+        return 0;\n+    }\n+\n+    void bar(String[] k) {\n+        try {\n+            int l = 5;\n+            if (l < foo(l)) {\n+            }\n+        } catch (Exception m) {\n+        }\n+    }\n+\n+    public static void main(String[] args) {\n+        TestDuplicateSimpleLoopBackedge n = new TestDuplicateSimpleLoopBackedge();\n+        for (int i = 0; i < 10000; ++i) {\n+            n.bar(args);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/TestDuplicateSimpleLoopBackedge.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}