{"files":[{"patch":"@@ -359,1 +359,2 @@\n-                if (jarfile.isMultiRelease()) {\n+                \/\/ exclude module-info.class since this jarFile is on classpath\n+                if (jarfile.isMultiRelease() && !cf.getName().equals(\"module-info\")) {\n@@ -440,1 +441,0 @@\n-    private static final String MODULE_INFO = \"module-info.class\";\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/ClassFileReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -271,1 +271,8 @@\n-            throw new Error(e);\n+            Throwable cause = e.getCause();\n+            if (cause instanceof RuntimeException x) {\n+                throw x;\n+            } else if (cause instanceof Error x) {\n+                throw x;\n+            } else {\n+                throw new Error(e);\n+            }\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/DependencyFinder.java","additions":8,"deletions":1,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-        super();\n+        super(JdepsTask.getMessage(key, params));\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/MultiReleaseException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,9 +58,4 @@\n-                if (nameToVersion.containsKey(name)) {\n-                    if (!version.equals(nameToVersion.get(name))) {\n-                        throw new MultiReleaseException(\n-                                \"err.multirelease.version.associated\",\n-                                name, nameToVersion.get(name), version\n-                        );\n-                    }\n-                } else {\n-                    nameToVersion.put(name, version);\n+                String v = nameToVersion.computeIfAbsent(name, _n -> version);\n+                if (!version.equals(v)) {\n+                    throw new MultiReleaseException(\"err.multirelease.version.associated\",\n+                                name, nameToVersion.get(name), version);\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/jdeps\/VersionHelper.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8277165\n+ * @library ..\/lib\n+ * @build CompilerUtils\n+ * @run testng MultiVersionError\n+ * @summary Tests multiple versions of the same class file\n+ *\/\n+\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Set;\n+import java.util.spi.ToolProvider;\n+\n+import org.testng.annotations.BeforeTest;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+public class MultiVersionError {\n+    private static final String TEST_SRC = System.getProperty(\"test.src\");\n+    private static final Path SRC_DIR = Paths.get(TEST_SRC, \"src\");\n+\n+    private static final Path MODS_DIR = Paths.get(\"mods\");\n+\n+    private static final ToolProvider JAR_TOOL = ToolProvider.findFirst(\"jar\").orElseThrow();\n+    private static final Set<String> modules = Set.of(\"m1\", \"m2\");\n+\n+    \/**\n+     * Compiles classes used by the test\n+     *\/\n+    @BeforeTest\n+    public void compileAll() throws Exception {\n+        CompilerUtils.cleanDir(MODS_DIR);\n+        modules.forEach(mn ->\n+                assertTrue(CompilerUtils.compileModule(SRC_DIR, MODS_DIR, mn)));\n+\n+        \/\/ create a modular multi-release m1.jar\n+        Path m1 = MODS_DIR.resolve(\"m1\");\n+        Path m2 = MODS_DIR.resolve(\"m2\");\n+        jar(\"cf\", \"m1.jar\", \"-C\", m1.toString(), \"p\/Test.class\",\n+                \"--release\", \"9\", \"-C\", m1.toString(), \"module-info.class\",\n+                \"--release\", \"11\", \"-C\", m1.toString(), \"p\/internal\/P.class\");\n+        jar(\"cf\", \"m2.jar\", \"-C\", m2.toString(), \"q\/Q.class\",\n+                \"--release\", \"10\", \"-C\", m2.toString(), \"module-info.class\");\n+\n+        \/\/ package private p\/internal\/P.class in m1 instead\n+        jar(\"cf\", \"m3.jar\", \"-C\", m2.toString(), \"q\/Q.class\",\n+                \"--release\", \"12\", \"-C\", m2.toString(), \"module-info.class\",\n+                \"-C\", m1.toString(), \"p\/internal\/P.class\");\n+    }\n+\n+    \/*\n+     * multiple module-info.class from different versions should be excluded\n+     * from multiple version check.\n+     *\/\n+    @Test\n+    public void noMultiVersionClass() {\n+        \/\/ skip parsing p.internal.P to workaround JDK-8277681\n+        JdepsRunner jdepsRunner = new JdepsRunner(\"--print-module-deps\", \"--multi-release\", \"10\",\n+                                                  \"--ignore-missing-deps\",\n+                                                  \"--module-path\", \"m1.jar\", \"m2.jar\");\n+        int rc = jdepsRunner.run(true);\n+        assertTrue(rc == 0);\n+        assertTrue(jdepsRunner.outputContains(\"java.base,m1\"));\n+    }\n+\n+    \/*\n+     * Detect multiple versions of p.internal.P class\n+     *\/\n+    @Test\n+    public void classInMultiVersions() {\n+        JdepsRunner jdepsRunner = new JdepsRunner(\"--print-module-deps\", \"--multi-release\", \"13\",\n+                                                  \"--module-path\", \"m1.jar\", \"m3.jar\");\n+        int rc = jdepsRunner.run(true);\n+        assertTrue(rc != 0);\n+        assertTrue(jdepsRunner.outputContains(\"class p.internal.P already associated with version\"));\n+    }\n+\n+    private static void jar(String... options) {\n+        int rc = JAR_TOOL.run(System.out, System.err, options);\n+        assertTrue(rc == 0);\n+    }\n+}\n","filename":"test\/langtools\/tools\/jdeps\/multiVersion\/MultiVersionError.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module m1 {\n+    requires java.management;\n+    exports p;\n+}\n","filename":"test\/langtools\/tools\/jdeps\/multiVersion\/src\/m1\/module-info.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p;\n+\n+public class Test {\n+}\n","filename":"test\/langtools\/tools\/jdeps\/multiVersion\/src\/m1\/p\/Test.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p.internal;\n+\n+import java.lang.management.*;\n+\n+class P {\n+     private static RuntimeMXBean mxbean = ManagementFactory.getRuntimeMXBean();\n+}\n","filename":"test\/langtools\/tools\/jdeps\/multiVersion\/src\/m1\/p\/internal\/P.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -0,0 +1,27 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+module m2 {\n+    requires m1;\n+    requires java.logging;\n+}\n","filename":"test\/langtools\/tools\/jdeps\/multiVersion\/src\/m2\/module-info.java","additions":27,"deletions":0,"binary":false,"changes":27,"status":"added"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package p.internal;\n+\n+import java.util.logging.Logger;\n+\n+public class P {\n+     private static final Logger LOGGER = Logger.getLogger(\"p\");\n+}\n","filename":"test\/langtools\/tools\/jdeps\/multiVersion\/src\/m2\/p\/internal\/P.java","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"@@ -0,0 +1,32 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package q;\n+\n+public class Q {\n+    static p.Test t = new p.Test();\n+\n+    public Q() {\n+        Object o = new p.internal.P();\n+    }\n+}\n","filename":"test\/langtools\/tools\/jdeps\/multiVersion\/src\/m2\/q\/Q.java","additions":32,"deletions":0,"binary":false,"changes":32,"status":"added"}]}