{"files":[{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"memory\/memRegion.hpp\"\n@@ -35,0 +34,1 @@\n+class MemRegion;\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -30,10 +30,0 @@\n-#include \"code\/codeBlob.inline.hpp\"\n-#include \"code\/codeCache.inline.hpp\"\n-#include \"code\/nativeInst.hpp\"\n-#include \"compiler\/oopMap.hpp\"\n-#include \"gc\/shared\/barrierSetNMethod.hpp\"\n-#include \"gc\/shared\/collectedHeap.hpp\"\n-#include \"gc\/shared\/gc_globals.hpp\"\n-#include \"logging\/log.hpp\"\n-#include \"oops\/instanceKlass.inline.hpp\"\n-#include \"oops\/klass.hpp\"\n@@ -43,1 +33,0 @@\n-#include \"runtime\/globals.hpp\"\n@@ -45,2 +34,0 @@\n-#include \"runtime\/smallRegisterMap.inline.hpp\"\n-#include \"runtime\/stackChunkFrameStream.inline.hpp\"\n","filename":"src\/hotspot\/share\/oops\/instanceStackChunkKlass.inline.hpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"gc\/shared\/barrierSetNMethod.hpp\"\n@@ -150,0 +151,7 @@\n+ContinuationEntry* Continuation::get_continuation_entry_for_entry_frame(JavaThread* thread, const frame& f) {\n+  assert(is_continuation_enterSpecial(f), \"\");\n+  ContinuationEntry* entry = (ContinuationEntry*)f.unextended_sp();\n+  assert(entry == get_continuation_entry_for_sp(thread, f.sp()-2), \"mismatched entry\");\n+  return entry;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/continuation.cpp","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"memory\/allStatic.hpp\"\n@@ -29,3 +30,0 @@\n-#include \"memory\/iterator.hpp\"\n-#include \"runtime\/frame.hpp\"\n-#include \"runtime\/globals.hpp\"\n@@ -35,0 +33,5 @@\n+class frame;\n+class FrameValues;\n+class Handle;\n+class outputStream;\n+class RegisterMap;\n@@ -87,7 +90,1 @@\n-\n-  static ContinuationEntry* get_continuation_entry_for_entry_frame(JavaThread* thread, const frame& f) {\n-    assert(is_continuation_enterSpecial(f), \"\");\n-    ContinuationEntry* entry = (ContinuationEntry*)f.unextended_sp();\n-    assert(entry == get_continuation_entry_for_sp(thread, f.sp()-2), \"mismatched entry\");\n-    return entry;\n-  }\n+  static ContinuationEntry* get_continuation_entry_for_entry_frame(JavaThread* thread, const frame& f);\n","filename":"src\/hotspot\/share\/runtime\/continuation.hpp","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -74,0 +74,14 @@\n+#ifndef PRODUCT\n+void ContinuationEntry::describe(FrameValues& values, int frame_no) const {\n+  address usp = (address)this;\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::parent_offset())),    \"parent\");\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::cont_offset())),      \"continuation\");\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::flags_offset())),     \"flags\");\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::chunk_offset())),     \"chunk\");\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::argsize_offset())),   \"argsize\");\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::pin_count_offset())), \"pin_count\");\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::parent_cont_fastpath_offset())),      \"parent fastpath\");\n+  values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::parent_held_monitor_count_offset())), \"parent held monitor count\");\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/runtime\/continuationEntry.cpp","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -33,2 +33,1 @@\n-class RegisterMap;\n-class OopMap;\n+class CompiledMethod;\n@@ -36,0 +35,2 @@\n+class OopMap;\n+class RegisterMap;\n@@ -115,8 +116,1 @@\n-  intptr_t* bottom_sender_sp() const {\n-    intptr_t* sp = entry_sp() - argsize();\n-#ifdef _LP64\n-    sp = align_down(sp, frame::frame_alignment);\n-#endif\n-    return sp;\n-  }\n-\n+  inline intptr_t* bottom_sender_sp() const;\n@@ -130,11 +124,1 @@\n-  void describe(FrameValues& values, int frame_no) const {\n-    address usp = (address)this;\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::parent_offset())),    \"parent\");\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::cont_offset())),      \"continuation\");\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::flags_offset())),     \"flags\");\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::chunk_offset())),     \"chunk\");\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::argsize_offset())),   \"argsize\");\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::pin_count_offset())), \"pin_count\");\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::parent_cont_fastpath_offset())),      \"parent fastpath\");\n-    values.describe(frame_no, (intptr_t*)(usp + in_bytes(ContinuationEntry::parent_held_monitor_count_offset())), \"parent held monitor count\");\n-  }\n+  void describe(FrameValues& values, int frame_no) const;\n","filename":"src\/hotspot\/share\/runtime\/continuationEntry.hpp","additions":5,"deletions":21,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"runtime\/frame.hpp\"\n@@ -34,0 +35,8 @@\n+inline intptr_t* ContinuationEntry::bottom_sender_sp() const {\n+  intptr_t* sp = entry_sp() - argsize();\n+#ifdef _LP64\n+  sp = align_down(sp, frame::frame_alignment);\n+#endif\n+  return sp;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/continuationEntry.inline.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"interpreter\/oopMapCache.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/continuationHelper.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"runtime\/frame.hpp\"\n@@ -35,0 +34,1 @@\n+class frame;\n@@ -36,0 +36,1 @@\n+class RegisterMap;\n","filename":"src\/hotspot\/share\/runtime\/stackChunkFrameStream.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"code\/codeCache.inline.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/stackChunkFrameStream.inline.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}