{"files":[{"patch":"@@ -192,1 +192,0 @@\n-java\/awt\/EventDispatchThread\/HandleExceptionOnEDT\/HandleExceptionOnEDT.java 8203047 macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,0 +46,2 @@\n+    private static Frame f = null;\n+    private static Dialog d = null;\n@@ -49,4 +51,2 @@\n-        final Thread.UncaughtExceptionHandler eh = new Thread.UncaughtExceptionHandler()\n-        {\n-            @Override\n-            public void uncaughtException(Thread t, Throwable e)\n+        try {\n+            final Thread.UncaughtExceptionHandler eh = new Thread.UncaughtExceptionHandler()\n@@ -54,1 +54,2 @@\n-                if (e.getMessage().equals(EXCEPTION_MESSAGE))\n+                @Override\n+                public void uncaughtException(Thread t, Throwable e)\n@@ -56,1 +57,4 @@\n-                    exceptionHandled = true;\n+                    if (e.getMessage().equals(EXCEPTION_MESSAGE))\n+                    {\n+                        exceptionHandled = true;\n+                    }\n@@ -58,10 +62,6 @@\n-            }\n-        };\n-\n-        Frame f = new Frame(\"F\");\n-        f.setBounds(100, 100, 400, 300);\n-        \/\/ set exception handler for EDT\n-        f.addWindowListener(new WindowAdapter()\n-        {\n-            @Override\n-            public void windowOpened(WindowEvent we)\n+            };\n+\n+            f = new Frame(\"F\");\n+            f.setBounds(100, 100, 400, 300);\n+            \/\/ set exception handler for EDT\n+            f.addWindowListener(new WindowAdapter()\n@@ -69,5 +69,8 @@\n-                Thread edt = Thread.currentThread();\n-                edt.setUncaughtExceptionHandler(eh);\n-            }\n-        });\n-        f.setVisible(true);\n+                @Override\n+                public void windowOpened(WindowEvent we)\n+                {\n+                    Thread edt = Thread.currentThread();\n+                    edt.setUncaughtExceptionHandler(eh);\n+                }\n+            });\n+            f.setVisible(true);\n@@ -75,2 +78,3 @@\n-        Robot r = Util.createRobot();\n-        Util.waitForIdle(r);\n+            Robot r = Util.createRobot();\n+            Util.waitForIdle(r);\n+            r.delay(1000);\n@@ -78,5 +82,2 @@\n-        \/\/ check exception without modal dialog\n-        MouseListener exceptionListener = new MouseAdapter()\n-        {\n-            @Override\n-            public void mousePressed(MouseEvent me)\n+            \/\/ check exception without modal dialog\n+            MouseListener exceptionListener = new MouseAdapter()\n@@ -84,1 +85,20 @@\n-                throw new RuntimeException(EXCEPTION_MESSAGE);\n+                @Override\n+                public void mousePressed(MouseEvent me)\n+                {\n+                    throw new RuntimeException(EXCEPTION_MESSAGE);\n+                }\n+            };\n+            f.addMouseListener(exceptionListener);\n+\n+            exceptionHandled = false;\n+            Point fp = f.getLocationOnScreen();\n+            r.mouseMove(fp.x + f.getWidth() \/ 2, fp.y + f.getHeight() \/ 2);\n+            Util.waitForIdle(r);\n+            r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            Util.waitForIdle(r);\n+            r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            f.removeMouseListener(exceptionListener);\n+\n+            if (!exceptionHandled)\n+            {\n+                throw new RuntimeException(\"Test FAILED: exception is not handled for frame\");\n@@ -86,16 +106,0 @@\n-        };\n-        f.addMouseListener(exceptionListener);\n-\n-        exceptionHandled = false;\n-        Point fp = f.getLocationOnScreen();\n-        r.mouseMove(fp.x + f.getWidth() \/ 2, fp.y + f.getHeight() \/ 2);\n-        Util.waitForIdle(r);\n-        r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        Util.waitForIdle(r);\n-        r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-        f.removeMouseListener(exceptionListener);\n-\n-        if (!exceptionHandled)\n-        {\n-            throw new RuntimeException(\"Test FAILED: exception is not handled for frame\");\n-        }\n@@ -103,8 +107,5 @@\n-        \/\/ check exception with modal dialog\n-        final Dialog d = new Dialog(f, \"D\", true);\n-        d.setBounds(fp.x + 100, fp.y + 100, 400, 300);\n-        d.addMouseListener(exceptionListener);\n-        EventQueue.invokeLater(new Runnable()\n-        {\n-            @Override\n-            public void run()\n+            \/\/ check exception with modal dialog\n+            d = new Dialog(f, \"D\", true);\n+            d.setBounds(fp.x + 100, fp.y + 100, 400, 300);\n+            d.addMouseListener(exceptionListener);\n+            EventQueue.invokeLater(new Runnable()\n@@ -112,1 +113,21 @@\n-                d.setVisible(true);\n+                @Override\n+                public void run()\n+                {\n+                    d.setVisible(true);\n+                }\n+            });\n+            Util.waitForIdle(r);\n+            r.delay(1000);\n+\n+            exceptionHandled = false;\n+            Point dp = d.getLocationOnScreen();\n+            r.mouseMove(dp.x + d.getWidth() \/ 2, dp.y + d.getHeight() \/ 2);\n+            Util.waitForIdle(r);\n+            r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            Util.waitForIdle(r);\n+            r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            d.removeMouseListener(exceptionListener);\n+\n+            if (!exceptionHandled)\n+            {\n+                throw new RuntimeException(\"Test FAILED: exception is not handled for modal dialog\");\n@@ -114,16 +135,0 @@\n-        });\n-        Util.waitForIdle(r);\n-\n-        exceptionHandled = false;\n-        Point dp = d.getLocationOnScreen();\n-        r.mouseMove(dp.x + d.getWidth() \/ 2, dp.y + d.getHeight() \/ 2);\n-        Util.waitForIdle(r);\n-        r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        Util.waitForIdle(r);\n-        r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-        d.removeMouseListener(exceptionListener);\n-\n-        if (!exceptionHandled)\n-        {\n-            throw new RuntimeException(\"Test FAILED: exception is not handled for modal dialog\");\n-        }\n@@ -131,5 +136,2 @@\n-        \/\/ check the dialog is still modal\n-        MouseListener pressedListener = new MouseAdapter()\n-        {\n-            @Override\n-            public void mousePressed(MouseEvent me)\n+            \/\/ check the dialog is still modal\n+            MouseListener pressedListener = new MouseAdapter()\n@@ -137,1 +139,26 @@\n-                mousePressed = true;\n+                @Override\n+                public void mousePressed(MouseEvent me)\n+                {\n+                    mousePressed = true;\n+                }\n+            };\n+            f.addMouseListener(pressedListener);\n+\n+            mousePressed = false;\n+            r.mouseMove(fp.x + 50, fp.y + 50);\n+            Util.waitForIdle(r);\n+            r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+            Util.waitForIdle(r);\n+            r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            Util.waitForIdle(r);\n+            f.removeMouseListener(pressedListener);\n+\n+            if (mousePressed)\n+            {\n+                throw new RuntimeException(\"Test FAILED: modal dialog is not modal or visible after exception\");\n+            }\n+        } finally {\n+            \/\/ dispose frame and dialog\n+            if (f != null && d != null) {\n+                d.dispose();\n+                f.dispose();\n@@ -139,15 +166,0 @@\n-        };\n-        f.addMouseListener(pressedListener);\n-\n-        mousePressed = false;\n-        r.mouseMove(fp.x + 50, fp.y + 50);\n-        Util.waitForIdle(r);\n-        r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n-        Util.waitForIdle(r);\n-        r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n-        Util.waitForIdle(r);\n-        f.removeMouseListener(pressedListener);\n-\n-        if (mousePressed)\n-        {\n-            throw new RuntimeException(\"Test FAILED: modal dialog is not modal or visible after exception\");\n@@ -155,4 +167,0 @@\n-\n-        \/\/ test is passed\n-        d.dispose();\n-        f.dispose();\n","filename":"test\/jdk\/java\/awt\/EventDispatchThread\/HandleExceptionOnEDT\/HandleExceptionOnEDT.java","additions":104,"deletions":96,"binary":false,"changes":200,"status":"modified"}]}