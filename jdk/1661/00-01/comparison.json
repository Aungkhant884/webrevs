{"files":[{"patch":"@@ -51,10 +51,1 @@\n-\n-  \/\/ Check invocations\n-  if (skip_operation()) {\n-    \/\/ skip collection\n-    Heap_lock->unlock();\n-    _prologue_succeeded = false;\n-  } else {\n-    _prologue_succeeded = true;\n-  }\n-  return _prologue_succeeded;\n+  return true;\n@@ -64,3 +55,0 @@\n-  if (Universe::has_reference_pending_list()) {\n-    Heap_lock->notify_all();\n-  }\n@@ -123,1 +111,11 @@\n-  return VM_GC_Sync_Operation::doit_prologue();\n+  VM_GC_Sync_Operation::doit_prologue();\n+\n+  \/\/ Check invocations\n+  if (skip_operation()) {\n+    \/\/ skip collection\n+    Heap_lock->unlock();\n+    _prologue_succeeded = false;\n+  } else {\n+    _prologue_succeeded = true;\n+  }\n+  return _prologue_succeeded;\n@@ -131,1 +129,3 @@\n-\n+  if (Universe::has_reference_pending_list()) {\n+    Heap_lock->notify_all();\n+  }\n","filename":"src\/hotspot\/share\/gc\/shared\/gcVMOperations.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -42,12 +42,12 @@\n-\/\/      VM_GC_Sync_Operation\n-\/\/        VM_GC_Operation\n-\/\/            VM_GC_HeapInspection\n-\/\/            VM_PopulateDynamicDumpSharedSpace\n-\/\/            VM_GenCollectFull\n-\/\/            VM_GenCollectFullConcurrent\n-\/\/            VM_ParallelGCSystemGC\n-\/\/            VM_CollectForAllocation\n-\/\/                VM_GenCollectForAllocation\n-\/\/                VM_ParallelGCFailedAllocation\n-\/\/        VM_Verify\n-\/\/        VM_PopulateDumpSharedSpace\n+\/\/    VM_GC_Sync_Operation\n+\/\/      VM_GC_Operation\n+\/\/        VM_GC_HeapInspection\n+\/\/        VM_PopulateDynamicDumpSharedSpace\n+\/\/        VM_GenCollectFull\n+\/\/        VM_GenCollectFullConcurrent\n+\/\/        VM_ParallelGCSystemGC\n+\/\/        VM_CollectForAllocation\n+\/\/          VM_GenCollectForAllocation\n+\/\/          VM_ParallelGCFailedAllocation\n+\/\/      VM_Verify\n+\/\/      VM_PopulateDumpSharedSpace\n@@ -56,1 +56,1 @@\n-\/\/   - base class that implements synchronization with other VM operations of the\n+\/\/   - implements only synchronization with other VM operations of the\n@@ -61,1 +61,1 @@\n-\/\/     checking that the VM is in a state to do GC and also preventing multiple GC\n+\/\/     checking that the VM is in a state to do GC and preventing multiple GC\n@@ -92,5 +92,0 @@\n-\n-  bool _prologue_succeeded;\n-protected:\n-\n-  virtual bool skip_operation() const { return false; }\n@@ -99,1 +94,1 @@\n-  VM_GC_Sync_Operation() : VM_Operation(), _prologue_succeeded(false) { }\n+  VM_GC_Sync_Operation() : VM_Operation() { }\n@@ -101,1 +96,1 @@\n-  \/\/ Acquire the reference synchronization lock\n+  \/\/ Acquires the Heap_lock.\n@@ -103,1 +98,1 @@\n-  \/\/ Do notifyAll (if needed) and release held lock\n+  \/\/ Releases the Heap_lock.\n@@ -105,3 +100,0 @@\n-\n-  \/\/ Returns whether doit_prologue succeeded\n-  bool prologue_succeeded() const { return _prologue_succeeded; }\n@@ -121,0 +113,1 @@\n+  bool           _prologue_succeeded;      \/\/ whether doit_prologue succeeded\n@@ -132,0 +125,1 @@\n+    _prologue_succeeded = false;\n@@ -153,1 +147,1 @@\n-  \/\/ Do notifyAll (if needed) and release held lock\n+  \/\/ Do notify_all (if needed) and release held lock\n@@ -157,0 +151,1 @@\n+  bool prologue_succeeded() const { return _prologue_succeeded; }\n","filename":"src\/hotspot\/share\/gc\/shared\/gcVMOperations.hpp","additions":21,"deletions":26,"binary":false,"changes":47,"status":"modified"}]}