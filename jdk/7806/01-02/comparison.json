{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -226,0 +226,56 @@\n+    @Benchmark\n+    public void convert_d2f() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resF[i] = (float) doubles[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void convert_d2i() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resI[i] = (int) doubles[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void convert_f2d() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resD[i] = (double) floats[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void convert_f2l() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resL[i] = (long) floats[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void convert_i2d() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resD[i] = (double) ints[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void convert_i2l() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resL[i] = (long) ints[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void convert_l2f() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resF[i] = (float) longs[i];\n+        }\n+    }\n+\n+    @Benchmark\n+    public void convert_l2i() {\n+        for (int i = 0; i < COUNT; i++) {\n+            resI[i] = (int) longs[i];\n+        }\n+    }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/TypeVectorOperations.java","additions":57,"deletions":1,"binary":false,"changes":58,"status":"modified"}]}