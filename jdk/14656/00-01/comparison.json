{"files":[{"patch":"@@ -573,0 +573,1 @@\n+     * @throws AsynchronousCloseException if not completed and the channel is closed\n@@ -574,1 +575,1 @@\n-    private void afterTransfer(int ti) {\n+    private void afterTransfer(boolean completed, int ti) throws AsynchronousCloseException {\n@@ -576,0 +577,3 @@\n+        if (!completed && !isOpen()) {\n+            throw new AsynchronousCloseException();\n+        }\n@@ -644,1 +648,1 @@\n-        long n = -1;\n+        boolean completed = false;\n@@ -651,1 +655,1 @@\n-                    n = transferToFileDescriptor(position, count, target.fd);\n+                    long n = transferToFileDescriptor(position, count, target.fd);\n@@ -660,0 +664,1 @@\n+                    completed = (n >= 0);\n@@ -662,1 +667,1 @@\n-                    target.afterTransfer(targetIndex);\n+                    target.afterTransfer(completed, targetIndex);\n@@ -665,1 +670,1 @@\n-                source.afterTransfer(sourceIndex);\n+                source.afterTransfer(completed, sourceIndex);\n@@ -668,1 +673,1 @@\n-            endBlocking(n >= 0);\n+            endBlocking(completed);\n@@ -679,1 +684,1 @@\n-        long n = -1;\n+        boolean completed = false;\n@@ -686,1 +691,1 @@\n-                    n = transferToFileDescriptor(position, count, target.getFD());\n+                    long n = transferToFileDescriptor(position, count, target.getFD());\n@@ -694,0 +699,1 @@\n+                    completed = (n >= 0);\n@@ -696,1 +702,1 @@\n-                    target.afterTransferTo();\n+                    target.afterTransferTo(completed);\n@@ -699,1 +705,1 @@\n-                source.threads.remove(sourceIndex);\n+                source.afterTransfer(completed, sourceIndex);\n@@ -702,1 +708,1 @@\n-            endBlocking(n >= 0);\n+            endBlocking(completed);\n@@ -934,1 +940,1 @@\n-        long n = -1;\n+        boolean completed = false;\n@@ -941,1 +947,1 @@\n-                    n = transferFromFileDescriptor(src.fd, position, count);\n+                    long n = transferFromFileDescriptor(src.fd, position, count);\n@@ -946,0 +952,1 @@\n+                    completed = (n >= 0);\n@@ -948,1 +955,1 @@\n-                    src.afterTransfer(srcIndex);\n+                    src.afterTransfer(completed, srcIndex);\n@@ -951,1 +958,1 @@\n-                this.afterTransfer(thisIndex);\n+                this.afterTransfer(completed, thisIndex);\n@@ -954,1 +961,1 @@\n-            end (n >= 0);\n+            endBlocking(completed);\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":23,"deletions":16,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -646,0 +646,1 @@\n+     * @throws AsynchronousCloseException if not completed and the channel is closed\n@@ -647,1 +648,1 @@\n-    void afterTransferTo() {\n+    void afterTransferTo(boolean completed) throws AsynchronousCloseException {\n@@ -655,0 +656,3 @@\n+        if (!completed && !isOpen()) {\n+            throw new AsynchronousCloseException();\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/SocketChannelImpl.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}