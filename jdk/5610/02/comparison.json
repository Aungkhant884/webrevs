{"files":[{"patch":"@@ -902,1 +902,1 @@\n-     * Prints a boolean and then terminate the line.  This method behaves as\n+     * Prints a boolean and then terminates the line.  This method behaves as\n@@ -920,1 +920,1 @@\n-     * Prints a character and then terminate the line.  This method behaves as\n+     * Prints a character and then terminates the line.  This method behaves as\n@@ -938,1 +938,1 @@\n-     * Prints an integer and then terminate the line.  This method behaves as\n+     * Prints an integer and then terminates the line.  This method behaves as\n@@ -956,1 +956,1 @@\n-     * Prints a long and then terminate the line.  This method behaves as\n+     * Prints a long and then terminates the line.  This method behaves as\n@@ -974,1 +974,1 @@\n-     * Prints a float and then terminate the line.  This method behaves as\n+     * Prints a float and then terminates the line.  This method behaves as\n@@ -992,1 +992,1 @@\n-     * Prints a double and then terminate the line.  This method behaves as\n+     * Prints a double and then terminates the line.  This method behaves as\n@@ -1010,1 +1010,1 @@\n-     * Prints an array of characters and then terminate the line.  This method\n+     * Prints an array of characters and then terminates the line.  This method\n@@ -1028,1 +1028,1 @@\n-     * Prints a String and then terminate the line.  This method behaves as\n+     * Prints a String and then terminates the line.  This method behaves as\n@@ -1046,1 +1046,1 @@\n-     * Prints an Object and then terminate the line.  This method calls\n+     * Prints an Object and then terminates the line.  This method calls\n","filename":"src\/java.base\/share\/classes\/java\/io\/PrintStream.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * field. The stream is reset to it's initial state and all references\n+ * field. The stream is reset to its initial state and all references\n","filename":"src\/java.base\/share\/classes\/java\/io\/WriteAbortedException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -353,3 +353,2 @@\n-     * @param enableSuppression whether or not suppression is enabled or disabled\n-     * @param writableStackTrace whether or not the stack trace should be\n-     *                           writable\n+     * @param enableSuppression whether or not suppression is enabled\n+     * @param writableStackTrace whether or not the stack trace is writable\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Throwable.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-     * using the first six argumennts as the key.\n+     * using the first six arguments as the key.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/LambdaProxyClassArchive.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4424,1 +4424,1 @@\n-     * an {@code index}, {@code T} and it's corresponding boxed type,\n+     * an {@code index}, {@code T} and its corresponding boxed type,\n@@ -4511,1 +4511,1 @@\n-     * {@code index}, {@code T} and it's corresponding boxed type,\n+     * {@code index}, {@code T} and its corresponding boxed type,\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n- * over the file for it's size that was observed when the stream was created.\n+ * over the file for its size that was observed when the stream was created.\n@@ -62,1 +62,1 @@\n- * the identified line feed characters(s) at the end of it's covered range of\n+ * the identified line feed characters(s) at the end of its covered range of\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileChannelLinesSpliterator.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -812,1 +812,1 @@\n-     * invalidate it's local cache values.\n+     * invalidate its local cache values.\n","filename":"src\/java.base\/share\/classes\/java\/security\/Security.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-     * with the first non-white space character and up to, but not\n+     * with the first non-whitespace character and up to, but not\n@@ -296,1 +296,1 @@\n-     * key is skipped; if the first non-white space character after\n+     * key is skipped; if the first non-whitespace character after\n","filename":"src\/java.base\/share\/classes\/java\/util\/Properties.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -584,2 +584,2 @@\n-     * then it's output shape corresponds to the shape of the source.\n-     * Otherwise, it's output shape corresponds to the output shape of the\n+     * then its output shape corresponds to the shape of the source.\n+     * Otherwise, its output shape corresponds to the output shape of the\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/AbstractPipeline.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}