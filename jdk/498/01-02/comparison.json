{"files":[{"patch":"@@ -55,0 +55,1 @@\n+    private static volatile TestObject testObjectNone = null;\n@@ -69,0 +70,1 @@\n+        testObjectNone = new TestObject(0);\n@@ -93,0 +95,1 @@\n+        gcUntilOld(testObjectNone);\n@@ -115,0 +118,1 @@\n+        expectNotValue(ref, testObjectNone, which);\n@@ -122,0 +126,1 @@\n+        expectNotValue(ref, testObjectNone, which);\n@@ -130,0 +135,2 @@\n+        expectNotValue(ref, testObjectNone, which);\n+        expectNotCleared(ref, which);\n@@ -131,5 +138,1 @@\n-            if (ref.refersTo(null)) {\n-                fail(\"expected \" + which + \" to not be cleared\");\n-            } else {\n-                fail(which + \" refers to unexpected value\");\n-            }\n+            fail(which + \" doesn't refer to expected value\");\n@@ -155,0 +158,1 @@\n+        \/\/ testObjectNone not dropped\n@@ -181,1 +185,0 @@\n-\n@@ -183,3 +186,0 @@\n-            expectNotCleared(testWeak3, \"testWeak3\");\n-\n-            expectNotValue(testWeak2, testObject3, \"testWeak2\");\n@@ -199,4 +199,0 @@\n-            expectNotCleared(testWeak3, \"testWeak3\");\n-            expectNotCleared(testWeak4, \"testWeak4\");\n-\n-            expectNotValue(testPhantom1, testObject3, \"testPhantom1\");\n@@ -204,1 +200,2 @@\n-            expectNotValue(testWeak4, testObject3, \"testWeak4\");\n+            \/\/ This is true for all currently supported concurrent collectors.\n+            expectNotCleared(testWeak4, \"testWeak4\");\n@@ -281,4 +278,0 @@\n-        expectNotCleared(testWeak3, \"testWeak3\");\n-        expectNotCleared(testWeak4, \"testWeak4\");\n-\n-        expectNotValue(testWeak2, testObject3, \"testWeak2\");\n@@ -286,0 +279,1 @@\n+        expectNotCleared(testWeak4, \"testWeak4\");\n","filename":"test\/hotspot\/jtreg\/gc\/TestReferenceRefersTo.java","additions":12,"deletions":18,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+ * @bug 8188055\n@@ -36,8 +37,0 @@\n-    private static final class TestObject {\n-        public final int value;\n-\n-        public TestObject(int value) {\n-            this.value = value;\n-        }\n-    }\n-\n@@ -48,5 +41,4 @@\n-    private static final <T extends Reference>\n-    void test(T ref,\n-              TestObject expectedValue,\n-              TestObject unexpectedValue,\n-              String kind) throws Exception {\n+    private static final <T extends Reference> void test(T ref,\n+                                                         Object expectedValue,\n+                                                         Object unexpectedValue,\n+                                                         String kind) throws Exception {\n@@ -55,1 +47,2 @@\n-        } else if (!ref.refersTo(expectedValue)) {\n+        }\n+        if (!ref.refersTo(expectedValue)) {\n@@ -57,1 +50,2 @@\n-        } else if (ref.refersTo(unexpectedValue)) {\n+        }\n+        if (ref.refersTo(unexpectedValue)) {\n@@ -63,1 +57,1 @@\n-        var queue = new ReferenceQueue<TestObject>();\n+        var queue = new ReferenceQueue<Object>();\n@@ -65,4 +59,4 @@\n-        var obj0 = new TestObject(0);\n-        var obj1 = new TestObject(1);\n-        var obj2 = new TestObject(2);\n-        var obj3 = new TestObject(3);\n+        var obj0 = new Object();\n+        var obj1 = new Object();\n+        var obj2 = new Object();\n+        var obj3 = new Object();\n","filename":"test\/jdk\/java\/lang\/ref\/ReferenceRefersTo.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"}]}