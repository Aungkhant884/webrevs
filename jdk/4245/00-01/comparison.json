{"files":[{"patch":"@@ -74,0 +74,1 @@\n+JVM_GetPreserveAllAnnotations\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -564,0 +564,3 @@\n+JNIEXPORT jboolean JNICALL\n+JVM_GetPreserveAllAnnotations(JNIEnv *env, jclass cls);\n+\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1505,0 +1505,3 @@\n+JVM_ENTRY(jboolean, JVM_GetPreserveAllAnnotations(JNIEnv *env, jclass cls))\n+  return PreserveAllAnnotations;\n+JVM_END\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -111,0 +111,3 @@\n+    private static native boolean preserveAllAnnotations();\n+    private static final boolean preserveAllAnnotations = preserveAllAnnotations();\n+\n@@ -123,1 +126,3 @@\n-                if (result.put(klass, a) != null) {\n+                if (\n+                    (preserveAllAnnotations || AnnotationType.getInstance(klass).retention() == RetentionPolicy.RUNTIME) &&\n+                    result.put(klass, a) != null) {\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationParser.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -103,0 +103,7 @@\n+JNIEXPORT jboolean JNICALL\n+Java_sun_reflect_annotation_AnnotationParser_preserveAllAnnotations(JNIEnv *env, jclass unused)\n+{\n+  jboolean t = JVM_GetPreserveAllAnnotations(env, unused);\n+  return t;\n+}\n+\n","filename":"src\/java.base\/share\/native\/libjava\/Class.c","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}