{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,5 +34,47 @@\n- * The {@code JarInputStream} class is used to read the contents of\n- * a JAR file from any input stream. It extends the class\n- * {@code java.util.zip.ZipInputStream} with support for reading\n- * an optional {@code Manifest} entry. The {@code Manifest}\n- * can be used to store meta-information about the JAR file and its entries.\n+ * The {@code JarInputStream} class, which extends {@link ZipInputStream},\n+ * is used to read the contents of a JAR file from an input stream.\n+ * It provides support for reading an optional {@link JarFile#MANIFEST_NAME Manifest}\n+ * entry. The {@code Manifest} can be used to store\n+ * meta-information about the JAR file and its entries.\n+ *\n+ * <h2>Accessing the Manifest<\/h2>\n+ * <p>\n+ * The {@link #getManifest} method will return the {@code Manifest} when it is\n+ * the first entry in the stream, or {@code META-INF\/} is the first entry and\n+ * the {@code Manifest} is the second entry within the stream.\n+ * <\/p>\n+ * <p>\n+ * When the {@code Manifest} is returned by {@code getManifest()}, the {@link #getNextEntry()}\n+ * and {@link #getNextJarEntry()} methods will not return the {@code Manifest}.\n+ * If {@code META-INF\/} is the first entry in the input stream it will be\n+ * also not be returned by {@link #getNextEntry()} and\n+ * {@link #getNextJarEntry()}.\n+ * <\/p>\n+ * <p>\n+ * {@link JarEntry#getAttributes()} will return the {@code Manifest}'s\n+ *  attributes for the current JAR file entry, if any, providing\n+ *  {@code getManifest()} returns a {@code Manifest} for the JAR file.\n+ * <\/p>\n+ *\n+ *  <h2>Verifying a JarInputStream<\/h2>\n+ *  {@link #JarInputStream(InputStream, boolean)} may be used to\n+ *  verify the signatures of a signed {@code JarInputStream} assuming the\n+ *  following requirements are met:\n+ *  <ul>\n+ *      <li>\n+ *         The {@link #getManifest()} returns a {@code Manifest} for the JAR\n+ *         file\n+ *      <\/li>\n+ *      <li>\n+ *         All signature-related entries immediately follow the {@code Manifest}\n+ *      <\/li>\n+ *  <\/ul>\n+ *  Once the {@code JarEntry} has been completely verified, which is done by\n+ *  reading until the end of the entry's input stream,\n+ *  {@link JarEntry#getCertificates()} may be called to obtain the certificates\n+ *  for this entry and {@link JarEntry#getCodeSigners()} may be called to obtain\n+ *  the signers.\n+ * <p>\n+ * <b>Note:<\/b> If a {@code JarEntry} is modified after the JAR file is signed,\n+ * a {@link SecurityException} will be thrown when the entry is read.\n+ * <\/p>\n","filename":"src\/java.base\/share\/classes\/java\/util\/jar\/JarInputStream.java","additions":48,"deletions":6,"binary":false,"changes":54,"status":"modified"}]}