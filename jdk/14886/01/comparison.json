{"files":[{"patch":"@@ -957,0 +957,1 @@\n+    @Override\n@@ -962,3 +963,1 @@\n-     * Computes a hashcode for this charset.\n-     *\n-     * @return  An integer hashcode\n+     * {@return the hashcode for this charset}\n@@ -966,0 +965,1 @@\n+    @Override\n@@ -979,0 +979,1 @@\n+    @Override\n@@ -980,2 +981,0 @@\n-        if (!(ob instanceof Charset))\n-            return false;\n@@ -984,1 +983,1 @@\n-        return name.equals(((Charset)ob).name());\n+        return ob instanceof Charset other && name.equals(other.name());\n@@ -988,3 +987,1 @@\n-     * Returns a string describing this charset.\n-     *\n-     * @return  A string describing this charset\n+     * {@return the string describing this charset}\n@@ -992,0 +989,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/nio\/charset\/Charset.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -987,0 +987,1 @@\n+    @Override\n@@ -998,0 +999,1 @@\n+    @Override\n@@ -1001,1 +1003,1 @@\n-     * Returns the string representation of this path.\n+     * {@return the string representation of this path}\n@@ -1009,2 +1011,0 @@\n-     *\n-     * @return  the string representation of this path\n@@ -1012,0 +1012,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/Path.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -360,4 +360,0 @@\n-    private static int hash(int h, Object o) {\n-        return h * 127 + o.hashCode();\n-    }\n-\n@@ -373,8 +369,6 @@\n-        if (hash != 0)\n-            return hash;\n-        int h = type.hashCode();\n-        h = hash(h, who);\n-        h = hash(h, perms);\n-        h = hash(h, flags);\n-        hash = h;\n-        return hash;\n+        int h = hash;\n+        if (h == 0) {\n+            h = Objects.hash(type, who, perms, flags);\n+            hash = h;\n+        }\n+        return h;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/AclEntry.java","additions":7,"deletions":13,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -294,1 +294,1 @@\n-        return (obj instanceof FileTime) ? compareTo((FileTime)obj) == 0 : false;\n+        return obj instanceof FileTime other && compareTo(other) == 0;\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/attribute\/FileTime.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,1 @@\n+    @Override\n@@ -52,0 +53,1 @@\n+    @Override\n@@ -55,8 +57,3 @@\n-        if (!(obj instanceof FileKey))\n-            return false;\n-        FileKey other = (FileKey)obj;\n-        if ((this.st_dev != other.st_dev) ||\n-            (this.st_ino != other.st_ino)) {\n-            return false;\n-        }\n-        return true;\n+        return obj instanceof FileKey other\n+                && (this.st_dev == other.st_dev)\n+                && (this.st_ino == other.st_ino);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/ch\/FileKey.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2009, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,4 +51,3 @@\n-        if (!(obj instanceof UnixFileKey))\n-            return false;\n-        UnixFileKey other = (UnixFileKey)obj;\n-        return (this.st_dev == other.st_dev) && (this.st_ino == other.st_ino);\n+        return obj instanceof UnixFileKey other\n+                && (this.st_dev == other.st_dev)\n+                && (this.st_ino == other.st_ino);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileKey.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -237,1 +237,1 @@\n-        if (!(ob instanceof UnixFileStore))\n+        if (!(ob instanceof UnixFileStore other))\n@@ -239,1 +239,0 @@\n-        UnixFileStore other = (UnixFileStore)ob;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileStore.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+import java.util.Arrays;\n@@ -44,0 +45,1 @@\n+import jdk.internal.util.ArraysSupport;\n@@ -709,6 +711,0 @@\n-        if ((thatLen - thatPos) != (thisLen - thisPos))\n-            return false;\n-        while (thatPos < thatLen) {\n-            if (this.path[thisPos++] != that.path[thatPos++])\n-                return false;\n-        }\n@@ -716,1 +712,2 @@\n-        return true;\n+        return Arrays.equals(this.path, thisPos, thisLen, that.path, thatPos,\n+                thatLen);\n@@ -721,17 +718,1 @@\n-        int len1 = path.length;\n-        int len2 = ((UnixPath) other).path.length;\n-\n-        int n = Math.min(len1, len2);\n-        byte v1[] = path;\n-        byte v2[] = ((UnixPath) other).path;\n-\n-        int k = 0;\n-        while (k < n) {\n-            int c1 = v1[k] & 0xff;\n-            int c2 = v2[k] & 0xff;\n-            if (c1 != c2) {\n-                return c1 - c2;\n-            }\n-           k++;\n-        }\n-        return len1 - len2;\n+        return Arrays.compareUnsigned(path, ((UnixPath) other).path);\n@@ -742,4 +723,1 @@\n-        if (ob instanceof UnixPath path) {\n-            return compareTo(path) == 0;\n-        }\n-        return false;\n+        return ob instanceof UnixPath p && compareTo(p) == 0;\n@@ -753,3 +731,2 @@\n-            for (int i = 0; i< path.length; i++) {\n-                h = 31*h + (path[i] & 0xff);\n-            }\n+            h = ArraysSupport.vectorizedHashCode(path, 0, path.length, 0,\n+                    \/* unsigned bytes *\/ ArraysSupport.T_BOOLEAN);\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":8,"deletions":31,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-            if (!(obj instanceof User))\n+            if (!(obj instanceof User other))\n@@ -86,1 +86,0 @@\n-            User other = (User)obj;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixUserPrincipals.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+    @Override\n@@ -51,1 +52,1 @@\n-               (int)(nFileIndexLow ^ (nFileIndexHigh >>> 32));\n+               (int)(nFileIndexLow ^ (nFileIndexLow >>> 32));\n@@ -54,0 +55,1 @@\n+    @Override\n@@ -57,9 +59,4 @@\n-        if (!(obj instanceof FileKey))\n-            return false;\n-        FileKey other = (FileKey)obj;\n-        if ((this.dwVolumeSerialNumber != other.dwVolumeSerialNumber) ||\n-            (this.nFileIndexHigh != other.nFileIndexHigh) ||\n-            (this.nFileIndexLow != other.nFileIndexLow)) {\n-            return false;\n-        }\n-        return true;\n+        return obj instanceof FileKey other\n+                && this.dwVolumeSerialNumber == other.dwVolumeSerialNumber\n+                && this.nFileIndexHigh == other.nFileIndexHigh\n+                && this.nFileIndexLow == other.nFileIndexLow;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/ch\/FileKey.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -815,4 +815,1 @@\n-        if (obj instanceof WindowsPath path) {\n-            return compareTo(path) == 0;\n-        }\n-        return false;\n+        return obj instanceof WindowsPath other && compareTo(other) == 0;\n@@ -826,1 +823,1 @@\n-            for (int i = 0; i< path.length(); i++) {\n+            for (int i = 0; i < path.length(); i++) {\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsPath.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -83,4 +83,2 @@\n-            if (!(obj instanceof WindowsUserPrincipals.User))\n-                return false;\n-            WindowsUserPrincipals.User other = (WindowsUserPrincipals.User)obj;\n-            return this.sidString.equals(other.sidString);\n+            return obj instanceof WindowsUserPrincipals.User other\n+                    && this.sidString.equals(other.sidString);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsUserPrincipals.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -234,6 +234,4 @@\n-            if (!(obj instanceof FileKey))\n-                return false;\n-            FileKey other = (FileKey)obj;\n-            if (this.volSerialNumber != other.volSerialNumber) return false;\n-            if (this.fileIndexHigh != other.fileIndexHigh) return false;\n-            return this.fileIndexLow == other.fileIndexLow;\n+            return obj instanceof FileKey other\n+                    && this.volSerialNumber == other.volSerialNumber\n+                    && this.fileIndexHigh == other.fileIndexHigh\n+                    && this.fileIndexLow == other.fileIndexLow;\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsWatchService.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -639,14 +639,1 @@\n-        int len1 = this.path.length;\n-        int len2 = o.path.length;\n-\n-        int n = Math.min(len1, len2);\n-\n-        int k = 0;\n-        while (k < n) {\n-            int c1 = this.path[k] & 0xff;\n-            int c2 = o.path[k] & 0xff;\n-            if (c1 != c2)\n-                return c1 - c2;\n-            k++;\n-        }\n-        return len1 - len2;\n+        return Arrays.compareUnsigned(this.path, o.path);\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipPath.java","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"}]}