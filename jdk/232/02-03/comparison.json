{"files":[{"patch":"@@ -211,1 +211,5 @@\n-        return getDerValue().subs((byte)0, startLen);\n+        if (implicit) {\n+            return getDerValue().subs((byte) 0, startLen);\n+        } else {\n+            return getSet(startLen);\n+        }\n@@ -242,1 +246,1 @@\n-        } else {                     \/\/ long form or indefinite\n+        } else {                     \/\/ long form\n@@ -246,3 +250,2 @@\n-            if (tmp < 0 || tmp > 4) {\n-                throw new IOException(mdName + \"lengthTag=\" + tmp + \", \"\n-                        + ((tmp < 0) ? \"incorrect DER encoding.\" : \"too big.\"));\n+            if (tmp > 4) {\n+                throw new IOException(mdName + \"lengthTag=\" + tmp + \", too big.\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerInputStream.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -351,1 +351,1 @@\n-            if (lenByte < 0 || lenByte > 4) {\n+            if (lenByte > 4) {\n@@ -458,5 +458,1 @@\n-     * Returns the data field inside this class. This method should be\n-     * avoided because the data field is mutable but every call always\n-     * return the same object. The caller had better directly use the\n-     * data field. A better way is to call data() that will always return\n-     * a new DerInputStream that points to the beginning of the content.\n+     * Returns the data field inside this class directly.\n@@ -828,1 +824,1 @@\n-        String type = null;\n+        String type;\n@@ -899,9 +895,3 @@\n-                        case 1:\n-                            millis += 100 * thisDigit;\n-                            break;\n-                        case 2:\n-                            millis += 10 * thisDigit;\n-                            break;\n-                        case 3:\n-                            millis += thisDigit;\n-                            break;\n+                        case 1 -> millis += 100 * thisDigit;\n+                        case 2 -> millis += 10 * thisDigit;\n+                        case 3 -> millis += thisDigit;\n@@ -1215,1 +1205,1 @@\n-        return result.toArray(new DerValue[result.size()]);\n+        return result.toArray(new DerValue[0]);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"}]}