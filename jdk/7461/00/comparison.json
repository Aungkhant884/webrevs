{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2005, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,0 +59,8 @@\n+\/*\n+ * Note: jvmtiAllocate\/jvmtiDeallocate() may be blocked by ongoing safepoints.\n+ * It is dangerous to call them (via bagCreateBag\/bagDestroyBag())while holding monitor(s),\n+ * because jvmti may post events, e.g. JVMTI_EVENT_OBJECT_FREE at safepoints and its event\n+ * handler may acquire the same monitor(s), e.g. classTrackLock in cbTrackingObjectFree(),\n+ * which can lead to deadlock.\n+ *\/\n+\n@@ -91,1 +99,10 @@\n-    deletedSignatures = bagCreateBag(sizeof(char*), 10);\n+    deletedSignatures = NULL;\n+    debugMonitorExit(classTrackLock);\n+\n+    \/\/ Allocate new bag outside classTrackLock lock to avoid deadlock\n+    struct bag* new_bag = bagCreateBag(sizeof(char*), 10);\n+    debugMonitorEnter(classTrackLock);\n+    if (deletedSignatures == NULL) {\n+      deletedSignatures = new_bag;\n+      new_bag = NULL;\n+    }\n@@ -93,0 +110,1 @@\n+    bagDestroyBag(new_bag);\n@@ -197,0 +215,1 @@\n+    struct bag* new_bag = bagCreateBag(sizeof(char*), 1000);\n@@ -198,1 +217,1 @@\n-    deletedSignatures = bagCreateBag(sizeof(char*), 1000);\n+    deletedSignatures = new_bag;\n@@ -216,0 +235,1 @@\n+    struct bag* to_delete = NULL;\n@@ -220,1 +240,1 @@\n-        bagDestroyBag(deletedSignatures);\n+        to_delete = deletedSignatures;\n@@ -225,0 +245,1 @@\n+    bagDestroyBag(to_delete);\n","filename":"src\/jdk.jdwp.agent\/share\/native\/libjdwp\/classTrack.c","additions":25,"deletions":4,"binary":false,"changes":29,"status":"modified"}]}