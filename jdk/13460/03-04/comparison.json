{"files":[{"patch":"@@ -4324,1 +4324,1 @@\n-  int itentry_off = itableMethodEntry::method_offset_in_bytes();\n+  int itentry_off = in_bytes(itableMethodEntry::method_offset());\n@@ -4327,2 +4327,2 @@\n-  int ioffset = itableOffsetEntry::interface_offset_in_bytes();\n-  int ooffset = itableOffsetEntry::offset_offset_in_bytes();\n+  int ioffset = in_bytes(itableOffsetEntry::interface_offset());\n+  int ooffset = in_bytes(itableOffsetEntry::offset_offset());\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -204,4 +204,7 @@\n-  __ lookup_interface_method_stub(recv_klass_reg,\n-                                  holder_klass_reg,\n-                                  resolved_klass_reg,\n-                                  method,\n+\n+  \/\/ Receiver subtype check against REFC.\n+  \/\/ Get selected method from declaring class and itable index\n+  __ lookup_interface_method_stub(recv_klass_reg, \/\/ input\n+                                  holder_klass_reg, \/\/ input\n+                                  resolved_klass_reg, \/\/ input\n+                                  method, \/\/ output\n@@ -210,1 +213,1 @@\n-                                  receiver,\n+                                  receiver, \/\/ input (x86_32 only: to restore recv_klass value)\n","filename":"src\/hotspot\/cpu\/x86\/vtableStubs_x86_32.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -183,1 +183,0 @@\n-  const Register receiver           = j_rarg0;\n@@ -197,4 +196,6 @@\n-  __ lookup_interface_method_stub(recv_klass_reg,\n-                                  holder_klass_reg,\n-                                  resolved_klass_reg,\n-                                  method,\n+  \/\/ Receiver subtype check against REFC.\n+  \/\/ Get selected method from declaring class and itable index\n+  __ lookup_interface_method_stub(recv_klass_reg, \/\/ input\n+                                  holder_klass_reg, \/\/ input\n+                                  resolved_klass_reg, \/\/ input\n+                                  method, \/\/ output\n@@ -203,1 +204,1 @@\n-                                  receiver,\n+                                  noreg,\n","filename":"src\/hotspot\/cpu\/x86\/vtableStubs_x86_64.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -220,0 +220,2 @@\n+    int l = 0;\n+\n@@ -222,4 +224,4 @@\n-    public void testIfaceCall(Blackhole bh) {\n-        for (int i = 0; i < noninlined.length; i++) {\n-            bh.consume(noninlined[i].getIntFirst());\n-        }\n+    public int testIfaceCall(Blackhole bh) {\n+        FirstInterface ai = noninlined[l];\n+        l = ++ l % asLength;\n+        return ai.getIntFirst();\n@@ -230,4 +232,4 @@\n-    public void testIfaceExtCall(Blackhole bh) {\n-        for (int i = 0; i < noninlinedextext.length; i++) {\n-            bh.consume(noninlinedextext[i].getIntFirst());\n-        }\n+    public int testIfaceExtCall(Blackhole bh) {\n+        FirstInterfaceExtExt ai = noninlinedextext[l];\n+        l = ++ l % asLength;\n+        return ai.getIntFirst();\n@@ -236,2 +238,0 @@\n-    int l = 0;\n-\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/InterfaceCalls.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}