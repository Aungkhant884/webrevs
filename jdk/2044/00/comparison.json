{"files":[{"patch":"@@ -740,9 +740,0 @@\n-#ifndef _WIN32 \/\/ Demangler gives us no arguments on Windows\n-    if (demangle) {\n-      if (strip_arguments) {\n-        EXPECT_DOES_NOT_CONTAIN(output, \"(\");\n-      } else {\n-        EXPECT_CONTAINS(output, \"(\");\n-      }\n-    }\n-#endif \/\/ _WIN32\n@@ -770,26 +761,0 @@\n-\n-    \/\/ Pointer into system library\n-#ifndef _WIN32\n-    addr = CAST_FROM_FN_PTR(address, ::malloc);\n-    st.reset();\n-    EXPECT_TRUE(os::print_function_and_library_name(&st, addr,\n-                                                    provide_scratch_buffer ? tmp : NULL,\n-                                                    sizeof(tmp),\n-                                                    shorten_paths, demangle));\n-    EXPECT_CONTAINS(output, \"malloc\");\n-    LINUX_ONLY(EXPECT_CONTAINS(output, \"libc\"));\n-    MACOS_ONLY(EXPECT_CONTAINS(output, \"libsystem\"));\n-    LOG(\"%s\", output);\n-#else\n-    addr = CAST_FROM_FN_PTR(address, CreateFileA);\n-    st.reset(); \/\/ this also zero-terminates start of output\n-    EXPECT_TRUE(os::print_function_and_library_name(&st, addr,\n-                                                    provide_scratch_buffer ? tmp : NULL,\n-                                                    sizeof(tmp),\n-                                                    shorten_paths, demangle));\n-    for (char* p = output; *p; p++) {\n-      *p = ::toupper(*p);\n-    }\n-    EXPECT_CONTAINS(output, \"KERNEL32.DLL\");\n-    LOG(\"%s\", output);\n-#endif\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":0,"deletions":35,"binary":false,"changes":35,"status":"modified"}]}