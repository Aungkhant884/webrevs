{"files":[{"patch":"@@ -1301,1 +1301,1 @@\n-            putCharsAt(dstOffset, (String) s, start, end);\n+            putStringAt(dstOffset, (String) s, start, end);\n@@ -1716,10 +1716,1 @@\n-    private void putCharsAt(int index, String s, int off, int end) {\n-        if (isLatin1() && s.isLatin1()) {\n-            System.arraycopy(s.value(), off, this.value, index, end);\n-            return;\n-        }\n-        inflate();\n-        StringUTF16.putCharsSB(this.value, index, s, off, end);\n-    }\n-\n-    private final void putStringAt(int index, String str) {\n+    private void putStringAt(int index, String str, int off, int end) {\n@@ -1729,1 +1720,5 @@\n-        str.getBytes(value, index, coder);\n+        str.getBytes(value, off, index, coder, end);\n+    }\n+\n+    private void putStringAt(int index, String str) {\n+        putStringAt(index, str, 0, str.length() << str.coder());\n","filename":"src\/java.base\/share\/classes\/java\/lang\/AbstractStringBuilder.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -3602,1 +3602,17 @@\n-    void getBytes(byte dst[], int dstBegin, byte coder) {\n+    void getBytes(byte[] dst, int dstBegin, byte coder) {\n+        getBytes(dst, 0, dstBegin, coder, value.length);\n+    }\n+\n+    \/**\n+     * Copy character bytes from this string into dst starting at dstBegin.\n+     * This method doesn't perform any range checking.\n+     *\n+     * Invoker guarantees: dst is in UTF16 (inflate itself for asb), if two\n+     * coders are different, and dst is big enough (range check)\n+     *\n+     * @param srcPos    the char index, not offset of byte[]\n+     * @param dstBegin  the char index to start from\n+     * @param coder     the coder of dst[]\n+     * @param length    the amount of copied bytes\n+     *\/\n+    void getBytes(byte[] dst, int srcPos, int dstBegin, byte coder, int length) {\n@@ -3604,1 +3620,1 @@\n-            System.arraycopy(value, 0, dst, dstBegin << coder, value.length);\n+            System.arraycopy(value, srcPos, dst, dstBegin << coder, length);\n@@ -3606,1 +3622,1 @@\n-            StringLatin1.inflate(value, 0, dst, dstBegin, value.length);\n+            StringLatin1.inflate(value, srcPos, dst, dstBegin, length);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/String.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"}]}