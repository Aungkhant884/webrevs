{"files":[{"patch":"@@ -24,4 +24,5 @@\n-import javax.swing.*;\n-import javax.swing.border.Border;\n-import javax.swing.border.EmptyBorder;\n-import java.awt.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Graphics;\n+import java.awt.Graphics2D;\n+import java.awt.Insets;\n@@ -29,1 +30,9 @@\n-import java.nio.Buffer;\n+import java.io.File;\n+import java.io.IOException;\n+import java.lang.reflect.InvocationTargetException;\n+import javax.imageio.ImageIO;\n+import javax.swing.JScrollBar;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import javax.swing.border.Border;\n@@ -32,1 +41,0 @@\n-import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n@@ -41,12 +49,0 @@\n-\n-    \/\/ On macOS 10.12.6 using the Mac look and feel (com.apple.laf.AquaLookAndFeel)\n-    \/\/ the scroll bar ignores the custom border and allows the scroll thumb to move\n-    \/\/ beneath the border. Run with:\n-    \/\/ java ScrollBarBorderTest\n-\n-    \/\/ If run using any other look and feel (e.g. Metal) then the right side of\n-    \/\/ the scroll bar stops at the border as expected. Run with:\n-    \/\/ java -Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel ScrollBarBorderTest\n-\n-    \/\/ Java version: 1.8.0_151\n-\n@@ -54,30 +50,3 @@\n-    private static JPanel panel;\n-    private static JFrame frame;\n-\n-    public void createAndShowGUI() throws Exception {\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-                \/\/ create scroll bar\n-                scrollBar = new JScrollBar(Scrollbar.HORIZONTAL);\n-                scrollBar.setBorder(new CustomBorder());\n-\n-                \/\/ create panel\n-                panel = new JPanel();\n-                panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));\n-                panel.setBorder(new EmptyBorder(20, 20, 20, 20));\n-                panel.setSize(200,90);\n-                panel.add(new JLabel(UIManager.getLookAndFeel().toString()));\n-                panel.add(Box.createVerticalStrut(20));\n-                panel.add(scrollBar);\n-\n-                \/\/ create frame\n-                frame = new JFrame(\"ScrollBarBorderTest\");\n-                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-                frame.getContentPane().add(panel);\n-                frame.pack();\n-\n-                frame.setVisible(true);\n-            }\n-        });\n-    }\n+    public static final int BORDER_WIDTH = 150;\n+    public static final int WIDTH = BORDER_WIDTH + 200;\n+    public static final int HEIGHT = 20;\n@@ -97,5 +66,10 @@\n-    public void test() throws Exception {\n-        createAndShowGUI();\n-        BufferedImage image = new BufferedImage(panel.getWidth(),panel.getHeight(),TYPE_INT_ARGB);\n-        Graphics2D graphics2D = image.createGraphics();\n-        panel.paint(graphics2D);\n+    public static void test() {\n+        \/\/ create scroll bar\n+        scrollBar = new JScrollBar(JScrollBar.HORIZONTAL);\n+        scrollBar.setBorder(new CustomBorder());\n+        scrollBar.setSize(WIDTH, HEIGHT);\n+\n+        \/\/ paint image with thumb set to default value\n+        BufferedImage image1 = new BufferedImage(WIDTH, HEIGHT, TYPE_INT_ARGB);\n+        Graphics2D graphics2D = image1.createGraphics();\n+        scrollBar.paint(graphics2D);\n@@ -103,0 +77,2 @@\n+\n+        \/\/ paint image with thumb set to max value\n@@ -104,1 +80,1 @@\n-        BufferedImage image2 = new BufferedImage(panel.getWidth(),panel.getHeight(),TYPE_INT_ARGB);\n+        BufferedImage image2 = new BufferedImage(WIDTH, HEIGHT, TYPE_INT_ARGB);\n@@ -106,1 +82,1 @@\n-        panel.paint(graphics2D2);\n+        scrollBar.paint(graphics2D2);\n@@ -109,3 +85,4 @@\n-        for (int i = 450; i < image.getWidth(); i++) {\n-            for (int j = 70; j < image.getHeight(); j++) {\n-                int c1 = image.getRGB(i,j);\n+        \/\/ check border for thumb\n+        for (int i = WIDTH - BORDER_WIDTH; i < WIDTH; i++) {\n+            for (int j = 0; j < HEIGHT; j++) {\n+                int c1 = image1.getRGB(i,j);\n@@ -114,3 +91,7 @@\n-                    System.out.println(i + \" \" + j + \" \" + \"Color1: \" + c1);\n-                    System.out.println(i + \" \" + j + \" \" + \"Color2: \" + c2);\n-                    throw new RuntimeException();\n+                    System.out.println(i + \" \" + j + \" \" + \"Color1: \"\n+                                       + Integer.toHexString(c1));\n+                    System.out.println(i + \" \" + j + \" \" + \"Color2: \"\n+                                       + Integer.toHexString(c2));\n+                    saveImage(image1, \"image1.png\");\n+                    saveImage(image2, \"image2.png\");\n+                    throw new RuntimeException(\"Border has a thumb in it\");\n@@ -122,7 +103,7 @@\n-    public void done() throws Exception {\n-        SwingUtilities.invokeAndWait(new Runnable() {\n-            @Override\n-            public void run() {\n-                frame.dispose();\n-            }\n-        });\n+    private static void saveImage(BufferedImage image, String filename) {\n+        try {\n+            ImageIO.write(image, \"png\", new File(filename));\n+        } catch (IOException e) {\n+            \/\/ Don't propagate the exception\n+            e.printStackTrace();\n+        }\n@@ -132,2 +113,0 @@\n-        ScrollBarBorderTest borderTest = new ScrollBarBorderTest();\n-\n@@ -137,3 +116,3 @@\n-                borderTest.test();\n-            } finally {\n-                borderTest.done();\n+                SwingUtilities.invokeAndWait(ScrollBarBorderTest::test);\n+            } catch (InvocationTargetException e) {\n+                throw new RuntimeException(\"Border has a thumb in it\");\n@@ -148,1 +127,1 @@\n-            g.fillRect(width - 150, y, width, height);\n+            g.fillRect(width - BORDER_WIDTH, y, width, height);\n","filename":"test\/jdk\/java\/awt\/Scrollbar\/AquaLFScrollbarTest\/ScrollBarBorderTest.java","additions":53,"deletions":74,"binary":false,"changes":127,"status":"modified"}]}