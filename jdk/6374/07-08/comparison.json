{"files":[{"patch":"@@ -29,0 +29,1 @@\n+import java.nio.Buffer;\n@@ -31,0 +32,1 @@\n+import static java.awt.image.BufferedImage.TYPE_INT_RGB;\n@@ -55,1 +57,1 @@\n-    public void createImage(int scrollbarValue, final BufferedImage image) throws Exception {\n+    public void createAndShowGUI() throws Exception {\n@@ -62,1 +64,0 @@\n-                scrollBar.setValue(scrollbarValue);\n@@ -65,9 +66,1 @@\n-                panel = new JPanel() {\n-                    @Override\n-                    protected void paintComponent(final Graphics g) {\n-                        Graphics2D graphics2D = image.createGraphics();\n-                        super.paintComponent(graphics2D);\n-                        graphics2D.dispose();\n-                    }\n-                };\n-\n+                panel = new JPanel();\n@@ -84,2 +77,1 @@\n-\/\/                frame.getContentPane().add(panel);\n-                frame.getContentPane().add(new JLabel(new ImageIcon(image)));\n+                frame.getContentPane().add(panel);\n@@ -87,0 +79,2 @@\n+\n+                frame.setVisible(true);\n@@ -89,3 +83,0 @@\n-\n-        SwingUtilities.invokeAndWait(() -> frame.setVisible(true));\n-        SwingUtilities.invokeAndWait(frame::dispose);\n@@ -95,14 +86,20 @@\n-        final BufferedImage bi1 = new BufferedImage(550,90,TYPE_INT_ARGB);\n-        final BufferedImage bi2 = new BufferedImage(550,90,TYPE_INT_ARGB);\n-\n-        createImage(0,bi1);\n-        createImage(Integer.MAX_VALUE,bi2);\n-\n-        for (int i = 0; i < bi1.getWidth(); i++) {\n-            for (int j = 0; j < bi1.getHeight(); j++) {\n-                int c1 = bi1.getRGB(i,j);\n-                int c2 = bi2.getRGB(i,j);\n-                if (c1 != c2) {\n-                    \/\/ need to find location of border but colors are always 0\n-                    System.out.println(i + \" \" + j + \" \" + \"Color before \" + c1);\n-                    System.out.println(i + \" \" + j + \" \" + \"Color after \" + c2);\n+        createAndShowGUI();\n+        BufferedImage image = new BufferedImage(panel.getWidth(),panel.getHeight(),TYPE_INT_ARGB);\n+        Graphics2D graphics2D = image.createGraphics();\n+        panel.paint(graphics2D);\n+        graphics2D.dispose();\n+        scrollBar.setValue(Integer.MAX_VALUE);\n+        BufferedImage image2 = new BufferedImage(panel.getWidth(),panel.getHeight(),TYPE_INT_ARGB);\n+        Graphics2D graphics2D2 = image2.createGraphics();\n+        panel.paint(graphics2D2);\n+        graphics2D2.dispose();\n+\n+        for (int i = 450; i < image.getWidth(); i++) {\n+            for (int j = 50; j < image.getHeight(); j++) {\n+                int c1 = image.getRGB(i,j);\n+                int c2 = image2.getRGB(i,j);\n+                \/\/ need to find location of border but colors are always 0\n+                if(c1 != c2) {\n+                    System.out.println(i + \" \" + j + \" \" + \"Color1: \" + c1);\n+                    System.out.println(i + \" \" + j + \" \" + \"Color2: \" + c2);\n+                    throw new RuntimeException();\n@@ -114,0 +111,9 @@\n+    public void done() throws Exception {\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            @Override\n+            public void run() {\n+                frame.dispose();\n+            }\n+        });\n+    }\n+\n@@ -117,3 +123,1 @@\n-\n-\/\/        Thread.sleep(10000);\n-\/\/        throw new RuntimeException();\n+        borderTest.done();\n","filename":"test\/jdk\/java\/awt\/Scrollbar\/AquaLFScrollbarTest\/ScrollBarBorderTest.java","additions":37,"deletions":33,"binary":false,"changes":70,"status":"modified"}]}