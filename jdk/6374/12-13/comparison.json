{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -239,1 +239,1 @@\n-        return JRSUIUtils.HitDetection.getHitForPoint(painter.getControl(), 0, 0,\n+        return JRSUIUtils.HitDetection.getHitForPoint(painter.getControl(), insets.left, insets.top,\n","filename":"src\/java.desktop\/macosx\/classes\/com\/apple\/laf\/AquaScrollBarUI.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022 Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.awt.image.ImageObserver;\n@@ -33,1 +32,0 @@\n-import java.lang.reflect.InvocationTargetException;\n@@ -55,9 +53,5 @@\n-    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n-        try {\n-            UIManager.setLookAndFeel(laf.getClassName());\n-            System.out.println(laf.getName());\n-        } catch (UnsupportedLookAndFeelException ignored){\n-            System.out.println(\"Unsupported LookAndFeel: \" + laf.getClassName());\n-        } catch (ClassNotFoundException | InstantiationException |\n-                IllegalAccessException e) {\n-            throw new RuntimeException(e);\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            SwingUtilities.invokeAndWait(ScrollBarBorderTest::testHorizontal);\n+            SwingUtilities.invokeAndWait(ScrollBarBorderTest::testVertical);\n@@ -87,6 +81,6 @@\n-        for (int i = WIDTH - BORDER_WIDTH; i < WIDTH; i++) {\n-            for (int j = 0; j < HEIGHT; j++) {\n-                int c1 = image1.getRGB(i,j);\n-                int c2 = image2.getRGB(i,j);\n-                if(c1 != c2) {\n-                    System.out.println(i + \" \" + j + \" \" + \"Color1: \"\n+        for (int x = WIDTH - BORDER_WIDTH; x < WIDTH; x++) {\n+            for (int y = 0; y < HEIGHT; y++) {\n+                int c1 = image1.getRGB(x, y);\n+                int c2 = image2.getRGB(x, y);\n+                if (c1 != c2) {\n+                    System.out.println(x + \" \" + y + \" \" + \"Color1: \"\n@@ -94,1 +88,1 @@\n-                    System.out.println(i + \" \" + j + \" \" + \"Color2: \"\n+                    System.out.println(x + \" \" + y + \" \" + \"Color2: \"\n@@ -125,6 +119,6 @@\n-        for (int i = WIDTH - BORDER_WIDTH; i < WIDTH; i++) {\n-            for (int j = 0; j < HEIGHT; j++) {\n-                int c1 = image1.getRGB(j,i);\n-                int c2 = image2.getRGB(j,i);\n-                if(c1 != c2) {\n-                    System.out.println(i + \" \" + j + \" \" + \"Color1: \"\n+        for (int y = WIDTH - BORDER_WIDTH; y < WIDTH; y++) {\n+            for (int x = 0; x < HEIGHT; x++) {\n+                int c1 = image1.getRGB(x, y);\n+                int c2 = image2.getRGB(x, y);\n+                if (c1 != c2) {\n+                    System.out.println(x + \" \" + y + \" \" + \"Color1: \"\n@@ -132,1 +126,1 @@\n-                    System.out.println(i + \" \" + j + \" \" + \"Color2: \"\n+                    System.out.println(x + \" \" + y + \" \" + \"Color2: \"\n@@ -142,0 +136,12 @@\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+            System.out.println(laf.getName());\n+        } catch (UnsupportedLookAndFeelException ignored){\n+            System.out.println(\"Unsupported LookAndFeel: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException |\n+                IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n@@ -151,8 +157,0 @@\n-    public static void main(String[] args) throws Exception {\n-        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n-                SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n-                SwingUtilities.invokeAndWait(ScrollBarBorderTest::testHorizontal);\n-                SwingUtilities.invokeAndWait(ScrollBarBorderTest::testVertical);\n-        }\n-    }\n-\n@@ -161,0 +159,1 @@\n+        @Override\n@@ -166,0 +165,1 @@\n+        @Override\n@@ -167,1 +167,1 @@\n-            return new Insets(0, 0, 0, 150);\n+            return new Insets(0, 0, 0, BORDER_WIDTH);\n@@ -170,0 +170,1 @@\n+        @Override\n@@ -177,0 +178,1 @@\n+        @Override\n@@ -182,0 +184,1 @@\n+        @Override\n@@ -183,1 +186,1 @@\n-            return new Insets(0, 0, 150, 0);\n+            return new Insets(0, 0, BORDER_WIDTH, 0);\n@@ -186,0 +189,1 @@\n+        @Override\n","filename":"test\/jdk\/java\/awt\/Scrollbar\/AquaLFScrollbarTest\/ScrollBarBorderTest.java","additions":40,"deletions":36,"binary":false,"changes":76,"status":"modified"}]}