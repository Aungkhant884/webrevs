{"files":[{"patch":"@@ -1022,1 +1022,1 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2);\n@@ -1034,2 +1034,2 @@\n-  assert(arg_1 != c_rarg3, \"smashed arg\");\n-  assert(arg_2 != c_rarg3, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_2, c_rarg3);\n@@ -1038,1 +1038,0 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n@@ -1069,1 +1068,1 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2);\n@@ -1082,2 +1081,2 @@\n-  assert(arg_1 != c_rarg3, \"smashed arg\");\n-  assert(arg_2 != c_rarg3, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_2, c_rarg3);\n@@ -1085,1 +1084,0 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n@@ -1589,0 +1587,1 @@\n+  assert_different_registers(arg_1, c_rarg0);\n@@ -1596,0 +1595,2 @@\n+  assert_different_registers(arg_1, c_rarg0);\n+  assert_different_registers(arg_2, c_rarg0, c_rarg1);\n@@ -1609,1 +1610,1 @@\n-  assert(arg_0 != c_rarg1, \"smashed arg\");\n+  assert_different_registers(arg_0, c_rarg1);\n@@ -1616,2 +1617,2 @@\n-  assert(arg_0 != c_rarg2, \"smashed arg\");\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n+  assert_different_registers(arg_0, c_rarg1, c_rarg2);\n+  assert_different_registers(arg_1, c_rarg2);\n@@ -1619,1 +1620,0 @@\n-  assert(arg_0 != c_rarg1, \"smashed arg\");\n@@ -1626,3 +1626,3 @@\n-  assert(arg_0 != c_rarg3, \"smashed arg\");\n-  assert(arg_1 != c_rarg3, \"smashed arg\");\n-  assert(arg_2 != c_rarg3, \"smashed arg\");\n+  assert_different_registers(arg_0, c_rarg1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_2, c_rarg3);\n@@ -1630,2 +1630,0 @@\n-  assert(arg_0 != c_rarg2, \"smashed arg\");\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n@@ -1633,1 +1631,0 @@\n-  assert(arg_0 != c_rarg1, \"smashed arg\");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -1252,0 +1252,1 @@\n+  assert_different_registers(arg_2, R4_ARG2);\n@@ -1253,1 +1254,0 @@\n-  assert(arg_2 != R4_ARG2, \"smashed argument\");\n@@ -1261,0 +1261,2 @@\n+  assert_different_registers(arg_2, R4_ARG2);\n+  assert_different_registers(arg_3, R4_ARG2, R5_ARG3);\n@@ -1262,1 +1264,0 @@\n-  assert(arg_2 != R4_ARG2, \"smashed argument\");\n@@ -1278,0 +1279,1 @@\n+  assert_different_registers(arg_2, R3_ARG1);\n@@ -1279,1 +1281,0 @@\n-  assert(arg_2 != R3_ARG1, \"smashed argument\");\n@@ -1285,0 +1286,2 @@\n+  assert_different_registers(arg_2, R3_ARG1);\n+  assert_different_registers(arg_3, R3_ARG1, R4_ARG2);\n@@ -1286,1 +1289,0 @@\n-  assert(arg_2 != R3_ARG1, \"smashed argument\");\n@@ -1288,1 +1290,0 @@\n-  assert(arg_3 != R3_ARG1 && arg_3 != R4_ARG2, \"smashed argument\");\n","filename":"src\/hotspot\/cpu\/ppc\/macroAssembler_ppc.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -139,1 +139,1 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2);\n@@ -151,2 +151,2 @@\n-  assert(arg_1 != c_rarg3, \"smashed arg\");\n-  assert(arg_2 != c_rarg3, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_2, c_rarg3);\n@@ -155,1 +155,0 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n@@ -186,1 +185,1 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2);\n@@ -199,2 +198,2 @@\n-  assert(arg_1 != c_rarg3, \"smashed arg\");\n-  assert(arg_2 != c_rarg3, \"smashed arg\");\n+  assert_different_registers(arg_1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_2, c_rarg3);\n@@ -202,1 +201,0 @@\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n@@ -671,0 +669,1 @@\n+  assert_different_registers(arg_1, c_rarg0);\n@@ -678,0 +677,2 @@\n+  assert_different_registers(arg_1, c_rarg0);\n+  assert_different_registers(arg_2, c_rarg0, c_rarg1);\n@@ -691,1 +692,1 @@\n-  assert(arg_0 != c_rarg1, \"smashed arg\");\n+  assert_different_registers(arg_0, c_rarg1);\n@@ -698,2 +699,2 @@\n-  assert(arg_0 != c_rarg2, \"smashed arg\");\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n+  assert_different_registers(arg_0, c_rarg1, c_rarg2);\n+  assert_different_registers(arg_1, c_rarg2);\n@@ -701,1 +702,0 @@\n-  assert(arg_0 != c_rarg1, \"smashed arg\");\n@@ -708,3 +708,4 @@\n-  assert(arg_0 != c_rarg3, \"smashed arg\");\n-  assert(arg_1 != c_rarg3, \"smashed arg\");\n-  assert(arg_2 != c_rarg3, \"smashed arg\");\n+  assert_different_registers(arg_0, c_rarg1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_1, c_rarg2, c_rarg3);\n+  assert_different_registers(arg_2, c_rarg3);\n+\n@@ -712,2 +713,0 @@\n-  assert(arg_0 != c_rarg2, \"smashed arg\");\n-  assert(arg_1 != c_rarg2, \"smashed arg\");\n@@ -715,1 +714,0 @@\n-  assert(arg_0 != c_rarg1, \"smashed arg\");\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":16,"deletions":18,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2234,0 +2234,1 @@\n+  assert_different_registers(arg_2, Z_ARG2);\n@@ -2235,1 +2236,0 @@\n-  assert(arg_2 != Z_ARG2, \"smashed argument\");\n@@ -2243,0 +2243,2 @@\n+  assert_different_registers(arg_3, Z_ARG2, Z_ARG3);\n+  assert_different_registers(arg_2, Z_ARG2);\n@@ -2244,1 +2246,0 @@\n-  assert(arg_2 != Z_ARG2, \"smashed argument\");\n@@ -2246,1 +2247,0 @@\n-  assert(arg_3 != Z_ARG2 && arg_3 != Z_ARG3, \"smashed argument\");\n@@ -2261,0 +2261,2 @@\n+  assert_different_registers(arg_3, Z_ARG2, Z_ARG3);\n+  assert_different_registers(arg_2, Z_ARG2);\n@@ -2262,1 +2264,0 @@\n-  assert(arg_2 != Z_ARG2, \"smashed argument\");\n@@ -2264,1 +2265,0 @@\n-  assert(arg_3 != Z_ARG2 && arg_3 != Z_ARG3, \"smashed argument\");\n@@ -2285,0 +2285,1 @@\n+   assert_different_registers(arg_2, Z_ARG2);\n@@ -2286,1 +2287,0 @@\n-   assert(arg_2 != Z_ARG2, \"smashed argument\");\n@@ -2294,0 +2294,2 @@\n+  assert_different_registers(arg_3, Z_ARG2, Z_ARG3);\n+  assert_different_registers(arg_2, Z_ARG2);\n@@ -2295,1 +2297,0 @@\n-  assert(arg_2 != Z_ARG2, \"smashed argument\");\n@@ -2297,1 +2298,0 @@\n-  assert(arg_3 != Z_ARG2 && arg_3 != Z_ARG3, \"smashed argument\");\n@@ -2315,0 +2315,1 @@\n+  assert_different_registers(arg_2, Z_ARG1);\n@@ -2316,1 +2317,0 @@\n-  assert(arg_2 != Z_ARG1, \"smashed argument\");\n@@ -2322,0 +2322,2 @@\n+  assert_different_registers(arg_3, Z_ARG1, Z_ARG2);\n+  assert_different_registers(arg_2, Z_ARG1);\n@@ -2323,1 +2325,0 @@\n-  assert(arg_2 != Z_ARG1, \"smashed argument\");\n@@ -2325,1 +2326,0 @@\n-  assert(arg_3 != Z_ARG1 && arg_3 != Z_ARG2, \"smashed argument\");\n@@ -2344,0 +2344,1 @@\n+  assert_different_registers(arg_2, Z_ARG1);\n@@ -2345,1 +2346,0 @@\n-  assert(arg_2 != Z_ARG1, \"smashed argument\");\n@@ -2351,0 +2351,2 @@\n+  assert_different_registers(arg_3, Z_ARG1, Z_ARG2);\n+  assert_different_registers(arg_2, Z_ARG1);\n@@ -2352,1 +2354,0 @@\n-  assert(arg_2 != Z_ARG1, \"smashed argument\");\n@@ -2354,1 +2355,0 @@\n-  assert(arg_3 != Z_ARG1 && arg_3 != Z_ARG2, \"smashed argument\");\n","filename":"src\/hotspot\/cpu\/s390\/macroAssembler_s390.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1394,1 +1394,1 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2));\n@@ -1416,2 +1416,2 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg3, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_2 != c_rarg3, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2, c_rarg3));\n+  LP64_ONLY(assert_different_registers(arg_2, c_rarg3));\n@@ -1419,2 +1419,0 @@\n-\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n@@ -1422,1 +1420,0 @@\n-\n@@ -1455,1 +1452,1 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2));\n@@ -1468,2 +1465,2 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg3, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_2 != c_rarg3, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2, c_rarg3));\n+  LP64_ONLY(assert_different_registers(arg_2, c_rarg3));\n@@ -1471,1 +1468,0 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n@@ -1502,1 +1498,1 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2));\n@@ -1515,2 +1511,2 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg3, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_2 != c_rarg3, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2, c_rarg3));\n+  LP64_ONLY(assert_different_registers(arg_2, c_rarg3));\n@@ -1518,1 +1514,0 @@\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n@@ -1660,1 +1655,1 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg1, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_0, c_rarg1));\n@@ -1667,2 +1662,2 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg2, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_0, c_rarg1, c_rarg2));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2));\n@@ -1670,1 +1665,0 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg1, \"smashed arg\"));\n@@ -1677,3 +1671,3 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg3, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_1 != c_rarg3, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_2 != c_rarg3, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_0, c_rarg1, c_rarg2, c_rarg3));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2, c_rarg3));\n+  LP64_ONLY(assert_different_registers(arg_2, c_rarg3));\n@@ -1681,2 +1675,0 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg2, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n@@ -1684,1 +1676,0 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg1, \"smashed arg\"));\n@@ -1696,2 +1687,1 @@\n-\n-  LP64_ONLY(assert(arg_0 != c_rarg1, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_0, c_rarg1));\n@@ -1704,2 +1694,2 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg2, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_0, c_rarg1, c_rarg2));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2));\n@@ -1707,1 +1697,0 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg1, \"smashed arg\"));\n@@ -1714,3 +1703,3 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg3, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_1 != c_rarg3, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_2 != c_rarg3, \"smashed arg\"));\n+  LP64_ONLY(assert_different_registers(arg_0, c_rarg1, c_rarg2, c_rarg3));\n+  LP64_ONLY(assert_different_registers(arg_1, c_rarg2, c_rarg3));\n+  LP64_ONLY(assert_different_registers(arg_2, c_rarg3));\n@@ -1718,2 +1707,0 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg2, \"smashed arg\"));\n-  LP64_ONLY(assert(arg_1 != c_rarg2, \"smashed arg\"));\n@@ -1721,1 +1708,0 @@\n-  LP64_ONLY(assert(arg_0 != c_rarg1, \"smashed arg\"));\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":21,"deletions":35,"binary":false,"changes":56,"status":"modified"}]}