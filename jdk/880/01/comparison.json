{"files":[{"patch":"@@ -37,9 +37,5 @@\n-\/\/ Ordering here is important: _log_table first, _log_table_initialized second.\n-double ThreadHeapSampler::_log_table[1 << ThreadHeapSampler::FastLogNumBits] = {};\n-\n-\/\/ Force initialization of the log_table.\n-bool ThreadHeapSampler::_log_table_initialized = init_log_table();\n-\n-bool ThreadHeapSampler::init_log_table() {\n-  for (int i = 0; i < (1 << FastLogNumBits); i++) {\n-    _log_table[i] = (log(1.0 + static_cast<double>(i+0.5) \/ (1 << FastLogNumBits))\n+template<int N>\n+struct FastLogTable {\n+  constexpr FastLogTable() : _values() {\n+    for (int i = 0; i < N; i++) {\n+      _values[i] = (log(1.0 + static_cast<double>(i+0.5) \/ N)\n@@ -47,0 +43,1 @@\n+    }\n@@ -48,2 +45,4 @@\n-  return true;\n-}\n+  double _values[N];\n+};\n+\n+const FastLogTable<ThreadHeapSampler::FastLogCount> ThreadHeapSampler::_log_table;\n@@ -74,3 +73,1 @@\n-\n-  assert(_log_table_initialized, \"log table should be initialized\");\n-  return exponent + _log_table[y];\n+  return exponent + _log_table._values[y];\n","filename":"src\/hotspot\/share\/runtime\/threadHeapSampler.cpp","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -31,0 +31,3 @@\n+template<int N>\n+struct FastLogTable;\n+\n@@ -35,1 +38,2 @@\n-  static const int FastLogMask = (1 << FastLogNumBits) - 1;\n+  static const int FastLogCount = 1 << FastLogNumBits;\n+  static const int FastLogMask = FastLogCount - 1;\n@@ -40,1 +44,0 @@\n-  static bool _log_table_initialized;\n@@ -42,1 +45,1 @@\n-  static double _log_table[1<<FastLogNumBits];  \/\/ Constant\n+  static const FastLogTable<FastLogCount> _log_table;\n@@ -49,1 +52,0 @@\n-  static bool init_log_table();\n","filename":"src\/hotspot\/share\/runtime\/threadHeapSampler.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"}]}