{"files":[{"patch":"@@ -54,2 +54,1 @@\n-            \/\/ Wait for main thread to interrupt us so we\n-            \/\/ can race to exit.\n+            \/\/ Wait for main thread to tell us to race to the exit.\n@@ -58,1 +57,1 @@\n-            \/\/ ignore because we expect one\n+            throw new RuntimeException(\"Unexpected: \" + e);\n@@ -90,1 +89,0 @@\n-            SuspendAtExit threads[] = new SuspendAtExit[N_THREADS];\n@@ -93,38 +91,20 @@\n-            for (int i = 0; i < N_THREADS; i++ ) {\n-                threads[i] = new SuspendAtExit();\n-                threads[i].start();\n-                try {\n-                    \/\/ Wait for the worker thread to get going.\n-                    threads[i].startSyncObj.await();\n-\n-                    \/\/ This interrupt() call will break the worker out of\n-                    \/\/ the exitSyncObj.await() call and the SuspendThread()\n-                    \/\/ calls will come in during thread exit.\n-                    threads[i].interrupt();\n-                    while (true) {\n-                        retCode = suspendThread(threads[i]);\n-\n-                        if (retCode == JVMTI_ERROR_THREAD_NOT_ALIVE) {\n-                            \/\/ Done with SuspendThread() calls since\n-                            \/\/ thread is not alive.\n-                            break;\n-                        } else if (retCode != 0) {\n-                            throw new RuntimeException(\"thread #\" + i +\n-                                                       \": suspendThread() \" +\n-                                                       \"retCode=\" + retCode +\n-                                                       \": unexpected value.\");\n-                        }\n-\n-                        if (!threads[i].isAlive()) {\n-                            throw new RuntimeException(\"thread #\" + i +\n-                                                       \": is not alive \" +\n-                                                       \"after successful \" +\n-                                                       \"suspendThread().\");\n-                        }\n-                        retCode = resumeThread(threads[i]);\n-                        if (retCode != 0) {\n-                            throw new RuntimeException(\"thread #\" + i +\n-                                                       \": resumeThread() \" +\n-                                                       \"retCode=\" + retCode +\n-                                                       \": unexpected value.\");\n-                        }\n+            SuspendAtExit thread = new SuspendAtExit();\n+            thread.start();\n+            try {\n+                \/\/ Wait for the worker thread to get going.\n+                thread.startSyncObj.await();\n+                \/\/ Tell the worker thread to race to the exit and the\n+                \/\/ SuspendThread() calls will come in during thread exit.\n+                thread.exitSyncObj.countDown();\n+                while (true) {\n+                    retCode = suspendThread(thread);\n+\n+                    if (retCode == JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+                        \/\/ Done with SuspendThread() calls since\n+                        \/\/ thread is not alive.\n+                        break;\n+                    } else if (retCode != 0) {\n+                        throw new RuntimeException(\"thread \" + thread.getName()\n+                                                   + \": suspendThread() \" +\n+                                                   \"retCode=\" + retCode +\n+                                                   \": unexpected value.\");\n@@ -132,3 +112,0 @@\n-                } catch (InterruptedException e) {\n-                    throw new RuntimeException(\"Unexpected: \" + e);\n-                }\n@@ -136,23 +113,13 @@\n-                try {\n-                    threads[i].join();\n-                } catch (InterruptedException e) {\n-                    throw new RuntimeException(\"Unexpected: \" + e);\n-                }\n-                retCode = suspendThread(threads[i]);\n-                if (retCode != JVMTI_ERROR_THREAD_NOT_ALIVE) {\n-                    throw new RuntimeException(\"thread #\" + i +\n-                                               \": suspendThread() \" +\n-                                               \"retCode=\" + retCode +\n-                                               \": unexpected value.\");\n-                }\n-                retCode = resumeThread(threads[i]);\n-                if (retCode != JVMTI_ERROR_THREAD_NOT_ALIVE) {\n-                    throw new RuntimeException(\"thread #\" + i +\n-                                               \": suspendThread() \" +\n-                                               \"retCode=\" + retCode +\n-                                               \": unexpected value.\");\n-                }\n-                if (threads[i].isAlive()) {\n-                    throw new RuntimeException(\"Expected !Thread.isAlive() \" +\n-                                               \"after thread #\" + i +\n-                                               \" has been join()'ed\");\n+                    if (!thread.isAlive()) {\n+                        throw new RuntimeException(\"thread \" + thread.getName()\n+                                                   + \": is not alive \" +\n+                                                   \"after successful \" +\n+                                                   \"suspendThread().\");\n+                    }\n+                    retCode = resumeThread(thread);\n+                    if (retCode != 0) {\n+                        throw new RuntimeException(\"thread \" + thread.getName()\n+                                                   + \": resumeThread() \" +\n+                                                   \"retCode=\" + retCode +\n+                                                   \": unexpected value.\");\n+                    }\n@@ -160,0 +127,22 @@\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(\"Unexpected: \" + e);\n+            }\n+\n+            try {\n+                thread.join();\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(\"Unexpected: \" + e);\n+            }\n+            retCode = suspendThread(thread);\n+            if (retCode != JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+                throw new RuntimeException(\"thread \" + thread.getName() +\n+                                           \": suspendThread() \" +\n+                                           \"retCode=\" + retCode +\n+                                           \": unexpected value.\");\n+            }\n+            retCode = resumeThread(thread);\n+            if (retCode != JVMTI_ERROR_THREAD_NOT_ALIVE) {\n+                throw new RuntimeException(\"thread \" + thread.getName() +\n+                                           \": suspendThread() \" +\n+                                           \"retCode=\" + retCode +\n+                                           \": unexpected value.\");\n","filename":"test\/hotspot\/jtreg\/runtime\/Thread\/SuspendAtExit.java","additions":57,"deletions":68,"binary":false,"changes":125,"status":"modified"}]}