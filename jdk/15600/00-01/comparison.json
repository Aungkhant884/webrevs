{"files":[{"patch":"@@ -3532,2 +3532,1 @@\n-         * This method is only used to implement the unsupported\n-         * sun.reflect.ReflectionFactory::newConstructorForSerialization API.\n+         * This method should only be used by ReflectionFactory::newConstructorForSerialization.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-     * Used by serialization, exposed via sun.reflect.ReflectionFactory.\n+     * This method should only be used by ReflectionFactory::newConstructorForSerialization.\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/JavaLangInvokeAccess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,3 +36,0 @@\n-import java.util.concurrent.TimeUnit;\n-import java.util.concurrent.locks.Lock;\n-import java.util.concurrent.locks.ReentrantLock;\n@@ -44,2 +41,0 @@\n-import sun.security.action.GetIntegerAction;\n-import sun.security.action.GetPropertyAction;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/reflect\/MethodHandleAccessorFactory.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"}]}