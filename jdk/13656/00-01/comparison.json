{"files":[{"patch":"@@ -5591,1 +5591,1 @@\n-        \/\/ Check for proper placement of super()\/init() calls.\n+        \/\/ Check for proper placement of super()\/this() calls.\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2843,8 +2843,2 @@\n-            \/\/ If super(): at this point all initialization blocks will execute\n-            Name name = TreeInfo.name(tree.meth);\n-            if (isConstructor && name == names._super) {\n-                forEachInitializer(classDef, false, def -> {\n-                    scan(def);\n-                    clearPendingExits(false);\n-                });\n-            }\n+            \/\/ Handle superclass constructor invocations\n+            if (isConstructor) {\n@@ -2852,6 +2846,16 @@\n-            \/\/ If this(): at this point all final uninitialized fields will get initialized\n-            if (isConstructor && name == names._this) {\n-                for (int address = firstadr; address < nextadr; address++) {\n-                    VarSymbol sym = vardecls[address].sym;\n-                    if (isFinalUninitializedField(sym) && !sym.isStatic())\n-                        letInit(tree.pos(), sym);\n+                \/\/ If super(): at this point all initialization blocks will execute\n+                Name name = TreeInfo.name(tree.meth);\n+                if (name == names._super) {\n+                    forEachInitializer(classDef, false, def -> {\n+                        scan(def);\n+                        clearPendingExits(false);\n+                    });\n+                }\n+\n+                \/\/ If this(): at this point all final uninitialized fields will get initialized\n+                else if (name == names._this) {\n+                    for (int address = firstadr; address < nextadr; address++) {\n+                        VarSymbol sym = vardecls[address].sym;\n+                        if (isFinalUninitializedField(sym) && !sym.isStatic())\n+                            letInit(tree.pos(), sym);\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Flow.java","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"}]}