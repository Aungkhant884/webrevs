{"files":[{"patch":"@@ -195,1 +195,1 @@\n- * negative caching TTL value when needed.\n+ * negative caching TTL value when needed or extend the usage of the stale data.\n@@ -197,1 +197,1 @@\n- * <p> Two Java security properties control the TTL values used for\n+ * <p> Three Java security properties control the TTL values used for\n@@ -209,0 +209,17 @@\n+ * <dt><b>networkaddress.cache.stale.ttl<\/b><\/dt>\n+ * <dd>Indicates the caching policy for stale names. The value is specified as\n+ * an integer to indicate the number of seconds the stale names will be kept in\n+ * the cache. The name is considered stale if it expired and attempts to refresh\n+ * it were unsuccessful. This property is useful if it is preferable to use a\n+ * stale name rather than result of unsuccessful name lookup. The default\n+ * setting is to cache for an implementation specific period of time.\n+ * <p>\n+ * If the value of this property is large than \"networkaddress.cache.ttl\" then\n+ * \"networkaddress.cache.ttl\" will be used as a refresh interval of the name in\n+ * the cache. For example, if this property is set to 1 day and\n+ * \"networkaddress.cache.ttl\" is set to 30 seconds, then the positive response\n+ * will be cached for 1 day but an attempt to refresh it will be done every\n+ * 30 seconds.\n+ * <p>\n+ * A value of 0 (zero) do not use stale names.\n+ * <\/dd>\n@@ -987,0 +1004,2 @@\n+         *\n+         * @return {@code true} if the record was removed\n@@ -988,1 +1007,1 @@\n-        public boolean expired(long now) {\n+        public boolean tryRemoveExpiredAddress(long now) {\n@@ -1059,1 +1078,1 @@\n-        public boolean expired(long now) {\n+        public boolean tryRemoveExpiredAddress(long now) {\n@@ -1065,1 +1084,1 @@\n-                    return super.expired(now);\n+                    return super.tryRemoveExpiredAddress(now);\n@@ -1746,1 +1765,1 @@\n-            if (!caddrs.expired(now)) {\n+            if (!caddrs.tryRemoveExpiredAddress(now)) {\n","filename":"src\/java.base\/share\/classes\/java\/net\/InetAddress.java","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ Copyright (c) 1998, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -270,0 +270,7 @@\n+\t<LI><P><B>{@systemProperty networkaddress.cache.stale.ttl}<\/B> (default: see below)<BR>\n+\tValue is an integer corresponding to the number of seconds the stale names\n+\twill be kept in the cache. The name is considered stale if it expired and\n+\tattempts to refresh it were unsuccessful. This property is useful if it is\n+\tpreferable to use a stale name rather than result of unsuccessful name lookup.\n+\tA value of 0 (zero) means do not use stale names.\n+\tThe default value is implementation-specific.<\/P>\n@@ -276,1 +283,1 @@\n-<P>Since these 2 properties are part of the security policy, they are\n+<P>Since these 3 properties are part of the security policy, they are\n","filename":"src\/java.base\/share\/classes\/java\/net\/doc-files\/net-properties.html","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    \/* The Java-level namelookup cache stale policy for successful lookups:\n+    \/* The Java-level namelookup cache stale policy:\n@@ -71,1 +71,2 @@\n-     * any positive value: the number of seconds to cache an address for\n+     * any positive value: the number of seconds to use the stale names\n+     * zero: do not use stale names\n@@ -126,1 +127,1 @@\n-            if (tmp != null && tmp > cachePolicy) {\n+            if (tmp != null) {\n","filename":"src\/java.base\/share\/classes\/sun\/net\/InetAddressCachePolicy.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -360,0 +360,10 @@\n+#\n+# The Java-level namelookup cache stale policy:\n+#\n+# any positive value: the number of seconds to use the stale names\n+# zero: do not use stale names\n+#\n+# default value is never (NEVER).\n+#\n+#networkaddress.cache.stale.ttl=0\n+\n","filename":"src\/java.base\/share\/conf\/security\/java.security","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}