{"files":[{"patch":"@@ -39,1 +39,1 @@\n-void CompressedKlassPointers::init_combo() {\n+void CompressedKlassPointers::set_base_and_shift(address thebase, int theshift) {\n@@ -41,0 +41,6 @@\n+  assert(theshift == 0 || theshift == LogKlassAlignmentInBytes, \"invalid shift for klass ptrs\");\n+  _base = thebase;\n+  _shift = theshift;\n+\n+  \/\/ we keep a composite word, `_combo`, containing base+shift+UseCCP, to load\n+  \/\/ all three information with a single 64-bit load.\n@@ -47,2 +53,3 @@\n-  assert(base_from_combo() == _base, \"combo encoding\");\n-  assert(shift_from_combo() == _shift, \"combo encoding\");\n+  \/\/ validate combo.\n+  assert(base() == _base, \"combo encoding\");\n+  assert(shift() == _shift, \"combo encoding\");\n@@ -68,2 +75,1 @@\n-  set_base(requested_base);\n-  set_shift(requested_shift);\n+  set_base_and_shift(requested_base, requested_shift);\n@@ -71,1 +77,0 @@\n-  init_combo();\n@@ -105,2 +110,1 @@\n-  set_base(base);\n-  set_shift(shift);\n+  set_base_and_shift(base, shift);\n@@ -108,1 +112,0 @@\n-  init_combo();\n@@ -132,10 +135,0 @@\n-void CompressedKlassPointers::set_base(address base) {\n-  assert(UseCompressedClassPointers, \"no compressed klass ptrs?\");\n-  _base   = base;\n-}\n-\n-void CompressedKlassPointers::set_shift(int shift)       {\n-  assert(shift == 0 || shift == LogKlassAlignmentInBytes, \"invalid shift for klass ptrs\");\n-  _shift   = shift;\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/compressedKlass.cpp","additions":12,"deletions":19,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -73,3 +73,0 @@\n-  static address  base_from_combo()  { return  (address)(_combo & mask_base); }\n-  static int      shift_from_combo() { return  (int)(_combo & right_n_bits(shift_bitlen)); }\n-  static void init_combo();\n@@ -77,1 +74,1 @@\n-  static void set_base(address base);\n+  static void set_base_and_shift(address base, int shift);\n@@ -79,1 +76,0 @@\n-  static void set_shift(int shift);\n@@ -103,2 +99,2 @@\n-  static address  base()             { return base_from_combo(); }\n-  static int      shift()            { return shift_from_combo(); }\n+  static address  base()             { return  (address)(_combo & mask_base); }\n+  static int      shift()            { return  (int)(_combo & right_n_bits(shift_bitlen)); }\n","filename":"src\/hotspot\/share\/oops\/compressedKlass.hpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"}]}