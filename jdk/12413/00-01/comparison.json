{"files":[{"patch":"@@ -966,1 +966,1 @@\n-        Boolean close = false;\n+        boolean close = false;\n@@ -968,9 +968,13 @@\n-        idleConnectionLock.lock();\n-        if (idleConnections.size() >= MAX_IDLE_CONNECTIONS) {\n-            \/\/ closing the connection here could block\n-            \/\/ instead set boolean and close outside of lock\n-            close = true;\n-        } else {\n-            c.idleStartTime = System.currentTimeMillis();\n-            c.setState(State.IDLE);\n-            idleConnections.add(c);\n+        try {\n+            idleConnectionLock.lock();\n+            if (idleConnections.size() >= MAX_IDLE_CONNECTIONS) {\n+                \/\/ closing the connection here could block\n+                \/\/ instead set boolean and close outside of lock\n+                close = true;\n+            } else {\n+                c.idleStartTime = System.currentTimeMillis();\n+                c.setState(State.IDLE);\n+                idleConnections.add(c);\n+            }\n+        } finally {\n+            idleConnectionLock.unlock();\n@@ -978,1 +982,0 @@\n-        idleConnectionLock.unlock();\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ServerImpl.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n@@ -108,2 +108,1 @@\n-        \/\/ assert that the expected number of idle connections has been reached\n-        \/\/ meaning the extra connection was served but then closed\n+        \/\/ assert that the limit set by maxIdleConnections was not exceeded\n@@ -112,1 +111,1 @@\n-        assertEquals(maxIdleConnections, idleConnectionCount);\n+        assertTrue(maxIdleConnections >= idleConnectionCount);\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/bugs\/8300268\/MaxIdleConnectionsTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}