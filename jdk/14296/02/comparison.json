{"files":[{"patch":"@@ -833,4 +833,0 @@\n-    \/\/ A successful scavenge should restart the GC time limit count which is\n-    \/\/ for full GC's.\n-    AdaptiveSizePolicy* size_policy = heap->size_policy();\n-    size_policy->reset_gc_overhead_limit_count();\n","filename":"src\/hotspot\/share\/gc\/serial\/defNewGeneration.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -98,2 +98,1 @@\n-  _soft_ref_gen_policy(),\n-  _size_policy(nullptr),\n+  _soft_ref_policy(),\n@@ -142,11 +141,0 @@\n-void GenCollectedHeap::initialize_size_policy(size_t init_eden_size,\n-                                              size_t init_promo_size,\n-                                              size_t init_survivor_size) {\n-  const double max_gc_pause_sec = ((double) MaxGCPauseMillis) \/ 1000.0;\n-  _size_policy = new AdaptiveSizePolicy(init_eden_size,\n-                                        init_promo_size,\n-                                        init_survivor_size,\n-                                        max_gc_pause_sec,\n-                                        GCTimeRatio);\n-}\n-\n@@ -197,4 +185,0 @@\n-  initialize_size_policy(def_new_gen->eden()->capacity(),\n-                         _old_gen->capacity(),\n-                         def_new_gen->from()->capacity());\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":1,"deletions":17,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include \"gc\/shared\/softRefGenPolicy.hpp\"\n+#include \"gc\/shared\/softRefPolicy.hpp\"\n@@ -75,4 +75,1 @@\n-  SoftRefGenPolicy _soft_ref_gen_policy;\n-\n-  \/\/ The sizing of the heap is controlled by a sizing policy.\n-  AdaptiveSizePolicy* _size_policy;\n+  SoftRefPolicy _soft_ref_policy;\n@@ -142,4 +139,0 @@\n-  void initialize_size_policy(size_t init_eden_size,\n-                              size_t init_promo_size,\n-                              size_t init_survivor_size);\n-\n@@ -161,6 +154,1 @@\n-  SoftRefPolicy* soft_ref_policy() override { return &_soft_ref_gen_policy; }\n-\n-  \/\/ Adaptive size policy\n-  virtual AdaptiveSizePolicy* size_policy() {\n-    return _size_policy;\n-  }\n+  SoftRefPolicy* soft_ref_policy() override { return &_soft_ref_policy; }\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.hpp","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -1,40 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#include \"precompiled.hpp\"\n-#include \"gc\/shared\/adaptiveSizePolicy.hpp\"\n-#include \"gc\/shared\/genCollectedHeap.hpp\"\n-#include \"gc\/shared\/softRefGenPolicy.hpp\"\n-\n-void SoftRefGenPolicy::cleared_all_soft_refs() {\n-  \/\/ If near gc overhear limit, continue to clear SoftRefs.  SoftRefs may\n-  \/\/ have been cleared in the last collection but if the gc overhear\n-  \/\/ limit continues to be near, SoftRefs should still be cleared.\n-  AdaptiveSizePolicy* size_policy = GenCollectedHeap::heap()->size_policy();\n-  if (size_policy != nullptr) {\n-    set_should_clear_all_soft_refs(size_policy->gc_overhead_limit_near());\n-  }\n-\n-  SoftRefPolicy::cleared_all_soft_refs();\n-}\n","filename":"src\/hotspot\/share\/gc\/shared\/softRefGenPolicy.cpp","additions":0,"deletions":40,"binary":false,"changes":40,"status":"deleted"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2001, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\n- *\/\n-\n-#ifndef SHARE_GC_SHARED_SOFTREFGENPOLICY_HPP\n-#define SHARE_GC_SHARED_SOFTREFGENPOLICY_HPP\n-\n-#include \"gc\/shared\/softRefPolicy.hpp\"\n-#include \"utilities\/globalDefinitions.hpp\"\n-\n-class AdaptiveSizePolicy;\n-\n-class SoftRefGenPolicy : public SoftRefPolicy {\n-public:\n-  virtual void cleared_all_soft_refs();\n-};\n-\n-#endif \/\/ SHARE_GC_SHARED_SOFTREFGENPOLICY_HPP\n","filename":"src\/hotspot\/share\/gc\/shared\/softRefGenPolicy.hpp","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -1448,3 +1448,3 @@\n-#if INCLUDE_G1GC\n-  if (UseG1GC) {\n-    \/\/ Needs to be cleared explicitly for G1\n+#if defined(INCLUDE_G1GC) || defined(INCLUDE_SERIALGC)\n+  if (UseG1GC || UseSerialGC) {\n+    \/\/ Needs to be cleared explicitly for G1 and Serial GC.\n@@ -1453,1 +1453,1 @@\n-#endif \/\/ INCLUDE_G1GC\n+#endif \/\/ INCLUDE_G1GC || INCLUDE_SERIALGC\n","filename":"src\/hotspot\/share\/prims\/whitebox.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}