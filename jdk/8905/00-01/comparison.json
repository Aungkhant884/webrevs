{"files":[{"patch":"@@ -29,1 +29,1 @@\n- * @bug 4103117 4331084 4488017 4490929 6255285 6268365 8074460 8078672\n+ * @bug 4103117 4331084 4488017 4490929 6255285 6268365 8074460 8078672 8233760\n@@ -73,0 +73,10 @@\n+        \/* These BigDecimals produce a string with an exponent > Integer.MAX_VALUE *\/\n+        roundtripWithAbnormalExponent(BigDecimal.valueOf(10, Integer.MIN_VALUE));\n+        roundtripWithAbnormalExponent(BigDecimal.valueOf(Long.MIN_VALUE, Integer.MIN_VALUE));\n+        roundtripWithAbnormalExponent(new BigDecimal(new BigInteger(\"1\" + \"0\".repeat(100)), Integer.MIN_VALUE));\n+\n+        \/* These Strings have an exponent > Integer.MAX_VALUE *\/\n+        roundtripWithAbnormalExponent(\"1.0E+2147483649\");\n+        roundtripWithAbnormalExponent(\"-9.223372036854775808E+2147483666\");\n+        roundtripWithAbnormalExponent(\"1.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000E+2147483748\");\n+\n@@ -97,0 +107,11 @@\n+    private static void roundtripWithAbnormalExponent(BigDecimal bd) {\n+        if (!bd.equals(new BigDecimal(bd.toString()))) {\n+            throw new RuntimeException(\"Abnormal exponent roundtrip failure\");\n+        }\n+    }\n+\n+    private static void roundtripWithAbnormalExponent(String s) {\n+        if (!s.equals(new BigDecimal(s).toString())) {\n+            throw new RuntimeException(\"Abnormal exponent roundtrip failure\");\n+        }\n+    }\n","filename":"test\/jdk\/java\/math\/BigDecimal\/StringConstructor.java","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"}]}