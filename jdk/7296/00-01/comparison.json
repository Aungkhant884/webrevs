{"files":[{"patch":"@@ -0,0 +1,120 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.event.KeyEvent;\n+import java.awt.Robot;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @requires (os.family == \"windows\")\n+ * @bug 4659800\n+ * @summary Check whether typing <Enter> key generates\n+ * ActionEvent on focused Button or not. This is applicable only for\n+ * WindowsLookAndFeel and WindowsClassicLookAndFeel.\n+ * @run main EnterKeyActivatesButton\n+ *\/\n+public class EnterKeyActivatesButton {\n+    private volatile boolean buttonPressed = false;\n+    private JFrame frame;\n+\n+    public static void main(String[] s) throws Exception {\n+        EnterKeyActivatesButton test = new EnterKeyActivatesButton();\n+        test.runTest();\n+    }\n+\n+    private static void setLookAndFeel(String lafName) {\n+        try {\n+            UIManager.setLookAndFeel(lafName);\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Ignoring Unsupported L&F: \" + lafName);\n+        } catch (ClassNotFoundException | InstantiationException\n+                | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    private void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+\n+    private void createUI() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        panel.add(new JTextField(\"Text field\"));\n+        JButton focusedButton = new JButton(\"Button1\");\n+        focusedButton.addActionListener(e -> buttonPressed = true);\n+        panel.add(focusedButton);\n+        panel.add(new JButton(\"Button2\"));\n+        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        frame.add(panel);\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+        focusedButton.requestFocusInWindow();\n+    }\n+\n+    public void runTest() throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            try {\n+                buttonPressed = false;\n+                String lafName = laf.getClassName();\n+                if (lafName.endsWith(\"WindowsLookAndFeel\") || lafName.endsWith(\"WindowsClassicLookAndFeel\")) {\n+                    System.out.println(\"Testing L&F: \" + lafName);\n+                    SwingUtilities.invokeAndWait(() -> {\n+                        setLookAndFeel(lafName);\n+                        createUI();\n+                    });\n+\n+                    robot.waitForIdle();\n+                    robot.keyPress(KeyEvent.VK_ENTER);\n+                    robot.keyRelease(KeyEvent.VK_ENTER);\n+                    robot.waitForIdle();\n+\n+                    if (buttonPressed) {\n+                        System.out.println(\"Test Passed for L&F: \" + lafName);\n+                    } else {\n+                        throw new RuntimeException(\"Test Failed, button not pressed for L&F: \" + lafName);\n+                    }\n+                } else {\n+                    System.out.println(\"Skipping L&F: \" + lafName);\n+                }\n+            } finally {\n+                SwingUtilities.invokeAndWait(this::disposeFrame);\n+            }\n+        }\n+\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JButton\/4659800\/EnterKeyActivatesButton.java","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -1,147 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-import javax.swing.*;\n-import java.awt.*;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n-import java.awt.event.KeyEvent;\n-\n-\/*\n- * @test\n- * @key headful\n- * @bug 4659800\n- * @summary Check whether typing <Space> key generates\n- * ActionEvent on focused Button or not.\n- * @run main bug4659800\n- *\/\n-public class bug4659800 {\n-    private static JFrame frame = null;\n-    private static volatile boolean buttonPressed = false;\n-    private boolean testFailed = false;\n-    private JButton button1;\n-    private Robot robot;\n-    private JButton dummyButton;\n-\n-    public static void main(String[] s) {\n-        bug4659800 test = new bug4659800();\n-        try {\n-            test.runTest();\n-        } finally {\n-            if (frame != null) {\n-                frame.dispose();\n-                frame = null;\n-            }\n-        }\n-\n-    }\n-\n-    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n-        try {\n-            UIManager.setLookAndFeel(laf.getClassName());\n-        } catch (UnsupportedLookAndFeelException ignored) {\n-            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n-        } catch (ClassNotFoundException | InstantiationException\n-                | IllegalAccessException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n-    private void createUI() {\n-        frame = new JFrame();\n-        JPanel panel = new JPanel();\n-        panel.setLayout(new FlowLayout());\n-        button1 = new JButton(\"butt1\");\n-        buttonPressed = false;\n-        button1.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent e) {\n-                synchronized (this) {\n-                    System.out.println(\"ActionPerformed on Button1 : \");\n-                    buttonPressed = true;\n-                    notifyAll();\n-                }\n-            }\n-        });\n-\n-        panel.add(button1);\n-\n-        dummyButton = new JButton(\"butt2\");\n-        panel.add(dummyButton);\n-        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-        frame.setLayout(new FlowLayout());\n-\n-        frame.add(panel);\n-\n-        frame.setSize(200, 200);\n-        frame.setLocationRelativeTo(null);\n-        frame.setVisible(true);\n-\n-    }\n-\n-    public void runTest() {\n-        try {\n-            robot = new Robot();\n-        } catch (Exception e) {\n-            System.err.print(\"Error creating robot\");\n-            e.printStackTrace();\n-            System.exit(1);\n-        }\n-        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n-            System.out.println(\"Testing L&F: \" + laf);\n-\n-            try {\n-                SwingUtilities.invokeAndWait(() -> {\n-                    setLookAndFeel(laf);\n-                    createUI();\n-                });\n-            } catch (Exception e) {\n-                e.printStackTrace();\n-            }\n-            \/\/ Clicks on dummy button to activate the parent window.\n-            dummyButton.doClick();\n-            button1.requestFocusInWindow();\n-            Point p = button1.getLocationOnScreen();\n-            robot.mouseMove(p.x + button1.getWidth() \/ 2, p.y + button1.getHeight() \/ 2);\n-            robot.waitForIdle();\n-            robot.keyPress(KeyEvent.VK_SPACE);\n-            robot.delay(100);\n-            robot.keyRelease(KeyEvent.VK_SPACE);\n-            robot.delay(100);\n-            robot.waitForIdle();\n-\n-            if (buttonPressed) {\n-                System.out.println(\"Test Passed for laf \" + laf);\n-            } else {\n-                testFailed = true;\n-                System.out.println(\"Test Failed, button not pressed for laf \" + laf + \" buttonPressed = \" + buttonPressed);\n-            }\n-            frame.dispose();\n-            frame = null;\n-        }\n-        if (testFailed) {\n-            throw new RuntimeException(\"Test Failed, button not pressed in one or more LAFs\");\n-        } else {\n-            System.out.println(\"Test Passed for all supported LAFs \");\n-        }\n-    }\n-\n-}\n","filename":"test\/jdk\/javax\/swing\/JButton\/4659800\/bug4659800.java","additions":0,"deletions":147,"binary":false,"changes":147,"status":"deleted"}]}