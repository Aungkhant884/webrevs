{"files":[{"patch":"@@ -1938,2 +1938,5 @@\n-    if (entry != NULL) {\n-      assert(entry->nest_host_error() == NULL, \"Nest host error message already set!\");\n+    if (entry != NULL && entry->nest_host_error() == NULL) {\n+      \/\/ An existing entry means we had a true resolution failure (LinkageError) with our nest host, but we\n+      \/\/ still want to add the error message for the higher-level access checks to report. We should\n+      \/\/ only reach here under the same error condition, so we can ignore the potential race with setting\n+      \/\/ the message. If we see it is already set then we can ignore it.\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * This class was used to produce a jcod file in which the\n+ * NestMembers attribute was modified to make it empty. Class\n+ * HostNoNestMember$Member has class HostNoNestMember as its\n+ * NestHost, which will trigger an error when resolving.\n+ *\n+ * When compiled, this generates a HostNoNestMember class and\n+ * a HostNoNestMember$Menber class.  The former class, HostNoNestMember,\n+ * gets overwritten when HostNoNestMember.jcod gets compiled.\n+ *\/\n+class HostNoNestMember {\n+  class Member {\n+    private int value;\n+  }\n+\n+  public int test() {\n+    Member m = new Member();\n+    return m.value;\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/Nestmates\/membership\/HostNoNestMember.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/\/ NestMembers attribute empty\n+\n+class HostNoNestMember {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  60; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #2 #3; \/\/ #1\n+    class #4; \/\/ #2\n+    NameAndType #5 #6; \/\/ #3\n+    Utf8 \"java\/lang\/Object\"; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    class #8; \/\/ #7\n+    Utf8 \"HostNoNestMember$Member\"; \/\/ #8\n+    Method #7 #10; \/\/ #9\n+    NameAndType #5 #11; \/\/ #10\n+    Utf8 \"(LHostNoNestMember;)V\"; \/\/ #11\n+    Field #7 #13; \/\/ #12\n+    NameAndType #14 #15; \/\/ #13\n+    Utf8 \"value\"; \/\/ #14\n+    Utf8 \"I\"; \/\/ #15\n+    class #17; \/\/ #16\n+    Utf8 \"HostNoNestMember\"; \/\/ #17\n+    Utf8 \"Code\"; \/\/ #18\n+    Utf8 \"LineNumberTable\"; \/\/ #19\n+    Utf8 \"test\"; \/\/ #20\n+    Utf8 \"()I\"; \/\/ #21\n+    Utf8 \"SourceFile\"; \/\/ #22\n+    Utf8 \"TestNestHostErrorWithMultiThread.java\"; \/\/ #23\n+    Utf8 \"NestMembers\"; \/\/ #24\n+    Utf8 \"InnerClasses\"; \/\/ #25\n+    Utf8 \"Member\"; \/\/ #26\n+  } \/\/ Constant Pool\n+\n+  0x0020; \/\/ access\n+  #16;\/\/ this_cpx\n+  #2;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ Fields\n+  } \/\/ Fields\n+\n+  [] { \/\/ Methods\n+    {  \/\/ method\n+      0x0000; \/\/ access\n+      #5; \/\/ name_index\n+      #6; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#18) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#19) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  44;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+    ;\n+    {  \/\/ method\n+      0x0001; \/\/ access\n+      #20; \/\/ name_index\n+      #21; \/\/ descriptor_index\n+      [] { \/\/ Attributes\n+        Attr(#18) { \/\/ Code\n+          3; \/\/ max_stack\n+          2; \/\/ max_locals\n+          Bytes[]{\n+            0xBB0007592AB70009;\n+            0x4C2BB4000CAC;\n+          }\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#19) { \/\/ LineNumberTable\n+              [] { \/\/ line_number_table\n+                0  50;\n+                9  51;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    }\n+  } \/\/ Methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#22) { \/\/ SourceFile\n+      #23;\n+    } \/\/ end SourceFile\n+    ;\n+    Attr(#24) { \/\/ NestMembers\n+      [] { \/\/ classes\n+      \/\/ #7; delete NestMember\n+      }\n+    } \/\/ end NestMembers\n+    ;\n+    Attr(#25) { \/\/ InnerClasses\n+      [] { \/\/ classes\n+        #7 #16 #26 0;\n+      }\n+    } \/\/ end InnerClasses\n+  } \/\/ Attributes\n+} \/\/ end class HostNoNestMember\n","filename":"test\/hotspot\/jtreg\/runtime\/Nestmates\/membership\/HostNoNestMember.jcod","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"},{"patch":"@@ -0,0 +1,98 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co., Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8264760\n+ * @summary JVM crashes when two threads encounter the same resolution error\n+ *\n+ * @compile HostNoNestMember.java\n+ * @compile HostNoNestMember.jcod\n+ *\n+ * @run main TestNestHostErrorWithMultiThread\n+ *\/\n+\n+\/\/ HostNoNestMember.jcod must be compiled after HostNoNestMember.java\n+\/\/ because the class file from the jcod file must replace the\n+\/\/ HostNoNestMember class file generated from HostNoNestMember.java.\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+public class TestNestHostErrorWithMultiThread {\n+\n+  public static void main(String args[]) {\n+    CountDownLatch runLatch = new CountDownLatch(1);\n+    CountDownLatch startLatch = new CountDownLatch(2);\n+\n+    Runnable test = new Test(runLatch, startLatch);\n+\n+    Thread t1 = new Thread(test);\n+    Thread t2 = new Thread(test);\n+\n+    t1.start();\n+    t2.start();\n+\n+    try {\n+      \/\/ waiting thread creation\n+      startLatch.await();\n+      runLatch.countDown();\n+\n+      t1.join();\n+      t2.join();\n+    } catch (InterruptedException e) {\n+      throw new Error(\"Unexpected interrupt\");\n+    }\n+  }\n+\n+  static class Test implements Runnable {\n+    private CountDownLatch runLatch;\n+    private CountDownLatch startLatch;\n+\n+    Test(CountDownLatch runLatch, CountDownLatch startLatch) {\n+      this.runLatch = runLatch;\n+      this.startLatch = startLatch;\n+    }\n+\n+    @Override\n+    public void run() {\n+      try {\n+        startLatch.countDown();\n+        \/\/ Try to have all threads trigger the nesthost check at the same time\n+        runLatch.await();\n+        HostNoNestMember h = new HostNoNestMember();\n+        h.test();\n+        throw new Error(\"IllegalAccessError was not thrown as expected\");\n+      } catch (IllegalAccessError expected) {\n+        String msg = \"current type is not listed as a nest member\";\n+        if (!expected.getMessage().contains(msg)) {\n+          throw new Error(\"Wrong \" + expected.getClass().getSimpleName() +\": \\\"\" +\n+                          expected.getMessage() + \"\\\" does not contain \\\"\" +\n+                          msg + \"\\\"\", expected);\n+        }\n+        System.out.println(\"OK - got expected exception: \" + expected);\n+      } catch (InterruptedException e) {\n+        throw new Error(\"Unexpected interrupt\");\n+      }\n+    }\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/runtime\/Nestmates\/membership\/TestNestHostErrorWithMultiThread.java","additions":98,"deletions":0,"binary":false,"changes":98,"status":"added"}]}