{"files":[{"patch":"@@ -126,4 +126,5 @@\n-void CgroupSubsystemFactory::set_controller_mount_path(CgroupInfo* cg_infos,\n-                                                       int controller,\n-                                                       char* name,\n-                                                       char* mount_path) {\n+void CgroupSubsystemFactory::set_controller_pathes(CgroupInfo* cg_infos,\n+                                                   int controller,\n+                                                   char* name,\n+                                                   char* mount_path,\n+                                                   char* root_path) {\n@@ -135,1 +136,1 @@\n-      log_warning(os, container)(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n+      log_debug(os, container)(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n@@ -138,0 +139,1 @@\n+      os::free(cg_infos[controller]._root_mount_path);\n@@ -139,0 +141,1 @@\n+      cg_infos[controller]._root_mount_path = os::strdup(root_path);\n@@ -140,1 +143,1 @@\n-      log_warning(os, container)(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n+      log_debug(os, container)(\"Duplicate %s controllers detected. Picking %s, skipping %s.\",\n@@ -145,0 +148,1 @@\n+    cg_infos[controller]._root_mount_path = os::strdup(root_path);\n@@ -357,2 +361,1 @@\n-          set_controller_mount_path(cg_infos, MEMORY_IDX, token, tmpmount);\n-          cg_infos[MEMORY_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_pathes(cg_infos, MEMORY_IDX, token, tmpmount, tmproot);\n@@ -362,2 +365,1 @@\n-          set_controller_mount_path(cg_infos, CPUSET_IDX, token, tmpmount);\n-          cg_infos[CPUSET_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_pathes(cg_infos, CPUSET_IDX, token, tmpmount, tmproot);\n@@ -367,2 +369,1 @@\n-          set_controller_mount_path(cg_infos, CPU_IDX, token, tmpmount);\n-          cg_infos[CPU_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_pathes(cg_infos, CPU_IDX, token, tmpmount, tmproot);\n@@ -372,2 +373,1 @@\n-          set_controller_mount_path(cg_infos, CPUACCT_IDX, token, tmpmount);\n-          cg_infos[CPUACCT_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_pathes(cg_infos, CPUACCT_IDX, token, tmpmount, tmproot);\n@@ -377,2 +377,1 @@\n-          set_controller_mount_path(cg_infos, PIDS_IDX, token, tmpmount);\n-          cg_infos[PIDS_IDX]._root_mount_path = os::strdup(tmproot);\n+          set_controller_pathes(cg_infos, PIDS_IDX, token, tmpmount, tmproot);\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.cpp","additions":15,"deletions":16,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -314,4 +314,5 @@\n-    static void set_controller_mount_path(CgroupInfo* cg_infos,\n-                                          int controller,\n-                                          char* name,\n-                                          char* mount_path);\n+    static void set_controller_pathes(CgroupInfo* cg_infos,\n+                                      int controller,\n+                                      char* name,\n+                                      char* mount_path,\n+                                      char* root_path);\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+            testJavaVersionWithCgMounts();\n@@ -84,0 +85,19 @@\n+\n+\n+    private static void testJavaVersionWithCgMounts() throws Exception {\n+        DockerRunOptions opts =\n+            new DockerRunOptions(imageNameAndTag, \"\/jdk\/bin\/java\", \"-version\")\n+            .addJavaOpts(\"-Xlog:os+container=trace\")\n+            .addDockerOpts(\"-v\", \"\/sys\/fs\/cgroup:\/cgroups-in:ro\");\n+\n+        DockerTestUtils.dockerRunJava(opts)\n+            .shouldHaveExitValue(0)\n+            .shouldContain(\"[debug][os,container] Duplicate memory controllers detected. Picking \/sys\/fs\/cgroup\/memory, skipping \/cgroups-in\/memory\")\n+            .shouldContain(\"[debug][os,container] Duplicate cpu controllers detected. Picking \/sys\/fs\/cgroup\/cpu,cpuacct, skipping \/cgroups-in\/cpu,cpuacct\")\n+            .shouldContain(\"[debug][os,container] Duplicate cpuacct controllers detected. Picking \/sys\/fs\/cgroup\/cpu,cpuacct, skipping \/cgroups-in\/cpu,cpuacct\")\n+            .shouldContain(\"[debug][os,container] Duplicate cpuset controllers detected. Picking \/sys\/fs\/cgroup\/cpuset, skipping \/cgroups-in\/cpuset\")\n+            .shouldContain(\"[debug][os,container] Duplicate pids controllers detected. Picking \/sys\/fs\/cgroup\/pids, skipping \/cgroups-in\/pids\")\n+            .shouldContain(\"Path to \/cpu.cfs_quota_us is \/sys\/fs\/cgroup\/cpu,cpuacct\/cpu.cfs_quota_us\")\n+            .shouldContain(\"Path to \/cpu.cfs_period_us is \/sys\/fs\/cgroup\/cpu,cpuacct\/cpu.cfs_period_us\")\n+            .shouldContain(\"Path to \/memory.limit_in_bytes is \/sys\/fs\/cgroup\/memory\/memory.limit_in_bytes\");\n+    }\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/DockerBasicTest.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"}]}