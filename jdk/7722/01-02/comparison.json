{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSocketInputRecord.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -438,2 +438,1 @@\n-            throw(SSLPeerUnverifiedException)\n-                new SSLPeerUnverifiedException(\"hostname of the server '\" +\n+            throw new SSLPeerUnverifiedException(\"hostname of the server '\" +\n@@ -442,1 +441,1 @@\n-                                \"server's certificate.\").initCause(e);\n+                                \"server's certificate.\", e);\n","filename":"src\/java.naming\/share\/classes\/com\/sun\/jndi\/ldap\/ext\/StartTlsResponseImpl.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -576,3 +576,1 @@\n-                SSLHandshakeException he = new SSLHandshakeException(msg);\n-                he.initCause(throwable);\n-                throw he;\n+                throw new SSLHandshakeException(msg, throwable);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/HttpClientImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -595,3 +595,1 @@\n-        SSLHandshakeException e = new SSLHandshakeException(handshakeFailed);\n-        if (t != null) e.initCause(t);\n-        return e;\n+        return new SSLHandshakeException(handshakeFailed, t);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/SSLTube.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282723\n+ * @summary Add constructors taking a cause to JSSE exceptions\n+ *\/\n+import javax.net.ssl.SSLHandshakeException;\n+import java.util.Objects;\n+\n+public class CheckSSLHandshakeException {\n+    private static String exceptionMessage = \"message\";\n+    private static Throwable exceptionCause = new RuntimeException();\n+\n+    public static void main(String[] args) throws Exception {\n+        testException(\n+                new SSLHandshakeException(exceptionMessage, exceptionCause));\n+    }\n+\n+    private static void testException(Exception ex) {\n+        if (!Objects.equals(ex.getMessage(), exceptionMessage)) {\n+            throw new RuntimeException(\"Unexpected exception message\");\n+        }\n+\n+        if (ex.getCause() != exceptionCause) {\n+            throw new RuntimeException(\"Unexpected exception cause\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLException\/CheckSSLHandshakeException.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282723\n+ * @summary Add constructors taking a cause to JSSE exceptions\n+ *\/\n+import javax.net.ssl.SSLKeyException;\n+import java.util.Objects;\n+\n+public class CheckSSLKeyException {\n+    private static String exceptionMessage = \"message\";\n+    private static Throwable exceptionCause = new RuntimeException();\n+\n+    public static void main(String[] args) throws Exception {\n+        testException(\n+                new SSLKeyException(exceptionMessage, exceptionCause));\n+    }\n+\n+    private static void testException(Exception ex) {\n+        if (!Objects.equals(ex.getMessage(), exceptionMessage)) {\n+            throw new RuntimeException(\"Unexpected exception message\");\n+        }\n+\n+        if (ex.getCause() != exceptionCause) {\n+            throw new RuntimeException(\"Unexpected exception cause\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLException\/CheckSSLKeyException.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282723\n+ * @summary Add constructors taking a cause to JSSE exceptions\n+ *\/\n+import javax.net.ssl.SSLPeerUnverifiedException;\n+import java.util.Objects;\n+\n+public class CheckSSLPeerUnverifiedException {\n+    private static String exceptionMessage = \"message\";\n+    private static Throwable exceptionCause = new RuntimeException();\n+\n+    public static void main(String[] args) throws Exception {\n+        testException(\n+            new SSLPeerUnverifiedException(exceptionMessage, exceptionCause));\n+    }\n+\n+    private static void testException(Exception ex) {\n+        if (!Objects.equals(ex.getMessage(), exceptionMessage)) {\n+            throw new RuntimeException(\"Unexpected exception message\");\n+        }\n+\n+        if (ex.getCause() != exceptionCause) {\n+            throw new RuntimeException(\"Unexpected exception cause\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLException\/CheckSSLPeerUnverifiedException.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (C) 2022 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282723\n+ * @summary Add constructors taking a cause to JSSE exceptions\n+ *\/\n+import javax.net.ssl.SSLProtocolException;\n+import java.util.Objects;\n+\n+public class CheckSSLProtocolException {\n+    private static String exceptionMessage = \"message\";\n+    private static Throwable exceptionCause = new RuntimeException();\n+\n+    public static void main(String[] args) throws Exception {\n+        testException(\n+                new SSLProtocolException(exceptionMessage, exceptionCause));\n+    }\n+\n+    private static void testException(Exception ex) {\n+        if (!Objects.equals(ex.getMessage(), exceptionMessage)) {\n+            throw new RuntimeException(\"Unexpected exception message\");\n+        }\n+\n+        if (ex.getCause() != exceptionCause) {\n+            throw new RuntimeException(\"Unexpected exception cause\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLException\/CheckSSLProtocolException.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -352,1 +352,1 @@\n-                    serverException.initCause(clientException);\n+                    serverException.setCause(clientException);\n@@ -358,1 +358,1 @@\n-                    clientException.initCause(serverException);\n+                    clientException.setCause(serverException);\n","filename":"test\/jdk\/javax\/net\/ssl\/templates\/SSLSocketSSLEngineTemplate.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -547,1 +547,1 @@\n-            local.initCause(remote);\n+            local.setCause(remote);\n","filename":"test\/jdk\/javax\/net\/ssl\/templates\/SSLSocketTemplate.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}