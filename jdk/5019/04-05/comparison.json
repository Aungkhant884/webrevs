{"files":[{"patch":"@@ -135,1 +135,1 @@\n-static bool open_emergency_dump_file() {\n+bool JfrEmergencyDump::open_emergency_dump_file() {\n@@ -140,1 +140,9 @@\n-  return open_emergency_dump_fd(create_emergency_dump_path());\n+\n+  bool result = open_emergency_dump_fd(create_emergency_dump_path());\n+  if (!result && *_dump_path != '\\0') {\n+    \/\/ Attempt to create emergency dump to current directory\n+    \/\/ if we couldn't create it on `dumppath=`.\n+    *_dump_path = '\\0';\n+    result = open_emergency_dump_fd(create_emergency_dump_path());\n+  }\n+  return result;\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+  static bool open_emergency_dump_file();\n+\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -78,4 +78,5 @@\n-        test(CrasherIllegalAccess.class, \"\", true, null);\n-        test(CrasherIllegalAccess.class, \"\", false, null);\n-        test(CrasherHalt.class, \"\", true, null);\n-        test(CrasherHalt.class, \"\", false, null);\n+        \/\/ Test without dumppath\n+        test(CrasherIllegalAccess.class, \"\", true);\n+        test(CrasherIllegalAccess.class, \"\", false);\n+        test(CrasherHalt.class, \"\", true);\n+        test(CrasherHalt.class, \"\", false);\n@@ -83,0 +84,1 @@\n+        \/\/ Test with dumppath\n@@ -93,0 +95,7 @@\n+        \/\/ Test with illegal dumppath\n+        Path illegalpath = Path.of(\"silverbullet\");\n+        test(CrasherIllegalAccess.class, \"\", true, illegalpath.toString(), null);\n+        test(CrasherIllegalAccess.class, \"\", false, illegalpath.toString(), null);\n+        test(CrasherHalt.class, \"\", true, illegalpath.toString(), null);\n+        test(CrasherHalt.class, \"\", false, illegalpath.toString(), null);\n+\n@@ -98,0 +107,4 @@\n+    private static void test(Class<?> crasher, String signal, boolean disk) throws Exception {\n+        test(crasher, signal, disk, null);\n+    }\n+\n@@ -99,0 +112,4 @@\n+        test(crasher, signal, disk, dumppath, dumppath);\n+    }\n+\n+    private static void test(Class<?> crasher, String signal, boolean disk, String dumppath, String expectedPath) throws Exception {\n@@ -103,1 +120,1 @@\n-                verify(runProcess(crasher, signal, disk, dumppath), dumppath);\n+                verify(runProcess(crasher, signal, disk, dumppath), expectedPath);\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestDumpOnCrash.java","additions":22,"deletions":5,"binary":false,"changes":27,"status":"modified"}]}