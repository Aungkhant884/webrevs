{"files":[{"patch":"@@ -64,1 +64,1 @@\n-    private AtomicReference<Exception> lastPrintExRef = new AtomicReference<>();\n+    private AtomicReference<Throwable> printErrorRef = new AtomicReference<>();\n@@ -261,8 +261,0 @@\n-    private Exception setLastPrintEx(Exception newEx, boolean printOldEx) {\n-        Exception oldEx = lastPrintExRef.getAndSet(newEx);\n-        if (printOldEx && (oldEx != null)) {\n-            oldEx.printStackTrace();\n-        }\n-        return oldEx;\n-    }\n-\n@@ -335,1 +327,1 @@\n-            setLastPrintEx(null, false);\n+            printErrorRef.set(null);\n@@ -395,10 +387,6 @@\n-            Exception lastPrintEx = setLastPrintEx(null, false);\n-            if (lastPrintEx != null) {\n-                if (lastPrintEx instanceof PrinterException) {\n-                    throw (PrinterException) lastPrintEx;\n-                } else if (lastPrintEx instanceof RuntimeException) {\n-                    throw (RuntimeException) lastPrintEx;\n-                } else {\n-                    PrinterException pe = new PrinterException();\n-                    pe.initCause(lastPrintEx);\n-                    throw pe;\n+            Throwable printError = printErrorRef.getAndSet(null);\n+            if (printError != null) {\n+                if (printError instanceof PrinterException) {\n+                    throw (PrinterException) printError;\n+                } else if (printError instanceof RuntimeException) {\n+                    throw (RuntimeException) printError;\n@@ -406,0 +394,2 @@\n+                throw (PrinterException)\n+                    new PrinterException().initCause(printError);\n@@ -822,3 +812,2 @@\n-                    } catch (Exception e) {\n-                        \/\/ Original code bailed on any exception\n-                        setLastPrintEx(e, true);\n+                    } catch (Throwable t) {\n+                        printErrorRef.compareAndSet(null, t);\n@@ -833,2 +822,2 @@\n-            } catch (Exception e) {\n-                setLastPrintEx(e, true);\n+            } catch (Throwable t) {\n+                printErrorRef.compareAndSet(null, t);\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/lwawt\/macosx\/CPrinterJob.java","additions":14,"deletions":25,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -27,4 +27,6 @@\n-   @summary Verify that \"PrinterJob.print\" throws the exception, if\n-            \"Printable.print\" throws \"PrinterException\".\n-   @run main\/manual ExceptionFromPrintableIsIgnoredTest MAIN\n-   @run main\/manual ExceptionFromPrintableIsIgnoredTest EDT\n+   @summary Verify that \"PrinterJob.print\" throws the expected exception,\n+            if \"Printable.print\" throws an exception.\n+   @run main\/manual ExceptionFromPrintableIsIgnoredTest MAIN PE\n+   @run main\/manual ExceptionFromPrintableIsIgnoredTest MAIN RE\n+   @run main\/manual ExceptionFromPrintableIsIgnoredTest EDT PE\n+   @run main\/manual ExceptionFromPrintableIsIgnoredTest EDT RE\n@@ -43,0 +45,1 @@\n+    private enum TestExceptionType {PE, RE}\n@@ -45,2 +48,3 @@\n-        if (args.length < 1) {\n-            throw new RuntimeException(\"Test thread type is not specified.\");\n+        if (args.length < 2) {\n+            throw new RuntimeException(\"Two arguments are expected:\"\n+                    + \" test thread type and test exception type.\");\n@@ -49,2 +53,3 @@\n-        TestThreadType threadType = TestThreadType.valueOf(args[0]);\n-        new ExceptionFromPrintableIsIgnoredTest(threadType);\n+        new ExceptionFromPrintableIsIgnoredTest(\n+            TestThreadType.valueOf(args[0]),\n+            TestExceptionType.valueOf(args[1]));\n@@ -53,1 +58,3 @@\n-    public ExceptionFromPrintableIsIgnoredTest(TestThreadType threadType) {\n+    public ExceptionFromPrintableIsIgnoredTest(\n+            final TestThreadType threadType,\n+            final TestExceptionType exceptionType) {\n@@ -55,1 +62,2 @@\n-                \"Test started. threadType='%s'\", threadType));\n+                \"Test started. threadType='%s', exceptionType='%s'\",\n+                threadType, exceptionType));\n@@ -58,1 +66,1 @@\n-            runTest();\n+            runTest(exceptionType);\n@@ -64,1 +72,1 @@\n-                        runTest();\n+                        runTest(exceptionType);\n@@ -74,1 +82,1 @@\n-    private void runTest() {\n+    private void runTest(final TestExceptionType exceptionType) {\n@@ -76,0 +84,4 @@\n+        if (job.getPrintService() == null) {\n+            throw new RuntimeException(\"No printers are available.\");\n+        }\n+\n@@ -83,1 +95,8 @@\n-                throw new PrinterException(\"Exception from Printable.print\");\n+                if (exceptionType == TestExceptionType.PE) {\n+                    throw new PrinterException(\n+                        \"Exception from 'Printable.print'.\");\n+                } else if (exceptionType == TestExceptionType.RE) {\n+                    throw new RuntimeException(\n+                        \"Exception from 'Printable.print'.\");\n+                }\n+                return PAGE_EXISTS;\n@@ -86,7 +105,0 @@\n-        if (job.printDialog()) {\n-            Exception printEx = null;\n-            try {\n-                job.print();\n-            } catch (PrinterException pe) {\n-                printEx = pe;\n-            }\n@@ -94,6 +106,16 @@\n-            if (printEx != null) {\n-                System.out.println(\"'PrinterJob.print' threw the exception:\");\n-                printEx.printStackTrace(System.out);\n-            } else {\n-                throw new RuntimeException(\n-                    \"'PrinterJob.print' did not throw any exception.\");\n+        Throwable printEx = null;\n+        try {\n+            job.print();\n+        } catch (Throwable t) {\n+            printEx = t;\n+        }\n+\n+        if (printEx != null) {\n+            System.out.println(\"'PrinterJob.print' threw the exception:\");\n+            printEx.printStackTrace(System.out);\n+\n+            if (((printEx instanceof PrinterException) &&\n+                    (exceptionType == TestExceptionType.PE)) ||\n+                ((printEx instanceof RuntimeException) &&\n+                    (exceptionType == TestExceptionType.RE))) {\n+                return;\/\/ Test passed.\n@@ -101,0 +123,1 @@\n+            throw new RuntimeException(\"Unexpected exception was thrown.\");\n@@ -102,1 +125,2 @@\n-            throw new RuntimeException(\"User canceled the print dialog.\");\n+            throw new RuntimeException(\n+                \"'PrinterJob.print' did not throw any exception.\");\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/ExceptionFromPrintableIsIgnoredTest.java","additions":52,"deletions":28,"binary":false,"changes":80,"status":"modified"}]}