{"files":[{"patch":"@@ -28,1 +28,1 @@\n- * @run main\/othervm -Xbatch -XX:-TieredCompilation\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:+AbortVMOnCompilationFailure\n@@ -36,1 +36,1 @@\n-    private final static int ITERATIONS = 1000000;\n+    private final static int ITERATIONS = 30000;\n@@ -38,1 +38,2 @@\n-    public static void main(String[] args) {\n+    \/\/ match(Set dst (ConvI2L (AndI src1 mask))) \/\/ Using 0\n+    public static void testZeroBzhiI2L() {\n@@ -42,1 +43,0 @@\n-        { \/\/ match(Set dst (ConvI2L (AndI src1 mask)))\n@@ -48,1 +48,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -59,1 +59,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -70,1 +70,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -81,1 +81,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -92,1 +92,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -103,1 +103,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -114,1 +114,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -125,1 +125,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -136,1 +136,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -147,1 +147,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -158,1 +158,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -169,1 +169,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -180,1 +180,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -191,1 +191,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -202,1 +202,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -213,1 +213,1 @@\n-                    throw new Error(\"bzhi I2L with register failed\");\n+                    throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -216,0 +216,1 @@\n+    }\n@@ -217,2 +218,4 @@\n-            ix = 1;\n-            i = 0;\n+    \/\/ match(Set dst (ConvI2L (AndI src1 mask))) \/\/ Using 1\n+    public static void testOneBzhiI2L() {\n+        int ix = 1;\n+        int i = 0;\n@@ -220,1 +223,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        long z = BMITests.bzhiI2L(ix, i);\n@@ -222,5 +225,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -228,0 +230,1 @@\n+        }\n@@ -229,1 +232,1 @@\n-            i = 1;\n+        i = 1;\n@@ -231,1 +234,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -233,5 +236,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -239,0 +241,1 @@\n+        }\n@@ -240,1 +243,1 @@\n-            i = 2;\n+        i = 2;\n@@ -242,1 +245,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -244,5 +247,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -250,0 +252,1 @@\n+        }\n@@ -251,1 +254,1 @@\n-            i = 3;\n+        i = 3;\n@@ -253,1 +256,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -255,5 +258,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -261,0 +263,1 @@\n+        }\n@@ -262,1 +265,1 @@\n-            i = 4;\n+        i = 4;\n@@ -264,1 +267,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -266,5 +269,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -272,0 +274,1 @@\n+        }\n@@ -273,1 +276,1 @@\n-            i = 5;\n+        i = 5;\n@@ -275,1 +278,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -277,5 +280,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -283,0 +285,1 @@\n+        }\n@@ -284,1 +287,1 @@\n-            i = 6;\n+        i = 6;\n@@ -286,1 +289,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -288,5 +291,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -294,0 +296,1 @@\n+        }\n@@ -295,1 +298,1 @@\n-            i = 7;\n+        i = 7;\n@@ -297,1 +300,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -299,5 +302,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -305,0 +307,1 @@\n+        }\n@@ -306,1 +309,1 @@\n-            i = 8;\n+        i = 8;\n@@ -308,1 +311,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -310,5 +313,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -316,0 +318,1 @@\n+        }\n@@ -317,1 +320,1 @@\n-            i = 9;\n+        i = 9;\n@@ -319,1 +322,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -321,5 +324,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -327,0 +329,1 @@\n+        }\n@@ -328,1 +331,1 @@\n-            i = 10;\n+        i = 10;\n@@ -330,1 +333,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -332,5 +335,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -338,0 +340,1 @@\n+        }\n@@ -339,1 +342,1 @@\n-            i = 11;\n+        i = 11;\n@@ -341,1 +344,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -343,5 +346,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -349,0 +351,1 @@\n+        }\n@@ -350,1 +353,1 @@\n-            i = 12;\n+        i = 12;\n@@ -352,1 +355,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -354,5 +357,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -360,0 +362,1 @@\n+        }\n@@ -361,1 +364,1 @@\n-            i = 13;\n+        i = 13;\n@@ -363,1 +366,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -365,5 +368,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -371,0 +373,1 @@\n+        }\n@@ -372,1 +375,1 @@\n-            i = 14;\n+        i = 14;\n@@ -374,1 +377,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -376,5 +379,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -382,0 +384,1 @@\n+        }\n@@ -383,1 +386,1 @@\n-            i = 15;\n+        i = 15;\n@@ -385,1 +388,1 @@\n-            z = BMITests.bzhiI2L(ix, i);\n+        z = BMITests.bzhiI2L(ix, i);\n@@ -387,5 +390,4 @@\n-            for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                long ii = BMITests.bzhiI2L(ix, i);\n-                if (ii != z) {\n-                    throw new Error(\"bzhi I2L with register failed\");\n-                }\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+            long ii = BMITests.bzhiI2L(ix, i);\n+            if (ii != z) {\n+                throw new Error(returnBzhiI2LErrMessage (z, ii));\n@@ -396,2 +398,2 @@\n-    static class MemI {\n-        public int x;\n+    private static String returnBzhiI2LErrMessage (long value, long value2) {\n+        return \"bzhi I2L with register failed, uncompiled result: \" + value + \" does not match compiled result: \" + value2;\n@@ -442,0 +444,5 @@\n+\n+    public static void main(String[] args) {\n+        testZeroBzhiI2L();\n+        testOneBzhiI2L();\n+    }\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/BMI2.java","additions":142,"deletions":135,"binary":false,"changes":277,"status":"modified"},{"patch":"@@ -169,0 +169,7 @@\n+    public static class BMIUnaryIntToLongExpr extends BMIUnaryExpr {\n+        public boolean isIntToLongExprSupported() {\n+            return true;\n+        }\n+    }\n+\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/Expr.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -46,1 +46,2 @@\n-            System.out.println(\"INFO: CPU does not support bmi2 feature.\");\n+            System.out.println(\"INFO: CPU does not support bmi2 feature, test SKIPPED\" );\n+            return;\n@@ -57,1 +58,1 @@\n-    public static class BzhiI2LExpr extends Expr.BMIUnaryLongExpr {\n+    public static class BzhiI2LExpr extends Expr.BMIUnaryIntToLongExpr {\n@@ -74,1 +75,1 @@\n-    public static class BzhiI2LCommutativeExpr extends Expr.BMIUnaryLongExpr {\n+    public static class BzhiI2LCommutativeExpr extends Expr.BMIUnaryIntToLongExpr {\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/TestBzhiI2L.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -54,1 +54,6 @@\n-        BmiTestCase bmiTestCase = (BmiTestCase) testCase;\n+        BmiTestCase bmiTestCase;\n+        if (((BmiTestCase) testCase).getTestCaseX64()) {\n+            bmiTestCase = (BmiTestCase_x64) testCase;\n+        } else {\n+            bmiTestCase = (BmiTestCase) testCase;\n+        }\n@@ -192,4 +197,0 @@\n-        protected void setCpuFlag(String cpuFlag) {\n-            this.cpuFlag = cpuFlag;\n-        }\n-\n@@ -200,4 +201,0 @@\n-        protected void setVMFlag(String vmFlag) {\n-            this.vmFlag = vmFlag;\n-        }\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/BmiIntrinsicBase.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- * @run main\/bootclasspath\/othervm -Xbatch -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ * @run main\/bootclasspath\/othervm -Xbatch -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI -XX:+AbortVMOnCompilationFailure\n@@ -49,3 +49,3 @@\n-        this.setCpuFlag(\"bmi2\");\n-        this.setVMFlag(\"UseBMI2Instructions\");\n-        this.isLongOperation = true;\n+        cpuFlag = \"bmi2\";\n+        vmFlag = \"UseBMI2Instructions\";\n+        isLongOperation = true;\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/bmi\/verifycode\/BzhiTestI2L.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}