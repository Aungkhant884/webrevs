{"files":[{"patch":"@@ -29,1 +29,1 @@\n- *      -XX:CompileCommand=compileonly,compiler.codegen.BMI2$BMITests::*\n+ *      -XX:CompileCommand=dontinline,compiler.codegen.BMI2$BMITests::*\n@@ -38,20 +38,3 @@\n-    \/\/ match(Set dst (ConvI2L (AndI src1 mask))) \/\/ Using 0\n-    public static void testZeroBzhiI2L() {\n-        int ix = 0;\n-\n-        for (int i = 0; i <= 15; i++) {\n-            long z = BMITests.bzhiI2L(ix, i);\n-\n-                for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                    long ii = BMITests.bzhiI2L(ix, i);\n-                    if (ii != z) {\n-                        throw new Error(returnBzhiI2LErrMessage (z, ii));\n-                    }\n-                }\n-        }\n-    }\n-\n-    \/\/ match(Set dst (ConvI2L (AndI src1 mask))) \/\/ Using 1\n-    public static void testOneBzhiI2L() {\n-        int ix = 1;\n-\n+    \/\/ match(Set dst (ConvI2L (AndI src1 mask)))\n+    public static void testBzhiI2L(int ix) {\n+        long[] goldv = new long[16];\n@@ -59,8 +42,1 @@\n-            long z = BMITests.bzhiI2L(ix, i);\n-\n-                for (int i2 = 0; i2 < ITERATIONS; i2++) {\n-                    long ii = BMITests.bzhiI2L(ix, i);\n-                    if (ii != z) {\n-                        throw new Error(returnBzhiI2LErrMessage (z, ii));\n-                    }\n-                }\n+              goldv[i] = BMITests.bzhiI2L(ix, i);\n@@ -68,0 +44,8 @@\n+        for (int i2 = 0; i2 < ITERATIONS; i2++) {\n+             for (int i = 0; i <= 15; i++) {\n+                  long v = BMITests.bzhiI2L(ix, i);\n+                  if (v != goldv[i]) {\n+                          throw new Error(returnBzhiI2LErrMessage (goldv[i], v));\n+                  }\n+             }\n+       }\n@@ -118,2 +102,2 @@\n-        testZeroBzhiI2L();\n-        testOneBzhiI2L();\n+        testBzhiI2L(0);\n+        testBzhiI2L(1);\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/BMI2.java","additions":15,"deletions":31,"binary":false,"changes":46,"status":"modified"}]}