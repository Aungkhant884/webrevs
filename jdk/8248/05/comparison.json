{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.lang.ref.Cleaner;\n@@ -235,2 +234,1 @@\n-                Cleaner.create().register(this,\n-                        () -> Arrays.fill(this.password, ' '));\n+                P11Util.cleaner.register(this, releaserFor(this.password));\n@@ -248,0 +246,6 @@\n+\n+        private static Runnable releaserFor(char[] password) {\n+            return () -> {\n+                Arrays.fill(password, ' ');\n+            };\n+        }\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyStore.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.lang.ref.Cleaner;\n@@ -42,0 +43,3 @@\n+    \/\/ A cleaner, shared within this module.\n+    public static final Cleaner cleaner = Cleaner.create();\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Util.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n-import java.lang.ref.Cleaner;\n@@ -60,0 +59,1 @@\n+import sun.security.pkcs11.P11Util;\n@@ -115,0 +115,3 @@\n+\n+    \/\/ Note: Please don't update this field other than the constructor.\n+    \/\/ Otherwise, the native data is not able to be collected.\n@@ -167,1 +170,1 @@\n-        Cleaner.create().register(this, this::disconnect);\n+        P11Util.cleaner.register(this, releaserFor(pNativeData));\n@@ -203,0 +206,8 @@\n+    private static Runnable releaserFor(long pNativeData) {\n+        return () -> {\n+            if (pNativeData != 0) {\n+                PKCS11.disconnect(pNativeData);\n+            }\n+        };\n+    }\n+\n@@ -207,1 +218,1 @@\n-     * native part.\n+     * native part.  Please don't use this method other than the constructor.\n@@ -223,1 +234,3 @@\n-     * internal use only.\n+     * internal use only.  Please don't use this method other than finalization\n+     * as implemented in the releaserFor() method.\n+     *\n@@ -230,1 +243,1 @@\n-    private native void disconnect();\n+    private static native void disconnect(long pNativeData);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11.java","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -168,15 +168,0 @@\n-\n-\/*\n- * Removes the entry for the given pkcs11Implementation from the list. Returns\n- * the module's data, after the node was removed. If this function returns NULL\n- * the pkcs11Implementation was not in the list.\n- *\/\n-ModuleData * removeModuleEntry(JNIEnv *env, jobject pkcs11Implementation) {\n-    ModuleData *moduleData = getModuleEntry(env, pkcs11Implementation);\n-    if (moduleData == NULL) {\n-        return NULL;\n-    }\n-    (*env)->SetLongField(env, pkcs11Implementation, pNativeDataID, 0);\n-    return moduleData;\n-}\n-\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/p11_util.c","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -419,1 +419,0 @@\n-ModuleData * removeModuleEntry(JNIEnv *env, jobject pkcs11Implementation);\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/pkcs11wrapper.h","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -265,1 +265,1 @@\n- * Signature: ()V\n+ * Signature: (J)V\n@@ -267,4 +267,3 @@\n-JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_disconnect\n-    (JNIEnv *env, jobject obj)\n-{\n-    ModuleData *moduleData;\n+JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_disconnect(\n+        JNIEnv *env, jclass thisClass, jlong ckpNativeData) {\n+\n@@ -272,1 +271,2 @@\n-    moduleData = removeModuleEntry(env, obj);\n+    if (ckpNativeData != 0L) {\n+        ModuleData *moduleData = jlong_to_ptr(ckpNativeData);\n@@ -274,2 +274,5 @@\n-    if (moduleData != NULL) {\n-        dlclose(moduleData->hModule);\n+        if (moduleData != NULL && moduleData->hModule != NULL) {\n+            dlclose(moduleData->hModule);\n+        }\n+\n+        free(moduleData);\n@@ -278,1 +281,0 @@\n-    free(moduleData);\n@@ -280,1 +282,0 @@\n-\n","filename":"src\/jdk.crypto.cryptoki\/unix\/native\/libj2pkcs11\/p11_md.c","additions":12,"deletions":11,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -278,1 +278,1 @@\n- * Signature: ()V\n+ * Signature: (J)V\n@@ -280,4 +280,3 @@\n-JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_disconnect\n-    (JNIEnv *env, jobject obj)\n-{\n-    ModuleData *moduleData;\n+JNIEXPORT void JNICALL Java_sun_security_pkcs11_wrapper_PKCS11_disconnect(\n+        JNIEnv *env, jclass thisClass, jlong ckpNativeData) {\n+\n@@ -285,1 +284,2 @@\n-    moduleData = removeModuleEntry(env, obj);\n+    if (ckpNativeData != 0L) {\n+        ModuleData *moduleData = jlong_to_ptr(ckpNativeData);\n@@ -287,2 +287,5 @@\n-    if (moduleData != NULL) {\n-        FreeLibrary(moduleData->hModule);\n+        if (moduleData != NULL && moduleData->hModule != NULL) {\n+            FreeLibrary(moduleData->hModule);\n+        }\n+\n+        free(moduleData);\n@@ -291,1 +294,0 @@\n-    free(moduleData);\n","filename":"src\/jdk.crypto.cryptoki\/windows\/native\/libj2pkcs11\/p11_md.c","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"}]}