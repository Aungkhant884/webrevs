{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2751,0 +2751,1 @@\n+  m->set_name();\n","filename":"src\/hotspot\/share\/classfile\/classFileParser.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -934,0 +934,1 @@\n+        new_methods->at(i)->set_name();\n@@ -938,0 +939,1 @@\n+        mo->set_name();\n","filename":"src\/hotspot\/share\/classfile\/defaultMethods.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,0 +122,3 @@\n+  \/\/ Name is very useful for debugging but needs to be set later, after\n+  \/\/ the _constants field is set to point to the ConstantPool.\n+  NOT_PRODUCT(_name = NULL;)\n@@ -1454,0 +1457,1 @@\n+  m->set_name();\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -101,0 +101,2 @@\n+\n+  Symbol* _name;\n@@ -153,0 +155,2 @@\n+  void set_name()                                { NOT_PRODUCT(_name = name()); }\n+\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}