{"files":[{"patch":"@@ -157,0 +157,2 @@\n+        } catch (IllegalStateException e) {\n+            throw e;\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherInputStream.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -437,1 +437,3 @@\n-        } else return !this.checkParam;\n+        } else {\n+            return !this.checkParam;\n+        }\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPermission.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -282,1 +282,1 @@\n-    private static AlgorithmParameterSpec getInstance(String type,\n+    private static final AlgorithmParameterSpec getInstance(String type,\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CryptoPolicyParser.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -142,1 +142,1 @@\n-    public static ExemptionMechanism getInstance(String algorithm)\n+    public static final ExemptionMechanism getInstance(String algorithm)\n@@ -189,1 +189,1 @@\n-    public static ExemptionMechanism getInstance(String algorithm,\n+    public static final ExemptionMechanism getInstance(String algorithm,\n@@ -230,2 +230,2 @@\n-    public static ExemptionMechanism getInstance(String algorithm,\n-        Provider provider) throws NoSuchAlgorithmException {\n+    public static final ExemptionMechanism getInstance(String algorithm,\n+            Provider provider) throws NoSuchAlgorithmException {\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/ExemptionMechanism.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -180,1 +180,1 @@\n-    public static KeyAgreement getInstance(String algorithm)\n+    public static final KeyAgreement getInstance(String algorithm)\n@@ -235,1 +235,1 @@\n-    public static KeyAgreement getInstance(String algorithm,\n+    public static final KeyAgreement getInstance(String algorithm,\n@@ -276,1 +276,1 @@\n-    public static KeyAgreement getInstance(String algorithm,\n+    public static final KeyAgreement getInstance(String algorithm,\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyAgreement.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -240,1 +240,1 @@\n-    public static KeyGenerator getInstance(String algorithm)\n+    public static final KeyGenerator getInstance(String algorithm)\n@@ -282,1 +282,1 @@\n-    public static KeyGenerator getInstance(String algorithm,\n+    public static final KeyGenerator getInstance(String algorithm,\n@@ -322,1 +322,1 @@\n-    public static KeyGenerator getInstance(String algorithm,\n+    public static final KeyGenerator getInstance(String algorithm,\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/KeyGenerator.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -177,1 +177,1 @@\n-    public static Mac getInstance(String algorithm)\n+    public static final Mac getInstance(String algorithm)\n@@ -230,1 +230,1 @@\n-    public static Mac getInstance(String algorithm, String provider)\n+    public static final Mac getInstance(String algorithm, String provider)\n@@ -268,1 +268,1 @@\n-    public static Mac getInstance(String algorithm, Provider provider)\n+    public static final Mac getInstance(String algorithm, Provider provider)\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Mac.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -449,1 +449,1 @@\n-        throws IOException {\n+        throws IOException, StreamCorruptedException {\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/SealedObject.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-    public static SecretKeyFactory getInstance(String algorithm)\n+    public static final SecretKeyFactory getInstance(String algorithm)\n@@ -204,1 +204,1 @@\n-    public static SecretKeyFactory getInstance(String algorithm,\n+    public static final SecretKeyFactory getInstance(String algorithm,\n@@ -245,1 +245,1 @@\n-    public static SecretKeyFactory getInstance(String algorithm,\n+    public static final SecretKeyFactory getInstance(String algorithm,\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/SecretKeyFactory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-     * \"...The first 6 keys have duals different from themselves, hence\n+     * \"...The first 6 keys have duals different than themselves, hence\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/spec\/DESKeySpec.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}