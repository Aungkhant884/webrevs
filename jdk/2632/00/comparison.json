{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2018, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2017, 2021, Red Hat, Inc. All rights reserved.\n@@ -74,10 +74,0 @@\n-ShenandoahPushWorkerQueuesScope::ShenandoahPushWorkerQueuesScope(WorkGang* workers, ShenandoahObjToScanQueueSet* queues, uint nworkers, bool check) :\n-  ShenandoahPushWorkerScope(workers, nworkers, check), _queues(queues) {\n-  _queues->reserve(_n_workers);\n-}\n-\n-ShenandoahPushWorkerQueuesScope::~ShenandoahPushWorkerQueuesScope() {\n-  \/\/ Restore old worker value\n-  _queues->reserve(_old_workers);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkGroup.cpp","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2017, 2021, Red Hat, Inc. All rights reserved.\n@@ -54,9 +54,0 @@\n-class ShenandoahPushWorkerQueuesScope : public ShenandoahPushWorkerScope {\n-private:\n-  ShenandoahObjToScanQueueSet* _queues;\n-\n-public:\n-  ShenandoahPushWorkerQueuesScope(WorkGang* workers, ShenandoahObjToScanQueueSet* queues, uint nworkers, bool do_check = true);\n-  ~ShenandoahPushWorkerQueuesScope();\n-};\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahWorkGroup.hpp","additions":1,"deletions":10,"binary":false,"changes":11,"status":"modified"}]}