{"files":[{"patch":"@@ -68,1 +68,1 @@\n-    fwd = _heap->evacuate_object(obj, t);\n+    _heap->evacuate_object(fwd, t);\n@@ -95,1 +95,1 @@\n-      return _heap->evacuate_object(obj, t);\n+      _heap->evacuate_object(fwd, t);\n@@ -358,1 +358,1 @@\n-          fwd = _heap->evacuate_object(obj, thread);\n+          _heap->evacuate_object(fwd, thread);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-          fwd = _heap->evacuate_object(obj, _thread);\n+          _heap->evacuate_object(fwd, _thread);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSetClone.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-        resolved = _heap->evacuate_object(obj, _thread);\n+        _heap->evacuate_object(resolved, _thread);\n@@ -162,1 +162,1 @@\n-        resolved = _heap->evacuate_object(obj, t);\n+        _heap->evacuate_object(resolved, t);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahClosures.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -693,1 +693,1 @@\n-        resolved = _heap->evacuate_object(obj, _thread);\n+        _heap->evacuate_object(resolved, _thread);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -293,1 +293,1 @@\n-class ShenandoahPrepareForCompactionObjectClosure : public ObjectClosure {\n+class ShenandoahPrepareForCompactionObjectClosure {\n@@ -332,1 +332,1 @@\n-  void do_object(oop p) {\n+  inline int do_object_size(oop p) {\n@@ -337,1 +337,1 @@\n-    size_t obj_size = p->size();\n+    int obj_size = p->size();\n@@ -363,0 +363,5 @@\n+    return obj_size;\n+  }\n+\n+  inline void do_object(oop p) {\n+    do_object_size(p);\n@@ -745,1 +750,1 @@\n-class ShenandoahAdjustPointersObjectClosure : public ObjectClosure {\n+class ShenandoahAdjustPointersObjectClosure {\n@@ -754,1 +759,1 @@\n-  void do_object(oop p) {\n+  inline void do_object(oop p) {\n@@ -758,0 +763,6 @@\n+  inline int do_object_size(oop p) {\n+    assert(_heap->complete_marking_context()->is_marked(p), \"must be marked\");\n+    Klass* klass = p->klass();\n+    p->oop_iterate(&_cl, klass);\n+    return p->size_given_klass(klass);\n+  }\n@@ -826,1 +837,1 @@\n-class ShenandoahCompactObjectsClosure : public ObjectClosure {\n+class ShenandoahCompactObjectsClosure {\n@@ -835,1 +846,1 @@\n-  void do_object(oop p) {\n+  inline int do_object_size(oop p) {\n@@ -837,1 +848,2 @@\n-    size_t size = (size_t)p->size();\n+    int sz = p->size();\n+    size_t size = (size_t)sz;\n@@ -845,0 +857,4 @@\n+    return sz;\n+  }\n+  inline void do_object(oop p) {\n+    do_object_size(p);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFullGC.cpp","additions":24,"deletions":8,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -944,1 +944,1 @@\n-class ShenandoahConcurrentEvacuateRegionObjectClosure : public ObjectClosure {\n+class ShenandoahConcurrentEvacuateRegionObjectClosure {\n@@ -952,1 +952,1 @@\n-  void do_object(oop p) {\n+  inline void do_object(oop p) {\n@@ -958,0 +958,8 @@\n+  inline int do_object_size(oop p) {\n+    shenandoah_assert_marked(NULL, p);\n+    if (!p->is_forwarded()) {\n+      return _heap->evacuate_object(p, _thread);\n+    } else {\n+      return p->size();\n+    }\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -621,3 +621,3 @@\n-  \/\/ Evacuates object src. Returns the evacuated object, either evacuated\n-  \/\/ by this thread, or by some other thread.\n-  inline oop evacuate_object(oop src, Thread* thread);\n+  \/\/ Evacuates the object obj. Updates reference to the evacuated object, either evacuated\n+  \/\/ by this thread, or by some other thread. Returns size of the object.\n+  inline int evacuate_object(oop& obj, Thread* thread);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -290,1 +290,4 @@\n-inline oop ShenandoahHeap::evacuate_object(oop p, Thread* thread) {\n+inline int ShenandoahHeap::evacuate_object(oop& p, Thread* thread) {\n+  int sz = p->size();\n+  size_t size = (size_t)sz;\n+\n@@ -294,1 +297,2 @@\n-    return ShenandoahBarrierSet::resolve_forwarded(p);\n+    p = ShenandoahBarrierSet::resolve_forwarded(p);\n+    return sz;\n@@ -299,1 +303,0 @@\n-  size_t size = p->size();\n@@ -329,1 +332,2 @@\n-    return ShenandoahBarrierSet::resolve_forwarded(p);\n+    p = ShenandoahBarrierSet::resolve_forwarded(p);\n+    return sz;\n@@ -341,1 +345,2 @@\n-    return copy_val;\n+    p = copy_val;\n+    return sz;\n@@ -361,1 +366,2 @@\n-    return result;\n+    p = result;\n+    return sz;\n@@ -516,3 +522,1 @@\n-    int size = obj->size();\n-    cl->do_object(obj);\n-    cs += size;\n+    cs += cl->do_object_size(obj);\n@@ -523,1 +527,1 @@\n-class ShenandoahObjectToOopClosure : public ObjectClosure {\n+class ShenandoahObjectToOopClosure {\n@@ -528,1 +532,1 @@\n-  void do_object(oop obj) {\n+  inline void do_object(oop obj) {\n@@ -531,0 +535,6 @@\n+\n+  inline int do_object_size(oop obj) {\n+    Klass* klass = obj->klass();\n+    obj->oop_iterate(_cl, klass);\n+    return obj->size_given_klass(klass);\n+  }\n@@ -534,1 +544,1 @@\n-class ShenandoahObjectToOopBoundedClosure : public ObjectClosure {\n+class ShenandoahObjectToOopBoundedClosure {\n@@ -541,1 +551,1 @@\n-  void do_object(oop obj) {\n+  inline void do_object(oop obj) {\n@@ -544,0 +554,6 @@\n+\n+  inline int do_object_size(oop obj) {\n+    Klass* klass = obj->klass();\n+    obj->oop_iterate(_cl, _bounds, klass);\n+    return obj->size_given_klass(klass);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp","additions":29,"deletions":13,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -267,0 +267,3 @@\n+  template <typename OopClosureType>\n+  inline void oop_iterate(OopClosureType* cl, Klass* klass);\n+\n@@ -270,0 +273,3 @@\n+  template <typename OopClosureType>\n+  inline void oop_iterate(OopClosureType* cl, MemRegion mr, Klass* klass);\n+\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -328,0 +328,5 @@\n+template <typename OopClosureType>\n+void oopDesc::oop_iterate(OopClosureType* cl, Klass* klass) {\n+  OopIteratorClosureDispatch::oop_oop_iterate(cl, this, klass);\n+}\n+\n@@ -333,0 +338,5 @@\n+template <typename OopClosureType>\n+void oopDesc::oop_iterate(OopClosureType* cl, MemRegion mr, Klass* klass) {\n+  OopIteratorClosureDispatch::oop_oop_iterate(cl, this, klass, mr);\n+}\n+\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}