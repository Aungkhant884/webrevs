{"files":[{"patch":"@@ -3862,3 +3862,9 @@\n-      frame f = os::current_frame();\n-      VMError::print_native_stack(&stack_stream, f, current, true \/*print_source_info *\/,\n-                                  -1 \/* max stack_stream *\/, buf, O_BUFLEN);\n+      address lastpc = nullptr;\n+      if (os::platform_print_native_stack(&stack_stream, nullptr, buf, O_BUFLEN, lastpc)) {\n+        \/\/ We have printed the native stack in platform-specific code,\n+        \/\/ so nothing else to do in this case.\n+      } else {\n+        frame f = os::current_frame();\n+        VMError::print_native_stack(&stack_stream, f, current, true \/*print_source_info *\/,\n+                                    -1 \/* max stack_stream *\/, buf, O_BUFLEN);\n+      }\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":9,"deletions":3,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -121,0 +121,17 @@\n+        \/\/  -Xlog:class+load+cause\n+        pb = exec(\"-Xlog:class+load+cause\");\n+        checkAbsent(\"[class,load,cause]\");\n+        checkFor(\"class load cause logging will not produce output without LogClassLoadingCauseFor\");\n+\n+        \/\/  -Xlog:class+load+cause -XX:LogClassLoadingCauseFor=java.lang.StringCoding\n+        pb = exec(\"-Xlog:class+load+cause\", \"-XX:LogClassLoadingCauseFor=java.lang.StringCoding\");\n+        checkFor(\"[class,load,cause]\", \"Java stack when loading java.lang.StringCoding:\");\n+\n+        \/\/  -Xlog:class+load+cause -XX:LogClassLoadingCauseFor=java.lang.StringCoding\n+        pb = exec(\"-Xlog:class+load+cause+native\", \"-XX:LogClassLoadingCauseFor=java.lang.StringCoding\");\n+        checkFor(\"[class,load,cause,native]\", \"Native stack when loading java.lang.StringCoding:\");\n+\n+        \/\/  -Xlog:class+load+cause* -XX:LogClassLoadingCauseFor=java.lang.StringCoding\n+        pb = exec(\"-Xlog:class+load+cause*\", \"-XX:LogClassLoadingCauseFor=java.lang.StringCoding\");\n+        checkFor(\"[class,load,cause] Java stack when loading java.lang.StringCoding:\");\n+        checkFor(\"[class,load,cause,native] Native stack when loading java.lang.StringCoding:\");\n","filename":"test\/hotspot\/jtreg\/runtime\/logging\/ClassLoadUnloadTest.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}