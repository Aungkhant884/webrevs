{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import static jdk.incubator.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n@@ -160,0 +161,3 @@\n+        \/\/ remove LauncherData from map so it will re-run the defaultValueFunction\n+        tmp.remove(LAUNCHER_DATA.getID());\n+\n","filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AddLauncherArguments.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -794,2 +794,2 @@\n-    public CfgFile readLaunherCfgFile() {\n-        return readLaunherCfgFile(null);\n+    public CfgFile readLauncherCfgFile() {\n+        return readLauncherCfgFile(null);\n@@ -798,1 +798,1 @@\n-    public CfgFile readLaunherCfgFile(String launcherName) {\n+    public CfgFile readLauncherCfgFile(String launcherName) {\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+import java.io.File;\n@@ -35,0 +36,1 @@\n+import jdk.jpackage.test.CfgFile;\n@@ -203,0 +205,24 @@\n+\n+        \/\/ check value of app.mainmodule in ModularAppLauncher's cfg file\n+        CfgFile cfg = cmd.readLauncherCfgFile(\"ModularAppLauncher\");\n+        String moduleValue = cfg.getValue(\"Application\", \"app.mainmodule\");\n+        String mainClass = null;\n+        String classpath = null;\n+        String expectedMod = JavaAppDesc.parse(\n+                modularAppDesc.toString()).setBundleFileName(null).toString();\n+        TKit.assertEquals(expectedMod, moduleValue,\n+                String.format(\"Check value of app.mainmodule=[%s]\" +\n+                \"in ModularAppLauncher cfg file is as expected\", expectedMod));\n+\n+        \/\/ check values of app.mainclass and app.classpath in cfg file\n+        cfg = cmd.readLauncherCfgFile(\"NonModularAppLauncher\");\n+        moduleValue = null;\n+        mainClass = cfg.getValue(\"Application\", \"app.mainclass\");\n+        classpath = cfg.getValue(\"Application\", \"app.classpath\");\n+        String ExpectedCN = nonModularAppDesc.className();\n+        TKit.assertEquals(ExpectedCN, mainClass,\n+                String.format(\"Check value of app.mainclass=[%s]\" +\n+                \"in NonModularAppLauncher cfg file is as expected\", ExpectedCN));\n+        TKit.assertTrue(classpath.startsWith(\"$APPDIR\" + File.separator\n+                + nonModularAppDesc.jarFileName()),\n+                \"Check app.classpath value in ModularAppLauncher cfg file\");\n","filename":"test\/jdk\/tools\/jpackage\/share\/AddLauncherTest.java","additions":26,"deletions":0,"binary":false,"changes":26,"status":"modified"}]}