{"files":[{"patch":"@@ -26,0 +26,1 @@\n+#include \"utilities\/macros.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/periodic\/jfrFinalizerStatisticsEvent.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"utilities\/macros.hpp\"\n","filename":"src\/hotspot\/share\/jfr\/support\/jfrKlassUnloading.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"utilities\/macros.hpp\"\n@@ -28,0 +29,1 @@\n+#include \"memory\/resourceArea.hpp\"\n@@ -114,1 +116,0 @@\n-  \/\/ We use default allocation\/deallocation but counted\n@@ -116,1 +117,1 @@\n-    return AllocateHeap(size, mtStatistics);\n+    return AllocateHeap(size, mtServiceability);\n@@ -119,1 +120,0 @@\n-    \/\/ We get here because some threads lost a race to insert a newly created FinalizerEntry\n@@ -124,1 +124,1 @@\n-typedef ConcurrentHashTable<FinalizerTableConfig, mtStatistics> FinalizerHashtable;\n+typedef ConcurrentHashTable<FinalizerTableConfig, mtServiceability> FinalizerHashtable;\n","filename":"src\/hotspot\/share\/services\/finalizerService.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-class FinalizerEntry : public CHeapObj<mtStatistics> {\n+class FinalizerEntry : public CHeapObj<mtServiceability> {\n","filename":"src\/hotspot\/share\/services\/finalizerService.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}