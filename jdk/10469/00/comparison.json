{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1007,0 +1007,1 @@\n+     *\n@@ -1009,2 +1010,6 @@\n-     *     for (T element : this stream)\n-     *         result = accumulator.apply(result, element)\n+     *     for(Iterable<T> chunk : this stream in chunks) {\n+     *         U chunkResult = identity;\n+     *         for (T element : chunk)\n+     *             chunkResult = accumulator.apply(chunkResult, element);\n+     *         result = combiner.apply(result, chunkResult);\n+     *     }\n@@ -1014,1 +1019,2 @@\n-     * but is not constrained to execute sequentially.\n+     * In the case where there are less than two chunks, invoking the combiner is not needed\n+     * as there is no merging to be done.\n","filename":"src\/java.base\/share\/classes\/java\/util\/stream\/Stream.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"}]}