{"files":[{"patch":"@@ -41,2 +41,2 @@\n-                 \"retainDenominator\", \"divByNegOne\", \"divByPow2AND\",\n-                 \"divByPow2AND1\",  \"divByPow2\", \"divByNegPow2\",\n+                 \"retainDenominator\", \"divByNegOne\", \"divByPow2And\",\n+                 \"divByPow2And1\",  \"divByPow2\", \"divByNegPow2\",\n@@ -88,2 +88,2 @@\n-        Asserts.assertEQ((a & -4) \/ 2 , divByPow2AND(a));\n-        Asserts.assertEQ((a & -2) \/ 2 , divByPow2AND1(a));\n+        Asserts.assertEQ((a & -4) \/ 2 , divByPow2And(a));\n+        Asserts.assertEQ((a & -2) \/ 2 , divByPow2And1(a));\n@@ -148,1 +148,1 @@\n-    \/\/ Checks (x & -(2^c0)) \/ 2^c1 => (x >> c1) & (2^c0 >> c1) => (x >> c1) & c3 where 2^c0 > |2^c1| and c3 = 2^c0 >> c1\n+    \/\/ Checks (x & -(2^c0)) \/ 2^c1 => (x >> c1) & (2^c0 >> c1) => (x >> c1) & c3 where 2^c0 > |2^c1| \"AND\" c3 = 2^c0 >> c1\n@@ -150,1 +150,1 @@\n-    public int divByPow2AND(int x) {\n+    public int divByPow2And(int x) {\n@@ -159,1 +159,1 @@\n-    public int divByPow2AND1(int x) {\n+    public int divByPow2And1(int x) {\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/DivINodeIdealizationTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-                 \"retainDenominator\", \"divByNegOne\", \"divByPow2AND\",\n-                 \"divByPow2AND1\",  \"divByPow2\", \"divByNegPow2\"})\n+                 \"retainDenominator\", \"divByNegOne\", \"divByPow2And\",\n+                 \"divByPow2And1\",  \"divByPow2\", \"divByNegPow2\"})\n@@ -87,2 +87,2 @@\n-        Asserts.assertEQ((a & -4) \/ 2 , divByPow2AND(a));\n-        Asserts.assertEQ((a & -2) \/ 2 , divByPow2AND1(a));\n+        Asserts.assertEQ((a & -4) \/ 2 , divByPow2And(a));\n+        Asserts.assertEQ((a & -2) \/ 2 , divByPow2And1(a));\n@@ -146,1 +146,1 @@\n-    \/\/ Checks (x & -(2^c0)) \/ 2^c1 => (x >> c1) & (2^c0 >> c1) => (x >> c1) & c3 where 2^c0 > |2^c1| and c3 = 2^c0 >> c1\n+    \/\/ Checks (x & -(2^c0)) \/ 2^c1 => (x >> c1) & (2^c0 >> c1) => (x >> c1) & c3 where 2^c0 > |2^c1| \"and\" c3 = 2^c0 >> c1\n@@ -149,1 +149,1 @@\n-    public long divByPow2AND(long x) {\n+    public long divByPow2And(long x) {\n@@ -159,1 +159,1 @@\n-    public long divByPow2AND1(long x) {\n+    public long divByPow2And1(long x) {\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/DivLNodeIdealizationTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -87,5 +87,5 @@\n-\t\t\tthis.blackhole();\n-           \tif (i == 0) {\n-            \tbreak;\n-           \t}\n-           \telse {\n+            this.blackhole();\n+            if (i == 0) {\n+                break;\n+            }\n+            else {\n@@ -94,2 +94,2 @@\n-           \t}\n-\t\t}\n+            }\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/loopOpts\/LoopIdealizationTests.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}