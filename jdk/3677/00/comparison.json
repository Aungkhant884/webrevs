{"files":[{"patch":"@@ -1642,0 +1642,1 @@\n+#if !(defined(X86) && !defined(_LP64)) \/\/ excludes x86_32\n@@ -1646,0 +1647,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8265917\n+ * @summary test the optimization of pow(x, 2.0)\n+ * @run main\/othervm -Xbatch -XX:TieredStopAtLevel=1 TestPow2Opt\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation  TestPow2Opt\n+ *\/\n+\n+public class TestPow2Opt {\n+\n+  static double test(double a) {\n+    return Math.pow(a, 2.0);\n+  }\n+\n+  public static void main(String[] args) throws Exception {\n+    \/\/ v1: value returned by the interpreter\n+    double v1 = test(1.0 \/ 2047);\n+\n+    \/\/ Warmup\n+    double sum = 0.0;\n+    for (int i = 1; i < 100000; i++) {\n+      sum += test(i + 0.0);\n+    }\n+\n+    \/\/ v2: value returned by the compiler\n+    double v2 = test(1.0 \/ 2047);\n+\n+    if (v1 != v2) {\n+      throw new RuntimeException(\"v1 should be equal to v2, actual: \" + \"v1 = \" + v1 + \" v2 = \" + v2);\n+    }\n+\n+    System.out.println(sum);\n+  }\n+\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/math\/TestPow2Opt.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"}]}