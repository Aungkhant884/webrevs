{"files":[{"patch":"@@ -63,0 +63,2 @@\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahNMethodBarrier);\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahStackWatermarkBarrier);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahIUMode.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,8 +40,0 @@\n-  if (FLAG_IS_DEFAULT(ShenandoahNMethodBarrier)) {\n-    FLAG_SET_DEFAULT(ShenandoahNMethodBarrier, false);\n-  }\n-\n-  if (FLAG_IS_DEFAULT(ShenandoahStackWatermarkBarrier)) {\n-    FLAG_SET_DEFAULT(ShenandoahStackWatermarkBarrier, false);\n-  }\n-\n@@ -59,0 +51,2 @@\n+  SHENANDOAH_ERGO_DISABLE_FLAG(ShenandoahNMethodBarrier);\n+  SHENANDOAH_ERGO_DISABLE_FLAG(ShenandoahStackWatermarkBarrier);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahNMethodBarrier);\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahStackWatermarkBarrier);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahSATBMode.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -182,1 +182,0 @@\n-  ShenandoahHeap* const heap = ShenandoahHeap::heap();\n@@ -185,1 +184,1 @@\n-    heap->workers()->run_task(&task);\n+    ShenandoahHeap::heap()->workers()->run_task(&task);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -405,1 +405,1 @@\n-void ShenandoahHeap::initialize_gc_mode() {\n+void ShenandoahHeap::initialize_mode() {\n@@ -492,1 +492,1 @@\n-  initialize_gc_mode();\n+  initialize_mode();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-  void initialize_gc_mode();\n+  void initialize_mode();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-  CodeBlobToOopClosure* codes_cl = ClassUnloading && ShenandoahNMethodBarrier ?\n+  CodeBlobToOopClosure* codes_cl = (ClassUnloading && ShenandoahNMethodBarrier) ?\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+                new String[] { \"ShenandoahNMethodBarrier\"},\n+                new String[] { \"ShenandoahStackWatermarkBarrier\"}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSelectiveBarrierFlags.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+                \"ShenandoahNMethodBarrier\",\n+                \"ShenandoahStackWatermarkBarrier\",\n@@ -51,0 +53,2 @@\n+                \"ShenandoahNMethodBarrier\",\n+                \"ShenandoahStackWatermarkBarrier\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierDisable.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}