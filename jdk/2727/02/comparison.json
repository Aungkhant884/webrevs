{"files":[{"patch":"@@ -63,0 +63,2 @@\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahNMethodBarrier);\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahStackWatermarkBarrier);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahIUMode.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+  SHENANDOAH_ERGO_DISABLE_FLAG(ShenandoahNMethodBarrier);\n+  SHENANDOAH_ERGO_DISABLE_FLAG(ShenandoahStackWatermarkBarrier);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahPassiveMode.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,0 +51,2 @@\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahNMethodBarrier);\n+  SHENANDOAH_CHECK_FLAG_SET(ShenandoahStackWatermarkBarrier);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/mode\/shenandoahSATBMode.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-             new ShenandoahBarrierSetNMethod(heap),\n+             ShenandoahNMethodBarrier ? new ShenandoahBarrierSetNMethod(heap) : NULL,\n@@ -104,3 +104,5 @@\n-    JavaThread* const jt = thread->as_Java_thread();\n-    StackWatermark* const watermark = new ShenandoahStackWatermark(jt);\n-    StackWatermarkSet::add_watermark(jt, watermark);\n+    if (ShenandoahStackWatermarkBarrier) {\n+      JavaThread* const jt = thread->as_Java_thread();\n+      StackWatermark* const watermark = new ShenandoahStackWatermark(jt);\n+      StackWatermarkSet::add_watermark(jt, watermark);\n+    }\n@@ -120,7 +122,8 @@\n-    ShenandoahHeap* const heap = ShenandoahHeap::heap();\n-    if (heap->is_concurrent_mark_in_progress()) {\n-      ShenandoahKeepAliveClosure oops;\n-      StackWatermarkSet::finish_processing(thread->as_Java_thread(), &oops, StackWatermarkKind::gc);\n-    } else if (heap->is_concurrent_weak_root_in_progress() && heap->is_evacuation_in_progress()) {\n-      ShenandoahContextEvacuateUpdateRootsClosure oops;\n-      StackWatermarkSet::finish_processing(thread->as_Java_thread(), &oops, StackWatermarkKind::gc);\n+    if (ShenandoahStackWatermarkBarrier) {\n+      if (_heap->is_concurrent_mark_in_progress()) {\n+        ShenandoahKeepAliveClosure oops;\n+        StackWatermarkSet::finish_processing(thread->as_Java_thread(), &oops, StackWatermarkKind::gc);\n+      } else if (_heap->is_concurrent_weak_root_in_progress() && _heap->is_evacuation_in_progress()) {\n+        ShenandoahContextEvacuateUpdateRootsClosure oops;\n+        StackWatermarkSet::finish_processing(thread->as_Java_thread(), &oops, StackWatermarkKind::gc);\n+      }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -182,2 +182,4 @@\n-  ShenandoahDisarmNMethodsTask task;\n-  ShenandoahHeap::heap()->workers()->run_task(&task);\n+  if (ShenandoahNMethodBarrier) {\n+    ShenandoahDisarmNMethodsTask task;\n+    ShenandoahHeap::heap()->workers()->run_task(&task);\n+  }\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahCodeRoots.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -405,1 +405,1 @@\n-void ShenandoahHeap::initialize_heuristics() {\n+void ShenandoahHeap::initialize_mode() {\n@@ -430,0 +430,1 @@\n+}\n@@ -431,0 +432,2 @@\n+void ShenandoahHeap::initialize_heuristics() {\n+  assert(_gc_mode != NULL, \"Must be initialized\");\n@@ -465,0 +468,1 @@\n+  _gc_mode(NULL),\n@@ -487,0 +491,2 @@\n+  \/\/ Initialize GC mode early, so we can adjust barrier support\n+  initialize_mode();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -151,0 +151,1 @@\n+  void initialize_mode();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -81,2 +81,3 @@\n-  assert(bs != NULL, \"Sanity\");\n-  if (bs->is_armed(nm)) {\n+  assert(bs != NULL || !ShenandoahNMethodBarrier,\n+        \"Must have nmethod barrier for concurrent GC\");\n+  if (bs != NULL && bs->is_armed(nm)) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.inline.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -295,1 +295,1 @@\n-  CodeBlobToOopClosure* adjust_code_closure = ClassUnloading ?\n+  CodeBlobToOopClosure* adjust_code_closure = (ClassUnloading && ShenandoahNMethodBarrier) ?\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -179,1 +179,1 @@\n-  CodeBlobToOopClosure* codes_cl = ClassUnloading ?\n+  CodeBlobToOopClosure* codes_cl = (ClassUnloading && ShenandoahNMethodBarrier) ?\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -355,0 +355,6 @@\n+  product(bool, ShenandoahNMethodBarrier, true, DIAGNOSTIC,                 \\\n+          \"Turn on\/off NMethod entry barriers in Shenandoah\")               \\\n+                                                                            \\\n+  product(bool, ShenandoahStackWatermarkBarrier, true, DIAGNOSTIC,          \\\n+          \"Turn on\/off stack watermark barriers in Shenandoah\")             \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoah_globals.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -49,0 +49,2 @@\n+                new String[] { \"ShenandoahNMethodBarrier\"},\n+                new String[] { \"ShenandoahStackWatermarkBarrier\"}\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestSelectiveBarrierFlags.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,0 +45,2 @@\n+                \"ShenandoahNMethodBarrier\",\n+                \"ShenandoahStackWatermarkBarrier\",\n@@ -51,0 +53,2 @@\n+                \"ShenandoahNMethodBarrier\",\n+                \"ShenandoahStackWatermarkBarrier\",\n","filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/options\/TestWrongBarrierDisable.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}