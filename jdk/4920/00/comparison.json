{"files":[{"patch":"@@ -236,2 +236,7 @@\n-  assert( iff->is_If(), \"\" );\n-  assert(iff->Opcode() == Op_If || iff->Opcode() == Op_CountedLoopEnd || iff->Opcode() == Op_RangeCheck, \"Check this code when new subtype is added\");\n+  assert(iff->is_If(), \"must be\");\n+  assert(iff->Opcode() == Op_If ||\n+         iff->Opcode() == Op_CountedLoopEnd ||\n+         iff->Opcode() == Op_LongCountedLoopEnd ||\n+         iff->Opcode() == Op_RangeCheck,\n+        \"Check this code when new subtype is added\");\n+\n","filename":"src\/hotspot\/share\/opto\/loopopts.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8271203\n+ * @summary C2: assert(iff->Opcode() == Op_If || iff->Opcode() == Op_CountedLoopEnd || iff->Opcode() == Op_RangeCheck) failed: Check this code when new subtype is added\n+ * @library \/test\/lib\n+ * @run main\/othervm -Xbatch -XX:-TieredCompilation -XX:CompileOnly=UnswitchingLongCountedLoop compiler.c2.UnswitchingLongCountedLoop\n+ *\/\n+\n+package compiler.c2;\n+\n+public class UnswitchingLongCountedLoop {\n+    static int iArrFld[] = new int[400];\n+\n+    public static void main(String[] strArr) {\n+        for (int i = 0; i < 10; i++) {\n+            test();\n+        }\n+    }\n+\n+    static void test() {\n+        int i = 56, i2 = 22257;\n+\n+        do {\n+            do {\n+                int i24 = 1;\n+                while (++i24 < 2) {\n+                }\n+                for (long l1 = i; l1 < 2; ++l1) {\n+                    iArrFld[0] += 5;\n+                }\n+            } while ((i2 -= 2) > 0);\n+            for (long l3 = 8; l3 < 194; ++l3) {\n+            }\n+        } while (--i > 0);\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/UnswitchingLongCountedLoop.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"}]}