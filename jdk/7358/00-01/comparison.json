{"files":[{"patch":"@@ -4773,1 +4773,1 @@\n-  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n@@ -4782,1 +4782,1 @@\n-  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ _legacy_mode_bw, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n+  InstructionAttr attributes(vector_len, \/* rex_w *\/ false, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4077,0 +4077,27 @@\n+void C2_MacroAssembler::vector_unsigned_cast(XMMRegister dst, XMMRegister src, int vlen_enc,\n+                                             BasicType from_elem_bt, BasicType to_elem_bt) {\n+  switch (from_elem_bt) {\n+    case T_BYTE:\n+      switch (to_elem_bt) {\n+        case T_SHORT: vpmovzxbw(dst, src, vlen_enc); break;\n+        case T_INT:   vpmovzxbd(dst, src, vlen_enc); break;\n+        case T_LONG:  vpmovzxbq(dst, src, vlen_enc); break;\n+        default: ShouldNotReachHere();\n+      }\n+      break;\n+    case T_SHORT:\n+      switch (to_elem_bt) {\n+        case T_INT:  vpmovzxwd(dst, src, vlen_enc); break;\n+        case T_LONG: vpmovzxwq(dst, src, vlen_enc); break;\n+        default: ShouldNotReachHere();\n+      }\n+      break;\n+    case T_INT:\n+      assert(to_elem_bt == T_LONG, \"\");\n+      vpmovzxdq(dst, src, vlen_enc);\n+      break;\n+    default:\n+      ShouldNotReachHere();\n+  }\n+}\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -309,0 +309,3 @@\n+  void vector_unsigned_cast(XMMRegister dst, XMMRegister src, int vlen_enc,\n+                            BasicType from_elem_bt, BasicType to_elem_bt);\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7269,1 +7269,1 @@\n-instruct vucastBtoX(vec dst, vec src) %{\n+instruct vucast(vec dst, vec src) %{\n@@ -7271,23 +7271,0 @@\n-  format %{ \"vector_ucast_b2x $dst,$src\\t!\" %}\n-  ins_encode %{\n-    assert(UseAVX > 0, \"required\");\n-\n-    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n-    int vlen_enc = vector_length_encoding(this);\n-    switch (to_elem_bt) {\n-      case T_SHORT:\n-        __ vpmovzxbw($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n-        break;\n-      case T_INT:\n-        __ vpmovzxbd($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n-        break;\n-      case T_LONG:\n-        __ vpmovzxbq($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n-        break;\n-      default: assert(false, \"%s\", type2name(to_elem_bt));\n-    }\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct vucastStoX(vec dst, vec src) %{\n@@ -7295,20 +7272,0 @@\n-  format %{ \"vector_ucast_s2x $dst,$src\\t!\" %}\n-  ins_encode %{\n-    assert(UseAVX > 0, \"required\");\n-\n-    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n-    int vlen_enc = vector_length_encoding(this);\n-    switch (to_elem_bt) {\n-      case T_INT:\n-        __ vpmovzxwd($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n-        break;\n-      case T_LONG:\n-        __ vpmovzxwq($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n-        break;\n-      default: assert(false, \"%s\", type2name(to_elem_bt));\n-    }\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct vucastItoX(vec dst, vec src) %{\n@@ -7316,1 +7273,1 @@\n-  format %{ \"vector_ucast_i2x $dst,$src\\t!\" %}\n+  format %{ \"vector_ucast $dst,$src\\t!\" %}\n@@ -7319,1 +7276,0 @@\n-    assert(Matcher::vector_element_basic_type(this) == T_LONG, \"\");\n@@ -7321,0 +7277,2 @@\n+    BasicType from_elem_bt = Matcher::vector_element_basic_type(this, $src);\n+    BasicType to_elem_bt = Matcher::vector_element_basic_type(this);\n@@ -7322,1 +7280,1 @@\n-    __ vpmovzxdq($dst$$XMMRegister, $src$$XMMRegister, vlen_enc);\n+    __ vector_unsigned_cast($dst$$XMMRegister, $src$$XMMRegister, vlen_enc, from_elem_bt, to_elem_bt);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":5,"deletions":47,"binary":false,"changes":52,"status":"modified"}]}