{"files":[{"patch":"@@ -833,6 +833,8 @@\n-          \/\/ Invalidate the phi function here. This case is very rare except for\n-          \/\/ JVMTI capability \"can_access_local_variables\".\n-          \/\/ In really rare cases we will bail out in LIRGenerator::move_to_phi.\n-          existing_phi->make_illegal();\n-          existing_state->invalidate_local(index);\n-          TRACE_PHI(tty->print_cr(\"invalidating local %d because of type mismatch\", index));\n+          if (new_value != NULL) {\n+            \/\/ Invalidate the phi function here. This case is very rare except for\n+            \/\/ JVMTI capability \"can_access_local_variables\".\n+            \/\/ In really rare cases we will bail out in LIRGenerator::move_to_phi.\n+            existing_phi->make_illegal();\n+            existing_state->invalidate_local(index);\n+            TRACE_PHI(tty->print_cr(\"invalidating local %d because of type mismatch\", index));\n+          }\n","filename":"src\/hotspot\/share\/c1\/c1_Instruction.cpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -835,0 +835,12 @@\n+    for (int i = num_blocks - 1; i >= 0; i--) {\n+      BlockBegin* block = block_at(i);\n+      tty->print_cr(\"Block %d\", block->block_id());\n+      tty->print_cr(\"live_in:\");\n+      print_bitmap(block->live_in());\n+      tty->print_cr(\"live_out:\");\n+      print_bitmap(block->live_out());\n+      tty->print_cr(\"live_gen:\");\n+      print_bitmap(block->live_gen());\n+      tty->print_cr(\"live_kill:\");\n+      print_bitmap(block->live_kill());\n+    }\n","filename":"src\/hotspot\/share\/c1\/c1_LinearScan.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8271202\n+ * @summary extending local var lifetime by DeoptimizeALot\n+ * @requires vm.compiler1.enabled\n+ * @library \/test\/lib\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+DeoptimizeALot\n+ *                   compiler.c1.ExtendLocalVarLifetime\n+ *\/\n+\n+package compiler.c1;\n+\n+public class ExtendLocalVarLifetime {\n+    public static void main(String[] strArr) {\n+        try {\n+            test();\n+        } catch (Exception e) {\n+            \/\/ Expected\n+        }\n+    }\n+\n+    static void test() {\n+        long l6 = 10L;\n+        int counter = 0;\n+        int i2, i26, i29, iArr[] = new int[400];\n+        boolean b3 = true;\n+\n+        for (int smallinvoc = 0; smallinvoc < 139; smallinvoc++) {\n+        }\n+        for (i2 = 13; i2 < 1000; i2++) {\n+            for (i26 = 2; i26 < 114; l6 += 2) {\n+                \/\/ Infinite loop\n+                if (b3) {\n+                    for (i29 = 1; i29 < 2; i29++) {\n+                        try {\n+                            iArr[i26] = 0;\n+                        } catch (ArithmeticException a_e) {\n+                        }\n+                    }\n+                }\n+                counter++;\n+                if (counter == 100000) {\n+                    throw new RuntimeException(\"expected\");\n+                }\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/compiler\/c1\/ExtendLocalVarLifetime.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"}]}