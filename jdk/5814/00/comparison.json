{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8035473 8149565\n+ * @bug 8035473 8149565 8273745\n@@ -34,0 +34,1 @@\n+import java.util.HashSet;\n@@ -50,0 +51,2 @@\n+    \/\/ These static values are shared between the main method and the\n+    \/\/ Doclet instance indirectly created from the main method.\n@@ -67,1 +70,3 @@\n-        for (Locale loc : Locale.getAvailableLocales()) {\n+        var languages = new HashSet<>();\n+        var countries = new HashSet<>();\n+        var variants = new HashSet<>();\n@@ -69,0 +74,1 @@\n+        for (Locale loc : Locale.getAvailableLocales()) {\n@@ -72,2 +78,0 @@\n-            System.err.printf(\"test locale: %s [%s,%s,%s] %s%n\",\n-                loc, language, country, variant, loc.toLanguageTag());\n@@ -75,1 +79,1 @@\n-            \/\/ skip locales for which the round-trip fails\n+            \/\/ skip locales for which the round-trip fails (e.g. no_NO_NY : nn_NO)\n@@ -77,1 +81,15 @@\n-                System.err.println(\"skipped \" + loc + \"!\");\n+                System.err.println(\"skipped \" + loc\n+                        + \" (language tag round trip: \"\n+                        + loc.toLanguageTag()\n+                        + \": \" + Locale.forLanguageTag(loc.toLanguageTag()) + \")\");\n+                System.err.println();\n+                skipCount++;\n+                continue;\n+            }\n+\n+            \/\/ to reduce the potentially large number of locales to be tested, skip\n+            \/\/ those for which we have already seen any of the language, country or variant.\n+            if (!languages.add(language)\n+                    & !countries.add(country)\n+                    & !variants.add(variant)) {\n+                System.err.println(\"skipped \" + loc + \" (duplicate part)\");\n@@ -83,0 +101,3 @@\n+            System.err.printf(\"test locale: %s [%s,%s,%s] %s%n\",\n+                loc, language, country, variant, loc.toLanguageTag());\n+\n@@ -89,1 +110,1 @@\n-                    throw new Error(\"Javadoc encountered warnings or errors.\");\n+                    throw new Error(\"javadoc encountered warnings or errors.\");\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/VerifyLocale.java","additions":29,"deletions":8,"binary":false,"changes":37,"status":"modified"}]}