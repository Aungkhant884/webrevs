{"files":[{"patch":"@@ -35,0 +35,1 @@\n+ * @run main\/othervm -Xbatch compiler.vectorization.TestForEachRem test6\n@@ -75,0 +76,13 @@\n+    static void initByte(byte[] data) {\n+       IntStream.range(0, RANGE).parallel().forEach(j -> {\n+           data[j] = (byte)j;\n+       });\n+    }\n+\n+    static void test6(byte[] data) {\n+       \/\/ 2-byte offset -> can only vectorize if alignment not required by hardware\n+       IntStream.range(0, RANGE - 2).forEach(j -> {\n+           data[j] = data[j + 2];\n+       });\n+    }\n+\n@@ -83,0 +97,8 @@\n+    static void verify(String name, byte[] data, byte[] gold) {\n+        for (int i = 0; i < RANGE; i++) {\n+            if (data[i] != gold[i]) {\n+                throw new RuntimeException(\" Invalid \" + name + \" result: data[\" + i + \"]: \" + data[i] + \" != \" + gold[i]);\n+            }\n+        }\n+    }\n+\n@@ -86,0 +108,2 @@\n+        byte[] dataB = new byte[RANGE];\n+        byte[] goldB = new byte[RANGE];\n@@ -148,0 +172,13 @@\n+\n+        if (args[0].equals(\"test6\")) {\n+            System.out.println(\" Run test6 ...\");\n+            initByte(goldB); \/\/ reset\n+            test6(goldB);\n+            for (int i = 0; i < ITER; i++) {\n+                initByte(dataB); \/\/ reset\n+                test6(dataB);\n+            }\n+            verify(\"test6\", dataB, goldB);\n+            System.out.println(\" Finished test6.\");\n+        }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestForEachRem.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"modified"}]}