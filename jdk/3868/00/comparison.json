{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+    _ZAddressOffsetMask(&ZAddressOffsetMask),\n","filename":"src\/hotspot\/share\/gc\/z\/vmStructs_z.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,1 @@\n+  uintptr_t* _ZAddressOffsetMask;\n@@ -63,0 +64,1 @@\n+  nonstatic_field(ZGlobalsForVMStructs,         _ZAddressOffsetMask,  uintptr_t*)                    \\\n","filename":"src\/hotspot\/share\/gc\/z\/vmStructs_z.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,0 @@\n-  static uintptr_t address(uintptr_t value);\n","filename":"src\/hotspot\/share\/gc\/z\/zAddress.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,5 +55,1 @@\n-        return as_long(address) & ZGlobals.ZAddressOffsetMask;\n-    }\n-\n-    static Address address(long value) {\n-        return ZUtils.longToAddress(value);\n+        return as_long(address) & ZGlobals.ZAddressOffsetMask();\n@@ -63,1 +59,1 @@\n-        return address(offset(value) | ZGlobals.ZAddressGoodMask());\n+        return VM.getVM().getDebugger().newAddress(offset(value) | ZGlobals.ZAddressGoodMask());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZAddress.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-        if (zOffset > ZGlobals.ZAddressOffsetMask) {\n+        if (zOffset > ZGlobals.ZAddressOffsetMask()) {\n@@ -81,2 +81,2 @@\n-        long addr = ZGlobals.ZAddressSpaceStart + oopSize * offset;\n-        return addr & ZGlobals.ZAddressOffsetMask;\n+        long addr = oopSize * offset;\n+        return addr & ZGlobals.ZAddressOffsetMask();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZExternalBitMap.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,0 @@\n-    public static long ZAddressOffsetMask;\n@@ -61,3 +60,0 @@\n-    \/\/ Address space start\/end\/size\n-    public static long ZAddressSpaceStart;\n-\n@@ -90,1 +86,0 @@\n-        ZAddressOffsetMask = db.lookupLongConstant(\"ZAddressOffsetMask\").longValue();\n@@ -92,2 +87,0 @@\n-\n-        ZAddressSpaceStart = db.lookupLongConstant(\"ZAddressSpaceStart\").longValue();\n@@ -108,0 +101,4 @@\n+    public static long ZAddressOffsetMask() {\n+        return instance().ZAddressOffsetMask();\n+    }\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZGlobals.java","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,0 +37,1 @@\n+    private static AddressField ZAddressOffsetMaskField;\n@@ -52,0 +53,1 @@\n+        ZAddressOffsetMaskField = type.getAddressField(\"_ZAddressOffsetMask\");\n@@ -71,0 +73,4 @@\n+    long ZAddressOffsetMask() {\n+        return ZAddressOffsetMaskField.getValue(addr).getJLongAt(0);\n+    }\n+\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZGlobalsForVMStructs.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-serviceability\/sa\/ClhsdbCDSJstackPrintAll.java                8220624   generic-all\n@@ -39,1 +38,0 @@\n-serviceability\/sa\/ClhsdbJdis.java                             8220624   generic-all\n@@ -41,8 +39,0 @@\n-serviceability\/sa\/ClhsdbJstack.java#id0                       8220624   generic-all\n-serviceability\/sa\/ClhsdbJstack.java#id1                       8220624   generic-all\n-serviceability\/sa\/ClhsdbJstackXcompStress.java                8220624   generic-all\n-serviceability\/sa\/ClhsdbPrintAs.java                          8220624   generic-all\n-serviceability\/sa\/ClhsdbPrintStatics.java                     8220624   generic-all\n-serviceability\/sa\/ClhsdbPstack.java#id0                       8220624   generic-all\n-serviceability\/sa\/ClhsdbPstack.java#id1                       8220624   generic-all\n-serviceability\/sa\/ClhsdbSource.java                           8220624   generic-all\n@@ -50,6 +40,0 @@\n-serviceability\/sa\/ClhsdbThread.java                           8220624   generic-all\n-serviceability\/sa\/ClhsdbWhere.java                            8220624   generic-all\n-serviceability\/sa\/DeadlockDetectionTest.java                  8220624   generic-all\n-serviceability\/sa\/JhsdbThreadInfoTest.java                    8220624   generic-all\n-serviceability\/sa\/ClhsdbCDSCore.java                          8220624   generic-all\n-serviceability\/sa\/TestClhsdbJstackLock.java                   8220624   generic-all\n@@ -58,2 +42,0 @@\n-serviceability\/sa\/TestJhsdbJstackLock.java                    8220624   generic-all\n-serviceability\/sa\/TestJhsdbJstackMixed.java                   8220624   generic-all\n@@ -61,4 +43,0 @@\n-serviceability\/sa\/TestJmapCoreMetaspace.java                  8220624   generic-all\n-serviceability\/sa\/TestSysProps.java                           8220624   generic-all\n-serviceability\/sa\/sadebugd\/DebugdConnectTest.java             8220624   generic-all\n-serviceability\/sa\/sadebugd\/DisableRegistryTest.java           8220624   generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList-zgc.txt","additions":0,"deletions":22,"binary":false,"changes":22,"status":"modified"}]}