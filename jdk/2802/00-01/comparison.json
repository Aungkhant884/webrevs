{"files":[{"patch":"@@ -483,1 +483,1 @@\n-int ObjectMonitor::TryLock(JavaThread * current) {\n+int ObjectMonitor::TryLock(JavaThread* current) {\n@@ -938,1 +938,1 @@\n-void ObjectMonitor::ReenterI(JavaThread * current, ObjectWaiter * currentNode) {\n+void ObjectMonitor::ReenterI(JavaThread* current, ObjectWaiter * currentNode) {\n@@ -1023,1 +1023,1 @@\n-void ObjectMonitor::UnlinkAfterAcquire(JavaThread *current, ObjectWaiter *currentNode) {\n+void ObjectMonitor::UnlinkAfterAcquire(JavaThread* current, ObjectWaiter *currentNode) {\n@@ -1142,2 +1142,1 @@\n-void ObjectMonitor::exit(bool not_suspended, TRAPS) {\n-  JavaThread* const current = THREAD->as_Java_thread();\n+void ObjectMonitor::exit(bool not_suspended, JavaThread* current) {\n@@ -1322,1 +1321,1 @@\n-void ObjectMonitor::ExitEpilog(JavaThread * current, ObjectWaiter * Wakee) {\n+void ObjectMonitor::ExitEpilog(JavaThread* current, ObjectWaiter * Wakee) {\n@@ -1676,1 +1675,1 @@\n-void ObjectMonitor::INotify(JavaThread * current) {\n+void ObjectMonitor::INotify(JavaThread* current) {\n@@ -1841,1 +1840,1 @@\n-int ObjectMonitor::TrySpin(JavaThread * current) {\n+int ObjectMonitor::TrySpin(JavaThread* current) {\n@@ -1895,1 +1894,1 @@\n-  Thread * prv = NULL;\n+  Thread* prv = NULL;\n@@ -1930,1 +1929,1 @@\n-    JavaThread * ox = (JavaThread *) owner_raw();\n+    JavaThread* ox = (JavaThread*) owner_raw();\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-  void      exit(bool not_suspended, TRAPS);\n+  void      exit(bool not_suspended, JavaThread* current);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2147,1 +2147,1 @@\n-  ObjectSynchronizer::exit(obj, lock, THREAD);\n+  ObjectSynchronizer::exit(obj, lock, thread);\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -333,1 +333,1 @@\n-    JavaThread* const owner = (JavaThread *) m->owner_raw();\n+    JavaThread* const owner = (JavaThread*) m->owner_raw();\n@@ -476,2 +476,1 @@\n-void ObjectSynchronizer::exit(oop object, BasicLock* lock, TRAPS) {\n-  JavaThread* current = THREAD->as_Java_thread();\n+void ObjectSynchronizer::exit(oop object, BasicLock* lock, JavaThread* current) {\n@@ -526,1 +525,1 @@\n-  monitor->exit(true, CHECK);\n+  monitor->exit(true, current);\n@@ -1410,1 +1409,1 @@\n-size_t ObjectSynchronizer::deflate_monitor_list(Thread *current, LogStream* ls,\n+size_t ObjectSynchronizer::deflate_monitor_list(Thread* current, LogStream* ls,\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -92,1 +92,1 @@\n-  static void exit(oop obj, BasicLock* lock, TRAPS);\n+  static void exit(oop obj, BasicLock* lock, JavaThread* current);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}