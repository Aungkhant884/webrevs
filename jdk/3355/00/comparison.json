{"files":[{"patch":"@@ -308,1 +308,6 @@\n-    options->buffer_count = div_total_by_per_unit(options->memory_size, options->global_buffer_size);\n+    if (options->memory_size_configured) {\n+      options->buffer_count = div_total_by_per_unit(options->memory_size, options->global_buffer_size);\n+    } else {\n+      \/\/ init memory_size according buffer count and size\n+      options->memory_size = options->buffer_count * options->global_buffer_size;\n+    }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrMemorySizer.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -544,0 +544,4 @@\n+  } else if (options.thread_buffer_size_configured && options.memory_size_configured) {\n+    if (!ensure_first_gteq_second(_dcmd_memorysize, _dcmd_threadbuffersize)) {\n+      return false;\n+    }\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrOptionSet.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -641,0 +641,5 @@\n+\n+        \/\/ threadbuffersize exceeds default memory-size\n+        tc = new TestCase(\"ThreadBufferSizeExceedMemorySize\", false);\n+        tc.setThreadBufferSizeTestParam(30, 'm');\n+        testCases.add(tc);\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestMemoryOptions.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}