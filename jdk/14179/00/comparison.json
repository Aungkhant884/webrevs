{"files":[{"patch":"@@ -107,0 +107,1 @@\n+import jdk.javadoc.internal.doclets.toolkit.util.IndexItem;\n@@ -1403,2 +1404,2 @@\n-                    if (node.getName().toString().matches(\"(?i)h[1-6]\") && !hasIdAttribute(node)) {\n-                        generateHeadingId(node, trees, attrs);\n+                    if (node.getName().toString().matches(\"(?i)h[1-6]\")) {\n+                        createSectionIdAndIndex(node, trees, attrs, element, context);\n@@ -1479,3 +1480,5 @@\n-    private boolean hasIdAttribute(StartElementTree node) {\n-        return node.getAttributes().stream().anyMatch(\n-                dt -> dt instanceof AttributeTree at && equalsIgnoreCase(at.getName(), \"id\"));\n+    private Optional<String> getIdAttributeValue(StartElementTree node) {\n+         return node.getAttributes().stream()\n+                 .filter(dt -> dt instanceof AttributeTree at && equalsIgnoreCase(at.getName(), \"id\"))\n+                 .map(dt -> ((AttributeTree)dt).getValue().toString())\n+                 .findFirst();\n@@ -1484,1 +1487,4 @@\n-    private void generateHeadingId(StartElementTree node, List<? extends DocTree> trees, Content content) {\n+    private void createSectionIdAndIndex(StartElementTree node, List<? extends DocTree> trees, Content attrs,\n+                                         Element element, TagletWriterImpl.Context context) {\n+        \/\/ Use existing id attribute if available\n+        String id = getIdAttributeValue(node).orElse(null);\n@@ -1487,0 +1493,1 @@\n+        \/\/ Go through heading content to collect content and look for existing id\n@@ -1495,0 +1502,4 @@\n+            } else if (id == null && docTree instanceof StartElementTree nested\n+                    && equalsIgnoreCase(nested.getName(), \"a\")) {\n+                \/\/ Use id of embedded anchor element if present\n+                id = getIdAttributeValue(nested).orElse(null);\n@@ -1498,4 +1509,0 @@\n-            } else if (docTree instanceof StartElementTree nested\n-                    && equalsIgnoreCase(nested.getName(), \"a\")\n-                    && hasIdAttribute(nested)) {\n-                return; \/\/ Avoid generating id if embedded <a id=...> is present\n@@ -1504,2 +1511,16 @@\n-        HtmlId htmlId = htmlIds.forHeading(sb, headingIds);\n-        content.add(\"id=\\\"\").add(htmlId.name()).add(\"\\\"\");\n+        String headingContent = sb.toString().trim();\n+        if (id == null) {\n+            \/\/ Generate id attribute\n+            HtmlId htmlId = htmlIds.forHeading(headingContent, headingIds);\n+            id = htmlId.name();\n+            attrs.add(\"id=\\\"\").add(htmlId.name()).add(\"\\\"\");\n+        }\n+        \/\/ Generate index item\n+        if (!headingContent.isEmpty() && configuration.mainIndex != null) {\n+            String tagText = headingContent.replaceAll(\"\\\\s+\", \" \");\n+            IndexItem item = IndexItem.of(element, node, tagText,\n+                    getTagletWriterInstance(context).getHolderName(element),\n+                    resources.getText(\"doclet.Section\"),\n+                    new DocLink(path, id));\n+            configuration.mainIndex.add(item);\n+        }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":33,"deletions":12,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -911,1 +911,8 @@\n-                String holder = new SimpleElementVisitor14<String, Void>() {\n+                String holder = getHolderName(element);\n+                IndexItem item = IndexItem.of(element, tree, tagText, holder, desc,\n+                        new DocLink(htmlWriter.path, id.name()));\n+                configuration.mainIndex.add(item);\n+            }\n+        }\n+        return result;\n+    }\n@@ -913,5 +920,2 @@\n-                    @Override\n-                    public String visitModule(ModuleElement e, Void p) {\n-                        return resources.getText(\"doclet.module\")\n-                                + \" \" + utils.getFullyQualifiedName(e);\n-                    }\n+    String getHolderName(Element element) {\n+        return new SimpleElementVisitor14<String, Void>() {\n@@ -919,5 +923,5 @@\n-                    @Override\n-                    public String visitPackage(PackageElement e, Void p) {\n-                        return resources.getText(\"doclet.package\")\n-                                + \" \" + utils.getFullyQualifiedName(e);\n-                    }\n+            @Override\n+            public String visitModule(ModuleElement e, Void p) {\n+                return resources.getText(\"doclet.module\")\n+                        + \" \" + utils.getFullyQualifiedName(e);\n+            }\n@@ -925,5 +929,5 @@\n-                    @Override\n-                    public String visitType(TypeElement e, Void p) {\n-                        return utils.getTypeElementKindName(e, true)\n-                                + \" \" + utils.getFullyQualifiedName(e);\n-                    }\n+            @Override\n+            public String visitPackage(PackageElement e, Void p) {\n+                return resources.getText(\"doclet.package\")\n+                        + \" \" + utils.getFullyQualifiedName(e);\n+            }\n@@ -931,6 +935,5 @@\n-                    @Override\n-                    public String visitExecutable(ExecutableElement e, Void p) {\n-                        return utils.getFullyQualifiedName(utils.getEnclosingTypeElement(e))\n-                                + \".\" + utils.getSimpleName(e)\n-                                + utils.flatSignature(e, htmlWriter.getCurrentPageElement());\n-                    }\n+            @Override\n+            public String visitType(TypeElement e, Void p) {\n+                return utils.getTypeElementKindName(e, true)\n+                        + \" \" + utils.getFullyQualifiedName(e);\n+            }\n@@ -938,5 +941,6 @@\n-                    @Override\n-                    public String visitVariable(VariableElement e, Void p) {\n-                        return utils.getFullyQualifiedName(utils.getEnclosingTypeElement(e))\n-                                + \".\" + utils.getSimpleName(e);\n-                    }\n+            @Override\n+            public String visitExecutable(ExecutableElement e, Void p) {\n+                return utils.getFullyQualifiedName(utils.getEnclosingTypeElement(e))\n+                        + \".\" + utils.getSimpleName(e)\n+                        + utils.flatSignature(e, htmlWriter.getCurrentPageElement());\n+            }\n@@ -944,11 +948,5 @@\n-                    @Override\n-                    public String visitUnknown(Element e, Void p) {\n-                        if (e instanceof DocletElement de) {\n-                            return switch (de.getSubKind()) {\n-                                case OVERVIEW -> resources.getText(\"doclet.Overview\");\n-                                case DOCFILE -> getHolderName(de);\n-                            };\n-                        } else {\n-                            return super.visitUnknown(e, p);\n-                        }\n-                    }\n+            @Override\n+            public String visitVariable(VariableElement e, Void p) {\n+                return utils.getFullyQualifiedName(utils.getEnclosingTypeElement(e))\n+                        + \".\" + utils.getSimpleName(e);\n+            }\n@@ -956,8 +954,10 @@\n-                    @Override\n-                    protected String defaultAction(Element e, Void p) {\n-                        return utils.getFullyQualifiedName(e);\n-                    }\n-                }.visit(element);\n-                IndexItem item = IndexItem.of(element, tree, tagText, holder, desc,\n-                        new DocLink(htmlWriter.path, id.name()));\n-                configuration.mainIndex.add(item);\n+            @Override\n+            public String visitUnknown(Element e, Void p) {\n+                if (e instanceof DocletElement de) {\n+                    return switch (de.getSubKind()) {\n+                        case OVERVIEW -> resources.getText(\"doclet.Overview\");\n+                        case DOCFILE -> getHolderName(de);\n+                    };\n+                } else {\n+                    return super.visitUnknown(e, p);\n+                }\n@@ -965,2 +965,6 @@\n-        }\n-        return result;\n+\n+            @Override\n+            protected String defaultAction(Element e, Void p) {\n+                return utils.getFullyQualifiedName(e);\n+            }\n+        }.visit(element);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":52,"deletions":48,"binary":false,"changes":100,"status":"modified"},{"patch":"@@ -169,0 +169,1 @@\n+doclet.Section=Section\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-            case INDEX, SPEC, SYSTEM_PROPERTY -> { }\n+            case INDEX, SPEC, SYSTEM_PROPERTY, START_ELEMENT -> { }\n@@ -343,1 +343,1 @@\n-            case INDEX, SPEC, SYSTEM_PROPERTY -> Category.TAGS;\n+            case INDEX, SPEC, SYSTEM_PROPERTY, START_ELEMENT -> Category.TAGS;\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/IndexItem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8289332\n+ * @bug 8289332 8286470\n@@ -82,0 +82,4 @@\n+                         * <h2>  Multi-line\n+                         *       heading   with extra\n+                         *                 whitespace<\/h2>\n+                         *\n@@ -124,1 +128,27 @@\n-                    \"\"\");\n+                    \"\"\",\n+                \"\"\"\n+                    <h2 id=\"multi-line-heading-with-extra-whitespace-heading\">  Multi-line\n+                           heading   with extra\n+                                     whitespace<\/h2>\"\"\");\n+        checkOutput(\"tag-search-index.js\", true,\n+                \"\"\"\n+                    {\"l\":\"Duplicate Text\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#duplicate-text-heading\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Duplicate Text\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#duplicate-text-heading1\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Embedded A-Tag with ID\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#fixed-id-2\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Embedded Code Tag\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#embedded-code-tag-heading\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Embedded Link Tag\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#embedded-link-tag-heading\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Extra (#*!. chars\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#extra-chars-heading\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"First Header\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#first-header-heading\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Header with ID\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#fixed-id-1\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Multi-line heading with extra whitespace\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html\\\n+                    #multi-line-heading-with-extra-whitespace-heading\"}\"\"\",\n+                \"\"\"\n+                    {\"l\":\"Other attributes\",\"h\":\"class p.C\",\"d\":\"Section\",\"u\":\"p\/C.html#other-attributes-heading\"}\"\"\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testAutoHeaderId\/TestAutoHeaderId.java","additions":33,"deletions":3,"binary":false,"changes":36,"status":"modified"}]}