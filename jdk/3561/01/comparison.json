{"files":[{"patch":"@@ -1364,1 +1364,1 @@\n-    \/\/ instrumentation in order to work with -XX:FlightRecorderOptions=retransform=false.\n+    \/\/ instrumentation in order to work with -XX:FlightRecorderOptions:retransform=false.\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,7 +49,7 @@\n-  {\"maxsize\",              \"Use -XX:StartFlightRecording=maxsize=... instead.\"},\n-  {\"maxage\",               \"Use -XX:StartFlightRecording=maxage=... instead.\"},\n-  {\"settings\",             \"Use -XX:StartFlightRecording=settings=... instead.\"},\n-  {\"defaultrecording\",     \"Use -XX:StartFlightRecording=disk=false to create an in-memory recording.\"},\n-  {\"disk\",                 \"Use -XX:StartFlightRecording=disk=... instead.\"},\n-  {\"dumponexit\",           \"Use -XX:StartFlightRecording=dumponexit=... instead.\"},\n-  {\"dumponexitpath\",       \"Use -XX:StartFlightRecording=filename=... instead.\"},\n+  {\"maxsize\",              \"Use -XX:StartFlightRecording:maxsize=... instead.\"},\n+  {\"maxage\",               \"Use -XX:StartFlightRecording:maxage=... instead.\"},\n+  {\"settings\",             \"Use -XX:StartFlightRecording:settings=... instead.\"},\n+  {\"defaultrecording\",     \"Use -XX:StartFlightRecording:disk=false to create an in-memory recording.\"},\n+  {\"disk\",                 \"Use -XX:StartFlightRecording:disk=... instead.\"},\n+  {\"dumponexit\",           \"Use -XX:StartFlightRecording:dumponexit=... instead.\"},\n+  {\"dumponexitpath\",       \"Use -XX:StartFlightRecording:filename=... instead.\"},\n","filename":"src\/hotspot\/share\/jfr\/recorder\/service\/jfrOptionSet.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-.\\\" Copyright (c) 1994, 2020, Oracle and\/or its affiliates. All rights reserved.\n+.\\\" Copyright (c) 1994, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1313,1 +1313,1 @@\n-.B \\f[CB]\\-XX:FlightRecorderOptions=\\f[R]\\f[I]parameter\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R] (or)\\f[CB]\\-XX:FlightRecorderOptions:\\f[R]\\f[I]parameter\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R]\n+.B \\f[CB]\\-XX:FlightRecorderOptions:\\f[R]\\f[I]parameter\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R] (or)\\f[CB]\\-XX:FlightRecorderOptions:\\f[R]\\f[I]parameter\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R]\n@@ -1638,1 +1638,1 @@\n-.B \\f[CB]\\-XX:StartFlightRecording=\\f[R]\\f[I]parameter\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R]\n+.B \\f[CB]\\-XX:StartFlightRecording:\\f[R]\\f[I]parameter\\f[R]\\f[CB]=\\f[R]\\f[I]value\\f[R]\n","filename":"src\/java.base\/share\/man\/java.1","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -86,1 +86,1 @@\n-        \"-XX:StartFlightRecording=dumponexit=true,filename=rwrecording.jfr\"\n+        \"-XX:StartFlightRecording:dumponexit=true,filename=rwrecording.jfr\"\n","filename":"src\/utils\/LogCompilation\/src\/test\/java\/com\/sun\/hotspot\/tools\/compiler\/TestLogCompilation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-                                 \"-XX:StartFlightRecording=dumponexit=true\",\n+                                 \"-XX:StartFlightRecording:dumponexit=true\",\n@@ -72,1 +72,1 @@\n-                                             \"-XX:FlightRecorderOptions=retransform=true\",\n+                                             \"-XX:FlightRecorderOptions:retransform=true\",\n@@ -75,1 +75,1 @@\n-                                             \"-XX:FlightRecorderOptions=retransform=false\",\n+                                             \"-XX:FlightRecorderOptions:retransform=false\",\n@@ -80,1 +80,1 @@\n-                                     \"-XX:StartFlightRecording=dumponexit=true\");\n+                                     \"-XX:StartFlightRecording:dumponexit=true\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/CDSandJFR.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -420,1 +420,1 @@\n-                if (s.startsWith(\"-XX:StartFlightRecording=\") || s.startsWith(\"-XX:FlightRecorderOptions\")) {\n+                if (s.startsWith(\"-XX:StartFlightRecording\") || s.startsWith(\"-XX:FlightRecorderOptions\")) {\n@@ -428,1 +428,1 @@\n-                cmd.add(0, \"-XX:StartFlightRecording=dumponexit=true\");\n+                cmd.add(0, \"-XX:StartFlightRecording:dumponexit=true\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestCommon.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-            \"-XX:StartFlightRecording=duration=15s,filename=myrecording.jfr,settings=profile,dumponexit=true\",\n+            \"-XX:StartFlightRecording:duration=15s,filename=myrecording.jfr,settings=profile,dumponexit=true\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/TestWithProfiler.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Same as HelloCustom, but add -XX:StartFlightRecording=dumponexit=true to the runtime\n+ * @summary Same as HelloCustom, but add -XX:StartFlightRecording:dumponexit=true to the runtime\n@@ -50,1 +50,1 @@\n-        HelloCustom.run(\"-XX:StartFlightRecording=dumponexit=true\", \"-Xlog:cds+jvmti=debug\");\n+        HelloCustom.run(\"-XX:StartFlightRecording:dumponexit=true\", \"-Xlog:cds+jvmti=debug\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/customLoader\/HelloCustom_JFR.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @summary Same as ModulePathAndCP, but add -XX:StartFlightRecording=dumponexit=true to the runtime\n+ * @summary Same as ModulePathAndCP, but add -XX:StartFlightRecording:dumponexit=true to the runtime\n@@ -37,1 +37,1 @@\n-        ModulePathAndCP.run(\"-XX:StartFlightRecording=dumponexit=true\", \"-Xlog:cds+jvmti=debug,jfr+startup=off\");\n+        ModulePathAndCP.run(\"-XX:StartFlightRecording:dumponexit=true\", \"-Xlog:cds+jvmti=debug,jfr+startup=off\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/jigsaw\/modulepath\/ModulePathAndCP_JFR.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-                \"-XX:StartFlightRecording=dumponexit=true\");\n+                \"-XX:StartFlightRecording:dumponexit=true\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/sharedStrings\/FlagCombo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-                + \" \\\"-XX:StartFlightRecording=dumponexit=true,maxsize=500M\\\" \\\"-XX:FlightRecorderOptions=repository=jfrrep\\\"\"\n+                + \" \\\"-XX:StartFlightRecording:dumponexit=true,maxsize=500M\\\" \\\"-XX:FlightRecorderOptions:repository=jfrrep\\\"\"\n@@ -125,2 +125,2 @@\n-            .expectedArg(\"-XX:StartFlightRecording=dumponexit=true,maxsize=500M\")\n-            .expectedArg(\"-XX:FlightRecorderOptions=repository=jfrrep\");\n+            .expectedArg(\"-XX:StartFlightRecording:dumponexit=true,maxsize=500M\")\n+            .expectedArg(\"-XX:FlightRecorderOptions:repository=jfrrep\");\n@@ -132,1 +132,1 @@\n-                        + \" '-XX:StartFlightRecording=dumponexit=true,maxsize=500M' '-XX:FlightRecorderOptions=repository=jfrrep'\"\n+                        + \" '-XX:StartFlightRecording:dumponexit=true,maxsize=500M' '-XX:FlightRecorderOptions:repository=jfrrep'\"\n@@ -134,2 +134,2 @@\n-            .expectedArg(\"-XX:StartFlightRecording=dumponexit=true,maxsize=500M\")\n-            .expectedArg(\"-XX:FlightRecorderOptions=repository=jfrrep\");\n+            .expectedArg(\"-XX:StartFlightRecording:dumponexit=true,maxsize=500M\")\n+            .expectedArg(\"-XX:FlightRecorderOptions:repository=jfrrep\");\n@@ -144,2 +144,2 @@\n-                        + \" \\\"-XX:StartFlightRecording=dumponexit=true,maxsize=500M\\\"\"\n-                        + \" '-XX:FlightRecorderOptions=repository=jfrrep'\"\n+                        + \" \\\"-XX:StartFlightRecording:dumponexit=true,maxsize=500M\\\"\"\n+                        + \" '-XX:FlightRecorderOptions:repository=jfrrep'\"\n@@ -151,2 +151,2 @@\n-                .expectedArg(\"-XX:StartFlightRecording=dumponexit=true,maxsize=500M\")\n-                .expectedArg(\"-XX:FlightRecorderOptions=repository=jfrrep\");\n+                .expectedArg(\"-XX:StartFlightRecording:dumponexit=true,maxsize=500M\")\n+                .expectedArg(\"-XX:FlightRecorderOptions:repository=jfrrep\");\n","filename":"test\/jdk\/com\/sun\/jdi\/JdbOptions.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n- *        -XX:StartFlightRecording=name=DeserializationEvent,dumponexit=true\n+ *        -XX:StartFlightRecording:name=DeserializationEvent,dumponexit=true\n","filename":"test\/jdk\/java\/io\/Serializable\/serialFilter\/GlobalFilterTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n- * @run main\/othervm -XX:FlightRecorderOptions=retransform=false jdk.jfr.api.metadata.annotations.TestRegisteredFalseAndRunning\n+ * @run main\/othervm -XX:FlightRecorderOptions:retransform=false jdk.jfr.api.metadata.annotations.TestRegisteredFalseAndRunning\n","filename":"test\/jdk\/jdk\/jfr\/api\/metadata\/annotations\/TestRegisteredFalseAndRunning.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @run main\/othervm -XX:+UseSerialGC -Xlog:gc* -XX:MaxMetaspaceSize=64M -XX:+FlightRecorder jdk.jfr.event.gc.stacktrace.TestMetaspaceSerialGCAllocationPendingStackTrace\n+ * @run main\/othervm -XX:+UseSerialGC -Xlog:gc* -XX:MaxMetaspaceSize=64M jdk.jfr.event.gc.stacktrace.TestMetaspaceSerialGCAllocationPendingStackTrace\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/stacktrace\/TestMetaspaceSerialGCAllocationPendingStackTrace.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @run main\/othervm -XX:MaxNewSize=10M -Xmx64M -XX:+UseParallelGC -Xlog:gc* -XX:+FlightRecorder jdk.jfr.event.gc.stacktrace.TestParallelMarkSweepAllocationPendingStackTrace\n+ * @run main\/othervm -XX:MaxNewSize=10M -Xmx64M -XX:+UseParallelGC -Xlog:gc* jdk.jfr.event.gc.stacktrace.TestParallelMarkSweepAllocationPendingStackTrace\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/stacktrace\/TestParallelMarkSweepAllocationPendingStackTrace.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @run main\/othervm -XX:+UseParallelGC -Xlog:gc* -XX:+FlightRecorder jdk.jfr.event.gc.stacktrace.TestParallelScavengeAllocationPendingStackTrace\n+ * @run main\/othervm -XX:+UseParallelGC -Xlog:gc* jdk.jfr.event.gc.stacktrace.TestParallelScavengeAllocationPendingStackTrace\n","filename":"test\/jdk\/jdk\/jfr\/event\/gc\/stacktrace\/TestParallelScavengeAllocationPendingStackTrace.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n- *                   -XX:+FlightRecorder -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestSafepointEvents.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-                                \"-XX:StartFlightRecording=filename=.\/dumped.jfr,dumponexit=true,settings=default\",\n+                                \"-XX:StartFlightRecording:filename=.\/dumped.jfr,dumponexit=true,settings=default\",\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestShutdownEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- *                   -Xbatch -XX:StartFlightRecording=dumponexit=true jdk.jfr.event.runtime.TestThrowableInstrumentation\n+ *                   -Xbatch -XX:StartFlightRecording:dumponexit=true jdk.jfr.event.runtime.TestThrowableInstrumentation\n","filename":"test\/jdk\/jdk\/jfr\/event\/runtime\/TestThrowableInstrumentation.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,1 +47,1 @@\n-        assertCutoff(\"infinity\", \"Expected cutoff to be '0 ns' wuth -XX:StartFlightRecording=path-to-gc-roots=true\");\n+        assertCutoff(\"infinity\", \"Expected cutoff to be '0 ns' wuth -XX:StartFlightRecording:path-to-gc-roots=true\");\n@@ -51,1 +51,1 @@\n-        assertCutoff(\"0 ns\", \"Expected cutoff to be '0 ns' with -XX:StartFlightRecording=path-to-gc-roots=false\");\n+        assertCutoff(\"0 ns\", \"Expected cutoff to be '0 ns' with -XX:StartFlightRecording:path-to-gc-roots=false\");\n@@ -55,1 +55,1 @@\n-        assertCutoff(\"0 ns\", \"Expected cutoff to be '0 ns' with -XX:StartFlightRecording=\");\n+        assertCutoff(\"0 ns\", \"Expected cutoff to be '0 ns' with -XX:StartFlightRecording:\");\n","filename":"test\/jdk\/jdk\/jfr\/jcmd\/TestJcmdStartPathToGCRoots.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @run main\/othervm -XX:+FlightRecorder -XX:FlightRecorderOptions=maxchunksize=2097152 jdk.jfr.jcmd.TestJcmdStartWithOptions\n+ * @run main\/othervm -XX:FlightRecorderOptions:maxchunksize=2097152 jdk.jfr.jcmd.TestJcmdStartWithOptions\n","filename":"test\/jdk\/jdk\/jfr\/jcmd\/TestJcmdStartWithOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -115,1 +115,1 @@\n-                \"-XX:StartFlightRecording=\" + flightRecordingOptions,\n+                \"-XX:StartFlightRecording:\" + flightRecordingOptions,\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestDumpOnCrash.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-            output = ProcessTools.executeTestJava(\"-XX:StartFlightRecording=dumponexit=true\",\n+            output = ProcessTools.executeTestJava(\"-XX:StartFlightRecording:dumponexit=true\",\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestJfrJavaBase.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @run main\/othervm -Xlog:disable -Xlog:jfr*=trace:file=jfr_trace.txt -XX:StartFlightRecording=duration=1s,filename=recording.jfr jdk.jfr.jvm.TestLogOutput\n+ * @run main\/othervm -Xlog:disable -Xlog:jfr*=trace:file=jfr_trace.txt -XX:StartFlightRecording:duration=1s,filename=recording.jfr jdk.jfr.jvm.TestLogOutput\n","filename":"test\/jdk\/jdk\/jfr\/jvm\/TestLogOutput.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,2 +44,2 @@\n-    private static final String START_FLIGHT_RECORDING = \"-XX:StartFlightRecording=\";\n-    private static final String FLIGHT_RECORDER_OPTIONS = \"-XX:FlightRecorderOptions=\";\n+    private static final String START_FLIGHT_RECORDING = \"-XX:StartFlightRecording:\";\n+    private static final String FLIGHT_RECORDER_OPTIONS = \"-XX:FlightRecorderOptions:\";\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestBadOptionValues.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-                \"-XX:StartFlightRecording=filename=.\/dumped.jfr,dumponexit=true,settings=profile\",\n+                \"-XX:StartFlightRecording:filename=.\/dumped.jfr,dumponexit=true,settings=profile\",\n@@ -61,1 +61,1 @@\n-                \"-XX:StartFlightRecording=dumponexit=true,disk=false\",\n+                \"-XX:StartFlightRecording:dumponexit=true,disk=false\",\n@@ -68,1 +68,1 @@\n-                \"-XX:StartFlightRecording=filename=.\/dumped.jfr,dumponexit=true,settings=profile\",\n+                \"-XX:StartFlightRecording:filename=.\/dumped.jfr,dumponexit=true,settings=profile\",\n@@ -75,1 +75,1 @@\n-                \"-XX:StartFlightRecording=dumponexit=true,settings=profile\",\n+                \"-XX:StartFlightRecording:dumponexit=true,settings=profile\",\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestDumpOnExit.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm -XX:StartFlightRecording=flush-interval=2s jdk.jfr.startupargs.TestFlushInterval\n+ * @run main\/othervm -XX:StartFlightRecording:flush-interval=2s jdk.jfr.startupargs.TestFlushInterval\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestFlushInterval.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -328,1 +328,1 @@\n-            String optionString = \"-XX:FlightRecorderOptions=\";\n+            String optionString = \"-XX:FlightRecorderOptions:\";\n@@ -337,1 +337,1 @@\n-            if (optionString.equals(\"-XX:FlightRecorderOptions=\")) {\n+            if (optionString.equals(\"-XX:FlightRecorderOptions:\")) {\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestMemoryOptions.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n- * @summary Test -XX:FlightRecorderOptions=old-object-queue-size\n+ * @summary Test -XX:FlightRecorderOptions:old-object-queue-size\n@@ -43,3 +43,3 @@\n- * @run main\/othervm -XX:TLABSize=2k -XX:FlightRecorderOptions=old-object-queue-size=0 jdk.jfr.startupargs.TestOldObjectQueueSize off\n- * @run main\/othervm -XX:TLABSize=2k -Xlog:gc+tlab=trace -XX:FlightRecorderOptions=old-object-queue-size=10000 jdk.jfr.startupargs.TestOldObjectQueueSize many\n- * @run main\/othervm -XX:TLABSize=2k -Xlog:gc+tlab=trace -XX:FlightRecorderOptions=old-object-queue-size=1000000 jdk.jfr.startupargs.TestOldObjectQueueSize many\n+ * @run main\/othervm -XX:TLABSize=2k -XX:FlightRecorderOptions:old-object-queue-size=0 jdk.jfr.startupargs.TestOldObjectQueueSize off\n+ * @run main\/othervm -XX:TLABSize=2k -Xlog:gc+tlab=trace -XX:FlightRecorderOptions:old-object-queue-size=10000 jdk.jfr.startupargs.TestOldObjectQueueSize many\n+ * @run main\/othervm -XX:TLABSize=2k -Xlog:gc+tlab=trace -XX:FlightRecorderOptions:old-object-queue-size=1000000 jdk.jfr.startupargs.TestOldObjectQueueSize many\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestOldObjectQueueSize.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @run main\/othervm -XX:StartFlightRecording=name=TestStartRecording,settings=profile -XX:FlightRecorderOptions=repository=.\/repo jdk.jfr.startupargs.TestRepositoryPath\n+ * @run main\/othervm -XX:StartFlightRecording:name=TestStartRecording,settings=profile -XX:FlightRecorderOptions:repository=.\/repo jdk.jfr.startupargs.TestRepositoryPath\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestRepositoryPath.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n- * @run main\/othervm -XX:StartFlightRecording=name=myrec,settings=profile -XX:FlightRecorderOptions=repository=.\/subdirectory\/subdirectory1\/subdirectory2\/subdirectory3\/subdirectory4\/subdirectory5\/subdirectory6\/subdirectory7\/subdirectory8\/subdirectory9\/subdirectory10\/subdirectory11\/subdirectory12\/subdirectory13\/subdirectory14\/subdirectory15 jdk.jfr.startupargs.TestRepositoryPathLong\n+ * @run main\/othervm -XX:StartFlightRecording:name=myrec,settings=profile -XX:FlightRecorderOptions:repository=.\/subdirectory\/subdirectory1\/subdirectory2\/subdirectory3\/subdirectory4\/subdirectory5\/subdirectory6\/subdirectory7\/subdirectory8\/subdirectory9\/subdirectory10\/subdirectory11\/subdirectory12\/subdirectory13\/subdirectory14\/subdirectory15 jdk.jfr.startupargs.TestRepositoryPathLong\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestRepositoryPathLong.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,2 +38,2 @@\n- * @run main\/othervm -XX:FlightRecorderOptions=retransform=false jdk.jfr.startupargs.TestRetransform\n- * @run main\/othervm -XX:FlightRecorderOptions=retransform=true jdk.jfr.startupargs.TestRetransform\n+ * @run main\/othervm -XX:FlightRecorderOptions:retransform=false jdk.jfr.startupargs.TestRetransform\n+ * @run main\/othervm -XX:FlightRecorderOptions:retransform=true jdk.jfr.startupargs.TestRetransform\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestRetransform.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-        args.add(\"-XX:FlightRecorderOptions=retransform=\" + retransform);\n+        args.add(\"-XX:FlightRecorderOptions:retransform=\" + retransform);\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestRetransformUsingLog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,1 @@\n- * @run main\/othervm -XX:StartFlightRecording=name=TestStartDelay,delay=5000s jdk.jfr.startupargs.TestStartDelay\n+ * @run main\/othervm -XX:StartFlightRecording:name=TestStartDelay,delay=5000s jdk.jfr.startupargs.TestStartDelay\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartDelay.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @run main\/othervm -XX:StartFlightRecording=name=TestStartDelay,delay=1s jdk.jfr.startupargs.TestStartDelayRunning\n+ * @run main\/othervm -XX:StartFlightRecording:name=TestStartDelay,delay=1s jdk.jfr.startupargs.TestStartDelayRunning\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartDelayRunning.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n-            \"-XX:StartFlightRecording=name=TestStartDuration,duration=\" + duration, TestValues.class.getName(),\n+            \"-XX:StartFlightRecording:name=TestStartDuration,duration=\" + duration, TestValues.class.getName(),\n@@ -67,1 +67,1 @@\n-            \"-XX:StartFlightRecording=name=TestStartDuration,duration=\" + duration, \"-version\");\n+            \"-XX:StartFlightRecording:name=TestStartDuration,duration=\" + duration, \"-version\");\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartDuration.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @run main\/othervm -XX:StartFlightRecording=name=TestStartMaxAgeSize,maxage=10s,maxsize=1000000 jdk.jfr.startupargs.TestStartMaxAgeSize\n+ * @run main\/othervm -XX:StartFlightRecording:name=TestStartMaxAgeSize,maxage=10s,maxsize=1000000 jdk.jfr.startupargs.TestStartMaxAgeSize\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartMaxAgeSize.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-            \"-XX:StartFlightRecording=name=\" + recordingName, TestName.class.getName(), recordingName);\n+            \"-XX:StartFlightRecording:name=\" + recordingName, TestName.class.getName(), recordingName);\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- *      -XX:StartFlightRecording=settings=none\n+ *      -XX:StartFlightRecording:settings=none\n@@ -64,1 +64,1 @@\n-            throw new Exception(\"Expected 'UserEvent' to be enabled with -XX:StartFlightRecording=settings=none\");\n+            throw new Exception(\"Expected 'UserEvent' to be enabled with -XX:StartFlightRecording:settings=none\");\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartNoSettings.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,1 @@\n- * @run main\/othervm -XX:StartFlightRecording=name=TestStartRecording,settings=profile jdk.jfr.startupargs.TestStartRecording\n+ * @run main\/othervm -XX:StartFlightRecording:name=TestStartRecording,settings=profile jdk.jfr.startupargs.TestStartRecording\n","filename":"test\/jdk\/jdk\/jfr\/startupargs\/TestStartRecording.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}