{"files":[{"patch":"@@ -31,7 +31,10 @@\n-#define RUNTIME_OS_FLAGS(develop,     \\\n-                         develop_pd,  \\\n-                         product,     \\\n-                         product_pd,  \\\n-                         notproduct,  \\\n-                         range,       \\\n-                         constraint)\n+#define RUNTIME_OS_FLAGS(develop,                                       \\\n+                         develop_pd,                                    \\\n+                         product,                                       \\\n+                         product_pd,                                    \\\n+                         notproduct,                                    \\\n+                         range,                                         \\\n+                         constraint)                                    \\\n+                                                                        \\\n+  AARCH64_ONLY(develop(bool, WXCheckAtSafepoint, false,                 \\\n+          \"Conservatively check W^X thread state at possible safepoint\"))\n","filename":"src\/hotspot\/os\/bsd\/globals_bsd.hpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -68,0 +68,10 @@\n+\n+  \/\/ Macos\/aarch64 should be in the right state for safepoint (e.g.\n+  \/\/ deoptimization needs WXWrite).  Crashes caused by the wrong state rarely\n+  \/\/ happens in practice, making such issues hard to find and reproduce.\n+#if defined(ASSERT) && defined(__APPLE__) && defined(AARCH64)\n+  if (WXCheckAtSafepoint) {\n+    thread->check_wx(WXWrite);\n+  }\n+#endif\n+\n","filename":"src\/hotspot\/share\/runtime\/safepointMechanism.inline.hpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -687,0 +687,4 @@\n+\n+  void check_wx(WXMode expected) {\n+    assert(_wx_state == expected, \"wrong state\");\n+  }\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}