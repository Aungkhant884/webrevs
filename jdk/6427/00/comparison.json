{"files":[{"patch":"@@ -13153,1 +13153,21 @@\n-\/\/ Compare 2 longs and CMOVE ints.\n+instruct cmovII_reg_LTGE_U(cmpOpU cmp, flagsReg_ulong_LTGE flags, rRegI dst, rRegI src) %{\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge ));\n+  match(Set dst (CMoveI (Binary cmp flags) (Binary dst src)));\n+  ins_cost(200);\n+  format %{ \"CMOV$cmp $dst,$src\" %}\n+  opcode(0x0F,0x40);\n+  ins_encode( enc_cmov(cmp), RegReg( dst, src ) );\n+  ins_pipe( pipe_cmov_reg );\n+%}\n+\n+instruct cmovII_mem_LTGE_U(cmpOpU cmp, flagsReg_ulong_LTGE flags, rRegI dst, memory src) %{\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::lt || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ge ));\n+  match(Set dst (CMoveI (Binary cmp flags) (Binary dst (LoadI src))));\n+  ins_cost(250);\n+  format %{ \"CMOV$cmp $dst,$src\" %}\n+  opcode(0x0F,0x40);\n+  ins_encode( enc_cmov(cmp), RegMem( dst, src ) );\n+  ins_pipe( pipe_cmov_mem );\n+%}\n+\n+\/\/ Compare 2 longs and CMOVE ptrs.\n@@ -13316,1 +13336,21 @@\n-\/\/ Compare 2 longs and CMOVE ints.\n+instruct cmovII_reg_EQNE_U(cmpOpU cmp, flagsReg_ulong_EQNE flags, rRegI dst, rRegI src) %{\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne ));\n+  match(Set dst (CMoveI (Binary cmp flags) (Binary dst src)));\n+  ins_cost(200);\n+  format %{ \"CMOV$cmp $dst,$src\" %}\n+  opcode(0x0F,0x40);\n+  ins_encode( enc_cmov(cmp), RegReg( dst, src ) );\n+  ins_pipe( pipe_cmov_reg );\n+%}\n+\n+instruct cmovII_mem_EQNE_U(cmpOpU cmp, flagsReg_ulong_EQNE flags, rRegI dst, memory src) %{\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::eq || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::ne ));\n+  match(Set dst (CMoveI (Binary cmp flags) (Binary dst (LoadI src))));\n+  ins_cost(250);\n+  format %{ \"CMOV$cmp $dst,$src\" %}\n+  opcode(0x0F,0x40);\n+  ins_encode( enc_cmov(cmp), RegMem( dst, src ) );\n+  ins_pipe( pipe_cmov_mem );\n+%}\n+\n+\/\/ Compare 2 longs and CMOVE ptrs.\n@@ -13511,0 +13551,20 @@\n+instruct cmovII_reg_LEGT_U(cmpOpU_commute cmp, flagsReg_ulong_LEGT flags, rRegI dst, rRegI src) %{\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt ));\n+  match(Set dst (CMoveI (Binary cmp flags) (Binary dst src)));\n+  ins_cost(200);\n+  format %{ \"CMOV$cmp $dst,$src\" %}\n+  opcode(0x0F,0x40);\n+  ins_encode( enc_cmov(cmp), RegReg( dst, src ) );\n+  ins_pipe( pipe_cmov_reg );\n+%}\n+\n+instruct cmovII_mem_LEGT_U(cmpOpU_commute cmp, flagsReg_ulong_LEGT flags, rRegI dst, memory src) %{\n+  predicate(VM_Version::supports_cmov() && ( _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::le || _kids[0]->_kids[0]->_leaf->as_Bool()->_test._test == BoolTest::gt ));\n+  match(Set dst (CMoveI (Binary cmp flags) (Binary dst (LoadI src))));\n+  ins_cost(250);\n+  format %{ \"CMOV$cmp $dst,$src\" %}\n+  opcode(0x0F,0x40);\n+  ins_encode( enc_cmov(cmp), RegMem( dst, src ) );\n+  ins_pipe( pipe_cmov_mem );\n+%}\n+\n","filename":"src\/hotspot\/cpu\/x86\/x86_32.ad","additions":62,"deletions":2,"binary":false,"changes":64,"status":"modified"}]}