{"files":[{"patch":"@@ -52,1 +52,1 @@\n- * a side-effect of executing the operation.\n+ * a side effect of executing the operation.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/doclet\/Reporter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * is sub-classed by {@link PackageTreeWriter} and {@link TreeWriter} to\n+ * is subclassed by {@link PackageTreeWriter} and {@link TreeWriter} to\n@@ -69,3 +69,3 @@\n-     * Add each level of the class tree. For each sub-class or\n-     * sub-interface indents the next level information.\n-     * Recurses itself to add sub-classes info.\n+     * Add each level of the class tree. For each subclass or\n+     * subinterface indents the next level information.\n+     * Recurses itself to add subclasses info.\n@@ -74,1 +74,1 @@\n-     * @param collection  a collection of the sub-classes at this level\n+     * @param collection  a collection of the subclasses at this level\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/AbstractTreeWriter.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -103,1 +103,1 @@\n-     * An interface to provide links for the sub-navigation area.\n+     * An interface to provide links for the subnavigation area.\n@@ -107,1 +107,1 @@\n-         * {@return a list of links to display in the sub-navigation area}\n+         * {@return a list of links to display in the subnavigation area}\n@@ -353,1 +353,1 @@\n-     * Adds the summary links to the sub-navigation.\n+     * Adds the summary links to the subnavigation.\n@@ -355,1 +355,1 @@\n-     * @param target the content to which the sub-navigation will be added\n+     * @param target the content to which the subnavigation will be added\n@@ -384,1 +384,1 @@\n-     * Adds the detail links to sub-navigation.\n+     * Adds the detail links to subnavigation.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Navigation.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -90,1 +90,1 @@\n- * Configure the output based on the options. Doclets should sub-class\n+ * Configure the output based on the options. Doclets should subclass\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseConfiguration.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -301,1 +301,1 @@\n-     * Specifies whether those methods that override a super-type's method\n+     * Specifies whether those methods that override a supertype's method\n@@ -1051,1 +1051,1 @@\n-     * Specifies whether those methods that override a super-type's method\n+     * Specifies whether those methods that override a supertype's method\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/BaseOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,2 +39,2 @@\n- * within Class Builders.  They essentially build sub-components.  For example,\n- * method documentation is a sub-component of class documentation.\n+ * within Class Builders.  They essentially build subcomponents.  For example,\n+ * method documentation is a subcomponent of class documentation.\n@@ -60,1 +60,1 @@\n-     * This method is not supported by sub-builders.\n+     * This method is not supported by subbuilders.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/AbstractMemberBuilder.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -283,2 +283,2 @@\n-     * put this interface in the sub-interface set of those interfaces. Do it\n-     * recursively. If an interface doesn't have super-interface just attach\n+     * put this interface in the subinterface set of those interfaces. Do it\n+     * recursively. If an interface doesn't have superinterface just attach\n@@ -308,1 +308,1 @@\n-     * Return the sub-class set for the class passed.\n+     * Return the subclass set for the class passed.\n@@ -310,1 +310,1 @@\n-     * @param typeElement class whose sub-class set is required.\n+     * @param typeElement class whose subclass set is required.\n@@ -317,1 +317,1 @@\n-     * Return the sub-interface set for the interface passed.\n+     * Return the subinterface set for the interface passed.\n@@ -319,1 +319,1 @@\n-     * @param typeElement interface whose sub-interface set is required.\n+     * @param typeElement interface whose subinterface set is required.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/ClassTree.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -780,4 +780,4 @@\n-     * Returns all the implemented super-interfaces of a given type,\n-     * in the case of classes, include all the super-interfaces of\n-     * the supertype. The super-interfaces are collected before the\n-     * super-interfaces of the supertype.\n+     * Returns all the implemented superinterfaces of a given type,\n+     * in the case of classes, include all the superinterfaces of\n+     * the supertype. The superinterfaces are collected before the\n+     * superinterfaces of the supertype.\n@@ -785,2 +785,2 @@\n-     * @param  te the type element to get the super-interfaces for.\n-     * @return the list of super-interfaces.\n+     * @param  te the type element to get the superinterfaces for.\n+     * @return the list of superinterfaces.\n@@ -2813,1 +2813,1 @@\n-     * An element can have flags that place it into some sub-categories, like\n+     * An element can have flags that place it into some subcategories, like\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -297,2 +297,2 @@\n-     * This method returns the super-types in the inheritance\n-     * order C, B, A, j.l.O. The super-interfaces however are\n+     * This method returns the supertypes in the inheritance\n+     * order C, B, A, j.l.O. The superinterfaces however are\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/VisibleMemberTable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -809,1 +809,1 @@\n-     * recurse, however sub-packages should recurse into the sub directories.\n+     * recurse, however subpackages should recurse into the subdirectories.\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/tool\/ElementsTable.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}