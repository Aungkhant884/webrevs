{"files":[{"patch":"@@ -228,0 +228,7 @@\n+#else\n+\n+void print_method_invocation_histogram() {}\n+void print_bytecode_count() {}\n+\n+#endif \/\/ PRODUCT\n+\n@@ -280,1 +287,4 @@\n-  print_method_profiling_data();\n+  if (NOT_PRODUCT(true) PRODUCT_ONLY(PrintMethodData)) {\n+    \/\/ TODO: why is this unconditional in non-product builds?\n+    print_method_profiling_data();\n+  }\n@@ -340,50 +350,0 @@\n-#else \/\/ PRODUCT MODE STATISTICS\n-\n-void print_statistics() {\n-\n-  if (PrintMethodData) {\n-    print_method_profiling_data();\n-  }\n-\n-  if (CITime) {\n-    CompileBroker::print_times();\n-  }\n-\n-#ifdef COMPILER2_OR_JVMCI\n-  if ((LogVMOutput || LogCompilation) && UseCompiler) {\n-    \/\/ Only print the statistics to the log file\n-    FlagSetting fs(DisplayVMOutput, false);\n-    Deoptimization::print_statistics();\n-  }\n-#endif \/* COMPILER2 || INCLUDE_JVMCI *\/\n-\n-  if (PrintCodeCache) {\n-    MutexLocker mu(CodeCache_lock, Mutex::_no_safepoint_check_flag);\n-    CodeCache::print();\n-  }\n-\n-  \/\/ CodeHeap State Analytics.\n-  if (PrintCodeHeapAnalytics) {\n-    CompileBroker::print_heapinfo(nullptr, \"all\", 4096); \/\/ details\n-  }\n-\n-#ifdef COMPILER2\n-  if (PrintPreciseRTMLockingStatistics) {\n-    OptoRuntime::print_named_counters();\n-  }\n-#endif\n-\n-  \/\/ Native memory tracking data\n-  if (PrintNMTStatistics) {\n-    MemTracker::final_report(tty);\n-  }\n-\n-  if (PrintMetaspaceStatisticsAtExit) {\n-    MetaspaceUtils::print_basic_report(tty, 0);\n-  }\n-\n-  ThreadsSMRSupport::log_statistics();\n-}\n-\n-#endif\n-\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":11,"deletions":51,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -578,1 +578,0 @@\n-  static void print_statistics();\n@@ -582,0 +581,2 @@\n+\n+  static void print_statistics() PRODUCT_RETURN;\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}