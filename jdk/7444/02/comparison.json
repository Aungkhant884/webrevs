{"files":[{"patch":"@@ -0,0 +1,90 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @summary Verify that increase in Frame's minimumSize gets reflected in the subsequent getSize call\n+ * @run main SetMinimumSizeTest1\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+\n+public class SetMinimumSizeTest1 {\n+\n+    private static volatile Frame frame;\n+    private static volatile Dimension dimension, actualDimension;\n+\n+    public static void createGUI(Frame _frame) {\n+        frame = new Frame();\n+        frame.add(new Button(\"Button\"));\n+        frame.setSize(140, 140);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void doTest() throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> createGUI(frame));\n+\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            robot.waitForIdle();\n+\n+            EventQueue.invokeAndWait(() -> {\n+                dimension = frame.getSize();\n+                dimension.width = dimension.width + 20;\n+                dimension.height = dimension.height + 20;\n+                frame.setMinimumSize(dimension);\n+                frame.invalidate();\n+                frame.validate();\n+            });\n+\n+            robot.waitForIdle();\n+\n+            EventQueue.invokeAndWait(() -> {\n+                actualDimension = frame.getSize();\n+\t    });\n+\n+\t    robot.waitForIdle();\n+\n+            if (!actualDimension.equals(dimension)) {\n+                throw new RuntimeException(\"Test Failed\\n\"\n+                    + \"expected dimension:(\" + dimension.width + \",\" + dimension.height +\")\\n\"\n+                    + \"actual dimension:(\" + actualDimension.width + \",\" + actualDimension.height + \")\");\n+            }\n+        }\n+        finally {\n+            EventQueue.invokeAndWait(() -> frame.dispose());\n+            }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        doTest();\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Frame\/SetMinimumSizeTest\/SetMinimumSizeTest1.java","additions":90,"deletions":0,"binary":false,"changes":90,"status":"added"},{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @summary Verify frame resizes back to minimumSize on calling pack\n+ * @run main SetMinimumSizeTest2\n+ *\/\n+\n+import java.awt.Button;\n+import java.awt.Dimension;\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+\n+public class SetMinimumSizeTest2 {\n+\n+    private static volatile Frame frame;\n+    private static volatile Dimension dimension, actualDimension;\n+\n+    public static void createGUI(Frame _frame) {\n+        frame = new Frame();\n+        frame.add(new Button(\"Button\"));\n+        frame.setMinimumSize(new Dimension(140, 140));\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+\n+    public static void doTest() throws Exception {\n+        try {\n+            EventQueue.invokeAndWait(() -> createGUI(frame));\n+\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            robot.waitForIdle();\n+\n+            EventQueue.invokeAndWait(() -> {\n+                dimension = frame.getSize();\n+            });\n+\n+            robot.waitForIdle();\n+\n+            EventQueue.invokeAndWait(() -> {\n+                frame.setSize(new Dimension(dimension.width + 20, dimension.height + 20));\n+                frame.invalidate();\n+                frame.validate();\n+            });\n+\n+            robot.waitForIdle();\n+\n+            EventQueue.invokeAndWait(() -> {\n+                frame.pack();\n+                frame.invalidate();\n+                frame.validate();\n+            });\n+\n+            robot.waitForIdle();\n+\n+            EventQueue.invokeAndWait(() -> {\n+                actualDimension = frame.getSize();\n+            });\n+\n+            robot.waitForIdle();\n+\n+            if (!actualDimension.equals(dimension)) {\n+                throw new RuntimeException(\"Test Failed\\n\"\n+                    + \"expected dimension:(\" + dimension.width + \",\" + dimension.height +\")\\n\"\n+                    + \"actual dimension:(\" + actualDimension.width + \",\" + actualDimension.height + \")\");\n+            }\n+        }\n+        finally {\n+            EventQueue.invokeAndWait(() -> frame.dispose());\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        SetMinimumSizeTest2.doTest();\n+\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/Frame\/SetMinimumSizeTest\/SetMinimumSizeTest2.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"}]}