{"files":[{"patch":"@@ -964,8 +964,1 @@\n-    \/\/ Decrement the register.  Set condition codes.\n-    \/\/ Intel does this\n-    \/\/ addptr(data, (int32_t) -DataLayout::counter_increment);\n-    \/\/ If the decrement causes the counter to overflow, stay negative\n-    \/\/ Label L;\n-    \/\/ jcc(Assembler::negative, L);\n-    \/\/ addptr(data, (int32_t) DataLayout::counter_increment);\n-    \/\/ so we do this\n+    \/\/ Decrement the register.  No point checking for 64-bit underflow.\n@@ -973,3 +966,1 @@\n-    subs(rscratch1, rscratch1, (unsigned)DataLayout::counter_increment);\n-    Label L;\n-    br(Assembler::LO, L);       \/\/ skip store if counter underflow\n+    sub(rscratch1, rscratch1, (unsigned)DataLayout::counter_increment);\n@@ -977,1 +968,0 @@\n-    bind(L);\n@@ -979,8 +969,1 @@\n-    assert(DataLayout::counter_increment == 1,\n-           \"flow-free idiom only works with 1\");\n-    \/\/ Intel does this\n-    \/\/ Increment the register.  Set carry flag.\n-    \/\/ addptr(data, DataLayout::counter_increment);\n-    \/\/ If the increment causes the counter to overflow, pull back by 1.\n-    \/\/ sbbptr(data, (int32_t)0);\n-    \/\/ so we do this\n+    \/\/ Increment the register.  No point checking for 64-bit overflow.\n@@ -988,3 +971,1 @@\n-    adds(rscratch1, rscratch1, DataLayout::counter_increment);\n-    Label L;\n-    br(Assembler::CS, L);       \/\/ skip store if counter overflow\n+    add(rscratch1, rscratch1, DataLayout::counter_increment);\n@@ -992,1 +973,0 @@\n-    bind(L);\n@@ -1078,9 +1058,1 @@\n-    assert(DataLayout::counter_increment == 1,\n-            \"flow-free idiom only works with 1\");\n-    \/\/ Intel does this to catch overflow\n-    \/\/ addptr(bumped_count, DataLayout::counter_increment);\n-    \/\/ sbbptr(bumped_count, 0);\n-    \/\/ so we do this\n-    adds(bumped_count, bumped_count, DataLayout::counter_increment);\n-    Label L;\n-    br(Assembler::CS, L);       \/\/ skip store if counter overflow\n+    add(bumped_count, bumped_count, DataLayout::counter_increment);\n@@ -1088,1 +1060,1 @@\n-    bind(L);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/interp_masm_aarch64.cpp","additions":6,"deletions":34,"binary":false,"changes":40,"status":"modified"}]}