{"files":[{"patch":"@@ -55,2 +55,2 @@\n-  _guard_index = cards_required(_whole_heap.word_size()) - 1;\n-  _last_valid_index = _guard_index - 1;\n+  size_t num_cards = cards_required(_whole_heap.word_size());\n+  _last_valid_index = num_cards - 1;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,3 +64,1 @@\n-size_t CardTable::compute_byte_map_size() {\n-  assert(_guard_index == cards_required(_whole_heap.word_size()) - 1,\n-                                        \"uninitialized, check declaration order\");\n+size_t CardTable::compute_byte_map_size(size_t num_bytes) {\n@@ -69,1 +67,1 @@\n-  return align_up(_guard_index + 1, MAX2(_page_size, granularity));\n+  return align_up(num_bytes, MAX2(_page_size, granularity));\n@@ -74,1 +72,0 @@\n-  _guard_index(0),\n@@ -95,2 +92,2 @@\n-  _guard_index = cards_required(_whole_heap.word_size()) - 1;\n-  _last_valid_index = _guard_index - 1;\n+  size_t num_cards = cards_required(_whole_heap.word_size());\n+  _last_valid_index = num_cards - 1;\n@@ -98,1 +95,3 @@\n-  _byte_map_size = compute_byte_map_size();\n+  \/\/ each card takes 1 byte; + 1 for the guard card\n+  size_t num_bytes = num_cards + 1;\n+  _byte_map_size = compute_byte_map_size(num_bytes);\n@@ -111,1 +110,1 @@\n-  os::trace_page_sizes(\"Card Table\", _guard_index + 1, _guard_index + 1,\n+  os::trace_page_sizes(\"Card Table\", num_bytes, num_bytes,\n@@ -127,6 +126,3 @@\n-  CardValue* guard_card = &_byte_map[_guard_index];\n-  HeapWord* guard_page = align_down((HeapWord*)guard_card, _page_size);\n-  _guard_region = MemRegion(guard_page, _page_size);\n-  os::commit_memory_or_exit((char*)guard_page, _page_size, _page_size,\n-                            !ExecMem, \"card table last card\");\n-  *guard_card = last_card;\n+  CardValue* guard_card = &_byte_map[num_cards];\n+  assert(is_aligned(guard_card, _page_size), \"must be on its own OS page\");\n+  _guard_region = MemRegion((HeapWord*)guard_card, _page_size);\n@@ -175,0 +171,1 @@\n+  assert(mr.intersection(_guard_region).is_empty(), \"precondition\");\n@@ -181,2 +178,0 @@\n-  \/\/ Never include the guard page.\n-  result = result.minus(_guard_region);\n@@ -304,1 +299,1 @@\n-    assert(index_for(new_region.last()) <  _guard_index,\n+    assert(index_for(new_region.last()) <=  _last_valid_index,\n@@ -388,3 +383,0 @@\n-  \/\/ For product build verification\n-  guarantee(_byte_map[_guard_index] == last_card,\n-            \"card table guard has been modified\");\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":13,"deletions":21,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -47,3 +47,0 @@\n-  size_t          _guard_index;      \/\/ index of very last element in the card\n-                                     \/\/ table; it is set to a guard value\n-                                     \/\/ (last_card) and should never be modified\n@@ -68,3 +65,1 @@\n-  \/\/ The last card is a guard card, and we commit the page for it so\n-  \/\/ we can use the card for verification purposes. We make sure we never\n-  \/\/ uncommit the MemRegion for that page.\n+  \/\/ The last card is a guard card; never committed.\n@@ -73,1 +68,1 @@\n-  inline size_t compute_byte_map_size();\n+  inline size_t compute_byte_map_size(size_t num_bytes);\n@@ -136,3 +131,2 @@\n-    \/\/ Add one for a guard card, used to detect errors.\n-    const size_t words = align_up(covered_words, _card_size_in_words);\n-    return words \/ _card_size_in_words + 1;\n+    assert(is_aligned(covered_words, _card_size_in_words), \"precondition\");\n+    return covered_words \/ _card_size_in_words;\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,1 +91,0 @@\n-  nonstatic_field(CardTable,                   _guard_index,                                  const size_t)                          \\\n","filename":"src\/hotspot\/share\/gc\/shared\/vmStructs_gc.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}