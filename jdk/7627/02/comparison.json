{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,0 +108,4 @@\n+        \/\/ retrieve source posix view, null if unsupported\n+        final PosixFileAttributeView sourcePosixView =\n+            Files.getFileAttributeView(source, PosixFileAttributeView.class);\n+\n@@ -109,4 +113,9 @@\n-        BasicFileAttributes attrs = Files.readAttributes(source,\n-                                                         BasicFileAttributes.class,\n-                                                         linkOptions);\n-        if (attrs.isSymbolicLink())\n+        BasicFileAttributes sourceAttrs = sourcePosixView != null ?\n+            Files.readAttributes(source,\n+                                 PosixFileAttributes.class,\n+                                 linkOptions) :\n+            Files.readAttributes(source,\n+                                 BasicFileAttributes.class,\n+                                 linkOptions);\n+\n+        if (sourceAttrs.isSymbolicLink())\n@@ -122,1 +131,1 @@\n-        if (attrs.isDirectory()) {\n+        if (sourceAttrs.isDirectory()) {\n@@ -130,1 +139,1 @@\n-        \/\/ copy basic attributes to target\n+        \/\/ copy basic and, if supported, POSIX attributes to target\n@@ -132,2 +141,12 @@\n-            BasicFileAttributeView view =\n-                Files.getFileAttributeView(target, BasicFileAttributeView.class);\n+            BasicFileAttributeView targetView = null;\n+            if (sourcePosixView != null) {\n+                targetView = Files.getFileAttributeView(target,\n+                                                     PosixFileAttributeView.class);\n+            }\n+\n+            \/\/ target might not support posix even if source does\n+            if (targetView == null) {\n+                targetView = Files.getFileAttributeView(target,\n+                                                     BasicFileAttributeView.class);\n+            }\n+\n@@ -135,3 +154,8 @@\n-                view.setTimes(attrs.lastModifiedTime(),\n-                              attrs.lastAccessTime(),\n-                              attrs.creationTime());\n+                targetView.setTimes(sourceAttrs.lastModifiedTime(),\n+                                 sourceAttrs.lastAccessTime(),\n+                                 sourceAttrs.creationTime());\n+\n+                if (sourceAttrs instanceof PosixFileAttributes sourcePosixAttrs &&\n+                    targetView instanceof PosixFileAttributeView targetPosixView) {\n+                    targetPosixView.setPermissions(sourcePosixAttrs.permissions());\n+                }\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/CopyMoveHelper.java","additions":36,"deletions":12,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,1 @@\n- * @bug 4313887 6838333 6917021 7006126 6950237 8006645 8201407\n+ * @bug 4313887 6838333 6917021 7006126 6950237 8006645 8201407 8267820\n@@ -675,0 +675,7 @@\n+            \/\/ check POSIX attributes are copied\n+            if (!Platform.isWindows() && testPosixAttributes) {\n+                checkPosixAttributes(\n+                    readAttributes(source, PosixFileAttributes.class, linkOptions),\n+                    readAttributes(target, PosixFileAttributes.class, linkOptions));\n+            }\n+\n@@ -677,8 +684,0 @@\n-\n-                \/\/ check POSIX attributes are copied\n-                if (!Platform.isWindows() && testPosixAttributes) {\n-                    checkPosixAttributes(\n-                        readAttributes(source, PosixFileAttributes.class, linkOptions),\n-                        readAttributes(target, PosixFileAttributes.class, linkOptions));\n-                }\n-\n","filename":"test\/jdk\/java\/nio\/file\/Files\/CopyAndMove.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2021, SAP SE. All rights reserved.\n+ * Copyright (c) 2019, 2022, SAP SE. All rights reserved.\n@@ -72,0 +72,1 @@\n+ * @summary Test POSIX ZIP file operations.\n@@ -76,1 +77,0 @@\n- * @summary Test POSIX zip file operations.\n@@ -531,3 +531,5 @@\n-        try (FileSystem zip = FileSystems.newFileSystem(ZIP_FILE_COPY, ENV_DEFAULT)) {\n-            checkEntries(zip, checkExpects.noPermDataInZip);\n-        }\n+        if (System.getProperty(\"os.name\").toLowerCase().contains(\"windows\"))\n+            try (FileSystem zip = FileSystems.newFileSystem(ZIP_FILE_COPY,\n+                ENV_DEFAULT)) {\n+                checkEntries(zip, checkExpects.noPermDataInZip);\n+            }\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/TestPosix.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -6,0 +6,1 @@\n+    permission java.lang.RuntimePermission \"accessUserInformation\";\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/test.policy","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -8,0 +8,1 @@\n+    permission java.lang.RuntimePermission \"accessUserInformation\";\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/test.policy.posix","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}