{"files":[{"patch":"@@ -206,1 +206,7 @@\n-                    || algid.equals(ed25519_oid)) {\n+                    || algid.equals(ed25519_oid)\n+                    || algid.equals(x448_oid)\n+                    || algid.equals(x25519_oid)\n+                    || algid.equals(SHA224withECDSA_oid)\n+                    || algid.equals(SHA256withECDSA_oid)\n+                    || algid.equals(SHA384withECDSA_oid)\n+                    || algid.equals(SHA512withECDSA_oid)) {\n@@ -631,0 +637,14 @@\n+    public static final ObjectIdentifier x25519_oid =\n+            ObjectIdentifier.of(KnownOIDs.X25519);\n+    public static final ObjectIdentifier x448_oid =\n+            ObjectIdentifier.of(KnownOIDs.X448);\n+\n+    public static final ObjectIdentifier SHA224withECDSA_oid =\n+            ObjectIdentifier.of(KnownOIDs.SHA224withECDSA);\n+    public static final ObjectIdentifier SHA256withECDSA_oid =\n+            ObjectIdentifier.of(KnownOIDs.SHA256withECDSA);\n+    public static final ObjectIdentifier SHA384withECDSA_oid =\n+            ObjectIdentifier.of(KnownOIDs.SHA384withECDSA);\n+    public static final ObjectIdentifier SHA512withECDSA_oid =\n+            ObjectIdentifier.of(KnownOIDs.SHA512withECDSA);\n+\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -0,0 +1,196 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8252377\n+ * @summary The AlgorithmIdentifier for ECDSA should omit the parameters field\n+ *\/\n+\n+import java.util.Base64;\n+import java.io.ByteArrayInputStream;\n+import java.security.cert.CertificateFactory;\n+import java.security.cert.X509Certificate;\n+\n+public class OmitAlgIdParam {\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA224withECDSA) contains two\n+    \/\/ extra tag_Nulls as the encoding does not omit the parameters field in\n+    \/\/ AlgorithmIdentifier.\n+    static String SHA224ECDSA_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBMzCB2aADAgECAghC1WSCwCzuAzAMBggqhkjOPQQDAQUAMA0xCzAJBgNVBAMT\" +\n+        \"Am1lMB4XDTIwMDkwOTIxMTMzMloXDTIwMTIwODIxMTMzMlowDTELMAkGA1UEAxMC\" +\n+        \"bWUwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARal51XdJhVitpkxpISQXe3t31G\" +\n+        \"YquhksesPzhiX2GYf9L\/uonaltnnyl0fj25yXFXunHav3yCvg3SDnQbGVsihoyEw\" +\n+        \"HzAdBgNVHQ4EFgQUouV8yKNIcusBMb\/QJMX8QTR4vdwwDAYIKoZIzj0EAwEFAANH\" +\n+        \"ADBEAiAvYSRCF8\/RKIbF\/Wpe5zQZxV7w7YvtM5wPGUAXlKV2wgIgBwL3CYQgcGjC\" +\n+        \"KT7IFMn6RFR+s6+Qw+fkUxotLsOfL0w=\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA256withECDSA) contains two\n+    \/\/ extra tag_Nulls as the encoding does not omit the parameters field in\n+    \/\/ AlgorithmIdentifier.\n+    static String SHA256ECDSA_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBNDCB2aADAgECAggjyfYsAqKObjAMBggqhkjOPQQDAgUAMA0xCzAJBgNVBAMT\" +\n+        \"Am1lMB4XDTIwMDkwOTIxMTI1NFoXDTIwMTIwODIxMTI1NFowDTELMAkGA1UEAxMC\" +\n+        \"bWUwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAS11YiZCLVStBIi+nmYcwHdBwfw\" +\n+        \"qlcfEcDlHqFDXlf4iiaPiehKRrbU8jvzZmUzcP1zvon1xScJt\/dFZrhVxKaToyEw\" +\n+        \"HzAdBgNVHQ4EFgQUOj\/egZaejfmIRLK5Yo3+LFeKHf0wDAYIKoZIzj0EAwIFAANI\" +\n+        \"ADBFAiEAs4Zmuis15OEtw8fRIJCPT2uLLyJC9+y6\/Odms\/HZCkACIC0Awlg5KWiw\" +\n+        \"rdEi8\/gfz+HivCJzie4xVxCrvY7r59AE\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA384withECDSA) contains two\n+    \/\/ extra tag_Nulls as the encoding does not omit the parameters field in\n+    \/\/ AlgorithmIdentifier.\n+    static String SHA384ECDSA_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBNDCB2qADAgECAgkA7mCl6MfxgZwwDAYIKoZIzj0EAwMFADANMQswCQYDVQQD\" +\n+        \"EwJtZTAeFw0yMDA5MDkyMTEzNDBaFw0yMDEyMDgyMTEzNDBaMA0xCzAJBgNVBAMT\" +\n+        \"Am1lMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEsWvOnongREulQaDLamkMkFjn\" +\n+        \"Bseo05m+7ikc6G5gFXkAlbM2JtEU2+36xvw9c5YFofNxkBm0SrzN94TQSYrfb6Mh\" +\n+        \"MB8wHQYDVR0OBBYEFP7eD5LpWGneADhh5AhUT1kpXxF6MAwGCCqGSM49BAMDBQAD\" +\n+        \"RwAwRAIgTStKcy1Xqx5uXMinPqbr9h4f8RZ5zhNX2YsfdN9ehJkCIE9dxVLRMTjO\" +\n+        \"4Wszk0B6yq1TMl26bcKVlMlHHrlWrmE9\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA512withECDSA) contains two\n+    \/\/ extra tag_Nulls as the encoding does not omit the parameters field in\n+    \/\/ AlgorithmIdentifier.\n+    static String SHA512ECDSA_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBNDCB2qADAgECAgkAkwD7K4YgR+AwDAYIKoZIzj0EAwQFADANMQswCQYDVQQD\" +\n+        \"EwJtZTAeFw0yMDA5MDkyMTEzNDdaFw0yMDEyMDgyMTEzNDdaMA0xCzAJBgNVBAMT\" +\n+        \"Am1lMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE0Sx7489MAJOerSROT9fvxSHK\" +\n+        \"OjSUBubwBHK0q5zjaftI7YWp4YWZ5KQ04HjIldtUw4\/VV8WNdydui3x923eQ86Mh\" +\n+        \"MB8wHQYDVR0OBBYEFHQoSpKVo3lc4suEzDFT68I6JSfLMAwGCCqGSM49BAMEBQAD\" +\n+        \"RwAwRAIgXRNfdhLR2wKcNd7JdUC2OwocHiLcQiH0j1\/tIFuARSYCIGh6wbAp0YQh\" +\n+        \"bVZXB1IvxTu1+Tl\/21X\/SeRsho5xZA9t\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA224withECDSA) does not have\n+    \/\/ tag_Null as the encoding omits the parameters field in AlgorithmIdentifier.\n+    static String SHA224ECDSA_NO_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBMTCB16ADAgECAghUcKrh5qb\/dDAKBggqhkjOPQQDATANMQswCQYDVQQDEwJt\" +\n+        \"ZTAeFw0yMDA5MDkyMDMzNDlaFw0yMDEyMDgyMDMzNDlaMA0xCzAJBgNVBAMTAm1l\" +\n+        \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAETXEiW\/fhG3EFcuRD1QVg58oWKPpq\" +\n+        \"OEBveyYy9yZHdqx0RkjYGyUwhrxzwFMh5qYsqy\/CPWmOzd79lyaGXYxBO6MhMB8w\" +\n+        \"HQYDVR0OBBYEFE9VQptSlisl2V18fO76CnvisYIKMAoGCCqGSM49BAMBA0kAMEYC\" +\n+        \"IQC+BxCOw\/R83Kw0fA7cc9Yy7v\/LIb25NcjFg03lOcB8ygIhANSDNoi96zOsIYpu\" +\n+        \"k3fe2+fJiu13sVQxy6AM587OPX\/0\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA256withECDSA) does not have\n+    \/\/ tag_Null as the encoding omits the parameters field in AlgorithmIdentifier.\n+    static String SHA256ECDSA_NO_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBMDCB16ADAgECAgg12v8SD5aE0DAKBggqhkjOPQQDAjANMQswCQYDVQQDEwJt\" +\n+        \"ZTAeFw0yMDA5MDgyMjI1MzdaFw0yMDEyMDcyMjI1MzdaMA0xCzAJBgNVBAMTAm1l\" +\n+        \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEbLcM12vf\/au1OTmnTYzPfvaycTn+\" +\n+        \"YxWpuI\/MmsAQnchu\/hudUAzQUT73VkWnIxvotjhk\/Y\/kmKIbiV69lxrr86MhMB8w\" +\n+        \"HQYDVR0OBBYEFNBKdpJYY1gJTMOL\/5FFCx+W1zCJMAoGCCqGSM49BAMCA0gAMEUC\" +\n+        \"IG+52\/OLQWmKpv59Pxq5B5ps+cDoC7MMlKH3xhTH336qAiEAlBLrOQf4cfH+dSK8\" +\n+        \"lOfI8dZGzls96a8AWG65si84IKo=\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA384withECDSA) does not have\n+    \/\/ tag_Null as the encoding omits the parameters field in AlgorithmIdentifier.\n+    static String SHA384ECDSA_NO_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBMTCB2KADAgECAgkAr59mIXOL19IwCgYIKoZIzj0EAwMwDTELMAkGA1UEAxMC\" +\n+        \"bWUwHhcNMjAwOTIyMDExMDQxWhcNMjAxMjIxMDExMDQxWjANMQswCQYDVQQDEwJt\" +\n+        \"ZTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABD82vloJlb+4N8WDbAdXdnTYSRQE\" +\n+        \"DEW3dYwdwENKzx9b2C51xJ\/WaOJusgxyQrXa66f1f2fKeTmuuMNcN04b8nujITAf\" +\n+        \"MB0GA1UdDgQWBBRAAPDZ9AQmiTxE3xRQASUfP+SgcDAKBggqhkjOPQQDAwNIADBF\" +\n+        \"AiBbD32S3MFVyFDCaq3b1xjN62Q63Sa5o0hstCh5bhlqXQIhAONMxdiD4JK6XUQP\" +\n+        \"H+0ZIiu\/ka5VMNLApkluM9bE8ly3\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    \/\/ ECDSA certificate (signature algorithm SHA512withECDSA) does not have\n+    \/\/ tag_Null as the encoding omits the parameters field in AlgorithmIdentifier.\n+    static String SHA512ECDSA_NO_NULL_TAG =\n+        \"-----BEGIN CERTIFICATE-----\" +\n+        \"MIIBMDCB2KADAgECAgkAg+sRIEuL3NMwCgYIKoZIzj0EAwQwDTELMAkGA1UEAxMC\" +\n+        \"bWUwHhcNMjAwOTA5MjAzNTAyWhcNMjAxMjA4MjAzNTAyWjANMQswCQYDVQQDEwJt\" +\n+        \"ZTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABG+xByZLtCzjNqyPXBIEmvOVDrOk\" +\n+        \"3Kql8J5q9XPxjRIvk3fQRc9syGBkWfcdrS+yu66GIHPOApKadj0ed3BgejejITAf\" +\n+        \"MB0GA1UdDgQWBBQH29Q+6WslDk+b7WSU7Q7J999suzAKBggqhkjOPQQDBANHADBE\" +\n+        \"AiAjb5vgAofMtYF1H4Avv7lUDXebQ0q63d9nrI5167zWQwIgIm+x9X7\/nMVCjZMe\" +\n+        \"Yx\/HcDGBvaMDkktrug0rj+hqlDI=\" +\n+        \"-----END CERTIFICATE-----\";\n+\n+    public static void main(String[] args) throws Exception {\n+        omitParamTest(SHA224ECDSA_NULL_TAG, SHA224ECDSA_NO_NULL_TAG, \"SHA224ECDSA\");\n+        omitParamTest(SHA256ECDSA_NULL_TAG, SHA256ECDSA_NO_NULL_TAG, \"SHA256ECDSA\");\n+        omitParamTest(SHA384ECDSA_NULL_TAG, SHA384ECDSA_NO_NULL_TAG, \"SHA384ECDSA\");\n+        omitParamTest(SHA512ECDSA_NULL_TAG, SHA512ECDSA_NO_NULL_TAG, \"SHA512ECDSA\");\n+    }\n+\n+    static void omitParamTest(String nullTagCert, String noNullTagCert, String Alg)\n+            throws Exception {\n+        int certLenWithNull = getCertLen(nullTagCert);\n+        int certLenWithoutNull = getCertLen(noNullTagCert);\n+\n+        System.out.println(\"certLenWithNull = \" + certLenWithNull + \", certLenWithoutNull = \" + certLenWithoutNull);\n+        int deltaLen = certLenWithNull - certLenWithoutNull;\n+\n+        \/*\n+         * Each tag_Null occupies two bytes (tag: 0x05, length: 0).\n+         * There are two signature algorithm identifiers in the certificate, taking up 4 bytes of space\n+         * for the algId.parameters field - this should be omitted.\n+         * The case of 5 bytes is checked, since one extra byte is added for an even byte alignment.\n+         *\/\n+        if ((deltaLen == 4) || (deltaLen == 5))\n+        {\n+                System.out.println(Alg + \" test: Passed\\n\");\n+        } else {\n+                System.out.println(Alg + \" test: Failed\\n\");\n+        }\n+    }\n+\n+    static int getCertLen(String cert) throws Exception {\n+        CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n+        X509Certificate x509Cert = (X509Certificate) cf.generateCertificate(\n+                new ByteArrayInputStream(getPemBlob(cert, \"CERTIFICATE\")));\n+\n+        \/*\n+         * We cannot simply compare the certificate length between the certificates\n+         * with and without the null tag because the signature length varies,\n+         * and its sigLen is included in certLen.\n+         *\/\n+        int certLen = x509Cert.getEncoded().length;\n+        int sigLen = x509Cert.getSignature().length;\n+\n+        return certLen - sigLen;\n+    }\n+\n+    static byte[] getPemBlob(String pemData, String qualifier) {\n+        String beginTag = \"-----BEGIN \" + qualifier + \"-----\";\n+        return Base64.getDecoder()\n+                .decode(pemData.substring(pemData.indexOf(beginTag) + beginTag.length(),\n+                        pemData.indexOf(\"-----END \" + qualifier + \"-----\")));\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/x509\/AlgorithmId\/OmitAlgIdParam.java","additions":196,"deletions":0,"binary":false,"changes":196,"status":"added"}]}