{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,2 @@\n-        if (javaUtilCollectionAccess == null) {\n+        var access = javaUtilCollectionAccess;\n+        if (access == null) {\n@@ -89,0 +90,1 @@\n+                access = javaUtilCollectionAccess;\n@@ -91,1 +93,1 @@\n-        return javaUtilCollectionAccess;\n+        return access;\n@@ -95,1 +97,2 @@\n-        if (javaUtilJarAccess == null) {\n+        var access = javaUtilJarAccess;\n+        if (access == null) {\n@@ -99,0 +102,1 @@\n+            access = javaUtilJarAccess;\n@@ -100,1 +104,1 @@\n-        return javaUtilJarAccess;\n+        return access;\n@@ -120,1 +124,2 @@\n-        if (javaLangInvokeAccess == null) {\n+        var access = javaLangInvokeAccess;\n+        if (access == null) {\n@@ -123,0 +128,1 @@\n+                access = javaLangInvokeAccess;\n@@ -125,1 +131,1 @@\n-        return javaLangInvokeAccess;\n+        return access;\n@@ -133,1 +139,2 @@\n-        if (javaLangModuleAccess == null) {\n+        var access = javaLangModuleAccess;\n+        if (access == null) {\n@@ -135,0 +142,1 @@\n+            access = javaLangModuleAccess;\n@@ -136,1 +144,1 @@\n-        return javaLangModuleAccess;\n+        return access;\n@@ -160,1 +168,2 @@\n-        if (javaNetUriAccess == null)\n+        var access = javaNetUriAccess;\n+        if (access == null) {\n@@ -162,1 +171,3 @@\n-        return javaNetUriAccess;\n+            access = javaNetUriAccess;\n+        }\n+        return access;\n@@ -170,1 +181,2 @@\n-        if (javaNetURLAccess == null)\n+        var access = javaNetURLAccess;\n+        if (access == null) {\n@@ -172,1 +184,3 @@\n-        return javaNetURLAccess;\n+            access = javaNetURLAccess;\n+        }\n+        return access;\n@@ -180,1 +194,2 @@\n-        if (javaNetInetAddressAccess == null)\n+        var access = javaNetInetAddressAccess;\n+        if (access == null) {\n@@ -182,1 +197,3 @@\n-        return javaNetInetAddressAccess;\n+            access = javaNetInetAddressAccess;\n+        }\n+        return access;\n@@ -190,1 +207,2 @@\n-        if (javaNetHttpCookieAccess == null)\n+        var access = javaNetHttpCookieAccess;\n+        if (access == null) {\n@@ -192,1 +210,3 @@\n-        return javaNetHttpCookieAccess;\n+            access = javaNetHttpCookieAccess;\n+        }\n+        return access;\n@@ -200,1 +220,2 @@\n-        if (javaNioAccess == null) {\n+        var access = javaNioAccess;\n+        if (access == null) {\n@@ -204,0 +225,1 @@\n+            access = javaNioAccess;\n@@ -205,1 +227,1 @@\n-        return javaNioAccess;\n+        return access;\n@@ -213,1 +235,2 @@\n-        if (javaIOAccess == null) {\n+        var access = javaIOAccess;\n+        if (access == null) {\n@@ -215,0 +238,1 @@\n+            access = javaIOAccess;\n@@ -216,1 +240,1 @@\n-        return javaIOAccess;\n+        return access;\n@@ -224,1 +248,2 @@\n-        if (javaIOFilePermissionAccess == null)\n+        var access = javaIOFilePermissionAccess;\n+        if (access == null) {\n@@ -226,2 +251,3 @@\n-\n-        return javaIOFilePermissionAccess;\n+            access = javaIOFilePermissionAccess;\n+        }\n+        return access;\n@@ -235,1 +261,2 @@\n-        if (javaIOFileDescriptorAccess == null)\n+        var access = javaIOFileDescriptorAccess;\n+        if (access == null) {\n@@ -237,2 +264,3 @@\n-\n-        return javaIOFileDescriptorAccess;\n+            access = javaIOFileDescriptorAccess;\n+        }\n+        return access;\n@@ -246,1 +274,2 @@\n-        if (javaSecurityAccess == null) {\n+        var access = javaSecurityAccess;\n+        if (access == null) {\n@@ -248,0 +277,1 @@\n+            access = javaSecurityAccess;\n@@ -249,1 +279,1 @@\n-        return javaSecurityAccess;\n+        return access;\n@@ -253,1 +283,2 @@\n-        if (javaUtilZipFileAccess == null)\n+        var access = javaUtilZipFileAccess;\n+        if (access == null) {\n@@ -255,1 +286,3 @@\n-        return javaUtilZipFileAccess;\n+            access = javaUtilZipFileAccess;\n+        }\n+        return access;\n@@ -291,1 +324,2 @@\n-        if (javaUtilResourceBundleAccess == null)\n+        var access = javaUtilResourceBundleAccess;\n+        if (access == null) {\n@@ -293,1 +327,3 @@\n-        return javaUtilResourceBundleAccess;\n+            access = javaUtilResourceBundleAccess;\n+        }\n+        return access;\n@@ -301,1 +337,2 @@\n-        if (javaObjectInputStreamReadString == null) {\n+        var access = javaObjectInputStreamReadString;\n+        if (access == null) {\n@@ -303,0 +340,1 @@\n+            access = javaObjectInputStreamReadString;\n@@ -304,1 +342,1 @@\n-        return javaObjectInputStreamReadString;\n+        return access;\n@@ -312,1 +350,2 @@\n-        if (javaObjectInputStreamAccess == null) {\n+        var access = javaObjectInputStreamAccess;\n+        if (access == null) {\n@@ -314,0 +353,1 @@\n+            access = javaObjectInputStreamAccess;\n@@ -315,1 +355,1 @@\n-        return javaObjectInputStreamAccess;\n+        return access;\n@@ -323,1 +363,2 @@\n-        if (javaObjectInputFilterAccess == null) {\n+        var access = javaObjectInputFilterAccess;\n+        if (access == null) {\n@@ -325,0 +366,1 @@\n+            access = javaObjectInputFilterAccess;\n@@ -326,1 +368,1 @@\n-        return javaObjectInputFilterAccess;\n+        return access;\n@@ -338,1 +380,2 @@\n-        if (javaIORandomAccessFileAccess == null) {\n+        var access = javaIORandomAccessFileAccess;\n+        if (access == null) {\n@@ -340,0 +383,1 @@\n+            access = javaIORandomAccessFileAccess;\n@@ -341,1 +385,1 @@\n-        return javaIORandomAccessFileAccess;\n+        return access;\n@@ -349,1 +393,2 @@\n-        if (javaSecuritySignatureAccess == null) {\n+        var access = javaSecuritySignatureAccess;\n+        if (access == null) {\n@@ -351,0 +396,1 @@\n+            access = javaSecuritySignatureAccess;\n@@ -352,1 +398,1 @@\n-        return javaSecuritySignatureAccess;\n+        return access;\n@@ -360,1 +406,2 @@\n-        if (javaxCryptoSealedObjectAccess == null) {\n+        var access = javaxCryptoSealedObjectAccess;\n+        if (access == null) {\n@@ -362,0 +409,1 @@\n+            access = javaxCryptoSealedObjectAccess;\n@@ -363,1 +411,1 @@\n-        return javaxCryptoSealedObjectAccess;\n+        return access;\n@@ -369,1 +417,3 @@\n-        } catch (IllegalAccessException e) {}\n+        } catch (IllegalAccessException e) {\n+            throw new InternalError(e);\n+        }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/access\/SharedSecrets.java","additions":96,"deletions":46,"binary":false,"changes":142,"status":"modified"}]}