[{"commit":{"message":"fixing the CodeBuffer overflow assert on x86 build: SharedRuntime::generate_handler_blob asks a 1KB buffer,\nactually CodeBuffer::initialize reserves the given size with some extra bytes;\nwith the new formula (code_size + align + slop * SECT_LIMIT) the extra bytes number is reduced, causing the handler_blob generator buffer to overflow.\nSolution: double the code_size estimate for handler_blob generator buffer (the temporary buffer size is not really important)"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp"}],"sha":"7799fea3985eb146d3673728683d654427d677c5"},{"commit":{"message":"rollback InteriorEntryAlignment change"},"files":[{"filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp"}],"sha":"0f052d14c20f3ca7f8bb58f7292ec7d0741b22de"},{"commit":{"message":"jtreg\/compiler tests update"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidCompilationResult.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidDebugInfo.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidOopMap.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/events\/JvmciNotifyInstallEventTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestAssembler.java"}],"sha":"20f2299bd11a34b7111aa05bf71e862208262831"},{"commit":{"message":"Undo CodeEntryAlignment modification. Each code section (constants,code,stubs) have got its own alignment"},"files":[{"filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp"},{"filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp"},{"filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp"}],"sha":"a72cd3be9a5041ae007ad4354f7c2e6802114e84"},{"commit":{"message":"use InteriorEntryAlignment for code sections"},"files":[{"filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp"}],"sha":"9dfad7c5250883cfdcbaa7a51833d0ad2636faeb"}]