{"files":[{"patch":"@@ -2635,1 +2635,1 @@\n-  CodeBuffer   buffer(\"handler_blob\", 1024, 512);\n+  CodeBuffer   buffer(\"handler_blob\", 2048, 1024);\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-  int align = _insts.alignment();\n+  int align = _consts.alignment() + _insts.alignment() + _stubs.alignment();\n@@ -105,1 +105,1 @@\n-  set_blob(BufferBlob::create(_name, code_size + (align+slop) * (SECT_LIMIT+1)));\n+  set_blob(BufferBlob::create(_name, code_size + align + slop * SECT_LIMIT));\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"compiler\/compiler_globals.hpp\"\n@@ -254,5 +255,2 @@\n-  \/\/ alignment requirement for starting offset\n-  \/\/ Requirements are that the instruction area and the\n-  \/\/ stubs area must start on CodeEntryAlignment, and\n-  \/\/ the ctable on sizeof(jdouble)\n-  int alignment() const             { return MAX2((int)sizeof(jdouble), (int)CodeEntryAlignment); }\n+  static int alignment(int section);\n+  int alignment() { return alignment(_index); }\n@@ -263,1 +261,7 @@\n-  csize_t align_at_start(csize_t off) const { return (csize_t) align_up(off, alignment()); }\n+  csize_t align_at_start(csize_t off, int section) const {\n+    return (csize_t) align_up(off, alignment(section));\n+  }\n+\n+  csize_t align_at_start(csize_t off) const {\n+    return (csize_t) align_up(off, alignment(_index));\n+  }\n@@ -705,0 +709,15 @@\n+inline int CodeSection::alignment(int section) {\n+  if (section == CodeBuffer::SECT_CONSTS) {\n+    return (int) sizeof(jdouble);\n+  }\n+  if (section == CodeBuffer::SECT_INSTS) {\n+    return (int) CodeEntryAlignment;\n+  }\n+  if (CodeBuffer::SECT_STUBS) {\n+    \/\/ CodeBuffer installer expects sections to be HeapWordSize aligned\n+    return HeapWordSize;\n+  }\n+  ShouldNotReachHere();\n+  return 0;\n+}\n+\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":25,"deletions":6,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -665,1 +665,3 @@\n-  int total_size = align_up(_code_size, buffer.insts()->alignment()) + align_up(_constants_size, buffer.consts()->alignment()) + align_up(stubs_size, buffer.stubs()->alignment());\n+  int total_size = align_up(_constants_size, CodeSection::alignment(CodeBuffer::SECT_INSTS)) +\n+                   align_up(_code_size, CodeSection::alignment(CodeBuffer::SECT_STUBS)) +\n+                   stubs_size;\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCodeInstaller.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -88,0 +88,2 @@\n+    static final int validDataSectionAlignment = 8;\n+\n@@ -90,1 +92,1 @@\n-        installEmptyCode(new Site[0], new Assumption[]{new InvalidAssumption()}, new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[0], new Assumption[]{new InvalidAssumption()}, new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -100,1 +102,1 @@\n-        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], 16, new DataPatch[]{null}, null);\n+        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[]{null}, null);\n@@ -105,1 +107,1 @@\n-        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], 16, new DataPatch[]{new DataPatch(0, null)}, null);\n+        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[]{new DataPatch(0, null)}, null);\n@@ -112,1 +114,1 @@\n-        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], 16, new DataPatch[]{new DataPatch(0, ref)}, null);\n+        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[]{new DataPatch(0, ref)}, null);\n@@ -119,1 +121,1 @@\n-        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], 16, new DataPatch[]{new DataPatch(0, ref)}, null);\n+        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[]{new DataPatch(0, ref)}, null);\n@@ -125,1 +127,1 @@\n-        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], 16, new DataPatch[]{new DataPatch(0, ref)}, null);\n+        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[]{new DataPatch(0, ref)}, null);\n@@ -131,1 +133,1 @@\n-        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], 16, new DataPatch[]{new DataPatch(0, ref)}, null);\n+        installEmptyCode(new Site[0], new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[]{new DataPatch(0, ref)}, null);\n@@ -136,1 +138,1 @@\n-        installEmptyCode(new Site[]{new DataPatch(0, null)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{new DataPatch(0, null)}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -142,1 +144,1 @@\n-        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -148,1 +150,1 @@\n-        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -154,1 +156,1 @@\n-        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -161,1 +163,1 @@\n-        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{new DataPatch(0, ref)}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -166,1 +168,1 @@\n-        installEmptyCode(new Site[]{new Mark(0, new Object())}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{new Mark(0, new Object())}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -171,1 +173,1 @@\n-        installEmptyCode(new Site[]{new Mark(0, -1)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{new Mark(0, -1)}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -176,1 +178,1 @@\n-        installEmptyCode(new Site[]{null}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{null}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -182,1 +184,1 @@\n-        installEmptyCode(new Site[]{info}, new Assumption[0], new Comment[0], 16, new DataPatch[0], null);\n+        installEmptyCode(new Site[]{info}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], null);\n@@ -189,1 +191,1 @@\n-        installEmptyCode(new Site[]{info}, new Assumption[0], new Comment[0], 16, new DataPatch[0], deoptRescueSlot);\n+        installEmptyCode(new Site[]{info}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], deoptRescueSlot);\n@@ -195,1 +197,1 @@\n-        installEmptyCode(new Site[]{}, new Assumption[0], new Comment[0], 16, new DataPatch[0], deoptRescueSlot);\n+        installEmptyCode(new Site[]{}, new Assumption[0], new Comment[0], validDataSectionAlignment, new DataPatch[0], deoptRescueSlot);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidCompilationResult.java","additions":20,"deletions":18,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-        installEmptyCode(new Site[]{new Infopoint(0, info, InfopointReason.SAFEPOINT)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], deoptRescueSlot);\n+        installEmptyCode(new Site[]{new Infopoint(0, info, InfopointReason.SAFEPOINT)}, new Assumption[0], new Comment[0], 8, new DataPatch[0], deoptRescueSlot);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidDebugInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-        installEmptyCode(new Site[]{new Infopoint(0, info, InfopointReason.SAFEPOINT)}, new Assumption[0], new Comment[0], 16, new DataPatch[0], StackSlot.get(null, 0, true));\n+        installEmptyCode(new Site[]{new Infopoint(0, info, InfopointReason.SAFEPOINT)}, new Assumption[0], new Comment[0], 8, new DataPatch[0], StackSlot.get(null, 0, true));\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/errors\/TestInvalidOopMap.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -119,0 +119,1 @@\n+        int dataSectionAlignment = 8;\n@@ -122,1 +123,1 @@\n-                16, new DataPatch[0], false, 0, null,\n+                dataSectionAlignment, new DataPatch[0], false, 0, null,\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/events\/JvmciNotifyInstallEventTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -319,1 +319,2 @@\n-        return new HotSpotCompiledNmethod(method.getName(), finishedCode, finishedCode.length, finishedSites, new Assumption[0], new ResolvedJavaMethod[]{method}, new Comment[0], finishedData, 16,\n+        int dataSectionAlignment = 8;\n+        return new HotSpotCompiledNmethod(method.getName(), finishedCode, finishedCode.length, finishedSites, new Assumption[0], new ResolvedJavaMethod[]{method}, new Comment[0], finishedData, dataSectionAlignment,\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/TestAssembler.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}