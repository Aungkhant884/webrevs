{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,0 @@\n-        modules\/jdk.crypto.ec\/sun\/security\/ec \\\n","filename":"make\/ZipSecurity.gmk","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,1 +39,0 @@\n-    jdk.crypto.ec \\\n","filename":"make\/conf\/docs-modules.conf","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -80,1 +80,0 @@\n-    jdk.crypto.ec \\\n","filename":"make\/conf\/module-loader-map.conf","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -325,2 +325,1 @@\n-        java.security.jgss,\n-        jdk.crypto.ec;\n+        java.security.jgss;\n@@ -333,1 +332,0 @@\n-        jdk.crypto.ec,\n@@ -337,1 +335,0 @@\n-        jdk.crypto.ec,\n@@ -343,1 +340,0 @@\n-        jdk.crypto.ec,\n@@ -362,1 +358,0 @@\n-        jdk.crypto.ec,\n@@ -367,4 +362,0 @@\n-    exports sun.security.util.math to\n-        jdk.crypto.ec;\n-    exports sun.security.util.math.intpoly to\n-        jdk.crypto.ec;\n@@ -372,1 +363,0 @@\n-        jdk.crypto.ec,\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":1,"deletions":11,"binary":false,"changes":12,"status":"modified"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECDHKeyAgreement.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECDHKeyAgreement.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECDSAOperations.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECDSAOperations.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECDSASignature.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECDSASignature.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECKeyFactory.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECKeyFactory.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECKeyPairGenerator.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECKeyPairGenerator.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECOperations.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECOperations.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECPrivateKeyImpl.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECPrivateKeyImpl.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ECPublicKeyImpl.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECPublicKeyImpl.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ParametersMap.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ParametersMap.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/SunEC.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/SunEC.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XDHKeyAgreement.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XDHKeyAgreement.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XDHKeyFactory.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XDHKeyFactory.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XDHKeyPairGenerator.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XDHKeyPairGenerator.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XDHPrivateKeyImpl.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XDHPrivateKeyImpl.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XDHPublicKeyImpl.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XDHPublicKeyImpl.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XECOperations.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XECOperations.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/XECParameters.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XECParameters.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/Ed25519Operations.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/Ed25519Operations.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/Ed448Operations.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/Ed448Operations.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAAlgorithmParameters.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAAlgorithmParameters.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAKeyFactory.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAKeyFactory.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAKeyPairGenerator.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAKeyPairGenerator.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAOperations.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAOperations.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAParameters.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAParameters.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAPrivateKeyImpl.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAPrivateKeyImpl.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSAPublicKeyImpl.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAPublicKeyImpl.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdDSASignature.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSASignature.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/ed\/EdECOperations.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdECOperations.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/AffinePoint.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/point\/AffinePoint.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/ExtendedHomogeneousPoint.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/point\/ExtendedHomogeneousPoint.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/ImmutablePoint.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/point\/ImmutablePoint.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/MutablePoint.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/point\/MutablePoint.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/Point.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/point\/Point.java","status":"renamed"},{"patch":"","filename":"src\/java.base\/share\/classes\/sun\/security\/ec\/point\/ProjectivePoint.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/point\/ProjectivePoint.java","status":"renamed"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -179,21 +179,30 @@\n-            \/\/ Create providers which are in java.base directly\n-            if (provName.equals(\"SUN\") || provName.equals(\"sun.security.provider.Sun\")) {\n-                p = new sun.security.provider.Sun();\n-            } else if (provName.equals(\"SunRsaSign\") || provName.equals(\"sun.security.rsa.SunRsaSign\")) {\n-                p = new sun.security.rsa.SunRsaSign();\n-            } else if (provName.equals(\"SunJCE\") || provName.equals(\"com.sun.crypto.provider.SunJCE\")) {\n-                p = new com.sun.crypto.provider.SunJCE();\n-            } else if (provName.equals(\"SunJSSE\")) {\n-                p = new sun.security.ssl.SunJSSE();\n-            } else if (provName.equals(\"Apple\") || provName.equals(\"apple.security.AppleProvider\")) {\n-                \/\/ need to use reflection since this class only exists on MacOsx\n-                @SuppressWarnings(\"removal\")\n-                var tmp = AccessController.doPrivileged(new PrivilegedAction<Provider>() {\n-                    public Provider run() {\n-                        try {\n-                            Class<?> c = Class.forName(\"apple.security.AppleProvider\");\n-                            if (Provider.class.isAssignableFrom(c)) {\n-                                @SuppressWarnings(\"deprecation\")\n-                                Object tmp = c.newInstance();\n-                                return (Provider) tmp;\n-                            } else {\n+            p = switch (provName) {\n+                case \"SUN\", \"sun.security.provider.Sun\" ->\n+                    new sun.security.provider.Sun();\n+                case \"SunRsaSign\", \"sun.security.rsa.SunRsaSign\" ->\n+                    new sun.security.rsa.SunRsaSign();\n+                case \"SunJCE\", \"com.sun.crypto.provider.SunJCE\" ->\n+                    new com.sun.crypto.provider.SunJCE();\n+                case \"SunJSSE\" -> new sun.security.ssl.SunJSSE();\n+                case \"SunEC\" -> new sun.security.ec.SunEC();\n+                case \"Apple\", \"apple.security.AppleProvider\" -> {\n+                    \/\/ Reflection is needed for compile time as the class\n+                    \/\/ is not available for non-macosx systems\n+                    @SuppressWarnings(\"removal\")\n+                    var tmp = AccessController.doPrivileged(\n+                        new PrivilegedAction<Provider>() {\n+                            public Provider run() {\n+                                try {\n+                                    Class<?> c = Class.forName(\n+                                        \"apple.security.AppleProvider\");\n+                                    if (Provider.class.isAssignableFrom(c)) {\n+                                        @SuppressWarnings(\"deprecation\")\n+                                        Object tmp = c.newInstance();\n+                                        return (Provider) tmp;\n+                                    }\n+                                } catch (Exception ex) {\n+                                    if (debug != null) {\n+                                        debug.println(\"Error loading provider Apple\");\n+                                        ex.printStackTrace();\n+                                    }\n+                                }\n@@ -202,6 +211,10 @@\n-                        } catch (Exception ex) {\n-                            if (debug != null) {\n-                                debug.println(\"Error loading provider Apple\");\n-                                ex.printStackTrace();\n-                            }\n-                            return null;\n+                        });\n+                    yield tmp;\n+                }\n+                default -> {\n+                    if (isLoading) {\n+                        \/\/ because this method is synchronized, this can only\n+                        \/\/ happen if there is recursion.\n+                        if (debug != null) {\n+                            debug.println(\"Recursion loading provider: \" + this);\n+                            new Exception(\"Call trace\").printStackTrace();\n@@ -209,0 +222,1 @@\n+                        yield null;\n@@ -210,9 +224,6 @@\n-                });\n-                p = tmp;\n-            } else {\n-                if (isLoading) {\n-                    \/\/ because this method is synchronized, this can only\n-                    \/\/ happen if there is recursion.\n-                    if (debug != null) {\n-                        debug.println(\"Recursion loading provider: \" + this);\n-                        new Exception(\"Call trace\").printStackTrace();\n+                    try {\n+                        isLoading = true;\n+                        tries++;\n+                        yield doLoadProvider();\n+                    } finally {\n+                        isLoading = false;\n@@ -220,1 +231,0 @@\n-                    return null;\n@@ -222,8 +232,1 @@\n-                try {\n-                    isLoading = true;\n-                    tries++;\n-                    p = doLoadProvider();\n-                } finally {\n-                    isLoading = false;\n-                }\n-            }\n+            };\n@@ -232,1 +235,1 @@\n-        return p;\n+        return provider;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderConfig.java","additions":50,"deletions":47,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -547,2 +547,2 @@\n-                    pn.equals(\"SunJCE\") || pn.equals(\"SunJSSE\"))) ||\n-                (mn.equals(\"jdk.crypto.ec\") && pn.equals(\"SunEC\")) ||\n+                    pn.equals(\"SunJCE\") || pn.equals(\"SunJSSE\") ||\n+                    pn.equals(\"SunEC\"))) ||\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -130,9 +130,0 @@\n-grant codeBase \"jrt:\/jdk.crypto.ec\" {\n-    permission java.lang.RuntimePermission\n-                   \"accessClassInPackage.sun.security.*\";\n-    permission java.lang.RuntimePermission \"loadLibrary.sunec\";\n-    permission java.security.SecurityPermission \"putProviderProperty.SunEC\";\n-    permission java.security.SecurityPermission \"clearProviderProperties.SunEC\";\n-    permission java.security.SecurityPermission \"removeProviderProperty.SunEC\";\n-};\n-\n","filename":"src\/java.base\/share\/lib\/security\/default.policy","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,3 +35,0 @@\n-    \/\/ Depends on SunEC provider for EC related functionality\n-    requires jdk.crypto.ec;\n-\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/module-info.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,1 @@\n+@Deprecated(since=\"22\", forRemoval = true)\n@@ -35,1 +36,0 @@\n-    provides java.security.Provider with sun.security.ec.SunEC;\n","filename":"src\/jdk.crypto.ec\/share\/classes\/module-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,2 +63,1 @@\n-        layer.findModule(\"jdk.crypto.ec\")\n-            .ifPresent(m -> expected.add(\"sun.security.ec.SunEC\"));\n+        expected.add(\"sun.security.ec.SunEC\");\n","filename":"test\/jdk\/java\/lang\/SecurityManager\/CheckSecurityProvider.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -9,1 +9,1 @@\n-    jdk.crypto.ec\/sun.security.ec\n+    java.base\/sun.security.ec\n","filename":"test\/jdk\/javax\/net\/ssl\/TLS\/TEST.properties","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- *          jdk.crypto.ec\/sun.security.ec\n+ *          java.base\/sun.security.ec\n","filename":"test\/jdk\/javax\/net\/ssl\/TLS\/TestJSSEClientDefaultProtocol.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- *          jdk.crypto.ec\/sun.security.ec\n+ *          java.base\/sun.security.ec\n@@ -78,0 +78,5 @@\n+ * @run main\/othervm --limit-modules java.base\n+ *              -DSERVER_PROTOCOL=SSLv3,TLSv1,TLSv1.1,TLSv1.2,TLSv1.3\n+ *              -DCLIENT_PROTOCOL=TLSv1.3\n+ *              -DCIPHER=TLS_AES_256_GCM_SHA384\n+ *          TestJSSE\n","filename":"test\/jdk\/javax\/net\/ssl\/TLS\/TestJSSEClientProtocol.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- *          jdk.crypto.ec\/sun.security.ec\n+ *          java.base\/sun.security.ec\n","filename":"test\/jdk\/javax\/net\/ssl\/TLS\/TestJSSENoCommonProtocols.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- *          jdk.crypto.ec\/sun.security.ec\n+ *          java.base\/sun.security.ec\n@@ -63,0 +63,5 @@\n+ * @run main\/othervm --limit-modules java.base\n+ *              -DSERVER_PROTOCOL=TLSv1.2\n+ *              -DCLIENT_PROTOCOL=TLSv1.3\n+ *              -DCIPHER=TLS_AES_256_GCM_SHA384\n+ *          TestJSSE javax.net.ssl.SSLHandshakeException\n","filename":"test\/jdk\/javax\/net\/ssl\/TLS\/TestJSSEServerProtocol.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.lang.module.ModuleFinder;\n+import static jdk.test.lib.Asserts.*;\n+\n+\/*\n+ * @test\n+ * @bug 8308398\n+ * @library \/test\/lib\n+ * @summary Verify jdk.crypto.ec empty module\n+ * @run main ecModuleCheck\n+ *\/\n+\n+\/* This test verifies jdk.crypto.ec is in the image, but not resolvable.\n+ *\/\n+public class ecModuleCheck {\n+    public static void main(String[] args) throws Exception {\n+        \/\/ True if module is found in the image.\n+        assertTrue(ModuleFinder.ofSystem().find(\"jdk.crypto.ec\").isPresent(),\n+            \"jdk.crypto.ec was not found in image.\");\n+        \/\/ Since the module empty, isPresent() should be false.\n+        assertFalse(ModuleLayer.boot().findModule(\"jdk.crypto.ec\").\n+            isPresent(), \"jdk.crypto.ec shouldn't be resolvable.\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/ec\/ecModuleCheck.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- *          jdk.crypto.ec\/sun.security.ec.ed\n+ *          java.base\/sun.security.ec.ed\n","filename":"test\/jdk\/sun\/security\/ec\/ed\/TestEdOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @modules jdk.crypto.ec\/sun.security.ec\n+ * @modules java.base\/sun.security.ec\n","filename":"test\/jdk\/sun\/security\/ec\/xec\/TestXECOps.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @modules jdk.crypto.ec\/sun.security.ec\n+ * @modules java.base\/sun.security.ec\n","filename":"test\/jdk\/sun\/security\/ec\/xec\/XECIterative.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,1 @@\n- * @modules jdk.crypto.cryptoki jdk.crypto.ec\/sun.security.ec\n+ * @modules jdk.crypto.cryptoki java.base\/sun.security.ec\n","filename":"test\/jdk\/sun\/security\/pkcs11\/ec\/ReadPKCS12.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -67,1 +67,1 @@\n-        \/\/ check if jdk.crypto.ec module has been de-privileged\n+        \/\/ check if jdk.crypto.cryptoki module has been de-privileged\n@@ -69,1 +69,1 @@\n-            new CodeSource(new URL(\"jrt:\/jdk.crypto.ec\"), (CodeSigner[])null);\n+            new CodeSource(new URL(\"jrt:\/jdk.crypto.cryptoki\"), (CodeSigner[])null);\n@@ -74,1 +74,1 @@\n-        if (!p.implies(pd, new RuntimePermission(\"loadLibrary.sunec\"))) {\n+        if (!p.implies(pd, new RuntimePermission(\"loadLibrary.j2pkcs11\"))) {\n","filename":"test\/jdk\/sun\/security\/provider\/PolicyFile\/DefaultPolicy.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- *        jdk.crypto.ec\/sun.security.ec.ECKeyPairGenerator\n+ *        java.base\/sun.security.ec.ECKeyPairGenerator\n@@ -33,1 +33,3 @@\n- * @modules jdk.crypto.ec\n+ *\n+ * This test uses RSA, DSA, and EC inside this test directory, not the providers\n+ * from the jdk\n@@ -85,4 +87,1 @@\n-                + File.separator + \"patches\" + File.separator + \"java.base\"\n-                + \" -J--patch-module=jdk.crypto.ec=\"\n-                + System.getProperty(\"test.classes\")\n-                + File.separator + \"patches\" + File.separator + \"jdk.crypto.ec\";\n+                + File.separator + \"patches\" + File.separator + \"java.base\";\n","filename":"test\/jdk\/sun\/security\/tools\/keytool\/fakegen\/DefaultSignatureAlgorithm.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"","filename":"test\/jdk\/sun\/security\/tools\/keytool\/fakegen\/java.base\/sun\/security\/ec\/ECKeyPairGenerator.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/security\/tools\/keytool\/fakegen\/jdk.crypto.ec\/sun\/security\/ec\/ECKeyPairGenerator.java","status":"renamed"}]}