{"files":[{"patch":"@@ -108,0 +108,3 @@\n+        if (path.length == 0) {\n+            throw new BindException(\"server socket cannot bind to unnamed address\");\n+        }\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/UnixDomainSockets.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+    private static final byte[] emptyPath = new byte[0];\n@@ -571,0 +572,3 @@\n+        if (file.isEmpty()) {\n+            return emptyPath;\n+        }\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,0 +50,1 @@\n+    private static final byte[] emptyPath = new byte[0];\n@@ -630,0 +631,3 @@\n+        if (file.toString().length() == 0) {\n+            return emptyPath;\n+        }\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsFileSystemProvider.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8256461\n+ * @modules java.base\/sun.nio.fs\n+ * @run testng EmptySunPathForSocketFile\n+ *\/\n+\n+import java.nio.file.FileSystems;\n+import java.nio.file.Path;\n+import java.nio.file.spi.FileSystemProvider;\n+import sun.nio.fs.AbstractFileSystemProvider;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+\/**\n+ * Check that AbstractFileSystemProvider.getSunPathForSocketFile with\n+ * an empty path returns an empty byte[]\n+ *\/\n+public class EmptySunPathForSocketFile {\n+    public static void main(String[] args) throws Exception {\n+        Path path = Path.of(\"\");\n+        FileSystemProvider provider = FileSystems.getDefault().provider();\n+        byte[] bb = ((AbstractFileSystemProvider) provider).getSunPathForSocketFile(path);\n+        assertEquals(bb, new byte[0]);\n+    }\n+}\n","filename":"test\/jdk\/sun\/nio\/fs\/EmptySunPathForSocketFile.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}