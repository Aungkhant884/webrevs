{"files":[{"patch":"@@ -109,1 +109,1 @@\n-            throw new BindException(\"server socket cannot bind to unnamed address\");\n+            throw new BindException(\"Server socket cannot bind to unnamed address\");\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/UnixDomainSockets.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -161,0 +161,1 @@\n+     * If file is empty, then an empty byte[] is returned.\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/fs\/AbstractFileSystemProvider.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-    private static final byte[] emptyPath = new byte[0];\n+    private static final byte[] EMPTY_PATH = new byte[0];\n@@ -573,1 +573,1 @@\n-            return emptyPath;\n+            return EMPTY_PATH;\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystemProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -631,3 +631,0 @@\n-        if (file.toString().length() == 0) {\n-            return emptyPath;\n-        }\n@@ -635,1 +632,1 @@\n-        return s.getBytes(StandardCharsets.UTF_8);\n+        return s.isEmpty() ? emptyPath : s.getBytes(StandardCharsets.UTF_8);\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsFileSystemProvider.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"","filename":"test\/jdk\/java\/nio\/channels\/unixdomain\/EmptySunPathForSocketFile.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/jdk\/sun\/nio\/fs\/EmptySunPathForSocketFile.java","status":"renamed"}]}