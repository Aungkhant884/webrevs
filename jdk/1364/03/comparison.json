{"files":[{"patch":"@@ -119,36 +119,11 @@\n-                case INITIAL:\n-                    state = State.STATUS_LINE;\n-                    break;\n-                case STATUS_LINE:\n-                    readResumeStatusLine(input);\n-                    break;\n-                \/\/ fallthrough\n-                case STATUS_LINE_FOUND_CR:\n-                case STATUS_LINE_FOUND_LF:\n-                    readStatusLineFeed(input);\n-                    break;\n-                case STATUS_LINE_END:\n-                    maybeStartHeaders(input);\n-                    break;\n-                \/\/ fallthrough\n-                case STATUS_LINE_END_CR:\n-                case STATUS_LINE_END_LF:\n-                    maybeEndHeaders(input);\n-                    break;\n-                case HEADER:\n-                    readResumeHeader(input);\n-                    break;\n-                \/\/ fallthrough\n-                case HEADER_FOUND_CR:\n-                case HEADER_FOUND_LF:\n-                    resumeOrLF(input);\n-                    break;\n-                case HEADER_FOUND_CR_LF:\n-                    resumeOrSecondCR(input);\n-                    break;\n-                case HEADER_FOUND_CR_LF_CR:\n-                    resumeOrEndHeaders(input);\n-                    break;\n-                default:\n-                    throw new InternalError(\n-                            \"Unexpected state: \" + String.valueOf(state));\n+                case INITIAL ->                                     state = State.STATUS_LINE;\n+                case STATUS_LINE ->                                 readResumeStatusLine(input);\n+                case STATUS_LINE_FOUND_CR, STATUS_LINE_FOUND_LF ->  readStatusLineFeed(input);\n+                case STATUS_LINE_END ->                             maybeStartHeaders(input);\n+                case STATUS_LINE_END_CR, STATUS_LINE_END_LF ->      maybeEndHeaders(input);\n+                case HEADER ->                                      readResumeHeader(input);\n+                case HEADER_FOUND_CR, HEADER_FOUND_LF ->            resumeOrLF(input);\n+                case HEADER_FOUND_CR_LF ->                          resumeOrSecondCR(input);\n+                case HEADER_FOUND_CR_LF_CR ->                       resumeOrEndHeaders(input);\n+\n+                default -> throw new InternalError(\"Unexpected state: \" + state);\n@@ -164,7 +139,5 @@\n-        switch (state) {\n-            case FINISHED: return false;\n-            case STATUS_LINE_FOUND_LF: return true;\n-            case STATUS_LINE_END_LF: return true;\n-            case HEADER_FOUND_LF: return true;\n-            default: return buffer.hasRemaining();\n-        }\n+        return switch (state) {\n+            case FINISHED -> false;\n+            case STATUS_LINE_FOUND_LF, STATUS_LINE_END_LF, HEADER_FOUND_LF -> true;\n+            default -> buffer.hasRemaining();\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1HeaderParser.java","additions":16,"deletions":43,"binary":false,"changes":59,"status":"modified"},{"patch":"@@ -579,5 +579,6 @@\n-        switch(state) {\n-            case READING_HEADERS: return headersReader;\n-            case READING_BODY: return bodyReader;\n-            default: return null;\n-        }\n+        return switch (state) {\n+            case READING_HEADERS -> headersReader;\n+            case READING_BODY ->    bodyReader;\n+\n+            default -> null;\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Response.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -869,14 +869,6 @@\n-          case SettingsFrame.TYPE:\n-              handleSettings((SettingsFrame)frame);\n-              break;\n-          case PingFrame.TYPE:\n-              handlePing((PingFrame)frame);\n-              break;\n-          case GoAwayFrame.TYPE:\n-              handleGoAway((GoAwayFrame)frame);\n-              break;\n-          case WindowUpdateFrame.TYPE:\n-              handleWindowUpdate((WindowUpdateFrame)frame);\n-              break;\n-          default:\n-            protocolError(ErrorFrame.PROTOCOL_ERROR);\n+            case SettingsFrame.TYPE ->      handleSettings((SettingsFrame) frame);\n+            case PingFrame.TYPE ->          handlePing((PingFrame) frame);\n+            case GoAwayFrame.TYPE ->        handleGoAway((GoAwayFrame) frame);\n+            case WindowUpdateFrame.TYPE ->  handleWindowUpdate((WindowUpdateFrame) frame);\n+\n+            default -> protocolError(ErrorFrame.PROTOCOL_ERROR);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -479,7 +479,4 @@\n-        switch (method) {\n-            case \"GET\" :\n-            case \"HEAD\" :\n-                return true;\n-            default :\n-                return false;\n-        }\n+        return switch (method) {\n+            case \"GET\", \"HEAD\" -> true;\n+            default -> false;\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/MultiExchange.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -77,13 +77,7 @@\n-        switch (statusCode) {\n-            case 301:\n-            case 302:\n-                return orig.equals(\"POST\") ? \"GET\" : orig;\n-            case 303:\n-                return \"GET\";\n-            case 307:\n-            case 308:\n-                return orig;\n-            default:\n-                \/\/ unexpected but return orig\n-                return orig;\n-        }\n+        return switch (statusCode) {\n+            case 301, 302 ->    orig.equals(\"POST\") ? \"GET\" : orig;\n+            case 303 ->         \"GET\";\n+            case 307, 308 ->    orig;\n+\n+            default -> orig; \/\/ unexpected but return orig\n+        };\n@@ -98,1 +92,2 @@\n-        switch (statusCode) {\n+\n+        return switch (statusCode) {\n@@ -100,2 +95,0 @@\n-            case 300:\n-                return false;\n@@ -103,2 +96,0 @@\n-            case 304:\n-                return false;\n@@ -106,2 +97,0 @@\n-            case 305:\n-                return false;\n@@ -109,2 +98,1 @@\n-            case 306:\n-                return false;\n+            case 300, 304, 305, 306 -> false;\n@@ -112,3 +100,2 @@\n-            default:\n-                return true;\n-        }\n+            default -> true;\n+        };\n@@ -161,11 +148,6 @@\n-        switch (policy) {\n-            case ALWAYS:\n-                return true;\n-            case NEVER:\n-                return false;\n-            case NORMAL:\n-                return newScheme.equalsIgnoreCase(oldScheme)\n-                        || newScheme.equalsIgnoreCase(\"https\");\n-            default:\n-                throw new InternalError();\n-        }\n+        return switch (policy) {\n+            case ALWAYS -> true;\n+            case NEVER -> false;\n+            case NORMAL -> newScheme.equalsIgnoreCase(oldScheme)\n+                    || newScheme.equalsIgnoreCase(\"https\");\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/RedirectFilter.java","additions":18,"deletions":36,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -454,12 +454,5 @@\n-            case WindowUpdateFrame.TYPE:\n-                incoming_windowUpdate((WindowUpdateFrame) frame);\n-                break;\n-            case ResetFrame.TYPE:\n-                incoming_reset((ResetFrame) frame);\n-                break;\n-            case PriorityFrame.TYPE:\n-                incoming_priority((PriorityFrame) frame);\n-                break;\n-            default:\n-                String msg = \"Unexpected frame: \" + frame.toString();\n-                throw new IOException(msg);\n+            case WindowUpdateFrame.TYPE ->  incoming_windowUpdate((WindowUpdateFrame) frame);\n+            case ResetFrame.TYPE ->         incoming_reset((ResetFrame) frame);\n+            case PriorityFrame.TYPE ->      incoming_priority((PriorityFrame) frame);\n+\n+            default -> throw new IOException(\"Unexpected frame: \" + frame.toString());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":5,"deletions":12,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1024,8 +1024,4 @@\n-            case NOT_HANDSHAKING:\n-                sb.append(\" NOT_HANDSHAKING \");\n-                break;\n-            case HANDSHAKING:\n-                sb.append(\" HANDSHAKING \");\n-                break;\n-            default:\n-                throw new InternalError();\n+            case NOT_HANDSHAKING -> sb.append(\" NOT_HANDSHAKING \");\n+            case HANDSHAKING ->     sb.append(\" HANDSHAKING \");\n+\n+            default -> throw new InternalError();\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/common\/SSLFlowDelegate.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -74,7 +74,6 @@\n-        switch (flag) {\n-        case END_STREAM:\n-            return \"END_STREAM\";\n-        case PADDED:\n-            return \"PADDED\";\n-        }\n-        return super.flagAsString(flag);\n+        return switch (flag) {\n+            case END_STREAM ->  \"END_STREAM\";\n+            case PADDED ->      \"PADDED\";\n+\n+            default -> super.flagAsString(flag);\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/DataFrame.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -62,24 +62,14 @@\n-        switch (frame.type()) {\n-            case DataFrame.TYPE:\n-                return encodeDataFrame((DataFrame) frame);\n-            case HeadersFrame.TYPE:\n-                return encodeHeadersFrame((HeadersFrame) frame);\n-            case PriorityFrame.TYPE:\n-                return encodePriorityFrame((PriorityFrame) frame);\n-            case ResetFrame.TYPE:\n-                return encodeResetFrame((ResetFrame) frame);\n-            case SettingsFrame.TYPE:\n-                return encodeSettingsFrame((SettingsFrame) frame);\n-            case PushPromiseFrame.TYPE:\n-                return encodePushPromiseFrame((PushPromiseFrame) frame);\n-            case PingFrame.TYPE:\n-                return encodePingFrame((PingFrame) frame);\n-            case GoAwayFrame.TYPE:\n-                return encodeGoAwayFrame((GoAwayFrame) frame);\n-            case WindowUpdateFrame.TYPE:\n-                return encodeWindowUpdateFrame((WindowUpdateFrame) frame);\n-            case ContinuationFrame.TYPE:\n-                return encodeContinuationFrame((ContinuationFrame) frame);\n-            default:\n-                throw new UnsupportedOperationException(\"Not supported frame \"+frame.type()+\" (\"+frame.getClass().getName()+\")\");\n-        }\n+        return switch (frame.type()) {\n+            case DataFrame.TYPE ->          encodeDataFrame((DataFrame) frame);\n+            case HeadersFrame.TYPE ->       encodeHeadersFrame((HeadersFrame) frame);\n+            case PriorityFrame.TYPE ->      encodePriorityFrame((PriorityFrame) frame);\n+            case ResetFrame.TYPE ->         encodeResetFrame((ResetFrame) frame);\n+            case SettingsFrame.TYPE ->      encodeSettingsFrame((SettingsFrame) frame);\n+            case PushPromiseFrame.TYPE ->   encodePushPromiseFrame((PushPromiseFrame) frame);\n+            case PingFrame.TYPE ->          encodePingFrame((PingFrame) frame);\n+            case GoAwayFrame.TYPE ->        encodeGoAwayFrame((GoAwayFrame) frame);\n+            case WindowUpdateFrame.TYPE ->  encodeWindowUpdateFrame((WindowUpdateFrame) frame);\n+            case ContinuationFrame.TYPE ->  encodeContinuationFrame((ContinuationFrame) frame);\n+\n+            default -> throw new UnsupportedOperationException(\"Not supported frame \" + frame.type() + \" (\" + frame.getClass().getName() + \")\");\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/FramesEncoder.java","additions":14,"deletions":24,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -52,7 +52,6 @@\n-        switch (flag) {\n-            case END_HEADERS:\n-                return \"END_HEADERS\";\n-            case END_STREAM:\n-                return \"END_STREAM\";\n-        }\n-        return super.flagAsString(flag);\n+        return switch (flag) {\n+            case END_HEADERS -> \"END_HEADERS\";\n+            case END_STREAM ->  \"END_STREAM\";\n+\n+            default -> super.flagAsString(flag);\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/HeaderFrame.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -75,9 +75,7 @@\n-        switch (flag) {\n-            case END_STREAM:\n-                return \"END_STREAM\";\n-            case PADDED:\n-                return \"PADDED\";\n-            case PRIORITY:\n-                return \"PRIORITY\";\n-        }\n-        return super.flagAsString(flag);\n+        return switch (flag) {\n+            case END_STREAM ->  \"END_STREAM\";\n+            case PADDED ->      \"PADDED\";\n+            case PRIORITY ->    \"PRIORITY\";\n+\n+            default -> super.flagAsString(flag);\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/HeadersFrame.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -83,24 +83,14 @@\n-        switch (type) {\n-          case DataFrame.TYPE:\n-            return \"DATA\";\n-          case HeadersFrame.TYPE:\n-            return \"HEADERS\";\n-          case ContinuationFrame.TYPE:\n-            return \"CONTINUATION\";\n-          case ResetFrame.TYPE:\n-            return \"RESET\";\n-          case PriorityFrame.TYPE:\n-            return \"PRIORITY\";\n-          case SettingsFrame.TYPE:\n-            return \"SETTINGS\";\n-          case GoAwayFrame.TYPE:\n-            return \"GOAWAY\";\n-          case PingFrame.TYPE:\n-            return \"PING\";\n-          case PushPromiseFrame.TYPE:\n-            return \"PUSH_PROMISE\";\n-          case WindowUpdateFrame.TYPE:\n-            return \"WINDOW_UPDATE\";\n-          default:\n-            return \"UNKNOWN\";\n-        }\n+        return switch (type) {\n+            case DataFrame.TYPE ->          \"DATA\";\n+            case HeadersFrame.TYPE ->       \"HEADERS\";\n+            case ContinuationFrame.TYPE ->  \"CONTINUATION\";\n+            case ResetFrame.TYPE ->         \"RESET\";\n+            case PriorityFrame.TYPE ->      \"PRIORITY\";\n+            case SettingsFrame.TYPE ->      \"SETTINGS\";\n+            case GoAwayFrame.TYPE ->        \"GOAWAY\";\n+            case PingFrame.TYPE ->          \"PING\";\n+            case PushPromiseFrame.TYPE ->   \"PUSH_PROMISE\";\n+            case WindowUpdateFrame.TYPE ->  \"WINDOW_UPDATE\";\n+\n+            default -> \"UNKNOWN\";\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/Http2Frame.java","additions":14,"deletions":24,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -56,5 +56,4 @@\n-        switch (flag) {\n-        case ACK:\n-            return \"ACK\";\n-        }\n-        return super.flagAsString(flag);\n+        return switch (flag) {\n+            case ACK -> \"ACK\";\n+            default -> super.flagAsString(flag);\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/PingFrame.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -68,7 +68,6 @@\n-        switch (flag) {\n-            case PADDED:\n-                return \"PADDED\";\n-            case END_HEADERS:\n-                return \"END_HEADERS\";\n-        }\n-        return super.flagAsString(flag);\n+        return switch (flag) {\n+            case PADDED ->      \"PADDED\";\n+            case END_HEADERS -> \"END_HEADERS\";\n+\n+            default -> super.flagAsString(flag);\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/PushPromiseFrame.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -42,5 +42,4 @@\n-        switch (flag) {\n-        case ACK:\n-            return \"ACK\";\n-        }\n-        return super.flagAsString(flag);\n+        return switch (flag) {\n+            case ACK -> \"ACK\";\n+            default -> super.flagAsString(flag);\n+        };\n@@ -75,15 +74,10 @@\n-        switch (i+1) {\n-        case HEADER_TABLE_SIZE:\n-            return \"HEADER_TABLE_SIZE\";\n-        case ENABLE_PUSH:\n-            return \"ENABLE_PUSH\";\n-        case MAX_CONCURRENT_STREAMS:\n-            return \"MAX_CONCURRENT_STREAMS\";\n-        case INITIAL_WINDOW_SIZE:\n-            return \"INITIAL_WINDOW_SIZE\";\n-        case MAX_FRAME_SIZE:\n-            return \"MAX_FRAME_SIZE\";\n-        case MAX_HEADER_LIST_SIZE:\n-            return \"MAX_HEADER_LIST_SIZE\";\n-        }\n-        return \"unknown parameter\";\n+        return switch (i + 1) {\n+            case HEADER_TABLE_SIZE ->       \"HEADER_TABLE_SIZE\";\n+            case ENABLE_PUSH ->             \"ENABLE_PUSH\";\n+            case MAX_CONCURRENT_STREAMS ->  \"MAX_CONCURRENT_STREAMS\";\n+            case INITIAL_WINDOW_SIZE ->     \"INITIAL_WINDOW_SIZE\";\n+            case MAX_FRAME_SIZE ->          \"MAX_FRAME_SIZE\";\n+            case MAX_HEADER_LIST_SIZE ->    \"MAX_HEADER_LIST_SIZE\";\n+            \n+            default -> \"unknown parameter\";\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/frame\/SettingsFrame.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -260,20 +260,8 @@\n-            case READY:\n-                resumeReady(input);\n-                break;\n-            case INDEXED:\n-                resumeIndexed(input, action);\n-                break;\n-            case LITERAL:\n-                resumeLiteral(input, action);\n-                break;\n-            case LITERAL_WITH_INDEXING:\n-                resumeLiteralWithIndexing(input, action);\n-                break;\n-            case LITERAL_NEVER_INDEXED:\n-                resumeLiteralNeverIndexed(input, action);\n-                break;\n-            case SIZE_UPDATE:\n-                resumeSizeUpdate(input, action);\n-                break;\n-            default:\n-                throw new InternalError(\"Unexpected decoder state: \" + state);\n+            case READY ->                   resumeReady(input);\n+            case INDEXED ->                 resumeIndexed(input, action);\n+            case LITERAL ->                 resumeLiteral(input, action);\n+            case LITERAL_WITH_INDEXING ->   resumeLiteralWithIndexing(input, action);\n+            case LITERAL_NEVER_INDEXED ->   resumeLiteralNeverIndexed(input, action);\n+            case SIZE_UPDATE ->             resumeSizeUpdate(input, action);\n+\n+            default -> throw new InternalError(\"Unexpected decoder state: \" + state);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/hpack\/Decoder.java","additions":8,"deletions":20,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -52,13 +52,5 @@\n-        switch (code) {\n-            case PROTOCOL_ERROR:\n-            case NOT_CONSISTENT:\n-            case 1003:\n-            case 1009:\n-            case 1010:\n-            case 1012:  \/\/ code sent by servers\n-            case 1013:  \/\/ code sent by servers\n-            case 1014:  \/\/ code sent by servers\n-                return false;\n-            default:\n-                return true;\n-        }\n+        return switch (code) {\n+            \/\/ 1012, 1013, 1014: codes sent by servers\n+            case PROTOCOL_ERROR, NOT_CONSISTENT, 1003, 1009, 1010, 1012, 1013, 1014 -> false;\n+            default -> true;\n+        };\n@@ -87,8 +79,4 @@\n-        switch (code) {\n-            case NO_STATUS_CODE:\n-            case CLOSED_ABNORMALLY:\n-            case 1015:\n-                return false;\n-            default:\n-                return true;\n-        }\n+        return switch (code) {\n+            case NO_STATUS_CODE, CLOSED_ABNORMALLY, 1015 -> false;\n+            default -> true;\n+        };\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/websocket\/StatusCodes.java","additions":9,"deletions":21,"binary":false,"changes":30,"status":"modified"}]}