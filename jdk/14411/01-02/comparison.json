{"files":[{"patch":"@@ -4551,4 +4551,0 @@\n-     * @apiNote\n-     * Distinct classes which share a common name but have different class loaders\n-     * will have identical descriptor strings.\n-     *\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1228,6 +1228,5 @@\n-     * This is not a strict inverse of {@link #fromMethodDescriptorString fromMethodDescriptorString}\n-     * because the latter requires a suitable class loader argument.\n-     * Two distinct classes which share a common name but have different class loaders\n-     * will appear identical when viewed within descriptor strings.\n-     * In addition, the result string is not a bytecode descriptor if this\n-     * method type cannot be {@linkplain ##descriptor described nominally}.\n+     * This is not a strict inverse of {@link #fromMethodDescriptorString\n+     * fromMethodDescriptorString} which requires a method type descriptor\n+     * (JVMS {@jvms 4.3.3}) and a suitable class loader argument. Two distinct\n+     * classes which share a common name but have different class loaders will\n+     * appear identical when viewed within descriptor strings.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"}]}