{"files":[{"patch":"@@ -927,6 +927,1 @@\n-     * This is not a strict inverse of {@link #forName(String) forName(String)}.\n-     * Distinct classes which share a common name but have different class\n-     * loaders will have the identical name. {@linkplain #isPrimitive()\n-     * Primitive types}, {@linkplain #isHidden() hidden} classes, and array\n-     * classes whose element type is a hidden class or interface cannot be\n-     * discovered by {@code forName}.\n+     * Distinct class objects can have the same name but different class loaders.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,0 @@\n-import static java.lang.invoke.MethodType.fromDescriptor;\n@@ -1164,2 +1163,3 @@\n-     * Finds or creates an instance of a method type, given the spelling of its bytecode descriptor.\n-     * Convenience method for {@link #methodType(java.lang.Class, java.lang.Class[]) methodType}.\n+     * Finds or creates an instance of a method type of the given method descriptor\n+     * (JVMS {@jvms 4.3.3}). This method is a convenience method for\n+     * {@link #methodType(java.lang.Class, java.lang.Class[]) methodType}.\n@@ -1167,1 +1167,1 @@\n-     * resolved by the given loader (or if it is null, on the system class loader).\n+     * resolved by the given loader (or if it is {@code null}, on the system class loader).\n@@ -1170,4 +1170,3 @@\n-     * It is possible to encounter method types which cannot be\n-     * constructed by this method, because their component types are\n-     * not all reachable from a common class loader, or some component types\n-     * cannot be {@linkplain ##descriptor described nominally}.\n+     * It is possible to encounter method types that have valid descriptors but\n+     * cannot be constructed by this method, because their component types are\n+     * not visible from a common class loader.\n@@ -1177,1 +1176,1 @@\n-     * @param descriptor a bytecode-level type descriptor string \"(T...)T\"\n+     * @param descriptor a method descriptor string\n@@ -1179,3 +1178,3 @@\n-     * @return a method type matching the bytecode-level type descriptor\n-     * @throws NullPointerException if the string is null\n-     * @throws IllegalArgumentException if the string is not well-formed\n+     * @return a method type of the given method descriptor\n+     * @throws NullPointerException if the string is {@code null}\n+     * @throws IllegalArgumentException if the string is not a method descriptor\n@@ -1186,0 +1185,1 @@\n+     * @jvms 4.3.3 Method Descriptors\n@@ -1225,1 +1225,1 @@\n-     * Returns a descriptor string for the method type.  This method\n+     * {@return the descriptor string for this method type} This method\n@@ -1237,1 +1237,0 @@\n-     * @return the descriptor string for this method type\n@@ -1251,1 +1250,1 @@\n-     * Returns a descriptor string for this method type.\n+     * {@return the descriptor string for this method type}\n@@ -1269,1 +1268,0 @@\n-     * @return the descriptor string for this method type\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodType.java","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"}]}