{"files":[{"patch":"@@ -243,6 +243,5 @@\n-        if (t == null) {\n-            t = \"\";\n-        }\n-        TextComponentPeer peer = (TextComponentPeer)this.peer;\n-        if (peer != null) {\n-            text = peer.getText();\n+        text = (t != null) ? t : \"\";\n+        int selectionStart = getSelectionStart();\n+        int selectionEnd = getSelectionEnd();\n+        TextComponentPeer peer = (TextComponentPeer) this.peer;\n+        if (peer != null && !text.equals(peer.getText())) {\n@@ -252,6 +251,4 @@\n-            if (!t.equals(text)) {\n-                text = t;\n-                peer.setText(text);\n-            }\n-        } else {\n-            text = t;\n+            peer.setText(text);\n+        }\n+        if (selectionStart != selectionEnd) {\n+            select(selectionStart, selectionEnd);\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/TextComponent.java","additions":9,"deletions":12,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.Frame;\n+import java.awt.TextArea;\n+import java.awt.TextComponent;\n+import java.awt.TextField;\n+\n+\/**\n+ * @test\n+ * @key headful\n+ * @bug 6278172\n+ * @summary Tests that TextComponent#setText() preserves the selection\n+ *\/\n+public final class SetTextSelection {\n+\n+    private static final String LONG_TEXT = \"text field\";\n+    private static final String SHORT_TEXT = \"text\";\n+\n+    public static void main(String[] args) {\n+        testNoFrame(true);\n+        testNoFrame(false);\n+        for (int i = 0; i < 5; i++) {\n+            testFrame(true, i);\n+            testFrame(false, i);\n+        }\n+        testDisposedFrame(true);\n+        testDisposedFrame(false);\n+    }\n+\n+    private static void testNoFrame(boolean field) {\n+        TextComponent tf = field ? new TextField(LONG_TEXT) :\n+                                   new TextArea(LONG_TEXT);\n+        tf.selectAll();\n+        tf.setText(SHORT_TEXT);\n+        test(tf);\n+    }\n+\n+    private static void testDisposedFrame(boolean field) {\n+        Frame frame = new Frame();\n+        try {\n+            TextComponent tf = field ? new TextField(LONG_TEXT) :\n+                                       new TextArea(LONG_TEXT);\n+            frame.add(tf);\n+            frame.pack();\n+            tf.selectAll();\n+            frame.dispose();\n+            tf.setText(SHORT_TEXT);\n+            test(tf);\n+        } finally {\n+            frame.dispose();\n+        }\n+    }\n+\n+    private static void testFrame(boolean field, int step) {\n+        Frame frame = new Frame();\n+        try {\n+            TextComponent tf = field ? new TextField(LONG_TEXT) :\n+                                       new TextArea(LONG_TEXT);\n+            if (step == 1) {\n+                frame.pack();\n+            }\n+            frame.add(tf);\n+            if (step == 2) {\n+                frame.pack();\n+            }\n+            tf.selectAll();\n+            if (step == 3) {\n+                frame.pack();\n+            }\n+            tf.setText(SHORT_TEXT);\n+            if (step == 4) {\n+                frame.pack();\n+            }\n+            test(tf);\n+        } finally {\n+            frame.dispose();\n+        }\n+    }\n+\n+    private static void test(TextComponent tf) {\n+        String str = tf.getSelectedText();\n+        if (!str.equals(SHORT_TEXT)) {\n+            throw new RuntimeException(str);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/TextComponent\/SetTextSelection.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"}]}