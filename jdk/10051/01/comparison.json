{"files":[{"patch":"@@ -2249,1 +2249,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2289,1 +2289,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2330,1 +2330,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2371,1 +2371,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2412,1 +2412,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2453,1 +2453,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2495,1 +2495,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2531,1 +2531,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2567,1 +2567,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2603,1 +2603,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n@@ -2639,1 +2639,1 @@\n-  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  oop thread_obj = current_thread_obj_or_resolve_external_guard(thread);\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnv.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -1313,0 +1313,11 @@\n+\/\/ If (thread == NULL) then return current thread object.\n+\/\/ Otherwise return JNIHandles::resolve_external_guard(thread).\n+oop\n+JvmtiEnvBase::current_thread_obj_or_resolve_external_guard(jthread thread) {\n+  oop thread_obj = JNIHandles::resolve_external_guard(thread);\n+  if (thread == NULL) {\n+    thread_obj = get_vthread_or_thread_oop(JavaThread::current());\n+  }\n+  return thread_obj;\n+}\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -170,0 +170,4 @@\n+  \/\/ If (thread == NULL) then return current thread object.\n+  \/\/ Otherwise return JNIHandles::resolve_external_guard(thread).\n+  static oop current_thread_obj_or_resolve_external_guard(jthread thread);\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiEnvBase.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -139,0 +139,4 @@\n+\n+  if (vthread == NULL) {\n+    vthread = (jthread)JNIHandles::make_local(current_thread, JvmtiEnvBase::get_vthread_or_thread_oop(current_thread));\n+  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiExtensions.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -353,1 +353,1 @@\n-  LOG(\"Breakpoint: %s on %s thread: %s - Started\\n\", mname, virt, tname);\n+  LOG(\"\\nBreakpoint: %s on %s thread: %s - Started\\n\", mname, virt, tname);\n@@ -363,0 +363,1 @@\n+\n@@ -364,0 +365,4 @@\n+\n+    \/\/ vthread passed to callback has to refer to current thread,\n+    \/\/ so we can also test with NULL in place of vthread.\n+    test_GetSetLocal(jvmti, jni, NULL, depth, frame_count, true \/* at_event *\/);\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/GetSetLocalTest\/libGetSetLocalTest.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -159,3 +159,1 @@\n-  if (err != JVMTI_ERROR_INVALID_THREAD) {\n-    fatal(jni, \"event handler: JVMTI GetCarrierThread with NULL vthread failed to return JVMTI_ERROR_INVALID_THREAD\");\n-  }\n+  check_jvmti_status(jni, err, \"event handler: error in JVMTI GetCarrierThread\");\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/VThreadTest\/libVThreadTest.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}