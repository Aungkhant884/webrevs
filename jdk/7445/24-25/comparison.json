{"files":[{"patch":"@@ -64,1 +64,2 @@\n- * <p>The access flag constants are ordered by non-decreasing mask\n+ * @implSpec\n+ * The access flag constants are ordered by non-decreasing mask\n@@ -71,0 +72,12 @@\n+ * @apiNote\n+ * The JVM class file format has a new version defined for each new\n+ * {@linkplain Runtime.Version#feature() feature release}. A new class\n+ * file version may define new access flags or retire old ones. {@code\n+ * AccessFlag} is intended to model the set of access flags across\n+ * class file format versions. The range of versions an access flag is\n+ * recognized is not explicitly indicated in this API. See the current\n+ * <cite>The Java Virtual Machine Specification<\/cite> for\n+ * details. Unless otherwise indicated, access flags can be assumed to\n+ * be recognized in the {@linkplain Runtime#version() current\n+ * version}.\n+ *\n@@ -126,0 +139,4 @@\n+     *\n+     * @apiNote\n+     * In Java SE 8 and above, the JVM treats the {@code ACC_SUPER}\n+     * flag as set in every class file (JVMS {@jvms 4.1}).\n@@ -212,0 +229,5 @@\n+     *\n+     * @apiNote\n+     * The {@code ACC_STRICT} access flag is defined for class file\n+     * major versions 46 through 60, inclusive (JVMS {@jvms 4.6}),\n+     * corresponding to Java SE 1.2 through 16.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"}]}