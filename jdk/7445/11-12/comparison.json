{"files":[{"patch":"@@ -109,1 +109,1 @@\n-        OPEN,\n+        OPEN(AccessFlag.OPEN.mask()),\n@@ -118,1 +118,1 @@\n-        AUTOMATIC,\n+        AUTOMATIC(0 \/* no flag per above comment *\/),\n@@ -123,1 +123,1 @@\n-        SYNTHETIC,\n+        SYNTHETIC(AccessFlag.SYNTHETIC.mask()),\n@@ -128,2 +128,1 @@\n-        MANDATED;\n-    }\n+        MANDATED(AccessFlag.MANDATED.mask());\n@@ -131,0 +130,6 @@\n+        private int mask;\n+        private Modifier(int mask) {\n+            this.mask = mask;\n+        }\n+        private int mask() {return mask;}\n+    }\n@@ -222,1 +227,1 @@\n-            return AccessFlag.maskToAccessFlags(mask, AccessFlag.Location.MODULE);\n+            return AccessFlag.maskToAccessFlags(mask, AccessFlag.Location.MODULE_REQUIRES);\n@@ -1359,1 +1364,5 @@\n-        return Set.of();\n+        int mask = 0;\n+        for (var modifier : modifiers) {\n+            mask |= modifier.mask();\n+        }\n+        return AccessFlag.maskToAccessFlags(mask, AccessFlag.Location.MODULE);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/module\/ModuleDescriptor.java","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -43,2 +43,2 @@\n- * {@jvms 4.7.31}) and some access flags have no corresponding\n- * modifier, such as {@linkplain SYNTHETIC synthetic}\n+ * {@jvms 4.7.31}) and some access flags have no corresponding \n+* modifier, such as {@linkplain SYNTHETIC synthetic}.\n@@ -52,1 +52,2 @@\n- * parameters), and {@jvms 4.7.25} (module flags and requires flags).\n+ * parameters), and {@jvms 4.7.25} (module flags and requires,\n+ * exports, and opens flags).\n@@ -72,0 +73,1 @@\n+ * @see java.lang.module.ModuleDescriptor.Requires.Modifier\n@@ -74,1 +76,0 @@\n- * @see java.lang.module.ModuleDescriptor.Requires.Modifier\n@@ -302,1 +303,4 @@\n-     * <em>Just stub-out constant descriptions for now<\/em>.\n+     *\n+     * Note that since these locations represent class file structures\n+     * rather than language structures many language structures, such\n+     * as constructors and interfaces, are <em>not<\/em> present.\n@@ -392,59 +396,0 @@\n-\n-    \/\/ -------------------------------------------------------------\n-\n-    \/\/ Future utilities and static factories of this enum class will\n-    \/\/ be written using the information below, copied from Modifier\n-    \/\/ for bootstrapping.\n-\n-    \/\/ \/**\n-    \/\/ * The Java source modifiers that can be applied to a class.\n-    \/\/ * @jls 8.1.1 Class Modifiers\n-    \/\/ *\/\n-    \/\/ private static final int CLASS_MODIFIERS =\n-    \/\/ Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE |\n-    \/\/ Modifier.ABSTRACT | Modifier.STATIC | Modifier.FINAL |\n-    \/\/ Modifier.STRICT;\n-\n-    \/\/ \/**\n-    \/\/ * The Java source modifiers that can be applied to an interface.\n-    \/\/ * @jls 9.1.1 Interface Modifiers\n-    \/\/ *\/\n-    \/\/ private static final int INTERFACE_MODIFIERS =\n-    \/\/ Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE |\n-    \/\/ Modifier.ABSTRACT | Modifier.STATIC | Modifier.STRICT;\n-\n-\n-    \/\/ \/**\n-    \/\/ * The Java source modifiers that can be applied to a constructor.\n-    \/\/ * @jls 8.8.3 Constructor Modifiers\n-    \/\/ *\/\n-    \/\/ private static final int CONSTRUCTOR_MODIFIERS =\n-    \/\/ Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE;\n-\n-    \/\/ \/**\n-    \/\/ * The Java source modifiers that can be applied to a method.\n-    \/\/ * @jls 8.4.3 Method Modifiers\n-    \/\/ *\/\n-    \/\/ private static final int METHOD_MODIFIERS =\n-    \/\/ Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE |\n-    \/\/ Modifier.ABSTRACT | Modifier.STATIC | Modifier.FINAL |\n-    \/\/ Modifier.SYNCHRONIZED | Modifier.NATIVE | Modifier.STRICT;\n-\n-    \/\/ \/**\n-    \/\/ * The Java source modifiers that can be applied to a field.\n-    \/\/ * @jls 8.3.1 Field Modifiers\n-    \/\/ *\/\n-    \/\/ private static final int FIELD_MODIFIERS =\n-    \/\/ Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE |\n-    \/\/ Modifier.STATIC | Modifier.FINAL | Modifier.TRANSIENT |\n-    \/\/ Modifier.VOLATILE;\n-\n-    \/\/ \/**\n-    \/\/ * The Java source modifiers that can be applied to a method or constructor parameter.\n-    \/\/ * @jls 8.4.1 Formal Parameters\n-    \/\/ *\/\n-    \/\/ private static final int PARAMETER_MODIFIERS =\n-    \/\/ Modifier.FINAL;\n-\n-    \/\/ static final int ACCESS_MODIFIERS =\n-    \/\/ Modifier.PUBLIC | Modifier.PROTECTED | Modifier.PRIVATE;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":9,"deletions":64,"binary":false,"changes":73,"status":"modified"}]}