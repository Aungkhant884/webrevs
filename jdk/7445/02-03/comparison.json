{"files":[{"patch":"@@ -196,1 +196,1 @@\n-     * {@return corresponding integer mask for the flag; 0 if none}\n+     * {@return the corresponding integer mask for the access flag}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/AccessFlag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -221,0 +221,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Executable.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -221,0 +221,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Field.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -257,0 +257,1 @@\n+     * @see AccessFlag#PUBLIC\n@@ -263,0 +264,1 @@\n+     * @see AccessFlag#PRIVATE\n@@ -269,0 +271,1 @@\n+     * @see AccessFlag#PROTECTED\n@@ -275,0 +278,1 @@\n+     * @see AccessFlag#STATIC\n@@ -281,0 +285,1 @@\n+     * @see AccessFlag#FINAL\n@@ -287,0 +292,1 @@\n+     * @see AccessFlag#SYNCHRONIZED\n@@ -293,0 +299,1 @@\n+     * @see AccessFlag#VOLATILE\n@@ -299,0 +306,1 @@\n+     * @see AccessFlag#TRANSIENT\n@@ -305,0 +313,1 @@\n+     * @see AccessFlag#NATIVE\n@@ -311,0 +320,1 @@\n+     * @see AccessFlag#INTERFACE\n@@ -317,0 +327,1 @@\n+     * @see AccessFlag#ABSTRACT\n@@ -323,0 +334,1 @@\n+     * @see AccessFlag#STRICT\n","filename":"src\/java.base\/share\/classes\/java\/lang\/reflect\/Modifier.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8266670\n+ * @summary Basic tests of AccessFlag\n+ *\/\n+\n+import java.lang.reflect.AccessFlag;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n+\n+public class BasicAccessFlagTest {\n+    public static void main(String... args) throws Exception {\n+        testSourceModifiers();\n+    }\n+\n+    private static void testSourceModifiers() throws Exception {\n+        Class<?> modifierClass = Modifier.class;\n+\n+        for(AccessFlag accessFlag : AccessFlag.values()) {\n+            if (accessFlag.sourceModifier()) {\n+                \/\/ Check for consistency\n+                Field f = modifierClass.getField(accessFlag.name());\n+                if (accessFlag.mask() != f.getInt(null) ) {\n+                    throw new RuntimeException(\"Unexpected mask for \" +\n+                                               accessFlag);\n+                }\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/reflect\/AccessFlag\/BasicAccessFlagTest.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"}]}