{"files":[{"patch":"@@ -2385,2 +2385,0 @@\n-  __ cmpdi(CCR0, obj, 0);\n-\n@@ -2398,1 +2396,0 @@\n-    __ bne(CCR0, not_null);\n@@ -2401,0 +2398,2 @@\n+    __ cmpdi(CCR0, obj, 0);\n+    __ bne(CCR0, not_null);\n@@ -2406,0 +2405,10 @@\n+\n+    Label update_done;\n+    Register recv = klass_RInfo;\n+    __ load_klass(recv, obj);\n+    type_profile_helper(mdo, mdo_offset_bias, md, data, recv, Rtmp1, &update_done);\n+    const int slot_offset = md->byte_offset_of_slot(data, CounterData::count_offset()) - mdo_offset_bias;\n+    __ ld(Rtmp1, slot_offset, mdo);\n+    __ addi(Rtmp1, Rtmp1, DataLayout::counter_increment);\n+    __ std(Rtmp1, slot_offset, mdo);\n+    __ bind(update_done);\n@@ -2407,0 +2416,1 @@\n+    __ cmpdi(CCR0, obj, 0);\n@@ -2419,4 +2429,0 @@\n-  Label profile_cast_failure, failure_restore_obj, profile_cast_success;\n-  Label *failure_target = should_profile ? &profile_cast_failure : failure;\n-  Label *success_target = should_profile ? &profile_cast_success : success;\n-\n@@ -2426,7 +2432,2 @@\n-    if (should_profile) {\n-      __ bne(CCR0, *failure_target);\n-      \/\/ Fall through to success case.\n-    } else {\n-      __ beq(CCR0, *success);\n-      \/\/ Fall through to failure case.\n-    }\n+    __ beq(CCR0, *success);\n+    \/\/ Fall through to failure case.\n@@ -2440,2 +2441,2 @@\n-      __ check_klass_subtype_fast_path(klass_RInfo, k_RInfo, Rtmp1, R0, (need_slow_path ? success_target : nullptr),\n-                                       failure_target, nullptr, RegisterOrConstant(k->super_check_offset()));\n+      __ check_klass_subtype_fast_path(klass_RInfo, k_RInfo, Rtmp1, R0, (need_slow_path ? success : nullptr),\n+                                       failure, nullptr, RegisterOrConstant(k->super_check_offset()));\n@@ -2444,1 +2445,1 @@\n-      __ check_klass_subtype_fast_path(klass_RInfo, k_RInfo, Rtmp1, R0, success_target, failure_target);\n+      __ check_klass_subtype_fast_path(klass_RInfo, k_RInfo, Rtmp1, R0, success, failure);\n@@ -2447,1 +2448,1 @@\n-      if (!should_profile) { __ b(*success); }\n+      __ b(*success);\n@@ -2470,1 +2471,1 @@\n-        __ bne(CCR0, *failure_target);\n+        __ bne(CCR0, *failure);\n@@ -2472,1 +2473,1 @@\n-        \/\/ Fall through to success case.\n+        __ b(*success);\n@@ -2480,18 +2481,0 @@\n-  if (should_profile) {\n-    Register mdo = k_RInfo, recv = klass_RInfo;\n-    assert_different_registers(mdo, recv, Rtmp1);\n-    __ bind(profile_cast_success);\n-    metadata2reg(md->constant_encoding(), mdo);\n-    __ add_const_optimized(mdo, mdo, mdo_offset_bias, R0);\n-    type_profile_helper(mdo, mdo_offset_bias, md, data, recv, Rtmp1, success);\n-    __ b(*success);\n-\n-    \/\/ Cast failure case.\n-    __ bind(profile_cast_failure);\n-    metadata2reg(md->constant_encoding(), mdo);\n-    __ add_const_optimized(mdo, mdo, mdo_offset_bias, R0);\n-    __ ld(Rtmp1, md->byte_offset_of_slot(data, CounterData::count_offset()) - mdo_offset_bias, mdo);\n-    __ addi(Rtmp1, Rtmp1, -DataLayout::counter_increment);\n-    __ std(Rtmp1, md->byte_offset_of_slot(data, CounterData::count_offset()) - mdo_offset_bias, mdo);\n-  }\n-\n@@ -2523,2 +2506,0 @@\n-    Label profile_cast_success, failure, done;\n-    Label *success_target = should_profile ? &profile_cast_success : &done;\n@@ -2526,1 +2507,2 @@\n-    __ cmpdi(CCR0, value, 0);\n+    Label done;\n+\n@@ -2529,1 +2511,0 @@\n-      __ bne(CCR0, not_null);\n@@ -2534,0 +2515,2 @@\n+      __ cmpdi(CCR0, value, 0);\n+      __ bne(CCR0, not_null);\n@@ -2539,0 +2522,10 @@\n+\n+      Label update_done;\n+      Register recv = klass_RInfo;\n+      __ load_klass(recv, value);\n+      type_profile_helper(mdo, mdo_offset_bias, md, data, recv, Rtmp1, &update_done);\n+      const int slot_offset = md->byte_offset_of_slot(data, CounterData::count_offset()) - mdo_offset_bias;\n+      __ ld(Rtmp1, slot_offset, mdo);\n+      __ addi(Rtmp1, Rtmp1, DataLayout::counter_increment);\n+      __ std(Rtmp1, slot_offset, mdo);\n+      __ bind(update_done);\n@@ -2540,0 +2533,1 @@\n+      __ cmpdi(CCR0, value, 0);\n@@ -2553,1 +2547,1 @@\n-    __ check_klass_subtype_fast_path(klass_RInfo, k_RInfo, Rtmp1, R0, success_target, &failure, nullptr);\n+    __ check_klass_subtype_fast_path(klass_RInfo, k_RInfo, Rtmp1, R0, &done, op->stub()->entry(), nullptr);\n@@ -2561,26 +2555,1 @@\n-    if (!should_profile) {\n-      __ beq(CCR0, done);\n-      __ bind(failure);\n-    } else {\n-      __ bne(CCR0, failure);\n-      \/\/ Fall through to the success case.\n-\n-      Register mdo  = klass_RInfo, recv = k_RInfo, tmp1 = Rtmp1;\n-      assert_different_registers(value, mdo, recv, tmp1);\n-      __ bind(profile_cast_success);\n-      metadata2reg(md->constant_encoding(), mdo);\n-      __ add_const_optimized(mdo, mdo, mdo_offset_bias, R0);\n-      __ load_klass(recv, value);\n-      type_profile_helper(mdo, mdo_offset_bias, md, data, recv, tmp1, &done);\n-      __ b(done);\n-\n-      \/\/ Cast failure case.\n-      __ bind(failure);\n-      metadata2reg(md->constant_encoding(), mdo);\n-      __ add_const_optimized(mdo, mdo, mdo_offset_bias, R0);\n-      Address data_addr(mdo, md->byte_offset_of_slot(data, CounterData::count_offset()) - mdo_offset_bias);\n-      __ ld(tmp1, md->byte_offset_of_slot(data, CounterData::count_offset()) - mdo_offset_bias, mdo);\n-      __ addi(tmp1, tmp1, -DataLayout::counter_increment);\n-      __ std(tmp1, md->byte_offset_of_slot(data, CounterData::count_offset()) - mdo_offset_bias, mdo);\n-    }\n-    __ b(*stub->entry());\n+    __ bc_far_optimized(Assembler::bcondCRbiIs0, __ bi0(CCR0, Assembler::equal), *stub->entry());\n","filename":"src\/hotspot\/cpu\/ppc\/c1_LIRAssembler_ppc.cpp","additions":38,"deletions":69,"binary":false,"changes":107,"status":"modified"},{"patch":"@@ -246,1 +246,0 @@\n-  void profile_typecheck_failed(Register Rscratch1, Register Rscratch2);\n@@ -251,2 +250,2 @@\n-  void record_klass_in_profile(Register receiver, Register scratch1, Register scratch2, bool is_virtual_call);\n-  void record_klass_in_profile_helper(Register receiver, Register scratch1, Register scratch2, int start_row, Label& done, bool is_virtual_call);\n+  void record_klass_in_profile(Register receiver, Register scratch1, Register scratch2);\n+  void record_klass_in_profile_helper(Register receiver, Register scratch1, Register scratch2, int start_row, Label& done);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -586,1 +586,0 @@\n-  profile_typecheck_failed(Rtmp1, Rtmp2);\n@@ -1537,1 +1536,1 @@\n-  record_klass_in_profile(Rreceiver, Rscratch1, Rscratch2, true);\n+  record_klass_in_profile(Rreceiver, Rscratch1, Rscratch2);\n@@ -1557,1 +1556,1 @@\n-      record_klass_in_profile(Rklass, Rscratch1, Rscratch2, false);\n+      record_klass_in_profile(Rklass, Rscratch1, Rscratch2);\n@@ -1567,18 +1566,0 @@\n-void InterpreterMacroAssembler::profile_typecheck_failed(Register Rscratch1, Register Rscratch2) {\n-  if (ProfileInterpreter && TypeProfileCasts) {\n-    Label profile_continue;\n-\n-    \/\/ If no method data exists, go to profile_continue.\n-    test_method_data_pointer(profile_continue);\n-\n-    int count_offset = in_bytes(CounterData::count_offset());\n-    \/\/ Back up the address, since we have already bumped the mdp.\n-    count_offset -= in_bytes(VirtualCallData::virtual_call_data_size());\n-\n-    \/\/ *Decrement* the counter. We expect to see zero or small negatives.\n-    increment_mdp_data_at(count_offset, Rscratch1, Rscratch2, true);\n-\n-    bind (profile_continue);\n-  }\n-}\n-\n@@ -1690,2 +1671,1 @@\n-                                                        Register Rscratch1, Register Rscratch2,\n-                                                        bool is_virtual_call) {\n+                                                        Register Rscratch1, Register Rscratch2) {\n@@ -1696,1 +1676,1 @@\n-  record_klass_in_profile_helper(Rreceiver, Rscratch1, Rscratch2, 0, done, is_virtual_call);\n+  record_klass_in_profile_helper(Rreceiver, Rscratch1, Rscratch2, 0, done);\n@@ -1702,7 +1682,2 @@\n-                                        int start_row, Label& done, bool is_virtual_call) {\n-  if (TypeProfileWidth == 0) {\n-    if (is_virtual_call) {\n-      increment_mdp_data_at(in_bytes(CounterData::count_offset()), scratch1, scratch2);\n-    }\n-    return;\n-  }\n+                                        int start_row, Label& done) {\n+  if (TypeProfileWidth == 0) return;\n@@ -1738,13 +1713,8 @@\n-        if (is_virtual_call) {\n-          \/\/ Scratch1 contains test_out from test_mdp_data_at.\n-          cmpdi(CCR0, scratch1, 0);\n-          beq(CCR0, found_null);\n-          \/\/ Receiver did not match any saved receiver and there is no empty row for it.\n-          \/\/ Increment total counter to indicate polymorphic case.\n-          increment_mdp_data_at(in_bytes(CounterData::count_offset()), scratch1, scratch2);\n-          b(done);\n-          bind(found_null);\n-        } else {\n-          cmpdi(CCR0, scratch1, 0);\n-          bne(CCR0, done);\n-        }\n+        \/\/ Scratch1 contains test_out from test_mdp_data_at.\n+        cmpdi(CCR0, scratch1, 0);\n+        beq(CCR0, found_null);\n+        \/\/ Receiver did not match any saved receiver and there is no empty row for it.\n+        \/\/ Increment total counter to indicate polymorphic case.\n+        increment_mdp_data_at(in_bytes(CounterData::count_offset()), scratch1, scratch2);\n+        b(done);\n+        bind(found_null);\n@@ -1758,1 +1728,1 @@\n-      record_klass_in_profile_helper(receiver, scratch1, scratch2, start_row + 1, done, is_virtual_call);\n+      record_klass_in_profile_helper(receiver, scratch1, scratch2, start_row + 1, done);\n","filename":"src\/hotspot\/cpu\/ppc\/interp_masm_ppc_64.cpp","additions":15,"deletions":45,"binary":false,"changes":60,"status":"modified"}]}