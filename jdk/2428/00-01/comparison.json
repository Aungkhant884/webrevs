{"files":[{"patch":"@@ -253,1 +253,1 @@\n-  if (num_omitted > 1) {\n+  if (num_omitted > 0) {\n@@ -270,2 +270,6 @@\n-    \/\/ Don't report if size is too small\n-    if (amount_in_current_scale(malloc_site->size()) == 0) {\n+    \/\/ Don't report free sites; does not count toward omitted count.\n+    if (malloc_site->size() == 0) {\n+      continue;\n+    }\n+    \/\/ Don't report if site has allocated less than one unit of whatever our scale is\n+    if (scale() > 1 && amount_in_current_scale(malloc_site->size()) == 0) {\n@@ -297,2 +301,6 @@\n-    \/\/ Don't report if size is too small\n-    if (amount_in_current_scale(virtual_memory_site->reserved()) == 0) {\n+    \/\/ Don't report free sites; does not count toward omitted count.\n+    if (virtual_memory_site->reserved() == 0) {\n+      continue;\n+    }\n+    \/\/ Don't report if site has reserved less than one unit of whatever our scale is\n+    if (scale() > 1 && amount_in_current_scale(virtual_memory_site->reserved()) == 0) {\n","filename":"src\/hotspot\/share\/services\/memReporter.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -42,3 +42,3 @@\n-  size_t        _scale;  \/\/ report in this scale\n-  outputStream* _output; \/\/ destination\n-\n+  const size_t        _scale;  \/\/ report in this scale\n+  outputStream* const _output; \/\/ destination\n+  static const size_t default_scale = K;\n@@ -46,4 +46,4 @@\n-  MemReporterBase(outputStream* out = NULL, size_t scale = K)\n-    : _scale(scale) {\n-    _output = (out == NULL) ? tty : out;\n-  }\n+  MemReporterBase(outputStream* out = NULL, size_t scale = 0) :\n+    _scale(scale == 0 ? default_scale : scale),\n+    _output(out == NULL ? tty : out)\n+  {}\n@@ -106,1 +106,1 @@\n-    size_t scale = K) : MemReporterBase(output, scale),\n+    size_t scale = 0) : MemReporterBase(output, scale),\n@@ -131,1 +131,1 @@\n-  MemDetailReporter(MemBaseline& baseline, outputStream* output, size_t scale = K) :\n+  MemDetailReporter(MemBaseline& baseline, outputStream* output, size_t scale = 0) :\n@@ -168,1 +168,1 @@\n-    outputStream* output, size_t scale = K) : MemReporterBase(output, scale),\n+    outputStream* output, size_t scale = 0) : MemReporterBase(output, scale),\n@@ -207,1 +207,1 @@\n-    outputStream* output, size_t scale = K) :\n+    outputStream* output, size_t scale = 0) :\n","filename":"src\/hotspot\/share\/services\/memReporter.hpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -173,0 +173,6 @@\n+\/\/ Make a final report or report for hs_err file.\n+void MemTracker::error_report(outputStream* output) {\n+  if (tracking_level() >= NMT_summary) {\n+    report(true, output, K);  \/\/ just print summary for error case.\n+  }\n+}\n@@ -184,1 +190,3 @@\n-      report(level == NMT_summary, output);\n+      \/\/ Print in whatever level we gave; print with scale=1 to use this\n+      \/\/ final report to find leaks.\n+      report(level == NMT_summary, output, 1);\n@@ -189,1 +197,1 @@\n-void MemTracker::report(bool summary_only, outputStream* output) {\n+void MemTracker::report(bool summary_only, outputStream* output, size_t scale) {\n@@ -194,1 +202,1 @@\n-      MemSummaryReporter rpt(baseline, output);\n+      MemSummaryReporter rpt(baseline, output, scale);\n@@ -197,1 +205,1 @@\n-      MemDetailReporter rpt(baseline, output);\n+      MemDetailReporter rpt(baseline, output, scale);\n@@ -202,1 +210,1 @@\n-      MetaspaceUtils::print_basic_report(output, K);\n+      MetaspaceUtils::print_basic_report(output, scale);\n","filename":"src\/hotspot\/share\/services\/memTracker.cpp","additions":13,"deletions":5,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -290,6 +290,1 @@\n-  static void error_report(outputStream* output) {\n-    if (tracking_level() >= NMT_summary) {\n-      report(true, output);  \/\/ just print summary for error case.\n-    }\n-   }\n-\n+  static void error_report(outputStream* output);\n@@ -311,1 +306,1 @@\n-  static void report(bool summary_only, outputStream* output);\n+  static void report(bool summary_only, outputStream* output, size_t scale);\n","filename":"src\/hotspot\/share\/services\/memTracker.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"}]}