{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.constant.ConstantDescs;\n@@ -101,0 +102,3 @@\n+    private static final ClassDesc CD_Foo = ClassDesc.of(\"Foo\");\n+    private static final ClassDesc CD_Bar = ClassDesc.of(\"Bar\");\n+\n@@ -104,1 +108,1 @@\n-                Map.of(ClassDesc.of(\"Foo\"), ClassDesc.of(\"Bar\")));\n+                Map.of(CD_Foo, CD_Bar));\n@@ -210,1 +214,1 @@\n-                                            && !\"<init>\".equals(mm.methodName().stringValue())\n+                                            && !ConstantDescs.INIT_NAME.equals(mm.methodName().stringValue())\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/components\/snippet-files\/PackageSnippets.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import java.util.ArrayDeque;\n@@ -33,2 +34,0 @@\n-import java.util.ArrayDeque;\n-import java.util.LinkedList;\n@@ -128,0 +127,8 @@\n+    private static final ClassDesc CD_Hello = ClassDesc.of(\"Hello\");\n+    private static final ClassDesc CD_Foo = ClassDesc.of(\"Foo\");\n+    private static final ClassDesc CD_Bar = ClassDesc.of(\"Bar\");\n+    private static final ClassDesc CD_System = ClassDesc.of(\"java.lang.System\");\n+    private static final ClassDesc CD_PrintStream = ClassDesc.of(\"java.io.PrintStream\");\n+    private static final MethodTypeDesc MTD_void_StringArray = MethodTypeDesc.of(ConstantDescs.CD_void, ConstantDescs.CD_String.arrayType());\n+    private static final MethodTypeDesc MTD_void_String = MethodTypeDesc.of(ConstantDescs.CD_void, ConstantDescs.CD_String);\n+\n@@ -130,1 +137,1 @@\n-        byte[] bytes = Classfile.of().build(ClassDesc.of(\"Hello\"), cb -> {\n+        byte[] bytes = Classfile.of().build(CD_Hello, cb -> {\n@@ -132,1 +139,1 @@\n-            cb.withMethod(\"<init>\", MethodTypeDesc.of(ConstantDescs.CD_void), Classfile.ACC_PUBLIC,\n+            cb.withMethod(ConstantDescs.INIT_NAME, ConstantDescs.MTD_void, Classfile.ACC_PUBLIC,\n@@ -135,2 +142,2 @@\n-                                        .invokespecial(ConstantDescs.CD_Object, \"<init>\",\n-                                                       MethodTypeDesc.of(ConstantDescs.CD_void))\n+                                        .invokespecial(ConstantDescs.CD_Object, ConstantDescs.INIT_NAME,\n+                                                       ConstantDescs.MTD_void)\n@@ -140,1 +147,1 @@\n-              .withMethod(\"main\", MethodTypeDesc.of(ConstantDescs.CD_void, ConstantDescs.CD_String.arrayType()),\n+              .withMethod(\"main\", MTD_void_StringArray,\n@@ -144,1 +151,1 @@\n-                                  b -> b.getstatic(ClassDesc.of(\"java.lang.System\"), \"out\", ClassDesc.of(\"java.io.PrintStream\"))\n+                                  b -> b.getstatic(CD_System, \"out\", CD_PrintStream)\n@@ -146,2 +153,1 @@\n-                                        .invokevirtual(ClassDesc.of(\"java.io.PrintStream\"), \"println\",\n-                                                       MethodTypeDesc.of(ConstantDescs.CD_void, ConstantDescs.CD_String))\n+                                        .invokevirtual(CD_PrintStream, \"println\", MTD_void_String)\n@@ -185,1 +191,1 @@\n-                        b.invokeInstruction(i.opcode(), ClassDesc.of(\"Bar\"), i.name().stringValue(), i.typeSymbol(), i.isInterface());\n+                        b.invokeInstruction(i.opcode(), CD_Bar, i.name().stringValue(), i.typeSymbol(), i.isInterface());\n@@ -195,1 +201,1 @@\n-                b.getstatic(ClassDesc.of(\"java.lang.System\"), \"out\", ClassDesc.of(\"java.io.PrintStream\"))\n+                b.getstatic(CD_System, \"out\", CD_PrintStream)\n@@ -197,2 +203,1 @@\n-                 .invokevirtual(ClassDesc.of(\"java.io.PrintStream\"), \"println\",\n-                                MethodTypeDesc.of(ConstantDescs.CD_void, ConstantDescs.CD_String));\n+                 .invokevirtual(CD_PrintStream, \"println\", MTD_void_String);\n@@ -220,1 +225,1 @@\n-                                                              codeBuilder.invokeInstruction(i.opcode(), ClassDesc.of(\"Bar\"),\n+                                                              codeBuilder.invokeInstruction(i.opcode(), CD_Bar,\n@@ -306,1 +311,1 @@\n-                                            && !\"<init>\".equals(mm.methodName().stringValue())\n+                                            && !ConstantDescs.INIT_NAME.equals(mm.methodName().stringValue())\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/classfile\/snippet-files\/PackageSnippets.java","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -121,0 +121,2 @@\n+    private static final MethodTypeDesc MTD_StringArray = MethodTypeDesc.of(CD_String.arrayType());\n+    private static final MethodTypeDesc MTD_SystemModules = MethodTypeDesc.of(CD_SYSTEM_MODULES);\n@@ -519,0 +521,12 @@\n+        private static final ClassDesc CD_Map_Entry = ClassDesc.ofInternalName(\"java\/util\/Map$Entry\");\n+        private static final MethodTypeDesc MTD_boolean = MethodTypeDesc.of(CD_boolean);\n+        private static final MethodTypeDesc MTD_ModuleDescriptorArray = MethodTypeDesc.of(CD_MODULE_DESCRIPTOR.arrayType());\n+        private static final MethodTypeDesc MTD_ModuleTargetArray = MethodTypeDesc.of(CD_MODULE_TARGET.arrayType());\n+        private static final MethodTypeDesc MTD_void_String = MethodTypeDesc.of(CD_void, CD_String);\n+        private static final MethodTypeDesc MTD_void_int = MethodTypeDesc.of(CD_void, CD_int);\n+        private static final MethodTypeDesc MTD_ModuleHashesArray = MethodTypeDesc.of(CD_MODULE_HASHES.arrayType());\n+        private static final MethodTypeDesc MTD_ModuleResolutionArray = MethodTypeDesc.of(CD_MODULE_RESOLUTION.arrayType());\n+        private static final MethodTypeDesc MTD_Map = MethodTypeDesc.of(CD_Map);\n+        private static final MethodTypeDesc MTD_MapEntry_Object_Object = MethodTypeDesc.of(CD_Map_Entry, CD_Object, CD_Object);\n+        private static final MethodTypeDesc MTD_Map_MapEntryArray = MethodTypeDesc.of(CD_Map, CD_Map_Entry.arrayType());\n+        private static final MethodTypeDesc MTD_Set_ObjectArray = MethodTypeDesc.of(CD_Set, CD_Object.arrayType());\n@@ -619,2 +633,2 @@\n-                    \"<init>\",\n-                    MethodTypeDesc.of(CD_void),\n+                    INIT_NAME,\n+                    MTD_void,\n@@ -624,2 +638,2 @@\n-                                             \"<init>\",\n-                                             MethodTypeDesc.of(CD_void))\n+                                             INIT_NAME,\n+                                             MTD_void)\n@@ -641,1 +655,1 @@\n-                    MethodTypeDesc.of(CD_boolean),\n+                    MTD_boolean,\n@@ -659,1 +673,1 @@\n-                    MethodTypeDesc.of(CD_boolean),\n+                    MTD_boolean,\n@@ -671,1 +685,1 @@\n-                    MethodTypeDesc.of(CD_MODULE_DESCRIPTOR.arrayType()),\n+                    MTD_ModuleDescriptorArray,\n@@ -696,1 +710,1 @@\n-                    MethodTypeDesc.of(CD_MODULE_TARGET.arrayType()),\n+                    MTD_ModuleTargetArray,\n@@ -729,2 +743,2 @@\n-                                                  \"<init>\",\n-                                                  MethodTypeDesc.of(CD_void, CD_String));\n+                                                  INIT_NAME,\n+                                                  MTD_void_String);\n@@ -747,1 +761,1 @@\n-                    MethodTypeDesc.of(CD_MODULE_HASHES.arrayType()),\n+                    MTD_ModuleHashesArray,\n@@ -774,1 +788,1 @@\n-                    MethodTypeDesc.of(CD_MODULE_RESOLUTION.arrayType()),\n+                    MTD_ModuleResolutionArray,\n@@ -790,2 +804,2 @@\n-                                                  \"<init>\",\n-                                                  MethodTypeDesc.of(CD_void, CD_int))\n+                                                  INIT_NAME,\n+                                                  MTD_void_int)\n@@ -825,1 +839,1 @@\n-                    MethodTypeDesc.of(CD_Map),\n+                    MTD_Map,\n@@ -855,1 +869,1 @@\n-                           .anewarray(ClassDesc.ofInternalName(\"java\/util\/Map$Entry\"));\n+                           .anewarray(CD_Map_Entry);\n@@ -874,2 +888,0 @@\n-                            MethodTypeDesc desc = MethodTypeDesc.ofDescriptor(\n-                                    \"(Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/util\/Map$Entry;\");\n@@ -878,1 +890,1 @@\n-                                             desc,\n+                                             MTD_MapEntry_Object_Object,\n@@ -887,2 +899,1 @@\n-                                         MethodTypeDesc.ofDescriptor(\n-                                                 \"([Ljava\/util\/Map$Entry;)Ljava\/util\/Map;\"),\n+                                         MTD_Map_MapEntryArray,\n@@ -915,2 +926,1 @@\n-                                 MethodTypeDesc.ofDescriptor(\n-                                         \"([Ljava\/lang\/Object;)Ljava\/util\/Set;\"),\n+                                 MTD_Set_ObjectArray,\n@@ -971,0 +981,3 @@\n+            static final MethodTypeDesc MTD_void_String = MethodTypeDesc.of(CD_void, CD_String);\n+            static final MethodTypeDesc MTD_ModuleDescriptor_int = MethodTypeDesc.of(CD_MODULE_DESCRIPTOR, CD_int);\n+            static final MethodTypeDesc MTD_List_ObjectArray = MethodTypeDesc.of(CD_List, CD_Object.arrayType());\n@@ -1023,2 +1036,2 @@\n-                                  \"<init>\",\n-                                  MethodTypeDesc.of(CD_void, CD_String))\n+                                  INIT_NAME,\n+                                  MTD_void_String)\n@@ -1060,1 +1073,1 @@\n-                                  MethodTypeDesc.of(CD_MODULE_DESCRIPTOR, CD_int))\n+                                  MTD_ModuleDescriptor_int)\n@@ -1286,2 +1299,1 @@\n-                                 MethodTypeDesc.ofDescriptor(\n-                                        \"([Ljava\/lang\/Object;)Ljava\/util\/List;\"),\n+                                 MTD_List_ObjectArray,\n@@ -1346,0 +1358,2 @@\n+            static final MethodTypeDesc MTD_void_String_int = MethodTypeDesc.of(CD_void, CD_String, CD_int);\n+            static final MethodTypeDesc MTD_ModuleHashes = MethodTypeDesc.of(CD_MODULE_HASHES);\n@@ -1388,2 +1402,2 @@\n-                                  \"<init>\",\n-                                  MethodTypeDesc.of(CD_void, CD_String, CD_int))\n+                                  INIT_NAME,\n+                                  MTD_void_String_int)\n@@ -1405,1 +1419,1 @@\n-                                  MethodTypeDesc.of(CD_MODULE_HASHES))\n+                                  MTD_ModuleHashes)\n@@ -1554,0 +1568,3 @@\n+            private static final MethodTypeDesc MTD_Set_ObjectArray = MethodTypeDesc.of(\n+                    CD_Set, CD_Object.arrayType());\n+\n@@ -1635,2 +1652,1 @@\n-                                     MethodTypeDesc.ofDescriptor(\n-                                            \"([Ljava\/lang\/Object;)Ljava\/util\/Set;\"),\n+                                     MTD_Set_ObjectArray,\n@@ -1686,2 +1702,2 @@\n-                                  \"<init>\",\n-                                  MethodTypeDesc.of(CD_void),\n+                                  INIT_NAME,\n+                                  MTD_void,\n@@ -1691,2 +1707,2 @@\n-                                                           \"<init>\",\n-                                                           MethodTypeDesc.of(CD_void))\n+                                                           INIT_NAME,\n+                                                           MTD_void)\n@@ -1698,1 +1714,1 @@\n-                                  MethodTypeDesc.of(CD_SYSTEM_MODULES),\n+                                  MTD_SystemModules,\n@@ -1703,2 +1719,2 @@\n-                                                           \"<init>\",\n-                                                           MethodTypeDesc.of(CD_void))\n+                                                           INIT_NAME,\n+                                                           MTD_void)\n@@ -1710,1 +1726,1 @@\n-                                   MethodTypeDesc.of(CD_SYSTEM_MODULES),\n+                                   MTD_SystemModules,\n@@ -1715,2 +1731,2 @@\n-                                                            \"<init>\",\n-                                                            MethodTypeDesc.of(CD_void))\n+                                                            INIT_NAME,\n+                                                            MTD_void)\n@@ -1722,1 +1738,1 @@\n-                                  MethodTypeDesc.of(CD_String.arrayType()),\n+                                  MTD_StringArray,\n@@ -1743,1 +1759,1 @@\n-                                  MethodTypeDesc.of(CD_String.arrayType()),\n+                                  MTD_StringArray,\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":61,"deletions":45,"binary":false,"changes":106,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.lang.constant.MethodTypeDesc;\n@@ -80,1 +79,0 @@\n-    private static final MethodTypeDesc MTD_void = MethodTypeDesc.of(ConstantDescs.CD_void);\n@@ -87,1 +85,1 @@\n-                                cob.invokestatic(CD_Cancel, \"stopCheck\", MTD_void);\n+                                cob.invokestatic(CD_Cancel, \"stopCheck\", ConstantDescs.MTD_void);\n@@ -96,1 +94,1 @@\n-                .withMethodBody(\"stopCheck\", MTD_void, Classfile.ACC_PUBLIC | Classfile.ACC_STATIC, cob ->\n+                .withMethodBody(\"stopCheck\", ConstantDescs.MTD_void, Classfile.ACC_PUBLIC | Classfile.ACC_STATIC, cob ->\n@@ -100,1 +98,1 @@\n-                                               .invokespecial(CD_ThreadDeath, \"<init>\", MTD_void)\n+                                               .invokespecial(CD_ThreadDeath, ConstantDescs.INIT_NAME, ConstantDescs.MTD_void)\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/execution\/LocalExecutionControl.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -30,0 +30,3 @@\n+import static java.lang.constant.ConstantDescs.CD_String;\n+import static java.lang.constant.ConstantDescs.CD_void;\n+\n@@ -34,0 +37,1 @@\n+    public static final ClassDesc CD_MyClass = ClassDesc.of(\"MyClass\");\n@@ -38,2 +42,2 @@\n-    public static final MethodTypeDesc MTD_INT_VOID = MethodTypeDesc.ofDescriptor(\"(I)V\");\n-    public static final MethodTypeDesc MTD_VOID = MethodTypeDesc.ofDescriptor(\"()V\");\n+    public static final MethodTypeDesc MTD_void_int = MethodTypeDesc.ofDescriptor(\"(I)V\");\n+    public static final MethodTypeDesc MTD_void_StringArray = MethodTypeDesc.of(CD_void, CD_String.arrayType());\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/TestConstants.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,0 @@\n-\n@@ -36,1 +35,0 @@\n-import java.lang.constant.ClassDesc;\n@@ -38,1 +36,1 @@\n-import java.lang.constant.MethodTypeDesc;\n+\n@@ -42,4 +40,0 @@\n-import static org.openjdk.bench.jdk.classfile.TestConstants.CD_PrintStream;\n-import static org.openjdk.bench.jdk.classfile.TestConstants.CD_System;\n-import static org.openjdk.bench.jdk.classfile.TestConstants.MTD_INT_VOID;\n-import static org.openjdk.bench.jdk.classfile.TestConstants.MTD_VOID;\n@@ -48,2 +42,1 @@\n-import static jdk.internal.classfile.TypeKind.IntType;\n-import static jdk.internal.org.objectweb.asm.Opcodes.V12;\n+import static org.openjdk.bench.jdk.classfile.TestConstants.*;\n@@ -88,1 +81,1 @@\n-        cw.visit(V12, Opcodes.ACC_PUBLIC, \"MyClass\", null, \"java\/lang\/Object\", null);\n+        cw.visit(Opcodes.V12, Opcodes.ACC_PUBLIC, \"MyClass\", null, \"java\/lang\/Object\", null);\n@@ -92,1 +85,1 @@\n-            MethodVisitor mv = cw.visitMethod(0, \"<init>\", \"()V\", null, null);\n+            MethodVisitor mv = cw.visitMethod(0, INIT_NAME, \"()V\", null, null);\n@@ -98,1 +91,1 @@\n-            mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java\/lang\/Object\", \"<init>\", \"()V\", false);\n+            mv.visitMethodInsn(Opcodes.INVOKESPECIAL, \"java\/lang\/Object\", INIT_NAME, \"()V\", false);\n@@ -152,1 +145,1 @@\n-        byte[] bytes = Classfile.of().build(ClassDesc.of(\"MyClass\"), cb -> {\n+        byte[] bytes = Classfile.of().build(CD_MyClass, cb -> {\n@@ -156,1 +149,1 @@\n-              .withMethod(\"<init>\", MethodTypeDesc.of(CD_void), 0, mb -> mb\n+              .withMethod(INIT_NAME, MTD_void, 0, mb -> mb\n@@ -158,1 +151,1 @@\n-                                              .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n+                                              .invokeInstruction(INVOKESPECIAL, CD_Object, INIT_NAME, MTD_void, false)\n@@ -163,1 +156,1 @@\n-                cb.withMethod(\"main\" + ((xi == 0) ? \"\" : \"\" + xi), MethodTypeDesc.of(CD_void, CD_String.arrayType()),\n+                cb.withMethod(\"main\" + ((xi == 0) ? \"\" : \"\" + xi), MTD_void_StringArray,\n@@ -187,1 +180,1 @@\n-                                    .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_INT_VOID, false)  \/\/ 15\n+                                    .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_void_int, false)  \/\/ 15\n@@ -200,1 +193,1 @@\n-        byte[] bytes = Classfile.of().build(ClassDesc.of(\"MyClass\"), cb -> {\n+        byte[] bytes = Classfile.of().build(CD_MyClass, cb -> {\n@@ -204,1 +197,1 @@\n-              .withMethod(\"<init>\", MethodTypeDesc.of(CD_void), 0,\n+              .withMethod(INIT_NAME, MTD_void, 0,\n@@ -206,1 +199,1 @@\n-                                                          .invokeInstruction(INVOKESPECIAL, CD_Object, \"<init>\", MTD_VOID, false)\n+                                                          .invokeInstruction(INVOKESPECIAL, CD_Object, INIT_NAME, MTD_void, false)\n@@ -211,1 +204,1 @@\n-                cb.withMethod(\"main\" + ((xi == 0) ? \"\" : \"\" + xi), MethodTypeDesc.of(CD_void, CD_String.arrayType()),\n+                cb.withMethod(\"main\" + ((xi == 0) ? \"\" : \"\" + xi), MTD_void_StringArray,\n@@ -235,1 +228,1 @@\n-                                    .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_INT_VOID, false)  \/\/ 15\n+                                    .invokeInstruction(INVOKEVIRTUAL, CD_PrintStream, \"println\", MTD_void_int, false)  \/\/ 15\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/classfile\/Write.java","additions":15,"deletions":22,"binary":false,"changes":37,"status":"modified"}]}