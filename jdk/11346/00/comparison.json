{"files":[{"patch":"@@ -91,1 +91,1 @@\n-    private String filename;\n+    private final String filename;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Config.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -109,1 +109,1 @@\n-    private ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n@@ -111,1 +111,1 @@\n-    private ByteArrayOutputStream aadBuffer = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream aadBuffer = new ByteArrayOutputStream();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11AEADCipher.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1323,1 +1323,1 @@\n-    private SessionKeyRef ref;\n+    private final SessionKeyRef ref;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-    private ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n+    private final ByteArrayOutputStream dataBuffer = new ByteArrayOutputStream();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyWrapCipher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -653,1 +653,1 @@\n-    private static final PublicKey constructPublicKey(byte[] encodedKey,\n+    private static PublicKey constructPublicKey(byte[] encodedKey,\n@@ -680,1 +680,1 @@\n-    private static final PrivateKey constructPrivateKey(byte[] encodedKey,\n+    private static PrivateKey constructPrivateKey(byte[] encodedKey,\n@@ -707,1 +707,1 @@\n-    private static final SecretKey constructSecretKey(byte[] encodedKey,\n+    private static SecretKey constructSecretKey(byte[] encodedKey,\n@@ -712,1 +712,1 @@\n-    static final Key constructKey(byte[] encoding, String keyAlgorithm,\n+    static Key constructKey(byte[] encoding, String keyAlgorithm,\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11RSACipher.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-    private long mechanism;\n+    private final long mechanism;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11TlsRsaPremasterSecretGenerator.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-    private static Object LOCK = new Object();\n+    private static final Object LOCK = new Object();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Util.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-        while ((next = (SessionRef) SessionRef.refQueue.poll())!= null) {\n+        while ((next = (SessionRef) SessionRef.REF_QUEUE.poll())!= null) {\n@@ -153,1 +153,1 @@\n-    static ReferenceQueue<Session> refQueue = new ReferenceQueue<>();\n+    static final ReferenceQueue<Session> REF_QUEUE = new ReferenceQueue<>();\n@@ -155,1 +155,1 @@\n-    private static Set<SessionRef> refList =\n+    private static final Set<SessionRef> REF_LIST =\n@@ -159,2 +159,2 @@\n-    private long id;\n-    private Token token;\n+    private final long id;\n+    private final Token token;\n@@ -163,1 +163,1 @@\n-        super(session, refQueue);\n+        super(session, REF_QUEUE);\n@@ -166,1 +166,1 @@\n-        refList.add(this);\n+        REF_LIST.add(this);\n@@ -170,1 +170,1 @@\n-        refList.remove(this);\n+        REF_LIST.remove(this);\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Session.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    private AtomicInteger activeSessions = new AtomicInteger();\n+    private final AtomicInteger activeSessions = new AtomicInteger();\n@@ -91,1 +91,1 @@\n-    private Object maxActiveSessionsLock;\n+    private final Object maxActiveSessionsLock;\n@@ -115,3 +115,3 @@\n-        if (debug != null) {\n-            maxActiveSessionsLock = new Object();\n-        }\n+        this.maxActiveSessionsLock = (debug != null)\n+                ? new Object()\n+                : null;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/SessionManager.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-class Token implements Serializable {\n+final class Token implements Serializable {\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/Token.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}