{"files":[{"patch":"@@ -65,1 +65,1 @@\n-        task.setIncrement(period);\n+        task.setBatch(this);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/periodic\/Batch.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -64,1 +64,0 @@\n-            long period = task.getPeriod();\n@@ -66,1 +65,5 @@\n-                Batch batch = findBatch(period);\n+                Batch batch = task.getBatch();\n+                \/\/ If new task, or period has changed, find new batch\n+                if (batch == null) {\n+                    batch = findBatch(task.getPeriod());\n+                }\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/periodic\/BatchManager.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    private long increment;\n+    private Batch batch;\n@@ -77,0 +77,10 @@\n+    \/\/ Only to be called from periodic task thread\n+    public void setBatch(Batch batch) {\n+        this.batch = batch;\n+    }\n+\n+    \/\/ Only to be called from periodic task thread\n+    public Batch getBatch() {\n+        return batch;\n+    }\n+\n@@ -79,0 +89,1 @@\n+        long increment = batch.getPeriod();\n@@ -89,6 +100,0 @@\n-    \/\/ Only to be called from periodic task thread\n-    public final void setIncrement(long increment) {\n-        this.increment = increment;\n-        this.counter = 0;\n-    }\n-\n@@ -102,0 +107,1 @@\n+            batch = null;\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/periodic\/PeriodicTask.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"}]}