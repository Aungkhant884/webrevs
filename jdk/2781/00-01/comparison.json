{"files":[{"patch":"@@ -0,0 +1,160 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.tests;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.util.Collection;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Stream;\n+import java.nio.file.Path;\n+import jdk.jpackage.test.Annotations.Parameters;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Executor;\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.JavaAppDesc;\n+import jdk.jpackage.test.JavaTool;\n+import jdk.jpackage.test.TKit;\n+\n+\n+\/*\n+ * @test\n+ * @summary test '--runtime-image' option of jpackage\n+ * @library ..\/..\/..\/..\/helpers\n+ * @build jdk.jpackage.test.*\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @compile NoMPathRuntimeTest.java\n+ * @run main\/othervm\/timeout=360 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=jdk.jpackage.tests.NoMPathRuntimeTest\n+ *\/\n+\n+public final class NoMPathRuntimeTest {\n+\n+    public NoMPathRuntimeTest(String javaAppDesc, String jlinkOutputSubdir,\n+            String runtimeSubdir) {\n+        this.javaAppDesc = javaAppDesc;\n+        this.jlinkOutputSubdir = Path.of(jlinkOutputSubdir);\n+        this.runtimeSubdir = Path.of(runtimeSubdir);\n+    }\n+\n+    @Test\n+    public void test() throws IOException {\n+        final Path tmpdir = TKit.createTempDirectory(\"tmpdir\");\n+        try {\n+            Files.createFile(tmpdir.resolve(\"tmpfile\"));\n+        } catch (IOException ioe) {\n+            \/\/ ignore\n+        }\n+        JavaAppDesc appDesc = JavaAppDesc.parse(javaAppDesc);\n+\n+        JPackageCommand cmd = JPackageCommand.helloAppImage(appDesc);\n+\n+        final String moduleName = appDesc.moduleName();\n+\n+        if (moduleName != null) {\n+            \/\/ Build module jar.\n+            cmd.executePrerequisiteActions();\n+        }\n+\n+        final Path workDir = TKit.createTempDirectory(\"runtime\").resolve(\"data\");\n+        final Path jlinkOutputDir = workDir.resolve(jlinkOutputSubdir);\n+        Files.createDirectories(jlinkOutputDir.getParent());\n+\n+        \/\/ List of modules required for test app.\n+        final var modules = new String[] {\n+            \"java.base\",\n+            \"java.desktop\"\n+        };\n+\n+        Executor jlink = new Executor()\n+        .setToolProvider(JavaTool.JLINK)\n+        .dumpOutput()\n+        .addArguments(\n+                \"--add-modules\", String.join(\",\", modules),\n+                \"--output\", jlinkOutputDir.toString(),\n+                \"--strip-debug\",\n+                \"--no-header-files\",\n+                \"--no-man-pages\");\n+\n+        if (moduleName != null) {\n+            jlink.addArguments(\"--add-modules\", moduleName, \"--module-path\",\n+                    Path.of(cmd.getArgumentValue(\"--module-path\")).resolve(\n+                            \"hello.jar\").toString());\n+        }\n+\n+        jlink.execute();\n+\n+        ArrayList<Path> paths = new ArrayList<Path>();\n+        paths.add(TKit.TEST_SRC_ROOT.resolve(\"apps\/image\/Hello.java\"));\n+\n+        \/\/ compile Hello.java again putting classes in tmpdir\n+        new Executor()\n+                .setToolProvider(JavaTool.JAVAC)\n+                .addArguments(\"-d\", tmpdir.toString())\n+                .addPathArguments(paths)\n+                .execute();\n+\n+        \/\/ make raw jar of just Hello.class from tmpdir.\n+        new Executor()\n+                .setToolProvider(JavaTool.JAR)\n+                .dumpOutput()\n+                .addArguments(\"-cvf\", \"junk.jar\",\n+                        \"-C\", tmpdir.toString(), \"Hello.class\")\n+                .execute();\n+\n+        \/\/ non-modular jar in current dir caused error whe no module-path given\n+        cmd.removeArgumentWithValue(\"--module-path\");\n+\n+        cmd.setArgumentValue(\"--runtime-image\", workDir.resolve(runtimeSubdir));\n+        cmd.executeAndAssertHelloAppImageCreated();\n+    }\n+\n+    @Parameters\n+    public static Collection data() {\n+        final List<String> javaAppDescs = List.of(\"Hello\",\n+                \"com.foo\/com.foo.main.Aloha\");\n+\n+        final List<String[]> paths = new ArrayList<>();\n+        paths.add(new String[] { \"\", \"\" });\n+        if (TKit.isOSX()) {\n+            \/\/ On OSX jpackage should accept both runtime root and runtime home\n+            \/\/ directories.\n+            paths.add(new String[] { \"Contents\/Home\", \"\" });\n+        }\n+\n+        List<Object[]> data = new ArrayList<>();\n+        for (var javaAppDesc : javaAppDescs) {\n+            for (var pathCfg : paths) {\n+                data.add(new Object[] { javaAppDesc, pathCfg[0], pathCfg[1] });\n+            }\n+        }\n+\n+        return data;\n+    }\n+\n+    private final String javaAppDesc;\n+    private final Path jlinkOutputSubdir;\n+    private final Path runtimeSubdir;\n+}\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/NoMPathRuntimeTest.java","additions":160,"deletions":0,"binary":false,"changes":160,"status":"added"}]}