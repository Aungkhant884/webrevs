{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,3 +56,1 @@\n-    public NoMPathRuntimeTest(String javaAppDesc, String jlinkOutputSubdir,\n-            String runtimeSubdir) {\n-        this.javaAppDesc = javaAppDesc;\n+    public NoMPathRuntimeTest(String jlinkOutputSubdir, String runtimeSubdir) {\n@@ -65,1 +63,1 @@\n-        JavaAppDesc appDesc = JavaAppDesc.parse(javaAppDesc);\n+        JavaAppDesc appDesc = JavaAppDesc.parse(\"com.foo\/com.foo.main.Aloha\");\n@@ -69,6 +67,2 @@\n-        final String moduleName = appDesc.moduleName();\n-\n-        if (moduleName != null) {\n-            \/\/ Build module jar.\n-            cmd.executePrerequisiteActions();\n-        }\n+        \/\/ Build module jar.\n+        cmd.executePrerequisiteActions();\n@@ -96,5 +90,3 @@\n-        if (moduleName != null) {\n-            jlink.addArguments(\"--add-modules\", moduleName, \"--module-path\",\n-                    Path.of(cmd.getArgumentValue(\"--module-path\")).resolve(\n-                            \"hello.jar\").toString());\n-        }\n+        jlink.addArguments(\"--add-modules\", appDesc.moduleName(),\n+               \"--module-path\", Path.of(cmd.getArgumentValue(\"--module-path\"))\n+               .resolve(\"hello.jar\").toString());\n@@ -104,3 +96,0 @@\n-        \/\/ create a non-modular jar in the current directory\n-        HelloApp.createBundle(JavaAppDesc.parse(\"junk.jar:Hello\"), Path.of(\".\"));\n-\n@@ -111,1 +100,13 @@\n-        cmd.executeAndAssertHelloAppImageCreated();\n+        Path junkJar = null;\n+        try {\n+            \/\/ create a non-modular jar in the current directory\n+            junkJar = HelloApp.createBundle(\n+                    JavaAppDesc.parse(\"junk.jar:Hello\"), Path.of(\".\"));\n+\n+            cmd.executeAndAssertHelloAppImageCreated();\n+        } finally {\n+            if (junkJar != null) {\n+                TKit.deleteIfExists(junkJar);\n+            }\n+        }\n+            \n@@ -116,2 +117,0 @@\n-        final List<String> javaAppDescs = List.of(\"Hello\",\n-                \"com.foo\/com.foo.main.Aloha\");\n@@ -128,4 +127,2 @@\n-        for (var javaAppDesc : javaAppDescs) {\n-            for (var pathCfg : paths) {\n-                data.add(new Object[] { javaAppDesc, pathCfg[0], pathCfg[1] });\n-            }\n+        for (var pathCfg : paths) {\n+            data.add(new Object[] { pathCfg[0], pathCfg[1] });\n@@ -137,1 +134,0 @@\n-    private final String javaAppDesc;\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/NoMPathRuntimeTest.java","additions":23,"deletions":27,"binary":false,"changes":50,"status":"modified"}]}