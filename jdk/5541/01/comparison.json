{"files":[{"patch":"@@ -61,0 +61,3 @@\n+#ifndef MFD_HUGE_2MB\n+#define MFD_HUGE_2MB                     0x54000000U\n+#endif\n@@ -178,6 +181,0 @@\n-  if (ZLargePages::is_explicit() && os::large_page_size() != ZGranuleSize) {\n-    log_error_p(gc)(\"Incompatible large page size configured \" SIZE_FORMAT \" (expected \" SIZE_FORMAT \")\",\n-                    os::large_page_size(), ZGranuleSize);\n-    return;\n-  }\n-\n@@ -207,1 +204,1 @@\n-  const int extra_flags = ZLargePages::is_explicit() ? MFD_HUGETLB : 0;\n+  const int extra_flags = ZLargePages::is_explicit() ? (MFD_HUGETLB | MFD_HUGE_2MB) : 0;\n@@ -212,1 +209,2 @@\n-                          ((ZLargePages::is_explicit() && err == EINVAL) ? \"Hugepages not supported\" : err.to_string()));\n+                          (ZLargePages::is_explicit() && (err == EINVAL || err == ENODEV)) ?\n+                          \"Hugepages (2M) not available\" : err.to_string());\n@@ -448,1 +446,1 @@\n-  os::realign_memory((char*)addr, length, os::large_page_size());\n+  os::realign_memory((char*)addr, length, ZGranuleSize);\n","filename":"src\/hotspot\/os\/linux\/gc\/z\/zPhysicalMemoryBacking_linux.cpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -75,0 +75,5 @@\n+  \/\/ Only 2M large pages are supported\n+  if (!FLAG_IS_DEFAULT(LargePageSizeInBytes) && LargePageSizeInBytes != 2 * M) {\n+    vm_exit_during_initialization(\"Incompatible -XX:LargePageSizeInBytes, only 2M large pages are supported by ZGC\");\n+  }\n+\n","filename":"src\/hotspot\/share\/gc\/z\/zArguments.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"}]}