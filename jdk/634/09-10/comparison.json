{"files":[{"patch":"@@ -45,1 +45,1 @@\n-const ABIDescriptor ForeignGlobals::parseABIDescriptor_impl(jobject jabi) const {\n+const ABIDescriptor ForeignGlobals::parse_abi_descriptor_impl(jobject jabi) const {\n@@ -67,1 +67,1 @@\n-const BufferLayout ForeignGlobals::parseBufferLayout_impl(jobject jlayout) const {\n+const BufferLayout ForeignGlobals::parse_buffer_layout_impl(jobject jlayout) const {\n","filename":"src\/hotspot\/cpu\/aarch64\/foreign_globals_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -154,2 +154,2 @@\n-  const ABIDescriptor abi = ForeignGlobals::parseABIDescriptor(jabi);\n-  const BufferLayout layout = ForeignGlobals::parseBufferLayout(jlayout);\n+  const ABIDescriptor abi = ForeignGlobals::parse_abi_descriptor(jabi);\n+  const BufferLayout layout = ForeignGlobals::parse_buffer_layout(jlayout);\n","filename":"src\/hotspot\/cpu\/aarch64\/universalNativeInvoker_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -123,2 +123,1 @@\n-static address generate_upcall_stub(jobject rec, const ABIDescriptor& abi,\n-                                    const BufferLayout& layout) {\n+addres ProgrammableUpcallHandler::generate_upcall_stub(jobject rec, jobject jabi, jobject jlayout) {\n@@ -126,0 +125,3 @@\n+  const ABIDescriptor abi = ForeignGlobals::parse_abi_descriptor(jabi);\n+  const BufferLayout layout = ForeignGlobals::parse_buffer_layout(jlayout);\n+  \n@@ -186,8 +188,0 @@\n-\n-jlong ProgrammableUpcallHandler::generate_upcall_stub(jobject rec, jobject jabi, jobject jlayout) {\n-  ResourceMark rm;\n-  const ABIDescriptor abi = ForeignGlobals::parseABIDescriptor(jabi);\n-  const BufferLayout layout = ForeignGlobals::parseBufferLayout(jlayout);\n-\n-  return (jlong) ::generate_upcall_stub(rec, abi, layout);\n-}\n","filename":"src\/hotspot\/cpu\/aarch64\/universalUpcallHandler_aarch64.cpp","additions":4,"deletions":10,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-const ABIDescriptor ForeignGlobals::parseABIDescriptor_impl(jobject jabi) const {\n+const ABIDescriptor ForeignGlobals::parse_abi_descriptor_impl(jobject jabi) const {\n@@ -69,1 +69,1 @@\n-const BufferLayout ForeignGlobals::parseBufferLayout_impl(jobject jlayout) const {\n+const BufferLayout ForeignGlobals::parse_buffer_layout_impl(jobject jlayout) const {\n","filename":"src\/hotspot\/cpu\/x86\/foreign_globals_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -192,2 +192,2 @@\n-  const ABIDescriptor abi = ForeignGlobals::parseABIDescriptor(jabi);\n-  const BufferLayout layout = ForeignGlobals::parseBufferLayout(jlayout);\n+  const ABIDescriptor abi = ForeignGlobals::parse_abi_descriptor(jabi);\n+  const BufferLayout layout = ForeignGlobals::parse_buffer_layout(jlayout);\n","filename":"src\/hotspot\/cpu\/x86\/universalNativeInvoker_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -122,1 +122,1 @@\n-static address generate_upcall_stub(jobject rec, const ABIDescriptor& abi, const BufferLayout& layout) {\n+address ProgrammableUpcallHandler::generate_upcall_stub(jobject rec, jobject jabi, jobject jlayout) {  \n@@ -124,0 +124,3 @@\n+  const ABIDescriptor abi = ForeignGlobals::parse_abi_descriptor(jabi);\n+  const BufferLayout layout = ForeignGlobals::parse_buffer_layout(jlayout);\n+\n@@ -238,8 +241,0 @@\n-\n-jlong ProgrammableUpcallHandler::generate_upcall_stub(jobject rec, jobject jabi, jobject jlayout) {\n-  ResourceMark rm;\n-  const ABIDescriptor abi = ForeignGlobals::parseABIDescriptor(jabi);\n-  const BufferLayout layout = ForeignGlobals::parseBufferLayout(jlayout);\n-\n-  return (jlong) ::generate_upcall_stub(rec, abi, layout);\n-}\n","filename":"src\/hotspot\/cpu\/x86\/universalUpcallHandler_x86.cpp","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -34,2 +34,2 @@\n-int ForeignGlobals::field_offset(InstanceKlass* cls, const char* fieldname, Symbol* sigsym) {\n-  Symbol* fieldnamesym = SymbolTable::new_symbol(fieldname, (int)strlen(fieldname));\n+static int field_offset(InstanceKlass* cls, const char* fieldname, Symbol* sigsym) {\n+  TempNewSymbol fieldnamesym = SymbolTable::new_symbol(fieldname, (int)strlen(fieldname));\n@@ -42,2 +42,2 @@\n-InstanceKlass* ForeignGlobals::find_InstanceKlass(const char* name, TRAPS) {\n-  Symbol* sym = SymbolTable::new_symbol(name, (int)strlen(name));\n+static InstanceKlass* find_InstanceKlass(const char* name, TRAPS) {\n+  TempNewSymbol sym = SymbolTable::new_symbol(name, (int)strlen(name));\n@@ -54,2 +54,2 @@\n-const ABIDescriptor ForeignGlobals::parseABIDescriptor(jobject jabi) {\n-  return instance().parseABIDescriptor_impl(jabi);\n+const ABIDescriptor ForeignGlobals::parse_abi_descriptor(jobject jabi) {\n+  return instance().parse_abi_descriptor_impl(jabi);\n@@ -57,2 +57,2 @@\n-const BufferLayout ForeignGlobals::parseBufferLayout(jobject jlayout) {\n-  return instance().parseBufferLayout_impl(jlayout);\n+const BufferLayout ForeignGlobals::parse_buffer_layout(jobject jlayout) {\n+  return instance().parse_buffer_layout_impl(jlayout);\n","filename":"src\/hotspot\/share\/prims\/foreign_globals.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -64,5 +64,2 @@\n-  int field_offset(InstanceKlass* cls, const char* fieldname, Symbol* sigsym);\n-  InstanceKlass* find_InstanceKlass(const char* name, TRAPS);\n-\n-  const ABIDescriptor parseABIDescriptor_impl(jobject jabi) const;\n-  const BufferLayout parseBufferLayout_impl(jobject jlayout) const;\n+  const ABIDescriptor parse_abi_descriptor_impl(jobject jabi) const;\n+  const BufferLayout parse_buffer_layout_impl(jobject jlayout) const;\n@@ -70,2 +67,2 @@\n-  static const ABIDescriptor parseABIDescriptor(jobject jabi);\n-  static const BufferLayout parseBufferLayout(jobject jlayout);\n+  static const ABIDescriptor parse_abi_descriptor(jobject jabi);\n+  static const BufferLayout parse_buffer_layout(jobject jlayout);\n","filename":"src\/hotspot\/share\/prims\/foreign_globals.hpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-JVM_LEAF(jlong, NEP_vmStorageToVMReg(JNIEnv* env, jclass _unused, jint type, jint index))\n+JNI_LEAF(jlong, NEP_vmStorageToVMReg(JNIEnv* env, jclass _unused, jint type, jint index))\n@@ -31,1 +31,1 @@\n-JVM_END\n+JNI_END\n@@ -40,1 +40,1 @@\n-JVM_LEAF(void, JVM_RegisterNativeEntryPointMethods(JNIEnv *env, jclass NEP_class))\n+JNI_LEAF(void, JVM_RegisterNativeEntryPointMethods(JNIEnv *env, jclass NEP_class))\n@@ -44,1 +44,1 @@\n-JVM_END\n\\ No newline at end of file\n+JNI_END\n\\ No newline at end of file\n","filename":"src\/hotspot\/share\/prims\/nativeEntryPoint.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-JVM_ENTRY(void, PI_invokeNative(JNIEnv* env, jclass _unused, jlong adapter_stub, jlong buff))\n+JNI_ENTRY(void, PI_invokeNative(JNIEnv* env, jclass _unused, jlong adapter_stub, jlong buff))\n@@ -48,1 +48,1 @@\n-JVM_END\n+JNI_END\n@@ -50,1 +50,1 @@\n-JVM_ENTRY(jlong, PI_generateAdapter(JNIEnv* env, jclass _unused, jobject abi, jobject layout))\n+JNI_ENTRY(jlong, PI_generateAdapter(JNIEnv* env, jclass _unused, jobject abi, jobject layout))\n@@ -52,1 +52,1 @@\n-JVM_END\n+JNI_END\n@@ -63,1 +63,1 @@\n-JVM_LEAF(void, JVM_RegisterProgrammableInvokerMethods(JNIEnv *env, jclass PI_class))\n+JNI_LEAF(void, JVM_RegisterProgrammableInvokerMethods(JNIEnv *env, jclass PI_class))\n@@ -67,1 +67,1 @@\n-JVM_END\n+JNI_END\n","filename":"src\/hotspot\/share\/prims\/universalNativeInvoker.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-JVM_ENTRY(jlong, PUH_AllocateUpcallStub(JNIEnv *env, jobject rec, jobject abi, jobject buffer_layout))\n+JNI_ENTRY(jlong, PUH_AllocateUpcallStub(JNIEnv *env, jobject rec, jobject abi, jobject buffer_layout))\n@@ -32,2 +32,2 @@\n-  return ProgrammableUpcallHandler::generate_upcall_stub(global_rec, abi, buffer_layout);\n-JVM_END\n+  return (jlong) ProgrammableUpcallHandler::generate_upcall_stub(global_rec, abi, buffer_layout);\n+JNI_END\n@@ -48,1 +48,1 @@\n-JVM_LEAF(void, JVM_RegisterProgrammableUpcallHandlerMethods(JNIEnv *env, jclass PUH_class))\n+JNI_LEAF(void, JVM_RegisterProgrammableUpcallHandlerMethods(JNIEnv *env, jclass PUH_class))\n@@ -52,1 +52,1 @@\n-JVM_END\n+JNI_END\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  static jlong generate_upcall_stub(jobject rec, jobject abi, jobject buffer_layout);\n+  static address generate_upcall_stub(jobject rec, jobject abi, jobject buffer_layout);\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}