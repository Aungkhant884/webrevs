{"files":[{"patch":"@@ -40,4 +40,1 @@\n-        h.forEach((k, v) -> {\n-                List<String> l = v == null ? List.of() : Collections.unmodifiableList(v);\n-                unmodHeaders.put(k, l);\n-        });\n+        h.forEach((k, v) -> unmodHeaders.put(k, Collections.unmodifiableList(v)));\n@@ -56,1 +53,4 @@\n-    public List<String> get(Object key) { return map.get(key); }\n+    public List<String> get(Object key) {\n+        List<String> l = headers.get(key);\n+        return l == null ? null : Collections.unmodifiableList(l);\n+    }\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/UnmodifiableHeaders.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import static org.testng.Assert.assertEquals;\n@@ -49,0 +50,15 @@\n+    @Test\n+    public static void testEquality() {\n+        var headers = new Headers();\n+        var unmodifiableHeaders1 = new UnmodifiableHeaders(headers);\n+        assertEquals(unmodifiableHeaders1, headers);\n+        assertEquals(unmodifiableHeaders1.hashCode(), headers.hashCode());\n+        assertEquals(unmodifiableHeaders1.get(\"Foo\"), headers.get(\"Foo\"));\n+\n+        headers.add(\"Foo\", \"Bar\");\n+        var unmodifiableHeaders2 = new UnmodifiableHeaders(headers);\n+        assertEquals(unmodifiableHeaders2, headers);\n+        assertEquals(unmodifiableHeaders2.hashCode(), headers.hashCode());\n+        assertEquals(unmodifiableHeaders2.get(\"Foo\"), headers.get(\"Foo\"));\n+    }\n+\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/UnmodifiableHeadersTest.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}