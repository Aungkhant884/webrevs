{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -88,1 +88,1 @@\n-        this.reqHdrs = req.headers();\n+        this.reqHdrs = new UnmodifiableHeaders(req.headers());\n@@ -102,1 +102,1 @@\n-        return new UnmodifiableHeaders (reqHdrs);\n+        return reqHdrs;\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/ExchangeImpl.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-    private final Headers headers;\n+    private final Headers headers;  \/\/ mutable, but no reference to it escapes\n@@ -45,1 +45,1 @@\n-        public int size() {return map.size();}\n+    public int size() {return map.size();}\n@@ -47,1 +47,1 @@\n-        public boolean isEmpty() {return map.isEmpty();}\n+    public boolean isEmpty() {return map.isEmpty();}\n@@ -49,3 +49,1 @@\n-        public boolean containsKey(Object key) {\n-            return map.containsKey (key);\n-        }\n+    public boolean containsKey(Object key) { return map.containsKey (key); }\n@@ -53,3 +51,1 @@\n-        public boolean containsValue(Object value) {\n-            return map.containsValue(value);\n-        }\n+    public boolean containsValue(Object value) { return map.containsValue(value); }\n@@ -57,3 +53,1 @@\n-        public List<String> get(Object key) {\n-            return map.get(key);\n-        }\n+    public List<String> get(Object key) { return map.get(key); }\n@@ -61,3 +55,1 @@\n-        public String getFirst(String key) {\n-            return headers.getFirst(key);\n-        }\n+    public String getFirst(String key) { return headers.getFirst(key); }\n@@ -65,3 +57,3 @@\n-        public List<String> put(String key, List<String> value) {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public List<String> put(String key, List<String> value) {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -69,3 +61,3 @@\n-        public void add (String key, String value) {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public void add(String key, String value) {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -73,3 +65,3 @@\n-        public void set (String key, String value) {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public void set(String key, String value) {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -77,3 +69,3 @@\n-        public List<String> remove(Object key) {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public List<String> remove(Object key) {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -81,3 +73,3 @@\n-        public void putAll(Map<? extends String,? extends List<String>> t)  {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public void putAll(Map<? extends String,? extends List<String>> t)  {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -85,3 +77,3 @@\n-        public void clear() {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public void clear() {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -89,1 +81,1 @@\n-        public Set<String> keySet() { return map.keySet(); }\n+    public Set<String> keySet() { return map.keySet(); }\n@@ -91,1 +83,1 @@\n-        public Collection<List<String>> values() { return map.values(); }\n+    public Collection<List<String>> values() { return map.values(); }\n@@ -93,1 +85,1 @@\n-        \/* TODO check that contents of set are not modifable : security *\/\n+    \/* TODO check that contents of set are not modifable : security *\/\n@@ -95,1 +87,1 @@\n-        public Set<Map.Entry<String, List<String>>> entrySet() { return map.entrySet(); }\n+    public Set<Map.Entry<String, List<String>>> entrySet() { return map.entrySet(); }\n@@ -97,3 +89,3 @@\n-        public List<String> replace(String key, List<String> value) {\n-            throw new UnsupportedOperationException(\"unsupported operation\");\n-        }\n+    public List<String> replace(String key, List<String> value) {\n+        throw new UnsupportedOperationException(\"unsupported operation\");\n+    }\n@@ -101,3 +93,3 @@\n-        public boolean replace(String key, List<String> oldValue, List<String> newValue) {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public boolean replace(String key, List<String> oldValue, List<String> newValue) {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -105,3 +97,3 @@\n-        public void replaceAll(BiFunction<? super String, ? super List<String>, ? extends List<String>> function) {\n-            throw new UnsupportedOperationException (\"unsupported operation\");\n-        }\n+    public void replaceAll(BiFunction<? super String, ? super List<String>, ? extends List<String>> function) {\n+        throw new UnsupportedOperationException (\"unsupported operation\");\n+    }\n@@ -109,1 +101,1 @@\n-        public boolean equals(Object o) {return map.equals(o);}\n+    public boolean equals(Object o) {return map.equals(o);}\n@@ -111,2 +103,2 @@\n-        public int hashCode() {return map.hashCode();}\n-    }\n+    public int hashCode() {return map.hashCode();}\n+}\n","filename":"src\/jdk.httpserver\/share\/classes\/sun\/net\/httpserver\/UnmodifiableHeaders.java","additions":41,"deletions":49,"binary":false,"changes":90,"status":"modified"}]}