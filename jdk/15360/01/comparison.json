{"files":[{"patch":"@@ -161,1 +161,1 @@\n-                            LIR_OprFact::intConst(HeapRegion::LogOfHRGrainBytes),\n+                            LIR_OprFact::intConst(checked_cast<jint>(HeapRegion::LogOfHRGrainBytes)),\n@@ -167,1 +167,1 @@\n-                            LIR_OprFact::intConst(HeapRegion::LogOfHRGrainBytes),\n+                            LIR_OprFact::intConst(checked_cast<jint>(HeapRegion::LogOfHRGrainBytes)),\n","filename":"src\/hotspot\/share\/gc\/g1\/c1\/g1BarrierSetC1.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -457,1 +457,1 @@\n-    Node* xor_res =  __ URShiftX ( __ XorX( cast,  __ CastPX(__ ctrl(), val)), __ ConI(HeapRegion::LogOfHRGrainBytes));\n+    Node* xor_res =  __ URShiftX ( __ XorX( cast,  __ CastPX(__ ctrl(), val)), __ ConI(checked_cast<jint>(HeapRegion::LogOfHRGrainBytes)));\n","filename":"src\/hotspot\/share\/gc\/g1\/c2\/g1BarrierSetC2.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,1 @@\n+#include \"gc\/g1\/heapRegionBounds.inline.hpp\"\n@@ -134,2 +135,4 @@\n-  const int LOG_M = 20;\n-  uint region_size_log_mb = (uint)MAX2(HeapRegion::LogOfHRGrainBytes - LOG_M, 0);\n+  const uint LOG_M = 20;\n+  assert(log2i_exact(HeapRegionBounds::min_size()) == LOG_M, \"inv\");\n+  assert(HeapRegion::LogOfHRGrainBytes >= LOG_M, \"from the above\");\n+  uint region_size_log_mb = HeapRegion::LogOfHRGrainBytes - LOG_M;\n@@ -138,1 +141,1 @@\n-    uint max_cards_in_inline_ptr = G1CardSetConfiguration::max_cards_in_inline_ptr(HeapRegion::LogOfHRGrainBytes - CardTable::card_shift());\n+    uint max_cards_in_inline_ptr = G1CardSetConfiguration::max_cards_in_inline_ptr(HeapRegion::LogCardsPerRegion);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  return (uint)(card_idx >> (HeapRegion::LogOfHRGrainBytes - _card_shift));\n+  return (uint)(card_idx >> HeapRegion::LogCardsPerRegion);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardTable.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -51,2 +51,2 @@\n-int    HeapRegion::LogOfHRGrainBytes = 0;\n-int    HeapRegion::LogCardsPerRegion = 0;\n+uint   HeapRegion::LogOfHRGrainBytes = 0;\n+uint   HeapRegion::LogCardsPerRegion = 0;\n@@ -81,3 +81,0 @@\n-  \/\/ Calculate the log for the region size.\n-  int region_size_log = log2i_exact(region_size);\n-\n@@ -86,1 +83,1 @@\n-  LogOfHRGrainBytes = region_size_log;\n+  LogOfHRGrainBytes = log2i_exact(region_size);\n@@ -97,1 +94,1 @@\n-  LogCardsPerRegion = log2i(CardsPerRegion);\n+  LogCardsPerRegion = log2i_exact(CardsPerRegion);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -292,2 +292,2 @@\n-  static int    LogOfHRGrainBytes;\n-  static int    LogCardsPerRegion;\n+  static uint   LogOfHRGrainBytes;\n+  static uint   LogCardsPerRegion;\n@@ -300,2 +300,1 @@\n-    return (sz + (size_t) GrainBytes - 1) &\n-                                      ~((1 << (size_t) LogOfHRGrainBytes) - 1);\n+    return align_up(sz, GrainBytes);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  static_field(HeapRegion, LogOfHRGrainBytes, int)                            \\\n+  static_field(HeapRegion, LogOfHRGrainBytes, uint)                           \\\n","filename":"src\/hotspot\/share\/gc\/g1\/vmStructs_g1.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -402,0 +402,1 @@\n+                 strcmp(vmField.typeString, \"uint\") == 0 ||\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVMInit.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -820,1 +820,1 @@\n-  static_field(HeapRegion, LogOfHRGrainBytes, int)\n+  static_field(HeapRegion, LogOfHRGrainBytes, uint)\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}