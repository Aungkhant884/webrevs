{"files":[{"patch":"@@ -123,1 +123,0 @@\n-    <Field type=\"ushort\" name=\"references\" label=\"References\" \/>\n@@ -132,1 +131,0 @@\n-    <Field type=\"ushort\" name=\"references\" label=\"References\" \/>\n@@ -136,1 +134,1 @@\n-  <Event name=\"ContinuationFreezeYoung\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Freeze Young\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n+  <Event name=\"ContinuationFreezeFast\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Freeze Fast\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n@@ -142,1 +140,1 @@\n-  <Event name=\"ContinuationFreezeOld\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Freeze Old\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n+  <Event name=\"ContinuationFreezeSlow\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Freeze Slow\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n@@ -146,1 +144,1 @@\n-  <Event name=\"ContinuationThawYoung\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Thaw Young\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n+  <Event name=\"ContinuationThawFast\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Thaw Fast\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n@@ -152,1 +150,1 @@\n-  <Event name=\"ContinuationThawOld\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Thaw Old\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n+  <Event name=\"ContinuationThawSlow\" experimental=\"true\" category=\"Java Virtual Machine, Runtime\" label=\"Continuation Thaw Slow\" thread=\"true\" stackTrace=\"false\" startTime=\"false\">\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -152,1 +152,1 @@\n-#define CONT_JFR false \/\/ emit low-level JFR events that count slow\/fast path for continuation peformance debugging only\n+#define CONT_JFR false \/\/ emit low-level JFR events that count slow\/fast path for continuation performance debugging only\n@@ -433,1 +433,1 @@\n-  void freeze_fast_copy(stackChunkOop chunk, int chunk_start_sp);\n+  void freeze_fast_copy(stackChunkOop chunk, int chunk_start_sp CONT_JFR_ONLY(COMMA bool chunk_is_allocated));\n@@ -543,5 +543,0 @@\n-  EventContinuationFreezeOld e;\n-  if (e.should_commit()) {\n-    e.set_id(cast_from_oop<u8>(_cont.continuation()));\n-    e.commit();\n-  }\n@@ -613,1 +608,1 @@\n-    freeze_fast_copy(chunk, chunk_start_sp);\n+    freeze_fast_copy(chunk, chunk_start_sp CONT_JFR_ONLY(COMMA false));\n@@ -623,1 +618,1 @@\n-    freeze_fast_copy(chunk, chunk_start_sp);\n+    freeze_fast_copy(chunk, chunk_start_sp CONT_JFR_ONLY(COMMA false));\n@@ -646,1 +641,0 @@\n-  DEBUG_ONLY(CONT_JFR_ONLY(chunk_is_allocated = true;))\n@@ -649,1 +643,1 @@\n-  freeze_fast_copy(chunk, chunk_start_sp);\n+  freeze_fast_copy(chunk, chunk_start_sp CONT_JFR_ONLY(COMMA true));\n@@ -654,1 +648,1 @@\n-void FreezeBase::freeze_fast_copy(stackChunkOop chunk, int chunk_start_sp) {\n+void FreezeBase::freeze_fast_copy(stackChunkOop chunk, int chunk_start_sp CONT_JFR_ONLY(COMMA bool chunk_is_allocated)) {\n@@ -709,1 +703,1 @@\n-  EventContinuationFreezeYoung e;\n+  EventContinuationFreezeFast e;\n@@ -713,1 +707,1 @@\n-    e.set_size(cont_size << LogBytesPerWord);\n+    e.set_size(cont_size() << LogBytesPerWord);\n@@ -727,0 +721,8 @@\n+#if CONT_JFR\n+  EventContinuationFreezeSlow e;\n+  if (e.should_commit()) {\n+    e.set_id(cast_from_oop<u8>(_cont.continuation()));\n+    e.commit();\n+  }\n+#endif\n+\n@@ -1447,1 +1449,1 @@\n-    CONT_JFR_ONLY(fr.jfr_info().post_jfr_event(&event, oopCont, current);)\n+    CONT_JFR_ONLY(freeze.jfr_info().post_jfr_event(&event, oopCont, current);)\n@@ -1461,1 +1463,1 @@\n-    CONT_JFR_ONLY(fr.jfr_info().post_jfr_event(&event, oopCont, current);)\n+    CONT_JFR_ONLY(freeze.jfr_info().post_jfr_event(&event, oopCont, current);)\n@@ -1818,1 +1820,1 @@\n-  EventContinuationThawYoung e;\n+  EventContinuationThawFast e;\n@@ -1851,2 +1853,2 @@\n-  \/\/ Does this need ifdef JFR around it? Or can we remove all the conditional JFR inclusions (better)?\n-  EventContinuationThawOld e;\n+#if CONT_JFR\n+  EventContinuationThawSlow e;\n@@ -1857,0 +1859,1 @@\n+#endif\n","filename":"src\/hotspot\/share\/runtime\/continuationFreezeThaw.cpp","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    <event name=\"jdk.ContinuationFreezeYoung\">\n+    <event name=\"jdk.ContinuationFreezeFast\">\n@@ -120,1 +120,1 @@\n-    <event name=\"jdk.ContinuationFreezeOld\">\n+    <event name=\"jdk.ContinuationFreezeSlow\">\n@@ -124,1 +124,1 @@\n-    <event name=\"jdk.ContinuationThawYoung\">\n+    <event name=\"jdk.ContinuationThawFast\">\n@@ -128,1 +128,1 @@\n-    <event name=\"jdk.ContinuationThawOld\">\n+    <event name=\"jdk.ContinuationThawSlow\">\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -116,1 +116,1 @@\n-    <event name=\"jdk.ContinuationFreezeYoung\">\n+    <event name=\"jdk.ContinuationFreezeFast\">\n@@ -120,1 +120,1 @@\n-    <event name=\"jdk.ContinuationFreezeOld\">\n+    <event name=\"jdk.ContinuationFreezeSlow\">\n@@ -124,1 +124,1 @@\n-    <event name=\"jdk.ContinuationThawYoung\">\n+    <event name=\"jdk.ContinuationThawFast\">\n@@ -128,1 +128,1 @@\n-    <event name=\"jdk.ContinuationThawOld\">\n+    <event name=\"jdk.ContinuationThawSlow\">\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}