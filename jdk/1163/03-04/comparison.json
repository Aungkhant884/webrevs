{"files":[{"patch":"@@ -4538,2 +4538,1 @@\n-    assert(hr->is_free(),\n-           \"it cannot be another type\");\n+    assert(hr->is_free(), \"it cannot be another type\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -218,0 +218,1 @@\n+\/\/ Returns an objArray that contains all the roots of the archived objects\n@@ -334,3 +335,2 @@\n-\/\/ Returns an objArray that contains all the roots of the archived objects\n-void HeapShared::archive_java_heap_objects(GrowableArray<MemRegion> *closed,\n-                                           GrowableArray<MemRegion> *open) {\n+void HeapShared::archive_java_heap_objects(GrowableArray<MemRegion>* closed,\n+                                           GrowableArray<MemRegion>* open) {\n@@ -413,1 +413,1 @@\n-  Klass *k = Universe::objectArrayKlassObj(); \/\/ already relocated to point to archived klass\n+  Klass* k = Universe::objectArrayKlassObj(); \/\/ already relocated to point to archived klass\n@@ -485,1 +485,1 @@\n-void KlassSubGraphInfo::add_subgraph_object_klass(Klass* orig_k, Klass *relocated_k) {\n+void KlassSubGraphInfo::add_subgraph_object_klass(Klass* orig_k, Klass* relocated_k) {\n@@ -661,2 +661,2 @@\n-      \/\/ If this -XX:+VerifyArchivedFields is specified on the command-line, do extra\n-      \/\/ checks.\n+      \/\/ If VerifyArchivedFields has a non-default value (e.g., specified on the command-line), do\n+      \/\/ more expensive checks.\n","filename":"src\/hotspot\/share\/memory\/heapShared.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}