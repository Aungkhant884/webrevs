{"files":[{"patch":"@@ -186,0 +186,1 @@\n+\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-        free_pinned_region(hr);\n+        free_open_archive_region(hr);\n@@ -58,2 +58,2 @@\n-      \/\/ Never free closed archive regions. This is also be the only other allowed\n-      \/\/ type at this point.\n+      \/\/ There are no other pinned regions than humongous or all kinds of archive regions\n+      \/\/ at this time.\n@@ -113,1 +113,1 @@\n-    _pinned_archive_regions_removed(0) { }\n+    _open_archive_regions_freed(0) { }\n@@ -128,1 +128,1 @@\n-void G1FullGCPrepareTask::G1CalculatePointersClosure::free_pinned_region(HeapRegion* hr) {\n+void G1FullGCPrepareTask::G1CalculatePointersClosure::free_open_archive_region(HeapRegion* hr) {\n@@ -131,0 +131,2 @@\n+  assert(hr->is_open_archive(),\n+         \"Only Open archive regions may be freed here.\");\n@@ -135,1 +137,1 @@\n-  _pinned_archive_regions_removed++;\n+  _open_archive_regions_freed++;\n@@ -231,2 +233,2 @@\n-  if (_pinned_archive_regions_removed > 0) {\n-    \/\/ Free regions from dead pinned (archive) regions.\n+  if (_open_archive_regions_freed > 0) {\n+    \/\/ Free regions from dead pinned (open archive) regions.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp","additions":10,"deletions":8,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    uint _pinned_archive_regions_removed;\n+    uint _open_archive_regions_freed;\n@@ -65,1 +65,1 @@\n-    void free_pinned_region(HeapRegion* hr);\n+    void free_open_archive_region(HeapRegion* hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -180,2 +180,2 @@\n-  \/\/ An object is dead iff a) it was not allocated since the last mark, b) it\n-  \/\/ is not marked, and c) it is not in a closed archive region.\n+  \/\/ An object is dead iff a) it was not allocated since the last mark (>TAMS), b) it\n+  \/\/ is not marked (bitmap).\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -249,1 +249,1 @@\n-    CDS_JAVA_HEAP_ONLY(_heap_obj_roots = CompressedOops::encode(HeapShared::roots()));\n+    CDS_JAVA_HEAP_ONLY(_heap_obj_roots = CompressedOops::encode(HeapShared::roots());)\n","filename":"src\/hotspot\/share\/memory\/filemap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  \/\/ Does this KlassSubGraphInfo belong to the arcived full module graph\n+  \/\/ Does this KlassSubGraphInfo belong to the archived full module graph\n@@ -85,0 +85,1 @@\n+\n@@ -362,1 +363,1 @@\n-                               idx <= MetaspaceShared::last_open_archive_heap_region));\n+                               idx <= MetaspaceShared::last_open_archive_heap_region);)\n@@ -367,1 +368,1 @@\n-    CDS_JAVA_HEAP_ONLY(_closed_archive_heap_region_mapped = true);\n+    CDS_JAVA_HEAP_ONLY(_closed_archive_heap_region_mapped = true;)\n@@ -371,1 +372,1 @@\n-    CDS_JAVA_HEAP_ONLY(return _closed_archive_heap_region_mapped);\n+    CDS_JAVA_HEAP_ONLY(return _closed_archive_heap_region_mapped;)\n@@ -375,1 +376,1 @@\n-    CDS_JAVA_HEAP_ONLY(_open_archive_heap_region_mapped = true);\n+    CDS_JAVA_HEAP_ONLY(_open_archive_heap_region_mapped = true;)\n@@ -379,1 +380,1 @@\n-    CDS_JAVA_HEAP_ONLY(return _open_archive_heap_region_mapped);\n+    CDS_JAVA_HEAP_ONLY(return _open_archive_heap_region_mapped;)\n","filename":"src\/hotspot\/share\/memory\/heapShared.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-  CDS_JAVA_HEAP_ONLY(ClassLoaderDataShared::serialize(soc));\n+  CDS_JAVA_HEAP_ONLY(ClassLoaderDataShared::serialize(soc);)\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -206,2 +206,2 @@\n-  CDS_ONLY(_shared_class_flags = 0);\n-  CDS_JAVA_HEAP_ONLY(_archived_mirror_index = -1);\n+  CDS_ONLY(_shared_class_flags = 0;)\n+  CDS_JAVA_HEAP_ONLY(_archived_mirror_index = -1;)\n","filename":"src\/hotspot\/share\/oops\/klass.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -307,2 +307,2 @@\n-    CDS_JAVA_HEAP_ONLY(return _archived_mirror_index >= 0);\n-    NOT_CDS_JAVA_HEAP( return false);\n+    CDS_JAVA_HEAP_ONLY(return _archived_mirror_index >= 0;)\n+    NOT_CDS_JAVA_HEAP(return false);\n","filename":"src\/hotspot\/share\/oops\/klass.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}