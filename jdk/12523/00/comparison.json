{"files":[{"patch":"@@ -3726,0 +3726,4 @@\n+                } else if (lambdaParameter) {\n+                    \/\/ we have a lambda parameter that is not an identifier this is a syntax error\n+                    name = names.empty;\n+                    reportSyntaxError(pos, Errors.Expected(IDENTIFIER));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3,1 +3,1 @@\n- * @bug 8131742\n+ * @bug 8131742 8301374\n@@ -9,0 +9,8 @@\n+\n+    interface F {\n+        void apply(E e);\n+    }\n+    enum E {\n+        ONE\n+    }\n+    F f = (E.ONE) -> {};\n","filename":"test\/langtools\/tools\/javac\/lambda\/8131742\/T8131742.java","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,3 @@\n-1 error\n+T8131742.java:8:32: compiler.err.expected: token.identifier\n+T8131742.java:16:12: compiler.err.expected: token.identifier\n+3 errors\n","filename":"test\/langtools\/tools\/javac\/lambda\/8131742\/T8131742.out","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"}]}