{"files":[{"patch":"@@ -94,1 +94,0 @@\n-runtime\/ReservedStack\/ReservedStackTest.java 8231031 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:MaxInlineLevel=2 -XX:C1MaxInlineLevel=2 -XX:CompileCommand=exclude,java\/util\/concurrent\/locks\/AbstractOwnableSynchronizer.setExclusiveOwnerThread ReservedStackTest\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:CompileCommand=DontInline,java\/util\/concurrent\/locks\/ReentrantLock.lock -XX:CompileCommand=exclude,java\/util\/concurrent\/locks\/AbstractOwnableSynchronizer.setExclusiveOwnerThread ReservedStackTest\n@@ -38,0 +38,4 @@\n+ *\n+ * The DontInline directive for ReentrantLock.lock() ensures that lockAndcall\n+ * is not considered as being annotated by ReservedStackAccess by virtue of\n+ * it inlining such a method.\n","filename":"test\/hotspot\/jtreg\/runtime\/ReservedStack\/ReservedStackTest.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}