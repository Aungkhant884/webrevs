{"files":[{"patch":"@@ -124,1 +124,0 @@\n-  friend class G1MonitoringScope;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -31,2 +31,3 @@\n- * @requires vm.gc.G1\n- * @library \/test\/lib\n+ * @requires vm.gc.G1 & vm.compMode != \"Xcomp\"\n+ * @library \/test\/lib \/\n+ * @build   jdk.test.whitebox.WhiteBox\n@@ -35,2 +36,4 @@\n- * @run main\/othervm -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent -Xlog:gc\n- *                   -Xmx16m -Xms16m -XX:G1HeapRegionSize=1m gc.g1.TestRemarkCleanupMXBean\n+ * @run     driver jdk.test.lib.helpers.ClassFileInstaller jdk.test.whitebox.WhiteBox\n+ * @run main\/othervm -XX:+UseG1GC -Xlog:gc\n+ *                   -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI\n+ *                   gc.g1.TestRemarkCleanupMXBean\n@@ -41,3 +44,3 @@\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n+import jdk.test.whitebox.WhiteBox;\n+import jdk.test.whitebox.gc.GC;\n+import gc.testlibrary.g1.MixedGCProvoker;\n@@ -46,3 +49,0 @@\n-    public static List<byte[]> memory = new ArrayList<>();\n-    static List<GarbageCollectorMXBean> beans = ManagementFactory.getGarbageCollectorMXBeans();\n-\n@@ -50,22 +50,6 @@\n-        HashMap<String, Long> counts = new HashMap<>();\n-        int num = 16;\n-        for (int i = 0; i < num; i++) {\n-            memory.add(new byte[1024 * 128]);\n-        }\n-        System.gc();\n-\n-        for (int i = 0; i < beans.size(); i++) {\n-            GarbageCollectorMXBean bean = beans.get(i);\n-            counts.put(bean.getName(), bean.getCollectionCount());\n-        }\n-        memory = null;\n-        System.gc();\n-        boolean found = false;\n-        for (int i = 0; i < beans.size(); i++) {\n-            GarbageCollectorMXBean bean = beans.get(i);\n-            long before = counts.get(bean.getName());\n-            long after = bean.getCollectionCount();\n-            if (after >= before + 2) { \/\/ Must report a Remark and a Cleanup\n-                found = true;\n-                System.out.println(bean.getName() + \" reports a difference \" +\n-                                   after + \" - \" + before + \" = \" + (after - before));\n+        GarbageCollectorMXBean g1ConcGCBean = null;\n+        String expectedName = \"G1 Concurrent GC\";\n+        for (GarbageCollectorMXBean bean : ManagementFactory.getGarbageCollectorMXBeans()) {\n+            if (expectedName.equals(bean.getName())) {\n+                g1ConcGCBean = bean;\n+                break;\n@@ -74,0 +58,7 @@\n+        if (g1ConcGCBean == null) {\n+            throw new RuntimeException(\"Unable to find GC bean: \" + expectedName);\n+        }\n+\n+        long before = g1ConcGCBean.getCollectionCount();\n+        MixedGCProvoker.provokeConcMarkCycle();\n+        long after = g1ConcGCBean.getCollectionCount();\n@@ -75,2 +66,6 @@\n-        if (found == false) {\n-            throw new RuntimeException(\"Remark or Cleanup not reported by GarbageCollectorMXBean\");\n+        if (after >= before + 2) { \/\/ Must report a Remark and a Cleanup\n+            System.out.println(g1ConcGCBean.getName() + \" reports a difference \" +\n+                               after + \" - \" + before + \" = \" + (after - before));\n+        } else {\n+            throw new RuntimeException(\"Remark or Cleanup not reported by \" +\n+                                       g1ConcGCBean.getName());\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestRemarkCleanupMXBean.java","additions":29,"deletions":34,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -76,2 +76,1 @@\n-     * Provoke at least one mixed gc by starting a marking cycle, waiting for its end and triggering two GCs.\n-     * @param liveOldObjects The objects supposed to survive this marking cycle.\n+     * Provoke a concurrent mark cycle, and wait for it to end.\n@@ -79,1 +78,1 @@\n-    public static void provokeMixedGC(List<byte[]> liveOldObjects) {\n+    public static void provokeConcMarkCycle() {\n@@ -83,0 +82,8 @@\n+    }\n+\n+    \/**\n+     * Provoke at least one mixed gc by starting a marking cycle, waiting for its end and triggering two GCs.\n+     * @param liveOldObjects The objects supposed to survive this marking cycle.\n+     *\/\n+    public static void provokeMixedGC(List<byte[]> liveOldObjects) {\n+        provokeConcMarkCycle();\n","filename":"test\/hotspot\/jtreg\/gc\/testlibrary\/g1\/MixedGCProvoker.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @library \/test\/lib\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\n@@ -49,1 +49,0 @@\n-import jdk.test.whitebox.WhiteBox;\n@@ -51,0 +50,1 @@\n+import gc.testlibrary.g1.MixedGCProvoker;\n@@ -109,2 +109,1 @@\n-        \/\/ Trigger G1's concrurent mark\n-        WhiteBox wb = WhiteBox.getWhiteBox();\n+        \/\/ Trigger G1's concurrent mark\n@@ -112,4 +111,1 @@\n-            wb.g1StartConcMarkCycle();\n-            while (wb.g1InConcurrentMark()) {\n-                Thread.sleep(5);\n-            }\n+            MixedGCProvoker.provokeConcMarkCycle();\n","filename":"test\/jdk\/com\/sun\/management\/GarbageCollectorMXBean\/GarbageCollectionNotificationContentTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @library \/test\/lib\n+ * @library \/test\/lib \/test\/hotspot\/jtreg\n@@ -49,1 +49,0 @@\n-import jdk.test.whitebox.WhiteBox;\n@@ -51,0 +50,1 @@\n+import gc.testlibrary.g1.MixedGCProvoker;\n@@ -108,2 +108,1 @@\n-        \/\/ Trigger G1's concrurent mark\n-        WhiteBox wb = WhiteBox.getWhiteBox();\n+        \/\/ Trigger G1's concurrent mark\n@@ -111,4 +110,1 @@\n-            wb.g1StartConcMarkCycle();\n-            while (wb.g1InConcurrentMark()) {\n-                Thread.sleep(5);\n-            }\n+            MixedGCProvoker.provokeConcMarkCycle();\n","filename":"test\/jdk\/com\/sun\/management\/GarbageCollectorMXBean\/GarbageCollectionNotificationTest.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"}]}