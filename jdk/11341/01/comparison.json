{"files":[{"patch":"@@ -53,1 +53,1 @@\n-    _monitoring_scope(monitoring_support, true \/* full_gc *\/, true \/* all_memory_pools_affected *\/),\n+    _monitoring_scope(monitoring_support),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-  G1MonitoringScope       _monitoring_scope;\n+  G1FullMonitoringScope   _monitoring_scope;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCScope.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -93,0 +93,1 @@\n+  _conc_gc_memory_manager(\"G1 Concurrent GC\", \"end of concurrent GC pause\"),\n@@ -202,0 +203,2 @@\n+  _conc_gc_memory_manager.add_pool(_old_gen_pool);\n+\n@@ -213,1 +216,1 @@\n-  GrowableArray<GCMemoryManager*> memory_managers(2);\n+  GrowableArray<GCMemoryManager*> memory_managers(3);\n@@ -216,0 +219,1 @@\n+  memory_managers.append(&_conc_gc_memory_manager);\n@@ -347,6 +351,2 @@\n-G1MonitoringScope::G1MonitoringScope(G1MonitoringSupport* monitoring_support, bool full_gc, bool all_memory_pools_affected) :\n-  _monitoring_support(monitoring_support),\n-  _tcs(full_gc ? monitoring_support->_full_collection_counters : monitoring_support->_incremental_collection_counters),\n-  _tms(full_gc ? &monitoring_support->_full_gc_memory_manager : &monitoring_support->_incremental_memory_manager,\n-       G1CollectedHeap::heap()->gc_cause(), all_memory_pools_affected) {\n-}\n+G1MonitoringScope::G1MonitoringScope(G1MonitoringSupport* monitoring_support)\n+: _monitoring_support(monitoring_support) { }\n@@ -359,0 +359,21 @@\n+\n+G1IncMonitoringScope::G1IncMonitoringScope(G1MonitoringSupport* monitoring_support, bool all_memory_pools_affected) :\n+  G1MonitoringScope(monitoring_support),\n+  _tcs(monitoring_support->_incremental_collection_counters),\n+  _tms(&monitoring_support->_incremental_memory_manager,\n+       G1CollectedHeap::heap()->gc_cause(), all_memory_pools_affected) {\n+}\n+\n+G1FullMonitoringScope::G1FullMonitoringScope(G1MonitoringSupport* monitoring_support) :\n+  G1MonitoringScope(monitoring_support),\n+  _tcs(monitoring_support->_full_collection_counters),\n+  _tms(&monitoring_support->_full_gc_memory_manager,\n+       G1CollectedHeap::heap()->gc_cause()) {\n+}\n+\n+G1ConcMonitoringScope::G1ConcMonitoringScope(G1MonitoringSupport* monitoring_support) :\n+  G1MonitoringScope(monitoring_support),\n+  _tcs(monitoring_support->_conc_collection_counters),\n+  _tms(&monitoring_support->_conc_gc_memory_manager,\n+       G1CollectedHeap::heap()->gc_cause()) {\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.cpp","additions":28,"deletions":7,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -125,0 +125,3 @@\n+  friend class G1IncMonitoringScope;\n+  friend class G1FullMonitoringScope;\n+  friend class G1ConcMonitoringScope;\n@@ -131,0 +134,1 @@\n+  GCMemoryManager _conc_gc_memory_manager;\n@@ -213,4 +217,0 @@\n-  CollectorCounters* conc_collection_counters() {\n-    return _conc_collection_counters;\n-  }\n-\n@@ -242,0 +242,6 @@\n+public:\n+  G1MonitoringScope(G1MonitoringSupport* monitoring_support);\n+  ~G1MonitoringScope();\n+};\n+\n+class G1IncMonitoringScope : public G1MonitoringScope {\n@@ -245,2 +251,10 @@\n-  G1MonitoringScope(G1MonitoringSupport* monitoring_support, bool full_gc, bool all_memory_pools_affected);\n-  ~G1MonitoringScope();\n+  G1IncMonitoringScope(G1MonitoringSupport* monitoring_support, bool all_memory_pools_affected);\n+  ~G1IncMonitoringScope() { }\n+};\n+\n+class G1FullMonitoringScope : public G1MonitoringScope {\n+  TraceCollectorStats _tcs;\n+  TraceMemoryManagerStats _tms;\n+public:\n+  G1FullMonitoringScope(G1MonitoringSupport* monitoring_support);\n+  ~G1FullMonitoringScope() { }\n@@ -249,0 +263,7 @@\n+class G1ConcMonitoringScope : public G1MonitoringScope {\n+  TraceCollectorStats _tcs;\n+  TraceMemoryManagerStats _tms;\n+public:\n+  G1ConcMonitoringScope(G1MonitoringSupport* monitoring_support);\n+  ~G1ConcMonitoringScope() { }\n+};\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MonitoringSupport.hpp","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -175,1 +175,1 @@\n-  TraceCollectorStats tcs(g1h->monitoring_support()->conc_collection_counters());\n+  G1ConcMonitoringScope monitoring_scope(g1h->monitoring_support());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1049,3 +1049,2 @@\n-  G1MonitoringScope ms(monitoring_support(),\n-                       false \/* full_gc *\/,\n-                       collector_state()->in_mixed_phase() \/* all_memory_pools_affected *\/);\n+  G1IncMonitoringScope ms(monitoring_support(),\n+                          collector_state()->in_mixed_phase() \/* all_memory_pools_affected *\/);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -99,1 +99,2 @@\n-                     new GCBeanDescription(\"G1 Old Generation\",   new String[] {\"G1 Eden Space\", \"G1 Survivor Space\", \"G1 Old Gen\"}));\n+                     new GCBeanDescription(\"G1 Old Generation\",   new String[] {\"G1 Eden Space\", \"G1 Survivor Space\", \"G1 Old Gen\"}),\n+                     new GCBeanDescription(\"G1 Concurrent GC\",    new String[] {\"G1 Old Gen\"}));\n","filename":"test\/hotspot\/jtreg\/gc\/TestMemoryMXBeansAndPoolsPresence.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -107,0 +107,4 @@\n+                } else if (info.getGcName().startsWith(\"G1\")) {\n+                    if (\"end of minor GC\".equals(info.getGcAction())) {\n+                        gcCount++;\n+                    }\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationTools.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}