{"files":[{"patch":"@@ -483,0 +483,4 @@\n+        visitVarDef(tree.sym, tree.init);\n+    }\n+\n+    private void visitVarDef(VarSymbol sym, JCExpression expr) {\n@@ -485,1 +489,1 @@\n-        if (suppressed.contains(tree.sym))\n+        if (suppressed.contains(sym))\n@@ -489,3 +493,3 @@\n-        scan(tree.init);\n-        if (isParamOrVar(tree.sym))\n-            refs.replaceExprs(depth, direct -> new VarRef(tree.sym, direct));\n+        scan(expr);\n+        if (isParamOrVar(sym))\n+            refs.replaceExprs(depth, indirection -> new VarRef(sym, indirection));\n@@ -681,1 +685,4 @@\n-        visitLooped(tree, super::visitForeachLoop);\n+        visitLooped(tree, foreach -> {\n+            visitVarDef(foreach.var.sym, foreach.expr);\n+            scan(foreach.body);\n+        });\n@@ -1103,1 +1110,1 @@\n-            Assert.check(checkInvariants(true, promote));\n+            Assert.check(checkInvariants(true, true));\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ThisEscapeAnalyzer.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -604,0 +604,16 @@\n+\n+    \/\/ Verify no assertion error occurs (JDK-8317336)\n+    public static class ThisAssertionError {\n+        public ThisAssertionError() {\n+            System.out.println((Supplier<Object>)() -> this);\n+        }\n+    }\n+\n+    \/\/ Verify no assertion error occurs (JDK-8317336)\n+    public static class ThisAssertionError2 {\n+        public ThisAssertionError2() {\n+            ThisAssertionError2[] array = new ThisAssertionError2[] { this };\n+            for (Object obj : array)\n+                ;\n+        }\n+    }\n","filename":"test\/langtools\/tools\/javac\/warnings\/ThisEscape.java","additions":16,"deletions":0,"binary":false,"changes":16,"status":"modified"}]}