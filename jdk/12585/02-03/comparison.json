{"files":[{"patch":"@@ -212,7 +212,1 @@\n-  DeoptimizationScope deopt_scope;\n-  {\n-    MutexLocker mu_r(THREAD, Compile_lock); \/\/ add_to_hierarchy asserts this.\n-    SystemDictionary::add_to_hierarchy(&deopt_scope, result);\n-  }\n-  \/\/ Perform the deopt handshake outside Compile_lock.\n-  deopt_scope.deoptimize_marked();\n+  SystemDictionary::add_to_hierarchy(result, THREAD);\n","filename":"src\/hotspot\/share\/cds\/lambdaFormInvokers.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -902,9 +902,3 @@\n-  DeoptimizationScope deopt_scope;\n-  {\n-    MutexLocker mu_r(THREAD, Compile_lock);\n-    \/\/ Add to class hierarchy, and do possible deoptimizations.\n-    add_to_hierarchy(&deopt_scope, k);\n-    \/\/ But, do not add to dictionary.\n-  }\n-  \/\/ Perform the deopt handshake outside Compile_lock.\n-  deopt_scope.deoptimize_marked();\n+  \/\/ Add to class hierarchy, and do possible deoptimizations.\n+  \/\/ But, do not add to dictionary.\n+  add_to_hierarchy(k, THREAD);\n@@ -1496,1 +1490,3 @@\n-  DeoptimizationScope deopt_scope;\n+  \/\/ Add to class hierarchy, and do possible deoptimizations.\n+  add_to_hierarchy(k, THREAD);\n+\n@@ -1499,4 +1495,0 @@\n-\n-    \/\/ Add to class hierarchy, and do possible deoptimizations.\n-    add_to_hierarchy(&deopt_scope, k);\n-\n@@ -1507,2 +1499,0 @@\n-  \/\/ Perform the deopt handshake outside Compile_lock.\n-  deopt_scope.deoptimize_marked();\n@@ -1624,5 +1614,8 @@\n-void SystemDictionary::add_to_hierarchy(DeoptimizationScope* deopt_scope, InstanceKlass* k) {\n-  assert(k != nullptr, \"just checking\");\n-  if (Universe::is_fully_initialized()) {\n-    assert_locked_or_safepoint(Compile_lock);\n-  }\n+void SystemDictionary::add_to_hierarchy(InstanceKlass* k, JavaThread* current) {\n+  DeoptimizationScope deopt_scope;\n+  {\n+    MutexLocker ml(current, Compile_lock);\n+    assert(k != nullptr, \"just checking\");\n+    if (Universe::is_fully_initialized()) {\n+      assert_locked_or_safepoint(Compile_lock);\n+    }\n@@ -1630,4 +1623,4 @@\n-  k->set_init_state(InstanceKlass::loaded);\n-  \/\/ make sure init_state store is already done.\n-  \/\/ The compiler reads the hierarchy outside of the Compile_lock.\n-  \/\/ Access ordering is used to add to hierarchy.\n+    k->set_init_state(InstanceKlass::loaded);\n+    \/\/ make sure init_state store is already done.\n+    \/\/ The compiler reads the hierarchy outside of the Compile_lock.\n+    \/\/ Access ordering is used to add to hierarchy.\n@@ -1635,3 +1628,3 @@\n-  \/\/ Link into hierarchy.\n-  k->append_to_sibling_list();                    \/\/ add to superklass\/sibling list\n-  k->process_interfaces();                        \/\/ handle all \"implements\" declarations\n+    \/\/ Link into hierarchy.\n+    k->append_to_sibling_list();                    \/\/ add to superklass\/sibling list\n+    k->process_interfaces();                        \/\/ handle all \"implements\" declarations\n@@ -1639,4 +1632,5 @@\n-  \/\/ Now flush all code that depended on old class hierarchy.\n-  \/\/ Note: must be done *after* linking k into the hierarchy (was bug 12\/9\/97)\n-  if (Universe::is_fully_initialized()) {\n-    CodeCache::mark_dependents_on(deopt_scope, k);\n+    \/\/ Now flush all code that depended on old class hierarchy.\n+    \/\/ Note: must be done *after* linking k into the hierarchy (was bug 12\/9\/97)\n+    if (Universe::is_fully_initialized()) {\n+      CodeCache::mark_dependents_on(&deopt_scope, k);\n+    }\n@@ -1644,0 +1638,2 @@\n+  \/\/ Perform the deopt handshake outside Compile_lock.\n+  deopt_scope.deoptimize_marked();\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.cpp","additions":28,"deletions":32,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -369,2 +369,2 @@\n-  \/\/ Setup link to hierarchy\n-  static void add_to_hierarchy(DeoptimizationScope* deopt_scope, InstanceKlass* k);\n+  \/\/ Setup link to hierarchy and deoptimize\n+  static void add_to_hierarchy(InstanceKlass* k, JavaThread* current);\n","filename":"src\/hotspot\/share\/classfile\/systemDictionary.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -853,3 +853,0 @@\n-  DeoptimizationScope deopt_scope;\n-  {\n-    MutexLocker mu_r(THREAD, Compile_lock);\n@@ -857,6 +854,3 @@\n-    \/\/ Add to class hierarchy, and do possible deoptimizations.\n-    SystemDictionary::add_to_hierarchy(&deopt_scope, loaded_lambda);\n-    \/\/ But, do not add to dictionary.\n-  }\n-  \/\/ Perform the deopt handshake outside Compile_lock.\n-  deopt_scope.deoptimize_marked();\n+  \/\/ Add to class hierarchy, and do possible deoptimizations.\n+  SystemDictionary::add_to_hierarchy(loaded_lambda, THREAD);\n+  \/\/ But, do not add to dictionary.\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.cpp","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -252,3 +252,1 @@\n-  DeoptimizationScope deopt_scope;\n-  SystemDictionary::add_to_hierarchy(&deopt_scope, klass);\n-  deopt_scope.deoptimize_marked();\n+  SystemDictionary::add_to_hierarchy(klass, THREAD);\n","filename":"src\/hotspot\/share\/classfile\/vmClasses.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}