{"files":[{"patch":"@@ -165,1 +165,0 @@\n-JVM_IsThreadAlive\n","filename":"make\/data\/hotspot-symbols\/symbols-unix","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -269,3 +269,0 @@\n-JNIEXPORT jboolean JNICALL\n-JVM_IsThreadAlive(JNIEnv *env, jobject thread);\n-\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3023,6 +3023,0 @@\n-JVM_ENTRY(jboolean, JVM_IsThreadAlive(JNIEnv* env, jobject jthread))\n-  oop thread_oop = JNIHandles::resolve_non_null(jthread);\n-  return java_lang_Thread::is_alive(thread_oop);\n-JVM_END\n-\n-\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -229,1 +229,7 @@\n-    \/* Reserved for exclusive use by the JVM, maybe move to FieldHolder *\/\n+    \/* Reserved for exclusive use by the JVM. Cannot be moved to the FieldHolder\n+       as it needs to be set by the VM before executing the constructor that\n+       will create the FieldHolder. The historically named `eetop`holds the address\n+       of the underlying VM JavaThread, and is set to non-zero when the thread is started,\n+       and reset to zero when the thread terminates. A non-zero value indicates this thread\n+       isAlive().\n+    *\/\n@@ -1840,1 +1846,3 @@\n-     * This method is non-final so it can be overridden.\n+     * This method is non-final so it can be overridden by VirtualThread.\n+     * This method needs to be synchronized to ensure that thread termination\n+     * happens-before isAlive() returning false.\n@@ -1842,2 +1850,2 @@\n-    boolean alive() {\n-        return isAlive0();\n+    synchronized boolean alive() {\n+        return eetop != 0;\n@@ -1845,1 +1853,0 @@\n-    private native boolean isAlive0();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Thread.java","additions":12,"deletions":5,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-    {\"isAlive0\",         \"()Z\",        (void *)&JVM_IsThreadAlive},\n","filename":"src\/java.base\/share\/native\/libjava\/Thread.c","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}