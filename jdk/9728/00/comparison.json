{"files":[{"patch":"@@ -49,2 +49,2 @@\n-@Warmup(iterations = 20, time = 1, timeUnit = TimeUnit.SECONDS)\n-@Measurement(iterations = 20, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AddIdealNotXPlusC.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -34,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,1 +41,3 @@\n-\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n@@ -43,1 +47,0 @@\n-    @Fork(value = 1, warmups = 1)\n@@ -50,1 +53,0 @@\n-    @Fork(value = 1, warmups = 1)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ArrayAllocation.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -41,0 +44,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ArrayBoundCheckRemoval.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,0 +42,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ArrayClear.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -35,0 +37,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -42,0 +45,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ArrayFill.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import org.openjdk.jmh.annotations.Fork;\n@@ -28,0 +29,1 @@\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ArrayStoreCheck.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-@Warmup(iterations = 3, time = 5, timeUnit = TimeUnit.SECONDS)\n-@Measurement(iterations = 3, time = 5, timeUnit = TimeUnit.SECONDS)\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n@@ -35,1 +35,1 @@\n-@Fork(value=1)\n+@Fork(value=2)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/AutoVectorization2DArray.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,0 +33,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/BitSetAndReset.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -29,0 +31,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -35,0 +38,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/BitTest.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,1 +35,1 @@\n-import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,1 +41,1 @@\n-@Fork(jvmArgsPrepend = {\"-XX:-EliminateAllocations\", \"-XX:-DoEscapeAnalysis\"})\n+@Fork(value = 3, jvmArgsPrepend = {\"-XX:-EliminateAllocations\", \"-XX:-DoEscapeAnalysis\"})\n@@ -43,0 +45,2 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ClearMemory.java","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -42,0 +45,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/CopyLoop.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -42,0 +45,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/DivRem.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -44,0 +47,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/Explosion.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/FloatingScalarVectorAbsDiff.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/FpMinMaxIntrinsics.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.util.concurrent.TimeUnit;\n@@ -31,0 +32,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/IndexVector.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -38,0 +41,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/InnerClassNullRef.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,0 +42,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/InterfaceCalls.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,0 +40,2 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n@@ -64,1 +67,1 @@\n-    @Fork(value=1, jvmArgsAppend={\"-XX:TieredStopAtLevel=1\"})\n+    @Fork(value=3, jvmArgsAppend={\"-XX:TieredStopAtLevel=1\"})\n@@ -74,1 +77,1 @@\n-    @Fork(value=1)\n+    @Fork(value=3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/InterfacePrivateCalls.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,2 +41,3 @@\n-@Fork(1)\n-\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/IterativeEA.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,1 +32,3 @@\n-@Fork(value = 1, jvmArgsAppend = {\"-XX:LoopUnrollLimit=1\"})\n+@Fork(value = 2, jvmArgsAppend = {\"-XX:LoopUnrollLimit=1\"})\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LeaInstruction.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,2 +30,2 @@\n-@Warmup(iterations = 3, time = 5, timeUnit = TimeUnit.SECONDS)\n-@Measurement(iterations = 4, time = 5, timeUnit = TimeUnit.SECONDS)\n+@Warmup(iterations = 3, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n@@ -35,1 +35,1 @@\n-@Fork(value=1)\n+@Fork(value=3)\n@@ -37,1 +37,1 @@\n-    @Param({\"16\", \"32\", \"64\", \"128\", \"256\", \"512\", \"1024\"})\n+    @Param({\"16\", \"32\", \/* \"64\", \"128\", \"256\", \"512\", *\/ \"1024\"})\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LoopUnroll.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MacroLogicOpt.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -35,0 +35,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/MaxMinOptimizeTest.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -43,0 +45,2 @@\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/ModPowerOf2.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -42,0 +45,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/Multiplication.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -29,0 +31,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -37,0 +40,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/PostAllocationStores.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,3 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n@@ -32,1 +35,1 @@\n-import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -36,0 +39,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SharedLoopHeader.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -43,3 +43,3 @@\n-@Warmup(iterations = 10, time = 500, timeUnit = TimeUnit.MILLISECONDS)\n-@Measurement(iterations = 5, time = 1000, timeUnit = TimeUnit.MILLISECONDS)\n-@Fork(3)\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/Signum.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -41,0 +44,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/SpillCode.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -31,0 +33,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -41,0 +44,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/StoreAfterStore.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -42,0 +45,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/Straighten.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -33,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,0 +42,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/StringConstructorBenchmark.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n@@ -35,1 +38,1 @@\n-    @Param({\"512\",\"1024\", \"2048\"})\n+    @Param({\"512\", \/* \"1024\", *\/ \"2048\"})\n@@ -366,1 +369,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgsPrepend = {\n@@ -373,1 +376,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgsPrepend = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/TypeVectorOperations.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -34,0 +35,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,0 +41,2 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/UnsignedComparison.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n@@ -73,1 +75,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgsPrepend = {\n@@ -80,1 +82,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgsPrepend = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorBitCount.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorIntMinMax.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n@@ -122,1 +125,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgsPrepend = {\n@@ -129,1 +132,1 @@\n-    @Fork(value = 1, jvmArgsPrepend = {\n+    @Fork(value = 2, jvmArgsPrepend = {\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorReduction.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,0 +35,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorReductionFloatingMinMax.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorShiftAccumulate.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -34,0 +34,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/VectorShiftRight.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,2 @@\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n@@ -32,0 +34,1 @@\n+import org.openjdk.jmh.annotations.Warmup;\n@@ -39,0 +42,3 @@\n+@Warmup(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 4, time = 2, timeUnit = TimeUnit.SECONDS)\n+@Fork(value = 3)\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/WriteBarrier.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}