{"files":[{"patch":"@@ -872,2 +872,2 @@\n-  do_intrinsic(_VectorBroadcastCoerced, jdk_internal_vm_vector_VectorSupport, vector_broadcast_coerced_name, vector_broadcast_coerced_sig, F_S)\\\n-   do_signature(vector_broadcast_coerced_sig, \"(Ljava\/lang\/Class;\"                                                                             \\\n+  do_intrinsic(_VectorFromBitsCoerced, jdk_internal_vm_vector_VectorSupport, vector_frombits_coerced_name, vector_frombits_coerced_sig, F_S)   \\\n+   do_signature(vector_frombits_coerced_sig, \"(Ljava\/lang\/Class;\"                                                                              \\\n@@ -879,1 +879,1 @@\n-                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$BroadcastOperation;)\"                                    \\\n+                                               \"Ljdk\/internal\/vm\/vector\/VectorSupport$FromBitsCoercedOperation;)\"                              \\\n@@ -881,1 +881,1 @@\n-   do_name(vector_broadcast_coerced_name, \"broadcastCoerced\")                                                                                  \\\n+   do_name(vector_frombits_coerced_name, \"fromBitsCoerced\")                                                                                    \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -693,1 +693,1 @@\n-  case vmIntrinsics::_VectorBroadcastCoerced:\n+  case vmIntrinsics::_VectorFromBitsCoerced:\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -655,2 +655,2 @@\n-  case vmIntrinsics::_VectorBroadcastCoerced:\n-    return inline_vector_broadcast_coerced();\n+  case vmIntrinsics::_VectorFromBitsCoerced:\n+    return inline_vector_frombits_coerced();\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -317,1 +317,1 @@\n-  bool inline_vector_broadcast_coerced();\n+  bool inline_vector_frombits_coerced();\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -792,2 +792,2 @@\n-\/\/ M broadcastCoerced(Class<? extends M> vmClass, Class<E> elementType, int length,\n-\/\/                    long bits, int bitwise, S s,\n+\/\/ M fromBitsCoerced(Class<? extends M> vmClass, Class<E> elementType, int length,\n+\/\/                    long bits, int mode, S s,\n@@ -795,1 +795,1 @@\n-bool LibraryCallKit::inline_vector_broadcast_coerced() {\n+bool LibraryCallKit::inline_vector_frombits_coerced() {\n@@ -799,0 +799,5 @@\n+  \/\/ Mode argument determines the mode of operation it can take following values:-\n+  \/\/ MODE_BROADCAST for vector Vector.boradcast operation.\n+  \/\/ MODE_BITS_COERCED_BROADCAST for VectorMask.maskAll operation.\n+  \/\/ MODE_BITS_COERCED_LONG_TO_MASK for VectorMask.fromLong operation.\n+  const TypeInt*     mode         = gvn().type(argument(5))->isa_int();\n@@ -800,9 +805,1 @@\n-  \/\/ bitwise argument signifies that each bit of source is to be considered while\n-  \/\/ broadcasting. It is used to differentiate between VectorMask.maskAll and\n-  \/\/ VectoMask.fromLong operations, where in former case long 'bits' contains\n-  \/\/ mask value (true\/false) to be replicated across mask lanes and in later\n-  \/\/ case each bit of long argument is considered separately while setting\n-  \/\/ corresponding mask lane.\n-  const TypeInt*     bitwise      = gvn().type(argument(5))->isa_int();\n-\n-  if (vector_klass == NULL || elem_klass == NULL || vlen == NULL || bitwise == NULL ||\n+  if (vector_klass == NULL || elem_klass == NULL || vlen == NULL || mode == NULL ||\n@@ -810,1 +807,1 @@\n-      !vlen->is_con() || !bitwise->is_con()) {\n+      !vlen->is_con() || !mode->is_con()) {\n@@ -840,1 +837,1 @@\n-  bool is_fromlong = is_mask ? bitwise->get_con() == 1 : false;\n+  int  bcast_mode = mode->get_con();\n@@ -842,1 +839,1 @@\n-  int opc = is_fromlong ? Op_VectorLongToMask : VectorNode::replicate_opcode(elem_bt);\n+  int opc = bcast_mode == VectorSupport::MODE_BITS_COERCED_LONG_TO_MASK ? Op_VectorLongToMask : VectorNode::replicate_opcode(elem_bt);\n@@ -846,1 +843,1 @@\n-      tty->print_cr(\"  ** not supported: arity=0 op=broadcast vlen=%d etype=%s ismask=%d isfromlong=%d\",\n+      tty->print_cr(\"  ** not supported: arity=0 op=broadcast vlen=%d etype=%s ismask=%d bcast_mode=%d\",\n@@ -849,1 +846,1 @@\n-                    is_fromlong ? 1 : 0);\n+                    bcast_mode);\n@@ -858,1 +855,1 @@\n-  if (is_fromlong) {\n+  if (opc == Op_VectorLongToMask) {\n@@ -892,1 +889,1 @@\n-    broadcast = VectorNode::scalar2vector(elem, num_elem, Type::get_const_basic_type(elem_bt), is_mask);\n+    broadcast = VectorNode::scalar2vector(elem, num_elem, Type::get_const_basic_type(elem_bt), bcast_mode);\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":16,"deletions":19,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -597,1 +597,1 @@\n-VectorNode* VectorNode::scalar2vector(Node* s, uint vlen, const Type* opd_t, bool is_mask) {\n+VectorNode* VectorNode::scalar2vector(Node* s, uint vlen, const Type* opd_t, int mode) {\n@@ -599,1 +599,2 @@\n-  if (is_mask && Matcher::match_rule_supported_vector(Op_MaskAll, vlen, bt)) {\n+  if (mode == VectorSupport::MODE_BITS_COERCED_BROADCAST &&\n+      Matcher::match_rule_supported_vector(Op_MaskAll, vlen, bt)) {\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"prims\/vectorSupport.hpp\"\n@@ -73,1 +74,1 @@\n-  static VectorNode* scalar2vector(Node* s, uint vlen, const Type* opd_t, bool is_mask = false);\n+  static VectorNode* scalar2vector(Node* s, uint vlen, const Type* opd_t, int mode = VectorSupport::MODE_BROADCAST);\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,0 +124,6 @@\n+  enum {\n+    MODE_BROADCAST = 0,\n+    MODE_BITS_COERCED_BROADCAST = 1,\n+    MODE_BITS_COERCED_LONG_TO_MASK = 2\n+  };\n+\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.hpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -117,0 +117,5 @@\n+    \/\/ Various broadcasting modes.\n+    public static final int MODE_BROADCAST = 0;\n+    public static final int MODE_BITS_COERCED_BROADCAST = 1;\n+    public static final int MODE_BITS_COERCED_LONG_TO_MASK = 2;\n+\n@@ -160,3 +165,3 @@\n-    public interface BroadcastOperation<VM extends VectorPayload,\n-                                        S extends VectorSpecies<?>> {\n-        VM broadcast(long l, S s);\n+    public interface FromBitsCoercedOperation<VM extends VectorPayload,\n+                                              S extends VectorSpecies<?>> {\n+        VM fromBits(long l, S s);\n@@ -170,4 +175,4 @@\n-    VM broadcastCoerced(Class<? extends VM> vmClass, Class<E> eClass,\n-                        int length,\n-                        long bits, int bitwise, S s,\n-                        BroadcastOperation<VM, S> defaultImpl) {\n+    VM fromBitsCoerced(Class<? extends VM> vmClass, Class<E> eClass,\n+                       int length,\n+                       long bits, int mode, S s,\n+                       FromBitsCoercedOperation<VM, S> defaultImpl) {\n@@ -175,1 +180,1 @@\n-        return defaultImpl.broadcast(bits, s);\n+        return defaultImpl.fromBits(bits, s);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/vector\/VectorSupport.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -760,3 +760,3 @@\n-            return VectorSupport.broadcastCoerced(Byte128Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte128Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -792,3 +792,3 @@\n-            return VectorSupport.broadcastCoerced(Byte256Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte256Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -856,3 +856,3 @@\n-            return VectorSupport.broadcastCoerced(Byte512Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte512Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -744,3 +744,3 @@\n-            return VectorSupport.broadcastCoerced(Byte64Mask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Byte64Mask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -730,3 +730,3 @@\n-            return VectorSupport.broadcastCoerced(ByteMaxMask.class, byte.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(ByteMaxMask.class, byte.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), byte.class, species.length(),\n-                                0, 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), byte.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -4152,1 +4152,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -4154,1 +4154,1 @@\n-                    bits, 0, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -721,3 +721,3 @@\n-            return VectorSupport.broadcastCoerced(Double128Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double128Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -725,3 +725,3 @@\n-            return VectorSupport.broadcastCoerced(Double256Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double256Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -733,3 +733,3 @@\n-            return VectorSupport.broadcastCoerced(Double512Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double512Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -719,3 +719,3 @@\n-            return VectorSupport.broadcastCoerced(Double64Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Double64Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -718,3 +718,3 @@\n-            return VectorSupport.broadcastCoerced(DoubleMaxMask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(DoubleMaxMask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -447,2 +447,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), double.class, species.length(),\n-                        toBits(0.0f), 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), double.class, species.length(),\n+                        toBits(0.0f), MODE_BROADCAST, vsp,\n@@ -3757,1 +3757,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3759,1 +3759,1 @@\n-                    bits, 0, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -725,3 +725,3 @@\n-            return VectorSupport.broadcastCoerced(Float128Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float128Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -733,3 +733,3 @@\n-            return VectorSupport.broadcastCoerced(Float256Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float256Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -749,3 +749,3 @@\n-            return VectorSupport.broadcastCoerced(Float512Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float512Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -721,3 +721,3 @@\n-            return VectorSupport.broadcastCoerced(Float64Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Float64Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -718,3 +718,3 @@\n-            return VectorSupport.broadcastCoerced(FloatMaxMask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(FloatMaxMask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -447,2 +447,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), float.class, species.length(),\n-                        toBits(0.0f), 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), float.class, species.length(),\n+                        toBits(0.0f), MODE_BROADCAST, vsp,\n@@ -3707,1 +3707,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3709,1 +3709,1 @@\n-                    bits, 0, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -736,3 +736,3 @@\n-            return VectorSupport.broadcastCoerced(Int128Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int128Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -744,3 +744,3 @@\n-            return VectorSupport.broadcastCoerced(Int256Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int256Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -760,3 +760,3 @@\n-            return VectorSupport.broadcastCoerced(Int512Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int512Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -732,3 +732,3 @@\n-            return VectorSupport.broadcastCoerced(Int64Mask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Int64Mask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -730,3 +730,3 @@\n-            return VectorSupport.broadcastCoerced(IntMaxMask.class, int.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(IntMaxMask.class, int.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), int.class, species.length(),\n-                                0, 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), int.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -3877,1 +3877,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3879,1 +3879,1 @@\n-                    bits, 0, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -722,3 +722,3 @@\n-            return VectorSupport.broadcastCoerced(Long128Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long128Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -726,3 +726,3 @@\n-            return VectorSupport.broadcastCoerced(Long256Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long256Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -734,3 +734,3 @@\n-            return VectorSupport.broadcastCoerced(Long512Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long512Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -720,3 +720,3 @@\n-            return VectorSupport.broadcastCoerced(Long64Mask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Long64Mask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -720,3 +720,3 @@\n-            return VectorSupport.broadcastCoerced(LongMaxMask.class, long.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(LongMaxMask.class, long.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), long.class, species.length(),\n-                                0, 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), long.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -3812,1 +3812,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -3814,1 +3814,1 @@\n-                    bits, 0, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -744,3 +744,3 @@\n-            return VectorSupport.broadcastCoerced(Short128Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short128Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -760,3 +760,3 @@\n-            return VectorSupport.broadcastCoerced(Short256Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short256Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -792,3 +792,3 @@\n-            return VectorSupport.broadcastCoerced(Short512Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short512Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -736,3 +736,3 @@\n-            return VectorSupport.broadcastCoerced(Short64Mask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(Short64Mask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -730,3 +730,3 @@\n-            return VectorSupport.broadcastCoerced(ShortMaxMask.class, short.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced(ShortMaxMask.class, short.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -458,2 +458,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), short.class, species.length(),\n-                                0, 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), short.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -4146,1 +4146,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -4148,1 +4148,1 @@\n-                    bits, 0, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -242,7 +242,8 @@\n-        return VectorSupport.broadcastCoerced(vsp.maskType(), vsp.elementType(), vsp.laneCount(), bits, 1, vsp,\n-                                              (m, s) -> {\n-                                                  if (m == (m >> 1)) {\n-                                                      \/\/ Special case.\n-                                                      assert(m == 0 || m == -1);\n-                                                      return s.maskAll(m != 0);\n-                                                  }\n+        return VectorSupport.fromBitsCoerced(vsp.maskType(), vsp.elementType(), vsp.laneCount(), bits,\n+                                             VectorSupport.MODE_BITS_COERCED_LONG_TO_MASK, vsp,\n+                                             (m, s) -> {\n+                                                 if (m == (m >> 1)) {\n+                                                     \/\/ Special case.\n+                                                     assert(m == 0 || m == -1);\n+                                                     return s.maskAll(m != 0);\n+                                                 }\n@@ -250,7 +251,7 @@\n-                                                  long shifted = m;\n-                                                  boolean[] a = new boolean[s.laneCount()];\n-                                                  for (int i = 0; i < a.length; i++) {\n-                                                      a[i] = ((shifted & 1) != 0);\n-                                                      shifted >>= 1;  \/\/ replicate sign bit\n-                                                  }\n-                                                  return fromValues(s, a);\n+                                                 long shifted = m;\n+                                                 boolean[] a = new boolean[s.laneCount()];\n+                                                 for (int i = 0; i < a.length; i++) {\n+                                                     a[i] = ((shifted & 1) != 0);\n+                                                     shifted >>= 1;  \/\/ replicate sign bit\n+                                                 }\n+                                                 return fromValues(s, a);\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/VectorMask.java","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -473,2 +473,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), $type$.class, species.length(),\n-                        toBits(0.0f), 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), $type$.class, species.length(),\n+                        toBits(0.0f), MODE_BROADCAST, vsp,\n@@ -477,2 +477,2 @@\n-        return VectorSupport.broadcastCoerced(vsp.vectorType(), $type$.class, species.length(),\n-                                0, 0, vsp,\n+        return VectorSupport.fromBitsCoerced(vsp.vectorType(), $type$.class, species.length(),\n+                                0, MODE_BROADCAST, vsp,\n@@ -5330,1 +5330,1 @@\n-                VectorSupport.broadcastCoerced(\n+                VectorSupport.fromBitsCoerced(\n@@ -5332,1 +5332,1 @@\n-                    bits, 0, this,\n+                    bits, MODE_BROADCAST, this,\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1003,3 +1003,3 @@\n-            return VectorSupport.broadcastCoerced($masktype$.class, $bitstype$.class, VLENGTH,\n-                                                  (bit ? -1 : 0), 0, null,\n-                                                  (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n+            return VectorSupport.fromBitsCoerced($masktype$.class, $bitstype$.class, VLENGTH,\n+                                                 (bit ? -1 : 0), MODE_BITS_COERCED_BROADCAST, null,\n+                                                 (v, __) -> (v != 0 ? TRUE_MASK : FALSE_MASK));\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}