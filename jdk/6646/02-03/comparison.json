{"files":[{"patch":"@@ -4068,1 +4068,0 @@\n-  movq(rtmp2, src);\n@@ -4070,1 +4069,1 @@\n-  pdep(rtmp1, rtmp2, rtmp1);\n+  pdep(rtmp1, src, rtmp1);\n@@ -4072,0 +4071,1 @@\n+    movq(rtmp2, src);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -9506,1 +9506,1 @@\n-instruct long_to_maskGT8_avx(vec dst, rRegL src, rRegL rtmp1, rRegL rtmp2, vec xtmp1, vec xtmp2, rFlagsReg cr) %{\n+instruct long_to_maskGT8_avx(vec dst, rRegL src, rRegL rtmp1, rRegL rtmp2, vec xtmp1, rFlagsReg cr) %{\n@@ -9509,2 +9509,2 @@\n-  effect(TEMP dst, TEMP rtmp1, TEMP rtmp2, TEMP xtmp1, TEMP xtmp2, KILL cr);\n-  format %{ \"long_to_mask_avx $dst, $src\\t! using $rtmp1, $rtmp2, $xtmp1, $xtmp2  as TEMP\" %}\n+  effect(TEMP dst, TEMP rtmp1, TEMP rtmp2, TEMP xtmp1, KILL cr);\n+  format %{ \"long_to_mask_avx $dst, $src\\t! using $rtmp1, $rtmp2, $xtmp1, as TEMP\" %}\n@@ -9521,1 +9521,1 @@\n-instruct long_to_mask_evex(kReg dst, rRegL src, rRegL rtmp) %{\n+instruct long_to_mask_evex(kReg dst, rRegL src) %{\n@@ -9524,2 +9524,1 @@\n-  effect(TEMP rtmp);\n-  format %{ \"long_to_mask_evex $dst, $src\\t! using $rtmp as TEMP\" %}\n+  format %{ \"long_to_mask_evex $dst, $src\\t!\" %}\n@@ -9528,2 +9527,1 @@\n-    __ movq($rtmp$$Register, $src$$Register);\n-    __ kmov($dst$$KRegister, $rtmp$$Register);\n+    __ kmov($dst$$KRegister, $src$$Register);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -800,2 +800,1 @@\n-  \/\/ MODE_BROADCAST for vector Vector.boradcast operation.\n-  \/\/ MODE_BITS_COERCED_BROADCAST for VectorMask.maskAll operation.\n+  \/\/ MODE_BROADCAST for vector Vector.boradcast and VectorMask.maskAll operations.\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}