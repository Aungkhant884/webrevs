{"files":[{"patch":"@@ -35,0 +35,3 @@\n+import java.lang.ref.PhantomReference;\n+import java.lang.ref.Reference;\n+import java.lang.ref.ReferenceQueue;\n@@ -39,0 +42,1 @@\n+import java.util.function.BooleanSupplier;\n@@ -65,2 +69,5 @@\n-        collect();\n-        \/\/ assertTrue(map.isEmpty() || isSoft, \"Weak not collecting\");\n+        if (!isSoft) {\n+            if (!collect(() -> map.isEmpty())) {\n+                throw new RuntimeException(\"WeakReference map not collecting!\");\n+            }\n+        }\n@@ -74,2 +81,5 @@\n-        collect();\n-        \/\/ assertTrue(set.isEmpty() || isSoft, \"Weak not collecting\");\n+        if (!isSoft) {\n+            if (!collect(() -> set.isEmpty())) {\n+                throw new RuntimeException(\"WeakReference set not collecting!\");\n+            }\n+        }\n@@ -119,4 +129,11 @@\n-    static void collect() {\n-        System.gc();\n-        sleep();\n-    }\n+    \/\/ Borrowed from jdk.test.lib.util.ForceGC but couldn't use from java.base\/jdk.internal.util\n+    static boolean collect(BooleanSupplier booleanSupplier) {\n+        ReferenceQueue<Object> queue = new ReferenceQueue<>();\n+        Object obj = new Object();\n+        PhantomReference<Object> ref = new PhantomReference<>(obj, queue);\n+        obj = null;\n+        Reference.reachabilityFence(obj);\n+        Reference.reachabilityFence(ref);\n+        long timeout = 1000L;\n+        long quanta = 200L;\n+        long retries = timeout \/ quanta;\n@@ -124,5 +141,12 @@\n-    static void sleep() {\n-        try {\n-            Thread.sleep(100L);\n-        } catch (InterruptedException e) {\n-            throw new RuntimeException(e);\n+        for (; retries >= 0; retries--) {\n+            if (booleanSupplier.getAsBoolean()) {\n+                return true;\n+            }\n+\n+            System.gc();\n+\n+            try {\n+                queue.remove(quanta);\n+            } catch (InterruptedException ie) {\n+                \/\/ ignore, the loop will try again\n+            }\n@@ -130,0 +154,2 @@\n+\n+        return booleanSupplier.getAsBoolean();\n","filename":"test\/jdk\/jdk\/internal\/util\/ReferencedKeyTest.java","additions":39,"deletions":13,"binary":false,"changes":52,"status":"modified"}]}