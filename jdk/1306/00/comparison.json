{"files":[{"patch":"@@ -245,1 +245,2 @@\n- * [Section 1.14, \"Circular References\"<\/a> for additional information).\n+ * <cite>Java Object Serialization Specification,<\/cite>\n+ * Section 1.14, \"Circular References\"<\/a> for additional information).\n@@ -265,1 +266,1 @@\n- *     Object Serialization Specification, Section 3, Object Input Classes<\/a>\n+ *      <cite>Java Object Serialization Specification,<\/cite> Section 3, \"Object Input Classes\"<\/a>\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -164,1 +164,1 @@\n- *     Object Serialization Specification, Section 2, Object Output Classes<\/a>\n+ *      <cite>Java Object Serialization Specification,<\/cite> Section 2, \"Object Output Classes\"<\/a>\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n- *     Object Serialization Specification, Section 4.6, Stream Unique Identifiers<\/a>.\n+ *    <cite>Java Object Serialization Specification,<\/cite> Section 4.6, \"Stream Unique Identifiers\"<\/a>.\n@@ -85,1 +85,1 @@\n- *     Object Serialization Specification, Section 4, Class Descriptors<\/a>\n+ *      <cite>Java Object Serialization Specification,<\/cite> Section 4, \"Class Descriptors\"<\/a>\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,14 +46,13 @@\n- * To allow subtypes of non-serializable classes to be serialized, the\n- * subtype may assume responsibility for saving and restoring the\n- * state of the supertype's public, protected, and (if accessible)\n- * package fields.  The subtype may assume this responsibility only if\n- * the class it extends has an accessible no-arg constructor to\n- * initialize the class's state.  It is an error to declare a class\n- * Serializable if this is not the case.  The error will be detected at\n- * runtime. <p>\n- *\n- * During deserialization, the fields of non-serializable classes will\n- * be initialized using the public or protected no-arg constructor of\n- * the class.  A no-arg constructor must be accessible to the subclass\n- * that is serializable.  The fields of serializable subclasses will\n- * be restored from the stream. <p>\n+ * It is possible for subtypes of non-serializable classes to be serialized\n+ * and deserialized. During serialization, no data will be written for the\n+ * fields of non-serializable classes. During deserialization, the fields of\n+ * non-serializable classes will be initialized using the no-arg constructor of\n+ * the class. This constructor must be accessible to the subclass that is being\n+ * deserialized. It is an error to declare a class Serializable if this is not\n+ * the case; the error will be detected at runtime. A serializable subtype may\n+ * assume responsibility for saving and restoring the state of a non-serializable\n+ * supertype's public, protected, and (if accessible) package-access fields. See\n+ * the <a href=\"{@docRoot}\/..\/specs\/serialization\/input.html#the-objectinputstream-class\">\n+ * <cite>Java Object Serialization Specification,<\/cite><\/a> section 3.1, for\n+ * a detailed specification of the deserialization process, including handling of\n+ * serializable and non-serializable classes. <p>\n@@ -138,1 +137,2 @@\n- * the <cite>Java Object Serialization Specification<\/cite> during\n+ * the <a href=\"{@docRoot}\/..\/specs\/serialization\/index.html\"><cite>\n+ * Java Object Serialization Specification<\/cite><\/a> during\n@@ -160,1 +160,2 @@\n- * Java Object Serialization Specification.  This specification defines the\n+ * <a href=\"{@docRoot}\/..\/specs\/serialization\/index.html\"><cite>Java Object Serialization\n+ * Specification.<\/cite><\/a> This specification defines the\n@@ -182,0 +183,2 @@\n+ * @see <a href=\"{@docRoot}\/..\/specs\/serialization\/index.html\">\n+ *      <cite>Java Object Serialization Specification<\/cite><\/a>\n","filename":"src\/java.base\/share\/classes\/java\/io\/Serializable.java","additions":19,"deletions":16,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n- *       Java Object Serialization Specification <\/a>\n+ *       <cite>Java Object Serialization Specification<\/cite><\/a>\n","filename":"src\/java.base\/share\/classes\/java\/io\/package-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}