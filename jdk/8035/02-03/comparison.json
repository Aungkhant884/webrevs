{"files":[{"patch":"@@ -427,1 +427,1 @@\n-                               int length, ByteBuffer bb, int offset, M m, S s, boolean offsetInRange,\n+                               int length, ByteBuffer bb, int offset, M m, S s, int offsetInRange,\n@@ -449,1 +449,1 @@\n-                                     S s, boolean offsetInRange,\n+                                     S s, int offsetInRange,\n@@ -456,6 +456,0 @@\n-            if (offsetInRange) {\n-                return VectorSupport.loadMasked(vmClass, maskClass, e, length,\n-                        BufferAccess.bufferBase(bb), BufferAccess.bufferAddress(bb, offset), m, \/* offsetInRange *\/ 1,\n-                        bb, offset, s,\n-                        defaultImpl);\n-            }\n@@ -463,1 +457,1 @@\n-                    BufferAccess.bufferBase(bb), BufferAccess.bufferAddress(bb, offset), m, \/* offsetInRange *\/ 0,\n+                    BufferAccess.bufferBase(bb), BufferAccess.bufferAddress(bb, offset), m, offsetInRange,\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/X-ScopedMemoryAccess.java.template","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -856,1 +856,1 @@\n-    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -872,1 +872,1 @@\n-    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -886,1 +886,1 @@\n-    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -900,1 +900,1 @@\n-    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -888,1 +888,1 @@\n-    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -904,1 +904,1 @@\n-    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -918,1 +918,1 @@\n-    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -932,1 +932,1 @@\n-    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -952,1 +952,1 @@\n-    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -968,1 +968,1 @@\n-    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -982,1 +982,1 @@\n-    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -996,1 +996,1 @@\n-    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -840,1 +840,1 @@\n-    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -856,1 +856,1 @@\n-    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -870,1 +870,1 @@\n-    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -884,1 +884,1 @@\n-    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Byte64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -826,1 +826,1 @@\n-    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -842,1 +842,1 @@\n-    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -856,1 +856,1 @@\n-    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange) {\n@@ -870,1 +870,1 @@\n-    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, boolean offsetInRange) {\n+    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2861,1 +2861,1 @@\n-            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2865,1 +2865,1 @@\n-        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -2920,1 +2920,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -2924,1 +2924,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -3076,1 +3076,1 @@\n-            return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange*\/ true);\n+            return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange*\/ 1);\n@@ -3080,1 +3080,1 @@\n-        return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -3253,1 +3253,1 @@\n-            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -3257,1 +3257,1 @@\n-        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -3676,1 +3676,1 @@\n-    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange);\n+    ByteVector fromArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange);\n@@ -3680,12 +3680,1 @@\n-    ByteVector fromArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(maskClass, a, arrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> arr_[off_ + i]));\n-    }\n-\n-    @ForceInline\n-    final\n-    <C, M extends VectorMask<Byte>>\n-    ByteVector fromArray0Template(Class<M> maskClass, C base, long offset, int index, M m, boolean offsetInRange,\n-                        VectorSupport.LoadVectorMaskedOperation<C, ByteVector, ByteSpecies, M> defaultImpl) {\n+    ByteVector fromArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n@@ -3694,11 +3683,6 @@\n-        if (offsetInRange) {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 1,\n-                base, index, vsp, defaultImpl);\n-        } else {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 0,\n-                base, index, vsp, defaultImpl);\n-        }\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, arrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n+            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                        (arr_, off_, i) -> arr_[off_ + i]));\n@@ -3726,1 +3710,1 @@\n-    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, boolean offsetInRange);\n+    ByteVector fromBooleanArray0(boolean[] a, int offset, VectorMask<Byte> m, int offsetInRange);\n@@ -3730,4 +3714,7 @@\n-    ByteVector fromBooleanArray0Template(Class<M> maskClass, boolean[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, booleanArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    ByteVector fromBooleanArray0Template(Class<M> maskClass, boolean[] a, int offset, M m, int offsetInRange) {\n+        m.check(species());\n+        ByteSpecies vsp = vspecies();\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, booleanArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -3757,1 +3744,1 @@\n-    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, boolean offsetInRange);\n+    ByteVector fromByteArray0(byte[] a, int offset, VectorMask<Byte> m, int offsetInRange);\n@@ -3761,4 +3748,7 @@\n-    ByteVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, byteArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    ByteVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n+        ByteSpecies vsp = vspecies();\n+        m.check(vsp);\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, byteArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -3789,1 +3779,1 @@\n-    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, boolean offsetInRange);\n+    ByteVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Byte> m, int offsetInRange);\n@@ -3793,1 +3783,1 @@\n-    ByteVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, boolean offsetInRange) {\n+    ByteVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":34,"deletions":44,"binary":false,"changes":78,"status":"modified"},{"patch":"@@ -817,1 +817,1 @@\n-    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -840,1 +840,1 @@\n-    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -854,1 +854,1 @@\n-    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -821,1 +821,1 @@\n-    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -844,1 +844,1 @@\n-    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -858,1 +858,1 @@\n-    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -829,1 +829,1 @@\n-    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -852,1 +852,1 @@\n-    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -866,1 +866,1 @@\n-    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -815,1 +815,1 @@\n-    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -838,1 +838,1 @@\n-    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -852,1 +852,1 @@\n-    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Double64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -814,1 +814,1 @@\n-    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -837,1 +837,1 @@\n-    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, int offsetInRange) {\n@@ -851,1 +851,1 @@\n-    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, boolean offsetInRange) {\n+    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2686,1 +2686,1 @@\n-            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2690,1 +2690,1 @@\n-        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -2745,1 +2745,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -2749,1 +2749,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -2969,1 +2969,1 @@\n-            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2973,1 +2973,1 @@\n-        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -3263,1 +3263,1 @@\n-    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, boolean offsetInRange);\n+    DoubleVector fromArray0(double[] a, int offset, VectorMask<Double> m, int offsetInRange);\n@@ -3267,12 +3267,1 @@\n-    DoubleVector fromArray0Template(Class<M> maskClass, double[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(maskClass, a, arrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> arr_[off_ + i]));\n-    }\n-\n-    @ForceInline\n-    final\n-    <C, M extends VectorMask<Double>>\n-    DoubleVector fromArray0Template(Class<M> maskClass, C base, long offset, int index, M m, boolean offsetInRange,\n-                        VectorSupport.LoadVectorMaskedOperation<C, DoubleVector, DoubleSpecies, M> defaultImpl) {\n+    DoubleVector fromArray0Template(Class<M> maskClass, double[] a, int offset, M m, int offsetInRange) {\n@@ -3281,11 +3270,6 @@\n-        if (offsetInRange) {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 1,\n-                base, index, vsp, defaultImpl);\n-        } else {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 0,\n-                base, index, vsp, defaultImpl);\n-        }\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, arrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n+            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                        (arr_, off_, i) -> arr_[off_ + i]));\n@@ -3367,1 +3351,1 @@\n-    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, boolean offsetInRange);\n+    DoubleVector fromByteArray0(byte[] a, int offset, VectorMask<Double> m, int offsetInRange);\n@@ -3371,4 +3355,7 @@\n-    DoubleVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, byteArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    DoubleVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n+        DoubleSpecies vsp = vspecies();\n+        m.check(vsp);\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, byteArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -3399,1 +3386,1 @@\n-    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, boolean offsetInRange);\n+    DoubleVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Double> m, int offsetInRange);\n@@ -3403,1 +3390,1 @@\n-    DoubleVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, boolean offsetInRange) {\n+    DoubleVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":24,"deletions":37,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -821,1 +821,1 @@\n-    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -844,1 +844,1 @@\n-    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -858,1 +858,1 @@\n-    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -829,1 +829,1 @@\n-    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -852,1 +852,1 @@\n-    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -866,1 +866,1 @@\n-    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -845,1 +845,1 @@\n-    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -868,1 +868,1 @@\n-    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -882,1 +882,1 @@\n-    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -817,1 +817,1 @@\n-    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -840,1 +840,1 @@\n-    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -854,1 +854,1 @@\n-    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Float64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -814,1 +814,1 @@\n-    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -837,1 +837,1 @@\n-    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, int offsetInRange) {\n@@ -851,1 +851,1 @@\n-    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, boolean offsetInRange) {\n+    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2710,1 +2710,1 @@\n-            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2714,1 +2714,1 @@\n-        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -2769,1 +2769,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -2773,1 +2773,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -2975,1 +2975,1 @@\n-            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2979,1 +2979,1 @@\n-        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -3250,1 +3250,1 @@\n-    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, boolean offsetInRange);\n+    FloatVector fromArray0(float[] a, int offset, VectorMask<Float> m, int offsetInRange);\n@@ -3254,12 +3254,1 @@\n-    FloatVector fromArray0Template(Class<M> maskClass, float[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(maskClass, a, arrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> arr_[off_ + i]));\n-    }\n-\n-    @ForceInline\n-    final\n-    <C, M extends VectorMask<Float>>\n-    FloatVector fromArray0Template(Class<M> maskClass, C base, long offset, int index, M m, boolean offsetInRange,\n-                        VectorSupport.LoadVectorMaskedOperation<C, FloatVector, FloatSpecies, M> defaultImpl) {\n+    FloatVector fromArray0Template(Class<M> maskClass, float[] a, int offset, M m, int offsetInRange) {\n@@ -3268,11 +3257,6 @@\n-        if (offsetInRange) {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 1,\n-                base, index, vsp, defaultImpl);\n-        } else {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 0,\n-                base, index, vsp, defaultImpl);\n-        }\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, arrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n+            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                        (arr_, off_, i) -> arr_[off_ + i]));\n@@ -3336,1 +3320,1 @@\n-    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, boolean offsetInRange);\n+    FloatVector fromByteArray0(byte[] a, int offset, VectorMask<Float> m, int offsetInRange);\n@@ -3340,4 +3324,7 @@\n-    FloatVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, byteArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    FloatVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n+        FloatSpecies vsp = vspecies();\n+        m.check(vsp);\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, byteArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -3368,1 +3355,1 @@\n-    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, boolean offsetInRange);\n+    FloatVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Float> m, int offsetInRange);\n@@ -3372,1 +3359,1 @@\n-    FloatVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, boolean offsetInRange) {\n+    FloatVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":24,"deletions":37,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -832,1 +832,1 @@\n-    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -855,1 +855,1 @@\n-    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -869,1 +869,1 @@\n-    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -840,1 +840,1 @@\n-    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -863,1 +863,1 @@\n-    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -877,1 +877,1 @@\n-    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -856,1 +856,1 @@\n-    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -879,1 +879,1 @@\n-    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -893,1 +893,1 @@\n-    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -828,1 +828,1 @@\n-    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -851,1 +851,1 @@\n-    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -865,1 +865,1 @@\n-    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Int64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -837,1 +837,1 @@\n-    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -860,1 +860,1 @@\n-    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, int offsetInRange) {\n@@ -874,1 +874,1 @@\n-    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, boolean offsetInRange) {\n+    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2853,1 +2853,1 @@\n-            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2857,1 +2857,1 @@\n-        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -2912,1 +2912,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -2916,1 +2916,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -3118,1 +3118,1 @@\n-            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -3122,1 +3122,1 @@\n-        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -3393,1 +3393,1 @@\n-    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, boolean offsetInRange);\n+    IntVector fromArray0(int[] a, int offset, VectorMask<Integer> m, int offsetInRange);\n@@ -3397,12 +3397,1 @@\n-    IntVector fromArray0Template(Class<M> maskClass, int[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(maskClass, a, arrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> arr_[off_ + i]));\n-    }\n-\n-    @ForceInline\n-    final\n-    <C, M extends VectorMask<Integer>>\n-    IntVector fromArray0Template(Class<M> maskClass, C base, long offset, int index, M m, boolean offsetInRange,\n-                        VectorSupport.LoadVectorMaskedOperation<C, IntVector, IntSpecies, M> defaultImpl) {\n+    IntVector fromArray0Template(Class<M> maskClass, int[] a, int offset, M m, int offsetInRange) {\n@@ -3411,11 +3400,6 @@\n-        if (offsetInRange) {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 1,\n-                base, index, vsp, defaultImpl);\n-        } else {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 0,\n-                base, index, vsp, defaultImpl);\n-        }\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, arrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n+            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                        (arr_, off_, i) -> arr_[off_ + i]));\n@@ -3479,1 +3463,1 @@\n-    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, boolean offsetInRange);\n+    IntVector fromByteArray0(byte[] a, int offset, VectorMask<Integer> m, int offsetInRange);\n@@ -3483,4 +3467,7 @@\n-    IntVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, byteArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    IntVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n+        IntSpecies vsp = vspecies();\n+        m.check(vsp);\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, byteArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -3511,1 +3498,1 @@\n-    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, boolean offsetInRange);\n+    IntVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Integer> m, int offsetInRange);\n@@ -3515,1 +3502,1 @@\n-    IntVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, boolean offsetInRange) {\n+    IntVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":24,"deletions":37,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -818,1 +818,1 @@\n-    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -841,1 +841,1 @@\n-    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -855,1 +855,1 @@\n-    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long128Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -822,1 +822,1 @@\n-    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -845,1 +845,1 @@\n-    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -859,1 +859,1 @@\n-    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long256Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -830,1 +830,1 @@\n-    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -853,1 +853,1 @@\n-    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -867,1 +867,1 @@\n-    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long512Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -816,1 +816,1 @@\n-    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -839,1 +839,1 @@\n-    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -853,1 +853,1 @@\n-    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Long64Vector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -816,1 +816,1 @@\n-    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -839,1 +839,1 @@\n-    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, int offsetInRange) {\n@@ -853,1 +853,1 @@\n-    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, boolean offsetInRange) {\n+    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongMaxVector.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2714,1 +2714,1 @@\n-            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2718,1 +2718,1 @@\n-        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -2773,1 +2773,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -2777,1 +2777,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -2997,1 +2997,1 @@\n-            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -3001,1 +3001,1 @@\n-        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -3291,1 +3291,1 @@\n-    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, boolean offsetInRange);\n+    LongVector fromArray0(long[] a, int offset, VectorMask<Long> m, int offsetInRange);\n@@ -3295,12 +3295,1 @@\n-    LongVector fromArray0Template(Class<M> maskClass, long[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(maskClass, a, arrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> arr_[off_ + i]));\n-    }\n-\n-    @ForceInline\n-    final\n-    <C, M extends VectorMask<Long>>\n-    LongVector fromArray0Template(Class<M> maskClass, C base, long offset, int index, M m, boolean offsetInRange,\n-                        VectorSupport.LoadVectorMaskedOperation<C, LongVector, LongSpecies, M> defaultImpl) {\n+    LongVector fromArray0Template(Class<M> maskClass, long[] a, int offset, M m, int offsetInRange) {\n@@ -3309,11 +3298,6 @@\n-        if (offsetInRange) {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 1,\n-                base, index, vsp, defaultImpl);\n-        } else {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 0,\n-                base, index, vsp, defaultImpl);\n-        }\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, arrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n+            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                        (arr_, off_, i) -> arr_[off_ + i]));\n@@ -3395,1 +3379,1 @@\n-    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, boolean offsetInRange);\n+    LongVector fromByteArray0(byte[] a, int offset, VectorMask<Long> m, int offsetInRange);\n@@ -3399,4 +3383,7 @@\n-    LongVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, byteArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    LongVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n+        LongSpecies vsp = vspecies();\n+        m.check(vsp);\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, byteArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -3427,1 +3414,1 @@\n-    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, boolean offsetInRange);\n+    LongVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Long> m, int offsetInRange);\n@@ -3431,1 +3418,1 @@\n-    LongVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, boolean offsetInRange) {\n+    LongVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":24,"deletions":37,"binary":false,"changes":61,"status":"modified"},{"patch":"@@ -840,1 +840,1 @@\n-    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -855,1 +855,1 @@\n-    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -870,1 +870,1 @@\n-    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -884,1 +884,1 @@\n-    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short128Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -856,1 +856,1 @@\n-    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -871,1 +871,1 @@\n-    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -886,1 +886,1 @@\n-    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -900,1 +900,1 @@\n-    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short256Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -888,1 +888,1 @@\n-    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -903,1 +903,1 @@\n-    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -918,1 +918,1 @@\n-    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -932,1 +932,1 @@\n-    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short512Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -832,1 +832,1 @@\n-    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -847,1 +847,1 @@\n-    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -862,1 +862,1 @@\n-    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -876,1 +876,1 @@\n-    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/Short64Vector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -826,1 +826,1 @@\n-    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -841,1 +841,1 @@\n-    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -856,1 +856,1 @@\n-    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, int offsetInRange) {\n@@ -870,1 +870,1 @@\n-    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, boolean offsetInRange) {\n+    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortMaxVector.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2861,1 +2861,1 @@\n-            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -2865,1 +2865,1 @@\n-        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -2920,1 +2920,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -2924,1 +2924,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -3068,1 +3068,1 @@\n-            return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -3072,1 +3072,1 @@\n-        return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -3252,1 +3252,1 @@\n-            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -3256,1 +3256,1 @@\n-        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -3662,1 +3662,1 @@\n-    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, boolean offsetInRange);\n+    ShortVector fromArray0(short[] a, int offset, VectorMask<Short> m, int offsetInRange);\n@@ -3666,12 +3666,1 @@\n-    ShortVector fromArray0Template(Class<M> maskClass, short[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(maskClass, a, arrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> arr_[off_ + i]));\n-    }\n-\n-    @ForceInline\n-    final\n-    <C, M extends VectorMask<Short>>\n-    ShortVector fromArray0Template(Class<M> maskClass, C base, long offset, int index, M m, boolean offsetInRange,\n-                        VectorSupport.LoadVectorMaskedOperation<C, ShortVector, ShortSpecies, M> defaultImpl) {\n+    ShortVector fromArray0Template(Class<M> maskClass, short[] a, int offset, M m, int offsetInRange) {\n@@ -3680,11 +3669,6 @@\n-        if (offsetInRange) {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 1,\n-                base, index, vsp, defaultImpl);\n-        } else {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 0,\n-                base, index, vsp, defaultImpl);\n-        }\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, arrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n+            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                        (arr_, off_, i) -> arr_[off_ + i]));\n@@ -3711,1 +3695,1 @@\n-    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, boolean offsetInRange);\n+    ShortVector fromCharArray0(char[] a, int offset, VectorMask<Short> m, int offsetInRange);\n@@ -3715,6 +3699,9 @@\n-    ShortVector fromCharArray0Template(Class<M> maskClass, char[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, charArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> (short) arr_[off_ + i]));\n+    ShortVector fromCharArray0Template(Class<M> maskClass, char[] a, int offset, M m, int offsetInRange) {\n+        m.check(species());\n+        ShortSpecies vsp = vspecies();\n+        return VectorSupport.loadMasked(\n+                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+                a, charArrayAddress(a, offset), m, offsetInRange,\n+                a, offset, vsp,\n+                (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                            (arr_, off_, i) -> (short) arr_[off_ + i]));\n@@ -3743,1 +3730,1 @@\n-    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, boolean offsetInRange);\n+    ShortVector fromByteArray0(byte[] a, int offset, VectorMask<Short> m, int offsetInRange);\n@@ -3747,4 +3734,7 @@\n-    ShortVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, byteArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    ShortVector fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n+        ShortSpecies vsp = vspecies();\n+        m.check(vsp);\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, byteArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -3775,1 +3765,1 @@\n-    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, boolean offsetInRange);\n+    ShortVector fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<Short> m, int offsetInRange);\n@@ -3779,1 +3769,1 @@\n-    ShortVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, boolean offsetInRange) {\n+    ShortVector fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":36,"deletions":46,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -3379,1 +3379,1 @@\n-            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -3383,1 +3383,1 @@\n-        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteArray0(a, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -3438,1 +3438,1 @@\n-            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -3442,1 +3442,1 @@\n-        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -3658,1 +3658,1 @@\n-            return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ true);\n+            return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ 1);\n@@ -3662,1 +3662,1 @@\n-        return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromCharArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -3817,1 +3817,1 @@\n-            return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange*\/ true);\n+            return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange*\/ 1);\n@@ -3821,1 +3821,1 @@\n-        return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange *\/ false);\n+        return vsp.dummyVector().fromBooleanArray0(a, offset, m, \/* offsetInRange *\/ 0);\n@@ -4007,1 +4007,1 @@\n-            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ true).maybeSwap(bo);\n+            return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 1).maybeSwap(bo);\n@@ -4011,1 +4011,1 @@\n-        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ false).maybeSwap(bo);\n+        return vsp.dummyVector().fromByteBuffer0(bb, offset, m, \/* offsetInRange *\/ 0).maybeSwap(bo);\n@@ -4656,1 +4656,1 @@\n-    $abstractvectortype$ fromArray0($type$[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange);\n+    $abstractvectortype$ fromArray0($type$[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange);\n@@ -4660,12 +4660,1 @@\n-    $abstractvectortype$ fromArray0Template(Class<M> maskClass, $type$[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(maskClass, a, arrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> arr_[off_ + i]));\n-    }\n-\n-    @ForceInline\n-    final\n-    <C, M extends VectorMask<$Boxtype$>>\n-    $abstractvectortype$ fromArray0Template(Class<M> maskClass, C base, long offset, int index, M m, boolean offsetInRange,\n-                        VectorSupport.LoadVectorMaskedOperation<C, $abstractvectortype$, $Type$Species, M> defaultImpl) {\n+    $abstractvectortype$ fromArray0Template(Class<M> maskClass, $type$[] a, int offset, M m, int offsetInRange) {\n@@ -4674,11 +4663,6 @@\n-        if (offsetInRange) {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 1,\n-                base, index, vsp, defaultImpl);\n-        } else {\n-            return VectorSupport.loadMasked(\n-                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n-                base, offset, m, \/* offsetInRange *\/ 0,\n-                base, index, vsp, defaultImpl);\n-        }\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, arrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n+            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                        (arr_, off_, i) -> arr_[off_ + i]));\n@@ -4766,1 +4750,1 @@\n-    $abstractvectortype$ fromCharArray0(char[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange);\n+    $abstractvectortype$ fromCharArray0(char[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange);\n@@ -4770,6 +4754,9 @@\n-    $abstractvectortype$ fromCharArray0Template(Class<M> maskClass, char[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, charArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n-            (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n-                                        (arr_, off_, i) -> (short) arr_[off_ + i]));\n+    $abstractvectortype$ fromCharArray0Template(Class<M> maskClass, char[] a, int offset, M m, int offsetInRange) {\n+        m.check(species());\n+        $Type$Species vsp = vspecies();\n+        return VectorSupport.loadMasked(\n+                vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+                a, charArrayAddress(a, offset), m, offsetInRange,\n+                a, offset, vsp,\n+                (arr, off, s, vm) -> s.ldOp(arr, off, vm,\n+                                            (arr_, off_, i) -> (short) arr_[off_ + i]));\n@@ -4797,1 +4784,1 @@\n-    $abstractvectortype$ fromBooleanArray0(boolean[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange);\n+    $abstractvectortype$ fromBooleanArray0(boolean[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange);\n@@ -4801,4 +4788,7 @@\n-    $abstractvectortype$ fromBooleanArray0Template(Class<M> maskClass, boolean[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, booleanArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    $abstractvectortype$ fromBooleanArray0Template(Class<M> maskClass, boolean[] a, int offset, M m, int offsetInRange) {\n+        m.check(species());\n+        $Type$Species vsp = vspecies();\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, booleanArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -4829,1 +4819,1 @@\n-    $abstractvectortype$ fromByteArray0(byte[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange);\n+    $abstractvectortype$ fromByteArray0(byte[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange);\n@@ -4833,4 +4823,7 @@\n-    $abstractvectortype$ fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, boolean offsetInRange) {\n-        return fromArray0Template(\n-            maskClass, a, byteArrayAddress(a, offset),\n-            offset, m, offsetInRange,\n+    $abstractvectortype$ fromByteArray0Template(Class<M> maskClass, byte[] a, int offset, M m, int offsetInRange) {\n+        $Type$Species vsp = vspecies();\n+        m.check(vsp);\n+        return VectorSupport.loadMasked(\n+            vsp.vectorType(), maskClass, vsp.elementType(), vsp.laneCount(),\n+            a, byteArrayAddress(a, offset), m, offsetInRange,\n+            a, offset, vsp,\n@@ -4861,1 +4854,1 @@\n-    $abstractvectortype$ fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange);\n+    $abstractvectortype$ fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<$Boxtype$> m, int offsetInRange);\n@@ -4865,1 +4858,1 @@\n-    $abstractvectortype$ fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, boolean offsetInRange) {\n+    $abstractvectortype$ fromByteBuffer0Template(Class<M> maskClass, ByteBuffer bb, int offset, M m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":46,"deletions":53,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -1114,1 +1114,1 @@\n-    $abstractvectortype$ fromArray0($type$[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange) {\n+    $abstractvectortype$ fromArray0($type$[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange) {\n@@ -1138,1 +1138,1 @@\n-    $abstractvectortype$ fromCharArray0(char[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange) {\n+    $abstractvectortype$ fromCharArray0(char[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange) {\n@@ -1154,1 +1154,1 @@\n-    $abstractvectortype$ fromBooleanArray0(boolean[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange) {\n+    $abstractvectortype$ fromBooleanArray0(boolean[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange) {\n@@ -1169,1 +1169,1 @@\n-    $abstractvectortype$ fromByteArray0(byte[] a, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange) {\n+    $abstractvectortype$ fromByteArray0(byte[] a, int offset, VectorMask<$Boxtype$> m, int offsetInRange) {\n@@ -1183,1 +1183,1 @@\n-    $abstractvectortype$ fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<$Boxtype$> m, boolean offsetInRange) {\n+    $abstractvectortype$ fromByteBuffer0(ByteBuffer bb, int offset, VectorMask<$Boxtype$> m, int offsetInRange) {\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-VectorBits.java.template","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}