{"files":[{"patch":"@@ -365,1 +365,1 @@\n-      if (VectorNode::implemented(n, cur_max_vector, bt)) {\n+      if (VectorNode::implemented(n->Opcode(), cur_max_vector, bt)) {\n@@ -2011,1 +2011,1 @@\n-      retValue = VectorNode::implemented(p0, size, velt_basic_type(p0));\n+      retValue = VectorNode::implemented(opc, size, velt_basic_type(p0));\n","filename":"src\/hotspot\/share\/opto\/superword.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-bool VectorNode::implemented(Node* n, uint vlen, BasicType bt) {\n+bool VectorNode::implemented(int opc, uint vlen, BasicType bt) {\n@@ -261,1 +261,1 @@\n-    int vopc = VectorNode::opcode(n->Opcode(), bt);\n+    int vopc = VectorNode::opcode(opc, bt);\n@@ -266,1 +266,1 @@\n-      return is_vector_rotate_supported(n, vlen, bt);\n+      return is_vector_rotate_supported(vopc, vlen, bt);\n@@ -299,2 +299,1 @@\n-bool VectorNode::is_vector_rotate_supported(Node* n, uint vlen, BasicType bt) {\n-  int vopc = VectorNode::opcode(n->Opcode(), bt);\n+bool VectorNode::is_vector_rotate_supported(int vopc, uint vlen, BasicType bt) {\n@@ -311,2 +310,3 @@\n-  int has_scalar_shift = n->in(2)->Opcode() != Op_LoadI;\n-  if (!has_scalar_shift && !Matcher::supports_vector_variable_shifts()) {\n+  \/\/ Adding a pessimistic check to avoid complex pattern mathing which\n+  \/\/ may not be full proof.\n+  if (!Matcher::supports_vector_variable_shifts()) {\n","filename":"src\/hotspot\/share\/opto\/vectornode.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-  static bool implemented(Node* n, uint vlen, BasicType bt);\n+  static bool implemented(int opc, uint vlen, BasicType bt);\n@@ -91,1 +91,1 @@\n-  static bool is_vector_rotate_supported(Node* n, uint vlen, BasicType bt);\n+  static bool is_vector_rotate_supported(int opc, uint vlen, BasicType bt);\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}