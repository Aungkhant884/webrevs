{"files":[{"patch":"@@ -1356,1 +1356,7 @@\n-  assert(resolved_method->method_holder()->is_linked(), \"must be linked\");\n+  if (!resolved_method->method_holder()->is_linked()) {\n+    ResourceMark rm(THREAD);\n+    stringStream ss;\n+    ss.print(\"Resolved method holder class %s\", resolved_method->method_holder()->external_name());\n+    ss.print(\" must be linked\");\n+    THROW_MSG(vmSymbols::java_lang_IncompatibleClassChangeError(), ss.as_string());\n+  }\n@@ -1360,1 +1366,1 @@\n-  if (!recv.is_null() && !recv()->is_a(resolved_klass)) {\n+  if (!recv.is_null() && !recv_klass->is_subtype_of(resolved_klass)) {\n@@ -1363,1 +1369,2 @@\n-    ss.print(\"Receiver should be type\/subtype of %s\", resolved_klass->external_name());\n+    ss.print(\"The type of receiver %s\", recv_klass->external_name());\n+    ss.print(\" should be or subtype of %s\", resolved_klass->external_name());\n","filename":"src\/hotspot\/share\/interpreter\/linkResolver.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -0,0 +1,86 @@\n+\/*\n+ * Copyright (c) 2022, Alibaba Group Holding Limited. All Rights Reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8284877\n+ * @summary Check type compatibility before looking up method from receiver's vtable\n+ * @modules java.base\/jdk.internal.misc:+open\n+ * @library \/test\/lib\n+ * @run main\/othervm TestErrorReceiverType\n+ *\/\n+\n+import jdk.internal.misc.Unsafe;\n+\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\n+public class TestErrorReceiverType {\n+    public static void main(String[] args) throws Throwable {\n+        \/\/ 8284877\n+        \/\/ Commenting out the following line crashes JVM at assert(resolved_method->method_holder()->is_linked(), \"must be linked\");\n+        Class.forName(\"TestErrorReceiverType$LongMapSupportArrayList\");\n+\n+        try {\n+            Unsafe unsafe = getUnsafe();\n+            long offset = unsafe.objectFieldOffset(\n+                A.class.getDeclaredField(\"list\")\n+            );\n+\n+            A a = new A();\n+            unsafe.putObject(a, offset, new ArrayList<>());\n+            a.list.toMap();\n+        } catch (NoSuchFieldException e) {\n+            e.printStackTrace();\n+        } catch (IncompatibleClassChangeError e1) {\n+            e1.printStackTrace();\n+            System.out.println(\"Expected\");\n+        } finally {\n+        }\n+    }\n+\n+    private static Unsafe getUnsafe() {\n+        try {\n+            Field field = Unsafe.class.getDeclaredField(\"theUnsafe\");\n+            field.setAccessible(true);\n+            return (Unsafe) field.get(null);\n+        } catch (Exception e) {\n+        }\n+        return null;\n+    }\n+\n+    private static class LongMapSupportArrayList<T> extends ArrayList {\n+        public Map<?, ?> toMap() {\n+            return new HashMap<>();\n+        }\n+    }\n+\n+    private static class A {\n+        private String s = \"a\";\n+        private LongMapSupportArrayList<String> list;\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/hotspot\/jtreg\/runtime\/linkResolver\/TestErrorReceiverType.java","additions":86,"deletions":0,"binary":false,"changes":86,"status":"added"}]}