{"files":[{"patch":"@@ -1025,0 +1025,15 @@\n+      \/\/ Check for side effect between Initialize and the constructor\n+      for (SimpleDUIterator iter(ptr); iter.has_next(); iter.next()) {\n+        Node* use = iter.get();\n+        if (!use->is_CFG() && !use->is_CheckCastPP() && !use->is_Load()) {\n+#ifndef PRODUCT\n+          if (PrintOptimizeStringConcat) {\n+            tty->print_cr(\"unexpected control use of Initialize\");\n+            ptr->in(0)->dump(); \/\/ Initialize node\n+            use->dump(1);\n+          }\n+#endif\n+          fail = true;\n+          break;\n+        }\n+      }\n","filename":"src\/hotspot\/share\/opto\/stringopts.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+super public class compiler\/stringopts\/SideEffectBeforeConstructor\n+\tversion 51:0\n+{\n+  public static Field result:I;\n+\n+  static Method \"<clinit>\":\"()V\"\n+\tstack 2 locals 0\n+  {\n+\t\ticonst_0;\n+\t\tputstatic\tField result:\"I\";\n+\t\treturn;\n+  }\n+  public Method \"<init>\":\"()V\"\n+\tstack 1 locals 1\n+  {\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/Object.\"<init>\":\"()V\";\n+\t\treturn;\n+  }\n+\n+  public static Method test:\"(Ljava\/lang\/String;)V\"\n+\tstack 4 locals 1\n+  {\n+\t\tnew\tclass java\/lang\/StringBuffer;\n+\t\tdup;\n+\t\tgetstatic\tField result:\"I\";\n+\t\ticonst_1;\n+\t\tiadd;\n+\t\tputstatic\tField result:\"I\";\n+\t\taload_0;\n+\t\tinvokespecial\tMethod java\/lang\/StringBuffer.\"<init>\":\"(Ljava\/lang\/String;)V\";\n+\t\tinvokevirtual\tMethod java\/lang\/StringBuffer.toString:\"()Ljava\/lang\/String;\";\n+\t\treturn;\n+  }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/stringopts\/SideEffectBeforeConstructor.jasm","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,49 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8290705\n+ * @summary Test correctness of the string concatenation optimization with\n+ *          a store between StringBuffer allocation and constructor invocation.\n+ * @compile SideEffectBeforeConstructor.jasm\n+ * @run main\/othervm -Xbatch compiler.stringopts.TestSideEffectBeforeConstructor\n+ *\/\n+\n+package compiler.stringopts;\n+\n+public class TestSideEffectBeforeConstructor {\n+\n+    public static void main(String[] args) {\n+        for (int i = 0; i < 100_000; ++i) {\n+            try {\n+                SideEffectBeforeConstructor.test(null);\n+            } catch (NullPointerException npe) {\n+                \/\/ Expected\n+            }\n+        }\n+        if (SideEffectBeforeConstructor.result != 100_000) {\n+            throw new RuntimeException(\"Unexpected result: \" + SideEffectBeforeConstructor.result);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/stringopts\/TestSideEffectBeforeConstructor.java","additions":49,"deletions":0,"binary":false,"changes":49,"status":"added"}]}