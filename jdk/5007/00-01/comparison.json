{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/ElementKind.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -581,1 +581,1 @@\n-                \/\/ Conceptual instanceof TypeElment check. If the\n+                \/\/ Conceptual instanceof TypeElement check. If the\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -58,2 +58,2 @@\n-            \/\/ enclosing type element such equal the root\n-            \/\/ element. This traversal does not hit elements\n+            \/\/ enclosing type element should equal the root\n+            \/\/ element. This traversal does *not* hit elements\n@@ -78,1 +78,0 @@\n-            \/\/ System.out.println(e.getSimpleName() + \" \" + e.getKind());\n","filename":"test\/langtools\/tools\/javac\/processing\/model\/util\/elements\/TestOutermostTypeElement.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}