{"files":[{"patch":"@@ -146,19 +146,5 @@\n-    size_t num_entries = Atomic::load(&_num_entries);\n-    if (num_entries != 0) {\n-      auto always_true =\n-        [] (nmethod** value) {\n-          return true;\n-      };\n-\n-      size_t num_deleted = 0;\n-      auto do_delete =\n-        [&] (nmethod** value) {\n-          num_deleted++;\n-      };\n-\n-      bool succeeded = _table.try_bulk_delete(Thread::current(), always_true, do_delete);\n-      guarantee(succeeded, \"unable to clean table\");\n-      assert(num_entries == num_deleted, \"must empty the table\");\n-      Atomic::store(&_num_entries, (size_t)0);\n-    }\n-    _table.unsafe_reset();\n+    \/\/ Remove all entries.\n+    auto always_true = [] (nmethod** value) {\n+                         return true;\n+                       };\n+    clean(always_true);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CodeRootSet.cpp","additions":5,"deletions":19,"binary":false,"changes":24,"status":"modified"}]}