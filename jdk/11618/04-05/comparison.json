{"files":[{"patch":"@@ -246,1 +246,1 @@\n-\/\/ destroying old contents of a RelocationHolder being assigned.\n+\/\/ destroying old contents of a RelocationHolder being assigned or destroyed.\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -533,0 +533,3 @@\n+\n+  \/\/ Depends on the destructor for all relocation types being trivial\n+  \/\/ (verified in .cpp file).\n@@ -842,4 +845,4 @@\n-  \/\/ Intentionally public non-virtual destructor, even though polymorphic.\n-  \/\/ We never heap allocate a Relocation, so never delete through a base pointer.\n-  \/\/ RelocationHolder depends on (and verifies) the destructor for all relocation\n-  \/\/ types is trivial, so this must not be virtual (and hence non-trivial).\n+  \/\/ Intentionally public non-virtual destructor, even though polymorphic.  We\n+  \/\/ never heap allocate a Relocation, so never delete through a base pointer.\n+  \/\/ RelocationHolder depends on the destructor for all relocation types being\n+  \/\/ trivial, so this must not be virtual (and hence non-trivial).\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"}]}