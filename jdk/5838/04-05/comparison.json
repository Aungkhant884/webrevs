{"files":[{"patch":"@@ -48,1 +48,1 @@\n-  assert(block_size <= _max_block_size, \"block_size must be less than or equal to \" UINT32_FORMAT, _max_block_size);\n+  assert(block_size <= MaxBlockSize, \"block_size must be less than or equal to \" UINT32_FORMAT, MaxBlockSize);\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,2 +61,2 @@\n-  \/\/ Mininum object alignment is 8 bytes (2^3), so we can at most represent 2^10 offsets within a BOT value.\n-  static const uint _max_block_size = 1024;\n+  \/\/ Minimum object alignment is 8 bytes (2^3), so we can at most represent 2^10 offsets within a BOT value.\n+  static const uint MaxBlockSize = 1024;\n","filename":"src\/hotspot\/share\/gc\/parallel\/objectStartArray.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,3 @@\n+#if INCLUDE_PARALLELGC\n+#include \"gc\/parallel\/objectStartArray.hpp\"\n+#endif\n@@ -28,1 +31,0 @@\n-#include \"gc\/shared\/space.inline.hpp\"\n@@ -30,1 +32,2 @@\n-#include \"gc\/parallel\/objectStartArray.hpp\"\n+#include \"gc\/shared\/gc_globals.hpp\"\n+#include \"gc\/shared\/space.inline.hpp\"\n@@ -35,1 +38,0 @@\n-#include \"runtime\/globals_extension.hpp\"\n@@ -47,1 +49,0 @@\n-  \/\/ Card size is the max. of minimum permissible value and GCCardSizeInBytes\n@@ -456,2 +457,1 @@\n-  \/\/ CardTable max alignment is computed with _card_size_max\n-  return _card_size_max * os::vm_page_size();\n+  return GCCardSizeInBytes * os::vm_page_size();\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -236,3 +236,0 @@\n-  \/\/ max permissible card size\n-  static const uint _card_size_max = 1024;\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/cardTable.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -700,1 +700,1 @@\n-          constraint(GCCardSizeInBytesConstraintFunc, AfterErgo)            \\\n+          constraint(GCCardSizeInBytesConstraintFunc,AtParse)\n","filename":"src\/hotspot\/share\/gc\/shared\/gc_globals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -428,2 +428,0 @@\n-  if(!(UseG1GC || UseParallelGC || UseSerialGC))\n-    return JVMFlag::SUCCESS;\n@@ -432,1 +430,1 @@\n-                        \"GCCardSizeInBytes (\" UINT32_FORMAT \") must be \"\n+                        \"GCCardSizeInBytes ( %u ) must be \"\n","filename":"src\/hotspot\/share\/gc\/shared\/jvmFlagConstraintsGC.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}