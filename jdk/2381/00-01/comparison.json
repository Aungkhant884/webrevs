{"files":[{"patch":"@@ -24,0 +24,2 @@\n+import java.security.interfaces.RSAPrivateKey;\n+import java.security.interfaces.RSAPublicKey;\n@@ -30,0 +32,1 @@\n+import jdk.test.lib.Asserts;\n@@ -135,0 +138,8 @@\n+                RSAPublicKeySpec pubKeySpec1 = kf.getKeySpec(key, RSAPublicKeySpec.class);\n+                RSAPublicKeySpec pubKeySpec2 = new RSAPublicKeySpec(\n+                        ((RSAPublicKey) key).getModulus(),\n+                        ((RSAPublicKey) key).getPublicExponent());\n+\n+                Asserts.assertTrue(keySpecEquals(pubKeySpec1, pubKeySpec2),\n+                        \"Both RSAPublicKeySpec should be equal\");\n+\n@@ -136,2 +147,2 @@\n-                    kf.generatePublic(kf.getKeySpec(key, RSAPublicKeySpec.class)),\n-                    kf.generatePublic(new X509EncodedKeySpec(key.getEncoded()))\n+                        kf.generatePublic(pubKeySpec1),\n+                        kf.generatePublic(new X509EncodedKeySpec(key.getEncoded()))\n@@ -146,0 +157,8 @@\n+                RSAPrivateKeySpec privKeySpec1 = kf.getKeySpec(key, RSAPrivateKeySpec.class);\n+                RSAPrivateKeySpec privKeySpec2 = new RSAPrivateKeySpec(\n+                        ((RSAPrivateKey) key).getModulus(),\n+                        ((RSAPrivateKey) key).getPrivateExponent());\n+\n+                Asserts.assertTrue(keySpecEquals(privKeySpec1, privKeySpec2),\n+                        \"Both RSAPrivateKeySpec should be equal\");\n+\n@@ -147,4 +166,3 @@\n-                    kf.generatePrivate(kf.getKeySpec(key,\n-                    RSAPrivateKeySpec.class)),\n-                    kf.generatePrivate(new PKCS8EncodedKeySpec(\n-                    key.getEncoded()))\n+                        kf.generatePrivate(privKeySpec1),\n+                        kf.generatePrivate(new PKCS8EncodedKeySpec(\n+                                key.getEncoded()))\n@@ -194,0 +212,13 @@\n+\n+    private static boolean keySpecEquals(RSAPublicKeySpec spec1, RSAPublicKeySpec spec2) {\n+        return spec1.getModulus().equals(spec2.getModulus())\n+                && spec1.getPublicExponent().equals(spec2.getPublicExponent())\n+                && Objects.equals(spec1.getParams(), spec2.getParams());\n+    }\n+\n+    private static boolean keySpecEquals(RSAPrivateKeySpec spec1, RSAPrivateKeySpec spec2) {\n+        return spec1.getModulus().equals(spec2.getModulus())\n+                && spec1.getPrivateExponent().equals(spec2.getPrivateExponent())\n+                && Objects.equals(spec1.getParams(), spec2.getParams());\n+    }\n+\n","filename":"test\/jdk\/sun\/security\/rsa\/SignatureTest.java","additions":37,"deletions":6,"binary":false,"changes":43,"status":"modified"}]}