{"files":[{"patch":"@@ -28,2 +28,0 @@\n- * @requires (sun.arch.data.model == \"64\" & os.maxMemory >= 16g)\n- * @run main\/othervm -Xmx12g RotateHuge\n@@ -32,1 +30,1 @@\n-import java.util.ArrayList;\n+import java.util.AbstractList;\n@@ -35,0 +33,2 @@\n+import java.util.Objects;\n+import java.util.RandomAccess;\n@@ -38,0 +38,28 @@\n+    private static final class MockList extends AbstractList<Object>\n+            implements RandomAccess {\n+        private final int size;\n+\n+        public MockList(final int size) {\n+            if (size < 0)\n+                throw new IllegalArgumentException(\"Illegal size: \" + size);\n+            this.size = size;\n+        }\n+\n+        @Override\n+        public Object get(final int index) {\n+            Objects.checkIndex(index, size);\n+            return null;\n+        }\n+\n+        @Override\n+        public Object set(final int index, final Object element) {\n+            Objects.checkIndex(index, size);\n+            return null;\n+        }\n+\n+        @Override\n+        public int size() {\n+            return size;\n+        }\n+    }\n+\n@@ -40,5 +68,1 @@\n-        final List<Object> list = new ArrayList<>(size);\n-        final Object object = new Object();\n-        for (int i = 0; i < size; ++i) {\n-            list.add(object);\n-        }\n+        final List<Object> list = new MockList(size);\n","filename":"test\/jdk\/java\/util\/Collections\/RotateHuge.java","additions":32,"deletions":8,"binary":false,"changes":40,"status":"modified"}]}