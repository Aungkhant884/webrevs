{"files":[{"patch":"@@ -809,2 +809,2 @@\n-    private static <T> void rotate1(List<T> list, int distance) {\n-        int size = list.size();\n+    private static <T> void rotate1(final List<T> list, int distance) {\n+        final int size = list.size();\n@@ -813,1 +813,1 @@\n-        distance = distance % size;\n+        distance %= size;\n@@ -819,1 +819,2 @@\n-        for (int cycleStart = 0, nMoved = 0; nMoved != size; cycleStart++) {\n+        final int bound = size - distance;\n+        for (int cycleStart = 0, nMoved = 0; nMoved < size; cycleStart++) {\n@@ -823,2 +824,1 @@\n-                i += distance;\n-                if (i >= size)\n+                if (i >= bound)\n@@ -826,0 +826,1 @@\n+                i += distance;\n@@ -827,1 +828,1 @@\n-                nMoved ++;\n+                nMoved++;\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8314236\n+ * @summary Overflow in Collections.rotate\n+ *\/\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class RotateHuge {\n+\n+    public static void main(final String[] args) {\n+        final int size = (1 << 30) + 1;\n+        final List<Byte> list = new ArrayList<>(size);\n+        for (int i = 0; i < size; ++i)\n+            list.add((byte) 0);\n+        Collections.rotate(list, size - 1);\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/Collections\/RotateHuge.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}