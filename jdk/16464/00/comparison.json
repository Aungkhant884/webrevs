{"files":[{"patch":"@@ -900,1 +900,1 @@\n-     * way. The returned value may be null if no valid\n+     * way. The returned value may be {@code null} if no valid\n@@ -902,4 +902,1 @@\n-     * {@link #setCurrency(java.util.Currency) setCurrency}.\n-     * <p>\n-     * The default implementation throws\n-     * {@code UnsupportedOperationException}.\n+     * {@link #setCurrency(Currency)}.\n@@ -907,0 +904,3 @@\n+     * @implSpec The default implementation always throws {@code\n+     * UnsupportedOperationException}. Subclasses should override this method\n+     * if currency formatting is desired.\n@@ -908,2 +908,2 @@\n-     * @throws    UnsupportedOperationException if the number format class\n-     * doesn't implement currency formatting\n+     * @throws    UnsupportedOperationException if the implementation of this\n+     *            method does not support this operation\n@@ -920,3 +920,0 @@\n-     * <p>\n-     * The default implementation throws\n-     * {@code UnsupportedOperationException}.\n@@ -924,0 +921,3 @@\n+     * @implSpec The default implementation always throws {@code\n+     * UnsupportedOperationException}. Subclasses should override this method\n+     * if currency formatting is desired.\n@@ -925,3 +925,3 @@\n-     * @throws    UnsupportedOperationException if the number format class\n-     * doesn't implement currency formatting\n-     * @throws    NullPointerException if {@code currency} is null\n+     * @throws    NullPointerException if {@code currency} is {@code null}\n+     * @throws    UnsupportedOperationException if the implementation of this\n+     *            method does not support this operation\n@@ -936,4 +936,0 @@\n-     * The default implementation of this method in NumberFormat\n-     * always throws {@link java.lang.UnsupportedOperationException}.\n-     * Subclasses which handle different rounding modes should override\n-     * this method.\n@@ -941,2 +937,3 @@\n-     * @throws    UnsupportedOperationException The default implementation\n-     *     always throws this exception\n+     * @implSpec The default implementation always throws {@code\n+     * UnsupportedOperationException}. Subclasses which handle different\n+     * rounding modes should override this method.\n@@ -944,0 +941,2 @@\n+     * @throws    UnsupportedOperationException if the implementation of this\n+     *            method does not support this operation\n@@ -953,8 +952,7 @@\n-     * The default implementation of this method in NumberFormat always\n-     * throws {@link java.lang.UnsupportedOperationException}.\n-     * Subclasses which handle different rounding modes should override\n-     * this method.\n-     *\n-     * @throws    UnsupportedOperationException The default implementation\n-     *     always throws this exception\n-     * @throws    NullPointerException if {@code roundingMode} is null\n+     *\n+     * @implSpec The default implementation always throws {@code\n+     * UnsupportedOperationException}. Subclasses which handle different\n+     * rounding modes should override this method.\n+     * @throws    NullPointerException if {@code roundingMode} is {@code null}\n+     * @throws    UnsupportedOperationException if the implementation of this\n+     *            method does not support this operation\n","filename":"src\/java.base\/share\/classes\/java\/text\/NumberFormat.java","additions":25,"deletions":27,"binary":false,"changes":52,"status":"modified"}]}