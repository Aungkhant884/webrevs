{"files":[{"patch":"@@ -68,0 +68,2 @@\n+import static sun.java2d.pipe.Region.clipRound;\n+\n@@ -249,13 +251,0 @@\n-        \/**\n-         * Rounds a double to the nearest integer. It rounds 0.5 down,\n-         * for example 1.5 is rounded to 1.0.\n-         *\n-         * @param d number to be rounded\n-         * @return the rounded value\n-         *\/\n-        private static int roundHalfDown(double d) {\n-            double decP = (Math.ceil(d) - d);\n-            return (int)((decP == 0.5) ?  Math.floor(d) :  Math.round(d));\n-        }\n-\n-\n@@ -278,4 +267,4 @@\n-            Graphics2D g2d = (Graphics2D) g;\n-            AffineTransform at = g2d.getTransform();\n-            Stroke oldStk = g2d.getStroke();\n-            Color oldColor = g2d.getColor();\n+            AffineTransform at = null;\n+            Stroke oldStk = null;\n+            Color oldColor = null;\n+            boolean resetTransform = false;\n@@ -284,3 +273,16 @@\n-            \/\/ if m01 or m10 is non-zero, then there is a rotation or shear\n-            \/\/ skip resetting the transform\n-            boolean resetTransform = ((at.getShearX() == 0) && (at.getShearY() == 0));\n+            if (g instanceof Graphics2D) {\n+                Graphics2D g2d = (Graphics2D) g;\n+                at = g2d.getTransform();\n+                oldColor = g2d.getColor();\n+                oldStk = g2d.getStroke();\n+\n+                \/\/ if m01 or m10 is non-zero, then there is a rotation or shear\n+                \/\/ skip resetting the transform\n+                resetTransform = ((at.getShearX() == 0) && (at.getShearY() == 0));\n+\n+                if (resetTransform) {\n+                    g2d.setTransform(new AffineTransform());\n+                    stkWidth = clipRound(Math.min(at.getScaleX(), at.getScaleY()));\n+                    g2d.setStroke(new BasicStroke((float) stkWidth));\n+                }\n+            }\n@@ -288,2 +290,0 @@\n-            int xtranslation;\n-            int ytranslation;\n@@ -292,0 +292,2 @@\n+            int xtranslation;\n+            int ytranslation;\n@@ -294,3 +296,0 @@\n-                g2d.setTransform(new AffineTransform());\n-                stkWidth = roundHalfDown(Math.min(at.getScaleX(), at.getScaleY()));\n-\n@@ -299,4 +298,4 @@\n-                xtranslation = roundHalfDown(xx);\n-                ytranslation = roundHalfDown(yy);\n-                width = roundHalfDown(at.getScaleX() * w + xx) - xtranslation;\n-                height = roundHalfDown(at.getScaleY() * h + yy) - ytranslation;\n+                xtranslation = clipRound(xx);\n+                ytranslation = clipRound(yy);\n+                width = clipRound(at.getScaleX() * w + xx) - xtranslation;\n+                height = clipRound(at.getScaleY() * h + yy) - ytranslation;\n@@ -309,1 +308,1 @@\n-            g2d.translate(xtranslation, ytranslation);\n+            g.translate(xtranslation, ytranslation);\n@@ -321,3 +320,0 @@\n-                \/\/ set new stroke to draw shadow and highlight lines\n-                g2d.setStroke(new BasicStroke((float) stkWidth));\n-\n@@ -353,1 +349,1 @@\n-            g2d.translate(-xtranslation, -ytranslation);\n+            g.translate(-xtranslation, -ytranslation);\n@@ -355,0 +351,1 @@\n+                Graphics2D g2d = (Graphics2D) g;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":31,"deletions":34,"binary":false,"changes":65,"status":"modified"}]}