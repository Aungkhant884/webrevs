{"files":[{"patch":"@@ -846,3 +846,1 @@\n-    ClassLoaderData* loader_data = method->method_holder()->class_loader_data();\n-    MethodData* method_data = MethodData::allocate(loader_data, methodHandle(THREAD, method), CHECK);\n-    method->set_method_data(method_data);\n+    method->build_profiling_method_data(methodHandle(THREAD, method), CHECK);\n","filename":"src\/hotspot\/share\/ci\/ciReplay.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1285,0 +1285,12 @@\n+static MethodData* get_profiling_method_data(const methodHandle& method, TRAPS) {\n+  MethodData* method_data = method->method_data();\n+  if (method_data == nullptr) {\n+    method->build_profiling_method_data(method, CHECK_NULL);\n+    method_data = method->method_data();\n+    if (method_data == nullptr) {\n+      THROW_MSG_NULL(vmSymbols::java_lang_OutOfMemoryError(), \"cannot allocate MethodData\")\n+    }\n+  }\n+  return method_data;\n+}\n+\n@@ -1300,3 +1312,1 @@\n-    ClassLoaderData* loader_data = method->method_holder()->class_loader_data();\n-    method_data = MethodData::allocate(loader_data, method, CHECK);\n-    method->set_method_data(method_data);\n+    method_data = get_profiling_method_data(method, CHECK);\n@@ -2979,6 +2989,1 @@\n-  MethodData* method_data = method->method_data();\n-  if (method_data == nullptr) {\n-    ClassLoaderData* loader_data = method->method_holder()->class_loader_data();\n-    method_data = MethodData::allocate(loader_data, method, CHECK_0);\n-    method->set_method_data(method_data);\n-  }\n+  MethodData* method_data = get_profiling_method_data(method, CHECK_0);\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":14,"deletions":9,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -105,1 +105,1 @@\n-  set_method_data(nullptr);\n+  clear_method_data();\n@@ -130,1 +130,1 @@\n-  set_method_data(nullptr);\n+  clear_method_data();\n@@ -1182,1 +1182,1 @@\n-  set_method_data(nullptr);\n+  clear_method_data();\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -311,1 +311,1 @@\n-  void set_method_data(MethodData* data);\n+  void clear_method_data();\n","filename":"src\/hotspot\/share\/oops\/method.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -42,5 +42,2 @@\n-inline void Method::set_method_data(MethodData* data) {\n-  \/\/ The store into method must be released. On platforms without\n-  \/\/ total store order (TSO) the reference may become visible before\n-  \/\/ the initialization of data otherwise.\n-  Atomic::release_store(&_method_data, data);\n+inline void Method::clear_method_data() {\n+  _method_data = nullptr;\n","filename":"src\/hotspot\/share\/oops\/method.inline.hpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"}]}