{"files":[{"patch":"@@ -261,0 +261,1 @@\n+  os::free(const_cast<char*>(_name));\n@@ -269,1 +270,1 @@\n-             SafepointCheckRequired safepoint_check_required) : _owner(NULL), _name(name) {\n+             SafepointCheckRequired safepoint_check_required) : _owner(NULL) {\n@@ -272,0 +273,1 @@\n+  _name = os::strdup(name, mtInternal);\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,3 @@\n+#include \"runtime\/thread.hpp\"\n+#include \"utilities\/formatBuffer.hpp\"\n+#include \"threadHelper.inline.hpp\"\n@@ -30,0 +33,21 @@\n+const int iterations = 10;\n+static Mutex* m[iterations];\n+static int i = 0;\n+\n+static void create_mutex(Thread* thr) {\n+  m[i] = new Mutex(Mutex::leaf, FormatBuffer<128>(\"MyLock lock #%u\", i), true, Mutex::_safepoint_check_never);\n+  i++;\n+}\n+\n+TEST_VM(MutexName, mutex_name) {\n+  \/\/ Create mutexes in threads, where the names are created on the thread\n+  \/\/ stacks and then check that their names are correct.\n+  for (int i = 0; i < iterations; i++) {\n+    nomt_test_doer(create_mutex);\n+  }\n+  for (int i = 0; i < iterations; i++) {\n+    FormatBuffer<128> f(\"MyLock lock #%u\", i);\n+    ASSERT_TRUE(strcmp(m[i]->name(), f.buffer()) == 0) << \"Wrong name!\";\n+  }\n+}\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_mutex.cpp","additions":24,"deletions":0,"binary":false,"changes":24,"previous_filename":"test\/hotspot\/gtest\/runtime\/test_mutex_rank.cpp","status":"renamed"}]}