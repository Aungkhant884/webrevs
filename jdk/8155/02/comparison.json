{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -200,1 +200,4 @@\n-                assert (n - i >= 2);\n+                if (n - i >= 2) {\n+                    throw new IllegalArgumentException(\"Malformed escape pair: \" + s);\n+                }\n+\n@@ -203,2 +206,2 @@\n-                } catch (NumberFormatException e) {\n-                    throw new IllegalArgumentException();\n+                } catch (NumberFormatException | IndexOutOfBoundsException e) {\n+                    throw new IllegalArgumentException(\"Malformed escape pair: \" + s);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/ParseUtil.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import java.net.MalformedURLException;\n@@ -61,1 +62,7 @@\n-        return new FtpURLConnection(u, p);\n+        FtpURLConnection connection = null;\n+        try {\n+            connection = new FtpURLConnection(u, p);\n+        } catch (IllegalArgumentException e) {\n+            throw new MalformedURLException(e.getMessage());\n+        }\n+        return connection;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/ftp\/Handler.java","additions":9,"deletions":2,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* @test\n+ * @summary URL.openConnection can throw IOOBE\n+ * @bug 8282395\n+ *\/\n+\n+import java.net.MalformedURLException;\n+import java.net.Proxy;\n+import java.net.URL;\n+\n+public class B8282395 {\n+    public static void main(String[] args) throws Exception {\n+        boolean res = false;\n+        URL url = new URL(\"ftp:\/\/.:%@\");\n+        try {\n+            \/\/ Will throw IndexOutOfBoundsException if not fixed\n+            url.openConnection();\n+        } catch (MalformedURLException e) {\n+            res = true;\n+        }\n+        if (!res) {\n+            throw new RuntimeException(\"MalformedURLException should be thrown\");\n+        }\n+        res = false;\n+        try {\n+            \/\/ Will throw IndexOutOfBoundsException if not fixed\n+            url.openConnection(Proxy.NO_PROXY);\n+        } catch (MalformedURLException e) {\n+            res = true;\n+        }\n+        if (!res) {\n+            throw new RuntimeException(\"MalformedURLException should be thrown\");\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/java\/net\/URL\/B8282395.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}