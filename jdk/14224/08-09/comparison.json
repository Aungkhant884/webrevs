{"files":[{"patch":"@@ -3941,1 +3941,1 @@\n-  if ((UseAVX >= 1) && (VM_Version::supports_evex() || VM_Version::supports_fma())) {\n+  if ((UseAVX >= 1) && (VM_Version::supports_avx512vlbwdq() || VM_Version::supports_fma())) {\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-  if (VM_Version::supports_evex()) {     \/\/ AVX512 version\n+  if (VM_Version::supports_avx512vlbwdq()) {     \/\/ AVX512 version\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_fmod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -94,0 +94,1 @@\n+     boolean print_failure = false;\n@@ -100,8 +101,22 @@\n-           if (f3 != res[j][k] && Double.isNaN(f3) != Double.isNaN(res[j][k])) {\n-            System.out.println( \"Actual   \" + f1 + \" % \" + f2 + \" = \" + f3);\n-            System.out.println( \"Expected \" + f1 + \" % \" + f2 + \" = \" + res[j][k]);\n-            failure = true;\n-          }\n-        }\n-      }\n-    }\n+\n+           if (Double.isNaN(res[j][k])) {\n+             if (!Double.isNaN(f3)) {\n+               failure = true;\n+               print_failure = true;\n+             }\n+           } else if (Double.isNaN(f3)) {\n+             failure = true;\n+             print_failure = true;\n+           } else if (f3 != res[j][k]) {\n+             failure = true;\n+             print_failure = true;\n+           }\n+\n+           if (print_failure) {\n+             System.out.println( \"Actual   \" + f1 + \" % \" + f2 + \" = \" + f3);\n+             System.out.println( \"Expected \" + f1 + \" % \" + f2 + \" = \" + res[j][k]);\n+             print_failure = false;\n+           }\n+         }\n+       }\n+     }\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/DmodTest.java","additions":23,"deletions":8,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -91,1 +91,0 @@\n-\n@@ -95,0 +94,1 @@\n+     boolean print_failure = false;\n@@ -101,1 +101,15 @@\n-           if (f3 != res[j][k] && Float.isNaN(f3) != Float.isNaN(res[j][k])) {\n+\n+           if (Float.isNaN(res[j][k])) {\n+             if (!Float.isNaN(f3)) {\n+               failure = true;\n+               print_failure = true;\n+             }\n+           } else if (Float.isNaN(f3)) {\n+             failure = true;\n+             print_failure = true;\n+           } else if (f3 != res[j][k]) {\n+             failure = true;\n+             print_failure = true;\n+           }\n+\n+           if (print_failure) {\n@@ -104,1 +118,1 @@\n-             failure = true;\n+             print_failure = false;\n","filename":"test\/hotspot\/jtreg\/compiler\/floatingpoint\/FmodTest.java","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"}]}