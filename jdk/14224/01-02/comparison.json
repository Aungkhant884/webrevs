{"files":[{"patch":"@@ -3559,1 +3559,1 @@\n-  assert(UseAVX > 0, \"Requires some form ov AVX\");\n+  assert(UseAVX > 0, \"Requires some form of AVX\");\n@@ -6561,0 +6561,1 @@\n+  attributes.set_is_evex_instruction();\n@@ -6942,1 +6943,1 @@\n-  assert(rmode <= 0x03, \"rmode 0x%x\", rmode);\n+  assert(rmode <= 0x0f, \"rmode 0x%x\", rmode);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -81,0 +81,234 @@\n+#if 1\n+\n+  Label L_5280, L_52a0, L_5256, L_5300, L_5320, L_52c0, L_52d0, L_5360, L_5380, L_53b0, L_5390;\n+  Label L_53c0, L_52a6, L_53d0, L_exit;\n+\n+\/\/    0x0000555555555200 <+0>:     c5 f9 6f d0                     vmovdqa xmm2,xmm0\n+\/\/    0x0000555555555204 <+4>:     c5 fa 7e c0                     vmovq  xmm0,xmm0\n+\/\/    0x0000555555555208 <+8>:     c4 e2 79 59 1d 0f 0e 00 00      vpbroadcastq xmm3,QWORD PTR [rip+0xe0f]        # CONST_NaN\n+  __ movdqa(xmm2, xmm0);\n+  __ movq(xmm0, xmm0);\n+  __ mov64(rax, 0x7FFFFFFFFFFFFFFF);\n+  __ evpbroadcastq(xmm3, rax, Assembler::AVX_128bit);\n+\/\/    0x0000555555555211 <+17>:    c5 f9 db f3                     vpand  xmm6,xmm0,xmm3\n+\/\/    0x0000555555555215 <+21>:    c5 f1 db e3                     vpand  xmm4,xmm1,xmm3\n+\/\/    0x0000555555555219 <+25>:    c5 c9 ef d8                     vpxor  xmm3,xmm6,xmm0\n+\/\/    0x000055555555521d <+29>:    c5 fa 7e ec                     vmovq  xmm5,xmm4\n+\/\/    0x0000555555555221 <+33>:    62 f1 cf 78 5e c5               vdivsd xmm0,xmm6,xmm5,{rz-sae}\n+\/\/    0x0000555555555227 <+39>:    c5 fa 7e c0                     vmovq  xmm0,xmm0\n+\/\/    0x000055555555522b <+43>:    c5 c1 57 ff                     vxorpd xmm7,xmm7,xmm7\n+\/\/    0x000055555555522f <+47>:    c4 e3 41 0b c0 0b               vroundsd xmm0,xmm7,xmm0,0xb\n+\/\/    0x0000555555555235 <+53>:    c4 e3 79 17 c0 01               vextractps eax,xmm0,0x1\n+\/\/    0x000055555555523b <+59>:    85 c0                           test   eax,eax\n+\/\/    0x000055555555523d <+61>:    74 41                           je     0x555555555280 <fmod+128>\n+  __ vpand(xmm6, xmm0, xmm3, Assembler::AVX_128bit);\n+  __ vpand(xmm4, xmm1, xmm3, Assembler::AVX_128bit);\n+  __ vpxor(xmm3, xmm6, xmm0, Assembler::AVX_128bit);\n+  __ movq(xmm5, xmm4);\n+  __ evdivsd(xmm0, xmm6, xmm5, Assembler::EVEX_RZ);\n+  __ movq(xmm0, xmm0);\n+  __ vxorpd(xmm7, xmm7, xmm7, Assembler::AVX_128bit);\n+  __ vroundsd(xmm0, xmm7, xmm0, 0xb);\n+  __ extractps(rax, xmm0, 1);\n+  __ testl(rax, rax);\n+  __ jcc(Assembler::equal, L_5280);\n+\n+\/\/    0x000055555555523f <+63>:    3d fe ff ef 7f                  cmp    eax,0x7feffffe\n+\/\/    0x0000555555555244 <+68>:    76 5a                           jbe    0x5555555552a0 <fmod+160>\n+\/\/    0x0000555555555246 <+70>:    c5 e9 ef d2                     vpxor  xmm2,xmm2,xmm2\n+\/\/    0x000055555555524a <+74>:    c5 f9 2e e2                     vucomisd xmm4,xmm2\n+\/\/    0x000055555555524e <+78>:    75 06                           jne    0x555555555256 <fmod+86>\n+\/\/    0x0000555555555250 <+80>:    0f 8b aa 00 00 00               jnp    0x555555555300 <fmod+256>\n+\/\/    0x0000555555555256 <+86>:    c5 fb 10 15 ca 0d 00 00         vmovsd xmm2,QWORD PTR [rip+0xdca]        # CONST_MAX\n+\/\/    0x000055555555525e <+94>:    c5 f9 2e d6                     vucomisd xmm2,xmm6\n+\/\/    0x0000555555555262 <+98>:    0f 82 98 00 00 00               jb     0x555555555300 <fmod+256>\n+\/\/    0x0000555555555268 <+104>:   c5 fb 10 05 c0 0d 00 00         vmovsd xmm0,QWORD PTR [rip+0xdc0]        # CONST_INF\n+\/\/    0x0000555555555270 <+112>:   c5 f9 2e c4                     vucomisd xmm0,xmm4\n+\/\/    0x0000555555555274 <+116>:   0f 83 a6 00 00 00               jae    0x555555555320 <fmod+288>\n+\/\/    0x000055555555527a <+122>:   c5 f3 58 c1                     vaddsd xmm0,xmm1,xmm1\n+\/\/    0x000055555555527e <+126>:   c3                              ret\n+\/\/    0x000055555555527f <+127>:   90                              nop\n+  __ cmpl(rax, 0x7feffffe);\n+  __ jcc(Assembler::belowEqual, L_52a0);\n+  __ vpxor(xmm2, xmm2, xmm2, Assembler::AVX_128bit);\n+  __ ucomisd(xmm4, xmm2);\n+  __ jcc(Assembler::notEqual, L_5256);\n+  __ jcc(Assembler::noParity, L_5300);\n+\n+  __ bind(L_5256);\n+  __ movsd(xmm2, ExternalAddress((address)CONST_MAX), rax);\n+  __ ucomisd(xmm2, xmm6);\n+  __ jcc(Assembler::below, L_5300);\n+  __ movsd(xmm0, ExternalAddress((address)CONST_INF), rax);\n+  __ ucomisd(xmm0, xmm4);\n+  __ jcc(Assembler::aboveEqual, L_5320);\n+\n+  __ vaddsd(xmm0, xmm1, xmm1);\n+  __ jmp(L_exit);\n+\/\/    0x0000555555555280 <+128>:   c5 e3 58 c2                     vaddsd xmm0,xmm3,xmm2\n+\/\/    0x0000555555555284 <+132>:   c3                              ret\n+\/\/    0x0000555555555285 <+133>:   66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    data16 data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]\n+\/\/    0x0000555555555294 <+148>:   66 66 66 2e 0f 1f 84 00 00 00 00 00     data16 data16 cs nop WORD PTR [rax+rax*1+0x0]\n+\/\/    0x00005555555552a0 <+160>:   62 f2 dd 78 ad c6               vfnmadd213sd xmm0,xmm4,xmm6,{rz-sae}\n+\/\/    0x00005555555552a6 <+166>:   c5 f9 2e c4                     vucomisd xmm0,xmm4\n+\/\/    0x00005555555552aa <+170>:   73 14                           jae    0x5555555552c0 <fmod+192>\n+\/\/    0x00005555555552ac <+172>:   c5 e1 ef c0                     vpxor  xmm0,xmm3,xmm0\n+\/\/    0x00005555555552b0 <+176>:   c3                              ret\n+  __ align32();\n+  __ bind(L_5280);\n+  __ vaddsd(xmm0, xmm3, xmm2);\n+  __ jmp(L_exit);\n+\n+  __ align(8);\n+  __ bind(L_52a0);\n+  __ evfnmadd213sd(xmm0, xmm4, xmm6, Assembler::EVEX_RZ);\n+  __ bind(L_52a6);\n+  __ ucomisd(xmm0, xmm4);\n+  __ jcc(Assembler::aboveEqual, L_52c0);\n+  __ vpxor(xmm0, xmm3, xmm0, Assembler::AVX_128bit);\n+  __ jmp(L_exit);\n+\n+  __ bind(L_52c0);\n+\/\/    0x00005555555552b1 <+177>:   66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    data16 data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]\n+\/\/    0x00005555555552c0 <+192>:   c5 fa 7e f0                     vmovq  xmm6,xmm0\n+\/\/    0x00005555555552c4 <+196>:   c5 f1 ef c9                     vpxor  xmm1,xmm1,xmm1\n+\/\/    0x00005555555552c8 <+200>:   0f 1f 84 00 00 00 00 00         nop    DWORD PTR [rax+rax*1+0x0]\n+\/\/    0x00005555555552d0 <+208>:   62 f1 cf 78 5e d5               vdivsd xmm2,xmm6,xmm5,{rz-sae}\n+\/\/    0x00005555555552d6 <+214>:   c5 fa 7e d2                     vmovq  xmm2,xmm2\n+\/\/    0x00005555555552da <+218>:   c4 e3 71 0b d2 0b               vroundsd xmm2,xmm1,xmm2,0xb\n+\/\/    0x00005555555552e0 <+224>:   62 f2 dd 78 ad d0               vfnmadd213sd xmm2,xmm4,xmm0,{rz-sae}\n+\/\/    0x00005555555552e6 <+230>:   c5 f9 2e d4                     vucomisd xmm2,xmm4\n+\/\/    0x00005555555552ea <+234>:   c5 fa 7e f2                     vmovq  xmm6,xmm2\n+\/\/    0x00005555555552ee <+238>:   c5 f9 28 c2                     vmovapd xmm0,xmm2\n+\/\/    0x00005555555552f2 <+242>:   73 dc                           jae    0x5555555552d0 <fmod+208>\n+\/\/    0x00005555555552f4 <+244>:   c5 e1 ef c2                     vpxor  xmm0,xmm3,xmm2\n+\/\/    0x00005555555552f8 <+248>:   c3                              ret\n+  __ movq(xmm6, xmm0);\n+  __ vpxor(xmm1, xmm1, xmm1, Assembler::AVX_128bit);\n+  __ align32();\n+  __ bind(L_52d0);\n+\n+  __ evdivsd(xmm2, xmm6, xmm5, Assembler::EVEX_RZ);\n+  __ movq(xmm2, xmm2);\n+  __ vroundsd(xmm2, xmm1, xmm2, 0xb);\n+  __ evfnmadd213sd(xmm2, xmm4, xmm0, Assembler::EVEX_RZ);\n+  __ ucomisd(xmm2, xmm4);\n+  __ movq(xmm6, xmm2);\n+  __ movapd(xmm0, xmm2);\n+  __ jcc(Assembler::aboveEqual, L_52d0);\n+\n+  __ vpxor(xmm0, xmm3, xmm2, Assembler::AVX_128bit);\n+  __ jmp(L_exit);\n+\/\/    0x00005555555552f9 <+249>:   0f 1f 80 00 00 00 00            nop    DWORD PTR [rax+0x0]\n+\/\/    0x0000555555555300 <+256>:   c4 e2 d9 ad c6                  vfnmadd213sd xmm0,xmm4,xmm6\n+\/\/    0x0000555555555305 <+261>:   c3                              ret\n+  __ bind(L_5300);\n+  __ vfnmadd213sd(xmm0, xmm4, xmm6);\n+  __ jmp(L_exit);\n+\/\/    0x0000555555555306 <+262>:   66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    data16 data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]\n+\/\/    0x0000555555555315 <+277>:   66 66 2e 0f 1f 84 00 00 00 00 00        data16 cs nop WORD PTR [rax+rax*1+0x0]\n+\/\/    0x0000555555555320 <+288>:   c5 db 59 0d 10 0d 00 00         vmulsd xmm1,xmm4,QWORD PTR [rip+0xd10]        # CONST_e307\n+\/\/    0x0000555555555328 <+296>:   c5 fa 7e d1                     vmovq  xmm2,xmm1\n+\/\/    0x000055555555532c <+300>:   62 f1 cf 78 5e c2               vdivsd xmm0,xmm6,xmm2,{rz-sae}\n+\/\/    0x0000555555555332 <+306>:   c5 fa 7e c0                     vmovq  xmm0,xmm0\n+\/\/    0x0000555555555336 <+310>:   c4 e3 41 0b f8 0b               vroundsd xmm7,xmm7,xmm0,0xb\n+\/\/    0x000055555555533c <+316>:   c4 e3 79 17 f8 01               vextractps eax,xmm7,0x1\n+\/\/    0x0000555555555342 <+322>:   3d ff ff ef 7f                  cmp    eax,0x7fefffff\n+\/\/    0x0000555555555347 <+327>:   72 17                           jb     0x555555555360 <fmod+352>\n+\/\/    0x0000555555555349 <+329>:   c5 f3 59 05 e7 0c 00 00         vmulsd xmm0,xmm1,QWORD PTR [rip+0xce7]        # CONST_e307\n+\/\/    0x0000555555555351 <+337>:   c5 f9 2e f0                     vucomisd xmm6,xmm0\n+\/\/    0x0000555555555355 <+341>:   73 29                           jae    0x555555555380 <fmod+384>\n+\/\/    0x0000555555555357 <+343>:   c5 f9 28 fe                     vmovapd xmm7,xmm6\n+\/\/    0x000055555555535b <+347>:   eb 53                           jmp    0x5555555553b0 <fmod+432>\n+  __ bind(L_5320);\n+  __ vmulsd(xmm1, xmm4, ExternalAddress((address)CONST_e307), rax);\n+  __ movq(xmm2, xmm1);\n+  __ evdivsd(xmm0, xmm6, xmm2, Assembler::EVEX_RZ);\n+  __ movq(xmm0, xmm0);\n+  __ vroundsd(xmm7, xmm7, xmm0, 0xb);\n+  __ extractps(rax, xmm7, 1);\n+  __ cmpl(rax, 0x7fefffff);\n+  __ jcc(Assembler::below, L_5360);\n+  __ vmulsd(xmm0, xmm1, ExternalAddress((address)CONST_e307), rax);\n+  __ ucomisd(xmm6, xmm0);\n+  __ jcc(Assembler::aboveEqual, L_5380);\n+  __ movapd(xmm7, xmm6);\n+  __ jmp(L_53b0);\n+\/\/    0x000055555555535d <+349>:   0f 1f 00                        nop    DWORD PTR [rax]\n+\/\/    0x0000555555555360 <+352>:   62 f2 f5 78 ad fe               vfnmadd213sd xmm7,xmm1,xmm6,{rz-sae}\n+\/\/    0x0000555555555366 <+358>:   eb 48                           jmp    0x5555555553b0 <fmod+432>\n+  __ bind(L_5360);\n+  __ evfnmadd213sd(xmm7, xmm1, xmm6, Assembler::EVEX_RZ);\n+  __ jmp(L_53b0);\n+\/\/    0x0000555555555368 <+360>:   66 66 66 66 66 66 2e 0f 1f 84 00 00 00 00 00    data16 data16 data16 data16 data16 cs nop WORD PTR [rax+rax*1+0x0]\n+\/\/    0x0000555555555377 <+375>:   66 0f 1f 84 00 00 00 00 00      nop    WORD PTR [rax+rax*1+0x0]\n+\/\/    0x0000555555555380 <+384>:   c4 41 39 57 c0                  vxorpd xmm8,xmm8,xmm8\n+\/\/    0x0000555555555385 <+389>:   66 66 2e 0f 1f 84 00 00 00 00 00        data16 cs nop WORD PTR [rax+rax*1+0x0]\n+  __ bind(L_5380);\n+  __ vxorpd(xmm8, xmm8, xmm8, Assembler::AVX_128bit);\n+\n+  __ align32();\n+  __ bind(L_5390);\n+\/\/    0x0000555555555390 <+400>:   62 f1 cf 78 5e f8               vdivsd xmm7,xmm6,xmm0,{rz-sae}\n+\/\/    0x0000555555555396 <+406>:   c5 fa 7e ff                     vmovq  xmm7,xmm7\n+\/\/    0x000055555555539a <+410>:   c4 e3 39 0b ff 0b               vroundsd xmm7,xmm8,xmm7,0xb\n+\/\/    0x00005555555553a0 <+416>:   62 f2 fd 78 ad fe               vfnmadd213sd xmm7,xmm0,xmm6,{rz-sae}\n+\/\/    0x00005555555553a6 <+422>:   c5 f9 2e f8                     vucomisd xmm7,xmm0\n+\/\/    0x00005555555553aa <+426>:   c5 f9 28 f7                     vmovapd xmm6,xmm7\n+\/\/    0x00005555555553ae <+430>:   73 e0                           jae    0x555555555390 <fmod+400>\n+\/\/    0x00005555555553b0 <+432>:   c5 f9 2e f9                     vucomisd xmm7,xmm1\n+\/\/    0x00005555555553b4 <+436>:   73 0a                           jae    0x5555555553c0 <fmod+448>\n+\/\/    0x00005555555553b6 <+438>:   c5 f9 28 c7                     vmovapd xmm0,xmm7\n+\/\/    0x00005555555553ba <+442>:   e9 e7 fe ff ff                  jmp    0x5555555552a6 <fmod+166>\n+  __ evdivsd(xmm7, xmm6, xmm0, Assembler::EVEX_RZ);\n+  __ movq(xmm7, xmm7);\n+  __ vroundsd(xmm7, xmm8, xmm7, 0xb);\n+  __ evfnmadd213sd(xmm7, xmm0, xmm6, Assembler::EVEX_RZ);\n+  __ ucomisd(xmm7, xmm0);\n+  __ movapd(xmm6, xmm7);\n+  __ jcc(Assembler::aboveEqual, L_5390);\n+  __ bind(L_53b0);\n+  __ ucomisd(xmm7, xmm1);\n+  __ jcc(Assembler::aboveEqual, L_53c0);\n+  __ movapd(xmm0, xmm7);\n+  __ jmp(L_52a6);\n+\/\/    0x00005555555553bf <+447>:   90                              nop\n+\/\/    0x00005555555553c0 <+448>:   c5 c9 57 f6                     vxorpd xmm6,xmm6,xmm6\n+\/\/    0x00005555555553c4 <+452>:   66 66 66 2e 0f 1f 84 00 00 00 00 00     data16 data16 cs nop WORD PTR [rax+rax*1+0x0]\n+\/\/    0x00005555555553d0 <+464>:   62 f1 c7 78 5e c2               vdivsd xmm0,xmm7,xmm2,{rz-sae}\n+\/\/    0x00005555555553d6 <+470>:   c5 fa 7e c0                     vmovq  xmm0,xmm0\n+\/\/    0x00005555555553da <+474>:   c4 e3 49 0b c0 0b               vroundsd xmm0,xmm6,xmm0,0xb\n+\/\/    0x00005555555553e0 <+480>:   62 f2 f5 78 ad c7               vfnmadd213sd xmm0,xmm1,xmm7,{rz-sae}\n+\/\/    0x00005555555553e6 <+486>:   c5 f9 2e c1                     vucomisd xmm0,xmm1\n+\/\/    0x00005555555553ea <+490>:   c5 f9 28 f8                     vmovapd xmm7,xmm0\n+\/\/    0x00005555555553ee <+494>:   73 e0                           jae    0x5555555553d0 <fmod+464>\n+\/\/    0x00005555555553f0 <+496>:   e9 b1 fe ff ff                  jmp    0x5555555552a6 <fmod+166>\n+  __ bind(L_53c0);\n+  __ vxorpd(xmm6, xmm6, xmm6, Assembler::AVX_128bit);\n+  __ align32();\n+  __ bind(L_53d0);\n+  __ evdivsd(xmm0, xmm7, xmm2, Assembler::EVEX_RZ);\n+  __ movq(xmm0, xmm0);\n+  __ vroundsd(xmm0, xmm6, xmm0, 0xb);\n+  __ evfnmadd213sd(xmm0, xmm1, xmm7, Assembler::EVEX_RZ);\n+  __ ucomisd(xmm0, xmm1);\n+  __ movapd(xmm7, xmm0);\n+  __ jcc(Assembler::aboveEqual, L_53d0);\n+  __ jmp(L_52a6);\n+\n+\n+\n+\n+\n+\/\/ (gdb) x\/30gx 0x555555556020\n+\/\/ 0x555555556020: 0x7fffffffffffffff      0x7fefffffffffffff\n+\/\/ 0x555555556030: 0x7ff0000000000000      0x7fe0000000000000\n+\/\/ 0x555555556040: 0x000000343b031b01      0xffffefe000000005\n+\/\/ 0x555555556050: 0xffffeff000000068      0xfffff00000000090\n+\/\/ 0x555555556060: 0xfffff0e900000050      0xfffff1c0000000a8\n+\/\/ 0x555555556070: 0x00000000000000c8      0x0000000000000014\n+\n+  __ bind(L_exit);\n+\n+#else\n+\n@@ -122,1 +356,1 @@\n-  __ vxorpd(xmm18, xmm18, xmm18, Assembler::AVX_512bit);\n+  __ vxorpd(xmm18, xmm18, xmm18, Assembler::AVX_128bit);\n@@ -125,1 +359,1 @@\n-  __ vandpd(xmm0, xmm5, xmm17, Assembler::AVX_512bit);\n+  __ vandpd(xmm0, xmm5, xmm17, Assembler::AVX_128bit);\n@@ -127,1 +361,1 @@\n-  __ vandpd(xmm1, xmm3, xmm17, Assembler::AVX_512bit);\n+  __ vandpd(xmm1, xmm3, xmm17, Assembler::AVX_128bit);\n@@ -131,1 +365,1 @@\n-  __ vxorpd(xmm16, xmm5, xmm17, Assembler::AVX_512bit);\n+  __ vxorpd(xmm16, xmm5, xmm17, Assembler::AVX_128bit);\n@@ -156,1 +390,1 @@\n-  __ vxorpd(xmm2, xmm2, xmm2, Assembler::AVX_512bit);\n+  __ vxorpd(xmm2, xmm2, xmm2, Assembler::AVX_128bit);\n@@ -162,3 +396,1 @@\n-  __ mov64(rax, 0x7FEFFFFFFFFFFFFF);\n-  __ movq(Address(rsp, 0x20), rax);\n-  __ movsd(xmm2, Address(rsp, 0x20));\n+  __ movsd(xmm2, ExternalAddress((address)CONST_MAX), rax);\n@@ -169,3 +401,1 @@\n-  __ mov64(rax, 0x7FF0000000000000);\n-  __ movq(Address(rsp, 0x20), rax);\n-  __ movsd(xmm2, Address(rsp, 0x20));\n+  __ movsd(xmm2, ExternalAddress((address)CONST_INF), rax);\n@@ -177,3 +407,1 @@\n-  __ mov64(rax, 0x7FE0000000000000);\n-  __ movq(Address(rsp, 0x20), rax);\n-  __ movsd(xmm21, Address(rsp, 0x20));\n+  __ movsd(xmm21, ExternalAddress((address)CONST_e307), rax);\n@@ -206,0 +434,1 @@\n+  __ align32();\n@@ -234,0 +463,1 @@\n+  __ align32();\n@@ -273,0 +503,1 @@\n+  __ align32();\n@@ -292,1 +523,1 @@\n-  __ vxorpd(xmm0, xmm0, xmm16, Assembler::AVX_512bit);\n+  __ vxorpd(xmm0, xmm0, xmm16, Assembler::AVX_128bit);\n@@ -303,0 +534,2 @@\n+#endif\n+\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_fmod.cpp","additions":248,"deletions":15,"binary":false,"changes":263,"status":"modified"}]}