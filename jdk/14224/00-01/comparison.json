{"files":[{"patch":"@@ -3559,1 +3559,1 @@\n-  assert(VM_Version::supports_evex(), \"\");\n+  assert(UseAVX > 0, \"Requires some form ov AVX\");\n@@ -3562,1 +3562,0 @@\n-  attributes.set_is_evex_instruction();\n@@ -8922,2 +8921,2 @@\n-void Assembler::evextractps(Register dst, XMMRegister src, uint8_t imm8) {\n-  assert(VM_Version::supports_avx(), \"\");\n+void Assembler::extractps(Register dst, XMMRegister src, uint8_t imm8) {\n+  assert(VM_Version::supports_sse4_1(), \"\");\n@@ -8925,3 +8924,2 @@\n-  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ true, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ true);\n-  attributes.set_is_evex_instruction();\n-  int encode = vex_prefix_and_encode(src->encoding(), 0, dst->encoding(), VEX_SIMD_66, VEX_OPCODE_0F_3A, &attributes);\n+  InstructionAttr attributes(AVX_128bit, \/* vex_w *\/ true, \/* legacy_mode *\/ false, \/* no_mask_reg *\/ true, \/* uses_vl *\/ false);\n+  int encode = simd_prefix_and_encode(src, xnoreg, as_XMMRegister(dst->encoding()), VEX_SIMD_66, VEX_OPCODE_0F_3A, &attributes);\n@@ -9614,0 +9612,1 @@\n+  attributes.set_is_evex_instruction();\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2744,1 +2744,1 @@\n-  void evextractps(Register dst, XMMRegister src, uint8_t imm8);\n+  void extractps(Register dst, XMMRegister src, uint8_t imm8);\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -90,1 +90,2 @@\n-  if (UseAVX < 1 || !UseFMA) {\n+  const bool is_LP64 = LP64_ONLY(true) NOT_LP64(false);\n+  if (!is_LP64 || UseAVX < 1 || !UseFMA) {\n@@ -114,1 +115,2 @@\n-  if (UseAVX < 1 || !UseFMA) {\n+  const bool is_LP64 = LP64_ONLY(true) NOT_LP64(false);\n+  if (!is_LP64 || UseAVX < 1 || !UseFMA) {\n","filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -399,1 +399,1 @@\n-  __ evextractps(rax, xmm0, 1);\n+  __ extractps(rax, xmm0, 1);\n@@ -456,1 +456,1 @@\n-  __ evextractps(rax, xmm0, 1);\n+  __ extractps(rax, xmm0, 1);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64_fmod.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}