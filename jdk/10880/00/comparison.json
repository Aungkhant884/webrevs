{"files":[{"patch":"@@ -728,0 +728,4 @@\n+void MacroAssembler::vneg_v(VectorRegister vd, VectorRegister vs) {\n+  vrsub_vx(vd, x0, vs);\n+}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1195,0 +1195,1 @@\n+  void vneg_v(VectorRegister vd, VectorRegister vs);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -764,0 +764,24 @@\n+\/\/ vector neg\n+\n+instruct vnegI(vReg dst, vReg src) %{\n+  match(Set dst (NegVI src));\n+  ins_cost(VEC_COST);\n+  format %{ \"vrsub.vx $dst, $src, $src\\t#@vnegI\" %}\n+  ins_encode %{\n+    __ vsetvli(t0, x0, Assembler::e32);\n+    __ vneg_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n+instruct vnegL(vReg dst, vReg src) %{\n+  match(Set dst (NegVL src));\n+  ins_cost(VEC_COST);\n+  format %{ \"vrsub.vx $dst, $src, $src\\t#@vnegL\" %}\n+  ins_encode %{\n+    __ vsetvli(t0, x0, Assembler::e64);\n+    __ vneg_v(as_VectorRegister($dst$$reg), as_VectorRegister($src$$reg));\n+  %}\n+  ins_pipe(pipe_slow);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/riscv\/riscv_v.ad","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"}]}