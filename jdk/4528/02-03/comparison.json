{"files":[{"patch":"@@ -138,1 +138,0 @@\n-     * @throws NullPointerException if key is null\n@@ -161,1 +160,0 @@\n-     * @throws NullPointerException if key or value are null\n@@ -204,1 +202,0 @@\n-     * @throws NullPointerException if key or value are null\n@@ -247,3 +244,1 @@\n-    public boolean equals(Object o) {\n-        return o instanceof Headers h && map.equals(h);\n-    }\n+    public boolean equals(Object o) { return map.equals(o); }\n@@ -256,1 +251,1 @@\n-        final var sb = new StringBuilder(super.toString());\n+        final var sb = new StringBuilder(Headers.class.getSimpleName());\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Headers.java","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -266,2 +266,1 @@\n-        assertFalse(h.equals(m), \"Map instance cannot be equal to Headers\");\n-        assertFalse(h.equals(null), \"null cannot be equal to Headers\");\n+        assertTrue(h.equals(m));\n@@ -269,0 +268,1 @@\n+        assertFalse(h.equals(null), \"null cannot be equal to Headers\");\n@@ -275,2 +275,1 @@\n-        assertTrue(h.toString().startsWith(\"com.sun.net.httpserver.Headers\"));\n-        assertTrue(h.toString().endsWith(\" { {Accept-encoding=[gzip, deflate]} }\"));\n+        assertTrue(h.toString().equals(\"Headers { {Accept-encoding=[gzip, deflate]} }\"));\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HeadersTest.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"}]}