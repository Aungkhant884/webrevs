{"files":[{"patch":"@@ -232,0 +232,2 @@\n+            } catch (IllegalStateException e) {\n+                report(\"Invalid value for Signature attribute: \" + e.getMessage());\n@@ -503,1 +505,1 @@\n-            } catch (ConstantPoolException e) {\n+            } catch (ConstantPoolException | IllegalStateException e) {\n","filename":"src\/jdk.jdeps\/share\/classes\/com\/sun\/tools\/javap\/ClassWriter.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,120 @@\n+class InvalidSignature {\n+  0xCAFEBABE;\n+  0; \/\/ minor version\n+  52; \/\/ version\n+  [] { \/\/ Constant Pool\n+    ; \/\/ first element is empty\n+    Method #4 #14; \/\/ #1\n+    String #15; \/\/ #2\n+    class #16; \/\/ #3\n+    class #17; \/\/ #4\n+    Utf8 \"<init>\"; \/\/ #5\n+    Utf8 \"()V\"; \/\/ #6\n+    Utf8 \"Code\"; \/\/ #7\n+    Utf8 \"LineNumberTable\"; \/\/ #8\n+    Utf8 \"m\"; \/\/ #9\n+    Utf8 \"m2\"; \/\/ #10\n+    Utf8 \"()Ljava\/lang\/String;\"; \/\/ #11\n+    Utf8 \"SourceFile\"; \/\/ #12\n+    Utf8 \"InvalidSignature.java\"; \/\/ #13\n+    NameAndType #5 #6; \/\/ #14\n+    Utf8 \"Hello\"; \/\/ #15\n+    Utf8 \"InvalidSignature\"; \/\/ #16\n+    Utf8 \"java\/lang\/Object\"; \/\/ #17\n+    Utf8 \"Signature\"; \/\/ #18\n+    Utf8 \"', '\"; \/\/ #19\n+  } \/\/ Constant Pool\n+\n+  0x0020; \/\/ access\n+  #3;\/\/ this_cpx\n+  #4;\/\/ super_cpx\n+\n+  [] { \/\/ Interfaces\n+  } \/\/ Interfaces\n+\n+  [] { \/\/ fields\n+  } \/\/ fields\n+\n+  [] { \/\/ methods\n+    { \/\/ Member\n+      0x0000; \/\/ access\n+      #5; \/\/ name_cpx\n+      #6; \/\/ sig_cpx\n+      [] { \/\/ Attributes\n+        Attr(#7) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x2AB70001B1;\n+          };\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#8) { \/\/ LineNumberTable\n+              [] { \/\/ LineNumberTable\n+                0  1;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member\n+      0x0000; \/\/ access\n+      #9; \/\/ name_cpx\n+      #6; \/\/ sig_cpx\n+      [] { \/\/ Attributes\n+        Attr(#7) { \/\/ Code\n+          0; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0xB1;\n+          };\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#8) { \/\/ LineNumberTable\n+              [] { \/\/ LineNumberTable\n+                0  2;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+    ;\n+    { \/\/ Member\n+      0x0000; \/\/ access\n+      #9; \/\/ name_cpx\n+      #11; \/\/ sig_cpx\n+      [] { \/\/ Attributes\n+        Attr(#7) { \/\/ Code\n+          1; \/\/ max_stack\n+          1; \/\/ max_locals\n+          Bytes[]{\n+            0x1202B0;\n+          };\n+          [] { \/\/ Traps\n+          } \/\/ end Traps\n+          [] { \/\/ Attributes\n+            Attr(#8) { \/\/ LineNumberTable\n+              [] { \/\/ LineNumberTable\n+                0  3;\n+              }\n+            } \/\/ end LineNumberTable\n+          } \/\/ Attributes\n+        } \/\/ end Code\n+      } \/\/ Attributes\n+    } \/\/ Member\n+  } \/\/ methods\n+\n+  [] { \/\/ Attributes\n+    Attr(#12) { \/\/ SourceFile\n+      #13;\n+    }; \/\/ end SourceFile\n+    Attr(#18) { \/\/ Signature\n+      #19;\n+    } \/\/ end Signature\n+  } \/\/ Attributes\n+} \/\/ end class InvalidSignature\n","filename":"test\/langtools\/tools\/javap\/8260403\/InvalidSignature.jcod","additions":120,"deletions":0,"binary":false,"changes":120,"status":"added"},{"patch":"@@ -0,0 +1,42 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8260403\n+ * @summary javap should be more robust in the face of invalid class files\n+ * @build InvalidSignature\n+ * @run main T8260403\n+ * @modules jdk.jdeps\/com.sun.tools.javap\n+ *\/\n+import java.io.PrintWriter;\n+\n+public class T8260403 {\n+\n+    public static void main(String args[]) throws Exception {\n+        if (com.sun.tools.javap.Main.run(new String[]{\"-c\", System.getProperty(\"test.classes\") + \"\/InvalidSignature.class\"},\n+                new PrintWriter(System.out)) != 0) {\n+            throw new AssertionError();\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javap\/8260403\/T8260403.java","additions":42,"deletions":0,"binary":false,"changes":42,"status":"added"}]}