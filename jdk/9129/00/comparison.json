{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,2 +72,2 @@\n-        } else if (type instanceof TypeVariable) {\n-            return new AnnotatedTypeVariableImpl((TypeVariable)type,\n+        } else if (type instanceof TypeVariable<?> typeVariable) {\n+            return new AnnotatedTypeVariableImpl(typeVariable,\n@@ -78,2 +78,2 @@\n-        } else if (type instanceof ParameterizedType) {\n-            return new AnnotatedParameterizedTypeImpl((ParameterizedType)type,\n+        } else if (type instanceof ParameterizedType paramType) {\n+            return new AnnotatedParameterizedTypeImpl(paramType,\n@@ -84,2 +84,2 @@\n-        } else if (type instanceof WildcardType) {\n-            return new AnnotatedWildcardTypeImpl((WildcardType) type,\n+        } else if (type instanceof WildcardType wildType) {\n+            return new AnnotatedWildcardTypeImpl(wildType,\n@@ -97,2 +97,1 @@\n-        if (type instanceof Class) {\n-            Class<?> clz = (Class)type;\n+        if (type instanceof Class<?> clz) {\n@@ -104,2 +103,1 @@\n-        } else if (type instanceof ParameterizedType) {\n-            ParameterizedType t = (ParameterizedType)type;\n+        } else if (type instanceof ParameterizedType t) {\n@@ -117,2 +115,1 @@\n-        if (t instanceof Class) {\n-            Class<?> c = (Class)t;\n+        if (t instanceof Class<?> c) {\n@@ -320,2 +317,1 @@\n-            if (t instanceof Class) {\n-                Class<?> c = (Class)t;\n+            if (t instanceof Class<?> c) {\n@@ -346,2 +342,1 @@\n-            while (componentType instanceof AnnotatedArrayType) {\n-                AnnotatedArrayType annotatedArrayType = (AnnotatedArrayType) componentType;\n+            while (componentType instanceof AnnotatedArrayType annotatedArrayType) {\n@@ -358,2 +353,1 @@\n-            if (o instanceof AnnotatedArrayType) {\n-                AnnotatedArrayType that = (AnnotatedArrayType) o;\n+            if (o instanceof AnnotatedArrayType that) {\n@@ -404,2 +398,1 @@\n-            if (o instanceof AnnotatedTypeVariable) {\n-                AnnotatedTypeVariable that = (AnnotatedTypeVariable) o;\n+            if (o instanceof AnnotatedTypeVariable that) {\n@@ -486,2 +479,1 @@\n-            if (o instanceof AnnotatedParameterizedType) {\n-                AnnotatedParameterizedType that = (AnnotatedParameterizedType) o;\n+            if (o instanceof AnnotatedParameterizedType that) {\n@@ -601,2 +593,1 @@\n-            if (o instanceof AnnotatedWildcardType) {\n-                AnnotatedWildcardType that = (AnnotatedWildcardType) o;\n+            if (o instanceof AnnotatedWildcardType that) {\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotatedTypeFactory.java","additions":16,"deletions":25,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -88,2 +88,2 @@\n-        if (result instanceof ExceptionProxy)\n-            throw ((ExceptionProxy) result).generateException();\n+        if (result instanceof ExceptionProxy exceptProxy)\n+            throw exceptProxy.generateException();\n@@ -413,2 +413,2 @@\n-            if (handler instanceof AnnotationInvocationHandler)\n-                return (AnnotationInvocationHandler) handler;\n+            if (handler instanceof AnnotationInvocationHandler annotationHandler)\n+                return annotationHandler;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationInvocationHandler.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -283,3 +283,2 @@\n-                if (value instanceof AnnotationTypeMismatchExceptionProxy)\n-                    ((AnnotationTypeMismatchExceptionProxy) value).\n-                        setMember(type.members().get(memberName));\n+                if (value instanceof AnnotationTypeMismatchExceptionProxy exceptProxy)\n+                    exceptProxy.setMember(type.members().get(memberName));\n@@ -446,3 +445,2 @@\n-        if (o instanceof GenericArrayType)\n-            return Array.newInstance(toClass(((GenericArrayType)o).getGenericComponentType()),\n-                                     0)\n+        if (o instanceof GenericArrayType gat)\n+            return Array.newInstance(toClass(gat.getGenericComponentType()), 0)\n@@ -747,2 +745,3 @@\n-                if (value instanceof ExceptionProxy) {\n-                    if (exceptionProxy == null) exceptionProxy = (ExceptionProxy) value;\n+                if (value instanceof ExceptionProxy proxyValue) {\n+                    if (exceptionProxy == null)\n+                        exceptionProxy = proxyValue;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotationParser.java","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,2 +130,1 @@\n-        if (decl instanceof Constructor) {\n-            Constructor<?> ctor = (Constructor<?>) decl;\n+        if (decl instanceof Constructor<?> ctor) {\n@@ -229,2 +228,2 @@\n-        if (genericDecl instanceof Class) {\n-            decl = (Class<?>)genericDecl;\n+        if (genericDecl instanceof Class<?> classDecl) {\n+            decl = classDecl;\n@@ -232,2 +231,2 @@\n-        } else if (genericDecl instanceof Executable) {\n-            decl = (Executable)genericDecl;\n+        } else if (genericDecl instanceof Executable execDecl) {\n+            decl = execDecl;\n@@ -282,2 +281,1 @@\n-                if (b0 instanceof Class<?>) {\n-                    Class<?> c = (Class<?>) b0;\n+                if (b0 instanceof Class<?> c) {\n@@ -287,2 +285,1 @@\n-                } else if (b0 instanceof ParameterizedType) {\n-                    ParameterizedType p = (ParameterizedType) b0;\n+                } else if (b0 instanceof ParameterizedType p) {\n@@ -319,1 +316,1 @@\n-        if (decl instanceof Class) {\n+        if (decl instanceof Class<?> classDecl) {\n@@ -321,1 +318,1 @@\n-            boundsDecl = (Class)decl;\n+            boundsDecl = classDecl;\n@@ -340,2 +337,2 @@\n-        if (decl instanceof Class) {\n-            container = (Class<?>)decl;\n+        if (decl instanceof Class<?> classDecl) {\n+            container = classDecl;\n@@ -343,3 +340,3 @@\n-        } else if (decl instanceof Executable) {\n-            container = ((Executable)decl).getDeclaringClass();\n-            rawBytes = javaLangAccess.getRawExecutableTypeAnnotations((Executable)decl);\n+        } else if (decl instanceof Executable execDecl) {\n+            container = execDecl.getDeclaringClass();\n+            rawBytes = javaLangAccess.getRawExecutableTypeAnnotations(execDecl);\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/TypeAnnotationParser.java","additions":15,"deletions":18,"binary":false,"changes":33,"status":"modified"}]}