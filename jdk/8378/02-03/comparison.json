{"files":[{"patch":"@@ -24,0 +24,11 @@\n+\/*\n+ * @test\n+ * @bug 8285517\n+ * @summary System.getenv() and argument don't return locale dependent data by JEP400\n+ * @requires (os.family == \"linux\")\n+ * @modules jdk.charsets\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.process.*\n+ * @run main i18nEnvArg\n+ *\/\n+\n@@ -45,7 +56,36 @@\n-        String jnuEncoding = System.getProperty(\"sun.jnu.encoding\");\n-        Charset dcs = jnuEncoding != null\n-            ? Charset.forName(jnuEncoding)\n-            : Charset.defaultCharset();\n-        Charset cs = Charset.forName(\"x-euc-jp-linux\");\n-        if (!dcs.equals(cs)) {\n-            return;\n+        ProcessBuilder pb;\n+        if (args.length == 0) {\n+            var cmds = List.of(\n+                \"--add-modules=\" + System.getProperty(\"test.modules\"),\n+                \"-classpath\",\n+                System.getProperty(\"test.class.path\"),\n+                \"-Dtest.jdk=\" + System.getProperty(\"test.jdk\"),\n+                \"-Dtest.class.path=\" + System.getProperty(\"test.class.path\"),\n+                \"-Dtest.modules=\" + System.getProperty(\"test.modules\"),\n+                \"i18nEnvArg\",\n+                \"Start\");\n+            pb = ProcessTools.createTestJvm(cmds);\n+            Map<String, String> environ = pb.environment();\n+            environ.clear();\n+            environ.put(\"LANG\", \"ja_JP.eucjp\");\n+        } else {\n+            String jnuEncoding = System.getProperty(\"sun.jnu.encoding\");\n+            Charset dcs = jnuEncoding != null\n+                ? Charset.forName(jnuEncoding)\n+                : Charset.defaultCharset();\n+            Charset cs = Charset.forName(\"x-euc-jp-linux\");\n+            if (!dcs.equals(cs)) {\n+                return;\n+            }\n+            var cmds = List.of(\n+                \"--add-modules=\" + System.getProperty(\"test.modules\"),\n+                \"--add-opens=java.base\/java.lang=ALL-UNNAMED\",\n+                \"-classpath\",\n+                System.getProperty(\"test.class.path\"),\n+                \"i18nEnvArg$Verify\",\n+                EUC_JP_TEXT);\n+            pb = ProcessTools.createTestJvm(cmds);\n+            Map<String, String> environ = pb.environment();\n+            environ.clear();\n+            environ.put(\"LANG\", \"ja_JP.eucjp\");\n+            environ.put(EUC_JP_TEXT, EUC_JP_TEXT);\n@@ -53,8 +93,0 @@\n-        var cmds = List.of(\"--add-opens=java.base\/java.lang=ALL-UNNAMED\",\n-            \"i18nEnvArg$Verify\",\n-            EUC_JP_TEXT);\n-        var pb = ProcessTools.createTestJvm(cmds);\n-        Map<String, String> environ = pb.environment();\n-        environ.clear();\n-        environ.put(\"LANG\", \"ja_JP.eucjp\");\n-        environ.put(EUC_JP_TEXT, EUC_JP_TEXT);\n","filename":"test\/jdk\/java\/lang\/System\/i18nEnvArg.java","additions":47,"deletions":15,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -1,52 +0,0 @@\n-#!\/bin\/sh\n-#\n-# Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n-# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n-#\n-# This code is free software; you can redistribute it and\/or modify it\n-# under the terms of the GNU General Public License version 2 only, as\n-# published by the Free Software Foundation.\n-#\n-# This code is distributed in the hope that it will be useful, but WITHOUT\n-# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-# version 2 for more details (a copy is included in the LICENSE file that\n-# accompanied this code).\n-#\n-# You should have received a copy of the GNU General Public License version\n-# 2 along with this work; if not, write to the Free Software Foundation,\n-# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n-#\n-# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n-# or visit www.oracle.com if you need additional information or have any\n-# questions.\n-#\n-\n-# @test i18nEnvArg.sh\n-# @bug 8285517\n-# @summary System.getenv() and argument don't return locale dependent data by JEP400\n-# @requires (os.family == \"linux\")\n-# @modules jdk.charsets\n-# @library \/test\/lib\n-# @build jdk.test.lib.process.*\n-# @build i18nEnvArg\n-# @run shell i18nEnvArg.sh\n-\n-# Verify directory context variables are set\n-if [ \"${TESTJAVA}\" = \"\" ]\n-then\n-  echo \"TESTJAVA not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-\n-OS=`uname -s`;\n-ENCODING=`env LANG=ja_JP.encjp LC_ALL=ja_JP.eucjp locale charmap`\n-\n-if [ \"${OS}\" = \"Linux\" -a \"${ENCODING}\" = \"EUC-JP\" ]; then\n-  JAVA=\"$TESTJAVA\/bin\/java ${TESTVMOPTS} --add-modules=${TESTMODULES} \\\n-        -classpath ${TESTCLASSPATH} -Dtest.jdk=${TESTROOT} \\\n-        -Dcompile.jdk=${COMPILEJAVA}\"\n-  env LANG=ja_JP.encjp LC_ALL=ja_JP.eucjp ${JAVA} i18nEnvArg\n-  exit $?\n-fi\n-exit 0\n","filename":"test\/jdk\/java\/lang\/System\/i18nEnvArg.sh","additions":0,"deletions":52,"binary":false,"changes":52,"status":"deleted"}]}