{"files":[{"patch":"@@ -172,1 +172,1 @@\n-  ifeq ($(call isTargetOs, windows)+$(CREATING_BUILDJDK), true+false)\n+  ifeq ($(call isTargetOs, windows), true)\n","filename":"make\/CreateJmods.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -192,5 +192,1 @@\n-  ifeq ($(wildcard $(TEST_IMAGE_DIR)\/bin\/fixpath.sh), )\n-    $(info Error: fixpath is missing from test image '$(TEST_IMAGE_DIR)')\n-    $(error Cannot continue.)\n-  endif\n-  FIXPATH := $(BASH) $(TEST_IMAGE_DIR)\/bin\/fixpath.sh exec\n+  FIXPATH := $(BASH) $(TOPDIR)\/make\/scripts\/fixpath.sh exec\n","filename":"make\/RunTestsPrebuilt.gmk","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -33,14 +33,0 @@\n-ifeq ($(call isTargetOs, windows), true)\n-  FIXPATH_COPY := $(TEST_IMAGE_DIR)\/bin\/fixpath.sh\n-\n-  $(FIXPATH_COPY): $(TOPDIR)\/make\/scripts\/fixpath.sh\n-\t$(call install-file)\n-\n-  FIXPATH_WORKSPACE_ROOT := $(call FixPath, $(WORKSPACE_ROOT))\n-  FIXPATH_OUTPUTDIR := $(call FixPath, $(OUTPUTDIR))\n-else\n-  FIXPATH_WORKSPACE_ROOT := $(WORKSPACE_ROOT)\n-  FIXPATH_OUTPUTDIR := $(OUTPUTDIR)\n-endif\n-\n-\n@@ -52,2 +38,2 @@\n-\t$(ECHO) \"build.workspace.root=$(FIXPATH_WORKSPACE_ROOT)\" >> $@\n-\t$(ECHO) \"build.output.root=$(FIXPATH_OUTPUTDIR)\" >> $@\n+\t$(ECHO) \"build.workspace.root=$(call FixPath, $(WORKSPACE_ROOT))\" >> $@\n+\t$(ECHO) \"build.output.root=$(call FixPath, $(OUTPUTDIR))\" >> $@\n@@ -55,1 +41,1 @@\n-prepare-test-image: $(FIXPATH_COPY) $(BUILD_INFO_PROPERTIES)\n+prepare-test-image: $(BUILD_INFO_PROPERTIES)\n","filename":"make\/TestImage.gmk","additions":3,"deletions":17,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -838,1 +838,1 @@\n-        # If we got no  devkit, we need to go hunting for the proper env\n+        # If we got no devkit, we need to go hunting for the proper env\n","filename":"make\/autoconf\/toolchain.m4","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -399,0 +399,2 @@\n+            # If we have FIXPATH enabled, strip all instances of it and prepend\n+            # a single one, to avoid double fixpath prefixing.\n@@ -482,1 +484,1 @@\n-# or UTIL_FIXUP_EXECUTABLE, but in some circumstances this have to be done\n+# or UTIL_FIXUP_EXECUTABLE, but in some circumstances this has to be done\n","filename":"make\/autoconf\/util_paths.m4","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-      # The servercmd specified how to launch the server. This will be executed\n+      # The servercmd specifies how to launch the server. This will be executed\n","filename":"make\/common\/JavaCompilation.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,4 @@\n-# Copy the microsoft runtime libraries on windows\n+# Copy the microsoft runtime libraries on windows, but only if we are not\n+# creating a buildjdk. If we are, the provided runtime librareis are made for\n+# the target platform, not the build platform (and we should not need to bundle\n+# anything with the minimalistic, locally-only buildjdk.)\n","filename":"make\/modules\/java.base\/Copy.gmk","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}