{"files":[{"patch":"@@ -664,1 +664,1 @@\n-            Object newLock = new Object();\n+            Object newLock = new String(className);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ClassLoader.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -60,0 +60,18 @@\n+    private String stringValue;\n+\n+    \/**\n+     * Constructs a {@code LockInfo} object.\n+     *\n+     * @param className the fully qualified name of the class of the lock object.\n+     * @param identityHashCode the {@link System#identityHashCode\n+     *                         identity hash code} of the lock object.\n+     * @param stringValue the string value of the lock object.\n+     *\/\n+    public LockInfo(String className, int identityHashCode, String stringValue) {\n+        if (className == null) {\n+            throw new NullPointerException(\"Parameter className cannot be null\");\n+        }\n+        this.className = className;\n+        this.identityHashCode = identityHashCode;\n+        this.stringValue = stringValue;\n+    }\n@@ -80,0 +98,1 @@\n+        this.stringValue = String.valueOf(lock);\n@@ -93,0 +112,9 @@\n+    \/**\n+     * Returns the string value of lock object.\n+     *\n+     * @return the string value of lock object.\n+     *\/\n+    public String getStringValue() {\n+        return stringValue;\n+    }\n+\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/LockInfo.java","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -79,0 +79,33 @@\n+    \/**\n+     * Construct a {@code MonitorInfo} object.\n+     *\n+     * @param className the fully qualified name of the class of the lock object.\n+     * @param identityHashCode the {@link System#identityHashCode\n+     *                         identity hash code} of the lock object.\n+     * @param stringValue the string value of the lock object.\n+     * @param stackDepth the depth in the stack trace where the object monitor\n+     *                   was locked.\n+     * @param stackFrame the stack frame that locked the object monitor.\n+     * @throws IllegalArgumentException if\n+     *    {@code stackDepth} &ge; 0 but {@code stackFrame} is {@code null},\n+     *    or {@code stackDepth} &lt; 0 but {@code stackFrame} is not\n+     *       {@code null}.\n+     *\/\n+    public MonitorInfo(String className,\n+                       int identityHashCode,\n+                       String stringValue,\n+                       int stackDepth,\n+                       StackTraceElement stackFrame) {\n+        super(className, identityHashCode, stringValue);\n+        if (stackDepth >= 0 && stackFrame == null) {\n+            throw new IllegalArgumentException(\"Parameter stackDepth is \" +\n+                stackDepth + \" but stackFrame is null\");\n+        }\n+        if (stackDepth < 0 && stackFrame != null) {\n+            throw new IllegalArgumentException(\"Parameter stackDepth is \" +\n+                stackDepth + \" but stackFrame is not null\");\n+        }\n+        this.stackDepth = stackDepth;\n+        this.stackFrame = stackFrame;\n+    }\n+\n@@ -152,0 +185,1 @@\n+            String stringValue = MonitorInfoCompositeData.getStringValue(cd);\n@@ -156,0 +190,1 @@\n+                                   stringValue,\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/MonitorInfo.java","additions":35,"deletions":0,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -175,0 +175,1 @@\n+                String stringValue = String.valueOf(lock);\n@@ -180,0 +181,1 @@\n+                                                    stringValue,\n","filename":"src\/java.management\/share\/classes\/java\/lang\/management\/ThreadInfo.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+        items.put(STRING_VALUE,       lock.getStringValue());\n@@ -78,0 +79,1 @@\n+    private static final String STRING_VALUE       = \"stringValue\";\n@@ -84,0 +86,1 @@\n+        STRING_VALUE,\n@@ -119,0 +122,4 @@\n+    public static String getStringValue(CompositeData cd) {\n+        return getString(cd, STRING_VALUE);\n+    }\n+\n","filename":"src\/java.management\/share\/classes\/sun\/management\/MonitorInfoCompositeData.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}