{"files":[{"patch":"@@ -64,1 +64,0 @@\n-    private static CredentialsCache cache;\n@@ -419,3 +418,2 @@\n-        if (cache == null) {\n-            cache = CredentialsCache.getInstance();\n-        }\n+        CredentialsCache cache = CredentialsCache.getInstance();\n+\n@@ -508,4 +506,0 @@\n-    public CredentialsCache getCache() {\n-        return cache;\n-    }\n-\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/Credentials.java","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8028780\n+ * @summary JDK KRB5 module throws OutOfMemoryError when CCache is corrupt\n+ * @modules java.security.jgss\/sun.security.krb5\n+ *          java.security.jgss\/sun.security.krb5.internal.ccache:+open\n+ * @library \/test\/lib\n+ *\/\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import jdk.test.lib.Asserts;\n+import jdk.test.lib.process.Proc;\n+import sun.security.krb5.Credentials;\n+\n+public class Refresh {\n+    public static void main(String[] args) throws Exception {\n+        if (args.length == 0) {\n+            Proc.create(\"Refresh\")\n+                    .args(\"test\")\n+                    .env(\"KRB5CCNAME\", \"tmpcc\")\n+                    .inheritIO()\n+                    .start()\n+                    .waitFor(0);\n+        } else {\n+            Path cache = Path.of(System.getenv(\"KRB5CCNAME\"));\n+            byte[] data = TimeInCCache.ccache.clone();\n+            Files.write(cache, data);\n+            check(\"dummy@MAXI.LOCAL\");\n+            data[0x2A] = data[0x49] = 'f';\n+            Files.write(cache, data);\n+            check(\"fummy@MAXI.LOCAL\");\n+        }\n+    }\n+\n+    static void check(String expected) throws Exception {\n+        var cred = Credentials.acquireTGTFromCache(null, null);\n+        var pn = cred == null ? null : cred.getClient();\n+        var name = pn == null ? null : pn.toString();\n+        Asserts.assertEQ(expected, name);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/ccache\/Refresh.java","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"}]}