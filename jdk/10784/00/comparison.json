{"files":[{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.EventQueue;\n+import java.awt.Frame;\n+import java.awt.Robot;\n+import java.awt.Toolkit;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 7184401\n+ * @summary Verify that events are not lost when EDT is interrupted.\n+ * @modules java.desktop\/sun.awt\n+ * @run main InterruptEDTTest\n+ *\/\n+\n+public class InterruptEDTTest {\n+\n+    private static Frame frame = null;\n+    private static volatile Thread edt = null;\n+    private static volatile Robot robot = null;\n+    private static volatile int xLocation;\n+    private static volatile int yLocation;\n+    private static volatile int width;\n+    private static volatile int height;\n+\n+    public static void main(String args[]) throws Exception {\n+        try {\n+            robot = new Robot();\n+            EventQueue.invokeAndWait(() -> {\n+                edt = Thread.currentThread();\n+                frame = new Frame(\"Frame\");\n+                frame.addMouseListener(new MouseAdapter() {\n+                    public void mouseClicked(MouseEvent me) {\n+                        System.out.println(\"Mouse clicked Event: \" + me);\n+                    }\n+                });\n+                frame.setBounds(350, 50, 400, 400);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            ((sun.awt.SunToolkit) (Toolkit.getDefaultToolkit())).realSync();\n+            EventQueue.invokeAndWait(() -> {\n+                xLocation = frame.getX();\n+                yLocation = frame.getY();\n+                width = frame.getWidth();\n+                height = frame.getHeight();\n+            });\n+            ((sun.awt.SunToolkit) (Toolkit.getDefaultToolkit())).realSync();\n+            EventQueue.invokeLater(() -> {\n+                robot.mouseMove(xLocation + width \/ 2, yLocation + height \/ 2);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+            });\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+\n+        edt.interrupt();\n+        ((sun.awt.SunToolkit) (Toolkit.getDefaultToolkit())).realSync();\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                xLocation = frame.getX();\n+                yLocation = frame.getY();\n+                width = frame.getWidth();\n+                height = frame.getHeight();\n+            });\n+            robot.mouseMove(xLocation + width \/ 3, yLocation + height \/ 3);\n+        } catch (Exception exx) {\n+            exx.printStackTrace();\n+        }\n+        System.out.println(\"Test passed.\");\n+        EventQueue.invokeAndWait(() -> disposeFrame());\n+    }\n+\n+    private static void disposeFrame() {\n+        if (frame != null) {\n+            frame.dispose();\n+            frame = null;\n+        }\n+    }\n+}\n+\n","filename":"test\/jdk\/java\/awt\/EventDispatchThread\/InterruptEDTTest.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"}]}