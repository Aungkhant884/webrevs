{"files":[{"patch":"@@ -131,45 +131,0 @@\n-    public static final RegisterCategory SIMD = new RegisterCategory(\"SIMD\");\n-\n-    \/\/ Simd registers\n-    public static final Register v0 = new Register(64, 0, \"v0\", SIMD);\n-    public static final Register v1 = new Register(65, 1, \"v1\", SIMD);\n-    public static final Register v2 = new Register(66, 2, \"v2\", SIMD);\n-    public static final Register v3 = new Register(67, 3, \"v3\", SIMD);\n-    public static final Register v4 = new Register(68, 4, \"v4\", SIMD);\n-    public static final Register v5 = new Register(69, 5, \"v5\", SIMD);\n-    public static final Register v6 = new Register(70, 6, \"v6\", SIMD);\n-    public static final Register v7 = new Register(71, 7, \"v7\", SIMD);\n-    public static final Register v8 = new Register(72, 8, \"v8\", SIMD);\n-    public static final Register v9 = new Register(73, 9, \"v9\", SIMD);\n-    public static final Register v10 = new Register(74, 10, \"v10\", SIMD);\n-    public static final Register v11 = new Register(75, 11, \"v11\", SIMD);\n-    public static final Register v12 = new Register(76, 12, \"v12\", SIMD);\n-    public static final Register v13 = new Register(77, 13, \"v13\", SIMD);\n-    public static final Register v14 = new Register(78, 14, \"v14\", SIMD);\n-    public static final Register v15 = new Register(79, 15, \"v15\", SIMD);\n-    public static final Register v16 = new Register(80, 16, \"v16\", SIMD);\n-    public static final Register v17 = new Register(81, 17, \"v17\", SIMD);\n-    public static final Register v18 = new Register(82, 18, \"v18\", SIMD);\n-    public static final Register v19 = new Register(83, 19, \"v19\", SIMD);\n-    public static final Register v20 = new Register(84, 20, \"v20\", SIMD);\n-    public static final Register v21 = new Register(85, 21, \"v21\", SIMD);\n-    public static final Register v22 = new Register(86, 22, \"v22\", SIMD);\n-    public static final Register v23 = new Register(87, 23, \"v23\", SIMD);\n-    public static final Register v24 = new Register(88, 24, \"v24\", SIMD);\n-    public static final Register v25 = new Register(89, 25, \"v25\", SIMD);\n-    public static final Register v26 = new Register(90, 26, \"v26\", SIMD);\n-    public static final Register v27 = new Register(91, 27, \"v27\", SIMD);\n-    public static final Register v28 = new Register(92, 28, \"v28\", SIMD);\n-    public static final Register v29 = new Register(93, 29, \"v29\", SIMD);\n-    public static final Register v30 = new Register(94, 30, \"v30\", SIMD);\n-    public static final Register v31 = new Register(95, 31, \"v31\", SIMD);\n-\n-    \/\/ @formatter:off\n-    public static final RegisterArray simdRegisters = new RegisterArray(\n-        v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,\n-        v8,  v9,  v10, v11, v12, v13, v14, v15,\n-        v16, v17, v18, v19, v20, v21, v22, v23,\n-        v24, v25, v26, v27, v28, v29, v30, v31\n-    );\n-    \/\/ @formatter:on\n-\n@@ -186,6 +141,1 @@\n-        f24, f25, f26, f27, f28, f29, f30, f31,\n-\n-        v0,  v1,  v2,  v3,  v4,  v5,  v6,  v7,\n-        v8,  v9,  v10, v11, v12, v13, v14, v15,\n-        v16, v17, v18, v19, v20, v21, v22, v23,\n-        v24, v25, v26, v27, v28, v29, v30, v31\n+        f24, f25, f26, f27, f28, f29, f30, f31\n@@ -273,2 +223,0 @@\n-        } else if (kind.isSIMD()) {\n-            return category.equals(SIMD);\n@@ -285,2 +233,0 @@\n-        } else if (category.equals(SIMD)) {\n-            return RISCV64Kind.V256_QWORD;\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.riscv64\/src\/jdk\/vm\/ci\/riscv64\/RISCV64.java","additions":1,"deletions":55,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -35,23 +35,1 @@\n-    DOUBLE(8),\n-\n-    \/\/ SIMD\n-    V32_BYTE(4, BYTE),\n-    V32_WORD(4, WORD),\n-    V64_BYTE(8, BYTE),\n-    V64_WORD(8, WORD),\n-    V64_DWORD(8, DWORD),\n-    V128_BYTE(16, BYTE),\n-    V128_WORD(16, WORD),\n-    V128_DWORD(16, DWORD),\n-    V128_QWORD(16, QWORD),\n-    V128_SINGLE(16, SINGLE),\n-    V128_DOUBLE(16, DOUBLE),\n-    V256_BYTE(32, BYTE),\n-    V256_WORD(32, WORD),\n-    V256_DWORD(32, DWORD),\n-    V256_QWORD(32, QWORD),\n-    V256_SINGLE(32, SINGLE),\n-    V256_DOUBLE(32, DOUBLE);\n-\n-    \/\/ The maximum value of VLEN (the length of the vector registers) is 65536 according to the ISA.\n-    \/\/ Thus those types are not enough to define all the possibilites.\n+    DOUBLE(8);\n@@ -120,19 +98,0 @@\n-    public boolean isSIMD() {\n-        switch (this) {\n-            case V32_BYTE:\n-            case V32_WORD:\n-            case V64_BYTE:\n-            case V64_WORD:\n-            case V64_DWORD:\n-            case V128_BYTE:\n-            case V128_WORD:\n-            case V128_DWORD:\n-            case V128_QWORD:\n-            case V128_SINGLE:\n-            case V128_DOUBLE:\n-                return true;\n-            default:\n-                return false;\n-        }\n-    }\n-\n@@ -154,12 +113,0 @@\n-            case V32_BYTE:\n-            case V32_WORD:\n-            case V64_BYTE:\n-            case V64_WORD:\n-            case V64_DWORD:\n-            case V128_BYTE:\n-            case V128_WORD:\n-            case V128_DWORD:\n-            case V128_QWORD:\n-            case V128_SINGLE:\n-            case V128_DOUBLE:\n-                return 'v';\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.riscv64\/src\/jdk\/vm\/ci\/riscv64\/RISCV64Kind.java","additions":1,"deletions":54,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -110,3 +110,0 @@\n-            String str = ((HotSpotCodeCacheProvider) codeCache).disassemble(installed);\n-                System.out.println(str);\n-\n@@ -114,2 +111,2 @@\n-                String str2 = ((HotSpotCodeCacheProvider) codeCache).disassemble(installed);\n-                System.out.println(str2);\n+                String str = ((HotSpotCodeCacheProvider) codeCache).disassemble(installed);\n+                System.out.println(str);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/CodeInstallationTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -140,1 +140,1 @@\n-        emitLui(Rd, (int) (upper >> 12));\n+        emitLui(Rd, ((int) (upper >> 12)) & 0xfffff);\n@@ -286,1 +286,1 @@\n-        emitLui(ret, (int) (upper >> 12));\n+        emitLui(ret, ((int) (upper >> 12)) & 0xfffff);\n","filename":"test\/hotspot\/jtreg\/compiler\/jvmci\/jdk.vm.ci.code.test\/src\/jdk\/vm\/ci\/code\/test\/riscv64\/RISCV64TestAssembler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}