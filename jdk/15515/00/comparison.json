{"files":[{"patch":"@@ -4715,1 +4715,1 @@\n-                                   TreeInfo.unguardedCase(testCase)) {\n+                                   (testCase.equals(c) || TreeInfo.unguardedCase(testCase))) {\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8314632\n+ * @summary Intra-case dominance check fails in the presence of a guard\n+ * @enablePreview\n+ * @compile\/fail\/ref=T8314632.out -XDrawDiagnostics T8314632.java\n+ *\/\n+public class T8314632 {\n+    void test1(Object obj) {\n+        switch (obj) {\n+            case Float _ -> {}\n+            case Integer _, CharSequence _, String _ when obj.hashCode() > 0 -> { } \/\/ error\n+            default -> throw new IllegalStateException(\"Unexpected value: \" + obj);\n+        }\n+    }\n+\n+    void test2(Object obj) {\n+        switch (obj) {\n+            case Float _ -> {}\n+            case Integer _, CharSequence _, String _ -> { }\n+            default -> throw new IllegalStateException(\"Unexpected value: \" + obj); \/\/ error\n+        }\n+    }\n+\n+    void test3(Object obj) {\n+        switch (obj) {\n+            case Float _, CharSequence _ when obj.hashCode() > 0 -> { } \/\/ OK\n+            case Integer _, String _     when obj.hashCode() > 0 -> { } \/\/ OK, since the previous case is guarded\n+            default -> throw new IllegalStateException(\"Unexpected value: \" + obj);\n+        }\n+    }\n+\n+    void test4(Object obj) {\n+        switch (obj) {\n+            case Float _, CharSequence _ -> { } \/\/ OK\n+            case Integer _, String _     when obj.hashCode() > 0 -> { } \/\/ error, since the previous case is unguarded\n+            default -> throw new IllegalStateException(\"Unexpected value: \" + obj);\n+        }\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314632.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"@@ -0,0 +1,6 @@\n+T8314632.java:34:45: compiler.err.pattern.dominated\n+T8314632.java:42:45: compiler.err.pattern.dominated\n+T8314632.java:58:29: compiler.err.pattern.dominated\n+- compiler.note.preview.filename: T8314632.java, DEFAULT\n+- compiler.note.preview.recompile\n+3 errors\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/javac\/patterns\/T8314632.out","additions":6,"deletions":0,"binary":false,"changes":6,"status":"added"}]}