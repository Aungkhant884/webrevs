{"files":[{"patch":"@@ -1992,0 +1992,1 @@\n+  vmi->assert_is_valid_subrange(addr, size);\n@@ -2005,1 +2006,0 @@\n-    vmi->assert_is_valid_subrange(addr, size);\n@@ -2013,4 +2013,5 @@\n-    \/\/ User may unmap partial regions but region has to be fully contained.\n-#ifdef ASSERT\n-    vmi->assert_is_valid_subrange(addr, size);\n-#endif\n+    \/\/ In mmap-mode:\n+    \/\/  - If the user wants to release the full range, we do that and remove the mapping.\n+    \/\/  - If the user wants to release part of the range, we release that part, but need\n+    \/\/    to adjust bookkeeping.\n+    assert(is_aligned(size, 4 * K), \"Sanity\");\n@@ -2018,1 +2019,18 @@\n-    remove_bookkeeping = true;\n+    if (addr == vmi->addr && size == vmi->size) {\n+      remove_bookkeeping = true;\n+    } else {\n+      if (addr == vmi->addr && size < vmi->size) {\n+        \/\/ Chopped from head\n+        vmi->addr += size;\n+        vmi->size -= size;\n+      } else if (addr + size == vmi->addr + vmi->size) {\n+        \/\/ Chopped from tail\n+        vmi->size -= size;\n+      } else {\n+        \/\/ releasing a mapping in the middle of the original mapping:\n+        \/\/ For now we forbid this, since this is an invalid scenario\n+        \/\/ (the bookkeeping is easy enough to fix if needed but there\n+        \/\/  is no use case for it; any occurrence is likely an error.\n+        ShouldNotReachHere();\n+      }\n+    }\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":24,"deletions":6,"binary":false,"changes":30,"status":"modified"}]}