{"files":[{"patch":"@@ -144,3 +144,5 @@\n-     * This method blocks indefinitely; it never returns or throws an exception (that is, it\n-     * does not complete either normally or abruptly). The argument serves as a status code;\n-     * by convention, a nonzero status code indicates abnormal termination.\n+     * If a security manager is present and its {@link SecurityManager#checkExit checkExit}\n+     * method disallows exiting with the specified status, throws {@link SecurityException}.\n+     * Otherwise, this method blocks indefinitely; it neither returns nor throws an exception\n+     * (that is, it does not complete either normally or abruptly). The argument serves as a\n+     * status code. By convention, a nonzero status code indicates abnormal termination.\n@@ -148,4 +150,3 @@\n-     * <p> Invocations of this method are serialized such that only one\n-     * invocation will actually proceed with the shutdown sequence and\n-     * terminate the VM with the given status code. All other invocations\n-     * simply block indefinitely.\n+     * <p> Successful invocations of this method are serialized such that only one invocation\n+     * will proceed with the shutdown sequence and terminate the VM with the given status code.\n+     * All other invocations will perform no action and block indefinitely.\n@@ -153,3 +154,3 @@\n-     * <p> Because this method always blocks indefinitely, if it is invoked from\n-     * a shutdown hook, it will prevent that shutdown hook from terminating.\n-     * Consequently, this will prevent the shutdown sequence from finishing.\n+     * <p> Because a successful invocation of this method blocks indefinitely, if it is invoked\n+     * from a shutdown hook, it will prevent that shutdown hook from terminating. Consequently,\n+     * this will prevent the shutdown sequence from finishing.\n@@ -283,4 +284,7 @@\n-     * Immediately <a href=\"#termination\">terminates<\/a> the Java Virtual Machine. Termination\n-     * is unconditional and immediate. This method does not initiate the\n-     * <a href=\"#shutdown\">shutdown sequence<\/a>, nor does it wait for the shutdown sequence\n-     * to finish if it is already in progress. This method never returns normally.\n+     * Immediately <a href=\"#termination\">terminates<\/a> the Java Virtual Machine.\n+     * If a security manager is present and its {@link SecurityManager#checkExit checkExit}\n+     * method disallows exiting with the specified status, throws {@link SecurityException}.\n+     * Otherwise, termination of the Java Virtual Machine is unconditional and immediate.\n+     * This method does not initiate the <a href=\"#shutdown\">shutdown sequence<\/a>, nor does\n+     * it wait for the shutdown sequence to finish if it is already in progress. An\n+     * invocation of this method never returns normally.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":18,"deletions":14,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1889,7 +1889,6 @@\n-     * Initiates the <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> of the\n-     * Java Virtual Machine. This method always blocks indefinitely. The argument\n-     * serves as a status code; by convention, a nonzero status code indicates\n-     * abnormal termination.\n-     * <p>\n-     * This method calls the {@code exit} method in class {@code Runtime}. This\n-     * method never returns normally.\n+     * Initiates the <a href=\"#shutdown\">shutdown sequence<\/a> of the Java Virtual Machine.\n+     * If a security manager is present and its {@link SecurityManager#checkExit checkExit}\n+     * method disallows exiting with the specified status, throws {@link SecurityException}.\n+     * Otherwise, this method blocks indefinitely; it neither returns nor throws an exception\n+     * (that is, it does not complete either normally or abruptly). The argument serves as a\n+     * status code. By convention, a nonzero status code indicates abnormal termination.\n@@ -1898,3 +1897,3 @@\n-     * <blockquote><pre>\n-     * Runtime.getRuntime().exit(n)\n-     * <\/pre><\/blockquote>\n+     * {@snippet :\n+     *     Runtime.getRuntime().exit(n)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"}]}