{"files":[{"patch":"@@ -143,4 +143,4 @@\n-     * Initiates the <a href=\"#shutdown\">shutdown sequence<\/a> of the Java Virtual Machine.\n-     * This method blocks indefinitely; it never returns or throws an exception (that is, it\n-     * does not complete either normally or abruptly). The argument serves as a status code;\n-     * by convention, a nonzero status code indicates abnormal termination.\n+     * Initiates the {@linkplain ##shutdown shutdown sequence} of the Java Virtual Machine.\n+     * Unless the security manager denies exiting, this method initiates the shutdown sequence\n+     * (if it is not already initiated) and then blocks indefinitely. This method neither returns\n+     * nor throws an exception; that is, it does not complete either normally or abruptly.\n@@ -148,4 +148,2 @@\n-     * <p> Invocations of this method are serialized such that only one\n-     * invocation will actually proceed with the shutdown sequence and\n-     * terminate the VM with the given status code. All other invocations\n-     * simply block indefinitely.\n+     * <p> The argument serves as a status code. By convention, a nonzero status code\n+     * indicates abnormal termination.\n@@ -153,3 +151,7 @@\n-     * <p> Because this method always blocks indefinitely, if it is invoked from\n-     * a shutdown hook, it will prevent that shutdown hook from terminating.\n-     * Consequently, this will prevent the shutdown sequence from finishing.\n+     * <p> Successful invocations of this method are serialized such that only one invocation\n+     * initiates the shutdown sequence and terminates the VM with the given status code.\n+     * All other invocations will perform no action and block indefinitely.\n+     *\n+     * <p> Because a successful invocation of this method blocks indefinitely, if it is invoked\n+     * from a shutdown hook, it will prevent that shutdown hook from terminating. Consequently,\n+     * this will prevent the shutdown sequence from finishing.\n@@ -193,1 +195,1 @@\n-     * are started at the beginning of the <a href=\"#shutdown\">shutdown sequence<\/a>.\n+     * are started at the beginning of the {@linkplain ##shutdown shutdown sequence}.\n@@ -283,4 +285,7 @@\n-     * Immediately <a href=\"#termination\">terminates<\/a> the Java Virtual Machine. Termination\n-     * is unconditional and immediate. This method does not initiate the\n-     * <a href=\"#shutdown\">shutdown sequence<\/a>, nor does it wait for the shutdown sequence\n-     * to finish if it is already in progress. This method never returns normally.\n+     * Immediately {@linkplain ##termination terminates} the Java Virtual Machine.\n+     * If a security manager is present and its {@link SecurityManager#checkExit checkExit}\n+     * method disallows exiting with the specified status, throws {@link SecurityException}.\n+     * Otherwise, termination of the Java Virtual Machine is unconditional and immediate.\n+     * This method does not initiate the {@linkplain ##shutdown shutdown sequence}, nor does\n+     * it wait for the shutdown sequence to finish if it is already in progress. An\n+     * invocation of this method never returns normally.\n@@ -291,1 +296,1 @@\n-     * data corruption. See the <a href=\"#termination\">termination<\/a> section above\n+     * data corruption. See the {@linkplain ##termination termination} section above\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Runtime.java","additions":22,"deletions":17,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -1889,4 +1889,4 @@\n-     * Initiates the <a href=\"Runtime.html#shutdown\">shutdown sequence<\/a> of the\n-     * Java Virtual Machine. This method always blocks indefinitely. The argument\n-     * serves as a status code; by convention, a nonzero status code indicates\n-     * abnormal termination.\n+     * Initiates the {@linkplain Runtime##shutdown shutdown sequence} of the Java Virtual Machine.\n+     * Unless the security manager denies exiting, this method initiates the shutdown sequence\n+     * (if it is not already initiated) and then blocks indefinitely. This method neither returns\n+     * nor throws an exception; that is, it does not complete either normally or abruptly.\n@@ -1894,2 +1894,2 @@\n-     * This method calls the {@code exit} method in class {@code Runtime}. This\n-     * method never returns normally.\n+     * The argument serves as a status code. By convention, a nonzero status code\n+     * indicates abnormal termination.\n@@ -1898,3 +1898,3 @@\n-     * <blockquote><pre>\n-     * Runtime.getRuntime().exit(n)\n-     * <\/pre><\/blockquote>\n+     * {@snippet :\n+     *     Runtime.getRuntime().exit(n)\n+     * }\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}