{"files":[{"patch":"@@ -126,5 +126,5 @@\n-        \/\/ FIXME: vectorize this\n-        for (int index : reorder()) {\n-            if (index < 0) {\n-                throw checkIndexFailed(index, length());\n-            }\n+        Vector<E> shufvec = this.toVector();\n+        VectorMask<E> vecmask = shufvec.compare(VectorOperators.LT, vspecies().zero());\n+        if (vecmask.anyTrue()) {\n+            byte[] reorder = reorder();\n+            throw checkIndexFailed(reorder[vecmask.firstTrue()], length());\n@@ -137,7 +137,6 @@\n-        \/\/ FIXME: vectorize this\n-        byte[] reorder = reorder();\n-        int length = reorder.length;\n-        for (int index : reorder) {\n-            if (index < 0) {\n-                return wrapAndRebuild(reorder);\n-            }\n+        Vector<E> shufvec = this.toVector();\n+        VectorMask<E> vecmask = shufvec.compare(VectorOperators.LT, vspecies().zero());\n+        if (vecmask.anyTrue()) {\n+            \/\/ FIXME: vectorize this\n+            byte[] reorder = reorder();\n+            return wrapAndRebuild(reorder);\n@@ -169,10 +168,2 @@\n-        \/\/ FIXME: vectorize this\n-        byte[] reorder = reorder();\n-        int length = reorder.length;\n-        boolean[] bits = new boolean[length];\n-        for (int i = 0; i < length; i++) {\n-            if (reorder[i] >= 0) {\n-                bits[i] = true;\n-            }\n-        }\n-        return vspecies().dummyVector().maskFromArray(bits);\n+        Vector<E> shufvec = this.toVector();\n+        return shufvec.compare(VectorOperators.GE, vspecies().zero());\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/AbstractShuffle.java","additions":13,"deletions":22,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2147,1 +2147,2 @@\n-        S ws = shuffletype.cast(shuffle.wrapIndexes());\n+        @SuppressWarnings(\"unchecked\")\n+        S ws = (S) shuffle.wrapIndexes();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ByteVector.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2060,1 +2060,2 @@\n-        S ws = shuffletype.cast(shuffle.wrapIndexes());\n+        @SuppressWarnings(\"unchecked\")\n+        S ws = (S) shuffle.wrapIndexes();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/DoubleVector.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2072,1 +2072,2 @@\n-        S ws = shuffletype.cast(shuffle.wrapIndexes());\n+        @SuppressWarnings(\"unchecked\")\n+        S ws = (S) shuffle.wrapIndexes();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/FloatVector.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2146,1 +2146,2 @@\n-        S ws = shuffletype.cast(shuffle.wrapIndexes());\n+        @SuppressWarnings(\"unchecked\")\n+        S ws = (S) shuffle.wrapIndexes();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/IntVector.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2017,1 +2017,2 @@\n-        S ws = shuffletype.cast(shuffle.wrapIndexes());\n+        @SuppressWarnings(\"unchecked\")\n+        S ws = (S) shuffle.wrapIndexes();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/LongVector.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2147,1 +2147,2 @@\n-        S ws = shuffletype.cast(shuffle.wrapIndexes());\n+        @SuppressWarnings(\"unchecked\")\n+        S ws = (S) shuffle.wrapIndexes();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/ShortVector.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -2416,1 +2416,2 @@\n-        S ws = shuffletype.cast(shuffle.wrapIndexes());\n+        @SuppressWarnings(\"unchecked\")\n+        S ws = (S) shuffle.wrapIndexes();\n","filename":"src\/jdk.incubator.vector\/share\/classes\/jdk\/incubator\/vector\/X-Vector.java.template","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}