{"files":[{"patch":"@@ -313,33 +313,0 @@\n-    \/**\n-     * Construct a log with given I\/O redirections.\n-     * @deprecated\n-     * This constructor is provided to support\n-     *      jdk.javadoc.internal.tool.Messager.Messager(com.sun.tools.javac.util.Context,\n-     *          java.lang.String, java.io.PrintWriter, java.io.PrintWriter)\n-     *\/\n-    @Deprecated\n-    protected Log(Context context, PrintWriter errWriter, PrintWriter warnWriter, PrintWriter noticeWriter) {\n-        this(context, initWriters(errWriter, warnWriter, noticeWriter));\n-    }\n-\n-    \/**\n-     * Initialize a writer map with different streams for different types of diagnostics.\n-     * @param errWriter a stream for writing error messages\n-     * @param warnWriter a stream for writing warning messages\n-     * @param noticeWriter a stream for writing notice messages\n-     * @return a map of writers\n-     * @deprecated This method exists to support a supported but now deprecated javadoc entry point.\n-     *\/\n-    @Deprecated\n-    private static Map<WriterKind, PrintWriter>  initWriters(PrintWriter errWriter, PrintWriter warnWriter, PrintWriter noticeWriter) {\n-        Map<WriterKind, PrintWriter> writers = new EnumMap<>(WriterKind.class);\n-        writers.put(WriterKind.ERROR, errWriter);\n-        writers.put(WriterKind.WARNING, warnWriter);\n-        writers.put(WriterKind.NOTICE, noticeWriter);\n-\n-        writers.put(WriterKind.STDOUT, noticeWriter);\n-        writers.put(WriterKind.STDERR, errWriter);\n-\n-        return writers;\n-    }\n-\n@@ -776,1 +743,0 @@\n-    @Deprecated\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/util\/Log.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"modified"}]}