{"files":[{"patch":"@@ -69,1 +69,1 @@\n-        TEST_TEMP_DIRECTORY = TestUtil.createTemporaryDirectory();\n+        TEST_TEMP_DIRECTORY = Files.createTempDirectory(\"tmp\");\n@@ -101,1 +101,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -119,1 +119,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -133,1 +133,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -177,1 +177,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -199,1 +199,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -240,1 +240,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -276,30 +276,0 @@\n-    \/**\n-     * Test if .toRealPath() works consistently when both the resolved symlink\n-     * and its target are in the same substituted drive.\n-     * https:\/\/bugs.openjdk.java.net\/browse\/JDK-8213216\n-     * Note: requires administrator privileges.\n-     *\/\n-    @Test\n-    public void testRealPath() throws IOException {\n-        if (!TestUtil.supportsLinks(TEST_TEMP_DIRECTORY)) {\n-            return;\n-        }\n-\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n-        substCreate(SUBST_DRIVE, tempDirectory);\n-\n-        Path substDir = Files.createDirectory(SUBST_DRIVE.resolve(\"directory\"));\n-        Path dir = tempDirectory.resolve(\"directory\");\n-\n-        Path substFile = Files.createFile(substDir.resolve(\"foo\"));\n-        Path substLink = substDir.resolve(\"link\");\n-\n-        Path file = dir.resolve(\"foo\");\n-        Path link = dir.resolve(\"link\");\n-\n-        Files.createSymbolicLink(substLink, substFile.toAbsolutePath());\n-\n-        Assert.assertEquals(file.toRealPath(), link.toRealPath());\n-        Assert.assertEquals(substFile.toRealPath(), substLink.toRealPath());\n-    }\n-\n@@ -316,1 +286,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -348,1 +318,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -365,1 +335,1 @@\n-        Path tempDirectory2 = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory2 = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n@@ -390,1 +360,1 @@\n-        Path tempDirectory = TestUtil.createTemporaryDirectory(TEST_TEMP_DIRECTORY);\n+        Path tempDirectory = Files.createTempDirectory(TEST_TEMP_DIRECTORY, \"tmp\");\n","filename":"test\/jdk\/java\/nio\/file\/Files\/SubstDrive.java","additions":11,"deletions":41,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -33,4 +33,0 @@\n-    static Path createTemporaryDirectory(Path where) throws IOException {\n-        return Files.createTempDirectory(where, \"name\");\n-    }\n-\n@@ -39,1 +35,1 @@\n-        return createTemporaryDirectory(dir);\n+        return Files.createTempDirectory(dir, \"name\");\n","filename":"test\/jdk\/java\/nio\/file\/TestUtil.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}