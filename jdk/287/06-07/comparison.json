{"files":[{"patch":"@@ -26,0 +26,1 @@\n+import java.util.Optional;\n@@ -31,1 +32,0 @@\n-import java.nio.file.*;\n@@ -33,0 +33,1 @@\n+import java.nio.file.*;\n@@ -35,2 +36,2 @@\n-import org.testng.annotations.BeforeTest;\n-import org.testng.annotations.AfterTest;\n+import org.testng.annotations.BeforeClass;\n+import org.testng.annotations.AfterClass;\n@@ -39,0 +40,1 @@\n+import org.testng.SkipException;\n@@ -52,1 +54,1 @@\n-    private static final Path SUBST_DRIVE = Path.of(\"X:\");\n+    private static Path SUBST_DRIVE;\n@@ -56,3 +58,5 @@\n-     * Create a temporary directory where all subsequently created temp\n-     * directories will be in. This directory and all of its contents will be\n-     * deleted when the test finishes.\n+     * Setup for the test:\n+     *      + Create a temporary directory where all subsequently created temp\n+     *        directories will be in. This directory and all of its contents will be\n+     *        deleted when the test finishes.\n+     *      + Find a drive that is available for use with subst.\n@@ -60,2 +64,2 @@\n-    @BeforeTest\n-    public void createRootTempDirectory() throws IOException {\n+    @BeforeClass\n+    public void setup() throws IOException {\n@@ -64,0 +68,8 @@\n+\n+        Optional<Path> substDrive = findAvailableDrive(TEST_TEMP_DIRECTORY);\n+        if (!substDrive.isPresent()) {\n+            throw new SkipException(\n+                \"Could not find any available drive to use with subst, skipping the tests\");\n+        }\n+        SUBST_DRIVE = substDrive.get();\n+        System.out.printf(\"Using drive %s\\n with subst\", SUBST_DRIVE);\n@@ -70,1 +82,1 @@\n-    @AfterTest\n+    @AfterClass\n@@ -447,0 +459,18 @@\n+\n+    \/**\n+     * subst can fail if the drive to be mapped already exists. The method returns\n+     * a drive that is available.\n+     *\/\n+    private Optional<Path> findAvailableDrive(Path tempDirectory) {\n+        for (char letter = 'Z'; letter >= 'A'; letter--) {\n+            try {\n+                Path p = Path.of(letter + \":\");\n+                substCreate(p, tempDirectory);\n+                substDelete(p);\n+                return Optional.of(p);\n+            } catch (Throwable t) {\n+                \/\/ fall through\n+            }\n+        }\n+        return Optional.empty();\n+    }\n","filename":"test\/jdk\/java\/nio\/file\/Files\/SubstDrive.java","additions":40,"deletions":10,"binary":false,"changes":50,"status":"modified"}]}