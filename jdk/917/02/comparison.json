{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,1 +57,1 @@\n- * This class contains onyl static methods. It is the place for all functions\n+ * This class contains only static methods. It is the place for all functions\n@@ -353,0 +353,6 @@\n+        CKF_MESSAGE_ENCRYPT,\n+        CKF_MESSAGE_DECRYPT,\n+        CKF_MESSAGE_SIGN,\n+        CKF_MESSAGE_VERIFY,\n+        CKF_MULTI_MESSAGE,\n+        CKF_FIND_OBJECTS,\n@@ -368,1 +374,1 @@\n-        CKF_EC_NAMEDCURVE,\n+        CKF_EC_OID,\n@@ -371,0 +377,1 @@\n+        CKF_EC_CURVENAME,\n@@ -374,0 +381,6 @@\n+        \"CKF_MESSAGE_ENCRYPT\",\n+        \"CKF_MESSAGE_DECRYPT\",\n+        \"CKF_MESSAGE_SIGN\",\n+        \"CKF_MESSAGE_VERIFY\",\n+        \"CKF_MULTI_MESSAGE\",\n+        \"CKF_FIND_OBJECTS\",\n@@ -389,1 +402,1 @@\n-        \"CKF_EC_NAMEDCURVE\",\n+        \"CKF_EC_OID\",\n@@ -392,0 +405,1 @@\n+        \"CKF_EC_CURVENAME\",\n@@ -627,0 +641,1 @@\n+    \/\/ The ordering here follows the PKCS11Constants class\n@@ -650,0 +665,4 @@\n+        addMech(CKM_DSA_SHA3_224,               \"CKM_DSA_SHA3_224\");\n+        addMech(CKM_DSA_SHA3_256,               \"CKM_DSA_SHA3_256\");\n+        addMech(CKM_DSA_SHA3_384,               \"CKM_DSA_SHA3_384\");\n+        addMech(CKM_DSA_SHA3_512,               \"CKM_DSA_SHA3_512\");\n@@ -667,0 +686,22 @@\n+        addMech(CKM_SHA512_224,                 \"CKM_SHA512_224\");\n+        addMech(CKM_SHA512_224_HMAC,            \"CKM_SHA512_224_HMAC\");\n+        addMech(CKM_SHA512_224_HMAC_GENERAL,    \"CKM_SHA512_224_HMAC_GENERAL\");\n+        addMech(CKM_SHA512_224_KEY_DERIVATION,  \"CKM_SHA512_224_KEY_DERIVATION\");\n+        addMech(CKM_SHA512_256,                 \"CKM_SHA512_256\");\n+        addMech(CKM_SHA512_256_HMAC,            \"CKM_SHA512_256_HMAC\");\n+        addMech(CKM_SHA512_256_HMAC_GENERAL,    \"CKM_SHA512_256_HMAC_GENERAL\");\n+        addMech(CKM_SHA512_256_KEY_DERIVATION,  \"CKM_SHA512_256_KEY_DERIVATION\");\n+        addMech(CKM_SHA512_T,                   \"CKM_SHA512_T\");\n+        addMech(CKM_SHA512_T_HMAC,              \"CKM_SHA512_T_HMAC\");\n+        addMech(CKM_SHA512_T_HMAC_GENERAL,      \"CKM_SHA512_T_HMAC_GENERAL\");\n+        addMech(CKM_SHA512_T_KEY_DERIVATION,    \"CKM_SHA512_T_KEY_DERIVATION\");\n+\n+        addMech(CKM_SHA3_256_RSA_PKCS,          \"CKM_SHA3_256_RSA_PKCS\");\n+        addMech(CKM_SHA3_384_RSA_PKCS,          \"CKM_SHA3_384_RSA_PKCS\");\n+        addMech(CKM_SHA3_512_RSA_PKCS,          \"CKM_SHA3_512_RSA_PKCS\");\n+        addMech(CKM_SHA3_256_RSA_PKCS_PSS,      \"CKM_SHA3_256_RSA_PKCS_PSS\");\n+        addMech(CKM_SHA3_384_RSA_PKCS_PSS,      \"CKM_SHA3_384_RSA_PKCS_PSS\");\n+        addMech(CKM_SHA3_512_RSA_PKCS_PSS,      \"CKM_SHA3_512_RSA_PKCS_PSS\");\n+        addMech(CKM_SHA3_224_RSA_PKCS,          \"CKM_SHA3_224_RSA_PKCS\");\n+        addMech(CKM_SHA3_224_RSA_PKCS_PSS,      \"CKM_SHA3_224_RSA_PKCS_PSS\");\n+\n@@ -718,3 +759,0 @@\n-        addMech(CKM_SHA224,                     \"CKM_SHA224\");\n-        addMech(CKM_SHA224_HMAC,                \"CKM_SHA224_HMAC\");\n-        addMech(CKM_SHA224_HMAC_GENERAL,        \"CKM_SHA224_HMAC_GENERAL\");\n@@ -724,0 +762,3 @@\n+        addMech(CKM_SHA224,                     \"CKM_SHA224\");\n+        addMech(CKM_SHA224_HMAC,                \"CKM_SHA224_HMAC\");\n+        addMech(CKM_SHA224_HMAC_GENERAL,        \"CKM_SHA224_HMAC_GENERAL\");\n@@ -730,12 +771,0 @@\n-        addMech(CKM_SHA512_224,                 \"CKM_SHA512_224\");\n-        addMech(CKM_SHA512_224_HMAC,            \"CKM_SHA512_224_HMAC\");\n-        addMech(CKM_SHA512_224_HMAC_GENERAL,    \"CKM_SHA512_224_HMAC_GENERAL\");\n-        addMech(CKM_SHA512_224_KEY_DERIVATION,  \"CKM_SHA512_224_KEY_DERIVATION\");\n-        addMech(CKM_SHA512_256,                 \"CKM_SHA512_256\");\n-        addMech(CKM_SHA512_256_HMAC,            \"CKM_SHA512_256_HMAC\");\n-        addMech(CKM_SHA512_256_HMAC_GENERAL,    \"CKM_SHA512_256_HMAC_GENERAL\");\n-        addMech(CKM_SHA512_256_KEY_DERIVATION,  \"CKM_SHA512_256_KEY_DERIVATION\");\n-        addMech(CKM_SHA512_T,                   \"CKM_SHA512_T\");\n-        addMech(CKM_SHA512_T_HMAC,              \"CKM_SHA512_T_HMAC\");\n-        addMech(CKM_SHA512_T_HMAC_GENERAL,      \"CKM_SHA512_T_HMAC_GENERAL\");\n-        addMech(CKM_SHA512_T_KEY_DERIVATION,    \"CKM_SHA512_T_KEY_DERIVATION\");\n@@ -750,0 +779,17 @@\n+        addMech(CKM_SHA3_256,                   \"CKM_SHA3_256\");\n+        addMech(CKM_SHA3_256_HMAC,              \"CKM_SHA3_256_HMAC\");\n+        addMech(CKM_SHA3_256_HMAC_GENERAL,      \"CKM_SHA3_256_HMAC_GENERAL\");\n+        addMech(CKM_SHA3_256_KEY_GEN,           \"CKM_SHA3_256_KEY_GEN\");\n+        addMech(CKM_SHA3_224,                   \"CKM_SHA3_224\");\n+        addMech(CKM_SHA3_224_HMAC,              \"CKM_SHA3_224_HMAC\");\n+        addMech(CKM_SHA3_224_HMAC_GENERAL,      \"CKM_SHA3_224_HMAC_GENERAL\");\n+        addMech(CKM_SHA3_224_KEY_GEN,           \"CKM_SHA3_224_KEY_GEN\");\n+        addMech(CKM_SHA3_384,                   \"CKM_SHA3_384\");\n+        addMech(CKM_SHA3_384_HMAC,              \"CKM_SHA3_384_HMAC\");\n+        addMech(CKM_SHA3_384_HMAC_GENERAL,      \"CKM_SHA3_384_HMAC_GENERAL\");\n+        addMech(CKM_SHA3_384_KEY_GEN,           \"CKM_SHA3_384_KEY_GEN\");\n+        addMech(CKM_SHA3_512,                   \"CKM_SHA3_512\");\n+        addMech(CKM_SHA3_512_HMAC,              \"CKM_SHA3_512_HMAC\");\n+        addMech(CKM_SHA3_512_HMAC_GENERAL,      \"CKM_SHA3_512_HMAC_GENERAL\");\n+        addMech(CKM_SHA3_512_KEY_GEN,           \"CKM_SHA3_512_KEY_GEN\");\n+\n@@ -801,1 +847,0 @@\n-        addMech(CKM_SHA224_KEY_DERIVATION,      \"CKM_SHA224_KEY_DERIVATION\");\n@@ -805,0 +850,8 @@\n+        addMech(CKM_SHA224_KEY_DERIVATION,      \"CKM_SHA224_KEY_DERIVATION\");\n+        addMech(CKM_SHA3_256_KEY_DERIVATION,    \"CKM_SHA3_256_KEY_DERIVATION\");\n+        addMech(CKM_SHA3_224_KEY_DERIVATION,    \"CKM_SHA3_224_KEY_DERIVATION\");\n+        addMech(CKM_SHA3_384_KEY_DERIVATION,    \"CKM_SHA3_384_KEY_DERIVATION\");\n+        addMech(CKM_SHA3_512_KEY_DERIVATION,    \"CKM_SHA3_512_KEY_DERIVATION\");\n+        addMech(CKM_SHAKE_128_KEY_DERIVATION,   \"CKM_SHAKE_128_KEY_DERIVATION\");\n+        addMech(CKM_SHAKE_256_KEY_DERIVATION,   \"CKM_SHAKE_256_KEY_DERIVATION\");\n+\n@@ -897,0 +950,3 @@\n+        addMech(CKM_EC_KEY_PAIR_GEN_W_EXTRA_BITS,\n+                                            \"CKM_EC_KEY_PAIR_GEN_W_EXTRA_BITS\");\n+\n@@ -903,0 +959,4 @@\n+        addMech(CKM_ECDSA_SHA3_224,             \"CKM_ECDSA_SHA3_224\");\n+        addMech(CKM_ECDSA_SHA3_256,             \"CKM_ECDSA_SHA3_256\");\n+        addMech(CKM_ECDSA_SHA3_384,             \"CKM_ECDSA_SHA3_384\");\n+        addMech(CKM_ECDSA_SHA3_512,             \"CKM_ECDSA_SHA3_512\");\n@@ -909,0 +969,4 @@\n+        addMech(CKM_EC_EDWARDS_KEY_PAIR_GEN,    \"CKM_EC_EDWARDS_KEY_PAIR_GEN\");\n+        addMech(CKM_EC_MONTGOMERY_KEY_PAIR_GEN,\n+                                            \"CKM_EC_MONTGOMERY_KEY_PAIR_GEN\");\n+        addMech(CKM_EDDSA,                      \"CKM_EDDSA\");\n@@ -917,0 +981,3 @@\n+        addMech(CKM_AES_XTS,                    \"CKM_AES_XTS\");\n+        addMech(CKM_AES_XTS_KEY_GEN,            \"CKM_AES_XTS_KEY_GEN\");\n+\n@@ -959,0 +1026,4 @@\n+        addMech(CKM_CHACHA20_KEY_GEN,           \"CKM_CHACHA20_KEY_GEN\");\n+        addMech(CKM_CHACHA20,                   \"CKM_CHACHA20\");\n+        addMech(CKM_POLY1305_KEY_GEN,           \"CKM_POLY1305_KEY_GEN\");\n+        addMech(CKM_POLY1305,                   \"CKM_POLY1305\");\n@@ -967,0 +1038,2 @@\n+        addMech(CKM_DSA_FIPS_G_GEN,             \"CKM_DSA_FIPS_G_GEN\");\n+\n@@ -974,1 +1047,1 @@\n-\n+        addMech(CKM_AES_KEY_WRAP_KWP,           \"CKM_AES_KEY_WRAP_KWP\");\n@@ -977,0 +1050,47 @@\n+        addMech(CKM_SHA_1_KEY_GEN,              \"CKM_SHA_1_KEY_GEN\");\n+        addMech(CKM_SHA224_KEY_GEN,             \"CKM_SHA224_KEY_GEN\");\n+        addMech(CKM_SHA256_KEY_GEN,             \"CKM_SHA256_KEY_GEN\");\n+        addMech(CKM_SHA384_KEY_GEN,             \"CKM_SHA384_KEY_GEN\");\n+        addMech(CKM_SHA512_KEY_GEN,             \"CKM_SHA512_KEY_GEN\");\n+        addMech(CKM_SHA512_224_KEY_GEN,         \"CKM_SHA512_224_KEY_GEN\");\n+        addMech(CKM_SHA512_256_KEY_GEN,         \"CKM_SHA512_256_KEY_GEN\");\n+        addMech(CKM_SHA512_T_KEY_GEN,           \"CKM_SHA512_T_KEY_GEN\");\n+        addMech(CKM_NULL,                       \"CKM_NULL\");\n+        addMech(CKM_BLAKE2B_160,                \"CKM_BLAKE2B_160\");\n+        addMech(CKM_BLAKE2B_160_HMAC,           \"CKM_BLAKE2B_160_HMAC\");\n+        addMech(CKM_BLAKE2B_160_HMAC_GENERAL,   \"CKM_BLAKE2B_160_HMAC_GENERAL\");\n+        addMech(CKM_BLAKE2B_160_KEY_DERIVE,     \"CKM_BLAKE2B_160_KEY_DERIVE\");\n+        addMech(CKM_BLAKE2B_160_KEY_GEN,        \"CKM_BLAKE2B_160_KEY_GEN\");\n+        addMech(CKM_BLAKE2B_256,                \"CKM_BLAKE2B_256\");\n+        addMech(CKM_BLAKE2B_256_HMAC,           \"CKM_BLAKE2B_256_HMAC\");\n+        addMech(CKM_BLAKE2B_256_HMAC_GENERAL,   \"CKM_BLAKE2B_256_HMAC_GENERAL\");\n+        addMech(CKM_BLAKE2B_256_KEY_DERIVE,     \"CKM_BLAKE2B_256_KEY_DERIVE\");\n+        addMech(CKM_BLAKE2B_256_KEY_GEN,        \"CKM_BLAKE2B_256_KEY_GEN\");\n+        addMech(CKM_BLAKE2B_384,                \"CKM_BLAKE2B_384\");\n+        addMech(CKM_BLAKE2B_384_HMAC,           \"CKM_BLAKE2B_384_HMAC\");\n+        addMech(CKM_BLAKE2B_384_HMAC_GENERAL,   \"CKM_BLAKE2B_384_HMAC_GENERAL\");\n+        addMech(CKM_BLAKE2B_384_KEY_DERIVE,     \"CKM_BLAKE2B_384_KEY_DERIVE\");\n+        addMech(CKM_BLAKE2B_384_KEY_GEN,        \"CKM_BLAKE2B_384_KEY_GEN\");\n+        addMech(CKM_BLAKE2B_512,                \"CKM_BLAKE2B_512\");\n+        addMech(CKM_BLAKE2B_512_HMAC,           \"CKM_BLAKE2B_512_HMAC\");\n+        addMech(CKM_BLAKE2B_512_HMAC_GENERAL,   \"CKM_BLAKE2B_512_HMAC_GENERAL\");\n+        addMech(CKM_BLAKE2B_512_KEY_DERIVE,     \"CKM_BLAKE2B_512_KEY_DERIVE\");\n+        addMech(CKM_BLAKE2B_512_KEY_GEN,        \"CKM_BLAKE2B_512_KEY_GEN\");\n+        addMech(CKM_SALSA20,                    \"CKM_SALSA20\");\n+        addMech(CKM_CHACHA20_POLY1305,          \"CKM_CHACHA20_POLY1305\");\n+        addMech(CKM_SALSA20_POLY1305,           \"CKM_SALSA20_POLY1305\");\n+        addMech(CKM_X3DH_INITIALIZE,            \"CKM_X3DH_INITIALIZE\");\n+        addMech(CKM_X3DH_RESPOND,               \"CKM_X3DH_RESPOND\");\n+        addMech(CKM_X2RATCHET_INITIALIZE,       \"CKM_X2RATCHET_INITIALIZE\");\n+        addMech(CKM_X2RATCHET_RESPOND,          \"CKM_X2RATCHET_RESPOND\");\n+        addMech(CKM_X2RATCHET_ENCRYPT,          \"CKM_X2RATCHET_ENCRYPT\");\n+        addMech(CKM_X2RATCHET_DECRYPT,          \"CKM_X2RATCHET_DECRYPT\");\n+        addMech(CKM_XEDDSA,                     \"CKM_XEDDSA\");\n+        addMech(CKM_HKDF_DERIVE,                \"CKM_HKDF_DERIVE\");\n+        addMech(CKM_HKDF_DATA,                  \"CKM_HKDF_DATA\");\n+        addMech(CKM_HKDF_KEY_GEN,               \"CKM_HKDF_KEY_GEN\");\n+        addMech(CKM_SALSA20_KEY_GEN,            \"CKM_SALSA20_KEY_GEN\");\n+        addMech(CKM_SP800_108_COUNTER_KDF,      \"CKM_SP800_108_COUNTER_KDF\");\n+        addMech(CKM_SP800_108_FEEDBACK_KDF,     \"CKM_SP800_108_FEEDBACK_KDF\");\n+        addMech(CKM_SP800_108_DOUBLE_PIPELINE_KDF,\n+                                         \"CKM_SP800_108_DOUBLE_PIPELINE_KDF\");\n@@ -992,0 +1112,4 @@\n+        addHashMech(CKM_SHA3_224,               \"SHA3-224\");\n+        addHashMech(CKM_SHA3_256,               \"SHA3-256\");\n+        addHashMech(CKM_SHA3_384,               \"SHA3-384\");\n+        addHashMech(CKM_SHA3_512,               \"SHA3-512\");\n@@ -1034,0 +1158,21 @@\n+        addKeyType(CKK_CHACHA20,                \"CKK_CHACHA20\");\n+        addKeyType(CKK_POLY1305,                \"CKK_POLY1305\");\n+        addKeyType(CKK_AES_XTS,                 \"CKK_AES_XTS\");\n+\n+        addKeyType(CKK_SHA3_224_HMAC,           \"CKK_SHA3_224_HMAC\");\n+        addKeyType(CKK_SHA3_256_HMAC,           \"CKK_SHA3_256_HMAC\");\n+        addKeyType(CKK_SHA3_384_HMAC,           \"CKK_SHA3_384_HMAC\");\n+        addKeyType(CKK_SHA3_512_HMAC,           \"CKK_SHA3_512_HMAC\");\n+        addKeyType(CKK_BLAKE2B_160_HMAC,        \"CKK_BLAKE2B_160_HMAC\");\n+        addKeyType(CKK_BLAKE2B_256_HMAC,        \"CKK_BLAKE2B_256_HMAC\");\n+        addKeyType(CKK_BLAKE2B_384_HMAC,        \"CKK_BLAKE2B_384_HMAC\");\n+        addKeyType(CKK_BLAKE2B_512_HMAC,        \"CKK_BLAKE2B_512_HMAC\");\n+        addKeyType(CKK_SALSA20,                 \"CKK_SALSA20\");\n+        addKeyType(CKK_X2RATCHET,               \"CKK_X2RATCHET\");\n+        addKeyType(CKK_EC_EDWARDS,              \"CKK_EC_EDWARDS\");\n+        addKeyType(CKK_EC_MONTGOMERY,           \"CKK_EC_MONTGOMERY\");\n+        addKeyType(CKK_HKDF,                    \"CKK_HKDF\");\n+\n+        addKeyType(CKK_SHA512_224_HMAC,         \"CKK_SHA512_224_HMAC\");\n+        addKeyType(CKK_SHA512_256_HMAC,         \"CKK_SHA512_256_HMAC\");\n+        addKeyType(CKK_SHA512_T_HMAC,           \"CKK_SHA512_T_HMAC\");\n@@ -1043,0 +1188,1 @@\n+        addAttribute(CKA_UNIQUE_ID,             \"CKA_UNIQUE_ID\");\n@@ -1157,0 +1303,18 @@\n+        addAttribute(CKA_PROFILE_ID,            \"CKA_PROFILE_ID\");\n+        addAttribute(CKA_X2RATCHET_BAG,         \"CKA_X2RATCHET_BAG\");\n+        addAttribute(CKA_X2RATCHET_BAGSIZE,     \"CKA_X2RATCHET_BAGSIZE\");\n+        addAttribute(CKA_X2RATCHET_BOBS1STMSG,  \"CKA_X2RATCHET_BOBS1STMSG\");\n+        addAttribute(CKA_X2RATCHET_CKR,         \"CKA_X2RATCHET_CKR\");\n+        addAttribute(CKA_X2RATCHET_CKS,         \"CKA_X2RATCHET_CKS\");\n+        addAttribute(CKA_X2RATCHET_DHP,         \"CKA_X2RATCHET_DHP\");\n+        addAttribute(CKA_X2RATCHET_DHR,         \"CKA_X2RATCHET_DHR\");\n+        addAttribute(CKA_X2RATCHET_DHS,         \"CKA_X2RATCHET_DHS\");\n+        addAttribute(CKA_X2RATCHET_HKR,         \"CKA_X2RATCHET_HKR\");\n+        addAttribute(CKA_X2RATCHET_HKS,         \"CKA_X2RATCHET_HKS\");\n+        addAttribute(CKA_X2RATCHET_ISALICE,     \"CKA_X2RATCHET_ISALICE\");\n+        addAttribute(CKA_X2RATCHET_NHKR,        \"CKA_X2RATCHET_NHKR\");\n+        addAttribute(CKA_X2RATCHET_NHKS,        \"CKA_X2RATCHET_NHKS\");\n+        addAttribute(CKA_X2RATCHET_NR,          \"CKA_X2RATCHET_NR\");\n+        addAttribute(CKA_X2RATCHET_NS,          \"CKA_X2RATCHET_NS\");\n+        addAttribute(CKA_X2RATCHET_PNS,         \"CKA_X2RATCHET_PNS\");\n+        addAttribute(CKA_X2RATCHET_RK,          \"CKA_X2RATCHET_RK\");\n@@ -1175,0 +1339,3 @@\n+        addObjectClass(CKO_MECHANISM,           \"CKO_MECHANISM\");\n+        addObjectClass(CKO_OTP_KEY,             \"CKO_OTP_KEY\");\n+        addObjectClass(CKO_PROFILE,             \"CKO_PROFILE\");\n@@ -1184,0 +1351,4 @@\n+        addMGF(CKG_MGF1_SHA3_224,               \"CKG_MGF1_SHA3_224\");\n+        addMGF(CKG_MGF1_SHA3_256,               \"CKG_MGF1_SHA3_256\");\n+        addMGF(CKG_MGF1_SHA3_384,               \"CKG_MGF1_SHA3_384\");\n+        addMGF(CKG_MGF1_SHA3_512,               \"CKG_MGF1_SHA3_512\");\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/Functions.java","additions":192,"deletions":21,"binary":false,"changes":213,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n- * This interface holds constants of the PKCS#11 v2.11 standard.\n+ * This interface holds constants of the PKCS#11 v3.00 standard.\n@@ -65,0 +65,5 @@\n+ *   CK_BYTE_PTR ................................... byte[]\n+ *   CK_CHAR_PTR ................................... char[]\n+ *   CK_UTF8CHAR_PTR ............................... char[]\n+ *   CK_ULONG_PTR .................................. long[]\n+ *   CK_VOID_PTR ................................... Object[]\n@@ -69,1 +74,0 @@\n- *   CK_SESSION_HANDLE ............................. long\n@@ -77,4 +81,0 @@\n- *   CK_VOID_PTR ................................... Object[]\n- *   CK_BYTE_PTR ................................... byte[]\n- *   CK_CHAR_PTR ................................... char[]\n- *   CK_UTF8CHAR_PTR ............................... char[]\n@@ -83,1 +83,1 @@\n- *   CK_RSA_PKCS_OAEP_MGF_TYPE ..................... long\n+ *   CK_RSA_PKCS_MGF_TYPE .......................... long\n@@ -85,0 +85,2 @@\n+ *   CK_EC_KDF_TYPE ................................ long\n+ *   CK_X9_42_DH_KDF_TYPE .......................... long\n@@ -90,2 +92,10 @@\n- *   CK_EC_KDF_TYPE ................................ long\n- *   CK_X9_42_DH_KDF_TYPE .......................... long\n+ *   CK_OTP_PARAM_TYPE \/ CK_PARAM_TYPE ............. long\n+ *   CK_GENERATOR_FUNCTION ......................... long\n+ *   CK_JAVA_MIDP_SECURITY_DOMAIN .................. long\n+ *   CK_CERTIFICATE_CATEGORY ....................... long\n+ *   CK_PROFILE_ID ................................. long\n+ *   CK_PRF_DATA_TYPE .............................. long\n+ *   CK_SP800_108_DKM_LENGTH_METHOD ................ long\n+ *   CK_X3DH_KDF_TYPE .............................. long\n+ *   CK_X2RATCHET_KDF_TYPE ......................... long\n+ *   CK_XEDDSA_HASH_TYPE ........................... long\n@@ -204,0 +214,4 @@\n+    public static final long  CKO_MECHANISM         = 0x00000007L;\n+    public static final long  CKO_OTP_KEY           = 0x00000008L;\n+    public static final long  CKO_PROFILE           = 0x00000009L;\n+\n@@ -209,0 +223,8 @@\n+    \/* Uncomment when actually used\n+    \/\/ Profile ID's\n+    public static final long  CKP_INVALID_ID                = 0x00000000L;\n+    public static final long  CKP_BASELINE_PROVIDER         = 0x00000001L;\n+    public static final long  CKP_EXTENDED_PROVIDER         = 0x00000002L;\n+    public static final long  CKP_AUTHENTICATION_TOKEN      = 0x00000003L;\n+    public static final long  CKP_PUBLIC_CERTIFICATES_TOKEN = 0x00000004L;\n+    public static final long  CKP_VENDOR_DEFINED            = 0x80000000L;\n@@ -210,1 +232,1 @@\n-    \/* The following hardware feature types are defined *\/\n+    \/\/ The following hardware feature types are defined\n@@ -213,0 +235,1 @@\n+    public static final long  CKH_USER_INTERFACE    = 0x00000003L;\n@@ -214,0 +237,1 @@\n+    *\/\n@@ -262,1 +286,23 @@\n-;\n+    public static final long  CKK_CHACHA20             = 0x00000033L;\n+    public static final long  CKK_POLY1305             = 0x00000034L;\n+    public static final long  CKK_AES_XTS              = 0x00000035L;\n+\n+    public static final long  CKK_SHA3_224_HMAC        = 0x00000036L;\n+    public static final long  CKK_SHA3_256_HMAC        = 0x00000037L;\n+    public static final long  CKK_SHA3_384_HMAC        = 0x00000038L;\n+    public static final long  CKK_SHA3_512_HMAC        = 0x00000039L;\n+\n+    public static final long  CKK_BLAKE2B_160_HMAC     = 0x0000003aL;\n+    public static final long  CKK_BLAKE2B_256_HMAC     = 0x0000003bL;\n+    public static final long  CKK_BLAKE2B_384_HMAC     = 0x0000003cL;\n+    public static final long  CKK_BLAKE2B_512_HMAC     = 0x0000003dL;\n+    public static final long  CKK_SALSA20              = 0x0000003eL;\n+    public static final long  CKK_X2RATCHET            = 0x0000003fL;\n+    public static final long  CKK_EC_EDWARDS           = 0x00000040L;\n+    public static final long  CKK_EC_MONTGOMERY        = 0x00000041L;\n+    public static final long  CKK_HKDF                 = 0x00000042L;\n+\n+    public static final long  CKK_SHA512_224_HMAC      = 0x00000043L;\n+    public static final long  CKK_SHA512_256_HMAC      = 0x00000044L;\n+    public static final long  CKK_SHA512_T_HMAC        = 0x00000045L;\n+\n@@ -274,0 +320,12 @@\n+    \/* Uncomment when actually used\n+    public static final long  CK_CERTIFICATE_CATEGORY_UNSPECIFIED   = 0L;\n+    public static final long  CK_CERTIFICATE_CATEGORY_TOKEN_USER    = 1L;\n+    public static final long  CK_CERTIFICATE_CATEGORY_AUTHORITY     = 2L;\n+    public static final long  CK_CERTIFICATE_CATEGORY_OTHER_ENTITY  = 3L;\n+\n+    public static final long  CK_SECURITY_DOMAIN_UNSPECIFIED   = 0L;\n+    public static final long  CK_SECURITY_DOMAIN_MANUFACTURER  = 1L;\n+    public static final long  CK_SECURITY_DOMAIN_OPERATOR      = 2L;\n+    public static final long  CK_SECURITY_DOMAIN_THIRD_PARTY   = 3L;\n+    *\/\n+\n@@ -277,0 +335,1 @@\n+    public static final long  CKC_WTLS                 = 0x00000002L;\n@@ -284,0 +343,11 @@\n+    \/* Uncomment when actually used\n+    public static final long  CK_OTP_FORMAT_DECIMAL         = 0L;\n+    public static final long  CK_OTP_FORMAT_HEXADECIMAL     = 1L;\n+    public static final long  CK_OTP_FORMAT_ALPHANUMERIC    = 2L;\n+    public static final long  CK_OTP_FORMAT_BINARY          = 3L;\n+\n+    public static final long  CK_OTP_PARAM_IGNORED          = 0L;\n+    public static final long  CK_OTP_PARAM_OPTIONAL         = 1L;\n+    public static final long  CK_OTP_PARAM_MANDATORY        = 2L;\n+    *\/\n+\n@@ -289,0 +359,1 @@\n+    public static final long  CKA_UNIQUE_ID          = 0x00000004L;\n@@ -346,1 +417,0 @@\n-\n@@ -351,1 +421,0 @@\n-\n@@ -409,0 +478,19 @@\n+    public static final long  CKA_PROFILE_ID                   = 0x00000601L;\n+    public static final long  CKA_X2RATCHET_BAG                = 0x00000602L;\n+    public static final long  CKA_X2RATCHET_BAGSIZE            = 0x00000603L;\n+    public static final long  CKA_X2RATCHET_BOBS1STMSG         = 0x00000604L;\n+    public static final long  CKA_X2RATCHET_CKR                = 0x00000605L;\n+    public static final long  CKA_X2RATCHET_CKS                = 0x00000606L;\n+    public static final long  CKA_X2RATCHET_DHP                = 0x00000607L;\n+    public static final long  CKA_X2RATCHET_DHR                = 0x00000608L;\n+    public static final long  CKA_X2RATCHET_DHS                = 0x00000609L;\n+    public static final long  CKA_X2RATCHET_HKR                = 0x0000060aL;\n+    public static final long  CKA_X2RATCHET_HKS                = 0x0000060bL;\n+    public static final long  CKA_X2RATCHET_ISALICE            = 0x0000060cL;\n+    public static final long  CKA_X2RATCHET_NHKR               = 0x0000060dL;\n+    public static final long  CKA_X2RATCHET_NHKS               = 0x0000060eL;\n+    public static final long  CKA_X2RATCHET_NR                 = 0x0000060fL;\n+    public static final long  CKA_X2RATCHET_NS                 = 0x00000610L;\n+    public static final long  CKA_X2RATCHET_PNS                = 0x00000611L;\n+    public static final long  CKA_X2RATCHET_RK                 = 0x00000612L;\n+\n@@ -438,0 +526,4 @@\n+    public static final long  CKM_DSA_SHA3_224               = 0x00000018L;\n+    public static final long  CKM_DSA_SHA3_256               = 0x00000019L;\n+    public static final long  CKM_DSA_SHA3_384               = 0x0000001AL;\n+    public static final long  CKM_DSA_SHA3_512               = 0x0000001BL;\n@@ -471,0 +563,9 @@\n+    public static final long  CKM_SHA3_256_RSA_PKCS          = 0x00000060L;\n+    public static final long  CKM_SHA3_384_RSA_PKCS          = 0x00000061L;\n+    public static final long  CKM_SHA3_512_RSA_PKCS          = 0x00000062L;\n+    public static final long  CKM_SHA3_256_RSA_PKCS_PSS      = 0x00000063L;\n+    public static final long  CKM_SHA3_384_RSA_PKCS_PSS      = 0x00000064L;\n+    public static final long  CKM_SHA3_512_RSA_PKCS_PSS      = 0x00000065L;\n+    public static final long  CKM_SHA3_224_RSA_PKCS          = 0x00000066L;\n+    public static final long  CKM_SHA3_224_RSA_PKCS_PSS      = 0x00000067L;\n+\n@@ -554,0 +655,17 @@\n+    public static final long  CKM_SHA3_256                   = 0x000002B0L;\n+    public static final long  CKM_SHA3_256_HMAC              = 0x000002B1L;\n+    public static final long  CKM_SHA3_256_HMAC_GENERAL      = 0x000002B2L;\n+    public static final long  CKM_SHA3_256_KEY_GEN           = 0x000002B3L;\n+    public static final long  CKM_SHA3_224                   = 0x000002B5L;\n+    public static final long  CKM_SHA3_224_HMAC              = 0x000002B6L;\n+    public static final long  CKM_SHA3_224_HMAC_GENERAL      = 0x000002B7L;\n+    public static final long  CKM_SHA3_224_KEY_GEN           = 0x000002B8L;\n+    public static final long  CKM_SHA3_384                   = 0x000002C0L;\n+    public static final long  CKM_SHA3_384_HMAC              = 0x000002C1L;\n+    public static final long  CKM_SHA3_384_HMAC_GENERAL      = 0x000002C2L;\n+    public static final long  CKM_SHA3_384_KEY_GEN           = 0x000002C3L;\n+    public static final long  CKM_SHA3_512                   = 0x000002D0L;\n+    public static final long  CKM_SHA3_512_HMAC              = 0x000002D1L;\n+    public static final long  CKM_SHA3_512_HMAC_GENERAL      = 0x000002D2L;\n+    public static final long  CKM_SHA3_512_KEY_GEN           = 0x000002D3L;\n+\n@@ -614,1 +732,0 @@\n-\n@@ -619,0 +736,6 @@\n+    public static final long  CKM_SHA3_256_KEY_DERIVATION    = 0x00000397L;\n+    public static final long  CKM_SHA3_224_KEY_DERIVATION    = 0x00000398L;\n+    public static final long  CKM_SHA3_384_KEY_DERIVATION    = 0x00000399L;\n+    public static final long  CKM_SHA3_512_KEY_DERIVATION    = 0x0000039AL;\n+    public static final long  CKM_SHAKE_128_KEY_DERIVATION   = 0x0000039BL;\n+    public static final long  CKM_SHAKE_256_KEY_DERIVATION   = 0x0000039CL;\n@@ -624,1 +747,2 @@\n-    public static final long  CKM_PBE_MD5_CAST5_CBC          = 0x000003A4L;\n+    public static final long  CKM_PBE_MD5_CAST5_CBC \/*deprecated*\/\n+                                                             = 0x000003A4L;\n@@ -626,1 +750,2 @@\n-    public static final long  CKM_PBE_SHA1_CAST5_CBC         = 0x000003A5L;\n+    public static final long  CKM_PBE_SHA1_CAST5_CBC \/*deprecated*\/\n+                                                             = 0x000003A5L;\n@@ -646,2 +771,4 @@\n-    public static final long  CKM_TLS10_MAC_SERVER           = 0x000003D6L;\n-    public static final long  CKM_TLS10_MAC_CLIENT           = 0x000003D7L;\n+    public static final long  CKM_TLS10_MAC_SERVER \/*removed in 3.00*\/\n+                                                             = 0x000003D6L;\n+    public static final long  CKM_TLS10_MAC_CLIENT \/*removed in 3.00*\/\n+                                                             = 0x000003D7L;\n@@ -650,1 +777,0 @@\n-\n@@ -720,0 +846,1 @@\n+    public static final long  CKM_EC_KEY_PAIR_GEN_W_EXTRA_BITS = 0x0000140BL;\n@@ -727,0 +854,4 @@\n+    public static final long  CKM_ECDSA_SHA3_224             = 0x00001047L;\n+    public static final long  CKM_ECDSA_SHA3_256             = 0x00001048L;\n+    public static final long  CKM_ECDSA_SHA3_384             = 0x00001049L;\n+    public static final long  CKM_ECDSA_SHA3_512             = 0x0000104AL;\n@@ -735,0 +866,4 @@\n+    public static final long  CKM_EC_EDWARDS_KEY_PAIR_GEN    = 0x00001055L;\n+    public static final long  CKM_EC_MONTGOMERY_KEY_PAIR_GEN = 0x00001056L;\n+    public static final long  CKM_EDDSA                      = 0x00001057L;\n+\n@@ -743,0 +878,2 @@\n+    public static final long  CKM_AES_XTS                    = 0x00001071L;\n+    public static final long  CKM_AES_XTS_KEY_GEN            = 0x00001072L;\n@@ -787,0 +924,5 @@\n+    public static final long  CKM_CHACHA20_KEY_GEN           = 0x00001225L;\n+    public static final long  CKM_CHACHA20                   = 0x00001226L;\n+    public static final long  CKM_POLY1305_KEY_GEN           = 0x00001227L;\n+    public static final long  CKM_POLY1305                   = 0x00001228L;\n+\n@@ -792,0 +934,1 @@\n+    public static final long  CKM_DSA_FIPS_G_GEN             = 0x00002005L;\n@@ -798,2 +941,5 @@\n-    public static final long  CKM_AES_KEY_WRAP               = 0x00002109L;\n-    public static final long  CKM_AES_KEY_WRAP_PAD           = 0x0000210AL;\n+    public static final long  CKM_AES_KEY_WRAP \/* WAS: 0x00001090 *\/\n+                                                             = 0x00002109L;\n+    public static final long  CKM_AES_KEY_WRAP_PAD \/* WAS: 0x00001091 *\/\n+                                                             = 0x0000210AL;\n+    public static final long  CKM_AES_KEY_WRAP_KWP           = 0x0000210BL;\n@@ -804,0 +950,48 @@\n+    public static final long  CKM_SHA_1_KEY_GEN              = 0x00004003L;\n+    public static final long  CKM_SHA224_KEY_GEN             = 0x00004004L;\n+    public static final long  CKM_SHA256_KEY_GEN             = 0x00004005L;\n+    public static final long  CKM_SHA384_KEY_GEN             = 0x00004006L;\n+    public static final long  CKM_SHA512_KEY_GEN             = 0x00004007L;\n+    public static final long  CKM_SHA512_224_KEY_GEN         = 0x00004008L;\n+    public static final long  CKM_SHA512_256_KEY_GEN         = 0x00004009L;\n+    public static final long  CKM_SHA512_T_KEY_GEN           = 0x0000400aL;\n+    public static final long  CKM_NULL                       = 0x0000400bL;\n+    public static final long  CKM_BLAKE2B_160                = 0x0000400cL;\n+    public static final long  CKM_BLAKE2B_160_HMAC           = 0x0000400dL;\n+    public static final long  CKM_BLAKE2B_160_HMAC_GENERAL   = 0x0000400eL;\n+    public static final long  CKM_BLAKE2B_160_KEY_DERIVE     = 0x0000400fL;\n+    public static final long  CKM_BLAKE2B_160_KEY_GEN        = 0x00004010L;\n+    public static final long  CKM_BLAKE2B_256                = 0x00004011L;\n+    public static final long  CKM_BLAKE2B_256_HMAC           = 0x00004012L;\n+    public static final long  CKM_BLAKE2B_256_HMAC_GENERAL   = 0x00004013L;\n+    public static final long  CKM_BLAKE2B_256_KEY_DERIVE     = 0x00004014L;\n+    public static final long  CKM_BLAKE2B_256_KEY_GEN        = 0x00004015L;\n+    public static final long  CKM_BLAKE2B_384                = 0x00004016L;\n+    public static final long  CKM_BLAKE2B_384_HMAC           = 0x00004017L;\n+    public static final long  CKM_BLAKE2B_384_HMAC_GENERAL   = 0x00004018L;\n+    public static final long  CKM_BLAKE2B_384_KEY_DERIVE     = 0x00004019L;\n+    public static final long  CKM_BLAKE2B_384_KEY_GEN        = 0x0000401aL;\n+    public static final long  CKM_BLAKE2B_512                = 0x0000401bL;\n+    public static final long  CKM_BLAKE2B_512_HMAC           = 0x0000401cL;\n+    public static final long  CKM_BLAKE2B_512_HMAC_GENERAL   = 0x0000401dL;\n+    public static final long  CKM_BLAKE2B_512_KEY_DERIVE     = 0x0000401eL;\n+    public static final long  CKM_BLAKE2B_512_KEY_GEN        = 0x0000401fL;\n+    public static final long  CKM_SALSA20                    = 0x00004020L;\n+    public static final long  CKM_CHACHA20_POLY1305          = 0x00004021L;\n+    public static final long  CKM_SALSA20_POLY1305           = 0x00004022L;\n+    public static final long  CKM_X3DH_INITIALIZE            = 0x00004023L;\n+    public static final long  CKM_X3DH_RESPOND               = 0x00004024L;\n+    public static final long  CKM_X2RATCHET_INITIALIZE       = 0x00004025L;\n+    public static final long  CKM_X2RATCHET_RESPOND          = 0x00004026L;\n+    public static final long  CKM_X2RATCHET_ENCRYPT          = 0x00004027L;\n+    public static final long  CKM_X2RATCHET_DECRYPT          = 0x00004028L;\n+    public static final long  CKM_XEDDSA                     = 0x00004029L;\n+    public static final long  CKM_HKDF_DERIVE                = 0x0000402aL;\n+    public static final long  CKM_HKDF_DATA                  = 0x0000402bL;\n+    public static final long  CKM_HKDF_KEY_GEN               = 0x0000402cL;\n+    public static final long  CKM_SALSA20_KEY_GEN            = 0x0000402dL;\n+\n+    public static final long  CKM_SP800_108_COUNTER_KDF      = 0x000003acL;\n+    public static final long  CKM_SP800_108_FEEDBACK_KDF     = 0x000003adL;\n+    public static final long  CKM_SP800_108_DOUBLE_PIPELINE_KDF = 0x000003aeL;\n+\n@@ -816,0 +1010,7 @@\n+    public static final long  CKF_MESSAGE_ENCRYPT    = 0x00000002L;\n+    public static final long  CKF_MESSAGE_DECRYPT    = 0x00000004L;\n+    public static final long  CKF_MESSAGE_SIGN       = 0x00000008L;\n+    public static final long  CKF_MESSAGE_VERIFY     = 0x00000010L;\n+    public static final long  CKF_MULTI_MESSAGE      = 0x00000020L;\n+    public static final long  CKF_FIND_OBJECTS       = 0x00000040L;\n+\n@@ -835,1 +1036,3 @@\n-    public static final long  CKF_EC_NAMEDCURVE      = 0x00800000L;\n+    public static final long  CKF_EC_OID             = 0x00400000L;\n+    public static final long  CKF_EC_NAMEDCURVE \/*deprecated since 3.00*\/\n+                                                     = CKF_EC_OID;\n@@ -838,0 +1041,1 @@\n+    public static final long  CKF_EC_CURVENAME       = 0x04000000L;\n@@ -841,1 +1045,0 @@\n-\n@@ -870,0 +1073,1 @@\n+    public static final long  CKR_AEAD_DECRYPT_FAILED       = 0x00000042L;\n@@ -962,0 +1166,2 @@\n+    public static final long  CKR_TOKEN_RESOURCE_EXCEEDED        = 0x00000201L;\n+    public static final long  CKR_OPERATION_CANCEL_FAILED        = 0x00000202L;\n@@ -965,0 +1171,4 @@\n+    \/* Uncomment when actually used\n+    public static final long  CKF_END_OF_MESSAGE      = 0x00000001L;\n+    public static final long  CKF_INTERFACE_FORK_SAFE = 0x00000001L;\n+    *\/\n@@ -972,1 +1182,0 @@\n-\n@@ -982,0 +1191,4 @@\n+    public static final long  CKG_MGF1_SHA3_224   = 0x00000006L;\n+    public static final long  CKG_MGF1_SHA3_256   = 0x00000007L;\n+    public static final long  CKG_MGF1_SHA3_384   = 0x00000008L;\n+    public static final long  CKG_MGF1_SHA3_512   = 0x00000009L;\n@@ -986,2 +1199,1 @@\n-\n-    \/* the following EC Key Derivation Functions are defined *\/\n+    \/\/ the following EC Key Derivation Functions are defined\n@@ -991,1 +1203,2 @@\n-    \/* the following X9.42 Diffie-Hellman Key Derivation Functions are defined *\/\n+    \/* Uncomment when actually used\n+    \/\/ the following X9.42 Diffie-Hellman Key Derivation Functions are defined\n@@ -999,0 +1212,17 @@\n+    public static final long  CKD_SHA3_224_KDF         = 0x0000000AL;\n+    public static final long  CKD_SHA3_256_KDF         = 0x0000000BL;\n+    public static final long  CKD_SHA3_384_KDF         = 0x0000000CL;\n+    public static final long  CKD_SHA3_512_KDF         = 0x0000000DL;\n+    public static final long  CKD_SHA1_KDF_SP800       = 0x0000000EL;\n+    public static final long  CKD_SHA224_KDF_SP800     = 0x0000000FL;\n+    public static final long  CKD_SHA256_KDF_SP800     = 0x00000010L;\n+    public static final long  CKD_SHA384_KDF_SP800     = 0x00000011L;\n+    public static final long  CKD_SHA512_KDF_SP800     = 0x00000012L;\n+    public static final long  CKD_SHA3_224_KDF_SP800   = 0x00000013L;\n+    public static final long  CKD_SHA3_256_KDF_SP800   = 0x00000014L;\n+    public static final long  CKD_SHA3_384_KDF_SP800   = 0x00000015L;\n+    public static final long  CKD_SHA3_512_KDF_SP800   = 0x00000016L;\n+    public static final long  CKD_BLAKE2B_160_KDF      = 0x00000017L;\n+    public static final long  CKD_BLAKE2B_256_KDF      = 0x00000018L;\n+    public static final long  CKD_BLAKE2B_384_KDF      = 0x00000019L;\n+    public static final long  CKD_BLAKE2B_512_KDF      = 0x0000001aL;\n@@ -1027,0 +1257,19 @@\n+    public static final long  CKG_NO_GENERATE      = 0x00000000L;\n+    public static final long  CKG_GENERATE         = 0x00000001L;\n+    public static final long  CKG_GENERATE_COUNTER = 0x00000002L;\n+    public static final long  CKG_GENERATE_RANDOM  = 0x00000003L;\n+\n+    public static final long  CK_SP800_108_ITERATION_VARIABLE = 0x00000001L;\n+    public static final long  CK_SP800_108_OPTIONAL_COUNTER   = 0x00000002L;\n+    public static final long  CK_SP800_108_DKM_LENGTH         = 0x00000003L;\n+    public static final long  CK_SP800_108_BYTE_ARRAY         = 0x00000004L;\n+    public static final long  CK_SP800_108_DKM_LENGTH_SUM_OF_KEYS\n+                                                              = 0x00000001L;\n+    public static final long  CK_SP800_108_DKM_LENGTH_SUM_OF_SEGMENTS\n+                                                              = 0x00000002L;\n+\n+    public static final long  CKF_HKDF_SALT_NULL   = 0x00000001L;\n+    public static final long  CKF_HKDF_SALT_DATA   = 0x00000002L;\n+    public static final long  CKF_HKDF_SALT_KEY    = 0x00000004L;\n+    *\/\n+\n@@ -1031,1 +1280,2 @@\n-    public static final long  CKA_NETSCAPE_BASE       = 0x80000000L + 0x4E534350L;\n+    public static final long  CKA_NETSCAPE_BASE \/*0x80000000L + 0x4E534350L*\/\n+                                                      = 0xCE534350L;\n@@ -1034,1 +1284,1 @@\n-    public static final long  CKO_NETSCAPE_TRUST      = CKA_NETSCAPE_BASE + 3;\n+    public static final long  CKO_NETSCAPE_TRUST      = 0xCE534353L;\n@@ -1037,1 +1287,1 @@\n-    public static final long  CKA_NETSCAPE_TRUST_BASE = CKA_NETSCAPE_BASE + 0x2000;\n+    public static final long  CKA_NETSCAPE_TRUST_BASE = 0xCE536350L;\n@@ -1040,6 +1290,6 @@\n-    public static final long  CKA_NETSCAPE_TRUST_SERVER_AUTH      = CKA_NETSCAPE_TRUST_BASE +   8;\n-    public static final long  CKA_NETSCAPE_TRUST_CLIENT_AUTH      = CKA_NETSCAPE_TRUST_BASE +   9;\n-    public static final long  CKA_NETSCAPE_TRUST_CODE_SIGNING     = CKA_NETSCAPE_TRUST_BASE +  10;\n-    public static final long  CKA_NETSCAPE_TRUST_EMAIL_PROTECTION = CKA_NETSCAPE_TRUST_BASE +  11;\n-    public static final long  CKA_NETSCAPE_CERT_SHA1_HASH         = CKA_NETSCAPE_TRUST_BASE + 100;\n-    public static final long  CKA_NETSCAPE_CERT_MD5_HASH          = CKA_NETSCAPE_TRUST_BASE + 101;\n+    public static final long  CKA_NETSCAPE_TRUST_SERVER_AUTH      = 0xCE536358L;\n+    public static final long  CKA_NETSCAPE_TRUST_CLIENT_AUTH      = 0xCE536359L;\n+    public static final long  CKA_NETSCAPE_TRUST_CODE_SIGNING     = 0xCE53635AL;\n+    public static final long  CKA_NETSCAPE_TRUST_EMAIL_PROTECTION = 0xCE53635BL;\n+    public static final long  CKA_NETSCAPE_CERT_SHA1_HASH         = 0xCE5363B4L;\n+    public static final long  CKA_NETSCAPE_CERT_MD5_HASH          = 0xCE5363B5L;\n@@ -1048,8 +1298,8 @@\n-    public static final long  CKT_NETSCAPE_TRUSTED           = CKA_NETSCAPE_BASE + 1;\n-    public static final long  CKT_NETSCAPE_TRUSTED_DELEGATOR = CKA_NETSCAPE_BASE + 2;\n-    public static final long  CKT_NETSCAPE_UNTRUSTED         = CKA_NETSCAPE_BASE + 3;\n-    public static final long  CKT_NETSCAPE_MUST_VERIFY       = CKA_NETSCAPE_BASE + 4;\n-    public static final long  CKT_NETSCAPE_TRUST_UNKNOWN     = CKA_NETSCAPE_BASE + 5; \/* default *\/\n-    public static final long  CKT_NETSCAPE_VALID             = CKA_NETSCAPE_BASE + 10;\n-    public static final long  CKT_NETSCAPE_VALID_DELEGATOR   = CKA_NETSCAPE_BASE + 11;\n-\n+    public static final long  CKT_NETSCAPE_TRUSTED           = 0xCE534351L;\n+    public static final long  CKT_NETSCAPE_TRUSTED_DELEGATOR = 0xCE534352L;\n+    public static final long  CKT_NETSCAPE_UNTRUSTED         = 0xCE534353L;\n+    public static final long  CKT_NETSCAPE_MUST_VERIFY       = 0xCE534354L;\n+    public static final long  CKT_NETSCAPE_TRUST_UNKNOWN \/* default *\/\n+                                                             = 0xCE534355L;\n+    public static final long  CKT_NETSCAPE_VALID             = 0xCE53435AL;\n+    public static final long  CKT_NETSCAPE_VALID_DELEGATOR   = 0xCE53435BL;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11Constants.java","additions":295,"deletions":45,"binary":false,"changes":340,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-\n+import static sun.security.pkcs11.wrapper.PKCS11Constants.*;\n@@ -76,95 +76,99 @@\n-        int[] errorCodes = new int[] {\n-            0x00000000,\n-            0x00000001,\n-            0x00000002,\n-            0x00000003,\n-            0x00000005,\n-            0x00000006,\n-            0x00000007,\n-            0x00000008,\n-            0x00000009,\n-            0x0000000A,\n-            0x00000010,\n-            0x00000011,\n-            0x00000012,\n-            0x00000013,\n-            0x0000001B,\n-            0x00000020,\n-            0x00000021,\n-            0x00000030,\n-            0x00000031,\n-            0x00000032,\n-            0x00000040,\n-            0x00000041,\n-            0x00000050,\n-            0x00000051,\n-            0x00000054,\n-            0x00000060,\n-            0x00000062,\n-            0x00000063,\n-            0x00000064,\n-            0x00000065,\n-            0x00000066,\n-            0x00000067,\n-            0x00000068,\n-            0x00000069,\n-            0x0000006A,\n-            0x00000070,\n-            0x00000071,\n-            0x00000082,\n-            0x00000090,\n-            0x00000091,\n-            0x000000A0,\n-            0x000000A1,\n-            0x000000A2,\n-            0x000000A3,\n-            0x000000A4,\n-            0x000000B0,\n-            0x000000B1,\n-            0x000000B3,\n-            0x000000B4,\n-            0x000000B5,\n-            0x000000B6,\n-            0x000000B7,\n-            0x000000B8,\n-            0x000000C0,\n-            0x000000C1,\n-            0x000000D0,\n-            0x000000D1,\n-            0x000000E0,\n-            0x000000E1,\n-            0x000000E2,\n-            0x000000F0,\n-            0x000000F1,\n-            0x000000F2,\n-            0x00000100,\n-            0x00000101,\n-            0x00000102,\n-            0x00000103,\n-            0x00000104,\n-            0x00000105,\n-            0x00000110,\n-            0x00000112,\n-            0x00000113,\n-            0x00000114,\n-            0x00000115,\n-            0x00000120,\n-            0x00000121,\n-            0x00000130,\n-            0x00000150,\n-            0x00000160,\n-            0x00000170,\n-            0x00000180,\n-            0x00000190,\n-            0x00000191,\n-            0x000001A0,\n-            0x000001A1,\n-            0x000001B0,\n-            0x000001B1,\n-            0x000001B5,\n-            0x000001B6,\n-            0x000001B7,\n-            0x000001B8,\n-            0x000001B9,\n-            0x00000200,\n-            0x80000000,\n+        long[] errorCodes = new long[] {\n+            CKR_OK,\n+            CKR_CANCEL,\n+            CKR_HOST_MEMORY,\n+            CKR_SLOT_ID_INVALID,\n+            CKR_GENERAL_ERROR,\n+            CKR_FUNCTION_FAILED,\n+            CKR_ARGUMENTS_BAD,\n+            CKR_NO_EVENT,\n+            CKR_NEED_TO_CREATE_THREADS,\n+            CKR_CANT_LOCK,\n+            CKR_ATTRIBUTE_READ_ONLY,\n+            CKR_ATTRIBUTE_SENSITIVE,\n+            CKR_ATTRIBUTE_TYPE_INVALID,\n+            CKR_ATTRIBUTE_VALUE_INVALID,\n+            CKR_ACTION_PROHIBITED,\n+            CKR_DATA_INVALID,\n+            CKR_DATA_LEN_RANGE,\n+            CKR_DEVICE_ERROR,\n+            CKR_DEVICE_MEMORY,\n+            CKR_DEVICE_REMOVED,\n+            CKR_ENCRYPTED_DATA_INVALID,\n+            CKR_ENCRYPTED_DATA_LEN_RANGE,\n+            CKR_AEAD_DECRYPT_FAILED,\n+            CKR_FUNCTION_CANCELED,\n+            CKR_FUNCTION_NOT_PARALLEL,\n+            CKR_FUNCTION_NOT_SUPPORTED,\n+            CKR_KEY_HANDLE_INVALID,\n+            CKR_KEY_SIZE_RANGE,\n+            CKR_KEY_TYPE_INCONSISTENT,\n+            CKR_KEY_NOT_NEEDED,\n+            CKR_KEY_CHANGED,\n+            CKR_KEY_NEEDED,\n+            CKR_KEY_INDIGESTIBLE,\n+            CKR_KEY_FUNCTION_NOT_PERMITTED,\n+            CKR_KEY_NOT_WRAPPABLE,\n+            CKR_KEY_UNEXTRACTABLE,\n+            CKR_MECHANISM_INVALID,\n+            CKR_MECHANISM_PARAM_INVALID,\n+            CKR_OBJECT_HANDLE_INVALID,\n+            CKR_OPERATION_ACTIVE,\n+            CKR_OPERATION_NOT_INITIALIZED,\n+            CKR_PIN_INCORRECT,\n+            CKR_PIN_INVALID,\n+            CKR_PIN_LEN_RANGE,\n+            CKR_PIN_EXPIRED,\n+            CKR_PIN_LOCKED,\n+            CKR_SESSION_CLOSED,\n+            CKR_SESSION_COUNT,\n+            CKR_SESSION_HANDLE_INVALID,\n+            CKR_SESSION_PARALLEL_NOT_SUPPORTED,\n+            CKR_SESSION_READ_ONLY,\n+            CKR_SESSION_EXISTS,\n+            CKR_SESSION_READ_ONLY_EXISTS,\n+            CKR_SESSION_READ_WRITE_SO_EXISTS,\n+            CKR_SIGNATURE_INVALID,\n+            CKR_SIGNATURE_LEN_RANGE,\n+            CKR_TEMPLATE_INCOMPLETE,\n+            CKR_TEMPLATE_INCONSISTENT,\n+            CKR_TOKEN_NOT_PRESENT,\n+            CKR_TOKEN_NOT_RECOGNIZED,\n+            CKR_TOKEN_WRITE_PROTECTED,\n+            CKR_UNWRAPPING_KEY_HANDLE_INVALID,\n+            CKR_UNWRAPPING_KEY_SIZE_RANGE,\n+            CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT,\n+            CKR_USER_ALREADY_LOGGED_IN,\n+            CKR_USER_NOT_LOGGED_IN,\n+            CKR_USER_PIN_NOT_INITIALIZED,\n+            CKR_USER_TYPE_INVALID,\n+            CKR_USER_ANOTHER_ALREADY_LOGGED_IN,\n+            CKR_USER_TOO_MANY_TYPES,\n+            CKR_WRAPPED_KEY_INVALID,\n+            CKR_WRAPPED_KEY_LEN_RANGE,\n+            CKR_WRAPPING_KEY_HANDLE_INVALID,\n+            CKR_WRAPPING_KEY_SIZE_RANGE,\n+            CKR_WRAPPING_KEY_TYPE_INCONSISTENT,\n+            CKR_RANDOM_SEED_NOT_SUPPORTED,\n+            CKR_RANDOM_NO_RNG,\n+            CKR_DOMAIN_PARAMS_INVALID,\n+            CKR_CURVE_NOT_SUPPORTED,\n+            CKR_BUFFER_TOO_SMALL,\n+            CKR_SAVED_STATE_INVALID,\n+            CKR_INFORMATION_SENSITIVE,\n+            CKR_STATE_UNSAVEABLE,\n+            CKR_CRYPTOKI_NOT_INITIALIZED,\n+            CKR_CRYPTOKI_ALREADY_INITIALIZED,\n+            CKR_MUTEX_BAD,\n+            CKR_MUTEX_NOT_LOCKED,\n+            CKR_NEW_PIN_MODE,\n+            CKR_NEXT_OTP,\n+            CKR_EXCEEDED_MAX_ITERATIONS,\n+            CKR_FIPS_SELF_TEST_FAILED,\n+            CKR_LIBRARY_LOAD_FAILED,\n+            CKR_PIN_TOO_WEAK,\n+            CKR_PUBLIC_KEY_INVALID,\n+            CKR_FUNCTION_REJECTED,\n+            CKR_TOKEN_RESOURCE_EXCEEDED,\n+            CKR_OPERATION_CANCEL_FAILED,\n+            CKR_VENDOR_DEFINED,\n@@ -195,0 +199,1 @@\n+            \"CKR_AEAD_DECRYPT_FAILED\",\n@@ -250,0 +255,1 @@\n+            \"CKR_CURVE_NOT_SUPPORTED\",\n@@ -266,0 +272,2 @@\n+            \"CKR_TOKEN_RESOURCE_EXCEEDED\",\n+            \"CKR_OPERATION_CANCEL_FAILED\",\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/wrapper\/PKCS11Exception.java","additions":105,"deletions":97,"binary":false,"changes":202,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-## OASIS PKCS #11 Cryptographic Token Interface v2.40\n+## OASIS PKCS #11 Cryptographic Token Interface v3.0\n@@ -6,1 +6,1 @@\n-Copyright (c) OASIS Open 2016. All Rights Reserved.\n+Copyright (c) OASIS Open 2019. All Rights Reserved.\n","filename":"src\/jdk.crypto.cryptoki\/share\/legal\/pkcs11cryptotoken.md","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,2 +1,2 @@\n-\/* Copyright (c) OASIS Open 2016. All Rights Reserved.\/\n- * \/Distributed under the terms of the OASIS IPR Policy,\n+\/* Copyright (c) OASIS Open 2016-2019. All Rights Reserved.\n+ * Distributed under the terms of the OASIS IPR Policy,\n@@ -8,4 +8,0 @@\n-\/* Latest version of the specification:\n- * http:\/\/docs.oasis-open.org\/pkcs11\/pkcs11-base\/v2.40\/pkcs11-base-v2.40.html\n- *\/\n-\n@@ -32,2 +28,1 @@\n- * If you're using Microsoft Developer Studio 5.0 to produce\n- * Win32 stuff, this might be done by using the following\n+ * If you're using Windows this might be done by using the following\n@@ -43,7 +38,0 @@\n- * If you're using an earlier version of Microsoft Developer\n- * Studio to produce Win16 stuff, this might be done by using\n- * the following preprocessor directive before including\n- * pkcs11.h or pkcs11t.h:\n- *\n- * #pragma pack(1)\n- *\n@@ -62,2 +50,1 @@\n- * If you're using Microsoft Developer Studio 5.0 to produce\n- * Win32 stuff, it might be defined by:\n+ * If you're using windows, it might be defined by:\n@@ -67,5 +54,0 @@\n- * If you're using an earlier version of Microsoft Developer\n- * Studio to produce Win16 stuff, it might be defined by:\n- *\n- * #define CK_PTR far *\n- *\n@@ -86,2 +68,2 @@\n- * If you're using Microsoft Developer Studio 5.0 to declare a\n- * function in a Win32 Cryptoki .dll, it might be defined by:\n+ * If you're using Windows to declare a function in a Win32 cryptoki .dll,\n+ * it might be defined by:\n@@ -92,7 +74,0 @@\n- * If you're using an earlier version of Microsoft Developer\n- * Studio to declare a function in a Win16 Cryptoki .dll, it\n- * might be defined by:\n- *\n- * #define CK_DECLARE_FUNCTION(returnType, name) \\\n- *   returnType __export _far _pascal name\n- *\n@@ -123,1 +98,1 @@\n- * If you're using Microsoft Developer Studio 5.0 to access\n+ * If you're using Windows to access\n@@ -129,7 +104,0 @@\n- * If you're using an earlier version of Microsoft Developer\n- * Studio to access functions in a Win16 Cryptoki .dll, it might\n- * be defined by:\n- *\n- * #define CK_DECLARE_FUNCTION_POINTER(returnType, name) \\\n- *   returnType __export _far _pascal (* name)\n- *\n@@ -156,2 +124,1 @@\n- * If you're using Microsoft Developer Studio 5.0 to do Win32\n- * Cryptoki development, it might be defined by:\n+ * If you're using Windows, it might be defined by:\n@@ -162,6 +129,0 @@\n- * If you're using an earlier version of Microsoft Developer\n- * Studio to do Win16 development, it might be defined by:\n- *\n- * #define CK_CALLBACK_FUNCTION(returnType, name) \\\n- *   returnType _far _pascal (* name)\n- *\n@@ -243,0 +204,16 @@\n+\/* Create the 3.0 Function list *\/\n+struct CK_FUNCTION_LIST_3_0 {\n+\n+  CK_VERSION    version;  \/* Cryptoki version *\/\n+\n+\/* Pile all the function pointers into the CK_FUNCTION_LIST. *\/\n+\/* pkcs11f.h has all the information about the Cryptoki\n+ * function prototypes.\n+ *\/\n+#include \"pkcs11f.h\"\n+\n+};\n+\n+#define CK_PKCS11_2_0_ONLY 1\n+\n+\/* Continue to define the old CK_FUNCTION_LIST *\/\n@@ -256,0 +233,1 @@\n+#undef CK_PKCS11_2_0_ONLY\n@@ -266,0 +244,1 @@\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/pkcs11.h","additions":26,"deletions":47,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/* Copyright (c) OASIS Open 2016. All Rights Reserved.\/\n+\/* Copyright (c) OASIS Open 2016, 2019. All Rights Reserved.\/\n@@ -940,0 +940,258 @@\n+#ifndef CK_PKCS11_2_0_ONLY\n+\/* C_GetInterfaceList returns all the interfaces supported by the module*\/\n+CK_PKCS11_FUNCTION_INFO(C_GetInterfaceList)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_INTERFACE_PTR  pInterfacesList,  \/* returned interfaces *\/\n+  CK_ULONG_PTR      pulCount          \/* number of interfaces returned *\/\n+);\n+#endif\n+\n+\/* C_GetInterface returns a specific interface from the module. *\/\n+CK_PKCS11_FUNCTION_INFO(C_GetInterface)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_UTF8CHAR_PTR       pInterfaceName, \/* name of the interface *\/\n+  CK_VERSION_PTR        pVersion,       \/* version of the interface *\/\n+  CK_INTERFACE_PTR_PTR  ppInterface,    \/* returned interface *\/\n+  CK_FLAGS              flags           \/* flags controlling the semantics\n+                                         * of the interface *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_LoginUser)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,  \/* the session's handle *\/\n+  CK_USER_TYPE      userType,  \/* the user type *\/\n+  CK_UTF8CHAR_PTR   pPin,      \/* the user's PIN *\/\n+  CK_ULONG          ulPinLen,  \/* the length of the PIN *\/\n+  CK_UTF8CHAR_PTR   pUsername, \/* the user's name *\/\n+  CK_ULONG          ulUsernameLen \/*the length of the user's name *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_SessionCancel)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,  \/* the session's handle *\/\n+  CK_FLAGS          flags      \/* flags control which sessions are cancelled *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageEncryptInit)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,    \/* the session's handle *\/\n+  CK_MECHANISM_PTR  pMechanism,  \/* the encryption mechanism *\/\n+  CK_OBJECT_HANDLE  hKey         \/* handle of encryption key *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_EncryptMessage)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pAssociatedData,  \/* AEAD Associated data *\/\n+  CK_ULONG ulAssociatedDataLen, \/* AEAD Associated data length *\/\n+  CK_BYTE_PTR pPlaintext,       \/* plain text  *\/\n+  CK_ULONG ulPlaintextLen,      \/* plain text length *\/\n+  CK_BYTE_PTR pCiphertext,      \/* gets cipher text *\/\n+  CK_ULONG_PTR pulCiphertextLen \/* gets cipher text length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_EncryptMessageBegin)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pAssociatedData,  \/* AEAD Associated data *\/\n+  CK_ULONG ulAssociatedDataLen  \/* AEAD Associated data length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_EncryptMessageNext)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,        \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,            \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,           \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pPlaintextPart,        \/* plain text *\/\n+  CK_ULONG ulPlaintextPartLen,       \/* plain text length *\/\n+  CK_BYTE_PTR pCiphertextPart,       \/* gets cipher text *\/\n+  CK_ULONG_PTR pulCiphertextPartLen, \/* gets cipher text length *\/\n+  CK_FLAGS flags                     \/* multi mode flag *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageEncryptFinal)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession        \/* the session's handle *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageDecryptInit)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,    \/* the session's handle *\/\n+  CK_MECHANISM_PTR  pMechanism,  \/* the decryption mechanism *\/\n+  CK_OBJECT_HANDLE  hKey         \/* handle of decryption key *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_DecryptMessage)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pAssociatedData,  \/* AEAD Associated data *\/\n+  CK_ULONG ulAssociatedDataLen, \/* AEAD Associated data length *\/\n+  CK_BYTE_PTR pCiphertext,      \/* cipher text *\/\n+  CK_ULONG ulCiphertextLen,     \/* cipher text length *\/\n+  CK_BYTE_PTR pPlaintext,       \/* gets plain text *\/\n+  CK_ULONG_PTR pulPlaintextLen  \/* gets plain text length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_DecryptMessageBegin)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pAssociatedData,  \/* AEAD Associated data *\/\n+  CK_ULONG ulAssociatedDataLen  \/* AEAD Associated data length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_DecryptMessageNext)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,        \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,            \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,           \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pCiphertextPart,       \/* cipher text *\/\n+  CK_ULONG ulCiphertextPartLen,      \/* cipher text length *\/\n+  CK_BYTE_PTR pPlaintextPart,        \/* gets plain text *\/\n+  CK_ULONG_PTR pulPlaintextPartLen,  \/* gets plain text length *\/\n+  CK_FLAGS flags                     \/* multi mode flag *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageDecryptFinal)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession        \/* the session's handle *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageSignInit)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,    \/* the session's handle *\/\n+  CK_MECHANISM_PTR  pMechanism,  \/* the signing mechanism *\/\n+  CK_OBJECT_HANDLE  hKey         \/* handle of signing key *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_SignMessage)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pData,            \/* data to sign *\/\n+  CK_ULONG ulDataLen,           \/* data to sign length *\/\n+  CK_BYTE_PTR pSignature,       \/* gets signature *\/\n+  CK_ULONG_PTR pulSignatureLen  \/* gets signature length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_SignMessageBegin)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen      \/* length of message specific parameter *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_SignMessageNext)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pData,            \/* data to sign *\/\n+  CK_ULONG ulDataLen,           \/* data to sign length *\/\n+  CK_BYTE_PTR pSignature,       \/* gets signature *\/\n+  CK_ULONG_PTR pulSignatureLen  \/* gets signature length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageSignFinal)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession        \/* the session's handle *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageVerifyInit)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,    \/* the session's handle *\/\n+  CK_MECHANISM_PTR  pMechanism,  \/* the signing mechanism *\/\n+  CK_OBJECT_HANDLE  hKey         \/* handle of signing key *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_VerifyMessage)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pData,            \/* data to sign *\/\n+  CK_ULONG ulDataLen,           \/* data to sign length *\/\n+  CK_BYTE_PTR pSignature,       \/* signature *\/\n+  CK_ULONG ulSignatureLen       \/* signature length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_VerifyMessageBegin)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen      \/* length of message specific parameter *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_VerifyMessageNext)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession,   \/* the session's handle *\/\n+  CK_VOID_PTR pParameter,       \/* message specific parameter *\/\n+  CK_ULONG ulParameterLen,      \/* length of message specific parameter *\/\n+  CK_BYTE_PTR pData,            \/* data to sign *\/\n+  CK_ULONG ulDataLen,           \/* data to sign length *\/\n+  CK_BYTE_PTR pSignature,       \/* signature *\/\n+  CK_ULONG ulSignatureLen       \/* signature length *\/\n+);\n+#endif\n+\n+CK_PKCS11_FUNCTION_INFO(C_MessageVerifyFinal)\n+#ifdef CK_NEED_ARG_LIST\n+(\n+  CK_SESSION_HANDLE hSession        \/* the session's handle *\/\n+);\n+#endif\n+\n+#endif \/* CK_PKCS11_2_0_ONLY *\/\n+\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/pkcs11f.h","additions":259,"deletions":1,"binary":false,"changes":260,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-\/* Copyright (c) OASIS Open 2016. All Rights Reserved.\/\n+\/* Copyright (c) OASIS Open 2016, 2019. All Rights Reserved.\/\n@@ -20,2 +20,2 @@\n-#define CRYPTOKI_VERSION_MAJOR          2\n-#define CRYPTOKI_VERSION_MINOR          40\n+#define CRYPTOKI_VERSION_MAJOR          3\n+#define CRYPTOKI_VERSION_MINOR          0\n@@ -80,2 +80,2 @@\n-  CK_BYTE       major;  \/* integer portion of version number *\/\n-  CK_BYTE       minor;  \/* 1\/100ths portion of version number *\/\n+    CK_BYTE major;  \/* integer portion of version number *\/\n+    CK_BYTE minor;  \/* 1\/100ths portion of version number *\/\n@@ -88,5 +88,5 @@\n-  CK_VERSION    cryptokiVersion;     \/* Cryptoki interface ver *\/\n-  CK_UTF8CHAR   manufacturerID[32];  \/* blank padded *\/\n-  CK_FLAGS      flags;               \/* must be zero *\/\n-  CK_UTF8CHAR   libraryDescription[32];  \/* blank padded *\/\n-  CK_VERSION    libraryVersion;          \/* version of library *\/\n+    CK_VERSION  cryptokiVersion;        \/* Cryptoki interface ver *\/\n+    CK_UTF8CHAR manufacturerID[32];     \/* blank padded *\/\n+    CK_FLAGS    flags;                  \/* must be zero *\/\n+    CK_UTF8CHAR libraryDescription[32]; \/* blank padded *\/\n+    CK_VERSION  libraryVersion;         \/* version of library *\/\n@@ -112,3 +112,3 @@\n-  CK_UTF8CHAR   slotDescription[64];  \/* blank padded *\/\n-  CK_UTF8CHAR   manufacturerID[32];   \/* blank padded *\/\n-  CK_FLAGS      flags;\n+    CK_UTF8CHAR slotDescription[64];  \/* blank padded *\/\n+    CK_UTF8CHAR manufacturerID[32];   \/* blank padded *\/\n+    CK_FLAGS    flags;\n@@ -116,2 +116,2 @@\n-  CK_VERSION    hardwareVersion;  \/* version of hardware *\/\n-  CK_VERSION    firmwareVersion;  \/* version of firmware *\/\n+    CK_VERSION  hardwareVersion;      \/* version of hardware *\/\n+    CK_VERSION  firmwareVersion;      \/* version of firmware *\/\n@@ -132,19 +132,19 @@\n-  CK_UTF8CHAR   label[32];           \/* blank padded *\/\n-  CK_UTF8CHAR   manufacturerID[32];  \/* blank padded *\/\n-  CK_UTF8CHAR   model[16];           \/* blank padded *\/\n-  CK_CHAR       serialNumber[16];    \/* blank padded *\/\n-  CK_FLAGS      flags;               \/* see below *\/\n-\n-  CK_ULONG      ulMaxSessionCount;     \/* max open sessions *\/\n-  CK_ULONG      ulSessionCount;        \/* sess. now open *\/\n-  CK_ULONG      ulMaxRwSessionCount;   \/* max R\/W sessions *\/\n-  CK_ULONG      ulRwSessionCount;      \/* R\/W sess. now open *\/\n-  CK_ULONG      ulMaxPinLen;           \/* in bytes *\/\n-  CK_ULONG      ulMinPinLen;           \/* in bytes *\/\n-  CK_ULONG      ulTotalPublicMemory;   \/* in bytes *\/\n-  CK_ULONG      ulFreePublicMemory;    \/* in bytes *\/\n-  CK_ULONG      ulTotalPrivateMemory;  \/* in bytes *\/\n-  CK_ULONG      ulFreePrivateMemory;   \/* in bytes *\/\n-  CK_VERSION    hardwareVersion;       \/* version of hardware *\/\n-  CK_VERSION    firmwareVersion;       \/* version of firmware *\/\n-  CK_CHAR       utcTime[16];           \/* time *\/\n+    CK_UTF8CHAR label[32];            \/* blank padded *\/\n+    CK_UTF8CHAR manufacturerID[32];   \/* blank padded *\/\n+    CK_UTF8CHAR model[16];            \/* blank padded *\/\n+    CK_CHAR     serialNumber[16];     \/* blank padded *\/\n+    CK_FLAGS    flags;                \/* see below *\/\n+\n+    CK_ULONG    ulMaxSessionCount;    \/* max open sessions *\/\n+    CK_ULONG    ulSessionCount;       \/* sess. now open *\/\n+    CK_ULONG    ulMaxRwSessionCount;  \/* max R\/W sessions *\/\n+    CK_ULONG    ulRwSessionCount;     \/* R\/W sess. now open *\/\n+    CK_ULONG    ulMaxPinLen;          \/* in bytes *\/\n+    CK_ULONG    ulMinPinLen;          \/* in bytes *\/\n+    CK_ULONG    ulTotalPublicMemory;  \/* in bytes *\/\n+    CK_ULONG    ulFreePublicMemory;   \/* in bytes *\/\n+    CK_ULONG    ulTotalPrivateMemory; \/* in bytes *\/\n+    CK_ULONG    ulFreePrivateMemory;  \/* in bytes *\/\n+    CK_VERSION  hardwareVersion;      \/* version of hardware *\/\n+    CK_VERSION  firmwareVersion;      \/* version of firmware *\/\n+    CK_CHAR     utcTime[16];          \/* time *\/\n@@ -281,4 +281,4 @@\n-  CK_SLOT_ID    slotID;\n-  CK_STATE      state;\n-  CK_FLAGS      flags;          \/* see below *\/\n-  CK_ULONG      ulDeviceError;  \/* device-dependent error code *\/\n+    CK_SLOT_ID slotID;\n+    CK_STATE   state;\n+    CK_FLAGS   flags;          \/* see below *\/\n+    CK_ULONG   ulDeviceError;  \/* device-dependent error code *\/\n@@ -320,0 +320,1 @@\n+#define CKO_PROFILE           0x00000009UL\n@@ -325,0 +326,8 @@\n+\/* Profile ID's *\/\n+#define CKP_INVALID_ID                0x00000000UL\n+#define CKP_BASELINE_PROVIDER         0x00000001UL\n+#define CKP_EXTENDED_PROVIDER         0x00000002UL\n+#define CKP_AUTHENTICATION_TOKEN      0x00000003UL\n+#define CKP_PUBLIC_CERTIFICATES_TOKEN 0x00000004UL\n+#define CKP_VENDOR_DEFINED            0x80000000UL\n+\n@@ -372,0 +381,2 @@\n+\/* the following definitions were added in the 2.30 header file,\n+ * but never defined in the spec. *\/\n@@ -385,2 +396,19 @@\n-\n-\n+#define CKK_CHACHA20            0x00000033UL\n+#define CKK_POLY1305            0x00000034UL\n+#define CKK_AES_XTS             0x00000035UL\n+#define CKK_SHA3_224_HMAC       0x00000036UL\n+#define CKK_SHA3_256_HMAC       0x00000037UL\n+#define CKK_SHA3_384_HMAC       0x00000038UL\n+#define CKK_SHA3_512_HMAC       0x00000039UL\n+#define CKK_BLAKE2B_160_HMAC    0x0000003aUL\n+#define CKK_BLAKE2B_256_HMAC    0x0000003bUL\n+#define CKK_BLAKE2B_384_HMAC    0x0000003cUL\n+#define CKK_BLAKE2B_512_HMAC    0x0000003dUL\n+#define CKK_SALSA20             0x0000003eUL\n+#define CKK_X2RATCHET           0x0000003fUL\n+#define CKK_EC_EDWARDS          0x00000040UL\n+#define CKK_EC_MONTGOMERY       0x00000041UL\n+#define CKK_HKDF                0x00000042UL\n+#define CKK_SHA512_224_HMAC     0x00000043UL\n+#define CKK_SHA512_256_HMAC     0x00000044UL\n+#define CKK_SHA512_T_HMAC       0x00000045UL\n@@ -442,0 +470,1 @@\n+#define CKA_UNIQUE_ID          0x00000004UL\n@@ -559,0 +588,18 @@\n+#define CKA_PROFILE_ID                  0x00000601UL\n+#define CKA_X2RATCHET_BAG               0x00000602UL\n+#define CKA_X2RATCHET_BAGSIZE           0x00000603UL\n+#define CKA_X2RATCHET_BOBS1STMSG        0x00000604UL\n+#define CKA_X2RATCHET_CKR               0x00000605UL\n+#define CKA_X2RATCHET_CKS               0x00000606UL\n+#define CKA_X2RATCHET_DHP               0x00000607UL\n+#define CKA_X2RATCHET_DHR               0x00000608UL\n+#define CKA_X2RATCHET_DHS               0x00000609UL\n+#define CKA_X2RATCHET_HKR               0x0000060aUL\n+#define CKA_X2RATCHET_HKS               0x0000060bUL\n+#define CKA_X2RATCHET_ISALICE           0x0000060cUL\n+#define CKA_X2RATCHET_NHKR              0x0000060dUL\n+#define CKA_X2RATCHET_NHKS              0x0000060eUL\n+#define CKA_X2RATCHET_NR                0x0000060fUL\n+#define CKA_X2RATCHET_NS                0x00000610UL\n+#define CKA_X2RATCHET_PNS               0x00000611UL\n+#define CKA_X2RATCHET_RK                0x00000612UL\n@@ -566,3 +613,3 @@\n-  CK_ATTRIBUTE_TYPE type;\n-  CK_VOID_PTR       pValue;\n-  CK_ULONG          ulValueLen;  \/* in bytes *\/\n+    CK_ATTRIBUTE_TYPE type;\n+    CK_VOID_PTR       pValue;\n+    CK_ULONG          ulValueLen;  \/* in bytes *\/\n@@ -575,3 +622,3 @@\n-  CK_CHAR       year[4];   \/* the year (\"1900\" - \"9999\") *\/\n-  CK_CHAR       month[2];  \/* the month (\"01\" - \"12\") *\/\n-  CK_CHAR       day[2];    \/* the day   (\"01\" - \"31\") *\/\n+    CK_CHAR year[4];   \/* the year (\"1900\" - \"9999\") *\/\n+    CK_CHAR month[2];  \/* the month (\"01\" - \"12\") *\/\n+    CK_CHAR day[2];    \/* the day   (\"01\" - \"31\") *\/\n@@ -613,0 +660,4 @@\n+#define CKM_DSA_SHA3_224               0x00000018UL\n+#define CKM_DSA_SHA3_256               0x00000019UL\n+#define CKM_DSA_SHA3_384               0x0000001AUL\n+#define CKM_DSA_SHA3_512               0x0000001BUL\n@@ -646,0 +697,9 @@\n+#define CKM_SHA3_256_RSA_PKCS          0x00000060UL\n+#define CKM_SHA3_384_RSA_PKCS          0x00000061UL\n+#define CKM_SHA3_512_RSA_PKCS          0x00000062UL\n+#define CKM_SHA3_256_RSA_PKCS_PSS      0x00000063UL\n+#define CKM_SHA3_384_RSA_PKCS_PSS      0x00000064UL\n+#define CKM_SHA3_512_RSA_PKCS_PSS      0x00000065UL\n+#define CKM_SHA3_224_RSA_PKCS          0x00000066UL\n+#define CKM_SHA3_224_RSA_PKCS_PSS      0x00000067UL\n+\n@@ -727,0 +787,18 @@\n+#define CKM_SHA3_256                   0x000002B0UL\n+#define CKM_SHA3_256_HMAC              0x000002B1UL\n+#define CKM_SHA3_256_HMAC_GENERAL      0x000002B2UL\n+#define CKM_SHA3_256_KEY_GEN           0x000002B3UL\n+#define CKM_SHA3_224                   0x000002B5UL\n+#define CKM_SHA3_224_HMAC              0x000002B6UL\n+#define CKM_SHA3_224_HMAC_GENERAL      0x000002B7UL\n+#define CKM_SHA3_224_KEY_GEN           0x000002B8UL\n+#define CKM_SHA3_384                   0x000002C0UL\n+#define CKM_SHA3_384_HMAC              0x000002C1UL\n+#define CKM_SHA3_384_HMAC_GENERAL      0x000002C2UL\n+#define CKM_SHA3_384_KEY_GEN           0x000002C3UL\n+#define CKM_SHA3_512                   0x000002D0UL\n+#define CKM_SHA3_512_HMAC              0x000002D1UL\n+#define CKM_SHA3_512_HMAC_GENERAL      0x000002D2UL\n+#define CKM_SHA3_512_KEY_GEN           0x000002D3UL\n+\n+\n@@ -792,0 +870,12 @@\n+#define CKM_SHA3_256_KEY_DERIVATION    0x00000397UL\n+#define CKM_SHA3_224_KEY_DERIVATION    0x00000398UL\n+#define CKM_SHA3_384_KEY_DERIVATION    0x00000399UL\n+#define CKM_SHA3_512_KEY_DERIVATION    0x0000039AUL\n+#define CKM_SHAKE_128_KEY_DERIVATION   0x0000039BUL\n+#define CKM_SHAKE_256_KEY_DERIVATION   0x0000039CUL\n+#define CKM_SHA3_256_KEY_DERIVE  CKM_SHA3_256_KEY_DERIVATION\n+#define CKM_SHA3_224_KEY_DERIVE  CKM_SHA3_224_KEY_DERIVATION\n+#define CKM_SHA3_384_KEY_DERIVE  CKM_SHA3_384_KEY_DERIVATION\n+#define CKM_SHA3_512_KEY_DERIVE  CKM_SHA3_512_KEY_DERIVATION\n+#define CKM_SHAKE_128_KEY_DERIVE CKM_SHAKE_128_KEY_DERIVATION\n+#define CKM_SHAKE_256_KEY_DERIVE CKM_SHAKE_256_KEY_DERIVATION\n@@ -819,2 +909,0 @@\n-#define CKM_TLS10_MAC_SERVER                0x000003D6UL\n-#define CKM_TLS10_MAC_CLIENT                0x000003D7UL\n@@ -898,0 +986,1 @@\n+#define CKM_EC_KEY_PAIR_GEN_W_EXTRA_BITS 0x0000140BUL\n@@ -914,0 +1003,2 @@\n+#define CKM_AES_XTS                    0x00001071UL\n+#define CKM_AES_XTS_KEY_GEN            0x00001072UL\n@@ -957,1 +1048,4 @@\n-\n+#define CKM_CHACHA20_KEY_GEN           0x00001225UL\n+#define CKM_CHACHA20                   0x00001226UL\n+#define CKM_POLY1305_KEY_GEN           0x00001227UL\n+#define CKM_POLY1305                   0x00001228UL\n@@ -961,1 +1055,2 @@\n-#define CKM_DSA_PROBABLISTIC_PARAMETER_GEN    0x00002003UL\n+#define CKM_DSA_PROBABILISTIC_PARAMETER_GEN 0x00002003UL\n+#define CKM_DSA_PROBABLISTIC_PARAMETER_GEN CKM_DSA_PROBABILISTIC_PARAMETER_GEN\n@@ -963,0 +1058,1 @@\n+#define CKM_DSA_FIPS_G_GEN               0x00002005UL\n@@ -972,0 +1068,1 @@\n+#define CKM_AES_KEY_WRAP_KWP           0x0000210BUL\n@@ -976,0 +1073,55 @@\n+#define CKM_SHA_1_KEY_GEN              0x00004003UL\n+#define CKM_SHA224_KEY_GEN             0x00004004UL\n+#define CKM_SHA256_KEY_GEN             0x00004005UL\n+#define CKM_SHA384_KEY_GEN             0x00004006UL\n+#define CKM_SHA512_KEY_GEN             0x00004007UL\n+#define CKM_SHA512_224_KEY_GEN         0x00004008UL\n+#define CKM_SHA512_256_KEY_GEN         0x00004009UL\n+#define CKM_SHA512_T_KEY_GEN           0x0000400aUL\n+#define CKM_NULL                       0x0000400bUL\n+#define CKM_BLAKE2B_160                0x0000400cUL\n+#define CKM_BLAKE2B_160_HMAC           0x0000400dUL\n+#define CKM_BLAKE2B_160_HMAC_GENERAL   0x0000400eUL\n+#define CKM_BLAKE2B_160_KEY_DERIVE     0x0000400fUL\n+#define CKM_BLAKE2B_160_KEY_GEN        0x00004010UL\n+#define CKM_BLAKE2B_256                0x00004011UL\n+#define CKM_BLAKE2B_256_HMAC           0x00004012UL\n+#define CKM_BLAKE2B_256_HMAC_GENERAL   0x00004013UL\n+#define CKM_BLAKE2B_256_KEY_DERIVE     0x00004014UL\n+#define CKM_BLAKE2B_256_KEY_GEN        0x00004015UL\n+#define CKM_BLAKE2B_384                0x00004016UL\n+#define CKM_BLAKE2B_384_HMAC           0x00004017UL\n+#define CKM_BLAKE2B_384_HMAC_GENERAL   0x00004018UL\n+#define CKM_BLAKE2B_384_KEY_DERIVE     0x00004019UL\n+#define CKM_BLAKE2B_384_KEY_GEN        0x0000401aUL\n+#define CKM_BLAKE2B_512                0x0000401bUL\n+#define CKM_BLAKE2B_512_HMAC           0x0000401cUL\n+#define CKM_BLAKE2B_512_HMAC_GENERAL   0x0000401dUL\n+#define CKM_BLAKE2B_512_KEY_DERIVE     0x0000401eUL\n+#define CKM_BLAKE2B_512_KEY_GEN        0x0000401fUL\n+#define CKM_SALSA20                    0x00004020UL\n+#define CKM_CHACHA20_POLY1305          0x00004021UL\n+#define CKM_SALSA20_POLY1305           0x00004022UL\n+#define CKM_X3DH_INITIALIZE            0x00004023UL\n+#define CKM_X3DH_RESPOND               0x00004024UL\n+#define CKM_X2RATCHET_INITIALIZE       0x00004025UL\n+#define CKM_X2RATCHET_RESPOND          0x00004026UL\n+#define CKM_X2RATCHET_ENCRYPT          0x00004027UL\n+#define CKM_X2RATCHET_DECRYPT          0x00004028UL\n+#define CKM_XEDDSA                     0x00004029UL\n+#define CKM_HKDF_DERIVE                0x0000402aUL\n+#define CKM_HKDF_DATA                  0x0000402bUL\n+#define CKM_HKDF_KEY_GEN               0x0000402cUL\n+#define CKM_SALSA20_KEY_GEN            0x0000402dUL\n+\n+#define CKM_ECDSA_SHA3_224             0x00001047UL\n+#define CKM_ECDSA_SHA3_256             0x00001048UL\n+#define CKM_ECDSA_SHA3_384             0x00001049UL\n+#define CKM_ECDSA_SHA3_512             0x0000104aUL\n+#define CKM_EC_EDWARDS_KEY_PAIR_GEN    0x00001055UL\n+#define CKM_EC_MONTGOMERY_KEY_PAIR_GEN 0x00001056UL\n+#define CKM_EDDSA                      0x00001057UL\n+#define CKM_SP800_108_COUNTER_KDF      0x000003acUL\n+#define CKM_SP800_108_FEEDBACK_KDF     0x000003adUL\n+#define CKM_SP800_108_DOUBLE_PIPELINE_KDF 0x000003aeUL\n+\n@@ -985,3 +1137,3 @@\n-  CK_MECHANISM_TYPE mechanism;\n-  CK_VOID_PTR       pParameter;\n-  CK_ULONG          ulParameterLen;  \/* in bytes *\/\n+    CK_MECHANISM_TYPE mechanism;\n+    CK_VOID_PTR       pParameter;\n+    CK_ULONG          ulParameterLen;  \/* in bytes *\/\n@@ -997,3 +1149,3 @@\n-    CK_ULONG    ulMinKeySize;\n-    CK_ULONG    ulMaxKeySize;\n-    CK_FLAGS    flags;\n+    CK_ULONG ulMinKeySize;\n+    CK_ULONG ulMaxKeySize;\n+    CK_FLAGS flags;\n@@ -1007,0 +1159,8 @@\n+#define CKF_MESSAGE_ENCRYPT    0x00000002UL\n+#define CKF_MESSAGE_DECRYPT    0x00000004UL\n+#define CKF_MESSAGE_SIGN       0x00000008UL\n+#define CKF_MESSAGE_VERIFY     0x00000010UL\n+#define CKF_MULTI_MESSAGE      0x00000020UL\n+#define CKF_MULTI_MESSGE       CKF_MULTI_MESSAGE\n+#define CKF_FIND_OBJECTS       0x00000040UL\n+\n@@ -1026,1 +1186,2 @@\n-#define CKF_EC_NAMEDCURVE      0x00800000UL\n+#define CKF_EC_OID             0x00800000UL\n+#define CKF_EC_NAMEDCURVE      CKF_EC_OID   \/* deprecated since PKCS#11 3.00 *\/\n@@ -1029,0 +1190,1 @@\n+#define CKF_EC_CURVENAME       0x04000000UL\n@@ -1066,0 +1228,1 @@\n+#define CKR_AEAD_DECRYPT_FAILED               0x00000042UL\n@@ -1158,0 +1321,2 @@\n+#define CKR_TOKEN_RESOURCE_EXCEEDED           0x00000201UL\n+#define CKR_OPERATION_CANCEL_FAILED           0x00000202UL\n@@ -1164,3 +1329,3 @@\n-  CK_SESSION_HANDLE hSession,     \/* the session's handle *\/\n-  CK_NOTIFICATION   event,\n-  CK_VOID_PTR       pApplication  \/* passed to C_OpenSession *\/\n+    CK_SESSION_HANDLE hSession,     \/* the session's handle *\/\n+    CK_NOTIFICATION   event,\n+    CK_VOID_PTR       pApplication  \/* passed to C_OpenSession *\/\n@@ -1175,0 +1340,1 @@\n+typedef struct CK_FUNCTION_LIST_3_0 CK_FUNCTION_LIST_3_0;\n@@ -1177,0 +1343,1 @@\n+typedef CK_FUNCTION_LIST_3_0 CK_PTR CK_FUNCTION_LIST_3_0_PTR;\n@@ -1179,0 +1346,12 @@\n+typedef CK_FUNCTION_LIST_3_0_PTR CK_PTR CK_FUNCTION_LIST_3_0_PTR_PTR;\n+\n+typedef struct CK_INTERFACE {\n+    CK_CHAR     *pInterfaceName;\n+    CK_VOID_PTR pFunctionList;\n+    CK_FLAGS    flags;\n+} CK_INTERFACE;\n+\n+typedef CK_INTERFACE CK_PTR CK_INTERFACE_PTR;\n+typedef CK_INTERFACE_PTR CK_PTR CK_INTERFACE_PTR_PTR;\n+\n+#define CKF_END_OF_MESSAGE   0x00000001UL\n@@ -1185,1 +1364,1 @@\n-  CK_VOID_PTR_PTR ppMutex  \/* location to receive ptr to mutex *\/\n+    CK_VOID_PTR_PTR ppMutex  \/* location to receive ptr to mutex *\/\n@@ -1193,1 +1372,1 @@\n-  CK_VOID_PTR pMutex  \/* pointer to mutex *\/\n+    CK_VOID_PTR pMutex  \/* pointer to mutex *\/\n@@ -1199,1 +1378,1 @@\n-  CK_VOID_PTR pMutex  \/* pointer to mutex *\/\n+    CK_VOID_PTR pMutex  \/* pointer to mutex *\/\n@@ -1207,1 +1386,1 @@\n-  CK_VOID_PTR pMutex  \/* pointer to mutex *\/\n+    CK_VOID_PTR pMutex  \/* pointer to mutex *\/\n@@ -1210,0 +1389,2 @@\n+\/* Get functionlist flags *\/\n+#define CKF_INTERFACE_FORK_SAFE  0x00000001UL\n@@ -1215,6 +1396,6 @@\n-  CK_CREATEMUTEX CreateMutex;\n-  CK_DESTROYMUTEX DestroyMutex;\n-  CK_LOCKMUTEX LockMutex;\n-  CK_UNLOCKMUTEX UnlockMutex;\n-  CK_FLAGS flags;\n-  CK_VOID_PTR pReserved;\n+    CK_CREATEMUTEX  CreateMutex;\n+    CK_DESTROYMUTEX DestroyMutex;\n+    CK_LOCKMUTEX    LockMutex;\n+    CK_UNLOCKMUTEX  UnlockMutex;\n+    CK_FLAGS        flags;\n+    CK_VOID_PTR     pReserved;\n@@ -1232,0 +1413,1 @@\n+\n@@ -1252,0 +1434,4 @@\n+#define CKG_MGF1_SHA3_224     0x00000006UL\n+#define CKG_MGF1_SHA3_256     0x00000007UL\n+#define CKG_MGF1_SHA3_384     0x00000008UL\n+#define CKG_MGF1_SHA3_512     0x00000009UL\n@@ -1268,5 +1454,5 @@\n-        CK_MECHANISM_TYPE hashAlg;\n-        CK_RSA_PKCS_MGF_TYPE mgf;\n-        CK_RSA_PKCS_OAEP_SOURCE_TYPE source;\n-        CK_VOID_PTR pSourceData;\n-        CK_ULONG ulSourceDataLen;\n+    CK_MECHANISM_TYPE            hashAlg;\n+    CK_RSA_PKCS_MGF_TYPE         mgf;\n+    CK_RSA_PKCS_OAEP_SOURCE_TYPE source;\n+    CK_VOID_PTR                  pSourceData;\n+    CK_ULONG                     ulSourceDataLen;\n@@ -1281,3 +1467,3 @@\n-        CK_MECHANISM_TYPE    hashAlg;\n-        CK_RSA_PKCS_MGF_TYPE mgf;\n-        CK_ULONG             sLen;\n+    CK_MECHANISM_TYPE    hashAlg;\n+    CK_RSA_PKCS_MGF_TYPE mgf;\n+    CK_ULONG             sLen;\n@@ -1289,0 +1475,1 @@\n+typedef CK_EC_KDF_TYPE CK_PTR CK_EC_KDF_TYPE_PTR;\n@@ -1302,1 +1489,17 @@\n-\n+#define CKD_SHA3_224_KDF         0x0000000AUL\n+#define CKD_SHA3_256_KDF         0x0000000BUL\n+#define CKD_SHA3_384_KDF         0x0000000CUL\n+#define CKD_SHA3_512_KDF         0x0000000DUL\n+#define CKD_SHA1_KDF_SP800       0x0000000EUL\n+#define CKD_SHA224_KDF_SP800     0x0000000FUL\n+#define CKD_SHA256_KDF_SP800     0x00000010UL\n+#define CKD_SHA384_KDF_SP800     0x00000011UL\n+#define CKD_SHA512_KDF_SP800     0x00000012UL\n+#define CKD_SHA3_224_KDF_SP800   0x00000013UL\n+#define CKD_SHA3_256_KDF_SP800   0x00000014UL\n+#define CKD_SHA3_384_KDF_SP800   0x00000015UL\n+#define CKD_SHA3_512_KDF_SP800   0x00000016UL\n+#define CKD_BLAKE2B_160_KDF      0x00000017UL\n+#define CKD_BLAKE2B_256_KDF      0x00000018UL\n+#define CKD_BLAKE2B_384_KDF      0x00000019UL\n+#define CKD_BLAKE2B_512_KDF      0x0000001aUL\n@@ -1309,5 +1512,5 @@\n-  CK_EC_KDF_TYPE kdf;\n-  CK_ULONG ulSharedDataLen;\n-  CK_BYTE_PTR pSharedData;\n-  CK_ULONG ulPublicDataLen;\n-  CK_BYTE_PTR pPublicData;\n+    CK_EC_KDF_TYPE kdf;\n+    CK_ULONG       ulSharedDataLen;\n+    CK_BYTE_PTR    pSharedData;\n+    CK_ULONG       ulPublicDataLen;\n+    CK_BYTE_PTR    pPublicData;\n@@ -1323,9 +1526,9 @@\n-  CK_EC_KDF_TYPE kdf;\n-  CK_ULONG ulSharedDataLen;\n-  CK_BYTE_PTR pSharedData;\n-  CK_ULONG ulPublicDataLen;\n-  CK_BYTE_PTR pPublicData;\n-  CK_ULONG ulPrivateDataLen;\n-  CK_OBJECT_HANDLE hPrivateData;\n-  CK_ULONG ulPublicDataLen2;\n-  CK_BYTE_PTR pPublicData2;\n+    CK_EC_KDF_TYPE   kdf;\n+    CK_ULONG         ulSharedDataLen;\n+    CK_BYTE_PTR      pSharedData;\n+    CK_ULONG         ulPublicDataLen;\n+    CK_BYTE_PTR      pPublicData;\n+    CK_ULONG         ulPrivateDataLen;\n+    CK_OBJECT_HANDLE hPrivateData;\n+    CK_ULONG         ulPublicDataLen2;\n+    CK_BYTE_PTR      pPublicData2;\n@@ -1337,10 +1540,10 @@\n-  CK_EC_KDF_TYPE kdf;\n-  CK_ULONG ulSharedDataLen;\n-  CK_BYTE_PTR pSharedData;\n-  CK_ULONG ulPublicDataLen;\n-  CK_BYTE_PTR pPublicData;\n-  CK_ULONG ulPrivateDataLen;\n-  CK_OBJECT_HANDLE hPrivateData;\n-  CK_ULONG ulPublicDataLen2;\n-  CK_BYTE_PTR pPublicData2;\n-  CK_OBJECT_HANDLE publicKey;\n+    CK_EC_KDF_TYPE   kdf;\n+    CK_ULONG         ulSharedDataLen;\n+    CK_BYTE_PTR      pSharedData;\n+    CK_ULONG         ulPublicDataLen;\n+    CK_BYTE_PTR      pPublicData;\n+    CK_ULONG         ulPrivateDataLen;\n+    CK_OBJECT_HANDLE hPrivateData;\n+    CK_ULONG         ulPublicDataLen2;\n+    CK_BYTE_PTR      pPublicData2;\n+    CK_OBJECT_HANDLE publicKey;\n@@ -1362,5 +1565,5 @@\n-  CK_X9_42_DH_KDF_TYPE kdf;\n-  CK_ULONG ulOtherInfoLen;\n-  CK_BYTE_PTR pOtherInfo;\n-  CK_ULONG ulPublicDataLen;\n-  CK_BYTE_PTR pPublicData;\n+    CK_X9_42_DH_KDF_TYPE kdf;\n+    CK_ULONG             ulOtherInfoLen;\n+    CK_BYTE_PTR          pOtherInfo;\n+    CK_ULONG             ulPublicDataLen;\n+    CK_BYTE_PTR          pPublicData;\n@@ -1376,9 +1579,9 @@\n-  CK_X9_42_DH_KDF_TYPE kdf;\n-  CK_ULONG ulOtherInfoLen;\n-  CK_BYTE_PTR pOtherInfo;\n-  CK_ULONG ulPublicDataLen;\n-  CK_BYTE_PTR pPublicData;\n-  CK_ULONG ulPrivateDataLen;\n-  CK_OBJECT_HANDLE hPrivateData;\n-  CK_ULONG ulPublicDataLen2;\n-  CK_BYTE_PTR pPublicData2;\n+    CK_X9_42_DH_KDF_TYPE kdf;\n+    CK_ULONG             ulOtherInfoLen;\n+    CK_BYTE_PTR          pOtherInfo;\n+    CK_ULONG             ulPublicDataLen;\n+    CK_BYTE_PTR          pPublicData;\n+    CK_ULONG             ulPrivateDataLen;\n+    CK_OBJECT_HANDLE     hPrivateData;\n+    CK_ULONG             ulPublicDataLen2;\n+    CK_BYTE_PTR          pPublicData2;\n@@ -1390,10 +1593,10 @@\n-  CK_X9_42_DH_KDF_TYPE kdf;\n-  CK_ULONG ulOtherInfoLen;\n-  CK_BYTE_PTR pOtherInfo;\n-  CK_ULONG ulPublicDataLen;\n-  CK_BYTE_PTR pPublicData;\n-  CK_ULONG ulPrivateDataLen;\n-  CK_OBJECT_HANDLE hPrivateData;\n-  CK_ULONG ulPublicDataLen2;\n-  CK_BYTE_PTR pPublicData2;\n-  CK_OBJECT_HANDLE publicKey;\n+    CK_X9_42_DH_KDF_TYPE kdf;\n+    CK_ULONG             ulOtherInfoLen;\n+    CK_BYTE_PTR          pOtherInfo;\n+    CK_ULONG             ulPublicDataLen;\n+    CK_BYTE_PTR          pPublicData;\n+    CK_ULONG             ulPrivateDataLen;\n+    CK_OBJECT_HANDLE     hPrivateData;\n+    CK_ULONG             ulPublicDataLen2;\n+    CK_BYTE_PTR          pPublicData2;\n+    CK_OBJECT_HANDLE     publicKey;\n@@ -1408,6 +1611,6 @@\n-  CK_BBOOL      isSender;\n-  CK_ULONG      ulRandomLen;\n-  CK_BYTE_PTR   pRandomA;\n-  CK_BYTE_PTR   pRandomB;\n-  CK_ULONG      ulPublicDataLen;\n-  CK_BYTE_PTR   pPublicData;\n+    CK_BBOOL    isSender;\n+    CK_ULONG    ulRandomLen;\n+    CK_BYTE_PTR pRandomA;\n+    CK_BYTE_PTR pRandomB;\n+    CK_ULONG    ulPublicDataLen;\n+    CK_BYTE_PTR pPublicData;\n@@ -1432,2 +1635,2 @@\n-  CK_ULONG      ulEffectiveBits;  \/* effective bits (1-1024) *\/\n-  CK_BYTE       iv[8];            \/* IV for CBC mode *\/\n+    CK_ULONG ulEffectiveBits;  \/* effective bits (1-1024) *\/\n+    CK_BYTE  iv[8];            \/* IV for CBC mode *\/\n@@ -1443,2 +1646,2 @@\n-  CK_ULONG      ulEffectiveBits;  \/* effective bits (1-1024) *\/\n-  CK_ULONG      ulMacLength;      \/* Length of MAC in bytes *\/\n+    CK_ULONG ulEffectiveBits;  \/* effective bits (1-1024) *\/\n+    CK_ULONG ulMacLength;      \/* Length of MAC in bytes *\/\n@@ -1448,1 +1651,1 @@\n-  CK_RC2_MAC_GENERAL_PARAMS_PTR;\n+        CK_RC2_MAC_GENERAL_PARAMS_PTR;\n@@ -1455,2 +1658,2 @@\n-  CK_ULONG      ulWordsize;  \/* wordsize in bits *\/\n-  CK_ULONG      ulRounds;    \/* number of rounds *\/\n+    CK_ULONG ulWordsize;  \/* wordsize in bits *\/\n+    CK_ULONG ulRounds;    \/* number of rounds *\/\n@@ -1466,4 +1669,4 @@\n-  CK_ULONG      ulWordsize;  \/* wordsize in bits *\/\n-  CK_ULONG      ulRounds;    \/* number of rounds *\/\n-  CK_BYTE_PTR   pIv;         \/* pointer to IV *\/\n-  CK_ULONG      ulIvLen;     \/* length of IV in bytes *\/\n+    CK_ULONG    ulWordsize;  \/* wordsize in bits *\/\n+    CK_ULONG    ulRounds;    \/* number of rounds *\/\n+    CK_BYTE_PTR pIv;         \/* pointer to IV *\/\n+    CK_ULONG    ulIvLen;     \/* length of IV in bytes *\/\n@@ -1479,3 +1682,3 @@\n-  CK_ULONG      ulWordsize;   \/* wordsize in bits *\/\n-  CK_ULONG      ulRounds;     \/* number of rounds *\/\n-  CK_ULONG      ulMacLength;  \/* Length of MAC in bytes *\/\n+    CK_ULONG ulWordsize;   \/* wordsize in bits *\/\n+    CK_ULONG ulRounds;     \/* number of rounds *\/\n+    CK_ULONG ulMacLength;  \/* Length of MAC in bytes *\/\n@@ -1485,1 +1688,1 @@\n-  CK_RC5_MAC_GENERAL_PARAMS_PTR;\n+        CK_RC5_MAC_GENERAL_PARAMS_PTR;\n@@ -1496,3 +1699,3 @@\n-  CK_BYTE      iv[8];\n-  CK_BYTE_PTR  pData;\n-  CK_ULONG     length;\n+    CK_BYTE     iv[8];\n+    CK_BYTE_PTR pData;\n+    CK_ULONG    length;\n@@ -1501,1 +1704,2 @@\n-typedef CK_DES_CBC_ENCRYPT_DATA_PARAMS CK_PTR CK_DES_CBC_ENCRYPT_DATA_PARAMS_PTR;\n+typedef CK_DES_CBC_ENCRYPT_DATA_PARAMS CK_PTR \\\n+        CK_DES_CBC_ENCRYPT_DATA_PARAMS_PTR;\n@@ -1504,3 +1708,3 @@\n-  CK_BYTE      iv[16];\n-  CK_BYTE_PTR  pData;\n-  CK_ULONG     length;\n+    CK_BYTE     iv[16];\n+    CK_BYTE_PTR pData;\n+    CK_ULONG    length;\n@@ -1509,1 +1713,2 @@\n-typedef CK_AES_CBC_ENCRYPT_DATA_PARAMS CK_PTR CK_AES_CBC_ENCRYPT_DATA_PARAMS_PTR;\n+typedef CK_AES_CBC_ENCRYPT_DATA_PARAMS CK_PTR \\\n+        CK_AES_CBC_ENCRYPT_DATA_PARAMS_PTR;\n@@ -1515,11 +1720,11 @@\n-  CK_ULONG      ulPasswordLen;\n-  CK_BYTE_PTR   pPassword;\n-  CK_ULONG      ulPublicDataLen;\n-  CK_BYTE_PTR   pPublicData;\n-  CK_ULONG      ulPAndGLen;\n-  CK_ULONG      ulQLen;\n-  CK_ULONG      ulRandomLen;\n-  CK_BYTE_PTR   pRandomA;\n-  CK_BYTE_PTR   pPrimeP;\n-  CK_BYTE_PTR   pBaseG;\n-  CK_BYTE_PTR   pSubprimeQ;\n+    CK_ULONG    ulPasswordLen;\n+    CK_BYTE_PTR pPassword;\n+    CK_ULONG    ulPublicDataLen;\n+    CK_BYTE_PTR pPublicData;\n+    CK_ULONG    ulPAndGLen;\n+    CK_ULONG    ulQLen;\n+    CK_ULONG    ulRandomLen;\n+    CK_BYTE_PTR pRandomA;\n+    CK_BYTE_PTR pPrimeP;\n+    CK_BYTE_PTR pBaseG;\n+    CK_BYTE_PTR pSubprimeQ;\n@@ -1529,1 +1734,1 @@\n-  CK_SKIPJACK_PRIVATE_WRAP_PARAMS_PTR;\n+        CK_SKIPJACK_PRIVATE_WRAP_PARAMS_PTR;\n@@ -1536,14 +1741,14 @@\n-  CK_ULONG      ulOldWrappedXLen;\n-  CK_BYTE_PTR   pOldWrappedX;\n-  CK_ULONG      ulOldPasswordLen;\n-  CK_BYTE_PTR   pOldPassword;\n-  CK_ULONG      ulOldPublicDataLen;\n-  CK_BYTE_PTR   pOldPublicData;\n-  CK_ULONG      ulOldRandomLen;\n-  CK_BYTE_PTR   pOldRandomA;\n-  CK_ULONG      ulNewPasswordLen;\n-  CK_BYTE_PTR   pNewPassword;\n-  CK_ULONG      ulNewPublicDataLen;\n-  CK_BYTE_PTR   pNewPublicData;\n-  CK_ULONG      ulNewRandomLen;\n-  CK_BYTE_PTR   pNewRandomA;\n+    CK_ULONG    ulOldWrappedXLen;\n+    CK_BYTE_PTR pOldWrappedX;\n+    CK_ULONG    ulOldPasswordLen;\n+    CK_BYTE_PTR pOldPassword;\n+    CK_ULONG    ulOldPublicDataLen;\n+    CK_BYTE_PTR pOldPublicData;\n+    CK_ULONG    ulOldRandomLen;\n+    CK_BYTE_PTR pOldRandomA;\n+    CK_ULONG    ulNewPasswordLen;\n+    CK_BYTE_PTR pNewPassword;\n+    CK_ULONG    ulNewPublicDataLen;\n+    CK_BYTE_PTR pNewPublicData;\n+    CK_ULONG    ulNewRandomLen;\n+    CK_BYTE_PTR pNewRandomA;\n@@ -1553,1 +1758,1 @@\n-  CK_SKIPJACK_RELAYX_PARAMS_PTR;\n+        CK_SKIPJACK_RELAYX_PARAMS_PTR;\n@@ -1557,6 +1762,6 @@\n-  CK_BYTE_PTR      pInitVector;\n-  CK_UTF8CHAR_PTR  pPassword;\n-  CK_ULONG         ulPasswordLen;\n-  CK_BYTE_PTR      pSalt;\n-  CK_ULONG         ulSaltLen;\n-  CK_ULONG         ulIteration;\n+    CK_BYTE_PTR     pInitVector;\n+    CK_UTF8CHAR_PTR pPassword;\n+    CK_ULONG        ulPasswordLen;\n+    CK_BYTE_PTR     pSalt;\n+    CK_ULONG        ulSaltLen;\n+    CK_ULONG        ulIteration;\n@@ -1572,3 +1777,3 @@\n-  CK_BYTE       bBC;     \/* block contents byte *\/\n-  CK_BYTE_PTR   pX;      \/* extra data *\/\n-  CK_ULONG      ulXLen;  \/* length of extra data in bytes *\/\n+    CK_BYTE     bBC;     \/* block contents byte *\/\n+    CK_BYTE_PTR pX;      \/* extra data *\/\n+    CK_ULONG    ulXLen;  \/* length of extra data in bytes *\/\n@@ -1580,4 +1785,4 @@\n-  CK_BYTE_PTR  pClientRandom;\n-  CK_ULONG     ulClientRandomLen;\n-  CK_BYTE_PTR  pServerRandom;\n-  CK_ULONG     ulServerRandomLen;\n+    CK_BYTE_PTR pClientRandom;\n+    CK_ULONG    ulClientRandomLen;\n+    CK_BYTE_PTR pServerRandom;\n+    CK_ULONG    ulServerRandomLen;\n@@ -1588,2 +1793,2 @@\n-  CK_SSL3_RANDOM_DATA RandomInfo;\n-  CK_VERSION_PTR pVersion;\n+    CK_SSL3_RANDOM_DATA RandomInfo;\n+    CK_VERSION_PTR      pVersion;\n@@ -1593,1 +1798,1 @@\n-  CK_SSL3_MASTER_KEY_DERIVE_PARAMS_PTR;\n+        CK_SSL3_MASTER_KEY_DERIVE_PARAMS_PTR;\n@@ -1596,6 +1801,6 @@\n-  CK_OBJECT_HANDLE hClientMacSecret;\n-  CK_OBJECT_HANDLE hServerMacSecret;\n-  CK_OBJECT_HANDLE hClientKey;\n-  CK_OBJECT_HANDLE hServerKey;\n-  CK_BYTE_PTR      pIVClient;\n-  CK_BYTE_PTR      pIVServer;\n+    CK_OBJECT_HANDLE hClientMacSecret;\n+    CK_OBJECT_HANDLE hServerMacSecret;\n+    CK_OBJECT_HANDLE hClientKey;\n+    CK_OBJECT_HANDLE hServerKey;\n+    CK_BYTE_PTR      pIVClient;\n+    CK_BYTE_PTR      pIVServer;\n@@ -1608,6 +1813,6 @@\n-  CK_ULONG                ulMacSizeInBits;\n-  CK_ULONG                ulKeySizeInBits;\n-  CK_ULONG                ulIVSizeInBits;\n-  CK_BBOOL                bIsExport;\n-  CK_SSL3_RANDOM_DATA     RandomInfo;\n-  CK_SSL3_KEY_MAT_OUT_PTR pReturnedKeyMaterial;\n+    CK_ULONG                ulMacSizeInBits;\n+    CK_ULONG                ulKeySizeInBits;\n+    CK_ULONG                ulIVSizeInBits;\n+    CK_BBOOL                bIsExport;\n+    CK_SSL3_RANDOM_DATA     RandomInfo;\n+    CK_SSL3_KEY_MAT_OUT_PTR pReturnedKeyMaterial;\n@@ -1619,6 +1824,6 @@\n-  CK_BYTE_PTR  pSeed;\n-  CK_ULONG     ulSeedLen;\n-  CK_BYTE_PTR  pLabel;\n-  CK_ULONG     ulLabelLen;\n-  CK_BYTE_PTR  pOutput;\n-  CK_ULONG_PTR pulOutputLen;\n+    CK_BYTE_PTR  pSeed;\n+    CK_ULONG     ulSeedLen;\n+    CK_BYTE_PTR  pLabel;\n+    CK_ULONG     ulLabelLen;\n+    CK_BYTE_PTR  pOutput;\n+    CK_ULONG_PTR pulOutputLen;\n@@ -1630,4 +1835,4 @@\n-  CK_BYTE_PTR pClientRandom;\n-  CK_ULONG    ulClientRandomLen;\n-  CK_BYTE_PTR pServerRandom;\n-  CK_ULONG    ulServerRandomLen;\n+    CK_BYTE_PTR pClientRandom;\n+    CK_ULONG    ulClientRandomLen;\n+    CK_BYTE_PTR pServerRandom;\n+    CK_ULONG    ulServerRandomLen;\n@@ -1639,3 +1844,3 @@\n-  CK_MECHANISM_TYPE   DigestMechanism;\n-  CK_WTLS_RANDOM_DATA RandomInfo;\n-  CK_BYTE_PTR         pVersion;\n+    CK_MECHANISM_TYPE   DigestMechanism;\n+    CK_WTLS_RANDOM_DATA RandomInfo;\n+    CK_BYTE_PTR         pVersion;\n@@ -1645,1 +1850,1 @@\n-  CK_WTLS_MASTER_KEY_DERIVE_PARAMS_PTR;\n+        CK_WTLS_MASTER_KEY_DERIVE_PARAMS_PTR;\n@@ -1648,7 +1853,7 @@\n-  CK_MECHANISM_TYPE DigestMechanism;\n-  CK_BYTE_PTR       pSeed;\n-  CK_ULONG          ulSeedLen;\n-  CK_BYTE_PTR       pLabel;\n-  CK_ULONG          ulLabelLen;\n-  CK_BYTE_PTR       pOutput;\n-  CK_ULONG_PTR      pulOutputLen;\n+    CK_MECHANISM_TYPE DigestMechanism;\n+    CK_BYTE_PTR       pSeed;\n+    CK_ULONG          ulSeedLen;\n+    CK_BYTE_PTR       pLabel;\n+    CK_ULONG          ulLabelLen;\n+    CK_BYTE_PTR       pOutput;\n+    CK_ULONG_PTR      pulOutputLen;\n@@ -1660,3 +1865,3 @@\n-  CK_OBJECT_HANDLE hMacSecret;\n-  CK_OBJECT_HANDLE hKey;\n-  CK_BYTE_PTR      pIV;\n+    CK_OBJECT_HANDLE hMacSecret;\n+    CK_OBJECT_HANDLE hKey;\n+    CK_BYTE_PTR      pIV;\n@@ -1668,8 +1873,8 @@\n-  CK_MECHANISM_TYPE       DigestMechanism;\n-  CK_ULONG                ulMacSizeInBits;\n-  CK_ULONG                ulKeySizeInBits;\n-  CK_ULONG                ulIVSizeInBits;\n-  CK_ULONG                ulSequenceNumber;\n-  CK_BBOOL                bIsExport;\n-  CK_WTLS_RANDOM_DATA     RandomInfo;\n-  CK_WTLS_KEY_MAT_OUT_PTR pReturnedKeyMaterial;\n+    CK_MECHANISM_TYPE       DigestMechanism;\n+    CK_ULONG                ulMacSizeInBits;\n+    CK_ULONG                ulKeySizeInBits;\n+    CK_ULONG                ulIVSizeInBits;\n+    CK_ULONG                ulSequenceNumber;\n+    CK_BBOOL                bIsExport;\n+    CK_WTLS_RANDOM_DATA     RandomInfo;\n+    CK_WTLS_KEY_MAT_OUT_PTR pReturnedKeyMaterial;\n@@ -1681,8 +1886,8 @@\n-  CK_OBJECT_HANDLE      certificateHandle;\n-  CK_MECHANISM_PTR      pSigningMechanism;\n-  CK_MECHANISM_PTR      pDigestMechanism;\n-  CK_UTF8CHAR_PTR       pContentType;\n-  CK_BYTE_PTR           pRequestedAttributes;\n-  CK_ULONG              ulRequestedAttributesLen;\n-  CK_BYTE_PTR           pRequiredAttributes;\n-  CK_ULONG              ulRequiredAttributesLen;\n+    CK_OBJECT_HANDLE certificateHandle;\n+    CK_MECHANISM_PTR pSigningMechanism;\n+    CK_MECHANISM_PTR pDigestMechanism;\n+    CK_UTF8CHAR_PTR  pContentType;\n+    CK_BYTE_PTR      pRequestedAttributes;\n+    CK_ULONG         ulRequestedAttributesLen;\n+    CK_BYTE_PTR      pRequiredAttributes;\n+    CK_ULONG         ulRequiredAttributesLen;\n@@ -1694,2 +1899,2 @@\n-  CK_BYTE_PTR pData;\n-  CK_ULONG    ulLen;\n+    CK_BYTE_PTR pData;\n+    CK_ULONG    ulLen;\n@@ -1699,1 +1904,1 @@\n-  CK_KEY_DERIVATION_STRING_DATA_PTR;\n+        CK_KEY_DERIVATION_STRING_DATA_PTR;\n@@ -1718,1 +1923,1 @@\n-                        CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE_PTR;\n+        CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE_PTR;\n@@ -1736,1 +1941,1 @@\n-                        CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE_PTR;\n+        CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE_PTR;\n@@ -1745,9 +1950,9 @@\n-        CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE           saltSource;\n-        CK_VOID_PTR                                pSaltSourceData;\n-        CK_ULONG                                   ulSaltSourceDataLen;\n-        CK_ULONG                                   iterations;\n-        CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE prf;\n-        CK_VOID_PTR                                pPrfData;\n-        CK_ULONG                                   ulPrfDataLen;\n-        CK_UTF8CHAR_PTR                            pPassword;\n-        CK_ULONG_PTR                               ulPasswordLen;\n+    CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE           saltSource;\n+    CK_VOID_PTR                                pSaltSourceData;\n+    CK_ULONG                                   ulSaltSourceDataLen;\n+    CK_ULONG                                   iterations;\n+    CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE prf;\n+    CK_VOID_PTR                                pPrfData;\n+    CK_ULONG                                   ulPrfDataLen;\n+    CK_UTF8CHAR_PTR                            pPassword;\n+    CK_ULONG_PTR                               ulPasswordLen;\n@@ -1763,9 +1968,9 @@\n-        CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE saltSource;\n-        CK_VOID_PTR pSaltSourceData;\n-        CK_ULONG ulSaltSourceDataLen;\n-        CK_ULONG iterations;\n-        CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE prf;\n-        CK_VOID_PTR pPrfData;\n-        CK_ULONG ulPrfDataLen;\n-        CK_UTF8CHAR_PTR pPassword;\n-        CK_ULONG ulPasswordLen;\n+    CK_PKCS5_PBKDF2_SALT_SOURCE_TYPE           saltSource;\n+    CK_VOID_PTR                                pSaltSourceData;\n+    CK_ULONG                                   ulSaltSourceDataLen;\n+    CK_ULONG                                   iterations;\n+    CK_PKCS5_PBKD2_PSEUDO_RANDOM_FUNCTION_TYPE prf;\n+    CK_VOID_PTR                                pPrfData;\n+    CK_ULONG                                   ulPrfDataLen;\n+    CK_UTF8CHAR_PTR                            pPassword;\n+    CK_ULONG                                   ulPasswordLen;\n@@ -1781,2 +1986,2 @@\n-    CK_VOID_PTR pValue;\n-    CK_ULONG ulValueLen;\n+    CK_VOID_PTR       pValue;\n+    CK_ULONG          ulValueLen;\n@@ -1789,1 +1994,1 @@\n-    CK_ULONG ulCount;\n+    CK_ULONG         ulCount;\n@@ -1796,1 +2001,1 @@\n-    CK_ULONG ulCount;\n+    CK_ULONG         ulCount;\n@@ -1818,4 +2023,4 @@\n-    CK_MECHANISM_PTR  pMechanism;\n-    CK_OBJECT_HANDLE  hKey;\n-    CK_BYTE_PTR       pSeed;\n-    CK_ULONG          ulSeedLen;\n+    CK_MECHANISM_PTR pMechanism;\n+    CK_OBJECT_HANDLE hKey;\n+    CK_BYTE_PTR      pSeed;\n+    CK_ULONG         ulSeedLen;\n@@ -1828,1 +2033,1 @@\n-    CK_BYTE cb[16];\n+    CK_BYTE  cb[16];\n@@ -1834,6 +2039,6 @@\n-    CK_BYTE_PTR       pIv;\n-    CK_ULONG          ulIvLen;\n-    CK_ULONG          ulIvBits;\n-    CK_BYTE_PTR       pAAD;\n-    CK_ULONG          ulAADLen;\n-    CK_ULONG          ulTagBits;\n+    CK_BYTE_PTR pIv;\n+    CK_ULONG    ulIvLen;\n+    CK_ULONG    ulIvBits;\n+    CK_BYTE_PTR pAAD;\n+    CK_ULONG    ulAADLen;\n+    CK_ULONG    ulTagBits;\n@@ -1844,0 +2049,17 @@\n+typedef CK_ULONG CK_GENERATOR_FUNCTION;\n+#define CKG_NO_GENERATE      0x00000000UL\n+#define CKG_GENERATE         0x00000001UL\n+#define CKG_GENERATE_COUNTER 0x00000002UL\n+#define CKG_GENERATE_RANDOM  0x00000003UL\n+\n+typedef struct CK_GCM_MESSAGE_PARAMS {\n+    CK_BYTE_PTR           pIv;\n+    CK_ULONG              ulIvLen;\n+    CK_ULONG              ulIvFixedBits;\n+    CK_GENERATOR_FUNCTION ivGenerator;\n+    CK_BYTE_PTR           pTag;\n+    CK_ULONG              ulTagBits;\n+} CK_GCM_MESSAGE_PARAMS;\n+\n+typedef CK_GCM_MESSAGE_PARAMS CK_GCM_MESSAGE_PARAMS_PTR;\n+\n@@ -1845,6 +2067,6 @@\n-    CK_ULONG          ulDataLen;\n-    CK_BYTE_PTR       pNonce;\n-    CK_ULONG          ulNonceLen;\n-    CK_BYTE_PTR       pAAD;\n-    CK_ULONG          ulAADLen;\n-    CK_ULONG          ulMACLen;\n+    CK_ULONG    ulDataLen;\n+    CK_BYTE_PTR pNonce;\n+    CK_ULONG    ulNonceLen;\n+    CK_BYTE_PTR pAAD;\n+    CK_ULONG    ulAADLen;\n+    CK_ULONG    ulMACLen;\n@@ -1855,0 +2077,12 @@\n+typedef struct CK_CCM_MESSAGE_PARAMS {\n+    CK_ULONG              ulDataLen; \/*plaintext or ciphertext*\/\n+    CK_BYTE_PTR           pNonce;\n+    CK_ULONG              ulNonceLen;\n+    CK_ULONG              ulNonceFixedBits;\n+    CK_GENERATOR_FUNCTION nonceGenerator;\n+    CK_BYTE_PTR           pMAC;\n+    CK_ULONG              ulMACLen;\n+} CK_CCM_MESSAGE_PARAMS;\n+\n+typedef CK_CCM_MESSAGE_PARAMS CK_CCM_MESSAGE_PARAMS_PTR;\n+\n@@ -1857,6 +2091,6 @@\n-  CK_BYTE_PTR pIv;\n-  CK_ULONG ulIvLen;\n-  CK_ULONG ulIvBits;\n-  CK_BYTE_PTR pAAD;\n-  CK_ULONG ulAADLen;\n-  CK_ULONG ulTagBits;\n+    CK_BYTE_PTR pIv;\n+    CK_ULONG    ulIvLen;\n+    CK_ULONG    ulIvBits;\n+    CK_BYTE_PTR pAAD;\n+    CK_ULONG    ulAADLen;\n+    CK_ULONG    ulTagBits;\n@@ -1869,6 +2103,6 @@\n-    CK_ULONG          ulDataLen;\n-    CK_BYTE_PTR       pNonce;\n-    CK_ULONG          ulNonceLen;\n-    CK_BYTE_PTR       pAAD;\n-    CK_ULONG          ulAADLen;\n-    CK_ULONG          ulMACLen;\n+    CK_ULONG    ulDataLen;\n+    CK_BYTE_PTR pNonce;\n+    CK_ULONG    ulNonceLen;\n+    CK_BYTE_PTR pAAD;\n+    CK_ULONG    ulAADLen;\n+    CK_ULONG    ulMACLen;\n@@ -1880,2 +2114,2 @@\n-    CK_ULONG          ulCounterBits;\n-    CK_BYTE           cb[16];\n+    CK_ULONG ulCounterBits;\n+    CK_BYTE  cb[16];\n@@ -1887,3 +2121,3 @@\n-    CK_BYTE           iv[16];\n-    CK_BYTE_PTR       pData;\n-    CK_ULONG          length;\n+    CK_BYTE     iv[16];\n+    CK_BYTE_PTR pData;\n+    CK_ULONG    length;\n@@ -1893,1 +2127,1 @@\n-                                CK_CAMELLIA_CBC_ENCRYPT_DATA_PARAMS_PTR;\n+        CK_CAMELLIA_CBC_ENCRYPT_DATA_PARAMS_PTR;\n@@ -1896,3 +2130,3 @@\n-    CK_BYTE           iv[16];\n-    CK_BYTE_PTR       pData;\n-    CK_ULONG          length;\n+    CK_BYTE     iv[16];\n+    CK_BYTE_PTR pData;\n+    CK_ULONG    length;\n@@ -1902,1 +2136,1 @@\n-                                CK_ARIA_CBC_ENCRYPT_DATA_PARAMS_PTR;\n+        CK_ARIA_CBC_ENCRYPT_DATA_PARAMS_PTR;\n@@ -1905,4 +2139,4 @@\n-    CK_MECHANISM_TYPE  hash;\n-    CK_BYTE_PTR        pSeed;\n-    CK_ULONG           ulSeedLen;\n-    CK_ULONG           ulIndex;\n+    CK_MECHANISM_TYPE hash;\n+    CK_BYTE_PTR       pSeed;\n+    CK_ULONG          ulSeedLen;\n+    CK_ULONG          ulIndex;\n@@ -1914,4 +2148,4 @@\n-    CK_ULONG           ulAESKeyBits;\n-    CK_EC_KDF_TYPE     kdf;\n-    CK_ULONG           ulSharedDataLen;\n-    CK_BYTE_PTR        pSharedData;\n+    CK_ULONG       ulAESKeyBits;\n+    CK_EC_KDF_TYPE kdf;\n+    CK_ULONG       ulSharedDataLen;\n+    CK_BYTE_PTR    pSharedData;\n@@ -1927,2 +2161,2 @@\n-    CK_ULONG                      ulAESKeyBits;\n-    CK_RSA_PKCS_OAEP_PARAMS_PTR   pOAEPParams;\n+    CK_ULONG                    ulAESKeyBits;\n+    CK_RSA_PKCS_OAEP_PARAMS_PTR pOAEPParams;\n@@ -1934,3 +2168,3 @@\n-    CK_SSL3_RANDOM_DATA       RandomInfo;\n-    CK_VERSION_PTR            pVersion;\n-    CK_MECHANISM_TYPE         prfHashMechanism;\n+    CK_SSL3_RANDOM_DATA RandomInfo;\n+    CK_VERSION_PTR      pVersion;\n+    CK_MECHANISM_TYPE   prfHashMechanism;\n@@ -1940,1 +2174,1 @@\n-                                CK_TLS12_MASTER_KEY_DERIVE_PARAMS_PTR;\n+        CK_TLS12_MASTER_KEY_DERIVE_PARAMS_PTR;\n@@ -1943,7 +2177,7 @@\n-    CK_ULONG                  ulMacSizeInBits;\n-    CK_ULONG                  ulKeySizeInBits;\n-    CK_ULONG                  ulIVSizeInBits;\n-    CK_BBOOL                  bIsExport;\n-    CK_SSL3_RANDOM_DATA       RandomInfo;\n-    CK_SSL3_KEY_MAT_OUT_PTR   pReturnedKeyMaterial;\n-    CK_MECHANISM_TYPE         prfHashMechanism;\n+    CK_ULONG                ulMacSizeInBits;\n+    CK_ULONG                ulKeySizeInBits;\n+    CK_ULONG                ulIVSizeInBits;\n+    CK_BBOOL                bIsExport;\n+    CK_SSL3_RANDOM_DATA     RandomInfo;\n+    CK_SSL3_KEY_MAT_OUT_PTR pReturnedKeyMaterial;\n+    CK_MECHANISM_TYPE       prfHashMechanism;\n@@ -1955,6 +2189,6 @@\n-    CK_MECHANISM_TYPE         prfMechanism;\n-    CK_BYTE_PTR               pLabel;\n-    CK_ULONG                  ulLabelLength;\n-    CK_SSL3_RANDOM_DATA       RandomInfo;\n-    CK_BYTE_PTR               pContextData;\n-    CK_ULONG                  ulContextDataLength;\n+    CK_MECHANISM_TYPE   prfMechanism;\n+    CK_BYTE_PTR         pLabel;\n+    CK_ULONG            ulLabelLength;\n+    CK_SSL3_RANDOM_DATA RandomInfo;\n+    CK_BYTE_PTR         pContextData;\n+    CK_ULONG            ulContextDataLength;\n@@ -1966,3 +2200,3 @@\n-    CK_MECHANISM_TYPE         prfHashMechanism;\n-    CK_ULONG                  ulMacLength;\n-    CK_ULONG                  ulServerOrClient;\n+    CK_MECHANISM_TYPE prfHashMechanism;\n+    CK_ULONG          ulMacLength;\n+    CK_ULONG          ulServerOrClient;\n@@ -1974,5 +2208,5 @@\n-    CK_EC_KDF_TYPE            kdf;\n-    CK_BYTE_PTR               pPublicData;\n-    CK_ULONG                  ulPublicDataLen;\n-    CK_BYTE_PTR               pUKM;\n-    CK_ULONG                  ulUKMLen;\n+    CK_EC_KDF_TYPE kdf;\n+    CK_BYTE_PTR    pPublicData;\n+    CK_ULONG       ulPublicDataLen;\n+    CK_BYTE_PTR    pUKM;\n+    CK_ULONG       ulUKMLen;\n@@ -1984,5 +2218,5 @@\n-    CK_BYTE_PTR               pWrapOID;\n-    CK_ULONG                  ulWrapOIDLen;\n-    CK_BYTE_PTR               pUKM;\n-    CK_ULONG                  ulUKMLen;\n-    CK_OBJECT_HANDLE          hKey;\n+    CK_BYTE_PTR      pWrapOID;\n+    CK_ULONG         ulWrapOIDLen;\n+    CK_BYTE_PTR      pUKM;\n+    CK_ULONG         ulUKMLen;\n+    CK_OBJECT_HANDLE hKey;\n@@ -1994,3 +2228,3 @@\n-    CK_BYTE                   iv[16];\n-    CK_BYTE_PTR               pData;\n-    CK_ULONG                  length;\n+    CK_BYTE     iv[16];\n+    CK_BYTE_PTR pData;\n+    CK_ULONG    length;\n@@ -2000,1 +2234,1 @@\n-                                        CK_SEED_CBC_ENCRYPT_DATA_PARAMS_PTR;\n+        CK_SEED_CBC_ENCRYPT_DATA_PARAMS_PTR;\n@@ -2002,1 +2236,206 @@\n-#endif \/* _PKCS11T_H_ *\/\n+\/*\n+ * New PKCS 11 v3.0 data structures.\n+ *\/\n+\n+typedef CK_ULONG CK_PROFILE_ID;\n+typedef CK_PROFILE_ID CK_PTR CK_PROFILE_ID_PTR;\n+\n+\/* Typedefs for Flexible KDF *\/\n+typedef CK_ULONG CK_PRF_DATA_TYPE;\n+typedef CK_MECHANISM_TYPE CK_SP800_108_PRF_TYPE;\n+#define CK_SP800_108_ITERATION_VARIABLE 0x00000001UL\n+#define CK_SP800_108_OPTIONAL_COUNTER   0x00000002UL\n+#define CK_SP800_108_DKM_LENGTH         0x00000003UL\n+#define CK_SP800_108_BYTE_ARRAY         0x00000004UL\n+#define CK_SP800_108_COUNTER            CK_SP800_108_OPTIONAL_COUNTER\n+\n+typedef struct CK_PRF_DATA_PARAM\n+{\n+    CK_PRF_DATA_TYPE type;\n+    CK_VOID_PTR      pValue;\n+    CK_ULONG         ulValueLen;\n+} CK_PRF_DATA_PARAM;\n+\n+typedef CK_PRF_DATA_PARAM CK_PTR CK_PRF_DATA_PARAM_PTR;\n+\n+\n+typedef struct CK_SP800_108_COUNTER_FORMAT\n+{\n+    CK_BBOOL bLittleEndian;\n+    CK_ULONG ulWidthInBits;\n+} CK_SP800_108_COUNTER_FORMAT;\n+\n+typedef CK_SP800_108_COUNTER_FORMAT CK_PTR CK_SP800_108_COUNTER_FORMAT_PTR;\n+\n+typedef CK_ULONG CK_SP800_108_DKM_LENGTH_METHOD;\n+#define CK_SP800_108_DKM_LENGTH_SUM_OF_KEYS     0x00000001UL\n+#define CK_SP800_108_DKM_LENGTH_SUM_OF_SEGMENTS 0x00000002UL\n+\n+typedef struct CK_SP800_108_DKM_LENGTH_FORMAT\n+{\n+    CK_SP800_108_DKM_LENGTH_METHOD dkmLengthMethod;\n+    CK_BBOOL                       bLittleEndian;\n+    CK_ULONG                       ulWidthInBits;\n+} CK_SP800_108_DKM_LENGTH_FORMAT;\n+\n+typedef CK_SP800_108_DKM_LENGTH_FORMAT \\\n+        CK_PTR CK_SP800_108_DKM_LENGTH_FORMAT_PTR;\n+\n+typedef struct CK_DERIVED_KEY\n+{\n+    CK_ATTRIBUTE_PTR     pTemplate;\n+    CK_ULONG             ulAttributeCount;\n+    CK_OBJECT_HANDLE_PTR phKey;\n+} CK_DERIVED_KEY;\n+\n+typedef CK_DERIVED_KEY CK_PTR CK_DERIVED_KEY_PTR;\n+\n+typedef struct CK_SP800_108_KDF_PARAMS\n+{\n+    CK_SP800_108_PRF_TYPE prfType;\n+    CK_ULONG              ulNumberOfDataParams;\n+    CK_PRF_DATA_PARAM_PTR pDataParams;\n+    CK_ULONG              ulAdditionalDerivedKeys;\n+    CK_DERIVED_KEY_PTR    pAdditionalDerivedKeys;\n+} CK_SP800_108_KDF_PARAMS;\n+\n+typedef CK_SP800_108_KDF_PARAMS CK_PTR CK_SP800_108_KDF_PARAMS_PTR;\n+\n+typedef struct CK_SP800_108_FEEDBACK_KDF_PARAMS\n+{\n+    CK_SP800_108_PRF_TYPE prfType;\n+    CK_ULONG              ulNumberOfDataParams;\n+    CK_PRF_DATA_PARAM_PTR pDataParams;\n+    CK_ULONG              ulIVLen;\n+    CK_BYTE_PTR           pIV;\n+    CK_ULONG              ulAdditionalDerivedKeys;\n+    CK_DERIVED_KEY_PTR    pAdditionalDerivedKeys;\n+} CK_SP800_108_FEEDBACK_KDF_PARAMS;\n+\n+typedef CK_SP800_108_FEEDBACK_KDF_PARAMS \\\n+        CK_PTR CK_SP800_108_FEEDBACK_KDF_PARAMS_PTR;\n+\n+\/* EDDSA *\/\n+typedef struct CK_EDDSA_PARAMS {\n+    CK_BBOOL    phFlag;\n+    CK_ULONG    ulContextDataLen;\n+    CK_BYTE_PTR pContextData;\n+} CK_EDDSA_PARAMS;\n+\n+typedef CK_EDDSA_PARAMS CK_PTR CK_EDDSA_PARAMS_PTR;\n+\n+\/* Extended ChaCha20\/Salsa20 support*\/\n+typedef struct CK_CHACHA20_PARAMS {\n+    CK_BYTE_PTR pBlockCounter;\n+    CK_ULONG    blockCounterBits;\n+    CK_BYTE_PTR pNonce;\n+    CK_ULONG    ulNonceBits;\n+} CK_CHACHA20_PARAMS;\n+\n+typedef CK_CHACHA20_PARAMS CK_PTR CK_CHACHA20_PARAMS_PTR;\n+\n+typedef struct CK_SALSA20_PARAMS {\n+    CK_BYTE_PTR pBlockCounter;\n+    CK_BYTE_PTR pNonce;\n+    CK_ULONG    ulNonceBits;\n+} CK_SALSA20_PARAMS;\n+\n+typedef CK_SALSA20_PARAMS CK_PTR CK_SALSA20_PARAMS_PTR;\n+\n+typedef struct CK_SALSA20_CHACHA20_POLY1305_PARAMS {\n+    CK_BYTE_PTR pNonce;\n+    CK_ULONG    ulNonceLen;\n+    CK_BYTE_PTR pAAD;\n+    CK_ULONG    ulAADLen;\n+} CK_SALSA20_CHACHA20_POLY1305_PARAMS;\n+\n+typedef CK_SALSA20_CHACHA20_POLY1305_PARAMS \\\n+        CK_PTR CK_SALSA20_CHACHA20_POLY1305_PARAMS_PTR;\n+\n+typedef struct CK_SALSA20_CHACHA20_POLY1305_MSG_PARAMS {\n+    CK_BYTE_PTR pNonce;\n+    CK_ULONG    ulNonceLen;\n+    CK_BYTE_PTR pTag;\n+} CK_SALSA20_CHACHA20_POLY1305_MSG_PARAMS;\n+\n+typedef CK_SALSA20_CHACHA20_POLY1305_MSG_PARAMS \\\n+        CK_PTR CK_SALSA20_CHACHA20_POLY1305_MSG_PARAMS_PTR;\n+\n+typedef CK_ULONG CK_X3DH_KDF_TYPE;\n+typedef CK_X3DH_KDF_TYPE CK_PTR CK_X3DH_KDF_TYPE_PTR;\n+\n+\/* X3dh, ratchet *\/\n+typedef struct CK_X3DH_INITIATE_PARAMS {\n+    CK_X3DH_KDF_TYPE kdf;\n+    CK_OBJECT_HANDLE pPeer_identity;\n+    CK_OBJECT_HANDLE pPeer_prekey;\n+    CK_BYTE_PTR      pPrekey_signature;\n+    CK_BYTE_PTR      pOnetime_key;\n+    CK_OBJECT_HANDLE pOwn_identity;\n+    CK_OBJECT_HANDLE pOwn_ephemeral;\n+} CK_X3DH_INITIATE_PARAMS;\n+\n+typedef struct CK_X3DH_RESPOND_PARAMS {\n+    CK_X3DH_KDF_TYPE kdf;\n+    CK_BYTE_PTR      pIdentity_id;\n+    CK_BYTE_PTR      pPrekey_id;\n+    CK_BYTE_PTR      pOnetime_id;\n+    CK_OBJECT_HANDLE pInitiator_identity;\n+    CK_BYTE_PTR      pInitiator_ephemeral;\n+} CK_X3DH_RESPOND_PARAMS;\n+\n+typedef CK_ULONG CK_X2RATCHET_KDF_TYPE;\n+typedef CK_X2RATCHET_KDF_TYPE CK_PTR CK_X2RATCHET_KDF_TYPE_PTR;\n+\n+typedef struct CK_X2RATCHET_INITIALIZE_PARAMS {\n+    CK_BYTE_PTR           sk;\n+    CK_OBJECT_HANDLE      peer_public_prekey;\n+    CK_OBJECT_HANDLE      peer_public_identity;\n+    CK_OBJECT_HANDLE      own_public_identity;\n+    CK_BBOOL              bEncryptedHeader;\n+    CK_ULONG              eCurve;\n+    CK_MECHANISM_TYPE     aeadMechanism;\n+    CK_X2RATCHET_KDF_TYPE kdfMechanism;\n+} CK_X2RATCHET_INITIALIZE_PARAMS;\n+\n+typedef CK_X2RATCHET_INITIALIZE_PARAMS \\\n+        CK_PTR CK_X2RATCHET_INITIALIZE_PARAMS_PTR;\n+\n+typedef struct CK_X2RATCHET_RESPOND_PARAMS {\n+    CK_BYTE_PTR           sk;\n+    CK_OBJECT_HANDLE      own_prekey;\n+    CK_OBJECT_HANDLE      initiator_identity;\n+    CK_OBJECT_HANDLE      own_public_identity;\n+    CK_BBOOL              bEncryptedHeader;\n+    CK_ULONG              eCurve;\n+    CK_MECHANISM_TYPE     aeadMechanism;\n+    CK_X2RATCHET_KDF_TYPE kdfMechanism;\n+} CK_X2RATCHET_RESPOND_PARAMS;\n+typedef CK_X2RATCHET_RESPOND_PARAMS \\\n+        CK_PTR CK_X2RATCHET_RESPOND_PARAMS_PTR;\n+\n+typedef CK_ULONG CK_XEDDSA_HASH_TYPE;\n+typedef CK_XEDDSA_HASH_TYPE CK_PTR CK_XEDDSA_HASH_TYPE_PTR;\n+\n+\/* XEDDSA *\/\n+typedef struct CK_XEDDSA_PARAMS {\n+    CK_XEDDSA_HASH_TYPE hash;\n+} CK_XEDDSA_PARAMS;\n+typedef CK_XEDDSA_PARAMS CK_PTR CK_XEDDSA_PARAMS_PTR;\n+\n+typedef struct CK_HKDF_PARAMS {\n+    CK_BBOOL          bExtract;\n+    CK_BBOOL          bExpand;\n+    CK_MECHANISM_TYPE prfHashMechanism;\n+    CK_ULONG          ulSaltType;\n+    CK_BYTE_PTR       pSalt;\n+    CK_ULONG          ulSaltLen;\n+    CK_OBJECT_HANDLE  hSaltKey;\n+    CK_BYTE_PTR       pInfo;\n+    CK_ULONG          ulInfoLen;\n+} CK_HKDF_PARAMS;\n+typedef CK_HKDF_PARAMS CK_PTR CK_HKDF_PARAMS_PTR;\n+\n+#define CKF_HKDF_SALT_NULL   0x00000001UL\n+#define CKF_HKDF_SALT_DATA   0x00000002UL\n+#define CKF_HKDF_SALT_KEY    0x00000004UL\n@@ -2004,0 +2443,1 @@\n+#endif \/* _PKCS11T_H_ *\/\n","filename":"src\/jdk.crypto.cryptoki\/share\/native\/libj2pkcs11\/pkcs11t.h","additions":802,"deletions":362,"binary":false,"changes":1164,"status":"modified"}]}