{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.awt.EventQueue;\n@@ -30,0 +31,1 @@\n+import java.awt.Robot;\n@@ -31,1 +33,1 @@\n-import javax.swing.SwingUtilities;\n+import java.awt.event.KeyEvent;\n@@ -37,3 +39,1 @@\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @run main\/manual FunctionKeyTest\n+ * @key headful\n@@ -43,8 +43,0 @@\n-    private static final String INSTRUCTIONS = \"\"\"\n-            Press and release function keys F11 and F12.\n-            Look at the test window:\n-               On KeyPress:   'e.id=403' is printed\n-               On KeyRelease: 'e.id=404' is printed\n-            If the above is true, then click Pass, else click Fail.\n-            \"\"\";\n-\n@@ -52,0 +44,1 @@\n+    private static Robot robot;\n@@ -53,1 +46,2 @@\n-    public static void main(String[] args) throws Exception {\n+    static volatile boolean keyPressReceived;\n+    static volatile boolean keyReleaseReceived;\n@@ -55,7 +49,1 @@\n-        PassFailJFrame passFailJFrame = new PassFailJFrame.Builder()\n-                .title(\"FunctionKeyTest Instructions Frame\")\n-                .instructions(INSTRUCTIONS)\n-                .testTimeOut(5)\n-                .rows(10)\n-                .columns(45)\n-                .build();\n+    static final StringBuilder failures = new StringBuilder();\n@@ -63,2 +51,3 @@\n-        SwingUtilities.invokeAndWait(() -> {\n-            frame = new FunctionKeyTester();\n+    private static void testKey(int keyCode, String keyText) {\n+        keyPressReceived = false;\n+        keyReleaseReceived = false;\n@@ -66,3 +55,1 @@\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame\n-                    .positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+        robot.keyPress(keyCode);\n@@ -70,2 +57,3 @@\n-            frame.setVisible(true);\n-        });\n+        if (!keyPressReceived) {\n+            failures.append(keyText).append(\" key press is not received\\n\");\n+        }\n@@ -73,1 +61,1 @@\n-        Thread.sleep(500);\n+        robot.keyRelease(keyCode);\n@@ -75,1 +63,4 @@\n-        SwingUtilities.invokeAndWait(() -> frame.requestFocus());\n+        if (!keyReleaseReceived) {\n+            failures.append(keyText).append(\" key release is not received\\n\");\n+        }\n+    }\n@@ -77,1 +68,31 @@\n-        passFailJFrame.awaitAndCheck();\n+    public static void main(String[] args) throws Exception {\n+        robot = new Robot();\n+        robot.setAutoWaitForIdle(true);\n+        robot.setAutoDelay(150);\n+\n+        try {\n+            EventQueue.invokeAndWait(() -> {\n+                frame = new FunctionKeyTester();\n+                frame.setSize(200, 200);\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+\n+            testKey(KeyEvent.VK_F11, \"F11\");\n+            testKey(KeyEvent.VK_F12, \"F12\");\n+        } finally {\n+            EventQueue.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+\n+        if (failures.isEmpty()) {\n+            System.out.println(\"Passed\");\n+        } else {\n+            throw new RuntimeException(failures.toString());\n+        }\n@@ -82,1 +103,0 @@\n-\n@@ -104,0 +124,5 @@\n+        switch (e.id) {\n+            case 403 -> FunctionKeyTest.keyPressReceived = true;\n+            case 404 -> FunctionKeyTest.keyReleaseReceived = true;\n+        }\n+\n","filename":"test\/jdk\/java\/awt\/event\/KeyEvent\/FunctionKeyTest.java","additions":56,"deletions":31,"binary":false,"changes":87,"status":"modified"}]}