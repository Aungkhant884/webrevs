{"files":[{"patch":"@@ -233,1 +233,1 @@\n-  \/\/ the refcount in G1CardSetContainerOnHeap.\n+  \/\/ the refcount in G1CardSetContainer.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1Arguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-    G1CardSetContainerOnHeap* card_set = (G1CardSetContainerOnHeap*)value;\n+    G1CardSetContainer* card_set = (G1CardSetContainer*)value;\n@@ -376,1 +376,1 @@\n-    G1CardSetContainerOnHeap* card_set_on_heap = (G1CardSetContainerOnHeap*)strip_card_set_type(card_set);\n+    G1CardSetContainer* card_set_on_heap = (G1CardSetContainer*)strip_card_set_type(card_set);\n@@ -391,1 +391,1 @@\n-  G1CardSetContainerOnHeap* card_set_on_heap = (G1CardSetContainerOnHeap*)strip_card_set_type(card_set);\n+  G1CardSetContainer* card_set_on_heap = (G1CardSetContainer*)strip_card_set_type(card_set);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -113,1 +113,1 @@\n-class G1CardSetContainerOnHeap {\n+class G1CardSetContainer {\n@@ -116,1 +116,1 @@\n-    G1CardSetContainerOnHeap* _next;\n+    G1CardSetContainer* _next;\n@@ -121,1 +121,1 @@\n-  G1CardSetContainerOnHeap() : _ref_count(3) { }\n+  G1CardSetContainer() : _ref_count(3) { }\n@@ -131,1 +131,1 @@\n-  G1CardSetContainerOnHeap* next() {\n+  G1CardSetContainer* next() {\n@@ -135,1 +135,1 @@\n-  G1CardSetContainerOnHeap** next_addr() {\n+  G1CardSetContainer** next_addr() {\n@@ -139,1 +139,1 @@\n-  void set_next(G1CardSetContainerOnHeap* next) {\n+  void set_next(G1CardSetContainer* next) {\n@@ -144,1 +144,1 @@\n-class G1CardSetArray : public G1CardSetContainerOnHeap {\n+class G1CardSetArray : public G1CardSetContainer {\n@@ -199,1 +199,1 @@\n-class G1CardSetBitMap : public G1CardSetContainerOnHeap {\n+class G1CardSetBitMap : public G1CardSetContainer {\n@@ -235,1 +235,1 @@\n-class G1CardSetHowl : public G1CardSetContainerOnHeap {\n+class G1CardSetHowl : public G1CardSetContainer {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetContainers.hpp","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -102,1 +102,1 @@\n-inline bool G1CardSetContainerOnHeap::try_increment_refcount() {\n+inline bool G1CardSetContainer::try_increment_refcount() {\n@@ -118,1 +118,1 @@\n-inline uintptr_t G1CardSetContainerOnHeap::decrement_refcount() {\n+inline uintptr_t G1CardSetContainer::decrement_refcount() {\n@@ -125,1 +125,1 @@\n-  G1CardSetContainerOnHeap(),\n+  G1CardSetContainer(),\n@@ -209,1 +209,1 @@\n-  G1CardSetContainerOnHeap(), _num_bits_set(1) {\n+  G1CardSetContainer(), _num_bits_set(1) {\n@@ -240,1 +240,1 @@\n-  G1CardSetContainerOnHeap(),\n+  G1CardSetContainer(),\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetContainers.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -123,1 +123,1 @@\n-  assert(elem_size() >= sizeof(G1CardSetContainerOnHeap), \"Element instance size %u for allocator %s too small\",\n+  assert(elem_size() >= sizeof(G1CardSetContainer), \"Element instance size %u for allocator %s too small\",\n@@ -138,1 +138,1 @@\n-  G1CardSetContainerOnHeap* first = _pending_nodes_list.pop_all();\n+  G1CardSetContainer* first = _pending_nodes_list.pop_all();\n@@ -142,1 +142,1 @@\n-    G1CardSetContainerOnHeap* last = first;\n+    G1CardSetContainer* last = first;\n@@ -146,1 +146,1 @@\n-    for (G1CardSetContainerOnHeap* next = first->next(); next != nullptr; next = next->next()) {\n+    for (G1CardSetContainer* next = first->next(); next != nullptr; next = next->next()) {\n@@ -167,1 +167,1 @@\n-  assert(elem_size() >= sizeof(G1CardSetContainerOnHeap), \"size mismatch\");\n+  assert(elem_size() >= sizeof(G1CardSetContainer), \"size mismatch\");\n@@ -179,1 +179,1 @@\n-  G1CardSetContainerOnHeap* node =  reinterpret_cast<G1CardSetContainerOnHeap*>(reinterpret_cast<char*>(elem));\n+  G1CardSetContainer* node =  reinterpret_cast<G1CardSetContainer*>(reinterpret_cast<char*>(elem));\n@@ -411,1 +411,1 @@\n-  _allocators = NEW_C_HEAP_ARRAY(G1CardSetAllocator<G1CardSetContainerOnHeap>,\n+  _allocators = NEW_C_HEAP_ARRAY(G1CardSetAllocator<G1CardSetContainer>,\n@@ -416,3 +416,3 @@\n-    new (&_allocators[i]) G1CardSetAllocator<G1CardSetContainerOnHeap>(_config->mem_object_type_name_str(i),\n-                                                                       alloc_options[i],\n-                                                                       free_list_pool->free_list(i));\n+    new (&_allocators[i]) G1CardSetAllocator<G1CardSetContainer>(_config->mem_object_type_name_str(i),\n+                                                                 alloc_options[i],\n+                                                                 free_list_pool->free_list(i));\n@@ -432,1 +432,1 @@\n-  FREE_C_HEAP_ARRAY(G1CardSetAllocator<G1CardSetContainerOnHeap>, _allocators);\n+  FREE_C_HEAP_ARRAY(G1CardSetAllocator<G1CardSetContainer>, _allocators);\n@@ -437,1 +437,1 @@\n-  _allocators[type].free((G1CardSetContainerOnHeap*)value);\n+  _allocators[type].free((G1CardSetContainer*)value);\n@@ -459,1 +459,1 @@\n-    (sizeof(G1CardSetAllocator<G1CardSetContainerOnHeap>) * num_mem_object_types()) +\n+    (sizeof(G1CardSetAllocator<G1CardSetContainer>) * num_mem_object_types()) +\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -163,1 +163,1 @@\n-\/\/ Allocation and deallocation in the first phase on G1CardSetContainerOnHeap basis\n+\/\/ Allocation and deallocation in the first phase on G1CardSetContainer basis\n@@ -166,1 +166,1 @@\n-\/\/ Allocation occurs from an internal free list of G1CardSetContainerOnHeaps first,\n+\/\/ Allocation occurs from an internal free list of G1CardSetContainers first,\n@@ -171,1 +171,1 @@\n-\/\/ The G1CardSetContainerOnHeaps free list is a linked list of G1CardSetContainerOnHeaps\n+\/\/ The G1CardSetContainerOnHeaps free list is a linked list of G1CardSetContainers\n@@ -199,1 +199,1 @@\n-  \/\/ G1CardSetContainerOnHeap node management within the G1CardSetBuffers allocated\n+  \/\/ G1CardSetContainer node management within the G1CardSetBuffers allocated\n@@ -202,2 +202,2 @@\n-  static G1CardSetContainerOnHeap* volatile* next_ptr(G1CardSetContainerOnHeap& node);\n-  typedef LockFreeStack<G1CardSetContainerOnHeap, &next_ptr> NodeStack;\n+  static G1CardSetContainer* volatile* next_ptr(G1CardSetContainer& node);\n+  typedef LockFreeStack<G1CardSetContainer, &next_ptr> NodeStack;\n@@ -357,1 +357,1 @@\n-  G1CardSetAllocator<G1CardSetContainerOnHeap>* _allocators;\n+  G1CardSetAllocator<G1CardSetContainer>* _allocators;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.hpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-G1CardSetContainerOnHeap* volatile* G1CardSetAllocator<Elem>::next_ptr(G1CardSetContainerOnHeap& node) {\n+G1CardSetContainer* volatile* G1CardSetAllocator<Elem>::next_ptr(G1CardSetContainer& node) {\n@@ -82,1 +82,1 @@\n-    G1CardSetContainerOnHeap* node = _free_nodes_list.pop();\n+    G1CardSetContainer* node = _free_nodes_list.pop();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}