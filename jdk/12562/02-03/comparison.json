{"files":[{"patch":"@@ -160,1 +160,9 @@\n-      SymbolTable::item_removed();\n+    } else {\n+      MutexLocker ml(SymbolArena_lock, Mutex::_no_safepoint_check_flag); \/\/ Protect arena\n+      \/\/ Deleting permanent symbol should not occur very often (insert race condition),\n+      \/\/ so log it.\n+      log_trace_symboltable_helper(&value, \"Freeing permanent symbol\");\n+      size_t alloc_size = _local_table->get_node_size() + value.byte_size() + value.effective_length();\n+      if (!SymbolTable::arena()->Afree(memory, alloc_size)) {\n+        log_trace_symboltable_helper(&value, \"Leaked permanent symbol\");\n+      }\n@@ -162,0 +170,1 @@\n+    SymbolTable::item_removed();\n","filename":"src\/hotspot\/share\/classfile\/symbolTable.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"}]}