{"files":[{"patch":"@@ -48,1 +48,1 @@\n-    private Hashtable<String, MimeEntry> entries = new Hashtable<>();\n+    private final Hashtable<String, MimeEntry> entries = new Hashtable<>();\n@@ -51,1 +51,1 @@\n-    private Hashtable<String, MimeEntry> extensionMap = new Hashtable<>();\n+    private final Hashtable<String, MimeEntry> extensionMap = new Hashtable<>();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/MimeTable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-    private static HashMap<String,Void> proxiedHosts = new HashMap<>();\n+    private static final HashMap<String,Void> proxiedHosts = new HashMap<>();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/URLConnection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    private HttpClient hc;\n+    private final HttpClient hc;\n@@ -59,1 +59,1 @@\n-    private MessageHeader responses;\n+    private final MessageHeader responses;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/ChunkedInputStream.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -49,1 +49,1 @@\n-    private byte buf[];\n+    private final byte[] buf;\n@@ -62,3 +62,3 @@\n-    private int preferredChunkDataSize;\n-    private int preferedHeaderSize;\n-    private int preferredChunkGrossSize;\n+    private final int preferredChunkDataSize;\n+    private final int preferedHeaderSize;\n+    private final int preferredChunkGrossSize;\n@@ -66,1 +66,1 @@\n-    private byte[] completeHeader;\n+    private final byte[] completeHeader;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/ChunkedOutputStream.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -59,1 +59,1 @@\n-    private File file;\n+    private final File file;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/HttpCapture.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-    protected static KeepAliveCache kac = new KeepAliveCache();\n+    protected static final KeepAliveCache kac = new KeepAliveCache();\n@@ -103,1 +103,1 @@\n-    private static boolean keepAliveProp = true;\n+    private static final boolean keepAliveProp;\n@@ -107,1 +107,1 @@\n-    private static boolean retryPostProp = true;\n+    private static final boolean retryPostProp;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/HttpClient.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-    protected static int MAX_DATA_REMAINING = 512;\n+    protected static final int MAX_DATA_REMAINING;\n@@ -57,1 +57,1 @@\n-    protected static int MAX_CAPACITY = 10;\n+    protected static final int MAX_CAPACITY;\n@@ -71,1 +71,1 @@\n-                    return NetProperties.getInteger(maxDataKey, MAX_DATA_REMAINING);\n+                    return NetProperties.getInteger(maxDataKey, 512);\n@@ -80,1 +80,1 @@\n-                    return NetProperties.getInteger(maxCapacityKey, MAX_CAPACITY);\n+                    return NetProperties.getInteger(maxCapacityKey, 10);\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/http\/KeepAliveStreamCleaner.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,4 @@\n-    static String CONTENT_LENGTH = \"content-length\";\n-    static String CONTENT_TYPE = \"content-type\";\n-    static String TEXT_PLAIN = \"text\/plain\";\n-    static String LAST_MODIFIED = \"last-modified\";\n+    private static final String CONTENT_LENGTH = \"content-length\";\n+    private static final String CONTENT_TYPE = \"content-type\";\n+    private static final String TEXT_PLAIN = \"text\/plain\";\n+    private static final String LAST_MODIFIED = \"last-modified\";\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/file\/FileURLConnection.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1994, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1994, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,4 +26,0 @@\n-\/**\n- * FTP stream opener.\n- *\/\n-\n@@ -87,1 +83,1 @@\n-    private Proxy instProxy;\n+    private final Proxy instProxy;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/ftp\/FtpURLConnection.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    static String authPref=null;\n+    private static final String authPref;\n@@ -101,1 +101,1 @@\n-        authPref = GetPropertyAction.privilegedGetProperty(\"http.auth.preference\");\n+        String pref = GetPropertyAction.privilegedGetProperty(\"http.auth.preference\");\n@@ -109,4 +109,4 @@\n-        if (authPref != null) {\n-            authPref = authPref.toLowerCase(Locale.ROOT);\n-            if(authPref.equals(\"spnego\") || authPref.equals(\"kerberos\")) {\n-                authPref = \"negotiate\";\n+        if (pref != null) {\n+            pref = pref.toLowerCase(Locale.ROOT);\n+            if (pref.equals(\"spnego\") || pref.equals(\"kerberos\")) {\n+                pref = \"negotiate\";\n@@ -115,0 +115,1 @@\n+        authPref = pref;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/AuthenticationHeader.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -174,5 +174,1 @@\n-        private static Random   random;\n-\n-        static {\n-            random = new Random();\n-        }\n+        private static final Random random = new Random();\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/DigestAuthentication.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -165,1 +165,1 @@\n-    private static boolean enableESBuffer = false;\n+    private static final boolean enableESBuffer;\n@@ -169,1 +169,1 @@\n-    private static int timeout4ESBuffer = 0;\n+    private static final int timeout4ESBuffer;\n@@ -173,1 +173,1 @@\n-    private static int bufSize4ES = 0;\n+    private static final int bufSize4ES;\n@@ -267,1 +267,1 @@\n-        timeout4ESBuffer = GetIntegerAction.privilegedGetProperty(\n+        int esBufferTimeout = GetIntegerAction.privilegedGetProperty(\n@@ -269,2 +269,2 @@\n-        if (timeout4ESBuffer <= 0) {\n-            timeout4ESBuffer = 300; \/\/ use the default\n+        if (esBufferTimeout <= 0) {\n+            esBufferTimeout = 300; \/\/ use the default\n@@ -272,0 +272,1 @@\n+        timeout4ESBuffer = esBufferTimeout;\n@@ -273,1 +274,1 @@\n-        bufSize4ES = GetIntegerAction.privilegedGetProperty(\n+        int esBufSize = GetIntegerAction.privilegedGetProperty(\n@@ -275,2 +276,2 @@\n-        if (bufSize4ES <= 0) {\n-            bufSize4ES = 4096; \/\/ use the default\n+        if (esBufSize <= 0) {\n+            esBufSize = 4096; \/\/ use the default\n@@ -278,0 +279,1 @@\n+        bufSize4ES = esBufSize;\n@@ -352,1 +354,1 @@\n-    private MessageHeader userHeaders;\n+    private final MessageHeader userHeaders;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/http\/HttpURLConnection.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -249,1 +249,1 @@\n-        private JarEntry je;\n+        private final JarEntry je;\n","filename":"src\/java.base\/share\/classes\/sun\/net\/www\/protocol\/jar\/URLJarFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}