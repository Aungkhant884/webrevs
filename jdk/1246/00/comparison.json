{"files":[{"patch":"@@ -243,0 +243,3 @@\n+\/\/ The max output buffer size for output line including tags.\n+const size_t MAX_LOGGING_BUFFER_SIZE = 4096;\n+\n","filename":"src\/hotspot\/share\/logging\/logTag.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -110,2 +110,1 @@\n-const size_t vwrite_buffer_size = 512;\n-\n+\/\/ The output will be truncated if it is bigger than  MAX_LOGGING_BUFFER_SIZE.\n@@ -114,1 +113,1 @@\n-  char buf[vwrite_buffer_size];\n+  char buf[MAX_LOGGING_BUFFER_SIZE];\n@@ -118,3 +117,3 @@\n-  \/\/ Check that string fits in buffer; resize buffer if necessary\n-  int ret;\n-  if (prefix_len < vwrite_buffer_size) {\n+  assert(prefix_len < MAX_LOGGING_BUFFER_SIZE, \"Prefix is over vwrite_buffer_size\");\n+  if (prefix_len < MAX_LOGGING_BUFFER_SIZE) {\n+    int ret;\n@@ -122,10 +121,0 @@\n-  } else {\n-    \/\/ Buffer too small. Just call printf to find out the length for realloc below.\n-    ret = os::vsnprintf(buf, sizeof(buf), fmt, args);\n-  }\n-  assert(ret >= 0, \"Log message buffer issue\");\n-  if ((size_t)ret >= sizeof(buf)) {\n-    size_t newbuf_len = prefix_len + ret + 1;\n-    char* newbuf = NEW_C_HEAP_ARRAY(char, newbuf_len, mtLogging);\n-    prefix_len = _write_prefix(newbuf, newbuf_len);\n-    ret = os::vsnprintf(newbuf + prefix_len, newbuf_len - prefix_len, fmt, saved_args);\n@@ -133,4 +122,0 @@\n-    log(level, newbuf);\n-    FREE_C_HEAP_ARRAY(char, newbuf);\n-  } else {\n-    log(level, buf);\n@@ -138,0 +123,1 @@\n+  log(level, buf);\n","filename":"src\/hotspot\/share\/logging\/logTagSet.cpp","additions":6,"deletions":20,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -52,0 +52,2 @@\n+\/\/ The max logging buffer size is efined in logTag.hpp\n+\/\/ The part above that will be ignored.\n@@ -53,1 +55,1 @@\n-  char big_msg[4096] = {0};\n+  char big_msg[MAX_LOGGING_BUFFER_SIZE + 1024] = {0};\n@@ -69,1 +71,1 @@\n-  EXPECT_EQ(sizeof(big_msg) - 1, count);\n+  EXPECT_EQ(MAX_LOGGING_BUFFER_SIZE - 1, count);\n","filename":"test\/hotspot\/gtest\/logging\/test_log.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}