{"files":[{"patch":"@@ -2171,0 +2171,9 @@\n+  if (_heap_pointers_need_patching) {\n+    char* bitmap_base = map_bitmap_region();\n+    if (bitmap_base == NULL) {\n+      log_info(cds)(\"CDS heap cannot be used because bitmap region cannot be mapped\");\n+      _heap_pointers_need_patching = false;\n+      return;\n+    }\n+  }\n+\n@@ -2300,3 +2309,1 @@\n-  if (bitmap_base == NULL) {\n-    return;\n-  }\n+  assert(bitmap_base != NULL, \"must have already been mapped\");\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -1682,0 +1682,4 @@\n+  if (bitmap_base == 0) {\n+    _loading_failed = true;\n+    return false; \/\/ OOM or CRC error\n+  }\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,0 +83,8 @@\n+        for (String opt : execArgs) {\n+          if (opt.equals(\"-XX:+VerifySharedSpaces\")) {\n+            \/\/ If VerifySharedSpaces is enabled, the VM should never crash even if the archive\n+            \/\/ is corrupted (unless if we are so lucky that the corrupted archive ends up\n+            \/\/ have the same checksum as recoreded in the header)\n+            output.shouldNotContain(\"A fatal error has been detected by the Java Runtime Environment\");\n+          }\n+        }\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}