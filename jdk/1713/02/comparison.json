{"files":[{"patch":"@@ -541,0 +541,14 @@\n+  \/\/ debugging support\n+  \/\/ tracing\n+  if (log_is_enabled(Info, exceptions)) {\n+    ResourceMark rm;\n+    stringStream tempst;\n+    assert(nm->method() != NULL, \"Unexpected NULL method()\");\n+    tempst.print(\"C1 compiled method <%s>\\n\"\n+                 \" at PC\" INTPTR_FORMAT \" for thread \" INTPTR_FORMAT,\n+                 nm->method()->print_value_string(), p2i(pc), p2i(thread));\n+    Exceptions::log_exception(exception, tempst.as_string());\n+  }\n+  \/\/ for AbortVMOnException flag\n+  Exceptions::debug_check_abort(exception);\n+\n@@ -587,14 +601,0 @@\n-    \/\/ debugging support\n-    \/\/ tracing\n-    if (log_is_enabled(Info, exceptions)) {\n-      ResourceMark rm;\n-      stringStream tempst;\n-      assert(nm->method() != NULL, \"Unexpected NULL method()\");\n-      tempst.print(\"compiled method <%s>\\n\"\n-                   \" at PC\" INTPTR_FORMAT \" for thread \" INTPTR_FORMAT,\n-                   nm->method()->print_value_string(), p2i(pc), p2i(thread));\n-      Exceptions::log_exception(exception, tempst.as_string());\n-    }\n-    \/\/ for AbortVMOnException flag\n-    Exceptions::debug_check_abort(exception);\n-\n","filename":"src\/hotspot\/share\/c1\/c1_Runtime1.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -270,0 +270,14 @@\n+  \/\/ debugging support\n+  \/\/ tracing\n+  if (log_is_enabled(Info, exceptions)) {\n+    ResourceMark rm;\n+    stringStream tempst;\n+    assert(cm->method() != NULL, \"Unexpected null method()\");\n+    tempst.print(\"JVMCI compiled method <%s>\\n\"\n+                 \" at PC\" INTPTR_FORMAT \" for thread \" INTPTR_FORMAT,\n+                 cm->method()->print_value_string(), p2i(pc), p2i(thread));\n+    Exceptions::log_exception(exception, tempst.as_string());\n+  }\n+  \/\/ for AbortVMOnException flag\n+  Exceptions::debug_check_abort(exception);\n+\n@@ -316,14 +330,0 @@\n-    \/\/ debugging support\n-    \/\/ tracing\n-    if (log_is_enabled(Info, exceptions)) {\n-      ResourceMark rm;\n-      stringStream tempst;\n-      assert(cm->method() != NULL, \"Unexpected null method()\");\n-      tempst.print(\"compiled method <%s>\\n\"\n-                   \" at PC\" INTPTR_FORMAT \" for thread \" INTPTR_FORMAT,\n-                   cm->method()->print_value_string(), p2i(pc), p2i(thread));\n-      Exceptions::log_exception(exception, tempst.as_string());\n-    }\n-    \/\/ for AbortVMOnException flag\n-    NOT_PRODUCT(Exceptions::debug_check_abort(exception));\n-\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -1734,0 +1734,12 @@\n+  vframe* vf = vframe::new_vframe(&caller_frame, &reg_map, thread);\n+  compiledVFrame* cvf = compiledVFrame::cast(vf);\n+  ScopeDesc* imm_scope = cvf->scope();\n+  MethodData* imm_mdo = get_method_data(thread, methodHandle(thread, imm_scope->method()), true);\n+  if (imm_mdo != NULL) {\n+    ProfileData* pdata = imm_mdo->allocate_bci_to_data(imm_scope->bci(), NULL);\n+    if (pdata != NULL && pdata->is_BitData()) {\n+      BitData* bit_data = (BitData*) pdata;\n+      bit_data->set_exception_seen();\n+    }\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -602,0 +602,22 @@\n+\n+#if INCLUDE_JVMCI\n+  if (EnableJVMCI && UseJVMCICompiler) {\n+    vframeStream vfst(thread, true);\n+    methodHandle method = methodHandle(thread, vfst.method());\n+    int bci = vfst.bci();\n+    MethodData* trap_mdo = method->method_data();\n+    if (trap_mdo != NULL) {\n+      \/\/ Set exception_seen if the exceptional bytecode is an invoke\n+      Bytecode_invoke call = Bytecode_invoke_check(method, bci);\n+      if (call.is_valid()) {\n+        ResourceMark rm(thread);\n+        ProfileData* pdata = trap_mdo->allocate_bci_to_data(bci, NULL);\n+        if (pdata != NULL && pdata->is_BitData()) {\n+          BitData* bit_data = (BitData*) pdata;\n+          bit_data->set_exception_seen();\n+        }\n+      }\n+    }\n+  }\n+#endif\n+\n","filename":"src\/hotspot\/share\/runtime\/sharedRuntime.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"}]}