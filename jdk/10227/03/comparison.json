{"files":[{"patch":"@@ -265,1 +265,1 @@\n-    __ push_vp(_vp_regs, sp);\n+    __ push_v(_vp_regs, sp);\n@@ -270,1 +270,1 @@\n-    __ pop_vp(_vp_regs, sp);\n+    __ pop_v(_vp_regs, sp);\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zBarrierSetAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -918,1 +918,1 @@\n-  push_reg(0xc00, sp); \/\/ save x10, x11\n+  push_reg(RegSet::of(x10, x11), sp); \/\/ save x10, x11\n@@ -931,1 +931,1 @@\n-  pop_reg(0xc00, sp);\n+  pop_reg(RegSet::of(x10, x11), sp);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -949,1 +949,1 @@\n-\/\/ Push lots of registers in the bit set supplied.  Don't push sp.\n+\/\/ Push lots of registers in the bitset supplied.  Don't push sp.\n@@ -961,1 +961,1 @@\n-    addi(stack, stack, - count * wordSize - offset);\n+    addi(stack, stack, -count * wordSize - offset);\n@@ -965,1 +965,1 @@\n-    DEBUG_ONLY(words_pushed ++;)\n+    DEBUG_ONLY(words_pushed++;)\n@@ -984,1 +984,1 @@\n-    DEBUG_ONLY(words_popped ++;)\n+    DEBUG_ONLY(words_popped++;)\n@@ -995,2 +995,2 @@\n-\/\/ Push float registers in the bitset, except sp.\n-\/\/ Return the number of heapwords pushed.\n+\/\/ Push floating-point registers in the bitset supplied.\n+\/\/ Return the number of words pushed\n@@ -999,1 +999,1 @@\n-  int words_pushed = 0;\n+  DEBUG_ONLY(int words_pushed = 0;)\n@@ -1010,1 +1010,1 @@\n-    words_pushed++;\n+    DEBUG_ONLY(words_pushed++;)\n@@ -1014,0 +1014,1 @@\n+\n@@ -1019,1 +1020,1 @@\n-  int words_popped = 0;\n+  DEBUG_ONLY(int words_popped = 0;)\n@@ -1026,1 +1027,1 @@\n-    words_popped++;\n+    DEBUG_ONLY(words_popped++;)\n@@ -1034,0 +1035,1 @@\n+\n@@ -1038,1 +1040,3 @@\n-int MacroAssembler::push_vp(unsigned int bitset, Register stack) {\n+\/\/ Push vector registers in the bitset supplied.\n+\/\/ Return the number of words pushed\n+int MacroAssembler::push_v(unsigned int bitset, Register stack) {\n@@ -1044,7 +1048,1 @@\n-  int count = 0;\n-  for (int reg = 31; reg >= 0; reg--) {\n-    if ((1U << 31) & bitset) {\n-      regs[count++] = reg;\n-    }\n-    bitset <<= 1;\n-  }\n+  int count = bitset_to_regs(bitset, regs);\n@@ -1060,1 +1058,1 @@\n-int MacroAssembler::pop_vp(unsigned int bitset, Register stack) {\n+int MacroAssembler::pop_v(unsigned int bitset, Register stack) {\n@@ -1066,7 +1064,1 @@\n-  int count = 0;\n-  for (int reg = 31; reg >= 0; reg--) {\n-    if ((1U << 31) & bitset) {\n-      regs[count++] = reg;\n-    }\n-    bitset <<= 1;\n-  }\n+  int count = bitset_to_regs(bitset, regs);\n@@ -1093,1 +1085,1 @@\n-      fsd(as_FloatRegister(i), Address(sp, wordSize * (offset ++)));\n+      fsd(as_FloatRegister(i), Address(sp, wordSize * (offset++)));\n@@ -1103,1 +1095,1 @@\n-      fld(as_FloatRegister(i), Address(sp, wordSize * (offset ++)));\n+      fld(as_FloatRegister(i), Address(sp, wordSize * (offset++)));\n@@ -1114,1 +1106,1 @@\n-  push_reg(0xffffffe0, sp);\n+  push_reg(RegSet::range(x5, x31), sp);\n@@ -1151,1 +1143,1 @@\n-  pop_reg(0xffffffe0, sp);\n+  pop_reg(RegSet::range(x5, x31), sp);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":22,"deletions":30,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -476,2 +476,11 @@\n-  void push_reg(RegSet regs, Register stack) { if (regs.bits()) { push_reg(regs.bits(), stack); } }\n-  void pop_reg(RegSet regs, Register stack) { if (regs.bits()) { pop_reg(regs.bits(), stack); } }\n+private:\n+  int push_reg(unsigned int bitset, Register stack);\n+  int pop_reg(unsigned int bitset, Register stack);\n+  int push_fp(unsigned int bitset, Register stack);\n+  int pop_fp(unsigned int bitset, Register stack);\n+#ifdef COMPILER2\n+  int push_v(unsigned int bitset, Register stack);\n+  int pop_v(unsigned int bitset, Register stack);\n+#endif \/\/ COMPILER2\n+\n+public:\n@@ -480,2 +489,2 @@\n-  int  push_reg(unsigned int bitset, Register stack);\n-  int  pop_reg(unsigned int bitset, Register stack);\n+  void push_reg(RegSet regs, Register stack) { if (regs.bits()) push_reg(regs.bits(), stack); }\n+  void pop_reg(RegSet regs, Register stack)  { if (regs.bits()) pop_reg(regs.bits(), stack); }\n@@ -483,1 +492,1 @@\n-  void pop_fp(FloatRegSet regs, Register stack) { if (regs.bits()) pop_fp(regs.bits(), stack); }\n+  void pop_fp(FloatRegSet regs, Register stack)  { if (regs.bits()) pop_fp(regs.bits(), stack); }\n@@ -485,2 +494,2 @@\n-  void push_vp(VectorRegSet regs, Register stack) { if (regs.bits()) push_vp(regs.bits(), stack); }\n-  void pop_vp(VectorRegSet regs, Register stack) { if (regs.bits()) pop_vp(regs.bits(), stack); }\n+  void push_v(VectorRegSet regs, Register stack) { if (regs.bits()) push_v(regs.bits(), stack); }\n+  void pop_v(VectorRegSet regs, Register stack)  { if (regs.bits()) pop_v(regs.bits(), stack); }\n@@ -786,6 +795,0 @@\n-  int push_fp(unsigned int bitset, Register stack);\n-  int pop_fp(unsigned int bitset, Register stack);\n-\n-  int push_vp(unsigned int bitset, Register stack);\n-  int pop_vp(unsigned int bitset, Register stack);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":16,"deletions":13,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -602,1 +602,1 @@\n-    __ push_reg(0x3000, sp);   \/\/ save c_rarg2 and c_rarg3\n+    __ push_reg(RegSet::of(c_rarg2, c_rarg3), sp); \/\/ save c_rarg2 and c_rarg3\n@@ -638,1 +638,1 @@\n-    __ pop_reg(0x3000, sp);   \/\/ pop c_rarg2 and c_rarg3\n+    __ pop_reg(RegSet::of(c_rarg2, c_rarg3), sp);  \/\/ pop c_rarg2 and c_rarg3\n@@ -643,1 +643,1 @@\n-    __ pop_reg(0x3000, sp);   \/\/ pop c_rarg2 and c_rarg3\n+    __ pop_reg(RegSet::of(c_rarg2, c_rarg3), sp); \/\/ pop c_rarg2 and c_rarg3\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}