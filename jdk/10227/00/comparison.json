{"files":[{"patch":"@@ -918,1 +918,1 @@\n-  push_reg(0xc00, sp); \/\/ save x10, x11\n+  push_reg(RegSet::of(x10, x11), sp); \/\/ save x10, x11\n@@ -931,1 +931,1 @@\n-  pop_reg(0xc00, sp);\n+  pop_reg(RegSet::of(x10, x11), sp);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -949,3 +949,2 @@\n-\/\/ Push lots of registers in the bit set supplied.  Don't push sp.\n-\/\/ Return the number of words pushed\n-int MacroAssembler::push_reg(unsigned int bitset, Register stack) {\n+\/\/ Push lots of registers in the regset supplied.  Don't push sp.\n+void MacroAssembler::push_reg(RegSet regset, Register stack) {\n@@ -956,1 +955,1 @@\n-  int count = bitset_to_regs(bitset, regs);\n+  int count = bitset_to_regs(regset.bits(), regs);\n@@ -961,1 +960,1 @@\n-    addi(stack, stack, - count * wordSize - offset);\n+    addi(stack, stack, -count * wordSize - offset);\n@@ -965,1 +964,1 @@\n-    DEBUG_ONLY(words_pushed ++;)\n+    DEBUG_ONLY(words_pushed++;)\n@@ -969,2 +968,0 @@\n-\n-  return count;\n@@ -973,1 +970,1 @@\n-int MacroAssembler::pop_reg(unsigned int bitset, Register stack) {\n+void MacroAssembler::pop_reg(RegSet regset, Register stack) {\n@@ -978,1 +975,1 @@\n-  int count = bitset_to_regs(bitset, regs);\n+  int count = bitset_to_regs(regset.bits(), regs);\n@@ -984,1 +981,1 @@\n-    DEBUG_ONLY(words_popped ++;)\n+    DEBUG_ONLY(words_popped++;)\n@@ -991,2 +988,0 @@\n-\n-  return count;\n@@ -995,3 +990,2 @@\n-\/\/ Push float registers in the bitset, except sp.\n-\/\/ Return the number of heapwords pushed.\n-int MacroAssembler::push_fp(unsigned int bitset, Register stack) {\n+\/\/ Push float registers in the regset\n+void MacroAssembler::push_fp(FloatRegSet regset, Register stack) {\n@@ -999,1 +993,1 @@\n-  int words_pushed = 0;\n+  DEBUG_ONLY(int words_pushed = 0;)\n@@ -1001,1 +995,1 @@\n-  int count = bitset_to_regs(bitset, regs);\n+  int count = bitset_to_regs(regset.bits(), regs);\n@@ -1010,1 +1004,1 @@\n-    words_pushed++;\n+    DEBUG_ONLY(words_pushed++;)\n@@ -1014,1 +1008,0 @@\n-  return count;\n@@ -1017,1 +1010,1 @@\n-int MacroAssembler::pop_fp(unsigned int bitset, Register stack) {\n+void MacroAssembler::pop_fp(FloatRegSet regset, Register stack) {\n@@ -1019,1 +1012,1 @@\n-  int words_popped = 0;\n+  DEBUG_ONLY(int words_popped = 0;)\n@@ -1021,1 +1014,1 @@\n-  int count = bitset_to_regs(bitset, regs);\n+  int count = bitset_to_regs(regset.bits(), regs);\n@@ -1026,1 +1019,1 @@\n-    words_popped++;\n+    DEBUG_ONLY(words_popped++;)\n@@ -1034,1 +1027,0 @@\n-  return count;\n@@ -1038,1 +1030,1 @@\n-int MacroAssembler::push_vp(unsigned int bitset, Register stack) {\n+void MacroAssembler::push_vp(VectorRegSet regset, Register stack) {\n@@ -1044,7 +1036,1 @@\n-  int count = 0;\n-  for (int reg = 31; reg >= 0; reg--) {\n-    if ((1U << 31) & bitset) {\n-      regs[count++] = reg;\n-    }\n-    bitset <<= 1;\n-  }\n+  int count = bitset_to_regs(regset.bits(), regs);\n@@ -1056,2 +1042,0 @@\n-\n-  return count * vector_size_in_bytes \/ wordSize;\n@@ -1060,1 +1044,1 @@\n-int MacroAssembler::pop_vp(unsigned int bitset, Register stack) {\n+void MacroAssembler::pop_vp(VectorRegSet regset, Register stack) {\n@@ -1066,7 +1050,1 @@\n-  int count = 0;\n-  for (int reg = 31; reg >= 0; reg--) {\n-    if ((1U << 31) & bitset) {\n-      regs[count++] = reg;\n-    }\n-    bitset <<= 1;\n-  }\n+  int count = bitset_to_regs(regset.bits(), regs);\n@@ -1078,2 +1056,0 @@\n-\n-  return count * vector_size_in_bytes \/ wordSize;\n@@ -1093,1 +1069,1 @@\n-      fsd(as_FloatRegister(i), Address(sp, wordSize * (offset ++)));\n+      fsd(as_FloatRegister(i), Address(sp, wordSize * (offset++)));\n@@ -1103,1 +1079,1 @@\n-      fld(as_FloatRegister(i), Address(sp, wordSize * (offset ++)));\n+      fld(as_FloatRegister(i), Address(sp, wordSize * (offset++)));\n@@ -1114,1 +1090,1 @@\n-  push_reg(0xffffffe0, sp);\n+  push_reg(RegSet::range(x5, x31), sp);\n@@ -1151,1 +1127,1 @@\n-  pop_reg(0xffffffe0, sp);\n+  pop_reg(RegSet::range(x5, x31), sp);\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":25,"deletions":49,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -476,2 +476,0 @@\n-  void push_reg(RegSet regs, Register stack) { if (regs.bits()) { push_reg(regs.bits(), stack); } }\n-  void pop_reg(RegSet regs, Register stack) { if (regs.bits()) { pop_reg(regs.bits(), stack); } }\n@@ -480,4 +478,4 @@\n-  int  push_reg(unsigned int bitset, Register stack);\n-  int  pop_reg(unsigned int bitset, Register stack);\n-  void push_fp(FloatRegSet regs, Register stack) { if (regs.bits()) push_fp(regs.bits(), stack); }\n-  void pop_fp(FloatRegSet regs, Register stack) { if (regs.bits()) pop_fp(regs.bits(), stack); }\n+  void push_reg(RegSet regset, Register stack);\n+  void pop_reg(RegSet regset, Register stack);\n+  void push_fp(FloatRegSet regset, Register stack);\n+  void pop_fp(FloatRegSet regset, Register stack);\n@@ -485,2 +483,2 @@\n-  void push_vp(VectorRegSet regs, Register stack) { if (regs.bits()) push_vp(regs.bits(), stack); }\n-  void pop_vp(VectorRegSet regs, Register stack) { if (regs.bits()) pop_vp(regs.bits(), stack); }\n+  void push_vp(VectorRegSet regset, Register stack);\n+  void pop_vp(VectorRegSet regset, Register stack);\n@@ -786,6 +784,0 @@\n-  int push_fp(unsigned int bitset, Register stack);\n-  int pop_fp(unsigned int bitset, Register stack);\n-\n-  int push_vp(unsigned int bitset, Register stack);\n-  int pop_vp(unsigned int bitset, Register stack);\n-\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -602,1 +602,1 @@\n-    __ push_reg(0x3000, sp);   \/\/ save c_rarg2 and c_rarg3\n+    __ push_reg(RegSet::of(c_rarg2, c_rarg3), sp); \/\/ save c_rarg2 and c_rarg3\n@@ -638,1 +638,1 @@\n-    __ pop_reg(0x3000, sp);   \/\/ pop c_rarg2 and c_rarg3\n+    __ pop_reg(RegSet::of(c_rarg2, c_rarg3), sp);  \/\/ pop c_rarg2 and c_rarg3\n@@ -643,1 +643,1 @@\n-    __ pop_reg(0x3000, sp);   \/\/ pop c_rarg2 and c_rarg3\n+    __ pop_reg(RegSet::of(c_rarg2, c_rarg3), sp); \/\/ pop c_rarg2 and c_rarg3\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}