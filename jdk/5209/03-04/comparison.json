{"files":[{"patch":"@@ -51,0 +51,2 @@\n+import jdk.test.lib.RandomFactory;\n+\n@@ -53,0 +55,3 @@\n+ * @library \/test\/lib\n+ * @build jdk.test.lib.RandomFactory\n+ * @run main TransferTo\n@@ -59,0 +64,6 @@\n+\tprivate static final int MIN_SIZE      = 10_000;\n+    private static final int MAX_SIZE_INCR = 100_000_000 - MIN_SIZE;\n+\n+    private static final int ITERATIONS = 10;\n+\n+\tprivate static final Random RND = RandomFactory.getRandom();\n@@ -91,0 +102,7 @@\n+\n+        \/\/ randomly chosen starting point within source\n+        for (int i = 0; i < ITERATIONS; i++) {\n+            byte[] inBytes = createRandomBytes(MIN_SIZE, MAX_SIZE_INCR);\n+            int posIn = RND.nextInt(inBytes.length);\n+            checkTransferredContents(inputStreamProvider, outputStreamProvider, inBytes, posIn);\n+        }\n@@ -95,0 +113,5 @@\n+        checkTransferredContents(inputStreamProvider, outputStreamProvider, inBytes, 0);\n+    }\n+\n+    private static void checkTransferredContents(InputStreamProvider inputStreamProvider,\n+            OutputStreamProvider outputStreamProvider, byte[] inBytes, int posIn) throws Exception {\n@@ -98,1 +121,8 @@\n-            in.transferTo(out);\n+            in.readNBytes(posIn); \/\/ skip bytes till starting point\n+            long reported = in.transferTo(out);\n+\n+            int count = inBytes.length - posIn;\n+\n+            if (reported != count)\n+                throw new AssertionError(\n+                        format(\"reported %d bytes but should report %d\", reported, count));\n@@ -102,1 +132,1 @@\n-            if (!Arrays.equals(inBytes, outBytes))\n+            if (!Arrays.equals(inBytes, posIn, posIn + count, outBytes, 0, count))\n@@ -104,1 +134,1 @@\n-                        format(\"bytes.length=%s, outBytes.length=%s\", inBytes.length, outBytes.length));\n+                        format(\"bytes.length=%s, outBytes.length=%s\", count, outBytes.length));\n@@ -109,3 +139,2 @@\n-        Random rnd = new Random();\n-        byte[] bytes = new byte[min + rnd.nextInt(maxRandomAdditive)];\n-        rnd.nextBytes(bytes);\n+        byte[] bytes = new byte[min + RND.nextInt(maxRandomAdditive)];\n+        RND.nextBytes(bytes);\n","filename":"test\/jdk\/sun\/nio\/ch\/ChannelInputStream\/TransferTo.java","additions":35,"deletions":6,"binary":false,"changes":41,"status":"modified"}]}