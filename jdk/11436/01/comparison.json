{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n@@ -33,5 +28,0 @@\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -42,1 +32,1 @@\n-public class SctpChannelImpl extends SctpChannel\n+public final class SctpChannelImpl extends UnsupportedSctpChannelImpl\n@@ -44,2 +34,0 @@\n-    private static final String message = \"SCTP not supported on this platform\";\n-\n@@ -48,74 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Association association() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bind(SocketAddress local)\n-                            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote, int maxOutStreams,\n-       int maxInStreams) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean isConnectionPending() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean finishConnect() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel shutdown() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpChannel setOption(SctpSocketOption<T> name, T value)\n-        throws IOException {\n-        throw new UnsupportedOperationException(message);\n@@ -124,26 +38,0 @@\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer dst, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer src, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":2,"deletions":114,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n@@ -33,6 +28,0 @@\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpMultiChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -43,3 +32,1 @@\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpMultiChannelImpl extends UnsupportedSctpMultiChannelImpl {\n@@ -49,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -52,85 +38,0 @@\n-    @Override\n-    public Set<Association> associations() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses\n-            (Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel shutdown(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name,\n-            Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n-            T value, Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer buffer, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer buffer, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel branch(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":2,"deletions":101,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,4 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n@@ -32,3 +28,0 @@\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpServerChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -39,3 +32,1 @@\n-public class SctpServerChannelImpl extends SctpServerChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpServerChannelImpl extends UnsupportedSctpServerChannelImpl {\n@@ -45,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -48,54 +38,0 @@\n-    @Override\n-    public SctpChannel accept() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n-            T value) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/aix\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":2,"deletions":66,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n@@ -33,5 +28,0 @@\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -42,3 +32,1 @@\n-public class SctpChannelImpl extends SctpChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpChannelImpl extends UnsupportedSctpChannelImpl {\n@@ -48,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -51,99 +38,0 @@\n-    @Override\n-    public Association association() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bind(SocketAddress local)\n-                            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote, int maxOutStreams,\n-       int maxInStreams) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean isConnectionPending() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean finishConnect() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel shutdown() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpChannel setOption(SctpSocketOption<T> name, T value)\n-        throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer dst, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer src, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":2,"deletions":114,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n@@ -33,6 +28,0 @@\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpMultiChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -43,3 +32,1 @@\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpMultiChannelImpl extends UnsupportedSctpMultiChannelImpl {\n@@ -49,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -52,85 +38,0 @@\n-    @Override\n-    public Set<Association> associations() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses\n-            (Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel shutdown(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name,\n-            Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n-            T value, Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer buffer, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer buffer, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel branch(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":2,"deletions":101,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,4 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n@@ -32,3 +28,0 @@\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpServerChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -39,3 +32,1 @@\n-public class SctpServerChannelImpl extends SctpServerChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpServerChannelImpl extends UnsupportedSctpServerChannelImpl {\n@@ -45,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -48,54 +38,0 @@\n-    @Override\n-    public SctpChannel accept() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n-            T value) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/macosx\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":2,"deletions":66,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -0,0 +1,147 @@\n+\/*\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package sun.nio.ch.sctp;\n+\n+import com.sun.nio.sctp.Association;\n+import com.sun.nio.sctp.MessageInfo;\n+import com.sun.nio.sctp.NotificationHandler;\n+import com.sun.nio.sctp.SctpChannel;\n+import com.sun.nio.sctp.SctpSocketOption;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.SocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.spi.SelectorProvider;\n+import java.util.Set;\n+\n+\/**\n+ * Unimplemented.\n+ *\/\n+sealed class UnsupportedSctpChannelImpl\n+        extends SctpChannel\n+        permits SctpChannelImpl {\n+\n+    UnsupportedSctpChannelImpl(SelectorProvider provider) {\n+        super(provider);\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Association association() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpChannel bind(SocketAddress local) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpChannel bindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpChannel unbindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final boolean connect(SocketAddress remote) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final boolean connect(SocketAddress remote,\n+                                 int maxOutStreams,\n+                                 int maxInStreams) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final boolean isConnectionPending() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final boolean finishConnect() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SocketAddress> getAllLocalAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SocketAddress> getRemoteAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpChannel shutdown() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> T getOption(SctpSocketOption<T> name) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> SctpChannel setOption(SctpSocketOption<T> name,\n+                                           T value) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SctpSocketOption<?>> supportedOptions() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> MessageInfo receive(ByteBuffer dst,\n+                                         T attachment,\n+                                         NotificationHandler<T> handler) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final int send(ByteBuffer src,\n+                          MessageInfo messageInfo) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    protected final void implConfigureBlocking(boolean block) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final void implCloseSelectableChannel() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/UnsupportedSctpChannelImpl.java","additions":147,"deletions":0,"binary":false,"changes":147,"status":"added"},{"patch":"@@ -0,0 +1,134 @@\n+\/*\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package sun.nio.ch.sctp;\n+\n+import com.sun.nio.sctp.Association;\n+import com.sun.nio.sctp.MessageInfo;\n+import com.sun.nio.sctp.NotificationHandler;\n+import com.sun.nio.sctp.SctpChannel;\n+import com.sun.nio.sctp.SctpMultiChannel;\n+import com.sun.nio.sctp.SctpSocketOption;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.SocketAddress;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.spi.SelectorProvider;\n+import java.util.Set;\n+\n+\/**\n+ * Unimplemented.\n+ *\/\n+sealed class UnsupportedSctpMultiChannelImpl\n+        extends SctpMultiChannel\n+        permits SctpMultiChannelImpl {\n+\n+    UnsupportedSctpMultiChannelImpl(SelectorProvider provider) {\n+        super(provider);\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<Association> associations() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpMultiChannel bind(SocketAddress local,\n+                                       int backlog) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpMultiChannel bindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpMultiChannel unbindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SocketAddress> getAllLocalAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SocketAddress> getRemoteAddresses(Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpMultiChannel shutdown(Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> T getOption(SctpSocketOption<T> name,\n+                                 Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n+                                                T value,\n+                                                Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SctpSocketOption<?>> supportedOptions() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> MessageInfo receive(ByteBuffer buffer,\n+                                         T attachment,\n+                                         NotificationHandler<T> handler) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final int send(ByteBuffer buffer,\n+                          MessageInfo messageInfo) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpChannel branch(Association association) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    protected final void implConfigureBlocking(boolean block) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final void implCloseSelectableChannel() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/UnsupportedSctpMultiChannelImpl.java","additions":134,"deletions":0,"binary":false,"changes":134,"status":"added"},{"patch":"@@ -0,0 +1,100 @@\n+\/*\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package sun.nio.ch.sctp;\n+\n+import com.sun.nio.sctp.SctpChannel;\n+import com.sun.nio.sctp.SctpServerChannel;\n+import com.sun.nio.sctp.SctpSocketOption;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.SocketAddress;\n+import java.nio.channels.spi.SelectorProvider;\n+import java.util.Set;\n+\n+\/**\n+ * Unimplemented.\n+ *\/\n+sealed class UnsupportedSctpServerChannelImpl\n+        extends SctpServerChannel\n+        permits SctpServerChannelImpl {\n+\n+    UnsupportedSctpServerChannelImpl(SelectorProvider provider) {\n+        super(provider);\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpChannel accept() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpServerChannel bind(SocketAddress local,\n+                                        int backlog) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpServerChannel bindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final SctpServerChannel unbindAddress(InetAddress address) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SocketAddress> getAllLocalAddresses() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> T getOption(SctpSocketOption<T> name) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n+                                                 T value) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final Set<SctpSocketOption<?>> supportedOptions() {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    protected final void implConfigureBlocking(boolean block) throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+\n+    @Override\n+    public final void implCloseSelectableChannel() throws IOException {\n+        throw UnsupportedUtil.sctpUnsupported();\n+    }\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/UnsupportedSctpServerChannelImpl.java","additions":100,"deletions":0,"binary":false,"changes":100,"status":"added"},{"patch":"@@ -0,0 +1,39 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package sun.nio.ch.sctp;\n+\n+public final class UnsupportedUtil {\n+\n+    private static final String MESSAGE = \"SCTP not supported on this platform\";\n+\n+    \/\/ Suppresses default constructor, ensuring non-instantiability.\n+    private UnsupportedUtil() {}\n+\n+    static UnsupportedOperationException sctpUnsupported() {\n+        return new UnsupportedOperationException(MESSAGE);\n+    }\n+\n+}\n","filename":"src\/jdk.sctp\/share\/classes\/sun\/nio\/ch\/sctp\/UnsupportedUtil.java","additions":39,"deletions":0,"binary":false,"changes":39,"status":"added"},{"patch":"@@ -74,1 +74,1 @@\n-public class SctpChannelImpl extends SctpChannel\n+public final class SctpChannelImpl extends SctpChannel\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n+public final class SctpMultiChannelImpl extends SctpMultiChannel\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-public class SctpServerChannelImpl extends SctpServerChannel\n+public final class SctpServerChannelImpl extends SctpServerChannel\n","filename":"src\/jdk.sctp\/unix\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n@@ -33,5 +28,0 @@\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -42,3 +32,1 @@\n-public class SctpChannelImpl extends SctpChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpChannelImpl extends UnsupportedSctpChannelImpl {\n@@ -48,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -51,99 +38,0 @@\n-    @Override\n-    public Association association() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bind(SocketAddress local)\n-                            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean connect(SocketAddress remote, int maxOutStreams,\n-       int maxInStreams) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean isConnectionPending() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public boolean finishConnect() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel shutdown() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpChannel setOption(SctpSocketOption<T> name, T value)\n-        throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer dst, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer src, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpChannelImpl.java","additions":2,"deletions":114,"binary":false,"changes":116,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,5 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n-import java.nio.ByteBuffer;\n@@ -33,6 +28,0 @@\n-import com.sun.nio.sctp.Association;\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.MessageInfo;\n-import com.sun.nio.sctp.NotificationHandler;\n-import com.sun.nio.sctp.SctpMultiChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -43,3 +32,1 @@\n-public class SctpMultiChannelImpl extends SctpMultiChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpMultiChannelImpl extends UnsupportedSctpMultiChannelImpl {\n@@ -49,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -52,85 +38,0 @@\n-    @Override\n-    public Set<Association> associations() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getRemoteAddresses\n-            (Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpMultiChannel shutdown(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name,\n-            Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpMultiChannel setOption(SctpSocketOption<T> name,\n-            T value, Association association) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> MessageInfo receive(ByteBuffer buffer, T attachment,\n-            NotificationHandler<T> handler) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public int send(ByteBuffer buffer, MessageInfo messageInfo)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpChannel branch(Association association)\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpMultiChannelImpl.java","additions":2,"deletions":101,"binary":false,"changes":103,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2012, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,4 +27,0 @@\n-import java.net.SocketAddress;\n-import java.net.InetAddress;\n-import java.io.IOException;\n-import java.util.Set;\n@@ -32,3 +28,0 @@\n-import com.sun.nio.sctp.SctpChannel;\n-import com.sun.nio.sctp.SctpServerChannel;\n-import com.sun.nio.sctp.SctpSocketOption;\n@@ -39,3 +32,1 @@\n-public class SctpServerChannelImpl extends SctpServerChannel\n-{\n-    private static final String message = \"SCTP not supported on this platform\";\n+public final class SctpServerChannelImpl extends UnsupportedSctpServerChannelImpl {\n@@ -45,1 +36,0 @@\n-        throw new UnsupportedOperationException(message);\n@@ -48,54 +38,0 @@\n-    @Override\n-    public SctpChannel accept() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bind(SocketAddress local,\n-            int backlog) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel bindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public SctpServerChannel unbindAddress(InetAddress address)\n-         throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SocketAddress> getAllLocalAddresses()\n-            throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> T getOption(SctpSocketOption<T> name) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public <T> SctpServerChannel setOption(SctpSocketOption<T> name,\n-            T value) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public Set<SctpSocketOption<?>> supportedOptions() {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    protected void implConfigureBlocking(boolean block) throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n-\n-    @Override\n-    public void implCloseSelectableChannel() throws IOException {\n-        throw new UnsupportedOperationException(message);\n-    }\n","filename":"src\/jdk.sctp\/windows\/classes\/sun\/nio\/ch\/sctp\/SctpServerChannelImpl.java","additions":2,"deletions":66,"binary":false,"changes":68,"status":"modified"}]}