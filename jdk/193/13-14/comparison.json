{"files":[{"patch":"@@ -1247,0 +1247,2 @@\n+    set_signers(archived_mirror, NULL);\n+    set_source_file(archived_mirror, NULL);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,8 +84,3 @@\n-  objArrayHandle h_array(THREAD, (objArrayOop)result.get_jobject());\n-  if (!HAS_PENDING_EXCEPTION) {\n-    if (h_array() == NULL) {\n-      log_info(cds)(\"Failed call to %s.%s\", cds_name->as_C_string(), method->as_C_string());\n-      return;\n-    }\n-  } else {\n-    log_info(cds)(\"Exception happened: %s\", PENDING_EXCEPTION->klass()->name()->as_C_string());\n+\n+  if (HAS_PENDING_EXCEPTION) {\n+    \/\/ The exception message and stacktrace have been printed out already\n@@ -96,0 +91,1 @@\n+  objArrayHandle h_array(THREAD, (objArrayOop)result.get_jobject());\n","filename":"src\/hotspot\/share\/classfile\/lambdaFormInvokers.cpp","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -141,2 +141,2 @@\n-    \/\/ return false for invalid input, don't throw exception since it will generate more objects\n-    private static boolean isValidInputLines(String[] lines) {\n+    \/\/ Throw exception on invalid input\n+    private static void validateInputLines(String[] lines) {\n@@ -147,2 +147,1 @@\n-                System.out.println(\"Wrong prefix: \" + line);\n-                return false;\n+                throw new IllegalArgumentException(\"Wrong prefix: \" + line);\n@@ -156,3 +155,1 @@\n-                    System.out.println(\"Incorrecct number of items in the line: \" + parts.length);\n-                    System.out.println(\"line: \" + line);\n-                    return false;\n+                    throw new IllegalArgumentException(\"Incorrecct number of items in the line: \" + parts.length);\n@@ -161,2 +158,1 @@\n-                    System.out.println(\"Invalid holder class name: \" + parts[1]);\n-                    return false;\n+                    throw new IllegalArgumentException(\"Invalid holder class name: \" + parts[1]);\n@@ -165,2 +161,1 @@\n-                    System.out.println(\"Invalid method type: \" + parts[3]);\n-                    return false;\n+                    throw new IllegalArgumentException(\"Invalid method type: \" + parts[3]);\n@@ -170,2 +165,1 @@\n-                   System.out.println(\"Incorrect number of items in the line: \" + parts.length);\n-                   return false;\n+                   throw new IllegalArgumentException(\"Incorrect number of items in the line: \" + parts.length);\n@@ -175,1 +169,0 @@\n-      return true;\n@@ -180,1 +173,1 @@\n-     * @return @code { Object[] } if holder classes can be generated.\n+     * @return {@code Object[]} if holder classes can be generated.\n@@ -183,1 +176,1 @@\n-    private static Object[] generateLambdaFormHolderClasses(String[] lines) {\n+    private static Object[] generateLambdaFormHolderClasses(String[] lines) throws Exception {\n@@ -186,3 +179,1 @@\n-            if (!isValidInputLines(lines)) {\n-                return null;\n-            }\n+            validateInputLines(lines);\n@@ -200,0 +191,4 @@\n+            \/\/ This method is only used by CDS, for debug\/trace purpose, we print out the exception message and\n+            \/\/ stack trace here since in vm we need more code to do so.\n+            \/\/ for test purpose\n+            System.out.println(\"Exception: \" + e);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/misc\/CDS.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -37,1 +37,0 @@\n-    static final String REPLACE_NOT_OK = \"Failed call to jdk\/internal\/misc\/CDS.generateLambdaFormHolderClasses\";\n@@ -80,1 +79,1 @@\n-                REPLACE_NOT_OK);\n+                \"Invalid method type: LL_G\");\n@@ -87,1 +86,1 @@\n-                REPLACE_NOT_OK);\n+                \"Invalid method type: MGLL_I\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpClassListWithLF.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"}]}