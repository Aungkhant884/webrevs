{"files":[{"patch":"@@ -35,0 +35,2 @@\n+import javax.tools.Diagnostic;\n+\n@@ -49,0 +51,5 @@\n+    \/**\n+     * Whether or not the feature is enabled. By default, the feature is enabled.\n+     *\/\n+    public static final boolean IS_ENABLED =\n+            !Boolean.getBoolean(\"javadoc.internal.bgWriter.disabled\");\n@@ -58,1 +65,2 @@\n-    private static final int DEFAULT_BACKGROUND_THREADS = 1;\n+    private final int BACKGROUND_THREADS =\n+            Integer.getInteger(\"javadoc.internal.bgWriter.threads\", 1);\n@@ -67,58 +75,2 @@\n-    private static final int DEFAULT_QUEUED_TASKS = DEFAULT_BACKGROUND_THREADS;\n-\n-    \/**\n-     * Options to configure the background writer.\n-     * This is an internal class, for testing only.\n-     * The default options should be sufficient for normal use.\n-     *\/\n-    static class Options {\n-        public boolean enabled = true;\n-        public boolean verbose = false;\n-        public int backgroundThreads = DEFAULT_BACKGROUND_THREADS;\n-        public int queuedTasks = DEFAULT_QUEUED_TASKS;\n-\n-        public boolean process(Messages messages, String opts) {\n-            boolean ok = true;\n-            for (String opt : opts.split(\",\")) {\n-                String value;\n-                int sep = opt.indexOf(\"=\");\n-                if (sep == -1) {\n-                    value = null;\n-                } else {\n-                    value = opt.substring(sep + 1);\n-                    opt = opt.substring(0, sep);\n-                }\n-                switch (opt) {\n-                    case \"off\" -> enabled = false;\n-                    case \"verbose\" -> verbose = true;\n-                    case \"queue\" -> {\n-                        if (value == null) {\n-                            messages.error(\"doclet.bgWriter.no_value\", opt);\n-                            ok = false;\n-                        } else if (value.matches(\"[0-9]+\")) { \/\/ 0 or more\n-                            queuedTasks = Integer.parseInt(value);\n-                        } else {\n-                            messages.error(\"doclet.bgWriter.bad_value\", opt, value);\n-                            ok = false;\n-                        }\n-                    }\n-                    case \"threads\" -> {\n-                        if (value == null) {\n-                            messages.error(\"doclet.bgWriter.no_value\", opt);\n-                            ok = false;\n-                        } else if (value.matches(\"[1-9]+\")) { \/\/ 1 or more\n-                            backgroundThreads = Integer.parseInt(value);\n-                        } else {\n-                            messages.error(\"doclet.bgWriter.bad_value\", opt, value);\n-                            ok = false;\n-                        }\n-                    }\n-                    default -> {\n-                        messages.warning(\"doclet.bgWriter.unknown_option\", opt);\n-                        ok = false;\n-                    }\n-                }\n-            }\n-            return ok;\n-        }\n-    }\n+    private final int QUEUED_TASKS =\n+            Integer.getInteger(\"javadoc.internal.bgWriter.queue\", 1);\n@@ -149,5 +101,0 @@\n-    \/**\n-     * The options used to configure the writer.\n-     *\/\n-    private final Options options;\n-\n@@ -176,1 +123,1 @@\n-    private final boolean verbose;\n+    private final boolean verbose = Boolean.getBoolean(\"javadoc.internal.bgWriter.verbose\");\n@@ -183,2 +130,2 @@\n-     * {@link Options#backgroundThreads} background threads and a queue that is\n-     * restricted to {@link Options#queuedTasks} queued tasks.\n+     * {@link #BACKGROUND_THREADS} background threads and a queue that is\n+     * restricted to {@link #QUEUED_TASKS} queued tasks.\n@@ -187,1 +134,0 @@\n-     * @param options  the options to configure the writer\n@@ -189,1 +135,1 @@\n-    public BackgroundWriter(Messages messages, Options options) {\n+    public BackgroundWriter(Messages messages) {\n@@ -191,4 +137,2 @@\n-        this.verbose = options.verbose;\n-        executor = Executors.newFixedThreadPool(options.backgroundThreads);\n-        semaphore = new Semaphore(options.queuedTasks + options.backgroundThreads);\n-        this.options = options;\n+        executor = Executors.newFixedThreadPool(BACKGROUND_THREADS);\n+        semaphore = new Semaphore(QUEUED_TASKS + BACKGROUND_THREADS);\n@@ -244,3 +188,4 @@\n-                double utilization = ((double) taskBusy.get()) \/ options.backgroundThreads \/ elapsed * 100;\n-                messages.noticeAlways(\"doclet.bgWriter.utilization\",\n-                        options.backgroundThreads, options.queuedTasks, ((int) utilization) + \"%\");\n+                double utilization = ((double) taskBusy.get()) \/ BACKGROUND_THREADS \/ elapsed * 100;\n+                messages.getReporter().print(Diagnostic.Kind.NOTE,\n+                        String.format(\"Background writer: threads: %d, queue: %d, utilization: %d%%\",\n+                            BACKGROUND_THREADS, QUEUED_TASKS, ((int) utilization)));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/BackgroundWriter.java","additions":21,"deletions":76,"binary":false,"changes":97,"status":"modified"},{"patch":"@@ -274,3 +274,2 @@\n-        BackgroundWriter.Options bgWriterOptions = options.getBackgroundWriterOptions();\n-        if (bgWriterOptions.enabled) {\n-            backgroundWriter = new BackgroundWriter(messages, bgWriterOptions);\n+        if (BackgroundWriter.IS_ENABLED) {\n+            backgroundWriter = new BackgroundWriter(messages);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlConfiguration.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -183,5 +183,0 @@\n-    \/**\n-     * Values for the hidden {@code --background-writer} option.\n-     *\/\n-    private BackgroundWriter.Options backgroundWriterOptions = new BackgroundWriter.Options();\n-\n@@ -456,8 +451,0 @@\n-                },\n-\n-                new Hidden(resources, \"--background-writer\", 1) {\n-                    @Override\n-                    public boolean process(String option, List<String> args) {\n-                        \/\/ delegate to BackgroundWriter\n-                        return getBackgroundWriterOptions().process(messages, args.get(0));\n-                    }\n@@ -695,7 +682,0 @@\n-\n-    \/**\n-     * Default or parsed values for the command-line option {@code --background-writer}.\n-     *\/\n-    public BackgroundWriter.Options getBackgroundWriterOptions() {\n-        return backgroundWriterOptions;\n-    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlOptions.java","additions":0,"deletions":20,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -536,11 +536,0 @@\n-doclet.bgWriter.unknown_option=\\\n-    Unknown option for ''--background-writer'': {0}\n-\n-doclet.bgWriter.no_value=\\\n-    No value for ''--background-writer'' option ''{0}''\n-\n-doclet.bgWriter.bad_value=\\\n-    Bad value for ''--background-writer'' option ''{0}'': {1}\n-\n-doclet.bgWriter.utilization=\\\n-    Background writer: threads: {0}, queue: {1}, utilization: {2}\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/resources\/standard.properties","additions":0,"deletions":11,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -74,0 +74,9 @@\n+    \/**\n+     * Returns the reporter being used when generating messages.\n+     *\n+     * @return the reporter\n+     *\/\n+    public Reporter getReporter() {\n+        return reporter;\n+    }\n+\n@@ -152,10 +161,0 @@\n-    \/**\n-     * Reports an informational notice to the doclet's reporter.\n-     * The message is not suppressed if the {@code -quiet} option is set.\n-     *\n-     * @param key the name of a resource containing the message to be printed\n-     * @param args optional arguments to be replaced in the message.\n-     *\/\n-    public void noticeAlways(String key, Object... args) {\n-        report(NOTE, resources.getText(key, args));\n-    }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/Messages.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -169,0 +169,6 @@\n+        Set<String> sysProps = Set.of(\n+                \"javadoc.internal.bgWriter.disabled\",\n+                \"javadoc.internal.bgWriter.threads\",\n+                \"javadoc.internal.bgWriter.queue\",\n+                \"javadoc.internal.bgWriter.verbose\",\n+                \"javadoc.internal.show.taglets\");\n@@ -176,2 +182,2 @@\n-            \/\/ ignore this system property name\n-            if (ck.equals(\"javadoc.internal.show.taglets\"))\n+            \/\/ ignore these system property names\n+            if (sysProps.contains(ck))\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/CheckResourceKeys.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}