{"files":[{"patch":"@@ -150,0 +150,1 @@\n+                \"java.util.concurrent.TimeUnit.toNanos\",\n@@ -206,1 +207,6 @@\n-        int expectedLength = depth + 5;\n+        \/\/ The length of the trace must not be greater than\n+        \/\/ expectedLength.  Number of recursionJava() or\n+        \/\/ recursionNative() methods must not be greater than depth,\n+        \/\/ also one run() and one waitForSign(), plus whatever can be\n+        \/\/ reached from Thread.yield or Thread.sleep.\n+        int expectedLength = depth + 6;\n@@ -209,4 +215,1 @@\n-        \/\/ Check the length of the trace. It must not be greater than\n-        \/\/ expectedLength. Number of recursionJava() or recursionNative()\n-        \/\/ methods must not ne greater than depth, also one Object.wait() or\n-        \/\/ Thread.yield() method, one run( ) and one waitForSign().\n+        \/\/ Check the length of the trace\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace001.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace001\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace002\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace003\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace004\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace005\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace006\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace007\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace008\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,4 +45,3 @@\n- *         2. The length of a trace must not be greater than (depth + 3). Number\n- *            of recursionJava() or recursionNative() methods must not be greater\n- *            than depth, also one Object.wait() or Thread.yield() method, one\n- *            run(), and one waitForSign().\n+ *         2. Number of recursionJava() or recursionNative() methods must not be\n+ *            greater than depth + X, where X is implementation dependent.\n+ *            See strace001.java for more info.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/stress\/thread\/strace009\/TestDescription.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}