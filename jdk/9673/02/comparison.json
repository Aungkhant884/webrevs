{"files":[{"patch":"@@ -109,0 +109,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -123,0 +126,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -222,1 +228,3 @@\n-        graphics.setFont(aFont);\n+        if (graphics != null) {\n+            graphics.setFont(aFont);\n+        }\n@@ -229,0 +237,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -238,1 +249,3 @@\n-        graphics.setColor(aColor);\n+        if (graphics != null) {\n+            graphics.setColor(aColor);\n+        }\n@@ -245,0 +258,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -257,0 +273,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -264,0 +283,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -277,1 +299,3 @@\n-        graphics.translate(x, y);\n+        if (graphics != null) {\n+            graphics.translate(x, y);\n+        }\n@@ -287,1 +311,3 @@\n-        graphics.setPaintMode();\n+        if (graphics != null) {\n+            graphics.setPaintMode();\n+        }\n@@ -297,1 +323,3 @@\n-        graphics.setXORMode(aColor);\n+        if (graphics != null) {\n+            graphics.setXORMode(aColor);\n+        }\n@@ -304,0 +332,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -311,0 +342,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -323,0 +357,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -334,0 +371,3 @@\n+        if (graphics == null) {\n+            return null;\n+        }\n@@ -341,0 +381,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -352,0 +395,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -386,0 +432,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -420,0 +469,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -455,0 +507,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -493,0 +548,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -530,0 +588,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -565,0 +626,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -600,0 +664,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -634,0 +701,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -667,0 +737,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -701,0 +774,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -738,0 +814,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -774,0 +853,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -809,0 +891,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -844,0 +929,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -879,0 +967,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -914,0 +1005,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -949,0 +1043,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -985,0 +1082,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -1022,0 +1122,3 @@\n+        if (graphics == null) {\n+            return false;\n+        }\n@@ -1066,0 +1169,3 @@\n+        if (graphics == null) {\n+            return false;\n+        }\n@@ -1111,0 +1217,3 @@\n+        if (graphics == null) {\n+            return false;\n+        }\n@@ -1157,0 +1266,3 @@\n+        if (graphics == null) {\n+            return false;\n+        }\n@@ -1205,0 +1317,3 @@\n+        if (graphics == null) {\n+            return false;\n+        }\n@@ -1256,0 +1371,3 @@\n+        if (graphics == null) {\n+            return false;\n+        }\n@@ -1310,0 +1428,3 @@\n+        if (graphics == null) {\n+            return;\n+        }\n@@ -1492,1 +1613,1 @@\n-}\n+}\n\\ No newline at end of file\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/DebugGraphics.java","additions":127,"deletions":6,"binary":false,"changes":133,"status":"modified"},{"patch":"@@ -0,0 +1,76 @@\n+\/*\r\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\r\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\r\n+ *\r\n+ * This code is free software; you can redistribute it and\/or modify it\r\n+ * under the terms of the GNU General Public License version 2 only, as\r\n+ * published by the Free Software Foundation.\r\n+ *\r\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\r\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\r\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\r\n+ * version 2 for more details (a copy is included in the LICENSE file that\r\n+ * accompanied this code).\r\n+ *\r\n+ * You should have received a copy of the GNU General Public License version\r\n+ * 2 along with this work; if not, write to the Free Software Foundation,\r\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\r\n+ *\r\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\r\n+ * or visit www.oracle.com if you need additional information or have any\r\n+ * questions.\r\n+ *\/\r\n+\r\n+import java.awt.Font;\r\n+import java.awt.Robot;\r\n+import javax.swing.DebugGraphics;\r\n+import javax.swing.SwingUtilities;\r\n+import java.util.concurrent.atomic.AtomicReference;\r\n+\r\n+\/* @test\r\n+ * @bug 6521141\r\n+ * @key headful\r\n+ * @summary Test to check if NPE does not occur when graphics is not\r\n+ *  initialized and DebugGraphics instance is created with default\r\n+ *  Constructor and used.\r\n+ * @run main DebugGraphicsNPETest\r\n+ *\/\r\n+\r\n+public class DebugGraphicsNPETest {\r\n+    private static final AtomicReference<Throwable> exception =\r\n+            new AtomicReference<>();\r\n+\r\n+    public static void main(String[] args) throws Exception {\r\n+        Robot robot = new Robot();\r\n+        SwingUtilities.invokeAndWait(new Runnable() {\r\n+            public void run() {\r\n+                Thread.currentThread().setUncaughtExceptionHandler(\r\n+                        new DebugGraphicsNPETest.ExceptionCheck());\r\n+                runTest();\r\n+            }\r\n+        });\r\n+\r\n+        robot.delay(2000);\r\n+        robot.waitForIdle();\r\n+\r\n+        if (exception.get() != null) {\r\n+            throw new RuntimeException(\"Test Case Failed. NPE raised!\",\r\n+                    exception.get());\r\n+        }\r\n+        System.out.println(\"Test Pass!\");\r\n+    }\r\n+\r\n+    static void runTest() {\r\n+        DebugGraphics dg = new DebugGraphics();\r\n+        Font font = new Font(\"Currier\", Font.PLAIN, 10);\r\n+        dg.setFont(font);\r\n+    }\r\n+\r\n+    static class ExceptionCheck implements Thread.UncaughtExceptionHandler {\r\n+        public void uncaughtException(Thread t, Throwable e)\r\n+        {\r\n+            exception.set(e);\r\n+            System.err.println(\"Uncaught Exception Handled : \" + e);\r\n+        }\r\n+    }\r\n+}\r\n","filename":"test\/jdk\/javax\/swing\/DebugGraphics\/DebugGraphicsNPETest.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"added"}]}