{"files":[{"patch":"@@ -32,1 +32,0 @@\n-import java.util.concurrent.atomic.AtomicReference;\n@@ -43,1 +42,1 @@\n-        private final AtomicReference<T> strongReferent;\n+        private volatile T strongReferent;\n@@ -48,1 +47,1 @@\n-            this.strongReferent = new AtomicReference<T>(referent);\n+            this.strongReferent = referent;\n@@ -55,2 +54,6 @@\n-        T getAndClearStrong() {\n-            return strongReferent.getAndSet(null);\n+        T getStrong() {\n+            return strongReferent;\n+        }\n+\n+        void clearStrong() {\n+            strongReferent = null;\n@@ -87,1 +90,1 @@\n-            T strongVal = ref.getAndClearStrong();\n+            T strongVal = ref.getStrong();\n@@ -89,0 +92,1 @@\n+                ref.clearStrong();\n","filename":"src\/java.base\/share\/classes\/java\/io\/ClassCache.java","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"}]}