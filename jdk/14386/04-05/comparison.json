{"files":[{"patch":"@@ -42,0 +42,5 @@\n+        \/\/ This field is deliberately accessed without sychronization. ClassValue\n+        \/\/ provides synchronization when CacheRef is published. However, when\n+        \/\/ a thread reads this field, while another thread is clearing the field, it\n+        \/\/ would formally constitute a data race. But that data race is benign, and\n+        \/\/ fixing it could introduce noticeable performance penalty, see JDK-8309688.\n@@ -90,4 +95,0 @@\n-            \/\/ A benign data race exists on CacheRef.strongReferent field if\n-            \/\/ multiple threads calls get() with the same Class parameter.\n-            \/\/ Fixing this race could introduce noticeable performance penalty.\n-            \/\/ See the review thread for JDK-8309688 for details.\n","filename":"src\/java.base\/share\/classes\/java\/io\/ClassCache.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"}]}