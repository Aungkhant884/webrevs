{"files":[{"patch":"@@ -2423,0 +2423,23 @@\n+bool Node::is_dead_loop_safe() const {\n+  if (is_Phi()) {\n+    return true;\n+  }\n+  if (is_Proj() && in(0) == NULL)  {\n+    return true;\n+  }\n+  if ((_flags & (Flag_is_dead_loop_safe | Flag_is_Con)) != 0) {\n+    if (!is_Proj()) {\n+      return true;\n+    }\n+    if (in(0)->is_Allocate()) {\n+      return false;\n+    }\n+    \/\/ MemNode::can_see_stored_value() peeks through the boxing call\n+    if (in(0)->is_CallStaticJava() && in(0)->as_CallStaticJava()->is_boxing_method()) {\n+      return false;\n+    }\n+    return true;\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -899,5 +899,1 @@\n-  bool is_dead_loop_safe() const {\n-    return is_Phi() || (is_Proj() && in(0) == NULL) ||\n-           ((_flags & (Flag_is_dead_loop_safe | Flag_is_Con)) != 0 &&\n-            (!is_Proj() || !in(0)->is_Allocate()));\n-  }\n+  bool is_dead_loop_safe() const;\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"}]}