{"files":[{"patch":"@@ -336,4 +336,3 @@\n-  bool created = false;\n-  SourceObjInfo* p = _src_obj_table.lookup(src_obj);\n-  if (p == NULL) {\n-    p = _src_obj_table.add(src_obj, src_info);\n+  bool created;\n+  SourceObjInfo* p = _src_obj_table.add_if_absent(src_obj, src_info, &created);\n+  if (created) {\n@@ -343,1 +342,0 @@\n-    created = true;\n","filename":"src\/hotspot\/share\/memory\/archiveBuilder.cpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -97,3 +97,3 @@\n-  bool* found = _has_been_visited.lookup(ref->obj());\n-  if (found != NULL) {\n-    assert(*found == read_only, \"must be\");\n+  bool created;\n+  _has_been_visited.add_if_absent(ref->obj(), read_only, &created);\n+  if (!created) {\n@@ -102,1 +102,0 @@\n-    _has_been_visited.add(ref->obj(), read_only);\n","filename":"src\/hotspot\/share\/memory\/metaspaceClosure.cpp","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -322,0 +322,21 @@\n+  \/\/ Look up the key.\n+  \/\/ If an entry for the key exists, leave map unchanged and return a pointer to its value.\n+  \/\/ If no entry for the key exists, create a new entry from key and value and return a\n+  \/\/  pointer to the value.\n+  \/\/ *p_created is true if entry was created, false if entry pre-existed.\n+  V* add_if_absent(K const& key, V const& value, bool* p_created) {\n+    unsigned int hash = HASH(key);\n+    int index = BasicHashtable<F>::hash_to_index(hash);\n+    for (KVHashtableEntry* e = bucket(index); e != NULL; e = e->next()) {\n+      if (e->hash() == hash && e->_key == key) {\n+        *p_created = false;\n+        return &(e->_value);\n+      }\n+    }\n+\n+    KVHashtableEntry* entry = new_entry(hash, key, value);\n+    BasicHashtable<F>::add_entry(BasicHashtable<F>::hash_to_index(hash), entry);\n+    *p_created = true;\n+    return &(entry->_value);\n+  }\n+\n","filename":"src\/hotspot\/share\/utilities\/hashtable.hpp","additions":21,"deletions":0,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,1 @@\n-  \/\/ *p_created is new if entry was created, false if entry pre-existed.\n+  \/\/ *p_created is true if entry was created, false if entry pre-existed.\n@@ -153,1 +153,1 @@\n-  \/\/ *p_created is new if entry was created, false if entry pre-existed.\n+  \/\/ *p_created is true if entry was created, false if entry pre-existed.\n","filename":"src\/hotspot\/share\/utilities\/resourceHash.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}