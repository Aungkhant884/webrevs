{"files":[{"patch":"@@ -59,20 +59,0 @@\n-class CMRemark : public VoidClosure {\n-  G1ConcurrentMark* _cm;\n-public:\n-  CMRemark(G1ConcurrentMark* cm) : _cm(cm) {}\n-\n-  void do_void(){\n-    _cm->remark();\n-  }\n-};\n-\n-class CMCleanup : public VoidClosure {\n-  G1ConcurrentMark* _cm;\n-public:\n-  CMCleanup(G1ConcurrentMark* cm) : _cm(cm) {}\n-\n-  void do_void(){\n-    _cm->cleanup();\n-  }\n-};\n-\n@@ -242,2 +222,1 @@\n-  CMRemark cl(_cm);\n-  VM_G1Concurrent op(&cl, \"Pause Remark\");\n+  VM_G1PauseRemark op;\n@@ -260,2 +239,1 @@\n-  CMCleanup cl(_cm);\n-  VM_G1Concurrent op(&cl, \"Pause Cleanup\");\n+  VM_G1PauseCleanup op;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkThread.cpp","additions":2,"deletions":24,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -173,1 +173,1 @@\n-void VM_G1Concurrent::doit() {\n+void VM_G1PauseConcurrent::doit() {\n@@ -187,1 +187,2 @@\n-  _cl->do_void();\n+\n+  work();\n@@ -190,1 +191,1 @@\n-bool VM_G1Concurrent::doit_prologue() {\n+bool VM_G1PauseConcurrent::doit_prologue() {\n@@ -195,1 +196,1 @@\n-void VM_G1Concurrent::doit_epilogue() {\n+void VM_G1PauseConcurrent::doit_epilogue() {\n@@ -201,0 +202,10 @@\n+\n+void VM_G1PauseRemark::work() {\n+  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+  g1h->concurrent_mark()->remark();\n+}\n+\n+void VM_G1PauseCleanup::work() {\n+  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+  g1h->concurrent_mark()->cleanup();\n+}\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.cpp","additions":15,"deletions":4,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -90,3 +90,1 @@\n-class VM_G1Concurrent : public VM_Operation {\n-  VoidClosure* _cl;\n-  const char*  _message;\n+class VM_G1PauseConcurrent : public VM_Operation {\n@@ -94,0 +92,6 @@\n+  const char*  _message;\n+\n+protected:\n+  VM_G1PauseConcurrent(const char* message) :\n+    _gc_id(GCId::current()), _message(message) { }\n+  virtual void work() = 0;\n@@ -96,6 +100,17 @@\n-  VM_G1Concurrent(VoidClosure* cl, const char* message) :\n-    _cl(cl), _message(message), _gc_id(GCId::current()) { }\n-  virtual VMOp_Type type() const { return VMOp_G1Concurrent; }\n-  virtual void doit();\n-  virtual bool doit_prologue();\n-  virtual void doit_epilogue();\n+  bool doit_prologue() override;\n+  void doit_epilogue() override;\n+  void doit() override;\n+};\n+\n+class VM_G1PauseRemark : public VM_G1PauseConcurrent {\n+public:\n+  VM_G1PauseRemark() : VM_G1PauseConcurrent(\"Pause Remark\") { }\n+  VMOp_Type type() const override { return VMOp_G1PauseRemark; }\n+  void work() override;\n+};\n+\n+class VM_G1PauseCleanup : public VM_G1PauseConcurrent {\n+public:\n+  VM_G1PauseCleanup() : VM_G1PauseConcurrent(\"Pause Cleanup\") { }\n+  VMOp_Type type() const override { return VMOp_G1PauseCleanup; }\n+  void work() override;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1VMOperations.hpp","additions":24,"deletions":9,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -61,1 +61,2 @@\n-  template(G1Concurrent)                          \\\n+  template(G1PauseRemark)                         \\\n+  template(G1PauseCleanup)                        \\\n","filename":"src\/hotspot\/share\/runtime\/vmOperation.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}