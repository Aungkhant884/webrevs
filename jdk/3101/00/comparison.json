{"files":[{"patch":"@@ -424,1 +424,1 @@\n-      exit(false, current);\n+      exit(current);\n@@ -1142,1 +1142,1 @@\n-void ObjectMonitor::exit(bool not_suspended, JavaThread* current) {\n+void ObjectMonitor::exit(JavaThread* current) {\n@@ -1181,3 +1181,3 @@\n-  \/\/ get the owner's thread id for the MonitorEnter event\n-  \/\/ if it is enabled and the thread isn't suspended\n-  if (not_suspended && EventJavaMonitorEnter::is_enabled()) {\n+  \/\/ set _previous_owner_tid for the MonitorEnter event if it is enabled and\n+  \/\/ the thread isn't releasing the monitor from inside enter()\n+  if (current->current_pending_monitor() == NULL && EventJavaMonitorEnter::is_enabled()) {\n@@ -1375,1 +1375,1 @@\n-  exit(true, current);     \/\/ exit the monitor\n+  exit(current);           \/\/ exit the monitor\n@@ -1509,1 +1509,1 @@\n-  exit(true, current);         \/\/ exit the monitor\n+  exit(current);               \/\/ exit the monitor\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -306,1 +306,1 @@\n-  void      exit(bool not_suspended, JavaThread* current);\n+  void      exit(JavaThread* current);\n","filename":"src\/hotspot\/share\/runtime\/objectMonitor.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -521,1 +521,1 @@\n-  monitor->exit(true, current);\n+  monitor->exit(current);\n@@ -611,1 +611,1 @@\n-    monitor->exit(true, current);\n+    monitor->exit(current);\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}