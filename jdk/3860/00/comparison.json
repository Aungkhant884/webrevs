{"files":[{"patch":"@@ -3118,26 +3118,0 @@\n-  enc_class aarch64_enc_strw_immn(immN src, memory1 mem) %{\n-    C2_MacroAssembler _masm(&cbuf);\n-    address con = (address)$src$$constant;\n-    \/\/ need to do this the hard way until we can manage relocs\n-    \/\/ for 32 bit constants\n-    __ movoop(rscratch2, (jobject)con);\n-    if (con) __ encode_heap_oop_not_null(rscratch2);\n-    loadStore(_masm, &MacroAssembler::strw, rscratch2, $mem->opcode(),\n-               as_Register($mem$$base), $mem$$index, $mem$$scale, $mem$$disp, 4);\n-  %}\n-\n-  \/\/ This encoding class is generated automatically from ad_encode.m4.\n-  \/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n-  enc_class aarch64_enc_strw_immnk(immN src, memory4 mem) %{\n-    C2_MacroAssembler _masm(&cbuf);\n-    address con = (address)$src$$constant;\n-    \/\/ need to do this the hard way until we can manage relocs\n-    \/\/ for 32 bit constants\n-    __ movoop(rscratch2, (jobject)con);\n-    __ encode_klass_not_null(rscratch2);\n-    loadStore(_masm, &MacroAssembler::strw, rscratch2, $mem->opcode(),\n-               as_Register($mem$$base), $mem$$index, $mem$$scale, $mem$$disp, 4);\n-  %}\n-\n-  \/\/ This encoding class is generated automatically from ad_encode.m4.\n-  \/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":0,"deletions":26,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-    $4choose(MacroAssembler(&cbuf), $1_reg,$2,$mem->opcode(),\n+    $4choose(C2_MacroAssembler(&cbuf), $1_reg,$2,$mem->opcode(),\n@@ -62,1 +62,1 @@\n-    MacroAssembler _masm(&cbuf);\n+    C2_MacroAssembler _masm(&cbuf);\n@@ -75,1 +75,1 @@\n-      MacroAssembler _masm(&cbuf);\n+      C2_MacroAssembler _masm(&cbuf);\n@@ -85,24 +85,0 @@\n-  \/\/ This encoding class is generated automatically from ad_encode.m4.\n-  \/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n-  enc_class aarch64_enc_strw_immn(immN src, memory1 mem) %{\n-    MacroAssembler _masm(&cbuf);\n-    address con = (address)$src$$constant;\n-    \/\/ need to do this the hard way until we can manage relocs\n-    \/\/ for 32 bit constants\n-    __ movoop(rscratch2, (jobject)con);\n-    if (con) __ encode_heap_oop_not_null(rscratch2);\n-    choose(_masm,rscratch2,strw,$mem->opcode(),\n-        as_Register($mem$$base),$mem$$index,$mem$$scale,$mem$$disp, 4)\n-\n-  \/\/ This encoding class is generated automatically from ad_encode.m4.\n-  \/\/ DO NOT EDIT ANYTHING IN THIS SECTION OF THE FILE\n-  enc_class aarch64_enc_strw_immnk(immN src, memory4 mem) %{\n-    MacroAssembler _masm(&cbuf);\n-    address con = (address)$src$$constant;\n-    \/\/ need to do this the hard way until we can manage relocs\n-    \/\/ for 32 bit constants\n-    __ movoop(rscratch2, (jobject)con);\n-    __ encode_klass_not_null(rscratch2);\n-    choose(_masm,rscratch2,strw,$mem->opcode(),\n-        as_Register($mem$$base),$mem$$index,$mem$$scale,$mem$$disp, 4)\n-\n@@ -112,1 +88,1 @@\n-      MacroAssembler _masm(&cbuf);\n+      C2_MacroAssembler _masm(&cbuf);\n","filename":"src\/hotspot\/cpu\/aarch64\/ad_encode.m4","additions":4,"deletions":28,"binary":false,"changes":32,"status":"modified"}]}