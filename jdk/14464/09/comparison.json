{"files":[{"patch":"@@ -1121,1 +1121,1 @@\n-            insets.set(2, 2, 2, 0);\n+            insets.set(2, 2, 2, 2);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,110 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.imageio.ImageIO;\n+import javax.swing.JLabel;\n+import javax.swing.JTable;\n+import javax.swing.SwingUtilities;\n+import javax.swing.table.JTableHeader;\n+import javax.swing.UIManager;\n+\n+import java.awt.Dimension;\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+\/*\n+ * @test\n+ * @bug 8301606\n+ * @summary Test to check if the Right aligned header\n+ *          label doesn't cut off Metal Look&Feel\n+ * @run main JTableHeaderLabelRightAlignTest\n+ *\/\n+public class JTableHeaderLabelRightAlignTest {\n+    private static final int WIDTH = 300;\n+    private static final int HEIGHT = 150;\n+    private static final double SCALE = 2.25;\n+    private static String failureMsg;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        SwingUtilities.invokeAndWait(JTableHeaderLabelRightAlignTest::test);\n+        if (failureMsg != null) {\n+            throw new RuntimeException(failureMsg);\n+        }\n+        System.out.println(\"Test Passed\");\n+    }\n+\n+    private static void test() {\n+        String[][] data = {\n+                {\"1\", \"1\"}\n+        };\n+\n+        String[] columnNames = {\"Size\", \"Size\"};\n+\n+        JTable table = new JTable(data, columnNames);\n+        table.setSize(WIDTH, HEIGHT);\n+        ((JLabel)table.getTableHeader().getDefaultRenderer())\n+                .setHorizontalAlignment(JLabel.RIGHT);\n+\n+        final JTableHeader header = table.getTableHeader();\n+        Dimension size = header.getPreferredSize();\n+        header.setSize(size);\n+\n+        int w = (int)Math.ceil(SCALE * size.width);\n+        int h = (int)Math.ceil(SCALE * size.height);\n+        BufferedImage imgHeader = new BufferedImage(w, h,\n+                BufferedImage.TYPE_INT_RGB);\n+        Graphics2D g2d = imgHeader.createGraphics();\n+        g2d.scale(SCALE, SCALE);\n+        try {\n+            header.paint(g2d);\n+        } finally {\n+            g2d.dispose();\n+        }\n+\n+        int x = (int) (table.getTableHeader()\n+                            .getColumnModel()\n+                            .getColumn(0)\n+                            .getWidth() * SCALE);\n+        int expectedRGB = imgHeader.getRGB(x, 1);\n+\n+        for (int y = 1; y < (imgHeader.getHeight() - 3); y++) {\n+            if (expectedRGB != imgHeader.getRGB(x, y)) {\n+                saveImage(imgHeader, \"failureImage.png\");\n+                failureMsg = \"Test Failed at <\" + x + \", \" + y + \">\";\n+                return;\n+            }\n+        }\n+    }\n+\n+    private static void saveImage(BufferedImage image, String fileName) {\n+        try {\n+            ImageIO.write(image, \"png\", new File(fileName));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/JTableHeaderLabelRightAlignTest.java","additions":110,"deletions":0,"binary":false,"changes":110,"status":"added"}]}