{"files":[{"patch":"@@ -1121,1 +1121,1 @@\n-            insets.set(2, 2, 2, 0);\n+            insets.set(2, 2, 2, 2);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/metal\/MetalBorders.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,139 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Robot;\n+\n+import javax.swing.AbstractButton;\n+import javax.swing.JFileChooser;\n+import javax.swing.JFrame;\n+import javax.swing.JTable;\n+import javax.swing.JToggleButton;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.WindowConstants;\n+\n+import java.util.function.Predicate;\n+\n+\/*\n+ * @test\n+ * @bug 8301606\n+ * @key headful\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary Test to check if the Size label in details view,\n+ * doesn't cut off Metal Look&Feel\n+ * @run main\/manual\/othervm -Dsun.java2d.uiScale=2.25 FileChooserSizeLabelCutOffTest\n+ *\/\n+\n+public class FileChooserSizeLabelCutOffTest {\n+    static JFrame frame;\n+    static JFileChooser jfc;\n+    static PassFailJFrame passFailJFrame;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        Robot robot = new Robot();\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                try {\n+                    initialize();\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                }\n+            }\n+        });\n+        robot.delay(500);\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                switchToDetailsView();\n+            }\n+        });\n+        robot.delay(500);\n+        robot.waitForIdle();\n+        passFailJFrame.awaitAndCheck();\n+    }\n+\n+    static void initialize() throws Exception {\n+        final String INSTRUCTIONS = \"\"\"\n+                Instructions to Test:\n+                1. Verify that the UI scaling is set to 225%.\n+                2. If Size label is cut off with table\n+                 header cell, test FAIL else test is PASS.\n+                \"\"\";\n+        frame = new JFrame(\"JFileChooser Size Label test\");\n+        jfc = new JFileChooser();\n+        passFailJFrame = new PassFailJFrame(\"Test Instructions\", INSTRUCTIONS,\n+                5L, 8, 25);\n+\n+        PassFailJFrame.addTestWindow(frame);\n+        PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.TOP_LEFT_CORNER);\n+\n+        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        jfc.setControlButtonsAreShown(false);\n+        jfc.setDialogType(JFileChooser.CUSTOM_DIALOG);\n+\n+        frame.add(jfc, BorderLayout.CENTER);\n+        frame.pack();\n+        frame.setVisible(true);\n+    }\n+    private static void switchToDetailsView() {\n+\n+        AbstractButton detailsBtn = findDetailsButton(jfc);\n+        if (detailsBtn == null) {\n+            throw new Error(\"'Details' button not found in JFileChooser\");\n+        }\n+        detailsBtn.doClick();\n+    }\n+    private static AbstractButton findDetailsButton(final Container container) {\n+        Component result = findComponent(container,\n+                c -> c instanceof JToggleButton button\n+                        && \"Details\".equals(button.getToolTipText()));\n+        return (AbstractButton) result;\n+    }\n+\n+    private static JTable findTable(final Container container) {\n+        Component result = findComponent(container,\n+                c -> c instanceof JTable);\n+        return (JTable) result;\n+    }\n+\n+    private static Component findComponent(final Container container,\n+                                           final Predicate<Component> predicate) {\n+        for (Component child : container.getComponents()) {\n+            if (predicate.test(child)) {\n+                return child;\n+            }\n+            if (child instanceof Container cont && cont.getComponentCount() > 0) {\n+                Component result = findComponent(cont, predicate);\n+                if (result != null) {\n+                    return result;\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileChooserSizeLabelCutOffTest.java","additions":139,"deletions":0,"binary":false,"changes":139,"status":"added"}]}