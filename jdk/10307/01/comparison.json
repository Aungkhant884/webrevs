{"files":[{"patch":"@@ -105,0 +105,2 @@\n+  StdoutLog = new LogStdoutOutput();\n+  StderrLog = new LogStderrOutput();\n@@ -108,2 +110,2 @@\n-  _outputs[0] = &StdoutLog;\n-  _outputs[1] = &StderrLog;\n+  _outputs[0] = StdoutLog;\n+  _outputs[1] = StderrLog;\n@@ -111,0 +113,7 @@\n+  _outputs[0]->set_config_string(\"all=warning\");\n+  _outputs[1]->set_config_string(\"all=off\");\n+\n+  \/\/ Set the default output to warning and error level for all new tagsets.\n+  for (LogTagSet* ts = LogTagSet::first(); ts != NULL; ts = ts->next()) {\n+    ts->set_output_level(StdoutLog, LogLevel::Default);\n+  }\n@@ -414,3 +423,3 @@\n-  \/\/ (parse_log_arguments() will report an error), and\n-  \/\/ both StdoutLog and StderrLog are created by static initializers,\n-  \/\/ so we have to process their options (e.g. foldmultilines) directly first.\n+  \/\/ (parse_log_arguments() will report an error), but we make an exception for\n+  \/\/ both StdoutLog and StderrLog as they're initialized automatically\n+  \/\/ very early in the boot process.\n@@ -420,1 +429,1 @@\n-      success = StdoutLog.parse_options(output_options, &ss);\n+      success = StdoutLog->parse_options(output_options, &ss);\n@@ -429,1 +438,1 @@\n-      success = StderrLog.parse_options(output_options, &ss);\n+      success = StderrLog->parse_options(output_options, &ss);\n","filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,21 +35,2 @@\n-\n-static bool initialized;\n-static union {\n-  char stdoutmem[sizeof(LogStdoutOutput)];\n-  jlong dummy;\n-} aligned_stdoutmem;\n-static union {\n-  char stderrmem[sizeof(LogStderrOutput)];\n-  jlong dummy;\n-} aligned_stderrmem;\n-\n-LogStdoutOutput &StdoutLog = reinterpret_cast<LogStdoutOutput&>(aligned_stdoutmem.stdoutmem);\n-LogStderrOutput &StderrLog = reinterpret_cast<LogStderrOutput&>(aligned_stderrmem.stderrmem);\n-\n-LogFileStreamInitializer::LogFileStreamInitializer() {\n-  if (!initialized) {\n-    ::new (&StdoutLog) LogStdoutOutput();\n-    ::new (&StderrLog) LogStderrOutput();\n-    initialized = true;\n-  }\n-}\n+LogStdoutOutput* StdoutLog = nullptr;\n+LogStderrOutput* StderrLog = nullptr;\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.cpp","additions":3,"deletions":22,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,8 +34,0 @@\n-class LogFileStreamInitializer {\n- public:\n-  LogFileStreamInitializer();\n-};\n-\n-\/\/ Ensure the default log streams have been initialized (stdout, stderr) using the static initializer below\n-static LogFileStreamInitializer log_stream_initializer;\n-\n@@ -75,3 +67,0 @@\n-  LogStdoutOutput() : LogFileStreamOutput(stdout) {\n-    set_config_string(\"all=warning\");\n-  }\n@@ -82,0 +71,1 @@\n+  LogStdoutOutput() : LogFileStreamOutput(stdout) {}\n@@ -90,3 +80,0 @@\n-  LogStderrOutput() : LogFileStreamOutput(stderr) {\n-    set_config_string(\"all=off\");\n-  }\n@@ -97,0 +84,1 @@\n+  LogStderrOutput() : LogFileStreamOutput(stderr) {}\n@@ -102,2 +90,2 @@\n-extern LogStderrOutput &StderrLog;\n-extern LogStdoutOutput &StdoutLog;\n+extern LogStderrOutput* StderrLog;\n+extern LogStdoutOutput* StdoutLog;\n","filename":"src\/hotspot\/share\/logging\/logFileStreamOutput.hpp","additions":5,"deletions":17,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,1 @@\n+  \/\/ This is only used during logging of the configuration.\n","filename":"src\/hotspot\/share\/logging\/logOutput.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,3 +54,0 @@\n-\n-  \/\/ Set the default output to warning and error level for all new tagsets.\n-  _output_list.set_output_level(&StdoutLog, LogLevel::Default);\n","filename":"src\/hotspot\/share\/logging\/logTagSet.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,1 +35,0 @@\n-#include \"logging\/log.hpp\"\n@@ -37,1 +36,0 @@\n-#include \"logging\/logTag.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/init.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,0 @@\n-#include \"logging\/log.hpp\"\n-#include \"logging\/logStream.hpp\"\n","filename":"src\/hotspot\/share\/services\/runtimeService.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -74,2 +74,2 @@\n-  EXPECT_PRED2(string_contains_substring, description, StdoutLog.name());\n-  EXPECT_PRED2(string_contains_substring, description, StderrLog.name());\n+  EXPECT_PRED2(string_contains_substring, description, StdoutLog->name());\n+  EXPECT_PRED2(string_contains_substring, description, StderrLog->name());\n@@ -132,1 +132,1 @@\n-    LogOutput* o = &StdoutLog;\n+    LogOutput* o = StdoutLog;\n@@ -184,2 +184,2 @@\n-    EXPECT_FALSE(ts->has_output(&StdoutLog));\n-    EXPECT_FALSE(ts->has_output(&StderrLog));\n+    EXPECT_FALSE(ts->has_output(StdoutLog));\n+    EXPECT_FALSE(ts->has_output(StderrLog));\n@@ -199,1 +199,1 @@\n-  LogOutput* o = &StdoutLog;\n+  LogOutput* o = StdoutLog;\n@@ -339,1 +339,1 @@\n-      EXPECT_EQ(LogLevel::Unspecified, ts->level_for(&StdoutLog));\n+      EXPECT_EQ(LogLevel::Unspecified, ts->level_for(StdoutLog));\n@@ -421,1 +421,1 @@\n-  EXPECT_EQ(LogLevel::Info, logging_ts->level_for(&StdoutLog));\n+  EXPECT_EQ(LogLevel::Info, logging_ts->level_for(StdoutLog));\n@@ -431,1 +431,1 @@\n-        EXPECT_EQ(LogLevel::Debug, ts->level_for(&StdoutLog));\n+        EXPECT_EQ(LogLevel::Debug, ts->level_for(StdoutLog));\n@@ -433,1 +433,1 @@\n-        EXPECT_EQ(LogLevel::Off, ts->level_for(&StdoutLog));\n+        EXPECT_EQ(LogLevel::Off, ts->level_for(StdoutLog));\n@@ -444,1 +444,1 @@\n-      EXPECT_EQ(LogLevel::Trace, ts->level_for(&StdoutLog));\n+      EXPECT_EQ(LogLevel::Trace, ts->level_for(StdoutLog));\n@@ -447,1 +447,1 @@\n-      EXPECT_EQ(LogLevel::Info, ts->level_for(&StdoutLog));\n+      EXPECT_EQ(LogLevel::Info, ts->level_for(StdoutLog));\n@@ -449,1 +449,1 @@\n-      EXPECT_EQ(LogLevel::Off, ts->level_for(&StdoutLog));\n+      EXPECT_EQ(LogLevel::Off, ts->level_for(StdoutLog));\n@@ -460,1 +460,1 @@\n-    EXPECT_EQ(LogLevel::Off, ts->level_for(&StdoutLog));\n+    EXPECT_EQ(LogLevel::Off, ts->level_for(StdoutLog));\n","filename":"test\/hotspot\/gtest\/logging\/test_logConfiguration.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -177,1 +177,1 @@\n-    list.set_output_level(&StdoutLog, level);\n+    list.set_output_level(StdoutLog, level);\n@@ -205,2 +205,2 @@\n-      LogOutput* dummy1 = &StdoutLog;\n-      LogOutput* dummy2 = &StderrLog;\n+      LogOutput* dummy1 = StdoutLog;\n+      LogOutput* dummy2 = StderrLog;\n@@ -230,2 +230,2 @@\n-  EXPECT_EQ(LogLevel::Off, list.level_for(&StdoutLog));\n-  EXPECT_EQ(LogLevel::Off, list.level_for(&StderrLog));\n+  EXPECT_EQ(LogLevel::Off, list.level_for(StdoutLog));\n+  EXPECT_EQ(LogLevel::Off, list.level_for(StderrLog));\n@@ -234,4 +234,4 @@\n-  list.set_output_level(&StdoutLog, LogLevel::Info);\n-  list.set_output_level(&StderrLog, LogLevel::Trace);\n-  EXPECT_EQ(LogLevel::Info, list.level_for(&StdoutLog));\n-  EXPECT_EQ(LogLevel::Trace, list.level_for(&StderrLog));\n+  list.set_output_level(StdoutLog, LogLevel::Info);\n+  list.set_output_level(StderrLog, LogLevel::Trace);\n+  EXPECT_EQ(LogLevel::Info, list.level_for(StdoutLog));\n+  EXPECT_EQ(LogLevel::Trace, list.level_for(StderrLog));\n@@ -240,3 +240,3 @@\n-  list.set_output_level(&StdoutLog, LogLevel::Off);\n-  EXPECT_EQ(LogLevel::Off, list.level_for(&StdoutLog));\n-  EXPECT_EQ(LogLevel::Trace, list.level_for(&StderrLog));\n+  list.set_output_level(StdoutLog, LogLevel::Off);\n+  EXPECT_EQ(LogLevel::Off, list.level_for(StdoutLog));\n+  EXPECT_EQ(LogLevel::Trace, list.level_for(StderrLog));\n@@ -255,1 +255,1 @@\n-  EXPECT_EQ(LogLevel::Trace, list.level_for(&StderrLog));\n+  EXPECT_EQ(LogLevel::Trace, list.level_for(StderrLog));\n","filename":"test\/hotspot\/gtest\/logging\/test_logOutputList.cpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,2 +42,2 @@\n-    EXPECT_TRUE(ts->has_output(&StdoutLog));\n-    EXPECT_FALSE(ts->has_output(&StderrLog));\n+    EXPECT_TRUE(ts->has_output(StdoutLog));\n+    EXPECT_FALSE(ts->has_output(StderrLog));\n@@ -49,2 +49,2 @@\n-  ts.set_output_level(&StderrLog, LogLevel::Trace);\n-  EXPECT_TRUE(ts.has_output(&StderrLog));\n+  ts.set_output_level(StderrLog, LogLevel::Trace);\n+  EXPECT_TRUE(ts.has_output(StderrLog));\n@@ -52,2 +52,2 @@\n-  ts.set_output_level(&StderrLog, LogLevel::Off);\n-  EXPECT_FALSE(ts.has_output(&StderrLog));\n+  ts.set_output_level(StderrLog, LogLevel::Off);\n+  EXPECT_FALSE(ts.has_output(StderrLog));\n@@ -66,1 +66,1 @@\n-  ts.set_output_level(&StdoutLog, LogLevel::Info);\n+  ts.set_output_level(StdoutLog, LogLevel::Info);\n@@ -72,1 +72,1 @@\n-  ts.set_output_level(&StdoutLog, LogLevel::Default);\n+  ts.set_output_level(StdoutLog, LogLevel::Default);\n@@ -77,1 +77,1 @@\n-  LogOutput* output = &StdoutLog;\n+  LogOutput* output = StdoutLog;\n","filename":"test\/hotspot\/gtest\/logging\/test_logTagSet.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"}]}