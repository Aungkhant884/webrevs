{"files":[{"patch":"@@ -362,0 +362,28 @@\n+#ifdef ASSERT\n+void SubTasksDone::all_tasks_completed_impl(uint skipped[], size_t skipped_size) {\n+  if (Atomic::cmpxchg(&_verification_done, false, true)) {\n+    \/\/ another thread has done the verification\n+    return;\n+  }\n+  \/\/ all non-skipped tasks are claimed\n+  for (uint i = 0; i < _n_tasks; ++i) {\n+    if (!_tasks[i]) {\n+      auto is_skipped = false;\n+      for (size_t j = 0; j < skipped_size; ++j) {\n+        if (i == skipped[j]) {\n+          is_skipped = true;\n+          break;\n+        }\n+      }\n+      assert(is_skipped, \"%d not claimed.\", i);\n+    }\n+  }\n+  \/\/ all skipped tasks are *not* claimed\n+  for (size_t i = 0; i < skipped_size; ++i) {\n+    auto task_index = skipped[i];\n+    assert(task_index < _n_tasks, \"Array in range.\");\n+    assert(!_tasks[task_index], \"%d is both claimed and skipped.\", task_index);\n+  }\n+}\n+#endif\n+\n","filename":"src\/hotspot\/share\/gc\/shared\/workgroup.cpp","additions":28,"deletions":0,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -308,1 +308,0 @@\n-  \/\/ make sure verification logic is run only once\n@@ -310,0 +309,1 @@\n+  \/\/ make sure verification logic is run exactly once\n@@ -311,0 +311,1 @@\n+  void all_tasks_completed_impl(uint skipped[], size_t skipped_size);\n@@ -313,28 +314,0 @@\n-  void all_tasks_completed_impl(uint skipped[], size_t skipped_size) {\n-#ifdef ASSERT\n-    if (Atomic::cmpxchg(&_verification_done, false, true)) {\n-      \/\/ another thread has done the verification\n-      return;\n-    }\n-    \/\/ all non-skipped tasks are claimed\n-    for (uint i = 0; i < _n_tasks; ++i) {\n-      if (!_tasks[i]) {\n-        auto is_skipped = false;\n-        for (size_t j = 0; j < skipped_size; ++j) {\n-          if (i == skipped[j]) {\n-            is_skipped = true;\n-            break;\n-          }\n-        }\n-        assert(is_skipped, \"%d not claimed.\", i);\n-      }\n-    }\n-    \/\/ all skipped tasks are *not* claimed\n-    for (size_t i = 0; i < skipped_size; ++i) {\n-      auto task_index = skipped[i];\n-      assert(task_index < _n_tasks, \"Array in range.\");\n-      assert(!_tasks[task_index], \"%d is both claimed and skipped.\", task_index);\n-    }\n-#endif\n-  }\n-\n@@ -362,1 +335,1 @@\n-    all_tasks_completed_impl(nullptr, 0);\n+    DEBUG_ONLY(all_tasks_completed_impl(nullptr, 0);)\n@@ -371,1 +344,1 @@\n-    all_tasks_completed_impl(skipped, ARRAY_SIZE(skipped));\n+    DEBUG_ONLY(all_tasks_completed_impl(skipped, ARRAY_SIZE(skipped));)\n","filename":"src\/hotspot\/share\/gc\/shared\/workgroup.hpp","additions":4,"deletions":31,"binary":false,"changes":35,"status":"modified"}]}