{"files":[{"patch":"@@ -189,5 +189,4 @@\n-     * @deprecated Destroying a thread group and its subgroups is not an atomic\n-     *             operation and is inherently racy with respect to threads that\n-     *             have been created but have not started. The concept of daemon\n-     *             thread group that is automatically destroyed will be removed\n-     *             in a future release.\n+     * @deprecated The API and mechanism for destroying a ThreadGroup is inherently\n+     *             flawed. The ability to explicitly or automatically destroy a\n+     *             thread group, and the concept of daemon thread group, will be\n+     *             removed in a future release.\n@@ -206,5 +205,3 @@\n-     * @deprecated Destroying a thread group and its subgroups is not an atomic\n-     *             operation and is inherently racy with respect to threads that\n-     *             have been created but have not started. The ability to explicitly\n-     *             or automatically destroy a thread group will be removed in a\n-     *             future release.\n+     * @deprecated The API and mechanism for destroying a ThreadGroup is inherently\n+     *             flawed. The ability to explicitly or automatically destroy a\n+     *             thread group will be removed in a future release.\n@@ -235,5 +232,4 @@\n-     * @deprecated Destroying a thread group and its subgroups is not an atomic\n-     *             operation and is inherently racy with respect to threads that\n-     *             have been created but have not started. The concept of daemon\n-     *             thread group that is automatically destroyed will be removed\n-     *             in a future release.\n+     * @deprecated The API and mechanism for destroying a ThreadGroup is inherently\n+     *             flawed. The ability to explicitly or automatically destroy a\n+     *             thread group, and the concept of daemon thread group, will be\n+     *             removed in a future release.\n@@ -788,4 +784,3 @@\n-     * @deprecated Destroying a thread group and its subgroups is not an atomic\n-     *             operation and is inherently racy with respect to threads that\n-     *             have been created but have not started. The ability to explicitly\n-     *             destroy a thread group will be removed in a future release.\n+     * @deprecated The API and mechanism for destroying a ThreadGroup is inherently\n+     *             flawed. The ability to explicitly or automatically destroy a\n+     *             thread group will be removed in a future release.\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ThreadGroup.java","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"}]}