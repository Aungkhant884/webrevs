{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -307,1 +307,1 @@\n-     * where {@code ':'} stands for itself.\n+     * where <i>syntax<\/i> must not be empty and {@code ':'} stands for itself.\n","filename":"src\/java.base\/share\/classes\/java\/nio\/file\/FileSystem.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -178,1 +178,1 @@\n-        if (pos <= 0 || pos == syntaxAndInput.length() - 1) {\n+        if (pos <= 0) {\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/jrtfs\/JrtFileSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -284,1 +284,1 @@\n-        if (pos <= 0 || pos == syntaxAndInput.length() - 1)\n+        if (pos <= 0)\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixFileSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -264,1 +264,1 @@\n-        if (pos <= 0 || pos == syntaxAndInput.length() - 1)\n+        if (pos <= 0)\n","filename":"src\/java.base\/windows\/classes\/sun\/nio\/fs\/WindowsFileSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -444,1 +444,1 @@\n-        if (pos <= 0 || pos == syntaxAndInput.length() - 1) {\n+        if (pos <= 0) {\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipFileSystem.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -71,12 +71,0 @@\n-    static void assertBadSyntaxAndPattern(String syntaxAndPattern) {\n-        try {\n-            FileSystems.getDefault().getPathMatcher(syntaxAndPattern);\n-            System.out.printf(\"\\\"%s\\\" ==> no IllegalArgumentException%n\",\n-                              syntaxAndPattern);\n-            failures++;\n-        } catch (IllegalArgumentException iae) {\n-            System.out.printf(\"IllegalArgumentException for \\\"%s\\\" ==> OKAY%n\",\n-                              syntaxAndPattern);\n-        }\n-    }\n-\n@@ -99,0 +87,1 @@\n+        assertMatch(\"\", \"\");\n@@ -152,2 +141,7 @@\n-        assertBadSyntaxAndPattern(\":glob\");                 \/\/ colon at head\n-        assertBadSyntaxAndPattern(\"glob:\");                 \/\/ colon at tail\n+        try {\n+            FileSystems.getDefault().getPathMatcher(\":glob\");\n+            System.err.println(\"No IllegalArgumentException for \\\":glob\\\"\");\n+            failures++;\n+        } catch (IllegalArgumentException iae) {\n+            System.out.println(\"IllegalArgumentException for \\\":glob\\\" OKAY\");\n+        }\n","filename":"test\/jdk\/java\/nio\/file\/PathMatcher\/Basic.java","additions":8,"deletions":14,"binary":false,"changes":22,"status":"modified"}]}