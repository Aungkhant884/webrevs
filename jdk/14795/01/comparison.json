{"files":[{"patch":"@@ -26,0 +26,1 @@\n+#include <cmath>\n@@ -27,1 +28,0 @@\n-#include <math.h>\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/d3d\/D3DTextRenderer.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#include <cmath>\n+\n@@ -30,2 +32,0 @@\n-#include \"math.h\"\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/d3d\/D3DVertexCacher.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#include <cmath>                \/* for cos(), sin(), etc *\/\n+\n@@ -38,2 +40,0 @@\n-#include <math.h>                \/* for cos(), sin(), etc *\/\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/java2d\/windows\/GDIRenderer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#include <cmath>\n+\n@@ -31,2 +33,0 @@\n-#include \"math.h\"\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/ThemeReader.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -91,3 +91,3 @@\n-void *safe_Malloc(size_t size) throw (std::bad_alloc);\n-void *safe_Calloc(size_t num, size_t size) throw (std::bad_alloc);\n-void *safe_Realloc(void *memblock, size_t size) throw (std::bad_alloc);\n+void *safe_Malloc(size_t size);\n+void *safe_Calloc(size_t num, size_t size);\n+void *safe_Realloc(void *memblock, size_t size);\n@@ -98,1 +98,1 @@\n-jthrowable safe_ExceptionOccurred(JNIEnv *env) throw (std::bad_alloc);\n+jthrowable safe_ExceptionOccurred(JNIEnv *env);\n@@ -114,1 +114,1 @@\n-void throw_if_shutdown(void) throw (awt_toolkit_shutdown);\n+void throw_if_shutdown(void);\n@@ -123,8 +123,4 @@\n-    void *safe_Malloc_outofmem(size_t size, const char *, int)\n-        throw (std::bad_alloc);\n-    void *safe_Calloc_outofmem(size_t num, size_t size, const char *, int)\n-        throw (std::bad_alloc);\n-    void *safe_Realloc_outofmem(void *memblock, size_t size, const char *, int)\n-        throw (std::bad_alloc);\n-    void * CDECL operator new(size_t size, const char *, int)\n-        throw (std::bad_alloc);\n+    void *safe_Malloc_outofmem(size_t size, const char *, int);\n+    void *safe_Calloc_outofmem(size_t num, size_t size, const char *, int);\n+    void *safe_Realloc_outofmem(void *memblock, size_t size, const char *, int);\n+    void * CDECL operator new(size_t size, const char *, int);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/alloc.h","additions":9,"deletions":13,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#include <cmath>\n+\n@@ -50,1 +52,0 @@\n-#include \"math.h\"\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Component.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#include <cmath>\n+\n@@ -38,2 +40,0 @@\n-#include \"math.h\"\n-\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_DesktopProperties.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include <cmath>\n@@ -27,1 +28,0 @@\n-#include <math.h>\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Font.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+#include <cmath>\n+#include <cfloat>\n@@ -31,2 +33,0 @@\n-#include <float.h>\n-#include <math.h>\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintControl.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include <cmath>\n@@ -28,1 +29,0 @@\n-#include <math.h>\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_PrintJob.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1991,1 +1991,1 @@\n-void throw_if_shutdown(void) throw (awt_toolkit_shutdown)\n+void throw_if_shutdown(void)\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Toolkit.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,0 +40,1 @@\n+#include <cmath> \/\/ ceil()\n@@ -41,1 +42,0 @@\n-#include <sun_awt_Win32GraphicsDevice.h>\n@@ -49,1 +49,0 @@\n-#include \"dither.h\"\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Win32GraphicsDevice.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include <cmath>\n@@ -48,1 +49,0 @@\n-#include <math.h>\n@@ -50,1 +50,1 @@\n-typedef __int32 LONG_PTR;\n+typedef int32_t LONG_PTR;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Window.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -84,3 +84,3 @@\n-void *safe_Malloc(size_t size) throw (std::bad_alloc) {\n-    register void *ret_val = malloc(size);\n-    if (ret_val == NULL) {\n+void *safe_Malloc(size_t size) {\n+    void *ptr = malloc(size);\n+    if (ptr == nullptr) {\n@@ -90,1 +90,1 @@\n-    return ret_val;\n+    return ptr;\n@@ -93,3 +93,3 @@\n-void *safe_Calloc(size_t num, size_t size) throw (std::bad_alloc) {\n-    register void *ret_val = calloc(num, size);\n-    if (ret_val == NULL) {\n+void *safe_Calloc(size_t num, size_t size) {\n+    void *ptr = calloc(num, size);\n+    if (ptr == nullptr) {\n@@ -99,1 +99,1 @@\n-    return ret_val;\n+    return ptr;\n@@ -102,2 +102,2 @@\n-void *safe_Realloc(void *memblock, size_t size) throw (std::bad_alloc) {\n-    register void *ret_val = realloc(memblock, size);\n+void *safe_Realloc(void *memblock, size_t size) {\n+    void *ptr = realloc(memblock, size);\n@@ -106,2 +106,2 @@\n-    if (memblock != NULL && size == 0) {\n-        return ret_val; \/\/ even if it's NULL\n+    if (memblock != nullptr && size == 0) {\n+        return ptr; \/\/ even if it's NULL\n@@ -110,1 +110,1 @@\n-    if (ret_val == NULL) {\n+    if (ptr == nullptr) {\n@@ -114,1 +114,1 @@\n-    return ret_val;\n+    return ptr;\n@@ -123,1 +123,1 @@\n-void * CDECL operator new(size_t size) throw (std::bad_alloc) {\n+void * CDECL operator new(size_t size) {\n@@ -163,1 +163,1 @@\n-safe_ExceptionOccurred(JNIEnv *env) throw (std::bad_alloc) {\n+safe_ExceptionOccurred(JNIEnv *env) {\n@@ -191,2 +191,1 @@\n-rand_alloc_fail(const char *file, int line) throw (std::bad_alloc)\n-{\n+rand_alloc_fail(const char *file, int line) {\n@@ -216,3 +215,1 @@\n-void *safe_Malloc_outofmem(size_t size, const char *file, int line)\n-    throw (std::bad_alloc)\n-{\n+void *safe_Malloc_outofmem(size_t size, const char *file, int line) {\n@@ -223,3 +220,1 @@\n-void *safe_Calloc_outofmem(size_t num, size_t size, const char *file, int line)\n-    throw (std::bad_alloc)\n-{\n+void *safe_Calloc_outofmem(size_t num, size_t size, const char *file, int line) {\n@@ -231,3 +226,1 @@\n-                            int line)\n-    throw (std::bad_alloc)\n-{\n+                            int line) {\n@@ -238,3 +231,1 @@\n-void * CDECL operator new(size_t size, const char *file, int line)\n-    throw (std::bad_alloc)\n-{\n+void * CDECL operator new(size_t size, const char *file, int line) {\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_new.cpp","additions":21,"deletions":30,"binary":false,"changes":51,"status":"modified"}]}