{"files":[{"patch":"@@ -29,0 +29,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -141,1 +142,1 @@\n-enum class MEMFLAGS {\n+enum class MEMFLAGS : uint8_t  {\n@@ -146,0 +147,2 @@\n+\/\/ Extra insurance that MEMFLAGS truly has the same size as uint8_t.\n+STATIC_ASSERT(sizeof(MEMFLAGS) == sizeof(uint8_t));\n","filename":"src\/hotspot\/share\/memory\/allocation.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-  const uint8_t _flags;\n+  const MEMFLAGS _flags;\n@@ -122,1 +122,1 @@\n-  inline MEMFLAGS flags() const { return (MEMFLAGS)_flags; }\n+  inline MEMFLAGS flags() const { return _flags; }\n","filename":"src\/hotspot\/share\/services\/mallocHeader.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  : _size(size), _mst_marker(mst_marker), _flags(NMTUtil::flag_to_index(flags)),\n+  : _size(size), _mst_marker(mst_marker), _flags(flags),\n","filename":"src\/hotspot\/share\/services\/mallocHeader.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}