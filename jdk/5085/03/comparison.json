{"files":[{"patch":"@@ -44,0 +44,1 @@\n+#include \"gc\/shared\/suspendibleThreadSet.hpp\"\n@@ -165,0 +166,11 @@\n+void ParallelScavengeHeap::safepoint_synchronize_begin() {\n+  if (UseStringDeduplication) {\n+    SuspendibleThreadSet::synchronize();\n+  }\n+}\n+\n+void ParallelScavengeHeap::safepoint_synchronize_end() {\n+  if (UseStringDeduplication) {\n+    SuspendibleThreadSet::desynchronize();\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -142,0 +142,3 @@\n+  virtual void safepoint_synchronize_begin();\n+  virtual void safepoint_synchronize_end();\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -110,0 +110,6 @@\n+void ParCompactionManager::flush_all_string_dedup_requests() {\n+  uint parallel_gc_threads = ParallelScavengeHeap::heap()->workers().total_workers();\n+  for (uint i=0; i<=parallel_gc_threads; i++) {\n+    _manager_array[i]->flush_string_dedup_requests();\n+  }\n+}\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"gc\/shared\/stringdedup\/stringDedup.hpp\"\n@@ -91,0 +92,2 @@\n+  StringDedup::Requests _string_dedup_requests;\n+\n@@ -128,0 +131,4 @@\n+  void flush_string_dedup_requests() {\n+    _string_dedup_requests.flush();\n+  }\n+\n@@ -139,0 +146,2 @@\n+  static void flush_all_string_dedup_requests();\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.hpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,0 +34,1 @@\n+#include \"gc\/parallel\/psStringDedup.hpp\"\n@@ -111,0 +112,6 @@\n+\n+      if (StringDedup::is_enabled() &&\n+          java_lang_String::is_instance_inlined(obj) &&\n+          psStringDedup::is_candidate_from_mark(obj)) {\n+        _string_dedup_requests.add(obj);\n+      }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.inline.hpp","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -43,0 +43,1 @@\n+#include \"gc\/parallel\/psStringDedup.hpp\"\n@@ -1024,0 +1025,2 @@\n+  ParCompactionManager::flush_all_string_dedup_requests();\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -124,0 +124,1 @@\n+    manager->flush_string_dedup_requests();\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"gc\/shared\/stringdedup\/stringDedup.hpp\"\n@@ -95,0 +96,2 @@\n+  StringDedup::Requests _string_dedup_requests;\n+\n@@ -149,0 +152,2 @@\n+  void flush_string_dedup_requests() { _string_dedup_requests.flush(); }\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+#include \"gc\/parallel\/psStringDedup.hpp\"\n@@ -287,0 +288,4 @@\n+\n+      if (psStringDedup::is_candidate_from_evacuation(new_obj, new_obj_is_tenured)) {\n+        _string_dedup_requests.add(o);\n+      }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,36 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#include \"precompiled.hpp\"\n+#include \"gc\/parallel\/psParallelCompact.inline.hpp\"\n+#include \"gc\/parallel\/psScavenge.hpp\"\n+#include \"gc\/parallel\/psStringDedup.hpp\"\n+\n+bool psStringDedup::is_candidate_from_mark(oop java_string) {\n+  \/\/ Candidate if string is being evacuated from young to old but has not\n+  \/\/ reached the deduplication age threshold, i.e. has not previously been a\n+  \/\/ candidate during its life in the young generation.\n+  return PSScavenge::is_obj_in_young(java_string) &&\n+         StringDedup::is_below_threshold_age(java_string->age());\n+}\n","filename":"src\/hotspot\/share\/gc\/parallel\/psStringDedup.cpp","additions":36,"deletions":0,"binary":false,"changes":36,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARE_GC_PARALLEL_PSSTRINGDEDUP_HPP\n+#define SHARE_GC_PARALLEL_PSSTRINGDEDUP_HPP\n+\n+#include \"classfile\/javaClasses.inline.hpp\"\n+#include \"gc\/shared\/stringdedup\/stringDedup.hpp\"\n+#include \"memory\/allStatic.hpp\"\n+#include \"oops\/oopsHierarchy.hpp\"\n+\n+class psStringDedup : AllStatic {\n+public:\n+  static bool is_candidate_from_mark(oop java_string);\n+  \/\/ Candidate selection policy for young during evacuation.\n+  \/\/ If to is young then age should be the new (survivor's) age.\n+  \/\/ if to is old then age should be the age of the copied from object.\n+  static bool is_candidate_from_evacuation(oop obj,\n+                                           bool obj_is_tenured) {\n+    return StringDedup::is_enabled() &&\n+           java_lang_String::is_instance_inlined(obj) &&\n+           (obj_is_tenured ?\n+            StringDedup::is_below_threshold_age(obj->age()) :\n+            StringDedup::is_threshold_age(obj->age()));\n+  }\n+};\n+#endif \/\/ SHARE_GC_PARALLEL_PSSTRINGDEDUP_HPP\n","filename":"src\/hotspot\/share\/gc\/parallel\/psStringDedup.hpp","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -119,1 +119,1 @@\n-  } else if (!UseG1GC && !UseShenandoahGC && !UseZGC) {\n+  } else if (!UseG1GC && !UseShenandoahGC && !UseZGC && !UseParallelGC) {\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupConfig.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,0 +39,13 @@\n+\/*\n+ * @test TestStringDeduplicationAgeThreshold\n+ * @summary Test string deduplication age threshold\n+ * @bug 8029075\n+ * @requires vm.gc.Parallel\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationAgeThreshold Parallel\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationAgeThreshold.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,0 +39,13 @@\n+\/*\n+ * @test TestStringDeduplicationFullGC\n+ * @summary Test string deduplication during full GC\n+ * @bug 8029075\n+ * @requires vm.gc.Parallel\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationFullGC Parallel\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationFullGC.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,0 +39,13 @@\n+\/*\n+ * @test TestStringDeduplicationInterned\n+ * @summary Test string deduplication of interned strings\n+ * @bug 8029075\n+ * @requires vm.gc.Parallel\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationInterned Parallel\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationInterned.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,0 +39,13 @@\n+\/*\n+ * @test TestStringDeduplicationPrintOptions\n+ * @summary Test string deduplication print options\n+ * @bug 8029075\n+ * @requires vm.gc.Parallel\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationPrintOptions Parallel\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationPrintOptions.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,0 +39,13 @@\n+\/*\n+ * @test TestStringDeduplicationTableResize\n+ * @summary Test string deduplication table resize\n+ * @bug 8029075\n+ * @requires vm.gc.Parallel\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationTableResize Parallel\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationTableResize.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -39,0 +39,13 @@\n+\/*\n+ * @test TestStringDeduplicationYoungGC\n+ * @summary Test string deduplication during young GC\n+ * @bug 8029075\n+ * @requires vm.gc.Parallel\n+ * @library \/test\/lib\n+ * @library \/\n+ * @modules java.base\/jdk.internal.misc:open\n+ * @modules java.base\/java.lang:open\n+ *          java.management\n+ * @run driver gc.stringdedup.TestStringDeduplicationYoungGC Parallel\n+ *\/\n+\n","filename":"test\/hotspot\/jtreg\/gc\/stringdedup\/TestStringDeduplicationYoungGC.java","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}