{"files":[{"patch":"@@ -142,2 +142,2 @@\n-  void safepoint_synchronize_begin();\n-  void safepoint_synchronize_end();\n+  virtual void safepoint_synchronize_begin();\n+  virtual void safepoint_synchronize_end();\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -113,1 +113,2 @@\n-      if (StringDedup::is_enabled() && java_lang_String::is_instance_inlined(obj) &&\n+      if (StringDedup::is_enabled() &&\n+          java_lang_String::is_instance_inlined(obj) &&\n@@ -115,7 +116,1 @@\n-        \/\/ Evacuation of objects to old gen may fail and part of the young space is compacted within\n-        \/\/ the space itself. In this case, we can have strings with age below the threshold deduplicated\n-        \/\/ without being evacuated to the old gen. We rely on test_and_set_deduplication_requested\n-        \/\/ to prevent multiple deduplication of such strings.\n-        if (!java_lang_String::test_and_set_deduplication_requested(obj)) {\n-          _string_dedup_requests.add(obj);\n-        }\n+        _string_dedup_requests.add(obj);\n","filename":"src\/hotspot\/share\/gc\/parallel\/psCompactionManager.inline.hpp","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -289,2 +289,1 @@\n-      if (psStringDedup::is_candidate_from_evacuation(o->klass(), new_obj->age(), new_obj_is_tenured)) {\n-        if (!java_lang_String::test_and_set_deduplication_requested(o)) {\n+      if (psStringDedup::is_candidate_from_evacuation(new_obj, new_obj_is_tenured)) {\n@@ -292,1 +291,0 @@\n-        }\n","filename":"src\/hotspot\/share\/gc\/parallel\/psPromotionManager.inline.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/javaClasses.inline.hpp\"\n@@ -38,2 +39,1 @@\n-  static bool is_candidate_from_evacuation(const Klass* klass,\n-                                           uint age,\n+  static bool is_candidate_from_evacuation(oop obj,\n@@ -41,1 +41,2 @@\n-    return StringDedup::is_enabled_string(klass) &&\n+    return StringDedup::is_enabled() &&\n+           java_lang_String::is_instance_inlined(obj) &&\n@@ -43,2 +44,2 @@\n-            StringDedup::is_below_threshold_age(age) :\n-            StringDedup::is_threshold_age(age));\n+            StringDedup::is_below_threshold_age(obj->age()) :\n+            StringDedup::is_threshold_age(obj->age()));\n","filename":"src\/hotspot\/share\/gc\/parallel\/psStringDedup.hpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-  } else if (UseEpsilonGC || UseSerialGC) {\n+  } else if (!UseG1GC && !UseShenandoahGC && !UseZGC && !UseParallelGC) {\n","filename":"src\/hotspot\/share\/gc\/shared\/stringdedup\/stringDedupConfig.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}