{"files":[{"patch":"@@ -776,2 +776,2 @@\n-     * <p>An implementation may choose to not support the functionality\n-     * of this method, in which case {@link\n+     * <p>An implementation may choose to not support the\n+     * functionality of this method, in which case {@link\n@@ -799,8 +799,9 @@\n-     * file object will be the object associated with the outermost\n-     * class or interface of the element. For top-level classes and\n-     * interfaces, the name of the file object will commonly contain\n-     * the name of the top-level class or interface. For example, for\n-     * class {@code Foo}, its file name could contain \"{@code\n-     * Foo.java}\". Note however that a single source file can contain\n-     * multiple top-level files so this pattern so this relationship\n-     * does not always hold.\n+     * file object will be the object associated with the {@linkplain\n+     * #getOutermostTypeElement(Element) outermost class or interface\n+     * of the element}. For top-level classes and interfaces, the name\n+     * of the file object will commonly contain the name of the\n+     * top-level class or interface. For example, for class {@code\n+     * Foo}, its file name could contain \"{@code Foo.java}\". Note\n+     * however that a single source file can contain multiple\n+     * top-level files so this pattern so this relationship does not\n+     * always hold.\n@@ -817,4 +818,0 @@\n-        \/\/ Note to reviewers: if this work is done after 8140442: \"Add\n-        \/\/ getOutermostTypeElement to javax.lang.model utility class\",\n-        \/\/ the operational specs can be rephrased in terms of that\n-        \/\/ method.\n","filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/util\/Elements.java","additions":11,"deletions":14,"binary":false,"changes":25,"status":"modified"}]}