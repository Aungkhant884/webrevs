{"files":[{"patch":"@@ -25754,1 +25754,1 @@\n-                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n+                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" componentPropertyName=\"background\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n@@ -25860,1 +25860,1 @@\n-                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n+                           <matte red=\"255\" green=\"255\" blue=\"255\" alpha=\"255\" componentPropertyName=\"background\" uiDefaultParentName=\"nimbusLightBackground\" hueOffset=\"0.0\" saturationOffset=\"0.0\" brightnessOffset=\"0.0\" alphaOffset=\"0\"\/>\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,132 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8058704\n+ * @key headful\n+ * @summary  Verifies if Nimbus honor JTextPane background color\n+ * @run main TestNimbusBGColor\n+ *\/\n+import java.awt.Color;\n+import java.awt.Dimension;\n+import java.awt.Point;\n+import java.awt.Rectangle;\n+import java.awt.Robot;\n+import javax.swing.JFrame;\n+import javax.swing.JTextPane;\n+import javax.swing.JEditorPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+public class TestNimbusBGColor {\n+\n+    static JFrame frame;\n+    static volatile Point pt;\n+    static volatile Rectangle bounds;\n+    static Robot robot;\n+\n+    public static void main(String[] args) throws Exception {\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                UIManager.setLookAndFeel(\"javax.swing.plaf.nimbus.NimbusLookAndFeel\");\n+            } catch (Exception checkedExceptionsPleaseDie) {\n+                throw new RuntimeException(checkedExceptionsPleaseDie);\n+            }\n+        });\n+        robot = new Robot();\n+        testTextPane();\n+        testEditorPane();\n+    }\n+\n+    private static void testTextPane() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                JTextPane tp = new JTextPane();\n+                tp.setForeground(Color.WHITE);\n+                tp.setBackground(Color.BLACK);\n+                tp.setText(\"This text should be white on black\");\n+\n+                frame = new JFrame();\n+                frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);\n+                frame.add(tp);\n+                frame.setSize(new Dimension(480, 360));\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                pt = frame.getLocationOnScreen();\n+                bounds = frame.getBounds();\n+            });\n+            if (!(robot.getPixelColor(pt.x + bounds.width\/2,\n+                                      pt.y + bounds.height\/2)\n+                                .equals(Color.BLACK))) {\n+                throw new RuntimeException(\"JTextPane Color not same as the color being set\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private static void testEditorPane() throws Exception {\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                JEditorPane editorPane = new JEditorPane();\n+                editorPane.setContentType(\"text\/plain\");\n+                editorPane.setEditable(false);\n+                editorPane.setForeground(Color.GREEN);\n+                editorPane.setBackground(Color.RED);\n+                editorPane.setText(\"This text should be green on red\");\n+\n+                frame = new JFrame();\n+                frame.setDefaultCloseOperation(frame.DISPOSE_ON_CLOSE);\n+                frame.add(editorPane);\n+                frame.setSize(new Dimension(480, 360));\n+                frame.setLocationRelativeTo(null);\n+                frame.setVisible(true);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            SwingUtilities.invokeAndWait(() -> {\n+                pt = frame.getLocationOnScreen();\n+                bounds = frame.getBounds();\n+            });\n+            if (!(robot.getPixelColor(pt.x + bounds.width\/2,\n+                                      pt.y + bounds.height\/2)\n+                                .equals(Color.RED))) {\n+                throw new RuntimeException(\"JEditorPane bg Color not same as the color being set\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/plaf\/nimbus\/TestNimbusBGColor.java","additions":132,"deletions":0,"binary":false,"changes":132,"status":"added"}]}