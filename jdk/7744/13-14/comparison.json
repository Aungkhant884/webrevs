{"files":[{"patch":"@@ -141,0 +141,5 @@\n+    \/**\n+     * Class of the underly carrier.\n+     *\/\n+    private final Class<?> carrierClass;\n+\n@@ -504,1 +509,2 @@\n-            return new Carrier(reshapeConstructor(carrierShape, constructor),\n+            return new Carrier(Object[].class,\n+                               reshapeConstructor(carrierShape, constructor),\n@@ -807,1 +813,2 @@\n-            return new Carrier(reshapeConstructor(carrierShape, constructor),\n+            return new Carrier(constructor.type().returnType(),\n+                               reshapeConstructor(carrierShape, constructor),\n@@ -848,1 +855,3 @@\n-    private Carrier(MethodHandle constructor, List<MethodHandle> components) {\n+    private Carrier(Class<?> carrierClass,\n+                    MethodHandle constructor, List<MethodHandle> components) {\n+        this.carrierClass = carrierClass;\n@@ -1025,1 +1034,1 @@\n-     * is ignored. The carrier constructor will be of type {@link Object}.\n+     * is ignored.\n@@ -1072,1 +1081,9 @@\n-     * {@return the constructor {@link MethodHandle} for the carrier.}\n+     * {@return the underlying carrier class.}\n+     *\/\n+    public Class<?> carrierClass() {\n+        return carrierClass;\n+    }\n+\n+    \/**\n+     * {@return the constructor {@link MethodHandle} for the carrier . The\n+     * carrier constructor will have a return type of {@link Object}.}\n@@ -1080,1 +1097,2 @@\n-     * for all the carrier's components.}\n+     * for all the carrier's components. The receiver type of the accessors\n+     * will be {@link Object}.}\n@@ -1087,1 +1105,2 @@\n-     * {@return a component accessor {@link MethodHandle} for component {@code i}.}\n+     * {@return a component accessor {@link MethodHandle} for component {@code i}.\n+     * The receiver type of the accessor will be {@link Object}.}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/runtime\/Carrier.java","additions":26,"deletions":7,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -61,0 +61,2 @@\n+        Class<?> carrierClass = carrier.carrierClass();\n+        assertTrue(!carrierClass.isArray(), \"carrier should be instance\");\n@@ -107,0 +109,2 @@\n+        Class<?> carrierClass = carrier.carrierClass();\n+        assertTrue(carrierClass.isArray(), \"carrier should be array\");\n","filename":"test\/jdk\/java\/lang\/runtime\/CarrierTest.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}