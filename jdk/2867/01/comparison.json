{"files":[{"patch":"@@ -749,2 +749,16 @@\n-  const TypeVect* vect_type() const { return in(MemNode::ValueIn)->bottom_type()->is_vect(); }\n-  uint length() const { return vect_type()->length(); } \/\/ Vector length\n+  const TypeVect* vect_type() const {\n+    const Type* type = in(MemNode::ValueIn)->bottom_type();\n+    if (type != Type::TOP) {\n+      return type->is_vect();\n+    } else {\n+      return NULL;\n+    }\n+  }\n+\n+  uint length() const {\n+    if (vect_type() != NULL) {\n+      return vect_type()->length();\n+    } else {\n+      return 0;\n+    }\n+  } \/\/ Vector length\n@@ -756,1 +770,8 @@\n-  virtual int memory_size() const { return vect_type()->length_in_bytes(); }\n+\n+  virtual int memory_size() const {\n+    if (vect_type() != NULL) {\n+      return vect_type()->length_in_bytes();\n+    } else {\n+      return 0;\n+    }\n+  }\n@@ -762,1 +783,7 @@\n-  uint element_size(void) { return type2aelembytes(vect_type()->element_basic_type()); }\n+  uint element_size(void) {\n+    if (vect_type() != NULL) {\n+      return type2aelembytes(vect_type()->element_basic_type());\n+    } else {\n+      return 0;\n+    }\n+  }\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":31,"deletions":4,"binary":false,"changes":35,"status":"modified"}]}