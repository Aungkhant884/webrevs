{"files":[{"patch":"@@ -164,0 +164,2 @@\n+ private:\n+  const Type* _bottom_type;\n@@ -165,1 +167,2 @@\n-  ReductionNode(Node *ctrl, Node* in1, Node* in2) : Node(ctrl, in1, in2) {}\n+  ReductionNode(Node *ctrl, Node* in1, Node* in2) : Node(ctrl, in1, in2),\n+               _bottom_type(Type::get_const_basic_type(in1->bottom_type()->basic_type())) {}\n@@ -173,2 +176,1 @@\n-    BasicType vbt = in(1)->bottom_type()->basic_type();\n-    return Type::get_const_basic_type(vbt);\n+    return _bottom_type;\n@@ -180,0 +182,3 @@\n+\n+  \/\/ Needed for proper cloning.\n+  virtual uint size_of() const { return sizeof(*this); }\n@@ -742,0 +747,2 @@\n+ private:\n+  const TypeVect* _vect_type;\n@@ -744,1 +751,1 @@\n-    : StoreNode(c, mem, adr, at, val, MemNode::unordered) {\n+    : StoreNode(c, mem, adr, at, val, MemNode::unordered), _vect_type(val->bottom_type()->is_vect()) {\n@@ -749,1 +756,1 @@\n-  const TypeVect* vect_type() const { return in(MemNode::ValueIn)->bottom_type()->is_vect(); }\n+  const TypeVect* vect_type() const { return _vect_type; }\n@@ -763,0 +770,3 @@\n+\n+  \/\/ Needed for proper cloning.\n+  virtual uint size_of() const { return sizeof(*this); }\n","filename":"src\/hotspot\/share\/opto\/vectornode.hpp","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"}]}