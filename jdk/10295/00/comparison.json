{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-        return (Action)actions.get(key);\n+        return actions.get(key);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/com\/sun\/java\/swing\/action\/ActionManager.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -200,1 +200,1 @@\n-            tokens = (String[])t.toArray(new String[0]);\n+            tokens = t.toArray(new String[0]);\n@@ -771,1 +771,1 @@\n-                        out.println(((Command)commands.get(keys[i])).usage);\n+                        out.println(commands.get(keys[i]).usage);\n@@ -1088,1 +1088,1 @@\n-                        n = (Type)pending.pop();\n+                        n = pending.pop();\n@@ -1484,1 +1484,1 @@\n-                            n = (Type)pending.pop();\n+                            n = pending.pop();\n@@ -1989,1 +1989,1 @@\n-        return (Command)commands.get(key);\n+        return commands.get(key);\n@@ -2085,1 +2085,1 @@\n-                        result.append((String)history.get(history.size() - 1));\n+                        result.append(history.get(history.size() - 1));\n@@ -2087,1 +2087,1 @@\n-                        Tokens item = new Tokens((String)history.get(history.size() - 1));\n+                        Tokens item = new Tokens(history.get(history.size() - 1));\n@@ -2091,1 +2091,1 @@\n-                        Tokens item = new Tokens((String)history.get(history.size() - 1));\n+                        Tokens item = new Tokens(history.get(history.size() - 1));\n@@ -2095,1 +2095,1 @@\n-                        Tokens item = new Tokens((String)history.get(history.size() - 1));\n+                        Tokens item = new Tokens(history.get(history.size() - 1));\n@@ -2118,1 +2118,1 @@\n-                                result.append((String)history.get(index));\n+                                result.append(history.get(index));\n@@ -2124,1 +2124,1 @@\n-                                String s = (String)history.get(i);\n+                                String s = history.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/CommandProcessor.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -959,1 +959,1 @@\n-            SignalInfo sigInfo = (SignalInfo) interruptedFrameMap.get(curFrame);\n+            SignalInfo sigInfo = interruptedFrameMap.get(curFrame);\n@@ -1781,1 +1781,1 @@\n-    return (JavaVFrame) vf.javaSender();\n+    return vf.javaSender();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/HSDB.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -491,1 +491,1 @@\n-        machDesc = ((RemoteDebuggerClient) debugger).getMachineDescription();\n+        machDesc = debugger.getMachineDescription();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/HotSpotAgent.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -99,1 +99,1 @@\n-    final int length = (int) cp.getLength();\n+    final int length = cp.getLength();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ci\/ciInstanceKlass.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -232,1 +232,1 @@\n-    return (NMethod) VMObjectFactory.newObject(NMethod.class, osrLinkField.getValue(addr));\n+    return VMObjectFactory.newObject(NMethod.class, osrLinkField.getValue(addr));\n@@ -466,1 +466,1 @@\n-        ((InstanceKlass)meta).dumpReplayData(out);\n+        meta.dumpReplayData(out);\n@@ -468,1 +468,1 @@\n-        ((Method)meta).dumpReplayData(out);\n+        meta.dumpReplayData(out);\n@@ -484,1 +484,1 @@\n-      ((InstanceKlass)method.getMethodHolder()).dumpReplayData(out);\n+      method.getMethodHolder().dumpReplayData(out);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/NMethod.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2009, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2009, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-  public ScopeValue getFieldAt(int i) { return (ScopeValue)fieldsValue.get(i); }\n+  public ScopeValue getFieldAt(int i) { return fieldsValue.get(i); }\n@@ -85,1 +85,1 @@\n-      ((ScopeValue)fieldsValue.get(0)).printOn(tty);\n+      fieldsValue.get(0).printOn(tty);\n@@ -89,1 +89,1 @@\n-      ((ScopeValue)fieldsValue.get(i)).printOn(tty);\n+      fieldsValue.get(i).printOn(tty);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/ObjectValue.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,1 +56,1 @@\n-    stack0Val = (int) stack0Addr.hashCode();\n+    stack0Val = stack0Addr.hashCode();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/code\/VMRegImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -95,2 +95,2 @@\n-        SAVED_ON_ENTRY_REG_COUNT = (int) db.lookupIntConstant(\"SAVED_ON_ENTRY_REG_COUNT\").intValue();\n-        C_SAVED_ON_ENTRY_REG_COUNT = (int) db.lookupIntConstant(\"C_SAVED_ON_ENTRY_REG_COUNT\").intValue();\n+        SAVED_ON_ENTRY_REG_COUNT = db.lookupIntConstant(\"SAVED_ON_ENTRY_REG_COUNT\").intValue();\n+        C_SAVED_ON_ENTRY_REG_COUNT = db.lookupIntConstant(\"C_SAVED_ON_ENTRY_REG_COUNT\").intValue();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/compiler\/ImmutableOopMapSet.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,1 @@\n-    return (LocalSym) locals.get(i);\n+    return locals.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicBlockSym.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -233,1 +233,1 @@\n-    return (GlobalSym) nameToSymMap.get(name);\n+    return nameToSymMap.get(name);\n@@ -359,1 +359,1 @@\n-        BlockSym block = (BlockSym) blocks.get(i);\n+        BlockSym block = blocks.get(i);\n@@ -372,1 +372,1 @@\n-    BlockSym block = (BlockSym) blocks.get(midIdx);\n+    BlockSym block = blocks.get(midIdx);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicCDebugInfoDataBase.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -55,1 +55,1 @@\n-    return (BaseClass) baseClasses.get(i);\n+    return baseClasses.get(i);\n@@ -69,1 +69,1 @@\n-    return (Field) fields.get(i);\n+    return fields.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicCompoundType.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -79,2 +79,2 @@\n-  public String getEnumName(int i)  { return ((Enum) enums.get(i)).getName();  }\n-  public long   getEnumValue(int i) { return ((Enum) enums.get(i)).getValue(); }\n+  public String getEnumName(int i)  { return enums.get(i).getName();  }\n+  public long   getEnumValue(int i) { return enums.get(i).getValue(); }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicEnumType.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,1 @@\n-    return (Type) argumentTypes.get(i);\n+    return argumentTypes.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicFunctionType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -93,1 +93,1 @@\n-    return (BasicLineNumberInfo) infoList.get(i);\n+    return infoList.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/cdbg\/basic\/BasicLineNumberMapping.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-      LoadObject ob = (LoadObject) objs.get(i);\n+      LoadObject ob = objs.get(i);\n@@ -119,1 +119,1 @@\n-       ThreadContext context = (ThreadContext) thread.getContext();\n+       ThreadContext context = thread.getContext();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/linux\/LinuxCDebugger.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -688,1 +688,1 @@\n-      BasicType type = (BasicType) primIndexToTypeMap.get(index);\n+      BasicType type = primIndexToTypeMap.get(index);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/windbg\/WindbgCDebugInfoBuilder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -319,1 +319,1 @@\n-    return (long[]) threadIntegerRegisterSet.get(threadId);\n+    return threadIntegerRegisterSet.get(threadId);\n@@ -431,1 +431,1 @@\n-    DLL dll = (DLL) nameToDllMap.get(objectName);\n+    DLL dll = nameToDllMap.get(objectName);\n@@ -510,1 +510,1 @@\n-      saprocPath = (String) searchList.get(0) + File.separator +\n+      saprocPath = searchList.get(0) + File.separator +\n@@ -539,1 +539,1 @@\n-      File dir = new File((String) searchList.get(i));\n+      File dir = new File(searchList.get(i));\n@@ -549,2 +549,2 @@\n-      dbgengPath = (String) searchList.get(i) + File.separator + \"dbgeng.dll\";\n-      dbghelpPath = (String) searchList.get(i) + File.separator + \"dbghelp.dll\";\n+      dbgengPath = searchList.get(i) + File.separator + \"dbgeng.dll\";\n+      dbghelpPath = searchList.get(i) + File.separator + \"dbghelp.dll\";\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/windbg\/WindbgDebuggerLocal.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    this.sysId    = (long)addr.getCIntegerAt(0, 4, true);\n+    this.sysId    = addr.getCIntegerAt(0, 4, true);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/windbg\/aarch64\/WindbgAARCH64Thread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    this.sysId    = (long)addr.getCIntegerAt(0, 4, true);\n+    this.sysId    = addr.getCIntegerAt(0, 4, true);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/windbg\/amd64\/WindbgAMD64Thread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-    this.sysId    = (long)addr.getCIntegerAt(0, 4, true);\n+    this.sysId    = addr.getCIntegerAt(0, 4, true);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/debugger\/windbg\/x86\/WindbgX86Thread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -98,2 +98,1 @@\n-        return (HeapRegionManager) VMObjectFactory.newObject(HeapRegionManager.class,\n-                                                             hrmAddr);\n+        return VMObjectFactory.newObject(HeapRegionManager.class, hrmAddr);\n@@ -104,1 +103,1 @@\n-        return (G1MonitoringSupport) VMObjectFactory.newObject(G1MonitoringSupport.class, monitoringSupportAddr);\n+        return VMObjectFactory.newObject(G1MonitoringSupport.class, monitoringSupportAddr);\n@@ -109,2 +108,1 @@\n-        return (HeapRegionSetBase) VMObjectFactory.newObject(HeapRegionSetBase.class,\n-                                                             oldSetAddr);\n+        return VMObjectFactory.newObject(HeapRegionSetBase.class, oldSetAddr);\n@@ -115,2 +113,1 @@\n-        return (HeapRegionSetBase) VMObjectFactory.newObject(HeapRegionSetBase.class,\n-                                                             archiveSetAddr);\n+        return VMObjectFactory.newObject(HeapRegionSetBase.class, archiveSetAddr);\n@@ -121,2 +118,1 @@\n-        return (HeapRegionSetBase) VMObjectFactory.newObject(HeapRegionSetBase.class,\n-                                                             humongousSetAddr);\n+        return VMObjectFactory.newObject(HeapRegionSetBase.class, humongousSetAddr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/G1CollectedHeap.java","additions":6,"deletions":10,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,2 +78,1 @@\n-        return (HeapRegion) VMObjectFactory.newObject(HeapRegion.class,\n-                                                      regionAddr);\n+        return VMObjectFactory.newObject(HeapRegion.class, regionAddr);\n@@ -142,1 +141,1 @@\n-        return (HeapRegion)VMObjectFactory.newObject(HeapRegion.class, regionAddr);\n+        return VMObjectFactory.newObject(HeapRegion.class, regionAddr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/G1HeapRegionTable.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-        type = (HeapRegionType)VMObjectFactory.newObject(HeapRegionType.class, typeAddr);\n+        type = VMObjectFactory.newObject(HeapRegionType.class, typeAddr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/HeapRegion.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,2 +62,1 @@\n-        return (G1HeapRegionTable) VMObjectFactory.newObject(G1HeapRegionTable.class,\n-                                                             regionsAddr);\n+        return VMObjectFactory.newObject(G1HeapRegionTable.class, regionsAddr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/g1\/HeapRegionManager.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,1 @@\n-      return (MutableSpace) VMObjectFactory.newObject(MutableSpace.class, objectSpaceField.getValue(addr));\n+      return VMObjectFactory.newObject(MutableSpace.class, objectSpaceField.getValue(addr));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/parallel\/PSOldGen.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-      return (MutableSpace) VMObjectFactory.newObject(MutableSpace.class, edenSpaceField.getValue(addr));\n+      return VMObjectFactory.newObject(MutableSpace.class, edenSpaceField.getValue(addr));\n@@ -68,1 +68,1 @@\n-      return (MutableSpace) VMObjectFactory.newObject(MutableSpace.class, fromSpaceField.getValue(addr));\n+      return VMObjectFactory.newObject(MutableSpace.class, fromSpaceField.getValue(addr));\n@@ -72,1 +72,1 @@\n-      return (MutableSpace) VMObjectFactory.newObject(MutableSpace.class, toSpaceField.getValue(addr));\n+      return VMObjectFactory.newObject(MutableSpace.class, toSpaceField.getValue(addr));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/parallel\/PSYoungGen.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -63,1 +63,1 @@\n-      return (PSYoungGen) VMObjectFactory.newObject(PSYoungGen.class, youngGenField.getValue());\n+      return VMObjectFactory.newObject(PSYoungGen.class, youngGenField.getValue());\n@@ -67,1 +67,1 @@\n-      return (PSOldGen) VMObjectFactory.newObject(PSOldGen.class, oldGenField.getValue());\n+      return VMObjectFactory.newObject(PSOldGen.class, oldGenField.getValue());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/parallel\/ParallelScavengeHeap.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -71,1 +71,1 @@\n-    return (ContiguousSpace) VMObjectFactory.newObject(ContiguousSpace.class, edenSpaceField.getValue(addr));\n+    return VMObjectFactory.newObject(ContiguousSpace.class, edenSpaceField.getValue(addr));\n@@ -75,1 +75,1 @@\n-    return (ContiguousSpace) VMObjectFactory.newObject(ContiguousSpace.class, fromSpaceField.getValue(addr));\n+    return VMObjectFactory.newObject(ContiguousSpace.class, fromSpaceField.getValue(addr));\n@@ -79,1 +79,1 @@\n-    return (ContiguousSpace) VMObjectFactory.newObject(ContiguousSpace.class, toSpaceField.getValue(addr));\n+    return VMObjectFactory.newObject(ContiguousSpace.class, toSpaceField.getValue(addr));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/serial\/DefNewGeneration.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-    return (ContiguousSpace) VMObjectFactory.newObject(ContiguousSpace.class, theSpaceField.getValue(addr));\n+    return VMObjectFactory.newObject(ContiguousSpace.class, theSpaceField.getValue(addr));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/serial\/TenuredGeneration.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -130,3 +130,2 @@\n-      return (GenerationSpec)\n-              VMObjectFactory.newObject(GenerationSpec.class,\n-                      youngGenSpecField.getAddress());\n+      return VMObjectFactory.newObject(GenerationSpec.class,\n+              youngGenSpecField.getAddress());\n@@ -134,3 +133,2 @@\n-      return (GenerationSpec)\n-              VMObjectFactory.newObject(GenerationSpec.class,\n-                      oldGenSpecField.getAddress());\n+      return VMObjectFactory.newObject(GenerationSpec.class,\n+              oldGenSpecField.getAddress());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/GenCollectedHeap.java","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -166,1 +166,1 @@\n-    return (VirtualSpace) VMObjectFactory.newObject(VirtualSpace.class, addr.addOffsetTo(virtualSpaceFieldOffset));\n+    return VMObjectFactory.newObject(VirtualSpace.class, addr.addOffsetTo(virtualSpaceFieldOffset));\n@@ -195,1 +195,1 @@\n-    return (StatRecord) VMObjectFactory.newObject(Generation.StatRecord.class, addr.addOffsetTo(statRecordField.getOffset()));\n+    return VMObjectFactory.newObject(StatRecord.class, addr.addOffsetTo(statRecordField.getOffset()));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/shared\/Generation.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -58,1 +58,1 @@\n-        return (ZHeap)VMObjectFactory.newObject(ZHeap.class, heapAddr);\n+        return VMObjectFactory.newObject(ZHeap.class, heapAddr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZCollectedHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-        return (ZPageAllocator)VMObjectFactory.newObject(ZPageAllocator.class, pageAllocatorAddr);\n+        return VMObjectFactory.newObject(ZPageAllocator.class, pageAllocatorAddr);\n@@ -68,1 +68,1 @@\n-        return (ZPageTable)VMObjectFactory.newObject(ZPageTable.class, addr.addOffsetTo(pageTableFieldOffset));\n+        return VMObjectFactory.newObject(ZPageTable.class, addr.addOffsetTo(pageTableFieldOffset));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZHeap.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,1 @@\n-        return (ZGranuleMapForPageTable)VMObjectFactory.newObject(ZGranuleMapForPageTable.class, addr.addOffsetTo(mapFieldOffset));\n+        return VMObjectFactory.newObject(ZGranuleMapForPageTable.class, addr.addOffsetTo(mapFieldOffset));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZPageTable.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,1 @@\n-        return (ZPage)VMObjectFactory.newObject(ZPage.class, zPageBits());\n+        return VMObjectFactory.newObject(ZPage.class, zPageBits());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/gc\/z\/ZPageTableEntry.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -42,1 +42,1 @@\n-      return (Class) bytecode2Class.get(bytecode);\n+      return bytecode2Class.get(bytecode);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/interpreter\/BytecodeDisassembler.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,1 +151,1 @@\n-    return (HeapBlock) VMObjectFactory.newObject(HeapBlock.class, addr);\n+    return VMObjectFactory.newObject(HeapBlock.class, addr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/memory\/CodeHeap.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -94,1 +94,1 @@\n-    headerObj = (FileMapHeader) VMObjectFactory.newObject(FileMapInfo.FileMapHeader.class, header);\n+    headerObj = VMObjectFactory.newObject(FileMapHeader.class, header);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/memory\/FileMapInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -96,1 +96,1 @@\n-    return (Header) VMObjectFactory.newObject(HeapBlock.Header.class, addr.addOffsetTo(headerField.getOffset()));\n+    return VMObjectFactory.newObject(Header.class, addr.addOffsetTo(headerField.getOffset()));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/memory\/HeapBlock.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -74,1 +74,1 @@\n-    return (BreakpointInfo) VMObjectFactory.newObject(BreakpointInfo.class, nextField.getValue(addr));\n+    return VMObjectFactory.newObject(BreakpointInfo.class, nextField.getValue(addr));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/BreakpointInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,1 +64,1 @@\n-  public Metadata getHolderMetadata() { return (Metadata) holderMetadata.getValue(this); }\n+  public Metadata getHolderMetadata() { return holderMetadata.getValue(this); }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/CompiledICHolder.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -129,1 +129,1 @@\n-    InstanceKlass ik = (InstanceKlass)getConstants().getPoolHolder();\n+    InstanceKlass ik = getConstants().getPoolHolder();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ConstMethod.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -135,1 +135,1 @@\n-    return (ConstantPoolCache) VMObjectFactory.newObject(ConstantPoolCache.class, addr);\n+    return VMObjectFactory.newObject(ConstantPoolCache.class, addr);\n@@ -185,1 +185,1 @@\n-    return new ConstantTag((byte)getTags().at((int) index));\n+    return new ConstantTag(getTags().at((int) index));\n@@ -516,1 +516,1 @@\n-      final int length = (int) getLength();\n+      final int length = getLength();\n@@ -519,1 +519,1 @@\n-      int ctag = (int) getTags().at((int) index);\n+      int ctag = getTags().at(index);\n@@ -569,1 +569,1 @@\n-      int len = (int)getLength();\n+      int len = getLength();\n@@ -637,1 +637,1 @@\n-                  Short s = (Short) utf8ToIndex.get(klassName);\n+                  Short s = utf8ToIndex.get(klassName);\n@@ -648,1 +648,1 @@\n-                  Short s = (Short) utf8ToIndex.get(klassName);\n+                  Short s = utf8ToIndex.get(klassName);\n@@ -657,1 +657,1 @@\n-                  Short s = (Short) utf8ToIndex.get(str);\n+                  Short s = utf8ToIndex.get(str);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ConstantPool.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -476,1 +476,1 @@\n-    int length = (innerClassList == null)? 0 : (int) innerClassList.length();\n+    int length = (innerClassList == null)? 0 : innerClassList.length();\n@@ -525,1 +525,1 @@\n-    int length = ( innerClassList == null)? 0 : (int) innerClassList.length();\n+    int length = ( innerClassList == null)? 0 : innerClassList.length();\n@@ -885,1 +885,1 @@\n-    return (BreakpointInfo) VMObjectFactory.newObject(BreakpointInfo.class, addr);\n+    return VMObjectFactory.newObject(BreakpointInfo.class, addr);\n@@ -890,1 +890,1 @@\n-    return (IntArray) VMObjectFactory.newObject(IntArray.class, addr);\n+    return VMObjectFactory.newObject(IntArray.class, addr);\n@@ -895,1 +895,1 @@\n-    return (U2Array) VMObjectFactory.newObject(U2Array.class, addr);\n+    return VMObjectFactory.newObject(U2Array.class, addr);\n@@ -900,1 +900,1 @@\n-    return (U2Array) VMObjectFactory.newObject(U2Array.class, addr);\n+    return VMObjectFactory.newObject(U2Array.class, addr);\n@@ -995,1 +995,1 @@\n-    int len = (int) methods.length();\n+    int len = methods.length();\n@@ -1017,1 +1017,1 @@\n-    final int length = (int) cp.getLength();\n+    final int length = cp.getLength();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/InstanceKlass.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-  public int      getLayoutHelper()     { return (int)           layoutHelper.getValue(this); }\n+  public int      getLayoutHelper()     { return            layoutHelper.getValue(this); }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/Klass.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,1 +116,1 @@\n-    return (ConstMethod) VMObjectFactory.newObject(ConstMethod.class, addr);\n+    return VMObjectFactory.newObject(ConstMethod.class, addr);\n@@ -123,1 +123,1 @@\n-    return (MethodData) VMObjectFactory.newObject(MethodData.class, addr);\n+    return VMObjectFactory.newObject(MethodData.class, addr);\n@@ -127,1 +127,1 @@\n-    return (MethodCounters) VMObjectFactory.newObject(MethodCounters.class, addr);\n+    return VMObjectFactory.newObject(MethodCounters.class, addr);\n@@ -151,1 +151,1 @@\n-    return (NMethod) VMObjectFactory.newObject(NMethod.class, addr);\n+    return VMObjectFactory.newObject(NMethod.class, addr);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/Method.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -141,2 +141,2 @@\n-      Address bottom = (Address) liveRegions.get(i);\n-      Address top    = (Address) liveRegions.get(i+1);\n+      Address bottom = liveRegions.get(i);\n+      Address top    = liveRegions.get(i+1);\n@@ -148,2 +148,2 @@\n-      Address bottom = (Address) liveRegions.get(i);\n-      Address top    = (Address) liveRegions.get(i+1);\n+      Address bottom = liveRegions.get(i);\n+      Address top    = liveRegions.get(i+1);\n@@ -230,2 +230,2 @@\n-      Address bottom = (Address) liveRegions.get(i);\n-      Address top    = (Address) liveRegions.get(i+1);\n+      Address bottom = liveRegions.get(i);\n+      Address top    = liveRegions.get(i+1);\n@@ -237,2 +237,2 @@\n-      Address bottom = (Address) liveRegions.get(i);\n-      Address top    = (Address) liveRegions.get(i+1);\n+      Address bottom = liveRegions.get(i);\n+      Address top    = liveRegions.get(i+1);\n@@ -358,2 +358,2 @@\n-          Address bottom = (Address) liveRegions.get(i);\n-          Address top    = (Address) liveRegions.get(i+1);\n+          Address bottom = liveRegions.get(i);\n+          Address top    = liveRegions.get(i+1);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/ObjectHeap.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-      return (int) threadStatusField.getValue(holderOop);\n+      return threadStatusField.getValue(holderOop);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/OopUtilities.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -109,1 +109,1 @@\n-    int type   = (int) klass.getElementType();\n+    int type   = klass.getElementType();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/TypeArray.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -70,1 +70,1 @@\n-    switch ((int) getElementType()) {\n+    switch (getElementType()) {\n@@ -84,1 +84,1 @@\n-    switch ((int) getElementType()) {\n+    switch (getElementType()) {\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/oops\/TypeArrayKlass.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-    return (double)freqField.getValue(getAddress());\n+    return freqField.getValue(getAddress());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/opto\/Block.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,1 +85,1 @@\n-      result = (Node)virtualConstructor.instantiateWrapperFor(addr);\n+      result = virtualConstructor.instantiateWrapperFor(addr);\n@@ -150,1 +150,1 @@\n-        Node tp  = (Node)nstack.get(j);\n+        Node tp  = nstack.get(j);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/opto\/Node.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -203,1 +203,1 @@\n-        : ((Address)fr.getUnextendedSP()).addOffsetTo(loc.getStackOffset());\n+        : fr.getUnextendedSP().addOffsetTo(loc.getStackOffset());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/CompiledVFrame.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -330,1 +330,1 @@\n-    return (OSThread) VMObjectFactory.newObject(OSThread.class, osThreadField.getValue(addr));\n+    return VMObjectFactory.newObject(OSThread.class, osThreadField.getValue(addr));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/JavaThread.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -82,1 +82,1 @@\n-        return (PerfDataPrologue) VMObjectFactory.newObject(\n+        return VMObjectFactory.newObject(\n@@ -105,1 +105,1 @@\n-            PerfDataEntry pde = (PerfDataEntry) VMObjectFactory.newObject(\n+            PerfDataEntry pde = VMObjectFactory.newObject(\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/PerfMemory.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-  public StackValue get(int i)    { return (StackValue) list.get(i); }\n+  public StackValue get(int i)    { return list.get(i); }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/StackValueCollection.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1012,1 +1012,1 @@\n-    return (Flag) flagsMap.get(name);\n+    return flagsMap.get(name);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/VM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -116,2 +116,2 @@\n-                           Oop loader = ((InstanceKlass) k).getClassLoader();\n-                           LoaderData ld = (loader != null) ? (LoaderData)loaderMap.get(loader)\n+                           Oop loader = k.getClassLoader();\n+                           LoaderData ld = (loader != null) ? loaderMap.get(loader)\n@@ -182,1 +182,1 @@\n-         LoaderData data = (LoaderData) loaderMap.get(loader);\n+         LoaderData data = loaderMap.get(loader);\n@@ -278,1 +278,1 @@\n-      int nmethods = (int) methods.getLength();\n+      int nmethods = methods.getLength();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/ClassLoaderStats.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -137,1 +137,1 @@\n-                ObjectHistogramElement e = (ObjectHistogramElement)list.get(i);\n+                ObjectHistogramElement e = list.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/FinalizerInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -100,1 +100,1 @@\n-               JavaThread jthread = (JavaThread) proxyToThread.get(th);\n+               JavaThread jthread = proxyToThread.get(th);\n@@ -193,1 +193,1 @@\n-               JavaThread jthread = (JavaThread) proxyToThread.get(th);\n+               JavaThread jthread = proxyToThread.get(th);\n@@ -251,1 +251,1 @@\n-      JavaVFrame[] jvframes = (JavaVFrame[]) jframeCache.get(th);\n+      JavaVFrame[] jvframes = jframeCache.get(th);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/PStack.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -136,1 +136,1 @@\n-        Short sourceFileIndex = (Short) utf8ToIndex.get(\"SourceFile\");\n+        Short sourceFileIndex = utf8ToIndex.get(\"SourceFile\");\n@@ -140,1 +140,1 @@\n-        Short innerClassesIndex = (Short) utf8ToIndex.get(\"InnerClasses\");\n+        Short innerClassesIndex = utf8ToIndex.get(\"InnerClasses\");\n@@ -145,1 +145,1 @@\n-        Short constantValueIndex = (Short) utf8ToIndex.get(\"ConstantValue\");\n+        Short constantValueIndex = utf8ToIndex.get(\"ConstantValue\");\n@@ -150,1 +150,1 @@\n-        Short syntheticIndex = (Short) utf8ToIndex.get(\"Synthetic\");\n+        Short syntheticIndex = utf8ToIndex.get(\"Synthetic\");\n@@ -154,1 +154,1 @@\n-        Short deprecatedIndex = (Short) utf8ToIndex.get(\"Deprecated\");\n+        Short deprecatedIndex = utf8ToIndex.get(\"Deprecated\");\n@@ -159,1 +159,1 @@\n-        Short codeIndex = (Short) utf8ToIndex.get(\"Code\");\n+        Short codeIndex = utf8ToIndex.get(\"Code\");\n@@ -163,1 +163,1 @@\n-        Short exceptionsIndex = (Short) utf8ToIndex.get(\"Exceptions\");\n+        Short exceptionsIndex = utf8ToIndex.get(\"Exceptions\");\n@@ -171,1 +171,1 @@\n-        Short lineNumberTableIndex = (Short) utf8ToIndex.get(\"LineNumberTable\");\n+        Short lineNumberTableIndex = utf8ToIndex.get(\"LineNumberTable\");\n@@ -176,1 +176,1 @@\n-        Short localVariableTableIndex = (Short) utf8ToIndex.get(\"LocalVariableTable\");\n+        Short localVariableTableIndex = utf8ToIndex.get(\"LocalVariableTable\");\n@@ -181,1 +181,1 @@\n-        Short signatureIdx = (Short) utf8ToIndex.get(\"Signature\");\n+        Short signatureIdx = utf8ToIndex.get(\"Signature\");\n@@ -235,1 +235,1 @@\n-                     Short s = (Short) utf8ToIndex.get(klassName);\n+                     Short s = utf8ToIndex.get(klassName);\n@@ -245,1 +245,1 @@\n-                     Short s = (Short) utf8ToIndex.get(str);\n+                     Short s = utf8ToIndex.get(str);\n@@ -336,1 +336,1 @@\n-        Short index = (Short) classToIndex.get(klassName);\n+        Short index = classToIndex.get(klassName);\n@@ -345,1 +345,1 @@\n-            Short index = (Short) classToIndex.get(superName);\n+            Short index = classToIndex.get(superName);\n@@ -362,1 +362,1 @@\n-           Short index = (Short) classToIndex.get(k.getName().asString());\n+           Short index = classToIndex.get(k.getName().asString());\n@@ -601,1 +601,1 @@\n-            dos.writeShort((short)codeAttrCount);\n+            dos.writeShort(codeAttrCount);\n@@ -617,1 +617,1 @@\n-                writeIndex((short) _localVariableTableIndex);\n+                writeIndex(_localVariableTableIndex);\n@@ -660,1 +660,1 @@\n-        Short index = (Short) utf8ToIndex.get(signature);\n+        Short index = utf8ToIndex.get(signature);\n@@ -684,1 +684,1 @@\n-        final int numInnerClasses = (int) (innerClasses.length() \/ 4);\n+        final int numInnerClasses = innerClasses.length() \/ 4;\n@@ -699,1 +699,1 @@\n-            Short index = (Short) utf8ToIndex.get(sourceFileName.asString());\n+            Short index = utf8ToIndex.get(sourceFileName.asString());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/tools\/jcore\/ClassWriter.java","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -169,1 +169,1 @@\n-      field = (Field) nameToFieldMap.get(fieldName);\n+      field = nameToFieldMap.get(fieldName);\n@@ -277,1 +277,1 @@\n-    return (NarrowOopField) new BasicNarrowOopField(getOopField(fieldName));\n+    return new BasicNarrowOopField(getOopField(fieldName));\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/types\/basic\/BasicType.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -84,1 +84,1 @@\n-    Type type = (Type) nameToTypeMap.get(cTypeName);\n+    Type type = nameToTypeMap.get(cTypeName);\n@@ -96,1 +96,1 @@\n-    Integer i = (Integer) nameToIntConstantMap.get(constantName);\n+    Integer i = nameToIntConstantMap.get(constantName);\n@@ -110,1 +110,1 @@\n-    Long i = (Long) nameToLongConstantMap.get(constantName);\n+    Long i = nameToLongConstantMap.get(constantName);\n@@ -367,1 +367,1 @@\n-    Type curType = (Type) nameToTypeMap.get(type.getName());\n+    Type curType = nameToTypeMap.get(type.getName());\n@@ -394,1 +394,1 @@\n-    Integer curConstant = (Integer) nameToIntConstantMap.get(name);\n+    Integer curConstant = nameToIntConstantMap.get(name);\n@@ -417,1 +417,1 @@\n-    Long curConstant = (Long) nameToLongConstantMap.get(name);\n+    Long curConstant = nameToLongConstantMap.get(name);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/types\/basic\/BasicTypeDataBase.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -151,1 +151,1 @@\n-    BigInteger lineCount = new BigInteger(Integer.toString((int) (numLines - 1)));\n+    BigInteger lineCount = new BigInteger(Integer.toString(numLines - 1));\n@@ -229,1 +229,1 @@\n-          AnnoX annoX = (AnnoX) drawStack.peek();\n+          AnnoX annoX = drawStack.peek();\n@@ -496,1 +496,1 @@\n-      Annotation anno = (Annotation) ((IntervalNode) iter.next()).getData();\n+      Annotation anno = (Annotation) iter.next().getData();\n@@ -535,1 +535,1 @@\n-        Annotation anno = (Annotation) newAnnos.get(i);\n+        Annotation anno = newAnnos.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/AnnotatedMemoryPanel.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -85,2 +85,2 @@\n-      String s = (String) strings.get(i);\n-      Integer h = (Integer) heights.get(i);\n+      String s = strings.get(i);\n+      Integer h = heights.get(i);\n@@ -155,1 +155,1 @@\n-      result += \"\\n\" + (String) strings.get(i);\n+      result += \"\\n\" + strings.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/Annotation.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -178,1 +178,1 @@\n-      Oop oop = (Oop) elements.get(row);\n+      Oop oop = elements.get(row);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/ObjectListPanel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +69,1 @@\n-          ProcessInfo info = (ProcessInfo) els.get(row);\n+          ProcessInfo info = els.get(row);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/ProcessListPanel.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -385,1 +385,1 @@\n-      buf.append(genKlassLink((InstanceKlass) m.getMethodHolder()));\n+      buf.append(genKlassLink(m.getMethodHolder()));\n@@ -456,1 +456,1 @@\n-      final int length = (int) cpool.getLength();\n+      final int length = cpool.getLength();\n@@ -462,1 +462,1 @@\n-         int ctag = (int) cpool.getTags().at((int) index);\n+         int ctag = cpool.getTags().at(index);\n@@ -500,1 +500,1 @@\n-               Klass klass = (Klass) cpool.getKlassAt(index);\n+               Klass klass = cpool.getKlassAt(index);\n@@ -589,1 +589,1 @@\n-         buf.append(genKlassLink((InstanceKlass) cpool.getPoolHolder()));\n+         buf.append(genKlassLink(cpool.getPoolHolder()));\n@@ -606,1 +606,1 @@\n-      buf.append(genKlassTitle((InstanceKlass) cpool.getPoolHolder()));\n+      buf.append(genKlassTitle(cpool.getPoolHolder()));\n@@ -624,1 +624,1 @@\n-         buf.append(genKlassLink((InstanceKlass) method.getMethodHolder()));\n+         buf.append(genKlassLink(method.getMethodHolder()));\n@@ -633,1 +633,1 @@\n-         ConstantPool cpool = ((InstanceKlass) method.getMethodHolder()).getConstants();\n+         ConstantPool cpool = method.getMethodHolder().getConstants();\n@@ -711,1 +711,1 @@\n-                                    InstanceKlass klass = (InstanceKlass) m.getMethodHolder();\n+                                    InstanceKlass klass = m.getMethodHolder();\n@@ -818,1 +818,1 @@\n-         blob = (CodeBlob)VM.getVM().getCodeCache().findBlobUnsafe(pc);\n+         blob = VM.getVM().getCodeCache().findBlobUnsafe(pc);\n@@ -1124,1 +1124,1 @@\n-                int klen = (int) klfields.length();\n+                int klen = klfields.length();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/classbrowser\/HTMLGenerator.java","additions":12,"deletions":12,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    return (SimpleTreeNode) children.get(index);\n+    return children.get(index);\n@@ -47,1 +47,1 @@\n-    return (SimpleTreeNode) children.remove(index);\n+    return children.remove(index);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/ui\/tree\/SimpleTreeGroupNode.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2004, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2004, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -522,1 +522,1 @@\n-        ClassData cd = (ClassData) classDataCache.get(klass);\n+        ClassData cd = classDataCache.get(klass);\n@@ -1076,1 +1076,1 @@\n-        ClassData cd = (ClassData) classDataCache.get(klass);\n+        ClassData cd = classDataCache.get(klass);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/HeapHprofBinWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-    return (LivenessPathElement) stack.get(index);\n+    return stack.get(index);\n@@ -81,1 +81,1 @@\n-    return (LivenessPathElement) stack.peek();\n+    return stack.peek();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/LivenessPath.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2001, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2001, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-    return (LivenessPath) list.get(i);\n+    return list.get(i);\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/LivenessPathList.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -189,1 +189,1 @@\n-         next =  (Oop)nextField.getValue(oop);\n+         next = nextField.getValue(oop);\n@@ -346,1 +346,1 @@\n-         int type = (int) klass.getElementType();\n+         int type = klass.getElementType();\n@@ -680,1 +680,1 @@\n-      java.lang.reflect.Field result = (java.lang.reflect.Field) fieldMap.get(f);\n+      java.lang.reflect.Field result = fieldMap.get(f);\n@@ -683,1 +683,1 @@\n-         Class clz = readClass((InstanceKlass) f.getFieldHolder());\n+         Class clz = readClass(f.getFieldHolder());\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/ObjectReader.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -257,1 +257,1 @@\n-        next = (Oop) workList.pop();\n+        next = workList.pop();\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/ReversePtrsAnalysis.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}