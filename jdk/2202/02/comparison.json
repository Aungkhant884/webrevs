{"files":[{"patch":"@@ -26,2 +26,0 @@\n-#include \"gc\/shenandoah\/shenandoahAsserts.hpp\"\n-#include \"gc\/shenandoah\/shenandoahClosures.inline.hpp\"\n@@ -32,0 +30,1 @@\n+#include \"gc\/shenandoah\/shenandoahClosures.inline.hpp\"\n@@ -34,2 +33,0 @@\n-#include \"memory\/iterator.inline.hpp\"\n-#include \"runtime\/interfaceSupport.inline.hpp\"\n@@ -67,8 +64,0 @@\n-bool ShenandoahBarrierSet::is_a(BarrierSet::Name bsn) {\n-  return bsn == BarrierSet::ShenandoahBarrierSet;\n-}\n-\n-bool ShenandoahBarrierSet::is_aligned(HeapWord* hw) {\n-  return true;\n-}\n-\n@@ -81,1 +70,1 @@\n-bool ShenandoahBarrierSet::need_keep_alive_barrier(DecoratorSet decorators,BasicType type) {\n+bool ShenandoahBarrierSet::need_keep_alive_barrier(DecoratorSet decorators, BasicType type) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.cpp","additions":2,"deletions":13,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"gc\/shared\/accessBarrierSupport.hpp\"\n@@ -30,1 +29,0 @@\n-#include \"gc\/shenandoah\/shenandoahHeap.hpp\"\n@@ -33,0 +31,1 @@\n+class ShenandoahHeap;\n@@ -37,1 +36,1 @@\n-  ShenandoahHeap* _heap;\n+  ShenandoahHeap* const _heap;\n@@ -75,4 +74,0 @@\n-  bool is_a(BarrierSet::Name bsn);\n-\n-  bool is_aligned(HeapWord* hw);\n-\n@@ -162,1 +157,1 @@\n-    \/\/ Needed for loads on non-heap weak references\n+    \/\/ Support for concurrent roots evacuation, updating and weak roots clearing\n@@ -166,1 +161,1 @@\n-    \/\/ Used for catching bad stores\n+    \/\/ Support for concurrent roots marking\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.hpp","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-#include \"gc\/shared\/barrierSet.hpp\"\n+#include \"gc\/shared\/accessBarrierSupport.inline.hpp\"\n@@ -38,1 +38,0 @@\n-#include \"memory\/iterator.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSet.inline.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-#include \"memory\/iterator.hpp\"\n+#include \"memory\/iterator.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahBarrierSetClone.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2016, 2021, Red Hat, Inc. All rights reserved.\n@@ -32,0 +32,1 @@\n+#include \"memory\/resourceArea.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahFreeSet.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Red Hat, Inc. All rights reserved.\n+ * Copyright (c) 2016, 2021, Red Hat, Inc. All rights reserved.\n@@ -31,0 +31,1 @@\n+#include \"memory\/resourceArea.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahTaskqueue.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}