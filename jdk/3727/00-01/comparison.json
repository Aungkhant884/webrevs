{"files":[{"patch":"@@ -1525,1 +1525,1 @@\n-  return selected_method;\n+  return selected_method; \/\/ NULL when corresponding slot is empty (AbstractMethodError case)\n@@ -1855,2 +1855,8 @@\n-  Method* fm = wf.found_method(0);  \/\/ Will be NULL if num_parts == 0.\n-  Klass*   p = wf.participant(0);   \/\/ Will be NULL if num_parts == 0.\n+  \/\/ p == NULL when no participants are found (wf.num_participants() == 0).\n+  \/\/ fm == NULL case has 2 meanings:\n+  \/\/  * when p == NULL: no method found;\n+  \/\/  * when p != NULL: AbstractMethodError-throwing method found.\n+  \/\/ Also, found method should always be accompanied by a participant class.\n+  Klass*   p = wf.participant(0);\n+  Method* fm = wf.found_method(0);\n+  assert(fm == NULL || p != NULL, \"no participant\");\n@@ -1861,1 +1867,1 @@\n-    if (fm == NULL && p == NULL) {\n+    if (p == NULL) {\n@@ -1863,0 +1869,1 @@\n+      assert(fm == NULL, \"sanity\");\n","filename":"src\/hotspot\/share\/code\/dependencies.cpp","additions":11,"deletions":4,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @requires !vm.graal.enabled\n+ * @requires !vm.graal.enabled & vm.opt.final.UseVtableBasedCHA == true\n@@ -35,1 +35,0 @@\n- *                   -XX:+UseVtableBasedCHA\n@@ -43,1 +42,0 @@\n- *                   -XX:+UseVtableBasedCHA\n","filename":"test\/hotspot\/jtreg\/compiler\/cha\/StrengthReduceInterfaceCall.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}