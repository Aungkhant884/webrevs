{"files":[{"patch":"@@ -93,0 +93,4 @@\n+    boolean hasUpperCaseMapping(int ch) {\n+        return !(ch >= 'a' && (ch <= 'z' || ch == 0xb5 || (ch >= 0xdf && ch != 0xf7)));\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/lang\/CharacterDataLatin1.java.template","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -536,2 +536,1 @@\n-            int cp = value[first] & 0xff;\n-            if (cp != CharacterDataLatin1.instance.toLowerCase(cp)) {  \/\/ no need to check Character.ERROR\n+            if (CharacterDataLatin1.instance.isUpperCase(value[first] & 0xff)) {\n@@ -551,6 +550,1 @@\n-            int cp = value[i] & 0xff;\n-            cp = CharacterDataLatin1.instance.toLowerCase(cp);\n-            if (!canEncode(cp)) {                      \/\/ not a latin1 character\n-                return toLowerCaseEx(str, value, first, locale, false);\n-            }\n-            result[i] = (byte)cp;\n+            result[i] = (byte)CharacterDataLatin1.instance.toLowerCase(value[i] & 0xff);\n@@ -610,2 +604,1 @@\n-            int cp = value[first] & 0xff;\n-            if (cp != CharacterDataLatin1.instance.toUpperCaseEx(cp)) {   \/\/ no need to check Character.ERROR\n+            if (!CharacterDataLatin1.instance.hasUpperCaseMapping(value[first] & 0xff)) {\n@@ -626,2 +619,1 @@\n-            int cp = value[i] & 0xff;\n-            cp = CharacterDataLatin1.instance.toUpperCaseEx(cp);\n+            int cp = CharacterDataLatin1.instance.toUpperCaseEx(value[i] & 0xff);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StringLatin1.java","additions":4,"deletions":12,"binary":false,"changes":16,"status":"modified"}]}