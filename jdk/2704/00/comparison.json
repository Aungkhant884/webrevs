{"files":[{"patch":"@@ -1797,2 +1797,0 @@\n-  bool mt_processing = ParallelRefProcEnabled && (ParallelGCThreads > 1);\n-\n@@ -1802,1 +1800,0 @@\n-                           mt_processing,                                  \/\/ mt processing\n@@ -1813,1 +1810,0 @@\n-                           mt_processing,                        \/\/ mt processing\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -861,1 +861,0 @@\n-      ParallelRefProcEnabled && (ParallelGCThreads > 1), \/\/ mt processing\n","filename":"src\/hotspot\/share\/gc\/parallel\/psParallelCompact.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -825,1 +825,0 @@\n-                           ParallelRefProcEnabled && (ParallelGCThreads > 1), \/\/ mt processing\n","filename":"src\/hotspot\/share\/gc\/parallel\/psScavenge.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -96,1 +96,0 @@\n-                                       bool      mt_processing,\n@@ -106,1 +105,0 @@\n-  _processing_is_mt(mt_processing),\n@@ -660,1 +658,1 @@\n-  assert(_processing_is_mt, \"why balance non-mt processing?\");\n+  assert(processing_is_mt(), \"why balance non-mt processing?\");\n@@ -682,1 +680,1 @@\n-  assert(_processing_is_mt, \"Should not call this otherwise\");\n+  assert(processing_is_mt(), \"Should not call this otherwise\");\n@@ -777,1 +775,1 @@\n-  assert(!_processing_is_mt || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n+  assert(!processing_is_mt() || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n@@ -781,1 +779,1 @@\n-  phase_times->set_processing_is_mt(_processing_is_mt);\n+  phase_times->set_processing_is_mt(processing_is_mt());\n@@ -795,1 +793,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -803,1 +801,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -825,1 +823,1 @@\n-  assert(!_processing_is_mt || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n+  assert(!processing_is_mt() || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n@@ -834,1 +832,1 @@\n-  phase_times->set_processing_is_mt(_processing_is_mt);\n+  phase_times->set_processing_is_mt(processing_is_mt());\n@@ -843,1 +841,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -855,1 +853,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -901,1 +899,1 @@\n-  assert(!_processing_is_mt || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n+  assert(!processing_is_mt() || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n@@ -905,1 +903,1 @@\n-  phase_times->set_processing_is_mt(_processing_is_mt);\n+  phase_times->set_processing_is_mt(processing_is_mt());\n@@ -914,1 +912,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -923,1 +921,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -940,1 +938,1 @@\n-  assert(!_processing_is_mt || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n+  assert(!processing_is_mt() || task_executor != NULL, \"Task executor must not be NULL when mt processing is set.\");\n@@ -943,1 +941,0 @@\n-  phase_times->set_ref_discovered(REF_PHANTOM, num_phantom_refs);\n@@ -945,1 +942,2 @@\n-  phase_times->set_processing_is_mt(_processing_is_mt);\n+  phase_times->set_ref_discovered(REF_PHANTOM, num_phantom_refs);\n+  phase_times->set_processing_is_mt(processing_is_mt());\n@@ -954,1 +952,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -963,1 +961,1 @@\n-  if (_processing_is_mt) {\n+  if (processing_is_mt()) {\n@@ -990,1 +988,1 @@\n-    if (_processing_is_mt) {\n+    if (processing_is_mt()) {\n@@ -1374,1 +1372,0 @@\n-    _saved_mt_processing(_rp->processing_is_mt()),\n@@ -1382,1 +1379,0 @@\n-  _rp->set_mt_processing(workers > 1);\n@@ -1388,1 +1384,0 @@\n-  _rp->set_mt_processing(_saved_mt_processing);\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.cpp","additions":20,"deletions":25,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"gc\/shared\/gc_globals.hpp\"\n@@ -204,2 +205,0 @@\n-  bool        _processing_is_mt;        \/\/ true during phases when\n-                                        \/\/ reference processing is MT.\n@@ -377,1 +376,1 @@\n-                     bool mt_processing = false, uint mt_processing_degree = 1,\n+                     uint mt_processing_degree = 1,\n@@ -418,2 +417,1 @@\n-  bool processing_is_mt() const { return _processing_is_mt; }\n-  void set_mt_processing(bool mt) { _processing_is_mt = mt; }\n+  bool processing_is_mt() const { return ParallelRefProcEnabled && _num_queues > 1; }\n@@ -646,1 +644,0 @@\n-  bool                _saved_mt_processing;\n","filename":"src\/hotspot\/share\/gc\/shared\/referenceProcessor.hpp","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}