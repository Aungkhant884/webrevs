{"files":[{"patch":"@@ -143,7 +143,0 @@\n-G1CardSetMemoryStats::G1CardSetMemoryStats(void(*fn)(const void*,uint,size_t&,size_t&), const void* context) {\n-  clear();\n-  for (uint i = 0; i < num_pools(); i++) {\n-    fn(context, i, _num_mem_sizes[i], _num_buffers[i]);\n-  }\n-}\n-\n@@ -280,9 +273,0 @@\n-static void collect_mem_sizes(const void* context, uint i, size_t& mem_size, size_t& num_buffers) {\n-  ((G1CardSetFreePool*)context)->get_size(i, mem_size, num_buffers);\n-}\n-\n-void G1CardSetFreePool::get_size(uint i, size_t& mem_size, size_t& num_buffers) const {\n-  mem_size = _free_lists[i].mem_size();\n-  num_buffers = _free_lists[i].num_buffers();\n-}\n-\n@@ -290,1 +274,7 @@\n-  return G1CardSetMemoryStats(collect_mem_sizes, this);\n+  G1CardSetMemoryStats free_list_stats;\n+  assert(free_list_stats.num_pools() == num_free_lists(), \"must be\");\n+  for (uint i = 0; i < num_free_lists(); i++) {\n+    free_list_stats._num_mem_sizes[i] = _free_lists[i].mem_size();\n+    free_list_stats._num_buffers[i] = _free_lists[i].num_buffers();\n+  }\n+  return free_list_stats;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.cpp","additions":7,"deletions":17,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -152,3 +152,0 @@\n-  \/\/ For every element in the set (indicated by i), call fn to provide the\n-  \/\/ memory size and number of buffers for that i'th buffer list.\n-  G1CardSetMemoryStats(void (*fn)(const void* context, uint i, size_t& mem_size, size_t& num_buffers), const void* context);\n@@ -174,1 +171,1 @@\n-  uint _num_free_lists;\n+  const uint _num_free_lists;\n@@ -196,3 +193,0 @@\n-  \/\/ Return sizes for free list i in this free list pool.\n-  void get_size(uint i, size_t& mem_size, size_t& num_buffers) const;\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.hpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"}]}