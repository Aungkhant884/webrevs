{"files":[{"patch":"@@ -338,0 +338,2 @@\n+  return data_from(data_layout);\n+}\n@@ -339,0 +341,1 @@\n+ciProfileData* ciMethodData::data_from(DataLayout* data_layout) {\n@@ -379,0 +382,10 @@\n+DataLayout* ciMethodData::next_data_layout(DataLayout* current) {\n+  int current_index = dp_to_di((address)current);\n+  int next_index = current_index + current->size_in_bytes();\n+  if (out_of_bounds(next_index)) {\n+    return NULL;\n+  }\n+  DataLayout* next = data_layout_at(next_index);\n+  return next;\n+}\n+\n@@ -416,6 +429,6 @@\n-    ciProfileData* data = data_before(bci);\n-    for ( ; is_valid(data); data = next_data(data)) {\n-      if (data->bci() == bci) {\n-        set_hint_di(dp_to_di(data->dp()));\n-        return data;\n-      } else if (data->bci() > bci) {\n+    DataLayout* data_layout = data_layout_before(bci);\n+    for ( ; is_valid(data_layout); data_layout = next_data_layout(data_layout)) {\n+      if (data_layout->bci() == bci) {\n+        set_hint_di(dp_to_di((address)data_layout));\n+        return data_from(data_layout);\n+      } else if (data_layout->bci() > bci) {\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.cpp","additions":19,"deletions":6,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -382,1 +382,1 @@\n-  \/\/ Cached hint for data_before()\n+  \/\/ Cached hint for data_layout_before()\n@@ -448,1 +448,2 @@\n-  ciProfileData* data_before(int bci) {\n+\n+  DataLayout* data_layout_before(int bci) {\n@@ -452,4 +453,4 @@\n-    int hint = hint_di();\n-    if (data_layout_at(hint)->bci() <= bci)\n-      return data_at(hint);\n-    return first_data();\n+    DataLayout* layout = data_layout_at(hint_di());\n+    if (layout->bci() <= bci)\n+      return layout;\n+    return data_layout_at(first_di());\n@@ -458,1 +459,0 @@\n-\n@@ -472,0 +472,1 @@\n+  ciProfileData* data_from(DataLayout* data_layout);\n@@ -522,0 +523,1 @@\n+  DataLayout* next_data_layout(DataLayout* current);\n@@ -523,0 +525,1 @@\n+  bool is_valid(DataLayout* current)    { return current != NULL; }\n","filename":"src\/hotspot\/share\/ci\/ciMethodData.hpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1102,0 +1102,34 @@\n+int DataLayout::cell_count() {\n+  switch (tag()) {\n+  case DataLayout::no_tag:\n+  default:\n+    ShouldNotReachHere();\n+    return 0;\n+  case DataLayout::bit_data_tag:\n+    return BitData::static_cell_count();\n+  case DataLayout::counter_data_tag:\n+    return CounterData::static_cell_count();\n+  case DataLayout::jump_data_tag:\n+    return JumpData::static_cell_count();\n+  case DataLayout::receiver_type_data_tag:\n+    return ReceiverTypeData::static_cell_count();\n+  case DataLayout::virtual_call_data_tag:\n+    return VirtualCallData::static_cell_count();\n+  case DataLayout::ret_data_tag:\n+    return RetData::static_cell_count();\n+  case DataLayout::branch_data_tag:\n+    return BranchData::static_cell_count();\n+  case DataLayout::multi_branch_data_tag:\n+    return ((new MultiBranchData(this))->cell_count());\n+  case DataLayout::arg_info_data_tag:\n+    return ((new ArgInfoData(this))->cell_count());\n+  case DataLayout::call_type_data_tag:\n+    return ((new CallTypeData(this))->cell_count());\n+  case DataLayout::virtual_call_type_data_tag:\n+    return ((new VirtualCallTypeData(this))->cell_count());\n+  case DataLayout::parameters_type_data_tag:\n+    return ((new ParametersTypeData(this))->cell_count());\n+  case DataLayout::speculative_trap_data_tag:\n+    return SpeculativeTrapData::static_cell_count();\n+  }\n+}\n@@ -1145,0 +1179,10 @@\n+DataLayout* MethodData::next_data_layout(DataLayout* current) const {\n+  int current_index = dp_to_di((address)current);\n+  int next_index = current_index + current->size_in_bytes();\n+  if (out_of_bounds(next_index)) {\n+    return NULL;\n+  }\n+  DataLayout* next = data_layout_at(next_index);\n+  return next;\n+}\n+\n@@ -1317,3 +1361,3 @@\n-  ProfileData* data = data_before(bci);\n-  ProfileData* prev = NULL;\n-  for ( ; is_valid(data); data = next_data(data)) {\n+  DataLayout* data = data_layout_before(bci);\n+  DataLayout* prev = NULL;\n+  for ( ; is_valid(data); data = next_data_layout(data)) {\n@@ -1321,3 +1365,3 @@\n-      if (data->bci() == bci)  set_hint_di(dp_to_di(data->dp()));\n-      else if (prev != NULL)   set_hint_di(dp_to_di(prev->dp()));\n-      return data->dp();\n+      if (data->bci() == bci)  set_hint_di(dp_to_di((address)data));\n+      else if (prev != NULL)   set_hint_di(dp_to_di((address)prev));\n+      return (address)data;\n@@ -1332,2 +1376,2 @@\n-  ProfileData* data = data_before(bci);\n-  for ( ; is_valid(data); data = next_data(data)) {\n+  DataLayout* data = data_layout_before(bci);\n+  for ( ; is_valid(data); data = next_data_layout(data)) {\n@@ -1335,2 +1379,2 @@\n-      set_hint_di(dp_to_di(data->dp()));\n-      return data;\n+      set_hint_di(dp_to_di((address)data));\n+      return data->data_in();\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":54,"deletions":10,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -239,0 +239,7 @@\n+  int size_in_bytes() {\n+    int cells = cell_count();\n+    assert(cells >= 0, \"invalid number of cells\");\n+    return DataLayout::compute_size_in_bytes(cells);\n+  }\n+  int cell_count();\n+\n@@ -2064,1 +2071,2 @@\n-  ProfileData* data_before(int bci) {\n+\n+  DataLayout* data_layout_before(int bci) {\n@@ -2068,4 +2076,4 @@\n-    int hint = hint_di();\n-    if (data_layout_at(hint)->bci() <= bci)\n-      return data_at(hint);\n-    return first_data();\n+    DataLayout* layout = data_layout_at(hint_di());\n+    if (layout->bci() <= bci)\n+      return layout;\n+    return data_layout_at(first_di());\n@@ -2254,0 +2262,1 @@\n+  DataLayout*  next_data_layout(DataLayout* current) const;\n@@ -2255,0 +2264,1 @@\n+  bool is_valid(DataLayout*  current) const { return current != NULL; }\n","filename":"src\/hotspot\/share\/oops\/methodData.hpp","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"}]}