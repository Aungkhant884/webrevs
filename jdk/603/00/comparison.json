{"files":[{"patch":"@@ -2942,1 +2942,1 @@\n-    Label L_copy_bytes, L_copy_shorts, L_copy_ints, L_copy_longs;\n+    Label L_copy_shorts, L_copy_ints, L_copy_longs;\n@@ -2951,1 +2951,0 @@\n-    const Register rklass_tmp = r9;  \/\/ load_klass\n@@ -2954,1 +2953,0 @@\n-    const Register rklass_tmp = rdi;  \/\/ load_klass\n@@ -3019,1 +3017,0 @@\n-    const Register r11_length    = r11; \/\/ elements count to copy\n@@ -3023,3 +3020,2 @@\n-    __ movl(r11_length, length);        \/\/ length (elements count, 32-bits value)\n-    __ testl(r11_length, r11_length);\n-    __ jccb(Assembler::negative, L_failed_0);\n+    __ cmpl(length, 0);\n+    __ jccb(Assembler::less, L_failed_0);\n@@ -3027,1 +3023,1 @@\n-    __ load_klass(r10_src_klass, src, rklass_tmp);\n+    __ load_klass(r10_src_klass, src, r11);\n@@ -3038,1 +3034,1 @@\n-      __ load_klass(rax, dst, rklass_tmp);\n+      __ load_klass(rax, dst, r11);\n@@ -3061,1 +3057,1 @@\n-    __ load_klass(rax, dst, rklass_tmp);\n+    __ load_klass(rax, dst, r11);\n@@ -3085,2 +3081,4 @@\n-    arraycopy_range_checks(src, src_pos, dst, dst_pos, r11_length,\n-                           r10, L_failed);\n+    const Register length_reg = NOT_WIN64(length) WIN64_ONLY(r11); \/\/ elements count to copy\n+    WIN64_ONLY(__ movl(length_reg, length);) \/\/ Load from stack\n+\n+    arraycopy_range_checks(src, src_pos, dst, dst_pos, length_reg, r10, L_failed);\n@@ -3113,1 +3111,0 @@\n-  __ BIND(L_copy_bytes);\n@@ -3118,1 +3115,1 @@\n-    __ movl2ptr(count, r11_length); \/\/ length\n+    __ movl2ptr(count, length_reg); \/\/ length\n@@ -3126,1 +3123,1 @@\n-    __ movl2ptr(count, r11_length); \/\/ length\n+    __ movl2ptr(count, length_reg); \/\/ length\n@@ -3134,1 +3131,1 @@\n-    __ movl2ptr(count, r11_length); \/\/ length\n+    __ movl2ptr(count, length_reg); \/\/ length\n@@ -3151,1 +3148,1 @@\n-    __ movl2ptr(count, r11_length); \/\/ length\n+    __ movl2ptr(count, length_reg); \/\/ length\n@@ -3156,1 +3153,1 @@\n-    \/\/ live at this point:  r10_src_klass, r11_length, src[_pos], dst[_pos]\n+    \/\/ live at this point: r10_src_klass, src[_pos], dst[_pos]\n@@ -3160,1 +3157,1 @@\n-    __ load_klass(rax, dst, rklass_tmp);\n+    __ load_klass(rax, dst, r11);\n@@ -3165,2 +3162,2 @@\n-    arraycopy_range_checks(src, src_pos, dst, dst_pos, r11_length,\n-                           r10, L_failed);\n+    WIN64_ONLY(__ movl(length_reg, length);) \/\/ Load from stack\n+    arraycopy_range_checks(src, src_pos, dst, dst_pos, length_reg, r10, L_failed);\n@@ -3172,1 +3169,1 @@\n-    __ movl2ptr(count, r11_length); \/\/ length\n+    __ movl2ptr(count, length_reg); \/\/ length\n@@ -3177,1 +3174,1 @@\n-    \/\/ live at this point:  r10_src_klass, r11_length, rax (dst_klass)\n+    \/\/ live at this point: r10_src_klass, rax (dst_klass)\n@@ -3184,2 +3181,2 @@\n-      arraycopy_range_checks(src, src_pos, dst, dst_pos, r11_length,\n-                             rax, L_failed);\n+      WIN64_ONLY(__ movl(length_reg, length);) \/\/ Load from stack\n+      arraycopy_range_checks(src, src_pos, dst, dst_pos, length_reg, rax, L_failed);\n@@ -3188,1 +3185,1 @@\n-      __ load_klass(r11_dst_klass, dst, rklass_tmp); \/\/ reload\n+      __ load_klass(r11_dst_klass, dst, rax); \/\/ reload\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":23,"deletions":26,"binary":false,"changes":49,"status":"modified"}]}