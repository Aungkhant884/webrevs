{"files":[{"patch":"@@ -99,0 +99,1 @@\n+<li><a href=\"#reproducible-builds\">Reproducible Builds<\/a><\/li>\n@@ -887,0 +888,26 @@\n+<h2 id=\"reproducible-builds\">Reproducible Builds<\/h2>\n+<p>Build reproducibility is the property of getting exactly the same bits out when building, every time, independent on who builds the product, or where. This is for many reasons a harder goal than it initially appears, but it is an important goal, for security reasons and others. Please see <a href=\"https:\/\/reproducible-builds.org\">Reproducible Builds<\/a> for more information about the background and reasons for reproducible builds.<\/p>\n+<p>Currently, it is not possible to build OpenJDK fully reproducibly, but getting there is an ongoing effort. There are some things you can do to minimize non-determinism and make a larger part of the build reproducible:<\/p>\n+<ul>\n+<li>Turn on build system support for reproducible builds<\/li>\n+<\/ul>\n+<p>Add the flag <code>--enable-reproducible-builds<\/code> to your <code>configure<\/code> command line. This will turn on support for reproducible builds where it could otherwise be lacking.<\/p>\n+<ul>\n+<li>Do not rely on <code>configure<\/code>'s default adhoc version strings<\/li>\n+<\/ul>\n+<p>Default adhoc version strings OPT segment include user name, source directory and timestamp. You can either override just the OPT segment using <code>--with-version-opt=&lt;any fixed string&gt;<\/code>, or you can specify the entire version string using <code>--with-version-string=&lt;your version&gt;<\/code>.<\/p>\n+<ul>\n+<li>Specify how the build sets <code>SOURCE_DATE_EPOCH<\/code><\/li>\n+<\/ul>\n+<p>The JDK build system will set the <code>SOURCE_DATE_EPOCH<\/code> environment variable during building, depending on the value of the <code>--with-source-date<\/code> option for <code>configure<\/code>. The default value is <code>updated<\/code>, which means that <code>SOURCE_DATE_EPOCH<\/code> will be set to the current time each time you are running <code>make<\/code>.<\/p>\n+<p>The <a href=\"https:\/\/reproducible-builds.org\/docs\/source-date-epoch\/\"><code>SOURCE_DATE_EPOCH<\/code> environment variable<\/a> is an industry standard, that many tools, such as gcc, recognize, and use in place of the current time when generating output.<\/p>\n+<p>For reproducible builds, you need to set this to a fixed value. You can use the special value <code>version<\/code> which will use the nominal release date for the current JDK version, or a value describing a date, either an epoch based timestamp as an integer, or a valid ISO-8601 date.<\/p>\n+<p><strong>Hint:<\/strong> If your build environment already sets <code>SOURCE_DATE_EPOCH<\/code>, you can propagate this using <code>--with-source-date=$(SOURCE_DATE_EPOCH)<\/code>.<\/p>\n+<ul>\n+<li>Specify a hotspot build time<\/li>\n+<\/ul>\n+<p>Set a fixed hotspot build time. This will be included in the hotspot library (<code>libjvm.so<\/code> or <code>jvm.dll<\/code>) and defaults to the current time when building hotspot. Use <code>--with-hotspot-build-time=&lt;any fixed string&gt;<\/code> for reproducible builds. It's a string so you don't need to format it specifically, so e.g. <code>n\/a<\/code> will do. Another solution is to use the <code>SOURCE_DATE_EPOCH<\/code> variable, e.g. <code>--with-hotspot-build-time=$(date --date=@$SOURCE_DATE_EPOCH)<\/code>.<\/p>\n+<ul>\n+<li>Copyright year<\/li>\n+<\/ul>\n+<p>The copyright year in some generated text files are normally set to the current year. This can be overridden by <code>--with-copyright-year=&lt;year&gt;<\/code>. For fully reproducible builds, this needs to be set to a fixed value.<\/p>\n","filename":"doc\/building.html","additions":27,"deletions":0,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -1506,0 +1506,62 @@\n+## Reproducible Builds\n+\n+Build reproducibility is the property of getting exactly the same bits out when\n+building, every time, independent on who builds the product, or where. This is\n+for many reasons a harder goal than it initially appears, but it is an important\n+goal, for security reasons and others. Please see [Reproducible Builds](\n+https:\/\/reproducible-builds.org) for more information about the background and\n+reasons for reproducible builds.\n+\n+Currently, it is not possible to build OpenJDK fully reproducibly, but getting\n+there is an ongoing effort. There are some things you can do to minimize\n+non-determinism and make a larger part of the build reproducible:\n+\n+  * Turn on build system support for reproducible builds\n+\n+Add the flag `--enable-reproducible-builds` to your `configure` command line.\n+This will turn on support for reproducible builds where it could otherwise be\n+lacking.\n+\n+  * Do not rely on `configure`'s default adhoc version strings\n+\n+Default adhoc version strings OPT segment include user name, source directory\n+and timestamp. You can either override just the OPT segment using\n+`--with-version-opt=<any fixed string>`, or you can specify the entire version\n+string using `--with-version-string=<your version>`.\n+\n+  * Specify how the build sets `SOURCE_DATE_EPOCH`\n+\n+The JDK build system will set the `SOURCE_DATE_EPOCH` environment variable\n+during building, depending on the value of the `--with-source-date` option for\n+`configure`. The default value is `updated`, which means that\n+`SOURCE_DATE_EPOCH` will be set to the current time each time you are running\n+`make`.\n+\n+The [`SOURCE_DATE_EPOCH` environment variable](\n+https:\/\/reproducible-builds.org\/docs\/source-date-epoch\/) is an industry\n+standard, that many tools, such as gcc, recognize, and use in place of the\n+current time when generating output.\n+\n+For reproducible builds, you need to set this to a fixed value. You can use the\n+special value `version` which will use the nominal release date for the current\n+JDK version, or a value describing a date, either an epoch based timestamp as an\n+integer, or a valid ISO-8601 date.\n+\n+**Hint:** If your build environment already sets `SOURCE_DATE_EPOCH`, you can\n+propagate this using `--with-source-date=$(SOURCE_DATE_EPOCH)`.\n+\n+  * Specify a hotspot build time\n+\n+Set a fixed hotspot build time. This will be included in the hotspot library\n+(`libjvm.so` or `jvm.dll`) and defaults to the current time when building\n+hotspot. Use `--with-hotspot-build-time=<any fixed string>` for reproducible\n+builds. It's a string so you don't need to format it specifically, so e.g. `n\/a`\n+will do. Another solution is to use the `SOURCE_DATE_EPOCH` variable, e.g.\n+`--with-hotspot-build-time=$(date --date=@$SOURCE_DATE_EPOCH)`.\n+\n+  * Copyright year\n+\n+The copyright year in some generated text files are normally set to the current\n+year. This can be overridden by `--with-copyright-year=<year>`. For fully\n+reproducible builds, this needs to be set to a fixed value.\n+\n","filename":"doc\/building.md","additions":62,"deletions":0,"binary":false,"changes":62,"status":"modified"}]}