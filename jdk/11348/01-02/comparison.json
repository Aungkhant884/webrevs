{"files":[{"patch":"@@ -364,13 +364,3 @@\n-            switch (type) {\n-                case AES_GCM -> {\n-                    iv = new byte[type.defIvLen];\n-                    this.random.nextBytes(iv);\n-                    tagLen = type.defTagLen;\n-                }\n-                case CHACHA20_POLY1305 -> {\n-                    iv = new byte[type.defIvLen];\n-                    this.random.nextBytes(iv);\n-                    tagLen = type.defTagLen;\n-                }\n-                default -> throw new AssertionError(\"Unsupported type \" + type);\n-            }\n+            iv = new byte[type.defIvLen];\n+            this.random.nextBytes(iv);\n+            tagLen = type.defTagLen;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11AEADCipher.java","additions":3,"deletions":13,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -208,3 +208,2 @@\n-                if (params instanceof ECParameterSpec) {\n-                    ecParams = P11ECKeyFactory.getECParameterSpec(\n-                            (ECParameterSpec) params);\n+                if (params instanceof ECParameterSpec ecParameterSpec) {\n+                    ecParams = P11ECKeyFactory.getECParameterSpec(ecParameterSpec);\n@@ -215,2 +214,2 @@\n-                } else if (params instanceof ECGenParameterSpec) {\n-                    String name = ((ECGenParameterSpec) params).getName();\n+                } else if (params instanceof ECGenParameterSpec ecGenParameterSpec) {\n+                    String name = ecGenParameterSpec.getName();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11KeyPairGenerator.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"}]}