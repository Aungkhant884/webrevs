{"files":[{"patch":"@@ -328,1 +328,1 @@\n-            switch (ifcFfcStrength(KeyUtil.getKeySize(k))) {\n+            switch (ifcFfcStrength(KeyUtil.getKeySize(k), false)) {\n@@ -492,5 +492,4 @@\n-        String kAlg = k.getAlgorithm();\n-        return switch (kAlg.toUpperCase(Locale.ENGLISH)) {\n-            case \"DSA\" -> \"SHA384with\" + kAlg;\n-            case \"RSA\" -> ifcFfcStrength(KeyUtil.getKeySize(k))\n-                    + \"with\" + kAlg;\n+        String kAlg = k.getAlgorithm().toUpperCase(Locale.ENGLISH);\n+        return switch (kAlg) {\n+            case \"DSA\", \"RSA\" -> ifcFfcStrength(KeyUtil.getKeySize(k),\n+                    kAlg.equals(\"DSA\")) + \"with\" + kAlg;\n@@ -555,1 +554,1 @@\n-    private static String ifcFfcStrength (int bitLength) {\n+    private static String ifcFfcStrength (int bitLength, boolean isDSA) {\n@@ -558,2 +557,0 @@\n-        } else if (bitLength < 624) { \/\/ too short for SHA384withRSA signature\n-            return \"SHA256\";\n@@ -561,2 +558,2 @@\n-            \/\/ per CNSA\n-            return \"SHA384\";\n+            \/\/ per CNSA, use SHA-384 unless keysize is too small\n+            return (isDSA || bitLength >= 624 ? \"SHA384\" : \"SHA256\");\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureUtil.java","additions":8,"deletions":11,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -431,1 +431,1 @@\n-         * For example, SHA256withRSA for a 2048-bit RSA key, and\n+         * For example, SHA384withRSA for a 3072-bit RSA key, and\n@@ -440,4 +440,4 @@\n-         * If a DSA or RSA key has a key size no less than 3072 bits, or an\n-         * EC key has a key size greater than or equal to 384 bits, SHA-384 will\n-         * be used. Otherwise, SHA-256 will be used. The value may\n-         * change in the future.\n+         * Otherwise, SHA-384 will be used unless the key size is too small\n+         * for resulting signature algorithm. For example, an RSA 512-bit key\n+         * is too short for SHA384withRSA signature. For such keys, SHA-256\n+         * will be used. The value may change in the future.\n","filename":"src\/jdk.jartool\/share\/classes\/jdk\/security\/jarsigner\/JarSigner.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}