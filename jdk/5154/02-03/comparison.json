{"files":[{"patch":"@@ -38,1 +38,0 @@\n-import java.util.concurrent.CountDownLatch;\n@@ -47,5 +46,2 @@\n-    private static final int INTERRUPT_DELAY_IN_MS = 30;\n-    private static final int INTERRUPT_RATE_IN_MS = 10;\n-    private static final int CANCEL_DELAY_IN_MS = 30;\n-    private static final int CANCEL_RATE_IN_MS = 10;\n-    private static final int CANCEL_DURATION_IN_MS = 60000;\n+    private static final int INTERRUPT_DELAY_IN_MS = 10;\n+    private static final int CANCEL_DELAY_IN_MS = 10;\n@@ -88,0 +84,1 @@\n+\n@@ -90,1 +87,1 @@\n-            \/\/ at a fixed rate after a delay\n+            \/\/ after a delay\n@@ -92,1 +89,1 @@\n-            Future<?> wakeup = pool.scheduleAtFixedRate(new Runnable() {\n+            Future<?> wakeup = pool.schedule(new Runnable() {\n@@ -94,1 +91,1 @@\n-                    System.out.printf(\"Interrupting at %dms%n\",\n+                    System.out.printf(\"Interrupting at %dms...%n\",\n@@ -99,3 +96,2 @@\n-                INTERRUPT_RATE_IN_MS,\n-                java.util.concurrent.TimeUnit.MILLISECONDS);\n-            System.out.println(\"Copying file...\");\n+                java.util.concurrent.TimeUnit.MILLISECONDS\n+            );\n@@ -103,1 +99,1 @@\n-                System.out.printf(\"Copying at %dms%n\",\n+                System.out.printf(\"Copying file at %dms...%n\",\n@@ -106,1 +102,1 @@\n-                System.out.printf(\"Done copying at %dms%n\",\n+                System.out.printf(\"Done copying at %dms...%n\",\n@@ -113,1 +109,1 @@\n-                System.out.println(\"Copy failed (this is expected)\");\n+                System.out.println(\"Copy failed (this is expected).\");\n@@ -121,2 +117,1 @@\n-            \/\/ at a fixed rate after a delay using cancel(true)\n-            final CountDownLatch latch = new CountDownLatch(2);\n+            \/\/ after a delay using cancel(true)\n@@ -125,7 +120,1 @@\n-                    System.out.println(\"Copying file...\");\n-                    latch.countDown();\n-                    try {\n-                        latch.await();\n-                    } catch (InterruptedException ignored) {\n-                    }\n-                    System.out.printf(\"Copying at %dms%n\",\n+                    System.out.printf(\"Copying file at %dms...%n\",\n@@ -135,1 +124,1 @@\n-                    System.out.printf(\"Done copying at %dms%n\",\n+                    System.out.printf(\"Done copying at %dms...%n\",\n@@ -140,1 +129,0 @@\n-            latch.countDown();\n@@ -142,1 +130,0 @@\n-                latch.await();\n@@ -146,1 +133,1 @@\n-            System.out.printf(\"Cancelling at %dms%n\",\n+            System.out.printf(\"Cancelling at %dms...%n\",\n@@ -150,13 +137,2 @@\n-            boolean cancelled;\n-            long start = System.currentTimeMillis();\n-            while (!(cancelled = result.cancel(true))) {\n-                System.out.printf(\"Cancel failed at %dms%n\",\n-                    System.currentTimeMillis());\n-                try {\n-                    Thread.sleep(CANCEL_RATE_IN_MS);\n-                } catch (InterruptedException ignored) {\n-                }\n-                if (start - System.currentTimeMillis() > CANCEL_DURATION_IN_MS)\n-                    break;\n-            }\n-            if (result.isCancelled())\n+            boolean cancelled  = result.cancel(true);\n+            if (cancelled)\n","filename":"test\/jdk\/java\/nio\/file\/Files\/InterruptCopy.java","additions":17,"deletions":41,"binary":false,"changes":58,"status":"modified"}]}