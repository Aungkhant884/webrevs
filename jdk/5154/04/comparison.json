{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,11 @@\n-import java.nio.file.*;\n-import java.io.*;\n-import java.util.concurrent.*;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.FileStore;\n+import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.ScheduledExecutorService;\n@@ -38,3 +46,4 @@\n-    private static final long FILE_SIZE_TO_COPY = 512L * 1024L * 1024L;\n-    private static final int DELAY_IN_MS = 500;\n-    private static final int DURATION_MAX_IN_MS = 5000;\n+    private static final long FILE_SIZE_TO_COPY = 1024L * 1024L * 1024L;\n+    private static final int INTERRUPT_DELAY_IN_MS = 50;\n+    private static final int DURATION_MAX_IN_MS = 3*INTERRUPT_DELAY_IN_MS;\n+    private static final int CANCEL_DELAY_IN_MS = 10;\n@@ -77,0 +86,1 @@\n+\n@@ -78,1 +88,2 @@\n-            \/\/ copy source to target in main thread, interrupting it after a delay\n+            \/\/ copy source to target in main thread, interrupting it\n+            \/\/ after a delay\n@@ -80,1 +91,2 @@\n-            Future<?> wakeup = pool.schedule(new Runnable() {\n+            final CountDownLatch interruptLatch = new CountDownLatch(1);\n+            Future<?> wakeup = pool.submit(new Runnable() {\n@@ -82,0 +94,7 @@\n+                    try {\n+                        interruptLatch.await();\n+                        Thread.sleep(INTERRUPT_DELAY_IN_MS);\n+                    } catch (InterruptedException ignore) {\n+                    }\n+                    System.out.printf(\"Interrupting at %d ms...%n\",\n+                        System.currentTimeMillis());\n@@ -83,2 +102,2 @@\n-                }}, DELAY_IN_MS, TimeUnit.MILLISECONDS);\n-            System.out.println(\"Copying file...\");\n+                }\n+            });\n@@ -86,1 +105,3 @@\n-                long start = System.currentTimeMillis();\n+                interruptLatch.countDown();\n+                long theBeginning = System.currentTimeMillis();\n+                System.out.printf(\"Copying file at %d ms...%n\", theBeginning);\n@@ -88,1 +109,3 @@\n-                long duration = System.currentTimeMillis() - start;\n+                long theEnd = System.currentTimeMillis();\n+                System.out.printf(\"Done copying at %d ms...%n\", theEnd);\n+                long duration = theEnd - theBeginning;\n@@ -95,1 +118,1 @@\n-                System.out.println(\"Copy failed (this is expected)\");\n+                System.out.println(\"Copy failed (this is expected).\");\n@@ -102,2 +125,3 @@\n-            \/\/ copy source to target via task in thread pool, interrupting it after\n-            \/\/ a delay using cancel(true)\n+            \/\/ copy source to target via task in thread pool, interrupting it\n+            \/\/ after a delay using cancel(true)\n+            CountDownLatch cancelLatch = new CountDownLatch(1);\n@@ -106,1 +130,3 @@\n-                    System.out.println(\"Copying file...\");\n+                    cancelLatch.countDown();\n+                    System.out.printf(\"Copying file at %d ms...%n\",\n+                        System.currentTimeMillis());\n@@ -109,0 +135,2 @@\n+                    System.out.printf(\"Done copying at %d ms...%n\",\n+                        System.currentTimeMillis());\n@@ -112,3 +140,13 @@\n-            Thread.sleep(DELAY_IN_MS);\n-            boolean cancelled = result.cancel(true);\n-            if (!cancelled)\n+            try {\n+                cancelLatch.await();\n+                Thread.sleep(CANCEL_DELAY_IN_MS);\n+            } catch (InterruptedException ignore) {\n+            }\n+            if (result.isDone())\n+                throw new RuntimeException(\"Copy finished before cancellation\");\n+            System.out.printf(\"Cancelling at %d ms...%n\",\n+                System.currentTimeMillis());\n+            boolean cancelled  = result.cancel(true);\n+            if (cancelled)\n+                System.out.println(\"Copy cancelled.\");\n+            else {\n@@ -116,1 +154,2 @@\n-            System.out.println(\"Copy cancelled.\");\n+                throw new RuntimeException(\"Copy was not cancelled\");\n+            }\n","filename":"test\/jdk\/java\/nio\/file\/Files\/InterruptCopy.java","additions":60,"deletions":21,"binary":false,"changes":81,"status":"modified"}]}