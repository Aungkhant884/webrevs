{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,11 @@\n-import java.nio.file.*;\n-import java.io.*;\n-import java.util.concurrent.*;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.FileStore;\n+import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.ScheduledExecutorService;\n@@ -39,1 +47,2 @@\n-    private static final int DELAY_IN_MS = 500;\n+    private static final int INTERRUPT_DELAY_IN_MS = 10;\n+    private static final int CANCEL_DELAY_IN_MS = 10;\n@@ -79,0 +88,1 @@\n+            final CountDownLatch ilatch = new CountDownLatch(2);\n@@ -80,1 +90,1 @@\n-            Future<?> wakeup = pool.schedule(new Runnable() {\n+            Future<?> wakeup = pool.submit(new Runnable() {\n@@ -82,0 +92,6 @@\n+                    ilatch.countDown();\n+                    try {\n+                        ilatch.await();\n+                        Thread.sleep(INTERRUPT_DELAY_IN_MS);\n+                    } catch (InterruptedException ignored) {\n+                    }\n@@ -83,1 +99,1 @@\n-                }}, DELAY_IN_MS, TimeUnit.MILLISECONDS);\n+                }});\n@@ -86,0 +102,2 @@\n+                ilatch.countDown();\n+                ilatch.await();\n@@ -104,0 +122,1 @@\n+            final CountDownLatch clatch = new CountDownLatch(2);\n@@ -107,0 +126,5 @@\n+                    clatch.countDown();\n+                    try {\n+                        clatch.await();\n+                    } catch (InterruptedException ignored) {\n+                    }\n@@ -112,1 +136,3 @@\n-            Thread.sleep(DELAY_IN_MS);\n+            clatch.countDown();\n+            clatch.await();\n+            Thread.sleep(CANCEL_DELAY_IN_MS);\n@@ -114,1 +140,3 @@\n-            if (!cancelled)\n+            if (cancelled)\n+                System.out.println(\"Copy cancelled.\");\n+            else {\n@@ -116,1 +144,2 @@\n-            System.out.println(\"Copy cancelled.\");\n+                throw new RuntimeException(\"Copy was not cancelled\");\n+            }\n","filename":"test\/jdk\/java\/nio\/file\/Files\/InterruptCopy.java","additions":39,"deletions":10,"binary":false,"changes":49,"status":"modified"}]}