{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,3 +31,11 @@\n-import java.nio.file.*;\n-import java.io.*;\n-import java.util.concurrent.*;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.file.Files;\n+import java.nio.file.FileStore;\n+import java.nio.file.Path;\n+import java.nio.file.StandardCopyOption;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.ScheduledExecutorService;\n@@ -39,1 +47,2 @@\n-    private static final int DELAY_IN_MS = 500;\n+    private static final int INTERRUPT_DELAY_IN_MS = 10;\n+    private static final int CANCEL_DELAY_IN_MS = 500;\n@@ -79,0 +88,1 @@\n+            final CountDownLatch latch = new CountDownLatch(2);\n@@ -80,1 +90,1 @@\n-            Future<?> wakeup = pool.schedule(new Runnable() {\n+            Future<?> wakeup = pool.submit(new Runnable() {\n@@ -82,0 +92,6 @@\n+                    latch.countDown();\n+                    try {\n+                        latch.await();\n+                        Thread.sleep(INTERRUPT_DELAY_IN_MS);\n+                    } catch (InterruptedException ignored) {\n+                    }\n@@ -83,1 +99,1 @@\n-                }}, DELAY_IN_MS, TimeUnit.MILLISECONDS);\n+                }});\n@@ -86,0 +102,2 @@\n+                latch.countDown();\n+                latch.await();\n@@ -112,1 +130,1 @@\n-            Thread.sleep(DELAY_IN_MS);\n+            Thread.sleep(CANCEL_DELAY_IN_MS);\n","filename":"test\/jdk\/java\/nio\/file\/Files\/InterruptCopy.java","additions":26,"deletions":8,"binary":false,"changes":34,"status":"modified"}]}