{"files":[{"patch":"@@ -1593,4 +1593,7 @@\n-  \/\/ Note that I attach with SHM_RND - which means that the requested address is rounded down, if\n-  \/\/ needed, to the next lowest segment boundary. Otherwise the attach would fail if the address\n-  \/\/ were not a segment boundary.\n-  char* const addr = (char*) shmat(shmid, requested_addr, SHM_RND);\n+  \/\/ Note that we deliberately *don't* pass SHM_RND. The contract of os::attempt_reserve_memory_at() -\n+  \/\/ which invokes this function with a request address != NULL - is to map at the specified address\n+  \/\/ excactly, or to fail. If the caller passed us an address that is not usable (aka not a valid segment\n+  \/\/ boundary), shmat should not round down the address, or think up a completely new one.\n+  \/\/ (In places where this matters, e.g. when reserving the heap, we take care of passing segment-aligned\n+  \/\/ addresses on Aix. See, e.g., ReservedHeapSpace.\n+  char* const addr = (char*) shmat(shmid, requested_addr, 0);\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"runtime\/globals.hpp\"\n@@ -950,0 +951,12 @@\n+\n+#ifdef AIX\n+\/\/ On Aix, we should fail attach attempts not aligned to segment boundaries (256m)\n+TEST_VM(os, aix_reserve_at_non_shmlba_aligned_address) {\n+  if (Use64KPages && Use64KPagesThreshold == 0) {\n+    char* p = os::attempt_reserve_memory_at((char*)0x1f00000, M);\n+    ASSERT_EQ(p, nullptr); \/\/ should have failed\n+    p = os::attempt_reserve_memory_at((char*)((64 * G) + M), M);\n+    ASSERT_EQ(p, nullptr); \/\/ should have failed\n+  }\n+}\n+#endif \/\/ AIX\n","filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp","additions":13,"deletions":0,"binary":false,"changes":13,"status":"modified"}]}