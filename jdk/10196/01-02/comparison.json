{"files":[{"patch":"@@ -184,1 +184,2 @@\n-            rootNode.update(null, null);\n+            rootNode = new MethodNode(null, null, \"\");\n+            manager.setRootContext(rootNode);\n","filename":"src\/utils\/IdealGraphVisualizer\/Bytecodes\/src\/main\/java\/com\/sun\/hotspot\/igv\/bytecodes\/BytecodeViewTopComponent.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-        InputGraphProvider p = LookupHistory.getLast(InputGraphProvider.class);\/\/Utilities.actionsGlobalContext().lookup(InputGraphProvider.class);\n+        InputGraphProvider p = LookupHistory.getLast(InputGraphProvider.class);\n","filename":"src\/utils\/IdealGraphVisualizer\/Bytecodes\/src\/main\/java\/com\/sun\/hotspot\/igv\/bytecodes\/SelectBytecodesAction.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,1 +136,1 @@\n-        InputGraphProvider p = LookupHistory.getLast(InputGraphProvider.class);\/\/)Utilities.actionsGlobalContext().lookup(InputGraphProvider.class);\n+        InputGraphProvider p = LookupHistory.getLast(InputGraphProvider.class);\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowScene.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -146,0 +146,1 @@\n+                    return;\n@@ -148,0 +149,1 @@\n+            scene.setGraph(new InputGraph(\"\"));\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowTopComponent.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -147,26 +147,0 @@\n-    \/\/ Fetch and select the latest active graph.\n-    private void updateGraphSelection() {\n-        \/\/ Wait for LookupHistory to be updated with the last active graph\n-        \/\/ before selecting it.\n-        SwingUtilities.invokeLater(() -> {\n-            final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n-            if (provider != null) {\n-                try {\n-                    InputGraph graph = provider.getGraph();\n-                    if (graph.isDiffGraph()) {\n-                        EditorTopComponent editor = EditorTopComponent.getActive();\n-                        if (editor != null) {\n-                            InputGraph firstGraph = editor.getModel().getFirstGraph();\n-                            InputGraph secondGraph = editor.getModel().getSecondGraph();\n-                            manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(firstGraph), FolderNode.getGraphNode(secondGraph)});\n-                        }\n-                    } else {\n-                        manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(graph)});\n-                    }\n-                } catch (Exception e) {\n-                    Exceptions.printStackTrace(e);\n-                }\n-            }\n-        });\n-    }\n-\n@@ -227,1 +201,1 @@\n-        updateGraphSelection();\n+        resultChanged(null);\n@@ -261,5 +235,31 @@\n-        \/\/ Highlight the focused graph, if available, in the outline.\n-        if (result.allItems().isEmpty()) {\n-            return;\n-        }\n-        updateGraphSelection();\n+        \/\/ Wait for LookupHistory to be updated with the last active graph\n+        \/\/ before selecting it.\n+        SwingUtilities.invokeLater(() -> {\n+            GraphNode[] selection = new  GraphNode[]{};\n+            final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n+            if (provider != null) {\n+                System.out.println(\"updateGraphSelection provider\");\n+                \/\/ Try to fetch and select the latest active graph.\n+                InputGraph graph = provider.getGraph();\n+                if (graph != null) {\n+                    System.out.println(\"updateGraphSelection graph\");\n+                    if (graph.isDiffGraph()) {\n+                        EditorTopComponent editor = EditorTopComponent.getActive();\n+                        if (editor != null) {\n+                            InputGraph firstGraph = editor.getModel().getFirstGraph();\n+                            InputGraph secondGraph = editor.getModel().getSecondGraph();\n+                            selection = new GraphNode[]{FolderNode.getGraphNode(firstGraph), FolderNode.getGraphNode(secondGraph)};\n+                        }\n+                    } else {\n+                        selection = new GraphNode[]{FolderNode.getGraphNode(graph)};\n+                    }\n+                }\n+            }\n+            try {\n+                System.out.println(\"updateGraphSelection selection \" + selection);\n+\n+                manager.setSelectedNodes(selection);\n+            } catch (Exception e) {\n+                Exceptions.printStackTrace(e);\n+            }\n+        });\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":32,"deletions":32,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -50,1 +50,5 @@\n-        return editor.getDiagramModel().getGraphToView();\n+        if (editor.isOpened()) {\n+            return editor.getDiagramModel().getGraphToView();\n+        } else {\n+            return null;\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorInputGraphProvider.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -432,1 +432,5 @@\n-        return (EditorTopComponent) EditorTopComponent.getRegistry().getActivated();\n+        try {\n+            return (EditorTopComponent) EditorTopComponent.getRegistry().getActivated();\n+        } catch (Exception e) {\n+            return null;\n+        }\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"}]}