{"files":[{"patch":"@@ -174,10 +174,8 @@\n-        SwingUtilities.invokeLater(new Runnable() {\n-            public void run() {\n-                final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n-                if (provider != null) {\n-                    InputGraph graph = provider.getGraph();\n-                    if (graph != null) {\n-                        Group g = graph.getGroup();\n-                        rootNode.update(graph, g.getMethod());\n-                        return;\n-                    }\n+        SwingUtilities.invokeLater(() -> {\n+            final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n+            if (provider != null) {\n+                InputGraph graph = provider.getGraph();\n+                if (graph != null) {\n+                    Group g = graph.getGroup();\n+                    rootNode.update(graph, g.getMethod());\n+                    return;\n@@ -185,1 +183,0 @@\n-                rootNode.update(null, null);\n@@ -187,0 +184,1 @@\n+            rootNode.update(null, null);\n","filename":"src\/utils\/IdealGraphVisualizer\/Bytecodes\/src\/main\/java\/com\/sun\/hotspot\/igv\/bytecodes\/BytecodeViewTopComponent.java","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -140,8 +140,6 @@\n-        SwingUtilities.invokeLater(new Runnable() {\n-            public void run() {\n-                final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n-                if (provider != null) {\n-                    InputGraph graph = provider.getGraph();\n-                    if (graph != null) {\n-                        scene.setGraph(graph);\n-                    }\n+        SwingUtilities.invokeLater(() -> {\n+            final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n+            if (provider != null) {\n+                InputGraph graph = provider.getGraph();\n+                if (graph != null) {\n+                    scene.setGraph(graph);\n","filename":"src\/utils\/IdealGraphVisualizer\/ControlFlow\/src\/main\/java\/com\/sun\/hotspot\/igv\/controlflow\/ControlFlowTopComponent.java","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -151,15 +151,11 @@\n-        SwingUtilities.invokeLater(new Runnable() {\n-            public void run() {\n-                final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n-                if (provider != null) {\n-                    try {\n-                        InputGraph graph = provider.getGraph();\n-                        if (graph.isDiffGraph()) {\n-                            EditorTopComponent editor = EditorTopComponent.getActive();\n-                            if (editor != null) {\n-                                InputGraph firstGraph = editor.getModel().getFirstGraph();\n-                                InputGraph secondGraph = editor.getModel().getSecondGraph();\n-                                manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(firstGraph), FolderNode.getGraphNode(secondGraph)});\n-                            }\n-                        } else {\n-                            manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(graph)});\n+        SwingUtilities.invokeLater(() -> {\n+            final InputGraphProvider provider = LookupHistory.getLast(InputGraphProvider.class);\n+            if (provider != null) {\n+                try {\n+                    InputGraph graph = provider.getGraph();\n+                    if (graph.isDiffGraph()) {\n+                        EditorTopComponent editor = EditorTopComponent.getActive();\n+                        if (editor != null) {\n+                            InputGraph firstGraph = editor.getModel().getFirstGraph();\n+                            InputGraph secondGraph = editor.getModel().getSecondGraph();\n+                            manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(firstGraph), FolderNode.getGraphNode(secondGraph)});\n@@ -167,2 +163,2 @@\n-                    } catch (Exception e) {\n-                        Exceptions.printStackTrace(e);\n+                    } else {\n+                        manager.setSelectedNodes(new GraphNode[]{FolderNode.getGraphNode(graph)});\n@@ -170,0 +166,2 @@\n+                } catch (Exception e) {\n+                    Exceptions.printStackTrace(e);\n","filename":"src\/utils\/IdealGraphVisualizer\/Coordinator\/src\/main\/java\/com\/sun\/hotspot\/igv\/coordinator\/OutlineTopComponent.java","additions":15,"deletions":17,"binary":false,"changes":32,"status":"modified"}]}