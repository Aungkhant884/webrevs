{"files":[{"patch":"@@ -124,1 +124,1 @@\n-  inline size_t block_size(const HeapWord* p) const;\n+  inline size_t block_size(HeapWord* const p) const;\n@@ -127,1 +127,1 @@\n-  inline HeapWord* block_at_or_preceding(const void* addr) const;\n+  inline HeapWord* block_at_or_preceding(void* const addr) const;\n@@ -133,1 +133,1 @@\n-                                                    const void* addr) const;\n+                                                    void* const addr) const;\n@@ -164,1 +164,1 @@\n-  inline HeapWord* block_start(const void* addr);\n+  inline HeapWord* block_start(void* const addr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-inline HeapWord* G1BlockOffsetTablePart::block_start(const void* addr) {\n+inline HeapWord* G1BlockOffsetTablePart::block_start(void* const addr) {\n@@ -98,1 +98,1 @@\n-inline size_t G1BlockOffsetTablePart::block_size(const HeapWord* p) const {\n+inline size_t G1BlockOffsetTablePart::block_size(HeapWord* const p) const {\n@@ -102,1 +102,1 @@\n-inline HeapWord* G1BlockOffsetTablePart::block_at_or_preceding(const void* addr) const {\n+inline HeapWord* G1BlockOffsetTablePart::block_at_or_preceding(void* const addr) const {\n@@ -129,1 +129,1 @@\n-                                                                          const void* addr) const {\n+                                                                          void* const addr) const {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2349,1 +2349,1 @@\n-HeapWord* G1CollectedHeap::block_start(const void* addr) const {\n+HeapWord* G1CollectedHeap::block_start(void* const addr) const {\n@@ -2354,1 +2354,1 @@\n-bool G1CollectedHeap::block_is_obj(const HeapWord* addr) const {\n+bool G1CollectedHeap::block_is_obj(HeapWord* const addr) const {\n@@ -3320,1 +3320,1 @@\n-void G1CollectedHeap::mark_evac_failure_object(const oop obj, uint worker_id) const {\n+void G1CollectedHeap::mark_evac_failure_object(const oop obj) const {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -1047,3 +1047,3 @@\n-  inline bool is_in_cset(const HeapRegion *hr);\n-  inline bool is_in_cset(oop obj);\n-  inline bool is_in_cset(HeapWord* addr);\n+  inline bool is_in_cset(const HeapRegion *hr) const;\n+  inline bool is_in_cset(const oop obj) const;\n+  inline bool is_in_cset(HeapWord* const addr) const;\n@@ -1061,1 +1061,1 @@\n-  inline G1HeapRegionAttr region_attr(const void* obj) const;\n+  inline G1HeapRegionAttr region_attr(void* const obj) const;\n@@ -1170,1 +1170,1 @@\n-  HeapWord* block_start(const void* addr) const;\n+  HeapWord* block_start(void* const addr) const;\n@@ -1174,1 +1174,1 @@\n-  bool block_is_obj(const HeapWord* addr) const;\n+  bool block_is_obj(HeapWord* const addr) const;\n@@ -1237,1 +1237,1 @@\n-  bool is_marked_next(oop obj) const;\n+  bool is_marked_next(const oop obj) const;\n@@ -1246,3 +1246,1 @@\n-\n-  \/\/ Added if it is NULL it isn't dead.\n-\n+  \/\/ NULL obj are not considered dead.\n@@ -1255,1 +1253,1 @@\n-  void mark_evac_failure_object(const oop obj, uint worker_id) const;\n+  void mark_evac_failure_object(const oop obj) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":9,"deletions":11,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -161,1 +161,1 @@\n-inline bool G1CollectedHeap::is_marked_next(oop obj) const {\n+inline bool G1CollectedHeap::is_marked_next(const oop obj) const {\n@@ -165,1 +165,1 @@\n-inline bool G1CollectedHeap::is_in_cset(oop obj) {\n+inline bool G1CollectedHeap::is_in_cset(const oop obj) const {\n@@ -169,1 +169,1 @@\n-inline bool G1CollectedHeap::is_in_cset(HeapWord* addr) {\n+inline bool G1CollectedHeap::is_in_cset(HeapWord* const addr) const {\n@@ -173,1 +173,1 @@\n-bool G1CollectedHeap::is_in_cset(const HeapRegion* hr) {\n+bool G1CollectedHeap::is_in_cset(const HeapRegion* hr) const {\n@@ -181,1 +181,1 @@\n-G1HeapRegionAttr G1CollectedHeap::region_attr(const void* addr) const {\n+G1HeapRegionAttr G1CollectedHeap::region_attr(void* const addr) const {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -629,1 +629,1 @@\n-    _g1h->mark_evac_failure_object(old, _worker_id);\n+    _g1h->mark_evac_failure_object(old);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-  HeapWord* pre_dummy_top() { return (_pre_dummy_top == NULL) ? top() : _pre_dummy_top; }\n+  HeapWord* pre_dummy_top() const { return (_pre_dummy_top == NULL) ? top() : _pre_dummy_top; }\n@@ -120,1 +120,1 @@\n-  size_t capacity()     const { return byte_size(bottom(), end()); }\n+  size_t capacity() const { return byte_size(bottom(), end()); }\n@@ -133,2 +133,0 @@\n-  HeapWord* block_start_const(const void* p) const;\n-\n@@ -150,1 +148,1 @@\n-  HeapWord* block_start(const void* p);\n+  HeapWord* block_start(void* const p);\n@@ -178,1 +176,1 @@\n-  bool block_is_obj(const HeapWord* p) const;\n+  bool block_is_obj(HeapWord* const p) const;\n@@ -187,1 +185,1 @@\n-  size_t block_size(const HeapWord* p) const;\n+  size_t block_size(HeapWord* const p) const;\n@@ -279,1 +277,1 @@\n-  inline size_t block_size_using_bitmap(const HeapWord* p, const G1CMBitMap* const prev_bitmap) const;\n+  inline size_t block_size_using_bitmap(HeapWord* const p, const G1CMBitMap* const prev_bitmap) const;\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":6,"deletions":8,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-inline HeapWord* HeapRegion::block_start(const void* p) {\n+inline HeapWord* HeapRegion::block_start(void* const p) {\n@@ -105,1 +105,1 @@\n-inline bool HeapRegion::block_is_obj(const HeapWord* p) const {\n+inline bool HeapRegion::block_is_obj(HeapWord* const p) const {\n@@ -121,1 +121,1 @@\n-inline size_t HeapRegion::block_size_using_bitmap(const HeapWord* addr, const G1CMBitMap* const prev_bitmap) const {\n+inline size_t HeapRegion::block_size_using_bitmap(HeapWord* const addr, const G1CMBitMap* const prev_bitmap) const {\n@@ -143,1 +143,1 @@\n-inline size_t HeapRegion::block_size(const HeapWord *addr) const {\n+inline size_t HeapRegion::block_size(HeapWord* const addr) const {\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}