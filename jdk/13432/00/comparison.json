{"files":[{"patch":"@@ -429,0 +429,4 @@\n+<h4 id=\"jtreg_test_thread_factory\">JTREG_TEST_THREAD_FACTORY<\/h4>\n+<p>Sets the <code>-testThreadFactory<\/code> for JTReg. The source code\n+of all plugins is located in `test\/jtreg_test_thread_factory\/'. The\n+plugins are built as a part of test image.<\/p>\n","filename":"doc\/testing.html","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -381,0 +381,5 @@\n+#### JTREG_TEST_THREAD_FACTORY\n+\n+Sets the `-testThreadFactory` for JTReg. The source code of all plugins is located\n+in `test\/jtreg_test_thread_factory\/'. The plugins are built as a part of test image.\n+\n","filename":"doc\/testing.md","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -750,0 +750,16 @@\n+ifeq ($(BUILD_JTREG_TEST_THREAD_FACTORY), true)\n+  # Builds the test thread factory jtreg extension\n+  $(eval $(call SetupTarget, build-test-test-thread-factory, \\\n+      MAKEFILE := test\/BuildJtregTestThreadFactory, \\\n+      TARGET := build, \\\n+      DEPS := interim-langtools exploded-image, \\\n+  ))\n+\n+  # Copies the jtreg test thread factory into the test image\n+  $(eval $(call SetupTarget, test-image-test-thread-factory, \\\n+      MAKEFILE := test\/BuildJtregTestThreadFactory, \\\n+      TARGET := images, \\\n+      DEPS := build-test-test-thread-factory, \\\n+  ))\n+endif\n+\n@@ -1230,0 +1246,4 @@\n+ifeq ($(BUILD_JTREG_TEST_THREAD_FACTORY), true)\n+  test-image: test-image-test-thread-factory\n+endif\n+\n","filename":"make\/Main.gmk","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -96,0 +96,3 @@\n+JTREG_TEST_THREAD_FACTORY_DIR := $(TEST_IMAGE_DIR)\/jtreg_test_thread_factory\n+JTREG_TEST_THREAD_FACTORY_JAR := $(JTREG_TEST_THREAD_FACTORY_DIR)\/jtregTestThreadFactory.jar\n+\n@@ -203,1 +206,1 @@\n-        TEST_MODE ASSERT VERBOSE RETAIN MAX_MEM RUN_PROBLEM_LISTS \\\n+        TEST_MODE ASSERT VERBOSE RETAIN TEST_THREAD_FACTORY MAX_MEM RUN_PROBLEM_LISTS \\\n@@ -755,0 +758,1 @@\n+  JTREG_TEST_THREAD_FACTORY ?=\n@@ -768,0 +772,8 @@\n+  ifneq ($$(JTREG_TEST_THREAD_FACTORY), )\n+    $1_JTREG_BASIC_OPTIONS += -testThreadFactoryPath:$$(JTREG_TEST_THREAD_FACTORY_JAR)\n+    $1_JTREG_BASIC_OPTIONS += -testThreadFactory:$$(JTREG_TEST_THREAD_FACTORY)\n+    $1_JTREG_BASIC_OPTIONS += $$(addprefix $$(JTREG_PROBLEM_LIST_PREFIX), $$(wildcard \\\n+\t$$(addprefix $$($1_TEST_ROOT)\/, ProblemList-$$(JTREG_TEST_THREAD_FACTORY).txt) \\\n+    ))\n+  endif\n+\n","filename":"make\/RunTests.gmk","additions":13,"deletions":1,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -252,0 +252,1 @@\n+LIB_TESTS_ENABLE_DISABLE_JTREG_TEST_THREAD_FACTORY\n","filename":"make\/autoconf\/configure.ac","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -304,0 +304,19 @@\n+\n+AC_DEFUN_ONCE([LIB_TESTS_ENABLE_DISABLE_JTREG_TEST_THREAD_FACTORY],\n+[\n+  UTIL_ARG_ENABLE(NAME: jtreg-test-thread-factory, DEFAULT: auto,\n+      RESULT: BUILD_JTREG_TEST_THREAD_FACTORY,\n+      DESC: [enable building of the jtreg test thread factory],\n+      DEFAULT_DESC: [enabled if jtreg is present],\n+      CHECKING_MSG: [if the jtreg test thread factory should be built],\n+      CHECK_AVAILABLE: [\n+        AC_MSG_CHECKING([if the jtreg test thread factory is available])\n+        if test \"x$JT_HOME\" != \"x\"; then\n+          AC_MSG_RESULT([yes])\n+        else\n+          AVAILABLE=false\n+          AC_MSG_RESULT([no (jtreg not present)])\n+        fi\n+      ])\n+  AC_SUBST(BUILD_JTREG_TEST_THREAD_FACTORY)\n+])\n","filename":"make\/autoconf\/lib-tests.m4","additions":19,"deletions":0,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -361,0 +361,2 @@\n+BUILD_JTREG_TEST_THREAD_FACTORY := @BUILD_JTREG_TEST_THREAD_FACTORY@\n+\n","filename":"make\/autoconf\/spec.gmk.in","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+#\n+# Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+#\n+# This code is free software; you can redistribute it and\/or modify it\n+# under the terms of the GNU General Public License version 2 only, as\n+# published by the Free Software Foundation.  Oracle designates this\n+# particular file as subject to the \"Classpath\" exception as provided\n+# by Oracle in the LICENSE file that accompanied this code.\n+#\n+# This code is distributed in the hope that it will be useful, but WITHOUT\n+# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+# version 2 for more details (a copy is included in the LICENSE file that\n+# accompanied this code).\n+#\n+# You should have received a copy of the GNU General Public License version\n+# 2 along with this work; if not, write to the Free Software Foundation,\n+# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+#\n+# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+# or visit www.oracle.com if you need additional information or have any\n+# questions.\n+#\n+\n+default: build\n+\n+include $(SPEC)\n+include MakeBase.gmk\n+include JavaCompilation.gmk\n+\n+TARGETS :=\n+\n+################################################################################\n+\n+TTF_BASEDIR := $(TOPDIR)\/test\/jtreg_test_thread_factory\n+TTF_SUPPORT := $(SUPPORT_OUTPUTDIR)\/test\/jtreg_test_thread_factory\n+TTF_JAR := $(TTF_SUPPORT)\/jtregTestThreadFactory.jar\n+\n+$(eval $(call SetupJavaCompilation, BUILD_JTREG_TEST_THREAD_FACTORY, \\\n+    TARGET_RELEASE := $(TARGET_RELEASE_NEWJDK_UPGRADED), \\\n+    SRC := $(TTF_BASEDIR)\/src\/share\/classes, \\\n+    BIN := $(TTF_SUPPORT)\/classes, \\\n+    JAR := $(TTF_JAR), \\\n+))\n+\n+TARGETS += $(BUILD_JTREG_TEST_THREAD_FACTORY)\n+\n+################################################################################\n+# Targets for building test-image.\n+################################################################################\n+\n+# Copy to hotspot jtreg test image\n+$(eval $(call SetupCopyFiles, COPY_TTF, \\\n+    SRC := $(TTF_SUPPORT), \\\n+    DEST := $(TEST_IMAGE_DIR)\/jtreg_test_thread_factory, \\\n+    FILES := $(TTF_JAR), \\\n+))\n+\n+IMAGES_TARGETS += $(COPY_TTF)\n+\n+build: $(TARGETS)\n+images: $(IMAGES_TARGETS)\n+\n+.PHONY: all images\n","filename":"make\/test\/BuildJtregTestThreadFactory.gmk","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,51 @@\n+\/*\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.util.concurrent.ThreadFactory;\n+\n+public class Virtual implements ThreadFactory {\n+\n+    static {\n+        \/\/ This property is used by ProcessTools and some tests\n+        try {\n+            System.setProperty(\"main.wrapper\", \"Virtual\");\n+        } catch (Throwable t) {\n+            \/\/ might be thrown by security manager\n+        }\n+    }\n+\n+    public Virtual() {\n+    }\n+\n+\n+    @Override\n+    public Thread newThread(Runnable task) {\n+        try {\n+            return Thread.ofVirtual().factory().newThread(task);\n+        } catch (Throwable t) {\n+            throw new RuntimeException(t);\n+        }\n+    }\n+}\n","filename":"test\/jtreg_test_thread_factory\/src\/share\/classes\/Virtual.java","additions":51,"deletions":0,"binary":false,"changes":51,"status":"added"}]}