{"files":[{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -214,0 +230,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +248,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +266,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +284,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestBoolean.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -243,0 +259,1 @@\n+                if (!success) weakDelay();\n@@ -260,0 +277,1 @@\n+                if (!success) weakDelay();\n@@ -277,0 +295,1 @@\n+                if (!success) weakDelay();\n@@ -294,0 +313,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestByte.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -261,0 +277,1 @@\n+                if (!success) weakDelay();\n@@ -278,0 +295,1 @@\n+                if (!success) weakDelay();\n@@ -295,0 +313,1 @@\n+                if (!success) weakDelay();\n@@ -312,0 +331,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestChar.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -243,0 +259,1 @@\n+                if (!success) weakDelay();\n@@ -260,0 +277,1 @@\n+                if (!success) weakDelay();\n@@ -277,0 +295,1 @@\n+                if (!success) weakDelay();\n@@ -294,0 +313,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestDouble.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -243,0 +259,1 @@\n+                if (!success) weakDelay();\n@@ -260,0 +277,1 @@\n+                if (!success) weakDelay();\n@@ -277,0 +295,1 @@\n+                if (!success) weakDelay();\n@@ -294,0 +313,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestFloat.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -261,0 +277,1 @@\n+                if (!success) weakDelay();\n@@ -278,0 +295,1 @@\n+                if (!success) weakDelay();\n@@ -295,0 +313,1 @@\n+                if (!success) weakDelay();\n@@ -312,0 +331,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestInt.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -261,0 +277,1 @@\n+                if (!success) weakDelay();\n@@ -278,0 +295,1 @@\n+                if (!success) weakDelay();\n@@ -295,0 +313,1 @@\n+                if (!success) weakDelay();\n@@ -312,0 +331,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestLong.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -214,0 +230,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +248,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +266,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +284,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestObject.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -261,0 +277,1 @@\n+                if (!success) weakDelay();\n@@ -278,0 +295,1 @@\n+                if (!success) weakDelay();\n@@ -295,0 +313,1 @@\n+                if (!success) weakDelay();\n@@ -312,0 +331,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/JdkInternalMiscUnsafeAccessTestShort.java","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestBoolean.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestByte.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestChar.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestDouble.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestFloat.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestInt.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestLong.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestObject.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -46,1 +46,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -89,0 +96,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/SunMiscUnsafeAccessTestShort.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -50,1 +50,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -93,0 +100,9 @@\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n+\n@@ -305,0 +321,1 @@\n+                if (!success) weakDelay();\n@@ -322,0 +339,1 @@\n+                if (!success) weakDelay();\n@@ -339,0 +357,1 @@\n+                if (!success) weakDelay();\n@@ -356,0 +375,1 @@\n+                if (!success) weakDelay();\n","filename":"test\/hotspot\/jtreg\/compiler\/unsafe\/X-UnsafeAccessTest.java.template","additions":21,"deletions":1,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,8 @@\n-    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 10);\n+\n+    \/\/ More resilience for Weak* tests. These operations may spuriously\n+    \/\/ fail, and so we do several attempts with random delay on failure.\n+    \/\/ Be mindful of worst-case total time on test, which would be at\n+    \/\/ roughly (delay*attempts) milliseconds.\n+    \/\/\n+    static final int WEAK_ATTEMPTS = Integer.getInteger(\"weakAttempts\", 200);\n+    static final int WEAK_AVG_DELAY_MS = Integer.getInteger(\"weakDelay\", 100);\n@@ -501,0 +508,9 @@\n+\n+    static void weakDelay() {\n+        try {\n+            int delay = Math.max(1, (int)(Math.random() * WEAK_AVG_DELAY_MS));\n+            Thread.sleep(delay);\n+        } catch (InterruptedException ie) {\n+            \/\/ Do nothing.\n+        }\n+    }\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleBaseTest.java","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -508,0 +508,1 @@\n+                if (!success) weakDelay();\n@@ -525,0 +526,1 @@\n+                if (!success) weakDelay();\n@@ -542,0 +544,1 @@\n+                if (!success) weakDelay();\n@@ -559,0 +562,1 @@\n+                if (!success) weakDelay();\n@@ -796,0 +800,1 @@\n+                if (!success) weakDelay();\n@@ -813,0 +818,1 @@\n+                if (!success) weakDelay();\n@@ -830,0 +836,1 @@\n+                if (!success) weakDelay();\n@@ -847,0 +854,1 @@\n+                if (!success) weakDelay();\n@@ -1087,0 +1095,1 @@\n+                    if (!success) weakDelay();\n@@ -1104,0 +1113,1 @@\n+                    if (!success) weakDelay();\n@@ -1121,0 +1131,1 @@\n+                    if (!success) weakDelay();\n@@ -1138,0 +1149,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessBoolean.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -486,0 +486,1 @@\n+                if (!success) weakDelay();\n@@ -503,0 +504,1 @@\n+                if (!success) weakDelay();\n@@ -520,0 +522,1 @@\n+                if (!success) weakDelay();\n@@ -537,0 +540,1 @@\n+                if (!success) weakDelay();\n@@ -790,0 +794,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +812,1 @@\n+                if (!success) weakDelay();\n@@ -824,0 +830,1 @@\n+                if (!success) weakDelay();\n@@ -841,0 +848,1 @@\n+                if (!success) weakDelay();\n@@ -1097,0 +1105,1 @@\n+                    if (!success) weakDelay();\n@@ -1114,0 +1123,1 @@\n+                    if (!success) weakDelay();\n@@ -1131,0 +1141,1 @@\n+                    if (!success) weakDelay();\n@@ -1148,0 +1159,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessByte.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -486,0 +486,1 @@\n+                if (!success) weakDelay();\n@@ -503,0 +504,1 @@\n+                if (!success) weakDelay();\n@@ -520,0 +522,1 @@\n+                if (!success) weakDelay();\n@@ -537,0 +540,1 @@\n+                if (!success) weakDelay();\n@@ -790,0 +794,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +812,1 @@\n+                if (!success) weakDelay();\n@@ -824,0 +830,1 @@\n+                if (!success) weakDelay();\n@@ -841,0 +848,1 @@\n+                if (!success) weakDelay();\n@@ -1097,0 +1105,1 @@\n+                    if (!success) weakDelay();\n@@ -1114,0 +1123,1 @@\n+                    if (!success) weakDelay();\n@@ -1131,0 +1141,1 @@\n+                    if (!success) weakDelay();\n@@ -1148,0 +1159,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessChar.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -556,0 +556,1 @@\n+                if (!success) weakDelay();\n@@ -573,0 +574,1 @@\n+                if (!success) weakDelay();\n@@ -590,0 +592,1 @@\n+                if (!success) weakDelay();\n@@ -607,0 +610,1 @@\n+                if (!success) weakDelay();\n@@ -812,0 +816,1 @@\n+                if (!success) weakDelay();\n@@ -829,0 +834,1 @@\n+                if (!success) weakDelay();\n@@ -846,0 +852,1 @@\n+                if (!success) weakDelay();\n@@ -863,0 +870,1 @@\n+                if (!success) weakDelay();\n@@ -1071,0 +1079,1 @@\n+                    if (!success) weakDelay();\n@@ -1088,0 +1097,1 @@\n+                    if (!success) weakDelay();\n@@ -1105,0 +1115,1 @@\n+                    if (!success) weakDelay();\n@@ -1122,0 +1133,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessDouble.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -556,0 +556,1 @@\n+                if (!success) weakDelay();\n@@ -573,0 +574,1 @@\n+                if (!success) weakDelay();\n@@ -590,0 +592,1 @@\n+                if (!success) weakDelay();\n@@ -607,0 +610,1 @@\n+                if (!success) weakDelay();\n@@ -812,0 +816,1 @@\n+                if (!success) weakDelay();\n@@ -829,0 +834,1 @@\n+                if (!success) weakDelay();\n@@ -846,0 +852,1 @@\n+                if (!success) weakDelay();\n@@ -863,0 +870,1 @@\n+                if (!success) weakDelay();\n@@ -1071,0 +1079,1 @@\n+                    if (!success) weakDelay();\n@@ -1088,0 +1097,1 @@\n+                    if (!success) weakDelay();\n@@ -1105,0 +1115,1 @@\n+                    if (!success) weakDelay();\n@@ -1122,0 +1133,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessFloat.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -486,0 +486,1 @@\n+                if (!success) weakDelay();\n@@ -503,0 +504,1 @@\n+                if (!success) weakDelay();\n@@ -520,0 +522,1 @@\n+                if (!success) weakDelay();\n@@ -537,0 +540,1 @@\n+                if (!success) weakDelay();\n@@ -790,0 +794,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +812,1 @@\n+                if (!success) weakDelay();\n@@ -824,0 +830,1 @@\n+                if (!success) weakDelay();\n@@ -841,0 +848,1 @@\n+                if (!success) weakDelay();\n@@ -1097,0 +1105,1 @@\n+                    if (!success) weakDelay();\n@@ -1114,0 +1123,1 @@\n+                    if (!success) weakDelay();\n@@ -1131,0 +1141,1 @@\n+                    if (!success) weakDelay();\n@@ -1148,0 +1159,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessInt.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -486,0 +486,1 @@\n+                if (!success) weakDelay();\n@@ -503,0 +504,1 @@\n+                if (!success) weakDelay();\n@@ -520,0 +522,1 @@\n+                if (!success) weakDelay();\n@@ -537,0 +540,1 @@\n+                if (!success) weakDelay();\n@@ -790,0 +794,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +812,1 @@\n+                if (!success) weakDelay();\n@@ -824,0 +830,1 @@\n+                if (!success) weakDelay();\n@@ -841,0 +848,1 @@\n+                if (!success) weakDelay();\n@@ -1097,0 +1105,1 @@\n+                    if (!success) weakDelay();\n@@ -1114,0 +1123,1 @@\n+                    if (!success) weakDelay();\n@@ -1131,0 +1141,1 @@\n+                    if (!success) weakDelay();\n@@ -1148,0 +1159,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessLong.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -486,0 +486,1 @@\n+                if (!success) weakDelay();\n@@ -503,0 +504,1 @@\n+                if (!success) weakDelay();\n@@ -520,0 +522,1 @@\n+                if (!success) weakDelay();\n@@ -537,0 +540,1 @@\n+                if (!success) weakDelay();\n@@ -790,0 +794,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +812,1 @@\n+                if (!success) weakDelay();\n@@ -824,0 +830,1 @@\n+                if (!success) weakDelay();\n@@ -841,0 +848,1 @@\n+                if (!success) weakDelay();\n@@ -1097,0 +1105,1 @@\n+                    if (!success) weakDelay();\n@@ -1114,0 +1123,1 @@\n+                    if (!success) weakDelay();\n@@ -1131,0 +1141,1 @@\n+                    if (!success) weakDelay();\n@@ -1148,0 +1159,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessShort.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -585,0 +585,1 @@\n+                if (!success) weakDelay();\n@@ -602,0 +603,1 @@\n+                if (!success) weakDelay();\n@@ -619,0 +621,1 @@\n+                if (!success) weakDelay();\n@@ -636,0 +639,1 @@\n+                if (!success) weakDelay();\n@@ -825,0 +829,1 @@\n+                if (!success) weakDelay();\n@@ -842,0 +847,1 @@\n+                if (!success) weakDelay();\n@@ -859,0 +865,1 @@\n+                if (!success) weakDelay();\n@@ -876,0 +883,1 @@\n+                if (!success) weakDelay();\n@@ -1068,0 +1076,1 @@\n+                    if (!success) weakDelay();\n@@ -1085,0 +1094,1 @@\n+                    if (!success) weakDelay();\n@@ -1102,0 +1112,1 @@\n+                    if (!success) weakDelay();\n@@ -1119,0 +1130,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestAccessString.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1084,0 +1084,1 @@\n+                        if (!success) weakDelay();\n@@ -1101,0 +1102,1 @@\n+                        if (!success) weakDelay();\n@@ -1118,0 +1120,1 @@\n+                        if (!success) weakDelay();\n@@ -1135,0 +1138,1 @@\n+                        if (!success) weakDelay();\n@@ -1285,0 +1289,1 @@\n+                        if (!success) weakDelay();\n@@ -1302,0 +1307,1 @@\n+                        if (!success) weakDelay();\n@@ -1319,0 +1325,1 @@\n+                        if (!success) weakDelay();\n@@ -1336,0 +1343,1 @@\n+                        if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestByteArrayAsDouble.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1084,0 +1084,1 @@\n+                        if (!success) weakDelay();\n@@ -1101,0 +1102,1 @@\n+                        if (!success) weakDelay();\n@@ -1118,0 +1120,1 @@\n+                        if (!success) weakDelay();\n@@ -1135,0 +1138,1 @@\n+                        if (!success) weakDelay();\n@@ -1285,0 +1289,1 @@\n+                        if (!success) weakDelay();\n@@ -1302,0 +1307,1 @@\n+                        if (!success) weakDelay();\n@@ -1319,0 +1325,1 @@\n+                        if (!success) weakDelay();\n@@ -1336,0 +1343,1 @@\n+                        if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestByteArrayAsFloat.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1268,0 +1268,1 @@\n+                        if (!success) weakDelay();\n@@ -1285,0 +1286,1 @@\n+                        if (!success) weakDelay();\n@@ -1302,0 +1304,1 @@\n+                        if (!success) weakDelay();\n@@ -1319,0 +1322,1 @@\n+                        if (!success) weakDelay();\n@@ -1579,0 +1583,1 @@\n+                        if (!success) weakDelay();\n@@ -1596,0 +1601,1 @@\n+                        if (!success) weakDelay();\n@@ -1613,0 +1619,1 @@\n+                        if (!success) weakDelay();\n@@ -1630,0 +1637,1 @@\n+                        if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestByteArrayAsInt.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1268,0 +1268,1 @@\n+                        if (!success) weakDelay();\n@@ -1285,0 +1286,1 @@\n+                        if (!success) weakDelay();\n@@ -1302,0 +1304,1 @@\n+                        if (!success) weakDelay();\n@@ -1319,0 +1322,1 @@\n+                        if (!success) weakDelay();\n@@ -1579,0 +1583,1 @@\n+                        if (!success) weakDelay();\n@@ -1596,0 +1601,1 @@\n+                        if (!success) weakDelay();\n@@ -1613,0 +1619,1 @@\n+                        if (!success) weakDelay();\n@@ -1630,0 +1637,1 @@\n+                        if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestByteArrayAsLong.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -476,0 +480,1 @@\n+                if (!success) weakDelay();\n@@ -493,0 +498,1 @@\n+                if (!success) weakDelay();\n@@ -510,0 +516,1 @@\n+                if (!success) weakDelay();\n@@ -527,0 +534,1 @@\n+                if (!success) weakDelay();\n@@ -763,0 +771,1 @@\n+                    if (!success) weakDelay();\n@@ -780,0 +789,1 @@\n+                    if (!success) weakDelay();\n@@ -797,0 +807,1 @@\n+                    if (!success) weakDelay();\n@@ -814,0 +825,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessBoolean.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -498,0 +502,1 @@\n+                if (!success) weakDelay();\n@@ -515,0 +520,1 @@\n+                if (!success) weakDelay();\n@@ -532,0 +538,1 @@\n+                if (!success) weakDelay();\n@@ -549,0 +556,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +815,1 @@\n+                    if (!success) weakDelay();\n@@ -824,0 +833,1 @@\n+                    if (!success) weakDelay();\n@@ -841,0 +851,1 @@\n+                    if (!success) weakDelay();\n@@ -858,0 +869,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessByte.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -498,0 +502,1 @@\n+                if (!success) weakDelay();\n@@ -515,0 +520,1 @@\n+                if (!success) weakDelay();\n@@ -532,0 +538,1 @@\n+                if (!success) weakDelay();\n@@ -549,0 +556,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +815,1 @@\n+                    if (!success) weakDelay();\n@@ -824,0 +833,1 @@\n+                    if (!success) weakDelay();\n@@ -841,0 +851,1 @@\n+                    if (!success) weakDelay();\n@@ -858,0 +869,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessChar.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -420,0 +424,1 @@\n+                if (!success) weakDelay();\n@@ -437,0 +442,1 @@\n+                if (!success) weakDelay();\n@@ -454,0 +460,1 @@\n+                if (!success) weakDelay();\n@@ -471,0 +478,1 @@\n+                if (!success) weakDelay();\n@@ -651,0 +659,1 @@\n+                    if (!success) weakDelay();\n@@ -668,0 +677,1 @@\n+                    if (!success) weakDelay();\n@@ -685,0 +695,1 @@\n+                    if (!success) weakDelay();\n@@ -702,0 +713,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessDouble.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -420,0 +424,1 @@\n+                if (!success) weakDelay();\n@@ -437,0 +442,1 @@\n+                if (!success) weakDelay();\n@@ -454,0 +460,1 @@\n+                if (!success) weakDelay();\n@@ -471,0 +478,1 @@\n+                if (!success) weakDelay();\n@@ -651,0 +659,1 @@\n+                    if (!success) weakDelay();\n@@ -668,0 +677,1 @@\n+                    if (!success) weakDelay();\n@@ -685,0 +695,1 @@\n+                    if (!success) weakDelay();\n@@ -702,0 +713,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessFloat.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -498,0 +502,1 @@\n+                if (!success) weakDelay();\n@@ -515,0 +520,1 @@\n+                if (!success) weakDelay();\n@@ -532,0 +538,1 @@\n+                if (!success) weakDelay();\n@@ -549,0 +556,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +815,1 @@\n+                    if (!success) weakDelay();\n@@ -824,0 +833,1 @@\n+                    if (!success) weakDelay();\n@@ -841,0 +851,1 @@\n+                    if (!success) weakDelay();\n@@ -858,0 +869,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessInt.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -498,0 +502,1 @@\n+                if (!success) weakDelay();\n@@ -515,0 +520,1 @@\n+                if (!success) weakDelay();\n@@ -532,0 +538,1 @@\n+                if (!success) weakDelay();\n@@ -549,0 +556,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +815,1 @@\n+                    if (!success) weakDelay();\n@@ -824,0 +833,1 @@\n+                    if (!success) weakDelay();\n@@ -841,0 +851,1 @@\n+                    if (!success) weakDelay();\n@@ -858,0 +869,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessLong.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -498,0 +502,1 @@\n+                if (!success) weakDelay();\n@@ -515,0 +520,1 @@\n+                if (!success) weakDelay();\n@@ -532,0 +538,1 @@\n+                if (!success) weakDelay();\n@@ -549,0 +556,1 @@\n+                if (!success) weakDelay();\n@@ -807,0 +815,1 @@\n+                    if (!success) weakDelay();\n@@ -824,0 +833,1 @@\n+                    if (!success) weakDelay();\n@@ -841,0 +851,1 @@\n+                    if (!success) weakDelay();\n@@ -858,0 +869,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessShort.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -214,0 +214,1 @@\n+                if (!success) weakDelay();\n@@ -231,0 +232,1 @@\n+                if (!success) weakDelay();\n@@ -248,0 +250,1 @@\n+                if (!success) weakDelay();\n@@ -265,0 +268,1 @@\n+                if (!success) weakDelay();\n@@ -398,0 +402,1 @@\n+                if (!success) weakDelay();\n@@ -415,0 +420,1 @@\n+                if (!success) weakDelay();\n@@ -432,0 +438,1 @@\n+                if (!success) weakDelay();\n@@ -449,0 +456,1 @@\n+                if (!success) weakDelay();\n@@ -607,0 +615,1 @@\n+                    if (!success) weakDelay();\n@@ -624,0 +633,1 @@\n+                    if (!success) weakDelay();\n@@ -641,0 +651,1 @@\n+                    if (!success) weakDelay();\n@@ -658,0 +669,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/VarHandleTestMethodHandleAccessString.java","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -728,0 +728,1 @@\n+                if (!success) weakDelay();\n@@ -745,0 +746,1 @@\n+                if (!success) weakDelay();\n@@ -762,0 +764,1 @@\n+                if (!success) weakDelay();\n@@ -779,0 +782,1 @@\n+                if (!success) weakDelay();\n@@ -1133,0 +1137,1 @@\n+                if (!success) weakDelay();\n@@ -1150,0 +1155,1 @@\n+                if (!success) weakDelay();\n@@ -1167,0 +1173,1 @@\n+                if (!success) weakDelay();\n@@ -1184,0 +1191,1 @@\n+                if (!success) weakDelay();\n@@ -1541,0 +1549,1 @@\n+                    if (!success) weakDelay();\n@@ -1558,0 +1567,1 @@\n+                    if (!success) weakDelay();\n@@ -1575,0 +1585,1 @@\n+                    if (!success) weakDelay();\n@@ -1592,0 +1603,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestAccess.java.template","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1629,0 +1629,1 @@\n+                        if (!success) weakDelay();\n@@ -1646,0 +1647,1 @@\n+                        if (!success) weakDelay();\n@@ -1663,0 +1665,1 @@\n+                        if (!success) weakDelay();\n@@ -1680,0 +1683,1 @@\n+                        if (!success) weakDelay();\n@@ -1946,0 +1950,1 @@\n+                        if (!success) weakDelay();\n@@ -1963,0 +1968,1 @@\n+                        if (!success) weakDelay();\n@@ -1980,0 +1986,1 @@\n+                        if (!success) weakDelay();\n@@ -1997,0 +2004,1 @@\n+                        if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestByteArrayView.java.template","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -215,0 +215,1 @@\n+                if (!success) weakDelay();\n@@ -232,0 +233,1 @@\n+                if (!success) weakDelay();\n@@ -249,0 +251,1 @@\n+                if (!success) weakDelay();\n@@ -266,0 +269,1 @@\n+                if (!success) weakDelay();\n@@ -538,0 +542,1 @@\n+                if (!success) weakDelay();\n@@ -555,0 +560,1 @@\n+                if (!success) weakDelay();\n@@ -572,0 +578,1 @@\n+                if (!success) weakDelay();\n@@ -589,0 +596,1 @@\n+                if (!success) weakDelay();\n@@ -886,0 +894,1 @@\n+                    if (!success) weakDelay();\n@@ -903,0 +912,1 @@\n+                    if (!success) weakDelay();\n@@ -920,0 +930,1 @@\n+                    if (!success) weakDelay();\n@@ -937,0 +948,1 @@\n+                    if (!success) weakDelay();\n","filename":"test\/jdk\/java\/lang\/invoke\/VarHandles\/X-VarHandleTestMethodHandleAccess.java.template","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"}]}