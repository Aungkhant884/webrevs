{"files":[{"patch":"@@ -134,1 +134,1 @@\n-    if (utfSource && utfSource != sourceBuf)\n+    if (utfSource != NULL && utfSource != sourceBuf) {\n@@ -136,0 +136,1 @@\n+    }\n@@ -138,1 +139,1 @@\n-    if (utfName && utfName != buf)\n+    if (utfName != NULL && utfName != buf) {\n@@ -140,0 +141,1 @@\n+    }\n@@ -200,1 +202,1 @@\n-    if (utfSource && utfSource != sourceBuf)\n+    if (utfSource != NULL && utfSource != sourceBuf) {\n@@ -202,0 +204,1 @@\n+    }\n@@ -204,1 +207,1 @@\n-    if (utfName && utfName != buf)\n+    if (utfName != NULL && utfName != buf) {\n@@ -206,0 +209,1 @@\n+    }\n@@ -265,0 +269,4 @@\n+    if (utfName != NULL && utfName != buf) {\n+        free(utfName);\n+    }\n+\n","filename":"src\/java.base\/share\/native\/libjava\/ClassLoader.c","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -40,0 +40,3 @@\n+    \/**\n+     * foo.Foo\n+     *\/\n@@ -65,0 +68,55 @@\n+    \/**\n+     * A variant of X_BYTECODE, with the class name rewritten to trigger malloc in ClassLoader.c\n+     *\n+     *   ClassReader reader = new ClassReader(X_BYTECODE);\n+     *   ClassWriter writer = new ClassWriter(reader, 0);\n+     *   reader.accept(new ClassVisitor(Opcodes.ASM5, writer) {\n+     *       @Override\n+     *       public void visit(int version, int access, String name,\n+     *                         String signature, String superName, String[] interfaces) {\n+     *           super.visit(version, access,\n+     *               \"foo\/AReallyReallyLongClassNameThatWillSurelyNotFitInACharBufferOfLength128ToTestThatWeDontLeakMemoryWhenTheClassNameIsTooLongForTheStackAllocatedBuffer\",\n+     *              signature, superName, interfaces);\n+     *       }\n+     *   }, 0);\n+     *   byte[] code = writer.toByteArray();\n+     *   System.out.println(HexFormat.ofDelimiter(\", \").withPrefix(\"0x\").formatHex(code));\n+     *\/\n+    private static final byte[] X_LONG_NAME_BYTECODE = new byte[]{\n+            (byte)0xca, (byte)0xfe, (byte)0xba, (byte)0xbe, 0x00, 0x00, 0x00, 0x38, 0x00, 0x12, 0x0a, 0x00,\n+            0x03, 0x00, 0x0c, 0x07, 0x00, 0x0d, 0x07, 0x00, 0x0e, 0x07, 0x00, 0x0f,\n+            0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00, 0x03,\n+            0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00,\n+            0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54,\n+            0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x03, 0x72, 0x75, 0x6e, 0x01, 0x00,\n+            0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x01,\n+            0x00, 0x08, 0x46, 0x6f, 0x6f, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c, 0x00,\n+            0x05, 0x00, 0x06, 0x01, 0x00, 0x07, 0x66, 0x6f, 0x6f, 0x2f, 0x46, 0x6f,\n+            0x6f, 0x01, 0x00, 0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e,\n+            0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x01, 0x00, 0x12, 0x6a,\n+            0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x52, 0x75, 0x6e,\n+            0x6e, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, (byte)0x97, 0x66, 0x6f, 0x6f, 0x2f,\n+            0x41, 0x52, 0x65, 0x61, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x61, 0x6c, 0x6c,\n+            0x79, 0x4c, 0x6f, 0x6e, 0x67, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x61,\n+            0x6d, 0x65, 0x54, 0x68, 0x61, 0x74, 0x57, 0x69, 0x6c, 0x6c, 0x53, 0x75,\n+            0x72, 0x65, 0x6c, 0x79, 0x4e, 0x6f, 0x74, 0x46, 0x69, 0x74, 0x49, 0x6e,\n+            0x41, 0x43, 0x68, 0x61, 0x72, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x4f,\n+            0x66, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x31, 0x32, 0x38, 0x54, 0x6f,\n+            0x54, 0x65, 0x73, 0x74, 0x54, 0x68, 0x61, 0x74, 0x57, 0x65, 0x44, 0x6f,\n+            0x6e, 0x74, 0x4c, 0x65, 0x61, 0x6b, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,\n+            0x57, 0x68, 0x65, 0x6e, 0x54, 0x68, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,\n+            0x4e, 0x61, 0x6d, 0x65, 0x49, 0x73, 0x54, 0x6f, 0x6f, 0x4c, 0x6f, 0x6e,\n+            0x67, 0x46, 0x6f, 0x72, 0x54, 0x68, 0x65, 0x53, 0x74, 0x61, 0x63, 0x6b,\n+            0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x42, 0x75, 0x66,\n+            0x66, 0x65, 0x72, 0x07, 0x00, 0x10, 0x00, 0x21, 0x00, 0x11, 0x00, 0x03,\n+            0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x05,\n+            0x00, 0x06, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x01,\n+            0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, (byte)0xb7, 0x00, 0x01, (byte)0xb1, 0x00,\n+            0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00,\n+            0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x09, 0x00, 0x06, 0x00, 0x01, 0x00,\n+            0x07, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,\n+            0x01, (byte)0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06,\n+            0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00,\n+            0x00, 0x02, 0x00, 0x0b\n+    };\n+\n@@ -210,0 +268,9 @@\n+        @Benchmark\n+        public Class<?> loadLongName() throws ClassNotFoundException {\n+            try {\n+                return HOST_LOOKUP.defineHiddenClass(X_LONG_NAME_BYTECODE, false).lookupClass();\n+            } catch (IllegalAccessException e) {\n+                throw new InternalError(e);\n+            }\n+        }\n+\n@@ -279,0 +346,9 @@\n+        @Benchmark\n+        public Class<?> loadLongName() throws ClassNotFoundException {\n+            try {\n+                return HOST_LOOKUP.defineHiddenClass(X_LONG_NAME_BYTECODE, false, STRONG).lookupClass();\n+            } catch (IllegalAccessException e) {\n+                throw new InternalError(e);\n+            }\n+        }\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/lang\/invoke\/LookupDefineClass.java","additions":76,"deletions":0,"binary":false,"changes":76,"status":"modified"}]}