{"files":[{"patch":"@@ -716,1 +716,1 @@\n-        return (V) null;\n+        return null;\n","filename":"src\/jdk.zipfs\/share\/classes\/jdk\/nio\/zipfs\/ZipPath.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,2 +45,1 @@\n- * UnsupportedOperationException when the attribute view\n- * PosixFileAttributeView is not available\n+ * Exception when the attribute view PosixFileAttributeView is not available\n@@ -59,1 +58,1 @@\n-        Entry e0 = Entry.of(ZIP_ENTRY, ZipEntry.DEFLATED,\n+        Entry entry = Entry.of(ZIP_ENTRY, ZipEntry.DEFLATED,\n@@ -61,1 +60,1 @@\n-        zip(ZIP_FILE, Map.of(\"create\", \"true\"), e0);\n+        zip(ZIP_FILE, Map.of(\"create\", \"true\"), entry);\n@@ -82,1 +81,1 @@\n-                { Map.of(\"enablePosixFileAttributes\", \"true\")}\n+                {Map.of(\"enablePosixFileAttributes\", \"true\")}\n@@ -88,1 +87,1 @@\n-     * UnsupportedOperationException when the attribute view\n+     * an Exception when the attribute view\n@@ -95,1 +94,0 @@\n-\n@@ -100,1 +98,2 @@\n-            System.out.printf(\"View returned: %s%n\", view);\n+            System.out.printf(\"View returned: %s, Map= %s%n\", view,\n+                    formatMap(env));\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/testng\/test\/PosixAttributeViewTest.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-    private static String formatMap(Map<String, ?> env) {\n+    protected static String formatMap(Map<String, ?> env) {\n","filename":"test\/jdk\/jdk\/nio\/zipfs\/testng\/util\/ZipFsBaseTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}