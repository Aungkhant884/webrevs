[{"commit":{"message":"Copyrights"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD4.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA2.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA5.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/MessageDigests.java"}],"sha":"cafa3e49125d4ed282977364f008e66beafc46de"},{"commit":{"message":"Merge branch 'master' into improve_md5"},"files":[],"sha":"4e4c360d1e8c1c1b33237458a2bef056af2e6f28"},{"commit":{"message":"Remove unused Unsafe import"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"}],"sha":"e1c943c526756599df990985e12245532a286f0c"},{"commit":{"message":"Harmonize MD4 impl, remove now-redundant checks from ByteArrayAccess (VHs do bounds checks, most of which will be optimized away)"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD4.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA5.java"}],"sha":"e9a282e49d22ba66cfd1f9afe5b2f7ddf46c59a7"},{"commit":{"message":"Merge branch 'master' into improve_md5"},"files":[],"sha":"e187a53d8399dd61d39d0e208590e349c926c759"},{"commit":{"message":"Apply allocation avoiding optimizations to all SHA versions sharing structural similarities with MD5"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA2.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/SHA5.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/security\/MessageDigests.java"}],"sha":"42b659b2ee0d2d88dc0db3f9a80cc2df071bbedf"},{"commit":{"message":"Remove unused reverseBytes imports"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"}],"sha":"c78ad7c906df76f2f6020032eb3608877e929f28"},{"commit":{"message":"Copyrights"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/UUIDBench.java"}],"sha":"d66992f30c0fc870d1255e4972b8cfa253e5e0f3"},{"commit":{"message":"Fix copy-paste error"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"}],"sha":"737feefbc4fa82334c0e6ed09f08cc0e1a8cfcfe"},{"commit":{"message":"Various fixes (IDE stopped IDEing..)"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java"}],"sha":"16f123f536fb610c4cf2e2c97266e011ba98e157"},{"commit":{"message":"Add imports"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"}],"sha":"5970ea61a3a4ed4949773d3eed2fa5e91c58a0bc"},{"commit":{"message":"mismatched parens"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"}],"sha":"f9f76a0f1a6303d6614356740890cb0b1d523c67"},{"commit":{"message":"Simplify and consolidate code in ByteArrayAccess"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/ByteArrayAccess.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java"}],"sha":"4248b51cc9d27692ba0de3f2f44336d872c1ae72"},{"commit":{"message":"Remove MD5.clone() changes in UUID made redundant by #1933"},"files":[],"sha":"c69dc936858cf28fa86952565f28de118c7edf67"},{"commit":{"message":"Merge branch 'master' into improve_md5"},"files":[],"sha":"4e6c760e4d5f47cce25cb4ac50bfc3c35107bf70"},{"commit":{"message":"Merge branch 'master' into improve_md5"},"files":[],"sha":"976fc370734316637f4c56414edc39014c49ee81"},{"commit":{"message":"Speed up UUID.nameUUIDFromBytes by storing a static final MD5 instance that we clone before use"},"files":[],"sha":"2f266316d62ca875c38e2f771412d02625414bf4"},{"commit":{"message":"Read 8-bytes at a time (helps interpreter performance)"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java"}],"sha":"4b4fb2dd078eb71bd41ad3cf61b87a93575171a0"},{"commit":{"message":"VarHandle based impl, no added allocation in C1 mode"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/UUIDBench.java"}],"sha":"3caca921e6d28c6c583407428800f3c5681e7f4a"},{"commit":{"message":"Improve MD5 digest"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/MD5.java"}],"sha":"5dbbb8a658534bf4c6ecb2b9be0d144f1f009775"}]