{"files":[{"patch":"@@ -1696,9 +1696,23 @@\n-     * nor occur after singletons<\/i>. For example, the recommended case convention\n-     * of the tag \"aZ-laTN-X-LATN\" is \"az-Latn-x-latn\". Excluding case folding,\n-     * this method makes no modifications to the tag itself. Similar to\n-     * {@link #forLanguageTag(String)}, this method will not normalize case\n-     * for variant tags and the portion of a private use subtag prefixed by \"lvariant\".\n-     * If the tag is a grandfathered tag, it will be case folded to match the\n-     * exact case definition defined in the subtag registry.\n-     *\n-     * <p>Case convention of language tags does not carry meaning, and is simply\n+     * nor occur after singletons. Such two-letter subtags are all\n+     * uppercase (as in the tags \"en-CA-x-ca\" or \"sgn-BE-FR\") and four-\n+     * letter subtags are titlecase (as in the tag \"az-Latn-x-latn\").<\/i> As\n+     * legacy tags are not always well-formed, this method\n+     * will simply case fold a legacy tag to match the exact case convention\n+     * for the particular tag specified in the respective\n+     * {@link ##legacy_tags_replacement Legacy tags} table.\n+     *\n+     * <p><b>Special Exceptions<\/b>\n+     * <p>To maintain consistency with {@link ##def_variant variant}\n+     * which is case-sensitive, this method will neither case fold variant\n+     * subtags nor case fold private use subtags prefixed by {@code lvariant}.\n+     *\n+     * <p>For example,\n+     * {@snippet lang=java :\n+     * String tag = \"ja-kana-jp-x-lvariant-Oracle-JDK-Standard-Edition\";\n+     * Locale.caseFoldLanguageTag(tag); \/\/ returns \"ja-Kana-JP-x-lvariant-Oracle-JDK-Standard-Edition\"\n+     * String tag2 = \"ja-kana-jp-x-Oracle-JDK-Standard-Edition\";\n+     * Locale.caseFoldLanguageTag(tag2); \/\/ returns \"ja-Kana-JP-x-oracle-jdk-standard-edition\"\n+     * }\n+     *\n+     * <p>Excluding case folding, this method makes no modifications to the tag itself.\n+     * Case convention of language tags does not carry meaning, and is simply\n@@ -1795,1 +1809,1 @@\n-     * <table class=\"striped\">\n+     * <table class=\"striped\" id=\"legacy_tags_replacement\">\n@@ -1827,1 +1841,1 @@\n-     * <table class=\"striped\">\n+     * <table class=\"striped\" id=\"legacy_tags_no_replacement\">\n","filename":"src\/java.base\/share\/classes\/java\/util\/Locale.java","additions":25,"deletions":11,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -34,8 +34,1 @@\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.StringJoiner;\n-import java.util.Locale;\n+import java.util.*;\n@@ -422,1 +415,1 @@\n-            throw new IllegalArgumentException(\"Ill formed tag\");\n+            throw new IllformedLocaleException(\"Ill formed tag\");\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/LanguageTag.java","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-                \/\/ grandfathered tests\n+                \/\/ Legacy tests\n@@ -135,1 +135,1 @@\n-                \/\/ Special JDK Cases\n+                \/\/ Special JDK Cases (Variant and x-lvariant)\n@@ -140,1 +140,6 @@\n-                Arguments.of(\"en-US-x-lvariant-POSIX\", \"en-US-x-lvariant-POSIX\")\n+                Arguments.of(\"XX-ABCD-yy-VARIANT-x-TEST-lvariant-JDK\",\n+                        \"xx-Abcd-YY-VARIANT-x-test-lvariant-JDK\"),\n+                Arguments.of(\"ja-kana-jp-x-lvariant-Oracle-JDK-Standard-Edition\",\n+                        \"ja-Kana-JP-x-lvariant-Oracle-JDK-Standard-Edition\"),\n+                Arguments.of(\"ja-kana-jp-x-Oracle-JDK-Standard-Edition\",\n+                        \"ja-Kana-JP-x-oracle-jdk-standard-edition\")\n","filename":"test\/jdk\/java\/util\/Locale\/CaseFoldLanguageTagTest.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}