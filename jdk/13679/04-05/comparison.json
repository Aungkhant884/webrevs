{"files":[{"patch":"@@ -34,1 +34,9 @@\n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.IllformedLocaleException;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.StringJoiner;\n@@ -422,1 +430,1 @@\n-        StringBuilder bldr = new StringBuilder();\n+        StringBuilder bldr = new StringBuilder(tag.length());\n@@ -428,0 +436,1 @@\n+            String subtag = subtags[i];\n@@ -429,7 +438,7 @@\n-                bldr.append(subtags[i]);\n-            } else if (i > 0 && isVariant(subtags[i]) && !singletonFound && !privateFound) {\n-                bldr.append(subtags[i]);\n-            } else if (i > 0 && isRegion(subtags[i]) && !singletonFound && !privateFound) {\n-                bldr.append(canonicalizeRegion(subtags[i]));\n-            } else if (i > 0 && isScript(subtags[i]) && !singletonFound && !privateFound) {\n-                bldr.append(canonicalizeScript(subtags[i]));\n+                bldr.append(subtag);\n+            } else if (i > 0 && isVariant(subtag) && !singletonFound && !privateFound) {\n+                bldr.append(subtag);\n+            } else if (i > 0 && isRegion(subtag) && !singletonFound && !privateFound) {\n+                bldr.append(canonicalizeRegion(subtag));\n+            } else if (i > 0 && isScript(subtag) && !singletonFound && !privateFound) {\n+                bldr.append(canonicalizeScript(subtag));\n@@ -439,1 +448,1 @@\n-                if (isPrivateusePrefix(subtags[i])) {\n+                if (isPrivateusePrefix(subtag)) {\n@@ -441,1 +450,1 @@\n-                } else if (isExtensionSingleton(subtags[i])) {\n+                } else if (isExtensionSingleton(subtag)) {\n@@ -443,1 +452,1 @@\n-                } else if (subtags[i].equals(PRIVUSE_VARIANT_PREFIX)) {\n+                } else if (subtag.equals(PRIVUSE_VARIANT_PREFIX)) {\n@@ -446,1 +455,4 @@\n-                bldr.append(subtags[i].toLowerCase(Locale.ROOT));\n+                bldr.append(subtag.toLowerCase(Locale.ROOT));\n+            }\n+            if (i != subtags.length-1) {\n+                bldr.append(\"-\");\n@@ -448,1 +460,0 @@\n-            bldr.append(\"-\");\n@@ -450,1 +461,1 @@\n-        return bldr.substring(0, bldr.length()-1);\n+        return bldr.substring(0);\n","filename":"src\/java.base\/share\/classes\/sun\/util\/locale\/LanguageTag.java","additions":26,"deletions":15,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -118,0 +118,4 @@\n+                \/\/ Multiple singleton extensions\n+                Arguments.of(\"AB-ABC-ABCD-ab-ABCDE-A-ABCD-GGG-ZZZ-B-EFGHI\",\n+                        \"ab-abc-Abcd-AB-ABCDE-a-abcd-ggg-zzz-b-efghi\"),\n+\n@@ -143,1 +147,3 @@\n-                        \"ja-Kana-JP-x-oracle-jdk-standard-edition\")\n+                        \"ja-Kana-JP-x-oracle-jdk-standard-edition\"),\n+                Arguments.of(\"ja-kana-jp-a-ABC-EFG-ZZZ-b-aaa-x-Oracle-JDK-Standard-Edition\",\n+                        \"ja-Kana-JP-a-abc-efg-zzz-b-aaa-x-oracle-jdk-standard-edition\")\n","filename":"test\/jdk\/java\/util\/Locale\/CaseFoldLanguageTagTest.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}