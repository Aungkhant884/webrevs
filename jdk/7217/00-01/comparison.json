{"files":[{"patch":"@@ -138,1 +138,6 @@\n-        loc.blob = c.findBlobUnsafe(a);\n+        try {\n+            loc.blob = c.findBlobUnsafe(a);\n+        } catch (Exception e) {\n+            \/\/ Since we potentially have a random address in the codecache and therefore could\n+            \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+        }\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerFinder.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -304,3 +304,0 @@\n-        if (Assert.ASSERTS_ENABLED) {\n-          Assert.that(isInBlobUnknownLocation(), \"Should have known location in CodeBlob\");\n-        }\n@@ -313,4 +310,11 @@\n-          if (verbose) {\n-              b.printOn(tty); \/\/ includes \"\\n\"\n-          } else {\n-              tty.println(b.toString());\n+          \/\/ Since we potentially have a random address in the codecache and therefore could\n+          \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+          \/\/ One known case is an NMethod where the method is still null, resulting in an NPE.\n+          try {\n+              if (verbose) {\n+                  b.printOn(tty); \/\/ includes \"\\n\"\n+              } else {\n+                  tty.println(b.toString());\n+              }\n+          } catch (Exception e) {\n+              tty.println(\"<unknown>\");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerLocation.java","additions":11,"deletions":7,"binary":false,"changes":18,"status":"modified"}]}