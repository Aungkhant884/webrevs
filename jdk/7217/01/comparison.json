{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -138,3 +138,11 @@\n-        loc.blob = c.findBlobUnsafe(a);\n-        if (Assert.ASSERTS_ENABLED) {\n-          Assert.that(loc.blob != null, \"Should have found CodeBlob\");\n+        try {\n+            loc.blob = c.findBlobUnsafe(a);\n+        } catch (Exception e) {\n+            \/\/ Since we potentially have a random address in the codecache and therefore could\n+            \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+        }\n+        if (loc.blob == null) {\n+            \/\/ It's possible that there is no CodeBlob for this address. Let\n+            \/\/ PointerLocation deal with it.\n+            loc.inBlobUnknownLocation = true;\n+            return loc;\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerFinder.java","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -304,4 +304,1 @@\n-        if (Assert.ASSERTS_ENABLED) {\n-          Assert.that(isInBlobUnknownLocation(), \"Should have known location in CodeBlob\");\n-        }\n-        tty.print(\"unknown location\");\n+        tty.print(\"unknown CodeCache location\");\n@@ -309,3 +306,2 @@\n-      tty.print(\" in \");\n-      if (verbose) {\n-          b.printOn(tty); \/\/ includes \"\\n\"\n+      if (b == null) {\n+          tty.println();\n@@ -313,1 +309,13 @@\n-          tty.println(b.toString());\n+          tty.print(\" in \");\n+          \/\/ Since we potentially have a random address in the codecache and therefore could\n+          \/\/ be dealing with a freed or partialy intialized blob, exceptions are possible.\n+          \/\/ One known case is an NMethod where the method is still null, resulting in an NPE.\n+          try {\n+              if (verbose) {\n+                  b.printOn(tty); \/\/ includes \"\\n\"\n+              } else {\n+                  tty.println(b.toString());\n+              }\n+          } catch (Exception e) {\n+              tty.println(\"<unknown>\");\n+          }\n@@ -315,1 +323,0 @@\n-\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/utilities\/PointerLocation.java","additions":17,"deletions":10,"binary":false,"changes":27,"status":"modified"}]}