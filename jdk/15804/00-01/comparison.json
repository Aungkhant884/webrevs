{"files":[{"patch":"@@ -192,7 +192,1 @@\n-        if (lt.is_enabled()) {\n-          ResourceMark rm(THREAD);\n-          LogStream ls(lt);\n-          ls.print(\"  skip hidden method: \");\n-          method->print_short_name(&ls);\n-          ls.cr();\n-        }\n+        log_debug(stackwalk)(\"  skip hidden method: %s\", stream.method()->external_name());\n@@ -207,9 +201,1 @@\n-    if (lt.is_enabled()) {\n-      ResourceMark rm(THREAD);\n-      LogStream ls(lt);\n-      ls.print(\"  %d: frame method: \", index);\n-      method->print_short_name(&ls);\n-      ls.print_cr(\" bci=%d\", stream.bci());\n-    }\n-\n-    \/\/ fill in StackFrameInfo and initialize MemberName\n+    log_debug(stackwalk)(\"  %d: frame method: %s bci %d\", index, stream.method()->external_name(), stream.bci());\n@@ -217,7 +203,0 @@\n-\n-    if (lt.is_enabled()) {\n-      ResourceMark rm(THREAD);\n-      LogStream ls(lt);\n-      ls.print(\"  %d: done frame method: \", index);\n-      method->print_short_name(&ls);\n-    }\n@@ -231,1 +210,1 @@\n-  log_debug(stackwalk)(\"fill_in_frames done frames_decoded=%d at_end=%d\", frames_decoded, stream.at_end());\n+  log_debug(stackwalk)(\"fill_in_frames returns %d at_end=%d\", frames_decoded, stream.at_end());\n@@ -464,9 +443,1 @@\n-\n-      LogTarget(Debug, stackwalk) lt;\n-      if (lt.is_enabled()) {\n-        ResourceMark rm(THREAD);\n-        LogStream ls(lt);\n-        ls.print(\"  skip \");\n-        stream.method()->print_short_name(&ls);\n-        ls.cr();\n-      }\n+      log_debug(stackwalk)(\"  skip %s\", stream.method()->external_name());\n@@ -479,8 +450,1 @@\n-      LogTarget(Debug, stackwalk) lt;\n-      if (lt.is_enabled()) {\n-        ResourceMark rm(THREAD);\n-        LogStream ls(lt);\n-        ls.print(\"  skip \");\n-        stream.method()->print_short_name(&ls);\n-        ls.cr();\n-      }\n+      log_debug(stackwalk)(\"  skip %s\", stream.method()->external_name());\n@@ -509,1 +473,1 @@\n-  args.push_int(buffer_size);\n+  args.push_int(numFrames);\n@@ -543,1 +507,1 @@\n-\/\/ Returns the end index of frame filled in the buffer.\n+\/\/ Returns the number of frames filled in the buffer.\n@@ -565,1 +529,1 @@\n-    return end_index;        \/\/ No operation.\n+    return 0;        \/\/ No operation.\n@@ -583,1 +547,2 @@\n-    if (last_batch_count > 0)\n+    if (last_batch_count > 0) {\n+      log_debug(stackwalk)(\"advanced past %s\", stream.method()->external_name());\n@@ -585,0 +550,1 @@\n+    }\n@@ -587,1 +553,1 @@\n-      int n = fill_in_frames(mode, stream, buffer_size, start_index,\n+      int numFrames = fill_in_frames(mode, stream, buffer_size, start_index,\n@@ -589,1 +555,1 @@\n-      if (n < 1 && !skip_hidden_frames(mode)) {\n+      if (numFrames < 1 && !skip_hidden_frames(mode)) {\n@@ -592,1 +558,1 @@\n-      return end_index;\n+      return numFrames;\n@@ -595,1 +561,1 @@\n-  return end_index;\n+  return 0;\n","filename":"src\/hotspot\/share\/prims\/stackwalk.cpp","additions":15,"deletions":49,"binary":false,"changes":64,"status":"modified"},{"patch":"@@ -315,1 +315,1 @@\n-        private Object doStackWalk(long anchor, int skipFrames, int batchSize,\n+        private Object doStackWalk(long anchor, int skipFrames, int numFrames,\n@@ -322,2 +322,2 @@\n-                System.err.format(\"doStackWalk: skip %d start %d end %d%n\",\n-                        skipFrames, bufStartIndex, bufEndIndex);\n+                System.err.format(\"doStackWalk: skip %d start %d end %d nframes %d%n\",\n+                        skipFrames, bufStartIndex, bufEndIndex, numFrames);\n@@ -327,1 +327,1 @@\n-            frameBuffer.setBatch(depth, bufStartIndex, bufEndIndex);\n+            frameBuffer.setBatch(depth, bufStartIndex, numFrames);\n@@ -338,1 +338,1 @@\n-                    || (depth == maxDepth )\n+                    || (depth == maxDepth)\n@@ -444,1 +444,1 @@\n-            int batchSize = lastBatchFrameCount == 0 ? frameBuffer.currentBatchSize() : getNextBatchSize();\n+            int batchSize = getNextBatchSize();\n@@ -447,3 +447,3 @@\n-            int endIndex = fetchStackFrames(mode, anchor, lastBatchFrameCount,\n-                                            batchSize, startIndex,\n-                                            frameBuffer.frames());\n+            int numFrames = fetchStackFrames(mode, anchor, lastBatchFrameCount,\n+                                             batchSize, startIndex,\n+                                             frameBuffer.frames());\n@@ -451,7 +451,2 @@\n-                System.out.format(\"  more stack walk requesting %d got %d to %d frames%n\",\n-                                  batchSize, frameBuffer.startIndex(), endIndex);\n-            }\n-\n-            int numFrames = endIndex - startIndex;\n-            if (numFrames > 0) {\n-                frameBuffer.setBatch(depth, startIndex, endIndex);\n+                System.out.format(\"  more stack walk got %d frames start %d batch size %d%n\",\n+                                  numFrames, frameBuffer.startIndex(), batchSize);\n@@ -459,0 +454,1 @@\n+            frameBuffer.setBatch(depth, startIndex, numFrames);\n@@ -492,1 +488,1 @@\n-         * @return the end index to the frame buffers\n+         * @return the number of frames filled in this batch\n@@ -560,1 +556,3 @@\n-                if (lastBatchSize > BATCH_SIZE) {\n+                \/\/ expand only if last batch was full and the buffer size <= 32\n+                \/\/ to minimize the number of unneeded frames decoded.\n+                if (lastBatchSize > BATCH_SIZE || !frameBuffer.isFull()) {\n@@ -819,2 +817,1 @@\n-        int fence;          \/\/ index to the last frame in the current batch\n-\n+        int fence;          \/\/ index past the last frame of the current batch\n@@ -920,0 +917,4 @@\n+        final boolean isFull() {\n+            return fence == currentBatchSize;\n+        }\n+\n@@ -940,1 +941,1 @@\n-                        Objects.toString(c), index, fence);\n+                        c.getName(), index, fence);\n@@ -963,2 +964,1 @@\n-         * Set the start and end index of a new batch of stack frames that have\n-         * been filled in this frame buffer.\n+         * Set a new batch of stack frames that have been filled in this frame buffer.\n@@ -966,2 +966,2 @@\n-        final void setBatch(int depth, int startIndex, int endIndex) {\n-            if (startIndex <= 0 || endIndex <= 0)\n+        final void setBatch(int depth, int startIndex, int numFrames) {\n+            if (startIndex <= 0 || numFrames < 0)\n@@ -969,1 +969,1 @@\n-                        + \" endIndex=\" + endIndex);\n+                        + \" numFrames=\" + numFrames);\n@@ -972,2 +972,2 @@\n-            this.fence = endIndex;\n-            for (int i = START_POS; i < fence; i++) {\n+            this.fence = startIndex + numFrames;\n+            for (int i = startIndex; i < fence; i++) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/StackStreamFactory.java","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"}]}