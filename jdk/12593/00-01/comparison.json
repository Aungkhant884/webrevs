{"files":[{"patch":"@@ -67,1 +67,2 @@\n-BOOL getAddressTables(MIB_UNICASTIPADDRESS_TABLE **uniAddrs, MIB_ANYCASTIPADDRESS_TABLE **anyAddrs) {\n+BOOL getAddressTables(\n+        MIB_UNICASTIPADDRESS_TABLE **uniAddrs, MIB_ANYCASTIPADDRESS_TABLE **anyAddrs) {\n@@ -88,1 +89,3 @@\n-jobject createNetworkInterface(JNIEnv *env, MIB_IF_ROW2 *ifRow, MIB_UNICASTIPADDRESS_TABLE *uniAddrs, MIB_ANYCASTIPADDRESS_TABLE *anyAddrs) {\n+jobject createNetworkInterface(\n+        JNIEnv *env, MIB_IF_ROW2 *ifRow, MIB_UNICASTIPADDRESS_TABLE *uniAddrs,\n+        MIB_ANYCASTIPADDRESS_TABLE *anyAddrs) {\n@@ -103,1 +106,3 @@\n-    if (ConvertInterfaceLuidToNameW(&(ifRow->InterfaceLuid), (PWSTR) &ifName, NDIS_IF_MAX_BUFFER_SIZE) != ERROR_SUCCESS) {\n+    if (ConvertInterfaceLuidToNameW(\n+            &(ifRow->InterfaceLuid), (PWSTR) &ifName, NDIS_IF_MAX_BUFFER_SIZE)\n+            != ERROR_SUCCESS) {\n@@ -106,1 +111,2 @@\n-    name = (*env)->NewString(env, (const jchar *) &ifName, (jsize) wcslen((const wchar_t *) &ifName));\n+    name = (*env)->NewString(\n+            env, (const jchar *) &ifName, (jsize) wcslen((const wchar_t *) &ifName));\n@@ -114,1 +120,3 @@\n-    displayName = (*env)->NewString(env, (const jchar *) ifRow->Description, (jsize) wcslen((const wchar_t *) &(ifRow->Description)));\n+    displayName = (*env)->NewString(\n+            env, (const jchar *) ifRow->Description,\n+            (jsize) wcslen((const wchar_t *) &(ifRow->Description)));\n@@ -127,1 +135,2 @@\n-                (uniAddrs->Table[i].DadState == IpDadStatePreferred || uniAddrs->Table[i].DadState == IpDadStateDeprecated)) {\n+                (uniAddrs->Table[i].DadState == IpDadStatePreferred ||\n+                        uniAddrs->Table[i].DadState == IpDadStateDeprecated)) {\n@@ -171,1 +180,2 @@\n-            setInetAddress_addr(env, inetAddr, ntohl(addrsCurrent->Address.Ipv4.sin_addr.s_addr));\n+            setInetAddress_addr(\n+                    env, inetAddr, ntohl(addrsCurrent->Address.Ipv4.sin_addr.s_addr));\n@@ -185,2 +195,4 @@\n-                (*env)->SetShortField(env, bindAddr, ni_ibmaskID, addrsCurrent->PrefixLength);\n-                if (ConvertLengthToIpv4Mask(addrsCurrent->PrefixLength, &mask) != NO_ERROR) {\n+                (*env)->SetShortField(\n+                        env, bindAddr, ni_ibmaskID, addrsCurrent->PrefixLength);\n+                if (ConvertLengthToIpv4Mask(\n+                        addrsCurrent->PrefixLength, &mask) != NO_ERROR) {\n@@ -195,1 +207,3 @@\n-                setInetAddress_addr(env, bcastAddr, ntohl(addrsCurrent->Address.Ipv4.sin_addr.s_addr | ~mask));\n+                setInetAddress_addr(\n+                        env, bcastAddr,\n+                        ntohl(addrsCurrent->Address.Ipv4.sin_addr.s_addr | ~mask));\n@@ -209,1 +223,4 @@\n-            if (setInet6Address_ipaddress(env, inetAddr, (jbyte *)&(addrsCurrent->Address.Ipv6.sin6_addr.s6_addr)) == JNI_FALSE) {\n+            if (setInet6Address_ipaddress(\n+                    env, inetAddr,\n+                    (jbyte *)&(addrsCurrent->Address.Ipv6.sin6_addr.s6_addr))\n+                    == JNI_FALSE) {\n@@ -213,2 +230,4 @@\n-            if (addrsCurrent->Address.Ipv6.sin6_scope_id != 0) { \/* zero is default value, no need to set *\/\n-                setInet6Address_scopeid(env, inetAddr, addrsCurrent->Address.Ipv6.sin6_scope_id);\n+            \/* zero is default value, no need to set *\/\n+            if (addrsCurrent->Address.Ipv6.sin6_scope_id != 0) {\n+                setInet6Address_scopeid(\n+                        env, inetAddr, addrsCurrent->Address.Ipv6.sin6_scope_id);\n@@ -224,1 +243,2 @@\n-                (*env)->SetShortField(env, bindAddr, ni_ibmaskID, addrsCurrent->PrefixLength);\n+                (*env)->SetShortField(\n+                        env, bindAddr, ni_ibmaskID, addrsCurrent->PrefixLength);\n@@ -260,1 +280,3 @@\n-jobject createNetworkInterfaceForSingleRowWithTables(JNIEnv *env, MIB_IF_ROW2 *ifRow, MIB_UNICASTIPADDRESS_TABLE *uniAddrs, MIB_ANYCASTIPADDRESS_TABLE *anyAddrs) {\n+jobject createNetworkInterfaceForSingleRowWithTables(\n+        JNIEnv *env, MIB_IF_ROW2 *ifRow, MIB_UNICASTIPADDRESS_TABLE *uniAddrs,\n+        MIB_ANYCASTIPADDRESS_TABLE *anyAddrs) {\n@@ -276,1 +298,2 @@\n-    netifObj = createNetworkInterfaceForSingleRowWithTables(env, ifRow, uniAddrs, anyAddrs);\n+    netifObj = createNetworkInterfaceForSingleRowWithTables(\n+            env, ifRow, uniAddrs, anyAddrs);\n@@ -289,1 +312,2 @@\n-JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByIndex0(JNIEnv *env, jclass cls, jint index) {\n+JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByIndex0(\n+        JNIEnv *env, jclass cls, jint index) {\n@@ -301,1 +325,2 @@\n-JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByName0(JNIEnv *env, jclass cls, jstring name) {\n+JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByName0(\n+        JNIEnv *env, jclass cls, jstring name) {\n@@ -320,1 +345,2 @@\n-JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByInetAddress0(JNIEnv *env, jclass cls, jobject inetAddr) {\n+JNIEXPORT jobject JNICALL Java_java_net_NetworkInterface_getByInetAddress0(\n+        JNIEnv *env, jclass cls, jobject inetAddr) {\n@@ -332,2 +358,4 @@\n-        if (NET_SockaddrEqualsInetAddress(env, (SOCKETADDRESS*) &(uniAddrs->Table[i].Address), inetAddr) &&\n-                (uniAddrs->Table[i].DadState == IpDadStatePreferred || uniAddrs->Table[i].DadState == IpDadStateDeprecated)) {\n+        if (NET_SockaddrEqualsInetAddress(\n+                env, (SOCKETADDRESS*) &(uniAddrs->Table[i].Address), inetAddr) &&\n+                (uniAddrs->Table[i].DadState == IpDadStatePreferred ||\n+                        uniAddrs->Table[i].DadState == IpDadStateDeprecated)) {\n@@ -335,1 +363,2 @@\n-            result = createNetworkInterfaceForSingleRowWithTables(env, &ifRow, uniAddrs, anyAddrs);\n+            result = createNetworkInterfaceForSingleRowWithTables(\n+                    env, &ifRow, uniAddrs, anyAddrs);\n@@ -340,1 +369,2 @@\n-        if (NET_SockaddrEqualsInetAddress(env, (SOCKETADDRESS*) &(anyAddrs->Table[i].Address), inetAddr)) {\n+        if (NET_SockaddrEqualsInetAddress(\n+                env, (SOCKETADDRESS*) &(anyAddrs->Table[i].Address), inetAddr)) {\n@@ -342,1 +372,2 @@\n-            result = createNetworkInterfaceForSingleRowWithTables(env, &ifRow, uniAddrs, anyAddrs);\n+            result = createNetworkInterfaceForSingleRowWithTables(\n+                    env, &ifRow, uniAddrs, anyAddrs);\n@@ -358,1 +389,2 @@\n-JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_boundInetAddress0(JNIEnv *env, jclass cls, jobject inetAddr) {\n+JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_boundInetAddress0(\n+        JNIEnv *env, jclass cls, jobject inetAddr) {\n@@ -369,2 +401,4 @@\n-        if (NET_SockaddrEqualsInetAddress(env, (SOCKETADDRESS*) &(uniAddrs->Table[i].Address), inetAddr) &&\n-                (uniAddrs->Table[i].DadState == IpDadStatePreferred || uniAddrs->Table[i].DadState == IpDadStateDeprecated)) {\n+        if (NET_SockaddrEqualsInetAddress(\n+                env, (SOCKETADDRESS*) &(uniAddrs->Table[i].Address), inetAddr) &&\n+                (uniAddrs->Table[i].DadState == IpDadStatePreferred ||\n+                        uniAddrs->Table[i].DadState == IpDadStateDeprecated)) {\n@@ -376,1 +410,2 @@\n-        if (NET_SockaddrEqualsInetAddress(env, (SOCKETADDRESS*) &(anyAddrs->Table[i].Address), inetAddr)) {\n+        if (NET_SockaddrEqualsInetAddress(\n+                env, (SOCKETADDRESS*) &(anyAddrs->Table[i].Address), inetAddr)) {\n@@ -393,1 +428,2 @@\n-JNIEXPORT jobjectArray JNICALL Java_java_net_NetworkInterface_getAll(JNIEnv *env, jclass cls) {\n+JNIEXPORT jobjectArray JNICALL Java_java_net_NetworkInterface_getAll(\n+        JNIEnv *env, jclass cls) {\n@@ -417,1 +453,2 @@\n-        ifObj = createNetworkInterface(env, &(ifTable->Table[i]), uniAddrs, anyAddrs);\n+        ifObj = createNetworkInterface(\n+                env, &(ifTable->Table[i]), uniAddrs, anyAddrs);\n@@ -439,1 +476,2 @@\n-JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isUp0(JNIEnv *env, jclass cls, jstring name, jint index) {\n+JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isUp0(\n+        JNIEnv *env, jclass cls, jstring name, jint index) {\n@@ -446,1 +484,3 @@\n-    return ifRow.AdminStatus == NET_IF_ADMIN_STATUS_UP && ifRow.OperStatus == IfOperStatusUp ? JNI_TRUE : JNI_FALSE;\n+    return ifRow.AdminStatus == NET_IF_ADMIN_STATUS_UP &&\n+            ifRow.OperStatus == IfOperStatusUp\n+            ? JNI_TRUE : JNI_FALSE;\n@@ -454,1 +494,2 @@\n-JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isP2P0(JNIEnv *env, jclass cls, jstring name, jint index) {\n+JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isP2P0(\n+        JNIEnv *env, jclass cls, jstring name, jint index) {\n@@ -469,1 +510,2 @@\n-JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isLoopback0(JNIEnv *env, jclass cls, jstring name, jint index) {\n+JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_isLoopback0(\n+        JNIEnv *env, jclass cls, jstring name, jint index) {\n@@ -484,1 +526,2 @@\n-JNIEXPORT jbyteArray JNICALL Java_java_net_NetworkInterface_getMacAddr0(JNIEnv *env, jclass class, jbyteArray addrArray, jstring name, jint index) {\n+JNIEXPORT jbyteArray JNICALL Java_java_net_NetworkInterface_getMacAddr0(\n+        JNIEnv *env, jclass class, jbyteArray addrArray, jstring name, jint index) {\n@@ -499,1 +542,3 @@\n-    (*env)->SetByteArrayRegion(env, macAddr, 0, ifRow.PhysicalAddressLength, (jbyte *) ifRow.PhysicalAddress);\n+    (*env)->SetByteArrayRegion(\n+            env, macAddr, 0, ifRow.PhysicalAddressLength,\n+            (jbyte *) ifRow.PhysicalAddress);\n@@ -508,1 +553,2 @@\n-JNIEXPORT jint JNICALL Java_java_net_NetworkInterface_getMTU0(JNIEnv *env, jclass class, jstring name, jint index) {\n+JNIEXPORT jint JNICALL Java_java_net_NetworkInterface_getMTU0(\n+        JNIEnv *env, jclass class, jstring name, jint index) {\n@@ -523,1 +569,2 @@\n-JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_supportsMulticast0(JNIEnv *env, jclass cls, jstring name, jint index) {\n+JNIEXPORT jboolean JNICALL Java_java_net_NetworkInterface_supportsMulticast0(\n+        JNIEnv *env, jclass cls, jstring name, jint index) {\n@@ -528,1 +575,2 @@\n-    We also have the additional complication that multicast sending can be enabled while receiving is disabled.\n+    We also have the additional complication that multicast sending\n+    can be enabled while receiving is disabled.\n@@ -531,4 +579,8 @@\n-    GetAdaptersAddresses has a NO_MULTICAST flag, but I have never seen it set, even when multicast is disabled.\n-    The flags appear to be stored in the registry, but the exact location seems to change depending on the Windows version.\n-    We could open a socket and try to join a multicast group. If receiving is disabled, that fails. But if enabled, it generates network traffic.\n-    I also tried some socket IOCTLs (e.g. SIO_ROUTING_INTERFACE_QUERY) but all of those succeeded even when multicast was disabled.\n+    GetAdaptersAddresses has a NO_MULTICAST flag, but I have never seen it set,\n+    even when multicast is disabled.\n+    The flags appear to be stored in the registry,\n+    but the exact location seems to change depending on the Windows version.\n+    We could open a socket and try to join a multicast group.\n+    If receiving is disabled, that fails. But if enabled, it generates network traffic.\n+    I also tried some socket IOCTLs (e.g. SIO_ROUTING_INTERFACE_QUERY)\n+    but all of those succeeded even when multicast was disabled.\n@@ -540,1 +592,2 @@\n-    Subsitute IPv4 if desired. The property is still called MldLevel here even though it is IGMPLevel elsewhere.\n+    Subsitute IPv4 if desired.\n+    The property is still called MldLevel here even though it is IGMPLevel elsewhere.\n@@ -559,1 +612,3 @@\n-    if (FAILED(CoInitializeSecurity(NULL, -1, NULL, NULL, RPC_C_AUTHN_LEVEL_DEFAULT, RPC_C_IMP_LEVEL_IMPERSONATE, NULL, EOAC_NONE, NULL))) {\n+    if (FAILED(CoInitializeSecurity(\n+            NULL, -1, NULL, NULL, RPC_C_AUTHN_LEVEL_DEFAULT,\n+            RPC_C_IMP_LEVEL_IMPERSONATE, NULL, EOAC_NONE, NULL))) {\n@@ -563,1 +618,2 @@\n-    if (FAILED(CoCreateInstance(&CLSID_WbemLocator, NULL, CLSCTX_INPROC_SERVER, &IID_IWbemLocator, &locator))) {\n+    if (FAILED(CoCreateInstance(\n+            &CLSID_WbemLocator, NULL, CLSCTX_INPROC_SERVER, &IID_IWbemLocator, &locator))) {\n@@ -577,1 +633,3 @@\n-    query = SysAllocString(ipv6_available() ? L\"SELECT MldLevel FROM MSFT_NetIPv6Protocol\" : L\"SELECT MldLevel FROM MSFT_NetIPv4Protocol\");\n+    query = SysAllocString(ipv6_available() ?\n+            L\"SELECT MldLevel FROM MSFT_NetIPv6Protocol\" :\n+            L\"SELECT MldLevel FROM MSFT_NetIPv4Protocol\");\n@@ -582,1 +640,2 @@\n-    if (FAILED(locator->lpVtbl->ConnectServer(locator, resource, NULL, NULL, NULL, 0, NULL, NULL, &services))) {\n+    if (FAILED(locator->lpVtbl->ConnectServer(\n+            locator, resource, NULL, NULL, NULL, 0, NULL, NULL, &services))) {\n@@ -586,1 +645,2 @@\n-    if (FAILED(services->lpVtbl->ExecQuery(services, language, query, WBEM_FLAG_BIDIRECTIONAL, NULL, &results))) {\n+    if (FAILED(services->lpVtbl->ExecQuery(\n+            services, language, query, WBEM_FLAG_BIDIRECTIONAL, NULL, &results))) {\n@@ -590,1 +650,2 @@\n-    if (FAILED(results->lpVtbl->Next(results, WBEM_INFINITE, 1, &result, &returnedCount))) {\n+    if (FAILED(results->lpVtbl->Next(\n+            results, WBEM_INFINITE, 1, &result, &returnedCount))) {\n","filename":"src\/java.base\/windows\/native\/libnet\/NetworkInterface.c","additions":111,"deletions":50,"binary":false,"changes":161,"status":"modified"}]}