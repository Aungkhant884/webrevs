{"files":[{"patch":"@@ -0,0 +1,101 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+\n+#ifndef SHARED_CDS_CDS_GLOBALS_HPP\n+#define SHARED_CDS_CDS_GLOBALS_HPP\n+\n+#include \"runtime\/globals_shared.hpp\"\n+\n+\/\/\n+\/\/ Defines all globals flags used by CDS.\n+\/\/\n+\n+#define CDS_FLAGS(develop,                                                  \\\n+                  develop_pd,                                               \\\n+                  product,                                                  \\\n+                  product_pd,                                               \\\n+                  notproduct,                                               \\\n+                  range,                                                    \\\n+                  constraint)                                               \\\n+  \/* Shared spaces *\/                                                       \\\n+                                                                            \\\n+  product(bool, VerifySharedSpaces, false,                                  \\\n+          \"Verify integrity of shared spaces\")                              \\\n+                                                                            \\\n+  product(bool, RecordDynamicDumpInfo, false,                               \\\n+          \"Record class info for jcmd VM.cds dynamic_dump\")                 \\\n+                                                                            \\\n+  product(bool, AutoCreateSharedArchive, false,                             \\\n+          \"Create shared archive at exit if cds mapping failed\")            \\\n+                                                                            \\\n+  product(bool, PrintSharedArchiveAndExit, false,                           \\\n+          \"Print shared archive file contents\")                             \\\n+                                                                            \\\n+  product(bool, PrintSharedDictionary, false,                               \\\n+          \"If PrintSharedArchiveAndExit is true, also print the shared \"    \\\n+          \"dictionary\")                                                     \\\n+                                                                            \\\n+  product(size_t, SharedBaseAddress, LP64_ONLY(32*G)                        \\\n+          NOT_LP64(LINUX_ONLY(2*G) NOT_LINUX(0)),                           \\\n+          \"Address to allocate shared memory region for class data\")        \\\n+          range(0, SIZE_MAX)                                                \\\n+                                                                            \\\n+  product(ccstr, SharedArchiveConfigFile, NULL,                             \\\n+          \"Data to add to the CDS archive file\")                            \\\n+                                                                            \\\n+  product(uint, SharedSymbolTableBucketSize, 4,                             \\\n+          \"Average number of symbols per bucket in shared table\")           \\\n+          range(2, 246)                                                     \\\n+                                                                            \\\n+  product(bool, AllowArchivingWithJavaAgent, false, DIAGNOSTIC,             \\\n+          \"Allow Java agent to be run with CDS dumping\")                    \\\n+                                                                            \\\n+  product(ccstr, DumpLoadedClassList, NULL,                                 \\\n+          \"Dump the names all loaded classes, that could be stored into \"   \\\n+          \"the CDS archive, in the specified file\")                         \\\n+                                                                            \\\n+  product(ccstr, SharedClassListFile, NULL,                                 \\\n+          \"Override the default CDS class list\")                            \\\n+                                                                            \\\n+  product(ccstr, SharedArchiveFile, NULL,                                   \\\n+          \"Override the default location of the CDS archive file\")          \\\n+                                                                            \\\n+  product(ccstr, ArchiveClassesAtExit, NULL,                                \\\n+          \"The path and name of the dynamic archive file\")                  \\\n+                                                                            \\\n+  product(ccstr, ExtraSharedClassListFile, NULL,                            \\\n+          \"Extra classlist for building the CDS archive file\")              \\\n+                                                                            \\\n+  product(int, ArchiveRelocationMode, 0, DIAGNOSTIC,                        \\\n+           \"(0) first map at preferred address, and if \"                    \\\n+           \"unsuccessful, map at alternative address (default); \"           \\\n+           \"(1) always map at alternative address; \"                        \\\n+           \"(2) always map at preferred address, and if unsuccessful, \"     \\\n+           \"do not map the archive\")                                        \\\n+           range(0, 2)                                                      \\\n+\/\/ end of CDS_FLAGS\n+\n+DECLARE_FLAGS(CDS_FLAGS)\n+\n+#endif \/\/ SHARED_CDS_CDS_GLOBALS_HPP\n","filename":"src\/hotspot\/share\/cds\/cds_globals.hpp","additions":101,"deletions":0,"binary":false,"changes":101,"status":"added"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/cds\/classListWriter.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/cds\/dynamicArchive.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/cds\/metaspaceShared.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-#include \"classfile\/compactHashtable.hpp\"\n-#include \"classfile\/javaClasses.hpp\"\n@@ -32,0 +30,1 @@\n+#include \"cds\/cds_globals.hpp\"\n@@ -33,0 +32,2 @@\n+#include \"classfile\/compactHashtable.hpp\"\n+#include \"classfile\/javaClasses.hpp\"\n","filename":"src\/hotspot\/share\/cds\/runTimeClassInfo.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/classfile\/systemDictionaryShared.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+#include \"cds\/cds_globals.hpp\"\n@@ -62,0 +63,9 @@\n+  CDS_FLAGS(                  \\\n+    develop,                  \\\n+    develop_pd,               \\\n+    product,                  \\\n+    product_pd,               \\\n+    notproduct,               \\\n+    range,                    \\\n+    constraint)               \\\n+                              \\\n","filename":"src\/hotspot\/share\/runtime\/flags\/allFlags.hpp","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1785,33 +1785,0 @@\n-  \/* Shared spaces *\/                                                       \\\n-                                                                            \\\n-  product(bool, VerifySharedSpaces, false,                                  \\\n-          \"Verify integrity of shared spaces\")                              \\\n-                                                                            \\\n-  product(bool, RecordDynamicDumpInfo, false,                               \\\n-          \"Record class info for jcmd VM.cds dynamic_dump\")                 \\\n-                                                                            \\\n-  product(bool, AutoCreateSharedArchive, false,                             \\\n-          \"Create shared archive at exit if cds mapping failed\")            \\\n-                                                                            \\\n-  product(bool, PrintSharedArchiveAndExit, false,                           \\\n-          \"Print shared archive file contents\")                             \\\n-                                                                            \\\n-  product(bool, PrintSharedDictionary, false,                               \\\n-          \"If PrintSharedArchiveAndExit is true, also print the shared \"    \\\n-          \"dictionary\")                                                     \\\n-                                                                            \\\n-  product(size_t, SharedBaseAddress, LP64_ONLY(32*G)                        \\\n-          NOT_LP64(LINUX_ONLY(2*G) NOT_LINUX(0)),                           \\\n-          \"Address to allocate shared memory region for class data\")        \\\n-          range(0, SIZE_MAX)                                                \\\n-                                                                            \\\n-  product(ccstr, SharedArchiveConfigFile, NULL,                             \\\n-          \"Data to add to the CDS archive file\")                            \\\n-                                                                            \\\n-  product(uint, SharedSymbolTableBucketSize, 4,                             \\\n-          \"Average number of symbols per bucket in shared table\")           \\\n-          range(2, 246)                                                     \\\n-                                                                            \\\n-  product(bool, AllowArchivingWithJavaAgent, false, DIAGNOSTIC,             \\\n-          \"Allow Java agent to be run with CDS dumping\")                    \\\n-                                                                            \\\n@@ -1921,24 +1888,0 @@\n-  product(ccstr, DumpLoadedClassList, NULL,                                 \\\n-          \"Dump the names all loaded classes, that could be stored into \"   \\\n-          \"the CDS archive, in the specified file\")                         \\\n-                                                                            \\\n-  product(ccstr, SharedClassListFile, NULL,                                 \\\n-          \"Override the default CDS class list\")                            \\\n-                                                                            \\\n-  product(ccstr, SharedArchiveFile, NULL,                                   \\\n-          \"Override the default location of the CDS archive file\")          \\\n-                                                                            \\\n-  product(ccstr, ArchiveClassesAtExit, NULL,                                \\\n-          \"The path and name of the dynamic archive file\")                  \\\n-                                                                            \\\n-  product(ccstr, ExtraSharedClassListFile, NULL,                            \\\n-          \"Extra classlist for building the CDS archive file\")              \\\n-                                                                            \\\n-  product(int, ArchiveRelocationMode, 0, DIAGNOSTIC,                        \\\n-           \"(0) first map at preferred address, and if \"                    \\\n-           \"unsuccessful, map at alternative address (default); \"           \\\n-           \"(1) always map at alternative address; \"                        \\\n-           \"(2) always map at preferred address, and if unsuccessful, \"     \\\n-           \"do not map the archive\")                                        \\\n-           range(0, 2)                                                      \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":57,"binary":false,"changes":57,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/java.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"cds\/cds_globals.hpp\"\n@@ -82,1 +83,0 @@\n-#include \"services\/threadIdTable.hpp\"\n@@ -92,0 +92,1 @@\n+#include \"services\/threadIdTable.hpp\"\n","filename":"src\/hotspot\/share\/runtime\/threads.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+#include \"cds\/cds_globals.hpp\"\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}