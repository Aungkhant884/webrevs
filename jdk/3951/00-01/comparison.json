{"files":[{"patch":"@@ -150,1 +150,1 @@\n-    _needs_clone_jvms(false) {\n+    _needs_deep_clone_jvms(false) {\n","filename":"src\/hotspot\/share\/adlc\/archDesc.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -126,3 +126,3 @@\n-  \/\/ always have to be cloned when a node is cloned.  Adlc generates\n-  \/\/ Compile::needs_clone_jvms() accordingly.\n-  bool _needs_clone_jvms;\n+  \/\/ always have to be deep cloned when a node is cloned. Adlc generates\n+  \/\/ Compile::needs_deep_clone_jvms() accordingly.\n+  bool _needs_deep_clone_jvms;\n@@ -298,1 +298,1 @@\n-  void generate_needs_clone_jvms(FILE *fp_cpp);\n+  void generate_needs_deep_clone_jvms(FILE *fp_cpp);\n","filename":"src\/hotspot\/share\/adlc\/archDesc.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -308,1 +308,1 @@\n-  AD.generate_needs_clone_jvms(AD._CPP_file._fp);\n+  AD.generate_needs_deep_clone_jvms(AD._CPP_file._fp);\n","filename":"src\/hotspot\/share\/adlc\/main.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1795,1 +1795,1 @@\n-      _needs_clone_jvms = true;\n+      _needs_deep_clone_jvms = true;\n@@ -3606,3 +3606,3 @@\n-void ArchDesc::generate_needs_clone_jvms(FILE *fp_cpp) {\n-  fprintf(fp_cpp, \"bool Compile::needs_clone_jvms() { return %s; }\\n\\n\",\n-          _needs_clone_jvms ? \"true\" : \"false\");\n+void ArchDesc::generate_needs_deep_clone_jvms(FILE *fp_cpp) {\n+  fprintf(fp_cpp, \"bool Compile::needs_deep_clone_jvms() { return %s; }\\n\\n\",\n+          _needs_deep_clone_jvms ? \"true\" : \"false\");\n","filename":"src\/hotspot\/share\/adlc\/output_c.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -355,1 +355,1 @@\n-  virtual bool needs_clone_jvms(Compile* C) { return false; }\n+  virtual bool needs_deep_clone_jvms(Compile* C) { return false; }\n@@ -358,1 +358,1 @@\n-      if (needs_clone_jvms(C)) {\n+      if (needs_deep_clone_jvms(C)) {\n@@ -630,2 +630,2 @@\n-  \/\/ the node the JVMState must be cloned. Default is not to clone.\n-  virtual bool needs_clone_jvms(Compile* C) { return C->needs_clone_jvms(); }\n+  \/\/ the node the JVMState must be deep cloned. Default is to shallow clone.\n+  virtual bool needs_deep_clone_jvms(Compile* C) { return C->needs_deep_clone_jvms(); }\n@@ -745,1 +745,1 @@\n-  \/\/ Late inlining modifies the JVMState, so we need to clone it\n+  \/\/ Late inlining modifies the JVMState, so we need to deep clone it\n@@ -747,2 +747,2 @@\n-  virtual bool needs_clone_jvms(Compile* C) {\n-    return is_boxing_method() || CallNode::needs_clone_jvms(C);\n+  virtual bool needs_deep_clone_jvms(Compile* C) {\n+    return is_boxing_method() || CallNode::needs_deep_clone_jvms(C);\n@@ -771,1 +771,1 @@\n-  \/\/ Late inlining modifies the JVMState, so we need to clone it\n+  \/\/ Late inlining modifies the JVMState, so we need to deep clone it\n@@ -773,2 +773,2 @@\n-  virtual bool needs_clone_jvms(Compile* C) {\n-    return IncrementalInlineVirtual || CallNode::needs_clone_jvms(C);\n+  virtual bool needs_deep_clone_jvms(Compile* C) {\n+    return IncrementalInlineVirtual || CallNode::needs_deep_clone_jvms(C);\n@@ -926,2 +926,2 @@\n-  \/\/ Expansion modifies the JVMState, so we need to clone it\n-  virtual bool needs_clone_jvms(Compile* C) { return true; }\n+  \/\/ Expansion modifies the JVMState, so we need to deep clone it\n+  virtual bool needs_deep_clone_jvms(Compile* C) { return true; }\n@@ -1140,2 +1140,2 @@\n-  \/\/ Expansion modifies the JVMState, so we need to clone it\n-  virtual bool needs_clone_jvms(Compile* C) { return true; }\n+  \/\/ Expansion modifies the JVMState, so we need to deep clone it\n+  virtual bool needs_deep_clone_jvms(Compile* C) { return true; }\n","filename":"src\/hotspot\/share\/opto\/callnode.hpp","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -797,1 +797,1 @@\n-  bool                      needs_clone_jvms();\n+  bool                      needs_deep_clone_jvms();\n","filename":"src\/hotspot\/share\/opto\/compile.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}