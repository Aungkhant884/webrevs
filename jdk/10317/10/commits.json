[{"commit":{"message":"Performance improvement\n\nPerformance results came from my repository I mentioned in the header.\r\n\r\n    The code before this PR ran in 230ms.\r\n    Our previous codes ran in 1 200ms to 1800 ms with String + formatted + %n$s usage.\r\n    They ran in 350ms to 380ms with String + formatted + %s usage.\r\n    And in 100ms to 110ms if we replace String + format with a string concatenation.\r\n    Now the code below gives the same results in 36ms and with all our expected behaviors. Since we control notation length we\r\n        can bypass some controls,\r\n        directly generate the color value,\r\n        without generate a new string,\r\n        and reject a wrong number format without generate any exception."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"8f65b852b7d93084792ed8ce7a5cd03c23aac012"},{"commit":{"message":"Corrects a value in a message.\n\nA message is added to the result in case of failure only. The updated code does not output the actual value. The tested color is #f12a instead of #f00a."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"b73bec53cae487d88d7072cb42b72046e54c03a2"},{"commit":{"message":"Simplifications of the test.\n\nRemoves individual color tests and only compares the RGB value."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"a95d2824b8fa9b545c808740bc335c4c6bd46550"},{"commit":{"message":"Renames an identifier.\n\nSuggested change, not to use `l` as an identifier because it could be confused with `1`.\r\nThis part of code could change and be replaced by bits right rotation after  performance tests."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"767c87ce2449513cbe91992b3c3446a7aeaab950"},{"commit":{"message":"Corrects Licence Header.\n\nRemoves Classpath exception."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"478f285e128036291db1678e4044f5732bd505e3"},{"commit":{"message":"Corrects typos and digit extraction.\n\nCorrects typos.\r\nAnd applies a better digit extraction as suggested in main-line review thread."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"e6454c11b53c5efb56a7ed8d60c3eefdfc8fcb70"},{"commit":{"message":"Update src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java\r\n\r\nSorry. Thanks.\n\nCo-authored-by: ExE Boss <3889017+ExE-Boss@users.noreply.github.com>"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"59709803601bb73bf717caea515c83d67a5ad916"},{"commit":{"message":"Removes author name.\n\nRemoves author name for JDK main-line development repository."},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"24040cf664ecdeb2678796761331edfc60a6b897"},{"commit":{"message":"Adds regression test.\n\nAdds a regression for DK-8293776 : Adds CSS 4 and 8 digits hex coded Color #13"},"files":[{"filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java"}],"sha":"93dc0bbdf6574823bf7e2542ce1b09c89de25daa"},{"commit":{"message":"Improper Name in comments\n\nModifies the improper name of the recommendation with CSS Color Level 4.\r\nCSS Level 4 doesn't exist. CSS is a set of Modules, one of them is Color."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"5b365172a82f20021fd9641763539aea4b0ff9d3"},{"commit":{"message":"Adds final modifier.\n\nAdds a final modifier to hex Pattern."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"7a99e7ca9af454ed6130da72ba3549f7f1be32a6"},{"commit":{"message":"Adds or removes spaces.\n\nSome spaces are missing or extra."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"0ebf1747649119c795590fb6abb47b820824c4fa"},{"commit":{"message":"Removes int cast.\n\nRemoves unnecessary integer casts."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"7d7f49fe8a3f88e7fba8dcb68bda30ef891c6598"},{"commit":{"message":"Update Copyrigth.\n\nUpdatre Copyrigth date."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"d1301f3f19f7fba7c83d6d26e7e460fe91861bd9"},{"commit":{"message":"Remove NumberFormatException\n\njava.lang.NumberFormatException is imported by default."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"146bba4e7f4deeef4ce9e84f158f4ce8b519d007"},{"commit":{"message":"Adds missing import and declaration.\n\nThis implementation uses a Pattern instance and parses the string argument as an unsigned integer with radix 16.\r\n- The pattern declaration and import are missing.\r\n- The parseUnsignedInt method can send a NumberFormatException, its import is missing."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"fe75e26ebc3b4d27a37cd1f6e25766157800dcc8"},{"commit":{"message":"Typo.\n\nTypo in comment."},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"04f2d689e3bd1c4b2968e0a25e8105d56af3d8ff"},{"commit":{"message":"Adds new color hex formats.\n\n CSS level 4\r\n - defines color hex code as #[2 digits Red][2 digits Green][2 digits Blue][2 digits Alpha]. With digit 0 ... f.\r\n - allows, webpage passes 3, 4, 6 or 8 digit color code.\r\n   - 3 digits #[R][G][B] ........ represents #[RR][GG][BB]FF\r\n   - 4 digits #[R][G][B][A] ..... represents #[RR][GG][BB][AA]\r\n   - 6 digits #[RR][GG][BB] ..... represents #[RR][GG][BB]FF\r\n   - 8 digits #[RR][GG][BB][AA] . represents #[RR][GG][BB][AA]\r\n\r\n Becareful ! In java.awt.Color hex #[2 digits Alpha][2 digits Red][2 digits Green][2 digits Blue]\r\n Comme cette méthode est définie dans CSS, elle doit traiter uniquement le format CSS Level 4.\r\n\r\n According notes below the current OpenJDK implementation is\r\n - 3 digits #[R][G][B]    represents #[RR][GG][BB]FF\r\n - 6 digits #[R][G][B]    represents #[RR][GG][BB]FF"},"files":[{"filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/html\/CSS.java"}],"sha":"ec872fa592c4795140f3b7fc804af8e3bdae8bb3"}]