{"files":[{"patch":"@@ -0,0 +1,93 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8293776\n+ * @summary Adds CSS 4 and 8 digits hex coded Color\n+ * @run main Hex3468DigitsColor\n+ * @author Guy Abossolo Foh - ScientificWare\n+ *\/\n+\n+import java.awt.Color;\n+import javax.swing.text.html.StyleSheet;\n+\n+public class Hex3468DigitsColor {\n+\n+    public static void main(String[] args) {\n+        StringBuilder result = new StringBuilder();\n+        boolean passed = true;\n+        StyleSheet styleSheet = new StyleSheet();\n+        \/\/ #rgba Should be interpreted as #rrggbbaa according CSS Color Level 4.\n+        \/\/ Then expecting r=255 g=17 b=34 a=170\n+        Color color = styleSheet.stringToColor(\"#f12a\");\n+        int red = color.getRed();\n+        int green = color.getGreen();\n+        int blue = color.getBlue();\n+        int alpha = color.getAlpha();\n+        result.append(\"  Test for #f00a\");\n+        if (red != 255) {\n+            result.append(\", expected r=255 but r=%s found\".formatted(red));\n+            passed = false;\n+        }\n+        if (green != 17) {\n+            result.append(\", expected g=17 but g=%s found\".formatted(green));\n+            passed = false;\n+        }\n+        if (blue != 34) {\n+            result.append(\", expected b=34 but b=%s found\".formatted(blue));\n+            passed = false;\n+        }\n+        if (alpha != 170) {\n+            result.append(\", expected a=170 but a=%s found\".formatted(alpha));\n+            passed = false;\n+        }\n+        \/\/ In #rrggbbaa last two digits should be interpreted as Alpha value according CSS Color Level 4.\n+        \/\/ Then expecting r=255 g=17 b=34 a=170\n+        color = styleSheet.stringToColor(\"#ff1122aa\");\n+        alpha = color.getAlpha();\n+        result.append(\"\\n  Test for #ff1122aa\");\n+        if (red != 255) {\n+            result.append(\", expected r=255 but r=%s found\".formatted(red));\n+            passed = false;\n+        }\n+        if (green != 17) {\n+            result.append(\", expected g=17 but g=%s found\".formatted(green));\n+            passed = false;\n+        }\n+        if (blue != 34) {\n+            result.append(\", expected b=34 but b=%s found\".formatted(blue));\n+            passed = false;\n+        }\n+        if (alpha != 170) {\n+            result.append(\", expected a=170 but a=%s found\".formatted(alpha));\n+            passed = false;\n+        }\n+        if (!passed) {\n+            result.insert(0, \"Failed :\");\n+            throw new RuntimeException(result.toString());\n+        }\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/swing\/text\/html\/CSS\/Hex3468DigitsColor.java","additions":93,"deletions":0,"binary":false,"changes":93,"status":"added"}]}