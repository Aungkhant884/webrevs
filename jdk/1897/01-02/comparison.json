{"files":[{"patch":"@@ -235,0 +235,10 @@\n+    \/*\n+     * Enqueue a Reference taken from the pending list.  Calling this method\n+     * takes us from the Reference<?> domain of the pending list elements to\n+     * having a Reference<T> with a correspondingly typed queue.\n+     *\/\n+    private void enqueueFromPending() {\n+        var q = queue;\n+        if (q != ReferenceQueue.NULL) q.enqueue(this);\n+    }\n+\n@@ -263,2 +273,1 @@\n-                ReferenceQueue<?> q = ref.queue;\n-                if (q != ReferenceQueue.NULL) q.enqueue(ref);\n+                ref.enqueueFromPending();\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,5 +60,1 @@\n-    \/**\n-     * Called only by the Reference class, to add a Reference object to\n-     * the queue it was registered with when the reference was created.\n-     *\/\n-    boolean enqueue(Reference<?> r) {\n+    boolean enqueue(Reference<? extends T> r) { \/* Called only by Reference class *\/\n@@ -75,5 +71,1 @@\n-            \/\/ This queue was type-checked at Reference construction time, so\n-            \/\/ cast is safe and correct, even though it can't be checked.\n-            @SuppressWarnings(\"unchecked\")\n-            var newHead = (Reference<? extends T>)r;\n-            head = newHead;\n+            head = r;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/ReferenceQueue.java","additions":3,"deletions":11,"binary":false,"changes":14,"status":"modified"}]}