{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -187,1 +187,1 @@\n-    private transient Reference<T> discovered;\n+    private transient Reference<?> discovered;\n@@ -223,1 +223,1 @@\n-    private static native Reference<Object> getAndClearReferencePendingList();\n+    private static native Reference<?> getAndClearReferencePendingList();\n@@ -244,1 +244,1 @@\n-        Reference<Object> pendingList;\n+        Reference<?> pendingList;\n@@ -250,1 +250,1 @@\n-            Reference<Object> ref = pendingList;\n+            Reference<?> ref = pendingList;\n@@ -263,1 +263,1 @@\n-                ReferenceQueue<? super Object> q = ref.queue;\n+                ReferenceQueue<?> q = ref.queue;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/Reference.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -60,1 +60,5 @@\n-    boolean enqueue(Reference<? extends T> r) { \/* Called only by Reference class *\/\n+    \/**\n+     * Called only by the Reference class, to add a Reference object to\n+     * the queue it was registered with when the reference was created.\n+     *\/\n+    boolean enqueue(Reference<?> r) {\n@@ -71,1 +75,5 @@\n-            head = r;\n+            \/\/ This queue was type-checked at Reference construction time, so\n+            \/\/ cast is safe and correct, even though it can't be checked.\n+            @SuppressWarnings(\"unchecked\")\n+            var newHead = (Reference<? extends T>)r;\n+            head = newHead;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/ref\/ReferenceQueue.java","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"}]}