{"files":[{"patch":"@@ -50,0 +50,8 @@\n+\/\/ Glibc on Linux uses the SA_RESTORER flag to indicate\n+\/\/ the use of a \"signal trampoline\". We have no interest\n+\/\/ in this flag and need to ignore it when checking our\n+\/\/ own flag settings.\n+\/\/ Note: SA_RESTORER is not exposed through signal.h so we\n+\/\/ have to hardwire it.\n+LINUX_ONLY(const int SA_RESTORER_FLAG_MASK = ~0x04000000;)\n+\n@@ -660,0 +668,10 @@\n+  const unsigned int unknown_flag = ~(SA_NOCLDSTOP |\n+                                      SA_ONSTACK   |\n+                                      SA_NOCLDSTOP |\n+                                      SA_RESTART   |\n+                                      SA_SIGINFO   |\n+                                      SA_NOCLDWAIT |\n+                                      SA_NODEFER\n+                                      AIX_ONLY(| SA_OLDSTYLE)\n+                                      );\n+\n@@ -662,1 +680,1 @@\n-    \/\/ systems 0x80000000, which is implicitly unsigned.  Assignining\n+    \/\/ systems 0x80000000, which is implicitly unsigned.  Assigning\n@@ -678,1 +696,1 @@\n-    { 0, NULL }\n+    { unknown_flag, \"NOT USED\"     }\n@@ -681,1 +699,1 @@\n-  for (idx = 0; flaginfo[idx].s && remaining > 1; idx++) {\n+  for (idx = 0; flaginfo[idx].i != unknown_flag && remaining > 1; idx++) {\n@@ -694,0 +712,4 @@\n+  unsigned int unknowns = flags & unknown_flag;\n+  if (unknowns != 0) {\n+    jio_snprintf(p, remaining, \"|Unknown_flags:%x\", unknowns);\n+  }\n@@ -737,0 +759,3 @@\n+  \/\/ See comment for SA_RESTORER_FLAG_MASK\n+  LINUX_ONLY(act.sa_flags &= SA_RESTORER_FLAG_MASK;)\n+\n@@ -1313,0 +1338,3 @@\n+  \/\/ See comment for SA_RESTORER_FLAG_MASK\n+  LINUX_ONLY(sa.sa_flags &= SA_RESTORER_FLAG_MASK;)\n+\n","filename":"src\/hotspot\/os\/posix\/signals_posix.cpp","additions":31,"deletions":3,"binary":false,"changes":34,"status":"modified"}]}