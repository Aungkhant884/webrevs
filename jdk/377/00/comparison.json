{"files":[{"patch":"@@ -258,11 +258,13 @@\n-        if (isArray()) {\n-            Object[] array = (Object[])table;\n-            for (int i = 0 ;i < array.length-1 ; i+=2) {\n-                newArrayTable.put(array[i], array[i+1]);\n-            }\n-        } else {\n-            Hashtable<?,?> tmp = (Hashtable)table;\n-            Enumeration<?> keys = tmp.keys();\n-            while (keys.hasMoreElements()) {\n-                Object o = keys.nextElement();\n-                newArrayTable.put(o,tmp.get(o));\n+        if (table != null) {\n+            if (isArray()) {\n+                Object[] array = (Object[]) table;\n+                for (int i = 0; i < array.length - 1; i += 2) {\n+                    newArrayTable.put(array[i], array[i + 1]);\n+                }\n+            } else {\n+                Hashtable<?, ?> tmp = (Hashtable) table;\n+                Enumeration<?> keys = tmp.keys();\n+                while (keys.hasMoreElements()) {\n+                    Object o = keys.nextElement();\n+                    newArrayTable.put(o, tmp.get(o));\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/ArrayTable.java","additions":13,"deletions":11,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 6514600\n+   @summary Verifies if AbstractAction throws NullPointerException when cloned\n+   @run main AbstractActionBug\n+ *\/\n+import java.awt.event.ActionEvent;\n+import javax.swing.AbstractAction;\n+\n+public final class AbstractActionBug extends AbstractAction implements Cloneable\n+{\n+    public static final void main(String[] args) throws Exception\n+    {\n+        AbstractActionBug a1 = new AbstractActionBug(\"a1\");\n+        a1 = (AbstractActionBug) a1.clone();\n+        System.out.println(\"a1 cloned ok\");\n+\n+        AbstractActionBug a2 = new AbstractActionBug(\"a2\");\n+        a2.putValue(NAME, \"null\");\n+        a2 = (AbstractActionBug) a2.clone();\n+        System.out.println(\"a2 cloned ok\");\n+\n+        AbstractActionBug a3 = new AbstractActionBug(null);\n+        a3 = (AbstractActionBug) a3.clone();\n+        System.out.println(\"a3 cloned ok\");\n+    }\n+\n+    private AbstractActionBug(String name) {\n+        putValue(NAME, name);\n+    }\n+\n+    public void actionPerformed(ActionEvent e)\n+    {\n+    }\n+}\n\\ No newline at end of file\n","filename":"test\/jdk\/javax\/swing\/Action\/AbstractActionBug.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"}]}