{"files":[{"patch":"@@ -2151,9 +2151,2 @@\n-      \/\/ cache can grow so we have to be more careful\n-      if (Threads::number_of_threads() == 0 ||\n-          SafepointSynchronize::is_at_safepoint()) {\n-        \/\/ we're single threaded or at a safepoint - no locking needed\n-        get_jmethod_id_length_value(jmeths, idnum, &length, &id);\n-      } else {\n-        MutexLocker ml(JmethodIdCreation_lock, Mutex::_no_safepoint_check_flag);\n-        get_jmethod_id_length_value(jmeths, idnum, &length, &id);\n-      }\n+      MutexLocker ml(JmethodIdCreation_lock, Mutex::_no_safepoint_check_flag);\n+      get_jmethod_id_length_value(jmeths, idnum, &length, &id);\n@@ -2201,6 +2194,1 @@\n-    if (Threads::number_of_threads() == 0 ||\n-        SafepointSynchronize::is_at_safepoint()) {\n-      \/\/ we're single threaded or at a safepoint - no locking needed\n-      id = get_jmethod_id_fetch_or_update(idnum, new_id, new_jmeths,\n-                                          &to_dealloc_id, &to_dealloc_jmeths);\n-    } else {\n+    {\n","filename":"src\/hotspot\/share\/oops\/instanceKlass.cpp","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2170,10 +2170,6 @@\n-  if (!SafepointSynchronize::is_at_safepoint()) {\n-    \/\/ Have to add jmethod_ids() to class loader data thread-safely.\n-    \/\/ Also have to add the method to the list safely, which the lock\n-    \/\/ protects as well.\n-    MutexLocker ml(JmethodIdCreation_lock,  Mutex::_no_safepoint_check_flag);\n-    if (cld->jmethod_ids() == NULL) {\n-      cld->set_jmethod_ids(new JNIMethodBlock(capacity));\n-    } else {\n-      cld->jmethod_ids()->ensure_methods(capacity);\n-    }\n+  \/\/ Have to add jmethod_ids() to class loader data thread-safely.\n+  \/\/ Also have to add the method to the list safely, which the lock\n+  \/\/ protects as well.\n+  MutexLocker ml(JmethodIdCreation_lock,  Mutex::_no_safepoint_check_flag);\n+  if (cld->jmethod_ids() == NULL) {\n+    cld->set_jmethod_ids(new JNIMethodBlock(capacity));\n@@ -2181,6 +2177,1 @@\n-    \/\/ At safepoint, we are single threaded and can set this.\n-    if (cld->jmethod_ids() == NULL) {\n-      cld->set_jmethod_ids(new JNIMethodBlock(capacity));\n-    } else {\n-      cld->jmethod_ids()->ensure_methods(capacity);\n-    }\n+    cld->jmethod_ids()->ensure_methods(capacity);\n@@ -2194,17 +2185,6 @@\n-  if (!SafepointSynchronize::is_at_safepoint()) {\n-    \/\/ Have to add jmethod_ids() to class loader data thread-safely.\n-    \/\/ Also have to add the method to the list safely, which the lock\n-    \/\/ protects as well.\n-    MutexLocker ml(JmethodIdCreation_lock,  Mutex::_no_safepoint_check_flag);\n-    if (cld->jmethod_ids() == NULL) {\n-      cld->set_jmethod_ids(new JNIMethodBlock());\n-    }\n-    \/\/ jmethodID is a pointer to Method*\n-    return (jmethodID)cld->jmethod_ids()->add_method(m);\n-  } else {\n-    \/\/ At safepoint, we are single threaded and can set this.\n-    if (cld->jmethod_ids() == NULL) {\n-      cld->set_jmethod_ids(new JNIMethodBlock());\n-    }\n-    \/\/ jmethodID is a pointer to Method*\n-    return (jmethodID)cld->jmethod_ids()->add_method(m);\n+  \/\/ Have to add jmethod_ids() to class loader data thread-safely.\n+  \/\/ Also have to add the method to the list safely, which the lock\n+  \/\/ protects as well.\n+  MutexLocker ml(JmethodIdCreation_lock,  Mutex::_no_safepoint_check_flag);\n+  if (cld->jmethod_ids() == NULL) {\n+    cld->set_jmethod_ids(new JNIMethodBlock());\n@@ -2212,0 +2192,2 @@\n+  \/\/ jmethodID is a pointer to Method*\n+  return (jmethodID)cld->jmethod_ids()->add_method(m);\n","filename":"src\/hotspot\/share\/oops\/method.cpp","additions":15,"deletions":33,"binary":false,"changes":48,"status":"modified"}]}