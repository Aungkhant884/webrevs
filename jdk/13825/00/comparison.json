{"files":[{"patch":"@@ -33,0 +33,2 @@\n+CheckOopFunctionPointer check_oop_function = nullptr;\n+\n","filename":"src\/hotspot\/share\/oops\/oopsHierarchy.cpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -80,0 +80,5 @@\n+\/\/ Extra verification when creating and using oops.\n+\/\/ Used to catch broken oops as soon as possible.\n+using CheckOopFunctionPointer = void(*)(oopDesc*);\n+extern CheckOopFunctionPointer check_oop_function;\n+\n@@ -86,3 +91,6 @@\n-  void register_if_checking() {\n-    if (CheckUnhandledOops) register_oop();\n-  }\n+  \/\/ Extra verification of the oop\n+  void check_oop() const { if (check_oop_function != nullptr && _o != nullptr) check_oop_function(_o); }\n+\n+  void on_usage() const  { check_oop(); }\n+  void on_construction() { check_oop(); if (CheckUnhandledOops)   register_oop(); }\n+  void on_destruction()  {              if (CheckUnhandledOops) unregister_oop(); }\n@@ -91,3 +99,3 @@\n-  oop()             : _o(nullptr) { register_if_checking(); }\n-  oop(const oop& o) : _o(o._o)    { register_if_checking(); }\n-  oop(oopDesc* o)   : _o(o)       { register_if_checking(); }\n+  oop()             : _o(nullptr) { on_construction(); }\n+  oop(const oop& o) : _o(o._o)    { on_construction(); }\n+  oop(oopDesc* o)   : _o(o)       { on_construction(); }\n@@ -95,1 +103,1 @@\n-    if (CheckUnhandledOops) unregister_oop();\n+    on_destruction();\n@@ -98,3 +106,4 @@\n-  oopDesc* obj() const                 { return _o; }\n-  oopDesc* operator->() const          { return _o; }\n-  operator oopDesc* () const           { return _o; }\n+  oopDesc* obj() const                  { on_usage(); return _o; }\n+\n+  oopDesc* operator->() const           { return obj(); }\n+  operator oopDesc* () const            { return obj(); }\n@@ -102,2 +111,2 @@\n-  bool operator==(const oop& o) const  { return _o == o._o; }\n-  bool operator!=(const oop& o) const  { return _o != o._o; }\n+  bool operator==(const oop& o) const   { return obj() == o.obj(); }\n+  bool operator!=(const oop& o) const   { return obj() != o.obj(); }\n@@ -105,2 +114,2 @@\n-  bool operator==(std::nullptr_t) const     { return _o == nullptr; }\n-  bool operator!=(std::nullptr_t) const     { return _o != nullptr; }\n+  bool operator==(std::nullptr_t) const { return obj() == nullptr; }\n+  bool operator!=(std::nullptr_t) const { return obj() != nullptr; }\n@@ -108,1 +117,1 @@\n-  oop& operator=(const oop& o)         { _o = o._o; return *this; }\n+  oop& operator=(const oop& o)          { _o = o.obj(); return *this; }\n","filename":"src\/hotspot\/share\/oops\/oopsHierarchy.hpp","additions":24,"deletions":15,"binary":false,"changes":39,"status":"modified"}]}