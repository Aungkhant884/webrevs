{"files":[{"patch":"@@ -53,0 +53,3 @@\n+  product(bool, StressCCP, false, DIAGNOSTIC,                               \\\n+          \"Randomize worklist traversal in CCP\")                            \\\n+                                                                            \\\n","filename":"src\/hotspot\/share\/opto\/c2_globals.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -770,3 +770,3 @@\n-  \/\/ If LCM, GCM, or IGVN are randomized for stress testing, seed\n-  \/\/ random number generation and log the seed for repeatability.\n-  if (StressLCM || StressGCM || StressIGVN) {\n+  \/\/ If any phase is randomized for stress testing, seed random number\n+  \/\/ generation and log the seed for repeatability.\n+  if (StressLCM || StressGCM || StressIGVN || StressCCP) {\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -1717,1 +1717,6 @@\n-    Node *n = worklist.pop();\n+    Node* n; \/\/ Node to be examined in this iteration\n+    if (StressCCP) {\n+      n = worklist.remove(C->random() % worklist.size());\n+    } else {\n+      n = worklist.pop();\n+    }\n","filename":"src\/hotspot\/share\/opto\/phaseX.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -1,44 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8252219\n- * @requires vm.compiler2.enabled\n- * @summary Tests that different combinations of the options -XX:+StressIGVN and\n- *          -XX:StressSeed=N are accepted.\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN\n- *      compiler.arguments.TestStressIGVNOptions\n- * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=42\n- *      compiler.arguments.TestStressIGVNOptions\n- *\/\n-\n-package compiler.arguments;\n-\n-public class TestStressIGVNOptions {\n-\n-    static public void main(String[] args) {\n-        System.out.println(\"Passed\");\n-    }\n-}\n-\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestStressIGVNOptions.java","additions":0,"deletions":44,"binary":false,"changes":44,"status":"deleted"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8252219 8256535\n+ * @requires vm.compiler2.enabled\n+ * @summary Tests that different combinations of stress options and\n+ *          -XX:StressSeed=N are accepted.\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressIGVN -XX:StressSeed=42\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressCCP\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressCCP -XX:StressSeed=42\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressLCM -XX:StressSeed=42\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM\n+ *      compiler.arguments.TestStressOptions\n+ * @run main\/othervm -XX:+UnlockDiagnosticVMOptions -XX:+StressGCM -XX:StressSeed=42\n+ *      compiler.arguments.TestStressOptions\n+ *\/\n+\n+package compiler.arguments;\n+\n+public class TestStressOptions {\n+\n+    static public void main(String[] args) {\n+        System.out.println(\"Passed\");\n+    }\n+}\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/arguments\/TestStressOptions.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,1 @@\n- * @bug 8252219\n+ * @bug 8252219 8256535\n@@ -41,0 +41,1 @@\n+ * @run driver compiler.debug.TestGenerateStressSeed StressCCP\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestGenerateStressSeed.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -1,70 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package compiler.debug;\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Asserts;\n-\n-\/*\n- * @test\n- * @bug 8252219\n- * @requires vm.debug == true & vm.compiler2.enabled\n- * @summary Tests that compilations with the same seed yield the same IGVN\n- *          trace.\n- * @library \/test\/lib \/\n- * @run driver compiler.debug.TestStressIGVN\n- *\/\n-\n-public class TestStressIGVN {\n-\n-    static String igvnTrace(int stressSeed) throws Exception {\n-        String className = TestStressIGVN.class.getName();\n-        String[] procArgs = {\n-            \"-Xcomp\", \"-XX:-TieredCompilation\", \"-XX:-Inline\",\n-            \"-XX:CompileOnly=\" + className + \"::sum\", \"-XX:+TraceIterativeGVN\",\n-            \"-XX:+StressIGVN\", \"-XX:StressSeed=\" + stressSeed,\n-            className, \"10\"};\n-        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilder(procArgs);\n-        OutputAnalyzer out = new OutputAnalyzer(pb.start());\n-        return out.getStdout();\n-    }\n-\n-    static void sum(int n) {\n-        int acc = 0;\n-        for (int i = 0; i < n; i++) acc += i;\n-        System.out.println(acc);\n-    }\n-\n-    public static void main(String[] args) throws Exception {\n-        if (args.length == 0) {\n-            for (int s = 0; s < 10; s++) {\n-                Asserts.assertEQ(igvnTrace(s), igvnTrace(s),\n-                    \"got different IGVN traces for the same seed\");\n-            }\n-        } else if (args.length > 0) {\n-            sum(Integer.parseInt(args[0]));\n-        }\n-    }\n-}\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressIGVN.java","additions":0,"deletions":70,"binary":false,"changes":70,"status":"deleted"},{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.debug;\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.Asserts;\n+\n+\/*\n+ * @test\n+ * @bug 8252219 8256535\n+ * @requires vm.debug == true & vm.compiler2.enabled\n+ * @summary Tests that stress compilations with the same seed yield the same\n+ *          IGVN and CCP traces.\n+ * @library \/test\/lib \/\n+ * @run driver compiler.debug.TestStressIGVNAndCCP\n+ *\/\n+\n+public class TestStressIGVNAndCCP {\n+\n+    static String phaseTrace(String stressOption, String traceOption,\n+                             int stressSeed) throws Exception {\n+        String className = TestStressIGVNAndCCP.class.getName();\n+        String[] procArgs = {\n+            \"-Xcomp\", \"-XX:-TieredCompilation\", \"-XX:-Inline\",\n+            \"-XX:CompileOnly=\" + className + \"::sum\", \"-XX:+\" + traceOption,\n+            \"-XX:+\" + stressOption, \"-XX:StressSeed=\" + stressSeed,\n+            className, \"10\"};\n+        ProcessBuilder pb  = ProcessTools.createJavaProcessBuilder(procArgs);\n+        OutputAnalyzer out = new OutputAnalyzer(pb.start());\n+        return out.getStdout();\n+    }\n+\n+    static String igvnTrace(int stressSeed) throws Exception {\n+        return phaseTrace(\"StressIGVN\", \"TraceIterativeIGVN\", stressSeed);\n+    }\n+\n+    static String ccpTrace(int stressSeed) throws Exception {\n+        return phaseTrace(\"StressCCP\", \"TracePhaseCCP\", stressSeed);\n+    }\n+\n+    static void sum(int n) {\n+        int acc = 0;\n+        for (int i = 0; i < n; i++) acc += i;\n+        System.out.println(acc);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        if (args.length == 0) {\n+            for (int s = 0; s < 10; s++) {\n+                Asserts.assertEQ(igvnTrace(s), igvnTrace(s),\n+                    \"got different IGVN traces for the same seed\");\n+                Asserts.assertEQ(ccpTrace(s), ccpTrace(s),\n+                    \"got different CCP traces for the same seed\");\n+            }\n+        } else if (args.length > 0) {\n+            sum(Integer.parseInt(args[0]));\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/debug\/TestStressIGVNAndCCP.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"}]}