{"files":[{"patch":"@@ -175,25 +175,0 @@\n-uintptr_t ZMemoryManager::alloc_high_address_at_most(size_t size, size_t* allocated) {\n-  ZLocker<ZLock> locker(&_lock);\n-\n-  ZMemory* area = _freelist.last();\n-  if (area != NULL) {\n-    if (area->size() <= size) {\n-      \/\/ Smaller than or equal to requested, remove area\n-      const uintptr_t start = area->start();\n-      *allocated = area->size();\n-      _freelist.remove(area);\n-      destroy(area);\n-      return start;\n-    } else {\n-      \/\/ Larger than requested, shrink area\n-      shrink_from_back(area, size);\n-      *allocated = size;\n-      return area->end();\n-    }\n-  }\n-\n-  \/\/ Out of memory\n-  *allocated = 0;\n-  return UINTPTR_MAX;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/z\/zMemory.cpp","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-  uintptr_t alloc_high_address_at_most(size_t size, size_t* allocated);\n","filename":"src\/hotspot\/share\/gc\/z\/zMemory.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}