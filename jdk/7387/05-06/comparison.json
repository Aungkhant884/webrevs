{"files":[{"patch":"@@ -36,2 +36,5 @@\n- * collections allow duplicate elements and others do not.  Some are ordered\n- * and others unordered.  The JDK does not provide any <i>direct<\/i>\n+ * collections allow duplicate elements and others do not.  Some are ordered,\n+ * and others are unordered. Collections that have a defined\n+ * <a href=\"SequencedCollection.html#encounter\">encounter order<\/a>\n+ * are generally subtypes of the {@link SequencedCollection} interface.\n+ * The JDK does not provide any <i>direct<\/i>\n@@ -506,1 +509,3 @@\n-     * nonempty.)\n+     * nonempty.) If the specified collection has a defined\n+     * <a href=\"SequencedCollection.html#encounter\">encounter order<\/a>,\n+     * processing of its elements generally occurs in that order.\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collection.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -6023,1 +6023,1 @@\n-        private final E nsee(Map.Entry<E, Boolean> e) {\n+        private E nsee(Map.Entry<E, Boolean> e) {\n@@ -6031,1 +6031,1 @@\n-        private final SequencedMap<E, Boolean> map() {\n+        private SequencedMap<E, Boolean> map() {\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,2 +45,4 @@\n- * specific guarantees as to their order; others, like the {@code HashMap}\n- * class, do not.\n+ * specific guarantees as to their encounter order; others, like the\n+ * {@code HashMap} class, do not. Maps with a defined\n+ * <a href=\"SequencedCollection.html#encounter\">encounter order<\/a>\n+ * are generally subtypes of the {@link SequencedMap} interface.\n@@ -307,2 +309,4 @@\n-     * specified map.  The behavior of this operation is undefined if the\n-     * specified map is modified while the operation is in progress.\n+     * specified map.  The behavior of this operation is undefined if the specified map\n+     * is modified while the operation is in progress. If the specified map has a defined\n+     * <a href=\"SequencedCollection.html#encounter\">encounter order<\/a>,\n+     * processing of its mappings generally occurs in that order.\n","filename":"src\/java.base\/share\/classes\/java\/util\/Map.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-    ReverseOrderDequeView(Deque<E> deque) {\n+    private ReverseOrderDequeView(Deque<E> deque) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/ReverseOrderDequeView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    ReverseOrderSortedMapView(SortedMap<K, V> map) {\n+    private ReverseOrderSortedMapView(SortedMap<K, V> map) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/ReverseOrderSortedMapView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-    ReverseOrderSortedSetView(SortedSet<E> set) {\n+    private ReverseOrderSortedSetView(SortedSet<E> set) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/ReverseOrderSortedSetView.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -29,3 +29,3 @@\n- * A collection that has a well-defined encounter order, that supports operations at\n- * both ends, and that is reversible. The elements of a sequenced collection have an\n- * <i>encounter order<\/i>, where conceptually the elements have a linear arrangement\n+ * A collection that has a well-defined encounter order, that supports operations at both ends,\n+ * and that is reversible. The elements of a sequenced collection have an <a id=\"encounter\">\n+ * <i>encounter order<\/i><\/a>, where conceptually the elements have a linear arrangement\n","filename":"src\/java.base\/share\/classes\/java\/util\/SequencedCollection.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -29,4 +29,4 @@\n- * A Map that has a well-defined encounter order, that supports operations at both\n- * ends, and that is reversible. The <i>encounter order<\/i> of a {@code SequencedMap}\n- * is similar to that of the elements of a {@link SequencedCollection}, but the ordering\n- * applies to mappings instead of individual elements.\n+ * A Map that has a well-defined encounter order, that supports operations at both ends, and\n+ * that is reversible. The <a href=\"SequencedCollection.html#encounter\">encounter order<\/a>\n+ * of a {@code SequencedMap} is similar to that of the elements of a {@link SequencedCollection},\n+ * but the ordering applies to mappings instead of individual elements.\n","filename":"src\/java.base\/share\/classes\/java\/util\/SequencedMap.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}