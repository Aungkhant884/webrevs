{"files":[{"patch":"@@ -52,1 +52,1 @@\n-class ShenandoahConcurrentGCScope : public StackObj {\n+class ShenandoahBreakpointScope : public StackObj {\n@@ -54,1 +54,1 @@\n-  ShenandoahConcurrentGCScope() {\n+  ShenandoahBreakpointScope() {\n@@ -58,1 +58,1 @@\n-  ~ShenandoahConcurrentGCScope() {\n+  ~ShenandoahBreakpointScope() {\n@@ -63,1 +63,1 @@\n-class ShenandoahConcurrentMarkScope : public StackObj {\n+class ShenandoahBreakpointMarkScope : public StackObj {\n@@ -65,1 +65,1 @@\n-  ShenandoahConcurrentMarkScope() {\n+  ShenandoahBreakpointMarkScope() {\n@@ -69,1 +69,1 @@\n-  ~ShenandoahConcurrentMarkScope() {\n+  ~ShenandoahBreakpointMarkScope() {\n@@ -92,1 +92,1 @@\n-  ShenandoahConcurrentGCScope gc_scope;\n+  ShenandoahBreakpointScope breakpoint_scope;\n@@ -101,1 +101,1 @@\n-    ShenandoahConcurrentMarkScope conc_mark_scope;\n+    ShenandoahBreakpointMarkScope conc_mark_scope;\n@@ -657,0 +657,1 @@\n+  ShenandoahBreakpoint::at_after_reference_processing_started();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahConcurrentGC.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -474,4 +474,0 @@\n-bool ShenandoahControlThread::is_async_gc(GCCause::Cause cause) const {\n-  return cause == GCCause::_wb_breakpoint;\n-}\n-\n@@ -513,1 +509,2 @@\n-    if (!is_async_gc(cause)) {\n+\n+    if (cause != GCCause::_wb_breakpoint) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.cpp","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -117,3 +117,0 @@\n-  \/\/ Breakpoint support\n-  bool is_async_gc(GCCause::Cause cause) const;\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahControlThread.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}