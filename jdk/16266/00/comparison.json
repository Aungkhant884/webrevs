{"files":[{"patch":"@@ -109,2 +109,0 @@\n-      assert(_sp->block_size(top_obj) == cast_to_oop(top_obj)->size(),\n-             \"Block size and object size mismatch\");\n","filename":"src\/hotspot\/share\/gc\/serial\/cardTableRS.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -197,8 +197,0 @@\n-size_t Generation::block_size(const HeapWord* p) const {\n-  GenerationBlockSizeClosure blk(p);\n-  \/\/ Cast away const\n-  ((Generation*)this)->space_iterate(&blk);\n-  assert(blk.size > 0, \"seems reasonable\");\n-  return blk.size;\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -334,5 +334,0 @@\n-  \/\/ Requires \"addr\" to be the start of a chunk, and returns its size.\n-  \/\/ \"addr + size\" is required to be the start of a new chunk, or the end\n-  \/\/ of the active area of the heap.\n-  virtual size_t block_size(const HeapWord* addr) const ;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/generation.hpp","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -480,1 +480,1 @@\n-    size_t word_size = _the_space->block_size(start);\n+    size_t word_size = cast_to_oop(start)->size();;\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -136,2 +136,0 @@\n-  inline size_t block_size(const HeapWord* addr) const;\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -68,9 +68,0 @@\n-size_t TenuredGeneration::block_size(const HeapWord* addr) const {\n-  if (addr < _the_space->top()) {\n-    return cast_to_oop(addr)->size();\n-  } else {\n-    assert(addr == _the_space->top(), \"non-block head arg to block_size\");\n-    return _the_space->end() - _the_space->top();\n-  }\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/serial\/tenuredGeneration.inline.hpp","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}