{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,2 @@\n- * @summary AccessibleJTableCell.isShowing() returns false when the cell on the screen\n+ * @summary AccessibleJTableCell.isShowing() returns false \n+ * when the cell is actually on the screen.\n@@ -33,0 +34,1 @@\n+import java.util.concurrent.atomic.AtomicBoolean;\n@@ -42,6 +44,3 @@\n-    private static Object[][] rowData = {\n-        { \"01\", \"02\", \"03\", \"04\", \"05\" },\n-        { \"11\", \"12\", \"13\", \"14\", \"15\" },\n-        { \"21\", \"22\", \"23\", \"24\", \"25\" },\n-        { \"31\", \"32\", \"33\", \"34\", \"35\" },\n-        { \"41\", \"42\", \"43\", \"44\", \"45\" } };\n+    private static Object[][] rowData = { { \"01\", \"02\", \"03\", \"04\", \"05\" },\n+        { \"11\", \"12\", \"13\", \"14\", \"15\" }, { \"21\", \"22\", \"23\", \"24\", \"25\" },\n+        { \"31\", \"32\", \"33\", \"34\", \"35\" }, { \"41\", \"42\", \"43\", \"44\", \"45\" } };\n@@ -54,0 +53,1 @@\n+\n@@ -57,0 +57,1 @@\n+\n@@ -58,3 +59,3 @@\n-                if (!jTable.getAccessibleContext().getAccessibleChild(i).getAccessibleContext()\n-                    .getAccessibleComponent().isShowing()) {\n-                    throw new RuntimeException(\"Assertion Failed: JTable accessible child \" + i\n+                if (!isJTableCellShowing(i)) {\n+                    throw new RuntimeException(\n+                        \"Assertion Failed: JTable accessible child \" + i\n@@ -69,0 +70,9 @@\n+    private static boolean isJTableCellShowing(int i) throws Exception {\n+        AtomicBoolean isShowing = new AtomicBoolean();\n+        SwingUtilities.invokeAndWait(() -> isShowing\n+            .set(jTable.getAccessibleContext().getAccessibleChild(i)\n+                .getAccessibleContext().getAccessibleComponent().isShowing()));\n+        \n+        return isShowing.get();\n+    }\n+\n@@ -74,0 +84,1 @@\n+        jFrame.setLocationRelativeTo(null);\n@@ -82,1 +93,0 @@\n-\n","filename":"test\/jdk\/javax\/accessibility\/4529616\/AccessibleJTableCellTest.java","additions":22,"deletions":12,"binary":false,"changes":34,"status":"modified"}]}