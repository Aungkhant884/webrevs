{"files":[{"patch":"@@ -1007,1 +1007,1 @@\n-    java_lang_Class::set_klass(mirror(), k);\n+    set_klass(mirror(), k);\n@@ -1012,1 +1012,1 @@\n-    java_lang_Class::set_static_oop_field_count(mirror(), mk->compute_static_oop_field_count(mirror()));\n+    set_static_oop_field_count(mirror(), mk->compute_static_oop_field_count(mirror()));\n@@ -1041,1 +1041,1 @@\n-        java_lang_Class::set_klass(mirror(), NULL);\n+        set_klass(mirror(), NULL);\n@@ -1245,1 +1245,1 @@\n-      oop comp_mirror = java_lang_Class::component_mirror(mirror);\n+      oop comp_mirror = component_mirror(mirror);\n@@ -1257,1 +1257,1 @@\n-    java_lang_Class::set_component_mirror(archived_mirror, archived_comp_mirror);\n+    set_component_mirror(archived_mirror, archived_comp_mirror);\n@@ -1264,1 +1264,1 @@\n-    java_lang_Class:set_init_lock(archived_mirror, NULL);\n+    set_init_lock(archived_mirror, NULL);\n@@ -1377,1 +1377,1 @@\n-  java_lang_Class::set_module(k->java_mirror(), module());\n+  set_module(k->java_mirror(), module());\n@@ -1465,1 +1465,1 @@\n-    o = StringTable::intern(java_lang_Class::as_external_name(java_class()), THREAD);\n+    o = StringTable::intern(as_external_name(java_class()), THREAD);\n@@ -1492,1 +1492,1 @@\n-  assert(java_lang_Class::static_oop_field_count(java_class) == 0, \"should have been zeroed by allocation\");\n+  assert(static_oop_field_count(java_class) == 0, \"should have been zeroed by allocation\");\n@@ -1498,1 +1498,1 @@\n-  assert(java_lang_Class::is_instance(java_class), \"must be a Class object\");\n+  assert(is_instance(java_class), \"must be a Class object\");\n@@ -1504,1 +1504,1 @@\n-  assert(java_lang_Class::is_instance(java_class), \"must be a Class object\");\n+  assert(is_instance(java_class), \"must be a Class object\");\n@@ -1524,1 +1524,1 @@\n-  assert(java_lang_Class::is_instance(java_class), \"must be a Class object\");\n+  assert(is_instance(java_class), \"must be a Class object\");\n@@ -1555,1 +1555,1 @@\n-  assert(java_lang_Class::is_instance(java_class), \"must be a Class object\");\n+  assert(is_instance(java_class), \"must be a Class object\");\n@@ -1582,1 +1582,1 @@\n-  assert(java_lang_Class::is_primitive(java_class), \"just checking\");\n+  assert(is_primitive(java_class), \"just checking\");\n@@ -1596,1 +1596,1 @@\n-  assert(java_lang_Class::is_instance(java_class), \"must be a Class object\");\n+  assert(is_instance(java_class), \"must be a Class object\");\n@@ -1612,1 +1612,1 @@\n-  assert(java_lang_Class::is_primitive(mirror), \"must be primitive\");\n+  assert(is_primitive(mirror), \"must be primitive\");\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"}]}