{"files":[{"patch":"@@ -2632,0 +2632,43 @@\n+C2V_VMENTRY(void, setThreadLocalObject, (JNIEnv* env, jobject, jint id, jobject value))\n+  requireInHotSpot(\"setThreadLocalObject\", JVMCI_CHECK);\n+  if (id == 0) {\n+    thread->set_jvmci_reserved_oop0(JNIHandles::resolve(value));\n+    return;\n+  }\n+  THROW_MSG(vmSymbols::java_lang_IllegalArgumentException(),\n+            err_msg(\"%d is not a valid thread local id\", id));\n+}\n+\n+C2V_VMENTRY_NULL(jobject, getThreadLocalObject, (JNIEnv* env, jobject, jint id))\n+  requireInHotSpot(\"getThreadLocalObject\", JVMCI_CHECK_NULL);\n+  if (id == 0) {\n+    return JNIHandles::make_local(thread->get_jvmci_reserved_oop0());\n+  }\n+  THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n+              err_msg(\"%d is not a valid thread local id\", id));\n+}\n+\n+C2V_VMENTRY(void, setThreadLocalLong, (JNIEnv* env, jobject, jint id, jlong value))\n+  requireInHotSpot(\"setThreadLocalLong\", JVMCI_CHECK);\n+  if (id == 0) {\n+    thread->set_jvmci_reserved0(value);\n+  } else if (id == 1) {\n+    thread->set_jvmci_reserved1(value);\n+  } else {\n+    THROW_MSG(vmSymbols::java_lang_IllegalArgumentException(),\n+              err_msg(\"%d is not a valid thread local id\", id));\n+  }\n+}\n+\n+C2V_VMENTRY_0(jlong, getThreadLocalLong, (JNIEnv* env, jobject, jint id))\n+  requireInHotSpot(\"getThreadLocalLong\", JVMCI_CHECK_0);\n+  if (id == 0) {\n+    return thread->get_jvmci_reserved0();\n+  } else if (id == 1) {\n+    return thread->get_jvmci_reserved1();\n+  } else {\n+    THROW_MSG_0(vmSymbols::java_lang_IllegalArgumentException(),\n+                err_msg(\"%d is not a valid thread local id\", id));\n+  }\n+}\n+\n@@ -2773,0 +2816,4 @@\n+  {CC \"getThreadLocalObject\",                         CC \"(I)\" OBJECT,                                                                      FN_PTR(getThreadLocalObject)},\n+  {CC \"setThreadLocalObject\",                         CC \"(I\" OBJECT \")V\",                                                                  FN_PTR(setThreadLocalObject)},\n+  {CC \"getThreadLocalLong\",                           CC \"(I)J\",                                                                            FN_PTR(getThreadLocalLong)},\n+  {CC \"setThreadLocalLong\",                           CC \"(IJ)V\",                                                                           FN_PTR(setThreadLocalLong)},\n","filename":"src\/hotspot\/share\/jvmci\/jvmciCompilerToVM.cpp","additions":47,"deletions":0,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -186,2 +186,2 @@\n-  nonstatic_field(JavaThread,                  _jvmci_reserved0,                              intptr_t*)                             \\\n-  nonstatic_field(JavaThread,                  _jvmci_reserved1,                              intptr_t*)                             \\\n+  nonstatic_field(JavaThread,                  _jvmci_reserved0,                              jlong)                                 \\\n+  nonstatic_field(JavaThread,                  _jvmci_reserved1,                              jlong)                                 \\\n","filename":"src\/hotspot\/share\/jvmci\/vmStructs_jvmci.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1018,2 +1018,2 @@\n-  _jvmci_reserved0(nullptr),\n-  _jvmci_reserved1(nullptr),\n+  _jvmci_reserved0(0),\n+  _jvmci_reserved1(0),\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -961,2 +961,2 @@\n-  intptr_t*  _jvmci_reserved0;\n-  intptr_t*  _jvmci_reserved1;\n+  jlong      _jvmci_reserved0;\n+  jlong      _jvmci_reserved1;\n@@ -973,0 +973,24 @@\n+  void set_jvmci_reserved_oop0(oop value) {\n+    _jvmci_reserved_oop0 = value;\n+  }\n+\n+  oop get_jvmci_reserved_oop0() {\n+    return _jvmci_reserved_oop0;\n+  }\n+\n+  void set_jvmci_reserved0(jlong value) {\n+    _jvmci_reserved0 = value;\n+  }\n+\n+  jlong get_jvmci_reserved0() {\n+    return _jvmci_reserved0;\n+  }\n+\n+  void set_jvmci_reserved1(jlong value) {\n+    _jvmci_reserved1 = value;\n+  }\n+\n+  jlong get_jvmci_reserved1() {\n+    return _jvmci_reserved1;\n+  }\n+\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -951,0 +951,20 @@\n+    \/**\n+     * @see HotSpotJVMCIRuntime#setThreadLocalObject(int, Object)\n+     *\/\n+    native void setThreadLocalObject(int id, Object value);\n+\n+    \/**\n+     * @see HotSpotJVMCIRuntime#getThreadLocalObject(int)\n+     *\/\n+    native Object getThreadLocalObject(int id);\n+\n+    \/**\n+     * @see HotSpotJVMCIRuntime#setThreadLocalLong(int, long)\n+     *\/\n+    native void setThreadLocalLong(int id, long value);\n+\n+    \/**\n+     * @see HotSpotJVMCIRuntime#getThreadLocalLong(int)\n+     *\/\n+    native long getThreadLocalLong(int id);\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/CompilerToVM.java","additions":20,"deletions":0,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -579,0 +579,40 @@\n+    \/**\n+     * Sets the current thread's {@code JavaThread::_jvmci_reserved_oop<id>} field to {@code value}.\n+     *\n+     * @throws IllegalArgumentException if the {@code JavaThread::_jvmci_reserved_oop<id>} field\n+     *             does not exist\n+     *\/\n+    public void setThreadLocalObject(int id, Object value) {\n+        compilerToVm.setThreadLocalObject(id, value);\n+    }\n+\n+    \/**\n+     * Get the value of the current thread's {@code JavaThread::_jvmci_reserved_oop<id>} field.\n+     *\n+     * @throws IllegalArgumentException if the {@code JavaThread::_jvmci_reserved_oop<id>} field\n+     *             does not exist\n+     *\/\n+    public Object getThreadLocalObject(int id) {\n+        return compilerToVm.getThreadLocalObject(id);\n+    }\n+\n+    \/**\n+     * Sets the current thread's {@code JavaThread::_jvmci_reserved<id>} field to {@code value}.\n+     *\n+     * @throws IllegalArgumentException if the {@code JavaThread::_jvmci_reserved<id>} field does\n+     *             not exist\n+     *\/\n+    public void setThreadLocalLong(int id, long value) {\n+        compilerToVm.setThreadLocalLong(id, value);\n+    }\n+\n+    \/**\n+     * Get the value of the current thread's {@code JavaThread::_jvmci_reserved<id>} field.\n+     *\n+     * @throws IllegalArgumentException if the {@code JavaThread::_jvmci_reserved<id>} field does\n+     *             not exist\n+     *\/\n+    public long getThreadLocalLong(int id) {\n+        return compilerToVm.getThreadLocalLong(id);\n+    }\n+\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.hotspot\/src\/jdk\/vm\/ci\/hotspot\/HotSpotJVMCIRuntime.java","additions":40,"deletions":0,"binary":false,"changes":40,"status":"modified"}]}