{"files":[{"patch":"@@ -86,1 +86,0 @@\n-        setOpaque(true);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JToolTip.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -729,1 +729,0 @@\n-        setOpaque(true);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JTree.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -290,1 +290,0 @@\n-        setOpaque(true);\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JViewport.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -21581,1 +21581,1 @@\n-                                 \n+\n@@ -27251,1 +27251,1 @@\n-      <uiComponent opaque=\"false\" type=\"javax.swing.JToolTip\" name=\"ToolTip\" ui=\"ToolTipUI\" subregion=\"false\">\n+      <uiComponent opaque=\"true\" type=\"javax.swing.JToolTip\" name=\"ToolTip\" ui=\"ToolTipUI\" subregion=\"false\">\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,3 +45,14 @@\n-                    if (list.isOpaque() == false) {\n-                        throw new RuntimeException(\"Default value of \" +\n-                                \"\\\"opaque\\\" property for JList is changed \");\n+                    JTable table = new JTable();\n+                    JTree tree = new JTree();\n+                    JToolTip toolTip = new JToolTip();\n+                    JViewport viewport = new JViewport();\n+                    String opaqueValue =  new String(\" \");\n+\n+                    if (!list.isOpaque()) {\n+                        opaqueValue += \"JList, \";\n+                    }\n+                    if (!table.isOpaque()) {\n+                        opaqueValue += \"JTable, \";\n+                    }\n+                    if (!tree.isOpaque()) {\n+                        opaqueValue += \"JTree, \";\n@@ -49,0 +60,2 @@\n+                    if (!toolTip.isOpaque()) {\n+                        opaqueValue += \"JToolTip, \";\n@@ -50,5 +63,3 @@\n-                    LookAndFeel.installProperty(list, \"opaque\", false);\n-                    if (list.isOpaque()) {\n-                        throw new RuntimeException(\n-                                \"setUIProperty failed to clear JList opaque\" +\n-                                        \" when opaque is not set by client\");\n+                    }\n+                    if (!viewport.isOpaque()) {\n+                        opaqueValue += \"JViewport, \";\n@@ -57,2 +68,1 @@\n-                    JTable table = new JTable();\n-                    if (table.isOpaque() == false) {\n+                    if(!opaqueValue.equals(\" \")) {\n@@ -60,1 +70,2 @@\n-                                \"\\\"opaque\\\" property for JTable is changed \");\n+                                \"\\\"opaque\\\" property for \" + opaqueValue\n+                                + \" is changed \");\n@@ -63,0 +74,1 @@\n+                    LookAndFeel.installProperty(list, \"opaque\", false);\n@@ -64,0 +76,8 @@\n+                    LookAndFeel.installProperty(tree, \"opaque\", false);\n+                    LookAndFeel.installProperty(toolTip,\"opaque\",false);\n+                    LookAndFeel.installProperty(viewport,\"opaque\",false);\n+\n+                    opaqueValue = \" \";\n+                    if (list.isOpaque()) {\n+                        opaqueValue += \"JList, \";\n+                    }\n@@ -65,0 +85,12 @@\n+                        opaqueValue += \"JTable, \";\n+                    }\n+                    if (tree.isOpaque()) {\n+                        opaqueValue += \"JTree, \";\n+                    }\n+                    if (toolTip.isOpaque()) {\n+                        opaqueValue += \"JToolTip, \";\n+                    }\n+                    if (viewport.isOpaque()) {\n+                        opaqueValue += \"JViewport, \";\n+                    }\n+                    if (!opaqueValue.equals(\" \")) {\n@@ -66,1 +98,2 @@\n-                                \"setUIProperty failed to clear JTable opaque\" +\n+                                \"setUIProperty failed to clear \" +\n+                                        opaqueValue +\" opaque\" +\n@@ -70,0 +103,1 @@\n+\n@@ -71,0 +105,5 @@\n+                    table.setOpaque(true);\n+                    tree.setOpaque(true);\n+                    toolTip.setOpaque(true);\n+                    viewport.setOpaque(true);\n+\n@@ -72,0 +111,7 @@\n+                    LookAndFeel.installProperty(table, \"opaque\", false);\n+                    LookAndFeel.installProperty(tree, \"opaque\", false);\n+                    LookAndFeel.installProperty(toolTip, \"opaque\", false);\n+                    LookAndFeel.installProperty(viewport, \"opaque\", false);\n+\n+                    opaqueValue = \" \";\n+\n@@ -73,3 +119,1 @@\n-                        throw new RuntimeException(\n-                                \"setUIProperty cleared the JList Opaque\" +\n-                                        \" when opaque is set by client\");\n+                        opaqueValue += \"JList\";\n@@ -77,3 +121,0 @@\n-\n-                    table.setOpaque(true);\n-                    LookAndFeel.installProperty(table, \"opaque\", false);\n@@ -81,0 +122,13 @@\n+                        opaqueValue += \"JTable\";\n+                    }\n+                    if (!tree.isOpaque()) {\n+                        opaqueValue += \"JTree\";\n+                    }\n+                    if (!toolTip.isOpaque()) {\n+                        opaqueValue += \"JToolTip\";\n+                    }\n+                    if (!viewport.isOpaque()) {\n+                        opaqueValue += \"JViewport\";\n+                    }\n+\n+                    if (!opaqueValue.equals(\" \")) {\n@@ -82,2 +136,2 @@\n-                                \"setUIProperty cleared the JTable Opaque\" +\n-                                \" when opaque is set by client\");\n+                                \"setUIProperty cleared the \" +opaqueValue +\n+                                \" Opaque when opaque is set by client\");\n@@ -85,0 +139,1 @@\n+\n","filename":"test\/jdk\/javax\/swing\/JList\/TestOpaqueListTable.java","additions":75,"deletions":20,"binary":false,"changes":95,"status":"modified"}]}