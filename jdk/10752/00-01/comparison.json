{"files":[{"patch":"@@ -0,0 +1,18 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug     7039014\n+ * @summary Confusing error message for method conflict\n+ * @author archiecobbs\n+ *\n+ * @compile\/fail\/ref=T7039014a.out -XDrawDiagnostics T7039014a.java\n+ *\/\n+public class T7039014a {\n+\n+    interface A<T> {\n+        byte m(String x);\n+        char m(T x);\n+    }\n+\n+    interface B extends A<String> {\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/7039014\/T7039014a.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T7039014a.java:16:5: compiler.err.incompatible.diff.ret.same.type: T7039014a.A<java.lang.String>, m, java.lang.String\n+1 error\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/7039014\/T7039014a.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,18 @@\n+\/*\n+ * @test \/nodynamiccopyright\/\n+ * @bug     7039014\n+ * @summary Confusing error message for method conflict\n+ * @author archiecobbs\n+ *\n+ * @compile\/fail\/ref=T7039014b.out -XDrawDiagnostics T7039014b.java\n+ *\/\n+public class T7039014b {\n+\n+    interface A<T> {\n+        default byte m(String x) { return 0; }\n+        char m(T x);\n+    }\n+\n+    interface B extends A<String> {\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/7039014\/T7039014b.java","additions":18,"deletions":0,"binary":false,"changes":18,"status":"added"},{"patch":"@@ -0,0 +1,2 @@\n+T7039014b.java:16:5: compiler.err.incompatible.diff.ret.same.type: T7039014b.A<java.lang.String>, m, java.lang.String\n+1 error\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/7039014\/T7039014b.out","additions":2,"deletions":0,"binary":false,"changes":2,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug     7039014\n+ * @summary Confusing error message for method conflict\n+ * @author archiecobbs\n+ *\/\n+public class T7039014c {\n+\n+    interface A<T> {\n+        private byte m(String x) { return 0; }\n+        char m(T x);\n+    }\n+\n+    interface B extends A<String> {\n+    }\n+\n+    \/\/ no conflict with private method\n+    public static void main(String[] args) {\n+    }\n+}\n","filename":"test\/langtools\/tools\/javac\/Diagnostics\/7039014\/T7039014c.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"}]}