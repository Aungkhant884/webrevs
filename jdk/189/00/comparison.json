{"files":[{"patch":"@@ -1007,19 +1007,9 @@\n-  for (int peel = 1; peel >= 0; peel--) {\n-    ldr(method_result, Address(scan_temp, itableOffsetEntry::interface_offset_in_bytes()));\n-    cmp(intf_klass, method_result);\n-\n-    if (peel) {\n-      br(Assembler::EQ, found_method);\n-    } else {\n-      br(Assembler::NE, search);\n-      \/\/ (invert the test to fall through to found_method...)\n-    }\n-\n-    if (!peel)  break;\n-\n-    bind(search);\n-\n-    \/\/ Check that the previous entry is non-null.  A null entry means that\n-    \/\/ the receiver class doesn't implement the interface, and wasn't the\n-    \/\/ same as when the caller was compiled.\n-    cbz(method_result, L_no_such_interface);\n+  ldr(method_result, Address(scan_temp, itableOffsetEntry::interface_offset_in_bytes()));\n+  cmp(intf_klass, method_result);\n+  br(Assembler::EQ, found_method);\n+  bind(search);\n+  \/\/ Check that the previous entry is non-null.  A null entry means that\n+  \/\/ the receiver class doesn't implement the interface, and wasn't the\n+  \/\/ same as when the caller was compiled.\n+  cbz(method_result, L_no_such_interface);\n+  if (itableOffsetEntry::interface_offset_in_bytes() != 0) {\n@@ -1027,0 +1017,3 @@\n+    ldr(method_result, Address(scan_temp, itableOffsetEntry::interface_offset_in_bytes()));\n+  } else {\n+    ldr(method_result, Address(pre(scan_temp, scan_step)));\n@@ -1028,0 +1021,2 @@\n+  cmp(intf_klass, method_result);\n+  br(Assembler::NE, search);\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":14,"deletions":19,"binary":false,"changes":33,"status":"modified"}]}