{"files":[{"patch":"@@ -34,0 +34,2 @@\n+import jdk.test.lib.ByteCodeLoader;\n+import jdk.test.lib.compiler.InMemoryJavaCompiler;\n@@ -94,3 +96,0 @@\n-    \/\/ Propagate test.src for the jar file.\n-    String testSrc= \"-Dtest.src=\" + System.getProperty(\"test.src\", \".\");\n-\n@@ -105,1 +104,1 @@\n-          testSrc, StressMetaSpace.class.getName());\n+          StressMetaSpace.class.getName());\n@@ -120,10 +119,0 @@\n-    private static URL[] urls = new URL[1];\n-\n-    static {\n-      try {\n-        File jarFile = new File(System.getProperty(\"test.src\") + \"\/testcases.jar\");\n-        urls[0] = jarFile.toURI().toURL();\n-      } catch (Exception e) {\n-        e.printStackTrace();\n-      }\n-    }\n@@ -132,5 +121,2 @@\n-      WhiteBox wb = WhiteBox.getWhiteBox();\n-      for(int i = 0; i < 10000; i++) {\n-        loadClass(wb);\n-      }\n-      wb.fullGC();\n+      loadManyClasses();\n+      WhiteBox.getWhiteBox().fullGC();\n@@ -139,1 +125,4 @@\n-    public static void loadClass(WhiteBox wb) {\n+    public static void loadManyClasses() {\n+      String className = \"Tmp\";\n+      String sourceCode = \"public class Tmp {}\";\n+      byte[] byteCode = InMemoryJavaCompiler.compile(className, sourceCode);\n@@ -141,2 +130,3 @@\n-        URLClassLoader ucl = new URLClassLoader(urls);\n-        Class.forName(\"case00\", false, ucl);\n+        for (int i = 0; i < 10000; i++) {\n+          ByteCodeLoader.load(className, byteCode);\n+        }\n","filename":"test\/hotspot\/jtreg\/gc\/logging\/TestMetaSpaceLog.java","additions":12,"deletions":22,"binary":false,"changes":34,"status":"modified"},{"filename":"test\/hotspot\/jtreg\/gc\/logging\/testcases.jar","binary":true,"status":"deleted"}]}