{"files":[{"patch":"@@ -144,1 +144,1 @@\n-  frame(intptr_t* sp, intptr_t* fp, address pc);\n+  frame(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler = false);\n@@ -150,1 +150,1 @@\n-  void init(intptr_t* sp, intptr_t* fp, address pc);\n+  void init(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler = false);\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-inline void frame::init(intptr_t* sp, intptr_t* fp, address pc) {\n+inline void frame::init(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler) {\n@@ -58,1 +58,1 @@\n-  _cb = CodeCache::find_blob(pc);\n+  _cb = CodeCache::find_blob(pc, forSignalHandler);\n@@ -71,2 +71,2 @@\n-inline frame::frame(intptr_t* sp, intptr_t* fp, address pc) {\n-  init(sp, fp, pc);\n+inline frame::frame(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler) {\n+  init(sp, fp, pc, forSignalHandler);\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -96,1 +96,1 @@\n-  frame(intptr_t* sp, intptr_t* fp, address pc);\n+  frame(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler = false);\n@@ -102,1 +102,1 @@\n-  void init(intptr_t* sp, intptr_t* fp, address pc);\n+  void init(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler = false);\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-inline void frame::init(intptr_t* sp, intptr_t* fp, address pc) {\n+inline void frame::init(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler) {\n@@ -50,1 +50,1 @@\n-  _cb = CodeCache::find_blob(pc);\n+  _cb = CodeCache::find_blob(pc, forSignalHandler);\n@@ -62,2 +62,2 @@\n-inline frame::frame(intptr_t* sp, intptr_t* fp, address pc) {\n-  init(sp, fp, pc);\n+inline frame::frame(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler) {\n+  init(sp, fp, pc, forSignalHandler);\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -378,1 +378,1 @@\n-  inline void find_codeblob_and_set_pc_and_deopt_state(address pc);\n+  inline void find_codeblob_and_set_pc_and_deopt_state(address pc, bool forSignalHandler = false);\n@@ -384,1 +384,1 @@\n-  inline frame(intptr_t* sp, address pc);\n+  inline frame(intptr_t* sp, address pc, bool forSignalHandler = false);\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-inline void frame::find_codeblob_and_set_pc_and_deopt_state(address pc) {\n+inline void frame::find_codeblob_and_set_pc_and_deopt_state(address pc, bool forSignalHandler) {\n@@ -39,1 +39,1 @@\n-  _cb = CodeCache::find_blob(pc);\n+  _cb = CodeCache::find_blob(pc, forSignalHandler);\n@@ -64,2 +64,2 @@\n-inline frame::frame(intptr_t* sp, address pc) : _sp(sp), _unextended_sp(sp) {\n-  find_codeblob_and_set_pc_and_deopt_state(pc); \/\/ also sets _fp and adjusts _unextended_sp\n+inline frame::frame(intptr_t* sp, address pc, bool forSignalHandler) : _sp(sp), _unextended_sp(sp) {\n+  find_codeblob_and_set_pc_and_deopt_state(pc, forSignalHandler); \/\/ also sets _fp and adjusts _unextended_sp\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -176,0 +176,2 @@\n+  frame(intptr_t* ptr_sp, intptr_t* ptr_fp, address pc, bool forSignalHandler = false);\n+\n@@ -180,1 +182,1 @@\n-  void init(intptr_t* ptr_sp, intptr_t* ptr_fp, address pc);\n+  void init(intptr_t* ptr_sp, intptr_t* ptr_fp, address pc, bool forSignalHandler = false);\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-inline void frame::init(intptr_t* ptr_sp, intptr_t* ptr_fp, address pc) {\n+inline void frame::init(intptr_t* ptr_sp, intptr_t* ptr_fp, address pc, bool forSignalHandler) {\n@@ -56,1 +56,1 @@\n-  _cb = CodeCache::find_blob(pc);\n+  _cb = CodeCache::find_blob(pc, forSignalHandler);\n@@ -68,2 +68,2 @@\n-inline frame::frame(intptr_t* ptr_sp, intptr_t* ptr_fp, address pc) {\n-  init(ptr_sp, ptr_fp, pc);\n+inline frame::frame(intptr_t* ptr_sp, intptr_t* ptr_fp, address pc, bool forSignalHandler) {\n+  init(ptr_sp, ptr_fp, pc, forSignalHandler);\n","filename":"src\/hotspot\/cpu\/riscv\/frame_riscv.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -463,1 +463,1 @@\n-  inline void find_codeblob_and_set_pc_and_deopt_state(address pc);\n+  inline void find_codeblob_and_set_pc_and_deopt_state(address pc, bool forSignalHandler = false);\n@@ -470,1 +470,1 @@\n-  inline frame(intptr_t* sp, address pc);\n+  inline frame(intptr_t* sp, address pc, bool forSignalHandler = false);\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-inline void frame::find_codeblob_and_set_pc_and_deopt_state(address pc) {\n+inline void frame::find_codeblob_and_set_pc_and_deopt_state(address pc, bool forSignalHandler) {\n@@ -38,1 +38,1 @@\n-  _cb = CodeCache::find_blob(pc);\n+  _cb = CodeCache::find_blob(pc, forSignalHandler);\n@@ -63,2 +63,2 @@\n-inline frame::frame(intptr_t* sp, address pc) : _sp(sp), _unextended_sp(sp) {\n-  find_codeblob_and_set_pc_and_deopt_state(pc); \/\/ Also sets _fp and adjusts _unextended_sp.\n+inline frame::frame(intptr_t* sp, address pc, bool forSignalHandler) : _sp(sp), _unextended_sp(sp) {\n+  find_codeblob_and_set_pc_and_deopt_state(pc, forSignalHandler); \/\/ Also sets _fp and adjusts _unextended_sp.\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -718,1 +718,1 @@\n-  init((intptr_t*)sp, (intptr_t*)fp, (address)pc);\n+  init((intptr_t*)sp, (intptr_t*)fp, (address)pc, CodeCache::find_blob((address)pc));\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -134,1 +134,1 @@\n-  frame(intptr_t* sp, intptr_t* fp, address pc);\n+  frame(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler = false);\n@@ -140,1 +140,1 @@\n-  void init(intptr_t* sp, intptr_t* fp, address pc);\n+  void init(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler = false);\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-inline void frame::init(intptr_t* sp, intptr_t* fp, address pc) {\n+inline void frame::init(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler) {\n@@ -51,1 +51,1 @@\n-  _cb = CodeCache::find_blob(pc);\n+  _cb = CodeCache::find_blob(pc, forSignalHandler);\n@@ -53,1 +53,0 @@\n-\n@@ -63,2 +62,2 @@\n-inline frame::frame(intptr_t* sp, intptr_t* fp, address pc) {\n-  init(sp, fp, pc);\n+inline frame::frame(intptr_t* sp, intptr_t* fp, address pc, bool forSignalHandler) {\n+  init(sp, fp, pc, forSignalHandler);\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.inline.hpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -43,2 +43,1 @@\n-\n-  return frame(sp, pc);\n+  return frame(sp, pc, cb, forSignalHandler);\n@@ -47,1 +46,1 @@\n-bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -52,1 +51,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -68,1 +67,1 @@\n-    frame ret_frame((intptr_t*)uc->uc_mcontext.jmp_context.gpr[1\/*REG_SP*\/], pc);\n+    frame ret_frame((intptr_t*)uc->uc_mcontext.jmp_context.gpr[1\/*REG_SP*\/], pc, forSignalHandler);\n@@ -112,1 +111,5 @@\n-  return pd_get_top_frame_for_profiling(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n+}\n+\n+bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext, bool isInJava) {\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/thread_aix_ppc.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -44,0 +44,4 @@\n+ private:\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext,\n+                                      bool isInJava, bool forSignalHandler = false);\n+\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/thread_aix_ppc.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -35,1 +35,1 @@\n-  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc(), forSignalHandler);\n@@ -45,1 +45,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -49,1 +49,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -52,1 +52,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -59,1 +59,1 @@\n-    *fr_addr = jt->pd_last_frame();\n+    *fr_addr = jt->pd_last_frame(forSignalHandler);\n@@ -77,1 +77,1 @@\n-    frame ret_frame(ret_sp, ret_fp, addr);\n+    frame ret_frame(ret_sp, ret_fp, addr, forSignalHandler);\n@@ -81,1 +81,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      frame ret_frame2(ret_sp, NULL, addr, forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/thread_bsd_aarch64.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -48,1 +48,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/thread_bsd_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -32,1 +32,1 @@\n-  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc(), forSignalHandler);\n@@ -40,1 +40,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -44,1 +44,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n@@ -47,1 +47,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -51,1 +51,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -69,1 +69,1 @@\n-    frame ret_frame(ret_sp, ret_fp, addr);\n+    frame ret_frame(ret_sp, ret_fp, addr, forSignalHandler);\n@@ -73,1 +73,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      frame ret_frame2(ret_sp, NULL, addr, forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/thread_bsd_x86.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -47,1 +47,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/thread_bsd_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -32,1 +32,1 @@\n-  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc(), forSignalHandler);\n@@ -43,1 +43,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -47,1 +47,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n@@ -50,1 +50,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -54,1 +54,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -72,1 +72,1 @@\n-    frame ret_frame(ret_sp, ret_fp, addr);\n+    frame ret_frame(ret_sp, ret_fp, addr, forSignalHandler);\n@@ -75,1 +75,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      frame ret_frame2(ret_sp, NULL, addr, forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/thread_linux_aarch64.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -47,1 +47,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/thread_linux_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -35,5 +35,3 @@\n-  if (_anchor.last_Java_pc() != NULL) {\n-    return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n-  } else {\n-    \/\/ This will pick up pc from sp\n-    return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp());\n+  address pc = _anchor.last_Java_pc();\n+  if (pc == NULL) {\n+    pc = (address)(_anchor.last_Java_sp()[-1]);\n@@ -41,0 +39,1 @@\n+  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), pc, forSignalHandler);\n@@ -68,1 +67,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -72,1 +71,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n@@ -75,1 +74,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -79,1 +78,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -103,1 +102,1 @@\n-    frame ret_frame(ret_sp, ret_fp, addr);\n+    frame ret_frame(ret_sp, ret_fp, addr, forSignalHandler);\n@@ -107,1 +106,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      frame ret_frame2(ret_sp, NULL, addr, forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/thread_linux_arm.cpp","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -62,1 +62,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/thread_linux_arm.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -44,1 +44,1 @@\n-  return frame(sp, pc);\n+  return frame(sp, pc, forSignalHandler);\n@@ -47,1 +47,1 @@\n-bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -52,1 +52,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -68,1 +68,1 @@\n-    frame ret_frame((intptr_t*)uc->uc_mcontext.regs->gpr[1\/*REG_SP*\/], pc);\n+    frame ret_frame((intptr_t*)uc->uc_mcontext.regs->gpr[1\/*REG_SP*\/], pc, forSignalHandler);\n@@ -112,1 +112,5 @@\n-  return pd_get_top_frame_for_profiling(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n+}\n+\n+bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext, bool isInJava) {\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/thread_linux_ppc.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -44,0 +44,3 @@\n+ private:\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n+\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/thread_linux_ppc.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -32,1 +32,1 @@\n-  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc(), forSignalHandler);\n@@ -41,1 +41,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -45,1 +45,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n@@ -48,1 +48,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -52,1 +52,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -70,1 +70,1 @@\n-    frame ret_frame(ret_sp, ret_fp, addr);\n+    frame ret_frame(ret_sp, ret_fp, addr, forSignalHandler);\n@@ -73,1 +73,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      frame ret_frame2(ret_sp, NULL, addr, forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/thread_linux_riscv.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -46,1 +46,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/thread_linux_riscv.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -44,1 +44,1 @@\n-  return frame(sp, pc);\n+  return frame(sp, pc, forSignalHandler);\n@@ -47,1 +47,1 @@\n-bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -52,1 +52,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -68,1 +68,1 @@\n-    frame ret_frame((intptr_t*)uc->uc_mcontext.gregs[15\/*Z_SP*\/], pc);\n+    frame ret_frame((intptr_t*)uc->uc_mcontext.gregs[15\/*Z_SP*\/], pc, forSignalHandler);\n@@ -136,1 +136,5 @@\n-  return pd_get_top_frame_for_profiling(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n+}\n+\n+bool JavaThread::pd_get_top_frame_for_profiling(frame* fr_addr, void* ucontext, bool isInJava) {\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/thread_linux_s390.cpp","additions":10,"deletions":6,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -43,0 +43,3 @@\n+ private:\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n+\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/thread_linux_s390.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -32,1 +32,1 @@\n-  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc(), forSignalHandler);\n@@ -41,1 +41,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -45,1 +45,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n@@ -48,1 +48,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -52,1 +52,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -70,1 +70,1 @@\n-    frame ret_frame(ret_sp, ret_fp, addr);\n+    frame ret_frame(ret_sp, ret_fp, addr, forSignalHandler);\n@@ -74,1 +74,1 @@\n-      frame ret_frame2(ret_sp, NULL, addr);\n+      frame ret_frame2(ret_sp, NULL, addr, forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/thread_linux_x86.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -45,1 +45,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/thread_linux_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,1 +30,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -33,1 +33,1 @@\n-  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  frame f = frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc(), forSignalHandler);\n@@ -44,1 +44,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -48,1 +48,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n@@ -51,1 +51,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -60,1 +60,1 @@\n-    *fr_addr = jt->pd_last_frame();\n+    *fr_addr = jt->pd_last_frame(forSignalHandler);\n@@ -77,1 +77,1 @@\n-      frame ret_frame2(ret_frame.sp(), NULL, ret_frame.pc());\n+      frame ret_frame2(ret_frame.sp(), NULL, ret_frame.pc(), forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/thread_windows_aarch64.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -46,1 +46,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/thread_windows_aarch64.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n-frame JavaThread::pd_last_frame() {\n+frame JavaThread::pd_last_frame(bool forSignalHandler) {\n@@ -32,1 +32,1 @@\n-  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc());\n+  return frame(_anchor.last_Java_sp(), _anchor.last_Java_fp(), _anchor.last_Java_pc(), forSignalHandler);\n@@ -41,1 +41,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, false);\n@@ -45,1 +45,1 @@\n-  return pd_get_top_frame(fr_addr, ucontext, isInJava);\n+  return pd_get_top_frame(fr_addr, ucontext, isInJava, true);\n@@ -48,1 +48,1 @@\n-bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava) {\n+bool JavaThread::pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler) {\n@@ -52,1 +52,1 @@\n-    *fr_addr = pd_last_frame();\n+    *fr_addr = pd_last_frame(forSignalHandler);\n@@ -69,1 +69,1 @@\n-      frame ret_frame2(ret_frame.sp(), NULL, ret_frame.pc());\n+      frame ret_frame2(ret_frame.sp(), NULL, ret_frame.pc(), forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/thread_windows_x86.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-  frame pd_last_frame();\n+  frame pd_last_frame(bool forSignalHandler = false);\n@@ -55,1 +55,1 @@\n-  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava);\n+  bool pd_get_top_frame(frame* fr_addr, void* ucontext, bool isInJava, bool forSignalHandler);\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/thread_windows_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -649,0 +649,15 @@\n+\/\/ Lookup that does not fail if you lookup a zombie method and for_signal_handler is true.\n+\/\/ Be aware that the returned blob can become a zombie at any time later, though!\n+CodeBlob* CodeCache::find_blob(void* pc, bool for_signal_handler) {\n+  if (!for_signal_handler) {\n+    return find_blob(pc);\n+  } else {\n+    CodeBlob* tmp = find_blob_unsafe(pc);\n+    if (tmp != NULL && tmp->is_zombie()) {\n+      \/\/ if the code blob appears to be non-entrant just ignore it\n+      tmp = NULL;\n+    }\n+    return tmp;\n+  }\n+}\n+\n","filename":"src\/hotspot\/share\/code\/codeCache.cpp","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -155,0 +155,1 @@\n+  static CodeBlob* find_blob(void* start, bool for_signal_handler); \/\/ Same as find_blob but does not fail if looking up a zombie method if for_signal_handler is true\n","filename":"src\/hotspot\/share\/code\/codeCache.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}