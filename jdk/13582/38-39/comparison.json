{"files":[{"patch":"@@ -149,1 +149,1 @@\n-  FallbackTableEntry* entry = head;\n+#ifdef ASSERT\n@@ -151,5 +151,2 @@\n-  while (entry != nullptr) {\n-    if (entry->_from == from || entry->_from == nullptr) {\n-      break;\n-    }\n-    entry = entry->_next;\n+  for (FallbackTableEntry* entry = head; entry != nullptr; entry = entry->_next) {\n+    assert(entry->_from != from,\"Don't re-forward entries into the fallback-table\");\n@@ -157,10 +154,7 @@\n-  if (entry == nullptr) {\n-    \/\/ No entry found, create new one and insert after head.\n-    FallbackTableEntry* new_entry = NEW_C_HEAP_OBJ(FallbackTableEntry, mtGC);\n-    *new_entry = *head;\n-    head->_next = new_entry;\n-    entry = head; \/\/ Set from and to fields below.\n-  }\n-  \/\/ Set from and to in new or found entry.\n-  entry->_from = from;\n-  entry->_to   = to;\n+#endif\n+  \/\/ No entry found, create new one and insert after head.\n+  FallbackTableEntry* new_entry = NEW_C_HEAP_OBJ(FallbackTableEntry, mtGC);\n+  *new_entry = *head;\n+  head->_next = new_entry;\n+  head->_from = from;\n+  head->_to   = to;\n","filename":"src\/hotspot\/share\/gc\/shared\/slidingForwarding.cpp","additions":10,"deletions":16,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-  HeapWord heap[16] = { nullptr };\n+  alignas(8 * sizeof(HeapWord*)) HeapWord heap[16] = { nullptr };\n@@ -62,1 +62,1 @@\n-  HeapWord heap[16] = { nullptr };\n+  alignas(8 * sizeof(HeapWord*)) HeapWord heap[16] = { nullptr };\n@@ -84,6 +84,9 @@\n-  HeapWord heap[16] = { nullptr };\n-  oop obj1 = cast_to_oop(&heap[14]);\n-  oop obj2 = cast_to_oop(&heap[2]);\n-  oop obj3 = cast_to_oop(&heap[4]);\n-  oop obj4 = cast_to_oop(&heap[10]);\n-  oop obj5 = cast_to_oop(&heap[12]);\n+  alignas(8 * sizeof(HeapWord*)) HeapWord heap[16] = { nullptr };\n+  oop s_obj1 = cast_to_oop(&heap[12]);\n+  oop s_obj2 = cast_to_oop(&heap[13]);\n+  oop s_obj3 = cast_to_oop(&heap[14]);\n+  oop s_obj4 = cast_to_oop(&heap[15]);\n+  oop t_obj1 = cast_to_oop(&heap[2]);\n+  oop t_obj2 = cast_to_oop(&heap[4]);\n+  oop t_obj3 = cast_to_oop(&heap[10]);\n+  oop t_obj4 = cast_to_oop(&heap[12]);\n@@ -91,1 +94,4 @@\n-  obj1->set_mark(markWord::prototype());\n+  s_obj1->set_mark(markWord::prototype());\n+  s_obj2->set_mark(markWord::prototype());\n+  s_obj3->set_mark(markWord::prototype());\n+  s_obj4->set_mark(markWord::prototype());\n@@ -94,3 +100,3 @@\n-  SlidingForwarding::forward_to(obj1, obj2);\n-  ASSERT_EQ(obj1->mark().value(), make_mark(0 \/* target_region *\/, 2 \/* offset *\/));\n-  ASSERT_EQ(SlidingForwarding::forwardee(obj1), obj2);\n+  SlidingForwarding::forward_to(s_obj1, t_obj1);\n+  ASSERT_EQ(s_obj1->mark().value(), make_mark(0 \/* target_region *\/, 2 \/* offset *\/));\n+  ASSERT_EQ(SlidingForwarding::forwardee(s_obj1), t_obj1);\n@@ -98,3 +104,3 @@\n-  SlidingForwarding::forward_to(obj1, obj3);\n-  ASSERT_EQ(obj1->mark().value(), make_mark(1 \/* target_region *\/, 0 \/* offset *\/));\n-  ASSERT_EQ(SlidingForwarding::forwardee(obj1), obj3);\n+  SlidingForwarding::forward_to(s_obj2, t_obj2);\n+  ASSERT_EQ(s_obj2->mark().value(), make_mark(1 \/* target_region *\/, 0 \/* offset *\/));\n+  ASSERT_EQ(SlidingForwarding::forwardee(s_obj2), t_obj2);\n@@ -102,3 +108,3 @@\n-  SlidingForwarding::forward_to(obj1, obj4);\n-  ASSERT_EQ(obj1->mark().value(), make_fallback());\n-  ASSERT_EQ(SlidingForwarding::forwardee(obj1), obj4);\n+  SlidingForwarding::forward_to(s_obj3, t_obj3);\n+  ASSERT_EQ(s_obj3->mark().value(), make_fallback());\n+  ASSERT_EQ(SlidingForwarding::forwardee(s_obj3), t_obj3);\n@@ -106,3 +112,3 @@\n-  SlidingForwarding::forward_to(obj1, obj5);\n-  ASSERT_EQ(obj1->mark().value(), make_fallback());\n-  ASSERT_EQ(SlidingForwarding::forwardee(obj1), obj5);\n+  SlidingForwarding::forward_to(s_obj4, t_obj4);\n+  ASSERT_EQ(s_obj4->mark().value(), make_fallback());\n+  ASSERT_EQ(SlidingForwarding::forwardee(s_obj4), t_obj4);\n","filename":"test\/hotspot\/gtest\/gc\/shared\/test_slidingForwarding.cpp","additions":27,"deletions":21,"binary":false,"changes":48,"status":"modified"}]}