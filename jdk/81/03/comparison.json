{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,0 @@\n-import java.net.*;\n-import java.io.*;\n-import java.util.*;\n@@ -41,0 +38,5 @@\n+    \/**\n+     * Constructor for subclasses to call.\n+     *\/\n+    protected Authenticator () { }\n+\n@@ -44,1 +46,9 @@\n-    public abstract static class Result {}\n+    public abstract static class Result {\n+\n+        \/**\n+         * Constructor for subclasses to call.\n+         *\/\n+        protected Result () {}\n+    }\n+\n+\n@@ -54,0 +64,6 @@\n+        \/**\n+         * Creates a {@code Failure} instance with given response code.\n+         *\n+         * @param responseCode The response code to associate with this\n+         *                     {@code Failure} instance\n+         *\/\n@@ -60,0 +76,2 @@\n+         *\n+         * @return The response code associated with this {@code Failure} instance\n@@ -74,0 +92,5 @@\n+        \/**\n+         * Creates a {@code Success} instance with given {@code Principal}.\n+         *\n+         * @param p The authenticated user you wish to set as Principal\n+         *\/\n@@ -79,0 +102,3 @@\n+         *\n+         * @return The {@code Principal} instance associated with the authenticated user\n+         *\n@@ -96,0 +122,6 @@\n+        \/**\n+         * Creates a {@code Retry} instance with given response code.\n+         *\n+         * @param responseCode The response code to associate with this\n+         *                     {@code Retry} instance\n+         *\/\n@@ -102,0 +134,2 @@\n+         *\n+         * @return The response code associated with this {@code Retry} instance\n@@ -123,0 +157,3 @@\n+     *\n+     * @param exch The HttpExchange upon which authenticate is called\n+     * @return The result\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Authenticator.java","additions":42,"deletions":5,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+    \/** The HTTP Basic authentication realm. *\/\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/BasicAuthenticator.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,0 +44,3 @@\n+    \/**\n+     * Constructor for subclasses to call.\n+     *\/\n@@ -58,0 +61,7 @@\n+        \/**\n+         * Creates a {@code Chain} instance with given filters and handler.\n+         *\n+         * @param filters The filters that make up the Chain\n+         * @param handler The HttpHandler that will be invoked after the final\n+         *                Filter has finished\n+         *\/\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Filter.java","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -68,0 +68,3 @@\n+       \/**\n+        * Creates an empty instance of Headers.\n+        *\/\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Headers.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,2 @@\n-import java.net.*;\n-import java.io.*;\n-import java.util.*;\n+import java.util.List;\n+import java.util.Map;\n@@ -45,0 +44,3 @@\n+    \/**\n+     * Constructor for subclasses to call.\n+     *\/\n@@ -81,0 +83,2 @@\n+     *\n+     * @return a map containing the attributes of this context\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpContext.java","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,6 +28,5 @@\n-import java.io.*;\n-import java.nio.*;\n-import java.nio.channels.*;\n-import java.net.*;\n-import javax.net.ssl.*;\n-import java.util.*;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.net.InetSocketAddress;\n+import java.net.URI;\n@@ -69,0 +68,3 @@\n+    \/**\n+     * Constructor for subclasses to call.\n+     *\/\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpExchange.java","additions":9,"deletions":7,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,3 +27,0 @@\n-import java.net.*;\n-import java.io.*;\n-import java.util.*;\n@@ -78,0 +75,2 @@\n+     *\n+     * @return The name of the user assoicated with this object\n@@ -85,0 +84,2 @@\n+     *\n+     * @return The realm associated with this object\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpPrincipal.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,8 +28,0 @@\n-import java.net.*;\n-import java.io.*;\n-import java.nio.*;\n-import java.security.*;\n-import java.nio.channels.*;\n-import java.util.*;\n-import java.util.concurrent.*;\n-import javax.net.ssl.*;\n@@ -38,0 +30,5 @@\n+import java.io.IOException;\n+import java.net.BindException;\n+import java.net.InetSocketAddress;\n+import java.util.concurrent.Executor;\n+\n@@ -101,0 +98,1 @@\n+     * Constructor for subclasses to call.\n@@ -109,1 +107,3 @@\n-     * @throws IOException\n+     *\n+     * @throws IOException if an I\/O error occurs\n+     * @return An instance of HttpServer\n@@ -130,1 +130,2 @@\n-     * @throws IOException\n+     * @throws IOException if an I\/O error occurs\n+     * @return An instance of HttpServer\n@@ -218,0 +219,1 @@\n+     * @return An instance of HttpContext\n@@ -242,0 +244,1 @@\n+     * @return An instance of HttpContext\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpServer.java","additions":14,"deletions":11,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -27,0 +27,1 @@\n+\n@@ -28,0 +29,1 @@\n+\n@@ -59,0 +61,3 @@\n+    \/**\n+     * Constructor for subclasses to call.\n+     *\/\n@@ -63,0 +68,2 @@\n+     *\n+     * @return HttpsConfigurator for this instance of HttpsParameters\n@@ -69,0 +76,2 @@\n+     *\n+     * @return Address of the remote client initiating the connection\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/HttpsParameters.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,3 @@\n+import com.sun.net.httpserver.HttpServer;\n+import com.sun.net.httpserver.HttpsServer;\n+\n@@ -29,1 +32,1 @@\n-import java.net.*;\n+import java.net.InetSocketAddress;\n@@ -33,1 +36,0 @@\n-import java.util.ServiceLoader;\n@@ -35,1 +37,1 @@\n-import com.sun.net.httpserver.*;\n+import java.util.ServiceLoader;\n@@ -53,0 +55,2 @@\n+     * @throws IOException if an I\/O error occurs\n+     * @return An instance of HttpServer\n@@ -66,0 +70,2 @@\n+     * @throws IOException if an I\/O error occurs\n+     * @return An instance of HttpServer\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/spi\/HttpServerProvider.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8251496\n+ * @summary Tests for methods in Authenticator\n+ * @run testng\/othervm AuthenticatorTest\n+ *\/\n+\n+import com.sun.net.httpserver.Authenticator;\n+import com.sun.net.httpserver.BasicAuthenticator;\n+import com.sun.net.httpserver.HttpPrincipal;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+\n+public class AuthenticatorTest {\n+    @Test\n+    public void testFailure() {\n+        var failureResult = new Authenticator.Failure(666);\n+        assertEquals(failureResult.getResponseCode(), 666);\n+    }\n+\n+    @Test\n+    public void testRetry() {\n+        var retryResult = new Authenticator.Retry(333);\n+        assertEquals(retryResult.getResponseCode(), 333);\n+    }\n+\n+    @Test\n+    public void TestSuccess() {\n+        var principal = new HttpPrincipal(\"test\", \"123\");\n+        var successResult = new Authenticator.Success(principal);\n+        assertEquals(successResult.getPrincipal(), principal);\n+        assertEquals(\"test\", principal.getName());\n+        assertEquals(\"123\", principal.getRealm());\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/AuthenticatorTest","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -0,0 +1,52 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8251496\n+ * @summary summary\n+ * @run testng\/othervm CreateHttpServerTest\n+ *\/\n+\n+import com.sun.net.httpserver.HttpServer;\n+import org.testng.annotations.Test;\n+\n+import java.io.IOException;\n+import java.net.InetAddress;\n+import java.net.InetSocketAddress;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+public class CreateHttpServerTest {\n+    @Test\n+    public void TestCreate() throws IOException {\n+        var server = HttpServer.create();\n+        assertTrue(server instanceof HttpServer);\n+    }\n+    @Test\n+    public void TestCreateWithParameters() throws IOException {\n+        var addr = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n+        var server = HttpServer.create(addr, 123);\n+        assertTrue(server instanceof HttpServer);\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/CreateHttpServerTest.java","additions":52,"deletions":0,"binary":false,"changes":52,"status":"added"},{"patch":"@@ -0,0 +1,43 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8251496\n+ * @summary Tests for methods in Headers class\n+ * @run testng\/othervm HeadersTest\n+ *\/\n+\n+import com.sun.net.httpserver.Headers;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+public class HeadersTest {\n+\n+    @Test\n+    public void TestDefaultConstructor() {\n+        var headers = new Headers();\n+        assertTrue(headers.isEmpty());\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HeadersTest.java","additions":43,"deletions":0,"binary":false,"changes":43,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8251496\n+ * @summary Tests for methods in HttpPrincipal\n+ * @run testng\/othervm HttpPrincipalTest\n+ *\/\n+\n+import com.sun.net.httpserver.HttpPrincipal;\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertEquals;\n+\n+public class HttpPrincipalTest {\n+\n+    @Test\n+    public void TestGetters() {\n+        var principal = new HttpPrincipal(\"test\", \"123\");\n+        assertEquals(principal.getUsername(), \"test\");\n+        assertEquals(principal.getRealm(), \"123\");\n+    }\n+}\n","filename":"test\/jdk\/com\/sun\/net\/httpserver\/HttpPrincipalTest.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"}]}