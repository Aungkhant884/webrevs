{"files":[{"patch":"@@ -129,1 +129,1 @@\n-\/\/ bits(M*N) Replicate(bits(M) x, integer N);\n+\/\/ bits(M*N) Replicate(bits(M) B, integer N);\n@@ -171,2 +171,2 @@\n-\/\/ replicates a derived bit string of width 2^k into a 64 bit result\n-\/\/ and returns 1.\n+\/\/ replicates a derived bit string, whose width is a power of 2, into\n+\/\/ a 64 bit result and returns 1.\n@@ -178,1 +178,1 @@\n-\/\/    1) the size of the bit field (2^k) to be replicated\n+\/\/    1) the size, 2^k, of the bit string to be replicated (0 < k <= 6)\n@@ -180,1 +180,2 @@\n-\/\/    2) how many bits to set in that field, starting from bit 0\n+\/\/    2) the number of bits, p, to set in the string, starting with\n+\/\/       bit 0 (0 < p < 2^k)\n@@ -182,1 +183,2 @@\n-\/\/ - immr defines a right rotation on the 2^k bit field\n+\/\/ - immr defines a right rotation of the resulting p bits in the 2^k\n+\/\/   bit string\n@@ -184,3 +186,1 @@\n-\/\/ example:\n-\/\/\n-\/\/ valid outputs will look like:\n+\/\/ bit field construction:\n@@ -188,1 +188,1 @@\n-\/\/   11001111_11001111_11001111_11001111_11001111_11001111_11001111_11001111\n+\/\/ create a bit string of width 2^k\n@@ -190,1 +190,1 @@\n-\/\/ which corresponds to the inputs\n+\/\/ set the bottom p bits to 1\n@@ -192,1 +192,1 @@\n-\/\/   immN = 0, imms = 110101, immr = 000010\n+\/\/ rotate the bit string right by immr bits\n@@ -194,1 +194,1 @@\n-\/\/ For these inputs k = 3,  2^k = 8, set bits = 6, rotation = 2\n+\/\/ replicate the 2^k bit string into 64 bits\n@@ -209,1 +209,1 @@\n-\/\/ if k == 0 the fail and return 0. It is not possible to construct a\n+\/\/ if k == 0 then fail and return 0. It is not possible to construct a\n@@ -212,3 +212,2 @@\n-\/\/ If imms == all 1s (modulo 2^k) then fail and return 0.  Note that\n-\/\/ this means that 0 <= imms < 2^k - 1, i.e. 0 < imms + 1 < 2^k. This\n-\/\/ ensures that an all 0s or all 1s bit pattern is never generated.\n+\/\/ If imms == all 1s (modulo 2^k) then fail and return 0. Note that\n+\/\/ this means that 0 <= imms < 2^k - 1\n@@ -216,1 +215,2 @@\n-\/\/ bit field construction:\n+\/\/ set p = imms + 1. Consequently, 0 < p < 2^k, ensuring that\n+\/\/ an all 0s or all 1s bit pattern is never generated.\n@@ -218,1 +218,1 @@\n-\/\/ create a bit string of width 2^k setting the low imms+1 1s bits\n+\/\/ example output:\n@@ -220,1 +220,1 @@\n-\/\/ rotate the bit string right by immr bits\n+\/\/   11001111_11001111_11001111_11001111_11001111_11001111_11001111_11001111\n@@ -222,1 +222,5 @@\n-\/\/ replicate the 2^k bit string into 64 bits\n+\/\/ which corresponds to the inputs\n+\/\/\n+\/\/   immN = 0, imms = 110101, immr = 000010\n+\/\/\n+\/\/ For these inputs k = 3,  2^k = 8, p = 6, rotation = 2\n@@ -226,1 +230,1 @@\n-\/\/ For hysterical reasons the implementation of this function is much\n+\/\/ For historical reasons the implementation of this function is much\n","filename":"src\/hotspot\/cpu\/aarch64\/immediate_aarch64.cpp","additions":26,"deletions":22,"binary":false,"changes":48,"status":"modified"}]}