{"files":[{"patch":"@@ -180,2 +180,1 @@\n-\/\/    2) the number of bits, p, to set in the string, starting with\n-\/\/       bit 0 (0 < p < 2^k)\n+\/\/    2) the number of bits, p, to set in the string (0 < p < 2^k)\n@@ -183,2 +182,2 @@\n-\/\/ - immr defines a right rotation of the resulting p bits in the 2^k\n-\/\/   bit string\n+\/\/ - immr defines a right rotation on the bit string determined by\n+\/\/   immN and imms\n@@ -196,1 +195,1 @@\n-\/\/ validity checks:\n+\/\/ derivation of k and p and validity checks:\n@@ -209,2 +208,2 @@\n-\/\/ if k == 0 then fail and return 0. It is not possible to construct a\n-\/\/ mask from an zero width bit string.\n+\/\/ if k == 0 then fail and return 0. Note that this means that\n+\/\/ 2^k > 1 or equivalently 2^k - 1 > 0\n@@ -215,2 +214,2 @@\n-\/\/ set p = imms + 1. Consequently, 0 < p < 2^k, ensuring that\n-\/\/ an all 0s or all 1s bit pattern is never generated.\n+\/\/ set p = imms + 1. Consequently, 0 < p < 2^k which is the condition\n+\/\/ that an all 0s or all 1s bit pattern is never generated.\n","filename":"src\/hotspot\/cpu\/aarch64\/immediate_aarch64.cpp","additions":8,"deletions":9,"binary":false,"changes":17,"status":"modified"}]}