{"files":[{"patch":"@@ -35,1 +35,3 @@\n-  intptr_t* sp = Atomic::load_acquire(&_anchor._last_Java_sp);\n+  \/\/ Only called by current thread or when the thread is suspended.\n+  \/\/ No memory barrier needed, here. Only writer must write sp last (for use by profiler).\n+  intptr_t* sp = last_Java_sp();\n@@ -46,1 +48,1 @@\n-    intptr_t* sp = Atomic::load_acquire(&_anchor._last_Java_sp);\n+    intptr_t* sp = last_Java_sp();\n@@ -49,1 +51,1 @@\n-    \/\/ Simply discard the sample in this rare case.\n+    \/\/ Simply discard the sample in this very rare case.\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/javaThread_aix_ppc.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,3 @@\n-  intptr_t* sp = Atomic::load_acquire(&_anchor._last_Java_sp);\n+  \/\/ Only called by current thread or when the thread is suspended.\n+  \/\/ No memory barrier needed, here. Only writer must write sp last (for use by profiler).\n+  intptr_t* sp = last_Java_sp();\n@@ -45,1 +47,1 @@\n-    intptr_t* sp = Atomic::load_acquire(&_anchor._last_Java_sp);\n+    intptr_t* sp = last_Java_sp();\n@@ -48,1 +50,1 @@\n-    \/\/ Simply discard the sample in this rare case.\n+    \/\/ Simply discard the sample in this very rare case.\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/javaThread_linux_ppc.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"}]}