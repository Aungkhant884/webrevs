{"files":[{"patch":"@@ -72,0 +72,7 @@\n+  # Note: UTIL_ARG_WITH treats empty strings as valid values when OPTIONAL is false!\n+  # That said, it allows for using the RESULT of an option as its own DEFAULT, which\n+  # is pretty convenient...\n+\n+  # Outer [ ] to quote m4.\n+  [ USERNAME=`$ECHO \"$USER\" | $TR -d -c '[a-z][A-Z][0-9]'` ]\n+\n@@ -73,10 +80,9 @@\n-  AC_ARG_WITH([build-user], [AS_HELP_STRING([--with-build-user],\n-      [build username to use in version strings])])\n-  if test \"x$with_build_user\" = xyes || test \"x$with_build_user\" = xno; then\n-    AC_MSG_ERROR([--with-build-user must have a value])\n-  elif test \"x$with_build_user\" != x; then\n-    USERNAME=\"$with_build_user\"\n-  else\n-    # Outer [ ] to quote m4.\n-    [ USERNAME=`$ECHO \"$USER\" | $TR -d -c '[a-z][A-Z][0-9]'` ]\n-  fi\n+  UTIL_ARG_WITH(NAME: build-user, TYPE: string,\n+    RESULT: USERNAME,\n+    DEFAULT: $USERNAME,\n+    DESC: [build username to use in version strings],\n+    IF_GIVEN: [\n+      if test \"x$USERNAME\" = x; then\n+        AC_MSG_ERROR([--with-build-user cannot be empty])\n+      fi\n+    ])\n@@ -86,14 +92,12 @@\n-  AC_ARG_WITH(jdk-rc-name, [AS_HELP_STRING([--with-jdk-rc-name],\n-      [Set JDK RC name. This is used for FileDescription and ProductName properties\n-       of MS Windows binaries. @<:@not specified@:>@])])\n-  if test \"x$with_jdk_rc_name\" = xyes || test \"x$with_jdk_rc_name\" = xno; then\n-    AC_MSG_ERROR([--with-jdk-rc-name must have a value])\n-  elif [ ! [[ $with_jdk_rc_name =~ ^[[:print:]]*$ ]] ]; then\n-    AC_MSG_ERROR([--with-jdk-rc-name contains non-printing characters: $with_jdk_rc_name])\n-  elif test \"x$with_jdk_rc_name\" != x; then\n-    # Set JDK_RC_NAME to a custom value if '--with-jdk-rc-name' was used and is not empty.\n-    JDK_RC_NAME=\"$with_jdk_rc_name\"\n-  else\n-    # Otherwise calculate from \"branding.conf\" included above.\n-    JDK_RC_NAME=\"$PRODUCT_NAME $JDK_RC_PLATFORM_NAME\"\n-  fi\n+  # Otherwise calculate from \"branding.conf\" included above.\n+  UTIL_ARG_WITH(NAME: jdk-rc-name, TYPE: string,\n+    DEFAULT: [$PRODUCT_NAME $JDK_RC_PLATFORM_NAME],\n+    DESC: [Set JDK RC name. This is used for FileDescription and ProductName\n+       properties of MS Windows binaries. @<:@not specified@:>@],\n+    IF_GIVEN: [\n+      if test \"x$JDK_RC_NAME\" = x; then\n+        AC_MSG_ERROR([--with-jdk-rc-name cannot be empty])\n+      elif [ ! [[ $JDK_RC_NAME =~ ^[[:print:]]*$ ]] ]; then\n+        AC_MSG_ERROR([--with-jdk-rc-name contains non-printing characters: $JDK_RC_NAME])\n+      fi\n+    ])\n@@ -118,11 +122,12 @@\n-  AC_ARG_WITH(vendor-url, [AS_HELP_STRING([--with-vendor-url],\n-      [Set the 'java.vendor.url' system property @<:@not specified@:>@])])\n-  if test \"x$with_vendor_url\" = xyes || test \"x$with_vendor_url\" = xno; then\n-    AC_MSG_ERROR([--with-vendor-url must have a value])\n-  elif [ ! [[ $with_vendor_url =~ ^[[:print:]]*$ ]] ]; then\n-    AC_MSG_ERROR([--with-vendor-url contains non-printing characters: $with_vendor_url])\n-  elif test \"x$with_vendor_url\" != x; then\n-    # Only set VENDOR_URL if '--with-vendor-url' was used and is not empty.\n-    # Otherwise we will use the value from \"branding.conf\" included above.\n-    VENDOR_URL=\"$with_vendor_url\"\n-  fi\n+  # Only set VENDOR_URL if '--with-vendor-url' was used and is not empty.\n+  # Otherwise we will use the value from \"branding.conf\" included above.\n+  UTIL_ARG_WITH(NAME: vendor-url, TYPE: string,\n+    DEFAULT: $VENDOR_URL,\n+    DESC: [Set the 'java.vendor.url' system property @<:@not specified@:>@],\n+    IF_GIVEN: [\n+      if test \"x$VENDOR_URL\" = x; then\n+        AC_MSG_ERROR([--with-vendor-url must have a value])\n+      elif [ ! [[ $VENDOR_URL =~ ^[[:print:]]*$ ]] ]; then\n+        AC_MSG_ERROR([--with-vendor-url contains non-printing characters: $VENDOR_URL])\n+      fi\n+    ])\n@@ -132,11 +137,13 @@\n-  AC_ARG_WITH(vendor-bug-url, [AS_HELP_STRING([--with-vendor-bug-url],\n-      [Set the 'java.vendor.url.bug' system property @<:@not specified@:>@])])\n-  if test \"x$with_vendor_bug_url\" = xyes || test \"x$with_vendor_bug_url\" = xno; then\n-    AC_MSG_ERROR([--with-vendor-bug-url must have a value])\n-  elif [ ! [[ $with_vendor_bug_url =~ ^[[:print:]]*$ ]] ]; then\n-    AC_MSG_ERROR([--with-vendor-bug-url contains non-printing characters: $with_vendor_bug_url])\n-  elif test \"x$with_vendor_bug_url\" != x; then\n-    # Only set VENDOR_URL_BUG if '--with-vendor-bug-url' was used and is not empty.\n-    # Otherwise we will use the value from \"branding.conf\" included above.\n-    VENDOR_URL_BUG=\"$with_vendor_bug_url\"\n-  fi\n+  # Only set VENDOR_URL_BUG if '--with-vendor-bug-url' was used and is not empty.\n+  # Otherwise we will use the value from \"branding.conf\" included above.\n+  UTIL_ARG_WITH(NAME: vendor-bug-url, TYPE: string,\n+    RESULT: VENDOR_URL_BUG,\n+    DEFAULT: $VENDOR_URL_BUG,\n+    DESC: [Set the 'java.vendor.url.bug' system property @<:@not specified@:>@],\n+    IF_GIVEN: [\n+      if test \"x$VENDOR_URL_BUG\" = x; then\n+        AC_MSG_ERROR([--with-vendor-bug-url must have a value])\n+      elif [ ! [[ $VENDOR_URL_BUG =~ ^[[:print:]]*$ ]] ]; then\n+        AC_MSG_ERROR([--with-vendor-bug-url contains non-printing characters: $VENDOR_URL_BUG])\n+      fi\n+    ])\n@@ -146,11 +153,13 @@\n-  AC_ARG_WITH(vendor-vm-bug-url, [AS_HELP_STRING([--with-vendor-vm-bug-url],\n-      [Sets the bug URL which will be displayed when the VM crashes @<:@not specified@:>@])])\n-  if test \"x$with_vendor_vm_bug_url\" = xyes || test \"x$with_vendor_vm_bug_url\" = xno; then\n-    AC_MSG_ERROR([--with-vendor-vm-bug-url must have a value])\n-  elif [ ! [[ $with_vendor_vm_bug_url =~ ^[[:print:]]*$ ]] ]; then\n-    AC_MSG_ERROR([--with-vendor-vm-bug-url contains non-printing characters: $with_vendor_vm_bug_url])\n-  elif test \"x$with_vendor_vm_bug_url\" != x; then\n-    # Only set VENDOR_URL_VM_BUG if '--with-vendor-vm-bug-url' was used and is not empty.\n-    # Otherwise we will use the value from \"branding.conf\" included above.\n-    VENDOR_URL_VM_BUG=\"$with_vendor_vm_bug_url\"\n-  fi\n+  # Only set VENDOR_URL_VM_BUG if '--with-vendor-vm-bug-url' was used and is not empty.\n+  # Otherwise we will use the value from \"branding.conf\" included above.\n+  UTIL_ARG_WITH(NAME: vendor-vm-bug-url, TYPE: string,\n+    RESULT: VENDOR_URL_VM_BUG,\n+    DEFAULT: $VENDOR_URL_VM_BUG,\n+    DESC: [Sets the bug URL which will be displayed when the VM crashes @<:@not specified@:>@],\n+    IF_GIVEN: [\n+      if test \"x$VENDOR_URL_VM_BUG\" = x; then\n+        AC_MSG_ERROR([--with-vendor-vm-bug-url must have a value])\n+      elif [ ! [[ $VENDOR_URL_VM_BUG =~ ^[[:print:]]*$ ]] ]; then\n+        AC_MSG_ERROR([--with-vendor-vm-bug-url contains non-printing characters: $VENDOR_URL_VM_BUG])\n+      fi\n+    ])\n@@ -163,5 +172,5 @@\n-  AC_ARG_WITH(version-string, [AS_HELP_STRING([--with-version-string],\n-      [Set version string @<:@calculated@:>@])])\n-  if test \"x$with_version_string\" = xyes || test \"x$with_version_string\" = xno; then\n-    AC_MSG_ERROR([--with-version-string must have a value])\n-  elif test \"x$with_version_string\" != x; then\n+  UTIL_ARG_WITH(NAME: version-string, TYPE: string,\n+    DEFAULT: [],\n+    DESC: [Set version string @<:@calculated@:>@])\n+\n+  if test \"x$VERSION_STRING\" != x; then\n@@ -169,1 +178,1 @@\n-    if [ [[ $with_version_string =~ ^([0-9]+)(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(-([a-zA-Z0-9]+))?(((\\+)([0-9]*))?(-([-a-zA-Z0-9.]+))?)?$ ]] ]; then\n+    if [ [[ $VERSION_STRING =~ ^([0-9]+)(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(\\.([0-9]+))?(-([a-zA-Z0-9]+))?(((\\+)([0-9]*))?(-([-a-zA-Z0-9.]+))?)?$ ]] ]; then\n@@ -212,1 +221,1 @@\n-      AC_MSG_ERROR([--with-version-string fails to parse as a valid version string: $with_version_string])\n+      AC_MSG_ERROR([--with-version-string fails to parse as a valid version string: $VERSION_STRING])\n@@ -293,15 +302,3 @@\n-  AC_ARG_WITH(version-feature, [AS_HELP_STRING([--with-version-feature],\n-      [Set version 'FEATURE' field (first number) @<:@current source value@:>@])],\n-      [with_version_feature_present=true], [with_version_feature_present=false])\n-\n-  if test \"x$with_version_feature_present\" = xtrue; then\n-    if test \"x$with_version_feature\" = xyes || test \"x$with_version_feature\" = xno; then\n-      AC_MSG_ERROR([--with-version-feature must have a value])\n-    else\n-      JDKVER_CHECK_AND_SET_NUMBER(VERSION_FEATURE, $with_version_feature)\n-    fi\n-  else\n-    if test \"x$NO_DEFAULT_VERSION_PARTS\" != xtrue; then\n-      # Default is to get value from version-numbers.conf\n-      VERSION_FEATURE=\"$DEFAULT_VERSION_FEATURE\"\n-    fi\n+  if test \"x$NO_DEFAULT_VERSION_PARTS\" != xtrue; then\n+    # Default is to get value from version-numbers.conf\n+    VERSION_FEATURE=\"$DEFAULT_VERSION_FEATURE\"\n@@ -310,0 +307,8 @@\n+  # VERSION_FEATURE is used as its own DEFAULT instead of DEFAULT_VERSION_FEATURE since\n+  # the former may already be set to a value different from the latter by the options\n+  # above\n+  UTIL_ARG_WITH(NAME: version-feature, TYPE: string,\n+    DEFAULT: $VERSION_FEATURE,\n+    DESC: [Set version 'FEATURE' field (first number) @<:@current source value@:>@])\n+  JDKVER_CHECK_AND_SET_NUMBER(VERSION_FEATURE, $VERSION_FEATURE)\n+\n@@ -483,13 +488,11 @@\n-  AC_ARG_WITH(version-date, [AS_HELP_STRING([--with-version-date],\n-      [Set version date @<:@current source value@:>@])])\n-  if test \"x$with_version_date\" = xyes || test \"x$with_version_date\" = xno; then\n-    AC_MSG_ERROR([--with-version-date must have a value])\n-  elif test \"x$with_version_date\" != x; then\n-    if [ ! [[ $with_version_date =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]] ]; then\n-      AC_MSG_ERROR([\"$with_version_date\" is not a valid version date])\n-    else\n-      VERSION_DATE=\"$with_version_date\"\n-    fi\n-  else\n-    VERSION_DATE=\"$DEFAULT_VERSION_DATE\"\n-  fi\n+  UTIL_ARG_WITH(NAME: version-date, TYPE: string,\n+    RESULT: VERSION_DATE,\n+    DEFAULT: $DEFAULT_VERSION_DATE,\n+    DESC: [Set version date @<:@current source value@:>@],\n+    IF_GIVEN: [\n+      if test \"x$VERSION_DATE\" = x; then\n+        AC_MSG_ERROR([--with-version-date cannot be empty])\n+      elif [ ! [[ $VERSION_DATE =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]] ]; then\n+        AC_MSG_ERROR([\"$VERSION_DATE\" is not a valid version date])\n+      fi\n+    ])\n@@ -498,11 +501,12 @@\n-  AC_ARG_WITH(vendor-version-string, [AS_HELP_STRING([--with-vendor-version-string],\n-      [Set vendor version string @<:@not specified@:>@])])\n-  if test \"x$with_vendor_version_string\" = xyes; then\n-    AC_MSG_ERROR([--with-vendor-version-string must have a value])\n-  elif [ ! [[ $with_vendor_version_string =~ ^[[:graph:]]*$ ]] ]; then\n-    AC_MSG_ERROR([--with--vendor-version-string contains non-graphical characters: $with_vendor_version_string])\n-  elif test \"x$with_vendor_version_string\" != xno; then\n-    # Set vendor version string if --without is not passed\n-    # Check not required if an empty value is passed, since VENDOR_VERSION_STRING\n-    # would then be set to \"\"\n-    VENDOR_VERSION_STRING=\"$with_vendor_version_string\"\n+  # DEFAULT is set to an empty string in the case of --with-vendor-version-string without\n+  # any value, which would set VENDOR_VERSION_STRING_ENABLED to true and ultimately also\n+  # cause VENDOR_VERSION_STRING to fall back to the value in DEFAULT\n+  UTIL_ARG_WITH(NAME: vendor-version-string, TYPE: string,\n+    DEFAULT: [],\n+    OPTIONAL: true,\n+    DESC: [Set vendor version string @<:@not specified@:>@])\n+\n+  if test \"x$VENDOR_VERSION_STRING_ENABLED\" = xtrue; then\n+    if [ ! [[ $VENDOR_VERSION_STRING =~ ^[[:graph:]]*$ ]] ]; then\n+      AC_MSG_ERROR([--with--vendor-version-string contains non-graphical characters: $VENDOR_VERSION_STRING])\n+    fi\n@@ -512,11 +516,11 @@\n-  AC_ARG_WITH(macosx-bundle-name-base, [AS_HELP_STRING([--with-macosx-bundle-name-base],\n-      [Set the MacOSX Bundle Name base. This is the base name for calculating MacOSX Bundle Names.\n-      @<:@not specified@:>@])])\n-  if test \"x$with_macosx_bundle_name_base\" = xyes || test \"x$with_macosx_bundle_name_base\" = xno; then\n-    AC_MSG_ERROR([--with-macosx-bundle-name-base must have a value])\n-  elif [ ! [[ $with_macosx_bundle_name_base =~ ^[[:print:]]*$ ]] ]; then\n-    AC_MSG_ERROR([--with-macosx-bundle-name-base contains non-printing characters: $with_macosx_bundle_name_base])\n-  elif test \"x$with_macosx_bundle_name_base\" != x; then\n-    # Set MACOSX_BUNDLE_NAME_BASE to the configured value.\n-    MACOSX_BUNDLE_NAME_BASE=\"$with_macosx_bundle_name_base\"\n-  fi\n+  UTIL_ARG_WITH(NAME: macosx-bundle-name-base, TYPE: string,\n+    DEFAULT: $MACOSX_BUNDLE_NAME_BASE,\n+    DESC: [Set the MacOSX Bundle Name base. This is the base name for calculating MacOSX Bundle Names.\n+      @<:@not specified@:>@],\n+    IF_GIVEN: [\n+      if test \"x$MACOSX_BUNDLE_NAME_BASE\" = x; then\n+        AC_MSG_ERROR([--with-macosx-bundle-name-base must have a value])\n+      elif [ ! [[ $MACOSX_BUNDLE_NAME_BASE =~ ^[[:print:]]*$ ]] ]; then\n+        AC_MSG_ERROR([--with-macosx-bundle-name-base contains non-printing characters: $MACOSX_BUNDLE_NAME_BASE])\n+      fi\n+    ])\n@@ -525,17 +529,4 @@\n-  # Set the MACOSX Bundle ID base\n-  AC_ARG_WITH(macosx-bundle-id-base, [AS_HELP_STRING([--with-macosx-bundle-id-base],\n-      [Set the MacOSX Bundle ID base. This is the base ID for calculating MacOSX Bundle IDs.\n-      @<:@not specified@:>@])])\n-  if test \"x$with_macosx_bundle_id_base\" = xyes || test \"x$with_macosx_bundle_id_base\" = xno; then\n-    AC_MSG_ERROR([--with-macosx-bundle-id-base must have a value])\n-  elif [ ! [[ $with_macosx_bundle_id_base =~ ^[[:print:]]*$ ]] ]; then\n-    AC_MSG_ERROR([--with-macosx-bundle-id-base contains non-printing characters: $with_macosx_bundle_id_base])\n-  elif test \"x$with_macosx_bundle_id_base\" != x; then\n-    # Set MACOSX_BUNDLE_ID_BASE to the configured value.\n-    MACOSX_BUNDLE_ID_BASE=\"$with_macosx_bundle_id_base\"\n-  else\n-    # If using the default value, append the VERSION_PRE if there is one\n-    # to make it possible to tell official builds apart from developer builds\n-    if test \"x$VERSION_PRE\" != x; then\n-      MACOSX_BUNDLE_ID_BASE=\"$MACOSX_BUNDLE_ID_BASE-$VERSION_PRE\"\n-    fi\n+  # If using the default value, append the VERSION_PRE if there is one\n+  # to make it possible to tell official builds apart from developer builds\n+  if test \"x$VERSION_PRE\" != x; then\n+    MACOSX_BUNDLE_ID_BASE=\"$MACOSX_BUNDLE_ID_BASE-$VERSION_PRE\"\n@@ -543,0 +534,13 @@\n+\n+  # Set the MACOSX Bundle ID base\n+  UTIL_ARG_WITH(NAME: macosx-bundle-id-base, TYPE: string,\n+    DEFAULT: $MACOSX_BUNDLE_ID_BASE,\n+    DESC: [Set the MacOSX Bundle ID base. This is the base ID for calculating MacOSX Bundle IDs.\n+      @<:@not specified@:>@],\n+    IF_GIVEN: [\n+      if test \"x$MACOSX_BUNDLE_ID_BASE\" = x; then\n+        AC_MSG_ERROR([--with-macosx-bundle-id-base must have a value])\n+      elif [ ! [[ $MACOSX_BUNDLE_ID_BASE =~ ^[[:print:]]*$ ]] ]; then\n+        AC_MSG_ERROR([--with-macosx-bundle-id-base contains non-printing characters: $MACOSX_BUNDLE_ID_BASE])\n+      fi\n+    ])\n@@ -545,11 +549,2 @@\n-  # Set the MACOSX CFBundleVersion field\n-  AC_ARG_WITH(macosx-bundle-build-version, [AS_HELP_STRING([--with-macosx-bundle-build-version],\n-      [Set the MacOSX Bundle CFBundleVersion field. This key is a machine-readable\n-      string composed of one to three period-separated integers and should represent the\n-      build version. Defaults to the build number.])])\n-  if test \"x$with_macosx_bundle_build_version\" = xyes || test \"x$with_macosx_bundle_build_version\" = xno; then\n-    AC_MSG_ERROR([--with-macosx-bundle-build-version must have a value])\n-  elif [ ! [[ $with_macosx_bundle_build_version =~ ^[0-9\\.]*$ ]] ]; then\n-    AC_MSG_ERROR([--with-macosx-bundle-build-version contains non numbers and periods: $with_macosx_bundle_build_version])\n-  elif test \"x$with_macosx_bundle_build_version\" != x; then\n-    MACOSX_BUNDLE_BUILD_VERSION=\"$with_macosx_bundle_build_version\"\n+  if test \"x$VERSION_BUILD\" != x; then\n+    MACOSX_BUNDLE_BUILD_VERSION=\"$VERSION_BUILD\"\n@@ -557,5 +552,2 @@\n-    if test \"x$VERSION_BUILD\" != x; then\n-      MACOSX_BUNDLE_BUILD_VERSION=\"$VERSION_BUILD\"\n-    else\n-      MACOSX_BUNDLE_BUILD_VERSION=0\n-    fi\n+    MACOSX_BUNDLE_BUILD_VERSION=0\n+  fi\n@@ -563,4 +555,3 @@\n-    # If VERSION_OPT consists of only numbers and periods, add it.\n-    if [ [[ $VERSION_OPT =~ ^[0-9\\.]+$ ]] ]; then\n-      MACOSX_BUNDLE_BUILD_VERSION=\"$MACOSX_BUNDLE_BUILD_VERSION.$VERSION_OPT\"\n-    fi\n+  # If VERSION_OPT consists of only numbers and periods, add it.\n+  if [ [[ $VERSION_OPT =~ ^[0-9\\.]+$ ]] ]; then\n+    MACOSX_BUNDLE_BUILD_VERSION=\"$MACOSX_BUNDLE_BUILD_VERSION.$VERSION_OPT\"\n@@ -568,0 +559,14 @@\n+\n+  # Set the MACOSX CFBundleVersion field\n+  UTIL_ARG_WITH(NAME: macosx-bundle-build-version, TYPE: string,\n+    DEFAULT: $MACOSX_BUNDLE_BUILD_VERSION,\n+    DESC: [Set the MacOSX Bundle CFBundleVersion field. This key is a machine-readable\n+      string composed of one to three period-separated integers and should represent the\n+      build version. Defaults to the build number.],\n+    IF_GIVEN: [\n+      if test \"x$MACOSX_BUNDLE_BUILD_VERSION\" = x; then\n+        AC_MSG_ERROR([--with-macosx-bundle-build-version must have a value])\n+      elif [ ! [[ $MACOSX_BUNDLE_BUILD_VERSION =~ ^[0-9\\.]*$ ]] ]; then\n+        AC_MSG_ERROR([--with-macosx-bundle-build-version contains non numbers and periods: $MACOSX_BUNDLE_BUILD_VERSION])\n+      fi\n+    ])\n","filename":"make\/autoconf\/jdk-version.m4","additions":156,"deletions":151,"binary":false,"changes":307,"status":"modified"}]}