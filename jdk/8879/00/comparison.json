{"files":[{"patch":"@@ -37,1 +37,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI compiler.c2.irTests.TestSuperwordFailsUnrolling\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+UnlockDiagnosticVMOptions -XX:+WhiteBoxAPI compiler.c2.irTests.TestSuperwordFailsUnrolling\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/irTests\/TestSuperwordFailsUnrolling.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -26,1 +26,3 @@\n-import compiler.lib.ir_framework.driver.*;\n+import compiler.lib.ir_framework.driver.FlagVMProcess;\n+import compiler.lib.ir_framework.driver.TestVMException;\n+import compiler.lib.ir_framework.driver.TestVMProcess;\n@@ -30,1 +32,1 @@\n-import compiler.lib.ir_framework.test.*;\n+import compiler.lib.ir_framework.test.TestVM;\n@@ -39,0 +41,4 @@\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Path;\n@@ -140,1 +146,0 @@\n-    private static final boolean SKIP_WHITEBOX_INSTALL = Boolean.getBoolean(\"SkipWhiteBoxInstall\");\n@@ -317,1 +322,1 @@\n-        if (!SKIP_WHITEBOX_INSTALL) {\n+        if (shouldInstallWhiteBox()) {\n@@ -339,0 +344,22 @@\n+    \/**\n+     * Try to load the Whitebox class with a user directory custom class loader. If the user has already built the\n+     * Whitebox, we can load it. Otherwise, the framework needs to install it.\n+     *\n+     * @return true if the framework needs to install the Whitebox\n+     *\/\n+    private boolean shouldInstallWhiteBox() {\n+        try {\n+            URL url = Path.of(System.getProperty(\"user.dir\")).toUri().toURL();\n+            URLClassLoader userDirClassLoader =\n+                    URLClassLoader.newInstance(new URL[] {url}, TestFramework.class.getClassLoader().getParent());\n+            Class.forName(WhiteBox.class.getName(), false, userDirClassLoader);\n+        } catch (MalformedURLException e) {\n+            throw new TestFrameworkException(\"corrupted user.dir property\", e);\n+        } catch (ClassNotFoundException e) {\n+            \/\/ We need to manually install the WhiteBox if we cannot load the WhiteBox class from the user directory.\n+            \/\/ This happens when the user test does not explicitly install the WhiteBox as part of the test.\n+            return true;\n+        }\n+        return false;\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/TestFramework.java","additions":31,"deletions":4,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestCompLevels.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @run main\/othervm -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n+ * @run main\/othervm -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestControls.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @run main\/othervm\/timeout=240 -Xbootclasspath\/a:. -DSkipWhiteBoxInstall=true -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n+ * @run main\/othervm\/timeout=240 -Xbootclasspath\/a:. -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockDiagnosticVMOptions\n","filename":"test\/hotspot\/jtreg\/testlibrary_tests\/ir_framework\/tests\/TestIRMatching.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}