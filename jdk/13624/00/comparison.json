{"files":[{"patch":"@@ -1,175 +0,0 @@\n-\/*\n- * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.security.x509;\n-\n-\/**\n- * CertException indicates one of a variety of certificate problems.\n- *\n- * @deprecated use one of Exceptions defined in the java.security.cert\n- * package.\n- *\n- * @see java.security.Certificate\n- *\n- *\n- * @author David Brownell\n- *\/\n-@Deprecated\n-public class CertException extends SecurityException {\n-\n-    @java.io.Serial\n-    private static final long serialVersionUID = 6930793039696446142L;\n-\n-    \/\/ Zero is reserved.\n-\n-    \/** Indicates that the signature in the certificate is not valid. *\/\n-    public static final int verf_INVALID_SIG = 1;\n-\n-    \/** Indicates that the certificate was revoked, and so is invalid. *\/\n-    public static final int verf_INVALID_REVOKED = 2;\n-\n-    \/** Indicates that the certificate is not yet valid. *\/\n-    public static final int verf_INVALID_NOTBEFORE = 3;\n-\n-    \/** Indicates that the certificate has expired and so is not valid. *\/\n-    public static final int verf_INVALID_EXPIRED = 4;\n-\n-    \/** Indicates that a certificate authority in the certification\n-     * chain is not trusted. *\/\n-    public static final int verf_CA_UNTRUSTED = 5;\n-\n-    \/** Indicates that the certification chain is too long. *\/\n-    public static final int verf_CHAIN_LENGTH = 6;\n-\n-    \/** Indicates an error parsing the ASN.1\/DER encoding of the certificate. *\/\n-    public static final int verf_PARSE_ERROR = 7;\n-\n-    \/** Indicates an error constructing a certificate or certificate chain. *\/\n-    public static final int err_CONSTRUCTION = 8;\n-\n-    \/** Indicates a problem with the public key *\/\n-    public static final int err_INVALID_PUBLIC_KEY = 9;\n-\n-    \/** Indicates a problem with the certificate version *\/\n-    public static final int err_INVALID_VERSION = 10;\n-\n-    \/** Indicates a problem with the certificate format *\/\n-    public static final int err_INVALID_FORMAT = 11;\n-\n-    \/** Indicates a problem with the certificate encoding *\/\n-    public static final int err_ENCODING = 12;\n-\n-    \/\/ Private data members\n-    private final int         verfCode;\n-    private final String      moreData;\n-\n-\n-    \/**\n-     * Constructs a certificate exception using an error code\n-     * (<code>verf_*<\/code>) and a string describing the context\n-     * of the error.\n-     *\/\n-    public CertException(int code, String moredata)\n-    {\n-        verfCode = code;\n-        moreData = moredata;\n-    }\n-\n-    \/**\n-     * Constructs a certificate exception using just an error code,\n-     * without a string describing the context.\n-     *\/\n-    public CertException(int code)\n-    {\n-        verfCode = code;\n-        moreData = null;;\n-    }\n-\n-    \/**\n-     * Returns the error code with which the exception was created.\n-     *\/\n-    public int getVerfCode() { return verfCode; }\n-\n-    \/**\n-     * Returns a string describing the context in which the exception\n-     * was reported.\n-     *\/\n-    public String getMoreData() { return moreData; }\n-\n-    \/**\n-     * Return a string corresponding to the error code used to create\n-     * this exception.\n-     *\/\n-    public String getVerfDescription()\n-    {\n-        switch (verfCode) {\n-        case verf_INVALID_SIG:\n-            return \"The signature in the certificate is not valid.\";\n-        case verf_INVALID_REVOKED:\n-            return \"The certificate has been revoked.\";\n-        case verf_INVALID_NOTBEFORE:\n-            return \"The certificate is not yet valid.\";\n-        case verf_INVALID_EXPIRED:\n-            return \"The certificate has expired.\";\n-        case verf_CA_UNTRUSTED:\n-            return \"The Authority which issued the certificate is not trusted.\";\n-        case verf_CHAIN_LENGTH:\n-            return \"The certificate path to a trusted authority is too long.\";\n-        case verf_PARSE_ERROR:\n-            return \"The certificate could not be parsed.\";\n-        case err_CONSTRUCTION:\n-            return \"There was an error when constructing the certificate.\";\n-        case err_INVALID_PUBLIC_KEY:\n-            return \"The public key was not in the correct format.\";\n-        case err_INVALID_VERSION:\n-            return \"The certificate has an invalid version number.\";\n-        case err_INVALID_FORMAT:\n-            return \"The certificate has an invalid format.\";\n-        case err_ENCODING:\n-            return \"Problem encountered while encoding the data.\";\n-\n-        default:\n-            return \"Unknown code:  \" + verfCode;\n-        }\n-    }\n-\n-    \/**\n-     * Returns a string describing the certificate exception.\n-     *\/\n-    public String toString()\n-    {\n-        return \"[Certificate Exception: \" + getMessage() + ']';\n-    }\n-\n-    \/**\n-     * Returns a string describing the certificate exception.\n-     *\/\n-    public String getMessage()\n-    {\n-        return getVerfDescription()\n-                + ( (moreData != null)\n-                    ? ( \"\\n  (\" + moreData + ')' ) : \"\" );\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertException.java","additions":0,"deletions":175,"binary":false,"changes":175,"status":"deleted"},{"patch":"@@ -1,45 +0,0 @@\n-\/*\n- * Copyright (c) 1996, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package sun.security.x509;\n-\n-\/**\n- * CertException indicates one of a variety of certificate problems.\n- * @deprecated use one of the Exceptions defined in the\n- * java.security.cert package.\n- *\n- * @author David Brownell\n- *\/\n-@Deprecated\n-class CertParseError extends CertException\n-{\n-    @java.io.Serial\n-    private static final long serialVersionUID = -4559645519017017804L;\n-\n-    CertParseError (String where)\n-    {\n-        super (CertException.verf_PARSE_ERROR, where);\n-    }\n-}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertParseError.java","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"}]}