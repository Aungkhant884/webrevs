{"files":[{"patch":"@@ -291,65 +291,0 @@\n-\/\/ \/*\n-\/\/  * Class:     sun_font_CFontManager\n-\/\/  * Method:    loadFileFont\n-\/\/  * Signature: (Ljava\/lang\/String;)Lsun\/font\/Font2D;\n-\/\/  *\/\n-\/\/ JNIEXPORT \/* sun.font.CFont *\/ jobject JNICALL\n-\/\/ Java_sun_font_CFontManager_loadFileFont\n-\/\/     (JNIEnv *env, jclass obj, jstring fontpath)\n-\/\/ {\n-\/\/     jobject result = NULL;\n-\/\/\n-\/\/ JNF_COCOA_ENTER(env);\n-\/\/\n-\/\/     NSString *nsFilePath = JNFJavaToNSString(env, fontpath);\n-\/\/     jstring javaFontName = NULL;\n-\/\/\n-\/\/     \/\/\n-\/\/     \/\/ Note: This API uses ATS and can therefore return Carbon error codes.\n-\/\/     \/\/ These codes can be found at:\n-\/\/     \/\/ http:\/\/developer.apple.com\/techpubs\/macosx\/Carbon\/Files\/FileManager\/File_Manager\/ResultCodes\/ResultCodes.html\n-\/\/     \/\/\n-\/\/\n-\/\/     FSRef iFile;\n-\/\/     OSStatus status = CreateFSRef(&iFile, nsFilePath);\n-\/\/\n-\/\/     if (status == noErr) {\n-\/\/         ATSFontContainerRef oContainer;\n-\/\/         status = ATSFontActivateFromFileReference(&iFile, kATSFontContextLocal,\n-\/\/                                                   kATSFontFormatUnspecified,\n-\/\/                                                   NULL,\n-\/\/                                                   kATSOptionFlagsUseDataFork,\n-\/\/                                                   &oContainer);\n-\/\/         if (status == noErr) {\n-\/\/             ATSFontRef ioArray[1];\n-\/\/             ItemCount oCount;\n-\/\/             status = ATSFontFindFromContainer(oContainer,\n-\/\/                                               kATSOptionFlagsUseDataFork,\n-\/\/                                               1, ioArray, &oCount);\n-\/\/\n-\/\/             if (status == noErr) {\n-\/\/                 CFStringRef oName;\n-\/\/                 status = ATSFontGetPostScriptName(ioArray[0],\n-\/\/                                                   kATSOptionFlagsUseDataFork,\n-\/\/                                                   &oName);\n-\/\/                 if (status == noErr) {\n-\/\/                     javaFontName = JNFNSToJavaString(env, (NSString *)oName);\n-\/\/                     CFRelease(oName);\n-\/\/                 }\n-\/\/             }\n-\/\/         }\n-\/\/     }\n-\/\/\n-\/\/     if (javaFontName != NULL) {\n-\/\/         \/\/ create the CFont!\n-\/\/         static JNF_CLASS_CACHE(sjc_CFont, \"sun\/font\/CFont\");\n-\/\/         static JNF_CTOR_CACHE(sjf_CFont_ctor,\n-\/\/                               sjc_CFont, \"(Ljava\/lang\/String;)V\");\n-\/\/         result = JNFNewObject(env, sjf_CFont_ctor, javaFontName);\n-\/\/     }\n-\/\/\n-\/\/ JNF_COCOA_EXIT(env);\n-\/\/\n-\/\/     return result;\n-\/\/ }\n-\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/font\/AWTFont.m","additions":0,"deletions":65,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -227,0 +227,3 @@\n+    DECLARE_CLASS_RETURN(jc_GeneralPath, \"java\/awt\/geom\/GeneralPath\", NULL);\n+    DECLARE_METHOD_RETURN(jc_GeneralPath_ctor, jc_GeneralPath, \"<init>\", \"(I[BI[FI)V\", NULL);\n+\n@@ -269,3 +272,2 @@\n-    static JNF_CLASS_CACHE(jc_GeneralPath, \"java\/awt\/geom\/GeneralPath\");\n-    static JNF_CTOR_CACHE(jc_GeneralPath_ctor, jc_GeneralPath, \"(I[BI[FI)V\");\n-    generalPath = JNFNewObject(env, jc_GeneralPath_ctor, java_awt_geom_PathIterator_WIND_NON_ZERO, pointTypes, path->fNumberOfSegments, pointCoords, path->fNumberOfDataElements); \/\/ AWT_THREADING Safe (known object)\n+    generalPath = (*env)->NewObject(env, jc_GeneralPath, jc_GeneralPath_ctor, java_awt_geom_PathIterator_WIND_NON_ZERO, pointTypes,\n+                    path->fNumberOfSegments, pointCoords, path->fNumberOfDataElements); \/\/ AWT_THREADING Safe (known object)\n@@ -429,3 +431,3 @@\n-    JNF_CLASS_CACHE(sjc_StrikeMetrics, \"sun\/font\/StrikeMetrics\");\n-    JNF_CTOR_CACHE(strikeMetricsCtr, sjc_StrikeMetrics, \"(FFFFFFFFFF)V\");\n-    metrics = JNFNewObject(env, strikeMetricsCtr,\n+    DECLARE_CLASS_RETURN(sjc_StrikeMetrics, \"sun\/font\/StrikeMetrics\", NULL);\n+    DECLARE_METHOD_RETURN(strikeMetricsCtr, sjc_StrikeMetrics, \"<init>\", \"(FFFFFFFFFF)V\", NULL);\n+    metrics = (*env)->NewObject(env, sjc_StrikeMetrics, strikeMetricsCtr,\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/font\/AWTStrike.m","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"}]}