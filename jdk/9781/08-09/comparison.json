{"files":[{"patch":"@@ -1925,1 +1925,1 @@\n-  assert(VM_Version::supports_evex() || VM_Version::supports_f16c(), \"\");\n+  assert(VM_Version::supports_avx512vl() || VM_Version::supports_f16c(), \"\");\n@@ -1928,1 +1928,1 @@\n-  emit_int24((unsigned char)0x1D, (0xC0 | encode), imm8);\n+  emit_int24(0x1D, (0xC0 | encode), imm8);\n@@ -1932,1 +1932,1 @@\n-  assert(VM_Version::supports_evex(), \"\");\n+  assert(VM_Version::supports_avx512vl(), \"\");\n@@ -1940,1 +1940,1 @@\n-  emit_int8((unsigned char) 0x1D);\n+  emit_int8(0x1D);\n@@ -1946,1 +1946,1 @@\n-  assert(VM_Version::supports_evex() || VM_Version::supports_f16c(), \"\");\n+  assert(VM_Version::supports_avx512vl() || VM_Version::supports_f16c(), \"\");\n@@ -1949,1 +1949,1 @@\n-  emit_int16((unsigned char)0x13, (0xC0 | encode));\n+  emit_int16(0x13, (0xC0 | encode));\n","filename":"src\/hotspot\/cpu\/x86\/assembler_x86.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1683,2 +1683,1 @@\n-      if (!VM_Version::supports_f16c() && !(VM_Version::supports_evex() &&\n-          VM_Version::supports_avx512vl())) {\n+      if (!VM_Version::supports_f16c() && !VM_Version::supports_avx512vl()) {\n@@ -3662,0 +3661,35 @@\n+instruct convF2HF_reg_reg(rRegI dst, regF src, regF tmp) %{\n+  effect(TEMP tmp);\n+  match(Set dst (ConvF2HF src));\n+  ins_cost(125);\n+  format %{ \"vcvtps2ph $dst,$src \\t using $tmp as TEMP\"%}\n+  ins_encode %{\n+    __ vcvtps2ph($tmp$$XMMRegister, $src$$XMMRegister, 0x04, Assembler::AVX_128bit);\n+    __ movdl($dst$$Register, $tmp$$XMMRegister);\n+    __ movswl($dst$$Register, $dst$$Register);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct convF2HF_mem_reg(memory mem, regF src, kReg ktmp, rRegI rtmp) %{\n+  predicate((UseAVX > 2) && VM_Version::supports_avx512bw());\n+  effect(TEMP ktmp, TEMP rtmp);\n+  match(Set mem (StoreC mem (ConvF2HF src)));\n+  format %{ \"evcvtps2ph $mem,$src \\t using $ktmp and $rtmp as TEMP\" %}\n+  ins_encode %{\n+    __ movl($rtmp$$Register, 0x1);\n+    __ kmovdl($ktmp$$KRegister, $rtmp$$Register);\n+    __ evcvtps2ph($mem$$Address, $ktmp$$KRegister, $src$$XMMRegister, 0x04, Assembler::AVX_128bit);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct convHF2F_reg_reg(regF dst, rRegI src) %{\n+  match(Set dst (ConvHF2F src));\n+  format %{ \"vcvtph2ps $dst,$src\" %}\n+  ins_encode %{\n+    __ movdl($dst$$XMMRegister, $src$$Register);\n+    __ vcvtph2ps($dst$$XMMRegister, $dst$$XMMRegister, Assembler::AVX_128bit);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":36,"deletions":2,"binary":false,"changes":38,"status":"modified"},{"patch":"@@ -11029,37 +11029,0 @@\n-instruct convF2HF_reg_reg(rRegI dst, regF src, regF tmp) %{\n-  effect(TEMP tmp);\n-  match(Set dst (ConvF2HF src));\n-  ins_cost(125);\n-  format %{ \"vcvtps2ph $dst,$src \\t using $tmp as TEMP\"%}\n-  ins_encode %{\n-     __ vcvtps2ph($tmp$$XMMRegister, $src$$XMMRegister, 0x04, Assembler::AVX_128bit);\n-     __ movdl($dst$$Register, $tmp$$XMMRegister);\n-     __ movswl($dst$$Register, $dst$$Register);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct convF2HF_mem_reg(memory mem, regF src, kReg ktmp, rRegI rtmp) %{\n-  predicate(UseAVX > 2);\n-  effect(TEMP ktmp, TEMP rtmp);\n-  match(Set mem (StoreC mem (ConvF2HF src)));\n-  format %{ \"evcvtps2ph $mem,$src \\t using $ktmp and $rtmp as TEMP\" %}\n-  ins_encode %{\n-     __ movl($rtmp$$Register, 0x1);\n-     __ kmovdl($ktmp$$KRegister, $rtmp$$Register);\n-     __ evcvtps2ph($mem$$Address, $ktmp$$KRegister, $src$$XMMRegister, 0x04, Assembler::AVX_128bit);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct convHF2F_reg_reg(regF dst, rRegI src) %{\n-  match(Set dst (ConvHF2F src));\n-  format %{ \"vcvtph2ps $dst,$src\" %}\n-  ins_encode %{\n-     __ movdl($dst$$XMMRegister, $src$$Register);\n-     __ vcvtph2ps($dst$$XMMRegister, $dst$$XMMRegister, Assembler::AVX_128bit);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":0,"deletions":37,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -229,0 +229,1 @@\n+        F16C,\n","filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.amd64\/src\/jdk\/vm\/ci\/amd64\/AMD64.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -66,1 +66,2 @@\n-                    \"hv\",           \"fsrm\",             \"avx512_bitalg\",     \"gfni\"\n+                    \"hv\",           \"fsrm\",             \"avx512_bitalg\",     \"gfni\",\n+                    \"f16c\"\n","filename":"test\/lib-test\/jdk\/test\/whitebox\/CPUInfoTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}