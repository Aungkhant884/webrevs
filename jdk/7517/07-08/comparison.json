{"files":[{"patch":"@@ -57,4 +57,3 @@\n-  \/\/ We use NOPs to make the ldr+far_jump+int64 size equal to ic_stub_code_size.\n-  for (int i = jump_code_size;\n-           i < ic_stub_code_size() - 3 * NativeInstruction::instruction_size;\n-           i += NativeInstruction::instruction_size) {\n+  \/\/ We use NOPs to make the [ldr + far_jump + nops + int64] stub size equal to ic_stub_code_size.\n+  for (int size = NativeInstruction::instruction_size + jump_code_size + 8;\n+           size < ic_stub_code_size(); size += NativeInstruction::instruction_size) {\n@@ -64,1 +63,1 @@\n-  assert((uintptr_t)__ pc() % wordSize == 0);\n+  assert((uintptr_t)__ pc() % wordSize == 0, \"\");\n","filename":"src\/hotspot\/cpu\/aarch64\/icBuffer_aarch64.cpp","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -39,0 +39,1 @@\n+ * @requires vm.debug == false\n@@ -41,1 +42,1 @@\n- * @run driver compiler.c2.TestFarJump\n+ * @run driver compiler.c2.aarch64.TestFarJump\n","filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestFarJump.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}