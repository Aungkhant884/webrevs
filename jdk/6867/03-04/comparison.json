{"files":[{"patch":"@@ -2960,1 +2960,1 @@\n-void G1CollectedHeap::clear_region_in_prev_bitmap(HeapRegion* hr) {\n+void G1CollectedHeap::clear_prev_bitmap_for_region(HeapRegion* hr) {\n@@ -2971,1 +2971,1 @@\n-    clear_region_in_prev_bitmap(hr);\n+    clear_prev_bitmap_for_region(hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -625,1 +625,1 @@\n-  void clear_region_in_prev_bitmap(HeapRegion* hr);\n+  void clear_prev_bitmap_for_region(HeapRegion* hr);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n-void G1FullGCCompactTask::G1CompactRegionClosure::clear_bitmap(oop obj) {\n+void G1FullGCCompactTask::G1CompactRegionClosure::clear_in_prev_bitmap(oop obj) {\n@@ -70,1 +70,1 @@\n-    clear_bitmap(obj);\n+    clear_in_prev_bitmap(obj);\n@@ -85,1 +85,1 @@\n-  clear_bitmap(obj);\n+  clear_in_prev_bitmap(obj);\n@@ -96,5 +96,5 @@\n-    \/\/ for bitmap verification as well as for being able to use the\n-    \/\/ prev_bitmap for evacuation failures. Testing showed that it\n-    \/\/ was better overall to clear bit by bit, compared to clearing\n-    \/\/ the whole region at the end. This difference was clearly seen\n-    \/\/ for regions with few marks.\n+    \/\/ for bitmap verification and to be able to use the prev_bitmap\n+    \/\/ for evacuation failures in the next young collection. Testing\n+    \/\/ showed that it was better overall to clear bit by bit, compared\n+    \/\/ to clearing the whole region at the end. This difference was\n+    \/\/ clearly seen for regions with few marks.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    void clear_bitmap(oop object);\n+    void clear_in_prev_bitmap(oop object);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -620,2 +620,2 @@\n-    \/\/ Objects failing evacuation will turn in to old objects since the regions\n-    \/\/ is relabeled as such. We mark the failing objects in the prev bitmap and\n+    \/\/ Objects failing evacuation will turn into old objects since the regions\n+    \/\/ are relabeled as such. We mark the failing objects in the prev bitmap and\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1262,2 +1262,2 @@\n-  \/\/ Closure to clear the prev bitmap for any old region in the CSet. This is\n-  \/\/ needed to be able to use the bitmap for evacuation failure handling.\n+  \/\/ Closure to clear the prev bitmap for any old region in the collection set.\n+  \/\/ This is needed to be able to use the bitmap for evacuation failure handling.\n@@ -1277,1 +1277,1 @@\n-        _g1h->clear_region_in_prev_bitmap(hr);\n+        _g1h->clear_prev_bitmap_for_region(hr);\n@@ -1286,1 +1286,1 @@\n-  \/\/ Helper to allow multiple closure to be applied when\n+  \/\/ Helper to allow two closure to be applied when\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}