{"files":[{"patch":"@@ -165,1 +165,2 @@\n-    hr->apply_to_marked_objects(const_cast<G1CMBitMap*>(_g1h->concurrent_mark()->prev_mark_bitmap()), &rspc);\n+    G1CMBitMap* bitmap = const_cast<G1CMBitMap*>(_g1h->concurrent_mark()->prev_mark_bitmap());\n+    hr->apply_to_marked_objects(bitmap, &rspc);\n@@ -175,0 +176,1 @@\n+    assert(_evac_failure_regions->contains(hr->hrm_index()), \"precondition\");\n@@ -176,2 +178,1 @@\n-    if (_evac_failure_regions->contains(hr->hrm_index())) {\n-      hr->clear_index_in_opt_cset();\n+    hr->clear_index_in_opt_cset();\n@@ -179,2 +180,2 @@\n-      bool during_concurrent_start = _g1h->collector_state()->in_concurrent_start_gc();\n-      bool during_concurrent_mark = _g1h->collector_state()->mark_or_rebuild_in_progress();\n+    bool during_concurrent_start = _g1h->collector_state()->in_concurrent_start_gc();\n+    bool during_concurrent_mark = _g1h->collector_state()->mark_or_rebuild_in_progress();\n@@ -182,2 +183,2 @@\n-      hr->note_self_forwarding_removal_start(during_concurrent_start,\n-                                             during_concurrent_mark);\n+    hr->note_self_forwarding_removal_start(during_concurrent_start,\n+                                           during_concurrent_mark);\n@@ -185,1 +186,1 @@\n-      hr->reset_bot();\n+    hr->reset_bot();\n@@ -187,1 +188,1 @@\n-      size_t live_bytes = remove_self_forward_ptr_by_walking_hr(hr, during_concurrent_start);\n+    size_t live_bytes = remove_self_forward_ptr_by_walking_hr(hr, during_concurrent_start);\n@@ -189,2 +190,5 @@\n-      hr->rem_set()->clean_strong_code_roots(hr);\n-      hr->rem_set()->clear_locked(true);\n+    hr->rem_set()->clean_strong_code_roots(hr);\n+    hr->rem_set()->clear_locked(true);\n+\n+    hr->note_self_forwarding_removal_end(live_bytes);\n+    _g1h->verifier()->check_bitmaps(\"Self-Forwarding Ptr Removal\", hr);\n@@ -192,3 +196,0 @@\n-      hr->note_self_forwarding_removal_end(live_bytes);\n-      _g1h->verifier()->check_bitmaps(\"Self-Forwarding Ptr Removal\", hr);\n-    }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp","additions":15,"deletions":14,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1266,0 +1266,6 @@\n+#ifdef ASSERT\n+    void assert_bitmap_clear(HeapRegion* hr, const G1CMBitMap* bitmap) {\n+      assert(bitmap->get_next_marked_addr(hr->bottom(), hr->end()) == hr->end(),\n+             \"Bitmap should have no mark for young regions\");\n+    }\n+#endif\n@@ -1274,0 +1280,3 @@\n+      } else {\n+        assert(hr->is_young(), \"Should only be young and old regions in collection set\");\n+        assert_bitmap_clear(hr, _g1h->concurrent_mark()->prev_mark_bitmap());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"}]}