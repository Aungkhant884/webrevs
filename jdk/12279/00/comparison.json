{"files":[{"patch":"@@ -1410,3 +1410,0 @@\n-                        if (tMap.containsKey(ti)) {\n-                            throw new AssertionError(\"Malformed intersection\");\n-                        }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -5119,1 +5119,1 @@\n-        Set<Type> boundSet = new HashSet<>();\n+        Set<Symbol> boundSet = new HashSet<>();\n@@ -5123,1 +5123,1 @@\n-            boundSet.add(types.erasure(bounds.head.type));\n+            boundSet.add(types.erasure(bounds.head.type).tsym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2875,2 +2875,2 @@\n-    void checkNotRepeated(DiagnosticPosition pos, Type it, Set<Type> its) {\n-        if (its.contains(it))\n+    void checkNotRepeated(DiagnosticPosition pos, Type it, Set<Symbol> its) {\n+        if (its.contains(it.tsym))\n@@ -2879,1 +2879,1 @@\n-            its.add(it);\n+            its.add(it.tsym);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -848,1 +848,1 @@\n-            Set<Type> interfaceSet = new HashSet<>();\n+            Set<Symbol> interfaceSet = new HashSet<>();\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TypeEnter.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}