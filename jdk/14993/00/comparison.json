{"files":[{"patch":"@@ -746,0 +746,10 @@\n+    @Override\n+    public void setText(String text){\n+        super.setText(text);\n+        if(isEdited() && isEditValid()){\n+            try{\n+                commitEdit();\n+            } catch(ParseException pe){}\/\/do nothing, we assume this will never happen.\n+        }\n+    }\n+\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/JFormattedTextField.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -0,0 +1,128 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 5032471\n+ * @key headful\n+ * @summary Verifies JFormattedTextField uses edit formatter on initial focus\n+ * @run main JFormattedTextProblem\n+ *\/\n+\n+import java.util.Date;\n+import java.awt.Robot;\n+import java.awt.event.KeyEvent;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import javax.swing.JFormattedTextField;\n+import javax.swing.text.DateFormatter;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+import javax.swing.text.DefaultFormatterFactory;\n+import javax.swing.text.Document;\n+import javax.swing.SwingUtilities;\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+\n+public class JFormattedTextProblem {\n+\n+    static JFrame frame;\n+    static volatile boolean expected = false;\n+\n+    public static void main(String[] args) throws Exception {\n+        try {\n+            Robot robot = new Robot();\n+            robot.setAutoDelay(100);\n+            JFormattedTextProblem test = new JFormattedTextProblem();\n+            SwingUtilities.invokeAndWait(() -> {\n+                test.testFormatter();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            robot.keyPress(KeyEvent.VK_TAB);\n+            robot.keyRelease(KeyEvent.VK_TAB);\n+            if (!expected) {\n+                throw new RuntimeException(\"Field not editable format\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (frame != null) {\n+                    frame.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    private void testFormatter() {\n+        frame = new JFrame();\n+        JPanel panel = new JPanel();\n+        panel.add(new JLabel(\"Nothing: \"));\n+        panel.add(new JTextField(\"Focus Starts Here.\"));\n+\n+        DateFormat displayDate = DateFormat.getDateInstance(DateFormat.MEDIUM);\n+        DateFormat editDate = DateFormat.getDateInstance(DateFormat.SHORT);\n+\n+        JFormattedTextField dateField = new JFormattedTextField();\n+        dateField.setFormatterFactory(new DefaultFormatterFactory(\n+                                         new DateFormatter(editDate),\n+                                         new DateFormatter(displayDate),\n+                                         new DateFormatter(editDate)));\n+\n+        panel.add(new JLabel(\"Date: \"));\n+        panel.add(dateField);\n+\n+\n+        DateFormat displayTime = DateFormat.getTimeInstance(DateFormat.MEDIUM);\n+        SimpleDateFormat editTime = new SimpleDateFormat(\"HH:mm\");\n+\n+        dateField.setText(displayDate.format(new Date()));\n+\n+        frame.getContentPane().add(panel);\n+        DocumentListener documentListener = new DocumentListener() {\n+            public void changedUpdate(DocumentEvent documentEvent) {\n+                printIt(documentEvent);\n+            }\n+            public void insertUpdate(DocumentEvent documentEvent) {\n+                printIt(documentEvent);\n+            }\n+            public void removeUpdate(DocumentEvent documentEvent) {\n+                printIt(documentEvent);\n+            }\n+            private void printIt(DocumentEvent documentEvent) {\n+                DocumentEvent.EventType type = documentEvent.getType();\n+                if (type.equals(DocumentEvent.EventType.INSERT)) {\n+                    expected = true;\n+                }\n+            }\n+        };\n+        dateField.getDocument().addDocumentListener(documentListener);\n+        frame.pack();\n+        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFormattedTextField\/JFormattedTextProblem.java","additions":128,"deletions":0,"binary":false,"changes":128,"status":"added"}]}