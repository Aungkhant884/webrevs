{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,0 +191,9 @@\n+    \/**\n+     * Gets the locale used to create this table.\n+     *\n+     * @return the the locale used to create this table\n+     *\/\n+    public Locale getLocale() {\n+        return locale;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormatSymbols.java","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2011,0 +2011,18 @@\n+\n+    \/\/ Caching DecimalFormatSymbols\n+    static DecimalFormatSymbols DFS = null;\n+    static DecimalFormatSymbols getDecimalFormatSymbols(Locale locale) {\n+        DecimalFormatSymbols dfs = DFS;\n+        if (dfs != null && dfs.getLocale() == locale) {\n+            return dfs;\n+        }\n+        dfs = DecimalFormatSymbols.getInstance(locale);\n+        DFS = dfs;\n+        return dfs;\n+    }\n+\n+    \/\/ Caching zero.\n+    static char getZero(Locale locale) {\n+        return locale == null ? '0' : getDecimalFormatSymbols(locale).getZeroDigit();\n+    }\n+\n@@ -2013,1 +2031,0 @@\n-\n@@ -2016,4 +2033,0 @@\n-    \/\/ Non-character value used to mark zero as uninitialized\n-    private static final char ZERO_SENTINEL = '\\uFFFE';\n-    private char zero = ZERO_SENTINEL;\n-\n@@ -2526,14 +2539,0 @@\n-    private char zero() {\n-        char zero = this.zero;\n-        if (zero == ZERO_SENTINEL) {\n-            if ((l != null) && !l.equals(Locale.US)) {\n-                DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n-                zero = dfs.getZeroDigit();\n-            } else {\n-                zero = '0';\n-            }\n-            this.zero = zero;\n-        }\n-        return zero;\n-    }\n-\n@@ -4501,8 +4500,0 @@\n-        private char getZero(Formatter fmt, Locale l) {\n-            if ((l != null) &&  !l.equals(fmt.locale())) {\n-                DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n-                return dfs.getZeroDigit();\n-            }\n-            return fmt.zero();\n-        }\n-\n@@ -4522,1 +4513,1 @@\n-            char zero = getZero(fmt, l);\n+            char zero = getZero(l);\n@@ -4542,1 +4533,1 @@\n-                    DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n+                    DecimalFormatSymbols dfs = getDecimalFormatSymbols(l);\n@@ -4552,1 +4543,1 @@\n-                    DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n+                    DecimalFormatSymbols dfs = getDecimalFormatSymbols(l);\n@@ -4615,1 +4606,1 @@\n-            char zero = getZero(fmt, l);\n+            char zero = getZero(l);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":23,"deletions":32,"binary":false,"changes":55,"status":"modified"}]}