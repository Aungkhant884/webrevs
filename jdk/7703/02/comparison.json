{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -191,0 +191,11 @@\n+    \/**\n+     * Gets the locale used to create this instance.\n+     *\n+     * @return locale used to create this instance\n+     *\n+     * @since 19\n+     *\/\n+    public Locale getLocale() {\n+        return locale;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/text\/DecimalFormatSymbols.java","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2011,0 +2011,27 @@\n+    \/\/ Caching DecimalFormatSymbols\n+    static DecimalFormatSymbols DFS = null;\n+    static DecimalFormatSymbols getDecimalFormatSymbols(Locale locale) {\n+        DecimalFormatSymbols dfs = DFS;\n+        if (dfs != null && dfs.getLocale().equals(locale)) {\n+            return dfs;\n+        }\n+        dfs = DecimalFormatSymbols.getInstance(locale);\n+        DFS = dfs;\n+        return dfs;\n+    }\n+\n+    \/\/ Caching zero.\n+    static char getZero(Locale locale) {\n+        return locale == null ? '0' : getDecimalFormatSymbols(locale).getZeroDigit();\n+    }\n+\n+    \/\/ Caching decimal separator.\n+    static char getDecimalSeparator(Locale locale) {\n+        return locale == null ? '.' : getDecimalFormatSymbols(locale).getDecimalSeparator();\n+    }\n+\n+    \/\/ Caching grouping separator.\n+    static char getGroupingSeparator(Locale locale) {\n+        return locale == null ? ',' : getDecimalFormatSymbols(locale).getGroupingSeparator();\n+    }\n+\n@@ -2013,1 +2040,0 @@\n-\n@@ -2016,4 +2042,0 @@\n-    \/\/ Non-character value used to mark zero as uninitialized\n-    private static final char ZERO_SENTINEL = '\\uFFFE';\n-    private char zero = ZERO_SENTINEL;\n-\n@@ -2526,14 +2548,0 @@\n-    private char zero() {\n-        char zero = this.zero;\n-        if (zero == ZERO_SENTINEL) {\n-            if ((l != null) && !l.equals(Locale.US)) {\n-                DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n-                zero = dfs.getZeroDigit();\n-            } else {\n-                zero = '0';\n-            }\n-            this.zero = zero;\n-        }\n-        return zero;\n-    }\n-\n@@ -4501,8 +4509,0 @@\n-        private char getZero(Formatter fmt, Locale l) {\n-            if ((l != null) &&  !l.equals(fmt.locale())) {\n-                DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n-                return dfs.getZeroDigit();\n-            }\n-            return fmt.zero();\n-        }\n-\n@@ -4522,1 +4522,1 @@\n-            char zero = getZero(fmt, l);\n+            char zero = getZero(l);\n@@ -4539,6 +4539,1 @@\n-                if (l == null || l.equals(Locale.US)) {\n-                    decSep  = '.';\n-                } else {\n-                    DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n-                    decSep  = dfs.getDecimalSeparator();\n-                }\n+                decSep  = getDecimalSeparator(l);\n@@ -4548,0 +4543,2 @@\n+                grpSep = getGroupingSeparator(l);\n+\n@@ -4549,2 +4546,1 @@\n-                    grpSep = ',';\n-                    grpSize = 3;\n+                     grpSize = 3;\n@@ -4552,2 +4548,0 @@\n-                    DecimalFormatSymbols dfs = DecimalFormatSymbols.getInstance(l);\n-                    grpSep = dfs.getGroupingSeparator();\n@@ -4570,1 +4564,1 @@\n-                        df = new DecimalFormat(all[0], dfs);\n+                        df = new DecimalFormat(all[0], getDecimalFormatSymbols(l));\n@@ -4615,1 +4609,1 @@\n-            char zero = getZero(fmt, l);\n+            char zero = getZero(l);\n","filename":"src\/java.base\/share\/classes\/java\/util\/Formatter.java","additions":35,"deletions":41,"binary":false,"changes":76,"status":"modified"}]}