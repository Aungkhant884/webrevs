{"files":[{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.ref.Reference;\n@@ -99,2 +100,7 @@\n-        if (buffer instanceof DirectBuffer) {\n-            adler = updateByteBuffer(adler, ((DirectBuffer)buffer).address(), pos, rem);\n+        if (buffer.isDirect()) {\n+            try {\n+                adler = updateByteBuffer(adler, ((DirectBuffer)buffer).address(), pos, rem);\n+\n+            } finally {\n+                Reference.reachabilityFence(buffer);\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/Adler32.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.lang.ref.Reference;\n@@ -98,2 +99,6 @@\n-        if (buffer instanceof DirectBuffer) {\n-            crc = updateByteBuffer(crc, ((DirectBuffer)buffer).address(), pos, rem);\n+        if (buffer.isDirect()) {\n+            try {\n+                crc = updateByteBuffer(crc, ((DirectBuffer)buffer).address(), pos, rem);\n+            } finally {\n+                Reference.reachabilityFence(buffer);\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/CRC32.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+import java.lang.ref.Reference;\n@@ -173,3 +174,7 @@\n-        if (buffer instanceof DirectBuffer) {\n-            crc = updateDirectByteBuffer(crc, ((DirectBuffer) buffer).address(),\n-                                         pos, limit);\n+        if (buffer.isDirect()) {\n+            try {\n+                crc = updateDirectByteBuffer(crc, ((DirectBuffer) buffer).address(),\n+                        pos, limit);\n+            } finally {\n+                Reference.reachabilityFence(buffer);\n+            }\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/CRC32C.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"}]}