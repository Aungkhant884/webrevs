{"files":[{"patch":"@@ -1163,25 +1163,14 @@\n-        if (x < 0 || y < 0) {\n-            \/\/ Use technique from section 8-2 of Henry S. Warren, Jr.,\n-            \/\/ Hacker's Delight (2nd ed.) (Addison Wesley, 2013), 173-174.\n-            long x1 = x >> 32;\n-            long x2 = x & 0xFFFFFFFFL;\n-            long y1 = y >> 32;\n-            long y2 = y & 0xFFFFFFFFL;\n-            long z2 = x2 * y2;\n-            long t = x1 * y2 + (z2 >>> 32);\n-            long z1 = t & 0xFFFFFFFFL;\n-            long z0 = t >> 32;\n-            z1 += x2 * y1;\n-            return x1 * y1 + z0 + (z1 >> 32);\n-        } else {\n-            \/\/ Use Karatsuba technique with two base 2^32 digits.\n-            long x1 = x >>> 32;\n-            long y1 = y >>> 32;\n-            long x2 = x & 0xFFFFFFFFL;\n-            long y2 = y & 0xFFFFFFFFL;\n-            long A = x1 * y1;\n-            long B = x2 * y2;\n-            long C = (x1 + x2) * (y1 + y2);\n-            long K = C - A - B;\n-            return (((B >>> 32) + K) >>> 32) + A;\n-        }\n+        \/\/ Use technique from section 8-2 of Henry S. Warren, Jr.,\n+        \/\/ Hacker's Delight (2nd ed.) (Addison Wesley, 2013), 173-174.\n+        long x1 = x >> 32;\n+        long x2 = x & 0xFFFFFFFFL;\n+        long y1 = y >> 32;\n+        long y2 = y & 0xFFFFFFFFL;\n+\n+        long z2 = x2 * y2;\n+        long t = x1 * y2 + (z2 >>> 32);\n+        long z1 = t & 0xFFFFFFFFL;\n+        long z0 = t >> 32;\n+        z1 += x2 * y1;\n+\n+        return x1 * y1 + z0 + (z1 >> 32);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/Math.java","additions":14,"deletions":25,"binary":false,"changes":39,"status":"modified"}]}