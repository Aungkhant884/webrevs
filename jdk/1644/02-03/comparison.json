{"files":[{"patch":"@@ -35,1 +35,0 @@\n-import java.math.BigInteger;\n@@ -48,0 +47,1 @@\n+import java.security.spec.InvalidParameterSpecException;\n@@ -52,2 +52,0 @@\n-    private static final byte DER_OCT_STRING = 0x04;\n-\n@@ -489,22 +487,2 @@\n-            throws IOException {\n-        \/\/ The format should be a DER-encoded OCTET_STRING\n-        byte[] paramEncoding = params.getEncoded();\n-        if (paramEncoding[0] != DER_OCT_STRING) {\n-            throw new RuntimeException(String.format(\n-                    \"Unexpected encoded data from parameters, \" +\n-                            \"expected 0x04, got 0x%02X\", paramEncoding[0]));\n-        }\n-        \/\/ Get the length, should be short-form but handle long-form too\n-        int len;\n-        int dataOffset;\n-        if ((paramEncoding[1] & 0x80) != 0) {\n-            \/\/ long form\n-            int numLenBytes = paramEncoding[1] & 0x7F;\n-            len = new BigInteger(paramEncoding, 2, numLenBytes).intValue();\n-            dataOffset = 2 + numLenBytes;\n-        } else {\n-            \/\/ short form\n-            len = paramEncoding[1];\n-            dataOffset = 2;\n-        }\n-        return Arrays.copyOfRange(paramEncoding, dataOffset, dataOffset + len);\n+            throws InvalidParameterSpecException {\n+        return params.getParameterSpec(IvParameterSpec.class).getIV();\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/Cipher\/ChaCha20\/ChaCha20Poly1305ParamTest.java","additions":3,"deletions":25,"binary":false,"changes":28,"status":"modified"}]}