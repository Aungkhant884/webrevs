{"files":[{"patch":"@@ -36,0 +36,1 @@\n+import javax.swing.JComponent;\n@@ -46,0 +47,3 @@\n+        JComponent[] jComponents =\n+        { new JButton(), new JInternalFrame(), new JSplitPane(),\n+            new JScrollBar(), new JProgressBar(), new JSlider() };\n@@ -47,118 +51,8 @@\n-        JButton jButton = new JButton();\n-        JInternalFrame iFrame = new JInternalFrame();\n-        JSplitPane jSplitPane = new JSplitPane();\n-        JScrollBar jScrollBar = new JScrollBar();\n-        JProgressBar jProgressBar = new JProgressBar();\n-        JSlider jSlider = new JSlider();\n-\n-        if (!jButton.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Integer.valueOf(5))) {\n-            throw new RuntimeException(\"JButton's Accessible Value\"\n-                + \" implementation doesn't accept Integer\");\n-        }\n-        if (!jButton.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Float.valueOf(5))) {\n-            throw new RuntimeException(\"JButton's Accessible Value\"\n-                + \" implementation doesn't accept Float\");\n-        }\n-        if (!jButton.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Double.valueOf(5))) {\n-            throw new RuntimeException(\"JButton's Accessible Value\"\n-                + \" implementation doesn't accept Double\");\n-        }\n-        if (!jButton.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Long.valueOf(5))) {\n-            throw new RuntimeException(\"JButton's Accessible Value\"\n-                + \" implementation doesn't accept Long\");\n-        }\n-        if (!jButton.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Short.valueOf((short) 123))) {\n-            throw new RuntimeException(\"JButton's Accessible Value\"\n-                + \" implementation doesn't accept Short\");\n-        }\n-\n-        if (!jButton.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(BigInteger.ONE)) {\n-            throw new RuntimeException(\"JButton's Accessible Value\"\n-                + \" implementation doesn't accept BigInteger.ONE\");\n-        }\n-\n-        if (!jButton.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(new BigDecimal(BigInteger.ONE))) {\n-            throw new RuntimeException(\"JButton's Accessible Value\"\n-                + \" implementation doesn't accept new \"\n-                + \"BigDecimal(BigInteger.ONE)\");\n-        }\n-\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Integer.valueOf(5))) {\n-            throw new RuntimeException(\"JScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Integer\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Float.valueOf(5))) {\n-            throw new RuntimeException(\"JScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Float\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Double.valueOf(5))) {\n-            throw new RuntimeException(\"JScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Double\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Long.valueOf(5))) {\n-            throw new RuntimeException(\"JScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Long\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Short.valueOf((short) 123))) {\n-            throw new RuntimeException(\"JScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Short\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(BigInteger.ONE)) {\n-            throw new RuntimeException(\"JScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept BigInteger.ONE\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(new BigDecimal(BigInteger.ONE))) {\n-            throw new RuntimeException(\"JScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept new \"\n-                + \"BigDecimal(BigInteger.ONE)\");\n-        }\n-\n-        if (!iFrame.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Integer.valueOf(5))) {\n-            throw new RuntimeException(\"iFrame's Accessible Value\"\n-                + \" implementation doesn't accept Integer\");\n-        }\n-        if (!iFrame.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Float.valueOf(5))) {\n-            throw new RuntimeException(\"iFrame's Accessible Value\"\n-                + \" implementation doesn't accept Float\");\n-        }\n-        if (!iFrame.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Double.valueOf(5))) {\n-            throw new RuntimeException(\"iFrame's Accessible Value\"\n-                + \" implementation doesn't accept Double\");\n-        }\n-        if (!iFrame.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Long.valueOf(5))) {\n-            throw new RuntimeException(\"iFrame's Accessible Value\"\n-                + \" implementation doesn't accept Long\");\n-        }\n-        if (!iFrame.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Short.valueOf((short) 123))) {\n-            throw new RuntimeException(\"iFrame's Accessible Value\"\n-                + \" implementation doesn't accept Short\");\n-        }\n-        if (!iFrame.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(BigInteger.ONE)) {\n-            throw new RuntimeException(\"iFrame's Accessible Value\"\n-                + \" implementation doesn't accept BigInteger.ONE\");\n-        }\n-        if (!iFrame.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(new BigDecimal(BigInteger.ONE))) {\n-            throw new RuntimeException(\"iFrame's Accessible Value\"\n-                + \" implementation doesn't accept new \"\n-                +\"BigDecimal(BigInteger.ONE)\");\n+        for (JComponent jComponent : jComponents) {\n+            testIt(jComponent, (Float.valueOf(5)));\n+            testIt(jComponent, (Double.valueOf(37.266)));\n+            testIt(jComponent, (Integer.valueOf(10)));\n+            testIt(jComponent, (Long.valueOf(123L)));\n+            testIt(jComponent, (Short.valueOf((short) 123)));\n+            testIt(jComponent, (BigInteger.ONE));\n+            testIt(jComponent, (new BigDecimal(BigInteger.ONE)));\n@@ -167,110 +61,1 @@\n-        if (!jSplitPane.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Integer.valueOf(5))) {\n-            throw new RuntimeException(\"jSplitPane's Accessible Value\"\n-                + \" implementation doesn't accept Integer\");\n-        }\n-        if (!jSplitPane.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Float.valueOf(5))) {\n-            throw new RuntimeException(\"jSplitPane's Accessible Value\"\n-                + \" implementation doesn't accept Float\");\n-        }\n-        if (!jSplitPane.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Double.valueOf(5))) {\n-            throw new RuntimeException(\"jSplitPane's Accessible Value\"\n-                + \" implementation doesn't accept Double\");\n-        }\n-        if (!jSplitPane.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Long.valueOf(5))) {\n-            throw new RuntimeException(\"jSplitPane's Accessible Value\"\n-                + \" implementation doesn't accept Long\");\n-        }\n-        if (!jSplitPane.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Short.valueOf((short) 123))) {\n-            throw new RuntimeException(\"jSplitPane's Accessible Value\"\n-                + \" implementation doesn't accept Short\");\n-        }\n-        if (!jSplitPane.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(BigInteger.ONE)) {\n-            throw new RuntimeException(\"jSplitPane's Accessible Value\"\n-                + \" implementation doesn't accept BigInteger.ONE\");\n-        }\n-        if (!jSplitPane.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(new BigDecimal(BigInteger.ONE))) {\n-            throw new RuntimeException(\"jSplitPane's Accessible Value\"\n-                + \" implementation doesn't accept new \"\n-                + \"BigDecimal(BigInteger.ONE)\");\n-        }\n-\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Integer.valueOf(5))) {\n-            throw new RuntimeException(\"jScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Integer\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Float.valueOf(5))) {\n-            throw new RuntimeException(\"jScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Float\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Double.valueOf(5))) {\n-            throw new RuntimeException(\"jScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Double\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Long.valueOf(5))) {\n-            throw new RuntimeException(\"jScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Long\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Short.valueOf((short) 123))) {\n-            throw new RuntimeException(\"jScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept Short\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(BigInteger.ONE)) {\n-            throw new RuntimeException(\"jScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept BigInteger.ONE\");\n-        }\n-        if (!jScrollBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(new BigDecimal(BigInteger.ONE))) {\n-            throw new RuntimeException(\"jScrollBar's Accessible Value\"\n-                + \" implementation doesn't accept new \"\n-                + \"BigDecimal(BigInteger.ONE)\");\n-        }\n-\n-        if (!jProgressBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Integer.valueOf(5))) {\n-            throw new RuntimeException(\"jProgressBar's Accessible Value\"\n-                + \" implementation doesn't accept Integer\");\n-        }\n-        if (!jProgressBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Float.valueOf(5))) {\n-            throw new RuntimeException(\"jProgressBar's Accessible Value\"\n-                + \" implementation doesn't accept Float\");\n-        }\n-        if (!jProgressBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Double.valueOf(5))) {\n-            throw new RuntimeException(\"jProgressBar's Accessible Value\"\n-                + \" implementation doesn't accept Double\");\n-        }\n-        if (!jProgressBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Long.valueOf(5))) {\n-            throw new RuntimeException(\"jProgressBar's Accessible Value\"\n-                + \" implementation doesn't accept Long\");\n-        }\n-        if (!jProgressBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Short.valueOf((short) 123))) {\n-            throw new RuntimeException(\"jProgressBar's Accessible Value\"\n-                + \" implementation doesn't accept Short\");\n-        }\n-        if (!jProgressBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(BigInteger.ONE)) {\n-            throw new RuntimeException(\"jProgressBar's Accessible Value\"\n-                + \" implementation doesn't accept BigInteger.ONE\");\n-        }\n-        if (!jProgressBar.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(new BigDecimal(BigInteger.ONE))) {\n-            throw new RuntimeException(\"jProgressBar's Accessible Value\"\n-                + \" implementation doesn't accept new \"\n-                + \"BigDecimal(BigInteger.ONE)\");\n-        }\n+    }\n@@ -278,35 +63,6 @@\n-        if (!jSlider.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Integer.valueOf(5))) {\n-            throw new RuntimeException(\"jSlider's Accessible Value\"\n-                + \" implementation doesn't accept Integer\");\n-        }\n-        if (!jSlider.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Float.valueOf(5))) {\n-            throw new RuntimeException(\"jSlider's Accessible Value\"\n-                + \" implementation doesn't accept Float\");\n-        }\n-        if (!jSlider.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Double.valueOf(5))) {\n-            throw new RuntimeException(\"jSlider's Accessible Value\"\n-                + \" implementation doesn't accept Double\");\n-        }\n-        if (!jSlider.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Long.valueOf(5))) {\n-            throw new RuntimeException(\"jSlider's Accessible Value\"\n-                + \" implementation doesn't accept Long\");\n-        }\n-        if (!jSlider.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(Short.valueOf((short) 123))) {\n-            throw new RuntimeException(\"jSlider's Accessible Value\"\n-                + \" implementation doesn't accept Short\");\n-        }\n-        if (!jSlider.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(BigInteger.ONE)) {\n-            throw new RuntimeException(\"jSlider's Accessible Value\"\n-                + \" implementation doesn't accept BigInteger.ONE\");\n-        }\n-        if (!jSlider.getAccessibleContext().getAccessibleValue()\n-            .setCurrentAccessibleValue(new BigDecimal(BigInteger.ONE))) {\n-            throw new RuntimeException(\"jSlider's Accessible Value\"\n-                + \" implementation doesn't accept new \"\n-                + \"BigDecimal(BigInteger.ONE)\");\n+    static void testIt(JComponent jComponent, Number number) {\n+        if (!jComponent.getAccessibleContext().getAccessibleValue()\n+            .setCurrentAccessibleValue(number)) {\n+            throw new RuntimeException(jComponent.getClass().getName()\n+                + \" Accessible Value implementation doesn't accept \"\n+                + number.getClass().getName());\n","filename":"test\/jdk\/javax\/accessibility\/4422535\/SetCurrentAccessibleValueTest.java","additions":19,"deletions":263,"binary":false,"changes":282,"status":"modified"}]}