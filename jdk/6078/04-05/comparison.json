{"files":[{"patch":"@@ -37,0 +37,1 @@\n+ * @modules java.sql\n@@ -48,4 +49,4 @@\n-    public static void main(final String[] args) throws Exception {\n-        final ModuleDescriptor md = fromBootLayer().getDescriptor();\n-        assertTestPrerequisite(md);\n-        final int expectedHashCode = md.hashCode();\n+    public static void main(String[] args) throws Exception {\n+        ModuleDescriptor md = javaSQLModuleFromBootLayer().getDescriptor();\n+        assertRequiresHasModifier(md);\n+        int expectedHashCode = md.hashCode();\n@@ -55,2 +56,2 @@\n-            final boolean disableCDS = (i % 2 == 0);\n-            final String[] processArgs;\n+            boolean disableCDS = (i % 2 == 0);\n+            String[] processArgs;\n@@ -65,3 +66,3 @@\n-            final ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(processArgs);\n-            final long start = System.currentTimeMillis();\n-            final OutputAnalyzer outputAnalyzer = ProcessTools.executeProcess(processBuilder);\n+            ProcessBuilder processBuilder = ProcessTools.createJavaProcessBuilder(processArgs);\n+            long start = System.currentTimeMillis();\n+            OutputAnalyzer outputAnalyzer = ProcessTools.executeProcess(processBuilder);\n@@ -82,5 +83,5 @@\n-        public static void main(final String[] args) throws Exception {\n-            final int expectedHashCode = Integer.parseInt(args[0]);\n-            final Module bootModule = fromBootLayer();\n-            final ModuleDescriptor bootMD = bootModule.getDescriptor();\n-            final int actualHashCode = bootMD.hashCode();\n+        public static void main(String[] args) throws Exception {\n+            int expectedHashCode = Integer.parseInt(args[0]);\n+            Module bootModule = javaSQLModuleFromBootLayer();\n+            ModuleDescriptor bootMD = bootModule.getDescriptor();\n+            int actualHashCode = bootMD.hashCode();\n@@ -92,1 +93,1 @@\n-            final ModuleDescriptor mdFromBuilder = fromModuleInfoClass(bootModule);\n+            ModuleDescriptor mdFromBuilder = fromModuleInfoClass(bootModule);\n@@ -99,1 +100,1 @@\n-            final int hashCode = mdFromBuilder.hashCode();\n+            int hashCode = mdFromBuilder.hashCode();\n@@ -106,1 +107,1 @@\n-                final int h = mdFromBuilder.hashCode();\n+                int h = mdFromBuilder.hashCode();\n@@ -115,1 +116,1 @@\n-    private static void assertTestPrerequisite(final ModuleDescriptor moduleDescriptor) {\n+    private static void assertRequiresHasModifier(ModuleDescriptor moduleDescriptor) {\n@@ -122,2 +123,2 @@\n-        for (ModuleDescriptor.Requires requirement : moduleDescriptor.requires()) {\n-            if (!requirement.modifiers().isEmpty()) {\n+        for (ModuleDescriptor.Requires requires : moduleDescriptor.requires()) {\n+            if (!requires.modifiers().isEmpty()) {\n@@ -131,1 +132,1 @@\n-    private static Module fromBootLayer() {\n+    private static Module javaSQLModuleFromBootLayer() {\n@@ -137,2 +138,2 @@\n-        final String moduleName = \"java.sql\";\n-        final Optional<Module> bootModule = ModuleLayer.boot().findModule(moduleName);\n+        String moduleName = \"java.sql\";\n+        Optional<Module> bootModule = ModuleLayer.boot().findModule(moduleName);\n@@ -146,2 +147,2 @@\n-    private static ModuleDescriptor fromModuleInfoClass(final Module module) throws IOException {\n-        try (final InputStream moduleInfo = module.getResourceAsStream(\"module-info.class\")) {\n+    private static ModuleDescriptor fromModuleInfoClass(Module module) throws IOException {\n+        try (InputStream moduleInfo = module.getResourceAsStream(\"module-info.class\")) {\n","filename":"test\/jdk\/java\/lang\/module\/ModuleDescriptorHashCodeTest.java","additions":26,"deletions":25,"binary":false,"changes":51,"status":"modified"}]}