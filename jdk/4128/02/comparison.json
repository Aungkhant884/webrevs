{"files":[{"patch":"@@ -217,1 +217,12 @@\n-                        ByteBuffer bytes = ByteBuffer.wrap(buf, 0, l);\n+                        ByteBuffer currentBytes;\n+                        if (bytes.hasRemaining()) {\n+                            int transfer = bytes.remaining();\n+                            byte[] newBuf = new byte[l + transfer];\n+                            bytes.get(newBuf, 0, transfer);\n+                            System.arraycopy(buf, 0, newBuf, transfer, l);\n+                            currentBytes = ByteBuffer.wrap(newBuf);\n+                            bytes.position(0);\n+                            bytes.limit(0);\n+                        } else {\n+                            currentBytes = ByteBuffer.wrap(buf, 0, l);\n+                        }\n@@ -219,1 +230,1 @@\n-                        decoder.decode(bytes, chars, false);\n+                        decoder.decode(currentBytes, chars, false);\n@@ -221,0 +232,6 @@\n+                        if (currentBytes.hasRemaining()) {\n+                            int pos = bytes.position();\n+                            bytes.limit(bytes.limit() + currentBytes.remaining());\n+                            bytes.put(currentBytes);\n+                            bytes.position(pos);\n+                        }\n","filename":"src\/jdk.internal.le\/share\/classes\/jdk\/internal\/org\/jline\/utils\/NonBlocking.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8182297 8242919\n+ * @bug 8182297 8242919 8267459\n@@ -93,0 +93,14 @@\n+\n+    public void testBracketedPasteNonAscii() throws Exception {\n+        Field cons = System.class.getDeclaredField(\"cons\");\n+        cons.setAccessible(true);\n+        Constructor console = Console.class.getDeclaredConstructor();\n+        console.setAccessible(true);\n+        cons.set(null, console.newInstance());\n+        doRunTest((inputSink, out) -> {\n+            inputSink.write(LineReaderImpl.BRACKETED_PASTE_BEGIN +\n+                            \"int \\u010d;\" +\n+                            LineReaderImpl.BRACKETED_PASTE_END);\n+            waitOutput(out,       \"int \\uffc4\\uff8d;\"); \/\/UTF-8 encoding of \\u010d\n+        });\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/PasteAndMeasurementsUITest.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import java.nio.charset.StandardCharsets;\n@@ -101,1 +102,1 @@\n-        Writer inputSink = new OutputStreamWriter(input.createOutput()) {\n+        Writer inputSink = new OutputStreamWriter(input.createOutput(), StandardCharsets.UTF_8) {\n","filename":"test\/langtools\/jdk\/jshell\/UITesting.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}