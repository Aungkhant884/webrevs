{"files":[{"patch":"@@ -182,2 +182,2 @@\n-HeapWord* PSOldGen::expand_and_cas_allocate(size_t word_size) {\n-  expand(word_size*HeapWordSize);\n+bool PSOldGen::expand_for_allocate(size_t word_size) {\n+  bool result = expand(word_size*HeapWordSize);\n@@ -187,1 +187,1 @@\n-  return cas_allocate_noexpand(word_size);\n+  return result;\n@@ -190,1 +190,1 @@\n-void PSOldGen::expand(size_t bytes) {\n+bool PSOldGen::expand(size_t bytes) {\n@@ -192,1 +192,1 @@\n-    return;\n+    return true;\n@@ -228,0 +228,1 @@\n+  return success;\n@@ -272,1 +273,1 @@\n-  bool result = true;\n+  bool result = false;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -82,2 +82,2 @@\n-  HeapWord* expand_and_cas_allocate(size_t word_size);\n-  void expand(size_t bytes);\n+  bool expand_for_allocate(size_t word_size);\n+  bool expand(size_t bytes);\n@@ -138,2 +138,6 @@\n-    HeapWord* res = cas_allocate_noexpand(word_size);\n-    return (res == NULL) ? expand_and_cas_allocate(word_size) : res;\n+    HeapWord* res;\n+    do {\n+      res = cas_allocate_noexpand(word_size);\n+      \/\/ Retry failed allocation if expand succeeds.\n+    } while ((res == nullptr) && expand_for_allocate(word_size));\n+    return res;\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.hpp","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"}]}