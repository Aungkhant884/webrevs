{"files":[{"patch":"@@ -218,0 +218,9 @@\n+\/\/ Only used by oldgen allocation.\n+bool MutableSpace::needs_expand(size_t word_size) const {\n+  assert_lock_strong(ExpandHeap_lock);\n+  \/\/ Holding the lock means end is stable.  So while top may be advancing\n+  \/\/ via concurrent allocations, there is no need to order the reads of top\n+  \/\/ and end here, unlike in cas_allocate.\n+  return pointer_delta(end(), top()) < word_size;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -145,0 +145,5 @@\n+  \/\/ Return true if this space needs to be expanded in order to satisfy an\n+  \/\/ allocation request of the indicated size.  Concurrent allocations and\n+  \/\/ resizes may change the result of a later call.  Used by oldgen allocator.\n+  \/\/ precondition: holding ExpandHeap_lock\n+  bool needs_expand(size_t word_size) const;\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.hpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -183,1 +183,13 @@\n-  bool result = expand(word_size*HeapWordSize);\n+  bool result = true;\n+  {\n+    MutexLocker x(ExpandHeap_lock);\n+    \/\/ Avoid \"expand storms\" by rechecking available space after obtaining\n+    \/\/ the lock, because another thread may have already made sufficient\n+    \/\/ space available.  If insufficient space available, that will remain\n+    \/\/ true until we expand, since we have the lock.  Other threads may take\n+    \/\/ the space we need before we can allocate it, regardless of whether we\n+    \/\/ expand.  That's okay, we'll just try expanding again.\n+    if (object_space()->needs_expand(word_size)) {\n+      result = expand(word_size*HeapWordSize);\n+    }\n+  }\n@@ -191,0 +203,2 @@\n+  assert_lock_strong(ExpandHeap_lock);\n+  assert_locked_or_safepoint(Heap_lock);\n@@ -192,1 +206,0 @@\n-  MutexLocker x(ExpandHeap_lock);\n@@ -322,0 +335,1 @@\n+    MutexLocker x(ExpandHeap_lock);\n@@ -325,1 +339,0 @@\n-    \/\/ shrink doesn't grab this lock, expand does. Is that right?\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"}]}