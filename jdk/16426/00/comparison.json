{"files":[{"patch":"@@ -33,0 +33,1 @@\n+import java.nio.file.LinkOption;\n@@ -599,2 +600,2 @@\n-        IOUtils.copyRecursive(topImage,\n-                appLayout.runtimeHomeDirectory(), excludes);\n+        IOUtils.copyRecursive(topImage, appLayout.runtimeHomeDirectory(),\n+                        excludes, LinkOption.NOFOLLOW_LINKS);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2019, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2019, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -698,0 +698,6 @@\n+    public static void assertSymbolicLinkExists(Path path) {\n+        assertPathExists(path, true);\n+        assertTrue(Files.isSymbolicLink(path), String.format\n+                (\"Check [%s] is a symbolic link\", path));\n+    }\n+\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.HashSet;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import jdk.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.test.TKit;\n+import jdk.jpackage.test.PackageTest;\n+import jdk.jpackage.test.PackageType;\n+import jdk.jpackage.test.Functional;\n+import jdk.jpackage.test.Annotations.Test;\n+import jdk.jpackage.test.Annotations.Parameter;\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.JavaTool;\n+import jdk.jpackage.test.Executor;\n+\n+\/**\n+ * Test --runtime-image parameter with runtime image containing symbolic links.\n+ * This test only for macOS and Linux.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @summary jpackage with --runtime-image\n+ * @library ..\/helpers\n+ * @key jpackagePlatformPackage\n+ * @requires (os.family != \"windows\")\n+ * @build jdk.jpackage.test.*\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @compile RuntimeImageSymbolicLinksTest.java\n+ * @run main\/othervm\/timeout=1400 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=RuntimeImageSymbolicLinksTest\n+ *\/\n+\n+public class RuntimeImageSymbolicLinksTest {\n+\n+    @Test\n+    public static void test() throws Exception {\n+        final Path workDir = TKit.createTempDirectory(\"runtime\").resolve(\"data\");\n+        final Path jlinkOutputDir = workDir.resolve(\"temp.runtime\");\n+        Files.createDirectories(jlinkOutputDir.getParent());\n+\n+        new Executor()\n+        .setToolProvider(JavaTool.JLINK)\n+        .dumpOutput()\n+        .addArguments(\n+                \"--output\", jlinkOutputDir.toString(),\n+                \"--add-modules\", \"ALL-MODULE-PATH\",\n+                \"--strip-debug\",\n+                \"--no-header-files\",\n+                \"--no-man-pages\",\n+                \"--strip-native-commands\")\n+        .execute();\n+\n+        \/\/ Add symbolic links to generated runtime image\n+        \/\/ Release file\n+        Path releaseLink = jlinkOutputDir.resolve(\"releaseLink\");\n+        Path releaseTarget = Path.of(\"release\");\n+        TKit.assertFileExists(jlinkOutputDir.resolve(\"release\"));\n+        Files.createSymbolicLink(releaseLink, releaseTarget);\n+        \/\/ Legal directory\n+        Path legalLink = jlinkOutputDir.resolve(\"legalLink\");\n+        Path legalTarget = Path.of(\"legal\");\n+        TKit.assertDirectoryExists(jlinkOutputDir.resolve(\"legal\"));\n+        Files.createSymbolicLink(legalLink, legalTarget);\n+\n+        JPackageCommand cmd = JPackageCommand.helloAppImage()\n+            .setArgumentValue(\"--runtime-image\", jlinkOutputDir.toString());\n+\n+        cmd.executeAndAssertHelloAppImageCreated();\n+\n+        ApplicationLayout appLayout = cmd.appLayout();\n+        Path runtimeDir = appLayout.runtimeHomeDirectory();\n+\n+        \/\/ Make sure that links are exist\n+        releaseLink = runtimeDir.resolve(\"releaseLink\");\n+        TKit.assertSymbolicLinkExists(releaseLink);\n+        legalLink = runtimeDir.resolve(\"legalLink\");\n+        TKit.assertSymbolicLinkExists(legalLink);\n+    }\n+\n+}\n","filename":"test\/jdk\/tools\/jpackage\/share\/RuntimeImageSymbolicLinksTest.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,0 @@\n-import java.io.IOException;\n@@ -27,4 +26,0 @@\n-import java.util.HashSet;\n-import java.util.Optional;\n-import java.util.Set;\n-import java.util.stream.Collectors;\n@@ -32,3 +27,0 @@\n-import jdk.jpackage.test.PackageTest;\n-import jdk.jpackage.test.PackageType;\n-import jdk.jpackage.test.Functional;\n@@ -37,1 +29,0 @@\n-import jdk.jpackage.test.PackageTest;\n@@ -48,1 +39,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/RuntimeImageTest.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"}]}