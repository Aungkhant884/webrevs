{"files":[{"patch":"@@ -395,1 +395,1 @@\n-    WBR(BlockType.INLINE, EndKind.REQUIRED),\n+    WBR(BlockType.INLINE, EndKind.NONE),\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/HtmlTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,72 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8266856\n+ * @modules jdk.javadoc\/jdk.javadoc.internal.doclint\n+ *          jdk.javadoc\/jdk.javadoc.internal.doclets.formats.html.markup\n+ * @run main TestVoidHtmlElements\n+ *\/\n+\n+import jdk.javadoc.internal.doclets.formats.html.markup.HtmlTree;\n+import jdk.javadoc.internal.doclets.formats.html.markup.TagName;\n+import jdk.javadoc.internal.doclint.HtmlTag;\n+\n+public class TestVoidHtmlElements {\n+\n+    public static void main(String[] args) {\n+        int checks = 0;\n+\n+        for (HtmlTag htmlTag : HtmlTag.values()) {\n+            try {\n+                TagName tagName = TagName.valueOf(htmlTag.name());\n+                checks++;\n+                check(htmlTag, tagName);\n+            } catch (IllegalArgumentException e) {\n+            }\n+        }\n+\n+        for (TagName tagName : TagName.values()) {\n+            try {\n+                HtmlTag htmlTag = HtmlTag.valueOf(tagName.name());\n+                checks++;\n+                check(htmlTag, tagName);\n+            } catch (IllegalArgumentException e) {\n+            }\n+        }\n+\n+        if (checks == 0) { \/\/ suspicious\n+            throw new AssertionError();\n+        }\n+        System.out.println(checks + \" checks passed\");\n+    }\n+\n+    private static void check(HtmlTag htmlTag, TagName tagName) {\n+        boolean elementIsVoid = new HtmlTree(tagName).isVoid();\n+        boolean elementHasNoEndTag = htmlTag.endKind == HtmlTag.EndKind.NONE;\n+        if (elementIsVoid != elementHasNoEndTag) {\n+            throw new AssertionError(htmlTag + \", \" + elementIsVoid + \", \" + elementHasNoEndTag);\n+        }\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testVoidHtmlElements\/TestVoidHtmlElements.java","additions":72,"deletions":0,"binary":false,"changes":72,"status":"added"},{"patch":"@@ -3,1 +3,1 @@\n- * @bug 8072945 8247957\n+ * @bug 8072945 8247957 8266856\n@@ -154,1 +154,1 @@\n-     * <p>Test <wbr>WBR<\/wbr> text<\/p>\n+     * <p>Test<wbr>text<\/p>\n","filename":"test\/langtools\/tools\/doclint\/html\/HtmlVersionTagsAttrsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}