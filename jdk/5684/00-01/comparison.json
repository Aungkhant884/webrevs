{"files":[{"patch":"@@ -387,2 +387,7 @@\n-    \/\/ \"this\" should be the monitor with lowest rank owned by this thread.\n-    if (least != NULL && least->rank() <= this->rank()) {\n+    \/\/ We enforce not holding locks of rank nosafepoint or lower while waiting for JavaThreads,\n+    \/\/ because the held lock has a NoSafepointVerifier so waiting on a lock will block out safepoints.\n+    \/\/ For NonJavaThreads, we enforce not waiting on the tty lock since that could block progress also.\n+    \/\/ Also \"this\" should be the monitor with lowest rank owned by this thread.\n+    if (least != NULL && ((least->rank() <= Mutex::nosafepoint && thread->is_Java_thread()) ||\n+                           least->rank() <= Mutex::tty ||\n+                           least->rank() <= this->rank())) {\n@@ -391,1 +396,5 @@\n-              \"Should wait on the least ranked monitor from all owned locks.\");\n+             least->rank() <= this->rank() ?\n+              \"Should wait on the least ranked monitor from all owned locks.\" :\n+             thread->is_Java_thread() ?\n+              \"Should not block(wait) while holding a lock of rank nosafepoint or below.\" :\n+              \"Should not block(wait) while holding a lock of rank tty or below.\");\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -751,1 +751,1 @@\n-    _lock = new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"ParallelHProfWriter_lock\", Mutex::_safepoint_check_never);\n+    _lock = new (std::nothrow) PaddedMonitor(Mutex::leaf, \"Parallel HProf writer lock\", Mutex::_safepoint_check_never);\n@@ -1817,1 +1817,1 @@\n-     _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"DumperController_lock\",\n+     _lock(new (std::nothrow) PaddedMonitor(Mutex::leaf, \"Dumper Controller lock\",\n","filename":"src\/hotspot\/share\/services\/heapDumper.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -203,1 +203,1 @@\n-  _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint-1, \"HProfCompressionBackend_lock\",\n+  _lock(new (std::nothrow) PaddedMonitor(Mutex::nosafepoint, \"HProfCompressionBackend_lock\",\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -207,0 +207,55 @@\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_rank_nosafepoint,\n+                   \".* Attempting to wait on monitor monitor_rank_nosafepoint_minus_one\/.* while holding lock monitor_rank_nosafepoint\/.*\"\n+                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank nosafepoint or below.\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_nosafepoint_minus_one = new Monitor(Mutex::nosafepoint - 1, \"monitor_rank_nosafepoint_minus_one\", Mutex::_safepoint_check_never);\n+\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint_minus_one->lock_without_safepoint_check();\n+  monitor_rank_nosafepoint_minus_one->wait_without_safepoint_check(1);\n+  monitor_rank_nosafepoint_minus_one->unlock();\n+  monitor_rank_nosafepoint->unlock();\n+}\n+\n+\/\/ NonJavaThreads can't wait while holding tty lock or below.\n+class VM_MutexWaitTTY : public VM_GTestExecuteAtSafepoint {\n+ public:\n+  void doit() {\n+    Monitor* monitor_rank_tty = new Monitor(Mutex::tty, \"monitor_rank_tty\", Mutex::_safepoint_check_never);\n+    Monitor* monitor_rank_event = new Monitor(Mutex::event, \"monitor_rank_event\", Mutex::_safepoint_check_never);\n+\n+    monitor_rank_tty->lock_without_safepoint_check();\n+    monitor_rank_event->lock_without_safepoint_check();\n+    monitor_rank_event->wait_without_safepoint_check(1);\n+    monitor_rank_event->unlock();\n+    monitor_rank_tty->unlock();\n+  }\n+};\n+\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_event_tty,\n+                   \".* Attempting to wait on monitor monitor_rank_event\/0 while holding lock monitor_rank_tty\/.*\"\n+                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank tty or below.\") {\n+  VM_MutexWaitTTY op;\n+  ThreadInVMfromNative invm(JavaThread::current());\n+  VMThread::execute(&op);\n+}\n+\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_wait_tty_nosafepoint,\n+                   \".* Attempting to wait on monitor monitor_rank_tty\/.* while holding lock monitor_rank_nosafepoint\/.*\"\n+                   \"-- possible deadlock. Should not block\\\\(wait\\\\) while holding a lock of rank nosafepoint or below.\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Monitor* monitor_rank_nosafepoint = new Monitor(Mutex::nosafepoint, \"monitor_rank_nosafepoint\", Mutex::_safepoint_check_never);\n+  Monitor* monitor_rank_tty = new Monitor(Mutex::tty, \"monitor_rank_tty\", Mutex::_safepoint_check_never);\n+\n+  monitor_rank_nosafepoint->lock_without_safepoint_check();\n+  monitor_rank_tty->lock_without_safepoint_check();\n+  monitor_rank_tty->wait_without_safepoint_check(1);\n+  monitor_rank_tty->unlock();\n+  monitor_rank_nosafepoint->unlock();\n+}\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_mutex.cpp","additions":55,"deletions":0,"binary":false,"changes":55,"status":"modified"}]}