{"files":[{"patch":"@@ -393,10 +393,14 @@\n-        Path[] list = Files.list(rootDir).toArray(Path[]::new);\n-        if (list != null) { \/\/ Should not happend\n-            \/\/ We should only have app image and\/or .DS_Store\n-            if (list.length == 1) {\n-                return rootDir.toString();\n-            } else if (list.length == 2) {\n-                \/\/ Check case with app image and .DS_Store\n-                if (list[0].toString().toLowerCase().endsWith(\".ds_store\") ||\n-                    list[1].toString().toLowerCase().endsWith(\".ds_store\")) {\n-                    return rootDir.toString(); \/\/ Only app image and .DS_Store\n+        \/\/ Not needed for runtime installer and it might break runtime installer\n+        \/\/ if parent does not have any other files\n+        if (!StandardBundlerParam.isRuntimeInstaller(params)) {\n+            try (var fileList = Files.list(rootDir)) {\n+                Path[] list = fileList.toArray(Path[]::new);\n+                \/\/ We should only have app image and\/or .DS_Store\n+                if (list.length == 1) {\n+                    return rootDir.toString();\n+                } else if (list.length == 2) {\n+                    \/\/ Check case with app image and .DS_Store\n+                    if (list[0].toString().toLowerCase().endsWith(\".ds_store\") ||\n+                        list[1].toString().toLowerCase().endsWith(\".ds_store\")) {\n+                        return rootDir.toString(); \/\/ Only app image and .DS_Store\n+                    }\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -154,0 +154,1 @@\n+                    .filter(x -> !x.endsWith(\".DS_Store\"))\n","filename":"test\/jdk\/tools\/jpackage\/share\/RuntimePackageTest.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}