{"files":[{"patch":"@@ -68,0 +68,7 @@\n+        this(userSpecifiedConstraints, null, enabledX509DisabledAlgConstraints);\n+    }\n+\n+    private SSLAlgorithmConstraints(\n+            AlgorithmConstraints userSpecifiedConstraints,\n+            SupportedSignatureAlgorithmConstraints peerSpecifiedConstraints,\n+            boolean withDefaultCertPathConstraints) {\n@@ -69,2 +76,2 @@\n-        this.peerSpecifiedConstraints = null;\n-        this.enabledX509DisabledAlgConstraints = enabledX509DisabledAlgConstraints;\n+        this.peerSpecifiedConstraints = peerSpecifiedConstraints;\n+        this.enabledX509DisabledAlgConstraints = withDefaultCertPathConstraints;\n@@ -81,2 +88,8 @@\n-        if (userSpecifiedConstraints == DEFAULT || userSpecifiedConstraints == null) {\n-            return DEFAULT;\n+        return wrap(userSpecifiedConstraints, true);\n+    }\n+\n+    private static AlgorithmConstraints wrap(\n+            AlgorithmConstraints userSpecifiedConstraints,\n+            boolean withDefaultCertPathConstraints) {\n+        if (nullIfDefault(userSpecifiedConstraints) == null) {\n+            return withDefaultCertPathConstraints ? DEFAULT : DEFAULT_SSL_ONLY;\n@@ -84,1 +97,1 @@\n-        return new SSLAlgorithmConstraints(userSpecifiedConstraints, true);\n+        return new SSLAlgorithmConstraints(userSpecifiedConstraints, withDefaultCertPathConstraints);\n@@ -97,5 +110,11 @@\n-                nullIfDefault(getUserSpecifiedConstraints(socket));\n-        if (userSpecifiedConstraints == null) {\n-            return withDefaultCertPathConstraints ? DEFAULT : DEFAULT_SSL_ONLY;\n-        }\n-        return new SSLAlgorithmConstraints(userSpecifiedConstraints,\n+                getUserSpecifiedConstraints(socket);\n+        return wrap(userSpecifiedConstraints, withDefaultCertPathConstraints);\n+    }\n+\n+    static SSLAlgorithmConstraints forSocket(\n+            SSLSocket socket,\n+            String[] supportedAlgorithms,\n+            boolean withDefaultCertPathConstraints) {\n+        return new SSLAlgorithmConstraints(\n+                nullIfDefault(getUserSpecifiedConstraints(socket)),\n+                new SupportedSignatureAlgorithmConstraints(supportedAlgorithms),\n@@ -115,6 +134,2 @@\n-                nullIfDefault(getUserSpecifiedConstraints(engine));\n-        if (userSpecifiedConstraints == null) {\n-            return withDefaultCertPathConstraints ? DEFAULT : DEFAULT_SSL_ONLY;\n-        }\n-        return new SSLAlgorithmConstraints(userSpecifiedConstraints,\n-                withDefaultCertPathConstraints);\n+                getUserSpecifiedConstraints(engine);\n+        return wrap(userSpecifiedConstraints, withDefaultCertPathConstraints);\n@@ -123,1 +138,3 @@\n-    SSLAlgorithmConstraints(SSLSocket socket, String[] supportedAlgorithms,\n+    static SSLAlgorithmConstraints forEngine(\n+            SSLEngine engine,\n+            String[] supportedAlgorithms,\n@@ -125,14 +142,4 @@\n-        this.userSpecifiedConstraints =\n-                nullIfDefault(getUserSpecifiedConstraints(socket));\n-        this.peerSpecifiedConstraints =\n-                new SupportedSignatureAlgorithmConstraints(supportedAlgorithms);\n-        this.enabledX509DisabledAlgConstraints = withDefaultCertPathConstraints;\n-    }\n-\n-    SSLAlgorithmConstraints(SSLEngine engine, String[] supportedAlgorithms,\n-            boolean withDefaultCertPathConstraints) {\n-        this.userSpecifiedConstraints =\n-                nullIfDefault(getUserSpecifiedConstraints(engine));\n-        this.peerSpecifiedConstraints =\n-                new SupportedSignatureAlgorithmConstraints(supportedAlgorithms);\n-        this.enabledX509DisabledAlgConstraints = withDefaultCertPathConstraints;\n+        return new SSLAlgorithmConstraints(\n+                nullIfDefault(getUserSpecifiedConstraints(engine)),\n+                new SupportedSignatureAlgorithmConstraints(supportedAlgorithms),\n+                withDefaultCertPathConstraints);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLAlgorithmConstraints.java","additions":38,"deletions":31,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -1488,1 +1488,1 @@\n-                    constraints = new SSLAlgorithmConstraints(\n+                    constraints = SSLAlgorithmConstraints.forSocket(\n@@ -1528,1 +1528,1 @@\n-                    constraints = new SSLAlgorithmConstraints(\n+                    constraints = SSLAlgorithmConstraints.forEngine(\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLContextImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-                    return new SSLAlgorithmConstraints(\n+                    return SSLAlgorithmConstraints.forSocket(\n@@ -228,1 +228,1 @@\n-                    return new SSLAlgorithmConstraints(\n+                    return SSLAlgorithmConstraints.forEngine(\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509KeyManagerImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -219,1 +219,1 @@\n-                constraints = new SSLAlgorithmConstraints(\n+                constraints = SSLAlgorithmConstraints.forSocket(\n@@ -273,1 +273,1 @@\n-                constraints = new SSLAlgorithmConstraints(\n+                constraints = SSLAlgorithmConstraints.forEngine(\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/X509TrustManagerImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}