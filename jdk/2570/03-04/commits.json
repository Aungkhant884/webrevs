[{"commit":{"message":"[SIM-JVM-526] fix a crash in scalar replacement\n\nEven though field_val is the value field of j.l.String, the code shape has be changed\nby StringOpt for the more efficient string concatenantion. The array is generated from\njdk.internal.misc.Unsafe::allocateUninitializedArray instead of AllocateArray node.\n\nThis patch checks stricter before genenerating the special SafePointScalarObjectNode node.\n\nThis bug is triggered in the following 2 tests with '-ea -esa -XX:CompileThreshold=100':\ncompiler\/codecache\/stress\/RandomAllocationTest.java\ncompiler\/codecache\/stress\/UnexpectedDeoptimizationTest.java"},"files":[{"filename":"src\/hotspot\/share\/opto\/macro.cpp"}],"sha":"6bd99e8a0a39613667bc9e945e0d8bd55ac4c4c1"}]