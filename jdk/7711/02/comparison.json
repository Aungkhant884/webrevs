{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,0 +76,24 @@\n+    \/**\n+     * Report an InvalidClassException for the reason and cause specified.\n+     *\n+     * @param reason  String describing the reason for the exception.\n+     * @param cause the cause\n+     * @since 19\n+     *\/\n+    public InvalidClassException(String reason, Throwable cause) {\n+        super(reason, cause);\n+    }\n+\n+    \/**\n+     * Report an InvalidClassException for the reason and cause specified.\n+     *\n+     * @param cname   a String naming the invalid class.\n+     * @param reason  String describing the reason for the exception.\n+     * @param cause the cause\n+     * @since 19\n+     *\/\n+    public InvalidClassException(String cname, String reason, Throwable cause) {\n+        super(reason, cause);\n+        classname = cname;\n+    }\n+\n","filename":"src\/java.base\/share\/classes\/java\/io\/InvalidClassException.java","additions":25,"deletions":1,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,14 @@\n+\n+    \/**\n+     * Constructs an {@code InvalidObjectException} with the given\n+     * reason and cause.\n+     *\n+     * @param reason Detailed message explaining the reason for the failure.\n+     * @param cause the cause\n+     *\n+     * @see ObjectInputValidation\n+     * @since 19\n+     *\/\n+    public  InvalidObjectException(String reason, Throwable cause) {\n+        super(reason, cause);\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/io\/InvalidObjectException.java","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1432,3 +1432,1 @@\n-            InvalidClassException ice = new InvalidClassException(\"filter status: \" + status);\n-            ice.initCause(ex);\n-            throw ice;\n+            throw new InvalidClassException(\"filter status: \" + status, ex);\n@@ -1999,3 +1997,1 @@\n-            IOException ice = new InvalidClassException(aie.getMessage());\n-            ice.initCause(aie);\n-            throw ice;\n+            throw new InvalidClassException(aie.getMessage(), aie);\n@@ -2003,4 +1999,2 @@\n-            IOException ex = new InvalidObjectException(\"Proxy interface limit exceeded: \" +\n-                    Arrays.toString(ifaces));\n-            ex.initCause(memerr);\n-            throw ex;\n+            throw new InvalidObjectException(\"Proxy interface limit exceeded: \" +\n+                                             Arrays.toString(ifaces), memerr);\n@@ -2019,4 +2013,2 @@\n-            IOException ex = new InvalidObjectException(\"Proxy interface limit exceeded: \" +\n-                    Arrays.toString(ifaces));\n-            ex.initCause(memerr);\n-            throw ex;\n+            throw new InvalidObjectException(\"Proxy interface limit exceeded: \" +\n+                                             Arrays.toString(ifaces), memerr);\n@@ -2053,2 +2045,2 @@\n-            throw (IOException) new InvalidClassException(\n-                \"failed to read class descriptor\").initCause(ex);\n+            throw new InvalidClassException(\"failed to read class descriptor\",\n+                                            ex);\n@@ -2224,3 +2216,3 @@\n-                throw (IOException) new InvalidObjectException(\n-                    \"enum constant \" + name + \" does not exist in \" +\n-                    cl).initCause(ex);\n+                throw new InvalidObjectException(\"enum constant \" +\n+                                                 name + \" does not exist in \" +\n+                                                 cl, ex);\n@@ -2265,3 +2257,2 @@\n-            throw (IOException) new InvalidClassException(\n-                desc.forClass().getName(),\n-                \"unable to create instance\").initCause(ex);\n+            throw new InvalidClassException(desc.forClass().getName(),\n+                                            \"unable to create instance\", ex);\n@@ -2391,3 +2382,1 @@\n-            InvalidObjectException ioe = new InvalidObjectException(e.getMessage());\n-            ioe.initCause(e);\n-            throw ioe;\n+            throw new InvalidObjectException(e.getMessage(), e);\n@@ -2397,4 +2386,2 @@\n-            ObjectStreamException ose = new InvalidObjectException(\n-                    \"ReflectiveOperationException during deserialization\");\n-            ose.initCause(t);\n-            throw ose;\n+            throw new InvalidObjectException(\"ReflectiveOperationException \" +\n+                                             \"during deserialization\", t);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java","additions":16,"deletions":29,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -712,2 +712,3 @@\n-                throw (IOException) new InvalidClassException(name,\n-                    \"invalid descriptor for field \" + fname).initCause(e);\n+                throw new InvalidClassException(name,\n+                                                \"invalid descriptor for field \" +\n+                                                fname, e);\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,0 +47,12 @@\n+    \/**\n+     * Create an ObjectStreamException with the specified message and\n+     * cause.\n+     *\n+     * @param message the detailed message for the exception\n+     * @param cause the cause\n+     * @since 19\n+     *\/\n+    protected ObjectStreamException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+\n@@ -53,0 +65,10 @@\n+\n+    \/**\n+     * Create an ObjectStreamException with the specified cause.\n+     *\n+     * @param cause the cause\n+     * @since 19\n+     *\/\n+    protected ObjectStreamException(Throwable cause) {\n+        super(cause);\n+    }\n","filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamException.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"}]}