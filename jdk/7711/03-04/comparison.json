{"files":[{"patch":"@@ -103,0 +103,1 @@\n+    @Override\n","filename":"src\/java.base\/share\/classes\/java\/io\/InvalidClassException.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    public  InvalidObjectException(String reason, Throwable cause) {\n+    public InvalidObjectException(String reason, Throwable cause) {\n","filename":"src\/java.base\/share\/classes\/java\/io\/InvalidObjectException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,58 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282696\n+ * @summary Verify message and cause handling of InvalidClassException\n+ *\/\n+import java.io.*;\n+import java.util.Objects;\n+\n+public class TestIceConstructors {\n+    public static void main(String... args) {\n+        String reason = \"reason\";\n+        Throwable cause = new RuntimeException();\n+\n+        testException(new InvalidClassException(reason),\n+                      reason, null);\n+        testException(new InvalidClassException(reason, cause),\n+                      reason, cause);\n+        testException(new InvalidClassException(\"prefix\", reason, cause),\n+                      \"prefix\" + \"; \" + reason, cause);\n+    }\n+\n+    private static void testException(InvalidClassException ice,\n+                                      String expectedMessage,\n+                                      Throwable expectedCause) {\n+        var message = ice.getMessage();\n+        if (!Objects.equals(message, expectedMessage)) {\n+            throw new RuntimeException(\"Unexpected message \" + message);\n+        }\n+\n+        var cause = ice.getCause();\n+        if (cause != expectedCause) {\n+            throw new RuntimeException(\"Unexpected cause\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/Serializable\/InvalidClassException\/TestIceConstructors.java","additions":58,"deletions":0,"binary":false,"changes":58,"status":"added"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8282696\n+ * @summary Verify message and cause handling of InvalidObjectException\n+ *\/\n+import java.io.*;\n+import java.util.Objects;\n+\n+public class TestIoeConstructors {\n+    public static void main(String... args) {\n+        String reason = \"reason\";\n+        Throwable cause = new RuntimeException();\n+\n+        testException(new InvalidObjectException(reason),\n+                      reason, null);\n+        testException(new InvalidObjectException(reason, cause),\n+                      reason, cause);\n+    }\n+\n+    private static void testException(InvalidObjectException ioe,\n+                                      String expectedMessage,\n+                                      Throwable expectedCause) {\n+        var message = ioe.getMessage();\n+        if (!Objects.equals(message, expectedMessage)) {\n+            throw new RuntimeException(\"Unexpected message \" + message);\n+        }\n+\n+        var cause = ioe.getCause();\n+        if (cause != expectedCause) {\n+            throw new RuntimeException(\"Unexpected cause\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/io\/Serializable\/InvalidObjectException\/TestIoeConstructors.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}