{"files":[{"patch":"@@ -3721,3 +3721,5 @@\n-    \/\/ Closing the inner scope will execute the destructor for the G1RootProcessor object.\n-    \/\/ To extract its code root fixup time we measure total time of this scope and\n-    \/\/ subtract from the time the WorkGang task took.\n+    \/\/ Closing the inner scope will execute the destructor for the\n+    \/\/ G1RootProcessor object. By subtracting the WorkGang task from the total\n+    \/\/ time of this scope, we get the \"NMethod List Cleanup\" time. This list is\n+    \/\/ constructed during \"STW two-phase nmethod root processing\", see more in\n+    \/\/ nmethod.hpp\n@@ -3728,1 +3730,1 @@\n-  p->record_or_add_code_root_fixup_time((total_processing - task_time).seconds() * 1000.0);\n+  p->record_or_add_nmethod_list_cleanup_time((total_processing - task_time).seconds() * 1000.0);\n@@ -3753,0 +3755,1 @@\n+  \/\/ To access the protected constructor\/destructor\n@@ -3762,1 +3765,1 @@\n-    \/\/ See comment in evacuate_collection_set() for the reason of the scope.\n+    \/\/ See comment in evacuate_initial_collection_set() for the reason of the scope.\n@@ -3767,1 +3770,1 @@\n-  p->record_or_add_code_root_fixup_time((total_processing - task_time).seconds() * 1000.0);\n+  p->record_or_add_nmethod_list_cleanup_time((total_processing - task_time).seconds() * 1000.0);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-  _cur_collection_code_root_fixup_time_ms = 0.0;\n+  _cur_collection_nmethod_list_cleanup_time_ms = 0.0;\n@@ -451,1 +451,1 @@\n-  const double sum_ms = _cur_collection_code_root_fixup_time_ms +\n+  const double sum_ms = _cur_collection_nmethod_list_cleanup_time_ms +\n@@ -464,1 +464,1 @@\n-  debug_time(\"Code Roots Fixup\", _cur_collection_code_root_fixup_time_ms);\n+  debug_time(\"NMethod List Cleanup\", _cur_collection_nmethod_list_cleanup_time_ms);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -157,1 +157,1 @@\n-  double _cur_collection_code_root_fixup_time_ms;\n+  double _cur_collection_nmethod_list_cleanup_time_ms;\n@@ -286,2 +286,2 @@\n-  void record_or_add_code_root_fixup_time(double ms) {\n-    _cur_collection_code_root_fixup_time_ms += ms;\n+  void record_or_add_nmethod_list_cleanup_time(double ms) {\n+    _cur_collection_nmethod_list_cleanup_time_ms += ms;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -159,0 +159,4 @@\n+\n+        \/\/ NMethod List Cleanup\n+        new LogMessageWithLevel(\"NMethod List Cleanup\", Level.DEBUG),\n+\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestGCLogMessages.java","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}