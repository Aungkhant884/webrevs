{"files":[{"patch":"@@ -76,1 +76,2 @@\n-  LogTagSet&   _tagset;\n+  LogTagSet&         _tagset;\n+\n@@ -79,1 +80,2 @@\n-    : _level(level), _tagset(tagset) {}\n+    : _level(level),\n+      _tagset(tagset) {}\n@@ -103,1 +105,0 @@\n-\n","filename":"src\/hotspot\/share\/logging\/logHandle.hpp","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+\n@@ -70,0 +71,1 @@\n+\n@@ -99,0 +101,1 @@\n+\n@@ -107,4 +110,2 @@\n-template <LogTagType T0, LogTagType T1 = LogTag::__NO_TAG,\n-          LogTagType T2 = LogTag::__NO_TAG, LogTagType T3 = LogTag::__NO_TAG,\n-          LogTagType T4 = LogTag::__NO_TAG,\n-          LogTagType GuardTag = LogTag::__NO_TAG>\n+template <LogTagType T0, LogTagType T1 = LogTag::__NO_TAG, LogTagType T2 = LogTag::__NO_TAG, LogTagType T3 = LogTag::__NO_TAG,\n+          LogTagType T4 = LogTag::__NO_TAG, LogTagType GuardTag = LogTag::__NO_TAG>\n@@ -113,1 +114,1 @@\n-  LogMessageTemplate (LogMessageTemplate&&) = default;\n+  LogMessageTemplate(LogMessageTemplate&&) = default;\n@@ -115,1 +116,1 @@\n-      : LogMessageImpl(LogTagSetMapping<T0, T1, T2, T3, T4>::tagset()) {}\n+    : LogMessageImpl(LogTagSetMapping<T0, T1, T2, T3, T4>::tagset()) {}\n","filename":"src\/hotspot\/share\/logging\/logMessage.hpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -27,20 +27,2 @@\n-\n-template<typename BackingLog>\n-LogStreamImpl<BackingLog>::~LogStreamImpl() {\n-  if (!_current_line.is_empty()) {\n-    _backing_log.print(\"%s\", _current_line.buffer());\n-    _current_line.reset();\n-  }\n-}\n-\n-template<typename BackingLog>\n-void LogStreamImpl<BackingLog>::write(const char* s, size_t len) {\n-  if (len > 0 && s[len - 1] == '\\n') {\n-    _current_line.append(s, len - 1); \/\/ omit the newline.\n-    _backing_log.print(\"%s\", _current_line.buffer());\n-    _current_line.reset();\n-  } else {\n-    _current_line.append(s, len);\n-  }\n-  update_position(s, len);\n-}\n+#include \"runtime\/os.hpp\"\n+#include \"utilities\/align.hpp\"\n@@ -107,1 +89,1 @@\n-  bool has_capacity = try_ensure_cap(minimum_capacity_needed);\n+  const bool has_capacity = try_ensure_cap(minimum_capacity_needed);\n@@ -127,0 +109,20 @@\n+template <typename BackingLog>\n+LogStreamImpl<BackingLog>::~LogStreamImpl() {\n+  if (!_current_line.is_empty()) {\n+    _backing_log.print(\"%s\", _current_line.buffer());\n+    _current_line.reset();\n+  }\n+}\n+\n+template <typename BackingLog>\n+void LogStreamImpl<BackingLog>::write(const char* s, size_t len) {\n+  if (len > 0 && s[len - 1] == '\\n') {\n+    _current_line.append(s, len - 1); \/\/ omit the newline.\n+    _backing_log.print(\"%s\", _current_line.buffer());\n+    _current_line.reset();\n+  } else {\n+    _current_line.append(s, len);\n+  }\n+  update_position(s, len);\n+}\n+\n","filename":"src\/hotspot\/share\/logging\/logStream.cpp","additions":23,"deletions":21,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-#include \"runtime\/os.hpp\"\n-#include \"utilities\/align.hpp\"\n@@ -71,1 +69,1 @@\n-template<typename BackingLog>\n+template <typename BackingLog>\n@@ -101,2 +99,1 @@\n-  template<LogLevelType level, LogTagType T0, LogTagType T1, LogTagType T2, LogTagType T3,\n-           LogTagType T4, LogTagType GuardTag>\n+  template <LogLevelType level, LogTagType T0, LogTagType T1, LogTagType T2, LogTagType T3, LogTagType T4, LogTagType GuardTag>\n@@ -111,2 +108,1 @@\n-  template<LogLevelType level, LogTagType T0, LogTagType T1, LogTagType T2, LogTagType T3,\n-           LogTagType T4, LogTagType GuardTag>\n+  template <LogLevelType level, LogTagType T0, LogTagType T1, LogTagType T2, LogTagType T3, LogTagType T4, LogTagType GuardTag>\n@@ -129,0 +125,2 @@\n+\n+  \/\/ Destructor writes any unfinished output left in the line buffer.\n@@ -134,2 +132,1 @@\n-template<LogLevelType level, LogTagType T0, LogTagType T1, LogTagType T2, LogTagType T3,\n-         LogTagType T4, LogTagType GuardTag>\n+template <LogLevelType level, LogTagType T0, LogTagType T1, LogTagType T2, LogTagType T3, LogTagType T4, LogTagType GuardTag>\n@@ -165,3 +162,0 @@\n-  static void* operator new   (size_t) = delete;\n-  static void* operator new[] (size_t) = delete;\n-\n@@ -171,2 +165,0 @@\n-\n-  virtual ~NonInterleavingLogStream() {};\n","filename":"src\/hotspot\/share\/logging\/logStream.hpp","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+#include \"unittest.hpp\"\n@@ -135,2 +136,0 @@\n-\n-\n","filename":"test\/hotspot\/gtest\/logging\/test_logStream.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}