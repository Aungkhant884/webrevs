{"files":[{"patch":"@@ -113,5 +113,0 @@\n-            \/**\n-             * Usually this means that we got OOME:heap while trying to gain OOME:metaspace.\n-             * We pass test in this case as this breaks test logic. We have dedicated test configurations\n-             * for OOME:heap provoking class unloading, that why we are not missing test coverage here.\n-             *\/\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/metaspace\/stressHierarchy\/common\/StressHierarchyBaseClass.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * This class is used to differ OOME in metaspace and heap when trigger class unloading.\n+ * This class is used to distinguish between OOME in metaspace and OOME in heap when triggering class unloading.\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/vm\/share\/gc\/HeapOOMEException.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}