{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -149,2 +149,1 @@\n-            String tgsPrincipal =\n-                new String(\"krbtgt\/\" + realm + '@' + realm);\n+            String tgsPrincipal = \"krbtgt\/\" + realm + '@' + realm;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/krb5\/Krb5MechFactory.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -500,7 +500,7 @@\n-        return new String(\"EncryptionKey: keyType=\" + keyType\n-                          + \" kvno=\" + kvno\n-                          + \" keyValue (hex dump)=\"\n-                          + (keyValue == null || keyValue.length == 0 ?\n-                        \" Empty Key\" : '\\n'\n-                        + Krb5.hexDumper.encodeBuffer(keyValue)\n-                        + '\\n'));\n+        return \"EncryptionKey: keyType=\" + keyType\n+                + \" kvno=\" + kvno\n+                + \" keyValue (hex dump)=\"\n+                + (keyValue == null || keyValue.length == 0 ?\n+                \" Empty Key\" : '\\n'\n+                + Krb5.hexDumper.encodeBuffer(keyValue)\n+                + '\\n');\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/EncryptionKey.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -2057,1 +2057,1 @@\n-                        Name name = names.fromString(new String(sym.flatName().toString().replace('.', '$') + names.dollarThis));\n+                        Name name = names.fromString(sym.flatName().toString().replace('.', '$') + names.dollarThis);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}