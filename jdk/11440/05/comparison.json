{"files":[{"patch":"@@ -55,0 +55,7 @@\n+ * Accessing a value through a variable argument list using the wrong memory layout will result in undefined behavior.\n+ * For instance, if a variable argument list currently points at a C {@code int} value, then accessing it using\n+ * {@link #nextVarg(ValueLayout.OfLong)} is illegal. Similarly, accessing the variable argument list with\n+ * {@link #skip(MemoryLayout...)}, and providing a layout other than {@link ValueLayout.OfInt} is illegal.\n+ * Any such illegal accesses might not be detected by the implementation, and can corrupt the variable argument list,\n+ * so that the behavior of subsequent accesses is also undefined.\n+ * <p>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}