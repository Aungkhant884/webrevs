{"files":[{"patch":"@@ -55,0 +55,8 @@\n+ * Accessing a value through a variable argument list using the wrong memory layout will result in undefined behavior.\n+ * For instance, if a variable argument list currently points at a C {@code int} value, then accessing it using\n+ * {@link #nextVarg(ValueLayout.OfLong)} is illegal, but, any such illegal accesses might not be detected by\n+ * the implementation.\n+ * This goes for accesses through one of the {@code nextVarg} overloads, and {@link #skip(MemoryLayout...)}.\n+ * After an attempt to access a value using the wrong memory layout like this can result in the\n+ * variable argument list being corrupted, and the behavior of any subsequent accesses is therefor undefined as well.\n+ * <p>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/foreign\/VaList.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"}]}