{"files":[{"patch":"@@ -60,0 +60,2 @@\n+    private volatile static Object focusLock = new Object();\n+    private volatile static int delay = 500;\n@@ -72,0 +74,3 @@\n+            synchronized (focusLock) {\n+                focusLock.notifyAll();\n+            }\n@@ -129,1 +134,5 @@\n-                robot.waitForIdle();\n+                if (!focusGained) {\n+                    synchronized (focusLock) {\n+                        focusLock.wait(delay * 10);\n+                    }\n+                }\n@@ -133,1 +142,1 @@\n-                        \"FAIL: Button did not gain focus when clicked. Test cannot proceed!\");\n+                        \"FAIL: Button did not gain focus when clicked!\");\n@@ -142,1 +151,5 @@\n-            robot.waitForIdle();\n+            if (!focusGained) {\n+                synchronized (focusLock) {\n+                    focusLock.wait(delay * 10);\n+                }\n+            }\n@@ -151,1 +164,2 @@\n-                    \"FAIL: Checkbox.requestFocusInWindow did not transfer the focus to Checkbox\");\n+                    \"FAIL: Checkbox.requestFocusInWindow did not transfer \"\n+                    + \"the focus to Checkbox\");\n@@ -164,1 +178,5 @@\n-            robot.waitForIdle();\n+            if (!focusGained) {\n+                synchronized (focusLock) {\n+                    focusLock.wait(delay * 10);\n+                }\n+            }\n@@ -168,1 +186,2 @@\n-                    \"FAIL: Choice.requestFocusInWindow for a disabled Choice returned false\");\n+                    \"FAIL: Choice.requestFocusInWindow for a disabled Choice\"\n+                    + \" returned false\");\n@@ -173,1 +192,2 @@\n-                    \"FAIL: Choice.requestFocusInWindow did not transfer the focus to disabled Choice\");\n+                    \"FAIL: Choice.requestFocusInWindow did not transfer the\"\n+                    + \" focus to disabled Choice\");\n@@ -178,2 +198,2 @@\n-                    \"FAIL: Choice.hasFocus for disabled Choice returns false after\"\n-                        + \" calling Choice.requestFocusInWindow\");\n+                    \"FAIL: Choice.hasFocus for disabled Choice returns false\"\n+                    + \" after calling Choice.requestFocusInWindow\");\n@@ -189,1 +209,2 @@\n-                    \"FAIL: TextField.requestFocusInWindow returned true for hidden TextField\");\n+                    \"FAIL: TextField.requestFocusInWindow returned true for\"\n+                    + \" hidden TextField\");\n@@ -198,2 +219,2 @@\n-                    \"FAIL: TextField.hasFocus for hidden TextField returns true after calling\"\n-                        + \" TextField.requestFocusInWindow\");\n+                    \"FAIL: TextField.hasFocus for hidden TextField returns true\"\n+                    + \" after calling TextField.requestFocusInWindow\");\n@@ -211,1 +232,2 @@\n-                    \"FAIL: List.requestFocusInWindow returned true for non-focusable List\");\n+                    \"FAIL: List.requestFocusInWindow returned true for\"\n+                    + \" non-focusable List\");\n@@ -220,2 +242,2 @@\n-                    \"FAIL: List.hasFocus for non-focusable List returns true after calling\"\n-                        + \" List.requestFocusInWindow\");\n+                    \"FAIL: List.hasFocus for non-focusable List returns true\"\n+                    + \" after calling List.requestFocusInWindow\");\n","filename":"test\/jdk\/java\/awt\/Focus\/RequestFocusOwnerTest\/RequestFocusOwnerTest.java","additions":37,"deletions":15,"binary":false,"changes":52,"status":"modified"}]}