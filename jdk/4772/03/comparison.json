{"files":[{"patch":"@@ -505,1 +505,1 @@\n-unsigned int java_lang_String::hash_code(oop java_string) {\n+inline unsigned int java_lang_String::hash_code_impl(oop java_string, bool update) {\n@@ -532,4 +532,6 @@\n-  if (hash != 0) {\n-    java_string->int_field_put(_hash_offset, hash);\n-  } else {\n-    java_string->bool_field_put(_hashIsZero_offset, true);\n+  if (update) {\n+    if (hash != 0) {\n+      java_string->int_field_put(_hash_offset, hash);\n+    } else {\n+      java_string->bool_field_put(_hashIsZero_offset, true);\n+    }\n@@ -540,0 +542,9 @@\n+unsigned int java_lang_String::hash_code(oop java_string) {\n+  return hash_code_impl(java_string, \/*update=*\/true);\n+}\n+\n+unsigned int java_lang_String::hash_code_noupdate(oop java_string) {\n+  return hash_code_impl(java_string, \/*update=*\/false);\n+}\n+\n+\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":16,"deletions":5,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -130,0 +130,2 @@\n+  static inline unsigned int hash_code_impl(oop java_string, bool update);\n+\n@@ -225,0 +227,1 @@\n+  static unsigned int hash_code_noupdate(oop java_string);\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -56,0 +56,1 @@\n+#include \"utilities\/resizeableResourceHash.hpp\"\n@@ -600,1 +601,10 @@\n-  GrowableArray<oop>* _oops;\n+  static unsigned string_hash(oop const& str) {\n+    return java_lang_String::hash_code_noupdate(str);\n+  }\n+  static bool string_equals(oop const& a, oop const& b) {\n+    return java_lang_String::equals(a, b);\n+  }\n+\n+  ResizeableResourceHashtable<oop, bool,\n+                              ResourceObj::C_HEAP, mtInternal,\n+                              string_hash, string_equals> _table;\n@@ -603,1 +613,1 @@\n-  VerifyCompStrings(GrowableArray<oop>* oops) : _oops(oops), _errors(0) {}\n+  VerifyCompStrings() : _table(unsigned(_items_count \/ 8) + 1), _errors(0) {}\n@@ -609,7 +619,5 @@\n-    int len = _oops->length();\n-    for (int i = 0; i < len; i++) {\n-      bool eq = java_lang_String::equals(s, _oops->at(i));\n-      assert(!eq, \"Duplicate strings\");\n-      if (eq) {\n-        _errors++;\n-      }\n+    bool created;\n+    _table.put_if_absent(s, true, &created);\n+    assert(created, \"Duplicate strings\");\n+    if (!created) {\n+      _errors++;\n@@ -617,1 +625,0 @@\n-    _oops->push(s);\n@@ -624,5 +631,1 @@\n-  GrowableArray<oop>* oops =\n-    new (ResourceObj::C_HEAP, mtInternal)\n-      GrowableArray<oop>((int)_current_size, mtInternal);\n-\n-  VerifyCompStrings vcs(oops);\n+  VerifyCompStrings vcs;\n@@ -632,1 +635,0 @@\n-  delete oops;\n","filename":"src\/hotspot\/share\/classfile\/stringTable.cpp","additions":18,"deletions":16,"binary":false,"changes":34,"status":"modified"}]}