[{"commit":{"message":"8288883: C2: assert(allow_address || t != T_ADDRESS) failed after JDK-8283091\n\nSuperword doesn't vectorize any nodes of non-primitive types and\nthus sets allow_address false when calling type2aelembytes() in\nSuperWord::data_size(). Therefore, when we try to resolve the\ndata size for a node of T_ADDRESS type, the assertion in\ntype2aelembytes() takes effect.\n\nWe try to resolve the data sizes for node s and node t in the\nSuperWord::adjust_alignment_for_type_conversion() when type\nconversion between different data sizes happens. The issue is,\nwhen node s is a ConvI2L node and node t is an AddP node of\nT_ADDRESS type, type2aelembytes() will assert. To fix it, we\nshould filter out all non-primitive nodes, like the patch does\nin SuperWord::adjust_alignment_for_type_conversion(). Since\nit's a failure in the mid-end, all superword available platforms\nare affected. In my local test, this failure can be reproduced\non both x86 and aarch64. With this patch, the failure can be fixed.\n\nApart from fixing the bug, the patch also adds necessary type check\nand does some clean-up in SuperWord::longer_type_for_conversion()\nand VectorCastNode::implemented().\n\n[1]https:\/\/github.com\/openjdk\/jdk\/blob\/dddd4e7c81fccd82b0fd37ea4583ce1a8e175919\/src\/hotspot\/share\/opto\/superword.cpp#L1417\n[2]https:\/\/github.com\/openjdk\/jdk\/blob\/b96ba19807845739b36274efb168dd048db819a3\/src\/hotspot\/share\/utilities\/globalDefinitions.cpp#L4\n[3]https:\/\/github.com\/openjdk\/jdk\/blob\/dddd4e7c81fccd82b0fd37ea4583ce1a8e175919\/src\/hotspot\/share\/opto\/superword.cpp#L1454\n\nChange-Id: I986091a752814403d53cca44c1a2ebe18619fb8d"},"files":[{"filename":"src\/hotspot\/share\/opto\/superword.cpp"},{"filename":"src\/hotspot\/share\/opto\/superword.hpp"},{"filename":"src\/hotspot\/share\/opto\/vectornode.cpp"},{"filename":"src\/hotspot\/share\/utilities\/globalDefinitions.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopopts\/superword\/TestVectorizeTypeConversionWithUnsafe.java"}],"sha":"eaa32f1449cdcc4afd4d61257c9ac1b3bc0cbbc0"}]