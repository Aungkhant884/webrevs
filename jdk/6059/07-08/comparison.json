{"files":[{"patch":"@@ -67,1 +67,1 @@\n-  assert((_log2_card_region_per_heap_region + _log2_card_region_size) == (uint)HeapRegion::LogCardsPerRegion,\n+  assert((_log2_card_region_per_heap_region + _log2_cards_per_card_region_size) == (uint)HeapRegion::LogCardsPerRegion,\n@@ -105,1 +105,1 @@\n-  _log2_card_region_size(log2i_exact(_max_cards_in_card_set) - _log2_card_region_per_heap_region) {\n+  _log2_cards_per_card_region_size(log2i_exact(_max_cards_in_card_set) - _log2_card_region_per_heap_region) {\n@@ -132,1 +132,1 @@\n-                          \"Card regions per heap region %u card region size %u\",\n+                          \"Card regions per heap region %u cards per card region %u\",\n@@ -138,1 +138,1 @@\n-                          (uint)1 << log2_card_region_size());\n+                          (uint)1 << log2_cards_per_card_region_size());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-  uint _log2_card_region_size;\n+  uint _log2_cards_per_card_region_size;\n@@ -128,1 +128,1 @@\n-  \/\/ per area (heap region) and how large each card region is.\n+  \/\/ per area (heap region) and how many cards each card region has.\n@@ -130,1 +130,1 @@\n-  \/\/ The log2 of the amount of card regions configured.\n+  \/\/ The log2 of the amount of card regions per heap region configured.\n@@ -132,1 +132,1 @@\n-  \/\/ The log2 of the card region size. This is calculated from max_cards_in_region()\n+  \/\/ The log2 of the number of cards per card region. This is calculated from max_cards_in_region()\n@@ -134,1 +134,1 @@\n-  uint log2_card_region_size() const { return _log2_card_region_size; }\n+  uint log2_cards_per_card_region_size() const { return _log2_cards_per_card_region_size; }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n-  void do_cardsetptr(uint region_idx, size_t num_occupied, G1CardSet::CardSetPtr card_set) override {\n+  void do_cardsetptr(uint card_region_idx, size_t num_occupied, G1CardSet::CardSetPtr card_set) override {\n@@ -103,2 +103,2 @@\n-                             region_idx >> _log_card_regions_per_region,\n-                             (region_idx & _card_regions_per_region_mask) << _log_card_region_size);\n+                             card_region_idx >> _log_card_regions_per_region,\n+                             (card_region_idx & _card_regions_per_region_mask) << _log_card_region_size);\n@@ -114,1 +114,1 @@\n-                                                                                        _card_set.config()->log2_card_region_size());\n+                                                                                        _card_set.config()->log2_cards_per_card_region_size());\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.inline.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}