{"files":[{"patch":"@@ -2142,1 +2142,1 @@\n-  const int num_values = 8;\n+  const int num_values = sizeof(os::Linux::meminfo_t) \/ sizeof(size_t);\n@@ -2154,3 +2154,3 @@\n-           (info->rssanon == -1   && sscanf(buf, \"RssAnon: \" SSIZE_FORMAT \" kB\", &info->rssanon) == 1) ||\n-           (info->rssfile == -1   && sscanf(buf, \"RssFile: \" SSIZE_FORMAT \" kB\", &info->rssfile) == 1) ||\n-           (info->rssshmem == -1  && sscanf(buf, \"RssShmem: \" SSIZE_FORMAT \" kB\", &info->rssshmem) == 1)\n+           (info->rssanon == -1   && sscanf(buf, \"RssAnon: \" SSIZE_FORMAT \" kB\", &info->rssanon) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssfile == -1   && sscanf(buf, \"RssFile: \" SSIZE_FORMAT \" kB\", &info->rssfile) == 1) || \/\/ Needs Linux 4.5\n+           (info->rssshmem == -1  && sscanf(buf, \"RssShmem: \" SSIZE_FORMAT \" kB\", &info->rssshmem) == 1)  \/\/ Needs Linux 4.5\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-  \/\/ Query memory before...\n@@ -42,0 +41,1 @@\n+  \/\/ Query memory before...\n@@ -52,0 +52,1 @@\n+  bool wrote_something = false;\n@@ -56,0 +57,1 @@\n+      wrote_something = true;\n@@ -60,0 +62,1 @@\n+      wrote_something = true;\n@@ -64,0 +67,1 @@\n+      wrote_something = true;\n@@ -65,1 +69,2 @@\n-  } else {\n+  }\n+  if (!wrote_something) {\n@@ -68,0 +73,1 @@\n+\n@@ -69,2 +75,1 @@\n-  log_info(os)(\"malloc_trim: \");\n-  log_info(os)(\"%s\", ss_report.base());\n+  log_info(os)(\"malloc_trim:\\n%s\", ss_report.base());\n","filename":"src\/hotspot\/os\/linux\/trimCHeapDCmd.cpp","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    return \"VM.trim_libc_heap\";\n+    return \"System.glibc_trim_heap\";\n@@ -40,1 +40,1 @@\n-    return \"Attempts to free up memory by trimming the glibc heap.\";\n+    return \"Attempts to free up memory by trimming the glibc C-heap.\";\n","filename":"src\/hotspot\/os\/linux\/trimCHeapDCmd.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -99,1 +99,0 @@\n-  LINUX_ONLY(DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<TrimCLibcHeapDCmd>(full_export, true, false));)\n@@ -124,0 +123,1 @@\n+  DCmdFactory::register_DCmdFactory(new DCmdFactoryImpl<TrimCLibcHeapDCmd>(full_export, true, false));\n","filename":"src\/hotspot\/share\/services\/diagnosticCommand.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n-        OutputAnalyzer output = executor.execute(\"VM.trim_libc_heap\");\n+        OutputAnalyzer output = executor.execute(\"System.glibc_trim_heap\");\n@@ -45,1 +45,4 @@\n-        output.shouldMatch(\"(Done|Not available)\");\n+        output.shouldMatch(\"(Done|Not available)\"); \/\/ Not available could happen on Linux + non-glibc (eg. muslc)\n+        if (output.firstMatch(\"Done\") != null) {\n+            output.shouldMatch(\"(Virtual size before|RSS before|Swap before|No details available)\");\n+        }\n","filename":"test\/hotspot\/jtreg\/serviceability\/dcmd\/vm\/TrimLibcHeapTest.java","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"}]}