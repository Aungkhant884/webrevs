{"files":[{"patch":"@@ -34,0 +34,1 @@\n+const char* VM_Version::_vm_mode = \"\";\n@@ -39,0 +40,5 @@\n+  \/\/ check if satp.mode is supported, currently supports up to SV48(RV64)\/SV32(RV32)\n+  if (get_satp_mode() > RISCV64_ONLY(VM_SV48) RISCV32_ONLY(VM_SV32)) {\n+    vm_exit_during_initialization(err_msg(\"Unsupported satp mode: %s\", _vm_mode));\n+  }\n+\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.cpp","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,0 +41,10 @@\n+\/\/ VM modes (satp.mode) privileged ISA 1.10\n+enum VM_MODE {\n+  VM_MBARE = 0,\n+  VM_SV32  = 1,\n+  VM_SV39  = 8,\n+  VM_SV48  = 9,\n+  VM_SV57  = 10,\n+  VM_SV64  = 11\n+};\n+\n@@ -43,0 +53,1 @@\n+  static const char* _vm_mode;\n@@ -46,0 +57,1 @@\n+  static VM_MODE get_satp_mode();\n","filename":"src\/hotspot\/cpu\/riscv\/vm_version_riscv.hpp","additions":12,"deletions":0,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -78,0 +78,16 @@\n+VM_Version::VM_MODE VM_Version::get_satp_mode() {\n+  if (!strcmp(_vm_mode, \"sv32\")) {\n+    return VM_SV32;\n+  } else if (!strcmp(_vm_mode, \"sv39\")) {\n+    return VM_SV39;\n+  } else if (!strcmp(_vm_mode, \"sv48\")) {\n+    return VM_SV48;\n+  } else if (!strcmp(_vm_mode, \"sv57\")) {\n+    return VM_SV57;\n+  } else if (!strcmp(_vm_mode, \"sv64\")) {\n+    return VM_SV64;\n+  } else {\n+    return VM_MBARE;\n+  }\n+}\n+\n@@ -106,1 +122,8 @@\n-        if (strncmp(buf, \"uarch\", sizeof \"uarch\" - 1) == 0) {\n+        if (strncmp(buf, \"mmu\", sizeof \"mmu\" - 1) == 0) {\n+          if (_vm_mode[0] != '\\0') {\n+            continue;\n+          }\n+          char* vm_mode = os::strdup(p + 2);\n+          vm_mode[strcspn(vm_mode, \"\\n\")] = '\\0';\n+          _vm_mode = vm_mode;\n+        } else if (strncmp(buf, \"uarch\", sizeof \"uarch\" - 1) == 0) {\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/vm_version_linux_riscv.cpp","additions":24,"deletions":1,"binary":false,"changes":25,"status":"modified"}]}