{"files":[{"patch":"@@ -212,1 +212,1 @@\n-        if (isBlockOrSF(name) || name.equals(\"MANIFEST.MF\")) {\n+        if (isBlockOrSF(name) || name.equals(\"META-INF\/MANIFEST.MF\")) {\n@@ -214,1 +214,1 @@\n-        } else if (name.startsWith(\"SIG-\")) {\n+        } else if (name.startsWith(\"SIG-\", META_INF.length())) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/SignatureFileVerifier.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n- * @run main\/othervm VerifyUnrelatedSignatureFiles\n+ * @run main\/othervm IgnoreUnrelatedSignatureFiles\n@@ -57,1 +57,7 @@\n-import java.util.jar.*;\n+import java.util.Map;\n+import java.util.jar.Attributes;\n+import java.util.jar.JarEntry;\n+import java.util.jar.JarFile;\n+import java.util.jar.JarInputStream;\n+import java.util.jar.JarOutputStream;\n+import java.util.jar.Manifest;\n@@ -77,0 +83,11 @@\n+        \/\/ 0: Sanity check that the basic signed JAR verifies\n+        try (JarFile jf = new JarFile(s.toFile(), true)) {\n+            Map<String, Attributes> entries = jf.getManifest().getEntries();\n+            if(entries.size() != 1) {\n+                throw new Exception(\"Expected a single manifest entry for the digest of a.txt, instead found entries: \" + entries.keySet());\n+            }\n+            JarEntry entry = jf.getJarEntry(\"a.txt\");\n+            try (InputStream in = jf.getInputStream(entry)) {\n+                in.transferTo(OutputStream.nullOutputStream());\n+            }\n+        }\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/IgnoreUnrelatedSignatureFiles.java","additions":19,"deletions":2,"binary":false,"changes":21,"status":"modified"}]}