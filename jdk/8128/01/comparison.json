{"files":[{"patch":"@@ -103,5 +103,0 @@\n-    @Override\n-    public boolean isAlwaysVisible() {\n-        return true;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/BlockConnection.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -44,2 +44,0 @@\n-    public boolean isAlwaysVisible();\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/Connection.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -151,5 +151,0 @@\n-    @Override\n-    public boolean isAlwaysVisible() {\n-        return false;\n-    }\n-\n","filename":"src\/utils\/IdealGraphVisualizer\/Graph\/src\/main\/java\/com\/sun\/hotspot\/igv\/graph\/FigureConnection.java","additions":0,"deletions":5,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -608,8 +608,14 @@\n-        if (getModel().getShowCFG()) {\n-            return c.isAlwaysVisible();\n-        }\n-        FigureWidget w1 = getWidget(c.getFrom().getVertex());\n-        FigureWidget w2 = getWidget(c.getTo().getVertex());\n-\n-        if (w1.isVisible() && w2.isVisible()) {\n-            return true;\n+        \/\/ Generally, a connection is visible if its source and destination\n+        \/\/ widgets are visible. An exception is Figure connections in the CFG\n+        \/\/ view, which are never shown.\n+        if (getModel().getShowCFG() && c instanceof FigureConnection) {\n+            return false;\n+        }\n+        Widget w1, w2;\n+        if (c instanceof BlockConnection) {\n+            w1 = getWidget(((Block)c.getFromCluster()).getInputBlock());\n+            w2 = getWidget(((Block)c.getToCluster()).getInputBlock());\n+        } else {\n+            assert (c instanceof FigureConnection);\n+            w1 = getWidget(c.getFrom().getVertex());\n+            w2 = getWidget(c.getTo().getVertex());\n@@ -617,2 +623,1 @@\n-\n-        return false;\n+        return w1.isVisible() && w2.isVisible();\n@@ -700,2 +705,6 @@\n-        \/\/ Add connections for CFG edges.\n-        edges.addAll(diagram.getBlockConnections());\n+        \/\/ Add visible connections for CFG edges.\n+        for (BlockConnection c : diagram.getBlockConnections()) {\n+            if (isVisible(c)) {\n+                edges.add(c);\n+            }\n+        }\n@@ -703,1 +712,8 @@\n-        m.setClusters(new HashSet<>(diagram.getBlocks()));\n+        Set<Block> visibleBlocks = new HashSet<>();\n+        for (Block b : diagram.getBlocks()) {\n+            BlockWidget w = getWidget(b.getInputBlock());\n+            if (w.isVisible()) {\n+                visibleBlocks.add(b);\n+            }\n+        }\n+        m.setClusters(new HashSet<>(visibleBlocks));\n@@ -798,2 +814,3 @@\n-                SceneAnimator anim = animator;\n-                processOutputSlot(lastLineCache, null, Collections.singletonList(c), 0, null, null, offx2, offy2, anim);\n+                if (isVisible(c)) {\n+                    processOutputSlot(lastLineCache, null, Collections.singletonList(c), 0, null, null, offx2, offy2, animator);\n+                }\n@@ -1214,5 +1231,3 @@\n-            visibleBlocks.clear();\n-            for (InputBlock b : diagram.getGraph().getBlocks()) {\n-                if (!b.isArtificial()) {\n-                    visibleBlocks.add(b);\n-                }\n+            if (getModel().getShowEmptyBlocks()) {\n+                \/\/ Add remaining blocks.\n+                visibleBlocks.addAll(diagram.getGraph().getBlocks());\n@@ -1225,1 +1240,4 @@\n-                boolean visibleAfter = visibleBlocks.contains(b);\n+                \/\/ A block is visible if it is marked as such, except for\n+                \/\/ artificial or null blocks in the CFG view.\n+                boolean visibleAfter = visibleBlocks.contains(b) &&\n+                    !(getModel().getShowCFG() && (b.isArtificial() || b.getNodes().isEmpty()));\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramScene.java","additions":39,"deletions":21,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -65,0 +65,1 @@\n+    private boolean showEmptyBlocks;\n@@ -169,0 +170,9 @@\n+    public boolean getShowEmptyBlocks() {\n+        return showEmptyBlocks;\n+    }\n+\n+    public void setShowEmptyBlocks(boolean b) {\n+        showEmptyBlocks = b;\n+        viewPropertiesChangedEvent.fire();\n+    }\n+\n@@ -197,0 +207,1 @@\n+        this.showEmptyBlocks = true;\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/DiagramViewModel.java","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -102,0 +102,1 @@\n+    private ShowEmptyBlocksAction showEmptyBlocksAction;\n@@ -282,0 +283,7 @@\n+        showEmptyBlocksAction = new ShowEmptyBlocksAction();\n+        button = new JToggleButton(showEmptyBlocksAction);\n+        button.setSelected(true);\n+        button.setEnabled(Settings.get().getInt(Settings.DEFAULT_VIEW, Settings.DEFAULT_VIEW_DEFAULT) == Settings.DefaultView.CONTROL_FLOW_GRAPH);\n+        toolBar.add(button);\n+        showEmptyBlocksAction.addPropertyChangeListener(this);\n+\n@@ -549,0 +557,3 @@\n+        } else if (evt.getSource() == this.showEmptyBlocksAction) {\n+            boolean b = (Boolean) showEmptyBlocksAction.getValue(ShowEmptyBlocksAction.STATE);\n+            this.getModel().setShowEmptyBlocks(b);\n@@ -559,0 +570,1 @@\n+            this.showEmptyBlocksAction.setEnabled(false);\n@@ -562,0 +574,1 @@\n+            this.showEmptyBlocksAction.setEnabled(false);\n@@ -565,0 +578,1 @@\n+            this.showEmptyBlocksAction.setEnabled(true);\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/EditorTopComponent.java","additions":14,"deletions":0,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,53 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\n+ *\/\n+package com.sun.hotspot.igv.view.actions;\n+\n+import java.awt.event.ActionEvent;\n+import javax.swing.AbstractAction;\n+import javax.swing.Action;\n+import javax.swing.ImageIcon;\n+import org.openide.util.ImageUtilities;\n+\n+public class ShowEmptyBlocksAction extends AbstractAction {\n+\n+    private boolean state;\n+    public static final String STATE = \"state\";\n+\n+    public ShowEmptyBlocksAction() {\n+        state = true;\n+        putValue(AbstractAction.SMALL_ICON, new ImageIcon(ImageUtilities.loadImage(iconResource())));\n+        putValue(STATE, true);\n+        putValue(Action.SHORT_DESCRIPTION, \"Show empty blocks in control-flow graph view\");\n+    }\n+\n+    @Override\n+    public void actionPerformed(ActionEvent ev) {\n+        this.state = !state;\n+        this.putValue(STATE, state);\n+    }\n+\n+    protected String iconResource() {\n+        return \"com\/sun\/hotspot\/igv\/view\/images\/showEmptyBlocks.png\";\n+    }\n+}\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/java\/com\/sun\/hotspot\/igv\/view\/actions\/ShowEmptyBlocksAction.java","additions":53,"deletions":0,"binary":false,"changes":53,"status":"added"},{"filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/images\/showEmptyBlocks.png","binary":true,"status":"added"},{"patch":"@@ -20,0 +20,1 @@\n+            <file name=\"com-sun-hotspot-igv-view-actions-ShowEmptyBlocksAction.instance\"><attr name=\"position\" intvalue=\"2001\"\/><\/file>\n","filename":"src\/utils\/IdealGraphVisualizer\/View\/src\/main\/resources\/com\/sun\/hotspot\/igv\/view\/layer.xml","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}