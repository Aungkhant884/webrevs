{"files":[{"patch":"@@ -419,9 +419,7 @@\n-  {\n-    \/\/ This is copied from MemAllocator::finish\n-    oopDesc::set_mark(mem, markWord::prototype());\n-    oopDesc::release_set_klass(mem, k);\n-  }\n-  {\n-    \/\/ This is copied from ObjArrayAllocator::initialize\n-    arrayOopDesc::set_length(mem, length);\n-  }\n+  arrayOop array = arrayOop(cast_to_oop(mem));\n+\n+  \/\/ This is copied from MemAllocator::finish\n+  array->set_mark(markWord::prototype());\n+  array->release_set_klass(k);\n+  \/\/ This is copied from ObjArrayAllocator::initialize\n+  array->set_length(length);\n@@ -429,1 +427,1 @@\n-  _roots = OopHandle(Universe::vm_global(), cast_to_oop(mem));\n+  _roots = OopHandle(Universe::vm_global(), array);\n","filename":"src\/hotspot\/share\/cds\/heapShared.cpp","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -379,1 +379,1 @@\n-  oopDesc::set_klass_gap(mem, 0);\n+  cast_to_oop(mem)->set_klass_gap(0);\n@@ -386,1 +386,2 @@\n-  oopDesc::set_mark(mem, markWord::prototype());\n+  oop obj = cast_to_oop(mem);\n+  obj->set_mark(markWord::prototype());\n@@ -390,2 +391,2 @@\n-  oopDesc::release_set_klass(mem, _klass);\n-  return cast_to_oop(mem);\n+  obj->release_set_klass(_klass);\n+  return obj;\n@@ -416,1 +417,1 @@\n-  arrayOopDesc::set_length(mem, _length);\n+  arrayOop(cast_to_oop(mem))->set_length(_length);\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -121,4 +121,0 @@\n-  static void set_length(HeapWord* mem, int length) {\n-    *length_addr_impl(mem) = length;\n-  }\n-\n","filename":"src\/hotspot\/share\/oops\/arrayOop.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -66,1 +66,0 @@\n-  static inline void set_mark(HeapWord* mem, markWord m);\n@@ -82,1 +81,1 @@\n-  static inline void release_set_klass(HeapWord* mem, Klass* k);\n+  inline void release_set_klass(Klass* k);\n@@ -87,1 +86,0 @@\n-  static inline void set_klass_gap(HeapWord* mem, int z);\n","filename":"src\/hotspot\/share\/oops\/oop.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -63,4 +63,0 @@\n-void oopDesc::set_mark(HeapWord* mem, markWord m) {\n-  *(markWord*)(((char*)mem) + mark_offset_in_bytes()) = m;\n-}\n-\n@@ -117,1 +113,1 @@\n-void oopDesc::release_set_klass(HeapWord* mem, Klass* k) {\n+void oopDesc::release_set_klass(Klass* k) {\n@@ -119,1 +115,0 @@\n-  char* raw_mem = ((char*)mem + klass_offset_in_bytes());\n@@ -121,1 +116,1 @@\n-    Atomic::release_store((narrowKlass*)raw_mem,\n+    Atomic::release_store(&_metadata._compressed_klass,\n@@ -124,1 +119,1 @@\n-    Atomic::release_store((Klass**)raw_mem, k);\n+    Atomic::release_store(&_metadata._klass, k);\n@@ -132,1 +127,1 @@\n-void oopDesc::set_klass_gap(HeapWord* mem, int v) {\n+void oopDesc::set_klass_gap(int v) {\n@@ -134,1 +129,1 @@\n-    *(int*)(((char*)mem) + klass_gap_offset_in_bytes()) = v;\n+    *(int*)(((char*)this) + klass_gap_offset_in_bytes()) = v;\n@@ -138,4 +133,0 @@\n-void oopDesc::set_klass_gap(int v) {\n-  set_klass_gap((HeapWord*)this, v);\n-}\n-\n","filename":"src\/hotspot\/share\/oops\/oop.inline.hpp","additions":5,"deletions":14,"binary":false,"changes":19,"status":"modified"}]}