{"files":[{"patch":"@@ -1406,3 +1406,3 @@\n-Sets the maximum size (in bytes) for large pages used for the Java heap.\n-The \\f[I]size\\f[R] argument must be a power of 2 (2, 4, 8, 16, and so\n-on).\n+Sets the maximum large page size (in bytes) used by the JVM.\n+The \\f[I]size\\f[R] argument must be a valid page size supported by the\n+environment to have any effect.\n@@ -1412,2 +1412,3 @@\n-By default, the size is set to 0, meaning that the JVM chooses the size\n-for large pages automatically.\n+By default, the size is set to 0, meaning that the JVM will use the\n+default large page size for the environment as the maximum size for\n+large pages.\n@@ -1417,2 +1418,2 @@\n-The following example describes how to set the large page size to 4\n-megabytes (MB):\n+The following example describes how to set the large page size to 1\n+gigabyte (GB):\n@@ -1421,1 +1422,1 @@\n-\\f[CB]\\-XX:LargePageSizeInBytes=4m\\f[R]\n+\\f[CB]\\-XX:LargePageSizeInBytes=1g\\f[R]\n@@ -5123,3 +5124,2 @@\n-However, large pages page memory can negatively affect system\n-performance.\n-For example, when a large mount of memory is pinned by an application,\n+However, using large pages can negatively affect system performance.\n+For example, when a large amount of memory is pinned by an application,\n@@ -5136,4 +5136,2 @@\n-The 2.6 kernel supports large pages.\n-Some vendors have backported the code to their 2.4\\-based releases.\n-To check if your system can support large page memory, try the\n-following:\n+Linux supports large pages since version 2.6.\n+To check if your environment supports large pages, try the following:\n@@ -5146,0 +5144,1 @@\n+\\&...\n@@ -5150,13 +5149,23 @@\n-If the output shows the three \"Huge\" variables, then your system can\n-support large page memory but it needs to be configured.\n-If the command prints nothing, then your system doesn\\[aq]t support\n-large pages.\n-To configure the system to use large page memory, login as\n-\\f[CB]root\\f[R], and then follow these steps:\n-.IP \"1.\" 3\n-If you\\[aq]re using the option \\f[CB]\\-XX:+UseSHM\\f[R] (instead of\n-\\f[CB]\\-XX:+UseHugeTLBFS\\f[R]), then increase the \\f[CB]SHMMAX\\f[R] value.\n-It must be larger than the Java heap size.\n-On a system with 4 GB of physical RAM (or less), the following makes all\n-the memory sharable:\n-.RS 4\n+If the output contains items prefixed with \"Huge\", then your system\n+supports large pages.\n+The values may vary depending on environment.\n+The \\f[CB]Hugepagesize\\f[R] field shows the default large page size in\n+your environment, and the other fields show details for large pages of\n+this size.\n+Newer kernels have support for multiple large page sizes.\n+To list the supported page sizes, run this:\n+.IP\n+.nf\n+\\f[CB]\n+#\\ ls\\ \/sys\/kernel\/mm\/hugepages\/\n+hugepages\\-1048576kB\\ \\ hugepages\\-2048kB\n+\\f[R]\n+.fi\n+.PP\n+The above environment supports 2 MB and 1 GB large pages, but they need\n+to be configured so that the JVM can use them.\n+When using explicit large pages (options \\f[CB]\\-XX:+UseSHM\\f[R] or\n+\\f[CB]\\-XX:+UseHugeTLBFS\\f[R]), the number of large pages must be\n+pre\\-allocated.\n+For example, to enable 8 GB of memory to be backed by 2 MB large pages,\n+login as \\f[CB]root\\f[R] and run:\n@@ -5165,1 +5174,1 @@\n-\\f[CB]#\\ echo\\ 4294967295\\ >\\ \/proc\/sys\/kernel\/shmmax\\f[R]\n+\\f[CB]#\\ echo\\ 4096\\ >\\ \/sys\/kernel\/mm\/hugepages\/hugepages\\-2048kB\/nr_hugepages\\f[R]\n@@ -5167,8 +5176,10 @@\n-.RE\n-.IP \"2.\" 3\n-If you\\[aq]re using the option \\f[CB]\\-XX:+UseSHM\\f[R] or\n-\\f[CB]\\-XX:+UseHugeTLBFS\\f[R], then specify the number of large pages.\n-In the following example, 3 GB of a 4 GB system are reserved for large\n-pages (assuming a large page size of 2048kB, then 3 GB = 3 * 1024 MB =\n-3072 MB = 3072 * 1024 kB = 3145728 kB and 3145728 kB \/ 2048 kB = 1536):\n-.RS 4\n+.PP\n+It is always recommended to check the value of \\f[CB]nr_hugepages\\f[R]\n+after the request to make sure the kernel was able to allocate the\n+requested number of large pages.\n+.PP\n+When using the option \\f[CB]\\-XX:+UseSHM\\f[R] to enable large pages you\n+also need to make sure the \\f[CB]SHMMAX\\f[R] parameter is configured to\n+allow large enough shared memory segments to be allocated.\n+To allow a maximum shared segment of 8 GB, login as \\f[CB]root\\f[R] and\n+run:\n@@ -5177,1 +5188,1 @@\n-\\f[CB]#\\ echo\\ 1536\\ >\\ \/proc\/sys\/vm\/nr_hugepages\\f[R]\n+\\f[CB]#\\ echo\\ 8589934592\\ >\\ \/proc\/sys\/kernel\/shmmax\\f[R]\n@@ -5179,0 +5190,4 @@\n+.PP\n+In some environments this is not needed since the default value is large\n+enough, but it is important to make sure the value is large enough to\n+fit the amount of memory intended to be backed by large pages.\n@@ -5181,4 +5196,4 @@\n-\\f[B]Note:\\f[R] The values contained in \\f[CB]\/proc\\f[R] resets after you\n-reboot your system, so may want to set them in an initialization script\n-(for example, \\f[CB]rc.local\\f[R] or \\f[CB]sysctl.conf\\f[R]).\n-.RE\n+\\f[B]Note:\\f[R] The values contained in \\f[CB]\/proc\\f[R] and \\f[CB]\/sys\\f[R]\n+reset after you reboot your system, so may want to set them in an\n+initialization script (for example, \\f[CB]rc.local\\f[R] or\n+\\f[CB]sysctl.conf\\f[R]).\n@@ -5186,9 +5201,4 @@\n-.IP \\[bu] 2\n-If you configure (or resize) the OS kernel parameters\n-\\f[CB]\/proc\/sys\/kernel\/shmmax\\f[R] or \\f[CB]\/proc\/sys\/vm\/nr_hugepages\\f[R],\n-Java processes may allocate large pages for areas in addition to the\n-Java heap.\n-These steps can allocate large pages for the following areas:\n-.RS 2\n-.IP \\[bu] 2\n-Java heap\n+.PP\n+If you configure the OS kernel parameters to enable use of large pages,\n+the Java processes may allocate large pages for the Java heap as well as\n+other internal areas, for example:\n@@ -5198,1 +5208,1 @@\n-The marking bitmap data structure for the parallel GC\n+Marking bitmaps\n@@ -5201,3 +5211,3 @@\n-the size of the Java heap, then the JVM can fail in allocating the code\n-cache areas on large pages because these areas are quite large in size.\n-.RE\n+the size of the Java heap, then the JVM can still fail to allocate the\n+heap using large pages because other areas such as the code cache might\n+already have used some of the configured large pages.\n","filename":"src\/java.base\/share\/man\/java.1","additions":65,"deletions":55,"binary":false,"changes":120,"status":"modified"}]}