{"files":[{"patch":"@@ -37,0 +37,1 @@\n+#include \"utilities\/formatBuffer.hpp\"\n@@ -186,2 +187,10 @@\n-static size_t buffers_to_cards(size_t value) {\n-  return value * G1UpdateBufferSize;\n+\/\/ Convert configuration values in units of buffers to number of cards.\n+static size_t configuration_buffers_to_cards(size_t value, const char* value_name) {\n+  if (value == 0) return 0;\n+  size_t res = value * G1UpdateBufferSize;\n+\n+  if (res \/ value != G1UpdateBufferSize) { \/\/ Check overflow\n+    vm_exit_during_initialization(err_msg(\"configuration_buffers_to_cards: \"\n+      \"(%s = \" SIZE_FORMAT \") * (G1UpdateBufferSize = \" SIZE_FORMAT \") overflow!\", value_name, value, G1UpdateBufferSize));\n+  }\n+  return res;\n@@ -209,1 +218,1 @@\n-    step = MIN2(step, buffers_to_cards(ParallelGCThreads) \/ 2.0);\n+    step = MIN2(step, configuration_buffers_to_cards(ParallelGCThreads, \"ParallelGCThreads\") \/ 2.0);\n@@ -235,1 +244,1 @@\n-  size_t step = buffers_to_cards(G1ConcRefinementThresholdStep);\n+  size_t step = configuration_buffers_to_cards(G1ConcRefinementThresholdStep, \"G1ConcRefinementThresholdStep\");\n@@ -246,0 +255,1 @@\n+  char* name = (char*) \"G1ConcRefinementGreenZone\";\n@@ -248,0 +258,1 @@\n+    name = (char*) \"ParallelGCThreads\";\n@@ -249,1 +260,1 @@\n-  green = buffers_to_cards(green);\n+  green = configuration_buffers_to_cards(green, name);\n@@ -254,1 +265,1 @@\n-  size_t config = buffers_to_cards(G1ConcRefinementYellowZone);\n+  size_t config = configuration_buffers_to_cards(G1ConcRefinementYellowZone, \"G1ConcRefinementYellowZone\");\n@@ -269,1 +280,1 @@\n-    size_t config = buffers_to_cards(G1ConcRefinementRedZone);\n+    size_t config = configuration_buffers_to_cards(G1ConcRefinementRedZone, \"G1ConcRefinementRedZone\");\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRefine.cpp","additions":18,"deletions":7,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -0,0 +1,46 @@\n+\/*\n+ * Copyright (C) 2020 THL A29 Limited, a Tencent company. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8257228\n+ * @library \/test\/lib\n+ * @requires vm.bits == 64\n+ * @build gc.g1.TestBuffersToCardsOverflow jdk.test.lib.process.*\n+ * @run main gc.g1.TestBuffersToCardsOverflow\n+ *\/\n+\n+package gc.g1;\n+\n+import jdk.test.lib.process.ProcessTools;\n+\n+public class TestBuffersToCardsOverflow {\n+    public static void main(String... args) throws Exception {\n+        ProcessTools.executeTestJava(\"-XX:G1ConcRefinementThresholdStep=16G\",\n+                                     \"-XX:G1UpdateBufferSize=1G\")\n+                .outputTo(System.out)\n+                .errorTo(System.out)\n+                .stdoutShouldNotContain(\"SIGFPE\")\n+                .stdoutShouldNotContain(\"hs_err\");\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/gc\/g1\/TestBuffersToCardsOverflow.java","additions":46,"deletions":0,"binary":false,"changes":46,"status":"added"}]}