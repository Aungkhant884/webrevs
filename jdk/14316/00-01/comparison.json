{"files":[{"patch":"@@ -39,12 +39,1 @@\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\n+ * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server true\n@@ -60,12 +49,1 @@\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\n- * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\n+ * @run main\/othervm TLSWontNegotiateDisabledCipherAlgos server false\n@@ -76,0 +54,15 @@\n+    private static final String [] DISABLED_CIPHERS = {\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_256_CBC_SHA\",\n+        \"TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA\",\n+        \"TLS_ECDH_RSA_WITH_AES_128_CBC_SHA\"\n+    };\n+\n@@ -83,1 +76,1 @@\n-            try(TLSServer server = new TLSServer(useDisabledAlgo, args[2])) {\n+            try (TLSServer server = new TLSServer(useDisabledAlgo)) {\n@@ -89,2 +82,1 @@\n-                        Integer.toString(server.getListeningPort()),\n-                        args[2]\n+                        Integer.toString(server.getListeningPort())\n@@ -98,1 +90,1 @@\n-            try(TLSClient client = new TLSClient(Integer.parseInt(args[2]), useDisabledAlgo, args[3])) {\n+            try (TLSClient client = new TLSClient(Integer.parseInt(args[2]), useDisabledAlgo)) {\n@@ -105,1 +97,0 @@\n-        private final int portNumber;\n@@ -108,2 +99,1 @@\n-        public TLSClient(int portNumber, boolean useDisableAlgo, String cipherSuite) throws Exception {\n-            this.portNumber = portNumber;\n+        public TLSClient(int portNumber, boolean useDisableAlgo) throws Exception {\n@@ -113,1 +103,1 @@\n-                socket.setEnabledCipherSuites(new String[]{cipherSuite});\n+                socket.setEnabledCipherSuites(DISABLED_CIPHERS);\n@@ -120,0 +110,1 @@\n+                throw new RuntimeException(\"SSL handshake completed successfully.\");\n@@ -121,1 +112,4 @@\n-                \/\/ handshake failures are expected\n+                if (!exc.getMessage().equals(\"Received fatal alert: handshake_failure\")) {\n+                    throw new RuntimeException(\"Expected handshake_failure message. Got: \"\n+                            + \"\\\"\" + exc.getMessage() + \"\\\" message.\", exc);\n+                }\n@@ -134,1 +128,1 @@\n-        public TLSServer(boolean useDisableAlgo, String cipherSuite) throws Exception {\n+        public TLSServer(boolean useDisableAlgo) throws Exception {\n@@ -138,1 +132,1 @@\n-                serverSocket.setEnabledCipherSuites(new String[]{cipherSuite});\n+                serverSocket.setEnabledCipherSuites(DISABLED_CIPHERS);\n@@ -152,1 +146,1 @@\n-            try(Socket clientSocket = serverSocket.accept()) {\n+            try (Socket clientSocket = serverSocket.accept()) {\n","filename":"test\/jdk\/javax\/net\/ssl\/TLS\/TLSWontNegotiateDisabledCipherAlgos.java","additions":30,"deletions":36,"binary":false,"changes":66,"status":"modified"}]}