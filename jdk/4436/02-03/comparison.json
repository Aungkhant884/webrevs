{"files":[{"patch":"@@ -33,1 +33,1 @@\n-bool CodeBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CodeBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -42,1 +42,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -44,1 +44,1 @@\n-    if (_cb->is_adapter_blob()) {\n+    if (is_adapter_blob()) {\n@@ -50,1 +50,1 @@\n-  if (check && _cb->frame_size() <= 0) {\n+  if (check && frame_size() <= 0) {\n@@ -54,1 +54,1 @@\n-  *sender_sp = unextended_sp + _cb->frame_size();\n+  *sender_sp = unextended_sp + frame_size();\n@@ -68,1 +68,1 @@\n-bool InterpreterBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool InterpreterBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -91,1 +91,1 @@\n-bool VtableBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool VtableBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -93,1 +93,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -97,1 +97,1 @@\n-bool StubRoutinesBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool StubRoutinesBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -104,1 +104,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -108,1 +108,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -112,1 +112,1 @@\n-bool CompiledMethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CompiledMethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -119,1 +119,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -123,1 +123,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -127,1 +127,1 @@\n-bool nmethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool nmethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -129,1 +129,1 @@\n-  return CompiledMethod::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CompiledMethod::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n","filename":"src\/hotspot\/cpu\/aarch64\/codeBlob_aarch64.cpp","additions":16,"deletions":16,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -59,2 +59,0 @@\n-  ResourceMark rm;\n-\n@@ -115,1 +113,1 @@\n-    if (!_cb->frame_parser()->sender_frame(\n+    if (!_cb->sender_frame(\n@@ -427,2 +425,0 @@\n-  ResourceMark rm;\n-\n@@ -439,1 +435,1 @@\n-  _cb->frame_parser()->sender_frame(\n+  _cb->sender_frame(\n","filename":"src\/hotspot\/cpu\/aarch64\/frame_aarch64.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-bool CodeBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CodeBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -43,1 +43,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -45,1 +45,1 @@\n-    if (_cb->is_adapter_blob()) {\n+    if (is_adapter_blob()) {\n@@ -50,1 +50,1 @@\n-  *sender_sp = unextended_sp + _cb->frame_size();\n+  *sender_sp = unextended_sp + frame_size();\n@@ -65,1 +65,1 @@\n-bool InterpreterBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool InterpreterBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -82,1 +82,1 @@\n-bool VtableBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool VtableBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -84,1 +84,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -88,1 +88,1 @@\n-bool StubRoutinesBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool StubRoutinesBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -95,1 +95,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -99,1 +99,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -103,1 +103,1 @@\n-bool CompiledMethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CompiledMethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -110,1 +110,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -114,1 +114,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -118,1 +118,1 @@\n-bool nmethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool nmethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -120,1 +120,1 @@\n-  return CompiledMethod::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CompiledMethod::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n","filename":"src\/hotspot\/cpu\/arm\/codeBlob_arm.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -57,2 +57,0 @@\n-  ResourceMark rm;\n-\n@@ -92,1 +90,1 @@\n-    if (!_cb->frame_parser()->sender_frame(\n+    if (!_cb->sender_frame(\n@@ -369,2 +367,0 @@\n-  ResourceMark rm;\n-\n@@ -381,1 +377,1 @@\n-  _cb->frame_parser()->sender_frame(\n+  _cb->sender_frame(\n","filename":"src\/hotspot\/cpu\/arm\/frame_arm.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-bool CodeBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CodeBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -43,1 +43,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -45,1 +45,1 @@\n-    if (_cb->is_adapter_blob()) {\n+    if (is_adapter_blob()) {\n@@ -57,1 +57,1 @@\n-bool InterpreterBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool InterpreterBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -59,1 +59,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -63,1 +63,1 @@\n-bool VtableBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool VtableBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -65,1 +65,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -69,1 +69,1 @@\n-bool StubRoutinesBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool StubRoutinesBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -76,1 +76,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -80,1 +80,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -84,1 +84,1 @@\n-bool CompiledMethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CompiledMethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -91,1 +91,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -95,1 +95,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -99,1 +99,1 @@\n-bool nmethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool nmethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -101,1 +101,1 @@\n-  return CompiledMethod::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CompiledMethod::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n","filename":"src\/hotspot\/cpu\/ppc\/codeBlob_ppc.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -55,2 +55,0 @@\n-  ResourceMark rm;\n-\n@@ -103,1 +101,1 @@\n-    if (!_cb->frame_parser()->sender_frame(\n+    if (!_cb->sender_frame(\n@@ -206,2 +204,0 @@\n-  ResourceMark rm;\n-\n@@ -214,1 +210,1 @@\n-  _cb->frame_parser()->sender_frame(\n+  _cb->sender_frame(\n","filename":"src\/hotspot\/cpu\/ppc\/frame_ppc.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-bool CodeBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CodeBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -43,1 +43,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -45,1 +45,1 @@\n-    if (_cb->is_adapter_blob()) {\n+    if (is_adapter_blob()) {\n@@ -57,1 +57,1 @@\n-bool InterpreterBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool InterpreterBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -59,1 +59,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -63,1 +63,1 @@\n-bool VtableBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool VtableBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -65,1 +65,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -69,1 +69,1 @@\n-bool StubRoutinesBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool StubRoutinesBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -76,1 +76,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -80,1 +80,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -84,1 +84,1 @@\n-bool CompiledMethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CompiledMethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -91,1 +91,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -95,1 +95,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -99,1 +99,1 @@\n-bool nmethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool nmethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -101,1 +101,1 @@\n-  return CompiledMethod::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CompiledMethod::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n","filename":"src\/hotspot\/cpu\/s390\/codeBlob_s390.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -58,2 +58,0 @@\n-  ResourceMark rm;\n-\n@@ -117,1 +115,1 @@\n-    if (!_cb->frame_parser()->sender_frame(\n+    if (!_cb->sender_frame(\n@@ -228,2 +226,0 @@\n-  ResourceMark rm;\n-\n@@ -236,1 +232,1 @@\n-  _cb->frame_parser()->sender_frame(\n+  _cb->sender_frame(\n","filename":"src\/hotspot\/cpu\/s390\/frame_s390.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-bool CodeBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CodeBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -44,1 +44,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -46,1 +46,1 @@\n-    if (_cb->is_adapter_blob()) {\n+    if (is_adapter_blob()) {\n@@ -52,1 +52,1 @@\n-  if (check && _cb->frame_size() <= 0) {\n+  if (check && frame_size() <= 0) {\n@@ -56,1 +56,1 @@\n-  *sender_sp = unextended_sp + _cb->frame_size();\n+  *sender_sp = unextended_sp + frame_size();\n@@ -71,1 +71,1 @@\n-bool InterpreterBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool InterpreterBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -94,1 +94,1 @@\n-bool VtableBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool VtableBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -115,1 +115,1 @@\n-bool StubRoutinesBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool StubRoutinesBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -141,1 +141,1 @@\n-bool CompiledMethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CompiledMethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -148,1 +148,1 @@\n-  if (check && !_cb->is_frame_complete_at(pc)) {\n+  if (check && !is_frame_complete_at(pc)) {\n@@ -152,1 +152,1 @@\n-  return CodeBlob::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CodeBlob::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n@@ -156,1 +156,1 @@\n-bool nmethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool nmethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -162,1 +162,1 @@\n-  if (_cb->is_compiled_by_c1() || _cb->is_compiled_by_c2()) {\n+  if (is_compiled_by_c1() || is_compiled_by_c2()) {\n@@ -168,1 +168,1 @@\n-    int offset = pc - _cb->as_nmethod()->verified_entry_point();\n+    int offset = pc - as_nmethod()->verified_entry_point();\n@@ -209,1 +209,1 @@\n-  return CompiledMethod::FrameParser::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n+  return CompiledMethod::sender_frame(thread, check, pc, sp, unextended_sp, fp, fp_safe,\n","filename":"src\/hotspot\/cpu\/x86\/codeBlob_x86.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -57,2 +57,0 @@\n-  ResourceMark rm;\n-\n@@ -106,1 +104,1 @@\n-    if (!_cb->frame_parser()->sender_frame(\n+    if (!_cb->sender_frame(\n@@ -440,2 +438,0 @@\n-  ResourceMark rm;\n-\n@@ -452,1 +448,1 @@\n-  _cb->frame_parser()->sender_frame(\n+  _cb->sender_frame(\n","filename":"src\/hotspot\/cpu\/x86\/frame_x86.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-bool CodeBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CodeBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -39,1 +39,1 @@\n-bool InterpreterBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool InterpreterBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -45,1 +45,1 @@\n-bool VtableBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool VtableBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -51,1 +51,1 @@\n-bool StubRoutinesBlob::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool StubRoutinesBlob::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -57,1 +57,1 @@\n-bool CompiledMethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool CompiledMethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n@@ -63,1 +63,1 @@\n-bool nmethod::FrameParser::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+bool nmethod::sender_frame(JavaThread *thread, bool check, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n","filename":"src\/hotspot\/cpu\/zero\/codeBlob_zero.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -201,10 +201,2 @@\n-  class FrameParser: public ResourceObj {\n-   protected:\n-    const CodeBlob* _cb;\n-   public:\n-    FrameParser(const CodeBlob* cb) : _cb(cb) {}\n-    virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n-      address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n-  };\n-\n-  virtual FrameParser* frame_parser() const { return new FrameParser(this); }\n+  virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+    address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n@@ -377,6 +369,0 @@\n-  \/\/ Profiling\/safepoint support\n-  class FrameParser : public CodeBlob::FrameParser {\n-   public:\n-    FrameParser(const RuntimeBlob* cb) : CodeBlob::FrameParser(cb) {}\n-  };\n-\n@@ -434,6 +420,0 @@\n-  \/\/ Profiling\/safepoint support\n-  class FrameParser : public RuntimeBlob::FrameParser {\n-   public:\n-    FrameParser(const BufferBlob* cb) : RuntimeBlob::FrameParser(cb) {}\n-  };\n-\n@@ -480,8 +460,2 @@\n-  class FrameParser : public BufferBlob::FrameParser {\n-   public:\n-    FrameParser(const VtableBlob* cb) : BufferBlob::FrameParser(cb) {}\n-    virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n-      address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n-  };\n-\n-  virtual FrameParser* frame_parser() const { return new FrameParser(this); }\n+  virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+    address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n@@ -521,8 +495,2 @@\n-  class FrameParser : public BufferBlob::FrameParser {\n-   public:\n-    FrameParser(const InterpreterBlob* cb) : BufferBlob::FrameParser(cb) {}\n-    virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n-      address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n-  };\n-\n-  virtual FrameParser* frame_parser() const { return new FrameParser(this); }\n+  virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+    address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n@@ -547,8 +515,2 @@\n-  class FrameParser : public BufferBlob::FrameParser {\n-   public:\n-    FrameParser(const StubRoutinesBlob* cb) : BufferBlob::FrameParser(cb) {}\n-    virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n-      address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n-  };\n-\n-  virtual FrameParser* frame_parser() const { return new FrameParser(this); }\n+  virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+    address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n","filename":"src\/hotspot\/share\/code\/codeBlob.hpp","additions":8,"deletions":46,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -404,8 +404,2 @@\n-  class FrameParser : public CodeBlob::FrameParser {\n-   public:\n-    FrameParser(const CompiledMethod* cb) : CodeBlob::FrameParser(cb) {}\n-    virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n-      address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n-  };\n-\n-  virtual FrameParser* frame_parser() const { return new FrameParser(this); }\n+  virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+    address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n","filename":"src\/hotspot\/share\/code\/compiledMethod.hpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -760,8 +760,2 @@\n-  class FrameParser : public CompiledMethod::FrameParser {\n-   public:\n-    FrameParser(const nmethod* cb) : CompiledMethod::FrameParser(cb) {}\n-    virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n-      address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n-  };\n-\n-  virtual FrameParser* frame_parser() const { return new FrameParser(this); }\n+  virtual bool sender_frame(JavaThread *thread, bool check_frame_complete, address pc, intptr_t* sp, intptr_t* unextended_sp, intptr_t* fp, bool fp_safe,\n+    address* sender_pc, intptr_t** sender_sp, intptr_t** sender_unextended_sp, intptr_t*** saved_fp);\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":2,"deletions":8,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -85,3 +85,1 @@\n-    if (!candidate.safe_for_sender(_thread) ||\n-      candidate.is_stub_frame() ||\n-      candidate.cb()->frame_size() <= 0) {\n+    if (!candidate.safe_for_sender(_thread)) {\n","filename":"src\/hotspot\/share\/jfr\/periodic\/sampling\/jfrCallTrace.cpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"}]}