{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -68,1 +68,1 @@\n-        var ref = new WeakReference<>(container);\n+        var ref = new WeakReference<>(container, QUEUE);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/vm\/ThreadContainers.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8308235\n+ * @summary Unreference ExecutorService objects returned by the Executors without shutdown\n+ *    and termination, this should not leak memory\n+ * @run main\/othervm -Xmx32m UnreferencedExecutor\n+ *\/\n+\n+import java.time.Duration;\n+import java.util.concurrent.Executors;\n+\n+public class UnreferencedExecutor {\n+\n+    private static final int DURATION_IN_SECONDS = 5;\n+\n+    public static void main(String[] args) throws Exception {\n+        int ncores = Runtime.getRuntime().availableProcessors();\n+        long durationNanos = Duration.ofSeconds(DURATION_IN_SECONDS).toNanos();\n+        long start = System.nanoTime();\n+        while (System.nanoTime() - start < durationNanos) {\n+            Executors.newFixedThreadPool(ncores);\n+            Executors.newCachedThreadPool();\n+            Executors.newVirtualThreadPerTaskExecutor();\n+            Executors.newWorkStealingPool(ncores);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/util\/concurrent\/Executors\/UnreferencedExecutor.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}