{"files":[{"patch":"@@ -0,0 +1,24 @@\n+\/*\n+ *  Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ *  This code is free software; you can redistribute it and\/or modify it\n+ *  under the terms of the GNU General Public License version 2 only, as\n+ *  published by the Free Software Foundation.\n+ *\n+ *  This code is distributed in the hope that it will be useful, but WITHOUT\n+ *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ *  version 2 for more details (a copy is included in the LICENSE file that\n+ *  accompanied this code).\n+ *\n+ *  You should have received a copy of the GNU General Public License version\n+ *  2 along with this work; if not, write to the Free Software Foundation,\n+ *  Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ *  Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ *  or visit www.oracle.com if you need additional information or have any\n+ *  questions.\n+ *\n+ *\/\n+\n@@ -5,1 +29,1 @@\n-import jdk.incubator.vector.FloatVector;\n+import jdk.incubator.vector.DoubleVector;\n@@ -21,1 +45,0 @@\n-import java.util.Random;\n@@ -23,0 +46,1 @@\n+import java.util.random.RandomGenerator;\n@@ -44,2 +68,2 @@\n-    float[] floatData1;\n-    float[] floatData2;\n+    double[] doubleData1;\n+    double[] doubleData2;\n@@ -49,1 +73,1 @@\n-    static final VectorSpecies<Float> FLOAT_SPECIES_PREFERRED = FloatVector.SPECIES_PREFERRED;\n+    static final VectorSpecies<Double> FLOAT_SPECIES_PREFERRED = DoubleVector.SPECIES_PREFERRED;\n@@ -52,9 +76,0 @@\n-    static final Random random = new Random();\n-\n-    private float[] createRandomFloats(int size) {\n-        float[] array = new float[size];\n-        for (int i = 0; i < size; i++)\n-            array[i] = random.nextFloat();\n-        return array;\n-    }\n-\n@@ -63,0 +78,1 @@\n+        RandomGenerator random = RandomGenerator.getDefault();\n@@ -83,3 +99,3 @@\n-        } else if (params.getBenchmark().endsWith(\"Float\")) {\n-            floatData1 = createRandomFloats(size);\n-            floatData2 = createRandomFloats(size);\n+        } else if (params.getBenchmark().endsWith(\"Double\")) {\n+            doubleData1 = random.doubles(size).toArray();\n+            doubleData2 = random.doubles(size).toArray();\n@@ -87,3 +103,3 @@\n-            float[] commonFloats = createRandomFloats(common);\n-            System.arraycopy(commonFloats, 0, floatData1, 0, common);\n-            System.arraycopy(commonFloats, 0, floatData2, 0, common);\n+            double[] commonDoubles = random.doubles(size).toArray();\n+            System.arraycopy(commonDoubles, 0, doubleData1, 0, common);\n+            System.arraycopy(commonDoubles, 0, doubleData2, 0, common);\n@@ -157,2 +173,2 @@\n-    public int mismatchIntrinsicFloat() {\n-        return Arrays.mismatch(floatData1, floatData2);\n+    public int mismatchIntrinsicDouble() {\n+        return Arrays.mismatch(doubleData1, doubleData2);\n@@ -162,2 +178,2 @@\n-    public int mismatchVectorFloat() {\n-        int length = Math.min(floatData1.length, floatData2.length);\n+    public int mismatchVectorDouble() {\n+        int length = Math.min(doubleData1.length, doubleData2.length);\n@@ -166,3 +182,3 @@\n-            FloatVector vector1 = FloatVector.fromArray(FLOAT_SPECIES_PREFERRED, floatData1, index);\n-            FloatVector vector2 = FloatVector.fromArray(FLOAT_SPECIES_PREFERRED, floatData2, index);\n-            VectorMask<Float> mask = vector1.compare(VectorOperators.NE, vector2);\n+            DoubleVector vector1 = DoubleVector.fromArray(FLOAT_SPECIES_PREFERRED, doubleData1, index);\n+            DoubleVector vector2 = DoubleVector.fromArray(FLOAT_SPECIES_PREFERRED, doubleData2, index);\n+            VectorMask<Double> mask = vector1.compare(VectorOperators.NE, vector2);\n@@ -176,1 +192,1 @@\n-            if (floatData1[i] != floatData2[i]) {\n+            if (doubleData1[i] != doubleData2[i]) {\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/ArrayMismatchBenchmark.java","additions":44,"deletions":28,"binary":false,"changes":72,"status":"modified"}]}