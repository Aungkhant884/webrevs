{"files":[{"patch":"@@ -5212,1 +5212,4 @@\n-  if(UseAVX > 2 && MaxVectorSize >=32 && VM_Version::supports_avx512vlbw()) {\n+  if(UseAVX > 2 &&\n+     MaxVectorSize >=32 &&\n+     VM_Version::supports_avx512vlbw() &&\n+     VM_Version::supports_bmi2()) {\n@@ -5318,1 +5321,1 @@\n-      if (UseAVX == 2 && UseUnalignedLoadStores) {\n+      if (UseAVX >= 2 && UseUnalignedLoadStores) {\n@@ -5320,0 +5323,23 @@\n+        if (UseAVX > 2) {\n+          \/\/ Fill 64-byte chunks\n+          Label L_fill_64_bytes_loop_avx3, L_check_fill_64_bytes_avx2;\n+\n+          \/\/ If number of bytes to fill < AVX3Threshold, perform fill using AVX2\n+          cmpl(count, AVX3Threshold);\n+          jccb(Assembler::below, L_check_fill_64_bytes_avx2);\n+\n+          vpbroadcastd(xtmp, xtmp, Assembler::AVX_512bit);\n+\n+          subl(count, 16 << shift);\n+          jccb(Assembler::less, L_check_fill_32_bytes);\n+          align(16);\n+\n+          BIND(L_fill_64_bytes_loop_avx3);\n+          evmovdqul(Address(to, 0), xtmp, Assembler::AVX_512bit);\n+          addptr(to, 64);\n+          subl(count, 16 << shift);\n+          jcc(Assembler::greaterEqual, L_fill_64_bytes_loop_avx3);\n+          jmpb(L_check_fill_32_bytes);\n+\n+          BIND(L_check_fill_64_bytes_avx2);\n+        }\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":28,"deletions":2,"binary":false,"changes":30,"status":"modified"}]}