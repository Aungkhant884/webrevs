{"files":[{"patch":"@@ -5216,1 +5216,1 @@\n-    generate_fill_avx3(t, aligned, to, value, count, rtmp, xtmp);\n+    generate_fill_avx3(t, to, value, count, rtmp, xtmp);\n@@ -8281,1 +8281,1 @@\n-  BasicType type[] = { T_BYTE, T_SHORT,  T_INT,   T_LONG};\n+  BasicType type[] = { T_BYTE, T_SHORT, T_INT, T_LONG};\n@@ -8300,1 +8300,1 @@\n-  BasicType type[] = { T_BYTE, T_SHORT,  T_INT,   T_LONG};\n+  BasicType type[] = { T_BYTE, T_SHORT, T_INT, T_LONG};\n@@ -8325,3 +8325,2 @@\n-void MacroAssembler::generate_fill_avx3(BasicType type, bool aligned,\n-                                        Register to, Register value, Register count,\n-                                        Register rtmp, XMMRegister xtmp) {\n+void MacroAssembler::generate_fill_avx3(BasicType type, Register to, Register value,\n+                                        Register count, Register rtmp, XMMRegister xtmp) {\n@@ -8347,0 +8346,1 @@\n+    \/* Uncomment when LONG fill stubs are supported.\n@@ -8349,0 +8349,1 @@\n+    *\/\n@@ -8385,1 +8386,1 @@\n-    jcc(Assembler::greater, L_fill_128_bytes_loop_pre_header);\n+    jccb(Assembler::greater, L_fill_128_bytes_loop_pre_header);\n@@ -8414,0 +8415,1 @@\n+    align32();\n@@ -8454,1 +8456,1 @@\n-    jcc(Assembler::greater, L_fill_192_bytes_loop_pre_header_zmm);\n+    jccb(Assembler::greater, L_fill_192_bytes_loop_pre_header_zmm);\n@@ -8483,0 +8485,1 @@\n+    align32();\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1890,3 +1890,2 @@\n-  void generate_fill_avx3(BasicType type, bool aligned,\n-                          Register to, Register value, Register count,\n-                          Register rtmp, XMMRegister xtmp);\n+  void generate_fill_avx3(BasicType type, Register to, Register value,\n+                          Register count, Register rtmp, XMMRegister xtmp);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2119,0 +2119,1 @@\n+    __ mov(r11, count);\n@@ -2122,1 +2123,1 @@\n-    __ generate_fill(t, aligned, to, value, count, rax, xmm0);\n+    __ generate_fill(t, aligned, to, value, r11, rax, xmm0);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -36,1 +36,1 @@\n-  code_size2 = 35300 LP64_ONLY(+32000)          \/\/ simply increase if too small (assembler will crash if too small)\n+  code_size2 = 35300 LP64_ONLY(+35000)          \/\/ simply increase if too small (assembler will crash if too small)\n","filename":"src\/hotspot\/cpu\/x86\/stubRoutines_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}