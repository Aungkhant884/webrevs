{"files":[{"patch":"@@ -38,1 +38,1 @@\n-    return;\t\t\t\/\/ Elided.\n+    return;\n@@ -63,0 +63,26 @@\n+static void z_cmpxchg_common(MacroAssembler& _masm, const MachNode* node, Address mem, Register newval, Register tmp1, Register tmp2) {\n+  \/\/ Compare value (oldval) is in rax\n+\n+  if (node->barrier_data() != ZLoadBarrierElided) {\n+    if (mem.base() == rax || mem.index() == rax) {\n+      __ movptr(tmp2, rax);\n+      mem = Address(mem.base() == rax ? tmp2 : mem.base(),\n+                    mem.index() == rax ? tmp2 : mem.index(),\n+                    mem.scale(), mem.disp());\n+    }\n+    __ movptr(tmp1, rax);\n+  }\n+\n+  __ lock();\n+  __ cmpxchgptr(newval, mem);\n+\n+  if (node->barrier_data() != ZLoadBarrierElided) {\n+    Label good;\n+    z_load_barrier_cmpxchg(_masm, node, mem, rax, tmp1, good);\n+    __ movptr(rax, tmp1);\n+    __ lock();\n+    __ cmpxchgptr(newval, mem);\n+    __ bind(good);\n+  }\n+}\n+\n@@ -84,1 +110,1 @@\n-instruct zCompareAndExchangeP(memory mem, rax_RegP oldval, rRegP newval, rRegP tmp, rFlagsReg cr) %{\n+instruct zCompareAndExchangeP(memory mem, rax_RegP oldval, rRegP newval, rRegP tmp1, rRegP tmp2, rFlagsReg cr) %{\n@@ -87,1 +113,1 @@\n-  effect(KILL cr, TEMP tmp);\n+  effect(KILL cr, TEMP tmp1, TEMP tmp2);\n@@ -93,14 +119,2 @@\n-    if (barrier_data() != ZLoadBarrierElided) { \/\/ barrier could be elided by ZBarrierSetC2::analyze_dominating_barriers()\n-      __ movptr($tmp$$Register, $oldval$$Register);\n-    }\n-    __ lock();\n-    __ cmpxchgptr($newval$$Register, $mem$$Address);\n-\n-    if (barrier_data() != ZLoadBarrierElided) {\n-      Label good;\n-      z_load_barrier_cmpxchg(_masm, this, $mem$$Address, $oldval$$Register, $tmp$$Register, good);\n-      __ movptr($oldval$$Register, $tmp$$Register);\n-      __ lock();\n-      __ cmpxchgptr($newval$$Register, $mem$$Address);\n-      __ bind(good);\n-    }\n+    precond($oldval$$Register == rax);\n+    z_cmpxchg_common(_masm, this, $mem$$Address, $newval$$Register, $tmp1$$Register, $tmp2$$Register);\n@@ -112,1 +126,1 @@\n-instruct zCompareAndSwapP(rRegI res, memory mem, rRegP newval, rRegP tmp, rFlagsReg cr, rax_RegP oldval) %{\n+instruct zCompareAndSwapP(rRegI res, memory mem, rRegP newval, rRegP tmp1, rRegP tmp2, rFlagsReg cr, rax_RegP oldval) %{\n@@ -116,1 +130,1 @@\n-  effect(KILL cr, KILL oldval, TEMP tmp);\n+  effect(KILL cr, KILL oldval, TEMP tmp1, TEMP tmp2);\n@@ -124,6 +138,2 @@\n-    if (barrier_data() != ZLoadBarrierElided) { \/\/ barrier could be elided by ZBarrierSetC2::analyze_dominating_barriers()\n-      __ movptr($tmp$$Register, $oldval$$Register);\n-    }\n-    __ lock();\n-    __ cmpxchgptr($newval$$Register, $mem$$Address);\n-\n+    precond($oldval$$Register == rax);\n+    z_cmpxchg_common(_masm, this, $mem$$Address, $newval$$Register, $tmp1$$Register, $tmp2$$Register);\n@@ -131,7 +141,1 @@\n-      Label good;\n-      z_load_barrier_cmpxchg(_masm, this, $mem$$Address, $oldval$$Register, $tmp$$Register, good);\n-      __ movptr($oldval$$Register, $tmp$$Register);\n-      __ lock();\n-      __ cmpxchgptr($newval$$Register, $mem$$Address);\n-      __ bind(good);\n-      __ cmpptr($tmp$$Register, $oldval$$Register);\n+      __ cmpptr($tmp1$$Register, rax);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/z\/z_x86_64.ad","additions":36,"deletions":32,"binary":false,"changes":68,"status":"modified"}]}