{"files":[{"patch":"@@ -60,2 +60,0 @@\n-            This test is for MetalLookAndFeel only.\n-\n@@ -68,0 +66,1 @@\n+            \"\"\";\n@@ -69,0 +68,2 @@\n+    private static final String INSTRUCTIONS_ADDITIONS_METAL = \"\"\"\n+            \n@@ -82,2 +83,3 @@\n-    public static void main(String[] args) throws Exception {\n-        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+    boolean isMetalLookAndFeel() {\n+        return UIManager.getLookAndFeel() instanceof MetalLookAndFeel;\n+    }\n@@ -85,0 +87,1 @@\n+    public static void main(String[] args) throws Exception {\n@@ -103,0 +106,2 @@\n+        setTitle(UIManager.getLookAndFeel().getClass().getName());\n+\n@@ -132,9 +137,10 @@\n-        JCheckBox oceanThemeSwitch = new JCheckBox(\"Use Ocean theme\", true);\n-        oceanThemeSwitch.addItemListener(e -> {\n-            if (e.getStateChange() == ItemEvent.SELECTED) {\n-                MetalLookAndFeel.setCurrentTheme(oceanTheme);\n-            } else {\n-                MetalLookAndFeel.setCurrentTheme(defaultMetalTheme);\n-            }\n-            SwingUtilities.updateComponentTreeUI(testedPanel);\n-        });\n+        if (isMetalLookAndFeel()) {\n+            JCheckBox oceanThemeSwitch = new JCheckBox(\"Use Ocean theme\", true);\n+            oceanThemeSwitch.addItemListener(e -> {\n+                if (e.getStateChange() == ItemEvent.SELECTED) {\n+                    MetalLookAndFeel.setCurrentTheme(oceanTheme);\n+                } else {\n+                    MetalLookAndFeel.setCurrentTheme(defaultMetalTheme);\n+                }\n+                SwingUtilities.updateComponentTreeUI(testedPanel);\n+            });\n@@ -142,1 +148,2 @@\n-        add(oceanThemeSwitch);\n+            add(oceanThemeSwitch);\n+        }\n@@ -144,0 +151,5 @@\n+        JTextArea instructionArea = new JTextArea(\n+                isMetalLookAndFeel()\n+                        ? INSTRUCTIONS + INSTRUCTIONS_ADDITIONS_METAL\n+                        : INSTRUCTIONS\n+                );\n@@ -145,1 +157,0 @@\n-        JTextArea instructionArea = new JTextArea(INSTRUCTIONS);\n@@ -180,0 +191,1 @@\n+        b.setOpaque(true);\n","filename":"test\/jdk\/javax\/swing\/JCheckBox\/4449413\/bug4449413.java","additions":27,"deletions":15,"binary":false,"changes":42,"status":"modified"}]}