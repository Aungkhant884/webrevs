{"files":[{"patch":"@@ -699,41 +699,0 @@\n-            int helperMethodCount = 0;\n-            final String helperMethodNamePrefix = \"moduleDescriptorsSub\";\n-\n-            \/\/ The method is \"manually split\" based on the heuristics that 70 ModuleDescriptors are smaller than 64kb\n-            \/\/ The number 70 is chosen \"randomly\" to be below the 64kb limit of a method\n-            \/\/ 99 does not work - see https:\/\/bugs.openjdk.org\/browse\/JDK-8246197\n-            for (int index = 0; index < moduleInfos.size(); index++) {\n-                if (index % 95 == 0) {\n-                    \/\/ finish last helper method\n-                    if (helperMethodCount > 0) {\n-                        mv.visitInsn(RETURN);\n-                        mv.visitMaxs(0, 0);\n-                        mv.visitEnd();\n-                    }\n-\n-                    \/\/ create method with name suffix helperMethodCount\n-                    mv = cw.visitMethod(ACC_PRIVATE,\n-                            helperMethodNamePrefix + helperMethodCount,\n-                            \"(\" + MODULE_DESCRIPTOR_ARRAY_SIGNATURE + \")V\",\n-                            \"(\" + MODULE_DESCRIPTOR_ARRAY_SIGNATURE + \")V\",\n-                            null);\n-\n-                    helperMethodCount++;\n-                }\n-\n-                ModuleInfo minfo = moduleInfos.get(index);\n-                \/\/ Here, the assignment to the array at position \"index\" is created\n-                new ModuleDescriptorBuilder(\n-                        minfo.descriptor(),\n-                        minfo.packages(),\n-                        index).build();\n-            }\n-\n-            \/\/ finish last helper method\n-            \/\/ same code as above\n-            mv.visitInsn(RETURN);\n-            mv.visitMaxs(0, 0);\n-            mv.visitEnd();\n-\n-            \/\/ now the content of the method calling the helper methods is generated\n-\n@@ -750,8 +709,5 @@\n-            for (int index = 0; index < helperMethodCount; index++) {\n-                \/\/ create call to helperMethod{i}\n-                mv.visitVarInsn(ALOAD, 0);\n-                mv.visitVarInsn(ALOAD, MD_VAR);\n-                mv.visitMethodInsn(INVOKEVIRTUAL, this.className,\n-                        helperMethodNamePrefix + index,\n-                        \"(\" + MODULE_DESCRIPTOR_ARRAY_SIGNATURE + \")V\",\n-                        false);\n+            for (int index = 0; index < moduleInfos.size(); index++) {\n+                ModuleInfo minfo = moduleInfos.get(index);\n+                new ModuleDescriptorBuilder(minfo.descriptor(),\n+                                            minfo.packages(),\n+                                            index).build();\n@@ -759,1 +715,0 @@\n-\n","filename":"src\/jdk.jlink\/share\/classes\/jdk\/tools\/jlink\/internal\/plugins\/SystemModulesPlugin.java","additions":5,"deletions":50,"binary":false,"changes":55,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-        for (int i = 0; i<200; i++) {\n+        for (int i = 0; i<2_000; i++) {\n@@ -82,1 +82,1 @@\n-        Path moduleDir = Files.createDirectories(mainModulePath);\n+        Files.createDirectories(mainModulePath);\n@@ -86,0 +86,13 @@\n+        Path mainClassDir = mainModulePath.resolve(\"testpackage\");\n+        Files.createDirectories(mainClassDir);\n+\n+        Files.writeString(mainClassDir.resolve(\"JLink100ModulesTest.java\"), \"\"\"\n+                package testpackage;\n+\n+                public class JLink100ModulesTest {\n+                    public static void main(String[] args) throws Exception {\n+                        System.out.println(\"JLink100ModulesTest started.\");\n+                    }\n+                }\n+                \"\"\");\n+\n@@ -96,1 +109,1 @@\n-                \"--module-path\",  out,\n+                \"--module-path\", out,\n@@ -98,0 +111,1 @@\n+                \/\/\"--launcher mylauncher=bug8240567x\/testpackage.JLink100ModulesTest\"\n@@ -100,0 +114,2 @@\n+        \/\/ TODO - check if everything works\n+\n","filename":"test\/jdk\/tools\/jlink\/JLink100Modules.java","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"}]}