{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,2 @@\n-        generator = (prov == null) ? KeyPairGenerator.getInstance(algorithm) : KeyPairGenerator.getInstance(algorithm, prov);\n+        generator = (prov == null) ? KeyPairGenerator.getInstance(algorithm)\n+                                : KeyPairGenerator.getInstance(algorithm, prov);\n@@ -60,1 +61,1 @@\n-        @Param({\"1024\", \"2048\", \"3072\"})\n+        @Param({\"1024\", \"2048\", \"3072\", \"4096\"})\n@@ -62,0 +63,6 @@\n+    }\n+\n+    public static class RSASSAPSS extends KeyPairGeneratorBench {\n+\n+        @Param({\"RSASSA-PSS\"})\n+        private String algorithm;\n@@ -63,0 +70,2 @@\n+        @Param({\"1024\", \"2048\", \"3072\", \"4096\"})\n+        private int keyLength;\n@@ -72,0 +81,1 @@\n+    }\n@@ -73,0 +83,7 @@\n+    public static class EdDSA extends KeyPairGeneratorBench {\n+\n+        @Param({\"EdDSA\"})\n+        private String algorithm;\n+\n+        @Param({\"255\", \"448\"})\n+        private int keyLength;\n@@ -75,0 +92,8 @@\n+    public static class XDH extends KeyPairGeneratorBench {\n+\n+        @Param({\"XDH\"})\n+        private String algorithm;\n+\n+        @Param({\"255\", \"448\"})\n+        private int keyLength;\n+    }\n","filename":"test\/micro\/org\/openjdk\/bench\/javax\/crypto\/full\/KeyPairGeneratorBench.java","additions":28,"deletions":3,"binary":false,"changes":31,"status":"modified"}]}