{"files":[{"patch":"@@ -61,1 +61,0 @@\n-#include \"memory\/metaspaceCounters.hpp\"\n@@ -63,0 +62,1 @@\n+#include \"memory\/metaspaceCounters.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/genCollectedHeap.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -41,1 +42,0 @@\n-#include \"memory\/metaspace.hpp\"\n@@ -57,1 +57,0 @@\n-\n@@ -65,1 +64,0 @@\n-\n@@ -90,2 +88,0 @@\n-\n-\n@@ -393,1 +389,0 @@\n-\n@@ -479,2 +474,0 @@\n-\n-\n@@ -584,1 +577,0 @@\n-\n","filename":"src\/hotspot\/share\/memory\/metaspace.cpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -234,1 +234,0 @@\n-\n@@ -300,3 +299,0 @@\n-\n-\n-\n","filename":"src\/hotspot\/share\/memory\/metaspace.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -83,3 +83,3 @@\n-  Prefix(size_t word_size)\n-    : _mark(EyeCatcher),\n-      _word_size(word_size)\n+  Prefix(size_t word_size) :\n+    _mark(EyeCatcher),\n+    _word_size(word_size)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/allocationGuard.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -82,2 +82,3 @@\n-    Block(Block* next, size_t word_size)\n-      : _next(next), _word_size(word_size)\n+    Block(Block* next, size_t word_size) :\n+      _next(next),\n+      _word_size(word_size)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/binList.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  } while(0)\n+  } while (0)\n@@ -59,3 +59,1 @@\n-  } while(0)\n-\n-\n+  } while (0)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/blockTree.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -93,3 +93,6 @@\n-    Node(size_t word_size)\n-      : _parent(NULL), _left(NULL), _right(NULL),\n-        _next(NULL), _word_size(word_size)\n+    Node(size_t word_size) :\n+      _parent(NULL),\n+      _left(NULL),\n+      _right(NULL),\n+      _next(NULL),\n+      _word_size(word_size)\n@@ -218,1 +221,1 @@\n-    for(;;) {\n+    for (;;) {\n","filename":"src\/hotspot\/share\/memory\/metaspace\/blockTree.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -37,4 +37,5 @@\n-ChunkHeaderPool::ChunkHeaderPool()\n-  : _num_slabs(), _first_slab(NULL), _current_slab(NULL)\n-{\n-}\n+ChunkHeaderPool::ChunkHeaderPool() :\n+  _num_slabs(),\n+  _first_slab(NULL),\n+  _current_slab(NULL)\n+{}\n","filename":"src\/hotspot\/share\/memory\/metaspace\/chunkHeaderPool.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -78,3 +78,0 @@\n-\n-    Metachunk* c = NULL;\n-\n@@ -83,0 +80,1 @@\n+    Metachunk* c = NULL;\n@@ -85,1 +83,0 @@\n-\n@@ -87,1 +84,0 @@\n-\n@@ -93,1 +89,0 @@\n-\n@@ -96,1 +91,0 @@\n-\n@@ -106,1 +100,0 @@\n-\n@@ -122,1 +115,0 @@\n-\n","filename":"src\/hotspot\/share\/memory\/metaspace\/chunkHeaderPool.hpp","additions":1,"deletions":9,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"memory\/metaspace\/metachunk.hpp\"\n@@ -34,1 +35,0 @@\n-#include \"memory\/metaspace\/metachunk.hpp\"\n@@ -68,4 +68,4 @@\n-ChunkManager::ChunkManager(const char* name, VirtualSpaceList* space_list)\n-  : _vslist(space_list),\n-    _name(name),\n-    _chunks()\n+ChunkManager::ChunkManager(const char* name, VirtualSpaceList* space_list) :\n+  _vslist(space_list),\n+  _name(name),\n+  _chunks()\n","filename":"src\/hotspot\/share\/memory\/metaspace\/chunkManager.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -35,1 +36,0 @@\n-#include \"memory\/metaspace.hpp\"\n@@ -60,5 +60,5 @@\n-ClassLoaderMetaspace::ClassLoaderMetaspace(Mutex* lock, Metaspace::MetaspaceType space_type)\n-  : _lock(lock)\n-  , _space_type(space_type)\n-  , _non_class_space_arena(NULL)\n-  , _class_space_arena(NULL)\n+ClassLoaderMetaspace::ClassLoaderMetaspace(Mutex* lock, Metaspace::MetaspaceType space_type) :\n+  _lock(lock),\n+  _space_type(space_type),\n+  _non_class_space_arena(NULL),\n+  _class_space_arena(NULL)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/classLoaderMetaspace.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"memory\/metaspace\/commitLimiter.hpp\"\n@@ -29,0 +28,1 @@\n+#include \"memory\/metaspace\/commitLimiter.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/commitLimiter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -36,5 +36,5 @@\n-CommitMask::CommitMask(const MetaWord* start, size_t word_size)\n-  : CHeapBitMap(mask_size(word_size, Settings::commit_granule_words()))\n-  , _base(start)\n-  , _word_size(word_size)\n-  , _words_per_bit(Settings::commit_granule_words())\n+CommitMask::CommitMask(const MetaWord* start, size_t word_size) :\n+  CHeapBitMap(mask_size(word_size, Settings::commit_granule_words())),\n+  _base(start),\n+  _word_size(word_size),\n+  _words_per_bit(Settings::commit_granule_words())\n@@ -48,0 +48,29 @@\n+\/\/ Given a pointer, check if it points into the range this bitmap covers.\n+bool CommitMask::is_pointer_valid(const MetaWord* p) const {\n+  return p >= _base && p < _base + _word_size;\n+}\n+\n+\/\/ Given a pointer, check if it points into the range this bitmap covers.\n+void CommitMask::check_pointer(const MetaWord* p) const {\n+  assert(is_pointer_valid(p),\n+         \"Pointer \" PTR_FORMAT \" not in range of this bitmap [\" PTR_FORMAT \", \" PTR_FORMAT \").\",\n+         p2i(p), p2i(_base), p2i(_base + _word_size));\n+}\n+\/\/ Given a pointer, check if it points into the range this bitmap covers,\n+\/\/ and if it is aligned to commit granule border.\n+void CommitMask::check_pointer_aligned(const MetaWord* p) const {\n+  check_pointer(p);\n+  assert(is_aligned(p, _words_per_bit * BytesPerWord),\n+         \"Pointer \" PTR_FORMAT \" should be aligned to commit granule size \" SIZE_FORMAT \".\",\n+         p2i(p), _words_per_bit * BytesPerWord);\n+}\n+\/\/ Given a range, check if it points into the range this bitmap covers,\n+\/\/ and if its borders are aligned to commit granule border.\n+void CommitMask::check_range(const MetaWord* start, size_t word_size) const {\n+  check_pointer_aligned(start);\n+  assert(is_aligned(word_size, _words_per_bit),\n+         \"Range \" SIZE_FORMAT \" should be aligned to commit granule size \" SIZE_FORMAT \".\",\n+         word_size, _words_per_bit);\n+  check_pointer(start + word_size - 1);\n+}\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace\/commitMask.cpp","additions":34,"deletions":5,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"utilities\/debug.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"utilities\/debug.hpp\"\n@@ -63,0 +63,9 @@\n+  \/\/ Marks a single commit granule as committed (value == true)\n+  \/\/ or uncomitted (value == false) and returns\n+  \/\/ its prior state.\n+  bool mark_granule(idx_t bitno, bool value) {\n+    bool b = at(bitno);\n+    at_put(bitno, value);\n+    return b;\n+  }\n+\n@@ -64,0 +73,1 @@\n+\n@@ -65,3 +75,1 @@\n-  bool is_pointer_valid(const MetaWord* p) const {\n-    return p >= _base && p < _base + _word_size;\n-  }\n+  bool is_pointer_valid(const MetaWord* p) const;\n@@ -70,5 +78,2 @@\n-  void check_pointer(const MetaWord* p) const {\n-    assert(is_pointer_valid(p),\n-           \"Pointer \" PTR_FORMAT \" not in range of this bitmap [\" PTR_FORMAT \", \" PTR_FORMAT \").\",\n-           p2i(p), p2i(_base), p2i(_base + _word_size));\n-  }\n+  void check_pointer(const MetaWord* p) const;\n+\n@@ -77,6 +82,2 @@\n-  void check_pointer_aligned(const MetaWord* p) const {\n-    check_pointer(p);\n-    assert(is_aligned(p, _words_per_bit * BytesPerWord),\n-           \"Pointer \" PTR_FORMAT \" should be aligned to commit granule size \" SIZE_FORMAT \".\",\n-           p2i(p), _words_per_bit * BytesPerWord);\n-  }\n+  void check_pointer_aligned(const MetaWord* p) const;\n+\n@@ -85,8 +86,1 @@\n-  void check_range(const MetaWord* start, size_t word_size) const {\n-    check_pointer_aligned(start);\n-    assert(is_aligned(word_size, _words_per_bit),\n-           \"Range \" SIZE_FORMAT \" should be aligned to commit granule size \" SIZE_FORMAT \".\",\n-           word_size, _words_per_bit);\n-    check_pointer(start + word_size - 1);\n-  }\n-#endif\n+  void check_range(const MetaWord* start, size_t word_size) const;\n@@ -94,8 +88,1 @@\n-  \/\/ Marks a single commit granule as committed (value == true)\n-  \/\/ or uncomitted (value == false) and returns\n-  \/\/ its prior state.\n-  bool mark_granule(idx_t bitno, bool value) {\n-    bool b = at(bitno);\n-    at_put(bitno, value);\n-    return b;\n-  }\n+#endif \/\/ ASSERT\n","filename":"src\/hotspot\/share\/memory\/metaspace\/commitMask.hpp","additions":18,"deletions":31,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"utilities\/globalDefinitions.hpp\"\n@@ -30,0 +29,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeBlocks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-#include \"utilities\/globalDefinitions.hpp\"\n@@ -30,0 +29,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeChunkList.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -118,1 +118,1 @@\n-    {}\n+  {}\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeChunkList.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -164,9 +164,10 @@\n-  Metachunk()\n-    : _base(NULL),\n-      _used_words(0),\n-      _committed_words(0),\n-      _level(chunklevel::ROOT_CHUNK_LEVEL),\n-      _state(State::Free),\n-      _vsnode(NULL),\n-      _prev(NULL), _next(NULL),\n-      _prev_in_vs(NULL), _next_in_vs(NULL)\n+  Metachunk() :\n+    _base(NULL),\n+    _used_words(0),\n+    _committed_words(0),\n+    _level(chunklevel::ROOT_CHUNK_LEVEL),\n+    _state(State::Free),\n+    _vsnode(NULL),\n+    _prev(NULL), _next(NULL),\n+    _prev_in_vs(NULL),\n+    _next_in_vs(NULL)\n@@ -175,11 +176,8 @@\n- void clear() {\n-   _base = NULL;\n-   _used_words = 0;\n-   _committed_words = 0;\n-   _level = chunklevel::ROOT_CHUNK_LEVEL;\n-   _state = State::Free;\n-   _vsnode = NULL;\n-   _prev = NULL;\n-   _next = NULL;\n-   _prev_in_vs = NULL;\n-   _next_in_vs = NULL;\n+  void clear() {\n+    _base = NULL;\n+    _used_words = 0; _committed_words = 0;\n+    _level = chunklevel::ROOT_CHUNK_LEVEL;\n+    _state = State::Free;\n+    _vsnode = NULL;\n+    _prev = NULL; _next = NULL;\n+    _prev_in_vs = NULL; _next_in_vs = NULL;\n@@ -270,0 +268,1 @@\n+    clear();\n@@ -271,2 +270,0 @@\n-    _used_words = _committed_words = 0; _state = State::Free;\n-    _next = _prev = _next_in_vs = _prev_in_vs = NULL;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metachunk.hpp","additions":19,"deletions":22,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"memory\/metaspace\/metaspaceCommon.hpp\"\n@@ -36,0 +37,4 @@\n+void MetachunkList::verify_does_not_contain(const Metachunk* c) const {\n+  SOMETIMES(assert(contains(c) == false, \"List contains this chunk.\");)\n+}\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metachunkList.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -31,2 +31,0 @@\n-#include \"memory\/metaspace\/metaspaceCommon.hpp\"\n-#include \"utilities\/debug.hpp\"\n@@ -52,0 +50,4 @@\n+  \/\/ Check that list does not contain the given chunk; Note that since that check\n+  \/\/  is expensive, it is subject to VerifyMetaspaceInterval.\n+  DEBUG_ONLY(void verify_does_not_contain(const Metachunk* c) const;)\n+\n@@ -59,2 +61,1 @@\n-    \/\/ Note: contains is expensive (linear search).\n-    ASSERT_SOMETIMES(contains(c) == false, \"Chunk already in this list\");\n+    DEBUG_ONLY(verify_does_not_contain(c);)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metachunkList.hpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -123,6 +123,4 @@\n-MetaspaceArena::MetaspaceArena(ChunkManager* chunk_manager,\n-             const ArenaGrowthPolicy* growth_policy,\n-             Mutex* lock,\n-             SizeAtomicCounter* total_used_words_counter,\n-             const char* name)\n-: _lock(lock),\n+MetaspaceArena::MetaspaceArena(ChunkManager* chunk_manager, const ArenaGrowthPolicy* growth_policy,\n+                               Mutex* lock, SizeAtomicCounter* total_used_words_counter,\n+                               const char* name) :\n+  _lock(lock),\n@@ -158,1 +156,1 @@\n-  while(c) {\n+  while (c) {\n@@ -502,1 +500,0 @@\n-\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceArena.cpp","additions":5,"deletions":8,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#ifndef SHARE_MEMORY_METASPACE_ARENA_HPP\n-#define SHARE_MEMORY_METASPACE_ARENA_HPP\n+#ifndef SHARE_MEMORY_METASPACE_METASPACEARENA_HPP\n+#define SHARE_MEMORY_METASPACE_METASPACEARENA_HPP\n@@ -30,0 +30,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -35,1 +36,0 @@\n-#include \"memory\/metaspace.hpp\"\n@@ -143,5 +143,3 @@\n-  MetaspaceArena(ChunkManager* chunk_manager,\n-               const ArenaGrowthPolicy* growth_policy,\n-               Mutex* lock,\n-               SizeAtomicCounter* total_used_words_counter,\n-               const char* name);\n+  MetaspaceArena(ChunkManager* chunk_manager, const ArenaGrowthPolicy* growth_policy,\n+                 Mutex* lock, SizeAtomicCounter* total_used_words_counter,\n+                 const char* name);\n@@ -181,1 +179,1 @@\n-#endif \/\/ SHARE_MEMORY_METASPACE_ARENA_HPP\n+#endif \/\/ SHARE_MEMORY_METASPACE_METASPACEARENA_HPP\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceArena.hpp","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -26,2 +26,2 @@\n-#ifndef SHARE_MEMORY_METASPACE_ARENAGROWTHPOLICY_HPP\n-#define SHARE_MEMORY_METASPACE_ARENAGROWTHPOLICY_HPP\n+#ifndef SHARE_MEMORY_METASPACE_METASPACEARENAGROWTHPOLICY_HPP\n+#define SHARE_MEMORY_METASPACE_METASPACEARENAGROWTHPOLICY_HPP\n@@ -29,1 +29,0 @@\n-#include \"memory\/metaspace\/chunklevel.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"memory\/metaspace\/chunklevel.hpp\"\n@@ -56,2 +56,4 @@\n-  ArenaGrowthPolicy(const chunklevel_t* array, int num_entries)\n-    : _entries(array), _num_entries(num_entries) {\n+  ArenaGrowthPolicy(const chunklevel_t* array, int num_entries) :\n+    _entries(array),\n+    _num_entries(num_entries)\n+  {\n@@ -77,1 +79,1 @@\n-#endif \/\/ SHARE_MEMORY_METASPACE_ARENAGROWTHPOLICY_HPP\n+#endif \/\/ SHARE_MEMORY_METASPACE_METASPACEARENAGROWTHPOLICY_HPP\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceArenaGrowthPolicy.hpp","additions":8,"deletions":6,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -65,2 +65,5 @@\n-  MetaspaceContext(const char* name, VirtualSpaceList* vslist, ChunkManager* cm)\n-    : _name(name), _vslist(vslist), _cm(cm) {}\n+  MetaspaceContext(const char* name, VirtualSpaceList* vslist, ChunkManager* cm) :\n+    _name(name),\n+    _vslist(vslist),\n+    _cm(cm)\n+  {}\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceContext.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -35,11 +35,11 @@\n-MetaspaceDCmd::MetaspaceDCmd(outputStream* output, bool heap)\n-  : DCmdWithParser(output, heap)\n-  , _basic(\"basic\", \"Prints a basic summary (does not need a safepoint).\", \"BOOLEAN\", false, \"false\")\n-  , _show_loaders(\"show-loaders\", \"Shows usage by class loader.\", \"BOOLEAN\", false, \"false\")\n-  , _by_spacetype(\"by-spacetype\", \"Break down numbers by loader type.\", \"BOOLEAN\", false, \"false\")\n-  , _by_chunktype(\"by-chunktype\", \"Break down numbers by chunk type.\", \"BOOLEAN\", false, \"false\")\n-  , _show_vslist(\"vslist\", \"Shows details about the underlying virtual space.\", \"BOOLEAN\", false, \"false\")\n-  , _scale(\"scale\", \"Memory usage in which to scale. Valid values are: 1, KB, MB or GB (fixed scale) \"\n-           \"or \\\"dynamic\\\" for a dynamically choosen scale.\",\n-           \"STRING\", false, \"dynamic\")\n-  , _show_classes(\"show-classes\", \"If show-loaders is set, shows loaded classes for each loader.\", \"BOOLEAN\", false, \"false\")\n+MetaspaceDCmd::MetaspaceDCmd(outputStream* output, bool heap) :\n+  DCmdWithParser(output, heap),\n+  _basic(\"basic\", \"Prints a basic summary (does not need a safepoint).\", \"BOOLEAN\", false, \"false\"),\n+  _show_loaders(\"show-loaders\", \"Shows usage by class loader.\", \"BOOLEAN\", false, \"false\"),\n+  _by_spacetype(\"by-spacetype\", \"Break down numbers by loader type.\", \"BOOLEAN\", false, \"false\"),\n+  _by_chunktype(\"by-chunktype\", \"Break down numbers by chunk type.\", \"BOOLEAN\", false, \"false\"),\n+  _show_vslist(\"vslist\", \"Shows details about the underlying virtual space.\", \"BOOLEAN\", false, \"false\"),\n+  _scale(\"scale\", \"Memory usage in which to scale. Valid values are: 1, KB, MB or GB (fixed scale) \"\n+         \"or \\\"dynamic\\\" for a dynamically choosen scale.\",\n+         \"STRING\", false, \"dynamic\"),\n+  _show_classes(\"show-classes\", \"If show-loaders is set, shows loaded classes for each loader.\", \"BOOLEAN\", false, \"false\")\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceDCmd.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -39,1 +40,0 @@\n-#include \"memory\/metaspace.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceReporter.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-#include \"utilities\/globalDefinitions.hpp\"\n@@ -33,0 +32,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceSettings.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"memory\/metaspace\/metaspaceSizesSnapshot.hpp\"\n@@ -29,0 +28,1 @@\n+#include \"memory\/metaspace\/metaspaceSizesSnapshot.hpp\"\n@@ -32,7 +32,8 @@\n-MetaspaceSizesSnapshot::MetaspaceSizesSnapshot()\n-    : _used(MetaspaceUtils::used_bytes()),\n-      _committed(MetaspaceUtils::committed_bytes()),\n-      _non_class_used(MetaspaceUtils::used_bytes(Metaspace::NonClassType)),\n-      _non_class_committed(MetaspaceUtils::committed_bytes(Metaspace::NonClassType)),\n-      _class_used(MetaspaceUtils::used_bytes(Metaspace::ClassType)),\n-      _class_committed(MetaspaceUtils::committed_bytes(Metaspace::ClassType)) { }\n+MetaspaceSizesSnapshot::MetaspaceSizesSnapshot() :\n+  _used(MetaspaceUtils::used_bytes()),\n+  _committed(MetaspaceUtils::committed_bytes()),\n+  _non_class_used(MetaspaceUtils::used_bytes(Metaspace::NonClassType)),\n+  _non_class_committed(MetaspaceUtils::committed_bytes(Metaspace::NonClassType)),\n+  _class_used(MetaspaceUtils::used_bytes(Metaspace::ClassType)),\n+  _class_committed(MetaspaceUtils::committed_bytes(Metaspace::ClassType))\n+{}\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceSizesSnapshot.cpp","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"memory\/metaspace\/chunklevel.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"memory\/metaspace\/chunklevel.hpp\"\n@@ -95,3 +95,7 @@\n-  InUseChunkStats()\n-    : _num(0), _word_size(0), _committed_words(0),\n-      _used_words(0), _free_words(0), _waste_words(0)\n+  InUseChunkStats() :\n+    _num(0),\n+    _word_size(0),\n+    _committed_words(0),\n+    _used_words(0),\n+    _free_words(0),\n+    _waste_words(0)\n@@ -124,4 +128,4 @@\n-  ArenaStats()\n-    : _stats(),\n-      _free_blocks_num(0),\n-      _free_blocks_word_size(0)\n+  ArenaStats() :\n+    _stats(),\n+    _free_blocks_num(0),\n+    _free_blocks_word_size(0)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceStatistics.hpp","additions":12,"deletions":8,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -29,0 +29,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -32,1 +33,0 @@\n-#include \"memory\/metaspace.hpp\"\n@@ -41,5 +41,10 @@\n-    bool do_print_classes, bool break_down_by_chunktype)\n-: _out(out), _scale(scale), _do_print(do_print), _do_print_classes(do_print_classes)\n-, _break_down_by_chunktype(break_down_by_chunktype)\n-, _num_loaders(0), _num_loaders_without_metaspace(0), _num_loaders_unloading(0)\n-,  _num_classes(0), _num_classes_shared(0)\n+                                                           bool do_print_classes, bool break_down_by_chunktype) :\n+  _out(out),\n+  _scale(scale),\n+  _do_print(do_print),\n+  _do_print_classes(do_print_classes),\n+  _break_down_by_chunktype(break_down_by_chunktype),\n+  _num_loaders(0),\n+  _num_loaders_without_metaspace(0),\n+  _num_loaders_unloading(0),\n+  _num_classes(0), _num_classes_shared(0)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/printCLDMetaspaceInfoClosure.cpp","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"memory\/metaspace\/metaspaceStatistics.hpp\"\n@@ -32,0 +31,1 @@\n+#include \"memory\/metaspace\/metaspaceStatistics.hpp\"\n@@ -62,1 +62,1 @@\n-      bool do_print_classes, bool break_down_by_chunktype);\n+                               bool do_print_classes, bool break_down_by_chunktype);\n","filename":"src\/hotspot\/share\/memory\/metaspace\/printCLDMetaspaceInfoClosure.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"memory\/metaspaceShared.hpp\"\n@@ -28,0 +27,1 @@\n+#include \"memory\/metaspaceShared.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/printMetaspaceInfoKlassClosure.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-\n@@ -42,2 +41,3 @@\n-RootChunkArea::RootChunkArea(const MetaWord* base)\n-  : _base(base), _first_chunk(NULL)\n+RootChunkArea::RootChunkArea(const MetaWord* base) :\n+  _base(base),\n+  _first_chunk(NULL)\n@@ -510,4 +510,4 @@\n-RootChunkAreaLUT::RootChunkAreaLUT(const MetaWord* base, size_t word_size)\n-  : _base(base),\n-    _num((int)(word_size \/ chunklevel::MAX_CHUNK_WORD_SIZE)),\n-    _arr(NULL)\n+RootChunkAreaLUT::RootChunkAreaLUT(const MetaWord* base, size_t word_size) :\n+  _base(base),\n+  _num((int)(word_size \/ chunklevel::MAX_CHUNK_WORD_SIZE)),\n+  _arr(NULL)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/rootChunkArea.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-#include \"utilities\/ostream.hpp\"\n@@ -35,0 +34,1 @@\n+#include \"utilities\/ostream.hpp\"\n@@ -40,2 +40,4 @@\n-MetaspaceTestArena::MetaspaceTestArena(Mutex* lock, MetaspaceArena* arena)\n-  : _lock(lock), _arena(arena) {}\n+MetaspaceTestArena::MetaspaceTestArena(Mutex* lock, MetaspaceArena* arena) :\n+  _lock(lock),\n+  _arena(arena)\n+{}\n@@ -58,6 +60,8 @@\n-MetaspaceTestContext::MetaspaceTestContext(const char* name, size_t commit_limit, size_t reserve_limit)\n-  : _name(name), _reserve_limit(reserve_limit), _commit_limit(commit_limit),\n-    _context(NULL),\n-    _commit_limiter(commit_limit == 0 ? max_uintx : commit_limit), \/\/ commit_limit == 0 -> no limit\n-    _used_words_counter(),\n-    _rs()\n+MetaspaceTestContext::MetaspaceTestContext(const char* name, size_t commit_limit, size_t reserve_limit) :\n+  _name(name),\n+  _reserve_limit(reserve_limit),\n+  _commit_limit(commit_limit),\n+  _context(NULL),\n+  _commit_limiter(commit_limit == 0 ? max_uintx : commit_limit), \/\/ commit_limit == 0 -> no limit\n+  _used_words_counter(),\n+  _rs()\n","filename":"src\/hotspot\/share\/memory\/metaspace\/testHelpers.cpp","additions":13,"deletions":9,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -31,1 +32,0 @@\n-#include \"memory\/metaspace\/metaspaceContext.hpp\"\n@@ -33,1 +33,1 @@\n-#include \"memory\/metaspace.hpp\"\n+#include \"memory\/metaspace\/metaspaceContext.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/testHelpers.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -33,0 +34,1 @@\n+#include \"memory\/metaspace\/metaspaceCommon.hpp\"\n@@ -35,1 +37,0 @@\n-#include \"memory\/metaspace.hpp\"\n@@ -44,7 +45,7 @@\n-VirtualSpaceList::VirtualSpaceList(const char* name, CommitLimiter* commit_limiter)\n-  : _name(name),\n-    _first_node(NULL),\n-    _can_expand(true),\n-    _commit_limiter(commit_limiter),\n-    _reserved_words_counter(),\n-    _committed_words_counter()\n+VirtualSpaceList::VirtualSpaceList(const char* name, CommitLimiter* commit_limiter) :\n+  _name(name),\n+  _first_node(NULL),\n+  _can_expand(true),\n+  _commit_limiter(commit_limiter),\n+  _reserved_words_counter(),\n+  _committed_words_counter()\n@@ -56,7 +57,7 @@\n-VirtualSpaceList::VirtualSpaceList(const char* name, ReservedSpace rs, CommitLimiter* commit_limiter)\n-  : _name(name),\n-    _first_node(NULL),\n-    _can_expand(false),\n-    _commit_limiter(commit_limiter),\n-    _reserved_words_counter(),\n-    _committed_words_counter()\n+VirtualSpaceList::VirtualSpaceList(const char* name, ReservedSpace rs, CommitLimiter* commit_limiter) :\n+  _name(name),\n+  _first_node(NULL),\n+  _can_expand(false),\n+  _commit_limiter(commit_limiter),\n+  _reserved_words_counter(),\n+  _committed_words_counter()\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceList.cpp","additions":16,"deletions":15,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-#include \"memory\/metaspace\/counters.hpp\"\n@@ -32,0 +31,1 @@\n+#include \"memory\/metaspace\/counters.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceList.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"memory\/metaspace.hpp\"\n@@ -40,1 +41,0 @@\n-#include \"memory\/metaspace.hpp\"\n@@ -226,12 +226,12 @@\n-                                   SizeCounter* reserve_counter, SizeCounter* commit_counter)\n-  : _next(NULL),\n-    _rs(rs),\n-    _owns_rs(owns_rs),\n-    _base((MetaWord*)rs.base()),\n-    _word_size(rs.size() \/ BytesPerWord),\n-    _used_words(0),\n-    _commit_mask((MetaWord*)rs.base(), rs.size() \/ BytesPerWord),\n-    _root_chunk_area_lut((MetaWord*)rs.base(), rs.size() \/ BytesPerWord),\n-    _commit_limiter(limiter),\n-    _total_reserved_words_counter(reserve_counter),\n-    _total_committed_words_counter(commit_counter)\n+                                   SizeCounter* reserve_counter, SizeCounter* commit_counter) :\n+  _next(NULL),\n+  _rs(rs),\n+  _owns_rs(owns_rs),\n+  _base((MetaWord*)rs.base()),\n+  _word_size(rs.size() \/ BytesPerWord),\n+  _used_words(0),\n+  _commit_mask((MetaWord*)rs.base(), rs.size() \/ BytesPerWord),\n+  _root_chunk_area_lut((MetaWord*)rs.base(), rs.size() \/ BytesPerWord),\n+  _commit_limiter(limiter),\n+  _total_reserved_words_counter(reserve_counter),\n+  _total_committed_words_counter(commit_counter)\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceNode.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -30,0 +30,1 @@\n+#include \"memory\/memRegion.hpp\"\n@@ -34,1 +35,0 @@\n-#include \"memory\/memRegion.hpp\"\n@@ -36,1 +36,0 @@\n-#include \"utilities\/debug.hpp\"\n@@ -38,0 +37,1 @@\n+#include \"utilities\/debug.hpp\"\n","filename":"src\/hotspot\/share\/memory\/metaspace\/virtualSpaceNode.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-#include \"runtime\/os.hpp\"\n@@ -30,1 +29,1 @@\n-\n+#include \"runtime\/os.hpp\"\n","filename":"test\/hotspot\/gtest\/metaspace\/metaspaceGtestCommon.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -82,2 +82,6 @@\n-  RandSizeGenerator(size_t min, size_t max)\n-    : _min(min), _max(max), _outlier_chance(0.0), _outlier_min(min), _outlier_max(max)\n+  RandSizeGenerator(size_t min, size_t max) :\n+    _min(min),\n+    _max(max),\n+    _outlier_chance(0.0),\n+    _outlier_min(min),\n+    _outlier_max(max)\n@@ -86,2 +90,6 @@\n-  RandSizeGenerator(size_t min, size_t max, float outlier_chance, size_t outlier_min, size_t outlier_max)\n-    : _min(min), _max(max), _outlier_chance(outlier_chance), _outlier_min(outlier_min), _outlier_max(outlier_max)\n+  RandSizeGenerator(size_t min, size_t max, float outlier_chance, size_t outlier_min, size_t outlier_max) :\n+    _min(min),\n+    _max(max),\n+    _outlier_chance(outlier_chance),\n+    _outlier_min(outlier_min),\n+    _outlier_max(outlier_max)\n","filename":"test\/hotspot\/gtest\/metaspace\/metaspaceGtestCommon.hpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-#include \"metaspaceGtestContexts.hpp\"\n@@ -31,0 +30,1 @@\n+#include \"metaspaceGtestContexts.hpp\"\n","filename":"test\/hotspot\/gtest\/metaspace\/metaspaceGtestContexts.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-  MetaspaceGtestContext(size_t commit_limit = 0, size_t reserve_limit = 0)\n-  : metaspace::MetaspaceTestContext(\"gtest-metaspace-context\", commit_limit, reserve_limit)\n+  MetaspaceGtestContext(size_t commit_limit = 0, size_t reserve_limit = 0) :\n+    metaspace::MetaspaceTestContext(\"gtest-metaspace-context\", commit_limit, reserve_limit)\n@@ -59,3 +59,3 @@\n-  ChunkGtestContext(size_t commit_limit = 0, size_t reserve_limit = 0)\n-    : MetaspaceGtestContext(commit_limit, reserve_limit),\n-      _num_chunks_allocated(0)\n+  ChunkGtestContext(size_t commit_limit = 0, size_t reserve_limit = 0) :\n+    MetaspaceGtestContext(commit_limit, reserve_limit),\n+    _num_chunks_allocated(0)\n","filename":"test\/hotspot\/gtest\/metaspace\/metaspaceGtestContexts.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -92,4 +92,4 @@\n-  SparseArray(int num)\n-    : _slots(NEW_C_HEAP_ARRAY(T, num, mtInternal)),\n-      _num(num),\n-      _index_range(num)\n+  SparseArray(int num) :\n+    _slots(NEW_C_HEAP_ARRAY(T, num, mtInternal)),\n+    _num(num),\n+    _index_range(num)\n","filename":"test\/hotspot\/gtest\/metaspace\/metaspaceGtestSparseArray.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -27,1 +27,0 @@\n-\n","filename":"test\/hotspot\/gtest\/metaspace\/test_allocationGuard.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -335,1 +335,1 @@\n-      while(!bt->is_empty()) {\n+      while (!bt->is_empty()) {\n","filename":"test\/hotspot\/gtest\/metaspace\/test_blocktree.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -231,5 +231,5 @@\n-  ChunkManagerRandomChunkAllocTest(ChunkLevelRange r, float commit_factor)\n-    : _context(),\n-      _chunks(max_num_live_chunks(r, commit_factor)),\n-      _chunklevel_range(r),\n-      _commit_factor(commit_factor)\n+  ChunkManagerRandomChunkAllocTest(ChunkLevelRange r, float commit_factor) :\n+    _context(),\n+    _chunks(max_num_live_chunks(r, commit_factor)),\n+    _chunklevel_range(r),\n+    _commit_factor(commit_factor)\n@@ -240,5 +240,5 @@\n-                                   ChunkLevelRange r, float commit_factor)\n-    : _context(commit_limit),\n-      _chunks(max_num_live_chunks(r, commit_factor)),\n-      _chunklevel_range(r),\n-      _commit_factor(commit_factor)\n+                                   ChunkLevelRange r, float commit_factor) :\n+    _context(commit_limit),\n+    _chunks(max_num_live_chunks(r, commit_factor)),\n+    _chunklevel_range(r),\n+    _commit_factor(commit_factor)\n","filename":"test\/hotspot\/gtest\/metaspace\/test_chunkManager_stress.cpp","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -29,0 +29,2 @@\n+#include \"metaspaceGtestCommon.hpp\"\n+#include \"metaspaceGtestRangeHelpers.hpp\"\n@@ -32,2 +34,0 @@\n-#include \"metaspaceGtestCommon.hpp\"\n-#include \"metaspaceGtestRangeHelpers.hpp\"\n@@ -247,2 +247,4 @@\n-  CommitMaskTest(const MetaWord* base, size_t size)\n-    : _base(base), _word_size(size), _mask(base, size)\n+  CommitMaskTest(const MetaWord* base, size_t size) :\n+    _base(base),\n+    _word_size(size),\n+    _mask(base, size)\n","filename":"test\/hotspot\/gtest\/metaspace\/test_commitmask.cpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -175,1 +175,3 @@\n-    _num_allocs(0), _num_deallocs(0), _num_feeds(0)\n+    _num_allocs(0),\n+    _num_deallocs(0),\n+    _num_feeds(0)\n","filename":"test\/hotspot\/gtest\/metaspace\/test_freeblocks.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,0 @@\n-#include \"runtime\/mutexLocker.hpp\"\n@@ -35,0 +34,1 @@\n+#include \"runtime\/mutexLocker.hpp\"\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metachunk.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,0 @@\n-\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metachunklist.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -85,2 +85,2 @@\n-                            const char* name = \"gtest-MetaspaceArena\")\n-    :_context(helper)\n+                            const char* name = \"gtest-MetaspaceArena\") :\n+    _context(helper)\n@@ -93,2 +93,2 @@\n-                            const char* name = \"gtest-MetaspaceArena\")\n-    :_context(helper)\n+                           const char* name = \"gtest-MetaspaceArena\") :\n+    _context(helper)\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -133,7 +133,8 @@\n-                      SizeAtomicCounter* used_words_counter, SizeRange allocation_range)\n-    : _arena(NULL),\n-      _lock(NULL),\n-      _allocation_range(allocation_range),\n-      _size_of_last_failed_allocation(0),\n-      _allocations(NULL),\n-      _alloc_count(), _dealloc_count()\n+                        SizeAtomicCounter* used_words_counter, SizeRange allocation_range) :\n+    _arena(NULL),\n+    _lock(NULL),\n+    _allocation_range(allocation_range),\n+    _size_of_last_failed_allocation(0),\n+    _allocations(NULL),\n+    _alloc_count(),\n+    _dealloc_count()\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena_stress.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -291,3 +291,7 @@\n-  VirtualSpaceNodeTest(size_t vs_word_size, size_t commit_limit)\n-    : _counter_reserved_words(), _counter_committed_words(), _commit_limiter(commit_limit),\n-      _node(NULL), _vs_word_size(vs_word_size), _commit_limit(commit_limit)\n+  VirtualSpaceNodeTest(size_t vs_word_size, size_t commit_limit) :\n+    _counter_reserved_words(),\n+    _counter_committed_words(),\n+    _commit_limiter(commit_limit),\n+    _node(NULL),\n+    _vs_word_size(vs_word_size),\n+    _commit_limit(commit_limit)\n","filename":"test\/hotspot\/gtest\/metaspace\/test_virtualspacenode.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n- * @run main\/othervm -XX:MaxMetaspaceSize=201M -Xmx100M -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+MetaspaceGuardAllocations PrintMetaspaceDcmd with-compressed-class-space\n+ * @run main\/othervm -XX:MaxMetaspaceSize=201M -Xmx100M -XX:+UseCompressedOops -XX:+UseCompressedClassPointers -XX:+UnlockDiagnosticVMOptions -XX:+MetaspaceGuardAllocations PrintMetaspaceDcmd with-compressed-class-space\n","filename":"test\/hotspot\/jtreg\/runtime\/Metaspace\/PrintMetaspaceDcmd.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}