{"files":[{"patch":"@@ -252,1 +252,1 @@\n-            if (o instanceof AnnotatedType that &&\n+            return o instanceof AnnotatedType that &&\n@@ -256,5 +256,2 @@\n-                !(o instanceof AnnotatedWildcardType)) {\n-                return equalsTypeAndAnnotations(that);\n-            } else {\n-                return false;\n-            }\n+                !(o instanceof AnnotatedWildcardType) &&\n+                equalsTypeAndAnnotations(that);\n@@ -335,2 +332,2 @@\n-            if (o instanceof AnnotatedArrayType that) {\n-                return equalsTypeAndAnnotations(that) &&\n+            return o instanceof AnnotatedArrayType that &&\n+                    equalsTypeAndAnnotations(that) &&\n@@ -339,3 +336,0 @@\n-            } else {\n-                return false;\n-            }\n@@ -379,5 +373,2 @@\n-            if (o instanceof AnnotatedTypeVariable that) {\n-                return equalsTypeAndAnnotations(that);\n-            } else {\n-                return false;\n-            }\n+            return o instanceof AnnotatedTypeVariable that\n+                    && equalsTypeAndAnnotations(that);\n@@ -458,2 +449,2 @@\n-            if (o instanceof AnnotatedParameterizedType that) {\n-                return equalsTypeAndAnnotations(that) &&\n+            return o instanceof AnnotatedParameterizedType that &&\n+                    equalsTypeAndAnnotations(that) &&\n@@ -461,3 +452,0 @@\n-            } else {\n-                return false;\n-            }\n@@ -569,2 +557,2 @@\n-            if (o instanceof AnnotatedWildcardType that) {\n-                return equalsTypeAndAnnotations(that) &&\n+            return o instanceof AnnotatedWildcardType that &&\n+                    equalsTypeAndAnnotations(that) &&\n@@ -575,3 +563,0 @@\n-            } else {\n-                return false;\n-            }\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/annotation\/AnnotatedTypeFactory.java","additions":11,"deletions":26,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -73,4 +73,2 @@\n-        if (o instanceof GenericArrayType that) {\n-            return Objects.equals(genericComponentType, that.getGenericComponentType());\n-        } else\n-            return false;\n+        return o instanceof GenericArrayType that\n+                && Objects.equals(genericComponentType, that.getGenericComponentType());\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/reflectiveObjects\/GenericArrayTypeImpl.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import sun.reflect.generics.tree.FieldTypeSignature;\n-\n@@ -31,1 +29,0 @@\n-import java.lang.reflect.Method;\n@@ -168,31 +165,5 @@\n-        if (o instanceof ParameterizedType that) {\n-            \/\/ Check that information is equivalent\n-\n-            if (this == that)\n-                return true;\n-\n-            Type thatOwner   = that.getOwnerType();\n-            Type thatRawType = that.getRawType();\n-\n-            if (false) { \/\/ Debugging\n-                boolean ownerEquality = (ownerType == null ?\n-                                         thatOwner == null :\n-                                         ownerType.equals(thatOwner));\n-                boolean rawEquality = (rawType == null ?\n-                                       thatRawType == null :\n-                                       rawType.equals(thatRawType));\n-\n-                boolean typeArgEquality = Arrays.equals(actualTypeArguments, \/\/ avoid clone\n-                                                        that.getActualTypeArguments());\n-                for (Type t : actualTypeArguments) {\n-                    System.out.printf(\"\\t\\t%s%s%n\", t, t.getClass());\n-                }\n-\n-                System.out.printf(\"\\towner %s\\traw %s\\ttypeArg %s%n\",\n-                                  ownerEquality, rawEquality, typeArgEquality);\n-                return ownerEquality && rawEquality && typeArgEquality;\n-            }\n-\n-            return\n-                Objects.equals(ownerType, thatOwner) &&\n-                Objects.equals(rawType, thatRawType) &&\n+        if (this == o)\n+            return true;\n+        return o instanceof ParameterizedType that &&\n+                Objects.equals(ownerType, that.getOwnerType()) &&\n+                Objects.equals(rawType, that.getRawType()) &&\n@@ -201,2 +172,0 @@\n-        } else\n-            return false;\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/reflectiveObjects\/ParameterizedTypeImpl.java","additions":5,"deletions":36,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -30,1 +30,0 @@\n-import java.lang.reflect.Array;\n@@ -45,1 +44,0 @@\n-import sun.reflect.generics.visitor.Reifier;\n@@ -162,11 +160,4 @@\n-        if (o instanceof TypeVariable<?> that &&\n-                o.getClass() == TypeVariableImpl.class) {\n-\n-            GenericDeclaration thatDecl = that.getGenericDeclaration();\n-            String thatName = that.getName();\n-\n-            return Objects.equals(genericDeclaration, thatDecl) &&\n-                Objects.equals(name, thatName);\n-\n-        } else\n-            return false;\n+        return o instanceof TypeVariable<?> that &&\n+                o.getClass() == TypeVariableImpl.class &&\n+                Objects.equals(genericDeclaration, that.getGenericDeclaration()) &&\n+                Objects.equals(name, that.getName());\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/reflectiveObjects\/TypeVariableImpl.java","additions":4,"deletions":13,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -33,1 +33,0 @@\n-import sun.reflect.generics.visitor.Reifier;\n@@ -171,8 +170,3 @@\n-        if (o instanceof WildcardType that) {\n-            return\n-                Arrays.equals(this.getLowerBounds(),\n-                              that.getLowerBounds()) &&\n-                Arrays.equals(this.getUpperBounds(),\n-                              that.getUpperBounds());\n-        } else\n-            return false;\n+        return o instanceof WildcardType that\n+                && Arrays.equals(this.getLowerBounds(), that.getLowerBounds())\n+                && Arrays.equals(this.getUpperBounds(), that.getUpperBounds());\n","filename":"src\/java.base\/share\/classes\/sun\/reflect\/generics\/reflectiveObjects\/WildcardTypeImpl.java","additions":3,"deletions":9,"binary":false,"changes":12,"status":"modified"}]}