{"files":[{"patch":"@@ -30,1 +30,0 @@\n-import java.util.Collection;\n@@ -60,2 +59,2 @@\n-     * Returns a {@linkplain MethodTypeDesc} with the given return type and no\n-     * parameter types.\n+     * {@return a {@linkplain MethodTypeDesc} with the given return type and no\n+     * parameter types}\n@@ -64,1 +63,0 @@\n-     * @return a {@linkplain MethodTypeDesc} describing the desired method type\n@@ -73,2 +71,2 @@\n-     * Returns a {@linkplain MethodTypeDesc} given the return type and parameter\n-     * types.\n+     * {@return a {@linkplain MethodTypeDesc} given the return type and a list of\n+     * parameter types}\n@@ -77,3 +75,2 @@\n-     * @param paramDescs a {@linkplain Collection} of {@linkplain ClassDesc}s\n-     * describing the argument types, in its iteration order\n-     * @return a {@linkplain MethodTypeDesc} describing the desired method type\n+     * @param paramDescs a {@linkplain List} of {@linkplain ClassDesc}s\n+     * describing the parameter types\n@@ -85,1 +82,1 @@\n-    static MethodTypeDesc of(ClassDesc returnDesc, Collection<ClassDesc> paramDescs) {\n+    static MethodTypeDesc of(ClassDesc returnDesc, List<ClassDesc> paramDescs) {\n","filename":"src\/java.base\/share\/classes\/java\/lang\/constant\/MethodTypeDesc.java","additions":7,"deletions":10,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.util.Collections;\n@@ -39,0 +40,1 @@\n+import static org.testng.Assert.assertThrows;\n@@ -267,0 +269,1 @@\n+        \/\/ ofDescriptor\n@@ -272,7 +275,1 @@\n-            try {\n-                MethodTypeDesc r = MethodTypeDesc.ofDescriptor(d);\n-                fail(d);\n-            }\n-            catch (IllegalArgumentException e) {\n-                \/\/ good\n-            }\n+            assertThrows(IllegalArgumentException.class, () -> MethodTypeDesc.ofDescriptor(d));\n@@ -280,0 +277,1 @@\n+        assertThrows(NullPointerException.class, () -> MethodTypeDesc.ofDescriptor(null));\n@@ -281,7 +279,2 @@\n-        \/\/ try with null argument\n-        try {\n-            MethodTypeDesc r = MethodTypeDesc.ofDescriptor(null);\n-            fail(\"should fail with NPE\");\n-        } catch (NullPointerException ex) {\n-            \/\/ good\n-        }\n+        \/\/ of(ClassDesc)\n+        assertThrows(NullPointerException.class, () -> MethodTypeDesc.of(null));\n@@ -289,0 +282,3 @@\n+        \/\/ of(ClassDesc, ClassDesc...)\n+        assertThrows(NullPointerException.class, () -> MethodTypeDesc.of(CD_int, (ClassDesc[]) null));\n+        assertThrows(NullPointerException.class, () -> MethodTypeDesc.of(CD_int, new ClassDesc[] {null}));\n@@ -291,15 +287,1 @@\n-        try {\n-            MethodTypeDesc r = MethodTypeDesc.of(CD_int, CD_void);\n-            fail(\"can't reach here\");\n-        }\n-        catch (IllegalArgumentException e) {\n-            \/\/ good\n-        }\n-\n-        try {\n-            MethodTypeDesc r = MethodTypeDesc.of(CD_int, (ClassDesc[]) null);\n-            fail(\"ClassDesc array should not be null\");\n-        }\n-        catch (NullPointerException e) {\n-            \/\/ good\n-        }\n+        assertThrows(IllegalArgumentException.class, () -> MethodTypeDesc.of(CD_int, CD_void));\n@@ -307,9 +289,4 @@\n-        try {\n-            ClassDesc[] paramDescs = new ClassDesc[1];\n-            paramDescs[0] = null;\n-            MethodTypeDesc r = MethodTypeDesc.of(CD_int, paramDescs);\n-            fail(\"ClassDesc should not be null\");\n-        }\n-        catch (NullPointerException e) {\n-            \/\/ good\n-        }\n+        \/\/ of(ClassDesc, List<ClassDesc>)\n+        assertThrows(NullPointerException.class, () -> MethodTypeDesc.of(CD_int, (List<ClassDesc>) null));\n+        assertThrows(NullPointerException.class, () -> MethodTypeDesc.of(CD_int, Collections.singletonList(null)));\n+        assertThrows(IllegalArgumentException.class, () -> MethodTypeDesc.of(CD_int, List.of(CD_void)));\n","filename":"test\/jdk\/java\/lang\/constant\/MethodTypeDescTest.java","additions":15,"deletions":38,"binary":false,"changes":53,"status":"modified"}]}