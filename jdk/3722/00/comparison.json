{"files":[{"patch":"@@ -266,3 +266,0 @@\n-  _current_pending_monitor = NULL;\n-  _current_pending_monitor_is_from_java = true;\n-  _current_waiting_monitor = NULL;\n@@ -279,4 +276,0 @@\n-  _OnTrap   = 0;\n-  _Stalled  = 0;\n-  _TypeTag  = 0x2BAD;\n-\n@@ -1056,0 +1049,5 @@\n+  _current_pending_monitor(NULL),\n+  _current_pending_monitor_is_from_java(true),\n+  _current_waiting_monitor(NULL),\n+  _Stalled(0),\n+\n","filename":"src\/hotspot\/share\/runtime\/thread.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -311,3 +311,0 @@\n-  ObjectMonitor* _current_pending_monitor;      \/\/ ObjectMonitor this thread\n-                                                \/\/ is waiting to lock\n-  bool _current_pending_monitor_is_from_java;   \/\/ locking is from Java code\n@@ -316,5 +313,0 @@\n-\n-\n-  \/\/ ObjectMonitor on which this thread called Object.wait()\n-  ObjectMonitor* _current_waiting_monitor;\n-\n@@ -497,22 +489,0 @@\n-  \/\/ For tracking the heavyweight monitor the thread is pending on.\n-  ObjectMonitor* current_pending_monitor() {\n-    return _current_pending_monitor;\n-  }\n-  void set_current_pending_monitor(ObjectMonitor* monitor) {\n-    _current_pending_monitor = monitor;\n-  }\n-  void set_current_pending_monitor_is_from_java(bool from_java) {\n-    _current_pending_monitor_is_from_java = from_java;\n-  }\n-  bool current_pending_monitor_is_from_java() {\n-    return _current_pending_monitor_is_from_java;\n-  }\n-\n-  \/\/ For tracking the ObjectMonitor on which this thread called Object.wait()\n-  ObjectMonitor* current_waiting_monitor() {\n-    return _current_waiting_monitor;\n-  }\n-  void set_current_waiting_monitor(ObjectMonitor* monitor) {\n-    _current_waiting_monitor = monitor;\n-  }\n-\n@@ -696,2 +666,0 @@\n-  volatile intptr_t _Stalled;\n-  volatile int _TypeTag;\n@@ -706,1 +674,0 @@\n-  volatile int _OnTrap;                       \/\/ Resume-at IP delta\n@@ -824,3 +791,30 @@\n-  MonitorChunk* _monitor_chunks;                 \/\/ Contains the off stack monitors\n-                                                 \/\/ allocated during deoptimization\n-                                                 \/\/ and by JNI_MonitorEnter\/Exit\n+  ObjectMonitor* _current_pending_monitor;              \/\/ ObjectMonitor this thread is waiting to lock\n+  bool           _current_pending_monitor_is_from_java; \/\/ locking is from Java code\n+  ObjectMonitor* _current_waiting_monitor;              \/\/ ObjectMonitor on which this thread called Object.wait()\n+ public:\n+  volatile intptr_t _Stalled;\n+\n+  \/\/ For tracking the heavyweight monitor the thread is pending on.\n+  ObjectMonitor* current_pending_monitor() {\n+    return _current_pending_monitor;\n+  }\n+  void set_current_pending_monitor(ObjectMonitor* monitor) {\n+    _current_pending_monitor = monitor;\n+  }\n+  void set_current_pending_monitor_is_from_java(bool from_java) {\n+    _current_pending_monitor_is_from_java = from_java;\n+  }\n+  bool current_pending_monitor_is_from_java() {\n+    return _current_pending_monitor_is_from_java;\n+  }\n+  ObjectMonitor* current_waiting_monitor() {\n+    return _current_waiting_monitor;\n+  }\n+  void set_current_waiting_monitor(ObjectMonitor* monitor) {\n+    _current_waiting_monitor = monitor;\n+  }\n+\n+ private:\n+  MonitorChunk* _monitor_chunks;              \/\/ Contains the off stack monitors\n+                                              \/\/ allocated during deoptimization\n+                                              \/\/ and by JNI_MonitorEnter\/Exit\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":30,"deletions":36,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -737,3 +737,0 @@\n-  nonstatic_field(Thread,                      _current_pending_monitor,                      ObjectMonitor*)                        \\\n-  nonstatic_field(Thread,                      _current_pending_monitor_is_from_java,         bool)                                  \\\n-  nonstatic_field(Thread,                      _current_waiting_monitor,                      ObjectMonitor*)                        \\\n@@ -746,0 +743,3 @@\n+  nonstatic_field(JavaThread,                  _current_pending_monitor,                      ObjectMonitor*)                        \\\n+  nonstatic_field(JavaThread,                  _current_pending_monitor_is_from_java,         bool)                                  \\\n+  nonstatic_field(JavaThread,                  _current_waiting_monitor,                      ObjectMonitor*)                        \\\n","filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -55,1 +55,2 @@\n-    Type type = db.lookupType(\"Thread\");\n+    Type typeThread = db.lookupType(\"Thread\");\n+    Type typeJavaThread = db.lookupType(\"JavaThread\");\n@@ -57,1 +58,1 @@\n-    suspendFlagsField = type.getCIntegerField(\"_suspend_flags\");\n+    suspendFlagsField = typeThread.getCIntegerField(\"_suspend_flags\");\n@@ -60,5 +61,5 @@\n-    tlabFieldOffset    = type.getField(\"_tlab\").getOffset();\n-    activeHandlesField = type.getAddressField(\"_active_handles\");\n-    currentPendingMonitorField = type.getAddressField(\"_current_pending_monitor\");\n-    currentWaitingMonitorField = type.getAddressField(\"_current_waiting_monitor\");\n-    allocatedBytesField = type.getJLongField(\"_allocated_bytes\");\n+    tlabFieldOffset    = typeThread.getField(\"_tlab\").getOffset();\n+    activeHandlesField = typeThread.getAddressField(\"_active_handles\");\n+    currentPendingMonitorField = typeJavaThread.getAddressField(\"_current_pending_monitor\");\n+    currentWaitingMonitorField = typeJavaThread.getAddressField(\"_current_waiting_monitor\");\n+    allocatedBytesField = typeThread.getJLongField(\"_allocated_bytes\");\n","filename":"src\/jdk.hotspot.agent\/share\/classes\/sun\/jvm\/hotspot\/runtime\/Thread.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}