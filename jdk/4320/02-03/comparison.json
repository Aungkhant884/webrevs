{"files":[{"patch":"@@ -182,1 +182,1 @@\n-  ShenandoahHeapRegion::setup_sizes(MaxHeapSize);\n+  MaxHeapSize = ShenandoahHeapRegion::setup_sizes(MaxHeapSize);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahArguments.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -470,1 +470,1 @@\n-void ShenandoahHeapRegion::setup_sizes(size_t& max_heap_size) {\n+size_t ShenandoahHeapRegion::setup_sizes(size_t max_heap_size) {\n@@ -630,0 +630,2 @@\n+\n+  return max_heap_size;\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.cpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -254,1 +254,2 @@\n-  static void setup_sizes(size_t& max_heap_size);\n+  \/\/ Return adjusted max heap size\n+  static size_t setup_sizes(size_t max_heap_size);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeapRegion.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}