{"files":[{"patch":"@@ -81,1 +81,0 @@\n-import static org.testng.Assert.assertSame;\n@@ -85,0 +84,1 @@\n+import static org.testng.Assert.expectThrows; \/\/Replaced by assertThrows in JUnit5\n@@ -2681,7 +2681,3 @@\n-        try {\n-            m.appendReplacement(result, (\"xyz$g\"));\n-            fail();\n-        } catch (IllegalArgumentException iae) {\n-            if (result.length() != 0)\n-                fail();\n-        }\n+        expectThrows(IllegalArgumentException.class,\n+                () -> m.appendReplacement(result, (\"xyz$g\")));\n+        assertEquals(result.length(), 0);\n@@ -4270,1 +4266,1 @@\n-            assertSame(r, Pattern.compile(p).matcher(s).matches());\n+            assertEquals(r, Pattern.compile(p).matcher(s).matches());\n@@ -4281,5 +4277,2 @@\n-                try {\n-                    Pattern.compile(pat);\n-                    fail();\n-                } catch (PatternSyntaxException e) {\n-                    if (!e.getMessage().startsWith(\n+                var e = expectThrows(PatternSyntaxException.class, () -> Pattern.compile(pat));\n+                assertTrue(e.getMessage().startsWith(\n@@ -4287,4 +4280,1 @@\n-                            + \" Latin letter\")) {\n-                        fail();\n-                    }\n-                }\n+                            + \" Latin letter\"));\n@@ -4298,9 +4288,4 @@\n-                try {\n-                    Pattern.compile(pat);\n-                    fail();\n-                } catch (PatternSyntaxException e) {\n-                    if (!e.getMessage().startsWith(\n-                            \"named capturing group is missing trailing '>'\")) {\n-                        fail();\n-                    }\n-                }\n+                var e = expectThrows(PatternSyntaxException.class, () ->\n+                    Pattern.compile(pat));\n+                    assertTrue(e.getMessage().startsWith(\n+                            \"named capturing group is missing trailing '>'\"));\n@@ -4322,8 +4307,3 @@\n-            try {\n-                Pattern.compile(pat);\n-                fail(\"Expected to fail. Pattern: \" + pat);\n-            } catch (PatternSyntaxException e) {\n-                if (!e.getMessage().startsWith(\"Illegal repetition\")) {\n-                    fail(\"Unexpected error message: \" + e.getMessage());\n-                }\n-            }\n+            var e = expectThrows(PatternSyntaxException.class, () ->\n+                    Pattern.compile(pat));\n+            assertTrue(e.getMessage().startsWith(\"Illegal repetition\"));\n@@ -4557,10 +4537,4 @@\n-\n-        try {\n-            Pattern.compile(pattern);\n-        } catch (PatternSyntaxException e) {\n-            var message = e.getMessage();\n-            var sep = System.lineSeparator();\n-            if (!message.contains(sep + \"\\t ^\")){\n-                fail();\n-            }\n-        }\n+        var e = expectThrows(PatternSyntaxException.class, () ->\n+                Pattern.compile(pattern));\n+        var sep = System.lineSeparator();\n+        assertTrue(e.getMessage().contains(sep + \"\\t ^\"));\n","filename":"test\/jdk\/java\/util\/regex\/RegExTest.java","additions":19,"deletions":45,"binary":false,"changes":64,"status":"modified"}]}