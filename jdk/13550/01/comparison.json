{"files":[{"patch":"@@ -594,1 +594,1 @@\n-    $1_MICRO_BASIC_OPTIONS += -rff $$($1_TEST_RESULTS_DIR)\/jmh-result.$(MICRO_RESULTS_FORMAT)\n+    $1_MICRO_BASIC_OPTIONS += -rff $$(call FixPath, $$($1_TEST_RESULTS_DIR)\/jmh-result.$(MICRO_RESULTS_FORMAT))\n@@ -598,1 +598,1 @@\n-  $1_JMH_JVM_ARGS := -Djava.library.path=$$(TEST_IMAGE_DIR)\/micro\/native \\\n+  $1_JMH_JVM_ARGS := -Djava.library.path=$$(call FixPath, $$(TEST_IMAGE_DIR)\/micro\/native) \\\n@@ -607,1 +607,2 @@\n-        --add-exports java.base\/jdk.internal.classfile.impl=ALL-UNNAMED\n+        --add-exports java.base\/jdk.internal.classfile.impl=ALL-UNNAMED \\\n+        --add-exports java.base\/jdk.internal.vm=ALL-UNNAMED\n@@ -635,0 +636,1 @@\n+\t# We perform path fixing by component to avoid presumptive fixing in quoted vm args\n@@ -636,2 +638,2 @@\n-\t    $$(FIXPATH) $$($1_MICRO_TEST_JDK)\/bin\/java $$($1_MICRO_JAVA_OPTIONS) \\\n-\t        -jar $$($1_MICRO_BENCHMARKS_JAR) \\\n+\t    $$(call FixPathImport, $$($1_MICRO_TEST_JDK)\/bin\/java) $$($1_MICRO_JAVA_OPTIONS) \\\n+\t        -jar $$(call FixPath, $$($1_MICRO_BENCHMARKS_JAR)) \\\n","filename":"make\/RunTests.gmk","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -474,0 +474,2 @@\n+  FixPathImport = \\\n+    $(strip $(subst \\,\\\\, $(shell $(FIXPATH_BASE) import $(patsubst $(FIXPATH), , $1))))\n@@ -478,1 +480,3 @@\n-      $1\n+      $(strip $1)\n+  FixPathImport = \\\n+      $(strip $1)\n","filename":"make\/common\/MakeBase.gmk","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -111,1 +111,0 @@\n-        --add-exports java.base\/jdk.internal.vm=ALL-UNNAMED \\\n","filename":"make\/test\/BuildMicrobenchmark.gmk","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}