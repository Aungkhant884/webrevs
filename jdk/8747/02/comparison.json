{"files":[{"patch":"@@ -81,0 +81,1 @@\n+    requires jdk.zipfs;\n","filename":"src\/jdk.compiler\/share\/classes\/module-info.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8192920 8204588 8210275\n+ * @bug 8192920 8204588 8210275 8286571\n@@ -35,0 +35,1 @@\n+import java.io.PrintWriter;\n@@ -109,0 +110,27 @@\n+    \/\/ java --source N --enable-preview Simple.java hello\n+    \/\/ on minimal jdk image containing jdk.compiler\n+    @Test\n+    void test8286571() throws IOException {\n+        starting(\"test8286571\");\n+        var pw = new PrintWriter(System.out);\n+        int rc = ToolProvider.findFirst(\"jlink\").orElseThrow().run(\n+                pw, pw,\n+                \"--add-modules\",\n+                \"jdk.compiler\",\n+                \"--output\",\n+                \"comp_only\");\n+        if (rc != 0)\n+            throw new AssertionError(\"Jlink failed: rc = \" + rc);\n+        Path file = getSimpleFile(\"Simple.java\", false);\n+        TestResult tr = doExec(\n+                Path.of(\"comp_only\", \"bin\", isWindows ? \"java.exe\" : \"java\").toString(),\n+                \"--source\", thisVersion,\n+                \"--enable-preview\",\n+                file.toString(), \"hello\");\n+        if (!tr.isOK())\n+            error(tr, \"Bad exit code: \" + tr.exitValue);\n+        if (!tr.contains(\"[hello]\"))\n+            error(tr, \"Expected output not found\");\n+        show(tr);\n+    }\n+\n","filename":"test\/jdk\/tools\/launcher\/SourceMode.java","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Verify javac behaves properly in absence of zip\/jar FileSystemProvider\n+ * @summary Verify javac behaves properly in JDK image limited to jdk.compiler module\n@@ -37,2 +37,0 @@\n-import java.util.Arrays;\n-import java.util.List;\n@@ -44,1 +42,0 @@\n-import toolbox.Task.OutputKind;\n@@ -71,5 +68,0 @@\n-        List<String> actualOutput;\n-        List<String> expectedOutput = Arrays.asList(\n-                \"- compiler.err.no.zipfs.for.archive: \" + testJar.toString()\n-        );\n-\n@@ -78,1 +70,1 @@\n-        actualOutput = new JavacTask(tb, Mode.CMDLINE)\n+        new JavacTask(tb, Mode.CMDLINE)\n@@ -83,7 +75,1 @@\n-                .run(Expect.FAIL)\n-                .writeAll()\n-                .getOutputLines(OutputKind.DIRECT);\n-\n-        if (!expectedOutput.equals(actualOutput)) {\n-            throw new AssertionError(\"Unexpected output\");\n-        }\n+                .run(Expect.SUCCESS);\n@@ -92,1 +78,1 @@\n-        actualOutput = new JavacTask(tb, Mode.CMDLINE)\n+        new JavacTask(tb, Mode.CMDLINE)\n@@ -97,7 +83,1 @@\n-                .run(Expect.FAIL)\n-                .writeAll()\n-                .getOutputLines(OutputKind.DIRECT);\n-\n-        if (!expectedOutput.equals(actualOutput)) {\n-            throw new AssertionError(\"Unexpected output\");\n-        }\n+                .run(Expect.SUCCESS);\n@@ -106,1 +86,1 @@\n-        actualOutput = new JavacTask(tb, Mode.CMDLINE)\n+        new JavacTask(tb, Mode.CMDLINE)\n@@ -111,12 +91,1 @@\n-                .run(Expect.FAIL)\n-                .writeAll()\n-                .getOutputLines(OutputKind.DIRECT);\n-\n-        if (!expectedOutput.equals(actualOutput)) {\n-            throw new AssertionError(\"Unexpected output\");\n-        }\n-\n-        expectedOutput = Arrays.asList(\n-                \"- compiler.err.no.zipfs.for.archive: \" + testJar.toString(),\n-                \"1 error\"\n-        );\n+                .run(Expect.SUCCESS);\n@@ -125,1 +94,1 @@\n-        actualOutput = new JavacTask(tb, Mode.CMDLINE)\n+        new JavacTask(tb, Mode.CMDLINE)\n@@ -131,7 +100,1 @@\n-                .run(Expect.FAIL)\n-                .writeAll()\n-                .getOutputLines(OutputKind.DIRECT);\n-\n-        if (!expectedOutput.equals(actualOutput)) {\n-            throw new AssertionError(\"Unexpected output\");\n-        }\n+                .run(Expect.SUCCESS);\n","filename":"test\/langtools\/tools\/javac\/file\/LimitedImage.java","additions":9,"deletions":46,"binary":false,"changes":55,"status":"modified"}]}