[{"commit":{"message":"catch CgroupMetrics.getMemoryLimit exceeding physical RAM\n\nDetect when the subsystem limit exceeds physical RAM and treat\nthat situation as \"unlimited\".\n\nAdd a private native method to establish physical RAM size.\n\nThis presently is only likely to work on POSIX systems, but\nCgroupMetrics are Linux-specific. None the less the precise guards etc.\nmay need adjusting."},"files":[{"filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupMetrics.java"},{"filename":"src\/java.base\/linux\/native\/libjava\/CgroupMetrics.c"}],"sha":"668b81f70173f0b73d4f05ac4cdbc080b4b6ffba"},{"commit":{"message":"Add two tests to catch deriving invalid max memory limit from cgroups\n\nOne test for OperatingSystemMXBean and another for\n-XshowSettings:system, which exercises the Metrics sub-system.\n\nextend TestMemoryAwareness to cover OperatingSystemMXBean with bad cgroup memory limit\n\nadd testMetricsIgnoresMemLimitExceedingPhysicalMemory and refactor\n\nPull the code that establishes host physical max RAM out into a helper\nfunction."},"files":[{"filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMemoryAwareness.java"}],"sha":"fd23b83c652c29b7f7967c5f613ae4f1b37e7d96"}]