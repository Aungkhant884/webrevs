{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"jvm.h\"\n+#include \"jvm_constants.h\"\n","filename":"src\/hotspot\/share\/ci\/ciFlags.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"jvm.h\"\n","filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include \"jvm.h\"\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,2 @@\n+#include \"jvm_constants.h\"\n+#include \"jvm_io.h\"\n@@ -1125,58 +1127,0 @@\n-\/* Get classfile constants *\/\n-#include \"classfile_constants.h\"\n-\n-\/*\n- * Support for a VM-independent class format checker.\n- *\/\n-typedef struct {\n-    unsigned long code;    \/* byte code *\/\n-    unsigned long excs;    \/* exceptions *\/\n-    unsigned long etab;    \/* catch table *\/\n-    unsigned long lnum;    \/* line number *\/\n-    unsigned long lvar;    \/* local vars *\/\n-} method_size_info;\n-\n-typedef struct {\n-    unsigned int constants;    \/* constant pool *\/\n-    unsigned int fields;\n-    unsigned int methods;\n-    unsigned int interfaces;\n-    unsigned int fields2;      \/* number of static 2-word fields *\/\n-    unsigned int innerclasses; \/* # of records in InnerClasses attr *\/\n-\n-    method_size_info clinit;   \/* memory used in clinit *\/\n-    method_size_info main;     \/* used everywhere else *\/\n-} class_size_info;\n-\n-#define JVM_RECOGNIZED_CLASS_MODIFIERS (JVM_ACC_PUBLIC | \\\n-                                        JVM_ACC_FINAL | \\\n-                                        JVM_ACC_SUPER | \\\n-                                        JVM_ACC_INTERFACE | \\\n-                                        JVM_ACC_ABSTRACT | \\\n-                                        JVM_ACC_ANNOTATION | \\\n-                                        JVM_ACC_ENUM | \\\n-                                        JVM_ACC_SYNTHETIC)\n-\n-#define JVM_RECOGNIZED_FIELD_MODIFIERS (JVM_ACC_PUBLIC | \\\n-                                        JVM_ACC_PRIVATE | \\\n-                                        JVM_ACC_PROTECTED | \\\n-                                        JVM_ACC_STATIC | \\\n-                                        JVM_ACC_FINAL | \\\n-                                        JVM_ACC_VOLATILE | \\\n-                                        JVM_ACC_TRANSIENT | \\\n-                                        JVM_ACC_ENUM | \\\n-                                        JVM_ACC_SYNTHETIC)\n-\n-#define JVM_RECOGNIZED_METHOD_MODIFIERS (JVM_ACC_PUBLIC | \\\n-                                         JVM_ACC_PRIVATE | \\\n-                                         JVM_ACC_PROTECTED | \\\n-                                         JVM_ACC_STATIC | \\\n-                                         JVM_ACC_FINAL | \\\n-                                         JVM_ACC_SYNCHRONIZED | \\\n-                                         JVM_ACC_BRIDGE | \\\n-                                         JVM_ACC_VARARGS | \\\n-                                         JVM_ACC_NATIVE | \\\n-                                         JVM_ACC_ABSTRACT | \\\n-                                         JVM_ACC_STRICT | \\\n-                                         JVM_ACC_SYNTHETIC)\n-\n@@ -1196,27 +1140,0 @@\n-\/*\n- * The standard printing functions supported by the Java VM. (Should they\n- * be renamed to JVM_* in the future?\n- *\/\n-\n-\/* jio_snprintf() and jio_vsnprintf() behave like snprintf(3) and vsnprintf(3),\n- *  respectively, with the following differences:\n- * - The string written to str is always zero-terminated, also in case of\n- *   truncation (count is too small to hold the result string), unless count\n- *   is 0. In case of truncation count-1 characters are written and '\\0'\n- *   appendend.\n- * - If count is too small to hold the whole string, -1 is returned across\n- *   all platforms. *\/\n-\n-JNIEXPORT int\n-jio_vsnprintf(char *str, size_t count, const char *fmt, va_list args);\n-\n-JNIEXPORT int\n-jio_snprintf(char *str, size_t count, const char *fmt, ...);\n-\n-JNIEXPORT int\n-jio_fprintf(FILE *, const char *fmt, ...);\n-\n-JNIEXPORT int\n-jio_vfprintf(FILE *, const char *fmt, va_list args);\n-\n-\n","filename":"src\/hotspot\/share\/include\/jvm.h","additions":3,"deletions":86,"binary":false,"changes":89,"status":"modified"},{"patch":"@@ -0,0 +1,65 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef _JAVASOFT_JVM_CONSTANTS_H_\n+#define _JAVASOFT_JVM_CONSTANTS_H_\n+\n+#include \"classfile_constants.h\"\n+\n+#define JVM_RECOGNIZED_CLASS_MODIFIERS (JVM_ACC_PUBLIC | \\\n+                                        JVM_ACC_FINAL | \\\n+                                        JVM_ACC_SUPER | \\\n+                                        JVM_ACC_INTERFACE | \\\n+                                        JVM_ACC_ABSTRACT | \\\n+                                        JVM_ACC_ANNOTATION | \\\n+                                        JVM_ACC_ENUM | \\\n+                                        JVM_ACC_SYNTHETIC)\n+\n+#define JVM_RECOGNIZED_FIELD_MODIFIERS (JVM_ACC_PUBLIC | \\\n+                                        JVM_ACC_PRIVATE | \\\n+                                        JVM_ACC_PROTECTED | \\\n+                                        JVM_ACC_STATIC | \\\n+                                        JVM_ACC_FINAL | \\\n+                                        JVM_ACC_VOLATILE | \\\n+                                        JVM_ACC_TRANSIENT | \\\n+                                        JVM_ACC_ENUM | \\\n+                                        JVM_ACC_SYNTHETIC)\n+\n+#define JVM_RECOGNIZED_METHOD_MODIFIERS (JVM_ACC_PUBLIC | \\\n+                                         JVM_ACC_PRIVATE | \\\n+                                         JVM_ACC_PROTECTED | \\\n+                                         JVM_ACC_STATIC | \\\n+                                         JVM_ACC_FINAL | \\\n+                                         JVM_ACC_SYNCHRONIZED | \\\n+                                         JVM_ACC_BRIDGE | \\\n+                                         JVM_ACC_VARARGS | \\\n+                                         JVM_ACC_NATIVE | \\\n+                                         JVM_ACC_ABSTRACT | \\\n+                                         JVM_ACC_STRICT | \\\n+                                         JVM_ACC_SYNTHETIC)\n+\n+\n+\n+#endif \/* _JAVASOFT_JVM_CONSTANTS_H_ *\/\n","filename":"src\/hotspot\/share\/include\/jvm_constants.h","additions":65,"deletions":0,"binary":false,"changes":65,"status":"added"},{"patch":"@@ -0,0 +1,69 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#ifndef _JAVASOFT_JVM_IO_H_\n+#define _JAVASOFT_JVM_IO_H_\n+\n+#include <sys\/stat.h>\n+\n+#include \"jni.h\"\n+#include \"jvm_md.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+\/*\n+ * The standard printing functions supported by the Java VM. (Should they\n+ * be renamed to JVM_* in the future?\n+ *\/\n+\n+\/* jio_snprintf() and jio_vsnprintf() behave like snprintf(3) and vsnprintf(3),\n+ *  respectively, with the following differences:\n+ * - The string written to str is always zero-terminated, also in case of\n+ *   truncation (count is too small to hold the result string), unless count\n+ *   is 0. In case of truncation count-1 characters are written and '\\0'\n+ *   appendend.\n+ * - If count is too small to hold the whole string, -1 is returned across\n+ *   all platforms. *\/\n+\n+JNIEXPORT int\n+jio_vsnprintf(char *str, size_t count, const char *fmt, va_list args);\n+\n+JNIEXPORT int\n+jio_snprintf(char *str, size_t count, const char *fmt, ...);\n+\n+JNIEXPORT int\n+jio_fprintf(FILE *, const char *fmt, ...);\n+\n+JNIEXPORT int\n+jio_vfprintf(FILE *, const char *fmt, va_list args);\n+\n+#ifdef __cplusplus\n+} \/* extern \"C\" *\/\n+#endif \/* __cplusplus *\/\n+\n+\n+#endif \/* _JAVASOFT_JVM_IO_H_ *\/\n","filename":"src\/hotspot\/share\/include\/jvm_io.h","additions":69,"deletions":0,"binary":false,"changes":69,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+#include \"jvm.h\"\n","filename":"src\/hotspot\/share\/logging\/logSelection.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+#include \"jvm.h\"\n","filename":"src\/hotspot\/share\/prims\/stackwalk.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include \"jvm_io.h\"\n","filename":"src\/hotspot\/share\/runtime\/abstract_vm_version.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+#include \"jvm_io.h\"\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"jvm.h\"\n+#include \"jvm_md.h\"\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"jvm.h\"\n+#include \"jvm_constants.h\"\n@@ -30,0 +30,1 @@\n+#include \"utilities\/globalDefinitions.hpp\"\n","filename":"src\/hotspot\/share\/utilities\/accessFlags.hpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-#include \"jvm.h\"\n","filename":"src\/hotspot\/share\/utilities\/constantTag.hpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n-#include \"jvm.h\"\n+#include \"jvm_io.h\"\n","filename":"src\/hotspot\/share\/utilities\/formatBuffer.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+#include \"jvm.h\"\n","filename":"test\/hotspot\/gtest\/logging\/test_gcTraceTime.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+#include \"jvm.h\"\n","filename":"test\/hotspot\/gtest\/logging\/test_logStream.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}