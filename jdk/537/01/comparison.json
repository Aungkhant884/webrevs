{"files":[{"patch":"@@ -1108,1 +1108,1 @@\n-      assert(outer->outcnt() == 2, \"only phis\");\n+      assert(outer->outcnt() == 2, \"only control nodes\");\n@@ -1736,0 +1736,5 @@\n+  \/\/ Until expansion, the loop end condition is not set so this should not constant fold.\n+  if (is_expanded(phase)) {\n+    return IfNode::Value(phase);\n+  }\n+\n@@ -1739,0 +1744,16 @@\n+bool OuterStripMinedLoopEndNode::is_expanded(PhaseGVN *phase) const {\n+  \/\/ The outer strip mined loop head only has Phi uses after expansion\n+  if (phase->is_IterGVN()) {\n+    Node* backedge = proj_out_or_null(true);\n+    if (backedge != NULL) {\n+      Node* head = backedge->unique_ctrl_out();\n+      if (head != NULL && head->is_OuterStripMinedLoop()) {\n+        if (head->find_out_with(Op_Phi) != NULL) {\n+          return true;\n+        }\n+      }\n+    }\n+  }\n+  return false;\n+}\n+\n","filename":"src\/hotspot\/share\/opto\/loopnode.cpp","additions":22,"deletions":1,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -472,0 +472,2 @@\n+\n+  bool is_expanded(PhaseGVN *phase) const;\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,59 @@\n+\/*\n+ * Copyright (c) 2020, Red Hat, Inc. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * @test\n+ * @bug 8253756\n+ * @summary dead outer strip mined not optimized out after expansion\n+ * @requires vm.compiler2.enabled\n+ *\n+ * @run main\/othervm -XX:-BackgroundCompilation -XX:LoopMaxUnroll=2 TestOuterStripMinedDeadAfterExpansion\n+ *\n+ *\/\n+\n+public class TestOuterStripMinedDeadAfterExpansion {\n+    private static int field;\n+\n+    public static void main(String[] args) {\n+        int[] array = new int[100];\n+        for (int i = 0; i < 20_000; i++) {\n+            test(array, array, array.length);\n+            test_helper(array, 100);\n+        }\n+    }\n+\n+    private static int test(int[] src, int[] dst, int length) {\n+        field = 4 << 17;\n+        System.arraycopy(src, 0, dst, 0, length);\n+        int stop = field >>> 17;\n+        return test_helper(dst, stop);\n+    }\n+\n+    private static int test_helper(int[] dst, int stop) {\n+        int res = 0;\n+        for (int i = 0; i < stop; i++) {\n+            res += dst[i];\n+        }\n+        return res;\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestOuterStripMinedDeadAfterExpansion.java","additions":59,"deletions":0,"binary":false,"changes":59,"status":"added"}]}