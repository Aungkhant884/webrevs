{"files":[{"patch":"@@ -533,1 +533,1 @@\n-  GrowableArray<ClassLoaderData*>* _loaded_cld;\n+  GrowableArray<ClassLoaderData*> _loaded_cld;\n@@ -535,2 +535,7 @@\n-  CollectCLDClosure(GrowableArray<ClassLoaderData*>* loaded_cld) : _loaded_cld(loaded_cld){}\n-\n+  CollectCLDClosure() {}\n+  ~CollectCLDClosure() {\n+    for (int i = 0; i < _loaded_cld.length(); i++) {\n+      ClassLoaderData* cld = _loaded_cld.at(i);\n+      cld->dec_keep_alive();\n+    }\n+  }\n@@ -540,1 +545,1 @@\n-      _loaded_cld->append(cld);\n+      _loaded_cld.append(cld);\n@@ -543,0 +548,3 @@\n+\n+  int nof_cld() const                { return _loaded_cld.length(); }\n+  ClassLoaderData* cld_at(int index) { return _loaded_cld.at(index); }\n@@ -568,2 +576,1 @@\n-  GrowableArray<ClassLoaderData*> loaded_cld;\n-  CollectCLDClosure collect_cld(&loaded_cld);\n+  CollectCLDClosure collect_cld;\n@@ -571,0 +578,4 @@\n+    \/\/ ClassLoaderDataGraph::loaded_cld_do requires ClassLoaderDataGraph_lock.\n+    \/\/ We cannot link the classes while holding this lock (or else we may run into deadlock).\n+    \/\/ Therefore, we need to first collect all the CLDs, and then link their classes after\n+    \/\/ releasing the lock.\n@@ -577,2 +588,2 @@\n-    for (int i = 0; i < loaded_cld.length(); i++) {\n-      ClassLoaderData* cld = loaded_cld.at(i);\n+    for (int i = 0; i < collect_cld.nof_cld(); i++) {\n+      ClassLoaderData* cld = collect_cld.cld_at(i);\n@@ -595,6 +606,0 @@\n-\n-  for (int i = 0; i < loaded_cld.length(); i++) {\n-    ClassLoaderData* cld = loaded_cld.at(i);\n-    cld->dec_keep_alive();\n-  }\n-  loaded_cld.trunc_to(0);\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":19,"deletions":14,"binary":false,"changes":33,"status":"modified"}]}