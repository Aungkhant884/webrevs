{"files":[{"patch":"@@ -834,1 +834,1 @@\n-     * to dynamically re(size).\n+     * to dynamically resize.\n@@ -898,3 +898,3 @@\n-        int size = (int)Math.ceil(initialCapacity \/ loadFactor);\n-        int cap = (size >= MAXIMUM_CAPACITY) ?\n-            MAXIMUM_CAPACITY : tableSizeFor(size);\n+        long size = (long)(1.0 + (long)initialCapacity \/ loadFactor);\n+        int cap = (size >= (long)MAXIMUM_CAPACITY) ?\n+            MAXIMUM_CAPACITY : tableSizeFor((int)size);\n@@ -1466,3 +1466,3 @@\n-            int ts = (int)Math.ceil(size \/ (double)LOAD_FACTOR);\n-            int n = (ts >= MAXIMUM_CAPACITY) ?\n-                MAXIMUM_CAPACITY : tableSizeFor(ts);\n+            long ts = (long)(1.0 + size \/ LOAD_FACTOR);\n+            int n = (ts >= (long)MAXIMUM_CAPACITY) ?\n+                MAXIMUM_CAPACITY : tableSizeFor((int)ts);\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/ConcurrentHashMap.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -42,1 +42,0 @@\n-import java.util.concurrent.ConcurrentHashMap;\n@@ -51,1 +50,0 @@\n-        testOneMapClass(ConcurrentHashMap.class);\n","filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"}]}