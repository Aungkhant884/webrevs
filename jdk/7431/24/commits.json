[{"commit":{"message":"refine test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"261ae62787d23a0e0d9abf414c230171ff8747d8"},{"commit":{"message":"cast several float to double before calculation"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/HashMap.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java"}],"sha":"d168ad4bb8c9f8c80c00a288f6eb8fd8a9908419"},{"commit":{"message":"revert changes to IdentityHashMap"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"475e040fda7fed421969d98d4940fcf0b5970e61"},{"commit":{"message":"refine IdentityHashMap"},"files":[],"sha":"e724cc043bbf2d6501cd3b241a4def14d8978cd6"},{"commit":{"message":"refine test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"6d0ab0ef06b6c54a244672ac8bcb98d61b5be813"},{"commit":{"message":"1. optimize IdentityHashMap that when calling ::new(Map), do not call map.size() twice but once.\n2. delete the this((int) ((1 + m.size()) * 1.1)); as it makes the table over-allocate when size = 19."},"files":[],"sha":"4b96c4e5125dde5ff6a3a25bcc0e4e4b31cbf0c6"},{"commit":{"message":"refine test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"746ad4f007800ff300837397a178dde4fadde018"},{"commit":{"message":"revert unrelated changes and add it to ProblemList.txt\n\nhttps:\/\/bugs.openjdk.java.net\/browse\/JDK-8282120"},"files":[{"filename":"test\/jdk\/ProblemList.txt"}],"sha":"182c22d7ca25bf375d47e53fe922c7f76297e3ac"},{"commit":{"message":"migrate to junit"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"aa599698a91d608fd39032e08208cb2ad627e17f"},{"commit":{"message":"change threshold"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java"}],"sha":"226a7ba3f463ebad2820c06259a89281516f1203"},{"commit":{"message":"migrate to junit"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"cdfb03bb48c5cf61f217909e69d1ccc113900342"},{"commit":{"message":"migrate to junit"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"29af7c24e5c33b7295b1fe9b79b22f5123efc9cd"},{"commit":{"message":"migrate to junit"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"87b73334dc1c30debaba28f1df02f95055ff908c"},{"commit":{"message":"fix license year in test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"2998571af915d6e12c4a7a7f9d0e7e9e8647989b"},{"commit":{"message":"fix test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"d0a4e6fa05f54d598e9b6b93213e1f6395442979"},{"commit":{"message":"fix test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"3e8f2d7e51469b1ac4be55b0b46379e54a19c5e8"},{"commit":{"message":"fix test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"b191bd6ad624da0878ac9b24b490dd0543bd8df5"},{"commit":{"message":"fix test"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"f37f8d2a9c1fe0a21eaa8ac4db5bf96fd70aab14"},{"commit":{"message":"revert changes in ConcurrentHashMap"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"e8bfa526756502d387a4099524662eea8e85bfd2"},{"commit":{"message":"9072610: HashMap copy constructor and putAll can over-allocate table"},"files":[],"sha":"73ff17bcea063531371019671e0e45a19fde7a66"},{"commit":{"message":"9072610: HashMap copy constructor and putAll can over-allocate table"},"files":[{"filename":"test\/jdk\/java\/util\/Map\/HashMapsPutAllOverAllocateTableTest.java"}],"sha":"6d9069da2e53f0041c2d8c1f41011dc843434342"},{"commit":{"message":"9072610: HashMap.putAll can cause redundant space waste"},"files":[],"sha":"e77fe7db5346c6c05cc90acae8107901482dfdde"},{"commit":{"message":"9072610: HashMap.putAll can cause redundant space waste"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java"}],"sha":"95dc4c1bbb720aa0ccd591aa47ef792818d6a2bc"},{"commit":{"message":"9072610: HashMap.putAll can cause redundant space waste"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java"}],"sha":"4e42cae1b9389c3bb94a66790ed9a5dcbd3829c4"},{"commit":{"message":"9072610: HashMap.putAll can cause redundant space waste"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java"}],"sha":"c6654478395a3188aab14c213e219ab6d4dd4421"},{"commit":{"message":"9072610: HashMap.putAll can cause redundant space waste"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java"}],"sha":"2a1bf274589622ee8f47e6cb26560b6f1ab20fce"},{"commit":{"message":"9072610: HashMap.putAll can cause redundant space waste"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/HashMap.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/WeakHashMap.java"}],"sha":"bb42df9c89554204d9ea589817778db667c9d4e7"}]