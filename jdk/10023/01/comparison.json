{"files":[{"patch":"@@ -106,1 +106,7 @@\n-  void remove_constraint(LoaderConstraint* constraint) {\n+  void remove_constraint(Symbol* name, LoaderConstraint* constraint) {\n+    LogTarget(Info, class, loader, constraints) lt;\n+    if (lt.is_enabled()) {\n+      ResourceMark rm;\n+      lt.print(\"purging complete constraint for name %s\",\n+               name->as_C_string());\n+    }\n@@ -190,4 +196,3 @@\n-      \/\/ Remove klass that is no longer alive\n-      if (klass != NULL &&\n-          !klass->is_loader_alive()) {\n-        probe->set_klass(NULL);\n+\n+      \/\/ Remove klass and constraint that is no longer alive\n+      if (klass != NULL && !klass->is_loader_alive()) {\n@@ -204,19 +209,21 @@\n-      }\n-\n-      \/\/ Remove entries no longer alive from loader array\n-      for (int n = probe->num_loaders() - 1; n >= 0; n--) {\n-        if (probe->loader_data(n)->is_unloading()) {\n-          if (lt.is_enabled()) {\n-            ResourceMark rm;\n-            lt.print(\"purging loader %s from constraint for name %s\",\n-                     probe->loader_data(n)->loader_name_and_id(),\n-                     name->as_C_string());\n-          }\n-          probe->remove_loader_at(n);\n-\n-          if (lt.is_enabled()) {\n-            ResourceMark rm;\n-            lt.print(\"new loader list:\");\n-            for (int i = 0; i < probe->num_loaders(); i++) {\n-              lt.print(\"    [%d]: %s\", i,\n-                            probe->loader_data(i)->loader_name_and_id());\n+        set.remove_constraint(name, probe);\n+      } else {\n+        \/\/ The class is alive or null but some of of the loaders may not be.\n+        \/\/ Remove entries no longer alive from loader array\n+        for (int n = probe->num_loaders() - 1; n >= 0; n--) {\n+          if (probe->loader_data(n)->is_unloading()) {\n+            if (lt.is_enabled()) {\n+              ResourceMark rm;\n+              lt.print(\"purging loader %s from constraint for name %s\",\n+                       probe->loader_data(n)->loader_name_and_id(),\n+                       name->as_C_string());\n+            }\n+            probe->remove_loader_at(n);\n+\n+            if (lt.is_enabled()) {\n+              ResourceMark rm;\n+              lt.print(\"new loader list:\");\n+              for (int i = 0; i < probe->num_loaders(); i++) {\n+                lt.print(\"    [%d]: %s\", i,\n+                              probe->loader_data(i)->loader_name_and_id());\n+              }\n@@ -226,7 +233,4 @@\n-      }\n-      \/\/ Check whether the set should be purged\n-      if (probe->num_loaders() < 2) {\n-        if (lt.is_enabled()) {\n-          ResourceMark rm;\n-          lt.print(\"purging complete constraint for name %s\",\n-                   name->as_C_string());\n+        \/\/ Check whether the set should be purged\n+        \/\/ Only one loader doesn't enforce a constraint.\n+        if (probe->num_loaders() < 2) {\n+          set.remove_constraint(name, probe);\n@@ -234,8 +238,0 @@\n-\n-        set.remove_constraint(probe);\n-      } else {\n-#ifdef ASSERT\n-        if (probe->klass() != NULL) {\n-          assert(probe->klass()->is_loader_alive(), \"klass should be live\");\n-        }\n-#endif\n@@ -244,0 +240,2 @@\n+\n+    \/\/ If all the constraints are gone, then let unlink purge this set.\n@@ -453,1 +451,1 @@\n-  set->remove_constraint(src);\n+  set->remove_constraint(class_name, src);\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":38,"deletions":40,"binary":false,"changes":78,"status":"modified"}]}