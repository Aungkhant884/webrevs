{"files":[{"patch":"@@ -190,4 +190,3 @@\n-      \/\/ Remove klass that is no longer alive\n-      if (klass != NULL &&\n-          !klass->is_loader_alive()) {\n-        probe->set_klass(NULL);\n+\n+      \/\/ Remove klass and constraint that is no longer alive\n+      if (klass != NULL && !klass->is_loader_alive()) {\n@@ -204,25 +203,1 @@\n-      }\n-\n-      \/\/ Remove entries no longer alive from loader array\n-      for (int n = probe->num_loaders() - 1; n >= 0; n--) {\n-        if (probe->loader_data(n)->is_unloading()) {\n-          if (lt.is_enabled()) {\n-            ResourceMark rm;\n-            lt.print(\"purging loader %s from constraint for name %s\",\n-                     probe->loader_data(n)->loader_name_and_id(),\n-                     name->as_C_string());\n-          }\n-          probe->remove_loader_at(n);\n-\n-          if (lt.is_enabled()) {\n-            ResourceMark rm;\n-            lt.print(\"new loader list:\");\n-            for (int i = 0; i < probe->num_loaders(); i++) {\n-              lt.print(\"    [%d]: %s\", i,\n-                            probe->loader_data(i)->loader_name_and_id());\n-            }\n-          }\n-        }\n-      }\n-      \/\/ Check whether the set should be purged\n-      if (probe->num_loaders() < 2) {\n+        LogTarget(Info, class, loader, constraints) lt;\n@@ -234,1 +209,0 @@\n-\n@@ -237,3 +211,32 @@\n-#ifdef ASSERT\n-        if (probe->klass() != NULL) {\n-          assert(probe->klass()->is_loader_alive(), \"klass should be live\");\n+        \/\/ The class is alive or null but some of of the loaders may not be.\n+        \/\/ Remove entries no longer alive from loader array\n+        for (int n = probe->num_loaders() - 1; n >= 0; n--) {\n+          if (probe->loader_data(n)->is_unloading()) {\n+            if (lt.is_enabled()) {\n+              ResourceMark rm;\n+              lt.print(\"purging loader %s from constraint for name %s\",\n+                       probe->loader_data(n)->loader_name_and_id(),\n+                       name->as_C_string());\n+            }\n+            probe->remove_loader_at(n);\n+\n+            if (lt.is_enabled()) {\n+              ResourceMark rm;\n+              lt.print(\"new loader list:\");\n+              for (int i = 0; i < probe->num_loaders(); i++) {\n+                lt.print(\"    [%d]: %s\", i,\n+                              probe->loader_data(i)->loader_name_and_id());\n+              }\n+            }\n+          }\n+        }\n+        \/\/ Check whether the set should be purged\n+        \/\/ Only one loader doesn't enforce a constraint.\n+        if (probe->num_loaders() < 2) {\n+          LogTarget(Info, class, loader, constraints) lt;\n+          if (lt.is_enabled()) {\n+            ResourceMark rm;\n+            lt.print(\"purging complete constraint for name %s\",\n+                     name->as_C_string());\n+          }\n+          set.remove_constraint(probe);\n@@ -241,1 +244,0 @@\n-#endif\n@@ -244,0 +246,2 @@\n+\n+    \/\/ If all the constraints are gone, then let unlink purge this set.\n","filename":"src\/hotspot\/share\/classfile\/loaderConstraints.cpp","additions":38,"deletions":34,"binary":false,"changes":72,"status":"modified"}]}