{"files":[{"patch":"@@ -0,0 +1,173 @@\n+\/*\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @key headful\n+ * @bug 4495286\n+ * @summary AccessibleJTable.setAccessibleSelction should\n+ * select rows\/cols if getCellSelectionEnabled() is false\n+ * @run main AccessibleJTableSelectionTest\n+ *\/\n+\n+import java.awt.BorderLayout;\n+import java.awt.Robot;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.ListSelectionModel;\n+import javax.swing.SwingUtilities;\n+\n+public final class AccessibleJTableSelectionTest {\n+\n+    private static JTable jTable;\n+    private static JFrame jFrame;\n+\n+    private static Robot robot;\n+\n+    private static void createGUI() {\n+\n+        Object[][] rowData = { { \"RowData1\", Integer.valueOf(1) },\n+            { \"RowData2\", Integer.valueOf(2) },\n+            { \"RowData3\", Integer.valueOf(3) } };\n+        Object[] columnData = { \"Column One\", \"Column Two\" };\n+\n+        jTable = new JTable(rowData, columnData);\n+        jTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n+        jTable.setRowSelectionAllowed(false);\n+        jTable.setColumnSelectionAllowed(false);\n+        jTable.setCellSelectionEnabled(true);\n+\n+        jFrame = new JFrame();\n+        jFrame.add(new JScrollPane(jTable), BorderLayout.CENTER);\n+        jFrame.setSize(200, 200);\n+        jFrame.setLocationRelativeTo(null);\n+        jFrame.setVisible(true);\n+    }\n+\n+    private static void doTest() throws Exception {\n+        SwingUtilities.invokeAndWait(() -> createGUI());\n+\n+        robot = new Robot();\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            jTable.requestFocus();\n+            jTable.getAccessibleContext().getAccessibleSelection()\n+            .addAccessibleSelection(1);\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!jTable.isRowSelected(0) || !jTable.isColumnSelected(1)) {\n+                throw new RuntimeException(\n+                    \"Unexpected selection state of \"\n+                    + \"Table Row & Column\");\n+            }\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            jTable.setRowSelectionAllowed(true);\n+            jTable.setColumnSelectionAllowed(false);\n+            jTable.setCellSelectionEnabled(false);\n+            jTable.requestFocus();\n+            jTable.getAccessibleContext().getAccessibleSelection()\n+            .addAccessibleSelection(3);\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!jTable.isRowSelected(1)) {\n+                throw new RuntimeException(\n+                    \"Unexpected selection state of \"\n+                    + \"Table Row & Column\");\n+            }\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            jTable.setRowSelectionAllowed(false);\n+            jTable.setColumnSelectionAllowed(true);\n+            jTable.setCellSelectionEnabled(false);\n+            jTable.requestFocus();\n+            jTable.getAccessibleContext().getAccessibleSelection()\n+            .addAccessibleSelection(4);\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!jTable.isColumnSelected(0)) {\n+                throw new RuntimeException(\n+                    \"Unexpected selection state of \"\n+                    + \"Table Row & Column\");\n+            }\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            jTable.setRowSelectionAllowed(true);\n+            jTable.setColumnSelectionAllowed(true);\n+            jTable.setCellSelectionEnabled(false);\n+            jTable.requestFocus();\n+            jTable.getAccessibleContext().getAccessibleSelection()\n+            .addAccessibleSelection(5);\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!(jTable.isRowSelected(2) && jTable.isColumnSelected(1))) {\n+                throw new RuntimeException(\n+                    \"Unexpected selection state of \"\n+                    + \"Table Row & Column\");\n+            }\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            jTable.setCellSelectionEnabled(true);\n+            jTable.setColumnSelectionAllowed(true);\n+            jTable.setRowSelectionAllowed(true);\n+            jTable.requestFocus();\n+            jTable.getAccessibleContext().getAccessibleSelection()\n+            .addAccessibleSelection(4);\n+        });\n+\n+        robot.waitForIdle();\n+        SwingUtilities.invokeAndWait(() -> {\n+            if (!(jTable.isRowSelected(2) && jTable.isColumnSelected(0)\n+                && jTable.isCellSelected(2, 0))) {\n+                throw new RuntimeException(\n+                    \"Unexpected selection state of \"\n+                    + \"Table Row & Column\");\n+            }\n+        });\n+    }\n+\n+    public static void main(final String[] argv) throws Exception {\n+        doTest();\n+        SwingUtilities.invokeAndWait(() -> jFrame.dispose());\n+        System.out.println(\"Test Passed.\");\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/accessibility\/4495286\/AccessibleJTableSelectionTest.java","additions":173,"deletions":0,"binary":false,"changes":173,"status":"added"}]}