{"files":[{"patch":"@@ -107,3 +107,2 @@\n-  LogDecorators decorators = output->decorators();\n-  decorators.without(LogDecorators::tags_decorator);\n-  LogDecorations decorations(LogLevel::Warning, decorators);\n+  using dummy = LogTagSetMapping<LogTag::__NO_TAG>;\n+  LogDecorations decorations(LogLevel::Warning, dummy::tagset(), output->decorators());\n","filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -36,7 +36,1 @@\n-    : _level(level), _tagset(&tagset) {\n-  create_decorations(decorators);\n-}\n-\n-LogDecorations::LogDecorations(LogLevelType level, const LogDecorators &decorators)\n-    : _level(level), _tagset(nullptr) {\n-  assert(!decorators.is_decorator(LogDecorators::tags_decorator), \"_tagset can't be NULL\");\n+    : _level(level), _tagset(tagset) {\n@@ -160,5 +154,1 @@\n-  int written = 0;\n-\n-  if (_tagset != nullptr) {\n-    _tagset->label(pos, DecorationsBufferSize - (pos - _decorations_buffer));\n-  }\n+  int written = _tagset.label(pos, DecorationsBufferSize - (pos - _decorations_buffer));\n","filename":"src\/hotspot\/share\/logging\/logDecorations.cpp","additions":2,"deletions":12,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-  const LogTagSet* _tagset;\n+  const LogTagSet& _tagset;\n@@ -51,1 +51,0 @@\n-  LogDecorations(LogLevelType level, const LogDecorators& decorators);\n@@ -58,6 +57,0 @@\n-  LogLevelType get_level() const { return _level; }\n-\n-  const LogTagSet& get_logTagSet() const {\n-    return *_tagset;\n-  }\n-\n","filename":"src\/hotspot\/share\/logging\/logDecorations.hpp","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -107,4 +107,0 @@\n-  void without(LogDecorators::Decorator source) {\n-    _decorators &= ~LogDecorators::mask(source);\n-  }\n-\n","filename":"src\/hotspot\/share\/logging\/logDecorators.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}