[{"commit":{"message":"Inject the number of dropped messages since last dumpping.\n\nEach LogOutput has an independent counter. The out-of-band message\n\"[number] messages dropped...\" will be dumped into its corresponding\nLogOutput."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.hpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorations.cpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorations.hpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorators.hpp"},{"filename":"src\/hotspot\/share\/logging\/logFileOutput.hpp"},{"filename":"src\/hotspot\/share\/utilities\/hashtable.cpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"f453d03f3c5cd820169029c0a9c94c434dd23a42"},{"commit":{"message":"Revert \"fix runtime\/logging\/RedefineClasses.java crashed with -XX:+AsyncLogging\"\n\nThis reverts commit 81b2a0cb2a6cf57b1cd0baacdf8c0419f14819b4.\n\nThis problem is sidetracked by JDK-8265102."},"files":[],"sha":"54aadfaf221dd826ca54a3834193b18d99f368e3"},{"commit":{"message":"fix runtime\/logging\/RedefineClasses.java crashed with -XX:+AsyncLogging\n\nnmethod::print(outputStream* st) should not obtain tty_lock by assuming\nst is defaultStream. It could be logStream as well.\n\nCurrently, AyncLogFlusher::_lock has the same rank of tty_lock.\nhttps:\/\/issues.amazon.com\/issues\/JVM-563"},"files":[],"sha":"81b2a0cb2a6cf57b1cd0baacdf8c0419f14819b4"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging\n\nMove LogAsyncFlusher from WatcherThread to a standalone NonJavaThread\nhttps:\/\/issues.amazon.com\/issues\/JVM-565"},"files":[{"filename":"src\/hotspot\/os\/windows\/os_windows.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.hpp"},{"filename":"src\/hotspot\/share\/runtime\/os.hpp"},{"filename":"src\/hotspot\/share\/runtime\/thread.cpp"},{"filename":"src\/hotspot\/share\/utilities\/ostream.cpp"}],"sha":"9211121c7afeb7a9fe602fd2a4d20bd98ddb1569"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging\n\nre-introduce the global option AsyncLogging."},"files":[{"filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"}],"sha":"09c058d176ed0f2c50cd97401f7c95bc8e0fa18d"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging\n\nadd a constraint for the option LogAsyncInterval."},"files":[{"filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.cpp"},{"filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagConstraintsRuntime.hpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"}],"sha":"bcefbecb97ee9db8cdd0f3cc55251693b6b77a27"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging\n\nLogMessage supports async_mode.\nremove the option AsyncLogging\nrenanme  the option GCLogBufferSize to AsyncLogBufferSize\nmove drop_log() to LogAsyncFlusher."},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.hpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorations.cpp"},{"filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"760ec76685652dd41db3e41aef169fd6619b655b"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging\n\ncorrect assertion."},"files":[{"filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp"}],"sha":"28718943acd1744ceeaaf6eecd8ed8b8c75873b8"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging\n\nfix a warning from c++11: \"The generation of the implicitly-defined copy\nassignment operator is deprecated if T has a user-declared destructor or\nuser-declared copy constructor.\""},"files":[{"filename":"src\/hotspot\/share\/logging\/logDecorators.hpp"}],"sha":"e23657f378d6a7b3b2db8c4596c7ca7fb794a1ab"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging\n\nAdd an option async for the file-based outputs. The option conforms to\noutput-option in JEP-158."},"files":[{"filename":"src\/hotspot\/share\/logging\/logConfiguration.cpp"},{"filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp"},{"filename":"src\/hotspot\/share\/logging\/logFileOutput.hpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"a3945d0f474b51cc52712d79715e03f681578204"},{"commit":{"message":"8229517: Support for optional asynchronous\/buffered logging"},"files":[{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.cpp"},{"filename":"src\/hotspot\/share\/logging\/logAsyncFlusher.hpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorations.cpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorations.hpp"},{"filename":"src\/hotspot\/share\/logging\/logDecorators.hpp"},{"filename":"src\/hotspot\/share\/logging\/logFileOutput.cpp"},{"filename":"src\/hotspot\/share\/logging\/logFileOutput.hpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/init.cpp"},{"filename":"src\/hotspot\/share\/utilities\/ostream.cpp"},{"filename":"test\/hotspot\/gtest\/logging\/test_asynclog.cpp"}],"sha":"06975875592ef50ba32f40b3851bca42d9b88608"}]