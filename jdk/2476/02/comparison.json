{"files":[{"patch":"@@ -357,1 +357,2 @@\n-     * @param clip the {@code Shape} to use to set the clip\n+     * @param clip the {@code Shape} to use to set the clip.\n+     *             Passing {@code null} clears the current {@code clip}.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Graphics.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1205,2 +1205,3 @@\n-     *          {@code Clip}.  If {@code s} is {@code null},\n-     *          this method clears the current {@code Clip}.\n+     *          {@code Clip}. This method updates the current {@code Clip}.\n+     * @throws NullPointerException if {@code s} is {@code null}\n+     *         and clip is already set via {@code setClip}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Graphics2D.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -0,0 +1,56 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\n+import java.awt.Graphics2D;\n+import java.awt.image.BufferedImage;\n+import java.awt.Shape;\n+\n+\/**\n+ * @test\n+ * @bug 6206189\n+ * @summary Verifies passing null to Graphics2D.clip(Shape) throws NPE.\n+ *\/\n+public class TestNullClip {\n+\n+    public static void main(String[] argv) {\n+        BufferedImage bi = new BufferedImage(100, 100, BufferedImage.TYPE_INT_ARGB);\n+        Graphics2D g2d = (Graphics2D)bi.getGraphics();\n+\n+        try {\n+            g2d.setClip(0, 0, 100, 100);\n+            Shape clip = g2d.getClip();\n+            g2d.setClip(null);\n+            Shape clip1 = g2d.getClip();\n+            if (clip1 != null) {\n+                throw new RuntimeException(\"Clip is not cleared\");\n+            }\n+            g2d.setClip(0, 0, 100, 100);\n+            g2d.clip(null);\n+            throw new RuntimeException(\"NPE is expected\");\n+        } catch (NullPointerException e) {\n+            \/\/expected\n+            System.out.println(\"NPE is thrown\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/awt\/Graphics2D\/TestNullClip.java","additions":56,"deletions":0,"binary":false,"changes":56,"status":"added"}]}