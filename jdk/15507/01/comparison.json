{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -746,13 +746,0 @@\n-    \/**\n-     * See <code>readObject<\/code> and <code>writeObject<\/code> in\n-     * <code>JComponent<\/code> for more\n-     * information about serialization in Swing.\n-     *\/\n-    @Serial\n-    private void writeObject(ObjectOutputStream s) throws IOException {\n-        s.defaultWriteObject();\n-        if ((ui != null) && (getUIClassID().equals(uiClassID))) {\n-            ui.installUI(this);\n-        }\n-    }\n-\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/table\/JTableHeader.java","additions":1,"deletions":14,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,66 @@\n+\/*\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 6450193\n+ * @summary JTableHeader doesn't uninstall UI after first serialization\n+ * @run main SerializeJTableHeader\n+ *\/\n+\n+import javax.swing.table.JTableHeader;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import javax.swing.SwingUtilities;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.ObjectOutputStream;\n+\n+public class SerializeJTableHeader {\n+\n+    private static void setLookAndFeel(UIManager.LookAndFeelInfo laf) {\n+        try {\n+            UIManager.setLookAndFeel(laf.getClassName());\n+        } catch (UnsupportedLookAndFeelException ignored) {\n+            System.out.println(\"Unsupported L&F: \" + laf.getClassName());\n+        } catch (ClassNotFoundException | InstantiationException\n+                 | IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        for (UIManager.LookAndFeelInfo laf : UIManager.getInstalledLookAndFeels()) {\n+            System.out.println(\"Testing L&F: \" + laf);\n+            SwingUtilities.invokeAndWait(() -> setLookAndFeel(laf));\n+            JTableHeader jth = new JTableHeader();\n+            for (int i = 0; i < 10; i++) {\n+                ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+                ObjectOutputStream oos = new ObjectOutputStream(baos);\n+                \/\/System.out.println(jth.getUI());\n+                oos.writeObject(jth);\n+                oos.writeObject(jth.getAccessibleContext());\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTableHeader\/SerializeJTableHeader.java","additions":66,"deletions":0,"binary":false,"changes":66,"status":"added"}]}