{"files":[{"patch":"@@ -220,2 +220,0 @@\n-  virtual void print_pcs() {}\n-\n","filename":"src\/hotspot\/share\/aot\/aotCompiledMethod.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -228,1 +228,0 @@\n-  virtual void print_pcs() = 0;\n@@ -232,0 +231,2 @@\n+  virtual void print_pcs() {}\n+\n","filename":"src\/hotspot\/share\/code\/compiledMethod.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -960,17 +960,1 @@\n-#if defined(SUPPORT_DATA_STRUCTS)\n-    if (AbstractDisassembler::show_structs()) {\n-      \/\/ Print the oops from the underlying CodeBlob as well.\n-      tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n-      print_oops(tty);\n-      tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n-      print_metadata(tty);\n-      tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n-      print_pcs();\n-      tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n-      if (oop_maps() != NULL) {\n-        tty->print(\"oop maps:\"); \/\/ oop_maps()->print_on(tty) outputs a cr() at the beginning\n-        oop_maps()->print_on(tty);\n-        tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n-      }\n-    }\n-#endif\n+    tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n@@ -980,1 +964,0 @@\n-\n@@ -985,0 +968,2 @@\n+      print_pcs();\n+      tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n@@ -987,0 +972,5 @@\n+      if (oop_maps() != NULL) {\n+        tty->print(\"oop maps:\"); \/\/ oop_maps()->print_on(tty) outputs a cr() at the beginning\n+        oop_maps()->print_on(tty);\n+        tty->print_cr(\"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \");\n+      }\n@@ -1847,1 +1837,1 @@\n-        if (r->oop_is_immediate() && r->oop_value() != NULL) {\n+        if (r->oop_is_immediate() && r->raw_oop_value() != NULL) {\n@@ -2608,44 +2598,0 @@\n-\/\/ Print the oops from the underlying CodeBlob.\n-void nmethod::print_oops(outputStream* st) {\n-  ResourceMark m;\n-  st->print(\"Oops:\");\n-  if (oops_begin() < oops_end()) {\n-    st->cr();\n-    for (oop* p = oops_begin(); p < oops_end(); p++) {\n-      Disassembler::print_location((unsigned char*)p, (unsigned char*)oops_begin(), (unsigned char*)oops_end(), st, true, false);\n-      st->print(PTR_FORMAT \" \", *((uintptr_t*)p));\n-      if (*p == Universe::non_oop_word()) {\n-        st->print_cr(\"NON_OOP\");\n-        continue;  \/\/ skip non-oops\n-      }\n-      if (*p == NULL) {\n-        st->print_cr(\"NULL-oop\");\n-        continue;  \/\/ skip non-oops\n-      }\n-      (*p)->print_value_on(st);\n-      st->cr();\n-    }\n-  } else {\n-    st->print_cr(\" <list empty>\");\n-  }\n-}\n-\n-\/\/ Print metadata pool.\n-void nmethod::print_metadata(outputStream* st) {\n-  ResourceMark m;\n-  st->print(\"Metadata:\");\n-  if (metadata_begin() < metadata_end()) {\n-    st->cr();\n-    for (Metadata** p = metadata_begin(); p < metadata_end(); p++) {\n-      Disassembler::print_location((unsigned char*)p, (unsigned char*)metadata_begin(), (unsigned char*)metadata_end(), st, true, false);\n-      st->print(PTR_FORMAT \" \", *((uintptr_t*)p));\n-      if (*p && *p != Universe::non_oop_word()) {\n-        (*p)->print_value_on(st);\n-      }\n-      st->cr();\n-    }\n-  } else {\n-    st->print_cr(\" <list empty>\");\n-  }\n-}\n-\n@@ -2673,1 +2619,0 @@\n-#endif\n@@ -2675,1 +2620,0 @@\n-#ifndef PRODUCT  \/\/ RelocIterator does support printing only then.\n@@ -2715,1 +2659,1 @@\n-  const int log_n = (n<10) ? 1 : (n<100) ? 2 : (n<1000) ? 3 : (n<10000) ? 4 : 6;\n+  const int log_n = (n <= 10) ? 1 : ( n <= 100) ? 2 : (n <= 1000) ? 3 : (n <= 10000) ? 4 : 6;\n@@ -2719,1 +2663,4 @@\n-    for (int i = 0; i < n; i++) {\n+    assert(oop_at(0) == NULL, \"required\");\n+    for (int i = 1; i < n; i++) {\n+      tty->print(\"#%*d: \", log_n, i);\n+      Disassembler::print_location((address)oop_addr_at(i), (address)oops_begin(), (address)oops_end(), tty, true, false);\n@@ -2721,1 +2668,1 @@\n-      tty->print(\"#%*d: \" INTPTR_FORMAT \" \", log_n, i, p2i(o));\n+      tty->print(INTPTR_FORMAT \" \", p2i(o));\n@@ -2738,1 +2685,1 @@\n-  const int log_n = (n<10) ? 1 : (n<100) ? 2 : (n<1000) ? 3 : (n<10000) ? 4 : 6;\n+  const int log_n = (n <= 10) ? 1 : (n <= 100) ? 2 : (n <= 1000) ? 3 : (n <= 10000) ? 4 : 6;\n@@ -2742,1 +2689,4 @@\n-    for (int i = 0; i < n; i++) {\n+    assert(metadata_at(0) == NULL, \"required\");\n+    for (int i = 1; i < n; i++) {\n+      tty->print(\"#%*d: \", log_n, i);\n+      Disassembler::print_location((address)metadata_addr_at(i), (address)metadata_begin(), (address)metadata_end(), tty, true, false);\n@@ -2744,1 +2694,1 @@\n-      tty->print(\"#%*d: \" INTPTR_FORMAT \" \", log_n, i, p2i(m));\n+      tty->print(INTPTR_FORMAT \" \", p2i(m));\n@@ -2984,1 +2934,1 @@\n-const char* nmethod::reloc_string_for(u_char* begin, u_char* end) {\n+const char* nmethod::reloc_string_for(address begin, address end) {\n","filename":"src\/hotspot\/share\/code\/nmethod.cpp","additions":22,"deletions":72,"binary":false,"changes":94,"status":"modified"},{"patch":"@@ -328,1 +328,1 @@\n-  const char* reloc_string_for(u_char* begin, u_char* end);\n+  const char* reloc_string_for(address begin, address end);\n@@ -523,1 +523,1 @@\n-  Metadata*     metadata_at(int index) const      { return index == 0 ? NULL: *metadata_addr_at(index); }\n+  Metadata*        metadata_at(int index) const { return index == 0 ? NULL: *metadata_addr_at(index); }\n@@ -666,1 +666,0 @@\n-  void print_pcs() { print_pcs_on(tty); }\n@@ -677,6 +676,2 @@\n-  void print_oops(outputStream* st);     \/\/ oops from the underlying CodeBlob.\n-  void print_metadata(outputStream* st); \/\/ metadata in metadata pool.\n-#else\n-  \/\/ void print_pcs()                             PRODUCT_RETURN;\n-  void print_pcs()                                { return; }\n-#endif\n+  virtual void print_pcs() { print_pcs_on(tty); }\n+#endif \/\/ SUPPORT_DATA_STRUCTS\n","filename":"src\/hotspot\/share\/code\/nmethod.hpp","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -543,1 +543,1 @@\n-oop oop_Relocation::oop_value() {\n+oop oop_Relocation::raw_oop_value() {\n@@ -546,1 +546,12 @@\n-  if (v == Universe::non_oop_word())  v = NULL;\n+  if (v == Universe::non_oop_word()) {\n+    v = NULL;\n+  }\n+  return v;\n+}\n+\n+oop oop_Relocation::oop_value() {\n+  oop v = NativeAccess<AS_NO_KEEPALIVE>::oop_load(oop_addr());\n+  \/\/ clean inline caches store a special pseudo-null\n+  if (v == Universe::non_oop_word()) {\n+    v = NULL;\n+  }\n","filename":"src\/hotspot\/share\/code\/relocInfo.cpp","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -937,1 +937,3 @@\n-  oop  oop_value();                 \/\/ *oop_addr\n+  oop  raw_oop_value();             \/\/ *oop_addr\n+  oop  oop_value();\n+\n","filename":"src\/hotspot\/share\/code\/relocInfo.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -129,1 +129,1 @@\n-    oop value = r->oop_value();\n+    oop value = r->raw_oop_value();\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahNMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -76,1 +76,1 @@\n-    if (r->oop_value() != NULL) {\n+    if (r->raw_oop_value() != NULL) {\n","filename":"src\/hotspot\/share\/gc\/z\/zNMethod.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}