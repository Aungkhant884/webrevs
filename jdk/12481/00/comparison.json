{"files":[{"patch":"@@ -1004,1 +1004,1 @@\n-    __ mv(t1, InstanceKlass::fully_initialized);\n+    __ mv(t1, (u1)InstanceKlass::fully_initialized);\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2023, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -2153,1 +2153,1 @@\n-  if (((uint64_t)(uintptr_t)CompressedKlassPointers::base() & 0xffffffff) == 0 &&\n+  if (((uint64_t)CompressedKlassPointers::base() & 0xffffffff) == 0 &&\n@@ -2165,1 +2165,1 @@\n-  mv(xbase, (intptr_t)CompressedKlassPointers::base());\n+  mv(xbase, (uintptr_t)CompressedKlassPointers::base());\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2023, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -2145,1 +2145,1 @@\n-    __ mv(xcpool, (int32_t)Deoptimization::Unpack_reexecute);\n+    __ mv(xcpool, Deoptimization::Unpack_reexecute);\n@@ -2486,1 +2486,1 @@\n-  __ mv(c_rarg2, (unsigned)Deoptimization::Unpack_uncommon_trap);\n+  __ mv(c_rarg2, Deoptimization::Unpack_uncommon_trap);\n@@ -2613,1 +2613,1 @@\n-  __ mv(c_rarg1, (unsigned)Deoptimization::Unpack_uncommon_trap);\n+  __ mv(c_rarg1, Deoptimization::Unpack_uncommon_trap);\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -4,1 +4,1 @@\n- * Copyright (c) 2020, 2022, Huawei Technologies Co., Ltd. All rights reserved.\n+ * Copyright (c) 2020, 2023, Huawei Technologies Co., Ltd. All rights reserved.\n@@ -1869,1 +1869,1 @@\n-      __ mv(t1, Klass::_lh_array_tag_type_value << Klass::_lh_array_tag_shift);\n+      __ mv(t1, (int32_t)(Klass::_lh_array_tag_type_value << Klass::_lh_array_tag_shift));\n@@ -3898,1 +3898,1 @@\n-    __ mv(c_rarg1, (uint32_t)kind);\n+    __ mv(c_rarg1, kind);\n","filename":"src\/hotspot\/cpu\/riscv\/stubGenerator_riscv.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}