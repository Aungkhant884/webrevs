{"files":[{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -313,11 +313,10 @@\n-      SOURCE_DATE := $$(shell $$(DATE) +\"%s\")\n-    endif\n-    export SOURCE_DATE_EPOCH := $$(SOURCE_DATE)\n-    ifeq ($$(IS_GNU_DATE), yes)\n-      export SOURCE_DATE_ISO_8601 := $$(shell $$(DATE) --utc \\\n-                                                       --date=\"@$$(SOURCE_DATE_EPOCH)\" \\\n-                                                       +\"%Y-%m-%dT%H:%M:%SZ\" 2> \/dev\/null)\n-    else\n-      export SOURCE_DATE_ISO_8601 := $$(shell $$(DATE) -u \\\n-                                                       -j -f \"%s\" \"$$(SOURCE_DATE_EPOCH)\" \\\n-                                                       +\"%Y-%m-%dT%H:%M:%SZ\" 2> \/dev\/null)\n+      # For static values of SOURCE_DATE (not \"updated\"), these are set in spec.gmk\n+      export SOURCE_DATE_EPOCH := $$(shell $$(DATE) +\"%s\")\n+      ifeq ($$(IS_GNU_DATE), yes)\n+        export SOURCE_DATE_ISO_8601 := $$(shell $$(DATE) --utc \\\n+            --date=\"@$$(SOURCE_DATE_EPOCH)\" +\"$$(ISO_8601_FORMAT_STRING)\" \\\n+            2> \/dev\/null)\n+      else\n+        export SOURCE_DATE_ISO_8601 := $$(shell $$(DATE) -u -j -f \"%s\" \\\n+            \"$$(SOURCE_DATE_EPOCH)\" +\"$$(ISO_8601_FORMAT_STRING)\" 2> \/dev\/null)\n+      endif\n","filename":"make\/InitSupport.gmk","additions":11,"deletions":12,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -155,0 +155,1 @@\n+JDKOPT_SETUP_REPRODUCIBLE_BUILD\n@@ -210,1 +211,0 @@\n-JDKOPT_SETUP_REPRODUCIBLE_BUILD\n","filename":"make\/autoconf\/configure.ac","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2011, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -117,0 +117,1 @@\n+\n@@ -118,1 +119,3 @@\n-  [timestamp to use in hotspot version string, empty for on-the-fly @<:@empty@:>@])])\n+  [timestamp to use in hotspot version string, empty means determined at build time @<:@source-date\/empty@:>@])])\n+\n+  AC_MSG_CHECKING([what hotspot build time to use])\n@@ -122,0 +125,10 @@\n+    AC_MSG_RESULT([$HOTSPOT_BUILD_TIME (from --with-hotspot-build-time)])\n+  else\n+    if test \"x$SOURCE_DATE\" = xupdated; then\n+      HOTSPOT_BUILD_TIME=\"\"\n+      AC_MSG_RESULT([determined at build time (default)])\n+    else\n+      # If we have a fixed value for SOURCE_DATE, use it as default\n+      HOTSPOT_BUILD_TIME=\"$SOURCE_DATE_ISO_8601\"\n+      AC_MSG_RESULT([$HOTSPOT_BUILD_TIME (from --with-source-date)])\n+    fi\n@@ -123,0 +136,1 @@\n+\n","filename":"make\/autoconf\/hotspot.m4","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -665,1 +665,1 @@\n-      [how to set SOURCE_DATE_EPOCH ('updated', 'current', 'version' a timestamp or an ISO-8601 date) @<:@updated@:>@])],\n+      [how to set SOURCE_DATE_EPOCH ('updated', 'current', 'version' a timestamp or an ISO-8601 date) @<:@updated\/value of SOURCE_DATE_EPOCH@:>@])],\n@@ -668,0 +668,4 @@\n+  if test \"x$SOURCE_DATE_EPOCH\" != x && test \"x$with_source_date\" != x; then\n+    AC_MSG_WARN([--with-source-date will override SOURCE_DATE_EPOCH])\n+  fi\n+\n@@ -672,2 +676,10 @@\n-  elif test \"x$with_source_date\" = xupdated || test \"x$with_source_date\" = x; then\n-    # Tell the makefiles to update at each build\n+  elif test \"x$with_source_date\" = x; then\n+    if test \"x$SOURCE_DATE_EPOCH\" != x; then\n+      SOURCE_DATE=$SOURCE_DATE_EPOCH\n+      AC_MSG_RESULT([$SOURCE_DATE, from SOURCE_DATE_EPOCH])\n+    else\n+      # Tell the makefiles to update at each build\n+      SOURCE_DATE=updated\n+      AC_MSG_RESULT([determined at build time (default)])\n+    fi\n+  elif test \"x$with_source_date\" = xupdated; then\n@@ -705,0 +717,12 @@\n+  ISO_8601_FORMAT_STRING=\"%Y-%m-%dT%H:%M:%SZ\"\n+  if test \"x$SOURCE_DATE\" != xupdated; then\n+    # If we have a fixed value for SOURCE_DATE, we need to set SOURCE_DATE_EPOCH\n+    # for the rest of configure.\n+    SOURCE_DATE_EPOCH=\"$SOURCE_DATE\"\n+    if test \"x$IS_GNU_DATE\" = xyes; then\n+      SOURCE_DATE_ISO_8601=`$DATE --utc --date=\"@$SOURCE_DATE\" +\"$ISO_8601_FORMAT_STRING\" 2> \/dev\/null`\n+    else\n+      SOURCE_DATE_ISO_8601=`$DATE -u -j -f \"%s\" \"$SOURCE_DATE\" +\"$ISO_8601_FORMAT_STRING\" 2> \/dev\/null`\n+    fi\n+  fi\n+\n@@ -729,0 +753,2 @@\n+  AC_SUBST(ISO_8601_FORMAT_STRING)\n+  AC_SUBST(SOURCE_DATE_ISO_8601)\n","filename":"make\/autoconf\/jdk-options.m4","additions":29,"deletions":3,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -133,0 +133,7 @@\n+ISO_8601_FORMAT_STRING := @ISO_8601_FORMAT_STRING@\n+\n+ifneq ($(SOURCE_DATE), updated)\n+  # For \"updated\" source date value, these are set in InitSupport.gmk\n+  export SOURCE_DATE_EPOCH := $(SOURCE_DATE)\n+  SOURCE_DATE_ISO_8601 := @SOURCE_DATE_ISO_8601@\n+endif\n","filename":"make\/autoconf\/spec.gmk.in","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}