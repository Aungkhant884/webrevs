{"files":[{"patch":"@@ -793,1 +793,1 @@\n-        log_trace(redefine, class)\n+        log_info(redefine, class)\n@@ -802,1 +802,1 @@\n-    log_trace(redefine, class)\n+    log_info(redefine, class)\n@@ -822,1 +822,1 @@\n-      log_trace(redefine, class, nestmates)\n+      log_info(redefine, class, nestmates)\n@@ -829,1 +829,1 @@\n-    log_trace(redefine, class, nestmates)\n+    log_info(redefine, class, nestmates)\n@@ -854,1 +854,1 @@\n-      log_trace(redefine, class, record)\n+      log_info(redefine, class, record)\n@@ -871,1 +871,1 @@\n-        log_trace(redefine, class, record)\n+        log_info(redefine, class, record)\n@@ -884,1 +884,1 @@\n-        log_trace(redefine, class, record)\n+        log_info(redefine, class, record)\n@@ -895,1 +895,1 @@\n-    log_trace(redefine, class, record)\n+    log_info(redefine, class, record)\n@@ -935,0 +935,5 @@\n+    log_info(redefine, class, normalize)\n+      (\"redefined class %s superclass change error: superclass changed from %s to %s.\",\n+       the_class->external_name(),\n+       the_class->super() == NULL ? \"NULL\" : the_class->super()->external_name(),\n+       scratch_class->super() == NULL ? \"NULL\" : scratch_class->super()->external_name());\n@@ -949,0 +954,3 @@\n+    log_info(redefine, class, normalize)\n+      (\"redefined class %s interfaces change error: number of implemented interfaces changed from %d to %d.\",\n+       the_class->external_name(), n_intfs, k_new_interfaces->length());\n@@ -954,0 +962,4 @@\n+      log_info(redefine, class, normalize)\n+          (\"redefined class %s interfaces change error: interface changed from %s to %s.\",\n+           the_class->external_name(),\n+           k_interfaces->at(i)->external_name(), k_new_interfaces->at(i)->external_name());\n@@ -960,0 +972,2 @@\n+    log_info(redefine, class, normalize)\n+      (\"redefined class %s is in error init state.\", the_class->external_name());\n@@ -986,0 +1000,3 @@\n+    log_info(redefine, class, normalize)\n+        (\"redefined class %s modifiers change error: modifiers changed from %d to %d.\",\n+         the_class->external_name(), old_flags, new_flags);\n@@ -994,10 +1011,0 @@\n-    \/\/ access\n-    old_flags = old_fs.access_flags().as_short();\n-    new_flags = new_fs.access_flags().as_short();\n-    if ((old_flags ^ new_flags) & JVM_RECOGNIZED_FIELD_MODIFIERS) {\n-      return JVMTI_ERROR_UNSUPPORTED_REDEFINITION_SCHEMA_CHANGED;\n-    }\n-    \/\/ offset\n-    if (old_fs.offset() != new_fs.offset()) {\n-      return JVMTI_ERROR_UNSUPPORTED_REDEFINITION_SCHEMA_CHANGED;\n-    }\n@@ -1010,0 +1017,21 @@\n+      log_info(redefine, class, normalize)\n+          (\"redefined class %s fields change error: field %s %s changed to %s %s.\",\n+           the_class->external_name(),\n+           sig_sym1->as_C_string(), name_sym1->as_C_string(),\n+           sig_sym2->as_C_string(), name_sym2->as_C_string());\n+      return JVMTI_ERROR_UNSUPPORTED_REDEFINITION_SCHEMA_CHANGED;\n+    }\n+    \/\/ offset\n+    if (old_fs.offset() != new_fs.offset()) {\n+      log_info(redefine, class, normalize)\n+          (\"redefined class %s field %s change error: offset changed from %d to %d.\",\n+           the_class->external_name(), name_sym2->as_C_string(), old_fs.offset(), new_fs.offset());\n+      return JVMTI_ERROR_UNSUPPORTED_REDEFINITION_SCHEMA_CHANGED;\n+    }\n+    \/\/ access\n+    old_flags = old_fs.access_flags().as_short();\n+    new_flags = new_fs.access_flags().as_short();\n+    if ((old_flags ^ new_flags) & JVM_RECOGNIZED_FIELD_MODIFIERS) {\n+      log_info(redefine, class, normalize)\n+          (\"redefined class %s field %s change error: modifiers changed from %d to %d.\",\n+           the_class->external_name(), name_sym2->as_C_string(), old_flags, new_flags);\n@@ -1017,0 +1045,4 @@\n+    const char* action = old_fs.done() ? \"added\" : \"deleted\";\n+    log_info(redefine, class, normalize)\n+        (\"redefined class %s fields change error: some fields were %s.\",\n+         the_class->external_name(), action);\n@@ -1110,0 +1142,3 @@\n+        log_info(redefine, class, normalize)\n+          (\"redefined class %s  method %s modifiers error: modifiers changed from %d to %d\",\n+           the_class->external_name(), k_old_method->name_and_sig_as_C_string(), old_flags, new_flags);\n@@ -1141,0 +1176,3 @@\n+        log_info(redefine, class, normalize)\n+          (\"redefined class %s methods error: added method: %s [%d]\",\n+           the_class->external_name(), k_new_method->name_and_sig_as_C_string(), ni);\n@@ -1147,0 +1185,3 @@\n+          log_info(redefine, class, normalize)\n+            (\"redefined class %s methods error: can't create ID for new method %s [%d]\",\n+             the_class->external_name(), k_new_method->name_and_sig_as_C_string(), ni);\n@@ -1170,0 +1211,3 @@\n+        log_info(redefine, class, normalize)\n+          (\"redefined class %s methods error: deleted method %s [%d]\",\n+           the_class->external_name(), k_old_method->name_and_sig_as_C_string(), oi);\n","filename":"src\/hotspot\/share\/prims\/jvmtiRedefineClasses.cpp","additions":62,"deletions":18,"binary":false,"changes":80,"status":"modified"}]}