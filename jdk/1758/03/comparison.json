{"files":[{"patch":"@@ -451,0 +451,1 @@\n+                    || options.isSet(Option.HELP_LINT)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/Arguments.java","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -106,23 +106,1 @@\n-    XLINT_CUSTOM(\"-Xlint:\", \"opt.arg.Xlint\", \"opt.Xlint.custom\", EXTENDED, BASIC, ANYOF, getXLintChoices()) {\n-        private final String LINT_KEY_FORMAT = LARGE_INDENT + \"  %-\" +\n-                (DEFAULT_SYNOPSIS_WIDTH + SMALL_INDENT.length() - LARGE_INDENT.length() - 2) + \"s %s\";\n-        @Override\n-        protected void help(Log log) {\n-            super.help(log);\n-            log.printRawLines(WriterKind.STDOUT,\n-                              String.format(LINT_KEY_FORMAT,\n-                                            \"all\",\n-                                            log.localize(PrefixKind.JAVAC, \"opt.Xlint.all\")));\n-            for (LintCategory lc : LintCategory.values()) {\n-                log.printRawLines(WriterKind.STDOUT,\n-                                  String.format(LINT_KEY_FORMAT,\n-                                                lc.option,\n-                                                log.localize(PrefixKind.JAVAC,\n-                                                             \"opt.Xlint.desc.\" + lc.option)));\n-            }\n-            log.printRawLines(WriterKind.STDOUT,\n-                              String.format(LINT_KEY_FORMAT,\n-                                            \"none\",\n-                                            log.localize(PrefixKind.JAVAC, \"opt.Xlint.none\")));\n-        }\n-    },\n+    XLINT_CUSTOM(\"-Xlint:\", \"opt.arg.Xlint\", \"opt.Xlint.custom\", EXTENDED, BASIC, ANYOF, getXLintChoices()),\n@@ -502,0 +480,26 @@\n+    HELP_LINT(\"--help-lint\", \"opt.help.lint\", EXTENDED, INFO) {\n+        private final String LINT_KEY_FORMAT = SMALL_INDENT + SMALL_INDENT + \"%-\" +\n+                (DEFAULT_SYNOPSIS_WIDTH - LARGE_INDENT.length()) + \"s %s\";\n+        @Override\n+        public void process(OptionHelper helper, String option) throws InvalidValueException {\n+            Log log = helper.getLog();\n+            log.printRawLines(WriterKind.STDOUT, log.localize(PrefixKind.JAVAC, \"opt.help.lint.header\"));\n+            log.printRawLines(WriterKind.STDOUT,\n+                              String.format(LINT_KEY_FORMAT,\n+                                            \"all\",\n+                                            log.localize(PrefixKind.JAVAC, \"opt.Xlint.all\")));\n+            for (LintCategory lc : LintCategory.values()) {\n+                log.printRawLines(WriterKind.STDOUT,\n+                                  String.format(LINT_KEY_FORMAT,\n+                                                lc.option,\n+                                                log.localize(PrefixKind.JAVAC,\n+                                                             \"opt.Xlint.desc.\" + lc.option)));\n+            }\n+            log.printRawLines(WriterKind.STDOUT,\n+                              String.format(LINT_KEY_FORMAT,\n+                                            \"none\",\n+                                            log.localize(PrefixKind.JAVAC, \"opt.Xlint.none\")));\n+            super.process(helper, option);\n+        }\n+    },\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/main\/Option.java","additions":28,"deletions":24,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 1999, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -175,1 +175,1 @@\n-    Supported keys are:\n+    Use option --help-lint to see the supported keys.\n@@ -244,1 +244,1 @@\n-\\                             Also warn about access to non-public members from a serializable element.\n+\\                         Also warn about access to non-public members from a serializable element.\n@@ -295,0 +295,4 @@\n+javac.opt.help.lint=\\\n+    Print the supported keys of option -Xlint\n+javac.opt.help.lint.header=\\\n+    The supported keys of option -Xlint are:\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/javac.properties","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,2 +26,2 @@\n- * @bug 8044859\n- * @summary test support for info options -help -X -version -fullversion\n+ * @bug 8044859 8230623\n+ * @summary test support for info options -help -X -version -fullversion --help-lint\n@@ -48,0 +48,1 @@\n+        testInfoOpt(\"--help-lint\", \"supported keys\");\n","filename":"test\/langtools\/tools\/javac\/options\/modes\/InfoOptsTest.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"}]}