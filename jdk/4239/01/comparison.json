{"files":[{"patch":"@@ -1099,0 +1099,1 @@\n+    case Type::VectorMask:\n","filename":"src\/hotspot\/share\/opto\/type.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,64 @@\n+\/*\n+ * Copyright (c) 2021, Huawei Technologies Co. Ltd. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.ByteVector;\n+import jdk.incubator.vector.VectorSpecies;\n+\n+\/*\n+ * @test\n+ * @bug 8267375\n+ * @requires os.arch == \"aarch64\" & vm.debug == true & vm.compiler2.enabled\n+ * @modules jdk.incubator.vector\n+ * @run main\/othervm -XX:CompileCommand=compileonly,compiler.vectorapi.TestVectorInsertByte::* -XX:PrintIdealGraphLevel=3 -XX:PrintIdealGraphFile=TestVectorInsertByte.xml compiler.vectorapi.TestVectorInsertByte\n+ *\/\n+\n+public class TestVectorInsertByte {\n+    static final VectorSpecies<Byte> SPECIESb = ByteVector.SPECIES_MAX;\n+\n+    static final int INVOC_COUNT = 50000;\n+    static final int size = SPECIESb.length();\n+\n+    static byte[] ab = new byte[size];\n+    static byte[] rb = new byte[size];\n+\n+    static void init() {\n+        for (int i = 0; i < size; i++) {\n+            ab[i] = (byte) (size - 1 - i);\n+        }\n+    }\n+\n+    static void testByteVectorInsert() {\n+        ByteVector av = ByteVector.fromArray(SPECIESb, ab, 0);\n+        av = av.withLane(0, (byte) (0));\n+        av.intoArray(rb, 0);\n+    }\n+\n+    public static void main(String[] args) {\n+        init();\n+        for (int ic = 0; ic < INVOC_COUNT; ic++) {\n+            testByteVectorInsert();\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestVectorInsertByte.java","additions":64,"deletions":0,"binary":false,"changes":64,"status":"added"}]}