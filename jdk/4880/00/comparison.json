{"files":[{"patch":"@@ -185,3 +185,0 @@\n-\n-\n-\n@@ -190,5 +187,1 @@\n-                if (isDefaultConstructor()) {\n-                    if (isNormalClass(p.getParentPath())) {\n-                        reportMissing(\"dc.default.constructor\");\n-                    }\n-                } else if (!isOverridingMethod) {\n+                if (!isSynthetic() && !isOverridingMethod)\n@@ -196,1 +189,0 @@\n-                }\n@@ -1153,1 +1145,1 @@\n-    private boolean isDefaultConstructor() {\n+    private boolean isSynthetic() {\n@@ -1164,8 +1156,0 @@\n-    private boolean isNormalClass(TreePath p) {\n-        return switch (p.getLeaf().getKind()) {\n-            case ENUM, RECORD -> false;\n-            case CLASS -> true;\n-            default -> throw new IllegalArgumentException(p.getLeaf().getKind().name());\n-        };\n-    }\n-\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":2,"deletions":18,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n-# Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+# Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,1 +40,0 @@\n-dc.default.constructor = use of default constructor, which does not provide a comment\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/resources\/doclint.properties","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,1 +65,0 @@\n-                \"-Xdoclint:none\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testDiagsLineCaret\/TestDiagsLineCaret.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -423,1 +423,1 @@\n-                \"-Xdoclint:all,-missing\",\n+                \"-Xdoclint:all\",\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testJavaFX\/TestJavaFX.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,3 +52,1 @@\n-                    public class C {\n-                        \/** . *\/ C() { }\n-                    }\n+                    public class C { }\n@@ -58,1 +56,1 @@\n-                    public class C {\n+                    public class C { }\n@@ -70,1 +68,0 @@\n-                        \/** . *\/ C() { }\n@@ -87,1 +84,0 @@\n-                        \/** . *\/ C() { }\n@@ -103,4 +99,1 @@\n-                        public class Nested {\n-                            \/** . *\/ Nested() { }\n-                        }\n-                        \/** . *\/ C() { }\n+                        public class Nested { }\n@@ -111,1 +104,1 @@\n-                        public class Nested {\n+                        public class Nested { }\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testMissingComment\/TestMissingComment.java","additions":4,"deletions":11,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-        \/* 02 *\/    \"public class Test { \/** *\/ Test() { }\\n\" +\n+        \/* 02 *\/    \"public class Test {\\n\" +\n@@ -88,1 +88,1 @@\n-        \/* 02 *\/    \"public class P1Test { \/** *\/ P1Test() { }\\n\" +\n+        \/* 02 *\/    \"public class P1Test {\\n\" +\n@@ -95,1 +95,1 @@\n-        \/* 02 *\/    \"public class P2Test { \/** *\/ P2Test() { }\\n\" +\n+        \/* 02 *\/    \"public class P2Test {\\n\" +\n","filename":"test\/langtools\/jdk\/javadoc\/tool\/doclint\/DocLintTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -22,1 +22,1 @@\n-public class AccessTest { \/** *\/ AccessTest() { }\n+public class AccessTest {\n@@ -45,1 +45,1 @@\n-class AccessTest2 { \/** *\/ AccessTest2() { }\n+class AccessTest2 {\n","filename":"test\/langtools\/tools\/doclint\/AccessTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:all,-missing,-accessibility AccessibilityTest.java\n- * @run main DocLintTester -Xmsgs:all,-missing -ref AccessibilityTest.out AccessibilityTest.java\n+ * @run main DocLintTester -Xmsgs:-accessibility AccessibilityTest.java\n+ * @run main DocLintTester -ref AccessibilityTest.out AccessibilityTest.java\n","filename":"test\/langtools\/tools\/doclint\/AccessibilityTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorTest.out AnchorTest.java\n+ * @run main DocLintTester -ref AnchorTest.out AnchorTest.java\n","filename":"test\/langtools\/tools\/doclint\/AnchorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorTest2.out AnchorTest2.java AnchorTest2a.java\n- * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorTest2.out AnchorTest2a.java AnchorTest2.java\n+ * @run main DocLintTester -ref AnchorTest2.out AnchorTest2.java AnchorTest2a.java\n+ * @run main DocLintTester -ref AnchorTest2.out AnchorTest2a.java AnchorTest2.java\n","filename":"test\/langtools\/tools\/doclint\/AnchorTest2.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -5,1 +5,1 @@\n- * @compile\/fail\/ref=CrashInAnnotateTest.out -Xdoclint:all,-missing -XDrawDiagnostics CrashInAnnotateTest.java\n+ * @compile\/fail\/ref=CrashInAnnotateTest.out -Xdoclint -XDrawDiagnostics CrashInAnnotateTest.java\n","filename":"test\/langtools\/tools\/doclint\/CrashInAnnotateTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -4,0 +4,1 @@\n+CrashInAnnotateTest.java:18:10: compiler.warn.proc.messager: no comment\n@@ -7,1 +8,4 @@\n-6 errors\n\\ No newline at end of file\n+CrashInAnnotateTest.java:28:5: compiler.warn.proc.messager: no comment\n+CrashInAnnotateTest.java:29:16: compiler.warn.proc.messager: no comment\n+6 errors\n+3 warnings\n\\ No newline at end of file\n","filename":"test\/langtools\/tools\/doclint\/CrashInAnnotateTest.out","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -20,1 +20,0 @@\n-    \/** *\/ CustomTagTest() { }\n","filename":"test\/langtools\/tools\/doclint\/CustomTagTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:all,-missing,-reference DuplicateParamTest.java\n- * @run main DocLintTester -Xmsgs:all,-missing -ref DuplicateParamTest.out DuplicateParamTest.java\n+ * @run main DocLintTester -Xmsgs:-reference DuplicateParamTest.java\n+ * @run main DocLintTester -ref DuplicateParamTest.out DuplicateParamTest.java\n","filename":"test\/langtools\/tools\/doclint\/DuplicateParamTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:all,-missing,-reference DuplicateReturnTest.java\n- * @run main DocLintTester -Xmsgs:all,-missing -ref DuplicateReturnTest.out DuplicateReturnTest.java\n+ * @run main DocLintTester -Xmsgs:-reference DuplicateReturnTest.java\n+ * @run main DocLintTester -ref DuplicateReturnTest.out DuplicateReturnTest.java\n","filename":"test\/langtools\/tools\/doclint\/DuplicateReturnTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -13,1 +13,0 @@\n-    \/** *\/ EmptyAuthorTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EmptyAuthorTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyExceptionTest {  \/** *\/ EmptyExceptionTest() { }\n+public class EmptyExceptionTest {\n","filename":"test\/langtools\/tools\/doclint\/EmptyExceptionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyParamTest { \/** . *\/ EmptyParamTest() { }\n+public class EmptyParamTest {\n","filename":"test\/langtools\/tools\/doclint\/EmptyParamTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyReturnTest { \/** . *\/ EmptyReturnTest() { }\n+public class EmptyReturnTest {\n","filename":"test\/langtools\/tools\/doclint\/EmptyReturnTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-public class EmptySerialDataTest implements Serializable { \/** . *\/ EmptySerialDataTest() { }\n+public class EmptySerialDataTest implements Serializable {\n","filename":"test\/langtools\/tools\/doclint\/EmptySerialDataTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -15,1 +15,1 @@\n-public class EmptySerialFieldTest implements Serializable { \/** . *\/ EmptySerialFieldTest() { }\n+public class EmptySerialFieldTest implements Serializable {\n","filename":"test\/langtools\/tools\/doclint\/EmptySerialFieldTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptySinceTest { \/** . *\/ EmptySinceTest() { }\n+public class EmptySinceTest {\n","filename":"test\/langtools\/tools\/doclint\/EmptySinceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyTagsTest { \/** . *\/ EmptyTagsTest() { }\n+public class EmptyTagsTest {\n","filename":"test\/langtools\/tools\/doclint\/EmptyTagsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -12,1 +12,1 @@\n-public class EmptyVersionTest { \/** . *\/ EmptyVersionTest() { }\n+public class EmptyVersionTest {\n","filename":"test\/langtools\/tools\/doclint\/EmptyVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:all,-missing,-html EndTagsTest.java\n- * @run main DocLintTester -Xmsgs:all,-missing -ref EndTagsTest.out EndTagsTest.java\n+ * @run main DocLintTester -Xmsgs:-html EndTagsTest.java\n+ * @run main DocLintTester -ref EndTagsTest.out EndTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/EndTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,3 +32,0 @@\n-\n-    \/** . *\/\n-    EndWithIdentifierTest() { }\n","filename":"test\/langtools\/tools\/doclint\/EndWithIdentifierTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:all,-missing,-html HtmlAttrsTest.java\n- * @run main DocLintTester -Xmsgs:all,-missing -ref HtmlAttrsTest.out HtmlAttrsTest.java\n+ * @run main DocLintTester -Xmsgs:-html HtmlAttrsTest.java\n+ * @run main DocLintTester -ref HtmlAttrsTest.out HtmlAttrsTest.java\n","filename":"test\/langtools\/tools\/doclint\/HtmlAttrsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -7,2 +7,2 @@\n- * @run main DocLintTester -Xmsgs:all,-missing,-html HtmlTagsTest.java\n- * @run main DocLintTester -Xmsgs:all,-missing -ref HtmlTagsTest.out HtmlTagsTest.java\n+ * @run main DocLintTester -Xmsgs:-html HtmlTagsTest.java\n+ * @run main DocLintTester -ref HtmlTagsTest.out HtmlTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/HtmlTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,1 @@\n- * @run main DocLintTester -Xmsgs:all LambdaTest.java\n+ * @run main DocLintTester -Xmsgs:all SyntheticTest.java\n@@ -44,2 +44,0 @@\n-    \/** *\/ LambdaTest() { }\n-\n","filename":"test\/langtools\/tools\/doclint\/LambdaTest.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -17,3 +17,0 @@\n-\n-    \/** *\/\n-    LiteralTest() { }\n","filename":"test\/langtools\/tools\/doclint\/LiteralTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -15,3 +15,0 @@\n-\n-    \/** *\/\n-    MissingThrowsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/MissingThrowsTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -12,3 +12,0 @@\n-\n-    \/** *\/\n-    MultipleDocLintOptionsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/MultipleDocLintOptionsTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1,26 +0,0 @@\n-\/*\n- * @test \/nodynamiccopyright\/\n- * @modules jdk.javadoc\/jdk.javadoc.internal.doclint\n- * @build DocLintTester\n- * @run main DocLintTester -Xmsgs:-missing NoArgsConstructorTest.java\n- * @run main DocLintTester -Xmsgs:missing\/protected -ref NoArgsConstructorTest.out NoArgsConstructorTest.java\n- *\/\n-\n-\/** Main Comment. *\/\n-public class NoArgsConstructorTest {\n-    \/\/ default constructor\n-\n-    \/** PublicConstructor comment. *\/\n-    public static class PublicConstructor {\n-        public PublicConstructor() { }\n-    }\n-\n-    \/** PrivateConstructor comment. *\/\n-    public static class PrivateConstructor {\n-        private PrivateConstructor() { }\n-    }\n-\n-    \/** PublicInterface comment. *\/\n-    public interface PublicInterface {\n-    }\n-}\n","filename":"test\/langtools\/tools\/doclint\/NoArgsConstructorTest.java","additions":0,"deletions":26,"binary":false,"changes":26,"status":"deleted"},{"patch":"@@ -1,7 +0,0 @@\n-NoArgsConstructorTest.java:10: warning: use of default constructor, which does not provide a comment\n-public class NoArgsConstructorTest {\n-       ^\n-NoArgsConstructorTest.java:15: warning: no comment\n-        public PublicConstructor() { }\n-               ^\n-2 warnings\n","filename":"test\/langtools\/tools\/doclint\/NoArgsConstructorTest.out","additions":0,"deletions":7,"binary":false,"changes":7,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -62,1 +62,0 @@\n-    \/** . *\/ C1() { }\n@@ -68,1 +67,0 @@\n-    \/** . *\/ C2() { }\n@@ -74,1 +72,0 @@\n-    \/** . *\/ C3() { }\n@@ -80,1 +77,0 @@\n-    \/** . *\/ C4() { }\n@@ -87,1 +83,0 @@\n-    \/** . *\/ C5() { }\n@@ -94,1 +89,0 @@\n-    \/** . *\/ C6() { }\n@@ -100,1 +94,0 @@\n-    \/** . *\/ C7() { }\n","filename":"test\/langtools\/tools\/doclint\/OverridesTest.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -56,3 +56,0 @@\n-\n-    \/** . *\/\n-    ParaTagTest() { }\n","filename":"test\/langtools\/tools\/doclint\/ParaTagTest.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref ProvidesTest.out ProvidesTest.java\n+ * @run main DocLintTester -ref ProvidesTest.out ProvidesTest.java\n","filename":"test\/langtools\/tools\/doclint\/ProvidesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -21,1 +21,1 @@\n-    public class InvalidParam { \/** . *\/ private InvalidParam() { } }\n+    public class InvalidParam { }\n@@ -31,1 +31,1 @@\n-    public class typaram_name_not_found { \/** . *\/ private typaram_name_not_found() { } }\n+    public class typaram_name_not_found { }\n@@ -78,3 +78,0 @@\n-\n-    \/** . *\/\n-    private ReferenceTest() { }\n","filename":"test\/langtools\/tools\/doclint\/ReferenceTest.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -19,3 +19,0 @@\n-\n-    \/** . *\/\n-    private SummaryTest() { }\n","filename":"test\/langtools\/tools\/doclint\/SummaryTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -17,3 +17,0 @@\n-\n-    \/** *\/\n-    private SyntaxTest() { }\n","filename":"test\/langtools\/tools\/doclint\/SyntaxTest.java","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8004832 8249634\n+ * @bug 8004832\n@@ -30,1 +30,1 @@\n- * @run main DocLintTester -Xmsgs:all -ref SyntheticTest.out SyntheticTest.java\n+ * @run main DocLintTester -Xmsgs:all SyntheticTest.java\n@@ -35,1 +35,1 @@\n- * such as enum methods, and that a message *is* generated for a default constructor\n+ * such as default constructors and enum methods.\n@@ -41,1 +41,1 @@\n-    public enum E {\n+    enum E {\n","filename":"test\/langtools\/tools\/doclint\/SyntheticTest.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -1,5 +0,0 @@\n-SyntheticTest.java:37: warning: use of default constructor, which does not provide a comment\n-public class SyntheticTest {\n-       ^\n-1 warning\n-\n","filename":"test\/langtools\/tools\/doclint\/SyntheticTest.out","additions":0,"deletions":5,"binary":false,"changes":5,"status":"deleted"},{"patch":"@@ -17,1 +17,0 @@\n-    \/** . *\/ private UnfinishedInlineTagTest() { }\n","filename":"test\/langtools\/tools\/doclint\/UnfinishedInlineTagTest.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref UsesTest.out UsesTest.java\n+ * @run main DocLintTester -ref UsesTest.out UsesTest.java\n","filename":"test\/langtools\/tools\/doclint\/UsesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7,1 +7,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref ValueTest.out ValueTest.java\n+ * @run main DocLintTester -ref ValueTest.out ValueTest.java\n","filename":"test\/langtools\/tools\/doclint\/ValueTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,3 +53,0 @@\n-\n-        \/** . *\/\n-        private Nested() { }\n@@ -57,3 +54,0 @@\n-\n-    \/** . *\/\n-    private Test() { }\n","filename":"test\/langtools\/tools\/doclint\/anchorTests\/p\/Test.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -Xmaxerrs 200 -ref HtmlVersionTagsAttrsTest.out HtmlVersionTagsAttrsTest.java\n+ * @run main DocLintTester -Xmaxerrs 200 -ref HtmlVersionTagsAttrsTest.out HtmlVersionTagsAttrsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/HtmlVersionTagsAttrsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref InlineTagTest.out InlineTagsTest.java\n+ * @run main DocLintTester -Xmsgs -ref InlineTagTest.out InlineTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/InlineTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref ListTagsTest.out ListTagsTest.java\n+ * @run main DocLintTester -Xmsgs -ref ListTagsTest.out ListTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/ListTagsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref OtherTagsTest.out OtherTagsTest.java\n+ * @run main DocLintTester -Xmsgs -ref OtherTagsTest.out OtherTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/OtherTagsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2013, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2013, 2015, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref TableTagTest.out TableTagsTest.java\n+ * @run main DocLintTester -Xmsgs -ref TableTagTest.out TableTagsTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/TableTagsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref TagNotAllowed.out TagNotAllowed.java\n+ * @run main DocLintTester -ref TagNotAllowed.out TagNotAllowed.java\n","filename":"test\/langtools\/tools\/doclint\/html\/TagNotAllowed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref TextNotAllowed.out TextNotAllowed.java\n+ * @run main DocLintTester -ref TextNotAllowed.out TextNotAllowed.java\n","filename":"test\/langtools\/tools\/doclint\/html\/TextNotAllowed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref UnknownTagTest.out UnknownTagTest.java\n+ * @run main DocLintTester -Xmsgs -ref UnknownTagTest.out UnknownTagTest.java\n","filename":"test\/langtools\/tools\/doclint\/html\/UnknownTagTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -16,3 +16,1 @@\n-class Test {\n-    \/** *\/ Test() { }\n-}\n+class Test { }\n","filename":"test\/langtools\/tools\/doclint\/packageTests\/bad\/Test.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref AnchorAlreadyDefined.out AnchorAlreadyDefined.java\n+ * @run main DocLintTester -ref AnchorAlreadyDefined.out AnchorAlreadyDefined.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/AnchorAlreadyDefined.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref BadEnd.out BadEnd.java\n+ * @run main DocLintTester -ref BadEnd.out BadEnd.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/BadEnd.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref InsertImplicit.out InsertImplicit.java\n+ * @run main DocLintTester -ref InsertImplicit.out InsertImplicit.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InsertImplicit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidEntity.out InvalidEntity.java\n+ * @run main DocLintTester -ref InvalidEntity.out InvalidEntity.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidEntity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidName.out InvalidName.java\n+ * @run main DocLintTester -ref InvalidName.out InvalidName.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidName.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidTag.out InvalidTag.java\n+ * @run main DocLintTester -ref InvalidTag.out InvalidTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref InvalidURI.out InvalidURI.java\n+ * @run main DocLintTester -ref InvalidURI.out InvalidURI.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/InvalidURI.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref MissingGT.out MissingGT.java\n+ * @run main DocLintTester -ref MissingGT.out MissingGT.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/MissingGT.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref MissingTag.out MissingTag.java\n+ * @run main DocLintTester -ref MissingTag.out MissingTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/MissingTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref NestedTag.out NestedTag.java\n+ * @run main DocLintTester -ref NestedTag.out NestedTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/NestedTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref ParaInPre.out ParaInPre.java\n+ * @run main DocLintTester -ref ParaInPre.out ParaInPre.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/ParaInPre.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref RepeatedAttr.out RepeatedAttr.java\n+ * @run main DocLintTester -ref RepeatedAttr.out RepeatedAttr.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/RepeatedAttr.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref TextNotAllowed.out TextNotAllowed.java\n+ * @run main DocLintTester -ref TextNotAllowed.out TextNotAllowed.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/TextNotAllowed.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref TrimmingEmptyTag.out TrimmingEmptyTag.java\n+ * @run main DocLintTester -ref TrimmingEmptyTag.out TrimmingEmptyTag.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/TrimmingEmptyTag.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -8,1 +8,1 @@\n- * @run main DocLintTester -Xmsgs:all,-missing -ref UnescapedOrUnknownEntity.out UnescapedOrUnknownEntity.java\n+ * @run main DocLintTester -ref UnescapedOrUnknownEntity.out UnescapedOrUnknownEntity.java\n","filename":"test\/langtools\/tools\/doclint\/tidy\/UnescapedOrUnknownEntity.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -22,2 +22,0 @@\n-\n-    \/** *\/ MaxDiagsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/tool\/MaxDiagsTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -20,2 +20,0 @@\n-\n-    \/** *\/ StatsTest() { }\n","filename":"test\/langtools\/tools\/doclint\/tool\/StatsTest.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-                  .options(\"-XDrawDiagnostics\", \"-Xdoclint:all,-missing\")\n+                  .options(\"-XDrawDiagnostics\", \"-Xdoclint\")\n","filename":"test\/langtools\/tools\/javac\/doclint\/DocLintFormatTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,1 +66,1 @@\n-        \/* 02 *\/    \"public class Test { \/** *\/ Test() { }\\n\" +\n+        \/* 02 *\/    \"public class Test {\\n\" +\n","filename":"test\/langtools\/tools\/javac\/doclint\/DocLintTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,6 +66,4 @@\n-        \"\"\"\n-            package p1;\n-            \/** Syntax < error. *\/\n-            public class p1T {\n-            }\n-            \"\"\",\n+        \"package p1;\\n\" +\n+        \"\/** Syntax < error. *\/\\n\" +\n+        \"public class p1T {\\n\" +\n+        \"}\\n\",\n@@ -73,6 +71,4 @@\n-        \"\"\"\n-            package p1.sp1;\n-            \/** Syntax < error. *\/\n-            public class p1sp1T {\n-            }\n-            \"\"\",\n+        \"package p1.sp1;\\n\" +\n+        \"\/** Syntax < error. *\/\\n\" +\n+        \"public class p1sp1T {\\n\" +\n+        \"}\\n\",\n@@ -80,6 +76,4 @@\n-        \"\"\"\n-            package p1.sp1.sp2;\n-            \/** Syntax < error. *\/\n-            public class p1sp1sp2T {\n-            }\n-            \"\"\",\n+        \"package p1.sp1.sp2;\\n\" +\n+        \"\/** Syntax < error. *\/\\n\" +\n+        \"public class p1sp1sp2T {\\n\" +\n+        \"}\\n\",\n@@ -87,6 +81,4 @@\n-        \"\"\"\n-            package p2;\n-            \/** Syntax < error. *\/\n-            public class p2T {\n-            }\n-            \"\"\",\n+        \"package p2;\\n\" +\n+        \"\/** Syntax < error. *\/\\n\" +\n+        \"public class p2T {\\n\" +\n+        \"}\\n\",\n@@ -94,5 +86,3 @@\n-        \"\"\"\n-            \/** Syntax < error. *\/\n-            public class Default {\n-            }\n-            \"\"\",\n+        \"\/** Syntax < error. *\/\\n\" +\n+        \"public class Default {\\n\" +\n+        \"}\\n\",\n@@ -143,1 +133,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint\"),\n@@ -148,1 +138,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:p1\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:p1\"),\n@@ -152,1 +142,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:p1.*\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:p1.*\"),\n@@ -156,1 +146,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:p1.*,-p1.sp1\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:p1.*,-p1.sp1\"),\n@@ -160,1 +150,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:-p1.sp1\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:-p1.sp1\"),\n@@ -164,1 +154,1 @@\n-            test(Arrays.asList(rawDiags, \"-Xdoclint:all,-missing\", \"-Xdoclint\/package:wrong+package\"),\n+            test(Arrays.asList(rawDiags, \"-Xdoclint\", \"-Xdoclint\/package:wrong+package\"),\n","filename":"test\/langtools\/tools\/javac\/doclint\/IncludePackagesTest.java","additions":26,"deletions":36,"binary":false,"changes":62,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n@@ -87,1 +87,1 @@\n-                  .options(\"-XDrawDiagnostics\", \"-Xdoclint:all,-missing\", \"-XDdev\")\n+                  .options(\"-XDrawDiagnostics\", \"-Xdoclint:all\", \"-XDdev\")\n","filename":"test\/langtools\/tools\/javac\/doclint\/NPEDuplicateClassNamesTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}