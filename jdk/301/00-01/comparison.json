{"files":[{"patch":"@@ -44,1 +44,1 @@\n-     * Base class for return type from authenticate() method\n+     * Base class for return type from {@link #authenticate(HttpExchange)} method.\n@@ -73,1 +73,1 @@\n-         * returns the response code to send to the client\n+         * Returns the response code to send to the client.\n@@ -84,2 +84,2 @@\n-     * authenticated user principal can be acquired by calling\n-     * getPrincipal().\n+     * authenticated user {@linkplain HttpPrincipal principal} can be acquired by calling\n+     * {@link #getPrincipal()}.\n@@ -98,0 +98,1 @@\n+\n@@ -99,1 +100,1 @@\n-         * returns the authenticated user Principal\n+         * Returns the authenticated user {@code Principal}.\n@@ -112,3 +113,3 @@\n-     * getResponseCode(). The Authenticator must also have\n-     * set any necessary response headers in the given HttpExchange\n-     * before returning this Retry object.\n+     * {@link #getResponseCode()}. The {@code Authenticator} must also have\n+     * set any necessary response headers in the given {@link HttpExchange}\n+     * before returning this {@code Retry} object.\n@@ -131,1 +132,1 @@\n-         * returns the response code to send to the client\n+         * Returns the response code to send to the client.\n@@ -141,14 +142,13 @@\n-     * called to authenticate each incoming request. The implementation\n-     * must return a Failure, Success or Retry object as appropriate :-\n-     * <p>\n-     * Failure means the authentication has completed, but has failed\n-     * due to invalid credentials.\n-     * <p>\n-     * Sucess means that the authentication\n-     * has succeeded, and a Principal object representing the user\n-     * can be retrieved by calling Sucess.getPrincipal() .\n-     * <p>\n-     * Retry means that another HTTP exchange is required. Any response\n-     * headers needing to be sent back to the client are set in the\n-     * given HttpExchange. The response code to be returned must be provided\n-     * in the Retry object. Retry may occur multiple times.\n+     * Called to authenticate each incoming request. The implementation\n+     * must return a {@link Failure}, {@link Success} or {@link Retry} object as appropriate:\n+     * <ul>\n+     *     <li> {@code Failure} means the authentication has completed, but has\n+     *     failed due to invalid credentials.<\/li>\n+     *     <li> {@code Success} means that the authentication has succeeded,\n+     *     and a {@code Principal} object representing the user can be retrieved\n+     *     by calling {@link Success#getPrincipal()}.<\/li>\n+     *     <li> {@code Retry} means that another HTTP {@linkplain HttpExchange exchange}\n+     *     is required. Any response headers needing to be sent back to the client are set\n+     *     in the given {@code HttpExchange}. The response code to be returned must be\n+     *     provided in the {@code Retry} object. {@code Retry} may occur multiple times.<\/li>\n+     * <ul\/>\n@@ -156,2 +156,2 @@\n-     * @param exch The HttpExchange upon which authenticate is called\n-     * @return The result\n+     * @param exch the {@code HttpExchange} upon which authenticate is called\n+     * @return the result\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/Authenticator.java","additions":25,"deletions":25,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-     * @param realm The HTTP Basic authentication realm\n+     * @param realm the HTTP Basic authentication realm\n@@ -61,1 +61,1 @@\n-     * Creates a BasicAuthenticator for the given HTTP realm and using the\n+     * Creates a {@code BasicAuthenticator} for the given HTTP realm and using the\n@@ -84,2 +84,3 @@\n-     * returns the realm this BasicAuthenticator was created with\n-     * @return the authenticator's realm string.\n+     * Returns the realm this {@code BasicAuthenticator} was created with.\n+     *\n+     * @return the authenticator's realm string\n@@ -133,1 +134,1 @@\n-     * called for each incoming request to verify the\n+     * Called for each incoming request to verify the\n@@ -136,1 +137,2 @@\n-     * must be done by the implementation of this method\n+     * must be done by the implementation of this method.\n+     *\n@@ -139,2 +141,1 @@\n-     * @return <code>true<\/code> if the credentials are valid,\n-     *    <code>false<\/code> otherwise.\n+     * @return {@code true} if the credentials are valid, {@code false} otherwise\n","filename":"src\/jdk.httpserver\/share\/classes\/com\/sun\/net\/httpserver\/BasicAuthenticator.java","additions":9,"deletions":8,"binary":false,"changes":17,"status":"modified"}]}