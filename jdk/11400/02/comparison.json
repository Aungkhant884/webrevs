{"files":[{"patch":"@@ -129,5 +129,1 @@\n-  vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset001\/TestDescription.java \\\n-  vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset002\/TestDescription.java \\\n-  vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset003\/TestDescription.java \\\n-  vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset004\/TestDescription.java \\\n-  vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset005\/TestDescription.java \\\n+  vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset001.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.quick-groups","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2007, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2007, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,0 +24,61 @@\n+\/*\n+ * @test\n+ *\n+ * @summary converted from VM Testbase nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset001..reset005\n+ * VM Testbase keywords: [quick, monitoring]\n+ * VM Testbase readme:\n+ * DESCRIPTION\n+ *     The test checks that\n+ *         ThreadMXBean.resetPeakThreadCount()\n+ *     returns correct result.\n+ *     The test starts a couple of user threads and waits until they finish. After\n+ *     that, resetPeakThreadCount() is invoked to reset the peak. Then\n+ *     getPeakThreadCount() and getThreadCount() must return the same values. The\n+ *     expectation is that no threads are created, or terminated, between\n+ *     \"getPeakThreadCount()\" and getThreadCount()\" calls.\n+ *     The test implements defferent ways to access to the metrics.\n+ *\n+ * @comment Direct access to the metrics.\n+ * @library \/vmTestbase\n+ *          \/test\/lib\n+ * @run main\/othervm nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001\n+ *\/\n+\n+\/*\n+ * @test\n+ * @comment Access to the metrics via default MBean server.\n+ * @library \/vmTestbase\n+ *          \/test\/lib\n+ * @run main\/othervm nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001 -testMode=server\n+ *\/\n+\n+\/*\n+ * @test\n+ * @comment Access to the metrics via custom MBean server.\n+ * @library \/vmTestbase\n+ *          \/test\/lib\n+ * @run main\/othervm\n+ *      nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001\n+ *      -testMode=server\n+ *      -MBeanServer=custom\n+ *\/\n+\n+\/*\n+ * @test\n+ * @comment Access to the metrics via default MBean server proxy.\n+ * @library \/vmTestbase\n+ *          \/test\/lib\n+ * @run main\/othervm nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001 -testMode=proxy\n+ *\/\n+\n+\/*\n+ * @test\n+ * @comment Access to the metrics via custom MBean server proxy.\n+ * @library \/vmTestbase\n+ *          \/test\/lib\n+ * @run main\/othervm\n+ *      nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001\n+ *      -testMode=proxy\n+ *      -MBeanServer=custom\n+ *\/\n+\n@@ -57,1 +118,1 @@\n-        \/\/ The test supposes that no threads are appered\/disappeared between\n+        \/\/ The test assumes that no threads are created or terminated between\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset001.java","additions":63,"deletions":2,"binary":false,"changes":65,"status":"modified"},{"patch":"@@ -1,47 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset001.\n- * VM Testbase keywords: [quick, monitoring]\n- * VM Testbase readme:\n- * DESCRIPTION\n- *     The test checks that\n- *         ThreadMXBean.resetPeakThreadCount()\n- *     returns correct result.\n- *     The test starts a couple of user threads and waits until they finish. After\n- *     that, resetPeakThreadCount() is invoked to reset the peak. Then\n- *     getPeakThreadCount() and getThreadCount() must return the same values. The\n- *     preposition is that no threads are appered\/disappeared between\n- *     \"getPeakThreadCount()\" and getThreadCount()\" calls.\n- *     The test implements direct access to the metrics.\n- * COMMENT\n- *\n- * @library \/vmTestbase\n- *          \/test\/lib\n- * @run main\/othervm nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset001\/TestDescription.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"deleted"},{"patch":"@@ -1,47 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset002.\n- * VM Testbase keywords: [quick, monitoring]\n- * VM Testbase readme:\n- * DESCRIPTION\n- *     The test checks that\n- *         ThreadMXBean.resetPeakThreadCount()\n- *     returns correct result.\n- *     The test starts a couple of user threads and waits until they finish. After\n- *     that, resetPeakThreadCount() is invoked to reset the peak. Then\n- *     getPeakThreadCount() and getThreadCount() must return the same values. The\n- *     preposition is that no threads are appered\/disappeared between\n- *     \"getPeakThreadCount()\" and getThreadCount()\" calls.\n- *     The test implements access to the metrics via default MBean server.\n- * COMMENT\n- *\n- * @library \/vmTestbase\n- *          \/test\/lib\n- * @run main\/othervm nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001 -testMode=server\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset002\/TestDescription.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"deleted"},{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset003.\n- * VM Testbase keywords: [quick, monitoring]\n- * VM Testbase readme:\n- * DESCRIPTION\n- *     The test checks that\n- *         ThreadMXBean.resetPeakThreadCount()\n- *     returns correct result.\n- *     The test starts a couple of user threads and waits until they finish. After\n- *     that, resetPeakThreadCount() is invoked to reset the peak. Then\n- *     getPeakThreadCount() and getThreadCount() must return the same values. The\n- *     preposition is that no threads are appered\/disappeared between\n- *     \"getPeakThreadCount()\" and getThreadCount()\" calls.\n- *     The test implements access to the metrics via custom MBean server.\n- * COMMENT\n- *\n- * @library \/vmTestbase\n- *          \/test\/lib\n- * @run main\/othervm\n- *      nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001\n- *      -testMode=server\n- *      -MBeanServer=custom\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset003\/TestDescription.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"},{"patch":"@@ -1,47 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset004.\n- * VM Testbase keywords: [quick, monitoring]\n- * VM Testbase readme:\n- * DESCRIPTION\n- *     The test checks that\n- *         ThreadMXBean.resetPeakThreadCount()\n- *     returns correct result.\n- *     The test starts a couple of user threads and waits until they finish. After\n- *     that, resetPeakThreadCount() is invoked to reset the peak. Then\n- *     getPeakThreadCount() and getThreadCount() must return the same values. The\n- *     preposition is that no threads are appered\/disappeared between\n- *     \"getPeakThreadCount()\" and getThreadCount()\" calls.\n- *     The test implements access to the metrics via default MBean server proxy.\n- * COMMENT\n- *\n- * @library \/vmTestbase\n- *          \/test\/lib\n- * @run main\/othervm nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001 -testMode=proxy\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset004\/TestDescription.java","additions":0,"deletions":47,"binary":false,"changes":47,"status":"deleted"},{"patch":"@@ -1,50 +0,0 @@\n-\/*\n- * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\n-\/*\n- * @test\n- *\n- * @summary converted from VM Testbase nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset005.\n- * VM Testbase keywords: [quick, monitoring]\n- * VM Testbase readme:\n- * DESCRIPTION\n- *     The test checks that\n- *         ThreadMXBean.resetPeakThreadCount()\n- *     returns correct result.\n- *     The test starts a couple of user threads and waits until they finish. After\n- *     that, resetPeakThreadCount() is invoked to reset the peak. Then\n- *     getPeakThreadCount() and getThreadCount() must return the same values. The\n- *     preposition is that no threads are appered\/disappeared between\n- *     \"getPeakThreadCount()\" and getThreadCount()\" calls.\n- *     The test implements access to the metrics via custom MBean server proxy.\n- * COMMENT\n- *\n- * @library \/vmTestbase\n- *          \/test\/lib\n- * @run main\/othervm\n- *      nsk.monitoring.ThreadMXBean.resetPeakThreadCount.reset001\n- *      -testMode=proxy\n- *      -MBeanServer=custom\n- *\/\n-\n","filename":"test\/hotspot\/jtreg\/vmTestbase\/nsk\/monitoring\/ThreadMXBean\/resetPeakThreadCount\/reset005\/TestDescription.java","additions":0,"deletions":50,"binary":false,"changes":50,"status":"deleted"}]}