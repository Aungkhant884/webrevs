{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import static sun.nio.fs.UnixNativeDispatcher.lutimes;\n@@ -35,1 +36,1 @@\n-    \/\/ Use fsetattrlist(2) system call which can set creation, modification,\n+    \/\/ Use setattrlist(2) system call which can set creation, modification,\n@@ -52,1 +53,1 @@\n-        int fd = -1;\n+        boolean useLutimes = false;\n@@ -54,1 +55,2 @@\n-            fd = path.openForAttributeAccess(followLinks);\n+            useLutimes = !followLinks &&\n+                UnixFileAttributes.get(path, false).isSymbolicLink();\n@@ -59,0 +61,9 @@\n+        int fd = -1;\n+        if (!useLutimes) {\n+            try {\n+                fd = path.openForAttributeAccess(followLinks);\n+            } catch (UnixException x) {\n+                x.rethrowAsIOException(path);\n+            }\n+        }\n+\n@@ -60,1 +71,1 @@\n-            \/\/ not all volumes support fsetattrlist(2), so set the last\n+            \/\/ not all volumes support setattrlist(2), so set the last\n@@ -77,2 +88,4 @@\n-                long modValue = lastModifiedTime.to(TimeUnit.NANOSECONDS);\n-                long accessValue= lastAccessTime.to(TimeUnit.NANOSECONDS);\n+                TimeUnit timeUnit = useLutimes ?\n+                    TimeUnit.MICROSECONDS : TimeUnit.NANOSECONDS;\n+                long modValue = lastModifiedTime.to(timeUnit);\n+                long accessValue= lastAccessTime.to(timeUnit);\n@@ -82,1 +95,4 @@\n-                    futimens(fd, accessValue, modValue);\n+                    if (useLutimes)\n+                        lutimes(path, accessValue, modValue);\n+                    else\n+                        futimens(fd, accessValue, modValue);\n@@ -97,1 +113,4 @@\n-                        futimens(fd, accessValue, modValue);\n+                        if (useLutimes)\n+                            lutimes(path, accessValue, modValue);\n+                        else\n+                            futimens(fd, accessValue, modValue);\n@@ -104,1 +123,1 @@\n-            \/\/ set the creation time using fsetattrlist\n+            \/\/ set the creation time using setattrlist\n@@ -109,2 +128,6 @@\n-                    fsetattrlist(fd, commonattr, 0L, 0L, createValue,\n-                                 followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n+                    if (useLutimes)\n+                        setattrlist(path, commonattr, 0L, 0L, createValue,\n+                            followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n+                    else\n+                        fsetattrlist(fd, commonattr, 0L, 0L, createValue,\n+                            followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n@@ -116,1 +139,2 @@\n-            close(fd, e -> null);\n+            if (!useLutimes)\n+                close(fd, e -> null);\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdFileAttributeViews.java","additions":36,"deletions":12,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -84,0 +84,23 @@\n+    \/**\n+     * setattrlist(const char* path, struct attrlist* attrList, void* attrBuf,\n+     *             size_t attrBufSize, unsigned long options)\n+     *\/\n+    static void setattrlist(UnixPath path, int commonattr, long modTime,\n+                            long accTime, long createTime, long options)\n+        throws UnixException\n+    {\n+        try (NativeBuffer buffer = copyToNativeBuffer(path)) {\n+            long comp = Blocker.begin();\n+            try {\n+                setattrlist0(buffer.address(), commonattr, modTime, accTime,\n+                             createTime, options);\n+            } finally {\n+                Blocker.end(comp);\n+            }\n+        }\n+    }\n+    private static native void setattrlist0(long pathAddress, int commonattr,\n+                                            long modTime, long accTime,\n+                                            long createTime, long options)\n+        throws UnixException;\n+\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdNativeDispatcher.java","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -42,0 +42,1 @@\n+#include <unistd.h>\n@@ -246,4 +247,2 @@\n-JNIEXPORT void JNICALL\n-Java_sun_nio_fs_BsdNativeDispatcher_fsetattrlist0(JNIEnv* env, jclass this,\n-    jint fd, int commonattr, jlong modTime, jlong accTime,\n-    jlong createTime, jlong options)\n+size_t initattrlist(jint commonattr, jlong modTime, jlong accTime,\n+    jlong createTime, const int attrsize, char* buf, struct attrlist *attrList)\n@@ -251,4 +250,0 @@\n-    \/\/ attributes must align on 4-byte boundaries per the getattrlist(2) spec\n-    const int attrsize = ((sizeof(struct timespec) + 3)\/4)*4;\n-    char buf[3*attrsize];\n-\n@@ -256,0 +251,1 @@\n+\n@@ -276,0 +272,35 @@\n+    memset(attrList, 0, sizeof(struct attrlist));\n+    attrList->bitmapcount = ATTR_BIT_MAP_COUNT;\n+    attrList->commonattr = commonattr;\n+\n+    return count*attrsize;\n+}\n+\n+JNIEXPORT void JNICALL\n+Java_sun_nio_fs_BsdNativeDispatcher_setattrlist0(JNIEnv* env, jclass this,\n+    jlong pathAddress, int commonattr, jlong modTime, jlong accTime,\n+    jlong createTime, jlong options)\n+{\n+    const char* path = (const char*)jlong_to_ptr(pathAddress);\n+    \/\/ attributes must align on 4-byte boundaries per the getattrlist(2) spec\n+    const int attrsize = ((sizeof(struct timespec) + 3)\/4)*4;\n+    char buf[3*attrsize];\n+\n+    struct attrlist attrList;\n+    size_t attrBufSize = initattrlist(commonattr, modTime, accTime, createTime,\n+                                      attrsize, buf, &attrList);\n+\n+    if (setattrlist(path, &attrList, (void*)buf, attrBufSize, options) != 0) {\n+        throwUnixException(env, errno);\n+    }\n+}\n+\n+JNIEXPORT void JNICALL\n+Java_sun_nio_fs_BsdNativeDispatcher_fsetattrlist0(JNIEnv* env, jclass this,\n+    jint fd, int commonattr, jlong modTime, jlong accTime,\n+    jlong createTime, jlong options)\n+{\n+    \/\/ attributes must align on 4-byte boundaries per the getattrlist(2) spec\n+    const int attrsize = ((sizeof(struct timespec) + 3)\/4)*4;\n+    char buf[3*attrsize];\n+\n@@ -277,3 +308,2 @@\n-    memset(&attrList, 0, sizeof(struct attrlist));\n-    attrList.bitmapcount = ATTR_BIT_MAP_COUNT;\n-    attrList.commonattr = commonattr;\n+    size_t attrBufSize = initattrlist(commonattr, modTime, accTime, createTime,\n+                                      attrsize, buf, &attrList);\n@@ -281,1 +311,1 @@\n-    if (fsetattrlist(fd, &attrList, (void*)buf, count*attrsize, options) != 0) {\n+    if (fsetattrlist(fd, &attrList, (void*)buf, attrBufSize, options) != 0) {\n","filename":"src\/java.base\/macosx\/native\/libnio\/fs\/BsdNativeDispatcher.c","additions":42,"deletions":12,"binary":false,"changes":54,"status":"modified"}]}