{"files":[{"patch":"@@ -42,14 +42,5 @@\n-        if (createTime == null) {\n-            \/\/ all times null => don't change\n-            if (lastModifiedTime == null && lastAccessTime == null)\n-                return; \/\/ no effect\n-\n-            if (lastAccessTime != null) {\n-                \/\/ if the last access time is being set, defer to Unix\n-                \/\/ implementation in case the file is on an HFS store on\n-                \/\/ which setattrlist(2) does not work for this purpose\n-                UnixFileAttributeViews.Basic basic =\n-                    new UnixFileAttributeViews.Basic(path, followLinks);\n-                basic.setTimes(lastModifiedTime, lastAccessTime, null);\n-                return;\n-            }\n+        \/\/ null => don't change\n+        if (lastModifiedTime == null && lastAccessTime == null &&\n+            createTime == null) {\n+            \/\/ no effect\n+            return;\n@@ -61,5 +52,6 @@\n-        int commonattr = 0;\n-        long modValue = 0L;\n-        if (lastModifiedTime != null) {\n-            modValue = lastModifiedTime.to(TimeUnit.NANOSECONDS);\n-            commonattr |= UnixConstants.ATTR_CMN_MODTIME;\n+        \/\/ not all volumes support setattrlist(2), so set the last\n+        \/\/ modified and last access times using the Unix implementation\n+        if (lastModifiedTime != null || lastAccessTime != null) {\n+            UnixFileAttributeViews.Basic basic =\n+                new UnixFileAttributeViews.Basic(path, followLinks);\n+            basic.setTimes(lastModifiedTime, lastAccessTime, null);\n@@ -67,4 +59,0 @@\n-        long accValue = 0L;\n-        if (lastAccessTime != null) {\n-            String fstype =\n-                path.getFileSystem().provider().getFileStore(path).type();\n@@ -72,7 +60,1 @@\n-            \/\/ setattrlist(2) fails to set last access time on HFS\n-            if (!\"hfs\".equals(fstype)) {\n-                accValue = lastAccessTime.to(TimeUnit.NANOSECONDS);\n-                commonattr |= UnixConstants.ATTR_CMN_ACCTIME;\n-            }\n-        }\n-        long createValue = 0L;\n+        \/\/ set the creation time using setattrlist\n@@ -80,16 +62,7 @@\n-            createValue = createTime.to(TimeUnit.NANOSECONDS);\n-            commonattr |= UnixConstants.ATTR_CMN_CRTIME;\n-        }\n-\n-        try {\n-            setattrlist(path, commonattr, modValue, accValue, createValue,\n-                        followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n-\n-            \/\/ if the last access time is given but its commonattr bit is not\n-            \/\/ set, then the path must be on an HFS store, so use the Unix\n-            \/\/ implementation to set the last access time\n-            if (lastAccessTime != null &&\n-                (commonattr & UnixConstants.ATTR_CMN_ACCTIME) == 0) {\n-                UnixFileAttributeViews.Basic basic =\n-                    new UnixFileAttributeViews.Basic(path, followLinks);\n-                basic.setTimes(null, lastAccessTime, null);\n+            long createValue = createTime.to(TimeUnit.NANOSECONDS);\n+            int commonattr = UnixConstants.ATTR_CMN_CRTIME;\n+            try {\n+                setattrlist(path, commonattr, 0L, 0L, createValue,\n+                            followLinks ?  0 : UnixConstants.FSOPT_NOFOLLOW);\n+            } catch (UnixException x) {\n+                x.rethrowAsIOException(path);\n@@ -97,2 +70,0 @@\n-        } catch (UnixException x) {\n-            x.rethrowAsIOException(path);\n","filename":"src\/java.base\/macosx\/classes\/sun\/nio\/fs\/BsdFileAttributeViews.java","additions":19,"deletions":48,"binary":false,"changes":67,"status":"modified"}]}