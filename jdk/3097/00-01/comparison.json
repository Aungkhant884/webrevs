{"files":[{"patch":"@@ -240,1 +240,1 @@\n-ClassFileStream* ClassPathDirEntry::open_stream(const char* name) {\n+ClassFileStream* ClassPathDirEntry::open_stream(Thread* current, const char* name) {\n@@ -244,2 +244,1 @@\n-  Thread* thread = Thread::current();\n-  char* path = NEW_RESOURCE_ARRAY_IN_THREAD(thread, char, path_len);\n+  char* path = NEW_RESOURCE_ARRAY_IN_THREAD(current, char, path_len);\n@@ -289,1 +288,1 @@\n-u1* ClassPathZipEntry::open_entry(const char* name, jint* filesize, bool nul_terminate) {\n+u1* ClassPathZipEntry::open_entry(Thread* current, const char* name, jint* filesize, bool nul_terminate) {\n@@ -291,1 +290,1 @@\n-  JavaThread* thread = JavaThread::current();\n+  JavaThread* thread = current->as_Java_thread();\n@@ -318,1 +317,1 @@\n-ClassFileStream* ClassPathZipEntry::open_stream(const char* name) {\n+ClassFileStream* ClassPathZipEntry::open_stream(Thread* current, const char* name) {\n@@ -320,1 +319,1 @@\n-  u1* buffer = open_entry(name, &filesize, false);\n+  u1* buffer = open_entry(current, name, &filesize, false);\n@@ -378,2 +377,2 @@\n-ClassFileStream* ClassPathImageEntry::open_stream(const char* name) {\n-  return open_stream_for_loader(name, ClassLoaderData::the_null_class_loader_data());\n+ClassFileStream* ClassPathImageEntry::open_stream(Thread* current, const char* name) {\n+  return open_stream_for_loader(current, name, ClassLoaderData::the_null_class_loader_data());\n@@ -389,1 +388,1 @@\n-ClassFileStream* ClassPathImageEntry::open_stream_for_loader(const char* name, ClassLoaderData* loader_data) {\n+ClassFileStream* ClassPathImageEntry::open_stream_for_loader(Thread* current, const char* name, ClassLoaderData* loader_data) {\n@@ -403,1 +402,1 @@\n-          ResourceMark rm;\n+          ResourceMark rm(current);\n@@ -1160,1 +1159,1 @@\n-    stream = e->open_stream(file_name);\n+    stream = e->open_stream(THREAD, file_name);\n@@ -1231,1 +1230,1 @@\n-      stream = _jrt_entry->open_stream(file_name);\n+      stream = _jrt_entry->open_stream(THREAD, file_name);\n@@ -1249,1 +1248,1 @@\n-      stream = e->open_stream(file_name);\n+      stream = e->open_stream(THREAD, file_name);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":13,"deletions":14,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-  virtual ClassFileStream* open_stream(const char* name) = 0;\n+  virtual ClassFileStream* open_stream(Thread* current, const char* name) = 0;\n@@ -70,2 +70,2 @@\n-  virtual ClassFileStream* open_stream_for_loader(const char* name, ClassLoaderData* loader_data) {\n-    return open_stream(name);\n+  virtual ClassFileStream* open_stream_for_loader(Thread* current, const char* name, ClassLoaderData* loader_data) {\n+    return open_stream(current, name);\n@@ -84,1 +84,1 @@\n-  ClassFileStream* open_stream(const char* name);\n+  ClassFileStream* open_stream(Thread* current, const char* name);\n@@ -111,2 +111,2 @@\n-  u1* open_entry(const char* name, jint* filesize, bool nul_terminate);\n-  ClassFileStream* open_stream(const char* name);\n+  u1* open_entry(Thread* current, const char* name, jint* filesize, bool nul_terminate);\n+  ClassFileStream* open_stream(Thread* current, const char* name);\n@@ -131,2 +131,2 @@\n-  ClassFileStream* open_stream(const char* name);\n-  ClassFileStream* open_stream_for_loader(const char* name, ClassLoaderData* loader_data);\n+  ClassFileStream* open_stream(Thread* current, const char* name);\n+  ClassFileStream* open_stream_for_loader(Thread* current, const char* name, ClassLoaderData* loader_data);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-char* ClassLoaderExt::read_manifest(ClassPathEntry* entry, jint *manifest_size, bool clean_text) {\n+char* ClassLoaderExt::read_manifest(Thread* current, ClassPathEntry* entry, jint *manifest_size, bool clean_text) {\n@@ -112,1 +112,1 @@\n-  manifest = (char*) ((ClassPathZipEntry*)entry )->open_entry(name, &size, true);\n+  manifest = (char*) ((ClassPathZipEntry*)entry )->open_entry(current, name, &size, true);\n@@ -170,1 +170,1 @@\n-  char* manifest = read_manifest(entry, &manifest_size);\n+  char* manifest = read_manifest(THREAD, entry, &manifest_size);\n@@ -233,2 +233,1 @@\n-void ClassLoaderExt::record_result(const s2 classpath_index,\n-                                   InstanceKlass* result) {\n+void ClassLoaderExt::record_result(const s2 classpath_index, InstanceKlass* result) {\n@@ -277,1 +276,1 @@\n-    stream = e->open_stream(file_name);\n+    stream = e->open_stream(THREAD, file_name);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.cpp","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-  static char* read_manifest(ClassPathEntry* entry, jint *manifest_size, bool clean_text);\n+  static char* read_manifest(Thread* current, ClassPathEntry* entry, jint *manifest_size, bool clean_text);\n@@ -72,1 +72,1 @@\n-  static char* read_manifest(ClassPathEntry* entry, jint *manifest_size) {\n+  static char* read_manifest(Thread* current, ClassPathEntry* entry, jint *manifest_size) {\n@@ -76,1 +76,1 @@\n-    return read_manifest(entry, manifest_size, true);\n+    return read_manifest(current, entry, manifest_size, true);\n@@ -78,1 +78,1 @@\n-  static char* read_raw_manifest(ClassPathEntry* entry, jint *manifest_size) {\n+  static char* read_raw_manifest(Thread* current, ClassPathEntry* entry, jint *manifest_size) {\n@@ -81,1 +81,1 @@\n-    return read_manifest(entry, manifest_size, false);\n+    return read_manifest(current, entry, manifest_size, false);\n@@ -110,2 +110,1 @@\n-  static void record_result(const s2 classpath_index,\n-                            InstanceKlass* result);\n+  static void record_result(const s2 classpath_index, InstanceKlass* result);\n","filename":"src\/hotspot\/share\/classfile\/classLoaderExt.hpp","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -176,2 +176,3 @@\n-  ResourceMark rm(THREAD);\n-  HandleMark hm(THREAD);\n+  JavaThread* current = THREAD->as_Java_thread();\n+  ResourceMark rm(current);\n+  HandleMark hm(current);\n@@ -184,1 +185,1 @@\n-  THREAD->statistical_info().incr_define_class_count();\n+  current->statistical_info().incr_define_class_count();\n@@ -219,1 +220,1 @@\n-    ClassLoader::record_result(THREAD, result, stream);\n+    ClassLoader::record_result(current, result, stream);\n","filename":"src\/hotspot\/share\/classfile\/klassFactory.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -660,1 +660,1 @@\n-  char* manifest = ClassLoaderExt::read_manifest(cpe, &manifest_size);\n+  char* manifest = ClassLoaderExt::read_manifest(THREAD, cpe, &manifest_size);\n@@ -668,1 +668,1 @@\n-      manifest = ClassLoaderExt::read_raw_manifest(cpe, &manifest_size);\n+      manifest = ClassLoaderExt::read_raw_manifest(THREAD, cpe, &manifest_size);\n@@ -2373,1 +2373,1 @@\n-  ClassFileStream* cfs = cpe->open_stream_for_loader(file_name, loader_data);\n+  ClassFileStream* cfs = cpe->open_stream_for_loader(THREAD, file_name, loader_data);\n","filename":"src\/hotspot\/share\/memory\/filemap.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -703,1 +703,2 @@\n- const ArchivedKlassSubGraphInfoRecord* record =\n+  ExceptionMark em(THREAD);\n+  const ArchivedKlassSubGraphInfoRecord* record =\n@@ -705,1 +706,1 @@\n- if (HAS_PENDING_EXCEPTION) {\n+  if (HAS_PENDING_EXCEPTION) {\n@@ -707,2 +708,2 @@\n- }\n- if (record == NULL) {\n+  }\n+  if (record == NULL) {\n@@ -710,1 +711,1 @@\n- }\n+  }\n@@ -718,0 +719,1 @@\n+  ExceptionMark em(THREAD);\n","filename":"src\/hotspot\/share\/memory\/heapShared.cpp","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"}]}