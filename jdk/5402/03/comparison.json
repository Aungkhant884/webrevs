{"files":[{"patch":"@@ -949,1 +949,1 @@\n-  void generateHtbl_48_block_zmm(Register htbl);\n+  void generateHtbl_48_block_zmm(Register htbl, Register avx512_subkeyHtbl);\n@@ -960,1 +960,1 @@\n-                      Register state, Register subkeyHtbl, Register counter);\n+                      Register state, Register subkeyHtbl, Register avx512_subkeyHtbl, Register counter);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1296,1 +1296,1 @@\n-void MacroAssembler::generateHtbl_48_block_zmm(Register htbl) {\n+void MacroAssembler::generateHtbl_48_block_zmm(Register htbl, Register avx512_htbl) {\n@@ -1323,1 +1323,1 @@\n-    movdqu(Address(htbl, 16 * 56), xmm6); \/\/ H ^ 2\n+    movdqu(Address(avx512_htbl, 16 * 47), xmm6); \/\/ H ^ 2\n@@ -1329,1 +1329,1 @@\n-    movdqu(Address(htbl, 16 * 55), ZT5); \/\/ H ^ 2 * 2\n+    movdqu(Address(avx512_htbl, 16 * 46), ZT5); \/\/ H ^ 2 * 2\n@@ -1333,1 +1333,1 @@\n-    movdqu(Address(htbl, 16 * 54), ZT5); \/\/ H ^ 2 * 3\n+    movdqu(Address(avx512_htbl, 16 * 45), ZT5); \/\/ H ^ 2 * 3\n@@ -1337,1 +1337,1 @@\n-    movdqu(Address(htbl, 16 * 53), ZT5); \/\/ H ^ 2 * 4\n+    movdqu(Address(avx512_htbl, 16 * 44), ZT5); \/\/ H ^ 2 * 4\n@@ -1343,1 +1343,1 @@\n-    evmovdquq(Address(htbl, 16 * 49), ZT7, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 40), ZT7, Assembler::AVX_512bit);\n@@ -1346,1 +1346,1 @@\n-    evmovdquq(Address(htbl, 16 * 45), ZT8, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 36), ZT8, Assembler::AVX_512bit);\n@@ -1348,1 +1348,1 @@\n-    evmovdquq(Address(htbl, 16 * 41), ZT7, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 32), ZT7, Assembler::AVX_512bit);\n@@ -1350,1 +1350,1 @@\n-    evmovdquq(Address(htbl, 16 * 37), ZT8, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 28), ZT8, Assembler::AVX_512bit);\n@@ -1352,1 +1352,1 @@\n-    evmovdquq(Address(htbl, 16 * 33), ZT7, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 24), ZT7, Assembler::AVX_512bit);\n@@ -1354,1 +1354,1 @@\n-    evmovdquq(Address(htbl, 16 * 29), ZT8, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 20), ZT8, Assembler::AVX_512bit);\n@@ -1356,1 +1356,1 @@\n-    evmovdquq(Address(htbl, 16 * 25), ZT7, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 16), ZT7, Assembler::AVX_512bit);\n@@ -1358,1 +1358,1 @@\n-    evmovdquq(Address(htbl, 16 * 21), ZT8, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 12), ZT8, Assembler::AVX_512bit);\n@@ -1360,1 +1360,1 @@\n-    evmovdquq(Address(htbl, 16 * 17), ZT7, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 8), ZT7, Assembler::AVX_512bit);\n@@ -1362,1 +1362,1 @@\n-    evmovdquq(Address(htbl, 16 * 13), ZT8, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 4), ZT8, Assembler::AVX_512bit);\n@@ -1364,1 +1364,1 @@\n-    evmovdquq(Address(htbl, 16 * 9), ZT7, Assembler::AVX_512bit);\n+    evmovdquq(Address(avx512_htbl, 16 * 0), ZT7, Assembler::AVX_512bit);\n@@ -1480,2 +1480,2 @@\n-    evmovdquq(ZTMP19, Address(subkeyHtbl, i * 64 + 144), Assembler::AVX_512bit);\n-    evmovdquq(ZTMP20, Address(subkeyHtbl, ++i * 64 + 144), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP19, Address(subkeyHtbl, i * 64), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP20, Address(subkeyHtbl, ++i * 64), Assembler::AVX_512bit);\n@@ -1502,1 +1502,1 @@\n-    evmovdquq(ZTMP19, Address(subkeyHtbl, ++i * 64 + 144), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP19, Address(subkeyHtbl, ++i * 64), Assembler::AVX_512bit);\n@@ -1513,1 +1513,1 @@\n-    evmovdquq(ZTMP20, Address(subkeyHtbl, ++i * 64 + 144), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP20, Address(subkeyHtbl, ++i * 64), Assembler::AVX_512bit);\n@@ -1631,2 +1631,1 @@\n-                                    Register state, Register subkeyHtbl, Register counter) {\n-\n+                                    Register state, Register subkeyHtbl, Register avx512_subkeyHtbl, Register counter) {\n@@ -1764,1 +1763,1 @@\n-    ghash16_encrypt16_parallel(key, subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, true, xmm24, true, rounds, ghash_pos, false, index, COUNTER_INC_MASK);\n+    ghash16_encrypt16_parallel(key, avx512_subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, true, xmm24, true, rounds, ghash_pos, false, index, COUNTER_INC_MASK);\n@@ -1781,1 +1780,1 @@\n-    ghash16_encrypt16_parallel(key, subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, false, xmm24, false, rounds, ghash_pos, false, index, COUNTER_INC_MASK);\n+    ghash16_encrypt16_parallel(key, avx512_subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, false, xmm24, false, rounds, ghash_pos, false, index, COUNTER_INC_MASK);\n@@ -1786,1 +1785,1 @@\n-    ghash16_encrypt16_parallel(key, subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, false, xmm24, false, rounds, ghash_pos, true, index, COUNTER_INC_MASK);\n+    ghash16_encrypt16_parallel(key, avx512_subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, false, xmm24, false, rounds, ghash_pos, true, index, COUNTER_INC_MASK);\n@@ -1795,1 +1794,1 @@\n-    ghash16_encrypt16_parallel(key, subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, true, xmm24, true, rounds, ghash_pos, false, index, COUNTER_INC_MASK);\n+    ghash16_encrypt16_parallel(key, avx512_subkeyHtbl, CTR_BLOCKx, AAD_HASHx, in, out, ct, pos, true, xmm24, true, rounds, ghash_pos, false, index, COUNTER_INC_MASK);\n@@ -1815,2 +1814,2 @@\n-    evmovdquq(ZTMP15, Address(subkeyHtbl, rbx, Address::times_1, 0 * 64 + 144), Assembler::AVX_512bit);\n-    evmovdquq(ZTMP16, Address(subkeyHtbl, rbx, Address::times_1, 1 * 64 + 144), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP15, Address(avx512_subkeyHtbl, rbx, Address::times_1, 0 * 64), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP16, Address(avx512_subkeyHtbl, rbx, Address::times_1, 1 * 64), Assembler::AVX_512bit);\n@@ -1840,2 +1839,2 @@\n-    evmovdquq(ZTMP15, Address(subkeyHtbl, rbx, Address::times_1, 0 * 64 + 144), Assembler::AVX_512bit);\n-    evmovdquq(ZTMP16, Address(subkeyHtbl, rbx, Address::times_1, 1 * 64 + 144), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP15, Address(avx512_subkeyHtbl, rbx, Address::times_1, 0 * 64), Assembler::AVX_512bit);\n+    evmovdquq(ZTMP16, Address(avx512_subkeyHtbl, rbx, Address::times_1, 1 * 64), Assembler::AVX_512bit);\n@@ -1887,1 +1886,1 @@\n-    generateHtbl_48_block_zmm(subkeyHtbl);\n+    generateHtbl_48_block_zmm(subkeyHtbl, avx512_subkeyHtbl);\n@@ -1893,1 +1892,1 @@\n-#endif \/\/ _LP64\n\\ No newline at end of file\n+#endif \/\/ _LP64\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_aes.cpp","additions":31,"deletions":32,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -151,0 +151,3 @@\n+  \/\/ number of htbl entries for aes-gcm intrinsic\n+  static const int htbl_entries = 96;\n+\n","filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -4415,1 +4415,3 @@\n-    const Address counter_mem(rbp, 3 * wordSize);\n+    const Address avx512_subkeyH_mem(rbp, 3 * wordSize);\n+    const Register avx512_subkeyHtbl = r13;\n+    const Address counter_mem(rbp, 4 * wordSize);\n@@ -4424,1 +4426,3 @@\n-    const Address counter_mem(rbp, 9 * wordSize);\n+    const Address avx512_subkeyH_mem(rbp, 9 * wordSize);\n+    const Register avx512_subkeyHtbl = r12;\n+    const Address counter_mem(rbp, 10 * wordSize);\n@@ -4441,0 +4445,1 @@\n+    __ movptr(avx512_subkeyHtbl, avx512_subkeyH_mem);\n@@ -4443,1 +4448,1 @@\n-    __ aesgcm_encrypt(in, len, ct, out, key, state, subkeyHtbl, counter);\n+    __ aesgcm_encrypt(in, len, ct, out, key, state, subkeyHtbl, avx512_subkeyHtbl, counter);\n","filename":"src\/hotspot\/cpu\/x86\/stubGenerator_x86_64.cpp","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -420,1 +420,1 @@\n-   do_name(gcm_crypt_name, \"implGCMCrypt\")                                                                                 \\\n+   do_name(gcm_crypt_name, \"implGCMCrypt0\")                                                                                 \\\n","filename":"src\/hotspot\/share\/classfile\/vmIntrinsics.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2491,1 +2491,2 @@\n-                                  Node* parm6, Node* parm7) {\n+                                  Node* parm6, Node* parm7,\n+                                  Node* parm8) {\n@@ -2538,1 +2539,2 @@\n-  \/* close each nested if ===> *\/  } } } } } } } }\n+  if (parm8 != NULL) { call->init_req(TypeFunc::Parms+8, parm8);\n+  \/* close each nested if ===> *\/  } } } } } } } } }\n","filename":"src\/hotspot\/share\/opto\/graphKit.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -805,1 +805,2 @@\n-                          Node* parm6 = NULL, Node* parm7 = NULL);\n+                          Node* parm6 = NULL, Node* parm7 = NULL,\n+                          Node* parm8 = NULL);\n","filename":"src\/hotspot\/share\/opto\/graphKit.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -6792,0 +6792,9 @@\n+  ciKlass* klass = ciTypeArrayKlass::make(T_LONG);\n+  Node* klass_node = makecon(TypeKlassPtr::make(klass));\n+\n+  \/\/ new array to hold 48 computed htbl entries\n+  Node* subkeyHtbl_48_entries = new_array(klass_node, intcon(Matcher::htbl_entries), 0);\n+  if (subkeyHtbl_48_entries == NULL) return false;\n+\n+  Node* subkeyHtbl_48_entries_start = array_element_address(subkeyHtbl_48_entries, intcon(0), T_LONG);\n+\n@@ -6796,1 +6805,1 @@\n-                               in_start, len, ct_start, out_start, k_start, state_start, subkeyHtbl_start, cnt_start);\n+                               in_start, len, ct_start, out_start, k_start, state_start, subkeyHtbl_start, subkeyHtbl_48_entries_start, cnt_start);\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":10,"deletions":1,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -961,1 +961,1 @@\n-  int num_args = 8;\n+  int num_args = 9;\n@@ -972,0 +972,1 @@\n+  fields[argp++] = TypePtr::NOTNULL; \/\/ long[] avx512_subkeyHtbl newly created\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -125,1 +125,1 @@\n-    \/\/ hashtable subkeyHtbl holds 2*57 powers of subkeyH computed using\n+    \/\/ hashtable subkeyHtbl holds 2*9 powers of subkeyH computed using\n@@ -146,3 +146,2 @@\n-         \/\/ 48 keys for the interleaved implementation,\n-         \/\/ 8 for avx-ghash implementation and 1 for the original key\n-        subkeyHtbl = new long[2*57];\n+        \/\/ 8 for avx-ghash implementation and 1 for the original key\n+        subkeyHtbl = new long[2*9];\n@@ -269,1 +268,1 @@\n-        if (subH.length != 114) {\n+        if (subH.length != 18) {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GHASH.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -89,1 +89,3 @@\n-    private static final int PARALLEL_LEN = 768;\n+    private static final int PARALLEL_LEN = 8192;\n+    \/\/ max data size for x86-64 intrinsic\n+    private static final int SPLIT_LEN = 1048576;  \/\/ 1MB\n@@ -573,0 +575,22 @@\n+    \/\/ Wrapper function around AES-GCM interleaved intrinsic that splits\n+    \/\/ large chunks of data into 1MB sized chunks. This is to place\n+    \/\/ an upper limit on the number of blocks encrypted in the intrinsic.\n+    private static int implGCMCrypt(byte[] in, int inOfs, int inLen, byte[] ct,\n+                                    int ctOfs, byte[] out, int outOfs,\n+                                    GCTR gctr, GHASH ghash) {\n+\n+        int len = 0;\n+        if (inLen > SPLIT_LEN) {\n+            while (inLen >= SPLIT_LEN) {\n+                int partlen = implGCMCrypt0(in, inOfs + len, SPLIT_LEN, ct,\n+                    ctOfs + len, out, outOfs + len, gctr, ghash);\n+                len += partlen;\n+                inLen -= partlen;\n+            }\n+        }\n+        if (inLen > 0) {\n+            len += implGCMCrypt0(in, inOfs + len, inLen, ct,\n+                   ctOfs + len, out, outOfs + len, gctr, ghash);\n+        }\n+        return len;\n+    }\n@@ -593,1 +617,1 @@\n-    private static int implGCMCrypt(byte[] in, int inOfs, int inLen,\n+    private static int implGCMCrypt0(byte[] in, int inOfs, int inLen,\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/GaloisCounterMode.java","additions":26,"deletions":2,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -101,1 +101,1 @@\n- * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DmsgSize=2054\n+ * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DmsgSize=8320\n@@ -104,1 +104,1 @@\n- * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DmsgSize=2054\n+ * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DmsgSize=8326\n@@ -107,1 +107,1 @@\n- * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencOutputOffset=1 -DmsgSize=2054\n+ * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencOutputOffset=1 -DmsgSize=8326\n@@ -110,1 +110,1 @@\n- * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DdecOutputOffset=1 -DmsgSize=2054\n+ * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DdecOutputOffset=1 -DmsgSize=8326\n@@ -113,1 +113,1 @@\n- * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DencOutputOffset=1 -DmsgSize=2054\n+ * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DencOutputOffset=1 -DmsgSize=8326\n@@ -116,1 +116,1 @@\n- * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DencOutputOffset=1 -DdecOutputOffset=1 -DmsgSize=2054\n+ * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DencOutputOffset=1 -DdecOutputOffset=1 -DmsgSize=8326\n@@ -119,1 +119,1 @@\n- * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DencOutputOffset=1 -DdecOutputOffset=1 -DpaddingStr=NoPadding -DmsgSize=2048\n+ * @run main\/othervm\/timeout=600 -Xbatch -DcheckOutput=true -Dmode=GCM -DencInputOffset=1 -DencOutputOffset=1 -DdecOutputOffset=1 -DpaddingStr=NoPadding -DmsgSize=8320\n","filename":"test\/hotspot\/jtreg\/compiler\/codegen\/aes\/TestAESMain.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}