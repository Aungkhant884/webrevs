{"files":[{"patch":"@@ -1242,1 +1242,1 @@\n-                    addr = map0(prot, mapPosition, mapSize, isSync);\n+                    addr = map0(fd, prot, mapPosition, mapSize, isSync);\n@@ -1253,1 +1253,1 @@\n-                        addr = map0(prot, mapPosition, mapSize, isSync);\n+                        addr = map0(fd, prot, mapPosition, mapSize, isSync);\n@@ -1503,1 +1503,2 @@\n-    private native long map0(int prot, long position, long length, boolean isSync)\n+    private native long map0(FileDescriptor fd, int prot, long position,\n+                             long length, boolean isSync)\n@@ -1517,2 +1518,2 @@\n-    \/\/ Caches fieldIDs\n-    private static native long initIDs();\n+    \/\/ Retrieves allocation granularity\n+    private static native long allocationGranularity0();\n@@ -1522,1 +1523,1 @@\n-        allocationGranularity = initIDs();\n+        allocationGranularity = allocationGranularity0();\n","filename":"src\/java.base\/share\/classes\/sun\/nio\/ch\/FileChannelImpl.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -53,2 +53,0 @@\n-static jfieldID chan_fd;        \/* jobject 'fd' in sun.nio.ch.FileChannelImpl *\/\n-\n@@ -56,1 +54,1 @@\n-Java_sun_nio_ch_FileChannelImpl_initIDs(JNIEnv *env, jclass clazz)\n+Java_sun_nio_ch_FileChannelImpl_allocationGranularity0(JNIEnv *env, jclass clazz)\n@@ -59,1 +57,0 @@\n-    chan_fd = (*env)->GetFieldID(env, clazz, \"fd\", \"Ljava\/io\/FileDescriptor;\");\n@@ -76,1 +73,1 @@\n-Java_sun_nio_ch_FileChannelImpl_map0(JNIEnv *env, jobject this,\n+Java_sun_nio_ch_FileChannelImpl_map0(JNIEnv *env, jobject this, jobject fdo,\n@@ -80,1 +77,0 @@\n-    jobject fdo = (*env)->GetObjectField(env, this, chan_fd);\n","filename":"src\/java.base\/unix\/native\/libnio\/ch\/FileChannelImpl.c","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,0 @@\n-static jfieldID chan_fd; \/* id for jobject 'fd' in java.io.FileChannel *\/\n-\n@@ -42,2 +40,1 @@\n- * static method to store field ID's in initializers\n- * and retrieve the allocation granularity\n+ * static method to retrieve the allocation granularity\n@@ -46,1 +43,1 @@\n-Java_sun_nio_ch_FileChannelImpl_initIDs(JNIEnv *env, jclass clazz)\n+Java_sun_nio_ch_FileChannelImpl_allocationGranularity0(JNIEnv *env, jclass clazz)\n@@ -52,1 +49,0 @@\n-    chan_fd = (*env)->GetFieldID(env, clazz, \"fd\", \"Ljava\/io\/FileDescriptor;\");\n@@ -62,1 +58,1 @@\n-Java_sun_nio_ch_FileChannelImpl_map0(JNIEnv *env, jobject this,\n+Java_sun_nio_ch_FileChannelImpl_map0(JNIEnv *env, jobject this, jobject fdo,\n@@ -71,1 +67,0 @@\n-    jobject fdo = (*env)->GetObjectField(env, this, chan_fd);\n","filename":"src\/java.base\/windows\/native\/libnio\/ch\/FileChannelImpl.c","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"}]}