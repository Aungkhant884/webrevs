{"files":[{"patch":"@@ -36,0 +36,1 @@\n+@State(Scope.Benchmark)\n@@ -38,1 +39,2 @@\n-    enum BasicType { CHAR, SHORT, INT, STRING }\n+    public enum BasicType {CHAR, SHORT, INT, STRING}\n+    @Param({\"CHAR\", \"SHORT\", \"INT\", \/* \"STRING\"*\/}) BasicType basicType;\n@@ -40,10 +42,6 @@\n-    @State(Scope.Benchmark)\n-    public static class BenchmarkState {\n-        @Param({\"4096\"}) int SIZE;\n-        @Param({\"char\", \"short\", \"int\", \/*\"string\"*\/}) String BASIC_TYPE;\n-        final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(SIZE);\n-        final File f = new File(\"DataOutputStreamTest.tmp\");\n-        String outputString;\n-        FileOutputStream fileOutputStream;\n-        DataOutput bufferedFileStream, rawFileStream, byteArrayStream;\n-        BasicType basicType;\n+    @Param({\"4096\"}) int size;\n+    final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(size);\n+    final File f = new File(\"DataOutputStreamTest.tmp\");\n+    String outputString;\n+    FileOutputStream fileOutputStream;\n+    DataOutput bufferedFileStream, rawFileStream, byteArrayStream;\n@@ -51,22 +49,2 @@\n-        @Setup(Level.Trial)\n-        public void setup() {\n-            try {\n-                fileOutputStream = new FileOutputStream(f);\n-                byteArrayStream = new DataOutputStream(byteArrayOutputStream);\n-                rawFileStream = new DataOutputStream(fileOutputStream);\n-                bufferedFileStream = new DataOutputStream(new BufferedOutputStream(fileOutputStream));\n-                switch (BASIC_TYPE.toLowerCase()) {\n-                    case \"char\": basicType = BasicType.CHAR; break;\n-                    case \"short\": basicType =  BasicType.SHORT; break;\n-                    case \"int\": basicType = BasicType.INT; break;\n-                    case \"string\": basicType = BasicType.STRING; break;\n-                    default: throw new RuntimeException(\"Unhandled basic type:\" + BASIC_TYPE);\n-                };\n-                outputString = new String(new byte[SIZE]);\n-            } catch (Exception e) {\n-                throw new RuntimeException(e);\n-            }\n-        }\n-    }\n-\n-    public void writeChars(BenchmarkState state, DataOutput dataOutput) {\n+    @Setup(Level.Trial)\n+    public void setup() {\n@@ -74,3 +52,5 @@\n-            for (int i = 0; i < state.SIZE; i += 2) {\n-                dataOutput.writeChar(i);\n-            }\n+            fileOutputStream = new FileOutputStream(f);\n+            byteArrayStream = new DataOutputStream(byteArrayOutputStream);\n+            rawFileStream = new DataOutputStream(fileOutputStream);\n+            bufferedFileStream = new DataOutputStream(new BufferedOutputStream(fileOutputStream));\n+            outputString = new String(new byte[size]);\n@@ -82,7 +62,4 @@\n-    public void writeShorts(BenchmarkState state, DataOutput dataOutput) {\n-        try {\n-            for (int i = 0; i < state.SIZE; i += 2) {\n-                dataOutput.writeShort(i);\n-            }\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n+    public void writeChars(DataOutput dataOutput)\n+            throws Exception {\n+        for (int i = 0; i < size; i += 2) {\n+            dataOutput.writeChar(i);\n@@ -92,7 +69,4 @@\n-    public void writeInts(BenchmarkState state, DataOutput dataOutput) {\n-        try {\n-            for (int i = 0; i < state.SIZE; i += 4) {\n-                dataOutput.writeInt(i);\n-            }\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n+    public void writeShorts(DataOutput dataOutput)\n+            throws Exception {\n+        for (int i = 0; i < size; i += 2) {\n+            dataOutput.writeShort(i);\n@@ -102,5 +76,4 @@\n-    public void writeString(BenchmarkState state, DataOutput dataOutput) {\n-        try {\n-            dataOutput.writeChars(state.outputString);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n+    public void writeInts(DataOutput dataOutput)\n+            throws Exception {\n+        for (int i = 0; i < size; i += 4) {\n+            dataOutput.writeInt(i);\n@@ -110,6 +83,20 @@\n-    public void write(BenchmarkState state, DataOutput dataOutput) {\n-        switch (state.basicType) {\n-            case CHAR: writeChars(state, dataOutput); break;\n-            case SHORT: writeShorts(state, dataOutput); break;\n-            case INT: writeInts(state, dataOutput); break;\n-            case STRING: writeString(state, dataOutput); break;\n+    public void writeString(DataOutput dataOutput)\n+            throws Exception {\n+        dataOutput.writeChars(outputString);\n+    }\n+\n+    public void write(DataOutput dataOutput)\n+            throws Exception {\n+        switch (basicType) {\n+            case CHAR:\n+                writeChars(dataOutput);\n+                break;\n+            case SHORT:\n+                writeShorts(dataOutput);\n+                break;\n+            case INT:\n+                writeInts(dataOutput);\n+                break;\n+            case STRING:\n+                writeString(dataOutput);\n+                break;\n@@ -118,0 +105,1 @@\n+\n@@ -119,5 +107,5 @@\n-    public void dataOutputStreamOverByteArray(BenchmarkState state)\n-            throws IOException {\n-        state.byteArrayOutputStream.reset();\n-        write(state, state.byteArrayStream);\n-        state.byteArrayOutputStream.flush();\n+    public void dataOutputStreamOverByteArray()\n+            throws Exception {\n+        byteArrayOutputStream.reset();\n+        write(byteArrayStream);\n+        byteArrayOutputStream.flush();\n@@ -127,5 +115,5 @@\n-    public void dataOutputStreamOverRawFileStream(BenchmarkState state)\n-            throws IOException {\n-        state.fileOutputStream.getChannel().position(0);\n-        write(state, state.rawFileStream);\n-        state.fileOutputStream.flush();\n+    public void dataOutputStreamOverRawFileStream()\n+            throws Exception {\n+        fileOutputStream.getChannel().position(0);\n+        write(rawFileStream);\n+        fileOutputStream.flush();\n@@ -135,5 +123,5 @@\n-    public void dataOutputStreamOverBufferedFileStream(BenchmarkState state)\n-            throws IOException{\n-        state.fileOutputStream.getChannel().position(0);\n-        write(state, state.bufferedFileStream);\n-        state.fileOutputStream.flush();\n+    public void dataOutputStreamOverBufferedFileStream()\n+            throws Exception{\n+        fileOutputStream.getChannel().position(0);\n+        write(bufferedFileStream);\n+        fileOutputStream.flush();\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/io\/DataOutputStreamTest.java","additions":64,"deletions":76,"binary":false,"changes":140,"status":"modified"}]}