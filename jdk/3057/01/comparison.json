{"files":[{"patch":"@@ -104,0 +104,19 @@\n+\/\/ A filter for quick lookup if an option is set\n+static bool option_filter[static_cast<int>(CompileCommand::Unknown) + 1] = { 0 };\n+\n+void command_set_in_filter(enum CompileCommand option) {\n+  assert(option != CompileCommand::Unknown, \"sanity\");\n+  assert(option2type(option) != OptionType::Unknown, \"sanity\");\n+\n+  if ((option != CompileCommand::DontInline) &&\n+      (option != CompileCommand::Inline) &&\n+      (option != CompileCommand::Log)) {\n+    any_set = true;\n+  }\n+  option_filter[static_cast<int>(option)] = true;\n+}\n+\n+bool has_command(enum CompileCommand option) {\n+  return option_filter[static_cast<int>(option)];\n+}\n+\n@@ -293,5 +312,2 @@\n-  if ((option != CompileCommand::DontInline) &&\n-      (option != CompileCommand::Inline) &&\n-      (option != CompileCommand::Log)) {\n-    any_set = true;\n-  }\n+  command_set_in_filter(option);\n+\n@@ -310,0 +326,3 @@\n+  if (!has_command(option)) {\n+    return false;\n+  }\n@@ -328,12 +347,0 @@\n-static bool has_command(enum CompileCommand option) {\n-  TypedMethodOptionMatcher* m = option_list;\n-  while (m != NULL) {\n-    if (m->option() == option) {\n-      return true;\n-    } else {\n-      m = m->next();\n-    }\n-  }\n-  return false;\n-}\n-\n","filename":"src\/hotspot\/share\/compiler\/compilerOracle.cpp","additions":24,"deletions":17,"binary":false,"changes":41,"status":"modified"}]}