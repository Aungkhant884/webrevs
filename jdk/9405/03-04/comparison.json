{"files":[{"patch":"@@ -31,1 +31,3 @@\n-    _shared_trampoline_requests = new SharedTrampolineRequests(4, 1024);\n+    constexpr unsigned init_size = 8;\n+    constexpr unsigned max_size  = 256;\n+    _shared_trampoline_requests = new SharedTrampolineRequests(init_size, max_size);\n@@ -36,1 +38,1 @@\n-  LinkedListImpl<int>* offsets = _shared_trampoline_requests->put_if_absent(dest, &p_created);\n+  Offsets* offsets = _shared_trampoline_requests->put_if_absent(dest, &p_created);\n@@ -49,1 +51,1 @@\n-  auto emit = [&](address dest, LinkedListImpl<int> &offsets) {\n+  auto emit = [&](address dest, const CodeBuffer::Offsets &offsets) {\n","filename":"src\/hotspot\/cpu\/aarch64\/codeBuffer_aarch64.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -403,1 +403,2 @@\n-  typedef ResizeableResourceHashtable<address, LinkedListImpl<int>> SharedTrampolineRequests;\n+  typedef LinkedListImpl<int> Offsets;\n+  typedef ResizeableResourceHashtable<address, Offsets> SharedTrampolineRequests;\n","filename":"src\/hotspot\/share\/asm\/codeBuffer.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n- * @summary Checks that stubs to the interpreter can be shared for static or final method.\n+ * @summary Checks that trampolines can be shared for static method.\n@@ -74,2 +74,2 @@\n-        List<String> compilers = java.util.Arrays.asList(\"-XX:-TieredCompilation\" \/* C2 *\/);\n-        List<String> tests = java.util.Arrays.asList(\"StaticMethodTest\");\n+        List<String> compilers = List.of(\"-XX:-TieredCompilation\" \/* C2 *\/);\n+        List<String> tests = List.of(\"StaticMethodTest\");\n@@ -106,3 +106,0 @@\n-            if (i > ITERATIONS_TO_HEAT_LOOP) {\n-                throw new RuntimeException(msg);\n-            }\n","filename":"test\/hotspot\/jtreg\/compiler\/sharedstubs\/SharedTrampolineTest.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"}]}