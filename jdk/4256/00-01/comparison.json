{"files":[{"patch":"@@ -726,2 +726,2 @@\n-static size_t alignUp(size_t stack_size) {\n-    long page_size = sysconf(_SC_PAGESIZE);\n+static size_t adjustStackSize(size_t stack_size) {\n+    long page_size = getpagesize();\n@@ -732,1 +732,5 @@\n-        return page_size * (pages + 1);\n+        \/\/ Ensure we don't go over limit\n+        if (stack_size <= SIZE_MAX - page_size) {\n+            pages++;\n+        }\n+        return page_size * pages;\n@@ -748,1 +752,1 @@\n-        pthread_attr_setstacksize(&attr, alignUp(stack_size));\n+        pthread_attr_setstacksize(&attr, adjustStackSize(stack_size));\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":8,"deletions":4,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -654,1 +654,1 @@\n-static size_t alignUp(size_t stack_size) {\n+static size_t adjustStackSize(size_t stack_size) {\n@@ -660,1 +660,5 @@\n-        return page_size * (pages + 1);\n+        \/\/ Ensure we don't go over limit\n+        if (stack_size <= SIZE_MAX - page_size) {\n+            pages++;\n+        }\n+        return page_size * pages;\n@@ -676,1 +680,1 @@\n-        pthread_attr_setstacksize(&attr, alignUp(stack_size));\n+        pthread_attr_setstacksize(&attr, adjustStackSize(stack_size));\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md.c","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}