{"files":[{"patch":"@@ -49,0 +49,1 @@\n+#include <unistd.h>\n@@ -725,0 +726,10 @@\n+static size_t alignUp(size_t stack_size) {\n+    long page_size = sysconf(_SC_PAGESIZE);\n+    if (stack_size % page_size == 0) {\n+        return stack_size;\n+    } else {\n+        long pages = stack_size \/ page_size;\n+        return page_size * (pages + 1);\n+    }\n+}\n+\n@@ -737,1 +748,1 @@\n-        pthread_attr_setstacksize(&attr, stack_size);\n+        pthread_attr_setstacksize(&attr, alignUp(stack_size));\n","filename":"src\/java.base\/macosx\/native\/libjli\/java_md_macosx.m","additions":12,"deletions":1,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -654,0 +654,10 @@\n+static size_t alignUp(size_t stack_size) {\n+    long page_size = sysconf(_SC_PAGESIZE);\n+    if (stack_size % page_size == 0) {\n+        return stack_size;\n+    } else {\n+        long pages = stack_size \/ page_size;\n+        return page_size * (pages + 1);\n+    }\n+}\n+\n@@ -666,1 +676,1 @@\n-        pthread_attr_setstacksize(&attr, stack_size);\n+        pthread_attr_setstacksize(&attr, alignUp(stack_size));\n","filename":"src\/java.base\/unix\/native\/libjli\/java_md.c","additions":11,"deletions":1,"binary":false,"changes":12,"status":"modified"}]}