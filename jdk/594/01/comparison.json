{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,0 @@\n-volatile BOOL AwtClipboard::skipInitialWmDrawClipboardMsg = TRUE;\n@@ -47,1 +46,0 @@\n-volatile HWND AwtClipboard::hwndNextViewer = NULL;\n@@ -62,16 +60,1 @@\n-void AwtClipboard::WmChangeCbChain(WPARAM wParam, LPARAM lParam) {\n-    if ((HWND)wParam == hwndNextViewer) {\n-        hwndNextViewer = (HWND)lParam;\n-    } else if (hwndNextViewer != NULL) {\n-        ::SendMessage(hwndNextViewer, WM_CHANGECBCHAIN, wParam, lParam);\n-    }\n-}\n-\n-void AwtClipboard::WmDrawClipboard(JNIEnv *env, WPARAM wParam, LPARAM lParam) {\n-    if (skipInitialWmDrawClipboardMsg) {\n-        \/\/ skipping the first contents change notification as it comes\n-        \/\/ immediately after registering the clipboard viewer window\n-        \/\/ and it is not caused by an actual contents change.\n-        skipInitialWmDrawClipboardMsg = FALSE;\n-        return;\n-    }\n+void AwtClipboard::WmClipboardUpdate(JNIEnv *env) {\n@@ -82,1 +65,0 @@\n-    ::SendMessage(hwndNextViewer, WM_DRAWCLIPBOARD, wParam, lParam);\n@@ -99,1 +81,1 @@\n-    hwndNextViewer = ::SetClipboardViewer(AwtToolkit::GetInstance().GetHWnd());\n+    ::AddClipboardFormatListener(AwtToolkit::GetInstance().GetHWnd());\n@@ -107,2 +89,1 @@\n-        ::ChangeClipboardChain(AwtToolkit::GetInstance().GetHWnd(), AwtClipboard::hwndNextViewer);\n-        AwtClipboard::hwndNextViewer = NULL;\n+        ::RemoveClipboardFormatListener(AwtToolkit::GetInstance().GetHWnd());\n@@ -110,1 +91,0 @@\n-        skipInitialWmDrawClipboardMsg = TRUE;\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Clipboard.cpp","additions":4,"deletions":24,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2003, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -39,2 +39,0 @@\n-    \/\/ handle to the next window in the clipboard viewer chain\n-    static volatile HWND hwndNextViewer;\n@@ -42,1 +40,0 @@\n-    static volatile BOOL skipInitialWmDrawClipboardMsg;\n@@ -60,2 +57,1 @@\n-    static void WmChangeCbChain(WPARAM wparam, LPARAM lparam);\n-    static void WmDrawClipboard(JNIEnv *env, WPARAM wparam, LPARAM lparam);\n+    static void WmClipboardUpdate(JNIEnv *env);\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Clipboard.h","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1070,6 +1070,2 @@\n-      case WM_CHANGECBCHAIN: {\n-          AwtClipboard::WmChangeCbChain(wParam, lParam);\n-          return 0;\n-      }\n-      case WM_DRAWCLIPBOARD: {\n-          AwtClipboard::WmDrawClipboard((JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2), wParam, lParam);\n+      case WM_CLIPBOARDUPDATE: {\n+          AwtClipboard::WmClipboardUpdate((JNIEnv *)JNU_GetEnv(jvm, JNI_VERSION_1_2));\n","filename":"src\/java.desktop\/windows\/native\/libawt\/windows\/awt_Toolkit.cpp","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -86,1 +86,1 @@\n-        System.out.println(\"Starting external clipborad modifier...\");\n+        System.out.println(\"Starting external clipboard modifier...\");\n@@ -109,1 +109,1 @@\n-            throw new RuntimeException(\"No LostOwnership event received.\");\n+            throw new RuntimeException(\"No FlavorsChanged event received.\");\n","filename":"test\/jdk\/java\/awt\/datatransfer\/ClipboardInterVMTest\/ClipboardInterVMTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"}]}