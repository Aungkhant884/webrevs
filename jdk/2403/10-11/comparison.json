{"files":[{"patch":"@@ -197,0 +197,3 @@\n+            if (threadGroupSize == 0) {\n+               threadGroupSize = 1;\n+            }\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLBlitLoops.m","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -95,0 +95,2 @@\n+    _pooledTextures = nil;\n+\n@@ -96,0 +98,2 @@\n+    _commandBuffer = nil;\n+\n@@ -97,0 +101,1 @@\n+    _lock = nil;\n@@ -167,1 +172,3 @@\n-    self.texturePool = nil;\n+    \/\/ TODO : Check that texturePool is completely released.\n+    \/\/ texturePool content is released in MTLCommandBufferWrapper.onComplete()\n+    \/\/self.texturePool = nil;\n@@ -172,8 +179,41 @@\n-    [_encoderManager release];\n-    [_samplerManager release];\n-    [_stencilManager release];\n-    [_composite release];\n-    [_paint release];\n-    [_transform release];\n-    [_tempTransform release];\n-    [_clip release];\n+\n+    if (_encoderManager != nil) {\n+        [_encoderManager release];\n+        _encoderManager = nil;\n+    }\n+\n+    if (_samplerManager != nil) {\n+        [_samplerManager release];\n+        _samplerManager = nil;\n+    }\n+\n+    if (_stencilManager != nil) {\n+        [_stencilManager release];\n+        _stencilManager = nil;\n+    }\n+\n+    if (_composite != nil) {\n+        [_composite release];\n+        _composite = nil;\n+    }\n+\n+    if (_paint != nil) {\n+        [_paint release];\n+        _paint = nil;\n+    }\n+\n+    if (_transform != nil) {\n+        [_transform release];\n+        _transform = nil;\n+    }\n+\n+    if (_tempTransform != nil) {\n+        [_tempTransform release];\n+        _tempTransform = nil;\n+    }\n+\n+    if (_clip != nil) {\n+        [_clip release];\n+        _clip = nil;\n+    }\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLContext.m","additions":49,"deletions":9,"binary":false,"changes":58,"status":"modified"},{"patch":"@@ -32,6 +32,0 @@\n-#import \"MTLUtils.h\"\n-\n-\n-#import <stdlib.h>\n-#import <string.h>\n-#import <ApplicationServices\/ApplicationServices.h>\n@@ -42,3 +36,0 @@\n-\/\/ Uncomment this line to see Metal specific fprintfs\n-\/\/#define METAL_DEBUG\n-\n@@ -74,3 +65,0 @@\n-\/**\n- * Probe Metal framework availability using system profiler\n- *\/\n@@ -81,1 +69,0 @@\n-    FILE *f = popen(\"\/usr\/sbin\/system_profiler SPDisplaysDataType\", \"r\");\n@@ -83,15 +70,0 @@\n-    while (getc(f) != EOF)\n-    {\n-        char str[60];\n-\n-        if (fgets(str, 60, f) != NULL) {\n-            \/\/ Check for string\n-            \/\/ \"Metal:  Supported, feature set macOS GPUFamily1 v4\"\n-            if (strstr(str, \"Metal\") != NULL) {\n-                \/\/puts(str);\n-                metalSupported = JNI_TRUE;\n-                break;\n-            }\n-        }\n-    }\n-    pclose(f);\n@@ -99,5 +71,3 @@\n-#ifdef METAL_DEBUG\n-    if (!metalSupported) {\n-        fprintf(stderr, \"Metal support not present\\n\");\n-    } else {\n-        fprintf(stderr, \"Metal support is present\\n\");\n+    \/\/ It is guranteed that metal supported GPU is available macOS 10.14 onwards\n+    if (@available(macOS 10.14, *)) {\n+        metalSupported = JNI_TRUE;\n@@ -105,1 +75,0 @@\n-#endif\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLGraphicsConfig.m","additions":3,"deletions":34,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -659,1 +659,0 @@\n-                    MTLGC_DestroyMTLGraphicsConfig(pConfigInfo);\n@@ -661,3 +660,0 @@\n-                    \/\/ the previous method will call glX\/wglMakeCurrent(None),\n-                    \/\/ so we should nullify the current mtlc and dstOps to avoid\n-                    \/\/ calling glFlush() (or similar) while no context is current\n@@ -667,0 +663,3 @@\n+\n+                    MTLGC_DestroyMTLGraphicsConfig(pConfigInfo);\n+\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLRenderQueue.m","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    <!-- Put everything in ${build} into the J2DBench.jar file -->\n+    <!-- Put everything in ${build} into the RenderPerfTest.jar file -->\n","filename":"test\/jdk\/performance\/client\/RenderPerfTest\/build.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}