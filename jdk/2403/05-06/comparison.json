{"files":[{"patch":"@@ -96,15 +96,0 @@\n-\/\/ TODO: Provide native implementation\n-\/\/ It may not be effective\/possible. For example, there is no direct\n-\/\/ support in Metal for SurfaceType.ThreeByteBgr\n-\/\/                new MTLSwToSurfaceBlit(SurfaceType.ThreeByteBgr,\n-\/\/                        MTLSurfaceData.PF_3BYTE_BGR),\n-\/\/                new MTLSwToSurfaceBlit(SurfaceType.Ushort565Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_565_RGB),\n-\/\/                new MTLSwToSurfaceBlit(SurfaceType.Ushort555Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGB),\n-\/\/                new MTLSwToSurfaceBlit(SurfaceType.Ushort555Rgbx,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGBX),\n-\/\/                 new MTLSwToSurfaceBlit(SurfaceType.ByteGray,\n-\/\/                         MTLSurfaceData.PF_BYTE_GRAY),\n-\/\/                 new MTLSwToSurfaceBlit(SurfaceType.UshortGray,\n-\/\/                         MTLSurfaceData.PF_USHORT_GRAY),\n@@ -132,13 +117,0 @@\n-\/\/ TODO: Provide native implementation\n-\/\/                new MTLSwToSurfaceScale(SurfaceType.ThreeByteBgr,\n-\/\/                        MTLSurfaceData.PF_3BYTE_BGR),\n-\/\/                new MTLSwToSurfaceScale(SurfaceType.Ushort565Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_565_RGB),\n-\/\/                new MTLSwToSurfaceScale(SurfaceType.Ushort555Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGB),\n-\/\/                new MTLSwToSurfaceScale(SurfaceType.Ushort555Rgbx,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGBX),\n-\/\/                 new MTLSwToSurfaceScale(SurfaceType.ByteGray,\n-\/\/                         MTLSurfaceData.PF_BYTE_GRAY),\n-\/\/                 new MTLSwToSurfaceScale(SurfaceType.UshortGray,\n-\/\/                         MTLSurfaceData.PF_USHORT_GRAY),\n@@ -156,13 +128,0 @@\n-\/\/ TODO: Provide native implementation\n-\/\/                new MTLSwToSurfaceTransform(SurfaceType.ThreeByteBgr,\n-\/\/                        MTLSurfaceData.PF_3BYTE_BGR),\n-\/\/                new MTLSwToSurfaceTransform(SurfaceType.Ushort565Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_565_RGB),\n-\/\/                new MTLSwToSurfaceTransform(SurfaceType.Ushort555Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGB),\n-\/\/                new MTLSwToSurfaceTransform(SurfaceType.Ushort555Rgbx,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGBX),\n-\/\/                 new MTLSwToSurfaceTransform(SurfaceType.ByteGray,\n-\/\/                         MTLSurfaceData.PF_BYTE_GRAY),\n-\/\/                 new MTLSwToSurfaceTransform(SurfaceType.UshortGray,\n-\/\/                         MTLSurfaceData.PF_USHORT_GRAY),\n@@ -188,13 +147,0 @@\n-\/\/ TODO: Provide native implementation\n-\/\/                new MTLSwToTextureBlit(SurfaceType.ThreeByteBgr,\n-\/\/                        MTLSurfaceData.PF_3BYTE_BGR),\n-\/\/                new MTLSwToTextureBlit(SurfaceType.Ushort565Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_565_RGB),\n-\/\/                new MTLSwToTextureBlit(SurfaceType.Ushort555Rgb,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGB),\n-\/\/                new MTLSwToTextureBlit(SurfaceType.Ushort555Rgbx,\n-\/\/                        MTLSurfaceData.PF_USHORT_555_RGBX),\n-\/\/                 new MTLSwToTextureBlit(SurfaceType.ByteGray,\n-\/\/                         MTLSurfaceData.PF_BYTE_GRAY),\n-\/\/                 new MTLSwToTextureBlit(SurfaceType.UshortGray,\n-\/\/                         MTLSurfaceData.PF_USHORT_GRAY),\n","filename":"src\/java.desktop\/macosx\/classes\/sun\/java2d\/metal\/MTLBlitLoops.java","additions":0,"deletions":54,"binary":false,"changes":54,"status":"modified"},{"patch":"@@ -116,14 +116,14 @@\n-  jboolean ret = JNI_FALSE;\n-  JNI_COCOA_ENTER(env);\n-  NSMutableArray * retArray = [NSMutableArray arrayWithCapacity:3];\n-  [retArray addObject: [NSNumber numberWithInt: (int)displayID]];\n-  [retArray addObject: [NSString stringWithUTF8String: JNU_GetStringPlatformChars(env, shadersLibName, 0)]];\n-  if ([NSThread isMainThread]) {\n-      [MTLGraphicsConfigUtil _tryLoadMetalLibrary: retArray];\n-  } else {\n-      [MTLGraphicsConfigUtil performSelectorOnMainThread: @selector(_tryLoadMetalLibrary:) withObject: retArray waitUntilDone: YES];\n-  }\n-  NSNumber * num = (NSNumber *)[retArray objectAtIndex: 0];\n-  ret = (jboolean)[num boolValue];\n-  JNI_COCOA_EXIT(env);\n-  return ret;\n+    jboolean ret = JNI_FALSE;\n+    JNI_COCOA_ENTER(env);\n+    NSMutableArray * retArray = [NSMutableArray arrayWithCapacity:3];\n+    [retArray addObject: [NSNumber numberWithInt: (int)displayID]];\n+    [retArray addObject: [NSString stringWithUTF8String: JNU_GetStringPlatformChars(env, shadersLibName, 0)]];\n+\n+    [ThreadUtilities performOnMainThreadWaiting:YES block:^() {\n+        [MTLGraphicsConfigUtil _tryLoadMetalLibrary: retArray];\n+    }];\n+\n+    NSNumber * num = (NSNumber *)[retArray objectAtIndex: 0];\n+    ret = (jboolean)[num boolValue];\n+    JNI_COCOA_EXIT(env);\n+    return ret;\n@@ -147,14 +147,14 @@\n-  jlong ret = 0L;\n-  JNI_COCOA_ENTER(env);\n-  NSMutableArray * retArray = [NSMutableArray arrayWithCapacity:3];\n-  [retArray addObject: [NSNumber numberWithInt: (int)displayID]];\n-  [retArray addObject: [NSString stringWithUTF8String: JNU_GetStringPlatformChars(env, mtlShadersLib, 0)]];\n-  if ([NSThread isMainThread]) {\n-      [MTLGraphicsConfigUtil _getMTLConfigInfo: retArray];\n-  } else {\n-      [MTLGraphicsConfigUtil performSelectorOnMainThread: @selector(_getMTLConfigInfo:) withObject: retArray waitUntilDone: YES];\n-  }\n-  NSNumber * num = (NSNumber *)[retArray objectAtIndex: 0];\n-  ret = (jlong)[num longValue];\n-  JNI_COCOA_EXIT(env);\n-  return ret;\n+    jlong ret = 0L;\n+    JNI_COCOA_ENTER(env);\n+    NSMutableArray * retArray = [NSMutableArray arrayWithCapacity:3];\n+    [retArray addObject: [NSNumber numberWithInt: (int)displayID]];\n+    [retArray addObject: [NSString stringWithUTF8String: JNU_GetStringPlatformChars(env, mtlShadersLib, 0)]];\n+\n+    [ThreadUtilities performOnMainThreadWaiting:YES block:^() {\n+        [MTLGraphicsConfigUtil _getMTLConfigInfo: retArray];\n+    }];\n+\n+    NSNumber * num = (NSNumber *)[retArray objectAtIndex: 0];\n+    ret = (jlong)[num longValue];\n+    JNI_COCOA_EXIT(env);\n+    return ret;\n","filename":"src\/java.desktop\/macosx\/native\/libawt_lwawt\/java2d\/metal\/MTLGraphicsConfig.m","additions":28,"deletions":28,"binary":false,"changes":56,"status":"modified"}]}