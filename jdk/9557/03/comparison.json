{"files":[{"patch":"@@ -31,0 +31,1 @@\n+import java.util.stream.Stream;\n@@ -82,2 +83,3 @@\n-        try (ModuleReader reader = mref.open()) {\n-            reader.list().forEach(name -> {\n+        try (ModuleReader reader = mref.open();\n+             Stream<String> stream = reader.list()) {\n+            stream.forEach(name -> {\n","filename":"test\/jdk\/java\/lang\/ClassLoader\/getResource\/automaticmodules\/Main.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -65,3 +65,4 @@\n-        return callerSensitiveMethods(Object.class.getModule())\n-                .map(m -> new Object[] { m, shortDescription(m) })\n-                .toArray(Object[][]::new);\n+        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule())) {\n+            return stream.map(m -> new Object[]{m, shortDescription(m)})\n+                    .toArray(Object[][]::new);\n+        }\n@@ -103,1 +104,2 @@\n-        return callerSensitiveMethods(Object.class.getModule())\n+        try (Stream<Method> stream = callerSensitiveMethods(Object.class.getModule())) {\n+            return stream\n@@ -108,0 +110,1 @@\n+        }\n","filename":"test\/jdk\/java\/lang\/invoke\/callerSensitive\/CallerSensitiveAccess.java","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -57,0 +57,1 @@\n+import java.util.stream.Stream;\n@@ -416,1 +417,4 @@\n-        List<String> list = reader.list().collect(Collectors.toList());\n+        final List<String> list;\n+        try (Stream<String> stream = reader.list()) {\n+            list = stream.toList();\n+        }\n","filename":"test\/jdk\/java\/lang\/module\/ModuleReader\/ModuleReaderTest.java","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -47,0 +47,1 @@\n+import java.util.stream.Stream;\n@@ -111,2 +112,3 @@\n-            try (ModuleReader reader = mref.open()) {\n-                reader.list().forEach(name -> System.out.format(\"  %s%n\", name));\n+            try (ModuleReader reader = mref.open();\n+                 Stream<String> stream = reader.list()) {\n+                stream.forEach(name -> System.out.format(\"  %s%n\", name));\n","filename":"test\/jdk\/java\/lang\/module\/customfs\/ModulesInCustomFileSystem.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"}]}