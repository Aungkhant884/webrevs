{"files":[{"patch":"@@ -363,0 +363,5 @@\n+        if (length < 0) {\n+            throw new SerialException(\"Invalid arguments: length cannot be \"\n+                    + \"negative\");\n+        }\n+\n","filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SerialBlob.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -412,0 +412,5 @@\n+        if (length < 0) {\n+            throw new SerialException(\"Invalid arguments: length cannot be \"\n+                    + \"negative\");\n+        }\n+\n","filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SerialClob.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -451,0 +451,10 @@\n+\n+    \/*\n+     * Validate a SerialException is thrown if length < 0 for setBytes\n+     *\/\n+    @Test(expectedExceptions = SerialException.class)\n+    public void test34() throws Exception {\n+        int length = -1;\n+        SerialBlob sb = new SerialBlob(bytes);\n+        int written = sb.setBytes(1, new byte[]{1}, 1, length);\n+    }\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialBlobTests.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -550,0 +550,10 @@\n+\n+    \/*\n+     * Validate a SerialException is thrown if length < 0 for setString\n+     *\/\n+    @Test(expectedExceptions = SerialException.class)\n+    public void test42() throws Exception {\n+        int length = -1;\n+        SerialClob sc = new SerialClob(chars);\n+        int written = sc.setString(1, \"hello\", 1, length);\n+    }\n","filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialClobTests.java","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"}]}