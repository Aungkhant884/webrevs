[{"commit":{"message":"Add check: ensure length >= 0"},"files":[{"filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SerialBlob.java"},{"filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SerialClob.java"},{"filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialBlobTests.java"},{"filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialClobTests.java"}],"sha":"6a0cc1ad40b8c06fcc225dc08ab2b64dbfd84619"},{"commit":{"message":"8153490:Cannot setBytes() if incoming buffer's length is bigger than number of elements we want to insert.\n\nFix SerialBlob.setBytes(long pos, byte[] bytes, int offset, int length) in the\nfollowing cases:\n\n1. pos - 1 + bytes.length - offset > this.length() && pos - 1 + length <= this.length()\n   The original implementation throws ArrayIndexOutOfBoundsException but this case\n   should end successfully.\n   (test31)\n\n2. pos - 1 + length > this.length()\n   The original implementation throws ArrayIndexOutOfBoundsException but this case\n   should end successfully. *1\n   (test32)\n\n3. pos == this.length() + 1\n   The original implementation throws SerialException but this case should end\n   successfully. *2\n   (test33)\n\nAdditionally, fix SerialClob.setString(long pos, String str, int offset, int length)\nin the following cases:\n\n1. offset > str.length()\n   The original implementaion throws StringIndexOutOfBoundsException but this case\n   should throw SerialException.\n   (test39)\n\n2. pos - 1 + str.length() - offset > this.length() && pos - 1 + length <= this.length()\n   The original implementation throws ArrayIndexOutOfBoundsException but this case\n   should end successfully.\n   (test32)\n\n3. pos - 1 + length > this.length()\n   The original implementaion throws SerialException but this case should end\n   successfully. *3\n   (test40)\n\n4. pos == this.length() + 1\n   The original implementaion throws SerialException but this case should end\n   successfully. *4\n   (test41)\n\nThe javadoc has also been modified according to the above.\n\n*1 The documentation of Blob.setBytes() says, \"If the end of the Blob value is\n   reached while writing the array of bytes, then the length of the Blob value\n   will be increased to accommodate the extra bytes.\"\n\n*2 The documentation of Blob.setBytes() says, \"If the value specified for pos\n   is greater than the length+1 of the BLOB value then the behavior is\n   undefined.\"\n   So, it should work correctly when pos == length+1 of the BLOB value.\n\n*3 The documentation of Clob.setString() says, \"If the end of the Clob value is\n   reached while writing the given string, then the length of the Clob value\n   will be increased to accommodate the extra characters.\"\n\n*4 The documentation of Clob.setString() says, \"If the value specified for pos\n   is greater than the length+1 of the CLOB value then the behavior is\n   undefined.\"\n   So, it should work correctly when pos == length+1 of the CLOB value."},"files":[{"filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SerialBlob.java"},{"filename":"src\/java.sql.rowset\/share\/classes\/javax\/sql\/rowset\/serial\/SerialClob.java"},{"filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialBlobTests.java"},{"filename":"test\/jdk\/javax\/sql\/testng\/test\/rowset\/serial\/SerialClobTests.java"}],"sha":"8849de96bdd059a96dfc91ec2af01185f77256bd"}]