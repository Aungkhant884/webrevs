{"files":[{"patch":"@@ -1100,3 +1100,6 @@\n-  \/\/ Interrupt thread so it will wake up from a potential wait()\/sleep()\/park()\n-  java_lang_Thread::set_interrupted(threadObj(), true);\n-  this->interrupt();\n+  oop vt_oop = vthread();\n+  if (vt_oop == nullptr || !vt_oop->is_a(vmClasses::BaseVirtualThread_klass())) {\n+    \/\/ Interrupt thread so it will wake up from a potential wait()\/sleep()\/park()\n+    java_lang_Thread::set_interrupted(threadObj(), true);\n+    this->interrupt();\n+  }\n","filename":"src\/hotspot\/share\/runtime\/javaThread.cpp","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -206,1 +206,4 @@\n-                Thread.interrupted(); \/\/ work around an issue that the interrupt bit can be not cleared\n+                if (!Thread.currentThread().isVirtual()) { \/\/ platform thread\n+                    \/\/ clear the interrupt status\n+                    Thread.interrupted();\n+                }\n@@ -219,1 +222,4 @@\n-                Thread.interrupted(); \/\/ work around an issue that the interrupt bit can be not cleared\n+                if (!Thread.currentThread().isVirtual()) { \/\/ platform thread\n+                    \/\/ clear the interrupt status\n+                    Thread.interrupted();\n+                }\n","filename":"test\/hotspot\/jtreg\/serviceability\/jvmti\/vthread\/StopThreadTest\/StopThreadTest.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"}]}