{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -133,0 +133,2 @@\n+\n+  static void get_compatible_board(char *buf, int buflen);\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -54,1 +54,5 @@\n-  snprintf(_cpu_desc, CPU_DETAILED_DESC_BUF_SIZE, \"AArch64 %s\", _features_string);\n+\n+  VM_Version::get_compatible_board(_cpu_desc, CPU_DETAILED_DESC_BUF_SIZE);\n+  size_t desc_len = strlen(_cpu_desc);\n+  snprintf(_cpu_desc + desc_len, CPU_DETAILED_DESC_BUF_SIZE - desc_len, \" %s\", _features_string);\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/vm_version_ext_aarch64.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -170,0 +170,28 @@\n+\n+void VM_Version::get_compatible_board(char *buf, int buflen) {\n+  const char *aarch64_label = \"AArch64\";\n+  assert((buf != NULL) && ((size_t)buflen >= (strlen(aarch64_label) + 1)), \"invalid argument\");\n+\n+  int fd = open(\"\/proc\/device-tree\/compatible\", O_RDONLY);\n+  if (fd != -1) {\n+    struct stat statbuf;\n+    fstat(fd, &statbuf);\n+    if (buflen < statbuf.st_size) {\n+      strncpy(buf, aarch64_label, buflen);\n+      return;\n+    }\n+    ssize_t read_sz = read(fd, buf, statbuf.st_size);\n+    if (read_sz != -1) {\n+      \/\/ Replace '\\0' to ' '\n+      char *tok = buf;\n+      while ((tok = (char*)memchr(tok, 0, statbuf.st_size - (tok - buf) - 1)) != NULL) {\n+        *tok = ' ';\n+      }\n+    } else {\n+      strncpy(buf, aarch64_label, buflen);\n+    }\n+    close(fd);\n+  } else {\n+    strncpy(buf, aarch64_label, buflen);\n+  }\n+}\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":29,"deletions":1,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Microsoft Corporation. All rights reserved.\n+ * Copyright (c) 2020, 2021, Microsoft Corporation. All rights reserved.\n@@ -100,0 +100,6 @@\n+\n+void VM_Version::get_compatible_board(char *buf, int buflen) {\n+  const char *aarch64_label = \"AArch64\";\n+  assert((buf != NULL) && ((size_t)buflen >= (strlen(aarch64_label) + 1)), \"invalid argument\");\n+  strncpy(buf, aarch64_label, buflen);\n+}\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/vm_version_windows_aarch64.cpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}