{"files":[{"patch":"@@ -277,0 +277,1 @@\n+        ENABLE_NATIVE_ACCESS(\"--enable-native-access\", true, true, false, true, true),\n@@ -366,0 +367,1 @@\n+        private final OptionSpecBuilder  argEnableNativeAccess = parser.accepts(\"enable-native-access\");\n@@ -474,0 +476,4 @@\n+            if (options.has(argEnableNativeAccess)) {\n+                opts.addAll(OptionKind.ENABLE_NATIVE_ACCESS, List.of(\n+                        OptionKind.ENABLE_NATIVE_ACCESS.optionFlag, \"ALL-UNNAMED\"));\n+            }\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/JShellTool.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -210,0 +210,2 @@\n+\\    --enable-native-access\\n\\\n+\\                          Allow code to run restricted native methods\\n\\\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/internal\/jshell\/tool\/resources\/l10n.properties","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8268725\n+ * @summary Tests for the --enable-native-access option\n+ * @modules jdk.jshell\n+ * @run testng ToolEnableNativeAccessTest\n+ *\/\n+\n+import org.testng.annotations.Test;\n+\n+import static org.testng.Assert.assertTrue;\n+\n+public class ToolEnableNativeAccessTest extends ReplToolTesting {\n+\n+    @Test\n+    public void testOptionDebug() {\n+        test(\n+                (a) -> assertCommand(a, \"\/debug b\",\n+                        \"RemoteVM Options: []\\n\"\n+                        + \"Compiler options: []\"),\n+                (a) -> assertCommand(a, \"\/env --enable-native-access\",\n+                        \"|  Setting new options and restoring state.\"),\n+                (a) -> assertCommandCheckOutput(a, \"\/debug b\", s -> {\n+                    assertTrue(s.contains(\"RemoteVM Options: [--enable-native-access, ALL-UNNAMED]\"));\n+                    assertTrue(s.contains(\"Compiler options: []\"));\n+                })\n+        );\n+    }\n+\n+    @Test\n+    public void testCommandLineFlag() {\n+        test(new String[] {\"--enable-native-access\"},\n+                (a) -> assertCommandCheckOutput(a, \"\/debug b\", s -> {\n+                    assertTrue(s.contains(\"RemoteVM Options: [--enable-native-access, ALL-UNNAMED]\"));\n+                    assertTrue(s.contains(\"Compiler options: []\"));\n+                })\n+        );\n+    }\n+\n+}\n","filename":"test\/langtools\/jdk\/jshell\/ToolEnableNativeAccessTest.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"}]}