{"files":[{"patch":"@@ -93,1 +93,2 @@\n-        boolean result1 = xpath.evaluateExpression(\"boolean(\/Customers\/Customer[@id=3])\", doc, Boolean.class);\n+        boolean result1 = xpath.evaluateExpression(\"boolean\" +\n+                \"(\/Customers\/Customer[@id=\\\"x3\\\"])\", doc, Boolean.class);\n@@ -124,1 +125,2 @@\n-        String result1 = xpath.evaluateExpression(\"string(\/Customers\/Customer[@id=3]\/Phone\/text())\", doc, String.class);\n+        String result1 = xpath.evaluateExpression(\"string(\/Customers\/Customer\" +\n+                \"[@id=\\\"x3\\\"]\/Phone\/text())\", doc, String.class);\n@@ -145,1 +147,2 @@\n-        Node n = xpath.evaluateExpression(\"\/Customers\/Customer[@id=3]\", doc, Node.class);\n+        Node n = xpath.evaluateExpression(\"\/Customers\/Customer[@id=\\\"x3\\\"]\",\n+                doc, Node.class);\n@@ -154,1 +157,2 @@\n-        File n = xpath.evaluateExpression(\"\/Customers\/Customer[@id=3]\", doc, File.class);\n+        File n = xpath.evaluateExpression(\"\/Customers\/Customer[@id=\\\"x3\\\"]\",\n+                doc, File.class);\n@@ -162,1 +166,2 @@\n-        XPathEvaluationResult<?> result = xpath.evaluateExpression(\"boolean(\/Customers\/Customer[@id=3])\", doc);\n+        XPathEvaluationResult<?> result = xpath.evaluateExpression(\n+                \"boolean(\/Customers\/Customer[@id=\\\"x3\\\"])\", doc);\n@@ -181,1 +186,1 @@\n-                \"string(\/Customers\/Customer[@id=3]\/Phone\/text())\", doc, XPathEvaluationResult.class);\n+                \"string(\/Customers\/Customer[@id=\\\"x3\\\"]\/Phone\/text())\", doc, XPathEvaluationResult.class);\n@@ -199,1 +204,2 @@\n-        XPathEvaluationResult<?> result = xpath.evaluateExpression(\"\/Customers\/Customer[@id=3]\", doc);\n+        XPathEvaluationResult<?> result = xpath.evaluateExpression(\n+                \"\/Customers\/Customer[@id=\\\"x3\\\"]\", doc);\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/xpath\/XPathAnyTypeTest.java","additions":13,"deletions":7,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -79,1 +79,1 @@\n-        XPathExpression exp = xpath.compile(\"boolean(\/Customers\/Customer[@id=3])\");\n+        XPathExpression exp = xpath.compile(\"boolean(\/Customers\/Customer[@id=\\\"x3\\\"])\");\n@@ -102,1 +102,1 @@\n-        XPathExpression exp = xpath.compile(\"string(\/Customers\/Customer[@id=3]\/Phone\/text())\");\n+        XPathExpression exp = xpath.compile(\"string(\/Customers\/Customer[@id=\\\"x3\\\"]\/Phone\/text())\");\n@@ -125,1 +125,1 @@\n-        XPathExpression exp = xpath.compile(\"\/Customers\/Customer[@id=3]\");\n+        XPathExpression exp = xpath.compile(\"\/Customers\/Customer[@id=\\\"x3\\\"]\");\n@@ -135,1 +135,1 @@\n-        XPathExpression exp = xpath.compile(\"\/Customers\/Customer[@id=3]\");\n+        XPathExpression exp = xpath.compile(\"\/Customers\/Customer[@id=\\\"x3\\\"]\");\n@@ -144,1 +144,1 @@\n-        XPathExpression exp = xpath.compile(\"boolean(\/Customers\/Customer[@id=3])\");\n+        XPathExpression exp = xpath.compile(\"boolean(\/Customers\/Customer[@id=\\\"x3\\\"])\");\n@@ -164,1 +164,1 @@\n-        XPathExpression exp = xpath.compile(\"string(\/Customers\/Customer[@id=3]\/Phone\/text())\");\n+        XPathExpression exp = xpath.compile(\"string(\/Customers\/Customer[@id=\\\"x3\\\"]\/Phone\/text())\");\n@@ -184,1 +184,1 @@\n-        XPathExpression exp = xpath.compile(\"\/Customers\/Customer[@id=3]\");\n+        XPathExpression exp = xpath.compile(\"\/Customers\/Customer[@id=\\\"x3\\\"]\");\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/xpath\/XPathExpAnyTypeTest.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -44,0 +44,5 @@\n+    \/*\n+     * DataProvider for XPath expressions for id function.\n+     * Data columns:\n+     *  see parameters of the test \"testIdFn\"\n+     *\/\n@@ -56,0 +61,5 @@\n+    \/*\n+     * DataProvider for XPath expressions for count function.\n+     * Data columns:\n+     *  see parameters of the test \"testCountFn\"\n+     *\/\n@@ -60,1 +70,1 @@\n-                {\"count(\/\/@id)\", CUSTOMERS + EMAILS},\n+                {\"count(\/\/@id)\", ID_ATTRIBUTES},\n@@ -62,1 +72,1 @@\n-                {\"count(\/\/@*)\", CUSTOMERS + EMAILS},\n+                {\"count(\/\/@*)\", ID_ATTRIBUTES + FOO_ID_ATTRIBUTES},\n@@ -64,3 +74,5 @@\n-                        1 + CUSTOMERS + CUSTOMERS * CUSTOMER_ATTRIBUTES},\n-                {\"count(\/\/*[@id])\", CUSTOMERS + EMAILS},\n-                {\"count(.\/*)\", 1},\n+                        ROOT + CUSTOMERS + FOO_CUSTOMERS +\n+                                (CUSTOMERS + FOO_CUSTOMERS) *\n+                                        CUSTOMER_ELEMENTS},\n+                {\"count(\/\/*[@id])\", ID_ATTRIBUTES},\n+                {\"count(.\/*)\", ROOT},\n@@ -68,2 +80,5 @@\n-                        CUSTOMERS - 1 + (CUSTOMERS - 1) * CUSTOMER_ATTRIBUTES},\n-                {\"count(\/\/Customer[1]\/following-sibling::*)\", CUSTOMERS - 1},\n+                        CUSTOMERS - 1 + FOO_CUSTOMERS +\n+                                (CUSTOMERS - 1 + FOO_CUSTOMERS) *\n+                                        CUSTOMER_ELEMENTS},\n+                {\"count(\/\/Customer[1]\/following-sibling::*)\",\n+                        CUSTOMERS - 1 + FOO_CUSTOMERS},\n@@ -71,1 +86,1 @@\n-                        CUSTOMERS - 1 + (CUSTOMERS - 1) * CUSTOMER_ATTRIBUTES},\n+                        CUSTOMERS - 1 + (CUSTOMERS - 1) * CUSTOMER_ELEMENTS},\n@@ -73,3 +88,3 @@\n-                {\"count(\/\/Customer[1]\/ancestor::*)\", 1},\n-                {\"count(\/\/Customer[1]\/ancestor-or-self::*)\", 2},\n-                {\"count(\/\/Customer[1]\/descendant::*)\", CUSTOMER_ATTRIBUTES},\n+                {\"count(\/\/Customer[1]\/ancestor::*)\", ROOT},\n+                {\"count(\/\/Customer[1]\/ancestor-or-self::*)\", ROOT + 1},\n+                {\"count(\/\/Customer[1]\/descendant::*)\", CUSTOMER_ELEMENTS},\n@@ -77,1 +92,1 @@\n-                        CUSTOMER_ATTRIBUTES + 1},\n+                        CUSTOMER_ELEMENTS + 1},\n@@ -79,1 +94,1 @@\n-                        CUSTOMERS + EMAILS + CUSTOMERS * CUSTOMER_ATTRIBUTES},\n+                        ID_ATTRIBUTES + CUSTOMERS * CUSTOMER_ELEMENTS},\n@@ -83,0 +98,5 @@\n+    \/*\n+     * DataProvider for XPath expression for position function.\n+     * Data columns:\n+     *  see parameters of the test \"testPositionFn\"\n+     *\/\n@@ -95,0 +115,5 @@\n+    \/*\n+     * DataProvider for XPath expression for name and local name function.\n+     * Data columns:\n+     *  see parameters of the test \"testNameFn\"\n+     *\/\n@@ -99,0 +124,1 @@\n+                {\"local-name(\/\/foo:Customer)\", \"Customer\"},\n@@ -100,0 +126,1 @@\n+                {\"local-name(\/\/foo:Customer\/@foo:id)\", \"id\"},\n@@ -101,0 +128,2 @@\n+                {\"namespace-uri(.)\", \"\"},\n+                {\"namespace-uri(\/\/Customers)\", \"\"},\n@@ -102,0 +131,4 @@\n+                {\"namespace-uri(\/\/foo:Customer)\", \"foo\"},\n+                {\"namespace-uri(\/\/@id)\", \"\"},\n+                {\"namespace-uri(\/\/@foo:id)\", \"foo\"},\n+                {\"name(\/\/*[namespace-uri()=\\\"foo\\\"])\", \"foo:Customer\"},\n@@ -103,0 +136,1 @@\n+                {\"name(\/\/foo:Customer)\", \"foo:Customer\"},\n@@ -104,1 +138,2 @@\n-                {\"name(\/\/*[name()='Customer'])\", \"Customer\"},\n+                {\"name(\/\/foo:Customer\/@foo:id)\", \"foo:id\"},\n+                {\"name(\/\/*[name()='foo:Customer'])\", \"foo:Customer\"},\n@@ -108,0 +143,8 @@\n+    \/**\n+     * This test evaluates XPath expressions of id function and checks against\n+     * the expected result.\n+     *\n+     * @param exp      XPath expression\n+     * @param expected expected result\n+     * @throws Exception\n+     *\/\n@@ -121,0 +164,8 @@\n+    \/**\n+     * This test evaluates XPath expressions of count function and checks\n+     * against the expected result.\n+     *\n+     * @param exp      XPath expression\n+     * @param expected expected result\n+     * @throws Exception\n+     *\/\n@@ -132,0 +183,8 @@\n+    \/**\n+     * This test evaluates XPath expressions of position function and checks\n+     * against the expected result.\n+     *\n+     * @param exp      XPath expression\n+     * @param expected expected result\n+     * @throws Exception\n+     *\/\n@@ -145,0 +204,8 @@\n+    \/**\n+     * This test evaluates XPath expressions of name and local-name functions\n+     * and checks against the expected result.\n+     *\n+     * @param exp      XPath expression\n+     * @param expected expected result\n+     * @throws Exception\n+     *\/\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/xpath\/XPathExpFnTest.java","additions":81,"deletions":14,"binary":false,"changes":95,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-            = \"<Customers>\"\n+            = \"<Customers xmlns:foo=\\\"foo\\\">\"\n@@ -82,1 +82,1 @@\n-            + \"        <Name>name1<\/Name>\"\n+            + \"        <Name>name2<\/Name>\"\n@@ -92,1 +92,1 @@\n-            + \"        <Name>name1<\/Name>\"\n+            + \"        <Name>name3<\/Name>\"\n@@ -101,0 +101,10 @@\n+            + \"    <foo:Customer foo:id=\\\"x1\\\">\"\n+            + \"        <foo:Name>name1<\/foo:Name>\"\n+            + \"        <foo:Phone>1111111111<\/foo:Phone>\"\n+            + \"        <foo:Email foo:id=\\\"x\\\">123@xyz.com<\/foo:Email>\"\n+            + \"        <foo:Address>\"\n+            + \"            <foo:Street>1111 111st ave<\/foo:Street>\"\n+            + \"            <foo:City>The City<\/foo:City>\"\n+            + \"            <foo:State>The State<\/foo:State>\"\n+            + \"        <\/foo:Address>\"\n+            + \"    <\/foo:Customer>\"\n@@ -103,0 +113,3 @@\n+    \/\/ Number of root element.\n+    final int ROOT = 1;\n+    \/\/ Number of Customer elements.\n@@ -104,2 +117,8 @@\n-    final int EMAILS = CUSTOMERS;\n-    final int CUSTOMER_ATTRIBUTES = 7;\n+    \/\/ Number of id attributes.\n+    final int ID_ATTRIBUTES = 6;\n+    \/\/ Number of child elements of Customer.\n+    final int CUSTOMER_ELEMENTS = 7;\n+    \/\/ Number of Customer in the foo namespace.\n+    final int FOO_CUSTOMERS = 1;\n+    \/\/ Number of id attributes in the foo namespace.\n+    final int FOO_ID_ATTRIBUTES = 2;\n@@ -107,0 +126,6 @@\n+    \/**\n+     * Returns a {@link org.w3c.dom.Document} for XML with DTD.\n+     * @return a DOM Document\n+     * @throws RuntimeException if any error occurred during document\n+     *  initialization.\n+     *\/\n@@ -111,0 +136,6 @@\n+    \/**\n+     * Returns a {@link org.w3c.dom.Document} for raw XML.\n+     * @return a DOM Document\n+     * @throws RuntimeException if any error occurred during document\n+     *  initialization.\n+     *\/\n@@ -115,0 +146,7 @@\n+    \/**\n+     * Returns a {@link org.w3c.dom.Document} for input XML string.\n+     * @param xml the input xml string.\n+     * @return a DOM Document.\n+     * @throws RuntimeException if any error occurred during document\n+     *  initialization.\n+     *\/\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/xpath\/XPathTestBase.java","additions":43,"deletions":5,"binary":false,"changes":48,"status":"modified"}]}