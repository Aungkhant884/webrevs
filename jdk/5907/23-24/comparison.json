{"files":[{"patch":"@@ -69,2 +69,0 @@\n- * <p>\n- * Non-platform classes should not implement {@linkplain MemoryAddress} directly.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryAddress.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -84,2 +84,0 @@\n- * <p>\n- * Non-platform classes should not implement {@linkplain MemoryLayout} directly.\n@@ -552,2 +550,0 @@\n-     * <p>\n-     * Non-platform classes should not implement {@linkplain PathElement} directly.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryLayout.java","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -77,0 +77,2 @@\n+     * @implSpec the default implementation for this method copies the contents of the provided Java string\n+     * into a new memory segment obtained by calling {@code this.allocate(str.length() + 1)}.\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/SegmentAllocator.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-   segment.setAtIndex(ValueLayout.JAVA_INT, i, 42);\n+   segment.setAtIndex(ValueLayout.JAVA_INT, i, i);\n@@ -76,1 +76,1 @@\n-        segment.setAtIndex(ValueLayout.JAVA_INT, i, 42);\n+        segment.setAtIndex(ValueLayout.JAVA_INT, i, i);\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/package-info.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}