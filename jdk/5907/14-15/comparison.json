{"files":[{"patch":"@@ -68,7 +68,2 @@\n-        size += Utils.alignUp(bytesSize, bytesAlignment);\n-        checkSize();\n-        return MemorySegment.allocateNative(bytesSize, bytesAlignment, scope);\n-    }\n-\n-    private void checkSize() {\n-        if (size > arenaSize) {\n+        long allocatedSize = Utils.alignUp(bytesSize, bytesAlignment);\n+        if (size + allocatedSize > arenaSize) {\n@@ -77,0 +72,2 @@\n+        size += allocatedSize;\n+        return MemorySegment.allocateNative(bytesSize, bytesAlignment, scope);\n@@ -81,1 +78,0 @@\n-        checkSize();\n","filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/ArenaAllocator.java","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -119,1 +119,1 @@\n-    @Test(expectedExceptions = OutOfMemoryError.class)\n+    @Test\n@@ -123,1 +123,2 @@\n-            allocator.allocate(12);\n+            assertThrows(OutOfMemoryError.class, () -> allocator.allocate(12));\n+            allocator.allocate(5); \/\/ ok\n","filename":"test\/jdk\/java\/foreign\/TestSegmentAllocators.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}