{"files":[{"patch":"@@ -2,2 +2,2 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * Copyright (c) 2020, NTT DATA.\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, NTT DATA.\n@@ -30,0 +30,7 @@\n+ *          java.base\/sun.net.www.http\n+ *          java.net.http\/jdk.internal.net.http.common\n+ *          java.net.http\/jdk.internal.net.http.frame\n+ *          java.net.http\/jdk.internal.net.http.hpack\n+ * @library http2\/server\n+ * @build Http2TestServer Http2TestExchange\n+ * @compile HttpServerAdapters.java\n@@ -33,0 +40,2 @@\n+import com.sun.net.httpserver.HttpServer;\n+\n@@ -35,1 +44,0 @@\n-import java.io.UncheckedIOException;\n@@ -44,5 +52,1 @@\n-import java.net.URL;\n-import java.nio.ByteBuffer;\n-import java.nio.channels.AsynchronousSocketChannel;\n-import java.nio.channels.AsynchronousServerSocketChannel;\n-import java.nio.channels.CompletionHandler;\n+import java.net.URI;\n@@ -82,2 +86,0 @@\n-    private static AsynchronousServerSocketChannel server;\n-\n@@ -88,5 +90,1 @@\n-    private static final String SERVER_RESPONSE_STRING = \"HTTP\/1.1 200 OK\\r\\n\" +\n-                                                         \"Content-Length: 0\\r\\n\" +\n-                                                         \"\\r\\n\";\n-\n-    private static final ByteBuffer SERVER_RESPONSE = ByteBuffer.wrap(SERVER_RESPONSE_STRING.getBytes());\n+    private static HttpServerAdapters.HttpTestServer httpTestServer;\n@@ -96,17 +94,5 @@\n-        server = AsynchronousServerSocketChannel.open()\n-                                                .bind(new InetSocketAddress(InetAddress.getLoopbackAddress(), 0));\n-        server.accept(null, new CompletionHandler<AsynchronousSocketChannel, Void>() {\n-            public void completed(AsynchronousSocketChannel ch, Void att) {\n-                server.accept(null, this);\n-                SERVER_RESPONSE.rewind();\n-                ch.write(SERVER_RESPONSE);\n-                try {\n-                    ch.close();\n-                } catch (IOException e) {\n-                    throw new UncheckedIOException(e);\n-                }\n-            }\n-            public void failed(Throwable exc, Void att) {\n-                \/\/ Do nothing\n-            }\n-        });\n+        InetSocketAddress sa = new InetSocketAddress(InetAddress.getLoopbackAddress(), 0);\n+        httpTestServer = HttpServerAdapters.HttpTestServer.of(HttpServer.create(sa, 0));\n+        httpTestServer.addHandler(new HttpServerAdapters.HttpTestEchoHandler(), \"\/\");\n+        URI uri = URI.create(\"http:\/\/\" + httpTestServer.serverAuthority() + \"\/\");\n+        httpTestServer.start();\n@@ -118,3 +104,1 @@\n-        InetSocketAddress localAddr = (InetSocketAddress)server.getLocalAddress();\n-        URL url = new URL(\"http\", localAddr.getHostString(), localAddr.getPort(), \"\/\");\n-        requestBuilder = HttpRequest.newBuilder(url.toURI());\n+        requestBuilder = HttpRequest.newBuilder(uri);\n@@ -125,1 +109,1 @@\n-        server.close();\n+        httpTestServer.stop();\n","filename":"test\/jdk\/java\/net\/httpclient\/StreamCloseTest.java","additions":20,"deletions":36,"binary":false,"changes":56,"status":"modified"}]}