{"files":[{"patch":"@@ -53,0 +53,1 @@\n+#include \"prims\/jvmtiExport.hpp\"\n@@ -2823,0 +2824,23 @@\n+#if INCLUDE_JVMTI\n+  {\n+    if (too_many_traps(Deoptimization::Reason_intrinsic)) {\n+      return false;\n+    }\n+    \/\/ Don't try to access new allocated obj in the intrinsic.\n+    \/\/ It causes perfomance issues even when jvmti event VmObjectAlloc is disabled.\n+    \/\/ Deoptimize and allocate in interpreter instead.\n+    Node* addr = makecon(TypeRawPtr::make((address) &JvmtiExport::_should_notify_object_alloc));\n+    Node* should_post_vm_object_alloc = make_load(this->control(), addr, TypeInt::INT, T_INT, MemNode::unordered);\n+    Node* chk = _gvn.transform(new CmpINode(should_post_vm_object_alloc, intcon(0)));\n+    Node* tst = _gvn.transform(new BoolNode(chk, BoolTest::eq));\n+    {\n+      BuildCutout unless(this, tst, PROB_MAX);\n+      uncommon_trap(Deoptimization::Reason_intrinsic,\n+                    Deoptimization::Action_make_not_entrant);\n+    }\n+    if (stopped())\n+      return true;\n+\n+  }\n+#endif \/\/INCLUDE_JVMTI\n+\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":24,"deletions":0,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -727,0 +727,1 @@\n+    JvmtiExport::_should_notify_object_alloc = JvmtiExport::should_post_vm_object_alloc();\n","filename":"src\/hotspot\/share\/prims\/jvmtiEventController.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1069,0 +1069,3 @@\n+\/\/ This flag is read by C2 during VM internal objects allocation\n+int JvmtiExport::_should_notify_object_alloc = 0;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -399,0 +399,3 @@\n+  \/\/ Used by C2 to deoptimize allocation intrinsics and post vm_object_alloc\n+  static int _should_notify_object_alloc;\n+\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -31,1 +31,0 @@\n-vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach022\/TestDescription.java 8307462 generic-all\n@@ -42,2 +41,0 @@\n-serviceability\/jvmti\/VMObjectAlloc\/VMObjectAllocTest.java 8307462 generic-all\n-\n","filename":"test\/hotspot\/jtreg\/ProblemList-Xcomp.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -155,1 +155,0 @@\n-vmTestbase\/nsk\/jvmti\/AttachOnDemand\/attach002a\/TestDescription.java 8307462 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}