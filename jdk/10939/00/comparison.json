{"files":[{"patch":"@@ -3827,2 +3827,2 @@\n-  \/\/   c_rarg1   - byte[]   SHA.state\n-  \/\/   c_rarg2   - int     digest_length\n+  \/\/   c_rarg1   - byte[]  SHA.state\n+  \/\/   c_rarg2   - int     block_size\n@@ -3850,1 +3850,1 @@\n-    Register digest_length = c_rarg2;\n+    Register block_size    = c_rarg2;\n@@ -3855,1 +3855,1 @@\n-    Label sha3_512, sha3_384_or_224, sha3_256;\n+    Label sha3_512_or_sha3_384, shake128;\n@@ -3891,2 +3891,2 @@\n-    \/\/ digest_length == 64, SHA3-512\n-    __ tbnz(digest_length, 6, sha3_512);\n+    \/\/ block_size == 72, SHA3-512; block_size == 104, SHA3-384\n+    __ tbz(block_size, 7, sha3_512_or_sha3_384);\n@@ -3895,1 +3895,1 @@\n-    __ ld1(v29, v30, __ T8B, __ post(buf, 16));\n+    __ ld1(v29, v30, v31, __ T8B, __ post(buf, 24));\n@@ -3902,0 +3902,1 @@\n+    __ eor(v13, __ T8B, v13, v31);\n@@ -3903,10 +3904,4 @@\n-    \/\/ digest_length == 28, SHA3-224;  digest_length == 48, SHA3-384\n-    __ tbnz(digest_length, 4, sha3_384_or_224);\n-\n-    \/\/ SHA3-256\n-    __ ld1(v25, v26, v27, v28, __ T8B, __ post(buf, 32));\n-    __ eor(v13, __ T8B, v13, v25);\n-    __ eor(v14, __ T8B, v14, v26);\n-    __ eor(v15, __ T8B, v15, v27);\n-    __ eor(v16, __ T8B, v16, v28);\n-    __ b(rounds24_loop);\n+    __ ld1(v25, v26, v27,  __ T8B, __ post(buf, 24));\n+    __ eor(v14, __ T8B, v14, v25);\n+    __ eor(v15, __ T8B, v15, v26);\n+    __ eor(v16, __ T8B, v16, v27);\n@@ -3914,2 +3909,3 @@\n-    __ BIND(sha3_384_or_224);\n-    __ tbz(digest_length, 2, rounds24_loop); \/\/ bit 2 cleared? SHA-384\n+    \/\/ block_size == 136, bit4 == 0 and bit5 == 0, SHA3-256 or SHAKE256\n+    __ andw(c_rarg5, block_size, 48);\n+    __ cbzw(c_rarg5, rounds24_loop);\n@@ -3917,8 +3913,4 @@\n-    \/\/ SHA3-224\n-    __ ld1(v25, v26, v27, v28, __ T8B, __ post(buf, 32));\n-    __ ld1(v29, __ T8B, __ post(buf, 8));\n-    __ eor(v13, __ T8B, v13, v25);\n-    __ eor(v14, __ T8B, v14, v26);\n-    __ eor(v15, __ T8B, v15, v27);\n-    __ eor(v16, __ T8B, v16, v28);\n-    __ eor(v17, __ T8B, v17, v29);\n+    __ tbnz(block_size, 5, shake128);\n+    \/\/ block_size == 144, bit5 == 0, SHA3-244\n+    __ ldrd(v28, __ post(buf, 8));\n+    __ eor(v17, __ T8B, v17, v28);\n@@ -3927,1 +3919,9 @@\n-    __ BIND(sha3_512);\n+    __ BIND(shake128);\n+    __ ld1(v28, v29, v30, v31, __ T8B, __ post(buf, 32));\n+    __ eor(v17, __ T8B, v17, v28);\n+    __ eor(v18, __ T8B, v18, v29);\n+    __ eor(v19, __ T8B, v19, v30);\n+    __ eor(v20, __ T8B, v20, v31);\n+    __ b(rounds24_loop); \/\/ block_size == 168, SHAKE128\n+\n+    __ BIND(sha3_512_or_sha3_384);\n@@ -3931,0 +3931,8 @@\n+    __ tbz(block_size, 5, rounds24_loop); \/\/ SHA3-512\n+\n+    \/\/ SHA3-384\n+    __ ld1(v27, v28, v29, v30, __ T8B, __ post(buf, 32));\n+    __ eor(v9,  __ T8B, v9,  v27);\n+    __ eor(v10, __ T8B, v10, v28);\n+    __ eor(v11, __ T8B, v11, v29);\n+    __ eor(v12, __ T8B, v12, v30);\n@@ -4015,4 +4023,1 @@\n-      \/\/ block_size =  200 - 2 * digest_length, ofs += block_size\n-      __ add(ofs, ofs, 200);\n-      __ sub(ofs, ofs, digest_length, Assembler::LSL, 1);\n-\n+      __ add(ofs, ofs, block_size);\n","filename":"src\/hotspot\/cpu\/aarch64\/stubGenerator_aarch64.cpp","additions":37,"deletions":32,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -7009,1 +7009,1 @@\n-  Node* digest_length = NULL;\n+  Node* block_size = NULL;\n@@ -7043,2 +7043,2 @@\n-    digest_length = get_digest_length_from_digest_object(digestBase_obj);\n-    if (digest_length == NULL) return false;\n+    block_size = get_block_size_from_digest_object(digestBase_obj);\n+    if (block_size == NULL) return false;\n@@ -7057,1 +7057,1 @@\n-  if (digest_length == NULL) {\n+  if (block_size == NULL) {\n@@ -7064,1 +7064,1 @@\n-                             src_start, state, digest_length);\n+                             src_start, state, block_size);\n@@ -7176,1 +7176,1 @@\n-  Node* digest_length = NULL;\n+  Node* block_size = NULL;\n@@ -7178,2 +7178,2 @@\n-    digest_length = get_digest_length_from_digest_object(digest_obj);\n-    if (digest_length == NULL) return false;\n+    block_size = get_block_size_from_digest_object(digest_obj);\n+    if (block_size == NULL) return false;\n@@ -7184,1 +7184,1 @@\n-  if (digest_length == NULL) {\n+  if (block_size == NULL) {\n@@ -7193,1 +7193,1 @@\n-                             src_start, state, digest_length, ofs, limit);\n+                             src_start, state, block_size, ofs, limit);\n@@ -7350,5 +7350,5 @@\n-\/\/------------------------------get_digest_length_from_sha3_object----------------------------------\n-Node * LibraryCallKit::get_digest_length_from_digest_object(Node *digest_object) {\n-  Node* digest_length = load_field_from_object(digest_object, \"digestLength\", \"I\");\n-  assert (digest_length != NULL, \"sanity\");\n-  return digest_length;\n+\/\/------------------------------get_block_size_from_sha3_object----------------------------------\n+Node * LibraryCallKit::get_block_size_from_digest_object(Node *digest_object) {\n+  Node* block_size = load_field_from_object(digest_object, \"blockSize\", \"I\");\n+  assert (block_size != NULL, \"sanity\");\n+  return block_size;\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -302,1 +302,1 @@\n-  Node* get_digest_length_from_digest_object(Node *digestBase_object);\n+  Node* get_block_size_from_digest_object(Node *digestBase_object);\n","filename":"src\/hotspot\/share\/opto\/library_call.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1021,1 +1021,1 @@\n-  if (is_sha3) fields[argp++] = TypeInt::INT; \/\/ digest_length\n+  if (is_sha3) fields[argp++] = TypeInt::INT; \/\/ block_size\n@@ -1043,1 +1043,1 @@\n-  if (is_sha3) fields[argp++] = TypeInt::INT; \/\/ digest_length\n+  if (is_sha3) fields[argp++] = TypeInt::INT; \/\/ block_size\n","filename":"src\/hotspot\/share\/opto\/runtime.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}