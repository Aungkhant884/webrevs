{"files":[{"patch":"@@ -42,0 +42,1 @@\n+#include \"opto\/runtime.hpp\"\n@@ -256,0 +257,2 @@\n+#define XTOP LP64_ONLY(COMMA phase->top())\n+\n@@ -258,0 +261,1 @@\n+\n@@ -259,2 +263,39 @@\n-    \/\/ Clone primitive array\n-    BarrierSetC2::clone_at_expansion(phase, ac);\n+    const TypeAryPtr* ary_ptr = src->get_ptr_type()->isa_aryptr();\n+    BasicType bt;\n+    if (ary_ptr == NULL) {\n+      \/\/ ary_ptr can be null iff we are running with StressReflectiveCode\n+      \/\/ This code will be unreachable\n+      assert(StressReflectiveCode, \"Guard against surprises\");\n+      bt = T_LONG;\n+    } else {\n+      bt = ary_ptr->elem()->array_element_basic_type();\n+      if (is_reference_type(bt)) {\n+        \/\/ Clone object array\n+        bt = T_OBJECT;\n+      } else {\n+        \/\/ Clone primitive array\n+        bt = T_LONG;\n+      }\n+    }\n+\n+    Node* ctrl = ac->in(TypeFunc::Control);\n+    Node* mem = ac->in(TypeFunc::Memory);\n+    Node* src = ac->in(ArrayCopyNode::Src);\n+    Node* src_offset = ac->in(ArrayCopyNode::SrcPos);\n+    Node* dest = ac->in(ArrayCopyNode::Dest);\n+    Node* dest_offset = ac->in(ArrayCopyNode::DestPos);\n+    Node* length = ac->in(ArrayCopyNode::Length);\n+\n+    Node* payload_src = phase->basic_plus_adr(src, src_offset);\n+    Node* payload_dst = phase->basic_plus_adr(dest, dest_offset);\n+\n+    const char* copyfunc_name = \"arraycopy\";\n+    address     copyfunc_addr = phase->basictype2arraycopy(bt, NULL, NULL, true, copyfunc_name, true);\n+\n+    const TypePtr* raw_adr_type = TypeRawPtr::BOTTOM;\n+    const TypeFunc* call_type = OptoRuntime::fast_arraycopy_Type();\n+\n+    Node* call = phase->make_leaf_call(ctrl, mem, call_type, copyfunc_addr, copyfunc_name, raw_adr_type, payload_src, payload_dst, length XTOP);\n+    phase->transform_later(call);\n+\n+    phase->igvn().replace_node(ac, call);\n@@ -263,1 +304,1 @@\n-\n+  \n","filename":"src\/hotspot\/share\/gc\/z\/c2\/zBarrierSetC2.cpp","additions":44,"deletions":3,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -29,1 +29,5 @@\n- * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -Xcomp -XX:-ReduceInitialCardMarks\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:-ReduceInitialCardMarks\n+ *                   -XX:CompileCommand=compileonly,compiler.arraycopy.TestObjectArrayClone::test\n+ *                   compiler.arraycopy.TestObjectArrayClone\n+ *\n+ * @run main\/othervm -XX:+IgnoreUnrecognizedVMOptions -XX:+UseZGC\n@@ -38,1 +42,5 @@\n-    public static TestObjectArrayClone[] test(TestObjectArrayClone[] arr) {\n+    public static TestObjectArrayClone[] testObjectArrayClone(TestObjectArrayClone[] arr) {\n+        return arr.clone();\n+    }\n+\n+    public static int[] testPrimitiveArrayClone(int[] arr) {\n@@ -43,1 +51,7 @@\n-        test(new TestObjectArrayClone[42]);\n+        for (int i = 0; i < 50_000; i++) {\n+            testObjectArrayClone(new TestObjectArrayClone[42]);\n+        }\n+\n+        for (int i = 0; i < 50_000; i++) {\n+            testPrimitiveArrayClone(new int[42]);\n+        }\n","filename":"test\/hotspot\/jtreg\/compiler\/arraycopy\/TestObjectArrayClone.java","additions":17,"deletions":3,"binary":false,"changes":20,"status":"modified"}]}