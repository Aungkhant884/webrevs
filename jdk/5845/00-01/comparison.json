{"files":[{"patch":"@@ -313,0 +313,2 @@\n+static const int _num_ranks = 7;\n+\n@@ -316,1 +318,1 @@\n-  for (int i = 0; i < 7; i++) {\n+  for (int i = 0; i < _num_ranks; i++) {\n@@ -319,1 +321,1 @@\n-    } else if (r  > _ranks[i] && (i < 6 && r < _ranks[i+1])) {\n+    } else if (r  > _ranks[i] && (i < _num_ranks-1 && r < _ranks[i+1])) {\n@@ -341,1 +343,1 @@\n-           _rank_names[i], adjust, rank_name_internal(adjusted));\n+           rank_name_internal(orig), adjust, rank_name_internal(adjusted));\n","filename":"src\/hotspot\/share\/runtime\/mutex.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -305,0 +305,11 @@\n+TEST_VM_ASSERT_MSG(MutexRank, monitor_overlapping_safepoint_rank2,\n+                   \".*Rank safepoint-1-39 overlaps with service-5\") {\n+  JavaThread* THREAD = JavaThread::current();\n+  ThreadInVMfromNative invm(THREAD);\n+\n+  Monitor* monitor_rank_broken = new Monitor(Mutex::safepoint-1, \"monitor_rank_broken\");\n+  Monitor* monitor_rank_also_broken = new Monitor(monitor_rank_broken->rank()-39, \"monitor_rank_also_broken\");\n+  monitor_rank_also_broken->lock_without_safepoint_check();\n+  monitor_rank_also_broken->unlock();\n+}\n+\n","filename":"test\/hotspot\/gtest\/runtime\/test_mutex.cpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}