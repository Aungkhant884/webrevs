{"files":[{"patch":"@@ -239,1 +239,2 @@\n-            String string = value.toString();\n+            if (value != null) {\n+                String string = value.toString();\n@@ -241,2 +242,3 @@\n-            if (string != null && string.startsWith(substring)) {\n-                return value;\n+                if (string != null && string.startsWith(substring)) {\n+                    return value;\n+                }\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/SpinnerListModel.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,88 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 5078989\n+   @key headful\n+   @summary Verifies Null Pointer exception is not thrown in SpinnerListMode\n+   @run main SpinnerTest\n+ *\/\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JSpinner;\n+import javax.swing.SpinnerListModel;\n+import javax.swing.SwingUtilities;\n+import java.awt.event.KeyEvent;\n+import java.awt.Point;\n+import java.awt.Robot;\n+\n+public class SpinnerTest\n+{\n+    private static JFrame frame;\n+    private static JSpinner spinner;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                \/\/Create and set up the window.\n+                frame = new JFrame(\"SpinnerDemo\");\n+                frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+\n+                JPanel panel = new JPanel();\n+                String[] values = {\"Month: \", \"Year: \", null, \"Date\", \"Sent\"};\n+\n+                SpinnerListModel listModel = new SpinnerListModel(values);\n+\n+                JLabel l = new JLabel(\"Spinner\");\n+                panel.add(l);\n+\n+                spinner = new JSpinner(listModel);\n+                l.setLabelFor(spinner);\n+                panel.add(spinner);\n+\n+                panel.setOpaque(true); \/\/content panes must be opaque\n+                frame.setContentPane(panel);\n+\n+                \/\/Display the window.\n+                frame.pack();\n+                frame.setVisible(true);\n+                frame.setLocationRelativeTo(null);\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            Point loc = spinner.getLocationOnScreen();\n+\n+            robot.mouseMove(loc.x, loc.y);\n+            robot.keyPress(KeyEvent.VK_SPACE);\n+            robot.keyRelease(KeyEvent.VK_SPACE);\n+\n+        } finally {\n+            if (frame != null) {\n+                SwingUtilities.invokeAndWait(() -> frame.dispose());\n+            }\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JSpinner\/SpinnerTest.java","additions":88,"deletions":0,"binary":false,"changes":88,"status":"added"}]}