{"files":[{"patch":"@@ -1047,4 +1047,2 @@\n-                    default -> {\n-                        assert false;\n-                        return HtmlTree.EMPTY;\n-                    }\n+                    default ->\n+                        throw new IllegalStateException(ref.get(0).getKind().toString());\n@@ -1054,4 +1052,2 @@\n-            default -> {\n-                assert false;\n-                return HtmlTree.EMPTY;\n-            }\n+            default ->\n+                throw new IllegalStateException(kind.toString());\n@@ -1603,2 +1599,1 @@\n-                    \/\/ we need to pass the DocTreeImpl here, so ignore node\n-                    result.add(seeTagToContent(element, tag, context));\n+                    result.add(seeTagToContent(element, node, context));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/HtmlDocletWriter.java","additions":5,"deletions":10,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -165,8 +165,1 @@\n-        super(isFirstSentence);\n-        this.htmlWriter = htmlWriter;\n-        this.context = new Context(isFirstSentence, inSummary);\n-        configuration = htmlWriter.configuration;\n-        options = configuration.getOptions();\n-        utils = configuration.utils;\n-        resources = configuration.getDocResources();\n-        contents = configuration.getContents();\n+        this(htmlWriter, new Context(isFirstSentence, inSummary));\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/TagletWriterImpl.java","additions":1,"deletions":8,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -149,0 +149,1 @@\n+    private boolean inSummary;\n@@ -961,1 +962,1 @@\n-    public Void visitSummary(SummaryTree node, Void aVoid) {\n+    public Void visitSummary(SummaryTree tree, Void aVoid) {\n@@ -963,1 +964,4 @@\n-        int idx = env.currDocComment.getFullBody().indexOf(node);\n+        if (inSummary) {\n+            env.messages.warning(HTML, tree, \"dc.tag.nested.tag\", \"@\" + tree.getTagName());\n+        }\n+        int idx = env.currDocComment.getFullBody().indexOf(tree);\n@@ -967,1 +971,8 @@\n-            env.messages.warning(SYNTAX, node, \"dc.invalid.summary\", node.getTagName());\n+            env.messages.warning(SYNTAX, tree, \"dc.invalid.summary\", tree.getTagName());\n+        }\n+        boolean prevInSummary = inSummary;\n+        try {\n+            inSummary = true;\n+            return super.visitSummary(tree, aVoid);\n+        } finally {\n+            inSummary = prevInSummary;\n@@ -969,1 +980,0 @@\n-        return super.visitSummary(node, aVoid);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclint\/Checker.java","additions":14,"deletions":4,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -81,1 +81,1 @@\n-    void testLinkLinkCombo(Path base, TagKind outer, TagKind inner, DocLintKind dl) throws IOException {\n+    void testLinkLinkCombo(Path base, TagKind outer, TagKind inner, DocLintKind dlk) throws IOException {\n@@ -100,1 +100,1 @@\n-                dl.option,\n+                dlk.option,\n@@ -109,0 +109,2 @@\n+        checkOutput(Output.OUT, dlk == DocLintKind.DOCLINT,\n+                \"C.java:2: warning: nested tag: @link\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNestedInlineTags\/TestNestedLinkTag.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -84,0 +84,2 @@\n+        checkOutput(Output.OUT, dlk == DocLintKind.DOCLINT,\n+                \"C.java:2: warning: nested tag: @summary\");\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testNestedInlineTags\/TestNestedSummaryTag.java","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"}]}