{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +51,1 @@\n-UniqueMSIHANDLE openDatabase(const tstring& msiPath) {\n+MSIHANDLE openDatabase(const tstring& msiPath) {\n@@ -60,1 +60,1 @@\n-    return UniqueMSIHANDLE(h);\n+    return h;\n@@ -118,1 +118,1 @@\n-    handle = UniqueMSIHANDLE(h);\n+    handle = h;\n@@ -142,1 +142,1 @@\n-    const UINT status = MsiRecordSetString(handle.get(), idx, v.c_str());\n+    const UINT status = MsiRecordSetString(handle, idx, v.c_str());\n@@ -152,1 +152,1 @@\n-    const UINT status = MsiRecordSetInteger(handle.get(), idx, v);\n+    const UINT status = MsiRecordSetInteger(handle, idx, v);\n@@ -163,1 +163,1 @@\n-    const UINT status = MsiRecordSetStream(handle.get(), idx, v.c_str());\n+    const UINT status = MsiRecordSetStream(handle, idx, v.c_str());\n@@ -173,1 +173,1 @@\n-    const unsigned reply = MsiRecordGetFieldCount(handle.get());\n+    const unsigned reply = MsiRecordGetFieldCount(handle);\n@@ -183,1 +183,1 @@\n-    int const reply = MsiRecordGetInteger(handle.get(), idx);\n+    int const reply = MsiRecordGetInteger(handle, idx);\n@@ -202,1 +202,1 @@\n-        const UINT status = MsiRecordReadStream(handle.get(), UINT(idx),\n+        const UINT status = MsiRecordReadStream(handle, UINT(idx),\n@@ -219,1 +219,1 @@\n-    for (const UINT status = MsiDatabaseOpenView(db.dbHandle.get(),\n+    for (const UINT status = MsiDatabaseOpenView(db.dbHandle,\n@@ -225,2 +225,0 @@\n-    UniqueMSIHANDLE tmp(h);\n-\n@@ -228,1 +226,1 @@\n-    for (const UINT status = MsiViewExecute(h, queryParam.handle.get());\n+    for (const UINT status = MsiViewExecute(h, queryParam.handle);\n@@ -230,0 +228,1 @@\n+        closeMSIHANDLE(h);\n@@ -236,2 +235,1 @@\n-    handle = UniqueDbView(h);\n-    tmp.release();\n+    handle = h;\n@@ -256,1 +254,1 @@\n-    for (const UINT status = MsiViewFetch(handle.get(), &h);\n+    for (const UINT status = MsiViewFetch(handle, &h);\n@@ -267,1 +265,1 @@\n-    reply.handle = UniqueMSIHANDLE(h);\n+    reply.handle = h;\n@@ -274,1 +272,1 @@\n-    const UINT status = MsiViewModify(handle.get(), mode, record.handle.get());\n+    const UINT status = MsiViewModify(handle, mode, record.handle);\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/MsiDb.cpp","additions":17,"deletions":19,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,4 +37,0 @@\n-\/**\n- * Helpers to interact with MSI through database interface.\n- *\/\n-\n@@ -42,10 +38,0 @@\n-void closeDatabaseView(MSIHANDLE h);\n-\n-struct MsiDbViewDeleter {\n-    typedef MSIHANDLE pointer;\n-\n-    void operator()(MSIHANDLE h) {\n-        closeDatabaseView(h);\n-    }\n-};\n-} \/\/ namespace msi\n@@ -53,5 +39,1 @@\n-\n-typedef std::unique_ptr<MSIHANDLE, msi::MsiDbViewDeleter> UniqueDbView;\n-\n-\n-namespace msi {\n+void closeDatabaseView(MSIHANDLE h);\n@@ -98,0 +80,6 @@\n+    ~Database() {\n+      if (dbHandle != 0) {\n+        closeMSIHANDLE(dbHandle);\n+      }\n+    }\n+\n@@ -119,1 +107,1 @@\n-    UniqueMSIHANDLE dbHandle;\n+    MSIHANDLE dbHandle;\n@@ -131,1 +119,2 @@\n-        handle.swap(other.handle);\n+        handle = other.handle;\n+        other.handle = 0;\n@@ -144,0 +133,6 @@\n+    ~DatabaseRecord() {\n+      if (handle != 0) {\n+        closeMSIHANDLE(handle);\n+      }\n+    }\n+\n@@ -163,1 +158,1 @@\n-        return 0 == handle.get();\n+        return 0 == handle;\n@@ -167,1 +162,1 @@\n-        return handle.get();\n+        return handle;\n@@ -171,1 +166,1 @@\n-    mutable UniqueMSIHANDLE handle;\n+    mutable MSIHANDLE handle;\n@@ -189,1 +184,1 @@\n-    UniqueDbView handle;\n+    MSIHANDLE handle;\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/MsiDb.h","additions":21,"deletions":26,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -202,1 +202,1 @@\n-                                                    handle.get(), UINT(idx));\n+                                                    handle, UINT(idx));\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/MsiUtils.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-#include <memory>\n@@ -48,14 +47,0 @@\n-struct MsiHandleDeleter {\n-    typedef MSIHANDLE pointer;\n-\n-    void operator()(MSIHANDLE h) {\n-        closeMSIHANDLE(h);\n-    }\n-};\n-\n-} \/\/ namespace msi\n-\n-typedef std::unique_ptr<MSIHANDLE, msi::MsiHandleDeleter> UniqueMSIHANDLE;\n-\n-namespace msi {\n-\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/MsiUtils.h","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"}]}