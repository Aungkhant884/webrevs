{"files":[{"patch":"@@ -424,2 +424,2 @@\n-bool G1ParScanThreadState::inject_evacuation_failure() {\n-  return _g1h->evac_failure_injector()->evacuation_should_fail(_evac_failure_inject_counter);\n+bool G1ParScanThreadState::inject_evacuation_failure(uint region_idx) {\n+  return _g1h->evac_failure_injector()->evacuation_should_fail(_evac_failure_inject_counter, region_idx);\n@@ -473,1 +473,1 @@\n-  if (inject_evacuation_failure()) {\n+  if (inject_evacuation_failure(from_region->hrm_index())) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -110,1 +110,1 @@\n-  bool inject_evacuation_failure() EVAC_FAILURE_INJECTOR_RETURN_( return false; );\n+  bool inject_evacuation_failure(uint region_idx) EVAC_FAILURE_INJECTOR_RETURN_( return false; );\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,0 +33,27 @@\n+class SelectEvacFailureRegionClosure : public HeapRegionClosure {\n+  CHeapBitMap& _evac_failure_regions;\n+  size_t _evac_failure_regions_num;\n+\n+public:\n+  SelectEvacFailureRegionClosure(CHeapBitMap& evac_failure_regions, size_t cset_length) :\n+    _evac_failure_regions(evac_failure_regions),\n+    _evac_failure_regions_num(cset_length * G1EvacuationFailureALotCSetPercent \/ 100) { }\n+\n+  bool do_heap_region(HeapRegion* r) override {\n+    assert(r->in_collection_set(), \"must be\");\n+    if (_evac_failure_regions_num > 0) {\n+      _evac_failure_regions.set_bit(r->hrm_index());\n+      --_evac_failure_regions_num;\n+      return false;\n+    }\n+    return true;\n+  }\n+};\n+\n+void G1YoungGCEvacFailureInjector::select_evac_failure_regions() {\n+  G1CollectedHeap* g1h = G1CollectedHeap::heap();\n+  _evac_failure_regions.reinitialize(g1h->max_reserved_regions());\n+  SelectEvacFailureRegionClosure closure(_evac_failure_regions, g1h->collection_set()->cur_length());\n+  g1h->collection_set_iterate_all(&closure);\n+}\n+\n@@ -71,0 +98,4 @@\n+\n+    if (_inject_evacuation_failure_for_current_gc) {\n+      select_evac_failure_regions();\n+    }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.cpp","additions":31,"deletions":0,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -59,0 +59,3 @@\n+\n+  \/\/ Records the regions that will fail evacuation.\n+  CHeapBitMap _evac_failure_regions;\n@@ -64,0 +67,3 @@\n+\n+  \/\/ Selects the regions that will fail evacuation by G1EvacuationFailureALotCSetPercent.\n+  void select_evac_failure_regions() EVAC_FAILURE_INJECTOR_RETURN;\n@@ -72,1 +78,1 @@\n-  bool evacuation_should_fail(size_t& counter) EVAC_FAILURE_INJECTOR_RETURN_( return false; );\n+  bool evacuation_should_fail(size_t& counter, uint region_idx) EVAC_FAILURE_INJECTOR_RETURN_( return false; );\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-inline bool G1YoungGCEvacFailureInjector::evacuation_should_fail(size_t& counter) {\n+inline bool G1YoungGCEvacFailureInjector::evacuation_should_fail(size_t& counter, uint region_idx) {\n@@ -39,0 +39,3 @@\n+  if (!_evac_failure_regions.at(region_idx)) {\n+    return false;\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCEvacFailureInjector.inline.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -76,1 +76,7 @@\n-          \"evacuation pauses\")\n+          \"evacuation pauses\")                                              \\\n+                                                                            \\\n+  product(uint, G1EvacuationFailureALotCSetPercent, 100,                    \\\n+          \"The percentage of regions in the collection set starting \"       \\\n+          \"from the beginning where the forced evacuation failure \"         \\\n+          \"injection will be applied.\")                                     \\\n+          range(1, 100)\n","filename":"src\/hotspot\/share\/gc\/g1\/g1_globals.hpp","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"}]}