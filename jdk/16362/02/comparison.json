{"files":[{"patch":"@@ -1077,1 +1077,20 @@\n-\/\/ Float and Double Conversion Instruction\n+enum fclass_mask {\n+  minf       = 1 << 0,   \/\/ negative infinite\n+  mnorm      = 1 << 1,   \/\/ negative normal number\n+  msubnorm   = 1 << 2,   \/\/ negative subnormal number\n+  mzero      = 1 << 3,   \/\/ negative zero\n+  pzero      = 1 << 4,   \/\/ positive zero\n+  psubnorm   = 1 << 5,   \/\/ positive subnormal number\n+  pnorm      = 1 << 6,   \/\/ positive normal number\n+  pinf       = 1 << 7,   \/\/ positive infinite\n+  snan       = 1 << 8,   \/\/ signaling NaN\n+  qnan       = 1 << 9,   \/\/ quiet NaN\n+  zero       = mzero    | pzero,\n+  subnorm    = msubnorm | psubnorm,\n+  norm       = mnorm    | pnorm,\n+  inf        = minf     | pinf,\n+  nan        = snan     | qnan,\n+  finite     = zero     | subnorm   | norm,\n+};\n+\n+\/\/ Float and Double Conversion\/Classify Instruction\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":20,"deletions":1,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1574,1 +1574,1 @@\n-  andi(t0, t0, 0b1100000000); \/\/if src1 or src2 is quiet or signaling NaN then return NaN\n+  andi(t0, t0, fclass_mask::nan); \/\/ if src1 or src2 is quiet or signaling NaN then return NaN\n@@ -1672,6 +1672,2 @@\n-  \/\/bitmask 0b1100011000 specifies this bits:\n-  \/\/ 3 - src is -0\n-  \/\/ 4 - src is +0\n-  \/\/ 8 - src is signaling NaN\n-  \/\/ 9 - src is a quiet NaN\n-  andi(tmp1, tmp1, 0b1100011000);\n+  \/\/ check if input is -0, +0, signaling NaN or quiet NaN\n+  andi(tmp1, tmp1, fclass_mask::zero | fclass_mask::nan);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -4231,1 +4231,1 @@\n-  andi(tmp, tmp, 0b1100000000);                                                           \\\n+  andi(tmp, tmp, fclass_mask::nan);                                                       \\\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7295,1 +7295,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), 0b0010000001);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::inf);\n@@ -7310,1 +7310,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), 0b0010000001);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::inf);\n@@ -7325,1 +7325,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), 0b0001111110);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::finite);\n@@ -7340,1 +7340,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), 0b0001111110);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::finite);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}