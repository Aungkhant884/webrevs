{"files":[{"patch":"@@ -1077,17 +1077,17 @@\n-enum {\n-  fclass_minf       = 1 << 0,   \/\/ negative infinite\n-  fclass_mnorm      = 1 << 1,   \/\/ negative normal number\n-  fclass_msubnorm   = 1 << 2,   \/\/ negative subnormal number\n-  fclass_mzero      = 1 << 3,   \/\/ negative zero\n-  fclass_pzero      = 1 << 4,   \/\/ positive zero\n-  fclass_psubnorm   = 1 << 5,   \/\/ positive subnormal number\n-  fclass_pnorm      = 1 << 6,   \/\/ positive normal number\n-  fclass_pinf       = 1 << 7,   \/\/ positive infinite\n-  fclass_snan       = 1 << 8,   \/\/ signaling NaN\n-  fclass_qnan       = 1 << 9,   \/\/ quiet NaN\n-  fclass_zero       = fclass_mzero    | fclass_pzero,\n-  fclass_subnorm    = fclass_msubnorm | fclass_psubnorm,\n-  fclass_norm       = fclass_mnorm    | fclass_pnorm,\n-  fclass_inf        = fclass_minf     | fclass_pinf,\n-  fclass_nan        = fclass_snan     | fclass_qnan,\n-  fclass_finite     = fclass_zero     | fclass_subnorm   | fclass_norm,\n+enum fclass_mask {\n+  minf       = 1 << 0,   \/\/ negative infinite\n+  mnorm      = 1 << 1,   \/\/ negative normal number\n+  msubnorm   = 1 << 2,   \/\/ negative subnormal number\n+  mzero      = 1 << 3,   \/\/ negative zero\n+  pzero      = 1 << 4,   \/\/ positive zero\n+  psubnorm   = 1 << 5,   \/\/ positive subnormal number\n+  pnorm      = 1 << 6,   \/\/ positive normal number\n+  pinf       = 1 << 7,   \/\/ positive infinite\n+  snan       = 1 << 8,   \/\/ signaling NaN\n+  qnan       = 1 << 9,   \/\/ quiet NaN\n+  zero       = mzero    | pzero,\n+  subnorm    = msubnorm | psubnorm,\n+  norm       = mnorm    | pnorm,\n+  inf        = minf     | pinf,\n+  nan        = snan     | qnan,\n+  finite     = zero     | subnorm   | norm,\n","filename":"src\/hotspot\/cpu\/riscv\/assembler_riscv.hpp","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -1574,1 +1574,1 @@\n-  andi(t0, t0, Assembler::fclass_nan); \/\/ if src1 or src2 is quiet or signaling NaN then return NaN\n+  andi(t0, t0, fclass_mask::nan); \/\/ if src1 or src2 is quiet or signaling NaN then return NaN\n@@ -1673,1 +1673,1 @@\n-  andi(tmp1, tmp1, Assembler::fclass_zero | Assembler::fclass_nan);\n+  andi(tmp1, tmp1, fclass_mask::zero | fclass_mask::nan);\n","filename":"src\/hotspot\/cpu\/riscv\/c2_MacroAssembler_riscv.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -4231,1 +4231,1 @@\n-  andi(tmp, tmp, Assembler::fclass_nan);                                                  \\\n+  andi(tmp, tmp, fclass_mask::nan);                                                       \\\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -7295,1 +7295,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_inf);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::inf);\n@@ -7310,1 +7310,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_inf);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::inf);\n@@ -7325,1 +7325,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_finite);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::finite);\n@@ -7340,1 +7340,1 @@\n-    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_finite);\n+    __ andi(as_Register($dst$$reg), as_Register($dst$$reg), Assembler::fclass_mask::finite);\n","filename":"src\/hotspot\/cpu\/riscv\/riscv.ad","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}