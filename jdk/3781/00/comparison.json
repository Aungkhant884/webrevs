{"files":[{"patch":"@@ -31,6 +31,6 @@\n- * @run main compiler.vectorization.TestBufferVectorization array\n- * @run main compiler.vectorization.TestBufferVectorization arrayOffset\n- * @run main compiler.vectorization.TestBufferVectorization buffer\n- * @run main compiler.vectorization.TestBufferVectorization bufferHeap\n- * @run main compiler.vectorization.TestBufferVectorization bufferDirect\n- * @run main compiler.vectorization.TestBufferVectorization arrayView\n+ * @run driver compiler.vectorization.TestBufferVectorization array\n+ * @run driver compiler.vectorization.TestBufferVectorization arrayOffset\n+ * @run driver compiler.vectorization.TestBufferVectorization buffer\n+ * @run driver compiler.vectorization.TestBufferVectorization bufferHeap\n+ * @run driver compiler.vectorization.TestBufferVectorization bufferDirect\n+ * @run driver compiler.vectorization.TestBufferVectorization arrayView\n@@ -48,0 +48,1 @@\n+import jdk.test.lib.Platform;\n@@ -197,0 +198,18 @@\n+        } else if (args.length == 1) {\n+            verify_vectors(args[0]);\n+        } else {\n+            Test te = switch (args[0]) {\n+                case \"array\" -> new TestArray();\n+                case \"arrayOffset\" -> new TestArrayOffset(offset);\n+                case \"buffer\" -> new TestBuffer(buffer);\n+                case \"bufferHeap\" -> new TestBuffer(heap_buffer_byte_to_int);\n+                case \"bufferDirect\" -> new TestBuffer(direct_buffer_byte_to_int);\n+                case \"arrayView\" -> new TestArrayView();\n+                default -> throw new RuntimeException(\" Unknown test: \" + args[0]);\n+            };\n+\n+            te.init();\n+            for (int i = 0; i < ITER; i++) {\n+                te.run();\n+            }\n+            te.verify();\n@@ -199,33 +218,0 @@\n-        Test te;\n-        switch (args[0]) {\n-            case \"array\":\n-                te = new TestArray();\n-                break;\n-            case \"arrayOffset\":\n-                te = new TestArrayOffset(offset);\n-                break;\n-            case \"buffer\":\n-                te = new TestBuffer(buffer);\n-                break;\n-            case \"bufferHeap\":\n-                te = new TestBuffer(heap_buffer_byte_to_int);\n-                break;\n-            case \"bufferDirect\":\n-                te = new TestBuffer(direct_buffer_byte_to_int);\n-                break;\n-            case \"arrayView\":\n-                te = new TestArrayView();\n-                break;\n-            default:\n-                throw new RuntimeException(\" Unknown test: \" + args[0]);\n-        }\n-\n-        te.init();\n-        for (int i = 0; i < ITER; i++) {\n-            te.run();\n-        }\n-        te.verify();\n-\n-        if (args.length == 1) {\n-            verify_vectors(te, args[0]);\n-        }\n@@ -234,9 +220,1 @@\n-    static void verify_vectors(Test t, String testName) {\n-        if (testName.equals(\"bufferDirect\")) {\n-            return; \/\/ bufferDirect uses Unsafe memory accesses which are not vectorized currently\n-        }\n-\n-        if (testName.equals(\"bufferHeap\") && (arch.equals(\"x86\") || arch.equals(\"i386\"))) {\n-            return; \/\/ bufferHeap uses Long type for memory accesses which are not vectorized in 32-bit VM\n-        }\n-\n+    static void verify_vectors(String testName) {\n@@ -250,1 +228,1 @@\n-                                                       \"skip_verify\");\n+                                                       \"run\");\n@@ -255,0 +233,11 @@\n+\n+        out.shouldHaveExitValue(0);\n+\n+        if (testName.equals(\"bufferDirect\")) {\n+            return; \/\/ bufferDirect uses Unsafe memory accesses which are not vectorized currently\n+        }\n+\n+        if (testName.equals(\"bufferHeap\") && (Platform.is32bit())) {\n+            return; \/\/ bufferHeap uses Long type for memory accesses which are not vectorized in 32-bit VM\n+        }\n+\n@@ -259,1 +248,0 @@\n-        out.shouldHaveExitValue(0);\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestBufferVectorization.java","additions":38,"deletions":50,"binary":false,"changes":88,"status":"modified"}]}