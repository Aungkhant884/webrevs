{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,4 +94,0 @@\n-\n-            \/\/ We are not killed by the OOM killer.\n-            System.out.println(\"Not OOM killed\");\n-\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/MetricsMemoryTester.java","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -105,0 +105,15 @@\n+\n+        \/\/ Check whether swapping really works for this test\n+        DockerRunOptions preOpts =\n+                new DockerRunOptions(imageName, \"\/jdk\/bin\/java\", \"-version\");\n+        preOpts.addDockerOpts(\"--volume\", Utils.TEST_CLASSES + \":\/test-classes\/\")\n+                .addDockerOpts(\"--memory=\" + value)\n+                .addJavaOpts(\"-Xms\" + value)\n+                .addJavaOpts(\"-Xmx\" + value);\n+        OutputAnalyzer oa = DockerTestUtils.dockerRunJava(preOpts);\n+        String output = oa.getOutput();\n+        if (!output.contains(\"version\")) {\n+            System.out.println(\"Swapping doesn't work for this test.\");\n+            return;\n+        }\n+\n@@ -113,7 +128,5 @@\n-\n-        OutputAnalyzer oa = DockerTestUtils.dockerRunJava(opts);\n-        String output = oa.getOutput();\n-        if (output.contains(\"Not OOM killed\")) {\n-            if (!output.contains(\"Ignoring test\")) {\n-                oa.shouldHaveExitValue(0).shouldContain(\"TEST PASSED!!!\");\n-            }\n+        oa = DockerTestUtils.dockerRunJava(opts);\n+        output = oa.getOutput();\n+        if (output.contains(\"Ignoring test\")) {\n+            System.out.println(\"Ignored by the tester\");\n+            return;\n@@ -121,0 +134,1 @@\n+        oa.shouldHaveExitValue(0).shouldContain(\"TEST PASSED!!!\");\n","filename":"test\/jdk\/jdk\/internal\/platform\/docker\/TestDockerMemoryMetrics.java","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"}]}