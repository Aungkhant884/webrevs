{"files":[{"patch":"@@ -2586,1 +2586,0 @@\n-        assert(!Matcher::has_predicated_vectors(), \"should be\");\n","filename":"src\/hotspot\/share\/opto\/vectorIntrinsics.cpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import org.openjdk.jmh.infra.Blackhole;\n@@ -68,1 +67,1 @@\n-    public void microMaskLaneIsSetByte64_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte64_con() {\n@@ -77,1 +76,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -81,1 +80,1 @@\n-    public void microMaskLaneIsSetByte64_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte64_var() {\n@@ -90,1 +89,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -94,1 +93,1 @@\n-    public void microMaskLaneIsSetByte128_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte128_con() {\n@@ -103,1 +102,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -107,1 +106,1 @@\n-    public void microMaskLaneIsSetByte128_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte128_var() {\n@@ -116,1 +115,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -120,1 +119,1 @@\n-    public void microMaskLaneIsSetByte256_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte256_con() {\n@@ -129,1 +128,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -133,1 +132,1 @@\n-    public void microMaskLaneIsSetByte256_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte256_var() {\n@@ -142,1 +141,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -146,1 +145,1 @@\n-    public void microMaskLaneIsSetByte512_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte512_con() {\n@@ -155,1 +154,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -159,1 +158,1 @@\n-    public void microMaskLaneIsSetByte512_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetByte512_var() {\n@@ -168,1 +167,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -173,1 +172,1 @@\n-    public void microMaskLaneIsSetShort64_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort64_con() {\n@@ -178,1 +177,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -182,1 +181,1 @@\n-    public void microMaskLaneIsSetShort64_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort64_var() {\n@@ -187,1 +186,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -191,1 +190,1 @@\n-    public void microMaskLaneIsSetShort128_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort128_con() {\n@@ -200,1 +199,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -204,1 +203,1 @@\n-    public void microMaskLaneIsSetShort128_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort128_var() {\n@@ -213,1 +212,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -217,1 +216,1 @@\n-    public void microMaskLaneIsSetShort256_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort256_con() {\n@@ -226,1 +225,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -230,1 +229,1 @@\n-    public void microMaskLaneIsSetShort256_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort256_var() {\n@@ -239,1 +238,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -243,1 +242,1 @@\n-    public void microMaskLaneIsSetShort512_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort512_con() {\n@@ -252,1 +251,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -256,1 +255,1 @@\n-    public void microMaskLaneIsSetShort512_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetShort512_var() {\n@@ -265,1 +264,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -270,1 +269,1 @@\n-    public void microMaskLaneIsSetInt64_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt64_con() {\n@@ -273,1 +272,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -277,1 +276,1 @@\n-    public void microMaskLaneIsSetInt64_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt64_var() {\n@@ -280,1 +279,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -284,1 +283,1 @@\n-    public void microMaskLaneIsSetInt128_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt128_con() {\n@@ -289,1 +288,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -293,1 +292,1 @@\n-    public void microMaskLaneIsSetInt128_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt128_var() {\n@@ -298,1 +297,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -302,1 +301,1 @@\n-    public void microMaskLaneIsSetInt256_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt256_con() {\n@@ -311,1 +310,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -315,1 +314,1 @@\n-    public void microMaskLaneIsSetInt256_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt256_var() {\n@@ -324,1 +323,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -328,1 +327,1 @@\n-    public void microMaskLaneIsSetInt512_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt512_con() {\n@@ -337,1 +336,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -341,1 +340,1 @@\n-    public void microMaskLaneIsSetInt512_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetInt512_var() {\n@@ -350,1 +349,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -355,1 +354,1 @@\n-    public void microMaskLaneIsSetLong64_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong64_con() {\n@@ -357,1 +356,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -361,1 +360,1 @@\n-    public void microMaskLaneIsSetLong64_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong64_var() {\n@@ -363,1 +362,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -367,1 +366,1 @@\n-    public void microMaskLaneIsSetLong128_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong128_con() {\n@@ -370,1 +369,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -374,1 +373,1 @@\n-    public void microMaskLaneIsSetLong128_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong128_var() {\n@@ -377,1 +376,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -381,1 +380,1 @@\n-    public void microMaskLaneIsSetLong256_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong256_con() {\n@@ -386,1 +385,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -390,1 +389,1 @@\n-    public void microMaskLaneIsSetLong256_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong256_var() {\n@@ -395,1 +394,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -399,1 +398,1 @@\n-    public void microMaskLaneIsSetLong512_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong512_con() {\n@@ -408,1 +407,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -412,1 +411,1 @@\n-    public void microMaskLaneIsSetLong512_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetLong512_var() {\n@@ -421,1 +420,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -426,1 +425,1 @@\n-    public void microMaskLaneIsSetFloat64_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat64_con() {\n@@ -429,1 +428,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -433,1 +432,1 @@\n-    public void microMaskLaneIsSetFloat64_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat64_var() {\n@@ -436,1 +435,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -440,1 +439,1 @@\n-    public void microMaskLaneIsSetFloat128_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat128_con() {\n@@ -445,1 +444,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -449,1 +448,1 @@\n-    public void microMaskLaneIsSetFloat128_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat128_var() {\n@@ -454,1 +453,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -458,1 +457,1 @@\n-    public void microMaskLaneIsSetFloat256_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat256_con() {\n@@ -467,1 +466,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -471,1 +470,1 @@\n-    public void microMaskLaneIsSetFloat256_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat256_var() {\n@@ -480,1 +479,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -484,1 +483,1 @@\n-    public void microMaskLaneIsSetFloat512_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat512_con() {\n@@ -493,1 +492,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -497,1 +496,1 @@\n-    public void microMaskLaneIsSetFloat512_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetFloat512_var() {\n@@ -506,1 +505,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -511,1 +510,1 @@\n-    public void microMaskLaneIsSetDouble64_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble64_con() {\n@@ -513,1 +512,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -517,1 +516,1 @@\n-    public void microMaskLaneIsSetDouble64_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble64_var() {\n@@ -519,1 +518,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -523,1 +522,1 @@\n-    public void microMaskLaneIsSetDouble128_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble128_con() {\n@@ -526,1 +525,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -530,1 +529,1 @@\n-    public void microMaskLaneIsSetDouble128_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble128_var() {\n@@ -533,1 +532,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -537,1 +536,1 @@\n-    public void microMaskLaneIsSetDouble256_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble256_con() {\n@@ -542,1 +541,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -546,1 +545,1 @@\n-    public void microMaskLaneIsSetDouble256_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble256_var() {\n@@ -551,1 +550,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -555,1 +554,1 @@\n-    public void microMaskLaneIsSetDouble512_con(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble512_con() {\n@@ -564,1 +563,1 @@\n-        bh.consume(res);\n+        return res;\n@@ -568,1 +567,1 @@\n-    public void microMaskLaneIsSetDouble512_var(Blackhole bh) {\n+    public boolean[] microMaskLaneIsSetDouble512_var() {\n@@ -577,1 +576,1 @@\n-        bh.consume(res);\n+        return res;\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/vector\/VectorExtractBenchmark.java","additions":96,"deletions":97,"binary":false,"changes":193,"status":"modified"}]}