{"files":[{"patch":"@@ -374,25 +374,0 @@\n-     * Returns a stream of matching Providers.\n-     *\n-     * @param category  {@link RandomGenerator} sub-interface class to filter\n-     * @param <T>       {@link RandomGenerator} sub-interface return type\n-     *\n-     * RandomGenerators that are marked as deprecated or are not properly configured are not included in the result.\n-     *\n-     * @implSpec Availability is determined by RandomGeneratorFactory using the service provider API\n-     * to locate implementations of the RandomGenerator interface.\n-     *\n-     * @return Stream of matching {@link RandomGeneratorFactory RandomGeneratorFactory(s)}.\n-     *\n-     * @hidden\n-     *\/\n-    public static <T extends RandomGenerator> Stream<RandomGeneratorFactory<T>> all(Class<T> category) {\n-        Map<String, Provider<? extends RandomGenerator>> fm = getFactoryMap();\n-        return fm.values()\n-                 .stream()\n-                 .filter(p -> isSubclass(category, p) &&\n-                              !p.type().isAnnotationPresent(Deprecated.class) &&\n-                              p.type().isAnnotationPresent(RandomGeneratorProperties.class))\n-                 .map(RandomGeneratorFactory::new);\n-    }\n-\n-    \/**\n","filename":"src\/java.base\/share\/classes\/java\/util\/random\/RandomGeneratorFactory.java","additions":0,"deletions":25,"binary":false,"changes":25,"status":"modified"}]}