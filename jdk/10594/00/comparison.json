{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -212,3 +212,0 @@\n-            \/\/\n-            \/\/ PKCS11 does not support GCM mode as the author made the comment,\n-            \/\/ so the macBits is unlikely to be zero. It's only a place holder.\n@@ -221,0 +218,2 @@\n+                token.p11.C_DestroyObject(session.id(), out.hClientMacSecret);\n+                token.p11.C_DestroyObject(session.id(), out.hServerMacSecret);\n@@ -232,0 +231,2 @@\n+                assert out.hClientKey == 0;\n+                assert out.hServerKey == 0;\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11TlsKeyMaterialGenerator.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2010, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -64,0 +64,1 @@\n+        String hashAlgorithm = null; \/\/ TLS1.2+ only\n@@ -97,0 +98,2 @@\n+            } else if (line.startsWith(\"km-hashalg:\")) {\n+                hashAlgorithm = data;\n@@ -122,1 +125,3 @@\n-                    KeyGenerator.getInstance(\"SunTlsKeyMaterial\", provider);\n+                        KeyGenerator.getInstance(minor == 3 ?\n+                                \"SunTls12KeyMaterial\" :\n+                                \"SunTlsKeyMaterial\", provider);\n@@ -125,0 +130,20 @@\n+                int prfHashLength, prfBlockSize;\n+\n+                if (hashAlgorithm != null) {\n+                    switch (hashAlgorithm) {\n+                        case \"SHA-256\":\n+                            prfHashLength = 32;\n+                            prfBlockSize = 64;\n+                            break;\n+                        case \"SHA-384\":\n+                            prfHashLength = 48;\n+                            prfBlockSize = 128;\n+                            break;\n+                        default:\n+                            throw new RuntimeException(\"Unexpected hashalg: \" +\n+                                    hashAlgorithm);\n+                    }\n+                } else {\n+                    prfHashLength = -1;\n+                    prfBlockSize = -1;\n+                }\n@@ -129,1 +154,1 @@\n-                        null, -1, -1);\n+                        hashAlgorithm, prfHashLength, prfBlockSize);\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/TestKeyMaterial.java","additions":28,"deletions":3,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -3649,0 +3649,34 @@\n+km-master:  f1:05:15:45:33:be:50:d6:88:0b:03:bb:88:9b:ef:d4:3b:98:aa:40:13:71:3c:1c:d9:df:34:c7:50:75:ad:5c:0a:d4:fe:ed:d5:58:6b:ff:2b:ce:c6:12:bc:6b:7e:dc\n+km-major:   3\n+km-minor:   3\n+km-crandom: 42:f3:36:8e:9d:c9:69:3e:c1:8a:38:d3:e0:ec:2b:58:c2:e0:0c:de:4f:f3:af:51:d2:5c:bc:b2:c3:3b:1e:56\n+km-srandom: 42:f3:36:8e:fa:fd:23:3e:fd:f9:bc:88:3c:98:93:f3:c3:1d:9c:2a:4a:3b:02:a7:40:d4:64:04:59:e9:65:97\n+km-cipalg:  AES\n+km-hashalg: SHA-256\n+km-keylen:  16\n+km-explen:  0\n+km-ivlen:   4\n+km-maclen:  0\n+km-ccipkey: 60:7a:45:a9:6e:76:58:ea:d9:44:c5:25:f8:92:f1:26\n+km-scipkey: 42:c0:ed:75:a2:51:21:7c:50:74:9d:78:9a:f7:35:2b\n+km-civ:     a1:3c:3e:4a\n+km-siv:     85:ab:ee:70\n+km-cmackey: (null)\n+km-smackey: (null)\n+km-master:  f1:05:15:45:33:be:50:d6:88:0b:03:bb:88:9b:ef:d4:3b:98:aa:40:13:71:3c:1c:d9:df:34:c7:50:75:ad:5c:0a:d4:fe:ed:d5:58:6b:ff:2b:ce:c6:12:bc:6b:7e:dc\n+km-major:   3\n+km-minor:   3\n+km-crandom: 42:f3:36:8e:9d:c9:69:3e:c1:8a:38:d3:e0:ec:2b:58:c2:e0:0c:de:4f:f3:af:51:d2:5c:bc:b2:c3:3b:1e:56\n+km-srandom: 42:f3:36:8e:fa:fd:23:3e:fd:f9:bc:88:3c:98:93:f3:c3:1d:9c:2a:4a:3b:02:a7:40:d4:64:04:59:e9:65:97\n+km-cipalg:  AES\n+km-hashalg: SHA-384\n+km-keylen:  32\n+km-explen:  0\n+km-ivlen:   4\n+km-maclen:  0\n+km-ccipkey: 3c:03:17:61:1e:88:4a:aa:01:4c:ac:6c:f8:bb:91:c3:0e:ec:57:c7:bf:07:ff:eb:49:22:f9:80:12:64:72:2a\n+km-scipkey: f8:00:8e:b2:dc:25:98:f1:97:00:55:28:60:a3:65:da:42:89:18:bb:40:94:53:d2:75:2a:29:e5:aa:94:1d:7a\n+km-civ:     24:02:76:6f\n+km-siv:     3b:6d:33:5a\n+km-cmackey: (null)\n+km-smackey: (null)\n","filename":"test\/jdk\/com\/sun\/crypto\/provider\/TLS\/keymatdata.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6316539 8136355\n+ * @bug 6316539 8136355 8294906\n@@ -80,0 +80,1 @@\n+            String hashAlgorithm = null; \/\/ TLS1.2+ only\n@@ -113,0 +114,2 @@\n+                } else if (line.startsWith(\"km-hashalg:\")) {\n+                    hashAlgorithm = data;\n@@ -138,1 +141,3 @@\n-                        KeyGenerator.getInstance(\"SunTlsKeyMaterial\", provider);\n+                        KeyGenerator.getInstance(minor == 3 ?\n+                                \"SunTls12KeyMaterial\" :\n+                                \"SunTlsKeyMaterial\", provider);\n@@ -145,1 +150,1 @@\n-                        null, -1, -1);\n+                        hashAlgorithm, -1, -1);\n","filename":"test\/jdk\/sun\/security\/pkcs11\/tls\/TestKeyMaterial.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -3649,0 +3649,34 @@\n+km-master:  f1:05:15:45:33:be:50:d6:88:0b:03:bb:88:9b:ef:d4:3b:98:aa:40:13:71:3c:1c:d9:df:34:c7:50:75:ad:5c:0a:d4:fe:ed:d5:58:6b:ff:2b:ce:c6:12:bc:6b:7e:dc\n+km-major:   3\n+km-minor:   3\n+km-crandom: 42:f3:36:8e:9d:c9:69:3e:c1:8a:38:d3:e0:ec:2b:58:c2:e0:0c:de:4f:f3:af:51:d2:5c:bc:b2:c3:3b:1e:56\n+km-srandom: 42:f3:36:8e:fa:fd:23:3e:fd:f9:bc:88:3c:98:93:f3:c3:1d:9c:2a:4a:3b:02:a7:40:d4:64:04:59:e9:65:97\n+km-cipalg:  AES\n+km-hashalg: SHA-256\n+km-keylen:  16\n+km-explen:  0\n+km-ivlen:   4\n+km-maclen:  0\n+km-ccipkey: 60:7a:45:a9:6e:76:58:ea:d9:44:c5:25:f8:92:f1:26\n+km-scipkey: 42:c0:ed:75:a2:51:21:7c:50:74:9d:78:9a:f7:35:2b\n+km-civ:     a1:3c:3e:4a\n+km-siv:     85:ab:ee:70\n+km-cmackey: (null)\n+km-smackey: (null)\n+km-master:  f1:05:15:45:33:be:50:d6:88:0b:03:bb:88:9b:ef:d4:3b:98:aa:40:13:71:3c:1c:d9:df:34:c7:50:75:ad:5c:0a:d4:fe:ed:d5:58:6b:ff:2b:ce:c6:12:bc:6b:7e:dc\n+km-major:   3\n+km-minor:   3\n+km-crandom: 42:f3:36:8e:9d:c9:69:3e:c1:8a:38:d3:e0:ec:2b:58:c2:e0:0c:de:4f:f3:af:51:d2:5c:bc:b2:c3:3b:1e:56\n+km-srandom: 42:f3:36:8e:fa:fd:23:3e:fd:f9:bc:88:3c:98:93:f3:c3:1d:9c:2a:4a:3b:02:a7:40:d4:64:04:59:e9:65:97\n+km-cipalg:  AES\n+km-hashalg: SHA-384\n+km-keylen:  32\n+km-explen:  0\n+km-ivlen:   4\n+km-maclen:  0\n+km-ccipkey: 3c:03:17:61:1e:88:4a:aa:01:4c:ac:6c:f8:bb:91:c3:0e:ec:57:c7:bf:07:ff:eb:49:22:f9:80:12:64:72:2a\n+km-scipkey: f8:00:8e:b2:dc:25:98:f1:97:00:55:28:60:a3:65:da:42:89:18:bb:40:94:53:d2:75:2a:29:e5:aa:94:1d:7a\n+km-civ:     24:02:76:6f\n+km-siv:     3b:6d:33:5a\n+km-cmackey: (null)\n+km-smackey: (null)\n","filename":"test\/jdk\/sun\/security\/pkcs11\/tls\/keymatdata.txt","additions":34,"deletions":0,"binary":false,"changes":34,"status":"modified"}]}