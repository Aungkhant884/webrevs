{"files":[{"patch":"@@ -214,2 +214,4 @@\n-        } else if (addSlash && decoded.length() == str.length() + 1\n-                && decoded.endsWith(\"\/\")) {\n+        } else if (addSlash\n+                && decoded.length() == str.length() + 1\n+                && decoded.startsWith(str)\n+                && decoded.endsWith(\"\/\") ) {\n","filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -135,0 +135,32 @@\n+    @Test(dataProvider = \"unicode-charsets\")\n+    public void sameHashAndLengthSlashLessDirLookup(String charsetName) throws IOException {\n+\n+        \/\/ Two directory names with colliding hash codes and same length\n+        String one =\"entry-65323-name--5113477560869890044\\u2f2f\/\";\n+        String two = \"entry-16430-name--2415648292541425091\\u2f2f\/\";\n+\n+        \/\/ Create a ZIP with the two entries\n+        Charset charset = Charset.forName(charsetName);\n+        Path zip = Path.of(\"hash-collision-slashmatch-utf16.zip\");\n+        try (ZipOutputStream z = new ZipOutputStream(Files.newOutputStream(zip), charset)) {\n+\n+            ZipEntry first = new ZipEntry(one);\n+            first.setComment(\"Entry one\");\n+            z.putNextEntry(first);\n+\n+            ZipEntry second = new ZipEntry(two);\n+            second.setComment(\"Entry two\");\n+            z.putNextEntry(second);\n+        }\n+\n+        \/\/ Assert that \"slashless\" lookups returns correct entry,\n+        \/\/ even when when hashes collide and lengths are equal\n+        try (ZipFile z = new ZipFile(zip.toFile(), charset)) {\n+\n+            ZipEntry second = z.getEntry(two.substring(0, two.length() - 1));\n+            assertEquals(second.getComment(), \"Entry two\");\n+\n+            ZipEntry first = z.getEntry(one.substring(0, one.length() - 1));\n+            assertEquals(first.getComment(), \"Entry one\");\n+        }\n+    }\n@@ -268,1 +300,1 @@\n-            ze.setTime(System.currentTimeMillis());\n+            ze.setTime(1675862371399L);\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/TestZipFileEncodings.java","additions":33,"deletions":1,"binary":false,"changes":34,"status":"modified"}]}