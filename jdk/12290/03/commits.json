[{"commit":{"message":"Merge branch 'master' into getentrypos-prefixmatch"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"06047377f76c9b866d91df04ff5198b19337bf6f"},{"commit":{"message":"Fix incorrect offset for the CEN \"length of extra field\". Fixed spelling of \"invalid\"."},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipFile\/InvalidBytesInEntryNameOrComment.java"}],"sha":"2c5e7c2c93abce486eaa9baec51813b2cccf2239"},{"commit":{"message":"Spelling fix in test data for non-ascii latin1 string"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipFile\/TestZipFileEncodings.java"}],"sha":"d0c123253a4c8e2a65fe394a90beb6c7db1a37cc"},{"commit":{"message":"Replace new shared secret with using getBytesNoRepl in UTF8ZipCoder.compare. Add a test case for UTF-8 encoded entry name which is latin1, but not ASCII"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java"},{"filename":"test\/jdk\/java\/util\/zip\/ZipFile\/TestZipFileEncodings.java"}],"sha":"3ca98e214db75ff389fa9f3c26a03356b5a8cd28"},{"commit":{"message":"Rename test to InvalidBytesInEntryNameOrComment"},"files":[{"filename":"test\/jdk\/java\/util\/zip\/ZipFile\/InvalidBytesInEntryNameOrComment.java"}],"sha":"301a4c5ebad865f9fead57d575922511824c1c25"},{"commit":{"message":"Adjust whitespace"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"e0c29bd2d532f8836635c94354117e26d3ba66bf"},{"commit":{"message":"Some minor improvements to code comments"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"08320fe0d140e738e79f7e401109de4bb5f044f4"},{"commit":{"message":"Micros seem to indicate that the range checks in Arrays.mismatch might have as much as 5% regression"},"files":[],"sha":"aab08c51b381fdab50052c46599410bd911c5f81"},{"commit":{"message":"Move String\/byte[] comparison into ZipCoder. Change the default implementation to decode to string for comparison instead of encoding to bytes, this seems safer. Revert some changes from previous commits to parameters in the hasTrailingSlash method."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"682d571316eaca976fe8de085f13b40e75fffc16"},{"commit":{"message":"ByteBuffers for reading ZIP files must be little-endian"},"files":[],"sha":"92a0841682797e1e0c1d86597223aec18b2e74b0"},{"commit":{"message":"Produce template ZIP as a byte[] instead of writing it to disk"},"files":[],"sha":"5ee69b4faa65ad2faecbb2c1f5b1ddd3ce288b82"},{"commit":{"message":"Improve summary for the test"},"files":[],"sha":"f2a78675b62fe2a89c2f1f7e0f6fec5546354cb8"},{"commit":{"message":"Simplify comment for \"name\/\" match"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"0699dee0e6cfecf9fe65d6a06018044abf6b9203"},{"commit":{"message":"Revert accidental change to comment"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"eeeaacea8f5a518a2fa5e7a12abac69acc27356f"},{"commit":{"message":"Adding test InvalidEntryNameOrCommentEncoding which validates that ZipFile rejects opening a ZIP with invalid UTF-8 byte sequences in its name or comment fields"},"files":[],"sha":"e58a3ff0356d30538c30d4685c7ae842954b9029"},{"commit":{"message":"The try\/catch for IllegalArgumentException is redundant since this is checked opening time by initCEN"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"67714074273880daaa27aab17d3f1c3bf55d1b32"},{"commit":{"message":"Make getEntryPos non-recursive. No regression for exact matches, ~30% win for \"name\/\" matches."},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"a72a9ca9aacfdb9b6db8a29627783d77cd183880"},{"commit":{"message":"Use Arrays.mismatch instead of ArraySupport, allowing for cleaner code and API with a ~3% regression on getEntryHit"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"448b4d41c298a7173d1f97294647a4da8451e438"},{"commit":{"message":"Update copyright years"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"79247e8953e29228664d9f9cd2ee93b01a91da91"},{"commit":{"message":"Avoid decoding the entry name string when comparing names in getEntryPos for the common case that both the name and the entry name are encoded in LATIN1 compatible UTF-8"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipCoder.java"},{"filename":"src\/java.base\/share\/classes\/java\/util\/zip\/ZipFile.java"}],"sha":"d7813a2b397fb174ebf25c22418d54d5332d4966"}]