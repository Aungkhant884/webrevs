{"files":[{"patch":"@@ -42,0 +42,1 @@\n+import static org.testng.Assert.expectThrows;\n@@ -62,1 +63,1 @@\n-    private static final String BAD_ENTRY_NAME_OR_COMMENT = \"invalid CEN header \\\\(bad entry name or comment\\\\)\";\n+    private static final String BAD_ENTRY_NAME_OR_COMMENT = \"invalid CEN header (bad entry name or comment)\";\n@@ -87,2 +88,1 @@\n-    @Test(expectedExceptions = ZipException.class,\n-            expectedExceptionsMessageRegExp = BAD_ENTRY_NAME_OR_COMMENT)\n+    @Test\n@@ -90,3 +90,4 @@\n-        try (ZipFile zf = new ZipFile(invalidName.toFile())) {\n-            \/\/ Should throw ZipException\n-        }\n+        ZipException ex = expectThrows(ZipException.class, () -> {\n+            openZipFile(invalidName);\n+        });\n+        assertEquals(ex.getMessage(), BAD_ENTRY_NAME_OR_COMMENT);\n@@ -100,5 +101,10 @@\n-    @Test(expectedExceptions = ZipException.class,\n-            expectedExceptionsMessageRegExp = BAD_ENTRY_NAME_OR_COMMENT)\n-    public void shouldIgnoreInvalidComment() throws IOException {\n-        try (ZipFile zf = new ZipFile(invalidComment.toFile())) {\n-            \/\/ Should throw ZipException\n+    @Test\n+    public void shouldRejectInvalidComment() throws IOException {\n+        ZipException ex = expectThrows(ZipException.class, () -> {\n+            openZipFile(invalidComment);\n+        });\n+        assertEquals(ex.getMessage(), BAD_ENTRY_NAME_OR_COMMENT);\n+    }\n+\n+    private void openZipFile(Path zip) throws IOException {\n+        try (ZipFile zf = new ZipFile(zip.toFile())) {\n","filename":"test\/jdk\/java\/util\/zip\/ZipFile\/InvalidBytesInEntryNameOrComment.java","additions":17,"deletions":11,"binary":false,"changes":28,"status":"modified"}]}