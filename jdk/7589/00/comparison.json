{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,0 +113,2 @@\n+                    \/\/ The predicate below tries to recognise failures.  On a port clash, the only line it sees is, e.g.:\n+                    \/\/ Error: Exception thrown by the agent : java.rmi.server.ExportException: Port already in use: 46481; nested exception is:\n@@ -121,1 +123,1 @@\n-                                bindError.set(line.toLowerCase().contains(\"bindexception\"));\n+                                bindError.set(line.toLowerCase().contains(\"port already in use\"));\n@@ -167,0 +169,1 @@\n+    private static final int FREE_PORT_ATTEMPTS = 10;\n@@ -169,1 +172,15 @@\n-        int port = Utils.getFreePort();\n+        for (int i = 1; i <= FREE_PORT_ATTEMPTS; i++) {\n+            int port = Utils.getFreePort();\n+            System.out.println(\"Attempting testDefaultAgent(\" + propertyFile + \") with port: \" + port);\n+            try {\n+                testDefaultAgent(propertyFile, port);\n+            } catch (BindException b) {\n+                \/\/ Retry with new port.  Throw if last iteration:\n+                if (i == FREE_PORT_ATTEMPTS) {\n+                    throw(b);\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void testDefaultAgent(String propertyFile, int port) throws Exception {\n@@ -238,31 +255,7 @@\n-        boolean retry = false;\n-        do {\n-            try {\n-                \/\/ filter DefaultAgentFilterTest$MyTestObject\n-                testDefaultAgent(\"mgmt1.properties\");\n-                System.out.println(\"----\\tTest FAILED !!\");\n-                throw new RuntimeException(\"---\" + DefaultAgentFilterTest.class.getName() + \" - No exception reported\");\n-            } catch (Exception ex) {\n-                if (ex instanceof InvocationTargetException) {\n-                    if (ex.getCause() instanceof BindException\n-                            || ex.getCause() instanceof java.rmi.ConnectException) {\n-                        System.out.println(\"Failed to allocate ports. Retrying ...\");\n-                        retry = true;\n-                    }\n-                } else if (ex instanceof InvalidClassException) {\n-                    System.out.println(\"----\\tTest PASSED !!\");\n-                } else if (ex instanceof UnmarshalException\n-                        && ((UnmarshalException) ex).getCause() instanceof InvalidClassException) {\n-                    System.out.println(\"----\\tTest PASSED !!\");\n-                } else {\n-                    System.out.println(ex);\n-                    System.out.println(\"----\\tTest FAILED !!\");\n-                    throw ex;\n-                }\n-            }\n-        } while (retry);\n-        retry = false;\n-        do {\n-            try {\n-                \/\/ filter non-existent class\n-                testDefaultAgent(\"mgmt2.properties\");\n+        try {\n+            \/\/ filter DefaultAgentFilterTest$MyTestObject\n+            testDefaultAgent(\"mgmt1.properties\");\n+            System.out.println(\"----\\tTest FAILED !!\");\n+            throw new RuntimeException(\"---\" + DefaultAgentFilterTest.class.getName() + \" - No exception reported\");\n+        } catch (Exception ex) {\n+            if (ex instanceof InvalidClassException) {\n@@ -270,12 +263,7 @@\n-            } catch (Exception ex) {\n-                if (ex instanceof InvocationTargetException) {\n-                    if (ex.getCause() instanceof BindException\n-                            || ex.getCause() instanceof java.rmi.ConnectException) {\n-                        System.out.println(\"Failed to allocate ports. Retrying ...\");\n-                        retry = true;\n-                    }\n-                } else {\n-                    System.out.println(ex);\n-                    System.out.println(\"----\\tTest FAILED !!\");\n-                    throw ex;\n-                }\n+            } else if (ex instanceof UnmarshalException\n+                    && ((UnmarshalException) ex).getCause() instanceof InvalidClassException) {\n+                System.out.println(\"----\\tTest PASSED !!\");\n+            } else {\n+                System.out.println(ex);\n+                System.out.println(\"----\\tTest FAILED !!\");\n+                throw ex;\n@@ -283,2 +271,10 @@\n-        } while (retry);\n-\n+        }\n+        try {\n+            \/\/ filter non-existent class\n+            testDefaultAgent(\"mgmt2.properties\");\n+            System.out.println(\"----\\tTest PASSED !!\");\n+        } catch (Exception ex) {\n+            System.out.println(ex);\n+            System.out.println(\"----\\tTest FAILED !!\");\n+            throw ex;\n+        }\n","filename":"test\/jdk\/javax\/management\/remote\/mandatory\/connection\/DefaultAgentFilterTest.java","additions":44,"deletions":48,"binary":false,"changes":92,"status":"modified"}]}