{"files":[{"patch":"@@ -4450,23 +4450,2 @@\n-instruct reductionL(rRegL dst, rRegL src1, vec src2, vec vtmp1, vec vtmp2) %{\n-  predicate(vector_element_basic_type(n->in(2)) == T_LONG &&\n-            vector_length(n->in(2)) < 8); \/\/ src2\n-  match(Set dst (AddReductionVL src1 src2));\n-  match(Set dst (MulReductionVL src1 src2));\n-  match(Set dst (AndReductionV  src1 src2));\n-  match(Set dst ( OrReductionV  src1 src2));\n-  match(Set dst (XorReductionV  src1 src2));\n-  match(Set dst (MinReductionV  src1 src2));\n-  match(Set dst (MaxReductionV  src1 src2));\n-  effect(TEMP vtmp1, TEMP vtmp2);\n-  format %{ \"vector_reduction_long $dst,$src1,$src2 ; using $vtmp1, $vtmp2 as TEMP\" %}\n-  ins_encode %{\n-    int opcode = this->ideal_Opcode();\n-    int vlen = vector_length(this, $src2);\n-    __ reduceL(opcode, vlen, $dst$$Register, $src1$$Register, $src2$$XMMRegister, $vtmp1$$XMMRegister, $vtmp2$$XMMRegister);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct reduction8L(rRegL dst, rRegL src1, legVec src2, legVec vtmp1, legVec vtmp2) %{\n-  predicate(vector_element_basic_type(n->in(2)) == T_LONG &&\n-            vector_length(n->in(2)) == 8); \/\/ src2\n+instruct reductionL(rRegL dst, rRegL src1, legVec src2, legVec vtmp1, legVec vtmp2) %{\n+  predicate(vector_element_basic_type(n->in(2)) == T_LONG); \/\/ src2\n@@ -4582,22 +4561,2 @@\n-instruct reductionB(rRegI dst, rRegI src1, vec src2, vec vtmp1, vec vtmp2) %{\n-  predicate(vector_element_basic_type(n->in(2)) == T_BYTE &&\n-            vector_length(n->in(2)) <= 32); \/\/ src2\n-  match(Set dst (AddReductionVI src1 src2));\n-  match(Set dst (AndReductionV  src1 src2));\n-  match(Set dst ( OrReductionV  src1 src2));\n-  match(Set dst (XorReductionV  src1 src2));\n-  match(Set dst (MinReductionV  src1 src2));\n-  match(Set dst (MaxReductionV  src1 src2));\n-  effect(TEMP vtmp1, TEMP vtmp2);\n-  format %{ \"vector_reduction_byte $dst,$src1,$src2 ; using $vtmp1, $vtmp2 as TEMP\" %}\n-  ins_encode %{\n-    int opcode = this->ideal_Opcode();\n-    int vlen = vector_length(this, $src2);\n-    __ reduceB(opcode, vlen, $dst$$Register, $src1$$Register, $src2$$XMMRegister, $vtmp1$$XMMRegister, $vtmp2$$XMMRegister);\n-  %}\n-  ins_pipe( pipe_slow );\n-%}\n-\n-instruct reduction64B(rRegI dst, rRegI src1, legVec src2, legVec vtmp1, legVec vtmp2) %{\n-  predicate(vector_element_basic_type(n->in(2)) == T_BYTE &&\n-            vector_length(n->in(2)) == 64); \/\/ src2\n+instruct reductionB(rRegI dst, rRegI src1, legVec src2, legVec vtmp1, legVec vtmp2) %{\n+  predicate(vector_element_basic_type(n->in(2)) == T_BYTE); \/\/ src2\n@@ -5455,1 +5414,1 @@\n-instruct mul2L_reg(vec dst, vec src2, vec tmp) %{\n+instruct mul2L_reg(vec dst, vec src2, legVec tmp) %{\n@@ -5481,1 +5440,1 @@\n-instruct vmul4L_reg_avx(vec dst, vec src1, vec src2, vec tmp, vec tmp1) %{\n+instruct vmul4L_reg_avx(vec dst, vec src1, vec src2, legVec tmp, legVec tmp1) %{\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":6,"deletions":47,"binary":false,"changes":53,"status":"modified"}]}