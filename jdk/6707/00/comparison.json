{"files":[{"patch":"@@ -26,1 +26,0 @@\n-import java.io.IOException;\n@@ -28,0 +27,1 @@\n+import java.io.IOException;\n@@ -29,0 +29,2 @@\n+import java.io.RandomAccessFile;\n+import java.nio.ByteBuffer;\n@@ -46,0 +48,1 @@\n+import static java.nio.file.StandardOpenOption.*;\n@@ -146,3 +149,15 @@\n-                \/\/ writing 3 GB of random bytes into source file\n-                for (int i = 0; i < NUM_WRITES; i++)\n-                    Files.write(sourceFile, createRandomBytes(BYTES_PER_WRITE, 0), StandardOpenOption.APPEND);\n+                \/\/ create (hopefully sparse) file less than 2GB in size\n+                final long initLen = (2*1024 - 1)*BYTES_PER_WRITE;\n+                try (RandomAccessFile raf =\n+                    new RandomAccessFile(sourceFile.toFile(), \"rw\")) {\n+                    raf.setLength(initLen);\n+                }\n+                \/\/ fill the remainder of the file with random bytes\n+                try (FileChannel fc = FileChannel.open(sourceFile, WRITE, APPEND);) {\n+                    int nw = (int)(NUM_WRITES - initLen\/BYTES_PER_WRITE);\n+                    for (int i = 0; i < nw; i++) {\n+                        ByteBuffer src =\n+                            ByteBuffer.wrap(createRandomBytes(BYTES_PER_WRITE, 0));\n+                        fc.write(src);\n+                    }\n+                }\n","filename":"test\/jdk\/java\/nio\/channels\/Channels\/TransferTo.java","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"}]}