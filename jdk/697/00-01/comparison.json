{"files":[{"patch":"@@ -35,2 +35,2 @@\n-  T*       _next;\n-  T* const _end;\n+  const T*       _next;\n+  const T* const _end;\n@@ -42,2 +42,2 @@\n-  ZArrayIteratorImpl(T* array, size_t length);\n-  ZArrayIteratorImpl(ZArray<T>* array);\n+  ZArrayIteratorImpl(const T* array, size_t length);\n+  ZArrayIteratorImpl(const ZArray<T>* array);\n","filename":"src\/hotspot\/share\/gc\/z\/zArray.hpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n-  T* old_next = Atomic::load(&_next);\n+  const T* old_next = Atomic::load(&_next);\n@@ -51,2 +51,2 @@\n-    T* const new_next = old_next + 1;\n-    T* const prev_next = Atomic::cmpxchg(&_next, old_next, new_next);\n+    const T* const new_next = old_next + 1;\n+    const T* const prev_next = Atomic::cmpxchg(&_next, old_next, new_next);\n@@ -63,1 +63,1 @@\n-inline ZArrayIteratorImpl<T, Parallel>::ZArrayIteratorImpl(T* array, size_t length) :\n+inline ZArrayIteratorImpl<T, Parallel>::ZArrayIteratorImpl(const T* array, size_t length) :\n@@ -68,1 +68,1 @@\n-inline ZArrayIteratorImpl<T, Parallel>::ZArrayIteratorImpl(ZArray<T>* array) :\n+inline ZArrayIteratorImpl<T, Parallel>::ZArrayIteratorImpl(const ZArray<T>* array) :\n","filename":"src\/hotspot\/share\/gc\/z\/zArray.inline.hpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"}]}