[{"commit":{"message":"Merge branch 'openjdk:master' into JDK-8294194"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"}],"sha":"01bcc4e47974d418fb7b7d8c57b87cd11411267e"},{"commit":{"message":"Merge branch 'openjdk:master' into JDK-8294194"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"}],"sha":"dee5d0f8d1acca5f0d4345b1eb23bc510e863608"},{"commit":{"message":"Merge branch 'openjdk:master' into JDK-8294194"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestBitShuffleOpers.java"}],"sha":"a7484586be2f4a0781f2f6c51675cb186951b1cb"},{"commit":{"message":"Update src\/hotspot\/cpu\/aarch64\/aarch64.ad\r\n\r\nCorrect slight formatting error.\n\nCo-authored-by: Eric Liu <eric.c.liu@arm.com>"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"}],"sha":"8b13dabbab32d9fb89e11eedf5612cf3bd41a33e"},{"commit":{"message":"8294194: Create intrinsics compress and expand\n\nThe java.lang.Long and java.lang.Integer classes have the methods\n\"compress(i, mask)\" and \"expand(i, mask)\". They compile down to 236\nassembler instructions. There are no scalar instructions that perform\nthe equivalent functions on aarch64, instead the intrinsics can be\nimplemented with vector instructions included in SVE2; expand with BDEP,\ncompress with BEXT.\n\nOnly the first lane of each vector will be used, two MOV instructions\nwill move the inputs from GPRs into temporary vector registers, and\nanother to do the reverse for the result. Autovectorization for this\nfunctionality is\/will be implemented separately.\n\nRunning on an SVE2 enabled system, I ran the following benchmarks:\n\n        org.openjdk.bench.java.lang.Integers\n        org.openjdk.bench.java.lang.Longs\n\nThe time for each operation reduced to 56% to 72% of the original\nrun time:\n\nBenchmark               Result  error   Unit    % against non-SVE2\nIntegers.expand         2.106   0.011   us\/op\nIntegers.expand-SVE     1.431   0.009   us\/op   67.95%\nLongs.expand            2.606   0.006   us\/op\nLongs.expand-SVE        1.46    0.003   us\/op   56.02%\nIntegers.compress       1.982   0.004   us\/op\nIntegers.compress-SVE   1.427   0.003   us\/op   72.00%\nLongs.compress          2.501   0.002   us\/op\nLongs.compress-SVE      1.441   0.003   us\/op   57.62%"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/TestBitShuffleOpers.java"}],"sha":"1a0a9427d3ef815c917e81dd7246ee9e40af6efe"}]