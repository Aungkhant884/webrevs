{"files":[{"patch":"@@ -234,18 +234,0 @@\n-size_t MutableNUMASpace::capacity_in_words(Thread* thr) const {\n-  guarantee(thr != NULL, \"No thread\");\n-  int lgrp_id = thr->lgrp_id();\n-  if (lgrp_id == -1) {\n-    if (lgrp_spaces()->length() > 0) {\n-      return capacity_in_words() \/ lgrp_spaces()->length();\n-    } else {\n-      assert(false, \"There should be at least one locality group\");\n-      return 0;\n-    }\n-  }\n-  int i = lgrp_spaces()->find(&lgrp_id, LGRPSpace::equals);\n-  if (i == -1) {\n-    return 0;\n-  }\n-  return lgrp_spaces()->at(i)->space()->capacity_in_words();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.cpp","additions":0,"deletions":18,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -221,1 +221,1 @@\n-  virtual size_t capacity_in_words(Thread* thr) const;\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableNUMASpace.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -92,1 +92,0 @@\n-  virtual size_t capacity_in_words(Thread*) const { return capacity_in_words(); }\n","filename":"src\/hotspot\/share\/gc\/parallel\/mutableSpace.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}