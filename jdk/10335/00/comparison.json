{"files":[{"patch":"@@ -2694,14 +2694,0 @@\n-void os::current_thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n-  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n-  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n-  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n-  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n-}\n-\n-void os::thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n-  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n-  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n-  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n-  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n-}\n-\n","filename":"src\/hotspot\/os\/aix\/os_aix.cpp","additions":0,"deletions":14,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2357,15 +2357,0 @@\n-\n-void os::current_thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n-  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n-  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n-  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n-  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n-}\n-\n-void os::thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n-  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n-  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n-  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n-  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n-}\n-\n","filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp","additions":0,"deletions":15,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -135,3 +135,0 @@\n-\/\/ for timer info max values which include all bits\n-#define ALL_64_BITS CONST64(0xFFFFFFFFFFFFFFFF)\n-\n@@ -5126,14 +5123,0 @@\n-void os::current_thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n-  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n-  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n-  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n-  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n-}\n-\n-void os::thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n-  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n-  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n-  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n-  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n-}\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":0,"deletions":17,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -890,0 +890,17 @@\n+\/\/ for timer info max values which include all bits\n+#define ALL_64_BITS CONST64(0xFFFFFFFFFFFFFFFF)\n+\n+void os::current_thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n+  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n+  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n+  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n+  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n+}\n+\n+void os::thread_cpu_time_info(jvmtiTimerInfo *info_ptr) {\n+  info_ptr->max_value = ALL_64_BITS;       \/\/ will not wrap in less than 64 bits\n+  info_ptr->may_skip_backward = false;     \/\/ elapsed time not wall time\n+  info_ptr->may_skip_forward = false;      \/\/ elapsed time not wall time\n+  info_ptr->kind = JVMTI_TIMER_TOTAL_CPU;  \/\/ user+system time is returned\n+}\n+\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"}]}