{"files":[{"patch":"@@ -879,1 +879,0 @@\n-                long prevEnd = deepest[0] != null ? sp.getEndPosition(topLevel, deepest[0].getLeaf()) : -1;\n@@ -882,2 +881,1 @@\n-                    (start != end || prevEnd != end || deepest[0] == null ||\n-                     deepest[0].getParentPath().getLeaf() != getCurrentPath().getLeaf())) {\n+                    (deepest[0] == null || deepest[0].getLeaf() == getCurrentPath().getLeaf())) {\n","filename":"src\/jdk.jshell\/share\/classes\/jdk\/jshell\/SourceCodeAnalysisImpl.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 8131025 8141092 8153761 8145263 8131019 8175886 8176184 8176241 8176110 8177466 8197439 8221759 8234896 8240658\n+ * @bug 8131025 8141092 8153761 8145263 8131019 8175886 8176184 8176241 8176110 8177466 8197439 8221759 8234896 8240658 8278039\n@@ -776,0 +776,12 @@\n+\n+    public void testStatements() {\n+        assertEval(\"String s = \\\"\\\";\");\n+        assertCompletion(\"if (s.conta|\", (Boolean) null, \"contains(\");\n+        assertCompletion(\"if (s.ch|\", (Boolean) null, \"charAt(\", \"chars()\");\n+        assertCompletion(\"while (s.conta|\", (Boolean) null, \"contains(\");\n+        assertCompletion(\"do {} while (s.conta|\", (Boolean) null, \"contains(\");\n+        assertCompletion(\"try (var v = s.conta|\", (Boolean) null, \"contains(\");\n+        assertCompletion(\"for (var v = s.conta|\", (Boolean) null, \"contains(\");\n+        assertCompletion(\"for (;;s.conta|\", (Boolean) null, \"contains(\");\n+        assertCompletion(\"for (var v : s.conta|\", (Boolean) null, \"contains(\");\n+    }\n","filename":"test\/langtools\/jdk\/jshell\/CompletionSuggestionTest.java","additions":14,"deletions":2,"binary":false,"changes":16,"status":"modified"}]}