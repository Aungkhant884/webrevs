{"files":[{"patch":"@@ -666,8 +666,4 @@\n-  if test \"x$FLAGS_CPU_BITS\" = x64; then\n-    if test \"x$FLAGS_OS\" = xlinux || test \"x$FLAGS_OS\" = xmacosx || test \"x$FLAGS_OS\" = xwindows; then\n-      $1_DEFINES_CPU_JDK=\"${$1_DEFINES_CPU_JDK} -D_LP64=1\"\n-    fi\n-    if test \"x$FLAGS_OS\" != xaix; then\n-      # xlc on AIX defines _LP64=1 by default and issues a warning if we redefine it.\n-      $1_DEFINES_CPU_JVM=\"${$1_DEFINES_CPU_JVM} -D_LP64=1\"\n-    fi\n+  if test \"x$FLAGS_CPU_BITS\" = x64 && test \"x$FLAGS_OS\" != xaix; then\n+    # xlc on AIX defines _LP64=1 by default and issues a warning if we redefine it.\n+    $1_DEFINES_CPU_JDK=\"${$1_DEFINES_CPU_JDK} -D_LP64=1\"\n+    $1_DEFINES_CPU_JVM=\"${$1_DEFINES_CPU_JVM} -D_LP64=1\"\n","filename":"make\/autoconf\/flags-cflags.m4","additions":4,"deletions":8,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+#include \"jlong.h\"\n@@ -28,8 +29,0 @@\n-#ifdef _LP64\n-#define JLONG_TO_PTR(value, type) ((type*) (value))\n-#define PTR_TO_JLONG(value) ((jlong) (value))\n-#else\n-#define JLONG_TO_PTR(value, type) ((type*) (jint) (value))\n-#define PTR_TO_JLONG(value) ((jlong) (jint) (value))\n-#endif\n-\n@@ -39,1 +32,1 @@\n-    return PTR_TO_JLONG(p);\n+    return ptr_to_jlong(p);\n@@ -44,1 +37,1 @@\n-    free(JLONG_TO_PTR(thisPoint, Point));\n+    free(jlong_to_ptr(thisPoint));\n@@ -49,1 +42,1 @@\n-    Point* point = JLONG_TO_PTR(thisPoint, Point);\n+    Point* point = jlong_to_ptr(thisPoint);\n@@ -55,1 +48,1 @@\n-    Point* point = JLONG_TO_PTR(thisPoint, Point);\n+    Point* point = jlong_to_ptr(thisPoint);\n@@ -61,1 +54,1 @@\n-    Point* point = JLONG_TO_PTR(thisPoint, Point);\n+    Point* point = jlong_to_ptr(thisPoint);\n@@ -67,1 +60,1 @@\n-    Point* point = JLONG_TO_PTR(thisPoint, Point);\n+    Point* point = jlong_to_ptr(thisPoint);\n","filename":"test\/micro\/org\/openjdk\/bench\/jdk\/incubator\/foreign\/points\/support\/libJNIPoint.c","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"}]}