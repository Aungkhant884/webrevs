{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"src\/hotspot\/share\/opto\/phasetype.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -556,0 +556,10 @@\n+    public static final String LOAD_VECTOR_GATHER = PREFIX + \"LOAD_VECTOR_GATHER\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(LOAD_VECTOR_GATHER, \"LoadVectorGather\");\n+    }\n+\n+    public static final String LOAD_VECTOR_GATHER_MASKED = PREFIX + \"LOAD_VECTOR_GATHER_MASKED\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(LOAD_VECTOR_GATHER_MASKED, \"LoadVectorGatherMasked\");\n+    }\n+\n@@ -894,0 +904,10 @@\n+    public static final String STORE_VECTOR_SCATTER = PREFIX + \"STORE_VECTOR_SCATTER\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(STORE_VECTOR_SCATTER, \"StoreVectorScatter\");\n+    }\n+\n+    public static final String STORE_VECTOR_SCATTER_MASKED = PREFIX + \"STORE_VECTOR_SCATTER_MASKED\" + POSTFIX;\n+    static {\n+        beforeMatchingNameRegex(STORE_VECTOR_SCATTER_MASKED, \"StoreVectorScatterMasked\");\n+    }\n+\n@@ -1069,0 +1089,20 @@\n+    public static final String VFMSB_MASKED = PREFIX + \"VFMSB_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VFMSB_MASKED, \"vfmsb_masked\");\n+    }\n+\n+    public static final String VFNMAD_MASKED = PREFIX + \"VFNMAD_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VFNMAD_MASKED, \"vfnmad_masked\");\n+    }\n+\n+    public static final String VFNMSB_MASKED = PREFIX + \"VFNMSB_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VFNMSB_MASKED, \"vfnmsb_masked\");\n+    }\n+\n+    public static final String VMASK_AND_NOT_L = PREFIX + \"VMASK_AND_NOT_L\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VMASK_AND_NOT_L, \"vmask_and_notL\");\n+    }\n+\n@@ -1074,0 +1114,5 @@\n+    public static final String VMLA_MASKED = PREFIX + \"VMLA_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VMLA_MASKED, \"vmla_masked\");\n+    }\n+\n@@ -1079,0 +1124,15 @@\n+    public static final String VMLS_MASKED = PREFIX + \"VMLS_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VMLS_MASKED, \"vmls_masked\");\n+    }\n+\n+    public static final String VNOT_I_MASKED = PREFIX + \"VNOT_I_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VNOT_I_MASKED, \"vnotI_masked\");\n+    }\n+\n+    public static final String VNOT_L_MASKED = PREFIX + \"VNOT_L_MASKED\" + POSTFIX;\n+    static {\n+        machOnlyNameRegex(VNOT_L_MASKED, \"vnotL_masked\");\n+    }\n+\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/IRNode.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n","filename":"test\/hotspot\/jtreg\/compiler\/lib\/ir_framework\/driver\/FlagVMProcess.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -101,1 +101,2 @@\n-    @IR(counts = {IRNode.VAND_NOT_L, \" >= 1\" })\n+    @IR(counts = { IRNode.VAND_NOT_L, \" >= 1\" }, applyIf = {\"UseSVE\", \"0\"})\n+    @IR(counts = { IRNode.VMASK_AND_NOT_L, \" >= 1\" }, applyIf = {\"UseSVE\", \"> 0\"})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/AllBitsSetVectorMatchRuleTest.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -227,1 +227,1 @@\n-    @IR(counts = { \"vmla_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -240,1 +240,1 @@\n-    @IR(counts = { \"vmls_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -253,1 +253,1 @@\n-    @IR(counts = { \"vmla_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -266,1 +266,1 @@\n-    @IR(counts = { \"vmls_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -279,1 +279,1 @@\n-    @IR(counts = { \"vmla_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -292,1 +292,1 @@\n-    @IR(counts = { \"vmls_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -305,1 +305,1 @@\n-    @IR(counts = { \"vmla_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLA_MASKED, \">= 1\" })\n@@ -318,1 +318,1 @@\n-    @IR(counts = { \"vmls_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VMLS_MASKED, \">= 1\" })\n@@ -331,1 +331,1 @@\n-    @IR(counts = { \"vfmsb_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VFMSB_MASKED, \">= 1\" })\n@@ -344,1 +344,1 @@\n-    @IR(counts = { \"vfnmad_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VFNMAD_MASKED, \">= 1\" })\n@@ -357,1 +357,1 @@\n-    @IR(counts = { \"vfnmsb_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n@@ -370,1 +370,1 @@\n-    @IR(counts = { \"vfmsb_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VFMSB_MASKED, \">= 1\" })\n@@ -383,1 +383,1 @@\n-    @IR(counts = { \"vfnmad_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VFNMAD_MASKED, \">= 1\" })\n@@ -396,1 +396,1 @@\n-    @IR(counts = { \"vfnmsb_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VFNMSB_MASKED, \">= 1\" })\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorFusedMultiplyAddSubTest.java","additions":14,"deletions":14,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-    @IR(counts = { \"LoadVectorGather\", \">= 1\" })\n+    @IR(counts = { IRNode.LOAD_VECTOR_GATHER, \">= 1\" })\n@@ -102,1 +102,1 @@\n-    @IR(counts = { \"LoadVectorGatherMasked\", \">= 1\" })\n+    @IR(counts = { IRNode.LOAD_VECTOR_GATHER_MASKED, \">= 1\" })\n@@ -117,1 +117,1 @@\n-    @IR(counts = { \"StoreVectorScatter\", \">= 1\" })\n+    @IR(counts = { IRNode.STORE_VECTOR_SCATTER, \">= 1\" })\n@@ -131,1 +131,1 @@\n-    @IR(counts = { \"StoreVectorScatterMasked\", \">= 1\" })\n+    @IR(counts = { IRNode.STORE_VECTOR_SCATTER_MASKED, \">= 1\" })\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorGatherScatterTest.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -80,1 +80,1 @@\n-    @IR(counts = { \"vnotI_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VNOT_I_MASKED, \">= 1\" })\n@@ -98,1 +98,1 @@\n-    @IR(counts = { \"vnotL_masked\", \">= 1\" })\n+    @IR(counts = { IRNode.VNOT_L_MASKED, \">= 1\" })\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/VectorMaskedNotTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}