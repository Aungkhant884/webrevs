{"files":[{"patch":"@@ -182,2 +182,2 @@\n-void ClassListParser::split_tokens_by_whitespace() {\n-  int start = 0;\n+void ClassListParser::split_tokens_by_whitespace(int offset) {\n+  int start = offset;\n@@ -200,0 +200,12 @@\n+int ClassListParser::split_at_tag_from_line() {\n+  _token = _line;\n+  char* ptr;\n+  if ((ptr = strchr(_line, ' ')) == NULL) {\n+    error(\"Too few items following the @ tag \\\"%s\\\" line #%d\", _line, _line_no);\n+    return 0;\n+  }\n+  *ptr++ = '\\0';\n+  while (*ptr == ' ' || *ptr == '\\t') ptr++;\n+  return (int)(ptr - _line);\n+}\n+\n@@ -202,4 +214,9 @@\n-  split_tokens_by_whitespace();\n-  if (strcmp(_indy_items->at(0), LAMBDA_PROXY_TAG) == 0) {\n-    if (_indy_items->length() < 3) {\n-      error(\"Line with @ tag has too few items \\\"%s\\\" line #%d\", _line, _line_no);\n+  int offset;\n+  if ((offset = split_at_tag_from_line()) == 0) {\n+    return false;\n+  }\n+\n+  if (strcmp(_token, LAMBDA_PROXY_TAG) == 0) {\n+    split_tokens_by_whitespace(offset);\n+    if (_indy_items->length() < 2) {\n+      error(\"Line with @ tag has too few items \\\"%s\\\" line #%d\", _token, _line_no);\n@@ -209,1 +226,1 @@\n-    _class_name = _indy_items->at(1);\n+    _class_name = _indy_items->at(0);\n@@ -211,7 +228,2 @@\n-  } else if (strcmp(_indy_items->at(0), LAMBDA_FORM_TAG) == 0) {\n-    for (int i = _line_len; i >= 0; i--) {\n-      if (_line[i] == '\\0') {\n-        _line[i] = ' ';\n-      }\n-    }\n-    LambdaFormInvokers::append(os::strdup((const char*)_line, mtInternal));\n+  } else if (strcmp(_token, LAMBDA_FORM_TAG) == 0) {\n+    LambdaFormInvokers::append(os::strdup((const char*)(_line + offset), mtInternal));\n@@ -221,1 +233,1 @@\n-    error(\"Invalid @ tag at the beginning of line \\\"%s\\\" line #%d\", _line, _line_no);\n+    error(\"Invalid @ tag at the beginning of line \\\"%s\\\" line #%d\", _token, _line_no);\n@@ -438,1 +450,1 @@\n-  int indy_info_offset = 2;\n+  int indy_info_offset = 1;\n","filename":"src\/hotspot\/share\/classfile\/classListParser.cpp","additions":28,"deletions":16,"binary":false,"changes":44,"status":"modified"},{"patch":"@@ -125,1 +125,2 @@\n-  void split_tokens_by_whitespace();\n+  void split_tokens_by_whitespace(int offset);\n+  int split_at_tag_from_line();\n","filename":"src\/hotspot\/share\/classfile\/classListParser.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-#include \"classfile\/classListParser.hpp\"\n@@ -70,3 +69,1 @@\n-    char* record = _lambdaform_lines->at(i);\n-    record += strlen(LAMBDA_FORM_TAG) + 1; \/\/ skip the @lambda_form_invoker prefix\n-    Handle h_line = java_lang_String::create_from_str(record, CHECK);\n+    Handle h_line = java_lang_String::create_from_str(_lambdaform_lines->at(i), CHECK);\n","filename":"src\/hotspot\/share\/classfile\/lambdaFormInvokers.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"}]}