{"files":[{"patch":"@@ -108,0 +108,7 @@\n+        \/\/ 10. The line with incorrect (less) number of items.\n+        dumpShouldFail(\n+            \"TESTCASE 10: With incorrect @lambda-form-invoker tag\",\n+            appJar, classlist(\n+                \"Hello\",\n+                \"@lambda-form-invoker-xxx [LF_RESOLVE] java.lang.invoke.DirectMethodHandle$Holder invokeStatic\"),\n+                \"Invalid @ tag at the beginning of line \\\"@lambda-form-invoker-xxx\\\" line #2\");\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/DumpClassListWithLF.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -76,0 +76,7 @@\n+\n+    \/\/ 6. Error on invalid @lambda-proxy tag\n+    out = TestCommon.dump(appJar,\n+        TestCommon.list(\"LambHello\",\n+                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n+    out.shouldContain(\"Invalid @ tag at the beginning of line \\\"@lambda-proxy:\\\" line #2\")\n+       .shouldHaveExitValue(1);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaProxyClasslist.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}