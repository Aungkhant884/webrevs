{"files":[{"patch":"@@ -118,7 +118,0 @@\n-    \/\/ Check if the line is output TRACE_RESOLVE\n-    if (strncmp(_line, LambdaFormInvokers::lambda_form_invoker_tag(),\n-                strlen(LambdaFormInvokers::lambda_form_invoker_tag())) == 0) {\n-      LambdaFormInvokers::append(os::strdup((const char*)_line, mtInternal));\n-      continue;\n-    }\n-\n@@ -136,0 +129,1 @@\n+  _lambda_form_line = false;\n@@ -217,0 +211,9 @@\n+  } else if (strcmp(_indy_items->at(0), LAMBDA_FORM_TAG) == 0) {\n+    for (int i = _line_len; i >= 0; i--) {\n+      if (_line[i] == '\\0') {\n+        _line[i] = ' ';\n+      }\n+    }\n+    LambdaFormInvokers::append(os::strdup((const char*)_line, mtInternal));\n+    _lambda_form_line = true;\n+    return true;\n","filename":"src\/hotspot\/share\/classfile\/classListParser.cpp","additions":10,"deletions":7,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -33,1 +33,2 @@\n-#define LAMBDA_PROXY_TAG \"@lambda-proxy:\"\n+#define LAMBDA_PROXY_TAG \"@lambda-proxy\"\n+#define LAMBDA_FORM_TAG  \"@lambda-form-invoker\"\n@@ -102,0 +103,1 @@\n+  bool                _lambda_form_line;\n@@ -165,0 +167,2 @@\n+  bool lambda_form_line() { return _lambda_form_line; }\n+\n","filename":"src\/hotspot\/share\/classfile\/classListParser.hpp","additions":5,"deletions":1,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -26,0 +26,1 @@\n+#include \"classfile\/classListParser.hpp\"\n@@ -70,1 +71,1 @@\n-    record += strlen(lambda_form_invoker_tag()) + 1; \/\/ skip the @lambda_form_invoker prefix\n+    record += strlen(LAMBDA_FORM_TAG) + 1; \/\/ skip the @lambda_form_invoker prefix\n","filename":"src\/hotspot\/share\/classfile\/lambdaFormInvokers.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -45,4 +45,0 @@\n-\n-  static const char* lambda_form_invoker_tag() {\n-    return \"@lambda-form-invoker\";\n-  }\n","filename":"src\/hotspot\/share\/classfile\/lambdaFormInvokers.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1099,0 +1099,3 @@\n+    if (parser.lambda_form_line()) {\n+      continue;\n+    }\n","filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/classListParser.hpp\"\n@@ -35,1 +36,0 @@\n-#include \"classfile\/lambdaFormInvokers.hpp\"\n@@ -3886,1 +3886,1 @@\n-    w.stream()->print_cr(\"%s %s\", LambdaFormInvokers::lambda_form_invoker_tag(), c_line);\n+    w.stream()->print_cr(\"%s %s\", LAMBDA_FORM_TAG, c_line);\n","filename":"src\/hotspot\/share\/prims\/jvm.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-                        \"@lambda-proxy: WrongBSM 7\"));\n+                        \"@lambda-proxy WrongBSM 7\"));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/BadBSM.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n+                        \"@lambda-proxy LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n@@ -52,1 +52,1 @@\n-                        \"@lambda-proxy: LambHello\"));\n+                        \"@lambda-proxy LambHello\"));\n@@ -54,1 +54,1 @@\n-       .shouldContain(\"Line with @ tag has too few items \\\"@lambda-proxy:\\\" line #2\")\n+       .shouldContain(\"Line with @ tag has too few items \\\"@lambda-proxy\\\" line #2\")\n@@ -61,1 +61,1 @@\n-                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()Z\"));\n+                        \"@lambda-proxy LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()Z\"));\n@@ -68,1 +68,1 @@\n-                        \"@lambda-proxy:  LambHello run  ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n+                        \"@lambda-proxy  LambHello run  ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V\"));\n@@ -74,1 +74,1 @@\n-                        \"@lambda-proxy: LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V \"));\n+                        \"@lambda-proxy LambHello run ()Ljava\/lang\/Runnable; ()V REF_invokeStatic LambHello lambda$doTest$0 ()V ()V \"));\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/LambdaProxyClasslist.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}