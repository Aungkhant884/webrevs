{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -444,6 +444,0 @@\n-        \/\/ 3) inherited with a signature of (String, Instrumentation)\n-        \/\/ 4) inherited with a signature of (String)\n-        \/\/\n-        \/\/ So the declared version of either 1-arg or 2-arg always takes\n-        \/\/ primary precedence over an inherited version. After that, the\n-        \/\/ 2-arg version takes precedence over the 1-arg version.\n@@ -473,27 +467,0 @@\n-            } catch (NoSuchMethodException x) {\n-                \/\/ ignore this exception because we'll try\n-                \/\/ two arg inheritance next\n-            }\n-        }\n-\n-        if (m == null) {\n-            \/\/ now try the inherited 2-arg method\n-            try {\n-                m = javaAgentClass.getMethod( methodname,\n-                                 new Class<?>[] {\n-                                     String.class,\n-                                     java.lang.instrument.Instrumentation.class\n-                                 }\n-                               );\n-                twoArgAgent = true;\n-            } catch (NoSuchMethodException x) {\n-                \/\/ ignore this exception because we'll try\n-                \/\/ one arg inheritance next\n-            }\n-        }\n-\n-        if (m == null) {\n-            \/\/ finally try the inherited 1-arg method\n-            try {\n-                m = javaAgentClass.getMethod(methodname,\n-                                             new Class<?>[] { String.class });\n@@ -507,5 +474,11 @@\n-        \/\/ the premain method should not be required to be public,\n-        \/\/ make it accessible so we can call it\n-        \/\/ Note: The spec says the following:\n-        \/\/     The agent class must implement a public static premain method...\n-        setAccessible(m, true);\n+        \/\/ reject non-public premain or agentmain method\n+        if ((m.getModifiers() & java.lang.reflect.Modifier.PUBLIC) == 0) {\n+            String msg = \"method \" + classname + \".\" +  methodname + \" must be declared public\";\n+            throw new IllegalAccessException(msg);\n+        }\n+\n+        if ((javaAgentClass.getModifiers() & java.lang.reflect.Modifier.PUBLIC) == 0) {\n+            \/\/ If the java agent class is not public, make the premain\/agentmain\n+            \/\/ accessible, so we can call it.\n+            setAccessible(m, true);\n+        }\n","filename":"src\/java.instrument\/share\/classes\/sun\/instrument\/InstrumentationImpl.java","additions":12,"deletions":39,"binary":false,"changes":51,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.java.lang.instrument;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.jar.Attributes;\n+import java.util.jar.Manifest;\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.util.JarUtils;\n+\n+public class AgentJarBuilder {\n+\n+    public static void build(String agentClass, String agentJar) throws IOException {\n+        Manifest mf = new Manifest();\n+        Attributes attrs = mf.getMainAttributes();\n+        attrs.put(Attributes.Name.MANIFEST_VERSION, \"1.0\");\n+        attrs.putValue(\"Can-Redefine-Classes\", \"true\");\n+        attrs.putValue(\"Can-Retransform-Classes\", \"true\");\n+        attrs.putValue(\"Premain-Class\", agentClass);\n+        attrs.putValue(\"Agent-Class\", agentClass);\n+\n+        Path jarFile = Paths.get(\".\", agentJar);\n+        String testClasses = Utils.TEST_CLASSES;\n+        String agentPath = agentClass.replace(\".\", File.separator) + \".class\";\n+        Path agentFile = Paths.get(testClasses, agentPath);\n+        Path dir = Paths.get(testClasses);\n+        JarUtils.createJarFile(jarFile, mf, dir, agentFile);\n+        System.out.println(\"Agent built:\" + jarFile.toAbsolutePath());\n+    }\n+\n+    public static void main(String argv[]) throws Exception {\n+        if (argv.length == 0) {\n+            throw new RuntimeException(\"Expected at least agent class name in arguments\");\n+        }\n+        String agentClassName = argv[0];\n+        build(agentClassName, agentClassName + \".jar\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/AgentJarBuilder.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6263319\n+ * @bug 6263319 8165276\n@@ -44,1 +44,1 @@\n-class NativeMethodPrefixAgent {\n+public class NativeMethodPrefixAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/NativeMethodPrefixAgent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.java.lang.instrument;\n+\n+import java.lang.RuntimeException;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class NegativeAgentRunner {\n+\n+    public static void main(String argv[]) throws Exception {\n+        if (argv.length != 2) {\n+            throw new RuntimeException(\"Agent and exception class names are expected in arguments\");\n+        }\n+        String agentClassName = argv[0];\n+        String excepClassName = argv[1];\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                \"-javaagent:\" + agentClassName + \".jar\",\n+                agentClassName);\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldContain(excepClassName);\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/NegativeAgentRunner.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0001\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0001\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0001\n@@ -36,1 +41,1 @@\n-class InheritAgent0001 extends InheritAgent0001Super {\n+public class InheritAgent0001 extends InheritAgent0001Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0001.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0010\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0010\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0010\n@@ -36,1 +41,1 @@\n-class InheritAgent0010 extends InheritAgent0010Super {\n+public class InheritAgent0010 extends InheritAgent0010Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0010.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0011\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0011\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0011\n@@ -36,1 +41,1 @@\n-class InheritAgent0011 extends InheritAgent0011Super {\n+public class InheritAgent0011 extends InheritAgent0011Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0011.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -28,4 +28,9 @@\n- * @author Daniel D. Daugherty, Sun Microsystems\n- *\n- * @run shell ..\/MakeJAR3.sh InheritAgent0100\n- * @run main\/othervm -javaagent:InheritAgent0100.jar DummyMain\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0100\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0100\n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner InheritAgent0100 NoSuchMethodException \n@@ -34,1 +39,1 @@\n-import java.lang.instrument.*;\n+public class InheritAgent0100 extends InheritAgent0100Super {\n@@ -36,1 +41,2 @@\n-class InheritAgent0100 extends InheritAgent0100Super {\n+     \/\/ This agent does NOT have a single argument premain() method.\n+     \/\/ This agent does NOT have a double argument premain() method.\n@@ -38,3 +44,0 @@\n-    \/\/ This agent does NOT have a single argument premain() method.\n-\n-    \/\/ This agent does NOT have a double argument premain() method.\n@@ -44,5 +47,1 @@\n-\n-    \/\/\n-    \/\/ This agent has a single argument premain() method which\n-    \/\/ is the one that should be called.\n-    \/\/\n+    \/\/ This agent class has a single argument premain() method which should NOT be called.\n@@ -51,0 +50,1 @@\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n@@ -53,1 +53,1 @@\n-    \/\/ This agent does NOT have a double argument premain() method.\n+    \/\/ This agent class does NOT have a double argument premain() method.\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0100.java","additions":18,"deletions":18,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -31,1 +31,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0101\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0101\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0101\n@@ -37,1 +42,1 @@\n-class InheritAgent0101 extends InheritAgent0101Super {\n+public class InheritAgent0101 extends InheritAgent0101Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0101.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0110\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0110\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0110\n@@ -36,1 +41,1 @@\n-class InheritAgent0110 extends InheritAgent0110Super {\n+public class InheritAgent0110 extends InheritAgent0110Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0110.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0111\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0111\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0111\n@@ -36,1 +41,1 @@\n-class InheritAgent0111 extends InheritAgent0111Super {\n+public class InheritAgent0111 extends InheritAgent0111Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0111.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -28,1 +28,0 @@\n- * @author Daniel D. Daugherty, Sun Microsystems\n@@ -30,2 +29,9 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1000\n- * @run main\/othervm -javaagent:InheritAgent1000.jar DummyMain\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1000\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1000 \n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner InheritAgent1000 NoSuchMethodException \n@@ -34,1 +40,1 @@\n-import java.lang.instrument.*;\n+import java.lang.instrument.Instrumentation;\n@@ -36,1 +42,1 @@\n-class InheritAgent1000 extends InheritAgent1000Super {\n+public class InheritAgent1000 extends InheritAgent1000Super {\n@@ -45,1 +51,1 @@\n-    \/\/ This agent does NOT have a single argument premain() method.\n+    \/\/ This agent class does NOT have a single argument premain() method.\n@@ -47,4 +53,1 @@\n-    \/\/\n-    \/\/ This agent has a double argument premain() method which\n-    \/\/ is the one that should be called.\n-    \/\/\n+    \/\/ This agent class has a double argument premain() method which should NOT be called.\n@@ -53,0 +56,1 @@\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1000.java","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1001\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1001\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1001\n@@ -36,1 +41,1 @@\n-class InheritAgent1001 extends InheritAgent1001Super {\n+public class InheritAgent1001 extends InheritAgent1001Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1001.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1010\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1010\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1010\n@@ -36,1 +41,1 @@\n-class InheritAgent1010 extends InheritAgent1010Super {\n+public class InheritAgent1010 extends InheritAgent1010Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1010.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1011\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1011\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1011\n@@ -36,1 +41,1 @@\n-class InheritAgent1011 extends InheritAgent1011Super {\n+public class InheritAgent1011 extends InheritAgent1011Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1011.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,1 @@\n-\/**\n+\/*\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -28,1 +28,0 @@\n- * @author Daniel D. Daugherty, Sun Microsystems\n@@ -30,2 +29,9 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1100\n- * @run main\/othervm -javaagent:InheritAgent1100.jar DummyMain\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1100\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1100\n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner InheritAgent1100 NoSuchMethodException \n@@ -34,1 +40,1 @@\n-import java.lang.instrument.*;\n+import java.lang.instrument.Instrumentation;\n@@ -36,1 +42,1 @@\n-class InheritAgent1100 extends InheritAgent1100Super {\n+public class InheritAgent1100 extends InheritAgent1100Super {\n@@ -44,5 +50,1 @@\n-\n-    \/\/\n-    \/\/ This agent has a single argument premain() method which\n-    \/\/ is NOT the one that should be called.\n-    \/\/\n+    \/\/ This agent class has a single argument premain() method which should NOT be called.\n@@ -54,4 +56,1 @@\n-    \/\/\n-    \/\/ This agent has a double argument premain() method which\n-    \/\/ is the one that should be called.\n-    \/\/\n+    \/\/ This agent class has a double argument premain() method which should NOT be called.\n@@ -60,0 +59,1 @@\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1100.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1101\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1101\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1101\n@@ -36,1 +41,1 @@\n-class InheritAgent1101 extends InheritAgent1101Super {\n+public class InheritAgent1101 extends InheritAgent1101Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1101.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1110\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1110\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1110\n@@ -36,1 +41,1 @@\n-class InheritAgent1110 extends InheritAgent1110Super {\n+public class InheritAgent1110 extends InheritAgent1110Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1110.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6289149\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1111\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1111\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1111\n@@ -36,1 +41,1 @@\n-class InheritAgent1111 extends InheritAgent1111Super {\n+public class InheritAgent1111 extends InheritAgent1111Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1111.java","additions":9,"deletions":4,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,14 @@\n-import java.lang.instrument.*;\n+\/*\n+ * @test\n+ * @bug 6289149\n+ * @summary test when the agent's class is missing the premain() function.\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.NoPremainAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             NoPremainAgent\n+ * @run main\/othervm -XX:-CreateCoredumpOnCrash jdk.java.lang.instrument.NegativeAgentRunner NoPremainAgent NoSuchMethodException \n+ *\/\n@@ -26,1 +39,1 @@\n-class NoPremainAgent {\n+public class NoPremainAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NoPremainAgent.java","additions":16,"deletions":3,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Utils;\n-\n-\/*\n- * @test\n- * @bug 6289149\n- * @summary test when the agent's class is missing the premain() function.\n- * @library \/test\/lib\n- * @modules java.management\n- *          java.instrument\n- * @run build DummyMain\n- * @run shell ..\/MakeJAR3.sh NoPremainAgent\n- * @run main\/othervm -XX:-CreateCoredumpOnCrash NoPremainAgentTest\n- *\/\n-public class NoPremainAgentTest {\n-    \/\/ Use a javaagent without the premain() function.\n-    \/\/ Verify that we get the correct exception.\n-    public static void main(String[] a) throws Exception {\n-        String testArgs = String.format(\n-                \"-javaagent:NoPremainAgent.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.classes\", \".\"));\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n-\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n-        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n-\n-        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n-        if (0 == output.getExitValue()) {\n-            throw new RuntimeException(\"Expected error but got exit value 0\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NoPremainAgentTest.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8165276\n+ * @summary Test that agent with non-public premain method is rejected to load\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.NonPublicAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             NonPublicAgent\n+ * @run main\/othervm -javaagent:NonPublicAgent.jar DummyMain\n+ *\/\n+\n+import java.lang.instrument.Instrumentation;\n+\n+\/\/ This class is intentionally non-public to ensure its premain method is NOT rejected.\n+class NonPublicAgent {\n+\n+    \/\/ This premain method has to be resolved even if its class is not public\n+    public static void premain(String agentArgs, Instrumentation inst) {\n+        System.out.println(\"premain: NonPublicAgent was loaded\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NonPublicAgent.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8165276\n+ * @summary Test that agent with non-public premain method is rejected to load\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.NonPublicPremainAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             NonPublicPremainAgent\n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner NonPublicPremainAgent IllegalAccessException\n+ *\/\n+\n+import java.lang.RuntimeException;\n+import java.lang.instrument.Instrumentation;\n+\n+public class NonPublicPremainAgent {\n+\n+    \/\/ This premain method is intentionally non-public to ensure it is rejected.\n+    static void premain(String agentArgs, Instrumentation inst) {\n+        throw new RuntimeException(\"premain: NonPublicPremainAgent was not expected to be loaded\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NonPublicPremainAgent.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,1 +24,15 @@\n-import java.lang.instrument.*;\n+\/*\n+ * @test\n+ * @bug 6289149\n+ * @summary test when the agent's class has a zero arg premain() function.\n+ * @library \/test\/lib\n+ * @library \/test\n+ *\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.ZeroArgPremainAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             ZeroArgPremainAgent\n+ * @run main\/othervm -XX:-CreateCoredumpOnCrash jdk.java.lang.instrument.NegativeAgentRunner ZeroArgPremainAgent NoSuchMethodException \n+ *\/\n@@ -26,1 +40,1 @@\n-class ZeroArgPremainAgent {\n+public class ZeroArgPremainAgent {\n@@ -31,0 +45,1 @@\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/ZeroArgPremainAgent.java","additions":18,"deletions":3,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Utils;\n-\n-\/*\n- * @test\n- * @bug 6289149\n- * @summary test when the agent's class has a zero arg premain() function.\n- * @library \/test\/lib\n- * @modules java.management\n- *          java.instrument\n- * @run build DummyMain\n- * @run shell ..\/MakeJAR3.sh ZeroArgPremainAgent\n- * @run main\/othervm -XX:-CreateCoredumpOnCrash ZeroArgPremainAgentTest\n- *\/\n-public class ZeroArgPremainAgentTest {\n-    \/\/ Use a javaagent with a zero argument premain() function.\n-    \/\/ Verify that we get the correct exception.\n-    public static void main(String[] a) throws Exception {\n-        String testArgs = String.format(\n-                \"-javaagent:ZeroArgPremainAgent.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.classes\", \".\"));\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n-\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n-        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n-\n-        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n-        if (0 == output.getExitValue()) {\n-            throw new RuntimeException(\"Expected error but got exit value 0\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/ZeroArgPremainAgentTest.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n- * @bug 6274264 6274241 5070281\n+ * @bug 6274264 6274241 5070281 8165276\n@@ -41,1 +41,1 @@\n-class RetransformAgent {\n+public class RetransformAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformAgent.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-class SimpleAgent {\n+public class SimpleAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/SimpleAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}