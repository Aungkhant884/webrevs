{"files":[{"patch":"@@ -415,0 +415,10 @@\n+    \/\/ Enable or disable Java programming language access checks on a\n+    \/\/ reflected object (for example, a method)\n+    private static void setAccessible(final AccessibleObject ao, final boolean accessible) {\n+        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n+                public Object run() {\n+                    ao.setAccessible(accessible);\n+                    return null;\n+                }});\n+    }\n+\n@@ -465,1 +475,1 @@\n-        if (!m.canAccess(null)) {\n+        if ((m.getModifiers() & java.lang.reflect.Modifier.PUBLIC) == 0) {\n@@ -470,0 +480,6 @@\n+        if ((javaAgentClass.getModifiers() & java.lang.reflect.Modifier.PUBLIC) == 0) {\n+            \/\/ If the java agent class is not public, make the premain\/agentmain\n+            \/\/ accessible, so we can call it.\n+            setAccessible(m, true);\n+        }\n+\n","filename":"src\/java.instrument\/share\/classes\/sun\/instrument\/InstrumentationImpl.java","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -0,0 +1,63 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.java.lang.instrument;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.jar.Attributes;\n+import java.util.jar.Manifest;\n+\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.util.JarUtils;\n+\n+public class AgentJarBuilder {\n+\n+    public static void build(String agentClass, String agentJar) throws IOException {\n+        Manifest mf = new Manifest();\n+        Attributes attrs = mf.getMainAttributes();\n+        attrs.put(Attributes.Name.MANIFEST_VERSION, \"1.0\");\n+        attrs.putValue(\"Can-Redefine-Classes\", \"true\");\n+        attrs.putValue(\"Can-Retransform-Classes\", \"true\");\n+        attrs.putValue(\"Premain-Class\", agentClass);\n+        attrs.putValue(\"Agent-Class\", agentClass);\n+\n+        Path jarFile = Paths.get(\".\", agentJar);\n+        String testClasses = Utils.TEST_CLASSES;\n+        String agentPath = agentClass.replace(\".\", File.separator) + \".class\";\n+        Path agentFile = Paths.get(testClasses, agentPath);\n+        Path dir = Paths.get(testClasses);\n+        JarUtils.createJarFile(jarFile, mf, dir, agentFile);\n+        System.out.println(\"Agent built:\" + jarFile.toAbsolutePath());\n+    }\n+\n+    public static void main(String argv[]) throws Exception {\n+        if (argv.length == 0) {\n+            throw new RuntimeException(\"Expected at least agent class name in arguments\");\n+        }\n+        String agentClassName = argv[0];\n+        build(agentClassName, agentClassName + \".jar\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/AgentJarBuilder.java","additions":63,"deletions":0,"binary":false,"changes":63,"status":"added"},{"patch":"@@ -0,0 +1,44 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.java.lang.instrument;\n+\n+import java.lang.RuntimeException;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class NegativeAgentRunner {\n+\n+    public static void main(String argv[]) throws Exception {\n+        if (argv.length != 2) {\n+            throw new RuntimeException(\"Agent and exception class names are expected in arguments\");\n+        }\n+        String agentClassName = argv[0];\n+        String excepClassName = argv[1];\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                \"-javaagent:\" + agentClassName + \".jar\",\n+                agentClassName);\n+        OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+        output.shouldContain(excepClassName);\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/NegativeAgentRunner.java","additions":44,"deletions":0,"binary":false,"changes":44,"status":"added"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8165276\n- * @library \/test\/lib\n- * @summary Test that agent with non-public premain method is rejected to load\n- * @modules java.base\/jdk.internal.misc\n- * @modules java.instrument\n- *          jdk.jartool\/sun.tools.jar\n- * @run main NonPublicPremainAgent buildagent\n- * @run main\/othervm\/timeout=6000 NonPublicPremainAgent runtest\n- *\/\n-\n-import java.io.FileNotFoundException;\n-import java.io.PrintWriter;\n-import java.lang.RuntimeException;\n-import java.lang.instrument.Instrumentation;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.process.OutputAnalyzer;\n-\n-public class NonPublicPremainAgent {\n-\n-    \/\/ This premain method is intentionally non-public to ensure it is rejected.\n-    static void premain(String agentArgs, Instrumentation inst) {\n-        System.out.println(\"premain: NonPublicPremainAgent was not expected to be loaded\");\n-    }\n-\n-    private static void buildAgent() {\n-        try {\n-            ClassFileInstaller.main(\"NonPublicPremainAgent\");\n-        } catch (Exception e) {\n-            throw new RuntimeException(\"Could not write agent classfile\", e);\n-        }\n-\n-        try {\n-            PrintWriter pw = new PrintWriter(\"MANIFEST.MF\");\n-            pw.println(\"Premain-Class: NonPublicPremainAgent\");\n-            pw.println(\"Agent-Class: NonPublicPremainAgent\");\n-            pw.close();\n-        } catch (FileNotFoundException e) {\n-            throw new RuntimeException(\"Could not write manifest file for the agent\", e);\n-        }\n-\n-        sun.tools.jar.Main jarTool = new sun.tools.jar.Main(System.out, System.err, \"jar\");\n-        if (!jarTool.run(new String[] { \"-cmf\", \"MANIFEST.MF\", \"redefineagent.jar\", \"NonPublicPremainAgent.class\" })) {\n-            throw new RuntimeException(\"Could not write the agent jar file\");\n-        }\n-    }\n-\n-    public static void main(String argv[]) throws Exception {\n-        if (argv.length == 1 && argv[0].equals(\"buildagent\")) {\n-            buildAgent();\n-            return;\n-        }\n-        if (argv.length == 1 && argv[0].equals(\"runtest\")) {\n-            \/\/ run outside of jtreg to not OOM on jtreg classes that are loaded after metaspace is full\n-            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                    \"-javaagent:redefineagent.jar\",\n-                    \"NonPublicPremainAgent\");\n-            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n-            output.shouldContain(\"IllegalAccessException\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/NonPublicPremainAgent.java","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0001\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0001\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0001\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0001.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0010\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0010\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0010\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0010.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 628914 8165276\n+ * @bug 6289149 8165276\n@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0011\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0011\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0011\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0011.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,3 +24,14 @@\n-package PremainClass;\n-\n-import java.lang.instrument.*;\n+\/*\n+ * @test\n+ * @bug 6289149 8165276\n+ * @summary test config (0,1,0,0): inherited 1-arg in agent class\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0100\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0100\n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner InheritAgent0100 NoSuchMethodException \n+ *\/\n@@ -30,1 +41,11 @@\n-    \/\/ This agent does NOT have a single argument premain() method.\n+     \/\/ This agent does NOT have a single argument premain() method.\n+     \/\/ This agent does NOT have a double argument premain() method.\n+\n+}\n+\n+class InheritAgent0100Super {\n+    \/\/ This agent class has a single argument premain() method which should NOT be called.\n+    public static void premain (String agentArgs) {\n+        System.out.println(\"Hello from Single-Arg InheritAgent0100Super!\");\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n+    }\n@@ -32,1 +53,1 @@\n-    \/\/ This agent does NOT have a double argument premain() method.\n+    \/\/ This agent class does NOT have a double argument premain() method.\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0100.java","additions":27,"deletions":6,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -1,34 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package PremainClass;\n-\n-public class InheritAgent0100Super {\n-    \/\/ This agent class has a single argument premain() method which should NOT be called.\n-    public static void premain (String agentArgs) {\n-        System.out.println(\"Hello from Single-Arg InheritAgent0100Super!\");\n-        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n-    }\n-\n-    \/\/ This agent class does NOT have a double argument premain() method.\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0100Super.java","additions":0,"deletions":34,"binary":false,"changes":34,"status":"deleted"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Utils;\n-\n-\/*\n- * @test\n- * @bug 6289149 8165276\n- * @summary test config (0,1,0,0): inherited 1-arg in agent class\n- *\n- * @library \/test\/lib\n- * @modules java.instrument\n- * @build DummyMain InheritAgent0100 InheritAgent0100Super InheritAgent0100Test\n- * @run shell MakeJAR.sh PremainClass InheritAgent0100 InheritAgent0100Super\n- * @run main\/othervm InheritAgent0100Test\n- *\/\n-public class InheritAgent0100Test {\n-    \/\/ Use a javaagent without the premain() method but inherited from super class.\n-    \/\/ Verify that we get the correct exception.\n-    public static void main(String[] a) throws Exception {\n-        String testArgs = String.format(\n-                \"-javaagent:InheritAgent0100.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.classes\", \".\"));\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n-\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n-        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n-\n-        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n-        if (0 == output.getExitValue()) {\n-            throw new RuntimeException(\"Expected error but got exit value 0\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0100Test.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -31,1 +31,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0101\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0101\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0101\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0101.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0110\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0110\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0110\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0110.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent0111\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent0111\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent0111\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0111.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,1 +24,15 @@\n-package PremainClass;\n+\/*\n+ * @test\n+ * @bug 6289149 8165276\n+ * @summary test config (1,0,0,0): inherited 2-arg in agent class\n+ *\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1000\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1000 \n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner InheritAgent1000 NoSuchMethodException \n+ *\/\n@@ -26,1 +40,1 @@\n-import java.lang.instrument.*;\n+import java.lang.instrument.Instrumentation;\n@@ -34,0 +48,11 @@\n+\n+class InheritAgent1000Super {\n+\n+    \/\/ This agent class does NOT have a single argument premain() method.\n+\n+    \/\/ This agent class has a double argument premain() method which should NOT be called.\n+    public static void premain (String agentArgs, Instrumentation instArg) {\n+        System.out.println(\"Hello from Double-Arg InheritAgent1000Super!\");\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1000.java","additions":27,"deletions":2,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1,35 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package PremainClass;\n-\n-public class InheritAgent1000Super {\n-\n-    \/\/ This agent class does NOT have a single argument premain() method.\n-\n-    \/\/ This agent class has a double argument premain() method which should NOT be called.\n-    public static void premain (String agentArgs, Instrumentation instArg) {\n-        System.out.println(\"Hello from Double-Arg InheritAgent1000Super!\");\n-        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1000Super.java","additions":0,"deletions":35,"binary":false,"changes":35,"status":"deleted"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Utils;\n-\n-\/*\n- * @test\n- * @bug 6289149 8165276\n- * @summary test config (1,0,0,0): inherited 2-arg in agent class\n- *\n- * @library \/test\/lib\n- * @modules java.instrument\n- * @build DummyMain InheritAgent1000 InheritAgent1000Super InheritAgent1000Test\n- * @run shell MakeJAR.sh PremainClass InheritAgent1000 InheritAgent1000Super\n- * @run main\/othervm InheritAgent1000Test\n- *\/\n-public class InheritAgent1000Test {\n-    \/\/ Use a javaagent without the premain() method but inherited from super class.\n-    \/\/ Verify that we get the correct exception.\n-    public static void main(String[] a) throws Exception {\n-        String testArgs = String.format(\n-                \"-javaagent:InheritAgent1000.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.classes\", \".\"));\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n-\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n-        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n-\n-        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n-        if (0 == output.getExitValue()) {\n-            throw new RuntimeException(\"Expected error but got exit value 0\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1000Test.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1001\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1001\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1001\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1001.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1010\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1010\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1010\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1010.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1011\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1011\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1011\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1011.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -24,1 +24,15 @@\n-package PremainClass;\n+\/*\n+ * @test\n+ * @bug 6289149 8165276\n+ * @summary test config (1,1,0,0): inherited 2-arg and inherited 1-arg in agent class\n+ *\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1100\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1100\n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner InheritAgent1100 NoSuchMethodException \n+ *\/\n@@ -26,1 +40,1 @@\n-import java.lang.instrument.*;\n+import java.lang.instrument.Instrumentation;\n@@ -34,0 +48,14 @@\n+\n+class InheritAgent1100Super {\n+    \/\/ This agent class has a single argument premain() method which should NOT be called.\n+    public static void premain (String agentArgs) {\n+        System.out.println(\"Hello from Single-Arg InheritAgent1100Super!\");\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n+    }\n+\n+    \/\/ This agent class has a double argument premain() method which should NOT be called.\n+    public static void premain (String agentArgs, Instrumentation instArg) {\n+        System.out.println(\"Hello from Double-Arg InheritAgent1100Super!\");\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1100.java","additions":30,"deletions":2,"binary":false,"changes":32,"status":"modified"},{"patch":"@@ -1,38 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package PremainClass;\n-\n-public class InheritAgent1100Super {\n-    \/\/ This agent class has a single argument premain() method which should NOT be called.\n-    public static void premain (String agentArgs) {\n-        System.out.println(\"Hello from Single-Arg InheritAgent1100Super!\");\n-        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n-    }\n-\n-    \/\/ This agent class has a double argument premain() method which should NOT be called.\n-    public static void premain (String agentArgs, Instrumentation instArg) {\n-        System.out.println(\"Hello from Double-Arg InheritAgent1100Super!\");\n-        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1100Super.java","additions":0,"deletions":38,"binary":false,"changes":38,"status":"deleted"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Utils;\n-\n-\/*\n- * @test\n- * @bug 6289149 8165276\n- * @summary test config (1,1,0,0): inherited 2-arg and inherited 1-arg in agent class\n- *\n- * @library \/test\/lib\n- * @modules java.instrument\n- * @build DummyMain InheritAgent1100 InheritAgent1100Super InheritAgent1100Test\n- * @run shell MakeJAR.sh PremainClass InheritAgent1100 InheritAgent1100Super\n- * @run main\/othervm InheritAgent1100Test\n- *\/\n-public class InheritAgent1100Test {\n-    \/\/ Use a javaagent without the premain() method but inherited from super class.\n-    \/\/ Verify that we get the correct exception.\n-    public static void main(String[] a) throws Exception {\n-        String testArgs = String.format(\n-                \"-javaagent:InheritAgent1100.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.classes\", \".\"));\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n-\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n-        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n-\n-        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n-        if (0 == output.getExitValue()) {\n-            throw new RuntimeException(\"Expected error but got exit value 0\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1100Test.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1101\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1101\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1101\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1101.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1110\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1110\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1110\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1110.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -30,1 +30,6 @@\n- * @run shell ..\/MakeJAR3.sh InheritAgent1111\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.InheritAgent1111\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             InheritAgent1111\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1111.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -1,45 +0,0 @@\n-#!\/bin\/sh\n-\n-PKG=\"$1\"\n-AGENT=\"$2\"\n-OTHER=\"$3\"\n-shift 3\n-\n-if [ \"${TESTSRC}\" = \"\" ]\n-then\n-  echo \"TESTSRC not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-echo \"TESTSRC=${TESTSRC}\"\n-\n-if [ \"${TESTJAVA}\" = \"\" ]\n-then\n-  echo \"TESTJAVA not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-echo \"TESTJAVA=${TESTJAVA}\"\n-\n-if [ \"${COMPILEJAVA}\" = \"\" ]\n-then\n-  COMPILEJAVA=\"${TESTJAVA}\"\n-fi\n-echo \"COMPILEJAVA=${COMPILEJAVA}\"\n-\n-if [ \"${TESTCLASSES}\" = \"\" ]\n-then\n-  echo \"TESTCLASSES not set.  Test cannot execute.  Failed.\"\n-  exit 1\n-fi\n-echo \"TESTCLASSES=${TESTCLASSES}\"\n-\n-JAR=\"${COMPILEJAVA}\/bin\/jar\"\n-\n-echo \"Manifest-Version: 1.0\"        >  ${AGENT}.mf\n-echo Premain-Class: ${PKG}.${AGENT} >> ${AGENT}.mf\n-while [ $# != 0 ] ; do\n-  echo $1 >> ${AGENT}.mf\n-  shift\n-done\n-\n-${JAR} ${TESTTOOLVMOPTS} cvfm ${AGENT}.jar ${AGENT}.mf \\\n-       ${TESTCLASSES}\/${PKG}\/${AGENT}*.class ${TESTSRC}\/${OTHER}*.java\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/MakeJAR.sh","additions":0,"deletions":45,"binary":false,"changes":45,"status":"deleted"},{"patch":"@@ -24,1 +24,14 @@\n-import java.lang.instrument.*;\n+\/*\n+ * @test\n+ * @bug 6289149\n+ * @summary test when the agent's class is missing the premain() function.\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.NoPremainAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             NoPremainAgent\n+ * @run main\/othervm -XX:-CreateCoredumpOnCrash jdk.java.lang.instrument.NegativeAgentRunner NoPremainAgent NoSuchMethodException \n+ *\/\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NoPremainAgent.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Utils;\n-\n-\/*\n- * @test\n- * @bug 6289149\n- * @summary test when the agent's class is missing the premain() function.\n- * @library \/test\/lib\n- * @modules java.management\n- *          java.instrument\n- * @run build DummyMain\n- * @run shell ..\/MakeJAR3.sh NoPremainAgent\n- * @run main\/othervm -XX:-CreateCoredumpOnCrash NoPremainAgentTest\n- *\/\n-public class NoPremainAgentTest {\n-    \/\/ Use a javaagent without the premain() function.\n-    \/\/ Verify that we get the correct exception.\n-    public static void main(String[] a) throws Exception {\n-        String testArgs = String.format(\n-                \"-javaagent:NoPremainAgent.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.classes\", \".\"));\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n-\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n-        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n-\n-        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n-        if (0 == output.getExitValue()) {\n-            throw new RuntimeException(\"Expected error but got exit value 0\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NoPremainAgentTest.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8165276\n+ * @summary Test that agent with non-public premain method is rejected to load\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.NonPublicAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             NonPublicAgent\n+ * @run main\/othervm -javaagent:NonPublicAgent.jar DummyMain\n+ *\/\n+\n+import java.lang.instrument.Instrumentation;\n+\n+\/\/ This class is intentionally non-public to ensure its premain method is NOT rejected.\n+class NonPublicAgent {\n+\n+    \/\/ This premain method has to be resolved even if its class is not public\n+    public static void premain(String agentArgs, Instrumentation inst) {\n+        System.out.println(\"premain: NonPublicAgent was loaded\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NonPublicAgent.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8165276\n+ * @summary Test that agent with non-public premain method is rejected to load\n+ * @library \/test\/lib\n+ * @library \/test\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.NonPublicPremainAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             NonPublicPremainAgent\n+ * @run main\/othervm jdk.java.lang.instrument.NegativeAgentRunner NonPublicPremainAgent IllegalAccessException\n+ *\/\n+\n+import java.lang.RuntimeException;\n+import java.lang.instrument.Instrumentation;\n+\n+public class NonPublicPremainAgent {\n+\n+    \/\/ This premain method is intentionally non-public to ensure it is rejected.\n+    static void premain(String agentArgs, Instrumentation inst) {\n+        throw new RuntimeException(\"premain: NonPublicPremainAgent was not expected to be loaded\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NonPublicPremainAgent.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"},{"patch":"@@ -24,1 +24,15 @@\n-import java.lang.instrument.*;\n+\/*\n+ * @test\n+ * @bug 6289149\n+ * @summary test when the agent's class has a zero arg premain() function.\n+ * @library \/test\/lib\n+ * @library \/test\n+ *\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @build jdk.java.lang.instrument.PremainClass.ZeroArgPremainAgent\n+ * @run driver jdk.java.lang.instrument.AgentJarBuilder\n+ *             ZeroArgPremainAgent\n+ * @run main\/othervm -XX:-CreateCoredumpOnCrash jdk.java.lang.instrument.NegativeAgentRunner ZeroArgPremainAgent NoSuchMethodException \n+ *\/\n@@ -31,0 +45,1 @@\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/ZeroArgPremainAgent.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -1,60 +0,0 @@\n-\/*\n- * Copyright (c) 2013, 2018, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-import jdk.test.lib.process.OutputAnalyzer;\n-import jdk.test.lib.process.ProcessTools;\n-import jdk.test.lib.Utils;\n-\n-\/*\n- * @test\n- * @bug 6289149\n- * @summary test when the agent's class has a zero arg premain() function.\n- * @library \/test\/lib\n- * @modules java.management\n- *          java.instrument\n- * @run build DummyMain\n- * @run shell ..\/MakeJAR3.sh ZeroArgPremainAgent\n- * @run main\/othervm -XX:-CreateCoredumpOnCrash ZeroArgPremainAgentTest\n- *\/\n-public class ZeroArgPremainAgentTest {\n-    \/\/ Use a javaagent with a zero argument premain() function.\n-    \/\/ Verify that we get the correct exception.\n-    public static void main(String[] a) throws Exception {\n-        String testArgs = String.format(\n-                \"-javaagent:ZeroArgPremainAgent.jar -classpath %s DummyMain\",\n-                System.getProperty(\"test.classes\", \".\"));\n-\n-        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n-                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n-        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n-\n-        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n-        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n-        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n-\n-        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n-        if (0 == output.getExitValue()) {\n-            throw new RuntimeException(\"Expected error but got exit value 0\");\n-        }\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/ZeroArgPremainAgentTest.java","additions":0,"deletions":60,"binary":false,"changes":60,"status":"deleted"}]}