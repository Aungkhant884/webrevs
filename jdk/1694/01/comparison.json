{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -415,10 +415,0 @@\n-    \/\/ Enable or disable Java programming language access checks on a\n-    \/\/ reflected object (for example, a method)\n-    private static void setAccessible(final AccessibleObject ao, final boolean accessible) {\n-        AccessController.doPrivileged(new PrivilegedAction<Object>() {\n-                public Object run() {\n-                    ao.setAccessible(accessible);\n-                    return null;\n-                }});\n-    }\n-\n@@ -473,27 +463,0 @@\n-            } catch (NoSuchMethodException x) {\n-                \/\/ ignore this exception because we'll try\n-                \/\/ two arg inheritance next\n-            }\n-        }\n-\n-        if (m == null) {\n-            \/\/ now try the inherited 2-arg method\n-            try {\n-                m = javaAgentClass.getMethod( methodname,\n-                                 new Class<?>[] {\n-                                     String.class,\n-                                     java.lang.instrument.Instrumentation.class\n-                                 }\n-                               );\n-                twoArgAgent = true;\n-            } catch (NoSuchMethodException x) {\n-                \/\/ ignore this exception because we'll try\n-                \/\/ one arg inheritance next\n-            }\n-        }\n-\n-        if (m == null) {\n-            \/\/ finally try the inherited 1-arg method\n-            try {\n-                m = javaAgentClass.getMethod(methodname,\n-                                             new Class<?>[] { String.class });\n@@ -507,5 +470,5 @@\n-        \/\/ the premain method should not be required to be public,\n-        \/\/ make it accessible so we can call it\n-        \/\/ Note: The spec says the following:\n-        \/\/     The agent class must implement a public static premain method...\n-        setAccessible(m, true);\n+        \/\/ reject non-public premain or agentmain method\n+        if (!m.canAccess(null)) {\n+            String msg = \"method \" + classname + \".\" +  methodname + \" must be declared public\";\n+            throw new IllegalAccessException(msg);\n+        }\n","filename":"src\/java.instrument\/share\/classes\/sun\/instrument\/InstrumentationImpl.java","additions":6,"deletions":43,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-class NativeMethodPrefixAgent {\n+public class NativeMethodPrefixAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/NativeMethodPrefixAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @library \/test\/lib\n+ * @summary Test that agent with non-public premain method is rejected to load\n+ * @modules java.base\/jdk.internal.misc\n+ * @modules java.instrument\n+ *          jdk.jartool\/sun.tools.jar\n+ * @run main NonPublicPremainAgent buildagent\n+ * @run main\/othervm\/timeout=6000 NonPublicPremainAgent runtest\n+ *\/\n+\n+import java.io.FileNotFoundException;\n+import java.io.PrintWriter;\n+import java.lang.RuntimeException;\n+import java.lang.instrument.Instrumentation;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+public class NonPublicPremainAgent {\n+\n+    \/\/ This premain method is intentionally non-public to ensure it is rejected.\n+    static void premain(String agentArgs, Instrumentation inst) {\n+        System.out.println(\"premain: NonPublicPremainAgent was not expected to be loaded\");\n+    }\n+\n+    private static void buildAgent() {\n+        try {\n+            ClassFileInstaller.main(\"NonPublicPremainAgent\");\n+        } catch (Exception e) {\n+            throw new RuntimeException(\"Could not write agent classfile\", e);\n+        }\n+\n+        try {\n+            PrintWriter pw = new PrintWriter(\"MANIFEST.MF\");\n+            pw.println(\"Premain-Class: NonPublicPremainAgent\");\n+            pw.println(\"Agent-Class: NonPublicPremainAgent\");\n+            pw.close();\n+        } catch (FileNotFoundException e) {\n+            throw new RuntimeException(\"Could not write manifest file for the agent\", e);\n+        }\n+\n+        sun.tools.jar.Main jarTool = new sun.tools.jar.Main(System.out, System.err, \"jar\");\n+        if (!jarTool.run(new String[] { \"-cmf\", \"MANIFEST.MF\", \"redefineagent.jar\", \"NonPublicPremainAgent.class\" })) {\n+            throw new RuntimeException(\"Could not write the agent jar file\");\n+        }\n+    }\n+\n+    public static void main(String argv[]) throws Exception {\n+        if (argv.length == 1 && argv[0].equals(\"buildagent\")) {\n+            buildAgent();\n+            return;\n+        }\n+        if (argv.length == 1 && argv[0].equals(\"runtest\")) {\n+            \/\/ run outside of jtreg to not OOM on jtreg classes that are loaded after metaspace is full\n+            ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                    \"-javaagent:redefineagent.jar\",\n+                    \"NonPublicPremainAgent\");\n+            OutputAnalyzer output = new OutputAnalyzer(pb.start());\n+            output.shouldContain(\"IllegalAccessException\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/NonPublicPremainAgent.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent0001 extends InheritAgent0001Super {\n+public class InheritAgent0001 extends InheritAgent0001Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent0010 extends InheritAgent0010Super {\n+public class InheritAgent0010 extends InheritAgent0010Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0010.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent0011 extends InheritAgent0011Super {\n+public class InheritAgent0011 extends InheritAgent0011Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0011.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,9 +24,1 @@\n-\/**\n- * @test\n- * @bug 6289149\n- * @summary test config (0,1,0,0): inherited 1-arg in agent class\n- * @author Daniel D. Daugherty, Sun Microsystems\n- *\n- * @run shell ..\/MakeJAR3.sh InheritAgent0100\n- * @run main\/othervm -javaagent:InheritAgent0100.jar DummyMain\n- *\/\n+package PremainClass;\n@@ -36,1 +28,1 @@\n-class InheritAgent0100 extends InheritAgent0100Super {\n+public class InheritAgent0100 extends InheritAgent0100Super {\n@@ -42,13 +34,0 @@\n-\n-class InheritAgent0100Super {\n-\n-    \/\/\n-    \/\/ This agent has a single argument premain() method which\n-    \/\/ is the one that should be called.\n-    \/\/\n-    public static void premain (String agentArgs) {\n-        System.out.println(\"Hello from Single-Arg InheritAgent0100Super!\");\n-    }\n-\n-    \/\/ This agent does NOT have a double argument premain() method.\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0100.java","additions":3,"deletions":24,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,34 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package PremainClass;\n+\n+public class InheritAgent0100Super {\n+    \/\/ This agent has a single argument premain() method which\n+    \/\/ is the one that should be called.\n+    public static void premain (String agentArgs) {\n+        System.out.println(\"Hello from Single-Arg InheritAgent0100Super!\");\n+    }\n+\n+    \/\/ This agent does NOT have a double argument premain() method.\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0100Super.java","additions":34,"deletions":0,"binary":false,"changes":34,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.Utils;\n+\n+\/*\n+ * @test\n+ * @bug 6289149\n+ * @summary test config (0,1,0,0): inherited 1-arg in agent class\n+ *\n+ * @library \/test\/lib\n+ * @modules java.instrument\n+ * @build DummyMain InheritAgent0100 InheritAgent0100Super InheritAgent0100Test\n+ * @run shell MakeJAR.sh PremainClass InheritAgent0100 InheritAgent0100Super\n+ * @run main\/othervm InheritAgent0100Test\n+ *\/\n+public class InheritAgent0100Test {\n+    \/\/ Use a javaagent without the premain() method but inherited from super class.\n+    \/\/ Verify that we get the correct exception.\n+    public static void main(String[] a) throws Exception {\n+        String testArgs = String.format(\n+                \"-javaagent:InheritAgent0100.jar -classpath %s DummyMain\",\n+                System.getProperty(\"test.classes\", \".\"));\n+\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n+        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n+\n+        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n+        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n+        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n+\n+        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n+        if (0 == output.getExitValue()) {\n+            throw new RuntimeException(\"Expected error but got exit value 0\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0100Test.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,1 @@\n-class InheritAgent0101 extends InheritAgent0101Super {\n+public class InheritAgent0101 extends InheritAgent0101Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0101.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent0110 extends InheritAgent0110Super {\n+public class InheritAgent0110 extends InheritAgent0110Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0110.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent0111 extends InheritAgent0111Super {\n+public class InheritAgent0111 extends InheritAgent0111Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent0111.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,9 +24,1 @@\n-\/**\n- * @test\n- * @bug 6289149\n- * @summary test config (1,0,0,0): inherited 2-arg in agent class\n- * @author Daniel D. Daugherty, Sun Microsystems\n- *\n- * @run shell ..\/MakeJAR3.sh InheritAgent1000\n- * @run main\/othervm -javaagent:InheritAgent1000.jar DummyMain\n- *\/\n+package PremainClass;\n@@ -36,1 +28,1 @@\n-class InheritAgent1000 extends InheritAgent1000Super {\n+public class InheritAgent1000 extends InheritAgent1000Super {\n@@ -42,13 +34,0 @@\n-\n-class InheritAgent1000Super {\n-\n-    \/\/ This agent does NOT have a single argument premain() method.\n-\n-    \/\/\n-    \/\/ This agent has a double argument premain() method which\n-    \/\/ is the one that should be called.\n-    \/\/\n-    public static void premain (String agentArgs, Instrumentation instArg) {\n-        System.out.println(\"Hello from Double-Arg InheritAgent1000Super!\");\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1000.java","additions":3,"deletions":24,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -0,0 +1,37 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package PremainClass;\n+\n+import java.lang.instrument.*;\n+\n+public class InheritAgent1000Super {\n+\n+    \/\/ This agent does NOT have a single argument premain() method.\n+\n+    \/\/ This agent has a double argument premain() method which\n+    \/\/ is the one that should be called.\n+    public static void premain (String agentArgs, Instrumentation instArg) {\n+        System.out.println(\"Hello from Double-Arg InheritAgent1000Super!\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1000Super.java","additions":37,"deletions":0,"binary":false,"changes":37,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.Utils;\n+\n+\/*\n+ * @test\n+ * @bug 6289149\n+ * @summary test config (1,0,0,0): inherited 2-arg in agent class\n+ *\n+ * @library \/test\/lib\n+ * @modules java.instrument\n+ * @build DummyMain InheritAgent1000 InheritAgent1000Super InheritAgent1000Test\n+ * @run shell MakeJAR.sh PremainClass InheritAgent1000 InheritAgent1000Super\n+ * @run main\/othervm InheritAgent1000Test\n+ *\/\n+public class InheritAgent1000Test {\n+    \/\/ Use a javaagent without the premain() method but inherited from super class.\n+    \/\/ Verify that we get the correct exception.\n+    public static void main(String[] a) throws Exception {\n+        String testArgs = String.format(\n+                \"-javaagent:InheritAgent1000.jar -classpath %s DummyMain\",\n+                System.getProperty(\"test.classes\", \".\"));\n+\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n+        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n+\n+        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n+        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n+        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n+\n+        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n+        if (0 == output.getExitValue()) {\n+            throw new RuntimeException(\"Expected error but got exit value 0\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1000Test.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent1001 extends InheritAgent1001Super {\n+public class InheritAgent1001 extends InheritAgent1001Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1001.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent1010 extends InheritAgent1010Super {\n+public class InheritAgent1010 extends InheritAgent1010Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1010.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent1011 extends InheritAgent1011Super {\n+public class InheritAgent1011 extends InheritAgent1011Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1011.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -24,9 +24,1 @@\n-\/**\n- * @test\n- * @bug 6289149\n- * @summary test config (1,1,0,0): inherited 2-arg and inherited 1-arg in agent class\n- * @author Daniel D. Daugherty, Sun Microsystems\n- *\n- * @run shell ..\/MakeJAR3.sh InheritAgent1100\n- * @run main\/othervm -javaagent:InheritAgent1100.jar DummyMain\n- *\/\n+package PremainClass;\n@@ -36,1 +28,1 @@\n-class InheritAgent1100 extends InheritAgent1100Super {\n+public class InheritAgent1100 extends InheritAgent1100Super {\n@@ -42,20 +34,0 @@\n-\n-class InheritAgent1100Super {\n-\n-    \/\/\n-    \/\/ This agent has a single argument premain() method which\n-    \/\/ is NOT the one that should be called.\n-    \/\/\n-    public static void premain (String agentArgs) {\n-        System.out.println(\"Hello from Single-Arg InheritAgent1100Super!\");\n-        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n-    }\n-\n-    \/\/\n-    \/\/ This agent has a double argument premain() method which\n-    \/\/ is the one that should be called.\n-    \/\/\n-    public static void premain (String agentArgs, Instrumentation instArg) {\n-        System.out.println(\"Hello from Double-Arg InheritAgent1100Super!\");\n-    }\n-}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1100.java","additions":3,"deletions":31,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -0,0 +1,41 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package PremainClass;\n+\n+import java.lang.instrument.*;\n+\n+public class InheritAgent1100Super {\n+    \/\/ This agent has a single argument premain() method which\n+    \/\/ is NOT the one that should be called.\n+    public static void premain (String agentArgs) {\n+        System.out.println(\"Hello from Single-Arg InheritAgent1100Super!\");\n+        throw new Error(\"ERROR: THIS AGENT SHOULD NOT HAVE BEEN CALLED.\");\n+    }\n+\n+    \/\/ This agent has a double argument premain() method which\n+    \/\/ is the one that should be called.\n+    public static void premain (String agentArgs, Instrumentation instArg) {\n+        System.out.println(\"Hello from Double-Arg InheritAgent1100Super!\");\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1100Super.java","additions":41,"deletions":0,"binary":false,"changes":41,"status":"added"},{"patch":"@@ -0,0 +1,60 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import jdk.test.lib.process.OutputAnalyzer;\n+import jdk.test.lib.process.ProcessTools;\n+import jdk.test.lib.Utils;\n+\n+\/*\n+ * @test\n+ * @bug 6289149\n+ * @summary test config (1,1,0,0): inherited 2-arg and inherited 1-arg in agent class\n+ *\n+ * @library \/test\/lib\n+ * @modules java.instrument\n+ * @build DummyMain InheritAgent1100 InheritAgent1100Super InheritAgent1100Test\n+ * @run shell MakeJAR.sh PremainClass InheritAgent1100 InheritAgent1100Super\n+ * @run main\/othervm InheritAgent1100Test\n+ *\/\n+public class InheritAgent1100Test {\n+    \/\/ Use a javaagent without the premain() method but inherited from super class.\n+    \/\/ Verify that we get the correct exception.\n+    public static void main(String[] a) throws Exception {\n+        String testArgs = String.format(\n+                \"-javaagent:InheritAgent1100.jar -classpath %s DummyMain\",\n+                System.getProperty(\"test.classes\", \".\"));\n+\n+        ProcessBuilder pb = ProcessTools.createJavaProcessBuilder(\n+                Utils.addTestJavaOpts(testArgs.split(\"\\\\s+\")));\n+        System.out.println(\"testjvm.cmd:\" + Utils.getCommandLine(pb));\n+\n+        OutputAnalyzer output = ProcessTools.executeProcess(pb);\n+        System.out.println(\"testjvm.stdout:\" + output.getStdout());\n+        System.out.println(\"testjvm.stderr:\" + output.getStderr());\n+\n+        output.stderrShouldContain(\"java.lang.NoSuchMethodException\");\n+        if (0 == output.getExitValue()) {\n+            throw new RuntimeException(\"Expected error but got exit value 0\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1100Test.java","additions":60,"deletions":0,"binary":false,"changes":60,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent1101 extends InheritAgent1101Super {\n+public class InheritAgent1101 extends InheritAgent1101Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1101.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent1110 extends InheritAgent1110Super {\n+public class InheritAgent1110 extends InheritAgent1110Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1110.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -36,1 +36,1 @@\n-class InheritAgent1111 extends InheritAgent1111Super {\n+public class InheritAgent1111 extends InheritAgent1111Super {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/InheritAgent1111.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -0,0 +1,45 @@\n+#!\/bin\/sh\n+\n+PKG=\"$1\"\n+AGENT=\"$2\"\n+OTHER=\"$3\"\n+shift 3\n+\n+if [ \"${TESTSRC}\" = \"\" ]\n+then\n+  echo \"TESTSRC not set.  Test cannot execute.  Failed.\"\n+  exit 1\n+fi\n+echo \"TESTSRC=${TESTSRC}\"\n+\n+if [ \"${TESTJAVA}\" = \"\" ]\n+then\n+  echo \"TESTJAVA not set.  Test cannot execute.  Failed.\"\n+  exit 1\n+fi\n+echo \"TESTJAVA=${TESTJAVA}\"\n+\n+if [ \"${COMPILEJAVA}\" = \"\" ]\n+then\n+  COMPILEJAVA=\"${TESTJAVA}\"\n+fi\n+echo \"COMPILEJAVA=${COMPILEJAVA}\"\n+\n+if [ \"${TESTCLASSES}\" = \"\" ]\n+then\n+  echo \"TESTCLASSES not set.  Test cannot execute.  Failed.\"\n+  exit 1\n+fi\n+echo \"TESTCLASSES=${TESTCLASSES}\"\n+\n+JAR=\"${COMPILEJAVA}\/bin\/jar\"\n+\n+echo \"Manifest-Version: 1.0\"        >  ${AGENT}.mf\n+echo Premain-Class: ${PKG}.${AGENT} >> ${AGENT}.mf\n+while [ $# != 0 ] ; do\n+  echo $1 >> ${AGENT}.mf\n+  shift\n+done\n+\n+${JAR} ${TESTTOOLVMOPTS} cvfm ${AGENT}.jar ${AGENT}.mf \\\n+       ${TESTCLASSES}\/${PKG}\/${AGENT}*.class ${TESTSRC}\/${OTHER}*.java\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/MakeJAR.sh","additions":45,"deletions":0,"binary":false,"changes":45,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-class NoPremainAgent {\n+public class NoPremainAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/NoPremainAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-class ZeroArgPremainAgent {\n+public class ZeroArgPremainAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/PremainClass\/ZeroArgPremainAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -41,1 +41,1 @@\n-class RetransformAgent {\n+public class RetransformAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/RetransformAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,1 @@\n-class SimpleAgent {\n+public class SimpleAgent {\n","filename":"test\/jdk\/java\/lang\/instrument\/SimpleAgent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}