{"files":[{"patch":"@@ -293,1 +293,0 @@\n-static bool _no_progress_allow_updates = false;\n@@ -1078,1 +1077,0 @@\n-    assert(_no_progress_allow_updates, \"Sanity\");\n@@ -1108,1 +1106,0 @@\n-    _no_progress_allow_updates = false;\n@@ -1122,1 +1119,0 @@\n-    _no_progress_allow_updates = true;\n@@ -1131,3 +1127,1 @@\n-    \/\/ touched many monitors. This deflation might have no progress\n-    \/\/ in normal conditions, do not allow it to affect the threshold\n-    \/\/ heuristics no-progress tracking.\n+    \/\/ touched many monitors.\n@@ -1135,1 +1129,17 @@\n-    _no_progress_allow_updates = false;\n+\n+    \/\/ If this deflation has no progress, then it should not affect the no-progress\n+    \/\/ tracking, otherwise threshold heuristics would think it was triggered, experienced\n+    \/\/ no progress, and needs to backoff more aggressively. In this \"no progress\" case,\n+    \/\/ the generic code would bump the no-progress counter, and we compensate for that\n+    \/\/ by decrementing here. Since we always go to the operation after leaving here,\n+    \/\/ we only go one step into negative counts.\n+    \/\/\n+    \/\/ If this deflation has progress, then it should let non-progress tracking\n+    \/\/ know about this, otherwise the threshold heuristics would kick in, potentially\n+    \/\/ experience no-progress due to aggressive cleanup by this deflation, and think\n+    \/\/ it is still in no-progress stride. In this \"progress\" case, the generic code would\n+    \/\/ zero the counter. We can keep a decrement here, because it would be effectively\n+    \/\/ no-op after dropping to zero.\n+    assert(_no_progress_cnt >= 0, \"Should be non-negative\");\n+    _no_progress_cnt--;\n+\n@@ -1554,6 +1564,5 @@\n-  if (_no_progress_allow_updates) {\n-    if (deflated_count != 0) {\n-      _no_progress_cnt = 0;\n-    } else {\n-      _no_progress_cnt++;\n-    }\n+  if (deflated_count != 0) {\n+    _no_progress_cnt = 0;\n+  } else {\n+    _no_progress_cnt++;\n+    assert(_no_progress_cnt >= 0, \"Should be non-negative\");\n","filename":"src\/hotspot\/share\/runtime\/synchronizer.cpp","additions":23,"deletions":14,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -24,1 +24,0 @@\n-import jdk.test.lib.process.OutputAnalyzer;\n@@ -26,0 +25,1 @@\n+import jdk.test.lib.process.OutputAnalyzer;\n","filename":"test\/hotspot\/jtreg\/runtime\/Monitor\/GuaranteedAsyncDeflationIntervalTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}