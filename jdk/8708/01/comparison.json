{"files":[{"patch":"@@ -41,1 +41,0 @@\n-import javax.tools.JavaFileManager;\n@@ -218,6 +217,0 @@\n-            \/\/ first, look in local snippet-files subdirectory\n-            Utils utils = writer.configuration().utils;\n-            PackageElement pkg = getPackageElement(holder, utils);\n-            JavaFileManager.Location l = utils.getLocationForPackage(pkg);\n-            String relativeName = \"snippet-files\/\" + v;\n-            String packageName = packageName(pkg, utils);\n@@ -225,1 +218,7 @@\n-                fileObject = fileManager.getFileForInput(l, packageName, relativeName);\n+                \/\/ first, look in local snippet-files subdirectory\n+                var utils = writer.configuration().utils;\n+                var pkg = getPackageElement(holder, utils);\n+                var pkgLocation = utils.getLocationForPackage(pkg);\n+                var pkgName = pkg.getQualifiedName().toString(); \/\/ note: empty string for unnamed package\n+                var relativeName = \"snippet-files\/\" + v;\n+                fileObject = fileManager.getFileForInput(pkgLocation, pkgName, relativeName);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SnippetTaglet.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -0,0 +1,96 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8284037\n+ * @summary Snippet-files subdirectory not automatically detected when in unnamed package\n+ * @library \/tools\/lib ..\/..\/lib\n+ * @modules jdk.compiler\/com.sun.tools.javac.api\n+ *          jdk.compiler\/com.sun.tools.javac.main\n+ *          jdk.javadoc\/jdk.javadoc.internal.tool\n+ * @build javadoc.tester.* toolbox.ToolBox toolbox.ModuleBuilder builder.ClassBuilder\n+ * @run main TestSnippetUnnamedPackage\n+ *\/\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class TestSnippetUnnamedPackage extends SnippetTester {\n+\n+    public static void main(String... args) throws Exception {\n+        new TestSnippetUnnamedPackage().runTests();\n+    }\n+\n+    @Test\n+    public void testNoSourcePath(Path base) throws IOException {\n+        test(base, false);\n+    }\n+\n+    @Test\n+    public void testSourcePath(Path base) throws IOException {\n+        test(base, true);\n+    }\n+\n+    void test(Path base, boolean useSourcePath) throws IOException {\n+        Path src = base.resolve(\"src\");\n+        tb.writeJavaFiles(src,\n+                \"\"\"\n+                        \/**\n+                         * Comment.\n+                         * Before.\n+                         * {@snippet class=S}\n+                         * After.\n+                         *\/\n+                        public class C {\n+                          private C() { }\n+                        }\n+                        \"\"\");\n+        tb.writeFile(src.resolve(\"snippet-files\").resolve(\"S.java\"),\n+        \"public class S { }\");\n+\n+        var args = new ArrayList<String>();\n+        args.addAll(List.of(\"-d\", base.resolve(\"out\").toString()));\n+        if (useSourcePath) {\n+            args.addAll(List.of(\"--source-path\", src.toString()));\n+        }\n+        args.add(src.resolve(\"C.java\").toString());\n+\n+        javadoc(args.toArray(String[]::new));\n+        checkExit(useSourcePath ? Exit.OK : Exit.ERROR);\n+        checkOutput(Output.OUT, !useSourcePath,\n+                \"C.java:4: error: file not found on source path or snippet path: S.java\");\n+\n+        checkOutput(\"C.html\", useSourcePath,\n+                \"\"\"\n+                        Before.\n+                        \\s\n+                        <div class=\"snippet-container\"><button class=\"snippet-copy\" onclick=\"copySnippet(this)\"><span data-copied=\"Copied!\">Copy<\/span><img src=\"copy.svg\" alt=\"Copy\"><\/button>\n+                        <pre class=\"snippet\"><code class=\"language-java\">public class S { }<\/code><\/pre>\n+                        <\/div>\n+\n+                         After.\"\"\");\n+    }\n+}\n","filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetUnnamedPackage.java","additions":96,"deletions":0,"binary":false,"changes":96,"status":"added"}]}