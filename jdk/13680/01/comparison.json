{"files":[{"patch":"@@ -292,0 +292,2 @@\n+        Objects.checkFromToIndex(start, end, csq.length());\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Heap-X-Buffer.java.template","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2048,0 +2048,2 @@\n+            Objects.checkFromToIndex(start, end, csq.length());\n+\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -664,0 +664,4 @@\n+                CharBuffer cb = f.apply(7);\n+                tryCatch(cbBOE, BufferOverflowException.class, () ->\n+                    cb.append(\"12345678\", 0, 8));\n+\n@@ -669,0 +673,11 @@\n+\n+                tryCatch(cb, IndexOutOfBoundsException.class, () ->\n+                    cb.append(\"12345678\", 4, 12));\n+\n+                \/\/ should append nothing\n+                int rem = cb.remaining();\n+                ck(cb, cb.append(csq, 0, 0).remaining(), rem);\n+\n+                \/\/ should fill the buffer\n+                int start = (csq.length() - rem)\/2;\n+                ck(cb, cb.append(csq, start, start + rem).remaining(), 0);\n","filename":"test\/jdk\/java\/nio\/Buffer\/Basic-X.java.template","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -29,1 +29,1 @@\n- *      7199551 8065556 8149469 8230665 8237514 8306374 8306623\n+ *      7199551 8065556 8149469 8230665 8237514 8306374 8306623 8306959\n","filename":"test\/jdk\/java\/nio\/Buffer\/Basic.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -664,0 +664,4 @@\n+                CharBuffer cb = f.apply(7);\n+                tryCatch(cbBOE, BufferOverflowException.class, () ->\n+                    cb.append(\"12345678\", 0, 8));\n+\n@@ -669,0 +673,11 @@\n+\n+                tryCatch(cb, IndexOutOfBoundsException.class, () ->\n+                    cb.append(\"12345678\", 4, 12));\n+\n+                \/\/ should append nothing\n+                int rem = cb.remaining();\n+                ck(cb, cb.append(csq, 0, 0).remaining(), rem);\n+\n+                \/\/ should fill the buffer\n+                int start = (csq.length() - rem)\/2;\n+                ck(cb, cb.append(csq, start, start + rem).remaining(), 0);\n","filename":"test\/jdk\/java\/nio\/Buffer\/BasicChar.java","additions":15,"deletions":0,"binary":false,"changes":15,"status":"modified"}]}