{"files":[{"patch":"@@ -2210,1 +2210,1 @@\n-            throw badClassFile(\"illegal.flag.combo\", String.format(\"0x%04x\", (int)rawFlags), \"field\", v);\n+            throw badClassFile(\"illegal.flag.combo\", Flags.toString((long)rawFlags), \"field\", v);\n@@ -2268,1 +2268,1 @@\n-            throw badClassFile(\"illegal.flag.combo\", String.format(\"0x%04x\", (int)rawFlags), \"method\", m);\n+            throw badClassFile(\"illegal.flag.combo\", Flags.toString((long)rawFlags), \"method\", m);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/ClassReader.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-BadFieldFlagsTest.java:10:32: compiler.err.cant.access: BadFieldFlags, (compiler.misc.bad.class.file.header: BadFieldFlags.class, (compiler.misc.illegal.flag.combo: 0x0006, field, my_field))\n+BadFieldFlagsTest.java:10:32: compiler.err.cant.access: BadFieldFlags, (compiler.misc.bad.class.file.header: BadFieldFlags.class, (compiler.misc.illegal.flag.combo: private protected, field, my_field))\n","filename":"test\/langtools\/tools\/javac\/classreader\/8219810\/BadFieldFlagsTest.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,1 +1,1 @@\n-BadMethodFlagsTest.java:10:13: compiler.err.cant.access: BadMethodFlags, (compiler.misc.bad.class.file.header: BadMethodFlags.class, (compiler.misc.illegal.flag.combo: 0x0105, method, my_method()))\n+BadMethodFlagsTest.java:10:13: compiler.err.cant.access: BadMethodFlags, (compiler.misc.bad.class.file.header: BadMethodFlags.class, (compiler.misc.illegal.flag.combo: public protected native, method, my_method()))\n","filename":"test\/langtools\/tools\/javac\/classreader\/8219810\/BadMethodFlagsTest.out","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}