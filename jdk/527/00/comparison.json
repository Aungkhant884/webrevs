{"files":[{"patch":"@@ -0,0 +1,119 @@\n+\/*\n+  @test\n+  @bug 4101435 8238436\n+  @summary Frame.setLocation(int,int)works unstable when the Frame is visible\n+  @author mohamed@siptech.co.in  : area= awt.Component\n+  @key headful\n+*\/\n+\n+import java.awt.Frame;\n+import java.awt.Toolkit;\n+import java.awt.Robot;\n+\n+\/**\n+ * This test  sets location of frame 100 times and\n+ * counts how many times the location was set incorrectly.\n+ * if the Frame location is set incorrectly,\n+ * the test will throw the exception.\"\n+ *\/\n+public class FrameLocationTest {\n+\n+    \/\/Declare things used in the test, like buttons and labels here\n+\n+\n+    private static int count = 0;\n+    private static Frame my_frame;\n+    private static Robot robot;\n+\n+    public static void main(final String[] args) throws Exception {\n+        FrameLocationTest app = new FrameLocationTest();\n+        app.init();\n+        app.start();\n+    }\n+\n+    public void init() throws Exception {\n+\n+        \/\/Create instructions for the user here, as well as set up\n+        \/\/ the environment -- set the layout manager, add buttons,\n+        \/\/ etc.\n+        \/\/ the frame instance is created with title 'TestFrame'.\n+        my_frame  = new Frame(\"TestFrame\");\n+\n+        \/\/frame size setting\n+        my_frame.setSize(150,100);\n+\n+        robot = new Robot();\n+        robot.setAutoDelay(100);\n+\n+    }  \/\/End  init()\n+\n+\n+    public void start () {\n+\n+        \/\/Get things going.  Request focus, set size, et cetera\n+\n+        \/\/Visiblity setting for frame.\n+        my_frame.setVisible(true);\n+        robot.waitForIdle();\n+        robot.delay(200);\n+\n+        \/\/ the following loop calls user defined method,it will return boolean value.\n+        \/\/ if it is true(ie., the Frame locations are set correctly) the bug is not reproducible.\n+        \/\/ false,  bug is reproducible(ie., the Frame locations are set incorrectly ).\n+\n+        setFrameLocation(my_frame);\n+    }\n+\n+\n+    \/\/ user defined method\n+    \/\/ This method  sets location of frame 100 times and\n+    \/\/ counts how many times the location was set incorrectly.\n+    \/\/ if count >0 this method will  return false ,otherwise true\n+    public void setFrameLocation(Frame frame) {\n+        int height, width;\n+        int x, y;\n+        int actualX, actualY;\n+        int i;\n+\n+        int minimumX = frame.getLocation().x;\n+        int minimumY = frame.getLocation().y;\n+\n+        height = Toolkit.getDefaultToolkit().getScreenSize().height;\n+        width = Toolkit.getDefaultToolkit().getScreenSize().width;\n+\n+        \/\/ This loop will execute 100 times generating random values\n+        \/\/ which are used to set the frame Location\n+        for (i=0; i<100; i++) {\n+            \/\/ Random values\n+            x = (new Double(Math.random()*(width-300))).intValue();\n+            y = (new Double(Math.random()*(height-400))).intValue();\n+\n+            \/\/ The x, y can not be less than minimum possible values for the\n+            \/\/platform.\n+            if (x < minimumX || y < minimumY) {\n+                i--;\n+                continue;\n+            }\n+\n+            \/\/ Based on x& y,the frame location will set\n+            frame.setLocation(x,y);\n+            robot.waitForIdle();\n+            robot.delay(200);\n+\n+            actualX = frame.getLocation().x;\n+            actualY = frame.getLocation().y;\n+\n+            \/\/ if setLoction() is set incorrectly, the value of count will be increased\n+            if (actualX != x || actualY != y) {\n+                System.out.println(\"Failure.  Expected: (\" + x + \", \" + y + \")\" +\n+                        \"  Saw: (\" + actualX + \", \" + actualY + \")\");\n+                count++;\n+            }\n+        }\n+\n+        frame.dispose();\n+        if (count > 0)\n+            throw new RuntimeException(\"Frame.setLocation(int, int) failed\");\n+    }\n+\n+} \/\/class FrameLocationTest end\n","filename":"test\/jdk\/java\/awt\/Frame\/FrameLocationTest\/FrameLocationTest.java","additions":119,"deletions":0,"binary":false,"changes":119,"status":"added"}]}