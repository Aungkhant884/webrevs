{"files":[{"patch":"@@ -193,2 +193,2 @@\n-     * The default implementation converts each path to a file and calls\n-     * {@link #getJavaFileObjectsFromFiles getJavaObjectsFromFiles}.\n+     * The default implementation lazily converts each path to a file and calls\n+     * {@link #getJavaFileObjectsFromFiles(Iterable) getJavaFileObjectsFromFiles}.\n@@ -196,1 +196,1 @@\n-     * cannot be converted to a file.\n+     * cannot be converted to a file at the point the conversion happens.\n@@ -215,2 +215,2 @@\n-     * The default implementation converts each path to a file and calls\n-     * {@link #getJavaFileObjectsFromFiles getJavaObjectsFromFiles}.\n+     * The default implementation lazily converts each path to a file and calls\n+     * {@link #getJavaFileObjectsFromPaths(Collection) getJavaFileObjectsFromPaths}.\n@@ -218,1 +218,1 @@\n-     * cannot be converted to a file.\n+     * cannot be converted to a file at the point the conversion happens.\n@@ -270,1 +270,2 @@\n-     * elements\n+     * elements and the given element is used by\n+     * {@linkplain #getJavaFileObjectsFromPaths(Collection)}.\n@@ -335,2 +336,2 @@\n-     * The default implementation converts each path to a file and calls\n-     * {@link #getJavaFileObjectsFromFiles getJavaObjectsFromFiles}.\n+     * The default implementation lazily converts each path to a file and calls\n+     * {@link #setLocation setLocation}.\n@@ -338,1 +339,2 @@\n-     * will be thrown if any of the paths cannot be converted to a file.\n+     * will be thrown if any of the paths cannot be converted to a file at\n+     * the point the conversion happens.\n","filename":"src\/java.compiler\/share\/classes\/javax\/tools\/StandardJavaFileManager.java","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"}]}