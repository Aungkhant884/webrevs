{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -379,1 +379,9 @@\n-    \/\/ Called by KDC test\n+    \/**\n+     * Adds a new entry in the key table.\n+     * @param service the service which will have a new entry in the key table.\n+     * @param salt specified non default salt, cannot be null\n+     * @param psswd the password which generates the key.\n+     * @param kvno the kvno to use, -1 means automatic increasing\n+     * @param append false if entries with old kvno would be removed.\n+     * Note: if kvno is not -1, entries with the same kvno are always removed\n+     *\/\n@@ -384,1 +392,14 @@\n-            psswd, salt);\n+                psswd, salt);\n+        addEntry(service, encKeys, kvno, append);\n+    }\n+\n+    \/**\n+     * Adds a new entry in the key table.\n+     * @param service the service which will have a new entry in the key table.\n+     * @param encKeys the keys to be added\n+     * @param kvno the kvno to use, -1 means automatic increasing\n+     * @param append false if entries with old kvno would be removed.\n+     * Note: if kvno is not -1, entries with the same kvno are always removed\n+     *\/\n+    public void addEntry(PrincipalName service, EncryptionKey[] encKeys,\n+            int kvno, boolean append) throws KrbException {\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/krb5\/internal\/ktab\/KeyTab.java","additions":24,"deletions":3,"binary":false,"changes":27,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,1 +38,0 @@\n-import java.io.File;\n@@ -64,1 +63,2 @@\n-    boolean forced = false; \/\/ true if delete without prompt. Default false\n+    boolean fopt = false;   \/\/ true if delete without prompt or\n+                            \/\/ add by contacting KDC. Default false\n@@ -68,0 +68,1 @@\n+    String salt = null;     \/\/ salt to use. Default null, means default salt\n@@ -189,0 +190,6 @@\n+                    case \"-s\":   \/\/ salt for -a\n+                        if (++i >= args.length || args[i].startsWith(\"-\")) {\n+                            error(\"A salt string must be specified after -s\");\n+                        }\n+                        salt = args[i];\n+                        break;\n@@ -216,2 +223,2 @@\n-                    case \"-f\":   \/\/ force delete, no prompt\n-                        forced = true;\n+                    case \"-f\":   \/\/ force delete or get salt from KDC\n+                        fopt = true;\n@@ -261,0 +268,4 @@\n+        if (salt != null && fopt) {\n+            System.err.println(\"-s and -f cannot coexist when adding a keytab entry.\");\n+            System.exit(-1);\n+        }\n@@ -286,1 +297,9 @@\n-            table.addEntry(pname, password, vAdd, append);\n+            if (fopt) {\n+                KrbAsReqBuilder builder = new KrbAsReqBuilder(pname, password);\n+                builder.action();\n+                table.addEntry(pname, builder.getKeys(true), vAdd, append);\n+            } else if (salt != null) {\n+                table.addEntry(pname, salt, password, vAdd, append);\n+            } else {\n+                table.addEntry(pname, password, vAdd, append);\n+            }\n@@ -370,1 +389,1 @@\n-            if (!forced) {\n+            if (!fopt) {\n@@ -427,0 +446,1 @@\n+\n@@ -437,1 +457,1 @@\n-        System.out.println(\"-a <principal name> [<password>] [-n <kvno>] [-append]\\n\"\n+        System.out.println(\"-a <principal name> [<password>] [-n <kvno>] [-f | -s <salt>] [-append]\\n\"\n@@ -441,1 +461,3 @@\n-                + \"    the Key Version Numbers. If -append is specified, new keys are\\n\"\n+                + \"    the Key Version Numbers. If <salt> is specified, it will be used\\n\"\n+                + \"    instead of the default salt. If -f is specified, the KDC will be\\n\"\n+                + \"    contacted to fetch the salt. If -append is specified, new keys are\\n\"\n","filename":"src\/java.security.jgss\/windows\/classes\/sun\/security\/krb5\/internal\/tools\/Ktab.java","additions":31,"deletions":9,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -210,0 +210,13 @@\n+        return fromUserKtab(s, user, ktab, false, storeKey);\n+    }\n+\n+    \/**\n+     * Logins with username\/keytab as a client.\n+     *\/\n+    public static Context fromUserKtabAsClient(\n+            String user, String ktab, boolean storeKey) throws Exception {\n+        return fromUserKtab(new Subject(), user, ktab, true, storeKey);\n+    }\n+\n+    private static Context fromUserKtab(Subject s,\n+            String user, String ktab, boolean isInitiator, boolean storeKey) throws Exception {\n@@ -216,1 +229,1 @@\n-        map.put(\"isInitiator\", \"false\");\n+        map.put(\"isInitiator\", Boolean.toString(isInitiator));\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/Context.java","additions":15,"deletions":2,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -0,0 +1,78 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8279064\n+ * @summary New options for ktab to provide non-default salt\n+ * @requires os.family == \"windows\"\n+ * @library \/test\/lib\n+ * @library \/sun\/security\/krb5\/auto\n+ * @compile -XDignore.symbol.file KtabSalt.java\n+ * @run main jdk.test.lib.FileInstaller ..\/TestHosts TestHosts\n+ * @run main\/othervm -Djdk.net.hosts.file=TestHosts KtabSalt\n+ *\/\n+\n+import jdk.test.lib.SecurityTools;\n+import jdk.test.lib.Utils;\n+import jdk.test.lib.process.OutputAnalyzer;\n+\n+import javax.security.auth.login.LoginException;\n+\n+public class KtabSalt {\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        OneKDC kdc = new OneKDC(null).writeJAASConf();\n+        kdc.addPrincipal(\"u1\", \"password\".toCharArray(),\n+                \"this_is_my_salt\", null);\n+\n+        \/\/ Using password works\n+        Context.fromUserPass(\"u1\", \"password\".toCharArray(), true);\n+\n+        \/\/ Using KDC's keytab works\n+        kdc.writeKtab(\"ktab0\");\n+        Context.fromUserKtabAsClient(\"u1\", \"ktab0\", true);\n+\n+        \/\/ Self-created keytab with default salt does not work\n+        ktab(\"-a u1 password -k ktab1\");\n+        Utils.runAndCheckException(\n+                () -> Context.fromUserKtabAsClient(\"u1\", \"ktab1\", true),\n+                LoginException.class);\n+\n+        \/\/ Self-creating keytab with specified salt works\n+        ktab(\"-a u1 password -s this_is_my_salt -k ktab2\");\n+        Context.fromUserKtabAsClient(\"u1\", \"ktab2\", true);\n+\n+        \/\/ Self-creating keytab with salt from KDC works\n+        ktab(\"-a u1 password -f -k ktab3\");\n+        Context.fromUserKtabAsClient(\"u1\", \"ktab3\", true);\n+    }\n+\n+    static OutputAnalyzer ktab(String cmdLine) throws Exception {\n+        String fullCmdLine = String.format(\n+                \"-J-Djava.security.krb5.conf=%s -J-Djdk.net.hosts.file=TestHosts %s\",\n+                OneKDC.KRB5_CONF, cmdLine);\n+        return SecurityTools.ktab(fullCmdLine).shouldHaveExitValue(0);\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/krb5\/auto\/tools\/KtabSalt.java","additions":78,"deletions":0,"binary":false,"changes":78,"status":"added"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2010, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2010, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -72,1 +72,1 @@\n-        ktab(\"-d me 3\");\n+        ktab(\"-d me -f 3\");\n@@ -74,1 +74,1 @@\n-        ktab(\"-d me -e 17 6\");\n+        ktab(\"-d me -f -e 17 6\");\n@@ -76,1 +76,1 @@\n-        ktab(\"-d me -e 19 6\");\n+        ktab(\"-d me -f -e 19 6\");\n@@ -78,1 +78,1 @@\n-        ktab(\"-d me -e 17 5\");\n+        ktab(\"-d me -f -e 17 5\");\n@@ -80,1 +80,1 @@\n-        ktab(\"-d me old\");\n+        ktab(\"-d me -f old\");\n@@ -83,1 +83,1 @@\n-            ktab(\"-d me old\");\n+            ktab(\"-d me -f old\");\n@@ -89,1 +89,1 @@\n-        ktab(\"-d me\");\n+        ktab(\"-d me -f\");\n@@ -96,1 +96,1 @@\n-                + \" -k \" + KEYTAB + \" -f \" + s).shouldHaveExitValue(0);\n+                + \" -k \" + KEYTAB + \" \" + s).shouldHaveExitValue(0);\n","filename":"test\/jdk\/sun\/security\/krb5\/tools\/KtabCheck.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"}]}