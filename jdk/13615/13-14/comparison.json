{"files":[{"patch":"@@ -40,1 +40,7 @@\n-    @ValueSource(strings = {\"abc\\\\\", \"ab\\\\c\", \"\\u0000\", \"\\u0001\", \"\\u001e\", \"\\u001f\"})\n+    @ValueSource(strings = {\n+        \"abc\\\\\", \"ab\\\\c\", \"\\u0001\", \"\\u001e\",\n+        \":\", \":foo\", \"foo:\", \"foo:bar\",\n+        \"@\", \"@foo\", \"foo@\", \"foo@bar\",\n+        \"\\\\\", \"\\\\foo\", \"foo\\\\\", \"foo\\\\bar\",\n+        \"\\u0000\", \"\\u0000foo\", \"foo\\u0000\", \"foo\\u0000bar\",\n+        \"\\u001f\", \"\\u001ffoo\", \"foo\\u001f\", \"foo\\u001fbar\"})\n@@ -51,1 +57,12 @@\n-    @ValueSource(strings = {\"a\\\\\\\\b\", \"a.b\/c\", \"a\\\\@b\\\\: c\", \"\"})\n+    @ValueSource(strings = {\n+        \"\", \"a\\\\\\\\b\", \"a.b\/c\", \"a\\\\@b\\\\: c\",\n+        \".\", \".foo\", \"foo.\", \"foo.bar\",\n+        \"..\", \"..foo\", \"foo..\", \"foo..bar\",\n+        \"[\", \"[foo\", \"foo[\", \"foo[bar\",\n+        \";\", \";foo\", \"foo;\", \"foo;bar\",\n+        \"\\\\\\\\\", \"\\\\\\\\foo\", \"foo\\\\\\\\\", \"foo\\\\\\\\bar\",\n+        \"\\\\\\\\\\\\\\\\\", \"\\\\\\\\\\\\\\\\foo\", \"foo\\\\\\\\\\\\\\\\\", \"foo\\\\\\\\\\\\\\\\bar\",\n+        \"\\\\:\", \"\\\\:foo\", \"foo\\\\:\", \"foo\\\\:bar\",\n+        \"\\\\:\\\\:\", \"\\\\:\\\\:foo\", \"foo\\\\:\\\\:\", \"foo\\\\:\\\\:bar\",\n+        \"\\\\@\", \"\\\\@foo\", \"foo\\\\@\", \"foo\\\\@bar\",\n+        \"\\\\@\\\\@\", \"\\\\@\\\\@foo\", \"foo\\\\@\\\\@\", \"foo\\\\@\\\\@bar\"})\n@@ -54,1 +71,1 @@\n-        assertEquals(ModuleDesc.of(mdl).moduleName(), mdl);\n+        assertEquals(ModuleDesc.of(mdl).name(), mdl);\n","filename":"test\/jdk\/java\/lang\/constant\/ModuleDescTest.java","additions":20,"deletions":3,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -62,6 +62,6 @@\n-        assertEquals(PackageDesc.of(\"a\").packageName(), PackageDesc.ofInternalName(\"a\").packageName());\n-        assertEquals(PackageDesc.of(\"a.b\").packageName(), PackageDesc.ofInternalName(\"a\/b\").packageName());\n-        assertEquals(PackageDesc.of(\"a.b.c\").packageName(), PackageDesc.ofInternalName(\"a\/b\/c\").packageName());\n-        assertEquals(PackageDesc.of(\"a\").packageInternalName(), PackageDesc.ofInternalName(\"a\").packageInternalName());\n-        assertEquals(PackageDesc.of(\"a.b\").packageInternalName(), PackageDesc.ofInternalName(\"a\/b\").packageInternalName());\n-        assertEquals(PackageDesc.of(\"a.b.c\").packageInternalName(), PackageDesc.ofInternalName(\"a\/b\/c\").packageInternalName());\n+        assertEquals(PackageDesc.of(\"a\").name(), PackageDesc.ofInternalName(\"a\").name());\n+        assertEquals(PackageDesc.of(\"a.b\").name(), PackageDesc.ofInternalName(\"a\/b\").name());\n+        assertEquals(PackageDesc.of(\"a.b.c\").name(), PackageDesc.ofInternalName(\"a\/b\/c\").name());\n+        assertEquals(PackageDesc.of(\"a\").internalName(), PackageDesc.ofInternalName(\"a\").internalName());\n+        assertEquals(PackageDesc.of(\"a.b\").internalName(), PackageDesc.ofInternalName(\"a\/b\").internalName());\n+        assertEquals(PackageDesc.of(\"a.b.c\").internalName(), PackageDesc.ofInternalName(\"a\/b\/c\").internalName());\n","filename":"test\/jdk\/java\/lang\/constant\/PackageDescTest.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"}]}