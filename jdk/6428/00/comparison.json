{"files":[{"patch":"@@ -295,0 +295,1 @@\n+        case T_LONG:   return Op_NegL;\n","filename":"src\/hotspot\/share\/prims\/vectorSupport.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package compiler.vectorapi;\n+\n+import jdk.incubator.vector.LongVector;\n+\n+\/*\n+ * @test\n+ * @bug 8275643\n+ * @summary Test that LongVector.neg is properly handled by the _VectorUnaryOp C2 intrinsic\n+ * @modules jdk.incubator.vector\n+ * @run main\/othervm -XX:-TieredCompilation -XX:+AlwaysIncrementalInline -Xbatch\n+ *                   -XX:CompileCommand=dontinline,compiler.vectorapi.TestLongVectorNeg::test\n+ *                   compiler.vectorapi.TestLongVectorNeg\n+ *\/\n+public class TestLongVectorNeg {\n+\n+    static LongVector test(LongVector v) {\n+        return v.neg();\n+    }\n+\n+    public static void main(String[] args) {\n+        LongVector v = LongVector.zero(LongVector.SPECIES_128);\n+        for (int i = 0; i < 50_000; ++i) {\n+            v.abs(); \/\/ Warmup to make sure the !VO_SPECIAL code path is taken as well\n+            test(v);\n+        }\n+    }\n+}\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorapi\/TestLongVectorNeg.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"}]}