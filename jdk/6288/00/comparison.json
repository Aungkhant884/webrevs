{"files":[{"patch":"@@ -38,1 +38,1 @@\n-  { \"GenericCDSFileMapHeader::_base_archive_path_offset\",  offset_of(GenericCDSFileMapHeader, _base_archive_path_offset) },\n+  { \"GenericCDSFileMapHeader::_base_archive_name_offset\",  offset_of(GenericCDSFileMapHeader, _base_archive_name_offset) },\n","filename":"src\/hotspot\/share\/cds\/cdsConstants.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -199,1 +199,1 @@\n-  size_t base_archive_path_offset = 0;\n+  size_t base_archive_name_offset = 0;\n@@ -210,1 +210,1 @@\n-      base_archive_path_offset = c_header_size;\n+      base_archive_name_offset = c_header_size;\n@@ -219,1 +219,1 @@\n-                    base_archive_path_offset);\n+                    base_archive_name_offset);\n@@ -224,1 +224,1 @@\n-                             size_t base_archive_path_offset) {\n+                             size_t base_archive_name_offset) {\n@@ -229,1 +229,1 @@\n-  set_base_archive_path_offset((unsigned int)base_archive_path_offset);\n+  set_base_archive_name_offset((unsigned int)base_archive_name_offset);\n@@ -283,1 +283,1 @@\n-  assert(base_archive_path_offset() != 0, \"_base_archive_path_offset not set\");\n+  assert(base_archive_name_offset() != 0, \"_base_archive_name_offset not set\");\n@@ -285,1 +285,1 @@\n-  memcpy((char*)this + base_archive_path_offset(), archive, base_archive_name_size());\n+  memcpy((char*)this + base_archive_name_offset(), archive, base_archive_name_size());\n@@ -295,1 +295,1 @@\n-  st->print_cr(\"- base_archive_path_offset:       \" UINT32_FORMAT, base_archive_path_offset());\n+  st->print_cr(\"- base_archive_name_offset:       \" UINT32_FORMAT, base_archive_name_offset());\n@@ -1091,1 +1091,1 @@\n-    lseek(_fd, _header._base_archive_path_offset, SEEK_SET); \/\/ position to correct offset.\n+    lseek(_fd, _header._base_archive_name_offset, SEEK_SET); \/\/ position to correct offset.\n@@ -1127,3 +1127,3 @@\n-    if (header->_base_archive_path_offset != 0) {\n-      log_info(cds)(\"_base_archive_path_offset should be 0\");\n-      log_info(cds)(\"_base_archive_path_offset = \" UINT32_FORMAT, header->_base_archive_path_offset);\n+    if (header->_base_archive_name_offset != 0) {\n+      log_info(cds)(\"_base_archive_name_offset should be 0\");\n+      log_info(cds)(\"_base_archive_name_offset = \" UINT32_FORMAT, header->_base_archive_name_offset);\n@@ -1138,1 +1138,1 @@\n-    unsigned int path_offset = header->_base_archive_path_offset;\n+    unsigned int name_offset = header->_base_archive_name_offset;\n@@ -1140,2 +1140,2 @@\n-    if (path_offset + name_size != header_size) {\n-      log_info(cds)(\"_header_size should be equal to _base_archive_path_offset plus _base_archive_name_size\");\n+    if (name_offset + name_size != header_size) {\n+      log_info(cds)(\"_header_size should be equal to _base_archive_name_offset plus _base_archive_name_size\");\n@@ -1143,1 +1143,1 @@\n-      log_info(cds)(\"  _base_archive_path_offset = \" UINT32_FORMAT, path_offset);\n+      log_info(cds)(\"  _base_archive_name_offset = \" UINT32_FORMAT, name_offset);\n@@ -1168,2 +1168,2 @@\n-  if ((header->_base_archive_name_size == 0 && header->_base_archive_path_offset != 0) ||\n-      (header->_base_archive_name_size != 0 && header->_base_archive_path_offset == 0)) {\n+  if ((header->_base_archive_name_size == 0 && header->_base_archive_name_offset != 0) ||\n+      (header->_base_archive_name_size != 0 && header->_base_archive_name_offset == 0)) {\n@@ -1174,1 +1174,1 @@\n-      header->_base_archive_path_offset == 0) {\n+      header->_base_archive_name_offset == 0) {\n@@ -1220,1 +1220,1 @@\n-  unsigned int base_offset = header()->base_archive_path_offset();\n+  unsigned int base_offset = header()->base_archive_name_offset();\n@@ -1227,1 +1227,1 @@\n-      log_info(cds)(\"base_archive_path_offset: \" UINT32_FORMAT, base_offset);\n+      log_info(cds)(\"base_archive_name_offset: \" UINT32_FORMAT, base_offset);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":21,"deletions":21,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -246,1 +246,1 @@\n-  unsigned int base_archive_path_offset() const { return _generic_header._base_archive_path_offset; }\n+  unsigned int base_archive_name_offset() const { return _generic_header._base_archive_name_offset; }\n@@ -253,1 +253,1 @@\n-  void set_base_archive_path_offset(unsigned int s) { _generic_header._base_archive_path_offset = s; }\n+  void set_base_archive_name_offset(unsigned int s) { _generic_header._base_archive_name_offset = s; }\n@@ -316,1 +316,1 @@\n-                size_t base_archive_name_size, size_t base_archive_path_offset);\n+                size_t base_archive_name_size, size_t base_archive_name_offset);\n","filename":"src\/hotspot\/share\/cds\/filemap.hpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  unsigned int _base_archive_path_offset; \/\/ offset where the base archive name is stored\n+  unsigned int _base_archive_name_offset; \/\/ offset where the base archive name is stored\n@@ -75,1 +75,1 @@\n-                                          \/\/       (char*)this + _base_archive_path_offset\n+                                          \/\/       (char*)this + _base_archive_name_offset\n","filename":"src\/hotspot\/share\/include\/cds.h","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -225,9 +225,9 @@\n-        \/\/ modify _base_archive_path_offet to non-zero\n-        System.out.println(\"\\n8. modify _base_archive_path_offset to non-zero\\n\");\n-        String baseArchivePathOffsetName = startNewArchive(\"base-arhive-path-offset\");\n-        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, baseArchivePathOffsetName);\n-        int baseArchivePathOffset = CDSArchiveUtils.baseArchivePathOffset(copiedJsa);\n-        System.out.println(\"    baseArchivePathOffset = \" + baseArchivePathOffset);\n-        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetBaseArchivePathOffset(), 1024);\n-        baseArchivePathOffset = CDSArchiveUtils.baseArchivePathOffset(copiedJsa);\n-        System.out.println(\"new baseArchivePathOffset = \" + baseArchivePathOffset);\n+        \/\/ modify _base_archive_name_offet to non-zero\n+        System.out.println(\"\\n8. modify _base_archive_name_offset to non-zero\\n\");\n+        String baseArchiveNameOffsetName = startNewArchive(\"base-arhive-path-offset\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(orgJsaFile, baseArchiveNameOffsetName);\n+        int baseArchiveNameOffset = CDSArchiveUtils.baseArchiveNameOffset(copiedJsa);\n+        System.out.println(\"    baseArchiveNameOffset = \" + baseArchiveNameOffset);\n+        CDSArchiveUtils.writeData(copiedJsa, CDSArchiveUtils.offsetBaseArchiveNameOffset(), 1024);\n+        baseArchiveNameOffset = CDSArchiveUtils.baseArchiveNameOffset(copiedJsa);\n+        System.out.println(\"new baseArchiveNameOffset = \" + baseArchiveNameOffset);\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/SharedArchiveConsistency.java","additions":9,"deletions":9,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-               new String[] {\"_header_size should be equal to _base_archive_path_offset plus _base_archive_name_size\",\n+               new String[] {\"_header_size should be equal to _base_archive_name_offset plus _base_archive_name_size\",\n@@ -120,2 +120,2 @@\n-        String wrongBaseArchivePathOffset = getNewArchiveName(\"wrongBaseArchivePathOffset\");\n-        copiedJsa = CDSArchiveUtils.copyArchiveFile(jsa, wrongBaseArchivePathOffset);\n+        String wrongBaseArchiveNameOffset = getNewArchiveName(\"wrongBaseArchiveNameOffset\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(jsa, wrongBaseArchiveNameOffset);\n@@ -123,3 +123,3 @@\n-        int baseArchivePathOffset = CDSArchiveUtils.baseArchivePathOffset(copiedJsa);\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetBaseArchivePathOffset(), baseArchivePathOffset + 1024);\n-        runTwo(baseArchiveName, wrongBaseArchivePathOffset,\n+        int baseArchiveNameOffset = CDSArchiveUtils.baseArchiveNameOffset(copiedJsa);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, CDSArchiveUtils.offsetBaseArchiveNameOffset(), baseArchiveNameOffset + 1024);\n+        runTwo(baseArchiveName, wrongBaseArchiveNameOffset,\n@@ -127,1 +127,1 @@\n-               new String[] {\"_header_size should be equal to _base_archive_path_offset plus _base_archive_name_size\",\n+               new String[] {\"_header_size should be equal to _base_archive_name_offset plus _base_archive_name_size\",\n@@ -133,2 +133,2 @@\n-        String wrongBasePathOffset = getNewArchiveName(\"wrongBasePathOffset\");\n-        copiedJsa = CDSArchiveUtils.copyArchiveFile(jsa, wrongBasePathOffset);\n+        String wrongBaseNameOffset = getNewArchiveName(\"wrongBaseNameOffset\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(jsa, wrongBaseNameOffset);\n@@ -136,4 +136,4 @@\n-        baseArchivePathOffset = CDSArchiveUtils.baseArchivePathOffset(copiedJsa);\n-        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, baseArchivePathOffset,\n-                                             baseArchivePathOffset + baseArchiveNameSize\/2);\n-        runTwo(baseArchiveName, wrongBasePathOffset,\n+        baseArchiveNameOffset = CDSArchiveUtils.baseArchiveNameOffset(copiedJsa);\n+        CDSArchiveUtils.modifyHeaderIntField(copiedJsa, baseArchiveNameOffset,\n+                                             baseArchiveNameOffset + baseArchiveNameSize\/2);\n+        runTwo(baseArchiveName, wrongBaseNameOffset,\n@@ -149,1 +149,1 @@\n-        baseArchivePathOffset = CDSArchiveUtils.baseArchivePathOffset(copiedJsa);\n+        baseArchiveNameOffset = CDSArchiveUtils.baseArchiveNameOffset(copiedJsa);\n@@ -151,1 +151,1 @@\n-        long offset = baseArchivePathOffset + baseArchiveNameSize - 1;  \/\/ end of line\n+        long offset = baseArchiveNameOffset + baseArchiveNameSize - 1;  \/\/ end of line\n@@ -163,1 +163,1 @@\n-        baseArchivePathOffset = CDSArchiveUtils.baseArchivePathOffset(copiedJsa);\n+        baseArchiveNameOffset = CDSArchiveUtils.baseArchiveNameOffset(copiedJsa);\n@@ -165,1 +165,1 @@\n-        offset = baseArchivePathOffset + baseArchiveNameSize - 2;  \/\/ the \"a\" in \".jsa\"\n+        offset = baseArchiveNameOffset + baseArchiveNameSize - 2;  \/\/ the \"a\" in \".jsa\"\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArchiveConsistency.java","additions":17,"deletions":17,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    private static int offsetBaseArchivePathOffset;\/\/ offset of GenericCDSFileMapHeader::_base_archive_path_offset\n+    private static int offsetBaseArchiveNameOffset;\/\/ offset of GenericCDSFileMapHeader::_base_archive_name_offset\n@@ -90,1 +90,1 @@\n-            offsetBaseArchivePathOffset = wb.getCDSOffsetForName(\"GenericCDSFileMapHeader::_base_archive_path_offset\");\n+            offsetBaseArchiveNameOffset = wb.getCDSOffsetForName(\"GenericCDSFileMapHeader::_base_archive_name_offset\");\n@@ -124,1 +124,1 @@\n-    public static int offsetBaseArchivePathOffset() { return offsetBaseArchivePathOffset; }\n+    public static int offsetBaseArchiveNameOffset() { return offsetBaseArchiveNameOffset; }\n@@ -151,2 +151,2 @@\n-    public static int baseArchivePathOffset(File jsaFile) throws Exception {\n-        return (int)readInt(jsaFile, offsetBaseArchivePathOffset, 4);\n+    public static int baseArchiveNameOffset(File jsaFile) throws Exception {\n+        return (int)readInt(jsaFile, offsetBaseArchiveNameOffset, 4);\n@@ -161,2 +161,2 @@\n-        int baseArchivePathOffset = (int)readInt(jsaFile, offsetBaseArchivePathOffset, 4);\n-        return readString(jsaFile, baseArchivePathOffset, size - 1); \/\/ exclude terminating '\\0'\n+        int baseArchiveNameOffset = (int)readInt(jsaFile, offsetBaseArchiveNameOffset, 4);\n+        return readString(jsaFile, baseArchiveNameOffset, size - 1); \/\/ exclude terminating '\\0'\n","filename":"test\/lib\/jdk\/test\/lib\/cds\/CDSArchiveUtils.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"}]}