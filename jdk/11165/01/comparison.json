{"files":[{"patch":"@@ -321,5 +321,1 @@\n-void G1GCPhaseTimes::log_phase(WorkerDataArray<double>* phase, uint indent_level, outputStream* out, bool print_sum) const {\n-  out->sp(indent_level * 2);\n-  phase->print_summary_on(out, print_sum);\n-  details(phase, indent_level);\n-\n+void G1GCPhaseTimes::print_thread_work_items(WorkerDataArray<double>* phase, uint indent_level, outputStream* out) const {\n@@ -336,0 +332,31 @@\n+void G1GCPhaseTimes::debug_phase_merge_remset() const {\n+  LogTarget(Debug, gc, phases) lt;\n+  if (!lt.is_enabled()) {\n+    return;\n+  }\n+\n+  ResourceMark rm;\n+  LogStream ls(lt);\n+\n+  WorkerDataArray<double>* phase = _gc_par_phases[MergeRS];\n+  WorkerDataArray<double>* sub_phase = _gc_par_phases[MergeER];\n+\n+  uint indent_level = 2;\n+\n+  ls.sp(indent_level * 2);\n+  phase->print_summary_on(&ls, true);\n+  details(phase, indent_level);\n+\n+  log_phase(sub_phase, (indent_level + 1), &ls, true);\n+\n+  print_thread_work_items(phase, indent_level, &ls);\n+}\n+\n+void G1GCPhaseTimes::log_phase(WorkerDataArray<double>* phase, uint indent_level, outputStream* out, bool print_sum) const {\n+  out->sp(indent_level * 2);\n+  phase->print_summary_on(out, print_sum);\n+  details(phase, indent_level);\n+\n+  print_thread_work_items(phase, indent_level, out);\n+}\n+\n@@ -438,2 +465,2 @@\n-  debug_phase(_gc_par_phases[MergeER]);\n-  debug_phase(_gc_par_phases[MergeRS]);\n+  debug_phase_merge_remset();\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.cpp","additions":34,"deletions":7,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -225,0 +225,3 @@\n+  void print_thread_work_items(WorkerDataArray<double>* phase, uint indent_level, outputStream* out) const;\n+  void debug_phase_merge_remset() const;\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1GCPhaseTimes.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1335,6 +1335,10 @@\n-    \/\/ We schedule flushing the remembered sets of humongous fast reclaim candidates\n-    \/\/ onto the card table first to allow the remaining parallelized tasks hide it.\n-    if (_initial_evacuation &&\n-        g1h->has_humongous_reclaim_candidates() &&\n-        !_fast_reclaim_handled &&\n-        !Atomic::cmpxchg(&_fast_reclaim_handled, false, true)) {\n+    {\n+      \/\/ Merge remset of ...\n+      G1GCParPhaseTimesTracker x(p, merge_remset_phase, worker_id, !_initial_evacuation \/* allow_multiple_record *\/);\n+\n+      {\n+        \/\/ 1. eager-reclaim candidates\n+        if (_initial_evacuation &&\n+            g1h->has_humongous_reclaim_candidates() &&\n+            !_fast_reclaim_handled &&\n+            !Atomic::cmpxchg(&_fast_reclaim_handled, false, true)) {\n@@ -1342,1 +1346,1 @@\n-      G1GCParPhaseTimesTracker x(p, G1GCPhaseTimes::MergeER, worker_id);\n+          G1GCParPhaseTimesTracker subphase_x(p, G1GCPhaseTimes::MergeER, worker_id);\n@@ -1344,2 +1348,2 @@\n-      G1FlushHumongousCandidateRemSets cl(_scan_state);\n-      g1h->heap_region_iterate(&cl);\n+          G1FlushHumongousCandidateRemSets cl(_scan_state);\n+          g1h->heap_region_iterate(&cl);\n@@ -1347,2 +1351,4 @@\n-      for (uint i = 0; i < G1GCPhaseTimes::MergeRSContainersSentinel; i++) {\n-        p->record_or_add_thread_work_item(merge_remset_phase, worker_id, cl.merged(i), i);\n+          for (uint i = 0; i < G1GCPhaseTimes::MergeRSContainersSentinel; i++) {\n+            p->record_or_add_thread_work_item(merge_remset_phase, worker_id, cl.merged(i), i);\n+          }\n+        }\n@@ -1350,1 +1356,0 @@\n-    }\n@@ -1352,4 +1357,0 @@\n-    \/\/ Merge remembered sets of current candidates.\n-    {\n-      G1GCParPhaseTimesTracker x(p, merge_remset_phase, worker_id, !_initial_evacuation \/* allow_multiple_record *\/);\n-      G1MergeCardSetStats stats;\n@@ -1357,3 +1358,6 @@\n-        G1MergeCardSetClosure merge(_scan_state);\n-        G1ClearBitmapClosure clear(g1h);\n-        G1CombinedClosure combined(&merge, &clear);\n+        \/\/ 2. collection set\n+        G1MergeCardSetStats stats;\n+        {\n+          G1MergeCardSetClosure merge(_scan_state);\n+          G1ClearBitmapClosure clear(g1h);\n+          G1CombinedClosure combined(&merge, &clear);\n@@ -1361,3 +1365,3 @@\n-        g1h->collection_set_iterate_increment_from(&combined, nullptr, worker_id);\n-        stats = merge.stats();\n-      }\n+          g1h->collection_set_iterate_increment_from(&combined, nullptr, worker_id);\n+          stats = merge.stats();\n+        }\n@@ -1365,2 +1369,3 @@\n-      for (uint i = 0; i < G1GCPhaseTimes::MergeRSContainersSentinel; i++) {\n-        p->record_or_add_thread_work_item(merge_remset_phase, worker_id, stats.merged(i), i);\n+        for (uint i = 0; i < G1GCPhaseTimes::MergeRSContainersSentinel; i++) {\n+          p->record_or_add_thread_work_item(merge_remset_phase, worker_id, stats.merged(i), i);\n+        }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp","additions":29,"deletions":24,"binary":false,"changes":53,"status":"modified"}]}