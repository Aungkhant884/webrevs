{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-        Set<String> nameSet = new HashSet<>();\n+        Set<String> nameSet = HashSet.newHashSet(sanitizedFields.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventFactory.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-            Map<String, ValueDescriptor> newCache = new LinkedHashMap<>(fields.size());\n+            Map<String, ValueDescriptor> newCache = LinkedHashMap.newLinkedHashMap(fields.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -105,1 +105,1 @@\n-        Map<Long, EventType> previousSet = new HashMap<>(previous.size());\n+        Map<Long, EventType> previousSet = HashMap.newHashMap(previous.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/MetadataEvent.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -166,2 +166,2 @@\n-        List<Type> types = new ArrayList<>();\n-        HashSet<Long> foundIds = new HashSet<>();\n+        List<Type> types = new ArrayList<>(200);\n+        HashSet<Long> foundIds = HashSet.newHashSet(types.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordingFile.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -143,1 +143,1 @@\n-    private final Map<String, List<AnnotationElement>> anotationElements = new HashMap<>(20);\n+    private final Map<String, List<AnnotationElement>> anotationElements = HashMap.newHashMap(16);\n@@ -207,1 +207,1 @@\n-        Map<String, AnnotationElement> relationMap = new HashMap<>(20);\n+        Map<String, AnnotationElement> relationMap = HashMap.newHashMap(10);\n@@ -275,2 +275,2 @@\n-        Map<String, Type> typeMap = new HashMap<>(2 * types.size());\n-        Map<String, Type> knownTypeMap = new HashMap<>(20);\n+        Map<String, Type> typeMap = HashMap.newHashMap(types.size());\n+        Map<String, Type> knownTypeMap = HashMap.newHashMap(16);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataLoader.java","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -60,2 +60,2 @@\n-    private final List<EventType> nativeEventTypes = new ArrayList<>(100);\n-    private final List<EventControl> nativeControls = new ArrayList<EventControl>(100);\n+    private final List<EventType> nativeEventTypes = new ArrayList<>(150);\n+    private final List<EventControl> nativeControls = new ArrayList<EventControl>(nativeEventTypes.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataRepository.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -81,1 +81,1 @@\n-        Set<String> stringPool = new HashSet<>(1000);\n+        Set<String> stringPool = HashSet.newHashSet(2500);\n@@ -85,1 +85,1 @@\n-        HashMap<String, Integer> lookup = new LinkedHashMap<>(stringPool.size());\n+        HashMap<String, Integer> lookup = LinkedHashMap.newLinkedHashMap(stringPool.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/MetadataWriter.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -83,1 +83,1 @@\n-                values = new HashSet<String>(5);\n+                values = HashSet.newHashSet(4);\n@@ -176,1 +176,1 @@\n-        Map<String, InternalSetting> map = new LinkedHashMap<>(activeSettings.size());\n+        Map<String, InternalSetting> map = LinkedHashMap.newLinkedHashMap(activeSettings.size());\n@@ -191,1 +191,1 @@\n-        Map<String, InternalSetting> internals = new LinkedHashMap<>();\n+        Map<String, InternalSetting> internals = LinkedHashMap.newLinkedHashMap(rec.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/SettingsManager.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -66,1 +66,1 @@\n-    private static final Map<Long, Type> types = new LinkedHashMap<>(100);\n+    private static final Map<Long, Type> types = LinkedHashMap.newLinkedHashMap(350);\n@@ -304,1 +304,1 @@\n-        Map<String, ValueDescriptor> dynamicFieldSet = new HashMap<>();\n+        Map<String, ValueDescriptor> dynamicFieldSet = HashMap.newHashMap(dynamicFields.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/TypeLibrary.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -464,1 +464,1 @@\n-        HashMap<String, String> map = new HashMap<>(settings.size());\n+        HashMap<String, String> map = HashMap.newHashMap(settings.size());\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Utils.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2021, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -180,1 +180,1 @@\n-            systemEventLookup = new HashSet<>();\n+            systemEventLookup = HashSet.newHashSet(200);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/consumer\/EventLog.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -235,1 +235,1 @@\n-        LinkedHashMap<String, String> s = new LinkedHashMap<>();\n+        LinkedHashMap<String, String> s = LinkedHashMap.newLinkedHashMap(settings.length);\n","filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/dcmd\/DCmdStart.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -76,1 +76,1 @@\n-            Map<String, String> map = new HashMap<>(values.size());\n+            Map<String, String> map = HashMap.newHashMap(values.size());\n","filename":"src\/jdk.management.jfr\/share\/classes\/jdk\/management\/jfr\/ConfigurationInfo.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -319,1 +319,1 @@\n-        Map<String, String> options = new HashMap<>(10);\n+        Map<String, String> options = HashMap.newHashMap(10);\n","filename":"src\/jdk.management.jfr\/share\/classes\/jdk\/management\/jfr\/FlightRecorderMXBeanImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}