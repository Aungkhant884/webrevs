{"files":[{"patch":"@@ -479,1 +479,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n@@ -487,2 +488,1 @@\n-    switch (n) {\n-    case 0:\n+    if (n == register_count - 1) {\n@@ -490,2 +490,1 @@\n-      break;\n-    case 1:\n+    } else if (n == register_count - 2) {\n@@ -493,2 +492,1 @@\n-      break;\n-    case 2:\n+    } else if (n == register_count - 3) {\n@@ -496,5 +494,3 @@\n-      break;\n-    default:\n-      st->print(\"r%-2d=\", n-3);\n-      print_location(st, (intptr_t)uc->uc_mcontext.jmp_context.gpr[n-3]);\n-      break;\n+    } else {\n+      st->print(\"r%-2d=\", n);\n+      print_location(st, (intptr_t)uc->uc_mcontext.jmp_context.gpr[n]);\n","filename":"src\/hotspot\/os_cpu\/aix_ppc\/os_aix_ppc.cpp","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -487,1 +487,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/bsd_aarch64\/os_bsd_aarch64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -864,1 +864,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/bsd_x86\/os_bsd_x86.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -365,1 +365,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/os_linux_aarch64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -493,1 +493,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/linux_arm\/os_linux_arm.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -487,1 +487,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/linux_ppc\/os_linux_ppc.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -377,1 +377,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n@@ -385,1 +386,1 @@\n-    st->print(\"%-*.*s=\", 8, 8, reg_abi_names[n]);\n+    st->print(\"%-8.8s=\", reg_abi_names[n]);\n","filename":"src\/hotspot\/os_cpu\/linux_riscv\/os_linux_riscv.cpp","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -466,1 +466,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n@@ -474,1 +475,1 @@\n-    if (n == 0) {\n+    if (n == register_count - 1) {\n@@ -477,2 +478,2 @@\n-      st->print(\"r%-2d=\", n-1);\n-      print_location(st, uc->uc_mcontext.gregs[n-1]);\n+      st->print(\"r%-2d=\", n);\n+      print_location(st, uc->uc_mcontext.gregs[n]);\n","filename":"src\/hotspot\/os_cpu\/linux_s390\/os_linux_s390.cpp","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -581,1 +581,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/linux_x86\/os_linux_x86.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -230,1 +230,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/windows_aarch64\/os_windows_aarch64.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -473,1 +473,2 @@\n-  if (context == nullptr || n < 0 || n >= register_count) {\n+  assert(n >= 0 && n <= register_count, \"Invalid continuation value\");\n+  if (context == nullptr || n == register_count) {\n","filename":"src\/hotspot\/os_cpu\/windows_x86\/os_windows_x86.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -506,2 +506,6 @@\n-    const intptr_t *slot = fr.sp() + i;\n-    if (is_aligned(slot, sizeof(intptr_t)) && os::is_readable_pointer(slot)) {\n+    const intptr_t *sp = fr.sp();\n+    const intptr_t *slot = sp + i;\n+    if (!is_aligned(slot, sizeof(intptr_t))) {\n+      st->print_cr(\"Misaligned sp: \" PTR_FORMAT, p2i(sp));\n+      break;\n+    } else if (os::is_readable_pointer(slot)) {\n@@ -510,0 +514,2 @@\n+    } else {\n+      st->print_cr(\"unreadable stack slot at sp + %d\", i);\n@@ -637,3 +643,3 @@\n-    record_step_start_time();                              \\\n-    _step_did_timeout = false;                             \\\n-    if ((cond)) {\n+    if ((cond)) {                                          \\\n+      record_step_start_time();                            \\\n+      _step_did_timeout = false;\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":11,"deletions":5,"binary":false,"changes":16,"status":"modified"}]}