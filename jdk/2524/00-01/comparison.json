{"files":[{"patch":"@@ -143,0 +143,1 @@\n+    @SuppressWarnings(\"unchecked\")\n@@ -176,0 +177,1 @@\n+    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n@@ -1900,1 +1902,1 @@\n-         * A class for the {@link #EMPTY_NAVIGABLE_MAP} which needs readResolve\n+         * A class for the {@link EMPTY_NAVIGABLE_MAP} which needs readResolve\n@@ -1923,1 +1925,1 @@\n-         * Singleton for {@link #emptyNavigableMap()} which is also immutable.\n+         * Singleton for {@link emptyNavigableMap()} which is also immutable.\n@@ -5186,2 +5188,2 @@\n-            var n = this.n;\n-            var element = this.element;\n+            int n = this.n;\n+            E element = this.element;\n@@ -5438,1 +5440,1 @@\n-        return new Enumeration<>() {\n+        return new Enumeration<T>() {\n","filename":"src\/java.base\/share\/classes\/java\/util\/Collections.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -0,0 +1,33 @@\n+package micro.org.openjdk.bench.java.util;\n+\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+import java.util.*;\n+import java.util.concurrent.TimeUnit;\n+\n+\/**\n+ * @see <a href=\"https:\/\/bugs.openjdk.java.net\/browse\/JDK-8274715\">JDK-8274715<\/a>\n+ *\/\n+@Fork(value = 3)\n+@State(Scope.Thread)\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@Warmup(iterations = 5, time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(iterations = 5, time = 2, timeUnit = TimeUnit.SECONDS)\n+public class NCopiesBenchmarks {\n+  @Param({\"10\", \"50\", \"100\"})\n+  int size;\n+\n+  private List<Object> list;\n+\n+  @Setup\n+  public void prepare() {\n+    list = Collections.nCopies(size, new Object());\n+  }\n+\n+  @Benchmark\n+  public void forEach(Blackhole bh) {\n+    list.forEach(bh::consume);\n+  }\n+}\n\\ No newline at end of file\n","filename":"test\/micro\/org\/openjdk\/bench\/java\/util\/NCopiesBenchmarks.java","additions":33,"deletions":0,"binary":false,"changes":33,"status":"added"}]}