{"files":[{"patch":"@@ -152,1 +152,1 @@\n-const uint64_t    ZMarkCompleteTimeout          = 1; \/\/ ms\n+const uint64_t    ZMarkCompleteTimeout          = 1000; \/\/ us\n","filename":"src\/hotspot\/share\/gc\/z\/zGlobals.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -566,1 +566,1 @@\n-  ZMarkTimeout(uint64_t timeout_in_millis) :\n+  ZMarkTimeout(uint64_t timeout_in_micros) :\n@@ -568,1 +568,1 @@\n-      _timeout(_start.value() + TimeHelper::millis_to_counter(timeout_in_millis)),\n+      _timeout(_start.value() + TimeHelper::micros_to_counter(timeout_in_micros)),\n@@ -594,1 +594,1 @@\n-void ZMark::work_with_timeout(ZMarkCache* cache, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, uint64_t timeout_in_millis) {\n+void ZMark::work_with_timeout(ZMarkCache* cache, ZMarkStripe* stripe, ZMarkThreadLocalStacks* stacks, uint64_t timeout_in_micros) {\n@@ -596,1 +596,1 @@\n-  ZMarkTimeout timeout(timeout_in_millis);\n+  ZMarkTimeout timeout(timeout_in_micros);\n@@ -614,1 +614,1 @@\n-void ZMark::work(uint64_t timeout_in_millis) {\n+void ZMark::work(uint64_t timeout_in_micros) {\n@@ -619,1 +619,1 @@\n-  if (timeout_in_millis == 0) {\n+  if (timeout_in_micros == 0) {\n@@ -622,1 +622,1 @@\n-    work_with_timeout(&cache, stripe, stacks, timeout_in_millis);\n+    work_with_timeout(&cache, stripe, stacks, timeout_in_micros);\n@@ -671,1 +671,1 @@\n-  const uint64_t _timeout_in_millis;\n+  const uint64_t _timeout_in_micros;\n@@ -674,1 +674,1 @@\n-  ZMarkTask(ZMark* mark, uint64_t timeout_in_millis = 0) :\n+  ZMarkTask(ZMark* mark, uint64_t timeout_in_micros = 0) :\n@@ -677,1 +677,1 @@\n-      _timeout_in_millis(timeout_in_millis) {\n+      _timeout_in_micros(timeout_in_micros) {\n@@ -686,1 +686,1 @@\n-    _mark->work(_timeout_in_millis);\n+    _mark->work(_timeout_in_micros);\n","filename":"src\/hotspot\/share\/gc\/z\/zMark.cpp","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -45,0 +45,5 @@\n+jlong TimeHelper::micros_to_counter(jlong micros) {\n+  jlong freq = os::elapsed_frequency() \/ MICROUNITS;\n+  return micros * freq;\n+}\n+\n","filename":"src\/hotspot\/share\/runtime\/timer.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+  static jlong micros_to_counter(jlong micros);\n","filename":"src\/hotspot\/share\/runtime\/timer.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"}]}