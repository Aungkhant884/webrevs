{"files":[{"patch":"@@ -78,1 +78,0 @@\n-  DEBUG_ONLY(_object_can_span(false) COMMA)\n@@ -334,6 +333,0 @@\n-#ifdef ASSERT\n-void G1BlockOffsetTablePart::set_object_can_span(bool can_span) {\n-  _object_can_span = can_span;\n-}\n-#endif\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp","additions":0,"deletions":7,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -117,3 +117,0 @@\n-  \/\/ Indicates if an object can span into this G1BlockOffsetTablePart.\n-  debug_only(bool _object_can_span;)\n-\n@@ -215,1 +212,0 @@\n-  void set_object_can_span(bool can_span) NOT_DEBUG_RETURN;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -116,3 +116,7 @@\n-  assert(_object_can_span || _bot->offset_array(_bot->index_for(_hr->bottom())) == 0,\n-         \"Object crossed region boundary, found offset %u instead of 0\",\n-         (uint) _bot->offset_array(_bot->index_for(_hr->bottom())));\n+#ifdef ASSERT\n+  if (!_hr->is_continues_humongous()) {\n+    \/\/ For non ContinuesHumongous regions, the first obj always starts from bottom.\n+    u_char offset = _bot->offset_array(_bot->index_for(_hr->bottom()));\n+    assert(offset == 0, \"Found offset %u instead of 0\", offset);\n+  }\n+#endif\n","filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -217,2 +217,0 @@\n-\n-  _bot_part.set_object_can_span(true);\n@@ -226,2 +224,0 @@\n-\n-  _bot_part.set_object_can_span(false);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":0,"deletions":4,"binary":false,"changes":4,"status":"modified"}]}