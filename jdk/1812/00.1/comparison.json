{"files":[{"patch":"@@ -726,2 +726,0 @@\n-constexpr EnumRange<vmSymbolID> vmSymbolsRange; \/\/ the default range of all valid vmSymbolIDs\n-using vmSymbolsIterator = EnumIterator<vmSymbolID>; \/\/ convenience\n","filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n-#include \"gc\/g1\/g1ThreadLocalData.hpp\"\n+#include \"gc\/g1\/g1BarrierSetRuntime.hpp\"\n@@ -485,3 +485,3 @@\n-JRT_LEAF(void, JVMCIRuntime::write_barrier_pre(JavaThread* thread, oopDesc* obj))\n-  G1ThreadLocalData::satb_mark_queue(thread).enqueue(obj);\n-JRT_END\n+void JVMCIRuntime::write_barrier_pre(JavaThread* thread, oopDesc* obj) {\n+  G1BarrierSetRuntime::write_ref_field_pre_entry(obj, thread);\n+}\n@@ -489,3 +489,3 @@\n-JRT_LEAF(void, JVMCIRuntime::write_barrier_post(JavaThread* thread, void* card_addr))\n-  G1ThreadLocalData::dirty_card_queue(thread).enqueue(card_addr);\n-JRT_END\n+void JVMCIRuntime::write_barrier_post(JavaThread* thread, volatile CardValue* card_addr) {\n+  G1BarrierSetRuntime::write_ref_field_post_entry(card_addr, thread);\n+}\n","filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+#include \"classfile\/vmSymbols.hpp\"\n@@ -1590,6 +1591,6 @@\n-    if (inv.klass() == vmSymbols::jdk_internal_misc_Unsafe() ||\n-        inv.klass() == vmSymbols::sun_misc_Unsafe() ||\n-        inv.klass() == vmSymbols::jdk_internal_misc_ScopedMemoryAccess()) {\n-      ResourceMark rm;\n-      char* name = inv.name()->as_C_string();\n-      if (!strncmp(name, \"get\", 3) || !strncmp(name, \"put\", 3)) {\n+    Symbol* klass = inv.klass();\n+    if (klass == vmSymbols::jdk_internal_misc_Unsafe() ||\n+        klass == vmSymbols::sun_misc_Unsafe() ||\n+        klass == vmSymbols::jdk_internal_misc_ScopedMemoryAccess()) {\n+      Symbol* name = inv.name();\n+      if (name->starts_with(\"get\") || name->starts_with(\"put\")) {\n","filename":"src\/hotspot\/share\/oops\/methodData.cpp","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -279,1 +279,0 @@\n- -runtime\/ErrorHandling\/ErrorHandler.java \\\n@@ -342,0 +341,1 @@\n+ -runtime\/cds\/appcds\/MismatchedPathTriggerMemoryRelease.java \\\n","filename":"test\/hotspot\/jtreg\/TEST.groups","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -741,2 +741,0 @@\n-javax\/swing\/JComboBox\/6559152\/bug6559152.java 8196090 windows-all,macosx-all\n-javax\/swing\/JComboBox\/8032878\/bug8032878.java 8196092,8196439 windows-all,macosx-all,linux-all\n@@ -749,1 +747,0 @@\n-javax\/swing\/JPopupMenu\/6675802\/bug6675802.java 8196097 windows-all\n","filename":"test\/jdk\/ProblemList.txt","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}