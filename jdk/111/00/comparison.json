{"files":[{"patch":"@@ -246,4 +246,0 @@\n-  develop(bool, TraceLongCompiles, false,                                   \\\n-          \"Print out every time compilation is longer than \"                \\\n-          \"a given threshold\")                                              \\\n-                                                                            \\\n@@ -1917,4 +1913,0 @@\n-  \/* Background Compilation *\/                                              \\\n-  develop(intx, LongCompileThreshold,     50,                               \\\n-          \"Used with +TraceLongCompiles\")                                   \\\n-                                                                            \\\n","filename":"src\/hotspot\/share\/runtime\/globals.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -493,16 +493,1 @@\n-        if (TraceLongCompiles) {\n-          elapsedTimer t;\n-          t.start();\n-          evaluate_operation(_cur_vm_operation);\n-          t.stop();\n-          double secs = t.seconds();\n-          if (secs * 1e3 > LongCompileThreshold) {\n-            \/\/ XXX - _cur_vm_operation should not be accessed after\n-            \/\/ the completed count has been incremented; the waiting\n-            \/\/ thread may have already freed this memory.\n-            tty->print_cr(\"vm %s: %3.7f secs]\", _cur_vm_operation->name(), secs);\n-          }\n-        } else {\n-          evaluate_operation(_cur_vm_operation);\n-        }\n-\n+        evaluate_operation(_cur_vm_operation);\n","filename":"src\/hotspot\/share\/runtime\/vmThread.cpp","additions":1,"deletions":16,"binary":false,"changes":17,"status":"modified"}]}