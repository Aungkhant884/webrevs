{"files":[{"patch":"@@ -96,3 +96,2 @@\n-        << appDirPath\n-        << FileUtils::basename(FileUtils::replaceSuffix(\n-                launcherPath, _T(\".cfg\")));\n+        << appDirPath << FileUtils::stripExeSuffix(\n+            FileUtils::basename(launcherPath)) + _T(\".cfg\");\n","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -75,0 +75,3 @@\n+    \/\/ remove the executable suffix if there is one \n+    tstring stripExeSuffix(const tstring& path);\n+\n","filename":"src\/jdk.jpackage\/share\/native\/common\/FileUtils.h","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -65,0 +65,5 @@\n+tstring stripExeSuffix(const tstring& path) {\n+    \/\/ for unix - there is no suffix to remove\n+    return path;\n+}\n+\n","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixFileUtils.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -661,0 +661,9 @@\n+tstring stripExeSuffix(const tstring& path) {\n+    \/\/ for windows - there is a \".exe\" suffix to remove\n+    const tstring::size_type pos = path.rfind(_T(\".exe\"));\n+    if (pos == tstring::npos) {\n+        return path;\n+    }\n+    return path.substr(0, pos);\n+}\n+\n","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinFileUtils.cpp","additions":9,"deletions":0,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,61 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.tests;\n+\n+import jdk.jpackage.test.JPackageCommand;\n+import jdk.jpackage.test.HelloApp;\n+import jdk.jpackage.test.TKit;\n+import jdk.jpackage.test.Annotations.Parameters;\n+import jdk.jpackage.test.Annotations.Test;\n+\n+\n+\/*\n+ * @test\n+ * @summary jpackage create image with --java-options test\n+ * @library ..\/..\/..\/..\/helpers\n+ * @build jdk.jpackage.test.*\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n+ * @compile DotInNameTest.java\n+ * @run main\/othervm\/timeout=360 -Xmx512m jdk.jpackage.test.Main\n+ *  --jpt-run=jdk.jpackage.tests.DotInNameTest\n+ *  --jpt-before-run=jdk.jpackage.test.JPackageCommand.useToolProviderByDefault\n+ *\/\n+\n+public class DotInNameTest {\n+\n+    @Test\n+    public void test() {\n+        JPackageCommand cmd = JPackageCommand.helloAppImage(\"Hello\");\n+\n+        cmd.setArgumentValue(\"--name\",\n+                cmd.getArgumentValue(\"--name\") + \".with.dot\");\n+        \/\/ run the jpackage command\n+        cmd.executeAndAssertImageCreated();\n+\n+        \/\/ run the launcher it generated\n+        HelloApp.executeLauncherAndVerifyOutput(cmd);\n+\n+    }\n+\n+}\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/DotInNameTest.java","additions":61,"deletions":0,"binary":false,"changes":61,"status":"added"}]}