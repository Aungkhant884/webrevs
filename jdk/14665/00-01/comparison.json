{"files":[{"patch":"@@ -582,1 +582,1 @@\n-  float VMOptionsFuzzyMatchSimilarity = 0.7f;\n+  double VMOptionsFuzzyMatchSimilarity = 0.7f;\n@@ -584,2 +584,2 @@\n-  float score;\n-  float max_score = -1;\n+  double score;\n+  double max_score = -1;\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlag.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    if (constraint != nullptr && constraint->phase() <= static_cast<int>(JVMFlagLimit::validating_phase())) {\n+    if (constraint != nullptr && constraint->phase() <= JVMFlagLimit::validating_phase()) {\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagAccess.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,1 +82,1 @@\n-  static constexpr const JVMFlagLimit* get_limit(const JVMTypedFlagLimit<T>* p, int dummy, ConstraintMarker dummy2, short func, char phase) {\n+  static constexpr const JVMFlagLimit* get_limit(const JVMTypedFlagLimit<T>* p, int dummy, ConstraintMarker dummy2, short func, JVMFlagConstraintPhase phase) {\n@@ -85,1 +85,1 @@\n-  static constexpr const JVMFlagLimit* get_limit(const JVMTypedFlagLimit<T>* p, int dummy, T min, T max, ConstraintMarker dummy2, short func, char phase) {\n+  static constexpr const JVMFlagLimit* get_limit(const JVMTypedFlagLimit<T>* p, int dummy, T min, T max, ConstraintMarker dummy2, short func, JVMFlagConstraintPhase phase) {\n@@ -88,1 +88,1 @@\n-  static constexpr const JVMFlagLimit* get_limit(const JVMTypedFlagLimit<T>* p, int dummy, ConstraintMarker dummy2, short func, char phase, T min, T max) {\n+  static constexpr const JVMFlagLimit* get_limit(const JVMTypedFlagLimit<T>* p, int dummy, ConstraintMarker dummy2, short func, JVMFlagConstraintPhase phase, T min, T max) {\n@@ -101,1 +101,1 @@\n-#define APPLY_FLAG_CONSTRAINT(func, phase)             , next_two_args_are_constraint, (short)CONSTRAINT_ENUM(func), (char)JVMFlagConstraintPhase::phase\n+#define APPLY_FLAG_CONSTRAINT(func, phase)             , next_two_args_are_constraint, (short)CONSTRAINT_ENUM(func), JVMFlagConstraintPhase::phase\n@@ -182,1 +182,1 @@\n-    if (constraint != nullptr && constraint->phase() == static_cast<char>(phase) &&\n+    if (constraint != nullptr && constraint->phase() == phase &&\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagLimit.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n-  char  _phase;\n+  JVMFlagConstraintPhase  _phase;\n@@ -103,1 +103,1 @@\n-  char phase() const { return _phase; }\n+  JVMFlagConstraintPhase phase() const { return _phase; }\n@@ -106,1 +106,1 @@\n-  constexpr JVMFlagLimit(int type_enum, short func, char phase, char kind)\n+  constexpr JVMFlagLimit(int type_enum, short func, JVMFlagConstraintPhase phase, char kind)\n@@ -158,1 +158,1 @@\n-  JVMFlagLimit(0, 0, 0, 0), _min(0), _max(0) {}\n+  JVMFlagLimit(0, 0, JVMFlagConstraintPhase::AtParse, 0), _min(0), _max(0) {}\n@@ -162,1 +162,1 @@\n-    JVMFlagLimit(type_enum, 0, 0, HAS_RANGE), _min(min), _max(max) {}\n+    JVMFlagLimit(type_enum, 0, JVMFlagConstraintPhase::AtParse, HAS_RANGE), _min(min), _max(max) {}\n@@ -165,1 +165,1 @@\n-  constexpr JVMTypedFlagLimit(int type_enum, ConstraintMarker dummy2, short func, char phase) :\n+  constexpr JVMTypedFlagLimit(int type_enum, ConstraintMarker dummy2, short func, JVMFlagConstraintPhase phase) :\n@@ -169,1 +169,1 @@\n-  constexpr JVMTypedFlagLimit(int type_enum, T min, T max, ConstraintMarker dummy2, short func, char phase)  :\n+  constexpr JVMTypedFlagLimit(int type_enum, T min, T max, ConstraintMarker dummy2, short func, JVMFlagConstraintPhase phase)  :\n@@ -173,1 +173,1 @@\n-  constexpr JVMTypedFlagLimit(int type_enum, ConstraintMarker dummy2, short func, char phase, T min, T max)  :\n+  constexpr JVMTypedFlagLimit(int type_enum, ConstraintMarker dummy2, short func, JVMFlagConstraintPhase phase, T min, T max)  :\n","filename":"src\/hotspot\/share\/runtime\/flags\/jvmFlagLimit.hpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}