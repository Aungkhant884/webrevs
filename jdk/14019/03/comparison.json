{"files":[{"patch":"@@ -56,1 +56,1 @@\n-  bool check_out_of_memory();\n+  bool throw_out_of_memory();\n@@ -58,2 +58,0 @@\n-  void verify_after();\n-  void notify_allocation();\n@@ -80,0 +78,1 @@\n+#ifdef ASSERT\n@@ -82,0 +81,1 @@\n+#endif\n@@ -85,2 +85,25 @@\n-    if (!check_out_of_memory()) {\n-      notify_allocation();\n+    if (obj() != nullptr) {\n+      \/\/ Real allocation allocates actual memory: either allocates\n+      \/\/ outside the TLAB, or allocates a new TLAB.\n+      const bool is_real_allocation = _allocated_outside_tlab ||\n+                                      (_allocated_tlab_size != 0);\n+\n+      if (is_real_allocation) {\n+        notify_allocation_low_memory_detector();\n+        notify_allocation_jfr_sampler();\n+      }\n+\n+      if ((is_real_allocation || _tlab_end_reset_for_sample) &&\n+          JvmtiExport::should_post_sampled_object_alloc()) {\n+        notify_allocation_jvmti_sampler();\n+      }\n+\n+      if (JvmtiExport::should_post_vm_object_alloc()) {\n+        JvmtiExport::record_vm_internal_object_allocation(obj());\n+      }\n+\n+      if (DTraceAllocProbes) {\n+        notify_allocation_dtrace_sampler();\n+      }\n+    } else {\n+      throw_out_of_memory();\n@@ -116,1 +139,1 @@\n-bool MemAllocator::Allocation::check_out_of_memory() {\n+bool MemAllocator::Allocation::throw_out_of_memory() {\n@@ -120,4 +143,0 @@\n-  if (obj() != nullptr) {\n-    return false;\n-  }\n-\n@@ -143,0 +162,1 @@\n+#ifdef ASSERT\n@@ -148,1 +168,1 @@\n-  debug_only(check_for_valid_allocation_state());\n+  check_for_valid_allocation_state();\n@@ -152,1 +172,0 @@\n-#ifdef ASSERT\n@@ -165,14 +184,0 @@\n-  \/\/ support for JVMTI VMObjectAlloc event (no-op if not enabled)\n-  JvmtiExport::vm_object_alloc_event_collector(obj());\n-\n-  if (!JvmtiExport::should_post_sampled_object_alloc()) {\n-    \/\/ Sampling disabled\n-    return;\n-  }\n-\n-  if (!_allocated_outside_tlab && _allocated_tlab_size == 0 && !_tlab_end_reset_for_sample) {\n-    \/\/ Sample if it's a non-TLAB allocation, or a TLAB allocation that either refills the TLAB\n-    \/\/ or expands it due to taking a sampler induced slow path.\n-    return;\n-  }\n-\n@@ -222,7 +227,6 @@\n-  if (DTraceAllocProbes) {\n-    \/\/ support for Dtrace object alloc event (no-op most of the time)\n-    Klass* klass = obj()->klass();\n-    size_t word_size = _allocator._word_size;\n-    if (klass != nullptr && klass->name() != nullptr) {\n-      SharedRuntime::dtrace_object_alloc(_thread, obj(), word_size);\n-    }\n+  assert(DTraceAllocProbes, \"Should have been checked before\");\n+  \/\/ support for Dtrace object alloc event (no-op most of the time)\n+  Klass* klass = obj()->klass();\n+  size_t word_size = _allocator._word_size;\n+  if (klass != nullptr && klass->name() != nullptr) {\n+    SharedRuntime::dtrace_object_alloc(_thread, obj(), word_size);\n@@ -232,7 +236,0 @@\n-void MemAllocator::Allocation::notify_allocation() {\n-  notify_allocation_low_memory_detector();\n-  notify_allocation_jfr_sampler();\n-  notify_allocation_dtrace_sampler();\n-  notify_allocation_jvmti_sampler();\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/shared\/memAllocator.cpp","additions":37,"deletions":40,"binary":false,"changes":77,"status":"modified"},{"patch":"@@ -392,6 +392,0 @@\n-  \/\/ Collects vm internal objects for later event posting.\n-  inline static void vm_object_alloc_event_collector(oop object) {\n-    if (should_post_vm_object_alloc()) {\n-      record_vm_internal_object_allocation(object);\n-    }\n-  }\n","filename":"src\/hotspot\/share\/prims\/jvmtiExport.hpp","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}