{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2017, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -23,0 +23,1 @@\n+\n@@ -24,0 +25,1 @@\n+\n@@ -33,0 +35,1 @@\n+import java.net.InetSocketAddress;\n@@ -62,0 +65,1 @@\n+ * @build jdk.test.lib.net.SimpleHttpServer\n@@ -82,2 +86,2 @@\n-    SimpleHttpServer _httpserver;\n-    String _remoteFilePath;\n+    private SimpleHttpServer httpserver;\n+    private String remoteFilePath;\n@@ -91,1 +95,0 @@\n-\n@@ -93,4 +96,4 @@\n-        _httpserver = new SimpleHttpServer(TESTCONTEXT, DOCROOT);\n-        _httpserver.start();\n-        _remoteFilePath = _httpserver.getAddress() + REMOTE_FILE_LOCATION;\n-\n+        httpserver = new SimpleHttpServer(new InetSocketAddress(0), TESTCONTEXT, DOCROOT);\n+        httpserver.start();\n+        remoteFilePath = httpserver.getAddress() + REMOTE_FILE_LOCATION;\n+        System.out.println(\"MAHENDRA:\"+httpserver.getAddress());\n@@ -100,3 +103,3 @@\n-    protected void tearDown() throws Exception {\n-        if (_httpserver != null) {\n-            _httpserver.stop();\n+    protected void tearDown() {\n+        if (httpserver != null) {\n+            httpserver.stop();\n@@ -111,2 +114,2 @@\n-    public void testMatch(String uri, String sysId, String pubId,\n-            String expectedId, String msg) throws Exception {\n+    public void testMatch(final String uri, final String sysId, final String pubId,\n+            final String expectedId, final String msg) {\n@@ -120,2 +123,2 @@\n-    public void testEmptyCatalog(String uri, String publicId, String msg) {\n-        Catalog c = CatalogManager.catalog(FEATURES, uri != null? URI.create(uri) : null);\n+    public void testEmptyCatalog(final String uri, final String publicId, final String msg) {\n+        Catalog c = CatalogManager.catalog(FEATURES, uri != null ? URI.create(uri) : null);\n@@ -126,1 +129,1 @@\n-    public void testCatalogResolverWEmptyCatalog(String uri, String publicId, String msg) {\n+    public void testCatalogResolverWEmptyCatalog(final String uri, final String publicId, final String msg) {\n@@ -129,1 +132,1 @@\n-                uri != null? URI.create(uri) : null);\n+                uri != null ? URI.create(uri) : null);\n@@ -134,1 +137,1 @@\n-    public void testCatalogResolverWEmptyCatalog1(String uri, String publicId, String msg) {\n+    public void testCatalogResolverWEmptyCatalog1(final String uri, final String publicId, final String msg) {\n@@ -137,1 +140,1 @@\n-                uri != null? URI.create(uri) : null);\n+                uri != null ? URI.create(uri) : null);\n@@ -142,1 +145,1 @@\n-    public void testFileInput(String file) {\n+    public void testFileInput(final String file) {\n@@ -149,2 +152,2 @@\n-    public void testInvalidUri(String file) {\n-        CatalogResolver cr = CatalogManager.catalogResolver(FEATURES, file != null? URI.create(file) : null);\n+    public void testInvalidUri(final String file) {\n+        CatalogResolver cr = CatalogManager.catalogResolver(FEATURES, file != null ? URI.create(file) : null);\n@@ -154,2 +157,2 @@\n-    public void testInvalidUri1(String file) {\n-        Catalog c = CatalogManager.catalog(FEATURES, file != null? URI.create(file) : null);\n+    public void testInvalidUri1(final String file) {\n+        Catalog c = CatalogManager.catalog(FEATURES, file != null ? URI.create(file) : null);\n@@ -179,4 +182,4 @@\n-    String systemId = \"http:\/\/www.sys00test.com\/rewrite.dtd\";\n-    String publicId = \"PUB-404\";\n-    String expected = \"http:\/\/www.groupxmlbase.com\/dtds\/rewrite.dtd\";\n-    String errMsg = \"Relative rewriteSystem with xml:base at group level failed\";\n+    private String systemId = \"http:\/\/www.sys00test.com\/rewrite.dtd\";\n+    private String publicId = \"PUB-404\";\n+    private String expected = \"http:\/\/www.groupxmlbase.com\/dtds\/rewrite.dtd\";\n+    private String errMsg = \"Relative rewriteSystem with xml:base at group level failed\";\n@@ -193,2 +196,2 @@\n-        String urlHttp = _remoteFilePath + \"\/jax-ws-catalog.xml\";\n-        String remoteXSD = _remoteFilePath + \"\/catalog\/ws-addr.xsd\";\n+        String urlHttp = remoteFilePath + \"\/jax-ws-catalog.xml\";\n+        String remoteXSD = remoteFilePath + \"\/catalog\/ws-addr.xsd\";\n@@ -222,1 +225,1 @@\n-    public Object[][] getInvalidCatalog() throws Exception {\n+    public Object[][] getInvalidCatalog() {\n@@ -261,2 +264,1 @@\n-    public Object[][] getNull() throws Exception {\n-\n+    public Object[][] getNull() {\n@@ -268,2 +270,1 @@\n-    void copyFile(Path src, Path target) throws Exception {\n-\n+    void copyFile(final Path src, final Path target) throws Exception {\n@@ -276,1 +277,1 @@\n-            String line = null;\n+            String line;\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/catalog\/CatalogFileInputTest.java","additions":37,"deletions":36,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -51,0 +51,1 @@\n+import java.net.InetSocketAddress;\n@@ -66,1 +67,2 @@\n-        server = new SimpleHttpServer(InetAddress.getLoopbackAddress(), TESTCONTEXT, System.getProperty(\"user.dir\", \".\"));\n+        server = new SimpleHttpServer(new InetSocketAddress(InetAddress.getLoopbackAddress(),0), TESTCONTEXT,\n+                System.getProperty(\"user.dir\", \".\"));\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/mrjar\/MultiReleaseJarHttpProperties.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -45,0 +45,1 @@\n+import java.net.InetSocketAddress;\n@@ -80,1 +81,2 @@\n-        server = new SimpleHttpServer(InetAddress.getLoopbackAddress(), TESTCONTEXT, System.getProperty(\"user.dir\", \".\"));\n+\/\/        server = new SimpleHttpServer(InetAddress.getLoopbackAddress(), TESTCONTEXT, System.getProperty(\"user.dir\", \".\"));\n+        server = new SimpleHttpServer(new InetSocketAddress(InetAddress.getLoopbackAddress(),0), TESTCONTEXT, System.getProperty(\"user.dir\", \".\"));\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jar\/MultiReleaseJarURLConnection.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.net.InetAddress;\n@@ -32,0 +31,1 @@\n+import java.net.URISyntaxException;\n@@ -53,2 +53,1 @@\n-    private final int port;\n-    private final InetAddress inetAddress;\n+    private final InetSocketAddress inetSocketAddress;\n@@ -56,3 +55,3 @@\n-    public SimpleHttpServer(final String context, final String docRoot) throws IOException {\n-        \/\/let the system pick up an ephemeral port in a bind operation\n-        this.port = 0;\n+    public SimpleHttpServer(final InetSocketAddress inetSocketAddress, final String context, final String docRoot)\n+            throws IOException {\n+        this.inetSocketAddress = inetSocketAddress;\n@@ -62,2 +61,0 @@\n-        \/\/let the server use wild card address\n-        inetAddress = null;\n@@ -66,20 +63,1 @@\n-    public SimpleHttpServer(final InetAddress inetAddress, final String context, final String docRoot) throws\n-            IOException {\n-        \/\/let the system pick up an ephemeral port in a bind operation\n-        this.port = 0;\n-        this.context = context;\n-        this.docRoot = docRoot;\n-        httpServer = HttpServer.create();\n-        this.inetAddress = inetAddress;\n-    }\n-\n-    public SimpleHttpServer(final int port, final String context, final String docRoot) throws IOException {\n-        this.port = port;\n-        this.context = context;\n-        this.docRoot = docRoot;\n-        httpServer = HttpServer.create();\n-        \/\/let the server use wild card address\n-        inetAddress = null;\n-    }\n-\n-    public void start() throws IOException {\n+    public void start() throws IOException, URISyntaxException {\n@@ -87,3 +65,1 @@\n-        InetSocketAddress addr = inetAddress != null ? new InetSocketAddress(inetAddress, port) : new InetSocketAddress(port);\n-        httpServer.bind(addr, 0);\n-        \/\/TestHandler is mapped to \/test\n+        httpServer.bind(inetSocketAddress, 0);\n@@ -94,1 +70,3 @@\n-        address = \"http:\/\/localhost:\" + httpServer.getAddress().getPort();\n+\n+        address = \"http:\"+URIBuilder.newBuilder().host(httpServer.getAddress().getAddress()).\n+                port(httpServer.getAddress().getPort()).build().toString();\n","filename":"test\/lib\/jdk\/test\/lib\/net\/SimpleHttpServer.java","additions":10,"deletions":32,"binary":false,"changes":42,"status":"modified"}]}