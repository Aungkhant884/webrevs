{"files":[{"patch":"@@ -33,1 +33,1 @@\n- *        SimpleHttpServer\n+ *        jdk.test.lib.net.SimpleHttpServer\n@@ -50,0 +50,1 @@\n+import java.net.InetAddress;\n@@ -65,1 +66,1 @@\n-        server = new SimpleHttpServer(TESTCONTEXT, System.getProperty(\"user.dir\", \".\"));\n+        server = new SimpleHttpServer(InetAddress.getLoopbackAddress(), TESTCONTEXT, System.getProperty(\"user.dir\", \".\"));\n","filename":"test\/jdk\/java\/util\/jar\/JarFile\/mrjar\/MultiReleaseJarHttpProperties.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n- *        SimpleHttpServer\n+ *        jdk.test.lib.net.SimpleHttpServer\n@@ -44,0 +44,1 @@\n+import java.net.InetAddress;\n@@ -65,1 +66,1 @@\n-    String userdir = System.getProperty(\"user.dir\",\".\");\n+    String userdir = System.getProperty(\"user.dir\", \".\");\n@@ -79,2 +80,1 @@\n-\n-        server = new SimpleHttpServer(TESTCONTEXT,System.getProperty(\"user.dir\", \".\"));\n+        server = new SimpleHttpServer(InetAddress.getLoopbackAddress(), TESTCONTEXT, System.getProperty(\"user.dir\", \".\"));\n@@ -82,1 +82,0 @@\n-\n@@ -137,1 +136,1 @@\n-        JarURLConnection juc = (JarURLConnection)rootUrl.openConnection();\n+        JarURLConnection juc = (JarURLConnection) rootUrl.openConnection();\n@@ -142,1 +141,1 @@\n-        juc = (JarURLConnection)runtimeUrl.openConnection();\n+        juc = (JarURLConnection) runtimeUrl.openConnection();\n@@ -151,1 +150,1 @@\n-        juc = (JarURLConnection)rootUrl.openConnection();\n+        juc = (JarURLConnection) rootUrl.openConnection();\n@@ -156,1 +155,1 @@\n-        juc = (JarURLConnection)runtimeUrl.openConnection();\n+        juc = (JarURLConnection) runtimeUrl.openConnection();\n@@ -254,1 +253,1 @@\n-            ((JarURLConnection)conn).getJarFile().close();\n+            ((JarURLConnection) conn).getJarFile().close();\n","filename":"test\/jdk\/sun\/net\/www\/protocol\/jar\/MultiReleaseJarURLConnection.java","additions":9,"deletions":10,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -0,0 +1,1 @@\n+\n@@ -25,8 +26,0 @@\n-import com.sun.net.httpserver.Headers;\n-import com.sun.net.httpserver.HttpContext;\n-import com.sun.net.httpserver.HttpExchange;\n-import com.sun.net.httpserver.HttpHandler;\n-import com.sun.net.httpserver.HttpServer;\n-\n-import java.io.File;\n-import java.io.FileInputStream;\n@@ -36,0 +29,1 @@\n+import java.net.InetAddress;\n@@ -38,0 +32,4 @@\n+import java.nio.file.Files;\n+import java.nio.file.InvalidPathException;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n@@ -41,0 +39,5 @@\n+import com.sun.net.httpserver.Headers;\n+import com.sun.net.httpserver.HttpExchange;\n+import com.sun.net.httpserver.HttpHandler;\n+import com.sun.net.httpserver.HttpServer;\n+\n@@ -42,2 +45,2 @@\n- * A simple HTTP Server\n- *\/\n+ * A simple HTTP Server.\n+ **\/\n@@ -45,9 +48,9 @@\n-    HttpServer _httpserver;\n-    ExecutorService _executor;\n-\n-    String _address;\n-\n-    String _context, _docroot;\n-    int _port;\n-\n-    public SimpleHttpServer(String context, String docroot) {\n+    private final HttpServer httpServer;\n+    private ExecutorService executor;\n+    private String address;\n+    private final String context;\n+    private final String docRoot;\n+    private final int port;\n+    private final InetAddress inetAddress;\n+\n+    public SimpleHttpServer(final String context, final String docRoot) throws IOException {\n@@ -55,1 +58,6 @@\n-        this(0, context, docroot);\n+        this.port = 0;\n+        this.context = context;\n+        this.docRoot = docRoot;\n+        httpServer = HttpServer.create();\n+        \/\/let the server use wild card address\n+        inetAddress = null;\n@@ -58,4 +66,8 @@\n-    public SimpleHttpServer(int port, String context, String docroot) {\n-        _port = port;\n-        _context = context;\n-        _docroot = docroot;\n+    public SimpleHttpServer(final InetAddress inetAddress, final String context, final String docRoot) throws\n+            IOException {\n+        \/\/let the system pick up an ephemeral port in a bind operation\n+        this.port = 0;\n+        this.context = context;\n+        this.docRoot = docRoot;\n+        httpServer = HttpServer.create();\n+        this.inetAddress = inetAddress;\n@@ -64,8 +76,8 @@\n-    public void start() {\n-        MyHttpHandler handler = new MyHttpHandler(_docroot);\n-        InetSocketAddress addr = new InetSocketAddress(_port);\n-        try {\n-            _httpserver = HttpServer.create(addr, 0);\n-        } catch (IOException ex) {\n-            throw new RuntimeException(\"cannot create httpserver\", ex);\n-        }\n+    public SimpleHttpServer(final int port, final String context, final String docRoot) throws IOException {\n+        this.port = port;\n+        this.context = context;\n+        this.docRoot = docRoot;\n+        httpServer = HttpServer.create();\n+        \/\/let the server use wild card address\n+        inetAddress = null;\n+    }\n@@ -73,0 +85,4 @@\n+    public void start() throws IOException {\n+        MyHttpHandler handler = new MyHttpHandler(docRoot);\n+        InetSocketAddress addr = inetAddress != null ? new InetSocketAddress(inetAddress, port) : new InetSocketAddress(port);\n+        httpServer.bind(addr, 0);\n@@ -74,7 +90,5 @@\n-        HttpContext ctx = _httpserver.createContext(_context, handler);\n-\n-        _executor = Executors.newCachedThreadPool();\n-        _httpserver.setExecutor(_executor);\n-        _httpserver.start();\n-\n-        _address = \"http:\/\/localhost:\" + _httpserver.getAddress().getPort();\n+        httpServer.createContext(context, handler);\n+        executor = Executors.newCachedThreadPool();\n+        httpServer.setExecutor(executor);\n+        httpServer.start();\n+        address = \"http:\/\/localhost:\" + httpServer.getAddress().getPort();\n@@ -84,2 +98,2 @@\n-        _httpserver.stop(2);\n-        _executor.shutdown();\n+        httpServer.stop(2);\n+        executor.shutdown();\n@@ -89,1 +103,1 @@\n-        return _address;\n+        return address;\n@@ -93,1 +107,1 @@\n-        return _httpserver.getAddress().getPort();\n+        return httpServer.getAddress().getPort();\n@@ -96,1 +110,1 @@\n-    static class MyHttpHandler implements HttpHandler {\n+    class MyHttpHandler implements HttpHandler {\n@@ -98,1 +112,1 @@\n-        String _docroot;\n+        private final String docRoot;\n@@ -100,2 +114,2 @@\n-        public MyHttpHandler(String docroot) {\n-            _docroot = docroot;\n+        MyHttpHandler(final String docroot) {\n+            docRoot = docroot;\n@@ -104,46 +118,32 @@\n-        public void handle(HttpExchange t)\n-                throws IOException {\n-            InputStream is = t.getRequestBody();\n-            Headers map = t.getRequestHeaders();\n-            Headers rmap = t.getResponseHeaders();\n-            OutputStream os = t.getResponseBody();\n-            URI uri = t.getRequestURI();\n-            String path = uri.getPath();\n-\n-\n-            while (is.read() != -1) ;\n-            is.close();\n-\n-            File f = new File(_docroot, path);\n-            if (!f.exists()) {\n-                notfound(t, path);\n-                return;\n-            }\n-\n-            String method = t.getRequestMethod();\n-            if (method.equals(\"HEAD\")) {\n-                rmap.set(\"Content-Length\", Long.toString(f.length()));\n-                t.sendResponseHeaders(200, -1);\n-                t.close();\n-            } else if (!method.equals(\"GET\")) {\n-                t.sendResponseHeaders(405, -1);\n-                t.close();\n-                return;\n-            }\n-\n-            if (path.endsWith(\".html\") || path.endsWith(\".htm\")) {\n-                rmap.set(\"Content-Type\", \"text\/html\");\n-            } else {\n-                rmap.set(\"Content-Type\", \"text\/plain\");\n-            }\n-\n-            t.sendResponseHeaders (200, f.length());\n-\n-            FileInputStream fis = new FileInputStream(f);\n-            int count = 0;\n-            try {\n-                byte[] buf = new byte[16 * 1024];\n-                int len;\n-                while ((len = fis.read(buf)) != -1) {\n-                    os.write(buf, 0, len);\n-                    count += len;\n+        public void handle(final HttpExchange t) throws IOException {\n+            try (InputStream is = t.getRequestBody()) {\n+                is.readAllBytes();\n+                Headers rMap = t.getResponseHeaders();\n+                try (OutputStream os = t.getResponseBody()) {\n+                    URI uri = t.getRequestURI();\n+                    String path = uri.getPath();\n+                    Path fPath;\n+                    try {\n+                        fPath = Paths.get(docRoot, path);\n+                    } catch (InvalidPathException ex) {\n+                        notfound(t, path);\n+                        return;\n+                    }\n+                    byte[] bytes = Files.readAllBytes(fPath);\n+                    String method = t.getRequestMethod();\n+                    if (method.equals(\"HEAD\")) {\n+                        rMap.set(\"Content-Length\", Long.toString(bytes.length));\n+                        t.sendResponseHeaders(200, -1);\n+                        t.close();\n+                    } else if (!method.equals(\"GET\")) {\n+                        t.sendResponseHeaders(405, -1);\n+                        t.close();\n+                        return;\n+                    }\n+                    if (path.endsWith(\".html\") || path.endsWith(\".htm\")) {\n+                        rMap.set(\"Content-Type\", \"text\/html\");\n+                    } else {\n+                        rMap.set(\"Content-Type\", \"text\/plain\");\n+                    }\n+                    t.sendResponseHeaders(200, bytes.length);\n+                    os.write(bytes);\n@@ -151,2 +151,0 @@\n-            } catch (IOException e) {\n-                e.printStackTrace();\n@@ -154,2 +152,0 @@\n-            fis.close();\n-            os.close();\n@@ -157,2 +153,1 @@\n-\n-        void moved(HttpExchange t) throws IOException {\n+        void moved(final HttpExchange t) throws IOException {\n@@ -169,2 +164,1 @@\n-\n-        void notfound(HttpExchange t, String p) throws IOException {\n+        void notfound(final HttpExchange t, final String p) throws IOException {\n@@ -173,5 +167,5 @@\n-            OutputStream os = t.getResponseBody();\n-            String s = \"<h2>File not found<\/h2>\";\n-            s = s + p + \"<p>\";\n-            os.write(s.getBytes());\n-            os.close();\n+            try (OutputStream os = t.getResponseBody()) {\n+                String s = \"<h2>File not found<\/h2>\";\n+                s = s + p + \"<p>\";\n+                os.write(s.getBytes());\n+            }\n@@ -181,1 +175,0 @@\n-\n","filename":"test\/lib\/jdk\/test\/lib\/net\/SimpleHttpServer.java","additions":100,"deletions":107,"binary":false,"changes":207,"status":"modified"}]}