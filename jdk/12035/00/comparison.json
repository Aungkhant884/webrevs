{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,0 +31,1 @@\n+import java.nio.file.InvalidPathException;\n@@ -135,2 +136,2 @@\n-        \/\/ convert to file path\n-        Path path;\n+        \/\/ map resource name to a file path string\n+        String pathString;\n@@ -138,1 +139,1 @@\n-            path = fs.getPath(name);\n+            pathString = name;\n@@ -143,1 +144,10 @@\n-            path = fs.getPath(name.replace('\/', File.separatorChar));\n+            pathString = name.replace('\/', File.separatorChar);\n+        }\n+\n+        \/\/ try to convert to a Path\n+        Path path;\n+        try {\n+            path = fs.getPath(pathString);\n+        } catch (InvalidPathException e) {\n+            \/\/ not a valid file path\n+            return null;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/Resources.java","additions":15,"deletions":5,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,0 +26,1 @@\n+ * @bug 8142968 8300228\n@@ -67,1 +68,0 @@\n-@Test\n@@ -69,1 +69,0 @@\n-\n@@ -113,0 +112,6 @@\n+\n+        \/\/ junk resource names\n+        \"java\\u0000\",\n+        \"C:java\",\n+        \"C:\\\\java\",\n+        \"java\\\\lang\\\\Object.class\"\n@@ -139,2 +144,1 @@\n-        \"p\/..\/p\/Main.class\"\n-    };\n+        \"p\/..\/p\/Main.class\",\n@@ -142,0 +146,6 @@\n+        \/\/ junk resource names\n+        \"p\\u0000\",\n+        \"C:p\",\n+        \"C:\\\\p\",\n+        \"p\\\\Main.class\"\n+    };\n@@ -145,1 +155,0 @@\n-\n@@ -147,3 +156,2 @@\n-        boolean compiled\n-            = CompilerUtils.compile(SRC_DIR.resolve(TEST_MODULE),\n-                                    MODS_DIR.resolve(TEST_MODULE));\n+        boolean compiled = CompilerUtils.compile(SRC_DIR.resolve(TEST_MODULE),\n+                                                 MODS_DIR.resolve(TEST_MODULE));\n@@ -153,1 +161,0 @@\n-\n@@ -155,1 +162,1 @@\n-     * Test ModuleReader to module in runtime image\n+     * Test ModuleReader with module in runtime image.\n@@ -157,0 +164,1 @@\n+    @Test\n@@ -158,1 +166,0 @@\n-\n@@ -230,1 +237,0 @@\n-\n@@ -232,1 +238,1 @@\n-     * Test ModuleReader to exploded module\n+     * Test ModuleReader with exploded module.\n@@ -234,0 +240,1 @@\n+    @Test\n@@ -238,1 +245,0 @@\n-\n@@ -240,1 +246,1 @@\n-     * Test ModuleReader to modular JAR\n+     * Test ModuleReader with module in modular JAR.\n@@ -242,0 +248,1 @@\n+    @Test\n@@ -252,1 +259,0 @@\n-\n@@ -254,1 +260,1 @@\n-     * Test ModuleReader to JMOD\n+     * Test ModuleReader with module in a JMOD file.\n@@ -256,0 +262,1 @@\n+    @Test\n@@ -272,1 +279,0 @@\n-\n@@ -278,1 +284,0 @@\n-\n@@ -287,0 +292,1 @@\n+                System.out.println(\"resource: \" + name);\n@@ -300,1 +306,1 @@\n-                System.out.println(name);\n+                System.out.println(\"resource: \" + name);\n@@ -310,0 +316,1 @@\n+                System.out.println(\"resource: \" + name);\n","filename":"test\/jdk\/java\/lang\/module\/ModuleReader\/ModuleReaderTest.java","additions":28,"deletions":21,"binary":false,"changes":49,"status":"modified"}]}