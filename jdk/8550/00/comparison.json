{"files":[{"patch":"@@ -912,2 +912,2 @@\n-size_t G1CardSet::wasted_mem_size() const {\n-  return _mm->wasted_mem_size();\n+size_t G1CardSet::unused_mem_size() const {\n+  return _mm->unused_mem_size();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -327,1 +327,1 @@\n-  size_t wasted_mem_size() const;\n+  size_t unused_mem_size() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSet.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -63,2 +63,2 @@\n-size_t G1CardSetAllocator::wasted_mem_size() const {\n-  uint num_wasted_slots = _segmented_array.num_available_slots() -\n+size_t G1CardSetAllocator::unused_mem_size() const {\n+  uint num_unused_slots = _segmented_array.num_available_slots() -\n@@ -67,1 +67,1 @@\n-  return num_wasted_slots * _segmented_array.slot_size();\n+  return num_unused_slots * _segmented_array.slot_size();\n@@ -145,1 +145,1 @@\n-size_t G1CardSetMemoryManager::wasted_mem_size() const {\n+size_t G1CardSetMemoryManager::unused_mem_size() const {\n@@ -148,1 +148,1 @@\n-    result += _allocators[i].wasted_mem_size();\n+    result += _allocators[i].unused_mem_size();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -86,0 +86,1 @@\n+  \/\/ Total memory allocated.\n@@ -88,1 +89,2 @@\n-  size_t wasted_mem_size() const;\n+  \/\/ Unused (but usable) memory.\n+  size_t unused_mem_size() const;\n@@ -122,1 +124,1 @@\n-  size_t wasted_mem_size() const;\n+  size_t unused_mem_size() const;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CardSetMemory.hpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -117,1 +117,1 @@\n-  size_t _rs_wasted_mem_size;\n+  size_t _rs_unused_mem_size;\n@@ -147,1 +147,1 @@\n-  RegionTypeCounter(const char* name) : _name(name), _rs_wasted_mem_size(0), _rs_mem_size(0), _cards_occupied(0),\n+  RegionTypeCounter(const char* name) : _name(name), _rs_unused_mem_size(0), _rs_mem_size(0), _cards_occupied(0),\n@@ -150,1 +150,1 @@\n-  void add(size_t rs_wasted_mem_size, size_t rs_mem_size, size_t cards_occupied,\n+  void add(size_t rs_unused_mem_size, size_t rs_mem_size, size_t cards_occupied,\n@@ -152,1 +152,1 @@\n-    _rs_wasted_mem_size += rs_wasted_mem_size;\n+    _rs_unused_mem_size += rs_unused_mem_size;\n@@ -161,1 +161,1 @@\n-  size_t rs_wasted_mem_size() const { return _rs_wasted_mem_size; }\n+  size_t rs_unused_mem_size() const { return _rs_unused_mem_size; }\n@@ -170,1 +170,1 @@\n-                  \"(\" SIZE_FORMAT \") %s regions wasted \" SIZE_FORMAT,\n+                  \"(\" SIZE_FORMAT \") %s regions unused \" SIZE_FORMAT,\n@@ -173,1 +173,1 @@\n-                  _name, rs_wasted_mem_size());\n+                  _name, rs_unused_mem_size());\n@@ -209,1 +209,1 @@\n-  size_t total_rs_wasted_mem_sz() const     { return _all.rs_wasted_mem_size(); }\n+  size_t total_rs_unused_mem_sz() const     { return _all.rs_unused_mem_size(); }\n@@ -237,1 +237,1 @@\n-    size_t rs_wasted_mem_sz = hrrs->wasted_mem_size();\n+    size_t rs_unused_mem_sz = hrrs->unused_mem_size();\n@@ -265,1 +265,1 @@\n-    current->add(rs_wasted_mem_sz, rs_mem_sz, occupied_cards,\n+    current->add(rs_unused_mem_sz, rs_mem_sz, occupied_cards,\n@@ -267,1 +267,1 @@\n-    _all.add(rs_wasted_mem_sz, rs_mem_sz, occupied_cards,\n+    _all.add(rs_unused_mem_sz, rs_mem_sz, occupied_cards,\n@@ -278,1 +278,1 @@\n-                  \" Max = \" SIZE_FORMAT \" wasted = \" SIZE_FORMAT,\n+                  \" Max = \" SIZE_FORMAT \" unused = \" SIZE_FORMAT,\n@@ -281,1 +281,1 @@\n-                  total_rs_wasted_mem_sz());\n+                  total_rs_unused_mem_sz());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetSummary.cpp","additions":13,"deletions":13,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -218,2 +218,2 @@\n-  volatile uint _num_available_slots; \/\/ Number of slots available in all segments (allocated + free + pending + not yet used).\n-  volatile uint _num_allocated_slots; \/\/ Number of total slots allocated and in use.\n+  volatile uint _num_available_slots; \/\/ Number of slots available in all segments (allocated + not yet used).\n+  volatile uint _num_allocated_slots; \/\/ Number of total slots allocated ever (including free and pending).\n","filename":"src\/hotspot\/share\/gc\/g1\/g1SegmentedArray.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -139,2 +139,2 @@\n-  size_t wasted_mem_size() {\n-    return _card_set.wasted_mem_size();\n+  size_t unused_mem_size() {\n+    return _card_set.unused_mem_size();\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegionRemSet.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}