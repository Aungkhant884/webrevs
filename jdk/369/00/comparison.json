{"files":[{"patch":"@@ -102,1 +102,4 @@\n-     * @param  s an object input stream\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/applet\/Applet.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -90,0 +90,3 @@\n+    \/**\n+     * The private data.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/AWTEvent.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,2 +28,0 @@\n-import java.awt.event.KeyEvent;\n-import sun.awt.AppContext;\n@@ -30,0 +29,4 @@\n+import java.awt.event.KeyEvent;\n+import java.io.Serializable;\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Modifier;\n@@ -34,3 +37,2 @@\n-import java.io.Serializable;\n-import java.lang.reflect.Modifier;\n-import java.lang.reflect.Field;\n+\n+import sun.awt.AppContext;\n@@ -80,0 +82,3 @@\n+    \/**\n+     * The character value for a keyboard key.\n+     *\/\n@@ -81,0 +86,4 @@\n+\n+    \/**\n+     * The key code for this {@code AWTKeyStroke}.\n+     *\/\n@@ -82,0 +91,4 @@\n+\n+    \/**\n+     * The bitwise-ored combination of any modifiers.\n+     *\/\n@@ -83,0 +96,5 @@\n+\n+    \/**\n+     * {@code true} if this {@code AWTKeyStroke} corresponds to a key release;\n+     * {@code false} otherwise.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/AWTKeyStroke.java","additions":24,"deletions":6,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -28,0 +28,2 @@\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n@@ -30,4 +32,0 @@\n-import java.util.EventListener;\n-import java.awt.event.*;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -35,1 +33,9 @@\n-import javax.accessibility.*;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.EventListener;\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleValue;\n@@ -431,3 +437,2 @@\n-\n-    \/*\n-     * Button Serial Data Version.\n+    \/**\n+     * Serialized data version.\n@@ -452,1 +457,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -472,4 +478,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Button.java","additions":21,"deletions":13,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,5 +28,1 @@\n-import java.util.Hashtable;\n-import java.util.Vector;\n-import java.util.Enumeration;\n-\n-import java.io.Serializable;\n+import java.io.IOException;\n@@ -36,1 +32,4 @@\n-import java.io.IOException;\n+import java.io.Serializable;\n+import java.util.Enumeration;\n+import java.util.Hashtable;\n+import java.util.Vector;\n@@ -71,2 +70,2 @@\n-    \/*\n-     * A pair of Component and String that represents its name.\n+    \/**\n+     * A pair of component and string that represents its name.\n@@ -113,4 +112,4 @@\n-     * @serialField hgap        int\n-     * @serialField vgap        int\n-     * @serialField vector      Vector\n-     * @serialField currentCard int\n+     * @serialField hgap        int the horizontal Layout gap\n+     * @serialField vgap        int the vertical Layout gap\n+     * @serialField vector      Vector the pairs of components and their names\n+     * @serialField currentCard int the index of Component currently displayed\n@@ -562,0 +561,5 @@\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n@@ -594,0 +598,3 @@\n+     *\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/CardLayout.java","additions":20,"deletions":13,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,0 +28,2 @@\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n@@ -28,4 +31,0 @@\n-import java.awt.event.*;\n-import java.util.EventListener;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -33,1 +32,3 @@\n-import javax.accessibility.*;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.EventListener;\n@@ -35,0 +36,7 @@\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleValue;\n@@ -605,2 +613,2 @@\n-    \/*\n-     * Serialized data version\n+    \/**\n+     * Serialized data version.\n@@ -618,1 +626,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -645,4 +654,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Checkbox.java","additions":24,"deletions":13,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -28,0 +28,1 @@\n+import java.awt.event.ActionListener;\n@@ -429,2 +430,2 @@\n-    \/*\n-     * Serial Data Version\n+    \/**\n+     * Serialized data version.\n@@ -442,1 +443,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -463,1 +465,1 @@\n-    \/*\n+    \/**\n@@ -469,1 +471,4 @@\n-     * @param s the {@code ObjectInputStream} to read\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n@@ -471,3 +476,3 @@\n-     * @see removeActionListener()\n-     * @see addActionListener()\n-     * @see #writeObject\n+     * @see #removeActionListener(ActionListener)\n+     * @see #addActionListener(ActionListener)\n+     * @see #writeObject(ObjectOutputStream)\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/CheckboxMenuItem.java","additions":13,"deletions":8,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,1 +28,2 @@\n-import java.util.*;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n@@ -29,4 +31,0 @@\n-import java.awt.event.*;\n-import java.util.EventListener;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -34,0 +32,4 @@\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.EventListener;\n+import java.util.Vector;\n@@ -35,2 +37,4 @@\n-import javax.accessibility.*;\n-\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleAction;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n@@ -657,2 +661,2 @@\n-    \/*\n-     * Choice Serial Data Version.\n+    \/**\n+     * Serialized data version.\n@@ -670,1 +674,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -697,4 +702,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Choice.java","additions":22,"deletions":15,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -719,0 +719,3 @@\n+    \/**\n+     * Whether the component is packed or not;\n+     *\/\n@@ -8331,1 +8334,1 @@\n-    \/*\n+    \/**\n@@ -8906,1 +8909,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -8977,1 +8981,4 @@\n-     * @param s the {@code ObjectInputStream} to read\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Component.java","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -204,0 +204,3 @@\n+    \/**\n+     * The bitwise-ored combination of flags.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/ComponentOrientation.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,4 +29,10 @@\n-\n-import java.awt.event.*;\n-\n-import java.awt.peer.ContainerPeer;\n+import java.awt.event.AWTEventListener;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.ContainerListener;\n+import java.awt.event.FocusEvent;\n+import java.awt.event.HierarchyEvent;\n+import java.awt.event.InputEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseWheelEvent;\n@@ -34,0 +40,1 @@\n+import java.awt.peer.ContainerPeer;\n@@ -35,1 +42,0 @@\n-\n@@ -37,1 +43,0 @@\n-\n@@ -46,1 +51,0 @@\n-\n@@ -49,1 +53,0 @@\n-\n@@ -55,1 +58,3 @@\n-import javax.accessibility.*;\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleComponent;\n+import javax.accessibility.AccessibleContext;\n@@ -57,3 +62,0 @@\n-import sun.util.logging.PlatformLogger;\n-\n-import sun.awt.AppContext;\n@@ -62,0 +64,1 @@\n+import sun.awt.AppContext;\n@@ -64,1 +67,0 @@\n-\n@@ -66,1 +68,0 @@\n-\n@@ -68,1 +69,0 @@\n-\n@@ -70,0 +70,1 @@\n+import sun.util.logging.PlatformLogger;\n@@ -3669,1 +3670,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -3716,1 +3718,4 @@\n-     * @param s the {@code ObjectInputStream} to read\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Container.java","additions":22,"deletions":17,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -27,1 +28,0 @@\n-import java.util.List;\n@@ -29,0 +29,2 @@\n+import java.util.List;\n+\n@@ -65,0 +67,3 @@\n+    \/**\n+     * This constant is used when the forward focus traversal order is active.\n+     *\/\n@@ -66,0 +71,4 @@\n+\n+    \/**\n+     * This constant is used when the backward focus traversal order is active.\n+     *\/\n@@ -73,0 +82,4 @@\n+    \/**\n+     * Whether this {@code ContainerOrderFocusTraversalPolicy} transfers focus\n+     * down-cycle implicitly.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/ContainerOrderFocusTraversalPolicy.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -27,0 +28,4 @@\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.HierarchyEvent;\n+import java.awt.event.InvocationEvent;\n+import java.awt.event.WindowEvent;\n@@ -28,2 +33,0 @@\n-import java.awt.event.*;\n-import java.io.ObjectInputStream;\n@@ -31,2 +34,2 @@\n-import java.util.Iterator;\n-import java.util.concurrent.atomic.AtomicLong;\n+import java.io.ObjectInputStream;\n+import java.security.AccessControlException;\n@@ -35,2 +38,8 @@\n-import javax.accessibility.*;\n-import sun.awt.AppContext;\n+import java.util.Iterator;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+\n@@ -38,0 +47,1 @@\n+import sun.awt.AppContext;\n@@ -41,1 +51,0 @@\n-import java.security.AccessControlException;\n@@ -1590,0 +1599,10 @@\n+    \/**\n+     * Reads serializable fields from stream.\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Dialog.java","additions":26,"deletions":7,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -28,0 +29,1 @@\n+import java.io.File;\n@@ -31,1 +33,1 @@\n-import java.io.File;\n+\n@@ -63,1 +65,1 @@\n-    \/*\n+    \/**\n@@ -70,2 +72,2 @@\n-     * @see getMode()\n-     * @see setMode()\n+     * @see #getMode\n+     * @see #setMode\n@@ -77,1 +79,1 @@\n-    \/*\n+    \/**\n@@ -82,2 +84,2 @@\n-     * @see getDirectory()\n-     * @see setDirectory()\n+     * @see #getDirectory\n+     * @see #setDirectory\n@@ -87,1 +89,1 @@\n-    \/*\n+    \/**\n@@ -93,2 +95,2 @@\n-     * @see getFile()\n-     * @see setFile()\n+     * @see #getFile\n+     * @see #setFile\n@@ -117,1 +119,1 @@\n-    \/*\n+    \/**\n@@ -124,3 +126,3 @@\n-     * @see #getFilenameFilter()\n-     * @see #setFilenameFilter()\n-     * @see FileNameFilter\n+     * @see #getFilenameFilter\n+     * @see #setFilenameFilter\n+     * @see FilenameFilter\n@@ -601,1 +603,4 @@\n-     * @param s the {@code ObjectInputStream} to read\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/FileDialog.java","additions":21,"deletions":16,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,1 +28,0 @@\n-import java.io.ObjectInputStream;\n@@ -29,0 +29,1 @@\n+import java.io.ObjectInputStream;\n@@ -665,0 +666,5 @@\n+     *\n+     * @param  stream the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/FlowLayout.java","additions":8,"deletions":2,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -37,1 +37,7 @@\n-import java.io.*;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.FilePermission;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.OutputStream;\n@@ -50,2 +56,0 @@\n-import sun.font.StandardGlyphVector;\n-\n@@ -55,0 +59,1 @@\n+import sun.font.CoreMetrics;\n@@ -60,0 +65,1 @@\n+import sun.font.FontLineMetrics;\n@@ -64,2 +70,1 @@\n-import sun.font.FontLineMetrics;\n-import sun.font.CoreMetrics;\n+import sun.font.StandardGlyphVector;\n@@ -67,1 +72,23 @@\n-import static sun.font.EAttribute.*;\n+import static sun.font.EAttribute.EBACKGROUND;\n+import static sun.font.EAttribute.EBIDI_EMBEDDING;\n+import static sun.font.EAttribute.ECHAR_REPLACEMENT;\n+import static sun.font.EAttribute.EFAMILY;\n+import static sun.font.EAttribute.EFONT;\n+import static sun.font.EAttribute.EFOREGROUND;\n+import static sun.font.EAttribute.EINPUT_METHOD_HIGHLIGHT;\n+import static sun.font.EAttribute.EINPUT_METHOD_UNDERLINE;\n+import static sun.font.EAttribute.EJUSTIFICATION;\n+import static sun.font.EAttribute.EKERNING;\n+import static sun.font.EAttribute.ELIGATURES;\n+import static sun.font.EAttribute.ENUMERIC_SHAPING;\n+import static sun.font.EAttribute.EPOSTURE;\n+import static sun.font.EAttribute.ERUN_DIRECTION;\n+import static sun.font.EAttribute.ESIZE;\n+import static sun.font.EAttribute.ESTRIKETHROUGH;\n+import static sun.font.EAttribute.ESUPERSCRIPT;\n+import static sun.font.EAttribute.ESWAP_COLORS;\n+import static sun.font.EAttribute.ETRACKING;\n+import static sun.font.EAttribute.ETRANSFORM;\n+import static sun.font.EAttribute.EUNDERLINE;\n+import static sun.font.EAttribute.EWEIGHT;\n+import static sun.font.EAttribute.EWIDTH;\n@@ -1887,1 +1914,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -1910,1 +1938,4 @@\n-     * @param s the {@code ObjectInputStream} to read\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Font.java","additions":40,"deletions":9,"binary":false,"changes":49,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -41,1 +42,0 @@\n-import javax.swing.WindowConstants;\n@@ -348,0 +348,3 @@\n+    \/**\n+     * The bitwise mask of frame state constants.\n+     *\/\n@@ -352,1 +355,1 @@\n-    \/*\n+    \/**\n@@ -1179,1 +1182,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -1209,7 +1213,7 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception java.io.OptionalDataException if an icon {@code Image}\n-     *   is not available, but anything other than an EOF\n-     *   is detected\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws java.io.OptionalDataException if an icon {@code Image} is not\n+     *         available, but anything other than an EOF is detected\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Frame.java","additions":14,"deletions":10,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+\n@@ -43,9 +44,36 @@\n-    int width, height;          \/* number of  cells: horizontal and vertical *\/\n-    int startx, starty;         \/* starting point for layout *\/\n-    int[] minWidth;             \/* largest minWidth in each column *\/\n-    int[] minHeight;            \/* largest minHeight in each row *\/\n-    double[] weightX;           \/* largest weight in each column *\/\n-    double[] weightY;           \/* largest weight in each row *\/\n-    boolean hasBaseline;        \/* Whether or not baseline layout has been\n-                                 * requested and one of the components\n-                                 * has a valid baseline. *\/\n+    \/**\n+     * The number of cells: horizontal and vertical.\n+     *\/\n+    int width, height;\n+\n+    \/**\n+     * The starting point for layout.\n+     *\/\n+    int startx, starty;\n+\n+    \/**\n+     * The largest minWidth in each column.\n+     *\/\n+    int[] minWidth;\n+\n+    \/**\n+     * The largest minHeight in each row.\n+     *\/\n+    int[] minHeight;\n+\n+    \/**\n+     * The largest weight in each column.\n+     *\/\n+    double[] weightX;\n+\n+    \/**\n+     * The largest weight in each row.\n+     *\/\n+    double[] weightY;\n+\n+    \/**\n+     * Whether or not baseline layout has been requested and one of the\n+     * components has a valid baseline.\n+     *\/\n+    boolean hasBaseline;\n+\n@@ -54,5 +82,15 @@\n-    short[] baselineType;       \/* The type of baseline for a particular\n-                                 * row.  A mix of the BaselineResizeBehavior\n-                                 * constants (1 << ordinal()) *\/\n-    int[] maxAscent;            \/* Max ascent (baseline). *\/\n-    int[] maxDescent;           \/* Max descent (height - baseline) *\/\n+    \/**\n+     * The type of baseline for a particular row. A mix of the\n+     * BaselineResizeBehavior constants {@code (1 << ordinal())}\n+     *\/\n+    short[] baselineType;\n+\n+    \/**\n+     * Max ascent (baseline).\n+     *\/\n+    int[] maxAscent;\n+\n+    \/**\n+     * Max descent (height - baseline)\n+     *\/\n+    int[] maxDescent;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/GridBagLayoutInfo.java","additions":53,"deletions":15,"binary":false,"changes":68,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -30,1 +31,4 @@\n-import javax.accessibility.*;\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n@@ -156,3 +160,7 @@\n-     * @exception HeadlessException if\n-     * {@code GraphicsEnvironment.isHeadless()} returns\n-     * {@code true}\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n@@ -160,1 +168,0 @@\n-     * @since 1.4\n@@ -162,0 +169,1 @@\n+     * @since 1.4\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Label.java","additions":14,"deletions":6,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,3 +28,5 @@\n-import java.util.Vector;\n-import java.util.Locale;\n-import java.util.EventListener;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.FocusListener;\n+import java.awt.event.ItemEvent;\n+import java.awt.event.ItemListener;\n@@ -31,3 +34,0 @@\n-import java.awt.event.*;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -35,1 +35,5 @@\n-import javax.accessibility.*;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.EventListener;\n+import java.util.Locale;\n+import java.util.Vector;\n@@ -37,0 +41,6 @@\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleSelection;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n@@ -1237,1 +1247,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -1267,4 +1278,6 @@\n-     * @param s the {@code ObjectInputStream} to write\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n@@ -1535,2 +1548,9 @@\n-            private List parent;\n-            private int  indexInParent;\n+           \/**\n+            * The parent {@code List}.\n+            *\/\n+           private List parent;\n+\n+           \/**\n+            * The index in the parent.\n+            *\/\n+           private int indexInParent;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/List.java","additions":35,"deletions":15,"binary":false,"changes":50,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,2 +28,0 @@\n-import java.awt.Component;\n-import java.awt.Image;\n@@ -31,0 +29,1 @@\n+\n@@ -926,0 +925,4 @@\n+\/**\n+ * The entry of the list of {@code Images} that is being tracked by the\n+ * {@code MediaTracker}.\n+ *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/MediaTracker.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -529,1 +529,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -543,4 +544,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Menu.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -430,1 +430,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -444,4 +445,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/MenuBar.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -441,4 +441,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n@@ -468,4 +470,5 @@\n-     *\n-     *  MenuComponent will contain all of the methods in interface Accessible,\n-     *  though it won't actually implement the interface - that will be up\n-     *  to the individual objects which extend MenuComponent.\n+     *\/\n+    \/**\n+     * MenuComponent will contain all of the methods in interface Accessible,\n+     * though it won't actually implement the interface - that will be up\n+     * to the individual objects which extend MenuComponent.\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/MenuComponent.java","additions":12,"deletions":9,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -728,1 +728,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -754,4 +755,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/MenuItem.java","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -27,0 +28,4 @@\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseWheelEvent;\n@@ -28,5 +33,0 @@\n-import java.awt.event.*;\n-import javax.accessibility.*;\n-import sun.awt.ScrollPaneWheelScroller;\n-import sun.awt.SunToolkit;\n-\n@@ -35,0 +35,1 @@\n+import java.io.IOException;\n@@ -37,1 +38,7 @@\n-import java.io.IOException;\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+\n+import sun.awt.ScrollPaneWheelScroller;\n+import sun.awt.SunToolkit;\n@@ -675,0 +682,3 @@\n+     *\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -685,3 +695,7 @@\n-     * @exception HeadlessException if\n-     * {@code GraphicsEnvironment.isHeadless()} returns\n-     * {@code true}\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n@@ -722,0 +736,3 @@\n+    \/**\n+     * Invoked when the value of the adjustable has changed.\n+     *\/\n@@ -813,49 +830,0 @@\n-\n-\/*\n- * In JDK 1.1.1, the pkg private class java.awt.PeerFixer was moved to\n- * become an inner class of ScrollPane, which broke serialization\n- * for ScrollPane objects using JDK 1.1.\n- * Instead of moving it back out here, which would break all JDK 1.1.x\n- * releases, we keep PeerFixer in both places. Because of the scoping rules,\n- * the PeerFixer that is used in ScrollPane will be the one that is the\n- * inner class. This pkg private PeerFixer class below will only be used\n- * if the Java 2 platform is used to deserialize ScrollPane objects that were serialized\n- * using JDK1.1\n- *\/\n-class PeerFixer implements AdjustmentListener, java.io.Serializable {\n-    \/*\n-     * serialVersionUID\n-     *\/\n-    private static final long serialVersionUID = 7051237413532574756L;\n-\n-    PeerFixer(ScrollPane scroller) {\n-        this.scroller = scroller;\n-    }\n-\n-    \/**\n-     * Invoked when the value of the adjustable has changed.\n-     *\/\n-    @SuppressWarnings(\"deprecation\")\n-    public void adjustmentValueChanged(AdjustmentEvent e) {\n-        Adjustable adj = e.getAdjustable();\n-        int value = e.getValue();\n-        ScrollPanePeer peer = (ScrollPanePeer) scroller.peer;\n-        if (peer != null) {\n-            peer.setValue(adj, value);\n-        }\n-\n-        Component c = scroller.getComponent(0);\n-        switch(adj.getOrientation()) {\n-        case Adjustable.VERTICAL:\n-            c.move(c.getLocation().x, -(value));\n-            break;\n-        case Adjustable.HORIZONTAL:\n-            c.move(-(value), c.getLocation().y);\n-            break;\n-        default:\n-            throw new IllegalArgumentException(\"Illegal adjustable orientation\");\n-        }\n-    }\n-\n-    private ScrollPane scroller;\n-}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/ScrollPane.java","additions":26,"deletions":58,"binary":false,"changes":84,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-package java.awt;\n@@ -27,1 +26,1 @@\n-import sun.awt.AWTAccessor;\n+package java.awt;\n@@ -34,0 +33,1 @@\n+import sun.awt.AWTAccessor;\n@@ -141,0 +141,4 @@\n+    \/**\n+     * Specified adjustment listener to receive adjustment events from this\n+     * {@code ScrollPaneAdjustable}.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/ScrollPaneAdjustable.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -27,0 +28,2 @@\n+import java.awt.event.AdjustmentEvent;\n+import java.awt.event.AdjustmentListener;\n@@ -28,4 +31,0 @@\n-import java.awt.event.*;\n-import java.util.EventListener;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -33,1 +32,3 @@\n-import javax.accessibility.*;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.EventListener;\n@@ -35,0 +36,6 @@\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleValue;\n@@ -1174,1 +1181,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -1202,4 +1210,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Scrollbar.java","additions":20,"deletions":10,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,1 +25,0 @@\n-package java.awt;\n@@ -27,1 +26,1 @@\n-import sun.awt.AWTAccessor;\n+package java.awt;\n@@ -30,1 +29,0 @@\n-\n@@ -33,0 +31,2 @@\n+import sun.awt.AWTAccessor;\n+\n@@ -539,0 +539,2 @@\n+     * @throws ObjectStreamException if a new object replacing this object could\n+     *         not be created\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/SystemColor.java","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -652,3 +653,7 @@\n-     * @exception HeadlessException if\n-     * {@code GraphicsEnvironment.isHeadless()} returns\n-     * {@code true}\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/TextArea.java","additions":8,"deletions":3,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1995, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1995, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,0 +28,3 @@\n+import java.awt.event.TextEvent;\n+import java.awt.event.TextListener;\n+import java.awt.im.InputMethodRequests;\n@@ -28,4 +32,0 @@\n-import java.awt.event.*;\n-import java.util.EventListener;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -33,0 +33,2 @@\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n@@ -34,0 +36,8 @@\n+import java.util.EventListener;\n+\n+import javax.accessibility.Accessible;\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleRole;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n+import javax.accessibility.AccessibleText;\n@@ -35,2 +45,1 @@\n-import javax.accessibility.*;\n-import java.awt.im.InputMethodRequests;\n+\n@@ -105,3 +114,5 @@\n-    \/\/ A flag used to tell whether the background has been set by\n-    \/\/ developer code (as opposed to AWT code).  Used to determine\n-    \/\/ the background color of non-editable TextComponents.\n+    \/**\n+     * A flag used to tell whether the background has been set by\n+     * developer code (as opposed to AWT code).  Used to determine\n+     * the background color of non-editable TextComponents.\n+     *\/\n@@ -769,0 +780,2 @@\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -797,3 +810,6 @@\n-     * @exception HeadlessException if\n-     * {@code GraphicsEnvironment.isHeadless()} returns\n-     * {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n@@ -1202,0 +1218,3 @@\n+    \/**\n+     * Whether support of input methods should be checked or not.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/TextComponent.java","additions":32,"deletions":13,"binary":false,"changes":45,"status":"modified"},{"patch":"@@ -25,0 +25,1 @@\n+\n@@ -27,0 +28,2 @@\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n@@ -28,4 +31,0 @@\n-import java.awt.event.*;\n-import java.util.EventListener;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -33,1 +32,3 @@\n-import javax.accessibility.*;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.EventListener;\n@@ -35,0 +36,3 @@\n+import javax.accessibility.AccessibleContext;\n+import javax.accessibility.AccessibleState;\n+import javax.accessibility.AccessibleStateSet;\n@@ -704,0 +708,2 @@\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -722,3 +728,6 @@\n-     * @exception HeadlessException if\n-     * {@code GraphicsEnvironment.isHeadless()} returns\n-     * {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/TextField.java","additions":17,"deletions":8,"binary":false,"changes":25,"status":"modified"},{"patch":"@@ -2214,0 +2214,3 @@\n+    \/**\n+     * This is a utility class to support desktop properties.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Toolkit.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -244,1 +244,6 @@\n-    boolean     syncLWRequests = false;\n+\n+    \/**\n+     * Focus transfers for the lightweight components request should be made\n+     * synchronously.\n+     *\/\n+    boolean syncLWRequests = false;\n@@ -2939,1 +2944,2 @@\n-     * @param s the {@code ObjectOutputStream} to write\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -3094,4 +3100,6 @@\n-     * @param s the {@code ObjectInputStream} to read\n-     * @exception HeadlessException if\n-     *   {@code GraphicsEnvironment.isHeadless} returns\n-     *   {@code true}\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     * @throws HeadlessException if {@code GraphicsEnvironment.isHeadless()}\n+     *         returns {@code true}\n@@ -3430,0 +3438,4 @@\n+    \/**\n+     * {@code true} if this Window should appear at the default location,\n+     * {@code false} if at the current location.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/Window.java","additions":18,"deletions":6,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -102,0 +102,3 @@\n+    \/**\n+     * One of the {@code ColorSpace} type constants.\n+     *\/\n@@ -103,0 +106,4 @@\n+\n+    \/**\n+     * The number of components in the color space.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ColorSpace.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -38,0 +38,2 @@\n+import java.io.IOException;\n+\n@@ -85,1 +87,8 @@\n-    private ICC_Profile    thisProfile;\n+    \/**\n+     * The specified {@code ICC_Profile} object.\n+     *\/\n+    private ICC_Profile thisProfile;\n+\n+    \/**\n+     * The maximum normalized component values.\n+     *\/\n@@ -87,0 +96,4 @@\n+\n+    \/**\n+     * The minimum normalized component values.\n+     *\/\n@@ -88,0 +101,4 @@\n+\n+    \/**\n+     * Difference between min and max values.\n+     *\/\n@@ -89,0 +106,4 @@\n+\n+    \/**\n+     * Inverted value of the difference between min and max values.\n+     *\/\n@@ -90,0 +111,4 @@\n+\n+    \/**\n+     * Whether the values should be scaled or not.\n+     *\/\n@@ -126,1 +151,6 @@\n-     * Validate an ICC_ColorSpace read from an object input stream\n+     * Validate an ICC_ColorSpace read from an object input stream.\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/color\/ICC_ColorSpace.java","additions":32,"deletions":2,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -26,1 +26,0 @@\n-\n@@ -31,1 +30,0 @@\n-\n@@ -34,3 +32,0 @@\n-\n-import java.awt.event.InputEvent;\n-\n@@ -38,8 +33,1 @@\n-\n-import java.io.InvalidObjectException;\n-import java.util.EventObject;\n-\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Iterator;\n-\n+import java.awt.event.InputEvent;\n@@ -47,0 +35,1 @@\n+import java.io.InvalidObjectException;\n@@ -49,1 +38,4 @@\n-\n+import java.util.Collections;\n+import java.util.EventObject;\n+import java.util.Iterator;\n+import java.util.List;\n@@ -303,0 +295,2 @@\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -326,0 +320,4 @@\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/dnd\/DragGestureEvent.java","additions":13,"deletions":15,"binary":false,"changes":28,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.awt.event.InputEvent;\n@@ -31,6 +30,1 @@\n-\n-import java.io.InvalidObjectException;\n-import java.util.Collections;\n-import java.util.TooManyListenersException;\n-import java.util.ArrayList;\n-\n+import java.awt.event.InputEvent;\n@@ -38,0 +32,1 @@\n+import java.io.InvalidObjectException;\n@@ -41,0 +36,2 @@\n+import java.util.ArrayList;\n+import java.util.TooManyListenersException;\n@@ -396,0 +393,2 @@\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -414,0 +413,4 @@\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/dnd\/DragGestureRecognizer.java","additions":11,"deletions":8,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -50,1 +50,0 @@\n-\n@@ -806,0 +805,2 @@\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -852,0 +853,4 @@\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/dnd\/DragSource.java","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -547,0 +547,2 @@\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -573,0 +575,4 @@\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/dnd\/DragSourceContext.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,7 +28,0 @@\n-import java.util.TooManyListenersException;\n-\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n-\n@@ -43,2 +36,0 @@\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n@@ -47,1 +38,3 @@\n-import javax.swing.Timer;\n+import java.awt.dnd.peer.DropTargetPeer;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n@@ -50,1 +43,7 @@\n-import java.awt.dnd.peer.DropTargetPeer;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n+import java.util.TooManyListenersException;\n+\n+import javax.swing.Timer;\n@@ -55,1 +54,0 @@\n-\n@@ -579,0 +577,2 @@\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -601,0 +601,4 @@\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/dnd\/DropTarget.java","additions":17,"deletions":13,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -384,0 +384,3 @@\n+     * @return a newly created object from deserialized data\n+     * @throws ObjectStreamException if a new object replacing this object could\n+     *         not be created\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/FocusEvent.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2008, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -165,0 +165,3 @@\n+    \/**\n+     * The {@code Component} at the top of the hierarchy which was changed.\n+     *\/\n@@ -166,0 +169,5 @@\n+\n+    \/**\n+     * The parent of the {@code changed} component. This may be the parent\n+     * before or after the change, depending on the type of change.\n+     *\/\n@@ -167,1 +175,7 @@\n-    long      changeFlags;\n+\n+    \/**\n+     * A bitmask which indicates the type(s) of the {@code HIERARCHY_CHANGED}\n+     * events represented in this event object. For information on allowable\n+     * values, see the class description for {@link HierarchyEvent}\n+     *\/\n+    long changeFlags;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/HierarchyEvent.java","additions":16,"deletions":2,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,4 +28,0 @@\n-import sun.awt.AWTAccessor;\n-import sun.awt.AppContext;\n-import sun.awt.SunToolkit;\n-\n@@ -38,0 +34,1 @@\n+import java.lang.annotation.Native;\n@@ -40,1 +37,4 @@\n-import java.lang.annotation.Native;\n+\n+import sun.awt.AWTAccessor;\n+import sun.awt.AppContext;\n+import sun.awt.SunToolkit;\n@@ -417,0 +417,5 @@\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/InputMethodEvent.java","additions":11,"deletions":6,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+\n@@ -1881,0 +1882,5 @@\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/KeyEvent.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.awt.IllegalComponentStateException;\n@@ -34,2 +35,0 @@\n-import java.awt.IllegalComponentStateException;\n-import java.awt.MouseInfo;\n@@ -1191,0 +1190,5 @@\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/MouseEvent.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+\n@@ -166,1 +167,1 @@\n-     * TBS\n+     * Previous state of the window for window state change event.\n@@ -169,1 +170,0 @@\n-    int newState;\n@@ -171,0 +171,4 @@\n+    \/**\n+     * New state of the window for window state change event.\n+     *\/\n+    int newState;\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/event\/WindowEvent.java","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -44,1 +44,1 @@\n-import java.io.Serializable;\n+import java.io.IOException;\n@@ -46,0 +46,1 @@\n+import java.io.Serializable;\n@@ -102,0 +103,6 @@\n+    \/**\n+     * Writes default serializable fields to stream.\n+     *\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n@@ -112,1 +119,6 @@\n-    \/*\n+    \/**\n+     * Resolves a {@code TransformAttribute} object after serialization.\n+     *\n+     * @return a newly created object from deserialized data\n+     * @throws ObjectStreamException if a new object replacing this object could\n+     *         not be created\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/font\/TransformAttribute.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.io.IOException;\n@@ -3945,0 +3946,6 @@\n+    \/**\n+     * Writes default serializable fields to stream.\n+     *\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n@@ -3951,0 +3958,8 @@\n+    \/**\n+     * Reads the {@code ObjectInputStream}.\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/AffineTransform.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,1 @@\n+import java.io.IOException;\n@@ -333,0 +334,2 @@\n+         * @param  s the {@code ObjectOutputStream} to write\n+         * @throws IOException if an I\/O error occurs\n@@ -355,0 +358,4 @@\n+         * @param  s the {@code ObjectInputStream} to read\n+         * @throws ClassNotFoundException if the class of a serialized object\n+         *         could not be found\n+         * @throws IOException if an I\/O error occurs\n@@ -625,0 +632,2 @@\n+         * @param  s the {@code ObjectOutputStream} to write\n+         * @throws IOException if an I\/O error occurs\n@@ -647,0 +656,4 @@\n+         * @param  s the {@code ObjectInputStream} to read\n+         * @throws ClassNotFoundException if the class of a serialized object\n+         *         could not be found\n+         * @throws IOException if an I\/O error occurs\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Arc2D.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,0 +30,1 @@\n+import java.io.IOException;\n@@ -860,0 +861,2 @@\n+         * @param  s the {@code ObjectOutputStream} to write\n+         * @throws IOException if an I\/O error occurs\n@@ -997,0 +1000,4 @@\n+         * @param  s the {@code ObjectInputStream} to read\n+         * @throws ClassNotFoundException if the class of a serialized object\n+         *         could not be found\n+         * @throws IOException if an I\/O error occurs\n@@ -1635,0 +1642,2 @@\n+         * @param  s the {@code ObjectOutputStream} to write\n+         * @throws IOException if an I\/O error occurs\n@@ -1771,0 +1780,4 @@\n+         * @param  s the {@code ObjectInputStream} to read\n+         * @throws ClassNotFoundException if the class of a serialized object\n+         *         could not be found\n+         * @throws IOException if an I\/O error occurs         *\n","filename":"src\/java.desktop\/share\/classes\/java\/awt\/geom\/Path2D.java","additions":14,"deletions":1,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2011, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -44,0 +45,1 @@\n+\n@@ -46,0 +48,3 @@\n+    \/**\n+     * The index of the property element that was changed.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/IndexedPropertyChangeEvent.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,4 +28,0 @@\n-import java.io.Serializable;\n-import java.io.ObjectStreamField;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -32,0 +29,4 @@\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.ObjectStreamField;\n+import java.io.Serializable;\n@@ -426,0 +427,4 @@\n+     * Writes serializable fields to stream.\n+     *\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -465,0 +470,8 @@\n+    \/**\n+     * Reads the {@code ObjectInputStream}.\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n@@ -494,2 +507,5 @@\n-     * @serialField children                                   Hashtable\n-     * @serialField source                                     Object\n+     * @serialField children Hashtable\n+     *              The list of {@code PropertyChangeListeners}\n+     * @serialField source Object\n+     *              The object to be provided as the \"source\" for any generated\n+     *              events\n@@ -497,0 +513,1 @@\n+     *              The version\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/PropertyChangeSupport.java","additions":24,"deletions":7,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1996, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1996, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,4 +28,0 @@\n-import java.io.Serializable;\n-import java.io.ObjectStreamField;\n-import java.io.ObjectOutputStream;\n-import java.io.ObjectInputStream;\n@@ -32,0 +29,4 @@\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.ObjectStreamField;\n+import java.io.Serializable;\n@@ -415,0 +416,4 @@\n+     * Writes serializable fields to stream.\n+     *\n+     * @param  s the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -454,0 +459,8 @@\n+    \/**\n+     * Reads the {@code ObjectInputStream}.\n+     *\n+     * @param  s the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n+     *\/\n@@ -483,2 +496,5 @@\n-     * @serialField children                                   Hashtable\n-     * @serialField source                                     Object\n+     * @serialField children Hashtable\n+     *              The list of {@code PropertyChangeListeners}\n+     * @serialField source Object\n+     *              The object to be provided as the \"source\" for any generated\n+     *              events\n@@ -486,0 +502,1 @@\n+     *              The version\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/VetoableChangeSupport.java","additions":24,"deletions":7,"binary":false,"changes":31,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2013, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -31,1 +31,1 @@\n-\n+import java.beans.PropertyVetoException;\n@@ -34,3 +34,0 @@\n-\n-import java.beans.PropertyVetoException;\n-\n@@ -315,0 +312,3 @@\n+     *\n+     * @param  oos the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -316,1 +316,0 @@\n-\n@@ -335,2 +334,6 @@\n-     * to fully restore any resources obtained from the new nesting\n-     * BeanContext\n+     * to fully restore any resources obtained from the new nesting BeanContext.\n+     *\n+     * @param  ois the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n@@ -338,1 +341,0 @@\n-\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextChildSupport.java","additions":11,"deletions":9,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,4 +28,0 @@\n-import java.beans.beancontext.BeanContextEvent;\n-\n-import java.beans.beancontext.BeanContextServices;\n-\n@@ -97,2 +93,6 @@\n-    protected Class<?>                   serviceClass;\n-    private   boolean                    invalidateRefs;\n+    protected Class<?> serviceClass;\n+\n+    \/**\n+     * {@code true} if current service is being forcibly revoked.\n+     *\/\n+    private boolean invalidateRefs;\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextServiceRevokedEvent.java","additions":7,"deletions":7,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,0 +28,4 @@\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.Serializable;\n@@ -33,0 +37,1 @@\n+import java.util.Locale;\n@@ -34,7 +39,0 @@\n-import java.util.Map.Entry;\n-\n-import java.io.IOException;\n-import java.io.ObjectInputStream;\n-import java.io.ObjectOutputStream;\n-import java.io.Serializable;\n-\n@@ -43,2 +41,0 @@\n-import java.util.Locale;\n-\n@@ -1212,1 +1208,4 @@\n-     * serialize the instance\n+     * Serialize the instance.\n+     *\n+     * @param  oos the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -1214,1 +1213,0 @@\n-\n@@ -1222,1 +1220,6 @@\n-     * deserialize the instance\n+     * Deserialize the instance.\n+     *\n+     * @param  ois the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n@@ -1224,1 +1227,0 @@\n-\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextServicesSupport.java","additions":16,"deletions":14,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-\n@@ -32,4 +31,0 @@\n-import java.beans.AppletInitializer;\n-\n-import java.beans.DesignMode;\n-\n@@ -38,4 +33,0 @@\n-import java.beans.PropertyChangeSupport;\n-\n-import java.beans.VetoableChangeListener;\n-import java.beans.VetoableChangeSupport;\n@@ -43,1 +34,1 @@\n-\n+import java.beans.VetoableChangeListener;\n@@ -45,1 +36,0 @@\n-\n@@ -51,1 +41,0 @@\n-\n@@ -53,1 +42,0 @@\n-\n@@ -61,1 +49,0 @@\n-\n@@ -341,0 +328,3 @@\n+        \/**\n+         * The child.\n+         *\/\n@@ -342,1 +332,6 @@\n-        private           Object   child;\n+        private Object child;\n+\n+        \/**\n+         * The peer if the child and the peer are related by an implementation\n+         * of BeanContextProxy\n+         *\/\n@@ -1000,1 +995,2 @@\n-     * @param oos the ObjectOutputStream\n+     * @param  oos the {@code ObjectOutputStream} to write\n+     * @throws IOException if an I\/O error occurs\n@@ -1002,1 +998,0 @@\n-\n@@ -1068,0 +1063,5 @@\n+     *\n+     * @param  ois the {@code ObjectInputStream} to read\n+     * @throws ClassNotFoundException if the class of a serialized object could\n+     *         not be found\n+     * @throws IOException if an I\/O error occurs\n@@ -1069,1 +1069,0 @@\n-\n@@ -1375,1 +1374,4 @@\n-    private             int             serializable  = 0; \/\/ children serializable\n+    \/**\n+     * Currently serializable children.\n+     *\/\n+    private int serializable = 0; \/\/ children serializable\n","filename":"src\/java.desktop\/share\/classes\/java\/beans\/beancontext\/BeanContextSupport.java","additions":22,"deletions":20,"binary":false,"changes":42,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+import org.w3c.dom.DOMException;\n@@ -35,1 +36,0 @@\n-import org.w3c.dom.DOMException;\n@@ -42,1 +42,4 @@\n-\n+\/**\n+ * A {@code IIODOMException} is thrown by the {@code IIOMetadataNode} in\n+ * \"exceptional\" circumstances.\n+ *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/imageio\/metadata\/IIOMetadataNode.java","additions":6,"deletions":3,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -29,0 +29,1 @@\n+\n@@ -31,0 +32,1 @@\n+\n@@ -62,0 +64,3 @@\n+    \/**\n+     * The owner of the dialog.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/print\/attribute\/standard\/DialogOwner.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,27 @@\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.FlowLayout;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Rectangle;\n+import java.awt.event.ComponentEvent;\n+import java.awt.event.ComponentListener;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.ContainerListener;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+import java.beans.PropertyVetoException;\n+\n+import javax.swing.DefaultDesktopManager;\n+import javax.swing.DesktopManager;\n+import javax.swing.JComponent;\n+import javax.swing.JDesktopPane;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JLayeredPane;\n+import javax.swing.JPanel;\n+import javax.swing.UIManager;\n+import javax.swing.border.BevelBorder;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n@@ -32,3 +56,0 @@\n-import java.beans.*;\n-import java.awt.event.*;\n-import java.awt.*;\n@@ -201,0 +222,3 @@\n+    \/**\n+     * The {@code TaskBar} installed by the UI.\n+     *\/\n@@ -330,0 +354,3 @@\n+    \/**\n+     * The default {@code DesktopManager} installed by the UI.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthDesktopPaneUI.java","additions":34,"deletions":7,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,6 +28,10 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import javax.swing.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.BasicInternalFrameTitlePane;\n-import java.beans.PropertyChangeListener;\n+import java.awt.Component;\n+import java.awt.Container;\n+import java.awt.Dimension;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n@@ -35,0 +39,1 @@\n+import java.beans.PropertyChangeListener;\n@@ -36,0 +41,14 @@\n+\n+import javax.swing.Icon;\n+import javax.swing.ImageIcon;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JInternalFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.JSeparator;\n+import javax.swing.SwingConstants;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.basic.BasicInternalFrameTitlePane;\n+\n@@ -160,0 +179,3 @@\n+    \/**\n+     * A subclass of {@code JPopupMenu} that implements {@code UIResource}.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthInternalFrameTitlePane.java","additions":29,"deletions":7,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,6 +28,3 @@\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-import java.awt.*;\n-import java.beans.PropertyChangeListener;\n+import java.awt.Color;\n+import java.awt.Component;\n+import java.awt.Graphics;\n@@ -35,0 +32,9 @@\n+import java.beans.PropertyChangeListener;\n+\n+import javax.swing.DefaultListCellRenderer;\n+import javax.swing.JComponent;\n+import javax.swing.JList;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.basic.BasicListUI;\n@@ -201,0 +207,3 @@\n+    \/**\n+     * The {@code DefaultListCellRenderer} installed by the UI.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthListUI.java","additions":16,"deletions":7,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,11 +28,4 @@\n-import javax.swing.*;\n-import javax.swing.text.JTextComponent;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-\n-import java.beans.PropertyChangeListener;\n-import java.beans.PropertyChangeEvent;\n-\n-import java.awt.*;\n-import java.awt.event.ContainerListener;\n+import java.awt.Component;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.Rectangle;\n@@ -40,1 +33,1 @@\n-import java.awt.event.FocusListener;\n+import java.awt.event.ContainerListener;\n@@ -42,0 +35,14 @@\n+import java.awt.event.FocusListener;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JScrollPane;\n+import javax.swing.JViewport;\n+import javax.swing.UIManager;\n+import javax.swing.border.AbstractBorder;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.basic.BasicScrollPaneUI;\n+import javax.swing.text.JTextComponent;\n@@ -233,1 +240,3 @@\n-\n+    \/**\n+     * A subclass of {@code AbstractBorder} that implements {@code UIResource}.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthScrollPaneUI.java","additions":23,"deletions":14,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,3 +28,23 @@\n-import javax.swing.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n+import java.awt.Component;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.Graphics;\n+import java.awt.Insets;\n+import java.awt.LayoutManager;\n+import java.awt.Rectangle;\n+import java.awt.event.MouseEvent;\n+import java.awt.event.MouseListener;\n+import java.awt.event.MouseMotionListener;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.Icon;\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JTabbedPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.basic.BasicTabbedPaneUI;\n@@ -33,4 +53,0 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.beans.PropertyChangeListener;\n-import java.beans.PropertyChangeEvent;\n@@ -915,0 +931,4 @@\n+    \/**\n+     * A subclass of {@code SynthArrowButton} that implements\n+     * {@code UIResource}.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTabbedPaneUI.java","additions":28,"deletions":8,"binary":false,"changes":36,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,8 +28,17 @@\n-import java.awt.*;\n-import java.beans.*;\n-import javax.swing.*;\n-import javax.swing.border.*;\n-import javax.swing.plaf.*;\n-import javax.swing.plaf.basic.*;\n-import javax.swing.table.*;\n-import sun.swing.table.*;\n+import java.awt.Component;\n+import java.awt.Graphics;\n+import java.beans.PropertyChangeEvent;\n+import java.beans.PropertyChangeListener;\n+\n+import javax.swing.JComponent;\n+import javax.swing.JLabel;\n+import javax.swing.JTable;\n+import javax.swing.RowSorter;\n+import javax.swing.border.Border;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n+import javax.swing.plaf.basic.BasicTableHeaderUI;\n+import javax.swing.table.JTableHeader;\n+import javax.swing.table.TableCellRenderer;\n+\n+import sun.swing.table.DefaultTableCellHeaderRenderer;\n@@ -220,0 +229,3 @@\n+    \/**\n+     * The {@code DefaultTableCellHeaderRenderer} installed by the UI.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTableHeaderUI.java","additions":21,"deletions":9,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,1 @@\n+\n@@ -48,1 +49,3 @@\n-import javax.swing.plaf.*;\n+import javax.swing.plaf.ColorUIResource;\n+import javax.swing.plaf.ComponentUI;\n+import javax.swing.plaf.UIResource;\n@@ -709,0 +712,3 @@\n+    \/**\n+     * The renderer installed by the UI to render the boolean data.\n+     *\/\n@@ -748,0 +754,3 @@\n+    \/**\n+     * The {@code DefaultTableCellRenderer} installed by the UI.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTableUI.java","additions":11,"deletions":2,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2002, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2002, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -35,0 +36,1 @@\n+\n@@ -683,0 +685,4 @@\n+    \/**\n+     * A subclass of {@code DefaultTreeCellRenderer} that implements\n+     * {@code UIResource}.\n+     *\/\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/synth\/SynthTreeUI.java","additions":7,"deletions":1,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2014, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -25,0 +25,1 @@\n+\n@@ -27,1 +28,0 @@\n-import java.util.Vector;\n@@ -29,1 +29,0 @@\n-import javax.swing.undo.UndoableEdit;\n@@ -70,0 +69,3 @@\n+     *\n+     * @param  len the length of the array\n+     * @return the java array of some type\n@@ -74,1 +76,3 @@\n-     * Get the length of the allocated array\n+     * Get the length of the allocated array.\n+     *\n+     * @return the length of the array\n@@ -81,0 +85,2 @@\n+     *\n+     * @return the java array of some type\n@@ -88,0 +94,2 @@\n+     *\n+     * @return the start of the gap\n@@ -95,0 +103,2 @@\n+     *\n+     * @return the end of the gap\n@@ -131,0 +141,1 @@\n+     * @param addSize the number of items to add\n@@ -222,1 +233,3 @@\n-     * the appropriate marks\n+     * the appropriate marks.\n+     *\n+     * @param  newSize the new capacity\n@@ -254,0 +267,2 @@\n+     *\n+     * @param  newGapStart the new start of the gap\n@@ -283,0 +298,2 @@\n+     *\n+     * @param  newGapStart the new start of the gap\n@@ -295,0 +312,2 @@\n+     *\n+     * @param  newGapEnd the new end of the gap\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/text\/GapVector.java","additions":24,"deletions":5,"binary":false,"changes":29,"status":"modified"}]}