{"files":[{"patch":"@@ -55,2 +55,2 @@\n- * <p>In order to create a Cipher object, the application calls the\n- * Cipher's {@code getInstance} method, and passes the name of the\n+ * <p>In order to create a {code Cipher} object, the application calls the\n+ * cipher's {@code getInstance} method, and passes the name of the\n@@ -115,1 +115,2 @@\n- * the cipher objects with GCM parameters which have a different IV value.\n+ * the {@code Cipher} objects with GCM parameters which have a different IV\n+ * value.\n@@ -227,1 +228,1 @@\n-    \/\/ strength that this Cipher object can be used for. (The cryptographic\n+    \/\/ strength that this cipher can be used for. (The cryptographic\n@@ -260,1 +261,1 @@\n-     * Creates a Cipher object.\n+     * Creates a {code Cipher} object.\n@@ -267,1 +268,1 @@\n-     *         are deemed invalid for constructing the Cipher object\n+     *         are deemed invalid for constructing the {code Cipher} object\n@@ -287,1 +288,1 @@\n-     * Creates a Cipher object. Called internally and by NullCipher.\n+     * Creates a {code Cipher} object. Called internally by {code NullCipher}.\n@@ -316,1 +317,1 @@\n-         * array containing the components of a Cipher transformation:\n+         * array containing the components of a cipher transformation:\n@@ -405,1 +406,1 @@\n-        \/\/ called directly by Cipher only to throw the correct exception\n+        \/\/ called directly by cipher only to throw the correct exception\n@@ -484,5 +485,5 @@\n-     * <p> This method traverses the list of registered security Providers,\n-     * starting with the most preferred Provider.\n-     * A new Cipher object encapsulating the\n-     * CipherSpi implementation from the first\n-     * Provider that supports the specified algorithm is returned.\n+     * <p> This method traverses the list of registered security providers,\n+     * starting with the most preferred provider.\n+     * A new {@code Cipher} object encapsulating the\n+     * {@code CipherSpi} implementation from the first\n+     * provider that supports the specified algorithm is returned.\n@@ -521,1 +522,1 @@\n-     *         or if no {@code Provider} supports a {@code CipherSpi}\n+     *         or if no provider supports a {@code CipherSpi}\n@@ -580,2 +581,2 @@\n-     * <p> A new Cipher object encapsulating the\n-     * CipherSpi implementation from the specified provider\n+     * <p> A new {@code Cipher} object encapsulating the\n+     * {@code CipherSpi} implementation from the specified provider\n@@ -606,1 +607,1 @@\n-     * @param provider the name of the provider.\n+     * @param provider the name of the provider\n@@ -654,3 +655,3 @@\n-     * <p> A new Cipher object encapsulating the\n-     * CipherSpi implementation from the specified Provider\n-     * object is returned.  Note that the specified Provider object\n+     * <p> A new {@code Cipher} object encapsulating the\n+     * {@code CipherSpi} implementation from the specified {@code provider}\n+     * object is returned.  Note that the specified {@code provider} object\n@@ -677,1 +678,1 @@\n-     * @param provider the provider.\n+     * @param provider the provider\n@@ -688,1 +689,1 @@\n-     *         {@code Provider} object\n+     *         {@code provider} object\n@@ -980,1 +981,1 @@\n-     * object..\n+     * object.\n@@ -982,1 +983,1 @@\n-     * @return the algorithm name of this {@code Cipher} object.\n+     * @return the algorithm name of this {@code Cipher} object\n@@ -991,1 +992,1 @@\n-     * @return the block size (in bytes), or 0 if the underlying algorithm is\n+     * @return the block size (in bytes), or 0 if this cipher is\n@@ -1016,1 +1017,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -1039,2 +1040,2 @@\n-     * @return the initialization vector in a new buffer, or null if the\n-     * underlying algorithm does not use an IV, or if the IV has not yet\n+     * @return the initialization vector in a new buffer, or {@code null} if\n+     * this cipher does not use an IV, or if the IV has not yet\n@@ -1052,3 +1053,5 @@\n-     * this cipher, or may contain a combination of default and random\n-     * parameter values used by the underlying cipher implementation if this\n-     * cipher requires algorithm parameters but was not initialized with any.\n+     * this cipher, or may contain additional default or random parameter\n+     * values used by the underlying cipher implementation. If the required\n+     * parameters were not supplied and can be generated by the cipher, the\n+     * generated parameters will be returned. Otherwise, {@code null} is\n+     * returned.\n@@ -1056,2 +1059,1 @@\n-     * @return the parameters used with this cipher, or null if this cipher\n-     * does not use any parameters.\n+     * @return the parameters used with this cipher, or {@code null}\n@@ -1068,1 +1070,1 @@\n-     * null if this cipher does not use any exemption mechanism.\n+     * {@code null} if this cipher does not use any exemption mechanism.\n@@ -1207,1 +1209,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1215,3 +1217,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1226,1 +1228,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -1231,1 +1233,1 @@\n-     * configured jurisdiction policy files).\n+     * configured jurisdiction policy files)\n@@ -1234,1 +1236,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1263,1 +1265,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1267,3 +1269,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1279,1 +1281,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -1284,1 +1286,1 @@\n-     * configured jurisdiction policy files).\n+     * configured jurisdiction policy files)\n@@ -1287,1 +1289,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1324,1 +1326,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1339,1 +1341,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1347,3 +1349,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1359,1 +1361,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -1361,2 +1363,2 @@\n-     * keysize (as determined from the configured jurisdiction policy files).\n-     * @exception InvalidAlgorithmParameterException if the given algorithm\n+     * keysize (as determined from the configured jurisdiction policy files)\n+     * @throws InvalidAlgorithmParameterException if the given algorithm\n@@ -1365,1 +1367,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1368,1 +1370,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1371,1 +1373,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1388,1 +1390,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1403,1 +1405,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1407,3 +1409,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1420,1 +1422,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -1422,2 +1424,2 @@\n-     * keysize (as determined from the configured jurisdiction policy files).\n-     * @exception InvalidAlgorithmParameterException if the given algorithm\n+     * keysize (as determined from the configured jurisdiction policy files)\n+     * @throws InvalidAlgorithmParameterException if the given algorithm\n@@ -1426,1 +1428,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1429,1 +1431,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1432,1 +1434,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1465,1 +1467,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1480,1 +1482,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1488,3 +1490,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1500,1 +1502,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -1503,1 +1505,1 @@\n-     * @exception InvalidAlgorithmParameterException if the given algorithm\n+     * @throws InvalidAlgorithmParameterException if the given algorithm\n@@ -1506,1 +1508,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1509,1 +1511,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1512,1 +1514,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1529,1 +1531,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1544,1 +1546,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1548,3 +1550,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1561,1 +1563,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -1563,2 +1565,2 @@\n-     * keysize (as determined from the configured jurisdiction policy files).\n-     * @exception InvalidAlgorithmParameterException if the given algorithm\n+     * keysize (as determined from the configured jurisdiction policy files)\n+     * @throws InvalidAlgorithmParameterException if the given algorithm\n@@ -1567,1 +1569,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1570,1 +1572,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1573,1 +1575,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1629,1 +1631,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1638,3 +1640,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1649,1 +1651,1 @@\n-     * @exception InvalidKeyException if the public key in the given\n+     * @throws InvalidKeyException if the public key in the given\n@@ -1655,1 +1657,1 @@\n-     * files).\n+     * files)\n@@ -1658,1 +1660,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1701,1 +1703,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -1705,3 +1707,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1717,1 +1719,1 @@\n-     * @exception InvalidKeyException if the public key in the given\n+     * @throws InvalidKeyException if the public key in the given\n@@ -1724,1 +1726,1 @@\n-     * files).\n+     * files)\n@@ -1727,1 +1729,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1784,1 +1786,1 @@\n-     * Ensures that Cipher is in a valid state for update() and doFinal()\n+     * Ensures that cipher is in a valid state for update() and doFinal()\n@@ -1786,1 +1788,1 @@\n-     * @throws IllegalStateException if Cipher object is not in valid state.\n+     * @throws IllegalStateException if this cipher is not in valid state\n@@ -1814,1 +1816,1 @@\n-     * @return the new buffer with the result, or null if the underlying\n+     * @return the new buffer with the result, or {@code null} if this\n@@ -1816,1 +1818,1 @@\n-     * new block.\n+     * new block\n@@ -1818,1 +1820,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -1853,1 +1855,1 @@\n-     * @return the new buffer with the result, or null if the underlying\n+     * @return the new buffer with the result, or null if this\n@@ -1857,1 +1859,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -1907,1 +1909,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -1909,1 +1911,1 @@\n-     * @exception ShortBufferException if the given output buffer is too small\n+     * @throws ShortBufferException if the given output buffer is too small\n@@ -1965,1 +1967,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -1967,1 +1969,1 @@\n-     * @exception ShortBufferException if the given output buffer is too small\n+     * @throws ShortBufferException if the given output buffer is too small\n@@ -2019,1 +2021,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2021,1 +2023,1 @@\n-     * @exception IllegalArgumentException if input and output are the\n+     * @throws IllegalArgumentException if input and output are the\n@@ -2023,2 +2025,2 @@\n-     * @exception ReadOnlyBufferException if the output buffer is read-only\n-     * @exception ShortBufferException if there is insufficient space in the\n+     * @throws ReadOnlyBufferException if the output buffer is read-only\n+     * @throws ShortBufferException if there is insufficient space in the\n@@ -2059,1 +2061,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -2065,1 +2067,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -2070,1 +2072,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2072,1 +2074,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -2077,1 +2079,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -2080,1 +2082,1 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n@@ -2111,1 +2113,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -2117,1 +2119,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -2126,1 +2128,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2128,1 +2130,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -2133,1 +2135,1 @@\n-     * @exception ShortBufferException if the given output buffer is too small\n+     * @throws ShortBufferException if the given output buffer is too small\n@@ -2135,1 +2137,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -2138,1 +2140,1 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n@@ -2169,1 +2171,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -2175,1 +2177,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -2182,1 +2184,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2184,1 +2186,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -2189,1 +2191,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -2192,1 +2194,1 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n@@ -2223,1 +2225,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -2229,1 +2231,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -2239,1 +2241,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2241,1 +2243,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -2246,1 +2248,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -2249,1 +2251,1 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n@@ -2287,1 +2289,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -2293,1 +2295,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -2309,1 +2311,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2311,1 +2313,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -2316,1 +2318,1 @@\n-     * @exception ShortBufferException if the given output buffer is too small\n+     * @throws ShortBufferException if the given output buffer is too small\n@@ -2318,1 +2320,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -2321,1 +2323,1 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n@@ -2364,1 +2366,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -2370,1 +2372,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -2388,1 +2390,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2390,1 +2392,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -2395,1 +2397,1 @@\n-     * @exception ShortBufferException if the given output buffer is too small\n+     * @throws ShortBufferException if the given output buffer is too small\n@@ -2397,1 +2399,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -2400,1 +2402,1 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n@@ -2444,1 +2446,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -2450,1 +2452,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -2463,1 +2465,1 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n+     * @throws IllegalStateException if this cipher is in a wrong state\n@@ -2465,1 +2467,1 @@\n-     * @exception IllegalArgumentException if input and output are the\n+     * @throws IllegalArgumentException if input and output are the\n@@ -2467,2 +2469,2 @@\n-     * @exception ReadOnlyBufferException if the output buffer is read-only\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws ReadOnlyBufferException if the output buffer is read-only\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -2473,1 +2475,1 @@\n-     * @exception ShortBufferException if there is insufficient space in the\n+     * @throws ShortBufferException if there is insufficient space in the\n@@ -2475,1 +2477,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -2478,1 +2480,1 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n@@ -2507,1 +2509,1 @@\n-     * @param key the key to be wrapped.\n+     * @param key the key to be wrapped\n@@ -2509,1 +2511,1 @@\n-     * @return the wrapped key.\n+     * @return the wrapped key\n@@ -2511,2 +2513,2 @@\n-     * @exception IllegalStateException if this cipher is in a wrong\n-     * state (e.g., has not been initialized).\n+     * @throws IllegalStateException if this cipher is in a wrong\n+     * state (e.g., has not been initialized)\n@@ -2514,1 +2516,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block\n+     * @throws IllegalBlockSizeException if this cipher is a block\n@@ -2517,1 +2519,1 @@\n-     * multiple of the block size.\n+     * multiple of the block size\n@@ -2519,1 +2521,1 @@\n-     * @exception InvalidKeyException if it is impossible or unsafe to\n+     * @throws InvalidKeyException if it is impossible or unsafe to\n@@ -2521,1 +2523,1 @@\n-     * being passed to a software-only cipher).\n+     * being passed to a software-only cipher)\n@@ -2524,1 +2526,1 @@\n-     * {@code CipherSpi} is not supported.\n+     * {@code CipherSpi} is not supported\n@@ -2545,1 +2547,1 @@\n-     * @param wrappedKey the key to be unwrapped.\n+     * @param wrappedKey the key to be unwrapped\n@@ -2548,1 +2550,1 @@\n-     * key.\n+     * key\n@@ -2552,1 +2554,1 @@\n-     * {@code PUBLIC_KEY}.\n+     * {@code PUBLIC_KEY}\n@@ -2554,1 +2556,1 @@\n-     * @return the unwrapped key.\n+     * @return the unwrapped key\n@@ -2556,2 +2558,2 @@\n-     * @exception IllegalStateException if this cipher is in a wrong state\n-     * (e.g., has not been initialized).\n+     * @throws IllegalStateException if this cipher is in a wrong state\n+     * (e.g., has not been initialized)\n@@ -2559,1 +2561,1 @@\n-     * @exception NoSuchAlgorithmException if no installed providers\n+     * @throws NoSuchAlgorithmException if no installed providers\n@@ -2561,1 +2563,1 @@\n-     * {@code wrappedKeyAlgorithm}.\n+     * {@code wrappedKeyAlgorithm}\n@@ -2563,1 +2565,1 @@\n-     * @exception InvalidKeyException if {@code wrappedKey} does not\n+     * @throws InvalidKeyException if {@code wrappedKey} does not\n@@ -2565,1 +2567,1 @@\n-     * the {@code wrappedKeyAlgorithm}.\n+     * the {@code wrappedKeyAlgorithm}\n@@ -2568,1 +2570,1 @@\n-     * {@code CipherSpi} is not supported.\n+     * {@code CipherSpi} is not supported\n@@ -2635,1 +2637,1 @@\n-     * Integer.MAX_VALUE will be returned.\n+     * {@code Integer.MAX_VALUE} will be returned.\n@@ -2640,4 +2642,4 @@\n-     * @param transformation the cipher transformation.\n-     * @return the maximum key length in bits or Integer.MAX_VALUE.\n-     * @exception NullPointerException if {@code transformation} is null.\n-     * @exception NoSuchAlgorithmException if {@code transformation}\n+     * @param transformation the cipher transformation\n+     * @return the maximum key length in bits or {@code Integer.MAX_VALUE}\n+     * @throws NullPointerException if {@code transformation} is {@code null}\n+     * @throws NoSuchAlgorithmException if {@code transformation}\n@@ -2645,1 +2647,1 @@\n-     * \"algorithm\/mode\/padding\".\n+     * \"algorithm\/mode\/padding\"\n@@ -2655,1 +2657,1 @@\n-     * Returns an AlgorithmParameterSpec object which contains\n+     * Returns an {code AlgorithmParameterSpec} object which contains\n@@ -2660,8 +2662,8 @@\n-     * null will be returned.\n-     *\n-     * @param transformation the cipher transformation.\n-     * @return an AlgorithmParameterSpec which holds the maximum\n-     * value or null.\n-     * @exception NullPointerException if {@code transformation}\n-     * is null.\n-     * @exception NoSuchAlgorithmException if {@code transformation}\n+     * {@code null} will be returned.\n+     *\n+     * @param transformation the cipher transformation\n+     * @return an {code AlgorithmParameterSpec} object which holds the maximum\n+     * value or {@code null}\n+     * @throws NullPointerException if {@code transformation}\n+     * is {@code null}\n+     * @throws NoSuchAlgorithmException if {@code transformation}\n@@ -2669,1 +2671,1 @@\n-     * \"algorithm\/mode\/padding\".\n+     * \"algorithm\/mode\/padding\"\n@@ -2691,1 +2693,1 @@\n-     * byte array is null\n+     * byte array is {@code null}\n@@ -2726,1 +2728,1 @@\n-     * byte array is null, or the {@code offset} or {@code length}\n+     * byte array is {@code null}, or the {@code offset} or {@code length}\n@@ -2775,1 +2777,1 @@\n-     * is null\n+     * is {@code null}\n@@ -2803,1 +2805,1 @@\n-     * Returns a String representation of this Cipher.\n+     * Returns a String representation of this cipher.\n@@ -2807,1 +2809,1 @@\n-     * mode, and provider of this Cipher.\n+     * mode, and provider of this cipher.\n@@ -2810,1 +2812,1 @@\n-     * @return a String describing this Cipher\n+     * @return a String describing this cipher\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":213,"deletions":211,"binary":false,"changes":424,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n- * for the <code>Cipher<\/code> class.\n+ * for the {@code Cipher} class.\n@@ -39,2 +39,2 @@\n- * <p>In order to create an instance of <code>Cipher<\/code>, which\n- * encapsulates an instance of this <code>CipherSpi<\/code> class, an\n+ * <p>In order to create an instance of {@code Cipher}, which\n+ * encapsulates an instance of this {@code CipherSpi} class, an\n@@ -76,1 +76,1 @@\n- * the <code>getInstance<\/code> methods of <code>Cipher<\/code>, which invoke\n+ * the {@code getInstance} methods of {@code Cipher}, which invoke\n@@ -79,1 +79,1 @@\n- * methods of the provider's subclass of <code>CipherSpi<\/code>.\n+ * methods of the provider's subclass of {@code CipherSpi}.\n@@ -81,1 +81,1 @@\n- * <p>A <code>Cipher<\/code> property in a provider master class may have one of\n+ * <p>A {@code Cipher} property in a provider master class may have one of\n@@ -90,1 +90,1 @@\n- *     <code>Cipher.<\/code><i>algName<\/i>\n+ *     {@code Cipher.}<i>algName<\/i>\n@@ -97,1 +97,1 @@\n- *     <code>Cipher.<\/code><i>algName\/mode<\/i>\n+ *     {@code Cipher.}<i>algName\/mode<\/i>\n@@ -104,1 +104,1 @@\n- *     <code>Cipher.<\/code><i>algName\/\/padding<\/i>\n+ *     {@code Cipher.}<i>algName\/\/padding<\/i>\n@@ -111,1 +111,1 @@\n- *     <code>Cipher.<\/code><i>algName\/mode\/padding<\/i>\n+ *     {@code Cipher.}<i>algName\/mode\/padding<\/i>\n@@ -116,1 +116,1 @@\n- * <p>For example, a provider may supply a subclass of <code>CipherSpi<\/code>\n+ * <p>For example, a provider may supply a subclass of {@code CipherSpi}\n@@ -121,1 +121,1 @@\n- * <code>Cipher<\/code> properties in its master class:\n+ * {@code Cipher} properties in its master class:\n@@ -127,1 +127,1 @@\n- *     <code>Cipher.<\/code><i>AES\/ECB\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/ECB\/PKCS5Padding<\/i>\n@@ -132,1 +132,1 @@\n- *     <code>Cipher.<\/code><i>AES\/CBC\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/CBC\/PKCS5Padding<\/i>\n@@ -137,1 +137,1 @@\n- *     <code>Cipher.<\/code><i>AES\/CFB\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/CFB\/PKCS5Padding<\/i>\n@@ -142,1 +142,1 @@\n- *     <code>Cipher.<\/code><i>AES\/OFB\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/OFB\/PKCS5Padding<\/i>\n@@ -150,1 +150,1 @@\n- * and a generic <i>AES<\/i> class that subclasses from <code>CipherSpi<\/code>.\n+ * and a generic <i>AES<\/i> class that subclasses from {@code CipherSpi}.\n@@ -152,1 +152,1 @@\n- * <code>Cipher<\/code> properties in its master class:\n+ * {@code Cipher} properties in its master class:\n@@ -158,1 +158,1 @@\n- *     <code>Cipher.<\/code><i>AES<\/i>\n+ *     {@code Cipher.}<i>AES<\/i>\n@@ -163,1 +163,1 @@\n- * <p>The <code>getInstance<\/code> factory method of the <code>Cipher<\/code>\n+ * <p>The {@code getInstance} factory method of the {@code Cipher}\n@@ -165,1 +165,1 @@\n- * implementation of <code>CipherSpi<\/code> for a\n+ * implementation of {@code CipherSpi} for a\n@@ -170,1 +170,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -175,1 +175,1 @@\n- * <p>If the answer is NO, throw a <code>NoSuchAlgorithmException<\/code>\n+ * <p>If the answer is NO, throw a {@code NoSuchAlgorithmException}\n@@ -179,1 +179,1 @@\n- * <p>The <code>getInstance<\/code> factory method of the <code>Cipher<\/code>\n+ * <p>The {@code getInstance} factory method of the {@code Cipher}\n@@ -181,1 +181,1 @@\n- * implementation of <code>CipherSpi<\/code> for a\n+ * implementation of {@code CipherSpi} for a\n@@ -186,1 +186,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -191,1 +191,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -194,1 +194,1 @@\n- * <code>engineSetPadding(<i>padding<\/i>)<\/code> on the new instance.\n+ * {@code engineSetPadding(<i>padding<\/i>)} on the new instance.\n@@ -197,1 +197,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -201,1 +201,1 @@\n- * <code>engineSetMode(<i>mode<\/i>)<\/code> on the new instance.\n+ * {@code engineSetMode(<i>mode<\/i>)} on the new instance.\n@@ -204,1 +204,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -207,3 +207,3 @@\n- * <code>engineSetMode(<i>mode<\/i>)<\/code> and\n- * <code>engineSetPadding(<i>padding<\/i>)<\/code> on the new instance.\n- * <p>If the answer is NO, throw a <code>NoSuchAlgorithmException<\/code>\n+ * {@code engineSetMode(<i>mode<\/i>)} and\n+ * {@code engineSetPadding(<i>padding<\/i>)} on the new instance.\n+ * <p>If the answer is NO, throw a {@code NoSuchAlgorithmException}\n@@ -231,1 +231,1 @@\n-     * @exception NoSuchAlgorithmException if the requested cipher mode does\n+     * @throws NoSuchAlgorithmException if the requested cipher mode does\n@@ -242,1 +242,1 @@\n-     * @exception NoSuchPaddingException if the requested padding mechanism\n+     * @throws NoSuchPaddingException if the requested padding mechanism\n@@ -251,1 +251,1 @@\n-     * @return the block size (in bytes), or 0 if the underlying algorithm is\n+     * @return the block size (in bytes), or 0 if the algorithm is\n@@ -258,3 +258,3 @@\n-     * need to be in order to hold the result of the next <code>update<\/code>\n-     * or <code>doFinal<\/code> operation, given the input length\n-     * <code>inputLen<\/code> (in bytes).\n+     * need to be in order to hold the result of the next {@code update}\n+     * or {@code doFinal} operation, given the input length\n+     * {@code inputLen} (in bytes).\n@@ -263,1 +263,1 @@\n-     * previous <code>update<\/code> call, padding, and AEAD tagging.\n+     * previous {@code update} call, padding, and AEAD tagging.\n@@ -265,2 +265,2 @@\n-     * <p>The actual output length of the next <code>update<\/code> or\n-     * <code>doFinal<\/code> call may be smaller than the length returned by\n+     * <p>The actual output length of the next {@code update} or\n+     * {@code doFinal} call may be smaller than the length returned by\n@@ -281,3 +281,3 @@\n-     * @return the initialization vector in a new buffer, or null if the\n-     * underlying algorithm does not use an IV, or if the IV has not yet\n-     * been set.\n+     * @return the initialization vector in a new buffer, or {@code null} if the\n+     * algorithm does not use an IV, or if the IV has not yet\n+     * been set\n@@ -291,3 +291,5 @@\n-     * this cipher, or may contain a combination of default and random\n-     * parameter values used by the underlying cipher implementation if this\n-     * cipher requires algorithm parameters but was not initialized with any.\n+     * this cipher, or may contain additional default or random parameter\n+     * values used by the underlying cipher implementation. If the required\n+     * parameters were not supplied and can be generated by the cipher, the\n+     * generated parameters will be returned. Otherwise, {@code null} is\n+     * returned.\n@@ -295,2 +297,1 @@\n-     * @return the parameters used with this cipher, or null if this cipher\n-     * does not use any parameters.\n+     * @return the parameters used with this cipher, or {@code null}\n@@ -306,1 +307,1 @@\n-     * the value of <code>opmode<\/code>.\n+     * the value of {@code opmode}.\n@@ -309,1 +310,1 @@\n-     * derived from the given <code>key<\/code>, the underlying cipher\n+     * derived from the given {@code key}, the underlying cipher\n@@ -313,1 +314,1 @@\n-     * <code>InvalidKeyException<\/code> if it is being\n+     * {@code InvalidKeyException} if it is being\n@@ -324,1 +325,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -326,1 +327,1 @@\n-     * them from <code>random<\/code>.\n+     * them from {@code random}.\n@@ -328,3 +329,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -335,2 +336,2 @@\n-     * <code>ENCRYPT_MODE<\/code>, <code>DECRYPT_MODE<\/code>,\n-     * <code>WRAP_MODE<\/code> or <code>UNWRAP_MODE<\/code>)\n+     * {@code ENCRYPT_MODE}, {@code DECRYPT_MODE},\n+     * {@code WRAP_MODE} or {@code UNWRAP_MODE})\n@@ -340,1 +341,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -343,1 +344,1 @@\n-     * determined from the given key.\n+     * determined from the given key\n@@ -346,1 +347,1 @@\n-     * by the cipher.\n+     * by the cipher\n@@ -358,1 +359,1 @@\n-     * the value of <code>opmode<\/code>.\n+     * the value of {@code opmode}.\n@@ -361,2 +362,2 @@\n-     * <code>params<\/code> is null, the underlying cipher implementation is\n-     * supposed to generate the required parameters itself (using\n+     * {@code params} is {@code null}, the underlying cipher implementation\n+     * is supposed to generate the required parameters itself (using\n@@ -365,1 +366,1 @@\n-     * <code>InvalidAlgorithmParameterException<\/code> if it is being\n+     * {@code InvalidAlgorithmParameterException} if it is being\n@@ -376,1 +377,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -378,1 +379,1 @@\n-     * them from <code>random<\/code>.\n+     * them from {@code random}.\n@@ -380,2 +381,2 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n@@ -387,2 +388,2 @@\n-     * <code>ENCRYPT_MODE<\/code>, <code>DECRYPT_MODE<\/code>,\n-     * <code>WRAP_MODE<\/code> or <code>UNWRAP_MODE<\/code>)\n+     * {@code ENCRYPT_MODE}, {@code DECRYPT_MODE},\n+     * {@code WRAP_MODE}> or {@code UNWRAP_MODE})\n@@ -393,1 +394,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -395,1 +396,1 @@\n-     * @exception InvalidAlgorithmParameterException if the given algorithm\n+     * @throws InvalidAlgorithmParameterException if the given algorithm\n@@ -398,1 +399,1 @@\n-     * algorithm parameters and <code>params<\/code> is null.\n+     * algorithm parameters and {@code params} is {@code null}\n@@ -401,1 +402,1 @@\n-     * by the cipher.\n+     * by the cipher\n@@ -414,1 +415,1 @@\n-     * the value of <code>opmode<\/code>.\n+     * the value of {@code opmode}.\n@@ -417,1 +418,1 @@\n-     * <code>params<\/code> is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -421,1 +422,1 @@\n-     * <code>InvalidAlgorithmParameterException<\/code> if it is being\n+     * {@code InvalidAlgorithmParameterException} if it is being\n@@ -432,1 +433,1 @@\n-     * <p>If this cipher (including its underlying feedback or padding scheme)\n+     * <p>If this cipher (including its feedback or padding scheme)\n@@ -434,1 +435,1 @@\n-     * them from <code>random<\/code>.\n+     * them from {@code random}.\n@@ -436,3 +437,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -443,2 +444,2 @@\n-     * <code>ENCRYPT_MODE<\/code>, <code>DECRYPT_MODE<\/code>,\n-     * <code>WRAP_MODE<\/code> or <code>UNWRAP_MODE<\/code>)\n+     * {@code ENCRYPT_MODE}, {@code DECRYPT_MODE},\n+     * {@code WRAP_MODE} or {@code UNWRAP_MODE})\n@@ -449,1 +450,1 @@\n-     * @exception InvalidKeyException if the given key is inappropriate for\n+     * @throws InvalidKeyException if the given key is inappropriate for\n@@ -451,1 +452,1 @@\n-     * @exception InvalidAlgorithmParameterException if the given algorithm\n+     * @throws InvalidAlgorithmParameterException if the given algorithm\n@@ -454,1 +455,1 @@\n-     * algorithm parameters and <code>params<\/code> is null.\n+     * algorithm parameters and {@code params} is null\n@@ -457,1 +458,1 @@\n-     * by the cipher.\n+     * by the cipher\n@@ -469,2 +470,2 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, are processed,\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, are processed,\n@@ -474,2 +475,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n-     * starts\n+     * @param inputOffset the offset in {@code input} where the input starts\n@@ -478,1 +478,1 @@\n-     * @return the new buffer with the result, or null if the underlying\n+     * @return the new buffer with the result, or {@code null} if the\n@@ -480,1 +480,1 @@\n-     * new block.\n+     * new block\n@@ -490,4 +490,4 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, are processed,\n-     * and the result is stored in the <code>output<\/code> buffer, starting at\n-     * <code>outputOffset<\/code> inclusive.\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, are processed,\n+     * and the result is stored in the {@code output} buffer, starting at\n+     * {@code outputOffset} inclusive.\n@@ -495,2 +495,2 @@\n-     * <p>If the <code>output<\/code> buffer is too small to hold the result,\n-     * a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If the {@code output} buffer is too small to hold the result,\n+     * a {@code ShortBufferException} is thrown.\n@@ -499,1 +499,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n+     * @param inputOffset the offset in {@code input} where the input\n@@ -503,1 +503,1 @@\n-     * @param outputOffset the offset in <code>output<\/code> where the result\n+     * @param outputOffset the offset in {@code output} where the result\n@@ -506,1 +506,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -508,1 +508,1 @@\n-     * @exception ShortBufferException if the given output buffer is too small\n+     * @throws ShortBufferException if the given output buffer is too small\n@@ -521,2 +521,2 @@\n-     * <p>All <code>input.remaining()<\/code> bytes starting at\n-     * <code>input.position()<\/code> are processed. The result is stored\n+     * <p>All {@code input.remaining()} bytes starting at\n+     * {@code input.position()} are processed. The result is stored\n@@ -529,2 +529,2 @@\n-     * <p>If <code>output.remaining()<\/code> bytes are insufficient to\n-     * hold the result, a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If {@code output.remaining()} bytes are insufficient to\n+     * hold the result, a {@code ShortBufferException} is thrown.\n@@ -538,1 +538,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -540,1 +540,1 @@\n-     * @exception ShortBufferException if there is insufficient space in the\n+     * @throws ShortBufferException if there is insufficient space in the\n@@ -543,1 +543,1 @@\n-     * @throws NullPointerException if either parameter is <CODE>null<\/CODE>\n+     * @throws NullPointerException if either parameter is {@code null}\n@@ -562,3 +562,3 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, and any input\n-     * bytes that may have been buffered during a previous <code>update<\/code>\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, and any input\n+     * bytes that may have been buffered during a previous {@code update}\n@@ -566,1 +566,1 @@\n-     * If an AEAD mode such as GCM\/CCM is being used, the authentication\n+     * If an AEAD mode (such as GCM or CCM) is being used, the authentication\n@@ -571,1 +571,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -573,1 +573,1 @@\n-     * <code>engineInit<\/code>.\n+     * {@code engineInit}.\n@@ -576,1 +576,1 @@\n-     * <code>engineInit<\/code>) more data.\n+     * {@code engineInit}) more data.\n@@ -578,1 +578,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -582,2 +582,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n-     * starts\n+     * @param inputOffset the offset in {@code input} where the input starts\n@@ -588,1 +587,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -592,2 +591,2 @@\n-     * process the input data provided.\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * process the input data provided\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -596,2 +595,2 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n-     * AEAD mode (such as GCM\/CCM), and the received authentication tag\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n+     * AEAD mode (such as GCM or CCM), and the received authentication tag\n@@ -610,3 +609,3 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, and any input\n-     * bytes that may have been buffered during a previous <code>update<\/code>\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, and any input\n+     * bytes that may have been buffered during a previous {@code update}\n@@ -614,1 +613,1 @@\n-     * If an AEAD mode such as GCM\/CCM is being used, the authentication\n+     * If an AEAD mode such as GCM or CCM is being used, the authentication\n@@ -617,2 +616,2 @@\n-     * The result is stored in the <code>output<\/code> buffer, starting at\n-     * <code>outputOffset<\/code> inclusive.\n+     * The result is stored in the {@code output} buffer, starting at\n+     * {@code outputOffset} inclusive.\n@@ -620,2 +619,2 @@\n-     * <p>If the <code>output<\/code> buffer is too small to hold the result,\n-     * a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If the {@code output} buffer is too small to hold the result,\n+     * a {@code ShortBufferException} is thrown.\n@@ -623,1 +622,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -625,1 +624,1 @@\n-     * <code>engineInit<\/code>.\n+     * {@code engineInit}.\n@@ -628,1 +627,1 @@\n-     * <code>engineInit<\/code>) more data.\n+     * {@code engineInit}) more data.\n@@ -630,1 +629,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -634,1 +633,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n+     * @param inputOffset the offset in {@code input} where the input\n@@ -638,1 +637,1 @@\n-     * @param outputOffset the offset in <code>output<\/code> where the result\n+     * @param outputOffset the offset in {@code output} where the result\n@@ -641,1 +640,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -643,1 +642,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -647,2 +646,2 @@\n-     * process the input data provided.\n-     * @exception ShortBufferException if the given output buffer is too small\n+     * process the input data provided\n+     * @throws ShortBufferException if the given output buffer is too small\n@@ -650,1 +649,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -653,2 +652,2 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n-     * AEAD mode (such as GCM\/CCM), and the received authentication tag\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n+     * AEAD mode (such as GCM or CCM), and the received authentication tag\n@@ -669,3 +668,3 @@\n-     * <p>All <code>input.remaining()<\/code> bytes starting at\n-     * <code>input.position()<\/code> are processed.\n-     * If an AEAD mode such as GCM\/CCM is being used, the authentication\n+     * <p>All {@code input.remaining()} bytes starting at\n+     * {@code input.position()} are processed.\n+     * If an AEAD mode such as GCM or CCM is being used, the authentication\n@@ -680,2 +679,2 @@\n-     * <p>If <code>output.remaining()<\/code> bytes are insufficient to\n-     * hold the result, a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If {@code output.remaining()} bytes are insufficient to\n+     * hold the result, a {@code ShortBufferException} is thrown.\n@@ -683,1 +682,1 @@\n-     * <p>Upon finishing, this method resets this cipher object to the state\n+     * <p>Upon finishing, this method resets this cipher to the state\n@@ -685,1 +684,1 @@\n-     * <code>engineInit<\/code>.\n+     * {@code engineInit}.\n@@ -688,1 +687,1 @@\n-     * <code>engineInit<\/code>) more data.\n+     * {@code engineInit} more data.\n@@ -690,1 +689,1 @@\n-     * <p>Note: if any exception is thrown, this cipher object may need to\n+     * <p>Note: if any exception is thrown, this cipher may need to\n@@ -699,1 +698,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -701,1 +700,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -705,2 +704,2 @@\n-     * process the input data provided.\n-     * @exception ShortBufferException if there is insufficient space in the\n+     * process the input data provided\n+     * @throws ShortBufferException if there is insufficient space in the\n@@ -708,1 +707,1 @@\n-     * @exception BadPaddingException if this cipher is in decryption mode,\n+     * @throws BadPaddingException if this cipher is in decryption mode,\n@@ -711,2 +710,2 @@\n-     * @exception AEADBadTagException if this cipher is decrypting in an\n-     * AEAD mode (such as GCM\/CCM), and the received authentication tag\n+     * @throws AEADBadTagException if this cipher is decrypting in an\n+     * AEAD mode (such as GCM or CCM), and the received authentication tag\n@@ -715,1 +714,1 @@\n-     * @throws NullPointerException if either parameter is <CODE>null<\/CODE>\n+     * @throws NullPointerException if either parameter is {@code null}\n@@ -843,3 +842,3 @@\n-     * Such an override is expected to throw an IllegalBlockSizeException or\n-     * InvalidKeyException (under the specified circumstances),\n-     * if the given key cannot be wrapped.\n+     * Such an override is expected to throw an\n+     * {@code IllegalBlockSizeException} or {@code InvalidKeyException}\n+     * (under the specified circumstances), if the given key cannot be wrapped.\n@@ -847,1 +846,1 @@\n-     * UnsupportedOperationException.\n+     * {@code UnsupportedOperationException}.\n@@ -849,1 +848,1 @@\n-     * @param key the key to be wrapped.\n+     * @param key the key to be wrapped\n@@ -851,1 +850,1 @@\n-     * @return the wrapped key.\n+     * @return the wrapped key\n@@ -853,1 +852,1 @@\n-     * @exception IllegalBlockSizeException if this cipher is a block cipher,\n+     * @throws IllegalBlockSizeException if this cipher is a block cipher,\n@@ -855,1 +854,1 @@\n-     * key to be wrapped is not a multiple of the block size.\n+     * key to be wrapped is not a multiple of the block size\n@@ -857,1 +856,1 @@\n-     * @exception InvalidKeyException if it is impossible or unsafe to\n+     * @throws InvalidKeyException if it is impossible or unsafe to\n@@ -859,1 +858,1 @@\n-     * being passed to a software-only cipher).\n+     * being passed to a software-only cipher)\n@@ -861,1 +860,1 @@\n-     * @throws UnsupportedOperationException if this method is not supported.\n+     * @throws UnsupportedOperationException if this method is not supported\n@@ -875,1 +874,1 @@\n-     * Such an override is expected to throw an InvalidKeyException if\n+     * Such an override is expected to throw an {@code InvalidKeyException} if\n@@ -878,1 +877,1 @@\n-     * UnsupportedOperationException.\n+     * {@code UnsupportedOperationException}.\n@@ -880,1 +879,1 @@\n-     * @param wrappedKey the key to be unwrapped.\n+     * @param wrappedKey the key to be unwrapped\n@@ -883,1 +882,1 @@\n-     * key.\n+     * key\n@@ -886,2 +885,1 @@\n-     * <code>SECRET_KEY<\/code>, <code>PRIVATE_KEY<\/code>, or\n-     * <code>PUBLIC_KEY<\/code>.\n+     * {@code SECRET_KEY}, {@code PRIVATE_KEY}, or {@code PUBLIC_KEY}.\n@@ -889,1 +887,1 @@\n-     * @return the unwrapped key.\n+     * @return the unwrapped key\n@@ -891,3 +889,3 @@\n-     * @exception NoSuchAlgorithmException if no installed providers\n-     * can create keys of type <code>wrappedKeyType<\/code> for the\n-     * <code>wrappedKeyAlgorithm<\/code>.\n+     * @throws NoSuchAlgorithmException if no installed providers\n+     * can create keys of type {@code wrappedKeyType} for the\n+     * {@code wrappedKeyAlgorithm}\n@@ -895,3 +893,3 @@\n-     * @exception InvalidKeyException if <code>wrappedKey<\/code> does not\n-     * represent a wrapped key of type <code>wrappedKeyType<\/code> for\n-     * the <code>wrappedKeyAlgorithm<\/code>.\n+     * @throws InvalidKeyException if {@code wrappedKey} does not\n+     * represent a wrapped key of type {@code wrappedKeyType} for\n+     * the {@code wrappedKeyAlgorithm}\n@@ -899,1 +897,1 @@\n-     * @throws UnsupportedOperationException if this method is not supported.\n+     * @throws UnsupportedOperationException if this method is not supported\n@@ -912,1 +910,1 @@\n-     * abstract class. It throws an <code>UnsupportedOperationException<\/code>\n+     * abstract class. It throws an {@code UnsupportedOperationException}\n@@ -915,1 +913,1 @@\n-     * @param key the key object.\n+     * @param key the key object\n@@ -917,1 +915,1 @@\n-     * @return the key size of the given key object.\n+     * @return the key size of the given key object\n@@ -919,1 +917,1 @@\n-     * @exception InvalidKeyException if <code>key<\/code> is invalid.\n+     * @throws InvalidKeyException if {@code key} is invalid\n@@ -932,1 +930,1 @@\n-     * modes such as AEAD (GCM\/CCM).  If this cipher is operating in\n+     * modes such as AEAD (GCM or CCM).  If this cipher is operating in\n@@ -934,2 +932,2 @@\n-     * operations on the ciphertext (via the {@code update} and {@code\n-     * doFinal} methods).\n+     * operations on the ciphertext (via the {@code update} and\n+     * {@code doFinal} methods).\n@@ -962,1 +960,1 @@\n-     * modes such as AEAD (GCM\/CCM).  If this cipher is operating in\n+     * modes such as AEAD (GCM or CCM).  If this cipher is operating in\n@@ -964,2 +962,2 @@\n-     * operations on the ciphertext (via the {@code update} and {@code\n-     * doFinal} methods).\n+     * operations on the ciphertext (via the {@code update} and\n+     * {@code doFinal} methods).\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherSpi.java","additions":201,"deletions":203,"binary":false,"changes":404,"status":"modified"}]}