{"files":[{"patch":"@@ -486,2 +486,2 @@\n-     * A new Cipher object encapsulating the\n-     * CipherSpi implementation from the first\n+     * A new {@code Cipher} object encapsulating the\n+     * {@code CipherSpi} implementation from the first\n@@ -580,2 +580,2 @@\n-     * <p> A new Cipher object encapsulating the\n-     * CipherSpi implementation from the specified provider\n+     * <p> A new {@code Cipher} object encapsulating the\n+     * {@code CipherSpi} implementation from the specified provider\n@@ -606,1 +606,1 @@\n-     * @param provider the name of the provider.\n+     * @param provider the name of the provider\n@@ -654,2 +654,2 @@\n-     * <p> A new Cipher object encapsulating the\n-     * CipherSpi implementation from the specified Provider\n+     * <p> A new {@code Cipher} object encapsulating the\n+     * {@code CipherSpi} implementation from the specified Provider\n@@ -677,1 +677,1 @@\n-     * @param provider the provider.\n+     * @param provider the provider\n@@ -980,1 +980,1 @@\n-     * object..\n+     * object.\n@@ -982,1 +982,1 @@\n-     * @return the algorithm name of this {@code Cipher} object.\n+     * @return the algorithm name of this {@code Cipher} object\n@@ -1039,1 +1039,1 @@\n-     * @return the initialization vector in a new buffer, or null if the\n+     * @return the initialization vector in a new buffer, or {@code null} if the\n@@ -1051,4 +1051,5 @@\n-     * <p>The returned parameters may be the same that were used to initialize\n-     * this cipher, or may contain a combination of default and random\n-     * parameter values used by the underlying cipher implementation if this\n-     * cipher requires algorithm parameters but was not initialized with any.\n+     * <p>If this cipher has been previously initialized with parameters,\n+     * this method returns the same parameters. Otherwise, this method may\n+     * return a combination of user-supplied, default and randomly generated\n+     * parameter values if the underlying cipher implementation supports it\n+     * and can successfully generate them. Otherwise, {@code null} is returned.\n@@ -1056,2 +1057,1 @@\n-     * @return the parameters used with this cipher, or null if this cipher\n-     * does not use any parameters.\n+     * @return the parameters used with this cipher, or {@code null}\n@@ -1068,1 +1068,1 @@\n-     * null if this cipher does not use any exemption mechanism.\n+     * {@code null} if this cipher does not use any exemption mechanism.\n@@ -1231,1 +1231,1 @@\n-     * configured jurisdiction policy files).\n+     * configured jurisdiction policy files)\n@@ -1234,1 +1234,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1267,3 +1267,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1284,1 +1284,1 @@\n-     * configured jurisdiction policy files).\n+     * configured jurisdiction policy files)\n@@ -1287,1 +1287,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1324,1 +1324,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1347,3 +1347,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1361,1 +1361,1 @@\n-     * keysize (as determined from the configured jurisdiction policy files).\n+     * keysize (as determined from the configured jurisdiction policy files)\n@@ -1365,1 +1365,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1368,1 +1368,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1371,1 +1371,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1388,1 +1388,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1407,3 +1407,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1422,1 +1422,1 @@\n-     * keysize (as determined from the configured jurisdiction policy files).\n+     * keysize (as determined from the configured jurisdiction policy files)\n@@ -1426,1 +1426,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1429,1 +1429,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1432,1 +1432,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1465,1 +1465,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1488,3 +1488,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1506,1 +1506,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1509,1 +1509,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1512,1 +1512,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1529,1 +1529,1 @@\n-     * {@code params} is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -1548,3 +1548,3 @@\n-     * <p>Note that when a Cipher object is initialized, it loses all\n-     * previously-acquired state. In other words, initializing a Cipher is\n-     * equivalent to creating a new instance of that Cipher and initializing\n+     * <p>Note that when a {@code Cipher} object is initialized, it loses all\n+     * previously-acquired state. In other words, initializing a cipher is\n+     * equivalent to creating a new instance of that cipher and initializing\n@@ -1563,1 +1563,1 @@\n-     * keysize (as determined from the configured jurisdiction policy files).\n+     * keysize (as determined from the configured jurisdiction policy files)\n@@ -1567,1 +1567,1 @@\n-     * algorithm parameters and {@code params} is null, or the given\n+     * algorithm parameters and {@code params} is {@code null}, or the given\n@@ -1570,1 +1570,1 @@\n-     * policy files).\n+     * policy files)\n@@ -1573,1 +1573,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1655,1 +1655,1 @@\n-     * files).\n+     * files)\n@@ -1658,1 +1658,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1724,1 +1724,1 @@\n-     * files).\n+     * files)\n@@ -1727,1 +1727,1 @@\n-     * by the underlying {@code CipherSpi}.\n+     * by the underlying {@code CipherSpi}\n@@ -1786,1 +1786,1 @@\n-     * @throws IllegalStateException if Cipher object is not in valid state.\n+     * @throws IllegalStateException if Cipher object is not in valid state\n@@ -1814,1 +1814,1 @@\n-     * @return the new buffer with the result, or null if the underlying\n+     * @return the new buffer with the result, or {@code null} if the underlying\n@@ -1816,1 +1816,1 @@\n-     * new block.\n+     * new block\n@@ -2507,1 +2507,1 @@\n-     * @param key the key to be wrapped.\n+     * @param key the key to be wrapped\n@@ -2509,1 +2509,1 @@\n-     * @return the wrapped key.\n+     * @return the wrapped key\n@@ -2512,1 +2512,1 @@\n-     * state (e.g., has not been initialized).\n+     * state (e.g., has not been initialized)\n@@ -2517,1 +2517,1 @@\n-     * multiple of the block size.\n+     * multiple of the block size\n@@ -2521,1 +2521,1 @@\n-     * being passed to a software-only cipher).\n+     * being passed to a software-only cipher)\n@@ -2524,1 +2524,1 @@\n-     * {@code CipherSpi} is not supported.\n+     * {@code CipherSpi} is not supported\n@@ -2545,1 +2545,1 @@\n-     * @param wrappedKey the key to be unwrapped.\n+     * @param wrappedKey the key to be unwrapped\n@@ -2548,1 +2548,1 @@\n-     * key.\n+     * key\n@@ -2552,1 +2552,1 @@\n-     * {@code PUBLIC_KEY}.\n+     * {@code PUBLIC_KEY}\n@@ -2554,1 +2554,1 @@\n-     * @return the unwrapped key.\n+     * @return the unwrapped key\n@@ -2557,1 +2557,1 @@\n-     * (e.g., has not been initialized).\n+     * (e.g., has not been initialized)\n@@ -2561,1 +2561,1 @@\n-     * {@code wrappedKeyAlgorithm}.\n+     * {@code wrappedKeyAlgorithm}\n@@ -2565,1 +2565,1 @@\n-     * the {@code wrappedKeyAlgorithm}.\n+     * the {@code wrappedKeyAlgorithm}\n@@ -2568,1 +2568,1 @@\n-     * {@code CipherSpi} is not supported.\n+     * {@code CipherSpi} is not supported\n@@ -2640,3 +2640,3 @@\n-     * @param transformation the cipher transformation.\n-     * @return the maximum key length in bits or Integer.MAX_VALUE.\n-     * @exception NullPointerException if {@code transformation} is null.\n+     * @param transformation the cipher transformation\n+     * @return the maximum key length in bits or Integer.MAX_VALUE\n+     * @exception NullPointerException if {@code transformation} is {@code null}\n@@ -2645,1 +2645,1 @@\n-     * \"algorithm\/mode\/padding\".\n+     * \"algorithm\/mode\/padding\"\n@@ -2660,1 +2660,1 @@\n-     * null will be returned.\n+     * {@code null} will be returned.\n@@ -2662,1 +2662,1 @@\n-     * @param transformation the cipher transformation.\n+     * @param transformation the cipher transformation\n@@ -2664,1 +2664,1 @@\n-     * value or null.\n+     * value or {@code null}\n@@ -2666,1 +2666,1 @@\n-     * is null.\n+     * is {@code null}\n@@ -2669,1 +2669,1 @@\n-     * \"algorithm\/mode\/padding\".\n+     * \"algorithm\/mode\/padding\"\n@@ -2691,1 +2691,1 @@\n-     * byte array is null\n+     * byte array is {@code null}\n@@ -2726,1 +2726,1 @@\n-     * byte array is null, or the {@code offset} or {@code length}\n+     * byte array is {@code null}, or the {@code offset} or {@code length}\n@@ -2775,1 +2775,1 @@\n-     * is null\n+     * is {@code null}\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/Cipher.java","additions":89,"deletions":89,"binary":false,"changes":178,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n- * for the <code>Cipher<\/code> class.\n+ * for the {@code Cipher} class.\n@@ -50,2 +50,2 @@\n- * <p>In order to create an instance of <code>Cipher<\/code>, which\n- * encapsulates an instance of this <code>CipherSpi<\/code> class, an\n+ * <p>In order to create an instance of {@code Cipher}, which\n+ * encapsulates an instance of this {@code CipherSpi} class, an\n@@ -87,1 +87,1 @@\n- * the <code>getInstance<\/code> methods of <code>Cipher<\/code>, which invoke\n+ * the {@code getInstance} methods of {@code Cipher}, which invoke\n@@ -90,1 +90,1 @@\n- * methods of the provider's subclass of <code>CipherSpi<\/code>.\n+ * methods of the provider's subclass of {@code CipherSpi}.\n@@ -92,1 +92,1 @@\n- * <p>A <code>Cipher<\/code> property in a provider master class may have one of\n+ * <p>A {@code Cipher} property in a provider master class may have one of\n@@ -101,1 +101,1 @@\n- *     <code>Cipher.<\/code><i>algName<\/i>\n+ *     {@code Cipher.}<i>algName<\/i>\n@@ -108,1 +108,1 @@\n- *     <code>Cipher.<\/code><i>algName\/mode<\/i>\n+ *     {@code Cipher.}<i>algName\/mode<\/i>\n@@ -115,1 +115,1 @@\n- *     <code>Cipher.<\/code><i>algName\/\/padding<\/i>\n+ *     {@code Cipher.}<i>algName\/\/padding<\/i>\n@@ -122,1 +122,1 @@\n- *     <code>Cipher.<\/code><i>algName\/mode\/padding<\/i>\n+ *     {@code Cipher.}<i>algName\/mode\/padding<\/i>\n@@ -127,1 +127,1 @@\n- * <p>For example, a provider may supply a subclass of <code>CipherSpi<\/code>\n+ * <p>For example, a provider may supply a subclass of {@code CipherSpi}\n@@ -132,1 +132,1 @@\n- * <code>Cipher<\/code> properties in its master class:\n+ * {@code Cipher} properties in its master class:\n@@ -138,1 +138,1 @@\n- *     <code>Cipher.<\/code><i>AES\/ECB\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/ECB\/PKCS5Padding<\/i>\n@@ -143,1 +143,1 @@\n- *     <code>Cipher.<\/code><i>AES\/CBC\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/CBC\/PKCS5Padding<\/i>\n@@ -148,1 +148,1 @@\n- *     <code>Cipher.<\/code><i>AES\/CFB\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/CFB\/PKCS5Padding<\/i>\n@@ -153,1 +153,1 @@\n- *     <code>Cipher.<\/code><i>AES\/OFB\/PKCS5Padding<\/i>\n+ *     {@code Cipher.}<i>AES\/OFB\/PKCS5Padding<\/i>\n@@ -161,1 +161,1 @@\n- * and a generic <i>AES<\/i> class that subclasses from <code>CipherSpi<\/code>.\n+ * and a generic <i>AES<\/i> class that subclasses from {@code CipherSpi}.\n@@ -163,1 +163,1 @@\n- * <code>Cipher<\/code> properties in its master class:\n+ * {@code Cipher} properties in its master class:\n@@ -169,1 +169,1 @@\n- *     <code>Cipher.<\/code><i>AES<\/i>\n+ *     {@code Cipher.}<i>AES<\/i>\n@@ -174,1 +174,1 @@\n- * <p>The <code>getInstance<\/code> factory method of the <code>Cipher<\/code>\n+ * <p>The {@code getInstance} factory method of the {@code Cipher}\n@@ -176,1 +176,1 @@\n- * implementation of <code>CipherSpi<\/code> for a\n+ * implementation of {@code CipherSpi} for a\n@@ -181,1 +181,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -186,1 +186,1 @@\n- * <p>If the answer is NO, throw a <code>NoSuchAlgorithmException<\/code>\n+ * <p>If the answer is NO, throw a {@code NoSuchAlgorithmException}\n@@ -190,1 +190,1 @@\n- * <p>The <code>getInstance<\/code> factory method of the <code>Cipher<\/code>\n+ * <p>The {@code getInstance} factory method of the {@code Cipher}\n@@ -192,1 +192,1 @@\n- * implementation of <code>CipherSpi<\/code> for a\n+ * implementation of {@code CipherSpi} for a\n@@ -197,1 +197,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -202,1 +202,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -205,1 +205,1 @@\n- * <code>engineSetPadding(<i>padding<\/i>)<\/code> on the new instance.\n+ * {@code engineSetPadding(<i>padding<\/i>)} on the new instance.\n@@ -208,1 +208,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -212,1 +212,1 @@\n- * <code>engineSetMode(<i>mode<\/i>)<\/code> on the new instance.\n+ * {@code engineSetMode(<i>mode<\/i>)} on the new instance.\n@@ -215,1 +215,1 @@\n- * Check if the provider has registered a subclass of <code>CipherSpi<\/code>\n+ * Check if the provider has registered a subclass of {@code CipherSpi}\n@@ -218,3 +218,3 @@\n- * <code>engineSetMode(<i>mode<\/i>)<\/code> and\n- * <code>engineSetPadding(<i>padding<\/i>)<\/code> on the new instance.\n- * <p>If the answer is NO, throw a <code>NoSuchAlgorithmException<\/code>\n+ * {@code engineSetMode(<i>mode<\/i>)} and\n+ * {@code engineSetPadding(<i>padding<\/i>)} on the new instance.\n+ * <p>If the answer is NO, throw a {@code NoSuchAlgorithmException}\n@@ -269,3 +269,3 @@\n-     * need to be in order to hold the result of the next <code>update<\/code>\n-     * or <code>doFinal<\/code> operation, given the input length\n-     * <code>inputLen<\/code> (in bytes).\n+     * need to be in order to hold the result of the next {@code update}\n+     * or {@code doFinal} operation, given the input length\n+     * {@code inputLen} (in bytes).\n@@ -274,1 +274,1 @@\n-     * previous <code>update<\/code> call, padding, and AEAD tagging.\n+     * previous {@code update} call, padding, and AEAD tagging.\n@@ -276,2 +276,2 @@\n-     * <p>The actual output length of the next <code>update<\/code> or\n-     * <code>doFinal<\/code> call may be smaller than the length returned by\n+     * <p>The actual output length of the next {@code update} or\n+     * {@code doFinal} call may be smaller than the length returned by\n@@ -292,1 +292,1 @@\n-     * @return the initialization vector in a new buffer, or null if the\n+     * @return the initialization vector in a new buffer, or {@code null} if the\n@@ -294,1 +294,1 @@\n-     * been set.\n+     * been set\n@@ -301,4 +301,5 @@\n-     * <p>The returned parameters may be the same that were used to initialize\n-     * this cipher, or may contain a combination of default and random\n-     * parameter values used by the underlying cipher implementation if this\n-     * cipher requires algorithm parameters but was not initialized with any.\n+     * <p>If this cipher has been previously initialized with parameters,\n+     * this method returns the same parameters. Otherwise, this method may\n+     * return a combination of user-supplied, default and randomly generated\n+     * parameter values if the underlying cipher implementation supports it\n+     * and can successfully generate them. Otherwise, {@code null} is returned.\n@@ -306,2 +307,1 @@\n-     * @return the parameters used with this cipher, or null if this cipher\n-     * does not use any parameters.\n+     * @return the parameters used with this cipher, or {@code null}\n@@ -317,1 +317,1 @@\n-     * the value of <code>opmode<\/code>.\n+     * the value of {@code opmode}.\n@@ -320,1 +320,1 @@\n-     * derived from the given <code>key<\/code>, the underlying cipher\n+     * derived from the given {@code key}, the underlying cipher\n@@ -324,1 +324,1 @@\n-     * <code>InvalidKeyException<\/code> if it is being\n+     * {@code InvalidKeyException} if it is being\n@@ -337,1 +337,1 @@\n-     * them from <code>random<\/code>.\n+     * them from {@code random}.\n@@ -346,2 +346,2 @@\n-     * <code>ENCRYPT_MODE<\/code>, <code>DECRYPT_MODE<\/code>,\n-     * <code>WRAP_MODE<\/code> or <code>UNWRAP_MODE<\/code>)\n+     * {@code ENCRYPT_MODE}, {@code DECRYPT_MODE},\n+     * {@code WRAP_MODE} or {@code UNWRAP_MODE})\n@@ -354,1 +354,1 @@\n-     * determined from the given key.\n+     * determined from the given key\n@@ -357,1 +357,1 @@\n-     * by the cipher.\n+     * by the cipher\n@@ -369,1 +369,1 @@\n-     * the value of <code>opmode<\/code>.\n+     * the value of {@code opmode}.\n@@ -372,2 +372,2 @@\n-     * <code>params<\/code> is null, the underlying cipher implementation is\n-     * supposed to generate the required parameters itself (using\n+     * {@code params} is {@code null}, the underlying cipher implementation\n+     * is supposed to generate the required parameters itself (using\n@@ -376,1 +376,1 @@\n-     * <code>InvalidAlgorithmParameterException<\/code> if it is being\n+     * {@code InvalidAlgorithmParameterException} if it is being\n@@ -389,1 +389,1 @@\n-     * them from <code>random<\/code>.\n+     * them from {@code random}.\n@@ -398,2 +398,2 @@\n-     * <code>ENCRYPT_MODE<\/code>, <code>DECRYPT_MODE<\/code>,\n-     * <code>WRAP_MODE<\/code> or <code>UNWRAP_MODE<\/code>)\n+     * {@code ENCRYPT_MODE}, {@code DECRYPT_MODE},\n+     * {@code WRAP_MODE}> or {@code UNWRAP_MODE})\n@@ -409,1 +409,1 @@\n-     * algorithm parameters and <code>params<\/code> is null.\n+     * algorithm parameters and {@code params} is {@code null}\n@@ -412,1 +412,1 @@\n-     * by the cipher.\n+     * by the cipher\n@@ -425,1 +425,1 @@\n-     * the value of <code>opmode<\/code>.\n+     * the value of {@code opmode}.\n@@ -428,1 +428,1 @@\n-     * <code>params<\/code> is null, the underlying cipher implementation is\n+     * {@code params} is {@code null}, the underlying cipher implementation is\n@@ -432,1 +432,1 @@\n-     * <code>InvalidAlgorithmParameterException<\/code> if it is being\n+     * {@code InvalidAlgorithmParameterException} if it is being\n@@ -445,1 +445,1 @@\n-     * them from <code>random<\/code>.\n+     * them from {@code random}.\n@@ -454,2 +454,2 @@\n-     * <code>ENCRYPT_MODE<\/code>, <code>DECRYPT_MODE<\/code>,\n-     * <code>WRAP_MODE<\/code> or <code>UNWRAP_MODE<\/code>)\n+     * {@code ENCRYPT_MODE}, {@code DECRYPT_MODE},\n+     * {@code WRAP_MODE} or {@code UNWRAP_MODE})\n@@ -465,1 +465,1 @@\n-     * algorithm parameters and <code>params<\/code> is null.\n+     * algorithm parameters and {@code params} is null\n@@ -468,1 +468,1 @@\n-     * by the cipher.\n+     * by the cipher\n@@ -480,2 +480,2 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, are processed,\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, are processed,\n@@ -485,2 +485,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n-     * starts\n+     * @param inputOffset the offset in {@code input} where the input starts\n@@ -489,1 +488,1 @@\n-     * @return the new buffer with the result, or null if the underlying\n+     * @return the new buffer with the result, or {@code null} if the underlying\n@@ -491,1 +490,1 @@\n-     * new block.\n+     * new block\n@@ -501,4 +500,4 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, are processed,\n-     * and the result is stored in the <code>output<\/code> buffer, starting at\n-     * <code>outputOffset<\/code> inclusive.\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, are processed,\n+     * and the result is stored in the {@code output} buffer, starting at\n+     * {@code outputOffset} inclusive.\n@@ -506,2 +505,2 @@\n-     * <p>If the <code>output<\/code> buffer is too small to hold the result,\n-     * a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If the {@code output} buffer is too small to hold the result,\n+     * a {@code ShortBufferException} is thrown.\n@@ -510,1 +509,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n+     * @param inputOffset the offset in {@code input} where the input\n@@ -514,1 +513,1 @@\n-     * @param outputOffset the offset in <code>output<\/code> where the result\n+     * @param outputOffset the offset in {@code output} where the result\n@@ -517,1 +516,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -532,2 +531,2 @@\n-     * <p>All <code>input.remaining()<\/code> bytes starting at\n-     * <code>input.position()<\/code> are processed. The result is stored\n+     * <p>All {@code input.remaining()} bytes starting at\n+     * {@code input.position()} are processed. The result is stored\n@@ -540,2 +539,2 @@\n-     * <p>If <code>output.remaining()<\/code> bytes are insufficient to\n-     * hold the result, a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If {@code output.remaining()} bytes are insufficient to\n+     * hold the result, a {@code ShortBufferException} is thrown.\n@@ -549,1 +548,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -554,1 +553,1 @@\n-     * @throws NullPointerException if either parameter is <CODE>null<\/CODE>\n+     * @throws NullPointerException if either parameter is {@code null}\n@@ -576,3 +575,3 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, and any input\n-     * bytes that may have been buffered during a previous <code>update<\/code>\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, and any input\n+     * bytes that may have been buffered during a previous {@code update}\n@@ -580,1 +579,1 @@\n-     * If an AEAD mode such as GCM\/CCM is being used, the authentication\n+     * If an AEAD mode (such as GCM or CCM) is being used, the authentication\n@@ -587,1 +586,1 @@\n-     * <code>engineInit<\/code>.\n+     * {@code engineInit}.\n@@ -590,1 +589,1 @@\n-     * <code>engineInit<\/code>) more data.\n+     * {@code engineInit}) more data.\n@@ -596,2 +595,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n-     * starts\n+     * @param inputOffset the offset in {@code input} where the input starts\n@@ -606,1 +604,1 @@\n-     * process the input data provided.\n+     * process the input data provided\n@@ -611,1 +609,1 @@\n-     * AEAD mode (such as GCM\/CCM), and the received authentication tag\n+     * AEAD mode (such as GCM or CCM), and the received authentication tag\n@@ -624,3 +622,3 @@\n-     * <p>The first <code>inputLen<\/code> bytes in the <code>input<\/code>\n-     * buffer, starting at <code>inputOffset<\/code> inclusive, and any input\n-     * bytes that may have been buffered during a previous <code>update<\/code>\n+     * <p>The first {@code inputLen} bytes in the {@code input}\n+     * buffer, starting at {@code inputOffset} inclusive, and any input\n+     * bytes that may have been buffered during a previous {@code update}\n@@ -628,1 +626,1 @@\n-     * If an AEAD mode such as GCM\/CCM is being used, the authentication\n+     * If an AEAD mode such as GCM or CCM is being used, the authentication\n@@ -631,2 +629,2 @@\n-     * The result is stored in the <code>output<\/code> buffer, starting at\n-     * <code>outputOffset<\/code> inclusive.\n+     * The result is stored in the {@code output} buffer, starting at\n+     * {@code outputOffset} inclusive.\n@@ -634,2 +632,2 @@\n-     * <p>If the <code>output<\/code> buffer is too small to hold the result,\n-     * a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If the {@code output} buffer is too small to hold the result,\n+     * a {@code ShortBufferException} is thrown.\n@@ -639,1 +637,1 @@\n-     * <code>engineInit<\/code>.\n+     * {@code engineInit}.\n@@ -642,1 +640,1 @@\n-     * <code>engineInit<\/code>) more data.\n+     * {@code engineInit}) more data.\n@@ -648,1 +646,1 @@\n-     * @param inputOffset the offset in <code>input<\/code> where the input\n+     * @param inputOffset the offset in {@code input} where the input\n@@ -652,1 +650,1 @@\n-     * @param outputOffset the offset in <code>output<\/code> where the result\n+     * @param outputOffset the offset in {@code output} where the result\n@@ -655,1 +653,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -661,1 +659,1 @@\n-     * process the input data provided.\n+     * process the input data provided\n@@ -668,1 +666,1 @@\n-     * AEAD mode (such as GCM\/CCM), and the received authentication tag\n+     * AEAD mode (such as GCM or CCM), and the received authentication tag\n@@ -683,3 +681,3 @@\n-     * <p>All <code>input.remaining()<\/code> bytes starting at\n-     * <code>input.position()<\/code> are processed.\n-     * If an AEAD mode such as GCM\/CCM is being used, the authentication\n+     * <p>All {@code input.remaining()} bytes starting at\n+     * {@code input.position()} are processed.\n+     * If an AEAD mode such as GCM or CCM is being used, the authentication\n@@ -694,2 +692,2 @@\n-     * <p>If <code>output.remaining()<\/code> bytes are insufficient to\n-     * hold the result, a <code>ShortBufferException<\/code> is thrown.\n+     * <p>If {@code output.remaining()} bytes are insufficient to\n+     * hold the result, a {@code ShortBufferException} is thrown.\n@@ -699,1 +697,1 @@\n-     * <code>engineInit<\/code>.\n+     * {@code engineInit}.\n@@ -702,1 +700,1 @@\n-     * <code>engineInit<\/code>) more data.\n+     * {@code engineInit} more data.\n@@ -713,1 +711,1 @@\n-     * @return the number of bytes stored in <code>output<\/code>\n+     * @return the number of bytes stored in {@code output}\n@@ -719,1 +717,1 @@\n-     * process the input data provided.\n+     * process the input data provided\n@@ -726,1 +724,1 @@\n-     * AEAD mode (such as GCM\/CCM), and the received authentication tag\n+     * AEAD mode (such as GCM or CCM), and the received authentication tag\n@@ -729,1 +727,1 @@\n-     * @throws NullPointerException if either parameter is <CODE>null<\/CODE>\n+     * @throws NullPointerException if either parameter is {@code null}\n@@ -859,3 +857,3 @@\n-     * Such an override is expected to throw an IllegalBlockSizeException or\n-     * InvalidKeyException (under the specified circumstances),\n-     * if the given key cannot be wrapped.\n+     * Such an override is expected to throw an\n+     * {@code IllegalBlockSizeException} or {@code InvalidKeyException}\n+     * (under the specified circumstances), if the given key cannot be wrapped.\n@@ -863,1 +861,1 @@\n-     * UnsupportedOperationException.\n+     * {@code UnsupportedOperationException}.\n@@ -865,1 +863,1 @@\n-     * @param key the key to be wrapped.\n+     * @param key the key to be wrapped\n@@ -867,1 +865,1 @@\n-     * @return the wrapped key.\n+     * @return the wrapped key\n@@ -871,1 +869,1 @@\n-     * key to be wrapped is not a multiple of the block size.\n+     * key to be wrapped is not a multiple of the block size\n@@ -875,1 +873,1 @@\n-     * being passed to a software-only cipher).\n+     * being passed to a software-only cipher)\n@@ -877,1 +875,1 @@\n-     * @throws UnsupportedOperationException if this method is not supported.\n+     * @throws UnsupportedOperationException if this method is not supported\n@@ -891,1 +889,1 @@\n-     * Such an override is expected to throw an InvalidKeyException if\n+     * Such an override is expected to throw an {@code InvalidKeyException} if\n@@ -894,1 +892,1 @@\n-     * UnsupportedOperationException.\n+     * {@code UnsupportedOperationException}.\n@@ -896,1 +894,1 @@\n-     * @param wrappedKey the key to be unwrapped.\n+     * @param wrappedKey the key to be unwrapped\n@@ -899,1 +897,1 @@\n-     * key.\n+     * key\n@@ -902,2 +900,1 @@\n-     * <code>SECRET_KEY<\/code>, <code>PRIVATE_KEY<\/code>, or\n-     * <code>PUBLIC_KEY<\/code>.\n+     * {@code SECRET_KEY}, {@code PRIVATE_KEY}, or {@code PUBLIC_KEY}.\n@@ -905,1 +902,1 @@\n-     * @return the unwrapped key.\n+     * @return the unwrapped key\n@@ -908,2 +905,2 @@\n-     * can create keys of type <code>wrappedKeyType<\/code> for the\n-     * <code>wrappedKeyAlgorithm<\/code>.\n+     * can create keys of type {@code wrappedKeyType} for the\n+     * {@code wrappedKeyAlgorithm}\n@@ -911,3 +908,3 @@\n-     * @exception InvalidKeyException if <code>wrappedKey<\/code> does not\n-     * represent a wrapped key of type <code>wrappedKeyType<\/code> for\n-     * the <code>wrappedKeyAlgorithm<\/code>.\n+     * @exception InvalidKeyException if {@code wrappedKey} does not\n+     * represent a wrapped key of type {@code wrappedKeyType} for\n+     * the {@code wrappedKeyAlgorithm}\n@@ -915,1 +912,1 @@\n-     * @throws UnsupportedOperationException if this method is not supported.\n+     * @throws UnsupportedOperationException if this method is not supported\n@@ -928,1 +925,1 @@\n-     * abstract class. It throws an <code>UnsupportedOperationException<\/code>\n+     * abstract class. It throws an {@code UnsupportedOperationException}\n@@ -931,1 +928,1 @@\n-     * @param key the key object.\n+     * @param key the key object\n@@ -933,1 +930,1 @@\n-     * @return the key size of the given key object.\n+     * @return the key size of the given key object\n@@ -935,1 +932,1 @@\n-     * @exception InvalidKeyException if <code>key<\/code> is invalid.\n+     * @exception InvalidKeyException if {@code key} is invalid\n@@ -948,1 +945,1 @@\n-     * modes such as AEAD (GCM\/CCM).  If this cipher is operating in\n+     * modes such as AEAD (GCM or CCM).  If this cipher is operating in\n@@ -950,2 +947,2 @@\n-     * operations on the ciphertext (via the {@code update} and {@code\n-     * doFinal} methods).\n+     * operations on the ciphertext (via the {@code update} and\n+     * {@code doFinal} methods).\n@@ -978,1 +975,1 @@\n-     * modes such as AEAD (GCM\/CCM).  If this cipher is operating in\n+     * modes such as AEAD (GCM or CCM).  If this cipher is operating in\n@@ -980,2 +977,2 @@\n-     * operations on the ciphertext (via the {@code update} and {@code\n-     * doFinal} methods).\n+     * operations on the ciphertext (via the {@code update} and\n+     * {@code doFinal} methods).\n","filename":"src\/java.base\/share\/classes\/javax\/crypto\/CipherSpi.java","additions":160,"deletions":163,"binary":false,"changes":323,"status":"modified"}]}