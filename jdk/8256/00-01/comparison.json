{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"osContainer_linux.hpp\"\n@@ -130,2 +131,3 @@\n-  if (FLAG_IS_CMDLINE(InitialHeapSize) && InitialHeapSize >= os::physical_memory()) {\n-    vm_exit_during_initialization(\"Initial heap size set to a larger value than the os or container memory\");\n+  if (OSContainer::is_containerized() && (OSContainer::memory_and_swap_limit_in_bytes() > 0) &&\n+      FLAG_IS_CMDLINE(InitialHeapSize) && (InitialHeapSize >= (julong) OSContainer::memory_and_swap_limit_in_bytes())) {\n+    vm_exit_during_initialization(\"Initial heap size set to a larger value than the container memory & swap limit\");\n","filename":"src\/hotspot\/share\/gc\/shared\/gcArguments.cpp","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n@@ -32,1 +32,0 @@\n-#include \"runtime\/os.hpp\"\n","filename":"src\/hotspot\/share\/gc\/shared\/genArguments.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}