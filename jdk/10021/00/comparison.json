{"files":[{"patch":"@@ -67,0 +67,2 @@\n+<p>When tests fail or timeout, jtreg runs its failure handler to capture necessary data from the system where the test was run. This data can then be used to analyze the test failures. Collecting this data involves running various commands (which are listed in files residing in <code>test\/failure_handler\/src\/share\/conf<\/code>) and some of these commands use <code>sudo<\/code>.\n+If the system's <code>sudoers<\/code> file isn't configured to allow running these commands without a password, then it can result in password being prompted during the failure handler execution. Typically, when running locally, collecting this additional data isn't always necessary. To be able to disable running the failure handler, use <code>--enable-jtreg-failure-handler=no<\/code> when running <code>configure<\/code>.<\/p>\n","filename":"doc\/testing.html","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,0 +46,11 @@\n+When tests fail or timeout, jtreg runs its failure handler to capture necessary\n+data from the system where the test was run. This data can then be used to\n+analyze the test failures. Collecting this data involves running various commands\n+(which are listed in files residing in `test\/failure_handler\/src\/share\/conf`)\n+and some of these commands use `sudo`. If the system's `sudoers` file isn't\n+configured to allow running these commands, then it can result in password being\n+prompted during the failure handler execution. Typically, when running locally,\n+collecting this additional data isn't always necessary. To be able to disable\n+running the failure handler, use `--enable-jtreg-failure-handler=no` when running\n+`configure`.\n+\n","filename":"doc\/testing.md","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}