{"files":[{"patch":"@@ -67,2 +67,3 @@\n-<p>When tests fail or timeout, jtreg runs its failure handler to capture necessary data from the system where the test was run. This data can then be used to analyze the test failures. Collecting this data involves running various commands (which are listed in files residing in <code>test\/failure_handler\/src\/share\/conf<\/code>) and some of these commands use <code>sudo<\/code>.\n-If the system's <code>sudoers<\/code> file isn't configured to allow running these commands without a password, then it can result in password being prompted during the failure handler execution. Typically, when running locally, collecting this additional data isn't always necessary. To be able to disable running the failure handler, use <code>--enable-jtreg-failure-handler=no<\/code> when running <code>configure<\/code>.<\/p>\n+<p>When tests fail or timeout, jtreg runs its failure handler to capture necessary data from the system where the test was run. This data can then be used to analyze the test failures. Collecting this data involves running various commands (which are listed in files residing in <code>test\/failure_handler\/src\/share\/conf<\/code>) and some of these commands use <code>sudo<\/code>. If the system's <code>sudoers<\/code> file isn't configured to allow running these commands, then it can result in password being prompted during the failure handler execution. Typically, when running locally, collecting this additional data isn't always necessary. To disable running the failure handler, use <code>--enable-jtreg-failure-handler=no<\/code> when running <code>configure<\/code>. If, however, you want to let the failure handler to run and don't want to be prompted for sudo password, then you can configure your <code>sudoers<\/code> file appropriately. Please read the necessary documentation of your operating system to see how to do that; here we only show one possible way of doing that - edit the <code>\/etc\/sudoers.d\/sudoers<\/code> file to include the following line:<\/p>\n+<pre><code>johndoe ALL=(ALL) NOPASSWD: \/sbin\/dmesg<\/code><\/pre>\n+<p>This line configures <code>sudo<\/code> to <em>not<\/em> prompt for password for the <code>\/sbin\/dmesg<\/code> command (this is one of the commands that is listed in the files at <code>test\/failure_handler\/src\/share\/conf<\/code>), for the user <code>johndoe<\/code>. Here <code>johndoe<\/code> is the user account under which the jtreg tests are run. Replace the username with a relevant user account of your system.<\/p>\n","filename":"doc\/testing.html","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -53,3 +53,15 @@\n-collecting this additional data isn't always necessary. To be able to disable\n-running the failure handler, use `--enable-jtreg-failure-handler=no` when running\n-`configure`.\n+collecting this additional data isn't always necessary. To disable running the\n+failure handler, use `--enable-jtreg-failure-handler=no` when running `configure`.\n+If, however, you want to let the failure handler to run and don't want to be prompted\n+for sudo password, then you can configure your `sudoers` file appropriately. Please\n+read the necessary documentation of your operating system to see how to do that; here\n+we only show one possible way of doing that - edit the `\/etc\/sudoers.d\/sudoers` file to\n+include the following line:\n+\n+```\n+johndoe ALL=(ALL) NOPASSWD: \/sbin\/dmesg\n+```\n+This line configures `sudo` to _not_ prompt for password for the `\/sbin\/dmesg` command (this is\n+one of the commands that is listed in the files at `test\/failure_handler\/src\/share\/conf`), for the\n+user `johndoe`. Here `johndoe` is the user account under which the jtreg tests are run. Replace\n+the username with a relevant user account of your system.\n","filename":"doc\/testing.md","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}