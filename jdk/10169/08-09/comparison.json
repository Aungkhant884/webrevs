{"files":[{"patch":"@@ -566,1 +566,2 @@\n-                final String errMsg = \"Unexpected 101 response, when not upgrading\";\n+                final ProtocolException protoEx = new ProtocolException(\"Unexpected 101 \" +\n+                        \"response, when not upgrading\");\n@@ -569,1 +570,1 @@\n-                    exchImpl.onProtocolError(errMsg);\n+                    exchImpl.onProtocolError(protoEx);\n@@ -573,1 +574,1 @@\n-                return MinimalFuture.failedFuture(new ProtocolException(errMsg));\n+                return MinimalFuture.failedFuture(protoEx);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Exchange.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -225,1 +225,1 @@\n-     * @param errorMessage A error message which states the nature of protocol violation\n+     * @param cause The cause of the protocol violation\n@@ -227,1 +227,1 @@\n-    abstract void onProtocolError(String errorMessage);\n+    abstract void onProtocolError(IOException cause);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/ExchangeImpl.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -506,1 +506,1 @@\n-    void onProtocolError(final String errorMessage) {\n+    void onProtocolError(final IOException cause) {\n@@ -508,1 +508,1 @@\n-            debug.log(\"closing connection due to protocol error: %s\", errorMessage);\n+            debug.log(\"cancelling exchange due to protocol error: %s\", cause);\n@@ -510,3 +510,2 @@\n-        Log.logError(\"closing connection due to protocol error: {0}\\n\", errorMessage);\n-        \/\/ close the connection\n-        connection.close();\n+        Log.logError(\"cancelling exchange due to protocol error: {0}\\n\", cause);\n+        cancelImpl(cause);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Exchange.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -349,1 +349,1 @@\n-            initialStream.sendCancelStreamFrame();\n+            initialStream.sendResetStreamFrame(ResetFrame.CANCEL);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http2Connection.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -452,1 +452,1 @@\n-            else sendCancelStreamFrame();\n+            else sendResetStreamFrame(ResetFrame.CANCEL);\n@@ -1242,1 +1242,1 @@\n-    void onProtocolError(final String errorMessage) {\n+    void onProtocolError(final IOException cause) {\n@@ -1244,1 +1244,1 @@\n-            debug.log(\"closing stream %d due to protocol error: %s\", streamid, errorMessage);\n+            debug.log(\"cancelling exchange on stream %d due to protocol error: %s\", streamid, cause);\n@@ -1246,1 +1246,1 @@\n-        Log.logError(\"closing stream {0} due to protocol error: {1}\\n\", streamid, errorMessage);\n+        Log.logError(\"cancelling exchange on stream {0} due to protocol error: {1}\\n\", streamid, cause);\n@@ -1248,1 +1248,1 @@\n-        connection.resetStream(streamid, ResetFrame.PROTOCOL_ERROR);\n+        cancelImpl(cause, ResetFrame.PROTOCOL_ERROR);\n@@ -1262,0 +1262,4 @@\n+        cancelImpl(e, ResetFrame.CANCEL);\n+    }\n+\n+    private void cancelImpl(final Throwable e, final int resetFrameErrCode) {\n@@ -1293,2 +1297,2 @@\n-                e = Utils.getCompletionCause(e);\n-                if (e instanceof EOFException) {\n+                final Throwable cause = Utils.getCompletionCause(e);\n+                if (cause instanceof EOFException) {\n@@ -1300,1 +1304,1 @@\n-                    sendCancelStreamFrame();\n+                    sendResetStreamFrame(resetFrameErrCode);\n@@ -1308,1 +1312,1 @@\n-    void sendCancelStreamFrame() {\n+    void sendResetStreamFrame(final int resetFrameErrCode) {\n@@ -1310,2 +1314,2 @@\n-        if (streamid > 0 && markStream(ResetFrame.CANCEL) == 0) {\n-            connection.resetStream(streamid, ResetFrame.CANCEL);\n+        if (streamid > 0 && markStream(resetFrameErrCode) == 0) {\n+            connection.resetStream(streamid, resetFrameErrCode);\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":15,"deletions":11,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-public class Response1xxTest {\n+public class Response1xxTest implements HttpServerAdapters {\n@@ -71,1 +71,1 @@\n-    private HttpServerAdapters.HttpTestServer http2Server; \/\/ h2c\n+    private HttpTestServer http2Server; \/\/ h2c\n@@ -76,1 +76,1 @@\n-    private HttpServerAdapters.HttpTestServer https2Server;  \/\/ h2\n+    private HttpTestServer https2Server;  \/\/ h2\n@@ -87,1 +87,1 @@\n-        http2Server = HttpServerAdapters.HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n+        http2Server = HttpTestServer.of(new Http2TestServer(\"localhost\", false, 0));\n@@ -105,1 +105,1 @@\n-        https2Server = HttpServerAdapters.HttpTestServer.of(new Http2TestServer(\"localhost\",\n+        https2Server = HttpTestServer.of(new Http2TestServer(\"localhost\",\n@@ -257,1 +257,1 @@\n-    private static class Http2Handler implements HttpServerAdapters.HttpTestHandler {\n+    private static class Http2Handler implements HttpTestHandler {\n@@ -260,1 +260,1 @@\n-        public void handle(final HttpServerAdapters.HttpTestExchange exchange) throws IOException {\n+        public void handle(final HttpTestExchange exchange) throws IOException {\n@@ -301,1 +301,1 @@\n-    private static class OnlyInformationalHandler implements HttpServerAdapters.HttpTestHandler {\n+    private static class OnlyInformationalHandler implements HttpTestHandler {\n@@ -304,1 +304,1 @@\n-        public void handle(final HttpServerAdapters.HttpTestExchange exchange) throws IOException {\n+        public void handle(final HttpTestExchange exchange) throws IOException {\n@@ -320,1 +320,1 @@\n-    private static class OKHandler implements HttpServerAdapters.HttpTestHandler {\n+    private static class OKHandler implements HttpTestHandler {\n@@ -323,1 +323,1 @@\n-        public void handle(final HttpServerAdapters.HttpTestExchange exchange) throws IOException {\n+        public void handle(final HttpTestExchange exchange) throws IOException {\n","filename":"test\/jdk\/java\/net\/httpclient\/Response1xxTest.java","additions":11,"deletions":11,"binary":false,"changes":22,"status":"modified"}]}