{"files":[{"patch":"@@ -501,7 +501,12 @@\n-        \/\/ we ignore any response code which is 1xx, but not 100 or 101. For 100 and 101,\n-        \/\/ we handle it specifically as defined in the RFC-2616 (HTTP 1.1 spec). Any other\n-        \/\/ 1xx response code isn't part of the HTTP 1.1 spec and the spec states that\n-        \/\/ these 1xx response codes are informational and ignored and the clients are\n-        \/\/ expected to wait for the actual response (headers) to be sent back at a later\n-        \/\/ time.\n-        if (statusCode >= 102 && statusCode <= 199) {\n+        \/\/ we ignore any response code which is 1xx.\n+        \/\/ For 100 (with the request configured to expect-continue) and 101, we handle it\n+        \/\/ specifically as defined in the RFC-2616 (HTTP 1.1 spec), outside of this method.\n+        \/\/ As noted in RFC-7231, section 6.2.1, if response code is 100 and if the request wasn't\n+        \/\/ configured with expectContinue, then we ignore the 100 response and wait for the final\n+        \/\/ response (just like any other 1xx response)\n+        \/\/ Any other response code between 102 and 199 (both inclusive) aren't specified in the\n+        \/\/ HTTP 1.1 spec. The spec states that these 1xx response codes are informational and\n+        \/\/ interim and the client will ignore them and will continue to wait to receive the\n+        \/\/ final response (headers)\n+        if ((statusCode >= 102 && statusCode <= 199)\n+                || (statusCode == 100 && !request.expectContinue)) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Exchange.java","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -80,0 +80,1 @@\n+        http2Server.addHandler(new Http2Handler(), \"\/http2\/100\");\n@@ -111,0 +112,1 @@\n+        private static final String REQ_LINE_HELLO = \"GET \/test\/hello HTTP\/1.1\\r\\n\";\n@@ -145,2 +147,1 @@\n-                        \/\/ handle \/test\/foo request (we will send intermediate\/informational 102\n-                        \/\/ response in this case)\n+                        \/\/ we will send intermediate\/informational 102 response\n@@ -149,2 +150,1 @@\n-                        \/\/ handle \/test\/bar request (we will send intermediate\/informational 103\n-                        \/\/ response in this case)\n+                        \/\/ we will send intermediate\/informational 103 response\n@@ -152,0 +152,3 @@\n+                    } else if (requestLine.startsWith(REQ_LINE_HELLO)) {\n+                        \/\/ we will send intermediate\/informational 100 response\n+                        informationalResponseCode = 100;\n@@ -211,1 +214,14 @@\n-            final int informationResponseCode = requestURI.getPath().endsWith(\"\/102\") ? 102 : 103;\n+            final int informationResponseCode;\n+            if (requestURI.getPath().endsWith(\"\/102\")) {\n+                informationResponseCode = 102;\n+            } else if (requestURI.getPath().endsWith(\"\/103\")) {\n+                informationResponseCode = 103;\n+            } else if (requestURI.getPath().endsWith(\"\/100\")) {\n+                informationResponseCode = 100;\n+            } else {\n+                \/\/ unexpected request\n+                System.err.println(\"Unexpected request \" + requestURI + \" from client \"\n+                        + exchange.getRemoteAddress());\n+                exchange.sendResponseHeaders(400, -1);\n+                return;\n+            }\n@@ -266,1 +282,2 @@\n-                new URI(http1RequestURIBase + \"\/test\/bar\")};\n+                new URI(http1RequestURIBase + \"\/test\/bar\"),\n+                new URI(http1RequestURIBase + \"\/test\/hello\")};\n@@ -291,1 +308,2 @@\n-                new URI(http2RequestURIBase + \"\/103\")};\n+                new URI(http2RequestURIBase + \"\/103\"),\n+                new URI(http2RequestURIBase + \"\/100\")};\n","filename":"test\/jdk\/java\/net\/httpclient\/Response1xxTest.java","additions":25,"deletions":7,"binary":false,"changes":32,"status":"modified"}]}