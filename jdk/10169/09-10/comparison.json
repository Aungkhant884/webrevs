{"files":[{"patch":"@@ -508,1 +508,1 @@\n-            debug.log(\"cancelling exchange due to protocol error: %s\", cause);\n+            debug.log(\"cancelling exchange due to protocol error: %s\", cause.getMessage());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Exchange.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1244,1 +1244,1 @@\n-            debug.log(\"cancelling exchange on stream %d due to protocol error: %s\", streamid, cause);\n+            debug.log(\"cancelling exchange on stream %d due to protocol error: %s\", streamid, cause.getMessage());\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Stream.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -79,0 +79,2 @@\n+    private final ReferenceTracker TRACKER = ReferenceTracker.INSTANCE;\n+\n@@ -117,16 +119,20 @@\n-    public void teardown() throws Exception {\n-        if (server != null) {\n-            server.stop = true;\n-            System.out.println(\"(HTTP 1.1) Server stop requested\");\n-        }\n-        if (serverSocket != null) {\n-            serverSocket.close();\n-            System.out.println(\"Closed (HTTP 1.1) server socket\");\n-        }\n-        if (http2Server != null) {\n-            http2Server.stop();\n-            System.out.println(\"Stopped HTTP2 server\");\n-        }\n-        if (https2Server != null) {\n-            https2Server.stop();\n-            System.out.println(\"Stopped (https) HTTP2 server\");\n+    public void teardown() throws Throwable {\n+        try {\n+            assertNoOutstandingClientOps();\n+        } finally {\n+            if (server != null) {\n+                server.stop = true;\n+                System.out.println(\"(HTTP 1.1) Server stop requested\");\n+            }\n+            if (serverSocket != null) {\n+                serverSocket.close();\n+                System.out.println(\"Closed (HTTP 1.1) server socket\");\n+            }\n+            if (http2Server != null) {\n+                http2Server.stop();\n+                System.out.println(\"Stopped HTTP2 server\");\n+            }\n+            if (https2Server != null) {\n+                https2Server.stop();\n+                System.out.println(\"Stopped (https) HTTP2 server\");\n+            }\n@@ -338,0 +344,1 @@\n+        TRACKER.track(client);\n@@ -364,0 +371,1 @@\n+        TRACKER.track(client);\n@@ -391,0 +399,1 @@\n+        TRACKER.track(client);\n@@ -411,0 +420,1 @@\n+        TRACKER.track(client);\n@@ -430,0 +440,1 @@\n+        TRACKER.track(client);\n@@ -447,0 +458,1 @@\n+        TRACKER.track(client);\n@@ -473,0 +485,10 @@\n+\n+    \/\/ verifies that the HttpClient being tracked has no outstanding operations\n+    private void assertNoOutstandingClientOps() throws AssertionError {\n+        System.gc();\n+        final AssertionError refCheckFailure = TRACKER.check(1000);\n+        if (refCheckFailure != null) {\n+            throw refCheckFailure;\n+        }\n+        \/\/ successful test completion\n+    }\n","filename":"test\/jdk\/java\/net\/httpclient\/Response1xxTest.java","additions":38,"deletions":16,"binary":false,"changes":54,"status":"modified"}]}