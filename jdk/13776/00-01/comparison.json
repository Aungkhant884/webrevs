{"files":[{"patch":"@@ -94,0 +94,3 @@\n+  \/\/ Minimal word size a block must have to be manageable by this structure.\n+  const static size_t MinWordSize = 1;\n+\n@@ -104,1 +107,1 @@\n-    int index = (int)(word_size - 1);\n+    int index = (int)(word_size - MinWordSize);\n@@ -111,1 +114,1 @@\n-    return index + 1;\n+    return index + MinWordSize;\n@@ -133,1 +136,1 @@\n-    assert(word_size >= 1 &&\n+    assert(word_size >= MinWordSize &&\n@@ -146,1 +149,1 @@\n-    assert(word_size >= 1 &&\n+    assert(word_size >= MinWordSize &&\n","filename":"src\/hotspot\/share\/memory\/metaspace\/binList.hpp","additions":7,"deletions":4,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n-    if (waste > 0) {\n+    if (waste >= MinWordSize) {\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeBlocks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -82,0 +82,3 @@\n+  \/\/ Smallest blocks we can keep in this structure.\n+  const static size_t MinWordSize = BinList32::MinWordSize;\n+\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeBlocks.hpp","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -63,1 +63,1 @@\n-  if (remaining_words > 0) {\n+  if (remaining_words >= FreeBlocks::MinWordSize) {\n","filename":"src\/hotspot\/share\/memory\/metaspace\/metaspaceArena.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}