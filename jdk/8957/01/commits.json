[{"commit":{"message":"ayang review; remove more dead\/obsolete code from earlier changes"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/markBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/markBitMap.inline.hpp"}],"sha":"331fb52c1e9dca101c384da034fd4151b35b4bbd"},{"commit":{"message":"Final cleanup"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp"}],"sha":"8fec420faad96c05eff202116b2372a9402d1569"},{"commit":{"message":"Fix iteration of unparsable heap areas during concurrent refinement"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp"}],"sha":"8acb6f324a7f96170839646609b550cf6f63ca64"},{"commit":{"message":"More cleanup"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp"}],"sha":"6fef7706844f744db3985a039e11664313b592a0"},{"commit":{"message":"Investigate using BOT for concurrent case"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/markBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/markBitMap.inline.hpp"},{"filename":"test\/hotspot\/gtest\/utilities\/test_bitMap_search.cpp"}],"sha":"589ea514ed57d5fafb9ebfe3b6506db601e750bf"},{"commit":{"message":"Fix test checking for particular message after last cleanup"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp"}],"sha":"665350f426628e81c98f70ee8e078f9e160f17c4"},{"commit":{"message":"fix compilation"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp"}],"sha":"ef0acc7f45429f0910b3887b95e971684c097e40"},{"commit":{"message":"Some cleanup"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectorState.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp"}],"sha":"ee0f8cfbae860e5ab00bc145e6fe9e1080165ef0"},{"commit":{"message":"Scrub dead objects in remark\n\nRemove prev_bitmap\n\nfix compilation\n\nDo scrubbing concurrently\n\nBetter naming and comments\n\nImprove naming and comments with regards to prev-next\n\nFix compilation\n\nAdd obj_is_scrubbed helper\n\nMove rebuild of remsets into scrubbing phase\n\nRemove old rebuild and some additional cleanups\n\nUnify humongous and large objects rebuilding\n\nCleanups\n\nCleanups and some restructuring\n\nSearch for live block for concurrent refinement\n\nFix to not scan past MR\n\nFix limit for humongous rebuild\n\nAdd marked_words verification to scrub_and_rebuild\n\nmerged smb with filler objects\n\nFix merge error\n\nRemove ptams\n\nFix marked bytes assignment\n\nRefactoring\n\ntypo\n\nImprove scanning the cards by distinguishing between a path for objects >= parsable_bottom and others\n\nUpdate _parsable_bottom concurrently to minimize the time taking the slow-path during refinement\n\nHumongous regions have their _parsable_bottom always set to _bottom because they never need scrubbing\n\nFix iteration of humongous objects causing missing remembered set entries\n\nSome cleanup, added helper methods\n\nFix cleanup\n\nMove out rebuilding and scrubbing algorithm into separate files\n\nMake new class allstatic\n\nFirst attempt at backwards scan method\n\nFix backward scan\n\nRemove obsolete code\n\nFix test\n\nFix is_obj_dead_size\n\noptimizations\n\nUndo changes in tests\n\nBackstep table, first attempt\n\nFix assert, add log messages\n\nCleanup, clearing back skip table\n\nPrev bitmap scan fix\n\ncleanup\n\nbad-cleanup\n\nPrepare for merge with extracted changes, cleanup\n\nsome fixes\n\nHunting gc\/g1\/humongousObjects\/TestNoAllocationsInHRegions.java crash\n\nget_prev_bit_impl documentation"},"files":[{"filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1BlockOffsetTable.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CodeBlobClosure.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1CollectorState.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkBitMap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkThread.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMarkThread.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRebuildAndScrub.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRebuildAndScrub.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1EvacFailure.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCCompactTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1FullGCPrepareTask.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1HeapVerifier.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1OopClosures.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1ParScanThreadState.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1Policy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1RegionMarkStatsCache.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1RemSet.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1RemSetTrackingPolicy.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1SATBMarkQueueSet.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1YoungCollector.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegionManager.cpp"},{"filename":"src\/hotspot\/share\/gc\/g1\/heapRegionManager.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/markBitMap.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/markBitMap.inline.hpp"},{"filename":"src\/hotspot\/share\/gc\/shared\/verifyOption.hpp"},{"filename":"test\/hotspot\/gtest\/gc\/g1\/test_heapRegion.cpp"},{"filename":"test\/hotspot\/jtreg\/gc\/g1\/TestLargePageUseForAuxMemory.java"}],"sha":"c3cef615fb234831693e30f6cd26fa092c9b1b83"},{"commit":{"message":"Minor simplification"},"files":[],"sha":"721d2eb420defede4e168db6db8ffd798f89a583"},{"commit":{"message":"Fix documentation"},"files":[],"sha":"03586c590ec633ef6de9032cbc43f54e77e4dd0f"},{"commit":{"message":"8287215: Add method to scan bitmap backwards\n\ninitial version"},"files":[{"filename":"test\/hotspot\/gtest\/utilities\/test_bitMap_search.cpp"}],"sha":"84780076cb5c9470d5ecc72768f10d770e0f9867"}]