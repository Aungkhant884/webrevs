{"files":[{"patch":"@@ -633,0 +633,2 @@\n+      assert(!_suspendible || r->parsable_bottom_acquire() == r->bottom(),\n+             \"While concurrently clearing the bitmap, parsable bottom must already be reset.\");\n@@ -1066,1 +1068,0 @@\n-                                           VerifyOption vo,\n@@ -1081,1 +1082,1 @@\n-    verifier->verify(type, vo, buffer);\n+    verifier->verify(type, VerifyOption::G1UseConcMarking, buffer);\n@@ -1236,1 +1237,1 @@\n-  verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption::G1UseConcMarking, VerifyLocation::RemarkBefore);\n+  verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyLocation::RemarkBefore);\n@@ -1297,1 +1298,1 @@\n-    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption::G1UseConcMarking, VerifyLocation::RemarkAfter);\n+    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyLocation::RemarkAfter);\n@@ -1306,1 +1307,1 @@\n-    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyOption::G1UseConcMarking, VerifyLocation::RemarkOverflow);\n+    verify_during_pause(G1HeapVerifier::G1VerifyRemark, VerifyLocation::RemarkOverflow);\n@@ -1452,1 +1453,1 @@\n-  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyOption::G1UseConcMarking, VerifyLocation::CleanupBefore);\n+  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyLocation::CleanupBefore);\n@@ -1464,1 +1465,1 @@\n-  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyOption::G1UseConcMarking, VerifyLocation::CleanupAfter);\n+  verify_during_pause(G1HeapVerifier::G1VerifyCleanup, VerifyLocation::CleanupAfter);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -368,1 +368,0 @@\n-                           VerifyOption vo,\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -273,1 +273,1 @@\n-  template <class Closure, bool in_gc_pause>\n+  template <class Closure>\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -359,1 +359,1 @@\n-template <class Closure, bool in_gc_pause>\n+template <class Closure>\n@@ -436,1 +436,1 @@\n-    cur = oops_on_memregion_iterate_in_unparsable<Closure, in_gc_pause>(mr, pb, cl);\n+    cur = oops_on_memregion_iterate_in_unparsable<Closure>(mr, pb, cl);\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,3 +39,0 @@\n-  \/\/ Do not use mark bitmap for liveness at all as it may be invalid; assumes\n-  \/\/ that all objects are parsable.\n-  G1UseNoBitmap = G1UseConcMarking + 2\n","filename":"src\/hotspot\/share\/gc\/shared\/verifyOption.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"}]}