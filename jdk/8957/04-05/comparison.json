{"files":[{"patch":"@@ -1984,1 +1984,1 @@\n-  G1ConcurrentRebuildAndScrub::rebuild_and_scrub(this, _concurrent_workers);\n+  G1ConcurrentRebuildAndScrub::rebuild_and_scrub(this, needs_remembered_set_rebuild(), _concurrent_workers);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -66,0 +66,2 @@\n+  const bool _should_rebuild_remset;\n+\n@@ -72,0 +74,2 @@\n+    const bool _should_rebuild_remset;\n+\n@@ -74,0 +78,1 @@\n+\n@@ -152,1 +157,4 @@\n-      if (obj_size > ProcessingYieldLimitInWords) {\n+      if (!_should_rebuild_remset) {\n+        \/\/ Not rebuilding, just step to next object.\n+        add_processed_words(obj_size);\n+      } else if (obj_size > ProcessingYieldLimitInWords) {\n@@ -252,0 +260,5 @@\n+      if (!_should_rebuild_remset) {\n+        \/\/ When not rebuilding there is nothing to do for humongous objects.\n+        return false;\n+      }\n+\n@@ -284,1 +297,1 @@\n-    G1RebuildRSAndScrubRegionClosure(G1ConcurrentMark* cm, uint worker_id) :\n+    G1RebuildRSAndScrubRegionClosure(G1ConcurrentMark* cm, bool should_rebuild_remset, uint worker_id) :\n@@ -288,0 +301,1 @@\n+      _should_rebuild_remset(should_rebuild_remset),\n@@ -324,1 +338,1 @@\n-  G1RebuildRSAndScrubTask(G1ConcurrentMark* cm, uint num_workers) :\n+  G1RebuildRSAndScrubTask(G1ConcurrentMark* cm, bool should_rebuild_remset, uint num_workers) :\n@@ -327,1 +341,2 @@\n-    _hr_claimer(num_workers) { }\n+    _hr_claimer(num_workers),\n+    _should_rebuild_remset(should_rebuild_remset) { }\n@@ -333,1 +348,1 @@\n-    G1RebuildRSAndScrubRegionClosure cl(_cm, worker_id);\n+    G1RebuildRSAndScrubRegionClosure cl(_cm, _should_rebuild_remset, worker_id);\n@@ -338,1 +353,1 @@\n-void G1ConcurrentRebuildAndScrub::rebuild_and_scrub(G1ConcurrentMark* cm, WorkerThreads* workers) {\n+void G1ConcurrentRebuildAndScrub::rebuild_and_scrub(G1ConcurrentMark* cm, bool should_rebuild_remset, WorkerThreads* workers) {\n@@ -341,1 +356,1 @@\n-  G1RebuildRSAndScrubTask task(cm, num_workers);\n+  G1RebuildRSAndScrubTask task(cm, should_rebuild_remset, num_workers);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRebuildAndScrub.cpp","additions":22,"deletions":7,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-  static void rebuild_and_scrub(G1ConcurrentMark* cm, WorkerThreads* workers);\n+  static void rebuild_and_scrub(G1ConcurrentMark* cm, bool should_rebuild_remset, WorkerThreads* workers);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentRebuildAndScrub.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}