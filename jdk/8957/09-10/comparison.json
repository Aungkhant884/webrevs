{"files":[{"patch":"@@ -120,0 +120,2 @@\n+#include \"runtime\/threads.hpp\"\n+\n@@ -986,1 +988,1 @@\n-void G1CollectedHeap::abort_concurrent_cycle() {\n+bool G1CollectedHeap::abort_concurrent_cycle() {\n@@ -1003,1 +1005,1 @@\n-  concurrent_mark()->concurrent_cycle_abort();\n+  return concurrent_mark()->concurrent_cycle_abort();\n@@ -2877,0 +2879,14 @@\n+    class PrintStackClosure : public ThreadClosure {\n+    public:\n+      void do_thread(Thread* thread) {\n+        if (!thread->is_Java_thread()) { return; }\n+        LogTarget(Debug, gc) lt;\n+        if (lt.is_enabled()) {\n+          LogStream ls(lt);\n+          ls.print_cr(\"%s\", thread->name());\n+          ((JavaThread*)thread)->print_stack_on(&ls);\n+        }\n+      }\n+    } cl;\n+    Threads::java_threads_do(&cl);\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.cpp","additions":18,"deletions":2,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -512,1 +512,1 @@\n-  void abort_concurrent_cycle();\n+  bool abort_concurrent_cycle();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectedHeap.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2024,1 +2024,1 @@\n-void G1ConcurrentMark::concurrent_cycle_abort() {\n+bool G1ConcurrentMark::concurrent_cycle_abort() {\n@@ -2035,6 +2035,1 @@\n-    return;\n-  }\n-\n-  {\n-    GCTraceTime(Debug, gc) debug(\"Clear Bitmap\");\n-    clear_bitmap(_g1h->workers());\n+    return false;\n@@ -2057,0 +2052,1 @@\n+  return true;\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -505,1 +505,1 @@\n-  void concurrent_cycle_abort();\n+  bool concurrent_cycle_abort();\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -174,1 +174,2 @@\n-  _heap->abort_concurrent_cycle();\n+  \/\/ Verification needs the bitmap, so we should clear the bitmap only later.\n+  bool in_concurrent_cycle = _heap->abort_concurrent_cycle();\n@@ -176,0 +177,4 @@\n+  if (in_concurrent_cycle) {\n+    GCTraceTime(Debug, gc) debug(\"Clear Bitmap\");\n+    _heap->concurrent_mark()->clear_bitmap(_heap->workers());\n+  }\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"}]}