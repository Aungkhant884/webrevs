{"files":[{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,1 +52,2 @@\n-  const size_t sz = Message::calc_size(strlen(msg));\n+  size_t len = strlen(msg);\n+  const size_t sz = Message::calc_size(len);\n@@ -57,1 +59,1 @@\n-    new(_buf + _pos) Message(output, decorations, msg);\n+    new(_buf + _pos) Message(output, decorations, msg, len);\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -3,0 +3,1 @@\n+ * Copyright (c) 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -69,1 +70,1 @@\n-  \/\/ Messsage is the envelop of a log line and its associative data.\n+  \/\/ Messsage is the envelope of a log line and its associative data.\n@@ -75,2 +76,2 @@\n-  \/\/ |_output|_decorations|\"a log line\", |pad| <- pointer aligned.\n-  \/\/ |_output|_decorations|\"yet another\",|pad|\n+  \/\/ |_output|_decorations|_msglen|\"a log line\", |pad| <- Message aligned.\n+  \/\/ |_output|_decorations|_msglen|\"yet another\",|pad|\n@@ -78,1 +79,1 @@\n-  \/\/ |nullptr|_decorations|\"\",|pad| <- flush token\n+  \/\/ |nullptr|_decorations|0|\"\",|pad| <- flush token\n@@ -86,0 +87,1 @@\n+    size_t _msglen; \/\/ Length of message excluding NUL-byte\n@@ -87,2 +89,4 @@\n-    Message(LogFileStreamOutput* output, const LogDecorations& decorations, const char* msg)\n-      : _output(output), _decorations(decorations) {\n+    \/\/ msglen excludes NUL-byte\n+    Message(LogFileStreamOutput* output, const LogDecorations& decorations, const char* msg, const size_t msglen)\n+      : _output(output), _decorations(decorations),\n+        _msglen(msglen) {\n@@ -90,2 +94,1 @@\n-      PRAGMA_STRINGOP_OVERFLOW_IGNORED\n-      strcpy(reinterpret_cast<char* >(this+1), msg);\n+      memcpy(reinterpret_cast<char* >(this+1), msg, _msglen + 1);\n@@ -96,1 +99,1 @@\n-      return align_up(sizeof(Message) + message_len + 1, sizeof(void*));\n+      return align_up(sizeof(Message) + message_len + 1, alignof(Message));\n@@ -100,1 +103,1 @@\n-      return calc_size(strlen(message()));\n+      return calc_size(_msglen);\n@@ -117,0 +120,2 @@\n+      \/\/ Ensure _pos is Message-aligned\n+      _pos = align_up(_buf, alignof(Message)) - _buf;\n@@ -127,1 +132,4 @@\n-    void reset() { _pos = 0; }\n+    void reset() {\n+      \/\/ Ensure _pos is Message-aligned\n+      _pos = align_up(_buf, alignof(Message)) - _buf;\n+    }\n","filename":"src\/hotspot\/share\/logging\/logAsyncWriter.hpp","additions":19,"deletions":11,"binary":false,"changes":30,"status":"modified"}]}