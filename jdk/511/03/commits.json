[{"commit":{"message":"adding conversion ((a & 0xff) << 8) + (b & 0xff) -> ((a & 0xff) << 8) | (b & 0xff)"},"files":[{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestBFI.java"}],"sha":"ee95fc6eb9130916ad628fa2c6ac56edfaab96b4"},{"commit":{"message":"minor change (jcheck: trailing whitespace, tab)"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/BitfieldInsert.java"}],"sha":"e5833fecbbdab3b13de1f032550e5d9c4e1ca1aa"},{"commit":{"message":"BitfieldInsert microbenchmark added to show the preformance improvement"},"files":[{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/BitfieldInsert.java"}],"sha":"42b81afca1574de8a6fe17b0c420cf694391eb7f"},{"commit":{"message":"8249893: AARCH64: optimize the construction of the value from the bits of the other two"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_ad.m4"},{"filename":"src\/hotspot\/share\/opto\/addnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/opto\/mulnode.hpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/c2\/aarch64\/TestBFI.java"}],"sha":"8a4c6a907e19fe339f8ba0fe10cfe02941c43c65"}]