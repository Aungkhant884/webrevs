{"files":[{"patch":"@@ -56,2 +56,2 @@\n-                {\"\/\/Customer[1]\/text()\/parent::*\", \"\/\/Customer\"},\n-                {\"\/\/Customer[1]\/@id\/parent::*\", \"\/\/Customer\"},\n+                {\"\/\/Customer[1]\/text()\/parent::*\", \"(\/\/Customer)[1]\"},\n+                {\"\/\/Customer[1]\/@id\/parent::*\", \"(\/\/Customer)[1]\"},\n@@ -61,2 +61,2 @@\n-                {\"\/\/Customer[1]\/text()\/..\", \"\/\/Customer\"},\n-                {\"\/\/Customer[1]\/@id\/..\", \"\/\/Customer\"},\n+                {\"\/\/Customer[1]\/text()\/..\", \"(\/\/Customer)[1]\"},\n+                {\"\/\/Customer[1]\/@id\/..\", \"(\/\/Customer)[1]\"},\n@@ -65,2 +65,2 @@\n-                {\"\/\/*[parent::Customers][1]\", \"\/\/Customer\"},\n-                {\"\/\/*[parent::Customers and @id='x1']\", \"\/\/Customer\"},\n+                {\"\/\/*[parent::Customers][1]\", \"(\/\/Customer)[1]\"},\n+                {\"\/\/*[parent::Customers and @id='x1']\", \"(\/\/Customer)[1]\"},\n@@ -68,1 +68,2 @@\n-                \/\/ document root\n+                \/\/ \"..\" is short for parent::node(). A node test node() is true for any node of\n+                \/\/ any type including the document root node.\n@@ -82,1 +83,3 @@\n-                \/\/ parent::* never return document root\n+                \/\/ A node test * is true for any node of the principle node type which contains\n+                \/\/ attribute nodes, namespace nodes and element nodes. parent::* never includes the\n+                \/\/ document root node.\n@@ -85,1 +88,2 @@\n-                \/\/ parent of document root\n+                \/\/ \"\/\" selects the document root which has no parent. Expressions below validate\n+                \/\/ no parent is found on the document root node.\n@@ -87,0 +91,1 @@\n+                {\"\/parent::node()\"}\n@@ -145,1 +150,1 @@\n-     * Verifies that XPath relative expressions provide a parent node.\n+     * Verifies that XPath relative expressions provide a same node as the context node.\n@@ -147,2 +152,2 @@\n-     * @param exp         XPath expression\n-     * @param relativeExp XPath relative expression\n+     * @param exp         XPath expression that provides a context node\n+     * @param relativeExp XPath relative expression that is evaluated relatively to the context node\n","filename":"test\/jaxp\/javax\/xml\/jaxp\/unittest\/xpath\/XPathExpParentTest.java","additions":17,"deletions":12,"binary":false,"changes":29,"status":"modified"}]}