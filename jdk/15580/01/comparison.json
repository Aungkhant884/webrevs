{"files":[{"patch":"@@ -0,0 +1,103 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4357975\n+ * @summary  Tests if InsertUnorderedListItem generates the proper tag sequence\n+ * @run main bug4357975\n+ *\/\n+\n+import java.awt.event.ActionEvent;\n+\n+import javax.swing.Action;\n+import javax.swing.JEditorPane;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+import javax.swing.text.AttributeSet;\n+import javax.swing.text.Element;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.html.HTML;\n+import javax.swing.text.html.HTMLEditorKit;\n+import javax.swing.text.html.HTMLDocument;\n+\n+public class bug4357975 {\n+\n+    public static void main(String[] args) throws Exception {\n+        JEditorPane jep = new JEditorPane();\n+        HTMLEditorKit kit = new HTMLEditorKit();\n+        jep.setEditorKit(kit);\n+        jep.setDocument(kit.createDefaultDocument());\n+\n+        HTMLDocument doc = (HTMLDocument) jep.getDocument();\n+\n+        DocumentListener l = new DocumentListener() {\n+            @Override\n+            public void insertUpdate(DocumentEvent e) {\n+                int offset = e.getOffset();\n+                HTMLDocument doc = (HTMLDocument)e.getDocument();\n+\n+                Element el = doc.getCharacterElement(offset + 1);\n+                AttributeSet attrs = el.getAttributes();\n+                Object name = attrs.getAttribute(StyleConstants.NameAttribute);\n+                boolean passed = (name == HTML.Tag.CONTENT);\n+\n+                el = el.getParentElement();\n+                attrs = el.getAttributes();\n+                name = attrs.getAttribute(StyleConstants.NameAttribute);\n+                passed = (passed && (name == HTML.Tag.IMPLIED));\n+\n+                el = el.getParentElement();\n+                attrs = el.getAttributes();\n+                name = attrs.getAttribute(StyleConstants.NameAttribute);\n+                passed = (passed && (name == HTML.Tag.LI));\n+\n+                el = el.getParentElement();\n+                attrs = el.getAttributes();\n+                name = attrs.getAttribute(StyleConstants.NameAttribute);\n+                passed = (passed && (name == HTML.Tag.UL));\n+                if (!passed) {\n+                    throw new RuntimeException(\"Test failed\");\n+                }\n+            }\n+\n+            @Override\n+            public void changedUpdate(DocumentEvent e) {}\n+            @Override\n+            public void removeUpdate(DocumentEvent e) {}\n+        };\n+        doc.addDocumentListener(l);\n+\n+        Action[] actions = kit.getActions();\n+        for (int i = 0; i < actions.length; i++){\n+            Action a = actions[i];\n+            if (a.getValue(Action.NAME) == \"InsertUnorderedListItem\") {\n+                a.actionPerformed(new ActionEvent(jep,\n+                                                  ActionEvent.ACTION_PERFORMED,\n+                                                  (String) a.getValue(Action.ACTION_COMMAND_KEY)));\n+                break;\n+            }\n+        }\n+\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HTMLEditorKit\/bug4357975.java","additions":103,"deletions":0,"binary":false,"changes":103,"status":"added"},{"patch":"@@ -0,0 +1,67 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4841760\n+ * @summary  Tests if HTML tags are correctly shown for\n+             StyleEditorKit.ForegroundAction() in JTextPane output.\n+ * @run main bug4841760\n+ *\/\n+\n+import javax.swing.JTextPane;\n+import javax.swing.text.SimpleAttributeSet;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+public class bug4841760 {\n+\n+    public static void main(String[] args) throws Exception {\n+        JTextPane jep = new JTextPane();\n+        jep.setEditorKit(new HTMLEditorKit());\n+        jep.setText(\"<html><head><\/head><body><font size=3>hellojavaworld<\/font><\/body><\/html>\");\n+\n+        SimpleAttributeSet set = new SimpleAttributeSet();\n+        StyleConstants.setForeground(set, java.awt.Color.BLUE);\n+        jep.getStyledDocument().setCharacterAttributes(3, 5, set, false);\n+\n+        String gotText = jep.getText();\n+        System.out.println(\"gotText: \" + gotText);\n+        \/\/ there should be color attribute set\n+        \/\/ and 3 font tags\n+        int i = gotText.indexOf(\"color\");\n+        if (i > 0) {\n+            i = gotText.indexOf(\"<font\");\n+            if (i > 0) {\n+                i = gotText.indexOf(\"<font\", i + 1);\n+                if (i > 0) {\n+                    i = gotText.indexOf(\"<font\", i + 1);\n+                    if (i <= 0) {\n+                        throw new RuntimeException(\"Test failed.\");\n+                    }\n+                }\n+            }\n+        }\n+\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/HTMLWriter\/bug4841760.java","additions":67,"deletions":0,"binary":false,"changes":67,"status":"added"},{"patch":"@@ -0,0 +1,118 @@\n+\/*\n+ * Copyright (c) 2000, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 4329185\n+ * @summary  Tests if vertical image alignment is working\n+ * @key headful\n+ * @run main bug4329185\n+*\/\n+\n+import java.awt.Robot;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JEditorPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.Element;\n+import javax.swing.text.StyleConstants;\n+import javax.swing.text.View;\n+import javax.swing.text.ViewFactory;\n+import javax.swing.text.html.HTML;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+public class bug4329185 {\n+\n+    private static final View[] views = new View[3];\n+    private static JFrame f;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                 bug4329185 test = new bug4329185();\n+                 test.start();\n+            });\n+            robot.waitForIdle();\n+            robot.delay(1000);\n+            boolean passed = ((views[0].getAlignment(View.Y_AXIS) == 0.0)\n+                             && (views[1].getAlignment(View.Y_AXIS) == 0.5)\n+                             && (views[2].getAlignment(View.Y_AXIS) == 1.0));\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public void start() {\n+        String text = \"aaa<IMG align=top><IMG align=middle><IMG align=bottom>\";\n+        f = new JFrame(\"bug4329185\");\n+        JEditorPane jep = new JEditorPane();\n+        jep.setEditorKit(new MyHTMLEditorKit());\n+        jep.setEditable(false);\n+\n+        jep.setText(text);\n+\n+        f.getContentPane().add(jep);\n+        f.setSize(500, 500);\n+        f.setLocationRelativeTo(null);\n+        f.setVisible(true);\n+    }\n+\n+\n+    static class MyHTMLEditorKit extends HTMLEditorKit {\n+\n+        private final ViewFactory defaultFactory = new MyHTMLFactory();\n+\n+        @Override\n+        public ViewFactory getViewFactory() {\n+            return defaultFactory;\n+        }\n+\n+        static class MyHTMLFactory extends HTMLEditorKit.HTMLFactory {\n+            private int i = 0;\n+\n+            @Override\n+            public View create(Element elem) {\n+                Object o = elem.getAttributes()\n+                               .getAttribute(StyleConstants.NameAttribute);\n+                if (o instanceof HTML.Tag kind) {\n+                    if (kind == HTML.Tag.IMG) {\n+                        View v = super.create(elem);\n+                        views[i++] = v;\n+                        return v;\n+                    }\n+                }\n+                return super.create(elem);\n+            }\n+        }\n+    }\n+\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/ImageView\/bug4329185.java","additions":118,"deletions":0,"binary":false,"changes":118,"status":"added"},{"patch":"@@ -0,0 +1,109 @@\n+\/*\n+ * Copyright (c) 2003, 2023, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+   @bug 4623342\n+   @summary  Tests if InlineView causes extra spacing around images in JTable\n+   @key headful\n+   @run main bug4623342\n+*\/\n+\n+import java.awt.Robot;\n+import java.awt.Shape;\n+\n+import javax.swing.JFrame;\n+import javax.swing.JEditorPane;\n+import javax.swing.SwingUtilities;\n+import javax.swing.text.View;\n+import javax.swing.text.html.HTMLEditorKit;\n+\n+public class bug4623342 {\n+\n+    private static volatile boolean passed;\n+\n+    private JEditorPane jep;\n+    private static JFrame f;\n+\n+    public static void main(String[] args) throws Exception {\n+        Robot robot = new Robot();\n+        robot.setAutoDelay(100);\n+        try {\n+            bug4623342 test = new bug4623342();\n+            SwingUtilities.invokeAndWait(test::init);\n+            robot.waitForIdle();\n+            robot.delay(100);\n+            SwingUtilities.invokeAndWait(test::start);\n+            if (!passed) {\n+                throw new RuntimeException(\"Test failed.\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                if (f != null) {\n+                    f.dispose();\n+                }\n+            });\n+        }\n+    }\n+\n+    public void init() {\n+\n+        String text =\n+            \"<table border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\" +\n+             \"<tr><td width=\\\"10\\\" height=\\\"23\\\">\" +\n+               \"<img src=\\\"file:\/a.jpg\\\" width=65 height=23 border=\\\"0\\\"><\/td><\/tr>\" +\n+             \"<tr><td width=\\\"10\\\" height=\\\"23\\\">\" +\n+               \"<img src=\\\"file:\/a.jpg\\\" width=65 height=23 border=\\\"0\\\"><\/td><\/tr><\/table>\";\n+\n+        f = new JFrame();\n+        jep = new JEditorPane();\n+        jep.setEditorKit(new HTMLEditorKit());\n+        jep.setEditable(false);\n+\n+        jep.setText(text);\n+\n+        f.getContentPane().add(jep);\n+        f.setSize(500, 500);\n+        f.setLocationRelativeTo(null);\n+        f.setVisible(true);\n+    }\n+\n+    private void start() {\n+        Shape r = jep.getBounds();\n+        View v = jep.getUI().getRootView(jep);\n+        int tableHeight = 0;\n+        while (!(v instanceof javax.swing.text.html.ParagraphView)) {\n+            int n = v.getViewCount();\n+            Shape sh = v.getChildAllocation(n - 1,  r);\n+            String viewName = v.getClass().getName();\n+            if (viewName.endsWith(\"TableView\")) {\n+                tableHeight = r.getBounds().height;\n+            }\n+            v = v.getView(n - 1);\n+            if (sh != null) {\n+                r = sh;\n+            }\n+        }\n+        \/\/ tableHeight should be the sum of TD's heights (46)\n+        passed = (tableHeight == 46);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/text\/html\/InlineView\/bug4623342.java","additions":109,"deletions":0,"binary":false,"changes":109,"status":"added"}]}