{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2017, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,3 @@\n+import javax.imageio.ImageIO;\n+import java.io.File;\n+import java.io.IOException;\n@@ -63,1 +66,1 @@\n-        frame.setBounds(40, 30, 400, 300);\n+        frame.setBounds(83, 97, 400, 300);\n@@ -89,1 +92,1 @@\n-        Thread.sleep(200);\n+        robot.delay(500);\n@@ -94,0 +97,1 @@\n+        System.out.println(\"Creating screen capture of \" + rect);\n@@ -104,11 +108,5 @@\n-        if (image.getRGB(w \/ 4, h \/ 4) != COLORS[0].getRGB()) {\n-            throw new RuntimeException(\"Wrong image color!\");\n-        }\n-\n-        if (image.getRGB(3 * w \/ 4, h \/ 4) != COLORS[1].getRGB()) {\n-            throw new RuntimeException(\"Wrong image color!\");\n-        }\n-\n-        if (image.getRGB(w \/ 4, 3 * h \/ 4) != COLORS[2].getRGB()) {\n-            throw new RuntimeException(\"Wrong image color!\");\n-        }\n+        checkRectColor(image, w \/ 4, h \/ 4, COLORS[0]);\n+        checkRectColor(image, 3 * w \/ 4, h \/ 4, COLORS[1]);\n+        checkRectColor(image, w \/ 4, 3 * h \/ 4, COLORS[2]);\n+        checkRectColor(image, 3 * w \/ 4, 3 * h \/ 4, COLORS[3]);\n+    }\n@@ -116,1 +114,11 @@\n-        if (image.getRGB(3 * w \/ 4, 3 * h \/ 4) != COLORS[3].getRGB()) {\n+    static void checkRectColor(BufferedImage image, int x, int y, Color expectedColor) {\n+        System.out.println(\"Checking (\" + x + \", \" + y + \") to have color \" + expectedColor);\n+        final int actualColor = image.getRGB(x, y);\n+        if (actualColor != expectedColor.getRGB()) {\n+            System.out.println(\"... Mismatch: found \" + new Color(actualColor) + \" instead. Check image.png.\");\n+            try {\n+                ImageIO.write(image, \"png\", new File(\"image.png\"));\n+            } catch(IOException e) {\n+                System.out.println(\"failed to save image.png.\");\n+                e.printStackTrace();\n+            }\n@@ -118,0 +126,2 @@\n+        } else {\n+            System.out.println(\"... OK\");\n@@ -120,1 +130,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"test\/jdk\/java\/awt\/Robot\/HiDPIScreenCapture\/HiDPIRobotScreenCaptureTest.java","additions":26,"deletions":16,"binary":false,"changes":42,"status":"modified"}]}