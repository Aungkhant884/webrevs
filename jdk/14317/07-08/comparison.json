{"files":[{"patch":"@@ -209,1 +209,1 @@\n-     * The DualNode class is shared with class SynchronousQueue It\n+     * The DualNode class is shared with class SynchronousQueue. It\n@@ -334,3 +334,8 @@\n-     * timed park if the remaining time is less than the likely\n-     * cost of park\/unpark. This also avoids re-parks when timed\n-     * park returns just barely too soon.\n+     * timed park if the remaining time is less than the likely cost\n+     * of park\/unpark. This also avoids re-parks when timed park\n+     * returns just barely too soon. As is the case in most j.u.c\n+     * blocking support, untimed waits use ManagedBlockers when\n+     * callers are ForkJoin threads, but timed waits use plain\n+     * parkNanos, under the rationale that known-to-be transient\n+     * blocking doesn't require compensation. (This decision should be\n+     * revisited here and elsewhere to deal with very long timeouts.)\n@@ -342,1 +347,2 @@\n-     * than unnecessarily requiring volatile accesses elsewhere.\n+     * than unnecessarily requiring volatile accesses elsewhere. This\n+     * fence also separates accesses to field isUniprocessor.\n@@ -612,0 +618,1 @@\n+\n@@ -639,1 +646,1 @@\n-                    h.next = h; \/\/ h.selfLink();\n+                    h.next = h; \/\/ self-link\n","filename":"src\/java.base\/share\/classes\/java\/util\/concurrent\/LinkedTransferQueue.java","additions":13,"deletions":6,"binary":false,"changes":19,"status":"modified"}]}