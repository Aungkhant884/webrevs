{"files":[{"patch":"@@ -53,0 +53,2 @@\n+CompiledMethod* CompiledMethod::_enqueued_deoptimization_root_method = nullptr;\n+\n@@ -57,1 +59,1 @@\n-    _deoptimization_status(not_enqueued),\n+    _enqueued_deoptimization_link(nullptr),\n@@ -69,1 +71,1 @@\n-    _deoptimization_status(not_enqueued),\n+    _enqueued_deoptimization_link(nullptr),\n@@ -122,1 +124,1 @@\n-  DeoptimizationStatus old_status = _deoptimization_status;\n+  DeoptimizationStatus old_status = extract_enqueued_deoptimization_status(_enqueued_deoptimization_link);\n@@ -125,1 +127,9 @@\n-    _deoptimization_status = new_status;\n+    if (old_status == not_enqueued) {\n+      assert(extract_enqueued_deoptimization_method(_enqueued_deoptimization_link) == nullptr, \"Compiled Method should not already be linked\");\n+      _enqueued_deoptimization_link = make_enqueued_deoptimization_link(_enqueued_deoptimization_root_method, new_status);\n+      _enqueued_deoptimization_root_method = this;\n+      return true;\n+    } else {\n+      _enqueued_deoptimization_link = make_enqueued_deoptimization_link(\n+        extract_enqueued_deoptimization_method(_enqueued_deoptimization_link), new_status);\n+    }\n@@ -127,1 +137,13 @@\n-  return old_status == not_enqueued;\n+  return false;\n+}\n+\n+CompiledMethod* CompiledMethod::next_enqueued_deoptimization_method() const {\n+  assert_locked_or_safepoint(Compile_lock);\n+  return extract_enqueued_deoptimization_method(_enqueued_deoptimization_link);\n+}\n+\n+CompiledMethod* CompiledMethod::take_enqueued_deoptimization_root_method() {\n+  assert_locked_or_safepoint(Compile_lock);\n+  CompiledMethod* root = _enqueued_deoptimization_root_method;\n+  _enqueued_deoptimization_root_method = nullptr;\n+  return root;\n@@ -132,1 +154,2 @@\n-  _deoptimization_status = post_make_deoptimized;\n+  _enqueued_deoptimization_link = make_enqueued_deoptimization_link(\n+    extract_enqueued_deoptimization_method(_enqueued_deoptimization_link), post_make_deoptimized);\n","filename":"src\/hotspot\/share\/code\/compiledMethod.cpp","additions":29,"deletions":6,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -155,1 +155,1 @@\n-  DeoptimizationStatus _deoptimization_status; \/\/ Used for stack deoptimization\n+  struct EnqueuedDemoptimizationLink;\n@@ -157,0 +157,14 @@\n+  static CompiledMethod* _enqueued_deoptimization_root_method;\n+  EnqueuedDemoptimizationLink* _enqueued_deoptimization_link;\n+\n+  static EnqueuedDemoptimizationLink* make_enqueued_deoptimization_link(CompiledMethod* cm, DeoptimizationStatus status) {\n+    assert(((uintptr_t)cm & 0x3) == 0, \"cm pointer must have zero lower two LSB\");\n+    return (EnqueuedDemoptimizationLink*)(((uintptr_t)cm & ~0x3) | static_cast<u1>(status));\n+  }\n+\n+  static DeoptimizationStatus extract_enqueued_deoptimization_status(EnqueuedDemoptimizationLink* link) {\n+    return static_cast<DeoptimizationStatus>((uintptr_t)link & 0x3);\n+  }\n+  static CompiledMethod* extract_enqueued_deoptimization_method(EnqueuedDemoptimizationLink* link) {\n+    return (CompiledMethod*)((uintptr_t)link & ~0x3);\n+  }\n@@ -246,1 +260,3 @@\n-  bool  has_enqueued_deoptimization() const { return _deoptimization_status != not_enqueued; }\n+  bool  has_enqueued_deoptimization() const {\n+    return extract_enqueued_deoptimization_status(_enqueued_deoptimization_link) != not_enqueued;\n+  }\n@@ -248,1 +264,3 @@\n-  bool  is_post_make_deoptimized() const { return _deoptimization_status == post_make_deoptimized; }\n+  bool  is_post_make_deoptimized() const {\n+    return extract_enqueued_deoptimization_status(_enqueued_deoptimization_link) == post_make_deoptimized;\n+  }\n@@ -252,0 +270,2 @@\n+  CompiledMethod* next_enqueued_deoptimization_method() const;\n+  static CompiledMethod* take_enqueued_deoptimization_root_method();\n@@ -261,1 +281,2 @@\n-    return _deoptimization_status != enqueued_noupdate && _deoptimization_status != post_make_deoptimized;\n+    DeoptimizationStatus deoptimization_status = extract_enqueued_deoptimization_status(_enqueued_deoptimization_link);\n+    return deoptimization_status != enqueued_noupdate && deoptimization_status != post_make_deoptimized;\n","filename":"src\/hotspot\/share\/code\/compiledMethod.hpp","additions":25,"deletions":4,"binary":false,"changes":29,"status":"modified"},{"patch":"@@ -1028,4 +1028,8 @@\n-  SweeperBlockingCompiledMethodIterator iter(SweeperBlockingCompiledMethodIterator::only_alive_and_not_unloading);\n-  while(iter.next()) {\n-    CompiledMethod* nm = iter.method();\n-    if (nm->has_enqueued_deoptimization() && !nm->is_post_make_deoptimized() && nm->can_be_deoptimized()) {\n+  SweeperBlocker sw;\n+  CompiledMethod* nm = CompiledMethod::take_enqueued_deoptimization_root_method();\n+  uint links_found = 0;\n+  while (nm != nullptr) {\n+    _deoptimized = true;\n+    ++links_found;\n+    assert(nm->has_enqueued_deoptimization(), \"All nmethods in list must be enqueued\");\n+    if (!nm->is_post_make_deoptimized() && nm->can_be_deoptimized()) {\n@@ -1035,0 +1039,1 @@\n+    nm = nm->next_enqueued_deoptimization_method();\n@@ -1036,0 +1041,1 @@\n+  assert(links_found ==_enqueued, \"All enqueued nmethods must have been found\");\n@@ -1062,1 +1068,0 @@\n-  _deoptimized = true;\n","filename":"src\/hotspot\/share\/runtime\/deoptimization.cpp","additions":10,"deletions":5,"binary":false,"changes":15,"status":"modified"}]}