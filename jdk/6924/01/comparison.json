{"files":[{"patch":"@@ -13,3 +13,3 @@\n-called <b>HSDB<\/b>, the \"HotSpot Debugger\". To run it, type \"hsdbproc.sh\" \n-or \"hsdbwindbg.bat\" or 64-bit variants (on Unix, Windows platforms \n-respectively). More info. on HSDB GUI are in <a href=\"hsdb.html\">hsdb.html<\/a>.\n+called <b>HSDB<\/b>, the \"HotSpot Debugger\". To run it, type \"jhsdb hsdb\".\n+More info on HSDB GUI are in <a href=\"hsdb.html\">hsdb.html<\/a>. Also\n+see the \"jhsdb\" man page.\n@@ -20,1 +20,1 @@\n-There are three modes for the SA debugger: \n+There are three modes for the SA debugger:\n@@ -22,3 +22,3 @@\n-<li>attaching to a local process,\n-<li>opening a core file, and \n-<li>attaching to a remote \"debug server\". \n+<li>attaching to a local process\n+<li>opening a core file\n+<li>attaching to a remote \"debug server\"\n@@ -27,7 +27,5 @@\n-The remote case requires two programs to be running on the remote machine:\n-the rmiregistry (see the script \"start-rmiregistry.sh\" in this directory;\n-run this in the background) and the debug server (see the script\n-\"start-debug-server-proc.sh\"), in that order. start-rmiregistry.sh takes no\n-arguments; start-debug-server-proc.sh (or -windbg.bat) takes as argument \n-the process ID or the executable and core file names to allow remote debugging\n-of. \n+The remote case requires running the debug server on the remote machine. This\n+is done by running \"jhsdb debugd\", and also adding arguments specifying the core\n+file or process to debug. Once this is done you can connect remotely\n+to the debug server by running various other \"jhsdb\" subcommands, and specifying\n+which debug server to connect to. See the \"jhsdb\" man page for details.\n@@ -38,2 +36,2 @@\n-There is also a command line HSDB variant.  More details on the command line interface can be found in:\n-<ul>\n+There is also a command line HSDB variant. It is launched using \"jhsdb clhsdb\".\n+More details on the command line interface can be found in the \"jhsdb\" man page and also in:<ul>\n@@ -41,8 +39,1 @@\n-<\/ul> \n-<\/p>\n-\n-<h3>Other command line tools<\/h3>\n-<p>\n-The following table lists all SA command line tools. &lt;xxx&gt;windbg.bat \n-files are for Windows. .sh files are for Solaris. &lt;xxx&gt;64.sh are for \n-64 bit debugees.\n+<\/ul>\n@@ -51,157 +42,1 @@\n-<table border=\"1\">\n-<tr>\n-<th>\n-Tool\n-<\/th>\n-<th>\n-Description\n-<\/th>\n-<\/tr>\n-\n-<tr>\n-<td>\n-dumpflagsproc.sh,\n-dumpflagsproc64.sh,\n-dumpflagswindbg.bat\n-dumpflagswindbg64.bat\n-<\/td>\n-<td>\n-dumps name and value of all -XX JVM command line arguments passed\n-to debuggee. \n-<\/td>\n-<\/tr>\n-\n-<tr>\n-<td>\n-<a name=\"dumpsysprops\"><\/a>\n-dumpsyspropsproc.sh,\n-dumpsyspropsproc64.sh,\n-dumpsyspropswindbg.bat\n-dumpsyspropswindbg64.bat\n-<\/td>\n-<td>\n-This prints name and value of Java level System properties.\n-<\/td>\n-<\/tr>\n-\n-<tr>\n-<td>\n-<a name=\"heapdump\"><\/a>\n-heapdumpproc.sh,\n-heapdumpproc64.sh,\n-heapdumpwindbg.bat\n-heapdumpwindbg64.bat\n-<\/td>\n-<td>\n-Dumps heap in a file in hprof binary format.\n-<\/td>\n-<\/tr>\n-\n-<tr>\n-<td>\n-<a name=\"heapsum\"><\/a>\n-heapsumproc.sh,\n-heapsumproc64.sh,\n-heapsumwindbg.bat\n-heapsumwindbg64.bat\n-<\/td>\n-<td>\n-Prints summary information on Java heap.\n-<\/td>\n-<\/tr>\n-\n-\n-<tr>\n-<td>\n-jcoreproc.sh,\n-jcoreproc64.sh,\n-jcorewindbg.bat\n-jcorewindbg64.bat\n-<\/td>\n-<td>\n-This can retrieve .class files from the debuggee.\n-set the environment variable <b>JCORE_PACKAGES<\/b> to comman separated list of\n-packages whose classes have to be retrieved from the core file.\n-<\/td>\n-<\/tr>\n-\n-<tr>\n-<tr>\n-<td>\n-jstackproc.sh,\n-jstackproc64.sh,\n-jstackwindbg.bat\n-jstackwindbg64.bat\n-<\/td>\n-<td>\n-used to get java stack trace for all java threads.\n-<\/td>\n-<\/tr>\n-\n-<tr>\n-<td>\n-jhistoproc.sh,\n-jhistoproc64.sh,\n-jhistowindbg.bat\n-jhistowindbg64.bat\n-<\/td>\n-<td>\n-used to get object histogram of java heap.\n-<\/td>\n-<\/tr>\n-\n-<tr>\n-<td>\n-permstatproc.sh,\n-permstatproc64.sh,\n-permstatwindbg.bat\n-permstatwindbg64.bat\n-<\/td>\n-<td>\n-To gather statistics on perm. generation.\n-<\/td>\n-<\/tr>\n-\n-<a name=\"mixed_pstack\"><\/a>\n-<tr>\n-<tr>\n-<td>\n-pstackproc.sh,\n-pstackproc64.sh,\n-pstackwindbg.bat\n-pstackwindbg64.bat\n-<\/td>\n-<td>\n-This is cross platform mixed mode pstack utility. This works on any (non-java as well) process, core dump. For java process and core dumps, this prints both java and C\/C++ frames. \n-<\/td>\n-<\/tr>\n-\n-<tr>\n-<td>\n-pmapproc.sh,\n-pmapproc64.sh,\n-pmapwindbg.bat\n-pmapwindbg64.bat\n-<\/td>\n-<td>\n-This is cross platform Solaris pmap-like utility. \n-<\/td>\n-<\/tr>\n-\n-<td>\n-start-debug-server-proc.sh,\n-start-debug-server-proc64.sh,\n-start-debug-server-windbg.bat,\n-start-debug-server-windbg64.bat,\n-start-rmiregistry.bat,\n-start-rmiregistry64.bat,\n-start-rmiregistry.sh\n-start-rmiregistry64.sh\n-<\/td>\n-<td>\n-These scripts are used to run SA remotely. \n-<\/td>\n-<\/tr>\n-<\/table>\n-\n-<h3>C2 Compilation Replay<\/h3>\n+<h3>Compilation Replay<\/h3>\n@@ -209,3 +44,3 @@\n-When a java process crashes in compiled method, usually a core file is saved.\n-The C2 replay function can reproduce the compiling process in the core.\n-<a href=\"c2replay.html\">c2replay.html<\/a>\n+When a java process crashes in a compiled method, usually a core file is saved.\n+The compiler replay function can reproduce the compiling process in the core.\n+See <a href=\"cireplay.html\">cireplay.html<\/a>\n@@ -216,2 +51,2 @@\n-difference machine, it may not always be possible for SA to debug the same.\n-More info. on debugging on transported core dumps is in\n+different machine, it may not always be possible for SA to debug it.\n+More info on debugging on transported core dumps is in\n@@ -224,3 +59,3 @@\n-supportable) with SA. For example, the SA will probably not work at all \n-if it freezes the target VM during certain phases of GC. When filing bugs\n-a pointer to a core file (see gcore(1)) which the SA can not handle well \n+are supportable) with SA. For example, the SA will probably not work at all\n+if it freezes the target VM during certain phases of GC. When filing bugs,\n+a pointer to a core file (see gcore(1)) which the SA can not handle well\n","filename":"src\/jdk.hotspot.agent\/doc\/index.html","additions":24,"deletions":189,"binary":false,"changes":213,"status":"modified"}]}