{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -48,0 +48,7 @@\n+    private static Throwable agentError;\n+\n+    public static void checkErrors() {\n+        if (agentError != null) {\n+            throw new RuntimeException(\"Agent error\", agentError);\n+        }\n+    }\n@@ -90,0 +97,3 @@\n+                    if (agentError == null) {\n+                        agentError = ex;\n+                    }\n@@ -92,2 +102,1 @@\n-                    System.err.println(\"Returning bad class file, to cause test failure\");\n-                    return new byte[0];\n+                    return null;\n","filename":"test\/jdk\/java\/lang\/instrument\/NativeMethodPrefixAgent.java","additions":12,"deletions":3,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2006, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,2 @@\n+        NativeMethodPrefixAgent.checkErrors();\n+\n","filename":"test\/jdk\/java\/lang\/instrument\/NativeMethodPrefixApp.java","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2014, 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2014, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -127,1 +127,1 @@\n-        instrumentingVisitor = new ClassVisitor(Opcodes.ASM7, instrumentingVisitor) {\n+        instrumentingVisitor = new ClassVisitor(Opcodes.ASM9, instrumentingVisitor) {\n","filename":"test\/jdk\/java\/lang\/instrument\/asmlib\/Instrumentor.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}