{"files":[{"patch":"@@ -0,0 +1,81 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jfr.api.consumer.log;\n+\n+import jdk.jfr.Event;\n+import jdk.jfr.FlightRecorder;\n+import jdk.jfr.Period;\n+import jdk.jfr.Recording;\n+import jdk.jfr.StackTrace;\n+\n+\/**\n+ * @test\n+ * @summary Tests that large output is truncated\n+ * @key jfr\n+ * @requires vm.hasJFR\n+ * @library \/test\/lib\n+ * @build jdk.jfr.api.consumer.log.LogAnalyzer\n+ * @run main\/othervm\n+ *     -Xlog:jfr+event*=debug:file=truncate.log\n+ *     jdk.jfr.api.consumer.log.TestTruncation\n+ *\/\n+public class TestTruncation {\n+\n+    @StackTrace(false) \/\/ Avoids '...' from stack trace truncation\n+    @Period(\"1 s\")\n+    static class LargeEvent extends Event {\n+        String message1;\n+        String message2;\n+        String message3;\n+        String message4;\n+        String message5;\n+        String message6;\n+        String message7;\n+        String message8;\n+        String message9;\n+        String message10;\n+    }\n+\n+    public static void main(String... args) throws Exception {\n+        FlightRecorder.addPeriodicEvent(LargeEvent.class, () -> {\n+            String text = \"#\".repeat(10_000);\n+            LargeEvent event = new LargeEvent();\n+            event.message1 = text;\n+            event.message2 = text;\n+            event.message3 = text;\n+            event.message4 = text;\n+            event.message5 = text;\n+            event.message6 = text;\n+            event.message7 = text;\n+            event.message8 = text;\n+            event.message9 = text;\n+            event.message10 = text;\n+            event.commit();\n+        });\n+        LogAnalyzer la = new LogAnalyzer(\"truncate.log\");\n+        try (Recording r = new Recording()) {\n+            r.start();\n+            la.await(\"...\");\n+        }\n+    }\n+}\n","filename":"test\/jdk\/jdk\/jfr\/api\/consumer\/log\/TestTruncation.java","additions":81,"deletions":0,"binary":false,"changes":81,"status":"added"}]}