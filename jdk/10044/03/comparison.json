{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2016, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2016, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -65,2 +65,5 @@\n-    \/\/ cached hash of this module to avoid needing to compute it many times\n-    private byte[] cachedHash;\n+    \/\/ Single-slot cache of this module's hash to avoid needing to compute\n+    \/\/ it many times. For correctness under concurrent updates, we need to\n+    \/\/ wrap the fields updated at the same time with a record.\n+    private record CachedHash(byte[] hash, String algorithm) {}\n+    private CachedHash cachedHash;\n@@ -142,4 +145,6 @@\n-        byte[] result = cachedHash;\n-        if (result != null)\n-            return result;\n-        if (hasher == null)\n+        CachedHash ch = cachedHash;\n+        if (ch != null && ch.algorithm().equals(algorithm)) {\n+            return ch.hash();\n+        }\n+\n+        if (hasher == null) {\n@@ -147,2 +152,4 @@\n-        cachedHash = result = hasher.generate(algorithm);\n-        return result;\n+        }\n+        byte[] hash = hasher.generate(algorithm);\n+        cachedHash = new CachedHash(hash, algorithm);\n+        return hash;\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/module\/ModuleReferenceImpl.java","additions":16,"deletions":9,"binary":false,"changes":25,"status":"modified"}]}