{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -262,1 +262,3 @@\n-        if (lastRules.size() > 16) {\n+        Object[] temp = lastRules.toArray();\n+        ZoneOffsetTransitionRule[] rulesArray = Arrays.copyOf(temp, temp.length, ZoneOffsetTransitionRule[].class);\n+        if (rulesArray.length > 16) {\n@@ -265,1 +267,1 @@\n-        this.lastRules = lastRules.toArray(new ZoneOffsetTransitionRule[lastRules.size()]);\n+        this.lastRules = rulesArray;\n","filename":"src\/java.base\/share\/classes\/java\/time\/zone\/ZoneRules.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,85 @@\n+\/*\n+ * Copyright (c) 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package test.java.time.zone;\n+\n+import java.time.*;\n+import java.time.zone.*;\n+import java.util.*;\n+\n+import org.testng.annotations.Test;\n+import static org.testng.Assert.assertEquals;\n+import static org.testng.Assert.assertThrows;\n+\n+\/**\n+ * @summary ZoneRules invariants can be broken.\n+ *\n+ * @bug 8246788\n+ *\/\n+@Test\n+public class TestMutableZoneRules {\n+    static final ZoneOffset offset = ZoneOffset.ofHoursMinutes(1, 30);\n+\n+    static final ZoneOffsetTransitionRule rule1 =\n+        ZoneOffsetTransitionRule.of(Month.APRIL, 2, DayOfWeek.TUESDAY, LocalTime.MIN, true,\n+                ZoneOffsetTransitionRule.TimeDefinition.UTC, offset, offset, offset);\n+\n+    static final ZoneOffsetTransitionRule rule2 =\n+        ZoneOffsetTransitionRule.of(Month.MARCH, 2, DayOfWeek.MONDAY, LocalTime.MIN, true,\n+                ZoneOffsetTransitionRule.TimeDefinition.UTC, offset, offset, offset);\n+\n+    public void testMutation() {\n+        ZoneOffsetTransitionRule[] array = { rule1 };\n+        ZoneRules zr1 = ZoneRules.of(offset, offset, List.of(), List.of(), List.of(rule1));\n+        ZoneRules zr2 = ZoneRules.of(offset, offset, List.of(), List.of(), new TestList(array, array.length));\n+\n+        assertEquals(zr2, zr1);\n+        array[0] = rule2;\n+        assertEquals(zr2, zr1);\n+    }\n+\n+    public void testLength() {\n+        ZoneOffsetTransitionRule[] array = new ZoneOffsetTransitionRule[17];\n+        Arrays.setAll(array, i -> rule1);\n+\n+        assertThrows(IllegalArgumentException.class,\n+            () -> ZoneRules.of(offset, offset, List.of(), List.of(), new TestList(array, 1)));\n+    }\n+\n+    static class TestList extends AbstractList<ZoneOffsetTransitionRule> {\n+        final ZoneOffsetTransitionRule[] array;\n+        final int size;\n+\n+        TestList(ZoneOffsetTransitionRule[] array, int size) {\n+            this.array = array;\n+            this.size = size;\n+        }\n+\n+        public int size()                           { return size; }\n+        public ZoneOffsetTransitionRule get(int i)  { return array[i]; }\n+        public Object[] toArray()                   { return array; }\n+\n+        @SuppressWarnings(\"unchecked\")\n+        public <T> T[] toArray(T[] a)               { return (T[]) array; }\n+    }\n+}\n","filename":"test\/jdk\/java\/time\/test\/java\/time\/zone\/TestMutableZoneRules.java","additions":85,"deletions":0,"binary":false,"changes":85,"status":"added"}]}