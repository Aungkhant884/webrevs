{"files":[{"patch":"@@ -385,0 +385,11 @@\n+\/\/ Calculates the total number of committed words over all chunks. Walks chunks.\n+size_t ChunkManager::calc_committed_word_size() const {\n+  MutexLocker fcl(MetaspaceExpand_lock, Mutex::_no_safepoint_check_flag);\n+  return calc_committed_word_size_locked();\n+}\n+\n+size_t ChunkManager::calc_committed_word_size_locked() const {\n+  assert_lock_strong(MetaspaceExpand_lock);\n+  return _chunks.calc_committed_word_size();\n+}\n+\n@@ -390,1 +401,1 @@\n-    out->_committed_word_size[l] += _chunks.committed_word_size_at_level(l);\n+    out->_committed_word_size[l] += _chunks.calc_committed_word_size_at_level(l);\n@@ -421,2 +432,2 @@\n-  st->print_cr(\"cm %s: %d chunks, total word size: \" SIZE_FORMAT \", committed word size: \" SIZE_FORMAT, _name,\n-               total_num_chunks(), total_word_size(), _chunks.committed_word_size());\n+  st->print_cr(\"cm %s: %d chunks, total word size: \" SIZE_FORMAT \".\", _name,\n+               total_num_chunks(), total_word_size());\n","filename":"src\/hotspot\/share\/memory\/metaspace\/chunkManager.cpp","additions":14,"deletions":3,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -110,0 +110,3 @@\n+  \/\/ Calculates the total number of committed words over all chunks. Walks chunks.\n+  size_t calc_committed_word_size_locked() const;\n+\n@@ -170,2 +173,2 @@\n-  \/\/ Returns number of committed words in all free chunks.\n-  size_t total_committed_word_size() const  { return _chunks.committed_word_size(); }\n+  \/\/ Calculates the total number of committed words over all chunks. Walks chunks.\n+  size_t calc_committed_word_size() const;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/chunkManager.hpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -34,0 +34,9 @@\n+\/\/ Calculates total number of committed words over all chunks (walks chunks).\n+size_t FreeChunkList::calc_committed_word_size() const {\n+  size_t s = 0;\n+  for (const Metachunk* c = _first; c != NULL; c = c->next()) {\n+    s += c->committed_words();\n+  }\n+  return s;\n+}\n+\n@@ -63,1 +72,0 @@\n-    size_t committed = 0;\n@@ -74,1 +82,0 @@\n-      committed += c->committed_words();\n@@ -78,1 +85,0 @@\n-    _committed_word_size.check(committed);\n@@ -93,2 +99,2 @@\n-\/\/ Returns total committed size in all lists\n-size_t FreeChunkListVector::committed_word_size() const {\n+\/\/ Calculates total number of committed words over all chunks (walks chunks).\n+size_t FreeChunkListVector::calc_committed_word_size() const {\n@@ -97,1 +103,1 @@\n-    sum += list_for_level(l)->committed_word_size();\n+    sum += calc_committed_word_size_at_level(l);\n@@ -102,0 +108,4 @@\n+size_t FreeChunkListVector::calc_committed_word_size_at_level(chunklevel_t lvl) const {\n+  return list_for_level(lvl)->calc_committed_word_size();\n+}\n+\n@@ -149,2 +159,2 @@\n-  st->print_cr(\"total chunks: %d, total word size: \" SIZE_FORMAT \", committed word size: \" SIZE_FORMAT \".\",\n-               num_chunks(), word_size(), committed_word_size());\n+  st->print_cr(\"total chunks: %d, total word size: \" SIZE_FORMAT \".\",\n+               num_chunks(), word_size());\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeChunkList.cpp","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -73,1 +73,0 @@\n-  SizeCounter _committed_word_size;\n@@ -132,1 +131,0 @@\n-    _committed_word_size.decrement_by(c->committed_words());\n@@ -147,1 +145,0 @@\n-    _committed_word_size.increment_by(c->committed_words());\n@@ -189,2 +186,2 @@\n-  \/\/ Returns total committed word size\n-  size_t committed_word_size() const { return _committed_word_size.get(); }\n+  \/\/ Calculates total number of committed words over all chunks (walks chunks).\n+  size_t calc_committed_word_size() const;\n@@ -229,5 +226,0 @@\n-  \/\/ Returns number of chunks for a given level.\n-  size_t committed_word_size_at_level(chunklevel_t lvl) const {\n-    return list_for_level(lvl)->committed_word_size();\n-  }\n-\n@@ -250,1 +242,1 @@\n-  \/\/ Returns total size in all lists (regardless of commit state of underlying memory)\n+  \/\/ Returns total size in all lists (including uncommitted areas)\n@@ -253,2 +245,5 @@\n-  \/\/ Returns total committed size in all lists\n-  size_t committed_word_size() const;\n+  \/\/ Calculates total number of committed words over all chunks (walks chunks).\n+  size_t calc_committed_word_size_at_level(chunklevel_t lvl) const;\n+\n+  \/\/ Calculates total number of committed words over all chunks (walks chunks).\n+  size_t calc_committed_word_size() const;\n","filename":"src\/hotspot\/share\/memory\/metaspace\/freeChunkList.hpp","additions":8,"deletions":13,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -115,1 +115,1 @@\n-    EXPECT_EQ(lst.committed_word_size(), committed_cnt.total_size());\n+    EXPECT_EQ(lst.calc_committed_word_size(), committed_cnt.total_size());\n@@ -140,1 +140,1 @@\n-      EXPECT_EQ(lst.committed_word_size(), committed_cnt.total_size());\n+      EXPECT_EQ(lst.calc_committed_word_size(), committed_cnt.total_size());\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metachunklist.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -507,1 +507,1 @@\n-  EXPECT_0(context.cm().total_committed_word_size());\n+  EXPECT_0(context.cm().calc_committed_word_size());\n@@ -518,1 +518,1 @@\n-  EXPECT_GT(context.cm().total_committed_word_size(), (size_t)0);\n+  EXPECT_GT(context.cm().calc_committed_word_size(), (size_t)0);\n","filename":"test\/hotspot\/gtest\/metaspace\/test_metaspacearena.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}