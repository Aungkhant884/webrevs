{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -194,1 +194,3 @@\n-public abstract class Buffer {\n+public abstract sealed class Buffer\n+    permits ByteBuffer, CharBuffer, DoubleBuffer, FloatBuffer, IntBuffer,\n+        LongBuffer, ShortBuffer {\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Buffer.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,0 +34,5 @@\n+#if[rw]\n+sealed\n+#else[rw]\n+final\n+#end[rw]\n@@ -36,0 +41,3 @@\n+#if[rw]\n+    permits ByteBufferAs$Type$BufferR$BO$\n+#end[rw]\n","filename":"src\/java.base\/share\/classes\/java\/nio\/ByteBufferAs-X-Buffer.java.template","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -40,0 +40,5 @@\n+#if[rw]\n+sealed\n+#else[rw]\n+final\n+#end[rw]\n@@ -47,0 +52,3 @@\n+#if[rw]\n+    permits Direct$Type$BufferR$BO$\n+#end[rw]\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Direct-X-Buffer.java.template","additions":9,"deletions":1,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -43,0 +43,5 @@\n+#if[rw]\n+sealed\n+#else[rw]\n+final\n+#end[rw]\n@@ -45,0 +50,3 @@\n+#if[rw]\n+    permits Heap$Type$BufferR\n+#end[rw]\n","filename":"src\/java.base\/share\/classes\/java\/nio\/Heap-X-Buffer.java.template","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -73,1 +73,1 @@\n-public abstract class MappedByteBuffer\n+public abstract sealed class MappedByteBuffer\n@@ -75,0 +75,1 @@\n+    permits DirectByteBuffer\n","filename":"src\/java.base\/share\/classes\/java\/nio\/MappedByteBuffer.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-class StringCharBuffer                                  \/\/ package-private\n+final class StringCharBuffer                                  \/\/ package-private\n","filename":"src\/java.base\/share\/classes\/java\/nio\/StringCharBuffer.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -267,1 +267,1 @@\n-public abstract class $Type$Buffer\n+public abstract sealed class $Type$Buffer\n@@ -270,0 +270,10 @@\n+    permits\n+#if[byte]\n+    Heap$Type$Buffer, MappedByteBuffer\n+#else[byte]\n+#if[char]\n+    StringCharBuffer,\n+#end[char]\n+    Heap$Type$Buffer, Direct$Type$BufferS, Direct$Type$BufferU,\n+    ByteBufferAs$Type$BufferB, ByteBufferAs$Type$BufferL\n+#end[byte]\n","filename":"src\/java.base\/share\/classes\/java\/nio\/X-Buffer.java.template","additions":12,"deletions":2,"binary":false,"changes":14,"status":"modified"}]}