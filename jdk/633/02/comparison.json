{"files":[{"patch":"@@ -392,1 +392,1 @@\n-jdk.incubator.jpackage_COPY += .gif .png .txt .spec .script .prerm .preinst \\\n+jdk.jpackage_COPY += .gif .png .txt .spec .script .prerm .preinst \\\n@@ -396,1 +396,1 @@\n-jdk.incubator.jpackage_CLEAN += .properties\n+jdk.jpackage_CLEAN += .properties\n","filename":"make\/CompileJavaModules.gmk","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    jdk.incubator.jpackage \\\n+    jdk.jpackage \\\n@@ -148,1 +148,1 @@\n-    jdk.incubator.jpackage \\\n+    jdk.jpackage \\\n@@ -231,1 +231,1 @@\n-  MODULES_FILTER += jdk.incubator.jpackage\n+  MODULES_FILTER += jdk.jpackage\n","filename":"make\/common\/Modules.gmk","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -34,1 +34,1 @@\n-      $(SUPPORT_OUTPUTDIR)\/gensrc\/$(MODULE)\/jdk\/incubator\/jpackage\/internal\/resources\/entitlements.plist\n+      $(SUPPORT_OUTPUTDIR)\/gensrc\/$(MODULE)\/jdk\/jpackage\/internal\/resources\/entitlements.plist\n","filename":"make\/modules\/jdk.jpackage\/Gensrc.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"make\/modules\/jdk.incubator.jpackage\/Gensrc.gmk","status":"renamed"},{"patch":"@@ -29,1 +29,1 @@\n-    MAIN_CLASS := jdk.incubator.jpackage.main.Main, \\\n+    MAIN_CLASS := jdk.jpackage.main.Main, \\\n","filename":"make\/modules\/jdk.jpackage\/Launcher.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"make\/modules\/jdk.incubator.jpackage\/Launcher.gmk","status":"renamed"},{"patch":"@@ -32,2 +32,2 @@\n-    $(call FindSrcDirsForComponent, jdk.incubator.jpackage, applauncher) \\\n-    $(call FindSrcDirsForComponent, jdk.incubator.jpackage, common)\n+    $(call FindSrcDirsForComponent, jdk.jpackage, applauncher) \\\n+    $(call FindSrcDirsForComponent, jdk.jpackage, common)\n@@ -45,1 +45,1 @@\n-JPACKAGE_OUTPUT_DIR := $(JDK_OUTPUTDIR)\/modules\/$(MODULE)\/jdk\/incubator\/jpackage\/internal\/resources\n+JPACKAGE_OUTPUT_DIR := $(JDK_OUTPUTDIR)\/modules\/$(MODULE)\/jdk\/jpackage\/internal\/resources\n@@ -76,1 +76,1 @@\n-      EXTRA_SRC := jdk.incubator.jpackage:common, \\\n+      EXTRA_SRC := jdk.jpackage:common, \\\n@@ -102,2 +102,2 @@\n-      $(call FindSrcDirsForComponent, jdk.incubator.jpackage, msiwrapper) \\\n-      $(call FindSrcDirsForComponent, jdk.incubator.jpackage, common)\n+      $(call FindSrcDirsForComponent, jdk.jpackage, msiwrapper) \\\n+      $(call FindSrcDirsForComponent, jdk.jpackage, common)\n","filename":"make\/modules\/jdk.jpackage\/Lib.gmk","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"make\/modules\/jdk.incubator.jpackage\/Lib.gmk","status":"renamed"},{"patch":"@@ -699,1 +699,1 @@\n-            {$OTHER,$THIS}\/support\/native\/jdk.incubator.jpackage\/* \\\n+            {$OTHER,$THIS}\/support\/native\/jdk.jpackage\/* \\\n","filename":"make\/scripts\/compare.sh","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -212,1 +212,1 @@\n-        jdk.incubator.jpackage;\n+        jdk.jpackage;\n","filename":"src\/java.base\/share\/classes\/module-info.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-provides jdk.incubator.jpackage.internal.Bundler with\n-    jdk.incubator.jpackage.internal.LinuxAppBundler,\n-    jdk.incubator.jpackage.internal.LinuxDebBundler,\n-    jdk.incubator.jpackage.internal.LinuxRpmBundler;\n-\n","filename":"src\/jdk.incubator.jpackage\/linux\/classes\/module-info.java.extra","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,31 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-provides jdk.incubator.jpackage.internal.Bundler with\n-    jdk.incubator.jpackage.internal.MacAppBundler,\n-    jdk.incubator.jpackage.internal.MacAppStoreBundler,\n-    jdk.incubator.jpackage.internal.MacDmgBundler,\n-    jdk.incubator.jpackage.internal.MacPkgBundler;\n-\n","filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/module-info.java.extra","additions":0,"deletions":31,"binary":false,"changes":31,"status":"deleted"},{"patch":"@@ -1,106 +0,0 @@\n-\/*\n- * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-package jdk.incubator.jpackage.internal;\n-\n-import java.nio.file.Path;\n-import java.text.MessageFormat;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Optional;\n-import java.util.stream.Collectors;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n-\n-final class FileAssociation {\n-    void verify() {\n-        if (extensions.isEmpty()) {\n-            Log.error(I18N.getString(\n-                    \"message.creating-association-with-null-extension\"));\n-        }\n-    }\n-\n-    static void verify(List<FileAssociation> associations) throws ConfigException {\n-        \/\/ only one mime type per association, at least one file extension\n-        int assocIdx = 0;\n-        for (var assoc : associations) {\n-            ++assocIdx;\n-            if (assoc.mimeTypes.isEmpty()) {\n-                String msgKey = \"error.no-content-types-for-file-association\";\n-                throw new ConfigException(\n-                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n-                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n-            }\n-\n-            if (assoc.mimeTypes.size() > 1) {\n-                String msgKey = \"error.too-many-content-types-for-file-association\";\n-                throw new ConfigException(\n-                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n-                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n-            }\n-\n-            assoc.verify();\n-        }\n-    }\n-\n-    static List<FileAssociation> fetchFrom(Map<String, ? super Object> params) {\n-        String launcherName = APP_NAME.fetchFrom(params);\n-\n-        return FILE_ASSOCIATIONS.fetchFrom(params).stream().filter(\n-                Objects::nonNull).map(fa -> {\n-                    FileAssociation assoc = new FileAssociation();\n-\n-                    assoc.launcherPath = Path.of(launcherName);\n-                    assoc.description = Optional.ofNullable(\n-                            FA_DESCRIPTION.fetchFrom(fa))\n-                            .orElse(launcherName + \" association\");\n-                    assoc.extensions = Optional.ofNullable(\n-                            FA_EXTENSIONS.fetchFrom(fa))\n-                            .orElse(Collections.emptyList());\n-                    assoc.mimeTypes = Optional.ofNullable(\n-                            FA_CONTENT_TYPE.fetchFrom(fa))\n-                            .orElse(Collections.emptyList());\n-\n-                    Path icon = FA_ICON.fetchFrom(fa);\n-                    if (icon != null) {\n-                        assoc.iconPath = icon;\n-                    }\n-\n-                    return assoc;\n-                }).collect(Collectors.toList());\n-    }\n-\n-    Path launcherPath;\n-    Path iconPath;\n-    List<String> mimeTypes;\n-    List<String> extensions;\n-    String description;\n-}\n","filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/FileAssociation.java","additions":0,"deletions":106,"binary":false,"changes":106,"status":"deleted"},{"patch":"@@ -1,57 +0,0 @@\n-\/*\n- * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-package jdk.incubator.jpackage.internal;\n-\n-import java.util.ResourceBundle;\n-\n-class I18N {\n-\n-    static String getString(String key) {\n-        if (PLATFORM.containsKey(key)) {\n-            return PLATFORM.getString(key);\n-        }\n-        return SHARED.getString(key);\n-    }\n-\n-    private static final ResourceBundle SHARED = ResourceBundle.getBundle(\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n-\n-    private static final ResourceBundle PLATFORM;\n-\n-    static {\n-        if (Platform.isLinux()) {\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.incubator.jpackage.internal.resources.LinuxResources\");\n-        } else if (Platform.isWindows()) {\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.incubator.jpackage.internal.resources.WinResources\");\n-        } else if (Platform.isMac()) {\n-            PLATFORM = ResourceBundle.getBundle(\n-                    \"jdk.incubator.jpackage.internal.resources.MacResources\");\n-        } else {\n-            throw new IllegalStateException(\"Unknwon platform\");\n-        }\n-    }\n-}\n","filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/I18N.java","additions":0,"deletions":57,"binary":false,"changes":57,"status":"deleted"},{"patch":"@@ -1,62 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/**\n- * Defines the Java Packaging tool, jpackage.\n- *\n- * <p>jpackage is a tool for generating self-contained application bundles.\n- *\n- * <p> This module provides the equivalent of command-line access to <em>jpackage<\/em>\n- * via the {@link java.util.spi.ToolProvider ToolProvider} SPI.\n- * Instances of the tool can be obtained by calling\n- * {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst}\n- * or the {@link java.util.ServiceLoader service loader} with the name\n- * {@code \"jpackage\"}.\n- *\n- * @implNote The {@code jpackage} tool is not thread-safe. An application\n- * should not call either of the\n- * {@link java.util.spi.ToolProvider ToolProvider} {@code run} methods\n- * concurrently, even with separate {@code \"jpackage\"} {@code ToolProvider}\n- * instances, or undefined behavior may result.\n- *\n- *\n- * @moduleGraph\n- * @since 14\n- *\/\n-\n-module jdk.incubator.jpackage {\n-    requires jdk.jlink;\n-\n-    requires java.desktop;\n-\n-    uses jdk.incubator.jpackage.internal.Bundler;\n-    uses jdk.incubator.jpackage.internal.Bundlers;\n-\n-    provides jdk.incubator.jpackage.internal.Bundlers with\n-        jdk.incubator.jpackage.internal.BasicBundlers;\n-\n-    provides java.util.spi.ToolProvider\n-        with jdk.incubator.jpackage.internal.JPackageToolProvider;\n-}\n","filename":"src\/jdk.incubator.jpackage\/share\/classes\/module-info.java","additions":0,"deletions":62,"binary":false,"changes":62,"status":"deleted"},{"patch":"@@ -1,30 +0,0 @@\n-\/*\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-provides jdk.incubator.jpackage.internal.Bundler with\n-    jdk.incubator.jpackage.internal.WinAppBundler,\n-    jdk.incubator.jpackage.internal.WinExeBundler,\n-    jdk.incubator.jpackage.internal.WinMsiBundler;\n-\n","filename":"src\/jdk.incubator.jpackage\/windows\/classes\/module-info.java.extra","additions":0,"deletions":30,"binary":false,"changes":30,"status":"deleted"},{"patch":"@@ -1,221 +0,0 @@\n-\/*\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"JniUtils.h\"\n-#include \"FileUtils.h\"\n-#include \"ErrorHandling.h\"\n-\n-#pragma comment(lib, \"advapi32\")\n-\n-namespace {\n-\n-std::wstring GetLongPath(const std::wstring& path) {\n-    const std::wstring cleanPath = FileUtils::removeTrailingSlash(path);\n-    if (cleanPath.size() != path.size()) {\n-        return GetLongPath(cleanPath);\n-    }\n-\n-    enum { BUFFER_SIZE = 4096 };\n-\n-    std::wstring result;\n-\n-    TCHAR *pBuffer = new TCHAR[BUFFER_SIZE];\n-    if (pBuffer != NULL) {\n-        DWORD dwResult = GetLongPathName(path.c_str(), pBuffer, BUFFER_SIZE);\n-        if (dwResult > 0 && dwResult < BUFFER_SIZE) {\n-            result = std::wstring(pBuffer);\n-        } else {\n-            delete [] pBuffer;\n-            pBuffer = new TCHAR[dwResult];\n-            if (pBuffer != NULL) {\n-                DWORD dwResult2 =\n-                        GetLongPathName(path.c_str(), pBuffer, dwResult);\n-                if (dwResult2 == (dwResult - 1)) {\n-                    result = std::wstring(pBuffer);\n-                }\n-            }\n-        }\n-\n-        if (pBuffer != NULL) {\n-            delete [] pBuffer;\n-        }\n-    }\n-\n-    return result;\n-}\n-\n-} \/\/ namespace\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-#undef jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE\n-#define jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE 1L\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    readDwordValue\n-     * Signature: (ILjava\/lang\/String;Ljava\/lang\/String;I)I\n-     *\/\n-    JNIEXPORT jint JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_readDwordValue(\n-            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey,\n-            jstring jValue, jint defaultValue) {\n-        jint jResult = defaultValue;\n-\n-        JP_TRY;\n-\n-        if (key != jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n-            JP_THROW(\"Inavlid Windows registry key id\");\n-        }\n-\n-        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n-        const std::wstring value = jni::toUnicodeString(pEnv, jValue);\n-\n-        HKEY hSubKey = NULL;\n-        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n-                KEY_QUERY_VALUE, &hSubKey);\n-        if (status == ERROR_SUCCESS) {\n-            DWORD dwValue = 0;\n-            DWORD cbData = sizeof (DWORD);\n-            status = RegQueryValueEx(hSubKey, value.c_str(), NULL, NULL,\n-                    (LPBYTE) & dwValue, &cbData);\n-            if (status == ERROR_SUCCESS) {\n-                jResult = (jint) dwValue;\n-            }\n-\n-            RegCloseKey(hSubKey);\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return jResult;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    openRegistryKey\n-     * Signature: (ILjava\/lang\/String;)J\n-     *\/\n-    JNIEXPORT jlong JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_openRegistryKey(\n-            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey) {\n-\n-        JP_TRY;\n-\n-        if (key != jdk_incubator_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n-            JP_THROW(\"Inavlid Windows registry key id\");\n-        }\n-\n-        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n-        HKEY hSubKey = NULL;\n-        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n-                KEY_QUERY_VALUE, &hSubKey);\n-        if (status == ERROR_SUCCESS) {\n-            return (jlong)hSubKey;\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return 0;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    enumRegistryValue\n-     * Signature: (JI)Ljava\/lang\/String;\n-     *\/\n-    JNIEXPORT jstring JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_enumRegistryValue(\n-            JNIEnv *pEnv, jclass c, jlong lKey, jint jIndex) {\n-\n-        JP_TRY;\n-\n-        \/\/ Max value name size per MSDN plus NULL\n-        enum { VALUE_NAME_SIZE = 16384 };\n-\n-        HKEY hKey = (HKEY)lKey;\n-        TCHAR valueName[VALUE_NAME_SIZE] = {0}; \/\/ Max size per MSDN plus NULL\n-        DWORD cchValueName = VALUE_NAME_SIZE;\n-        LSTATUS status = RegEnumValue(hKey, (DWORD)jIndex, valueName,\n-                &cchValueName, NULL, NULL, NULL, NULL);\n-        if (status == ERROR_SUCCESS) {\n-            size_t chLength = 0;\n-            if (StringCchLength(valueName, VALUE_NAME_SIZE, &chLength)\n-                    == S_OK) {\n-                return jni::toJString(pEnv, std::wstring(valueName, chLength));\n-            }\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return NULL;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    closeRegistryKey\n-     * Signature: (J)V\n-     *\/\n-    JNIEXPORT void JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_closeRegistryKey(\n-            JNIEnv *pEnc, jclass c, jlong lKey) {\n-        HKEY hKey = (HKEY)lKey;\n-        RegCloseKey(hKey);\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WindowsRegistry\n-     * Method:    comparePaths\n-     * Signature: (Ljava\/lang\/String;Ljava\/lang\/String;)Z\n-     *\/\n-     JNIEXPORT jboolean JNICALL\n-            Java_jdk_incubator_jpackage_internal_WindowsRegistry_comparePaths(\n-            JNIEnv *pEnv, jclass c, jstring jPath1, jstring jPath2) {\n-\n-         JP_TRY;\n-\n-         std::wstring path1 = jni::toUnicodeString(pEnv, jPath1);\n-         std::wstring path2 = jni::toUnicodeString(pEnv, jPath2);\n-\n-         path1 = GetLongPath(path1);\n-         path2 = GetLongPath(path2);\n-\n-         if (path1.empty() || path2.empty()) {\n-             return JNI_FALSE;\n-         }\n-\n-         if (tstrings::equals(path1, path2, tstrings::IGNORE_CASE)) {\n-             return JNI_TRUE;\n-         }\n-\n-         JP_CATCH_ALL;\n-\n-         return JNI_FALSE;\n-     }\n-\n-#ifdef __cplusplus\n-}\n-#endif\n","filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/WindowsRegistry.cpp","additions":0,"deletions":221,"binary":false,"changes":221,"status":"deleted"},{"patch":"@@ -1,155 +0,0 @@\n-\/*\n- * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.  Oracle designates this\n- * particular file as subject to the \"Classpath\" exception as provided\n- * by Oracle in the LICENSE file that accompanied this code.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-#include \"ResourceEditor.h\"\n-#include \"ErrorHandling.h\"\n-#include \"IconSwap.h\"\n-#include \"VersionInfo.h\"\n-#include \"JniUtils.h\"\n-\n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    lockResource\n-     * Signature: (Ljava\/lang\/String;)J\n-     *\/\n-    JNIEXPORT jlong JNICALL\n-        Java_jdk_incubator_jpackage_internal_ExecutableRebrander_lockResource(\n-            JNIEnv *pEnv, jclass c, jstring jExecutable) {\n-\n-        JP_TRY;\n-\n-        const std::wstring executable = jni::toUnicodeString(pEnv, jExecutable);\n-\n-        return reinterpret_cast<jlong>(\n-                ResourceEditor::FileLock(executable).ownHandle(false).get());\n-\n-        JP_CATCH_ALL;\n-\n-        return 0;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    unlockResource\n-     * Signature: (J;)V\n-     *\/\n-    JNIEXPORT void JNICALL\n-        Java_jdk_incubator_jpackage_internal_ExecutableRebrander_unlockResource(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock) {\n-\n-        JP_TRY;\n-        ResourceEditor::FileLock(\n-                reinterpret_cast<HANDLE>(jResourceLock)).ownHandle(true);\n-        JP_CATCH_ALL;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    iconSwap\n-     * Signature: (J;Ljava\/lang\/String;)I\n-     *\/\n-    JNIEXPORT jint JNICALL\n-            Java_jdk_incubator_jpackage_internal_ExecutableRebrander_iconSwap(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jIconTarget) {\n-\n-        JP_TRY;\n-\n-        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n-\n-        const std::wstring iconTarget = jni::toUnicodeString(pEnv, jIconTarget);\n-\n-        if (ChangeIcon(lock.get(), iconTarget)) {\n-            return 0;\n-        }\n-\n-        JP_CATCH_ALL;\n-\n-        return 1;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_ExecutableRebrander\n-     * Method:    versionSwap\n-     * Signature: (J;[Ljava\/lang\/String;)I\n-     *\/\n-    JNIEXPORT jint JNICALL\n-            Java_jdk_incubator_jpackage_internal_ExecutableRebrander_versionSwap(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock,\n-            jobjectArray jExecutableProperties) {\n-\n-        JP_TRY;\n-\n-        const tstring_array props = jni::toUnicodeStringArray(pEnv,\n-                jExecutableProperties);\n-\n-        VersionInfo vi;\n-\n-        tstring_array::const_iterator it = props.begin();\n-        tstring_array::const_iterator end = props.end();\n-        for (; it != end; ++it) {\n-            const tstring name = *it;\n-            const tstring value = *++it;\n-            vi.setProperty(name, value);\n-        }\n-\n-        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n-        vi.apply(lock);\n-\n-        return 0;\n-\n-        JP_CATCH_ALL;\n-\n-        return 1;\n-    }\n-\n-    \/*\n-     * Class:     jdk_incubator_jpackage_internal_WinExeBundler\n-     * Method:    embedMSI\n-     * Signature: (J;Ljava\/lang\/String;)I\n-     *\/\n-    JNIEXPORT jint JNICALL Java_jdk_incubator_jpackage_internal_WinExeBundler_embedMSI(\n-            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jmsiPath) {\n-\n-        JP_TRY;\n-\n-        const std::wstring msiPath = jni::toUnicodeString(pEnv, jmsiPath);\n-\n-        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n-        ResourceEditor().id(L\"msi\").type(RT_RCDATA).apply(lock, msiPath);\n-\n-        return 0;\n-\n-        JP_CATCH_ALL;\n-\n-        return 1;\n-    }\n-\n-#ifdef __cplusplus\n-}\n-#endif\n","filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/jpackage.cpp","additions":0,"deletions":155,"binary":false,"changes":155,"status":"deleted"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -49,10 +49,10 @@\n-import jdk.incubator.jpackage.internal.Arguments.CLIOptions;\n-import static jdk.incubator.jpackage.internal.LinuxAppImageBuilder.DEFAULT_ICON;\n-import static jdk.incubator.jpackage.internal.LinuxAppImageBuilder.ICON_PNG;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import jdk.jpackage.internal.Arguments.CLIOptions;\n+import static jdk.jpackage.internal.LinuxAppImageBuilder.DEFAULT_ICON;\n+import static jdk.jpackage.internal.LinuxAppImageBuilder.ICON_PNG;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/DesktopIntegration.java","additions":11,"deletions":11,"binary":false,"changes":22,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/DesktopIntegration.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -156,1 +156,1 @@\n-    \/\/ ldd: warning: you do not have execution permission for `\/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt_headless.so'\n+    \/\/ ldd: warning: you do not have execution permission for `\/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt_headless.so'\n@@ -158,1 +158,1 @@\n-    \/\/  libawt.so => \/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt.so (0x00007f4e00c75000)\n+    \/\/  libawt.so => \/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libawt.so (0x00007f4e00c75000)\n@@ -160,1 +160,1 @@\n-    \/\/  libjava.so => \/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libjava.so (0x00007f4e00c41000)\n+    \/\/  libjava.so => \/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libjava.so (0x00007f4e00c41000)\n@@ -166,1 +166,1 @@\n-    \/\/  libverify.so => \/tmp\/jdk.incubator.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libverify.so (0x00007f4e00c2e000)\n+    \/\/  libverify.so => \/tmp\/jdk.jpackage17911687595930080396\/images\/opt\/simplepackagetest\/lib\/runtime\/lib\/libverify.so (0x00007f4e00c2e000)\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LibProvidersLookup.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LibProvidersLookup.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxAppBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxAppBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -35,3 +35,3 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxAppImageBuilder.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -48,7 +48,7 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxDebBundler.java","additions":8,"deletions":8,"binary":false,"changes":16,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxDebBundler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -43,7 +43,7 @@\n-import static jdk.incubator.jpackage.internal.DesktopIntegration.*;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n+import static jdk.jpackage.internal.DesktopIntegration.*;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxPackageBundler.java","additions":8,"deletions":8,"binary":false,"changes":16,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxPackageBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -40,6 +40,6 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RELEASE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.RELEASE;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/LinuxRpmBundler.java","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/LinuxRpmBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/PackageProperty.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/PackageProperty.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/LinuxResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/LinuxResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/LinuxResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/LinuxResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/LinuxResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/LinuxResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/java32.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/java32.png","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.control","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.control","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.copyright","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.copyright","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.desktop","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.desktop","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.postinst","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.postinst","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.postrm","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.postrm","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.preinst","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.preinst","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.prerm","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.prerm","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/template.spec","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/template.spec","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/classes\/jdk\/jpackage\/internal\/resources\/utils.sh","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/utils.sh","status":"renamed"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+provides jdk.jpackage.internal.Bundler with\n+    jdk.jpackage.internal.LinuxAppBundler,\n+    jdk.jpackage.internal.LinuxDebBundler,\n+    jdk.jpackage.internal.LinuxRpmBundler;\n+\n","filename":"src\/jdk.jpackage\/linux\/classes\/module-info.java.extra","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Executor.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Executor.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Executor.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Executor.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/LinuxLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/LinuxLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Package.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Package.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/applauncher\/Package.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/applauncher\/Package.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/linux\/native\/common\/LinuxSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/linux\/native\/common\/LinuxSysInfo.cpp","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/CFBundleVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/CFBundleVersion.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -32,5 +32,5 @@\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n+import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppBundler.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacAppBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -52,17 +52,17 @@\n-import static jdk.incubator.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FA_ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n+import static jdk.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.MAIN_CLASS;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n@@ -73,1 +73,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppImageBuilder.java","additions":19,"deletions":19,"binary":false,"changes":38,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -38,5 +38,5 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.DEFAULT_ICNS_ICON;\n-import static jdk.incubator.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.MacAppBundler.DEVELOPER_ID_APP_SIGNING_KEY;\n+import static jdk.jpackage.internal.MacAppBundler.DEFAULT_ICNS_ICON;\n+import static jdk.jpackage.internal.MacAppBundler.BUNDLE_ID_SIGNING_PREFIX;\n@@ -47,1 +47,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacAppStoreBundler.java","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacAppStoreBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -39,4 +39,4 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacBaseInstallerBundler.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacBaseInstallerBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacCertificate.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacCertificate.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -40,3 +40,3 @@\n-import static jdk.incubator.jpackage.internal.MacAppImageBuilder.ICON_ICNS;\n-import static jdk.incubator.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.MacAppImageBuilder.ICON_ICNS;\n+import static jdk.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n@@ -44,5 +44,5 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n@@ -53,1 +53,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacDmgBundler.java","additions":10,"deletions":10,"binary":false,"changes":20,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacDmgBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -43,10 +43,10 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERBOSE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n-import static jdk.incubator.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n-import static jdk.incubator.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERBOSE;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEYCHAIN;\n+import static jdk.jpackage.internal.MacBaseInstallerBundler.SIGNING_KEY_USER;\n+import static jdk.jpackage.internal.MacAppImageBuilder.MAC_CF_BUNDLE_IDENTIFIER;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n@@ -57,1 +57,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MacResources\");\n+            \"jdk.jpackage.internal.resources.MacResources\");\n","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/MacPkgBundler.java","additions":12,"deletions":12,"binary":false,"changes":24,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/MacPkgBundler.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/DMGsetup.scpt","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/DMGsetup.scpt","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/Info-lite.plist.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/Info-lite.plist.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MacResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MacResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MacResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/Runtime-Info.plist.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/Runtime-Info.plist.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/background_dmg.tiff","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/background_dmg.tiff","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/background_pkg.png","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/background_pkg.png","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/java.icns","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/java.icns","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/lic_template.plist","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/lic_template.plist","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/postinstall.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/postinstall.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/classes\/jdk\/jpackage\/internal\/resources\/preinstall.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/preinstall.template","status":"renamed"},{"patch":"@@ -0,0 +1,31 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+provides jdk.jpackage.internal.Bundler with\n+    jdk.jpackage.internal.MacAppBundler,\n+    jdk.jpackage.internal.MacAppStoreBundler,\n+    jdk.jpackage.internal.MacDmgBundler,\n+    jdk.jpackage.internal.MacPkgBundler;\n+\n","filename":"src\/jdk.jpackage\/macosx\/classes\/module-info.java.extra","additions":31,"deletions":0,"binary":false,"changes":31,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/native\/applauncher\/MacLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/native\/applauncher\/MacLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/macosx\/native\/common\/MacSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/macosx\/native\/common\/MacSysInfo.cpp","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -32,5 +32,5 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.SOURCE_DIR;\n-import jdk.incubator.jpackage.internal.resources.ResourceLocator;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.SOURCE_DIR;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AbstractAppImageBuilder.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AbstractAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AbstractBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AbstractBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -32,2 +32,2 @@\n-import jdk.incubator.jpackage.internal.Arguments.CLIOptions;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import jdk.jpackage.internal.Arguments.CLIOptions;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AddLauncherArguments.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AddLauncherArguments.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -35,4 +35,4 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_APP_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageBundler.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AppImageBundler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -46,3 +46,3 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/AppImageFile.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/AppImageFile.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ApplicationLayout.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ApplicationLayout.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -60,1 +60,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n+            \"jdk.jpackage.internal.resources.MainResources\");\n@@ -618,1 +618,1 @@\n-    private jdk.incubator.jpackage.internal.Bundler getPlatformBundler() {\n+    private jdk.jpackage.internal.Bundler getPlatformBundler() {\n@@ -623,1 +623,1 @@\n-        for (jdk.incubator.jpackage.internal.Bundler bundler :\n+        for (jdk.jpackage.internal.Bundler bundler :\n@@ -654,1 +654,1 @@\n-        jdk.incubator.jpackage.internal.Bundler bundler = getPlatformBundler();\n+        jdk.jpackage.internal.Bundler bundler = getPlatformBundler();\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Arguments.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Arguments.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BasicBundlers.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/BasicBundlers.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -30,1 +30,1 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BundleParams.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/BundleParams.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Bundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Bundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/BundlerParamInfo.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/BundlerParamInfo.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Bundlers.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Bundlers.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -41,1 +41,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.HelpResources\");\n+            \"jdk.jpackage.internal.resources.HelpResources\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CLIHelp.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/CLIHelp.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -35,5 +35,5 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.JAVA_OPTIONS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ARGUMENTS;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.StandardBundlerParam.LAUNCHER_DATA;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.JAVA_OPTIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.ARGUMENTS;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CfgFile.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/CfgFile.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ConfigException.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ConfigException.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DeployParams.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/DeployParams.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DottedVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/DottedVersion.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Executor.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Executor.java","status":"renamed"},{"patch":"@@ -0,0 +1,106 @@\n+\/*\n+ * Copyright (c) 2019, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+package jdk.jpackage.internal;\n+\n+import java.nio.file.Path;\n+import java.text.MessageFormat;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.FILE_ASSOCIATIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_EXTENSIONS;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_CONTENT_TYPE;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.FA_DESCRIPTION;\n+\n+final class FileAssociation {\n+    void verify() {\n+        if (extensions.isEmpty()) {\n+            Log.error(I18N.getString(\n+                    \"message.creating-association-with-null-extension\"));\n+        }\n+    }\n+\n+    static void verify(List<FileAssociation> associations) throws ConfigException {\n+        \/\/ only one mime type per association, at least one file extension\n+        int assocIdx = 0;\n+        for (var assoc : associations) {\n+            ++assocIdx;\n+            if (assoc.mimeTypes.isEmpty()) {\n+                String msgKey = \"error.no-content-types-for-file-association\";\n+                throw new ConfigException(\n+                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n+                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n+            }\n+\n+            if (assoc.mimeTypes.size() > 1) {\n+                String msgKey = \"error.too-many-content-types-for-file-association\";\n+                throw new ConfigException(\n+                        MessageFormat.format(I18N.getString(msgKey), assocIdx),\n+                        MessageFormat.format(I18N.getString(msgKey + \".advice\"), assocIdx));\n+            }\n+\n+            assoc.verify();\n+        }\n+    }\n+\n+    static List<FileAssociation> fetchFrom(Map<String, ? super Object> params) {\n+        String launcherName = APP_NAME.fetchFrom(params);\n+\n+        return FILE_ASSOCIATIONS.fetchFrom(params).stream().filter(\n+                Objects::nonNull).map(fa -> {\n+                    FileAssociation assoc = new FileAssociation();\n+\n+                    assoc.launcherPath = Path.of(launcherName);\n+                    assoc.description = Optional.ofNullable(\n+                            FA_DESCRIPTION.fetchFrom(fa))\n+                            .orElse(launcherName + \" association\");\n+                    assoc.extensions = Optional.ofNullable(\n+                            FA_EXTENSIONS.fetchFrom(fa))\n+                            .orElse(Collections.emptyList());\n+                    assoc.mimeTypes = Optional.ofNullable(\n+                            FA_CONTENT_TYPE.fetchFrom(fa))\n+                            .orElse(Collections.emptyList());\n+\n+                    Path icon = FA_ICON.fetchFrom(fa);\n+                    if (icon != null) {\n+                        assoc.iconPath = icon;\n+                    }\n+\n+                    return assoc;\n+                }).collect(Collectors.toList());\n+    }\n+\n+    Path launcherPath;\n+    Path iconPath;\n+    List<String> mimeTypes;\n+    List<String> extensions;\n+    String description;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/FileAssociation.java","additions":106,"deletions":0,"binary":false,"changes":106,"status":"added"},{"patch":"@@ -0,0 +1,57 @@\n+\/*\n+ * Copyright (c) 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package jdk.jpackage.internal;\n+\n+import java.util.ResourceBundle;\n+\n+class I18N {\n+\n+    static String getString(String key) {\n+        if (PLATFORM.containsKey(key)) {\n+            return PLATFORM.getString(key);\n+        }\n+        return SHARED.getString(key);\n+    }\n+\n+    private static final ResourceBundle SHARED = ResourceBundle.getBundle(\n+            \"jdk.jpackage.internal.resources.MainResources\");\n+\n+    private static final ResourceBundle PLATFORM;\n+\n+    static {\n+        if (Platform.isLinux()) {\n+            PLATFORM = ResourceBundle.getBundle(\n+                    \"jdk.jpackage.internal.resources.LinuxResources\");\n+        } else if (Platform.isWindows()) {\n+            PLATFORM = ResourceBundle.getBundle(\n+                    \"jdk.jpackage.internal.resources.WinResources\");\n+        } else if (Platform.isMac()) {\n+            PLATFORM = ResourceBundle.getBundle(\n+                    \"jdk.jpackage.internal.resources.MacResources\");\n+        } else {\n+            throw new IllegalStateException(\"Unknwon platform\");\n+        }\n+    }\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/I18N.java","additions":57,"deletions":0,"binary":false,"changes":57,"status":"added"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/IOUtils.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/IOUtils.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/JLinkBundlerHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/JLinkBundlerHelper.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -46,1 +46,1 @@\n-            return new jdk.incubator.jpackage.main.Main().execute(out, err, args);\n+            return new jdk.jpackage.main.Main().execute(out, err, args);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/JPackageToolProvider.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/JPackageToolProvider.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -49,1 +49,1 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n+import static jdk.jpackage.internal.StandardBundlerParam.PREDEFINED_RUNTIME_IMAGE;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/LauncherData.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/LauncherData.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Log.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Log.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -45,2 +45,2 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n-import jdk.incubator.jpackage.internal.resources.ResourceLocator;\n+import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n@@ -55,1 +55,1 @@\n- * in {@code jdk.incubator.jpackage.internal.resources} package that provides the default\n+ * in {@code jdk.jpackage.internal.resources} package that provides the default\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/OverridableResource.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -34,1 +34,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n+            \"jdk.jpackage.internal.resources.MainResources\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PackagerException.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/PackagerException.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PathGroup.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/PathGroup.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/Platform.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/Platform.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PlatformPackage.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/PlatformPackage.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/RetryExecutor.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/RetryExecutor.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -34,3 +34,3 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ScriptRunner.java","additions":4,"deletions":4,"binary":false,"changes":8,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ScriptRunner.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -238,1 +238,1 @@\n-                            return Files.createTempDirectory(\"jdk.incubator.jpackage\");\n+                            return Files.createTempDirectory(\"jdk.jpackage\");\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/StandardBundlerParam.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/StandardBundlerParam.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ToolValidator.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ToolValidator.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -29,1 +29,1 @@\n-import jdk.incubator.jpackage.internal.Arguments.CLIOptions;\n+import jdk.jpackage.internal.Arguments.CLIOptions;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ValidOptions.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/ValidOptions.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/HelpResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/HelpResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/HelpResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/HelpResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MainResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MainResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/MainResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MainResources_zh_CN.properties","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal.resources;\n+package jdk.jpackage.internal.resources;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/resources\/ResourceLocator.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/ResourceLocator.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.main;\n+package jdk.jpackage.main;\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/CommandLine.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/main\/CommandLine.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.main;\n+package jdk.jpackage.main;\n@@ -28,3 +28,3 @@\n-import jdk.incubator.jpackage.internal.Arguments;\n-import jdk.incubator.jpackage.internal.Log;\n-import jdk.incubator.jpackage.internal.CLIHelp;\n+import jdk.jpackage.internal.Arguments;\n+import jdk.jpackage.internal.Log;\n+import jdk.jpackage.internal.CLIHelp;\n@@ -40,1 +40,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.MainResources\");\n+            \"jdk.jpackage.internal.resources.MainResources\");\n@@ -52,1 +52,1 @@\n-        int status = new jdk.incubator.jpackage.main.Main().execute(args);\n+        int status = new jdk.jpackage.main.Main().execute(args);\n","filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/Main.java","additions":6,"deletions":6,"binary":false,"changes":12,"previous_filename":"src\/jdk.incubator.jpackage\/share\/classes\/jdk\/incubator\/jpackage\/main\/Main.java","status":"renamed"},{"patch":"@@ -0,0 +1,62 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/**\n+ * Defines the Java Packaging tool, jpackage.\n+ *\n+ * <p>jpackage is a tool for generating self-contained application bundles.\n+ *\n+ * <p> This module provides the equivalent of command-line access to <em>jpackage<\/em>\n+ * via the {@link java.util.spi.ToolProvider ToolProvider} SPI.\n+ * Instances of the tool can be obtained by calling\n+ * {@link java.util.spi.ToolProvider#findFirst ToolProvider.findFirst}\n+ * or the {@link java.util.ServiceLoader service loader} with the name\n+ * {@code \"jpackage\"}.\n+ *\n+ * @implNote The {@code jpackage} tool is not thread-safe. An application\n+ * should not call either of the\n+ * {@link java.util.spi.ToolProvider ToolProvider} {@code run} methods\n+ * concurrently, even with separate {@code \"jpackage\"} {@code ToolProvider}\n+ * instances, or undefined behavior may result.\n+ *\n+ *\n+ * @moduleGraph\n+ * @since 16\n+ *\/\n+\n+module jdk.jpackage {\n+    requires jdk.jlink;\n+\n+    requires java.desktop;\n+\n+    uses jdk.jpackage.internal.Bundler;\n+    uses jdk.jpackage.internal.Bundlers;\n+\n+    provides jdk.jpackage.internal.Bundlers with\n+        jdk.jpackage.internal.BasicBundlers;\n+\n+    provides java.util.spi.ToolProvider\n+        with jdk.jpackage.internal.JPackageToolProvider;\n+}\n","filename":"src\/jdk.jpackage\/share\/classes\/module-info.java","additions":62,"deletions":0,"binary":false,"changes":62,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/share\/man\/jpackage.1","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/man\/jpackage.1","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/AppLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/AppLauncher.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/AppLauncher.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/CfgFile.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/CfgFile.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/CfgFile.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/CfgFile.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/JvmLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/JvmLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/applauncher\/JvmLauncher.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/applauncher\/JvmLauncher.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Dll.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Dll.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/ErrorHandling.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/ErrorHandling.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/ErrorHandling.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/ErrorHandling.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/FileUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/FileUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/FileUtils.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/FileUtils.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Log.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Log.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Log.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Log.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/SourceCodePos.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/SourceCodePos.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/SysInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/SysInfo.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/Toolbox.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/Toolbox.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/kludge_c++11.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/kludge_c++11.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/tstrings.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/tstrings.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/share\/native\/common\/tstrings.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/share\/native\/common\/tstrings.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/PlatformLogEvent.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/PlatformLogEvent.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/PlatformLogEvent.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/PlatformLogEvent.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixDll.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixDll.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixFileUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixFileUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixSysInfo.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/unix\/native\/common\/UnixSysInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/unix\/native\/common\/UnixSysInfo.h","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -41,7 +41,7 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.COPYRIGHT;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n@@ -52,1 +52,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.WinResources\");\n+            \"jdk.jpackage.internal.resources.WinResources\");\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/ExecutableRebrander.java","additions":9,"deletions":9,"binary":false,"changes":18,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/ExecutableRebrander.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/MsiVersion.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/MsiVersion.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinAppBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WinAppBundler.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinExeBundler.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WinExeBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -57,9 +57,9 @@\n-import static jdk.incubator.jpackage.internal.OverridableResource.createResource;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.OverridableResource.createResource;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.CONFIG_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.DESCRIPTION;\n+import static jdk.jpackage.internal.StandardBundlerParam.LICENSE_FILE;\n+import static jdk.jpackage.internal.StandardBundlerParam.RESOURCE_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.TEMP_ROOT;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n@@ -87,1 +87,1 @@\n- * jdk.incubator.jpackage.internal.resources package. It is parametrized with the\n+ * jdk.jpackage.internal.resources package. It is parametrized with the\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinMsiBundler.java","additions":11,"deletions":11,"binary":false,"changes":22,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WinMsiBundler.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -37,3 +37,3 @@\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ICON;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.ICON;\n+import static jdk.jpackage.internal.StandardBundlerParam.ADD_LAUNCHERS;\n@@ -43,1 +43,1 @@\n-            \"jdk.incubator.jpackage.internal.resources.WinResources\");\n+            \"jdk.jpackage.internal.resources.WinResources\");\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsAppImageBuilder.java","additions":5,"deletions":5,"binary":false,"changes":10,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WindowsAppImageBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsDefender.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WindowsDefender.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsRegistry.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WindowsRegistry.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixPipeline.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WixPipeline.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -51,6 +51,6 @@\n-import jdk.incubator.jpackage.internal.IOUtils.XmlConsumer;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.APP_NAME;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VENDOR;\n-import static jdk.incubator.jpackage.internal.StandardBundlerParam.VERSION;\n-import static jdk.incubator.jpackage.internal.WinMsiBundler.MSI_SYSTEM_WIDE;\n+import jdk.jpackage.internal.IOUtils.XmlConsumer;\n+import static jdk.jpackage.internal.StandardBundlerParam.APP_NAME;\n+import static jdk.jpackage.internal.StandardBundlerParam.INSTALL_DIR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VENDOR;\n+import static jdk.jpackage.internal.StandardBundlerParam.VERSION;\n+import static jdk.jpackage.internal.WinMsiBundler.MSI_SYSTEM_WIDE;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixSourcesBuilder.java","additions":7,"deletions":7,"binary":false,"changes":14,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WixSourcesBuilder.java","status":"renamed"},{"patch":"@@ -26,1 +26,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixTool.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/WixTool.java","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_en.wxl","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MsiInstallerStrings_en.wxl","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_ja.wxl","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MsiInstallerStrings_ja.wxl","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/MsiInstallerStrings_zh_CN.wxl","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/MsiInstallerStrings_zh_CN.wxl","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinInstaller.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinInstaller.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinLauncher.template","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinLauncher.template","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinResources.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinResources_ja.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/WinResources_zh_CN.properties","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/java48.ico","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/java48.ico","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/main.wxs","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/main.wxs","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/overrides.wxi","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/classes\/jdk\/incubator\/jpackage\/internal\/resources\/overrides.wxi","status":"renamed"},{"patch":"@@ -0,0 +1,30 @@\n+\/*\n+ * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+provides jdk.jpackage.internal.Bundler with\n+    jdk.jpackage.internal.WinAppBundler,\n+    jdk.jpackage.internal.WinExeBundler,\n+    jdk.jpackage.internal.WinMsiBundler;\n+\n","filename":"src\/jdk.jpackage\/windows\/classes\/module-info.java.extra","additions":30,"deletions":0,"binary":false,"changes":30,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/applauncher\/WinLauncher.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/applauncher\/WinLauncher.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/PlatformLogEvent.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/PlatformLogEvent.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/PlatformLogEvent.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/PlatformLogEvent.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/UniqueHandle.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/UniqueHandle.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinDll.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinDll.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinErrorHandling.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinErrorHandling.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinErrorHandling.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinErrorHandling.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinFileUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinFileUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinFileUtils.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinFileUtils.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinSysInfo.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/common\/WinSysInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/common\/WinSysInfo.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/IconSwap.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/IconSwap.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/IconSwap.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/IconSwap.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/JniUtils.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/JniUtils.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/JniUtils.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/JniUtils.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/ResourceEditor.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/ResourceEditor.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/ResourceEditor.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/ResourceEditor.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/VersionInfo.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/VersionInfo.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/VersionInfo.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libjpackage\/VersionInfo.h","status":"renamed"},{"patch":"@@ -0,0 +1,221 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"JniUtils.h\"\n+#include \"FileUtils.h\"\n+#include \"ErrorHandling.h\"\n+\n+#pragma comment(lib, \"advapi32\")\n+\n+namespace {\n+\n+std::wstring GetLongPath(const std::wstring& path) {\n+    const std::wstring cleanPath = FileUtils::removeTrailingSlash(path);\n+    if (cleanPath.size() != path.size()) {\n+        return GetLongPath(cleanPath);\n+    }\n+\n+    enum { BUFFER_SIZE = 4096 };\n+\n+    std::wstring result;\n+\n+    TCHAR *pBuffer = new TCHAR[BUFFER_SIZE];\n+    if (pBuffer != NULL) {\n+        DWORD dwResult = GetLongPathName(path.c_str(), pBuffer, BUFFER_SIZE);\n+        if (dwResult > 0 && dwResult < BUFFER_SIZE) {\n+            result = std::wstring(pBuffer);\n+        } else {\n+            delete [] pBuffer;\n+            pBuffer = new TCHAR[dwResult];\n+            if (pBuffer != NULL) {\n+                DWORD dwResult2 =\n+                        GetLongPathName(path.c_str(), pBuffer, dwResult);\n+                if (dwResult2 == (dwResult - 1)) {\n+                    result = std::wstring(pBuffer);\n+                }\n+            }\n+        }\n+\n+        if (pBuffer != NULL) {\n+            delete [] pBuffer;\n+        }\n+    }\n+\n+    return result;\n+}\n+\n+} \/\/ namespace\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+#undef jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE\n+#define jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE 1L\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    readDwordValue\n+     * Signature: (ILjava\/lang\/String;Ljava\/lang\/String;I)I\n+     *\/\n+    JNIEXPORT jint JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_readDwordValue(\n+            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey,\n+            jstring jValue, jint defaultValue) {\n+        jint jResult = defaultValue;\n+\n+        JP_TRY;\n+\n+        if (key != jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n+            JP_THROW(\"Inavlid Windows registry key id\");\n+        }\n+\n+        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n+        const std::wstring value = jni::toUnicodeString(pEnv, jValue);\n+\n+        HKEY hSubKey = NULL;\n+        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n+                KEY_QUERY_VALUE, &hSubKey);\n+        if (status == ERROR_SUCCESS) {\n+            DWORD dwValue = 0;\n+            DWORD cbData = sizeof (DWORD);\n+            status = RegQueryValueEx(hSubKey, value.c_str(), NULL, NULL,\n+                    (LPBYTE) & dwValue, &cbData);\n+            if (status == ERROR_SUCCESS) {\n+                jResult = (jint) dwValue;\n+            }\n+\n+            RegCloseKey(hSubKey);\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return jResult;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    openRegistryKey\n+     * Signature: (ILjava\/lang\/String;)J\n+     *\/\n+    JNIEXPORT jlong JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_openRegistryKey(\n+            JNIEnv *pEnv, jclass c, jint key, jstring jSubKey) {\n+\n+        JP_TRY;\n+\n+        if (key != jdk_jpackage_internal_WindowsRegistry_HKEY_LOCAL_MACHINE) {\n+            JP_THROW(\"Inavlid Windows registry key id\");\n+        }\n+\n+        const std::wstring subKey = jni::toUnicodeString(pEnv, jSubKey);\n+        HKEY hSubKey = NULL;\n+        LSTATUS status = RegOpenKeyEx(HKEY_LOCAL_MACHINE, subKey.c_str(), 0,\n+                KEY_QUERY_VALUE, &hSubKey);\n+        if (status == ERROR_SUCCESS) {\n+            return (jlong)hSubKey;\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return 0;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    enumRegistryValue\n+     * Signature: (JI)Ljava\/lang\/String;\n+     *\/\n+    JNIEXPORT jstring JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_enumRegistryValue(\n+            JNIEnv *pEnv, jclass c, jlong lKey, jint jIndex) {\n+\n+        JP_TRY;\n+\n+        \/\/ Max value name size per MSDN plus NULL\n+        enum { VALUE_NAME_SIZE = 16384 };\n+\n+        HKEY hKey = (HKEY)lKey;\n+        TCHAR valueName[VALUE_NAME_SIZE] = {0}; \/\/ Max size per MSDN plus NULL\n+        DWORD cchValueName = VALUE_NAME_SIZE;\n+        LSTATUS status = RegEnumValue(hKey, (DWORD)jIndex, valueName,\n+                &cchValueName, NULL, NULL, NULL, NULL);\n+        if (status == ERROR_SUCCESS) {\n+            size_t chLength = 0;\n+            if (StringCchLength(valueName, VALUE_NAME_SIZE, &chLength)\n+                    == S_OK) {\n+                return jni::toJString(pEnv, std::wstring(valueName, chLength));\n+            }\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return NULL;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    closeRegistryKey\n+     * Signature: (J)V\n+     *\/\n+    JNIEXPORT void JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_closeRegistryKey(\n+            JNIEnv *pEnc, jclass c, jlong lKey) {\n+        HKEY hKey = (HKEY)lKey;\n+        RegCloseKey(hKey);\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WindowsRegistry\n+     * Method:    comparePaths\n+     * Signature: (Ljava\/lang\/String;Ljava\/lang\/String;)Z\n+     *\/\n+     JNIEXPORT jboolean JNICALL\n+            Java_jdk_jpackage_internal_WindowsRegistry_comparePaths(\n+            JNIEnv *pEnv, jclass c, jstring jPath1, jstring jPath2) {\n+\n+         JP_TRY;\n+\n+         std::wstring path1 = jni::toUnicodeString(pEnv, jPath1);\n+         std::wstring path2 = jni::toUnicodeString(pEnv, jPath2);\n+\n+         path1 = GetLongPath(path1);\n+         path2 = GetLongPath(path2);\n+\n+         if (path1.empty() || path2.empty()) {\n+             return JNI_FALSE;\n+         }\n+\n+         if (tstrings::equals(path1, path2, tstrings::IGNORE_CASE)) {\n+             return JNI_TRUE;\n+         }\n+\n+         JP_CATCH_ALL;\n+\n+         return JNI_FALSE;\n+     }\n+\n+#ifdef __cplusplus\n+}\n+#endif\n","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/WindowsRegistry.cpp","additions":221,"deletions":0,"binary":false,"changes":221,"status":"added"},{"patch":"@@ -0,0 +1,155 @@\n+\/*\n+ * Copyright (c) 2011, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.  Oracle designates this\n+ * particular file as subject to the \"Classpath\" exception as provided\n+ * by Oracle in the LICENSE file that accompanied this code.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+#include \"ResourceEditor.h\"\n+#include \"ErrorHandling.h\"\n+#include \"IconSwap.h\"\n+#include \"VersionInfo.h\"\n+#include \"JniUtils.h\"\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    lockResource\n+     * Signature: (Ljava\/lang\/String;)J\n+     *\/\n+    JNIEXPORT jlong JNICALL\n+        Java_jdk_jpackage_internal_ExecutableRebrander_lockResource(\n+            JNIEnv *pEnv, jclass c, jstring jExecutable) {\n+\n+        JP_TRY;\n+\n+        const std::wstring executable = jni::toUnicodeString(pEnv, jExecutable);\n+\n+        return reinterpret_cast<jlong>(\n+                ResourceEditor::FileLock(executable).ownHandle(false).get());\n+\n+        JP_CATCH_ALL;\n+\n+        return 0;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    unlockResource\n+     * Signature: (J;)V\n+     *\/\n+    JNIEXPORT void JNICALL\n+        Java_jdk_jpackage_internal_ExecutableRebrander_unlockResource(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock) {\n+\n+        JP_TRY;\n+        ResourceEditor::FileLock(\n+                reinterpret_cast<HANDLE>(jResourceLock)).ownHandle(true);\n+        JP_CATCH_ALL;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    iconSwap\n+     * Signature: (J;Ljava\/lang\/String;)I\n+     *\/\n+    JNIEXPORT jint JNICALL\n+            Java_jdk_jpackage_internal_ExecutableRebrander_iconSwap(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jIconTarget) {\n+\n+        JP_TRY;\n+\n+        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n+\n+        const std::wstring iconTarget = jni::toUnicodeString(pEnv, jIconTarget);\n+\n+        if (ChangeIcon(lock.get(), iconTarget)) {\n+            return 0;\n+        }\n+\n+        JP_CATCH_ALL;\n+\n+        return 1;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_ExecutableRebrander\n+     * Method:    versionSwap\n+     * Signature: (J;[Ljava\/lang\/String;)I\n+     *\/\n+    JNIEXPORT jint JNICALL\n+            Java_jdk_jpackage_internal_ExecutableRebrander_versionSwap(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock,\n+            jobjectArray jExecutableProperties) {\n+\n+        JP_TRY;\n+\n+        const tstring_array props = jni::toUnicodeStringArray(pEnv,\n+                jExecutableProperties);\n+\n+        VersionInfo vi;\n+\n+        tstring_array::const_iterator it = props.begin();\n+        tstring_array::const_iterator end = props.end();\n+        for (; it != end; ++it) {\n+            const tstring name = *it;\n+            const tstring value = *++it;\n+            vi.setProperty(name, value);\n+        }\n+\n+        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n+        vi.apply(lock);\n+\n+        return 0;\n+\n+        JP_CATCH_ALL;\n+\n+        return 1;\n+    }\n+\n+    \/*\n+     * Class:     jdk_jpackage_internal_WinExeBundler\n+     * Method:    embedMSI\n+     * Signature: (J;Ljava\/lang\/String;)I\n+     *\/\n+    JNIEXPORT jint JNICALL Java_jdk_jpackage_internal_WinExeBundler_embedMSI(\n+            JNIEnv *pEnv, jclass c, jlong jResourceLock, jstring jmsiPath) {\n+\n+        JP_TRY;\n+\n+        const std::wstring msiPath = jni::toUnicodeString(pEnv, jmsiPath);\n+\n+        const ResourceEditor::FileLock lock(reinterpret_cast<HANDLE>(jResourceLock));\n+        ResourceEditor().id(L\"msi\").type(RT_RCDATA).apply(lock, msiPath);\n+\n+        return 0;\n+\n+        JP_CATCH_ALL;\n+\n+        return 1;\n+    }\n+\n+#ifdef __cplusplus\n+}\n+#endif\n","filename":"src\/jdk.jpackage\/windows\/native\/libjpackage\/jpackage.cpp","additions":155,"deletions":0,"binary":false,"changes":155,"status":"added"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/libwixhelper\/libwixhelper.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/libwixhelper\/libwixhelper.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Executor.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Executor.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Executor.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Executor.h","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/MsiWrapper.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/MsiWrapper.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Resources.cpp","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Resources.cpp","status":"renamed"},{"patch":"","filename":"src\/jdk.jpackage\/windows\/native\/msiwrapper\/Resources.h","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"src\/jdk.incubator.jpackage\/windows\/native\/msiwrapper\/Resources.h","status":"renamed"},{"patch":"@@ -171,1 +171,1 @@\n-        \/\/ For the same reason as the *.dll above, the jdk.incubator.jpackage module\n+        \/\/ For the same reason as the *.dll above, the jdk.jpackage module\n@@ -176,1 +176,1 @@\n-                .filter(f -> !f.matches(\".*jdk\\\\.incubator\\\\.jpackage.*\\\\.h.*\"))\n+                .filter(f -> !f.matches(\".*jdk\\\\.jpackage.*\\\\.h.*\"))\n","filename":"test\/jdk\/build\/AbsPathsInImage.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.ApplicationLayout;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/AdditionalLauncher.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.jpackage.internal.IOUtils;\n+import jdk.jpackage.internal.IOUtils;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/FileAssociations.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,2 +49,2 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.ApplicationLayout;\n@@ -838,9 +838,0 @@\n-    public static Stream<String> filterOutput(Stream<String> jpackageOutput) {\n-        \/\/ Skip \"WARNING: Using incubator ...\" first line of output\n-        return jpackageOutput.skip(1);\n-    }\n-\n-    public static List<String> filterOutput(List<String> jpackageOutput) {\n-        return filterOutput(jpackageOutput.stream()).collect(Collectors.toList());\n-    }\n-\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/JPackageCommand.java","additions":2,"deletions":11,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -88,1 +88,1 @@\n-                \"classes\/jdk\/incubator\/jpackage\/internal\/resources\", components[1]));\n+                \"classes\/jdk\/jpackage\/internal\/resources\", components[1]));\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LauncherIconVerifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-import jdk.incubator.jpackage.internal.IOUtils;\n+import jdk.jpackage.internal.IOUtils;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/LinuxHelper.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,2 +46,2 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.ApplicationLayout;\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PackageTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-            TKit.isWindows() ? \"jdk.incubator.jpackage.internal.WinMsiBundler\" : null),\n+            TKit.isWindows() ? \"jdk.jpackage.internal.WinMsiBundler\" : null),\n@@ -40,1 +40,1 @@\n-            TKit.isWindows() ? \"jdk.incubator.jpackage.internal.WinMsiBundler\" : null),\n+            TKit.isWindows() ? \"jdk.jpackage.internal.WinMsiBundler\" : null),\n@@ -42,1 +42,1 @@\n-            TKit.isLinux() ? \"jdk.incubator.jpackage.internal.LinuxDebBundler\" : null),\n+            TKit.isLinux() ? \"jdk.jpackage.internal.LinuxDebBundler\" : null),\n@@ -44,3 +44,3 @@\n-            TKit.isLinux() ? \"jdk.incubator.jpackage.internal.LinuxRpmBundler\" : null),\n-    MAC_DMG(\".dmg\", TKit.isOSX() ? \"jdk.incubator.jpackage.internal.MacDmgBundler\" : null),\n-    MAC_PKG(\".pkg\", TKit.isOSX() ? \"jdk.incubator.jpackage.internal.MacPkgBundler\" : null),\n+            TKit.isLinux() ? \"jdk.jpackage.internal.LinuxRpmBundler\" : null),\n+    MAC_DMG(\".dmg\", TKit.isOSX() ? \"jdk.jpackage.internal.MacDmgBundler\" : null),\n+    MAC_PKG(\".pkg\", TKit.isOSX() ? \"jdk.jpackage.internal.MacPkgBundler\" : null),\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/PackageType.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-        return TEST_SRC_ROOT.resolve(\"..\/..\/..\/..\/src\/jdk.incubator.jpackage\").normalize().toAbsolutePath();\n+        return TEST_SRC_ROOT.resolve(\"..\/..\/..\/..\/src\/jdk.jpackage\").normalize().toAbsolutePath();\n","filename":"test\/jdk\/tools\/jpackage\/helpers\/jdk\/jpackage\/test\/TKit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/AppImageFileTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/AppImageFileTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/ApplicationLayoutTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/ApplicationLayoutTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/CompareDottedVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/CompareDottedVersionTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/DeployParamsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/DeployParamsTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/DottedVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/DottedVersionTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/InvalidDottedVersionTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/InvalidDottedVersionTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -36,1 +36,1 @@\n-import jdk.incubator.jpackage.internal.resources.ResourceLocator;\n+import jdk.jpackage.internal.resources.ResourceLocator;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/OverridableResourceTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/OverridableResourceTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/PathGroupTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/PathGroupTest.java","status":"renamed"},{"patch":"@@ -23,1 +23,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n@@ -112,1 +112,1 @@\n-            \"jdk.incubator.jpackage.internal.CFBundleVersion\");\n+            \"jdk.jpackage.internal.CFBundleVersion\");\n@@ -114,1 +114,1 @@\n-            \"jdk.incubator.jpackage.internal.MsiVersion\");\n+            \"jdk.jpackage.internal.MsiVersion\");\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/PlatformVersionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/PlatformVersionTest.java","status":"renamed"},{"patch":"@@ -25,1 +25,1 @@\n-package jdk.incubator.jpackage.internal;\n+package jdk.jpackage.internal;\n","filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/jpackage\/internal\/ToolValidatorTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/jdk\/tools\/jpackage\/junit\/jdk\/incubator\/jpackage\/internal\/ToolValidatorTest.java","status":"renamed"},{"patch":"@@ -30,1 +30,1 @@\n- * @modules jdk.incubator.jpackage\n+ * @modules jdk.jpackage\n","filename":"test\/jdk\/tools\/jpackage\/junit\/junit.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -20,4 +20,4 @@\n-  --add-modules jdk.incubator.jpackage \\\n-  --patch-module jdk.incubator.jpackage=\"${TESTSRC}${PS}${TESTCLASSES}\" \\\n-  --add-reads jdk.incubator.jpackage=ALL-UNNAMED \\\n-  --add-exports jdk.incubator.jpackage\/jdk.incubator.jpackage.internal=ALL-UNNAMED \\\n+  --add-modules jdk.jpackage \\\n+  --patch-module jdk.jpackage=\"${TESTSRC}${PS}${TESTCLASSES}\" \\\n+  --add-reads jdk.jpackage=ALL-UNNAMED \\\n+  --add-exports jdk.jpackage\/jdk.jpackage.internal=ALL-UNNAMED \\\n","filename":"test\/jdk\/tools\/jpackage\/junit\/run_junit.sh","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/AppCategoryTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/LicenseTypeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/LinuxBundleNameTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/LinuxResourceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/MaintainerTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/PackageDepsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/ReleaseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -75,1 +75,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/ShortcutHintTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/linux\/jdk\/jpackage\/tests\/UsrTreeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/MacFileAssociationsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/MacPropertiesTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/NameWithSpaceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/SigningAppImageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -57,1 +57,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/SigningPackageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-import jdk.incubator.jpackage.internal.MacCertificate;\n+import jdk.jpackage.internal.MacCertificate;\n","filename":"test\/jdk\/tools\/jpackage\/macosx\/base\/SigningCheck.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -53,1 +53,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -66,1 +66,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/AddLauncherTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/AppImagePackageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/ArgumentsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -25,1 +25,1 @@\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.ApplicationLayout;\n@@ -42,1 +42,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/EmptyFolderPackageTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -27,1 +27,1 @@\n-import jdk.incubator.jpackage.internal.ApplicationLayout;\n+import jdk.jpackage.internal.ApplicationLayout;\n@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/EmptyFolderTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -64,1 +64,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -77,1 +77,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/FileAssociationsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/IconTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -61,1 +61,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -73,1 +73,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/InstallDirTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -70,1 +70,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -84,1 +84,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/LicenseTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/MultiLauncherTwoPhaseTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -74,1 +74,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/RuntimePackageTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/SimplePackageTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -33,1 +33,1 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.AppImageFile;\n@@ -39,1 +39,1 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.AppImageFile;\n@@ -47,1 +47,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/AppVersionTest.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/BasicTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/CookedRuntimeTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -50,1 +50,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ErrorTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -95,1 +95,1 @@\n-                    new String[]{\"jdk.incubator.jpackage\"},\n+                    new String[]{\"jdk.jpackage\"},\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JLinkOptionsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -52,1 +52,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JavaOptionsEqualsTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/JavaOptionsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/MainClassTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest2.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -35,1 +35,1 @@\n-import jdk.incubator.jpackage.internal.AppImageFile;\n+import jdk.jpackage.internal.AppImageFile;\n@@ -54,1 +54,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -65,1 +65,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/ModulePathTest3.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/MultipleJarAppTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/NonExistentTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/share\/jdk\/jpackage\/tests\/UnicodeArgsTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinConsoleTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinDirChooserTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinL10nTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinMenuGroupTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinMenuTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinPerUserInstallTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinResourceTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -28,1 +28,1 @@\n-import jdk.incubator.jpackage.internal.IOUtils;\n+import jdk.jpackage.internal.IOUtils;\n@@ -43,1 +43,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinScriptTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -44,1 +44,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinShortcutTest.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -54,1 +54,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n@@ -68,1 +68,1 @@\n- * @modules jdk.incubator.jpackage\/jdk.incubator.jpackage.internal\n+ * @modules jdk.jpackage\/jdk.jpackage.internal\n","filename":"test\/jdk\/tools\/jpackage\/windows\/WinUpgradeUUIDTest.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}