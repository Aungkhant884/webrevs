{"files":[{"patch":"@@ -50,2 +50,2 @@\n-        try (Reactor r = new Reactor();\n-             Actor a = new Actor(r.getSocketAddress())\n+        try (Responder r = new Responder();\n+             Initiator a = new Initiator(r.getSocketAddress())\n@@ -91,2 +91,2 @@\n-    public static class Actor implements AutoCloseable, Runnable {\n-        final SocketAddress socketAddress;\n+    public static class Initiator implements AutoCloseable, Runnable {\n+        final SocketAddress connectSocketAddress;\n@@ -95,2 +95,2 @@\n-        Actor(SocketAddress socketAddress) throws IOException {\n-            this.socketAddress = toConnectAddress(socketAddress);\n+        Initiator(SocketAddress peerSocketAddress) throws IOException {\n+            this.connectSocketAddress = toConnectAddress(peerSocketAddress);\n@@ -105,2 +105,2 @@\n-                log.println(\"Actor connecting to \" + socketAddress);\n-                dc.connect(socketAddress);\n+                log.println(\"Initiator connecting to \" + connectSocketAddress);\n+                dc.connect(connectSocketAddress);\n@@ -109,1 +109,1 @@\n-                log.println(\"Actor attempting to write to Reactor at \" + socketAddress.toString());\n+                log.println(\"Initiator attempting to write to Responder at \" + connectSocketAddress.toString());\n@@ -117,1 +117,1 @@\n-                    log.println(\"Testing if Actor throws AlreadyConnectedException\" + otherAddress.toString());\n+                    log.println(\"Testing if Initiator throws AlreadyConnectedException\" + otherAddress.toString());\n@@ -119,1 +119,1 @@\n-                    throw new RuntimeException(\"Actor allowed send to other address while already connected\");\n+                    throw new RuntimeException(\"Initiator allowed send to other address while already connected\");\n@@ -126,1 +126,1 @@\n-                log.println(\"Actor waiting to read\");\n+                log.println(\"Initiator waiting to read\");\n@@ -131,1 +131,1 @@\n-                log.println(\"Actor received from Reactor at \" + socketAddress + \": \" + cb);\n+                log.println(\"Initiator received from Responder at \" + connectSocketAddress + \": \" + cb);\n@@ -133,1 +133,1 @@\n-                log.println(\"Actor threw exception: \" + ex);\n+                log.println(\"Initiator threw exception: \" + ex);\n@@ -136,1 +136,1 @@\n-                log.println(\"Actor finished\");\n+                log.println(\"Initiator finished\");\n@@ -146,1 +146,1 @@\n-    public static class Reactor implements AutoCloseable, Runnable {\n+    public static class Responder implements AutoCloseable, Runnable {\n@@ -149,1 +149,1 @@\n-        Reactor() throws IOException {\n+        Responder() throws IOException {\n@@ -162,1 +162,1 @@\n-                log.println(\"Reactor waiting to receive\");\n+                log.println(\"Responder waiting to receive\");\n@@ -167,1 +167,1 @@\n-                log.println(\"Reactor received from Actor at\" + sa +  \": \" + cb);\n+                log.println(\"Responder received from Initiator at\" + sa +  \": \" + cb);\n@@ -172,1 +172,1 @@\n-                log.println(\"Reactor attempting to write: \" + dc.getRemoteAddress().toString());\n+                log.println(\"Responder attempting to write: \" + dc.getRemoteAddress().toString());\n@@ -175,1 +175,1 @@\n-                log.println(\"Reactor threw exception: \" + ex);\n+                log.println(\"Responder threw exception: \" + ex);\n@@ -178,1 +178,1 @@\n-                log.println(\"Reactor finished\");\n+                log.println(\"Responder finished\");\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/Connect.java","additions":22,"deletions":22,"binary":false,"changes":44,"status":"modified"}]}