{"files":[{"patch":"@@ -76,6 +76,1 @@\n-  _base = base;\n-  _size = size;\n-  _alignment = alignment;\n-  _noaccess_prefix = 0;\n-  _special = special;\n-  _executable = executable;\n+  initialize_members(base, size, alignment, special, executable);\n@@ -143,0 +138,20 @@\n+void ReservedSpace::clear_members() {\n+  _base = NULL;\n+  _size = 0;\n+  _alignment = 0;\n+  _special = false;\n+  _executable = false;\n+  _noaccess_prefix = 0;\n+}\n+\n+void ReservedSpace::initialize_members(char* base, size_t size, size_t alignment,\n+                                       bool special, bool executable) {\n+  _base = base;\n+  _size = size;\n+  _alignment = alignment;\n+  _special = special;\n+  _executable = executable;\n+  _noaccess_prefix = 0;\n+}\n+\n+\n@@ -154,1 +169,1 @@\n-  alignment = MAX2(alignment, (size_t)os::vm_page_size());\n+  clear_members();\n@@ -156,6 +171,0 @@\n-  _base = NULL;\n-  _size = 0;\n-  _special = false;\n-  _executable = executable;\n-  _alignment = 0;\n-  _noaccess_prefix = 0;\n@@ -166,0 +175,2 @@\n+  alignment = MAX2(alignment, (size_t)os::vm_page_size());\n+\n@@ -196,1 +207,0 @@\n-      _special = true;\n@@ -198,1 +208,3 @@\n-      \/\/ failed; try to reserve regular memory below\n+      \/\/ failed; try to reserve regular memory below. Reservation\n+      \/\/ should not be marked as special.\n+      special = false;\n@@ -216,1 +228,1 @@\n-      base = attempt_map_or_reserve_memory_at(requested_address, size, _fd_for_heap, _executable);\n+      base = attempt_map_or_reserve_memory_at(requested_address, size, _fd_for_heap, executable);\n@@ -222,1 +234,1 @@\n-      base = map_or_reserve_memory(size, _fd_for_heap, _executable);\n+      base = map_or_reserve_memory(size, _fd_for_heap, executable);\n@@ -234,1 +246,1 @@\n-      base = map_or_reserve_memory_aligned(size, alignment, _fd_for_heap, _executable);\n+      base = map_or_reserve_memory_aligned(size, alignment, _fd_for_heap, executable);\n@@ -246,5 +258,1 @@\n-  \/\/ Done\n-  _base = base;\n-  _size = size;\n-  _alignment = alignment;\n-  \/\/ If heap is reserved with a backing file, the entire space has been committed. So set the _special flag to true\n+  \/\/ If heap is reserved with a backing file, the entire space has been committed. So set the special flag to true\n@@ -252,1 +260,1 @@\n-    _special = true;\n+    special = true;\n@@ -254,0 +262,3 @@\n+\n+  \/\/ Done\n+  initialize_members(base, size, alignment, special, executable);\n@@ -318,6 +329,1 @@\n-    _base = NULL;\n-    _size = 0;\n-    _noaccess_prefix = 0;\n-    _alignment = 0;\n-    _special = false;\n-    _executable = false;\n+    clear_members();\n@@ -402,1 +408,0 @@\n-      _special = true;\n@@ -407,1 +412,3 @@\n-    \/\/ Failed; try to reserve regular memory below\n+    \/\/ Failed; try to reserve regular memory below. Reservation\n+    \/\/ should not be marked as special.\n+    special = false;\n@@ -425,6 +432,1 @@\n-  \/\/ Done\n-  _base = base;\n-  _size = size;\n-  _alignment = alignment;\n-\n-  \/\/ If heap is reserved with a backing file, the entire space has been committed. So set the _special flag to true\n+  \/\/ If heap is reserved with a backing file, the entire space has been committed. So set the special flag to true\n@@ -432,1 +434,1 @@\n-    _special = true;\n+    special = true;\n@@ -435,0 +437,3 @@\n+  \/\/ Done\n+  initialize_members(base, size, alignment, special, false);\n+\n@@ -436,1 +441,1 @@\n-  if ((((size_t)base) & (alignment - 1)) != 0) {\n+  if (!is_aligned(base, alignment)) {\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":45,"deletions":40,"binary":false,"changes":85,"status":"modified"},{"patch":"@@ -51,0 +51,11 @@\n+  \/\/ Helpers to clear and set members during initialization. Two members\n+  \/\/ require special treatment:\n+  \/\/  * _fd_for_heap     - The fd is set once and should not be cleared\n+  \/\/                       even if the reservation has to be retried.\n+  \/\/  * _noaccess_prefix - Used for compressed heaps and updated after\n+  \/\/                       the reservation is initialized. Always set to\n+  \/\/                       0 during initialization.\n+  void clear_members();\n+  void initialize_members(char* base, size_t size, size_t alignment,\n+                          bool special, bool executable);\n+\n","filename":"src\/hotspot\/share\/memory\/virtualspace.hpp","additions":11,"deletions":0,"binary":false,"changes":11,"status":"modified"}]}