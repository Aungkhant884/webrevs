{"files":[{"patch":"@@ -39,1 +39,2 @@\n-        bug4198809 test = new bug4198809();\n+        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n+\n@@ -42,1 +43,5 @@\n-                test.init();\n+                frame = new JFrame(\"bug4198809\");\n+                JMenuItem mi = new JMenuItem(\"test\");\n+                mi.setDisabledIcon(null);\n+                mi.setEnabled(false);\n+                frame.getContentPane().add(mi);\n@@ -50,12 +55,0 @@\n-\n-    public void init() {\n-        try {\n-            UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.motif.MotifLookAndFeel\");\n-        } catch (Exception e) {}\n-\n-        frame = new JFrame(\"bug4198809\");\n-        JMenuItem mi = new JMenuItem(\"test\");\n-        mi.setDisabledIcon(null);\n-        mi.setEnabled(false);\n-        frame.getContentPane().add(mi);\n-    }\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4198809.java","additions":7,"deletions":14,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -41,2 +41,2 @@\n-    private int mnemonic = 102;\n-    private KeyStroke accelerator = KeyStroke.getKeyStroke(\n+    private static int mnemonic = 102;\n+    private static KeyStroke accelerator = KeyStroke.getKeyStroke(\n@@ -46,5 +46,0 @@\n-        bug4304129 test = new bug4304129();\n-        test.init();\n-    }\n-\n-    public void init() {\n@@ -58,1 +53,1 @@\n-            ! mi.getAccelerator().equals(accelerator)) {\n+                ! mi.getAccelerator().equals(accelerator)) {\n@@ -64,1 +59,1 @@\n-    class TestAction extends AbstractAction {\n+    static class TestAction extends AbstractAction {\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4304129.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-    @library ..\/..\/regtesthelpers\n-    @build Util JRobot\n@@ -39,0 +37,1 @@\n+import java.awt.event.InputEvent;\n@@ -54,2 +53,2 @@\n-    public volatile boolean passed = true;\n-    public volatile String reason = \"\\nSome actions did not worked:\";\n+    public static volatile boolean passed = true;\n+    public static volatile String reason = \"\\nSome actions did not worked:\";\n@@ -79,1 +78,1 @@\n-    public JMenuItem item;\n+    public static JMenuItem item;\n@@ -81,1 +80,1 @@\n-    Robot r;\n+    public static Robot r;\n@@ -83,2 +82,2 @@\n-    volatile int btnWidth, btnHeight;\n-    volatile Point p;\n+    public static volatile int btnWidth, btnHeight;\n+    public static volatile Point p;\n@@ -87,1 +86,0 @@\n-        bug4839464 test = new bug4839464();\n@@ -89,10 +87,6 @@\n-            test.init();\n-        } finally {\n-            if (frame != null) {\n-                frame.dispose();\n-            }\n-            if (control != null) {\n-                control.dispose();\n-            }\n-        }\n-    }\n+            r = new Robot();\n+            SwingUtilities.invokeAndWait(() -> {\n+                changeNameButton = new JButton(\"Change name\");\n+                changeMnemonicButton = new JButton(\"On\/Off mnemonic\");\n+                changeAcceleratorButton = new JButton(\"Change accelerator\");\n+                changeShortDescButton = new JButton(\"Change short desc.\");\n@@ -100,2 +94,13 @@\n-    public void init() throws Exception {\n-        \/\/ Set up test environment\n+                JMenuBar mb = new JMenuBar();\n+                JMenu test = new JMenu(\"Test\");\n+                mb.add(test);\n+                item = new JMenuItem(action);\n+                test.add(item);\n+                frame = new JFrame(\"Action tester\");\n+                frame.setJMenuBar(mb);\n+                frame.setLayout(new BorderLayout());\n+                frame.add(new JButton(action), BorderLayout.CENTER);\n+                frame.pack();\n+                frame.setLocation(100, 10);\n+                frame.setVisible(true);\n+                r.delay(100);\n@@ -103,39 +108,19 @@\n-        r = new Robot();\n-        SwingUtilities.invokeAndWait(() -> {\n-            changeNameButton = new JButton(\"Change name\");\n-            changeMnemonicButton = new JButton(\"On\/Off mnemonic\");\n-            changeAcceleratorButton = new JButton(\"Change accelerator\");\n-            changeShortDescButton = new JButton(\"Change short desc.\");\n-\n-            JMenuBar mb = new JMenuBar();\n-            JMenu test = new JMenu(\"Test\");\n-            mb.add(test);\n-            item = new JMenuItem(action);\n-            test.add(item);\n-            frame = new JFrame(\"Action tester\");\n-            frame.setJMenuBar(mb);\n-            frame.setLayout(new BorderLayout());\n-            frame.add(new JButton(action), BorderLayout.CENTER);\n-            frame.pack();\n-            frame.setLocation(100, 10);\n-            frame.setVisible(true);\n-            r.delay(100);\n-\n-            control = new JFrame(\"Controls\");\n-            control.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n-            control.setLayout(new GridLayout(2, 10));\n-            control.add(changeNameButton);\n-            control.add(changeMnemonicButton);\n-            control.add(changeAcceleratorButton);\n-            control.add(changeShortDescButton);\n-            control.pack();\n-            control.setLocation(100, 500);\n-            control.setVisible(true);\n-            r.delay(100);\n-\n-            changeNameButton.addActionListener(new AbstractAction() {\n-                public void actionPerformed(ActionEvent e) {\n-                    if (\"First Name\".equals(action.getValue(Action.NAME))) {\n-                        action.putValue(Action.NAME, \"Second Name\");\n-                    } else {\n-                        action.putValue(Action.NAME, \"First Name\");\n+                control = new JFrame(\"Controls\");\n+                control.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+                control.setLayout(new GridLayout(2, 10));\n+                control.add(changeNameButton);\n+                control.add(changeMnemonicButton);\n+                control.add(changeAcceleratorButton);\n+                control.add(changeShortDescButton);\n+                control.pack();\n+                control.setLocation(100, 500);\n+                control.setVisible(true);\n+                r.delay(100);\n+\n+                changeNameButton.addActionListener(new AbstractAction() {\n+                    public void actionPerformed(ActionEvent e) {\n+                        if (\"First Name\".equals(action.getValue(Action.NAME))) {\n+                            action.putValue(Action.NAME, \"Second Name\");\n+                        } else {\n+                            action.putValue(Action.NAME, \"First Name\");\n+                        }\n@@ -143,2 +128,1 @@\n-                }\n-            });\n+                });\n@@ -146,7 +130,8 @@\n-            changeMnemonicButton.addActionListener(new AbstractAction() {\n-                public void actionPerformed(ActionEvent e) {\n-                    Integer mnem = (Integer) action.getValue(Action.MNEMONIC_KEY);\n-                    if (mnem.intValue() == 0) {\n-                        action.putValue(Action.MNEMONIC_KEY, new Integer('N'));\n-                    } else {\n-                        action.putValue(Action.MNEMONIC_KEY, new Integer(0));\n+                changeMnemonicButton.addActionListener(new AbstractAction() {\n+                    public void actionPerformed(ActionEvent e) {\n+                        Integer mnem = (Integer) action.getValue(Action.MNEMONIC_KEY);\n+                        if (mnem.intValue() == 0) {\n+                            action.putValue(Action.MNEMONIC_KEY, new Integer('N'));\n+                        } else {\n+                            action.putValue(Action.MNEMONIC_KEY, new Integer(0));\n+                        }\n@@ -154,2 +139,1 @@\n-                }\n-            });\n+                });\n@@ -157,6 +141,7 @@\n-            changeAcceleratorButton.addActionListener(new AbstractAction() {\n-                public void actionPerformed(ActionEvent e) {\n-                    if (action.getValue(Action.ACCELERATOR_KEY) == ks1) {\n-                        action.putValue(Action.ACCELERATOR_KEY, ks2);\n-                    } else {\n-                        action.putValue(Action.ACCELERATOR_KEY, ks1);\n+                changeAcceleratorButton.addActionListener(new AbstractAction() {\n+                    public void actionPerformed(ActionEvent e) {\n+                        if (action.getValue(Action.ACCELERATOR_KEY) == ks1) {\n+                            action.putValue(Action.ACCELERATOR_KEY, ks2);\n+                        } else {\n+                            action.putValue(Action.ACCELERATOR_KEY, ks1);\n+                        }\n@@ -164,2 +149,1 @@\n-                }\n-            });\n+                });\n@@ -167,7 +151,8 @@\n-            changeShortDescButton.addActionListener(new AbstractAction() {\n-                public void actionPerformed(ActionEvent e) {\n-                    String shortDescr = (String) action.getValue(Action.SHORT_DESCRIPTION);\n-                    if (\"Just a text\".equals(shortDescr)) {\n-                        action.putValue(Action.SHORT_DESCRIPTION, null);\n-                    } else {\n-                        action.putValue(Action.SHORT_DESCRIPTION, \"Just a text\");\n+                changeShortDescButton.addActionListener(new AbstractAction() {\n+                    public void actionPerformed(ActionEvent e) {\n+                        String shortDescr = (String) action.getValue(Action.SHORT_DESCRIPTION);\n+                        if (\"Just a text\".equals(shortDescr)) {\n+                            action.putValue(Action.SHORT_DESCRIPTION, null);\n+                        } else {\n+                            action.putValue(Action.SHORT_DESCRIPTION, \"Just a text\");\n+                        }\n@@ -175,2 +160,1 @@\n-                }\n-            });\n+                });\n@@ -178,5 +162,5 @@\n-            action.putValue(Action.NAME, \"Second Name\");\n-            action.putValue(Action.MNEMONIC_KEY, new Integer('N'));\n-            action.putValue(Action.ACCELERATOR_KEY, ks1);\n-            action.putValue(Action.SHORT_DESCRIPTION, null);\n-        });\n+                action.putValue(Action.NAME, \"Second Name\");\n+                action.putValue(Action.MNEMONIC_KEY, new Integer('N'));\n+                action.putValue(Action.ACCELERATOR_KEY, ks1);\n+                action.putValue(Action.SHORT_DESCRIPTION, null);\n+            });\n@@ -184,6 +168,6 @@\n-        r.delay(1000);\n-        r.waitForIdle();\n-        \/\/ Run tests\n-        test();\n-        r.delay(1000);\n-        r.waitForIdle();\n+            r.delay(1000);\n+            r.waitForIdle();\n+            \/\/ Run tests\n+            test();\n+            r.delay(1000);\n+            r.waitForIdle();\n@@ -191,2 +175,10 @@\n-        if (!passed) {\n-            throw new RuntimeException(reason + \"\\nTest failed.\");\n+            if (!passed) {\n+                throw new RuntimeException(reason + \"\\nTest failed.\");\n+            }\n+        } finally {\n+            if (frame != null) {\n+                frame.dispose();\n+            }\n+            if (control != null) {\n+                control.dispose();\n+            }\n@@ -196,1 +188,1 @@\n-    public boolean compareObjects(Object a, Object b) {\n+    public static boolean compareObjects(Object a, Object b) {\n@@ -204,4 +196,2 @@\n-    public void test() {\n-        JRobot robo;\n-        robo = JRobot.getRobot();\n-        robo.delay(500);\n+    public static void test() throws Exception {\n+        r.delay(500);\n@@ -212,2 +202,8 @@\n-        robo.clickMouseOn(changeNameButton);\n-        if(compareObjects(tmpResult, item.getText())) {\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = changeNameButton.getLocationOnScreen();\n+            btnWidth = changeNameButton.getWidth();\n+            btnHeight = changeNameButton.getHeight();\n+        });\n+\n+        doMouseMove(p, btnWidth, btnHeight);\n+        if (compareObjects(tmpResult, item.getText())) {\n@@ -220,2 +216,8 @@\n-        robo.clickMouseOn(changeMnemonicButton);\n-        if(tmpInt == item.getMnemonic()) {\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = changeMnemonicButton.getLocationOnScreen();\n+            btnWidth = changeMnemonicButton.getWidth();\n+            btnHeight = changeMnemonicButton.getHeight();\n+        });\n+\n+        doMouseMove(p, btnWidth, btnHeight);\n+        if (tmpInt == item.getMnemonic()) {\n@@ -228,2 +230,8 @@\n-        robo.clickMouseOn(changeAcceleratorButton);\n-        if(compareObjects(tmpResult, item.getAccelerator())) {\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = changeAcceleratorButton.getLocationOnScreen();\n+            btnWidth = changeAcceleratorButton.getWidth();\n+            btnHeight = changeAcceleratorButton.getHeight();\n+        });\n+\n+        doMouseMove(p, btnWidth, btnHeight);\n+        if (compareObjects(tmpResult, item.getAccelerator())) {\n@@ -236,2 +244,8 @@\n-        robo.clickMouseOn(changeShortDescButton);\n-        if(compareObjects(tmpResult, item.getToolTipText())) {\n+        SwingUtilities.invokeAndWait(() -> {\n+            p = changeShortDescButton.getLocationOnScreen();\n+            btnWidth = changeShortDescButton.getWidth();\n+            btnHeight = changeShortDescButton.getHeight();\n+        });\n+\n+        doMouseMove(p, btnWidth, btnHeight);\n+        if (compareObjects(tmpResult, item.getToolTipText())) {\n@@ -242,0 +256,9 @@\n+\n+    public static void doMouseMove(Point p, int width, int height) {\n+        r.mouseMove(p.x + width \/ 2, p.y + height \/ 2);\n+        r.delay(500);\n+        r.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+        r.delay(500);\n+        r.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+        r.delay(500);\n+    }\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4839464.java","additions":137,"deletions":114,"binary":false,"changes":251,"status":"modified"},{"patch":"@@ -45,6 +45,0 @@\n-        bug4966168 test = new bug4966168();\n-        test.init();\n-    }\n-\n-    public void init() {\n-\n","filename":"test\/jdk\/javax\/swing\/JMenuItem\/bug4966168.java","additions":0,"deletions":6,"binary":false,"changes":6,"status":"modified"}]}