{"files":[{"patch":"@@ -0,0 +1,173 @@\n+\/*\n+ * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/* @test\n+   @key headful\n+   @bug 5047379\n+   @summary Checks that Tooltips are rendered properly for Metal Look and Feel\n+   @library ..\/regtesthelpers\n+   @build Util\n+   @run main bug5047379\n+*\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JComponent;\n+import javax.swing.JFrame;\n+import javax.swing.JLayeredPane;\n+import javax.swing.JPanel;\n+import javax.swing.JTextArea;\n+import javax.swing.JToolTip;\n+import javax.swing.KeyStroke;\n+import javax.swing.plaf.metal.MetalToolTipUI;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+\n+import java.awt.BorderLayout;\n+import java.awt.Dimension;\n+import java.awt.event.ContainerAdapter;\n+import java.awt.event.ContainerEvent;\n+import java.awt.event.KeyEvent;\n+import java.awt.GridLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+\n+public class bug5047379 {\n+    static JFrame frame;\n+    static JButton a;\n+    static JButton b;\n+    static JButton c;\n+    static JButton d;\n+    static Robot testRobot;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.setLookAndFeel(\"javax.swing.plaf.metal.MetalLookAndFeel\");\n+        testRobot = new Robot();\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            public void run() {\n+                runTest();\n+            }\n+        });\n+        testRobot.delay(1000);\n+        testRobot.waitForIdle();\n+        Point movePoint = getButtonPoint(b);\n+        testRobot.mouseMove(movePoint.x, movePoint.y);\n+        testRobot.delay(1000);\n+        testRobot.waitForIdle();\n+        handleToolTip();\n+    }\n+\n+\n+    static void handleToolTip() throws Exception {\n+        SwingUtilities.updateComponentTreeUI(frame);\n+\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+            @Override\n+            public void run() {\n+                try {\n+                    JToolTip tooltip = (JToolTip) Util.findSubComponent(\n+                            JFrame.getFrames()[0], \"JToolTip\");\n+\n+                    MetalToolTipUI toolTipObj = (MetalToolTipUI) MetalToolTipUI.createUI(tooltip);\n+\n+                    if (tooltip == null) {\n+                        throw new RuntimeException(\"Metal Tooltip not been found\");\n+                    }\n+                    checkAcclString(toolTipObj, tooltip);\n+\n+                } catch (Exception e) {\n+                    throw new RuntimeException(e);\n+                } finally {\n+                    frame.dispose();\n+                }\n+            }\n+        });\n+    }\n+\n+    static void checkAcclString(MetalToolTipUI toolTipObj, JToolTip tooltip) {\n+        toolTipObj.installUI(tooltip);\n+\n+        if (toolTipObj.getAcceleratorString() == null) {\n+            throw new RuntimeException(\"Acceleration String for ToolTip of Metal L&F is null\");\n+        }\n+    }\n+\n+    static Point getButtonPoint(JButton button) throws Exception {\n+        final Point[] result = new Point[1];\n+\n+        SwingUtilities.invokeAndWait(new Runnable() {\n+\n+            @Override\n+            public void run() {\n+                Point p = button.getLocationOnScreen();\n+                Dimension size = button.getSize();\n+                result[0] = new Point(p.x + size.width \/ 2, p.y + size.height \/ 2);\n+            }\n+        });\n+        return result[0];\n+    }\n+\n+    static void runTest() {\n+        frame = new JFrame();\n+        JTextArea area = new JTextArea();\n+        JPanel p = new JPanel();\n+\n+        String text = \"Mouse is hover over button B for the \\t\\t\\n\";\n+        text += \"ToolTip to appear. Here is what should show\\t\\t\\n\";\n+        text += \"The word \\\\\\\"TEXT\\\\\\\" and then \\\\\\\"CTRL-B\\\\\\\"\\\\n\\\"\\t\\t\";\n+        text += \"\\n\";\n+\n+        area.setText(text);\n+        area.setEditable(false);\n+        area.setFocusable(false);\n+\n+        frame.add(area, BorderLayout.CENTER);\n+\n+        p.setLayout(new GridLayout(1, 5));\n+\n+        a = new JButton(\"A\");\n+        a.setMnemonic(KeyEvent.VK_A);\n+        a.setToolTipText(\"TEXT\");\n+        p.add(a);\n+\n+        b = new JButton(\"B\");\n+        b.setMnemonic(KeyEvent.VK_B);\n+        b.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(\"ctrl B\"), \"foo\");\n+        b.setToolTipText(\"TEXT\");\n+        p.add(b);\n+\n+        c = new JButton(\"C\");\n+        c.setMnemonic(KeyEvent.VK_C);\n+        c.setToolTipText(\"<html>TEXT\");\n+        p.add(c);\n+\n+        d = new JButton(\"D\");\n+        d.setMnemonic(KeyEvent.VK_D);\n+        d.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(\"ctrl D\"), \"foo\");\n+        d.setToolTipText(\"<html>TEXT\");\n+        p.add(d);\n+        frame.add(p, BorderLayout.NORTH);\n+\n+        frame.pack();\n+        frame.setLocationRelativeTo(null);\n+        frame.setVisible(true);\n+    }\n+};\n","filename":"test\/jdk\/javax\/swing\/JToolTip\/bug5047379.java","additions":173,"deletions":0,"binary":false,"changes":173,"status":"added"}]}