{"files":[{"patch":"@@ -336,3 +336,13 @@\n-  Register tmp2 = (dst == rsi) ? rdx : rsi;\n-  assert_different_registers(dst, tmp2);\n-  __ lea(tmp2, src);\n+  \/\/ Shuffle registers such that dst is in c_rarg0 and addr in c_rarg1.\n+#ifdef _LP64\n+  Register arg0 = c_rarg0, arg1 = c_rarg1;\n+#else\n+  Register arg0 = rdi, arg1 = rsi;\n+#endif\n+  if (dst == arg1) {\n+    __ lea(arg0, src);\n+    __ xchgptr(arg1, arg0);\n+  } else {\n+    __ lea(arg1, src);\n+    __ movptr(arg0, dst);\n+  }\n@@ -344,1 +354,1 @@\n-        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), dst, tmp2);\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_narrow), arg0, arg1);\n@@ -346,1 +356,1 @@\n-        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), dst, tmp2);\n+        __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier), arg0, arg1);\n@@ -351,1 +361,1 @@\n-        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow), dst, tmp2);\n+        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak_narrow), arg0, arg1);\n@@ -353,1 +363,1 @@\n-        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), dst, tmp2);\n+        __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), arg0, arg1);\n@@ -357,1 +367,1 @@\n-      __ super_call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), dst, tmp2);\n+      __ call_VM_leaf(CAST_FROM_FN_PTR(address, ShenandoahRuntime::load_reference_barrier_weak), arg0, arg1);\n","filename":"src\/hotspot\/cpu\/x86\/gc\/shenandoah\/shenandoahBarrierSetAssembler_x86.cpp","additions":18,"deletions":8,"binary":false,"changes":26,"status":"modified"}]}