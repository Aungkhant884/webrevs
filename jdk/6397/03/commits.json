[{"commit":{"message":"Address feedback"},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestLangProperties.java"}],"sha":"19e8db246a46cb39767eac24011abdd94312432a"},{"commit":{"message":"Merge branch 'master' into 8276124"},"files":[],"sha":"bd9aadab3305fc129ce8546f30c42d454d194eb5"},{"commit":{"message":"Merge branch '8273544' into 8276124\n\nBring changes from the originating branch, added after this branch was created."},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"a9fcad8231b5efe37a0f05c4287184e318ccf171"},{"commit":{"message":"Repair a confusing commit 93f01b9"},"files":[],"sha":"b7c8c48a054c3bab9726daa7c1713fa3e54bc14a"},{"commit":{"message":"Address feedback\n\n - Hoist the tb (toolbox) field to SnippetTester\n - Use use default ctors instead of private no-arg ctors for test classes\n - Re-implement SnippetTester.checkOutputEither on top of JavadocTester.OutputChecker.checkAnyOf\n - Follow convention for jtreg comment\n - Improve method names with underscores"},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"981cc305a36c0e1b3f4c11d14a393f5e8ae90671"},{"commit":{"message":"Initial commit"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SnippetTaglet.java"},{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/snippet\/Parser.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestLangProperties.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"2e43402e21b13ad25bddf617fe4c1c9830509864"},{"commit":{"message":"Test one more corner case example"},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"fd33d86426ce9dba94db4b23ed7aa4005cd77ac8"},{"commit":{"message":"Remove trailing whitespace for jcheck"},"files":[],"sha":"3975b0c036c1de9ebd57f4861c191aa9c3761f1e"},{"commit":{"message":"Add negative tests for next-line markup\n\nCovers extra 2 lines of MarkupParser: [101, 102]"},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"6fe8667f61243d9e02f5b03af02aae102b294914"},{"commit":{"message":"Use the feature from JDK-8273154"},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java"}],"sha":"c3bad6489fd042060f0b0b169f847ada1669002a"},{"commit":{"message":"Test markup issues in an external snippet\n\nCovers extra 5 lines of SnippetTaglet: [244, 248]"},"files":[],"sha":"92b870908fafa2afe3a9e75a84417e3cc028c528"},{"commit":{"message":"Add TODO entries for FileManager-related issues"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SnippetTaglet.java"}],"sha":"425e75e85e415f3d7512c6ebfd09c403180d2bd0"},{"commit":{"message":"Improve error handling in SnippetTaglet\n\nUnifies error handling in the taglet by extracting an internal method and wrapping that method in try-catch. Fixes a few bugs where the attribute unexpectedly lacks value."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SnippetTaglet.java"}],"sha":"6bbc92a6fe07513f2c597ae32bd41f9aa4ef0983"},{"commit":{"message":"Cover blank and valueless \"region\" attribute\n\nIncreases test coverage for the \"region\" tag attribute. Fixes the bug where the valueless \"region\" attribute caused a crash (NPE)."},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/SnippetTaglet.java"}],"sha":"6acc9ed021bcc319e902e8e80ffe39e38f62c8a9"},{"commit":{"message":"Add tests that showcases *\/ and \\uxxxx\n\nIdeally, these tests should be implemented using hybrid snippets, to show how inline and external parts differ in treatment of *\/ and \\uxxxx."},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"c2f3514676492b4dd70531b8df51426ebb29fba7"},{"commit":{"message":"Encapsulate HTML representation of a snippet\n\nThis commit immediately removes some amount of repetition."},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java"},{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"baaf961b45320f56814f5b5b5fe6985ff02b54bd"},{"commit":{"message":"Apply test a naming convention\n\nA test may exercise both markup and tag syntax. Generally speaking, a test may be a part of multiple hierarchies. To model that, tests should be organized using tags (i.e. labels). A name component can be such a tag."},"files":[],"sha":"4acad75cacaca0c3cf4489b1bbd4268ab48d925a"},{"commit":{"message":"Rename test methods\n\nChanges tests names to match the terminology change that happened long ago: redundant snippets -> hybrid snippets."},"files":[],"sha":"fef073fbf1beed42fabfcd563127de4bab61210c"},{"commit":{"message":"Further increase test coverage\n\n  - removes dead code\n  - uses autogenerated getters instead of field access for records"},"files":[{"filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/taglets\/snippet\/Parser.java"}],"sha":"74d3bc5909987a8453bb9a4d7a4a1bb1c3d03e62"},{"commit":{"message":"Test snippet markup\n\nThe new test improves code coverage of jdk.javadoc.internal.doclets.toolkit.taglets.snippet as follows:\n\n            %method     %block      %branch    %line\n            -----------+------------+------------+------------\n    before  70%(80\/114) 76%(310\/407) 65%(178\/273) 81%(413\/508)\n    after   82%(94\/114) 84%(344\/407) 73%(202\/273) 90%(459\/508)\n\nNote that the table might become outdated due to rebases."},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/TestSnippetMarkup.java"}],"sha":"321b1770e3d6046b20a528c72b931c339384a6a5"},{"commit":{"message":"Refactor and clean up tests\n\n - subclasses JavadocTester to provide reusable check and utility methods that will be shared by multiple snippet test classes\n - fixes a stupid regex mistake: \\s -> \\\\s (filed a bug https:\/\/youtrack.jetbrains.com\/issue\/IDEA-279378)\n - re-orders some imports"},"files":[{"filename":"test\/langtools\/jdk\/javadoc\/doclet\/testSnippetTag\/SnippetTester.java"}],"sha":"511e62b7bf53dc9a77d9f0333f71b493e683ad22"},{"commit":{"message":"Test the --snippet-path option\n\n8266666 didn't test this option. This commit adds such a test with the \"@bug 8266666\" declaration. The test improves code coverage of jdk.javadoc.internal.doclets.toolkit.taglets.SnippetTaglet as follows:\n\n            %method     %block      %branch    %line\n            -----------+-----------+----------+------------\n    before  100%(11\/11) 88%(92\/104) 84%(81\/96) 88%(128\/145)\n    after   100%(11\/11) 90%(94\/104) 89%(86\/96) 89%(130\/145)\n\nNote that the table might become outdated due to rebases."},"files":[],"sha":"9acf1b6607dffcf665f0b371a70de5a45386f40c"},{"commit":{"message":"Leverage sealed classes in the implementation\n\nAfter JDK-8267636 has been integrated, jdk.javadoc is compiled using JDK 17. So we can finally use sealed classes where they were originally envisioned."},"files":[],"sha":"93f01b92ba549b7259e2fcfefa320c979296bd26"}]