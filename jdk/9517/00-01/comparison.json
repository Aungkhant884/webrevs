{"files":[{"patch":"@@ -114,11 +114,16 @@\n-\/\/                                          current_timestamp\n-\/\/                   GC events             \/  pause_time\n-\/\/                 \/     |     \\          | \/  \/\n-\/\/ -------------[----]-[---]--[--]--------|[--]-----> Time\n-\/\/              |         |                   |\n-\/\/              |         |                   |\n-\/\/              |<- limit |                   |\n-\/\/              |         |<- deficit         |\n-\/\/              |         ^                   |\n-\/\/              |                             |\n-\/\/              |<------- _time_slice   ----->|\n+\/\/                                                current_timestamp\n+\/\/                   GC events                   \/  pause_time\n+\/\/                 \/     |     \\                | \/  \/\n+\/\/ -------------[----]-[---]--[--]---[---]------|[--]-----> Time\n+\/\/              |         |                     |\n+\/\/              |         |                     |\n+\/\/              |<- limit |                     |\n+\/\/              |         |<- balance_timestamp |\n+\/\/              |         ^                     |\n+\/\/              |                               |\n+\/\/              |<--------  _time_slice  ------>|\n+\/\/\n+\/\/ The MMU constraint requires that we can spend up to `max_gc_time()` on GC\n+\/\/ pauses inside a window of `_time_slice` length. Therefore, we have a GC\n+\/\/ budget of `max_gc_time() - pause_time`, which is to be accounted for by past\n+\/\/ GC events.\n@@ -129,2 +134,2 @@\n-\/\/ time inside [deficit, current_timestamp], is equal to gc_budget. Next,\n-\/\/ return `deficit - limit`.\n+\/\/ time inside [balance_timestamp, current_timestamp] is equal to the budget.\n+\/\/ Next, return `balance_timestamp - limit`.\n@@ -132,1 +137,2 @@\n-\/\/ When there are no enough GC events, i.e. gc_budget has a surplus, return 0.\n+\/\/ When there are no enough GC events, i.e. we have a surplus buget, a new GC\n+\/\/ pause can start right away, so return 0.\n@@ -136,1 +142,1 @@\n-  \/\/ Clamp it by max\n+  \/\/ If the pause is over the maximum, just assume that it's the maximum.\n@@ -142,1 +148,1 @@\n-  \/\/ Iterate from newest to oldest\n+  \/\/ Iterate from newest to oldest.\n@@ -146,1 +152,1 @@\n-    \/\/ Outside the window\n+    \/\/ Outside the window.\n@@ -152,1 +158,1 @@\n-    \/\/ Would exceed the budget; strictly greater than\n+    \/\/ This duration would exceed (strictly greater than) the budget.\n@@ -154,4 +160,4 @@\n-      \/\/ The timestamp where a budget deficit occurs.\n-      double deficit_timestamp = elem->end_time() - gc_budget;\n-      assert(deficit_timestamp >= limit, \"inv\");\n-      return deficit_timestamp - limit;\n+      \/\/ This timestamp captures the instant the budget is balanced (or used up).\n+      double balance_timesstamp = elem->end_time() - gc_budget;\n+      assert(balance_timesstamp >= limit, \"inv\");\n+      return balance_timesstamp - limit;\n@@ -163,1 +169,1 @@\n-  \/\/ No enough gc time inside the window; a budget surplus\n+  \/\/ Not enough gc time spent inside the window, we have a budget surplus.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1MMUTracker.cpp","additions":29,"deletions":23,"binary":false,"changes":52,"status":"modified"}]}