{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -250,6 +250,27 @@\n-        if (osVer.patchVersion == 0) { \/\/ Omit trailing \".0\"\n-            nsVerStr = [NSString stringWithFormat:@\"%ld.%ld\",\n-                    (long)osVer.majorVersion, (long)osVer.minorVersion];\n-        } else {\n-            nsVerStr = [NSString stringWithFormat:@\"%ld.%ld.%ld\",\n-                    (long)osVer.majorVersion, (long)osVer.minorVersion, (long)osVer.patchVersion];\n+        \/\/ Copy out the char* if running on version other than pre-10.16 Mac OS (10.16 == 11.x)\n+        if (!((long)osVer.majorVersion == 10 &&\n+                   (long)osVer.minorVersion >= 16)) {\n+            if (osVer.patchVersion == 0) { \/\/ Omit trailing \".0\"\n+                nsVerStr = [NSString stringWithFormat:@\"%ld.%ld\",\n+                        (long)osVer.majorVersion, (long)osVer.minorVersion];\n+            } else {\n+                nsVerStr = [NSString stringWithFormat:@\"%ld.%ld.%ld\",\n+                        (long)osVer.majorVersion, (long)osVer.minorVersion, (long)osVer.patchVersion];\n+            }\n+            \/\/ Copy out the char*\n+            osVersionCStr = strdup([nsVerStr UTF8String]);\n+        } else if (getenv(\"SYSTEM_VERSION_COMPAT\") == NULL) {\n+            \/\/ Version 10.16, without explicit env setting of SYSTEM_VERSION_COMPAT\n+            \/\/ AKA 11.x; compute the version number from the letter in the ProductBuildVersion\n+            NSDictionary *version = [NSDictionary dictionaryWithContentsOfFile :\n+                             @\"\/System\/Library\/CoreServices\/SystemVersion.plist\"];\n+            if (version != NULL) {\n+                NSString *nsBuildVerStr = [version objectForKey : @\"ProductBuildVersion\"];\n+                if (nsBuildVerStr != NULL && nsBuildVerStr.length >= 3) {\n+                    int letter = [nsBuildVerStr characterAtIndex:2];\n+                    if (letter >= 'B' && letter <= 'Z') {\n+                        int vers = letter - 'A' - 1;\n+                        asprintf(&osVersionCStr, \"11.%d\", vers);\n+                    }\n+                }\n+            }\n@@ -257,2 +278,0 @@\n-        \/\/ Copy out the char*\n-        osVersionCStr = strdup([nsVerStr UTF8String]);\n","filename":"src\/java.base\/macosx\/native\/libjava\/java_props_macosx.c","additions":28,"deletions":9,"binary":false,"changes":37,"status":"modified"}]}