{"files":[{"patch":"@@ -154,3 +154,1 @@\n-  \/\/ will be collected only if there is enough time. We call these optional regions.\n-  \/\/ This member records the current number of regions that are of that type that\n-  \/\/ correspond to the first x entries in the collection set candidates.\n+  \/\/ will be collected only if there is enough time. We call these optional (old) regions.\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSet.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -50,1 +50,1 @@\n-  if ((other->length() == 0) || (_candidates.length() == 0)) {\n+  if (other->length() == 0) {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -32,1 +32,1 @@\n-G1CollectionCandidateListIterator::G1CollectionCandidateListIterator(G1CollectionCandidateList* which, uint position) :\n+inline G1CollectionCandidateListIterator::G1CollectionCandidateListIterator(G1CollectionCandidateList* which, uint position) :\n@@ -35,1 +35,1 @@\n-G1CollectionCandidateListIterator& G1CollectionCandidateListIterator::operator++() {\n+inline G1CollectionCandidateListIterator& G1CollectionCandidateListIterator::operator++() {\n@@ -41,1 +41,1 @@\n-HeapRegion* G1CollectionCandidateListIterator::operator*() {\n+inline HeapRegion* G1CollectionCandidateListIterator::operator*() {\n@@ -45,1 +45,1 @@\n-bool G1CollectionCandidateListIterator::operator==(const G1CollectionCandidateListIterator& rhs) {\n+inline bool G1CollectionCandidateListIterator::operator==(const G1CollectionCandidateListIterator& rhs) {\n@@ -49,1 +49,2 @@\n-bool G1CollectionCandidateListIterator::operator!=(const G1CollectionCandidateListIterator& rhs) {\n+\n+inline bool G1CollectionCandidateListIterator::operator!=(const G1CollectionCandidateListIterator& rhs) {\n@@ -53,1 +54,1 @@\n-G1CollectionSetCandidatesIterator::G1CollectionSetCandidatesIterator(G1CollectionSetCandidates* which, uint marking_position) :\n+inline G1CollectionSetCandidatesIterator::G1CollectionSetCandidatesIterator(G1CollectionSetCandidates* which, uint marking_position) :\n@@ -57,1 +58,1 @@\n-G1CollectionSetCandidatesIterator& G1CollectionSetCandidatesIterator::operator++() {\n+inline G1CollectionSetCandidatesIterator& G1CollectionSetCandidatesIterator::operator++() {\n@@ -65,1 +66,1 @@\n-HeapRegion* G1CollectionSetCandidatesIterator::operator*() {\n+inline HeapRegion* G1CollectionSetCandidatesIterator::operator*() {\n@@ -69,1 +70,1 @@\n-bool G1CollectionSetCandidatesIterator::operator==(const G1CollectionSetCandidatesIterator& rhs)  {\n+inline bool G1CollectionSetCandidatesIterator::operator==(const G1CollectionSetCandidatesIterator& rhs)  {\n@@ -74,1 +75,1 @@\n-bool G1CollectionSetCandidatesIterator::operator!=(const G1CollectionSetCandidatesIterator& rhs)  {\n+inline bool G1CollectionSetCandidatesIterator::operator!=(const G1CollectionSetCandidatesIterator& rhs)  {\n","filename":"src\/hotspot\/share\/gc\/g1\/g1CollectionSetCandidates.inline.hpp","additions":11,"deletions":10,"binary":false,"changes":21,"status":"modified"},{"patch":"@@ -31,1 +31,1 @@\n-#include \"gc\/g1\/g1CollectionSetCandidates.hpp\"\n+#include \"gc\/g1\/g1CollectionSetCandidates.inline.hpp\"\n","filename":"src\/hotspot\/share\/gc\/g1\/g1YoungGCPostEvacuateTasks.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+#include \"gc\/g1\/g1CollectionSetCandidates.inline.hpp\"\n@@ -431,2 +432,3 @@\n-  } else if (in_collection_set_candidates()) {\n-    st->print(\"|%s\", collection_set_candidate_short_type_str());\n+  } else if (is_collection_set_candidate()) {\n+    G1CollectionSetCandidates* candidates = G1CollectedHeap::heap()->collection_set()->candidates();\n+    st->print(\"|%s\", candidates->get_short_type_str(this));\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.cpp","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -444,1 +444,1 @@\n-  inline bool in_collection_set_candidates() const;\n+\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -344,8 +344,0 @@\n-inline bool HeapRegion::in_collection_set_candidates() const {\n-  return G1CollectedHeap::heap()->is_collection_set_candidate(this);\n-}\n-\n-inline const char* HeapRegion::collection_set_candidate_short_type_str() const {\n-  return G1CollectedHeap::heap()->collection_set()->candidates()->get_short_type_str(this);\n-}\n-\n","filename":"src\/hotspot\/share\/gc\/g1\/heapRegion.inline.hpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -202,1 +202,1 @@\n-class PtrQueueSet : public CHeapObj<mtGC> {\n+class PtrQueueSet {\n","filename":"src\/hotspot\/share\/gc\/shared\/ptrQueue.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}