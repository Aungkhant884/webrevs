{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2008, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2008, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,0 +94,2 @@\n+    private static final Class<?>[] EMPTY = new Class<?>[0];\n+\n@@ -6747,2 +6749,1 @@\n-        final List<Class<?>> empty = List.of();\n-        final List<Class<?>> longest = mhs.filter(Objects::nonNull).\n+        final Class<?>[] longest = mhs.filter(Objects::nonNull).\n@@ -6752,8 +6753,3 @@\n-                        map(MethodType::parameterList).\n-                        reduce((p, q) -> p.size() >= q.size() ? p : q).orElse(empty);\n-        return longest.isEmpty() ? empty : longest.subList(skipSize, longest.size());\n-    }\n-\n-    private static List<Class<?>> longestParameterList(List<List<Class<?>>> lists) {\n-        final List<Class<?>> empty = List.of();\n-        return lists.stream().reduce((p, q) -> p.size() >= q.size() ? p : q).orElse(empty);\n+                        map(MethodType::ptypes).\n+                        reduce((p, q) -> p.length >= q.length ? p : q).orElse(EMPTY);\n+        return longest.length == 0 ? List.of() : List.of(longest).subList(skipSize, longest.length);\n@@ -6765,1 +6761,1 @@\n-        return longestParameterList(List.of(longest1, longest2));\n+        return longest1.size() >= longest2.size() ? longest1 : longest2;\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":8,"deletions":12,"binary":false,"changes":20,"status":"modified"}]}