{"files":[{"patch":"@@ -2416,0 +2416,5 @@\n+     case Op_VectorMaskCmp:\n+       if (vlen < 2 || bit_size < 64) {\n+         return false;\n+      }\n+      break;\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -3771,2 +3771,1 @@\n-  const int mask = 1 << Klass::_lh_instance_slow_path_bit;\n-  __ z_tmll(Rsize, mask);\n+  __ z_tmll(Rsize, Klass::_lh_instance_slow_path_bit);\n","filename":"src\/hotspot\/cpu\/s390\/templateTable_s390.cpp","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -1430,1 +1430,1 @@\n-void C2_MacroAssembler::load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt) {\n+void C2_MacroAssembler::load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt, bool is_legacy) {\n@@ -1445,0 +1445,1 @@\n+    assert(!is_legacy || !is_subword_type(elem_bt) || vlen_in_bytes < 64, \"\");\n@@ -1448,1 +1449,2 @@\n-    vpsubb(dst, dst, src, vlen_enc);\n+    vpsubb(dst, dst, src, is_legacy ? AVX_256bit : vlen_enc);\n+\n@@ -1464,1 +1466,5 @@\n-  if (vlen_in_bytes <= 16) {\n+  if (vlen_in_bytes == 4) {\n+    movdl(dst, addr);\n+  } else if (vlen_in_bytes == 8) {\n+    movq(dst, addr);\n+  } else if (vlen_in_bytes == 16) {\n@@ -1473,0 +1479,1 @@\n+\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.cpp","additions":10,"deletions":3,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -144,1 +144,1 @@\n-  void load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt);\n+  void load_vector_mask(XMMRegister dst, XMMRegister src, int vlen_in_bytes, BasicType elem_bt, bool is_legacy);\n","filename":"src\/hotspot\/cpu\/x86\/c2_MacroAssembler_x86.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1838,0 +1838,5 @@\n+    case Op_VectorMaskCmp:\n+      if (vlen < 2 || size_in_bits < 32) {\n+        return false;\n+      }\n+      break;\n@@ -6909,1 +6914,1 @@\n-            vector_length_in_bytes(n->in(1)->in(1)) >=  8 && \/\/ src1\n+            vector_length_in_bytes(n->in(1)->in(1)) >=  4 && \/\/ src1\n@@ -7445,1 +7450,16 @@\n-instruct loadMask(vec dst, vec src) %{\n+instruct loadMask(legVec dst, legVec src) %{\n+  predicate(!VM_Version::supports_avx512vlbw());\n+  match(Set dst (VectorLoadMask src));\n+  effect(TEMP dst);\n+  format %{ \"vector_loadmask_byte $dst,$src\\n\\t\" %}\n+  ins_encode %{\n+    int vlen_in_bytes = vector_length_in_bytes(this);\n+    BasicType elem_bt = vector_element_basic_type(this);\n+\n+    __ load_vector_mask($dst$$XMMRegister, $src$$XMMRegister, vlen_in_bytes, elem_bt, true);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n+instruct loadMask_evex(vec dst, vec src) %{\n+  predicate(VM_Version::supports_avx512vlbw());\n@@ -7453,1 +7473,1 @@\n-    __ load_vector_mask($dst$$XMMRegister, $src$$XMMRegister, vlen_in_bytes, elem_bt);\n+    __ load_vector_mask($dst$$XMMRegister, $src$$XMMRegister, vlen_in_bytes, elem_bt, false);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":23,"deletions":3,"binary":false,"changes":26,"status":"modified"},{"patch":"@@ -931,0 +931,1 @@\n+    HandleMark hm(self);\n","filename":"src\/hotspot\/share\/runtime\/safepoint.cpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -1192,0 +1192,3 @@\n+compiler.err.pattern.expected=\\\n+    type pattern expected\n+\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -583,1 +583,1 @@\n-sun\/management\/jdp\/JdpDefaultsTest.java                         8241865 macosx-all\n+sun\/management\/jdp\/JdpDefaultsTest.java                         8241865 linux-aarch64,macosx-all\n","filename":"test\/jdk\/ProblemList.txt","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}