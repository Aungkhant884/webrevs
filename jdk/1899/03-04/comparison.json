{"files":[{"patch":"@@ -832,1 +832,1 @@\n-  JVMState* jvms() const { return _jvms; }\n+  virtual JVMState* jvms() const { return _jvms; }\n","filename":"src\/hotspot\/share\/opto\/machnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -1049,8 +1049,1 @@\n-JVMState* Node::jvms() const {\n-  if (is_SafePoint()) {\n-    return as_SafePoint()->jvms();\n-  } else if (is_MachSafePoint()) {\n-    return as_MachSafePoint()->jvms();\n-  }\n-  return nullptr;\n-}\n+JVMState* Node::jvms() const { return NULL; }\n","filename":"src\/hotspot\/share\/opto\/node.cpp","additions":2,"deletions":9,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n@@ -999,1 +999,1 @@\n-  virtual const TypePtr* adr_type() const { return NULL; }\n+  virtual const class TypePtr *adr_type() const { return NULL; }\n@@ -1086,3 +1086,1 @@\n-  \/\/ Only SafePointNode\/MachSafeNode and their subclasses implement jvms(),\n-  \/\/ so we don't declare it virtual but resort to c2's rtti.\n-  JVMState* jvms() const;\n+  virtual JVMState* jvms() const;\n","filename":"src\/hotspot\/share\/opto\/node.hpp","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"}]}