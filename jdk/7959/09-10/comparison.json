{"files":[{"patch":"@@ -85,5 +85,0 @@\n-  \/\/ block async exceptions during upcalls to prevent them from\n-  \/\/ happening outside user-defined exception handlers\n-  \/\/ and terminating the VM through one of the fallback handlers.\n-  thread->block_async_exceptions();\n-\n@@ -99,1 +94,1 @@\n-  ThreadStateTransition::transition_from_native(thread, _thread_in_Java, false \/* check_asyncs (already blocked above)*\/);\n+  ThreadStateTransition::transition_from_native(thread, _thread_in_Java, true \/* check_asyncs *\/);\n@@ -139,1 +134,0 @@\n-  thread->unblock_async_exceptions();\n","filename":"src\/hotspot\/share\/prims\/universalUpcallHandler.cpp","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -846,3 +846,0 @@\n-  inline bool async_exceptions_blocked();\n-  inline void block_async_exceptions();\n-  inline void unblock_async_exceptions();\n","filename":"src\/hotspot\/share\/runtime\/thread.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -190,12 +190,0 @@\n-inline bool JavaThread::async_exceptions_blocked() {\n-  return handshake_state()->async_exceptions_blocked();\n-}\n-\n-inline void JavaThread::block_async_exceptions() {\n-  handshake_state()->set_async_exceptions_blocked(true);\n-}\n-\n-inline void JavaThread::unblock_async_exceptions() {\n-  handshake_state()->set_async_exceptions_blocked(false);\n-}\n-\n@@ -203,2 +191,2 @@\n-  assert(!_target->async_exceptions_blocked(), \"Nesting is not supported\");\n-  _target->block_async_exceptions();\n+  assert(!_target->handshake_state()->async_exceptions_blocked(), \"Nesting is not supported\");\n+  _target->handshake_state()->set_async_exceptions_blocked(true);\n@@ -207,1 +195,1 @@\n-  _target->unblock_async_exceptions();\n+  _target->handshake_state()->set_async_exceptions_blocked(false);\n","filename":"src\/hotspot\/share\/runtime\/thread.inline.hpp","additions":3,"deletions":15,"binary":false,"changes":18,"status":"modified"}]}