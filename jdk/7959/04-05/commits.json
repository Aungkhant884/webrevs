[{"commit":{"message":"Remove unneeded ComputeMoveOrder"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"}],"sha":"e84e33793004827f9873f5f1a3339d37fca0fb9a"},{"commit":{"message":"Remove comment about native calls in lcm.cpp"},"files":[{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"}],"sha":"253a5057184f2858711e5ab83b354068b6cd0ad3"},{"commit":{"message":"8284072: foreign\/StdLibTest.java randomly crashes on MacOS\/AArch64\n\nReviewed-by: jvernee, mcimadamore"},"files":[],"sha":"8c9a5e390fd516def1bf150b5542b9ae4f895ddb"},{"commit":{"message":"Update riscv and arm stubs"},"files":[{"filename":"src\/hotspot\/cpu\/riscv\/riscv.ad"},{"filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp"}],"sha":"cb2fa54f2285b1a5bcaf53bafbef6b414d454ca8"},{"commit":{"message":"Remove spurious ProblemList change"},"files":[{"filename":"test\/jdk\/ProblemList.txt"}],"sha":"0445349fdf5ecf62d09110c502a2f809edf5f44c"},{"commit":{"message":"Pass pointer to LogStream"},"files":[],"sha":"7ba6061bd8ca71fd23877cc7046ad7ed76ec0248"},{"commit":{"message":"Polish"},"files":[{"filename":"test\/jdk\/ProblemList.txt"}],"sha":"602ffc0addb2fbedcdd02e1681e0ac706a6d2b25"},{"commit":{"message":"Replace TraceNativeInvokers flag with unified logging"},"files":[{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"}],"sha":"bb456040892c74acedcbb129f6c618fa189f2565"},{"commit":{"message":"Fix other platforms, take 2"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"}],"sha":"eae09686732fc3447f70bcbb177d3d598a81abc3"},{"commit":{"message":"Fix other platforms"},"files":[{"filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp"}],"sha":"1217d51abb73402aeb35806d025db22fafb8fda1"},{"commit":{"message":"8277601: OptimizedEntryBlob should implement preserve_callee_argument_oops\n\nReviewed-by: mcimadamore"},"files":[],"sha":"5c1246e1281687e19bc20b2b894b8ac748d80b49"},{"commit":{"message":"8280721: Rewrite binding of foreign classes to use javaClasses.h\/cpp\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/methodHandles_x86.cpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"},{"filename":"src\/hotspot\/share\/classfile\/vmClassMacros.hpp"},{"filename":"src\/hotspot\/share\/classfile\/vmSymbols.hpp"},{"filename":"src\/hotspot\/share\/prims\/nativeLookup.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"}],"sha":"f749da31078d975dfd2233903faef7a9bcf07274"},{"commit":{"message":"8277657: OptimizedEntryBlob should extend RuntimeBlob directly\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/whitebox.cpp"}],"sha":"3541a19c04e21e6cd1fdcc09afcefb9899f40c4e"},{"commit":{"message":"8276647: Remove C2 trivial call intrinsification support\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad"},{"filename":"src\/hotspot\/cpu\/arm\/arm_32.ad"},{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"},{"filename":"src\/hotspot\/cpu\/s390\/s390.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_32.ad"},{"filename":"src\/hotspot\/cpu\/x86\/x86_64.ad"},{"filename":"src\/hotspot\/share\/adlc\/formssel.cpp"},{"filename":"src\/hotspot\/share\/c1\/c1_GraphBuilder.cpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"},{"filename":"src\/hotspot\/share\/code\/compiledMethod.cpp"},{"filename":"src\/hotspot\/share\/code\/debugInfoRec.cpp"},{"filename":"src\/hotspot\/share\/code\/debugInfoRec.hpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/classes.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.hpp"},{"filename":"src\/hotspot\/share\/opto\/lcm.cpp"},{"filename":"src\/hotspot\/share\/opto\/machnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/matcher.cpp"},{"filename":"src\/hotspot\/share\/opto\/node.hpp"},{"filename":"src\/hotspot\/share\/opto\/output.cpp"},{"filename":"src\/hotspot\/share\/runtime\/vmStructs.cpp"}],"sha":"b5b2c95b9473f460711ffadf2ce5b87049769341"},{"commit":{"message":"8275647: Enable multi-register return values for optimized upcall stubs\n\nReviewed-by: mcimadamore, ngasson"},"files":[],"sha":"0d98a90e0d93090e89f7b1384783955b3c136320"},{"commit":{"message":"8276987: Optimized upcall stub should be printed with -XX:+PrintStubCode\n\nReviewed-by: jvernee"},"files":[],"sha":"9d9332fd1a7279100890e0d41bda400eea992f20"},{"commit":{"message":"8275646: Implement optimized upcall stubs on AArch64\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/share\/prims\/whitebox.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"},{"filename":"test\/jdk\/ProblemList.txt"}],"sha":"309998e87465dbb204cf3a73c4afcb6835daeb37"},{"commit":{"message":"8255903: Enable multi-register return values for native invokers\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/share\/prims\/nativeLookup.cpp"}],"sha":"a6c1bf370bfaff0c8708759d618876bf07eccbb6"},{"commit":{"message":"8255902: Enable stack arguments for native invokers & optimized upcall stubs\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.hpp"}],"sha":"9900ad04e7ef69bdc0e82b48bce1e33e2bd766a8"},{"commit":{"message":"8274912: Eagerly generate native invokers\n\nReviewed-by: ngasson, mcimadamore\n\n8275382: foreign-memaccess+abi branch fails to build with error Undefined symbol: “typeArrayOopDesc::long_at(int) const”\n\nReviewed-by: jvernee"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/sharedRuntime_aarch64.cpp"},{"filename":"src\/hotspot\/cpu\/arm\/sharedRuntime_arm.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/methodHandles_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/ppc\/sharedRuntime_ppc.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/methodHandles_s390.cpp"},{"filename":"src\/hotspot\/cpu\/s390\/sharedRuntime_s390.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/methodHandles_x86.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_32.cpp"},{"filename":"src\/hotspot\/cpu\/x86\/sharedRuntime_x86_64.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciEnv.cpp"},{"filename":"src\/hotspot\/share\/ci\/ciEnv.hpp"},{"filename":"src\/hotspot\/share\/classfile\/javaClasses.cpp"},{"filename":"src\/hotspot\/share\/code\/codeCache.cpp"},{"filename":"src\/hotspot\/share\/code\/nmethod.cpp"},{"filename":"src\/hotspot\/share\/code\/nmethod.hpp"},{"filename":"src\/hotspot\/share\/jvmci\/jvmciRuntime.cpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/graphKit.cpp"},{"filename":"src\/hotspot\/share\/opto\/output.cpp"},{"filename":"src\/hotspot\/share\/runtime\/globals.hpp"},{"filename":"src\/hotspot\/share\/runtime\/sharedRuntime.hpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandleImpl.java"}],"sha":"f6c7bab3e251707782e4f6524073dc66a11721da"}]