{"files":[{"patch":"@@ -2193,1 +2193,1 @@\n-void os::Linux::print_glibc_malloc_tunables(outputStream* st) {\n+static void print_glibc_malloc_tunables(outputStream* st) {\n@@ -2258,1 +2258,1 @@\n-  os::Linux::print_glibc_malloc_tunables(st);\n+  print_glibc_malloc_tunables(st);\n@@ -4648,13 +4648,0 @@\n-  \/\/ Log also:\n-  \/\/ - LD_PRELOAD, since this is the most popular mechanism to divert libc functions\n-  \/\/ - Malloc Tunables, since those have a large effect on how the libc allocator works\n-  LogTarget(Info, os) lt;\n-  if (lt.is_enabled()) {\n-    LogStream ls(lt);\n-    const char* const v = ::getenv(\"LD_PRELOAD\");\n-    log_info(os)(\"LD_PRELOAD=%.1024s\", v ? v : \"(unset)\");\n-#ifdef __GLIBC__\n-    os::Linux::print_glibc_malloc_tunables(&ls);\n-#endif\n-  }\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":2,"deletions":15,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -192,2 +192,0 @@\n-  static void print_glibc_malloc_tunables(outputStream* st);\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -154,1 +154,0 @@\n-        allOptions.add(\"-Xlog:os\"); \/\/ for LD_PRELOAD, glibc version, and malloc tunables\n","filename":"test\/hotspot\/jtreg\/runtime\/os\/TestTrimNative.java","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}