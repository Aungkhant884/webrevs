{"files":[{"patch":"@@ -580,7 +580,8 @@\n-     * invokes {@link #skip(long) skip()} with parameter {@code n}.  If the\n-     * return value of {@code skip(n)} is non-negative and less than {@code n},\n-     * then {@link #read()} is invoked repeatedly until the stream is {@code n}\n-     * bytes beyond its position when this method was invoked or end of stream\n-     * is reached.  If the return value of {@code skip(n)} is negative or\n-     * greater than {@code n}, then an {@code IOException} is thrown.  Any\n-     * exception thrown by {@code skip()} or {@code read()} will be propagated.\n+     * invokes {@link #skip(long) skip()} repeatedly until the requested number\n+     * of bytes has been skipped or an error condition occurs.  If at any\n+     * point the return value of {@code skip()} is negative or greater than the\n+     * remaining number of bytes to be skipped, then an {@code IOException} is\n+     * thrown.  If {@code skip()} ever returns zero, then {@link #read()} is\n+     * invoked to read a single byte, and if it returns {@code -1}, then an\n+     * {@code EOFException} is thrown.  Any exception thrown by {@code skip()}\n+     * or {@code read()} will be propagated.\n","filename":"src\/java.base\/share\/classes\/java\/io\/InputStream.java","additions":8,"deletions":7,"binary":false,"changes":15,"status":"modified"}]}