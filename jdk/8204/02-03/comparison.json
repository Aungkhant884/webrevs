{"files":[{"patch":"@@ -5193,1 +5193,1 @@\n-  BLOCK_COMMENT(\"java_round_float: { \");\n+  BLOCK_COMMENT(\"java_round_double: { \");\n","filename":"src\/hotspot\/cpu\/aarch64\/macroAssembler_aarch64.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -167,1 +167,1 @@\n-  static int op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n+  static int vector_op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n@@ -170,2 +170,0 @@\n-      case Op_RoundF: \/\/ fall through\n-      case Op_RoundD: \/\/ fall through\n@@ -178,0 +176,10 @@\n+  \/\/ Returns pre-selection estimated size of a scalar operation.\n+  static int scalar_op_pre_select_sz_estimate(int vopc, BasicType ety) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundF: \/\/ fall through\n+      case Op_RoundD: {\n+        return 15;\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/cpu\/aarch64\/matcher_aarch64.hpp","additions":11,"deletions":3,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -158,3 +158,19 @@\n-  \/\/ Returns pre-selection estimated cost of a vector operation.\n-  static int op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n-    return 0;\n+  \/\/ Returns pre-selection estimated size of a vector operation.\n+  static int vector_op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundVF: \/\/ fall through\n+      case Op_RoundVD: {\n+        return 30;\n+      }\n+    }\n+  }\n+  \/\/ Returns pre-selection estimated size of a scalar operation.\n+  static int scalar_op_pre_select_sz_estimate(int vopc, BasicType ety) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundF: \/\/ fall through\n+      case Op_RoundD: {\n+        return 30;\n+      }\n+    }\n","filename":"src\/hotspot\/cpu\/arm\/matcher_arm.hpp","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -167,3 +167,19 @@\n-  \/\/ Returns pre-selection estimated cost of a vector operation.\n-  static int op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n-    return 0;\n+  \/\/ Returns pre-selection estimated size of a vector operation.\n+  static int vector_op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundVF: \/\/ fall through\n+      case Op_RoundVD: {\n+        return 30;\n+      }\n+    }\n+  }\n+  \/\/ Returns pre-selection estimated size of a scalar operation.\n+  static int scalar_op_pre_select_sz_estimate(int vopc, BasicType ety) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundF: \/\/ fall through\n+      case Op_RoundD: {\n+        return 30;\n+      }\n+    }\n@@ -171,1 +187,0 @@\n-\n","filename":"src\/hotspot\/cpu\/ppc\/matcher_ppc.hpp","additions":19,"deletions":4,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -166,1 +166,17 @@\n-    return 0;\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundVF: \/\/ fall through\n+      case Op_RoundVD: {\n+        return 30;\n+      }\n+    }\n+  }\n+  \/\/ Returns pre-selection estimated size of a scalar operation.\n+  static int scalar_op_pre_select_sz_estimate(int vopc, BasicType ety) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundF: \/\/ fall through\n+      case Op_RoundD: {\n+        return 30;\n+      }\n+    }\n","filename":"src\/hotspot\/cpu\/riscv\/matcher_riscv.hpp","additions":17,"deletions":1,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -156,3 +156,19 @@\n-  \/\/ Returns pre-selection estimated cost of a vector operation.\n-  static int op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n-    return 0;\n+  \/\/ Returns pre-selection estimated size of a vector operation.\n+  static int vector_op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundVF: \/\/ fall through\n+      case Op_RoundVD: {\n+        return 30;\n+      }\n+    }\n+  }\n+  \/\/ Returns pre-selection estimated size of a scalar operation.\n+  static int scalar_op_pre_select_sz_estimate(int vopc, BasicType ety) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundF: \/\/ fall through\n+      case Op_RoundD: {\n+        return 30;\n+      }\n+    }\n","filename":"src\/hotspot\/cpu\/s390\/matcher_s390.hpp","additions":19,"deletions":3,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -186,2 +186,2 @@\n-  \/\/ Returns pre-selection estimated cost of a vector operation.\n-  static int op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n+  \/\/ Returns pre-selection estimated size of a vector operation.\n+  static int vector_op_pre_select_sz_estimate(int vopc, BasicType ety, int vlen) {\n@@ -192,2 +192,0 @@\n-      case Op_RoundF: \/\/ fall through\n-      case Op_RoundD: \/\/ fall through\n@@ -200,0 +198,10 @@\n+  \/\/ Returns pre-selection estimated size of a scalar operation.\n+  static int scalar_op_pre_select_sz_estimate(int vopc, BasicType ety) {\n+    switch(vopc) {\n+      default: return 0;\n+      case Op_RoundF: \/\/ fall through\n+      case Op_RoundD: {\n+        return 30;\n+      }\n+    }\n+  }\n","filename":"src\/hotspot\/cpu\/x86\/matcher_x86.hpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -974,1 +974,3 @@\n-      case Op_RoundD:\n+      case Op_RoundD: {\n+          body_size += Matcher::scalar_op_pre_select_sz_estimate(n->Opcode(), n->bottom_type()->basic_type());\n+      } break;\n@@ -979,6 +981,2 @@\n-        const TypeVect* vt = n->bottom_type()->isa_vect();\n-        if (vt != NULL) {\n-          body_size += Matcher::op_pre_select_sz_estimate(n->Opcode(), vt->element_basic_type(), vt->length());\n-        } else {\n-          body_size += Matcher::op_pre_select_sz_estimate(n->Opcode(), n->bottom_type()->basic_type(), 1);\n-        }\n+        const TypeVect* vt = n->bottom_type()->is_vect();\n+        body_size += Matcher::vector_op_pre_select_sz_estimate(n->Opcode(), vt->element_basic_type(), vt->length());\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":5,"deletions":7,"binary":false,"changes":12,"status":"modified"}]}