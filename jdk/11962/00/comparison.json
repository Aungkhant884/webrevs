{"files":[{"patch":"@@ -8096,0 +8096,23 @@\n+\/\/ ============================================================================\n+\/\/ Reverse Bits Instructions\n+\n+instruct bits_reverse_int(iRegINoSp dst, iRegIorL2I src) %{\n+  match(Set dst (ReverseI src));\n+  ins_cost(INSN_COST);\n+  format %{ \"rbitw  $dst, $src\" %}\n+  ins_encode %{\n+    __ rbitw($dst$$Register, $src$$Register);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n+instruct bits_reverse_long(iRegLNoSp dst, iRegL src) %{\n+  match(Set dst (ReverseL src));\n+  ins_cost(INSN_COST);\n+  format %{ \"rbit  $dst, $src\" %}\n+  ins_encode %{\n+    __ rbit($dst$$Register, $src$$Register);\n+  %}\n+  ins_pipe(ialu_reg);\n+%}\n+\n","filename":"src\/hotspot\/cpu\/aarch64\/aarch64.ad","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2022, 2023, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,1 @@\n- * @requires os.arch==\"amd64\" | os.arch==\"x86_64\"\n+ * @requires (os.simpleArch == \"x64\" & vm.cpu.features ~= \".*avx2.*\") | os.arch == \"aarch64\"\n@@ -76,1 +76,1 @@\n-  @IR(applyIfCPUFeature={\"avx2\", \"true\"}, counts = {IRNode.REVERSE_V , \" > 0 \"})\n+  @IR(counts = {IRNode.REVERSE_V, \"> 0\"})\n@@ -92,1 +92,1 @@\n-  @IR(applyIfCPUFeature={\"avx2\", \"true\"}, failOn = {IRNode.REVERSE_V , IRNode.REVERSE_L})\n+  @IR(failOn = {IRNode.REVERSE_V, IRNode.REVERSE_L})\n@@ -108,1 +108,1 @@\n-  @IR(applyIfCPUFeature={\"avx2\", \"true\"}, failOn = {IRNode.REVERSE_V , IRNode.REVERSE_L})\n+  @IR(failOn = {IRNode.REVERSE_V, IRNode.REVERSE_L})\n@@ -124,1 +124,1 @@\n-  @IR(applyIfCPUFeature={\"avx2\", \"true\"}, counts = {IRNode.REVERSE_V, \"> 0\"})\n+  @IR(counts = {IRNode.REVERSE_V, \"> 0\"})\n@@ -140,1 +140,1 @@\n-  @IR(applyIfCPUFeature={\"avx2\", \"true\"}, failOn = {IRNode.REVERSE_V, IRNode.REVERSE_I})\n+  @IR(failOn = {IRNode.REVERSE_V, IRNode.REVERSE_I})\n@@ -156,1 +156,1 @@\n-  @IR(applyIfCPUFeature={\"avx2\", \"true\"}, failOn = {IRNode.REVERSE_V, IRNode.REVERSE_I})\n+  @IR(failOn = {IRNode.REVERSE_V, IRNode.REVERSE_I})\n","filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestReverseBitsVector.java","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"}]}