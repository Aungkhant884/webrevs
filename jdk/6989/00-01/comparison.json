{"files":[{"patch":"@@ -2569,1 +2569,0 @@\n-  bool converted = false;\n@@ -2571,0 +2570,1 @@\n+  BasicType exp_bt = bt;\n@@ -2573,2 +2573,1 @@\n-    bt = T_INT;\n-    converted = true;\n+    exp_bt = T_INT;\n@@ -2576,1 +2575,1 @@\n-  if (is_scaled_iv(exp, iv, p_scale, bt)) {\n+  if (is_scaled_iv(exp, iv, p_scale, exp_bt)) {\n@@ -2578,1 +2577,1 @@\n-      Node *zero = _igvn.integercon(0, bt);\n+      Node *zero = _igvn.zerocon(bt);\n@@ -2583,1 +2582,1 @@\n-      *p_converted = converted;\n+      *p_converted = exp_bt != bt;\n@@ -2589,2 +2588,2 @@\n-  if (opc == Op_Add(bt)) {\n-    if (is_scaled_iv(exp->in(1), iv, p_scale, bt)) {\n+  if (opc == Op_Add(exp_bt) && bt == exp_bt) {\n+    if (is_scaled_iv(exp->in(1), iv, p_scale, exp_bt)) {\n@@ -2595,1 +2594,1 @@\n-        *p_converted = converted;\n+        *p_converted = false;\n@@ -2599,1 +2598,1 @@\n-    if (is_scaled_iv(exp->in(2), iv, p_scale, bt)) {\n+    if (is_scaled_iv(exp->in(2), iv, p_scale, exp_bt)) {\n@@ -2604,1 +2603,1 @@\n-        *p_converted = converted;\n+        *p_converted = false;\n@@ -2608,1 +2607,2 @@\n-    if (is_scaled_iv_plus_extra_offset(exp->in(1), exp->in(2), iv, p_scale, p_offset, bt, converted, depth)) {\n+    bool converted  = false;\n+    if (is_scaled_iv_plus_extra_offset(exp->in(1), exp->in(2), iv, p_scale, p_offset, exp_bt, converted, depth)) {\n@@ -2614,1 +2614,1 @@\n-    if (is_scaled_iv_plus_extra_offset(exp->in(2), exp->in(1), iv, p_scale, p_offset, bt, converted, depth)) {\n+    if (is_scaled_iv_plus_extra_offset(exp->in(2), exp->in(1), iv, p_scale, p_offset, exp_bt, converted, depth)) {\n@@ -2620,2 +2620,2 @@\n-  } else if (opc == Op_Sub(bt)) {\n-    if (is_scaled_iv(exp->in(1), iv, p_scale, bt)) {\n+  } else if (opc == Op_Sub(exp_bt)) {\n+    if (exp_bt == bt && is_scaled_iv(exp->in(1), iv, p_scale, exp_bt)) {\n@@ -2623,1 +2623,1 @@\n-        Node *zero = _igvn.integercon(0, bt);\n+        Node *zero = _igvn.integercon(0, exp_bt);\n@@ -2626,1 +2626,1 @@\n-        Node* offset = SubNode::make(zero, exp->in(2), bt);\n+        Node* offset = SubNode::make(zero, exp->in(2), exp_bt);\n@@ -2630,3 +2630,0 @@\n-      if (p_converted != NULL) {\n-        *p_converted = converted;\n-      }\n@@ -2636,2 +2633,5 @@\n-    if (is_scaled_iv(exp->in(2), iv, &scale, bt)) {\n-      if (scale == min_signed_integer(bt)) {\n+    if (is_scaled_iv(exp->in(2), iv, &scale, exp_bt)) {\n+      if (scale == min_signed_integer(exp_bt)) {\n+        return false;\n+      }\n+      if (exp_bt != bt && _igvn.find_int_con(exp->in(1), -1) != 0) {\n@@ -2643,1 +2643,6 @@\n-        *p_offset = exp->in(1);\n+        if (exp_bt != bt) {\n+          *p_offset = _igvn.zerocon(bt);\n+          set_ctrl(*p_offset, C->root());\n+        } else {\n+          *p_offset = exp->in(1);\n+        }\n@@ -2649,1 +2654,1 @@\n-        *p_converted = converted;\n+        *p_converted = exp_bt != bt;\n@@ -2661,6 +2666,3 @@\n-          is_scaled_iv_plus_offset(exp1, iv, p_scale,\n-                               &offset2, bt, &converted, depth+1)) {\n-    if (bt == T_LONG && _igvn.type(offset2)->isa_int() &&\n-        (!_igvn.type(offset2)->is_int()->is_con() || _igvn.type(offset2)->is_int()->get_con() != 0)) {\n-      return false;\n-    }\n+      is_scaled_iv_plus_offset(exp1, iv, p_scale,\n+                               &offset2, bt, &converted, depth+1) &&\n+      offset2->is_Con()) {\n@@ -2669,5 +2671,0 @@\n-      if (bt == T_LONG && _igvn.type(offset2)->isa_int()) {\n-        offset2 = new ConvI2LNode(offset2);\n-        register_new_node(offset2, ctrl_off2);\n-      }\n-      Node* ctrl_exp2 = get_ctrl(exp2);\n@@ -2675,1 +2672,1 @@\n-      register_new_node(offset, get_early_ctrl(offset));\n+      register_new_node(offset, ctrl_off2);\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":33,"deletions":36,"binary":false,"changes":69,"status":"modified"},{"patch":"@@ -1263,1 +1263,1 @@\n-  bool is_scaled_iv_plus_offset(Node* exp, Node* iv, jlong* p_scale, Node** p_offset, BasicType bt, bool* converted = NULL, int depth = 0);\n+  bool is_scaled_iv_plus_offset(Node* exp, Node* iv, jlong* p_scale, Node** p_offset, BasicType bt, bool* p_converted = NULL, int depth = 0);\n","filename":"src\/hotspot\/share\/opto\/loopnode.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}