{"files":[{"patch":"@@ -2543,1 +2543,2 @@\n-\/\/ The multiplication must be done in full precision (exactly of type bt).\n+\/\/ The multiplication is either done in full precision (exactly of type bt),\n+\/\/ or else bt is T_LONG but iv is scaled using 32-bit arithmetic followed by a ConvI2L.\n@@ -2546,5 +2547,6 @@\n-\/\/            | (MulX SIV[iv] ConX) | (MulX ConX SIV[iv])\n-\/\/            | (LShiftX SIV[iv] ConI)\n-\/\/            | (SubX 0 SIV[iv])  -- same as MulX(iv, -1)\n-\/\/            | VIV[iv] | (ConvI2X VIV[iv])  -- from is_iv() above\n-\/\/ On success, the constant scale value is stored back to ret_scale.\n+\/\/            | (MulX VIV[iv] ConX) | (MulX ConX VIV[iv])\n+\/\/            | (LShiftX VIV[iv] ConI)\n+\/\/            | (ConvI2L SIV[iv])  -- a \"short-scale\" can occur here; note recursion\n+\/\/            | (SubX 0 SIV[iv])  -- same as MulX(iv, -scale); note recursion\n+\/\/ On success, the constant scale value is stored back to *p_scale.\n+\/\/ The value (*p_short_scale) reports if such a ConvI2L conversion was present.\n@@ -2559,0 +2561,3 @@\n+    if (p_short_scale != NULL) {\n+      *p_short_scale = false;\n+    }\n@@ -2621,1 +2626,1 @@\n-        *p_short_scale = (exp_bt != bt && scale != 1);\n+        *p_short_scale = *p_short_scale || (exp_bt != bt && scale != 1);\n","filename":"src\/hotspot\/share\/opto\/loopTransform.cpp","additions":12,"deletions":7,"binary":false,"changes":19,"status":"modified"}]}