{"files":[{"patch":"@@ -39,1 +39,0 @@\n-import com.sun.tools.javac.comp.DeferredAttr.DeferredTypeCompleter;\n@@ -58,1 +57,0 @@\n-import com.sun.tools.javac.util.Assert;\n@@ -339,1 +337,1 @@\n-    abstract class ArgumentType<T extends JCExpression> extends DeferredType implements DeferredTypeCompleter {\n+    abstract class ArgumentType<T extends JCExpression> extends DeferredType {\n@@ -354,7 +352,1 @@\n-        final DeferredTypeCompleter completer() {\n-            return this;\n-        }\n-\n-        @Override\n-        public final Type complete(DeferredType dt, ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n-            Assert.check(dt == this);\n+        public final Type complete(ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n@@ -363,1 +355,1 @@\n-                        deferredAttr.basicCompleter.complete(dt, resultInfo, deferredAttrContext) :\n+                        super.complete(resultInfo, deferredAttrContext) :\n@@ -369,1 +361,1 @@\n-                    argumentTypeCache.remove(new UniquePos(dt.tree));\n+                    argumentTypeCache.remove(new UniquePos(tree));\n@@ -371,1 +363,1 @@\n-                return deferredAttr.basicCompleter.complete(dt, resultInfo, deferredAttrContext);\n+                return super.complete(resultInfo, deferredAttrContext);\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/ArgumentAttr.java","additions":5,"deletions":13,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -309,2 +309,15 @@\n-        DeferredTypeCompleter completer() {\n-            return basicCompleter;\n+        public Type complete(ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n+            switch (deferredAttrContext.mode) {\n+                case SPECULATIVE:\n+                    \/\/Note: if a symbol is imported twice we might do two identical\n+                    \/\/speculative rounds...\n+                    Assert.check(mode == null || mode == AttrMode.SPECULATIVE);\n+                    JCTree speculativeTree = attribSpeculative(tree, env, resultInfo);\n+                    speculativeCache.put(speculativeTree, resultInfo);\n+                    return speculativeTree.type;\n+                case CHECK:\n+                    Assert.check(mode != null);\n+                    return attr.attribTree(tree, env, resultInfo);\n+            }\n+            Assert.error();\n+            return null;\n@@ -330,1 +343,1 @@\n-            return check(resultInfo, deferredStuckPolicy, completer());\n+            return check(resultInfo, deferredStuckPolicy);\n@@ -333,2 +346,1 @@\n-        private Type check(ResultInfo resultInfo, DeferredStuckPolicy deferredStuckPolicy,\n-                DeferredTypeCompleter deferredTypeCompleter) {\n+        private Type check(ResultInfo resultInfo, DeferredStuckPolicy deferredStuckPolicy) {\n@@ -339,1 +351,0 @@\n-                notPertinentToApplicability.add(deferredAttrContext.msym);\n@@ -341,0 +352,4 @@\n+                if (deferredAttrContext.mode == AttrMode.SPECULATIVE) {\n+                    notPertinentToApplicability.add(deferredAttrContext.msym);\n+                    mode = AttrMode.SPECULATIVE;\n+                }\n@@ -344,1 +359,1 @@\n-                    return deferredTypeCompleter.complete(this, resultInfo, deferredAttrContext);\n+                    return complete(resultInfo, deferredAttrContext);\n@@ -352,38 +367,0 @@\n-    \/**\n-     * A completer for deferred types. Defines an entry point for type-checking\n-     * a deferred type.\n-     *\/\n-    interface DeferredTypeCompleter {\n-        \/**\n-         * Entry point for type-checking a deferred type. Depending on the\n-         * circumstances, type-checking could amount to full attribution\n-         * or partial structural check (aka potential applicability).\n-         *\/\n-        Type complete(DeferredType dt, ResultInfo resultInfo, DeferredAttrContext deferredAttrContext);\n-    }\n-\n-\n-    \/**\n-     * A basic completer for deferred types. This completer type-checks a deferred type\n-     * using attribution; depending on the attribution mode, this could be either standard\n-     * or speculative attribution.\n-     *\/\n-    DeferredTypeCompleter basicCompleter = new DeferredTypeCompleter() {\n-        public Type complete(DeferredType dt, ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n-            switch (deferredAttrContext.mode) {\n-                case SPECULATIVE:\n-                    \/\/Note: if a symbol is imported twice we might do two identical\n-                    \/\/speculative rounds...\n-                    Assert.check(dt.mode == null || dt.mode == AttrMode.SPECULATIVE);\n-                    JCTree speculativeTree = attribSpeculative(dt.tree, dt.env, resultInfo);\n-                    dt.speculativeCache.put(speculativeTree, resultInfo);\n-                    return speculativeTree.type;\n-                case CHECK:\n-                    Assert.check(dt.mode != null);\n-                    return attr.attribTree(dt.tree, dt.env, resultInfo);\n-            }\n-            Assert.error();\n-            return null;\n-        }\n-    };\n-\n@@ -784,1 +761,1 @@\n-                        dt.check(resultInfo, dummyStuckPolicy, new StructuralStuckChecker());\n+                        new StructuralStuckChecker().check(dt, resultInfo, deferredAttrContext);\n@@ -816,1 +793,1 @@\n-                        dt.check(instResultInfo, dummyStuckPolicy, basicCompleter);\n+                        dt.check(instResultInfo, dummyStuckPolicy);\n@@ -827,1 +804,1 @@\n-        class StructuralStuckChecker extends TreeScanner implements DeferredTypeCompleter {\n+        class StructuralStuckChecker extends TreeScanner {\n@@ -833,1 +810,1 @@\n-            public Type complete(DeferredType dt, ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n+            public void check(DeferredType dt, ResultInfo resultInfo, DeferredAttrContext deferredAttrContext) {\n@@ -839,1 +816,0 @@\n-                return Type.noType;\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/DeferredAttr.java","additions":26,"deletions":50,"binary":false,"changes":76,"status":"modified"}]}