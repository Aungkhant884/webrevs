{"files":[{"patch":"@@ -52,0 +52,14 @@\n+\/*\n+ * This test verifies proper error recovery for method invocations which need\n+ * type inference, and have lambdas as arguments.\n+ *\n+ * The test will read the adjacent TestGetTypeMirrorReferenceData.java, parse and\n+ * attribute it, and call Trees.getTypeMirror on each place marked, in a block\n+ * comment, with:\n+ * getTypeMirror:<expected-typemirror-kind>:<expected-typemirror-toString>\n+ * The actual retrieved TypeMirror will be checked against the provided description,\n+ * verifying the return value of TypeMirror.getKind and TypeMirror.toString().\n+ *\n+ * The AST for TestGetTypeMirrorReferenceData.java will also be printed using\n+ * Tree.toString(), and compared to the expected AST form.\n+ *\/\n@@ -55,1 +69,1 @@\n-            Integer.toString(Runtime.getRuntime().version().feature());\n+            Integer.toString(Runtime.version().feature());\n","filename":"test\/langtools\/tools\/javac\/api\/lambdaErrorRecovery\/TestGetTypeMirrorReference.java","additions":15,"deletions":1,"binary":false,"changes":16,"previous_filename":"test\/langtools\/tools\/javac\/api\/TestGetTypeMirrorReference.java","status":"renamed"},{"patch":"","filename":"test\/langtools\/tools\/javac\/api\/lambdaErrorRecovery\/TestGetTypeMirrorReferenceData.java","additions":0,"deletions":0,"binary":false,"changes":0,"previous_filename":"test\/langtools\/tools\/javac\/api\/TestGetTypeMirrorReferenceData.java","status":"renamed"}]}