{"files":[{"patch":"@@ -32,0 +32,1 @@\n+import com.sun.tools.javac.code.Type.ArrayType;\n@@ -101,1 +102,2 @@\n-                if ((todo.candSym.flags() & Flags.VARARGS) == 0 &&\n+                boolean vararg = (todo.candSym.flags() & Flags.VARARGS) !=  0;\n+                if (!vararg &&\n@@ -109,0 +111,2 @@\n+                    Type formal = formals.tail.nonEmpty() || !vararg\n+                            ? formals.head : ((ArrayType) formals.head).elemtype;\n@@ -116,2 +120,2 @@\n-                        if (types.isFunctionalInterface(formals.head)) {\n-                            Type functionalType = types.findDescriptorType(formals.head);\n+                        if (types.isFunctionalInterface(formal)) {\n+                            Type functionalType = types.findDescriptorType(formal);\n@@ -166,1 +170,3 @@\n-                    formals = formals.tail;\n+                    if (formals.tail.nonEmpty() || !vararg) {\n+                        formals = formals.tail;\n+                    }\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/AttrRecover.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -91,0 +91,10 @@\n+                        convertVarArgs2(0, (c8)->{\n+                            Object o = c8;\n+                        }, (c8)->{\n+                            Object o = c8;\n+                        });\n+                        consumeVarArgs2(0, (c9)->{\n+                            Object o = c9;\n+                        }, (c9)->{\n+                            Object o = c9;\n+                        });\n@@ -107,0 +117,7 @@\n+                    public <T, R>R convertVarArgs2(T t, Function<T, R>... c) {\n+                        return null;\n+                    }\n+\n+                    public <T>void consumeVarArgs2(T t, Consumer<T>... c) {\n+                    }\n+\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetTypeMirrorReference.java","additions":17,"deletions":0,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -36,0 +36,2 @@\n+        convertVarArgs2(0, c8 -> {Object o = c8\/*getTypeMirror:DECLARED:java.lang.Integer*\/;}, c8 -> {Object o = c8\/*getTypeMirror:DECLARED:java.lang.Integer*\/;});\n+        consumeVarArgs2(0, c9 -> {Object o = c9\/*getTypeMirror:DECLARED:java.lang.Integer*\/;}, c9 -> {Object o = c9\/*getTypeMirror:DECLARED:java.lang.Integer*\/;});\n@@ -47,0 +49,5 @@\n+    public <T, R> R convertVarArgs2(T t, Function<T, R>... c) {\n+        return null;\n+    }\n+    public <T> void consumeVarArgs2(T t, Consumer<T>... c) {\n+    }\n","filename":"test\/langtools\/tools\/javac\/api\/TestGetTypeMirrorReferenceData.java","additions":7,"deletions":0,"binary":false,"changes":7,"status":"modified"}]}