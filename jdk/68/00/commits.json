[{"commit":{"message":"8252853: AArch64: gc\/shenandoah\/TestVerifyJCStress.java fails intermittently with C1\n\nThis test fails occasionally when run with -XX:TieredStopAtLevel=1 on\nAArch64 with the error\n\n  java.util.concurrent.ExecutionException: java.lang.NullPointerException: Cannot assign field \"prev\" because \"node\" is null\n      at java.base\/java.util.concurrent.FutureTask.report(FutureTask.java:122)\n      at java.base\/java.util.concurrent.FutureTask.get(FutureTask.java:191)\n      at TestVerifyJCStress.main(TestVerifyJCStress.java:109)\n      [..snip..]\n  Caused by: java.lang.NullPointerException: Cannot assign field \"prev\" because \"node\" is null\n      at java.base\/java.util.concurrent.locks.StampedLock.acquireWrite(StampedLock.java:1221)\n      at java.base\/java.util.concurrent.locks.StampedLock.writeLockInterruptibly(StampedLock.java:536)\n      at TestVerifyJCStress$Test.WLI_Us(TestVerifyJCStress.java:133)\n\nThe particular configuration that fails is -XX:ShenandoahGCMode=iu. In\nthis mode the Shenandoah C1 CAS implementation calls into\nShenandoahBarrierSetAssembler::storeval_barrier() which performs a VM\nleaf call in the slow path (via satb_write_barrier_pre()) but only saves\nR0-R4 and V0 (for the interpreter, I guess). Instead it needs to\npreserve all the caller saved registers as some of these might hold live\nvalues over the CAS in the C1 generated code.\n\nTested jtreg hotspot_all_no_apps, jdk_core, plus jcstress with -jvmArgs\n'-XX:+UseShenandoahGC -XX:ShenandoahGCMode=iu -XX:TieredStopAtLevel=1'\nwhich would also fail in the same way."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/gc\/shenandoah\/shenandoahBarrierSetAssembler_aarch64.cpp"},{"filename":"test\/hotspot\/jtreg\/gc\/shenandoah\/TestVerifyJCStress.java"}],"sha":"5f3511f18d1f04fdcc57c914df4d1625df2f495b"}]