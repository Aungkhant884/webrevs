{"files":[{"patch":"@@ -29,0 +29,2 @@\n+import java.util.Objects;\n+\n@@ -64,1 +66,1 @@\n-        this.party = partyName;\n+        this.party = Objects.requireNonNull(partyName);\n@@ -73,1 +75,1 @@\n-        this.party = partyName;\n+        this(null, partyName);\n@@ -109,0 +111,3 @@\n+        if (party == null) {\n+            throw new IOException(\"party cannot be missing\");\n+        }\n@@ -135,3 +140,0 @@\n-        if (party == null)\n-            throw  new IOException(\"Cannot have null partyName\");\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/EDIPartyName.java","additions":7,"deletions":5,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -256,1 +256,1 @@\n-                newName = new GeneralName(new X400Address((byte[])null));\n+                newName = new GeneralName(new X400Address(null));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtrees.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -338,1 +338,1 @@\n-    byte[] nameValue;\n+    DerValue derValue;\n@@ -345,3 +345,0 @@\n-    public X400Address(byte[] value) {\n-        nameValue = value;\n-    }\n@@ -356,1 +353,1 @@\n-        nameValue = derValue.toByteArray();\n+        this.derValue = derValue;\n@@ -372,0 +369,1 @@\n+    @Override\n@@ -373,1 +371,0 @@\n-        DerValue derValue = new DerValue(nameValue);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X400Address.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -0,0 +1,48 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/* @test\n+ * @bug 8296741\n+ * @summary Illegal X400Address and EDIPartyName should not be created\n+ * @library \/test\/lib\n+ * @modules java.base\/sun.security.x509\n+ *\/\n+\n+import jdk.test.lib.Utils;\n+import sun.security.x509.EDIPartyName;\n+\n+public class NullName {\n+\n+    public static void main(String[] argv) throws Exception {\n+        Utils.runAndCheckException(\n+                () -> new EDIPartyName((String)null),\n+                NullPointerException.class);\n+        Utils.runAndCheckException(\n+                () -> new EDIPartyName(null, null),\n+                NullPointerException.class);\n+        Utils.runAndCheckException(\n+                () -> new EDIPartyName(\"hello\", null),\n+                NullPointerException.class);\n+        new EDIPartyName(null, \"hello\");\n+    }\n+}\n","filename":"test\/jdk\/sun\/security\/x509\/EDIPartyName\/NullName.java","additions":48,"deletions":0,"binary":false,"changes":48,"status":"added"}]}