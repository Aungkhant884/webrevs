[{"commit":{"message":"Modified JTREG test to include feature constraints"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestEor3AArch64.java"}],"sha":"6df4f014c648fdb916437aeebea1f8385d7cdb32"},{"commit":{"message":"8293488: Add EOR3 backend rule for aarch64 SHA3 extension\n\nArm ISA v8.2A and v9.0A include SHA3 feature extensions and one of those\nSHA3 instructions - \"eor3\" performs an exclusive OR of three vectors.\nThis is helpful in applications that have multiple, consecutive \"eor\"\noperations which can be reduced by clubbing them into fewer operations\nusing the \"eor3\" instruction. For example -\neor a, a, b\neor a, a, c\ncan be optimized to single instruction - eor3 a, b, c\n\nThis patch adds backend rules for Neon and SVE2 \"eor3\" instructions and\na micro benchmark to assess the performance gains with this patch.\nFollowing are the results of the included micro benchmark on a 128-bit\naarch64 machine that supports Neon, SVE2 and SHA3 features -\n\nBenchmark               gain\nTestEor3.test1Int       10.87%\nTestEor3.test1Long      8.84%\nTestEor3.test2Int       21.68%\nTestEor3.test2Long      21.04%\n\nThe numbers shown are performance gains with using Neon eor3 instruction\nover the master branch that uses multiple \"eor\" instructions instead.\nSimilar gains can be observed with the SVE2 \"eor3\" version as well since\nthe \"eor3\" instruction is unpredicated and the machine under test uses a\nmaximum vector width of 128 bits which makes the SVE2 code generation very\nsimilar to the one with Neon."},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_vector_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"src\/hotspot\/cpu\/aarch64\/vm_version_aarch64.hpp"},{"filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp"},{"filename":"src\/jdk.internal.vm.ci\/share\/classes\/jdk.vm.ci.aarch64\/src\/jdk\/vm\/ci\/aarch64\/AArch64.java"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"},{"filename":"test\/hotspot\/jtreg\/compiler\/vectorization\/TestEor3AArch64.java"},{"filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/TestEor3.java"}],"sha":"b2de6107254b0ab66b7e6947976debdb18234ae2"}]