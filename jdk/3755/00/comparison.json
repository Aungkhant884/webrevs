{"files":[{"patch":"@@ -2519,0 +2519,2 @@\n+ATTRIBUTE_ALIGNED(8) double _DOUBLE0 = 0.0;\n+ATTRIBUTE_ALIGNED(8) double _DOUBLE0DOT5 = 0.5;\n@@ -2543,1 +2545,1 @@\n-  Label L_NOT_DOUBLE2;\n+  Label L_NOT_DOUBLE2, L_NOT_DOUBLE0DOT5;\n@@ -2549,0 +2551,2 @@\n+  address DOUBLE0 = (address) &_DOUBLE0;\n+  address DOUBLE0DOT5 = (address) &_DOUBLE0DOT5;\n@@ -2565,0 +2569,10 @@\n+  \/\/ Special case: pow(x, 0.5) => sqrt(x)\n+  ucomisd(xmm1, ExternalAddress(DOUBLE0DOT5)); \/\/ For pow(x, y), check whether y == 0.5\n+  jccb(Assembler::notEqual, L_NOT_DOUBLE0DOT5);\n+  jccb(Assembler::parity, L_NOT_DOUBLE0DOT5);\n+  ucomisd(xmm0, ExternalAddress(DOUBLE0));\n+  jccb(Assembler::belowEqual, L_NOT_DOUBLE0DOT5); \/\/ pow(x, 0.5) => sqrt(x) only for x > 0.0\n+  sqrtsd(xmm0, xmm0);\n+  jmp(L_2TAG_PACKET_21_0_2);\n+\n+  bind(L_NOT_DOUBLE0DOT5);\n","filename":"src\/hotspot\/cpu\/x86\/macroAssembler_x86_pow.cpp","additions":15,"deletions":1,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -1646,3 +1646,1 @@\n-    }\n-#if defined(X86) && defined(_LP64)\n-    else if (d->getd() == 0.5 && Matcher::match_rule_supported(Op_SqrtD)) {\n+    } else if (d->getd() == 0.5 && Matcher::match_rule_supported(Op_SqrtD)) {\n@@ -1687,1 +1685,0 @@\n-#endif \/\/ defined(X86) && defined(_LP64)\n","filename":"src\/hotspot\/share\/opto\/library_call.cpp","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,1 @@\n- * @bug 8265325\n+ * @bug 8265325 8265940\n@@ -28,1 +28,0 @@\n- * @requires os.arch==\"amd64\" | os.arch==\"x86_64\"\n","filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/math\/TestPow0Dot5Opt.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"}]}