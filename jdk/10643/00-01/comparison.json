{"files":[{"patch":"@@ -105,2 +105,6 @@\n-  __ la_patchable(ra, RuntimeAddress(Runtime1::entry_for(stub_id)), [&] (int32_t off) {\n-  __ jalr(ra, ra, off);});\n+  RuntimeAddress target(Runtime1::entry_for(stub_id));\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(ra, target, offset);\n+    __ jalr(ra, ra, offset);\n+  });\n","filename":"src\/hotspot\/cpu\/riscv\/c1_CodeStubs_riscv.cpp","additions":6,"deletions":2,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -1412,2 +1412,4 @@\n-  __ la_patchable(exceptionPC->as_register(), pc_for_athrow, [&] (int32_t off) {\n-    __ addi(exceptionPC->as_register(), exceptionPC->as_register(), off);\n+  __ relocate(pc_for_athrow.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(exceptionPC->as_register(), pc_for_athrow, offset);\n+    __ addi(exceptionPC->as_register(), exceptionPC->as_register(), offset);\n@@ -1842,2 +1844,6 @@\n-    __ la_patchable(t0, RuntimeAddress(dest), [&] (int32_t off) {\n-    __ jalr(x1, t0, off);});\n+    RuntimeAddress target(dest);\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ jalr(x1, t0, offset);\n+    });\n","filename":"src\/hotspot\/cpu\/riscv\/c1_LIRAssembler_riscv.cpp","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -70,2 +70,6 @@\n-  la_patchable(t0, RuntimeAddress(entry), [&] (int32_t off) {\n-  jalr(x1, t0, off);});\n+  RuntimeAddress target(entry);\n+  relocate(target.rspec(), [&] {\n+    int offset;\n+    la_patchable(t0, target, offset);\n+    jalr(x1, t0, offset);\n+  });\n@@ -569,2 +573,6 @@\n-  __ la_patchable(t0, RuntimeAddress(target), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  RuntimeAddress addr(target);\n+  __ relocate(addr.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, addr, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n","filename":"src\/hotspot\/cpu\/riscv\/c1_Runtime1_riscv.cpp","additions":12,"deletions":4,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -341,2 +341,7 @@\n-    __ la_patchable(t0, stub->slow_path(), [&] (int32_t off) {\n-    __ jalr(x1, t0, off);});\n+\n+    Address target(stub->slow_path());\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ jalr(x1, t0, offset);\n+    });\n","filename":"src\/hotspot\/cpu\/riscv\/gc\/z\/zBarrierSetAssembler_riscv.cpp","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -185,2 +185,5 @@\n-  la_patchable(xdispatch, ExternalAddress((address)Interpreter::dispatch_table()), [&] (int32_t off) {\n-    addi(xdispatch, xdispatch, off);\n+  ExternalAddress target((address)Interpreter::dispatch_table());\n+  relocate(target.rspec(), [&] {\n+    int offset;\n+    la_patchable(xdispatch, target, offset);\n+    addi(xdispatch, xdispatch, offset);\n","filename":"src\/hotspot\/cpu\/riscv\/interp_masm_riscv.cpp","additions":5,"deletions":2,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -76,2 +76,5 @@\n-  __ la_patchable(rcounter_addr, SafepointSynchronize::safepoint_counter_addr(), [&] (int32_t off) {\n-    __ addi(rcounter_addr, rcounter_addr, off);\n+  Address target(SafepointSynchronize::safepoint_counter_addr());\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(rcounter_addr, target, offset);\n+    __ addi(rcounter_addr, rcounter_addr, offset);\n@@ -93,4 +96,5 @@\n-    __ la_patchable(result,\n-                    ExternalAddress((address) JvmtiExport::get_field_access_count_addr()),\n-                    [&] (int32_t off) {\n-      __ lwu(result, Address(result, off));\n+    ExternalAddress target((address) JvmtiExport::get_field_access_count_addr());\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(result, target, offset);\n+      __ lwu(result, Address(result, offset));\n@@ -172,2 +176,6 @@\n-    __ la_patchable(t0, ExternalAddress(slow_case_addr), [&] (int32_t off) {\n-    __ jalr(x1, t0, off);});\n+    ExternalAddress target(slow_case_addr);\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ jalr(x1, t0, offset);\n+    });\n","filename":"src\/hotspot\/cpu\/riscv\/jniFastGetField_riscv.cpp","additions":16,"deletions":8,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -310,2 +310,6 @@\n-    la_patchable(t0, RuntimeAddress(StubRoutines::forward_exception_entry()), [&] (int32_t off) {\n-    jalr(x0, t0, off);});\n+    RuntimeAddress target(StubRoutines::forward_exception_entry());\n+    relocate(target.rspec(), [&] {\n+      int offset;\n+      la_patchable(t0, target, offset);\n+      jalr(x0, t0, offset);\n+    });\n@@ -384,2 +388,5 @@\n-  la_patchable(t1, ExternalAddress(StubRoutines::verify_oop_subroutine_entry_address()), [&] (int32_t off) {\n-    ld(t1, Address(t1, off));\n+  ExternalAddress target(StubRoutines::verify_oop_subroutine_entry_address());\n+  relocate(target.rspec(), [&] {\n+    int offset;\n+    la_patchable(t1, target, offset);\n+    ld(t1, Address(t1, offset));\n@@ -423,2 +430,5 @@\n-  la_patchable(t1, ExternalAddress(StubRoutines::verify_oop_subroutine_entry_address()), [&] (int32_t off) {\n-    ld(t1, Address(t1, off));\n+  ExternalAddress target(StubRoutines::verify_oop_subroutine_entry_address());\n+  relocate(target.rspec(), [&] {\n+    int offset;\n+    la_patchable(t1, target, offset);\n+    ld(t1, Address(t1, offset));\n@@ -1343,2 +1353,5 @@\n-      la_patchable(xheapbase, ExternalAddress(CompressedOops::ptrs_base_addr()), [&] (int32_t off) {\n-        ld(xheapbase, Address(xheapbase, off));\n+      ExternalAddress target(CompressedOops::ptrs_base_addr());\n+      relocate(target.rspec(), [&] {\n+        int offset;\n+        la_patchable(xheapbase, target, offset);\n+        ld(xheapbase, Address(xheapbase, offset));\n@@ -1700,2 +1713,5 @@\n-  _masm->la_patchable(t0, ExternalAddress((address)flag_addr), [&] (int32_t off) {\n-    _masm->lbu(t0, Address(t0, off));\n+  ExternalAddress target((address)flag_addr);\n+  _masm->relocate(target.rspec(), [&] {\n+    int offset;\n+    _masm->la_patchable(t0, target, offset);\n+    _masm->lbu(t0, Address(t0, offset));\n@@ -2449,2 +2465,5 @@\n-    la_patchable(tmp, entry, [&] (int32_t off) {\n-    jalr(x0, tmp, off);});\n+    relocate(entry.rspec(), [&] {\n+      int offset;\n+      la_patchable(tmp, entry, offset);\n+      jalr(x0, tmp, offset);\n+    });\n@@ -2467,2 +2486,5 @@\n-    la_patchable(tmp, entry, [&] (int32_t off) {\n-    jalr(x1, tmp, off);}); \/\/ link\n+    relocate(entry.rspec(), [&] {\n+      int offset;\n+      la_patchable(tmp, entry, offset);\n+      jalr(x1, tmp, offset); \/\/ link\n+    });\n@@ -2743,2 +2765,6 @@\n-    la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone)), [&] (int32_t off) {\n-    jalr(x1, t0, off);});\n+    RuntimeAddress target(CAST_FROM_FN_PTR(address, SharedRuntime::enable_stack_reserved_zone));\n+    relocate(target.rspec(), [&] {\n+      int offset;\n+      la_patchable(t0, target, offset);\n+      jalr(x1, t0, offset);\n+    });\n@@ -2750,2 +2776,6 @@\n-    la_patchable(t0, RuntimeAddress(StubRoutines::throw_delayed_StackOverflowError_entry()), [&] (int32_t off) {\n-    jalr(x0, t0, off);});\n+    target = RuntimeAddress(StubRoutines::throw_delayed_StackOverflowError_entry());\n+    relocate(target.rspec(), [&] {\n+      int offset;\n+      la_patchable(t0, target, offset);\n+      jalr(x0, t0, offset);\n+    });\n@@ -2968,2 +2998,4 @@\n-  la_patchable(t0, src2, [&] (int32_t off) {\n-    ld(t0, Address(t0, off));\n+  relocate(src2.rspec(), [&] {\n+    int offset;\n+    la_patchable(t0, src2, offset);\n+    ld(t0, Address(t0, offset));\n@@ -4155,0 +4187,1 @@\n+  RuntimeAddress target(dest);\n@@ -4156,1 +4189,1 @@\n-    far_call(RuntimeAddress(dest));\n+    far_call(target);\n@@ -4158,2 +4191,5 @@\n-    la_patchable(tmp, RuntimeAddress(dest), [&] (int32_t off) {\n-    jalr(x1, tmp, off);});\n+    relocate(target.rspec(), [&] {\n+      int offset;\n+      la_patchable(tmp, target, offset);\n+      jalr(x1, tmp, offset);\n+    });\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.cpp","additions":59,"deletions":23,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -639,2 +639,0 @@\n-private:\n-  void la_patchable(Register reg1, const Address &dest, int32_t &offset);\n@@ -642,8 +640,1 @@\n-  template <typename Callback>\n-  void la_patchable(Register reg1, const Address &dest, Callback do_offset) {\n-    relocate(dest.rspec(), [&] {\n-      int32_t off;\n-      la_patchable(reg1, dest, off);\n-      do_offset(off);\n-    });\n-  }\n+  void la_patchable(Register reg1, const Address &dest, int32_t &offset);\n@@ -948,2 +939,5 @@\n-      la_patchable(dest, InternalAddress(const_addr.target()), [&] (int32_t off) {\n-        ld(dest, Address(dest, off));\n+      InternalAddress target(const_addr.target());\n+      relocate(target.rspec(), [&] {\n+        int offset;\n+        la_patchable(dest, target, offset);\n+        ld(dest, Address(dest, offset));\n","filename":"src\/hotspot\/cpu\/riscv\/macroAssembler_riscv.hpp","additions":6,"deletions":12,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -342,2 +342,6 @@\n-  __ la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, SharedRuntime::fixup_callers_callsite)), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  RuntimeAddress target(CAST_FROM_FN_PTR(address, SharedRuntime::fixup_callers_callsite));\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, target, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n@@ -1289,2 +1293,5 @@\n-    __ la_patchable(t0, ExternalAddress((address)&DTraceMethodProbes), [&] (int32_t off) {\n-      __ lbu(t0, Address(t0, off));\n+    ExternalAddress target((address)&DTraceMethodProbes);\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ lbu(t0, Address(t0, offset));\n@@ -1492,2 +1499,5 @@\n-    __ la_patchable(t0, ExternalAddress((address)&DTraceMethodProbes), [&] (int32_t off) {\n-      __ lbu(t0, Address(t0, off));\n+    ExternalAddress target((address)&DTraceMethodProbes);\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ lbu(t0, Address(t0, offset));\n@@ -1625,2 +1635,6 @@\n-    __ la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans)), [&] (int32_t off) {\n-    __ jalr(x1, t0, off);});\n+    RuntimeAddress target(CAST_FROM_FN_PTR(address, JavaThread::check_special_condition_for_native_trans));\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ jalr(x1, t0, offset);\n+    });\n@@ -1798,2 +1812,6 @@\n-    __ la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap)), [&] (int32_t off) {\n-    __ jalr(x1, t0, off);});\n+    RuntimeAddress target(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap));\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ jalr(x1, t0, offset);\n+    });\n@@ -1891,2 +1909,6 @@\n-  __ la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::fetch_unroll_info)), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  RuntimeAddress target(CAST_FROM_FN_PTR(address, Deoptimization::fetch_unroll_info));\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, target, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n@@ -2034,2 +2056,6 @@\n-  __ la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  target = RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames));\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, target, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n@@ -2125,4 +2151,6 @@\n-  __ la_patchable(t0,\n-        RuntimeAddress(CAST_FROM_FN_PTR(address,\n-                                        Deoptimization::uncommon_trap)), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  RuntimeAddress target(CAST_FROM_FN_PTR(address, Deoptimization::uncommon_trap));\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, target, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n@@ -2250,2 +2278,6 @@\n-  __ la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames)), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  target = RuntimeAddress(CAST_FROM_FN_PTR(address, Deoptimization::unpack_frames));\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, target, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n@@ -2320,2 +2352,6 @@\n-  __ la_patchable(t0, RuntimeAddress(call_ptr), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  RuntimeAddress target(call_ptr);\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, target, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n@@ -2429,2 +2465,6 @@\n-    __ la_patchable(t0, RuntimeAddress(destination), [&] (int32_t off) {\n-    __ jalr(x1, t0, off);});\n+    RuntimeAddress target(destination);\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ jalr(x1, t0, offset);\n+    });\n@@ -2559,2 +2599,6 @@\n-  __ la_patchable(t0, RuntimeAddress(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C)), [&] (int32_t off) {\n-  __ jalr(x1, t0, off);});\n+  RuntimeAddress target(CAST_FROM_FN_PTR(address, OptoRuntime::handle_exception_C));\n+  __ relocate(target.rspec(), [&] {\n+    int offset;\n+    __ la_patchable(t0, target, offset);\n+    __ jalr(x1, t0, offset);\n+  });\n","filename":"src\/hotspot\/cpu\/riscv\/sharedRuntime_riscv.cpp","additions":70,"deletions":26,"binary":false,"changes":96,"status":"modified"},{"patch":"@@ -2266,2 +2266,5 @@\n-    __ la_patchable(t0, ExternalAddress((address) JvmtiExport::get_field_access_count_addr()), [&] (int32_t off) {\n-      __ lwu(x10, Address(t0, off));\n+    ExternalAddress target((address) JvmtiExport::get_field_access_count_addr());\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ lwu(x10, Address(t0, offset));\n@@ -2482,2 +2485,5 @@\n-    __ la_patchable(t0, ExternalAddress((address)JvmtiExport::get_field_modification_count_addr()), [&] (int32_t off) {\n-      __ lwu(x10, Address(t0, off));\n+    ExternalAddress target((address)JvmtiExport::get_field_modification_count_addr());\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ lwu(x10, Address(t0, offset));\n@@ -2781,2 +2787,5 @@\n-    __ la_patchable(t0, ExternalAddress((address)JvmtiExport::get_field_modification_count_addr()), [&] (int32_t off) {\n-      __ lwu(c_rarg3, Address(t0, off));\n+    ExternalAddress target((address)JvmtiExport::get_field_modification_count_addr());\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ lwu(c_rarg3, Address(t0, offset));\n@@ -2917,2 +2926,5 @@\n-    __ la_patchable(t0, ExternalAddress((address)JvmtiExport::get_field_access_count_addr()), [&] (int32_t off) {\n-      __ lwu(x12, Address(t0, off));\n+    ExternalAddress target((address)JvmtiExport::get_field_access_count_addr());\n+    __ relocate(target.rspec(), [&] {\n+      int offset;\n+      __ la_patchable(t0, target, offset);\n+      __ lwu(x12, Address(t0, offset));\n","filename":"src\/hotspot\/cpu\/riscv\/templateTable_riscv.cpp","additions":20,"deletions":8,"binary":false,"changes":28,"status":"modified"}]}