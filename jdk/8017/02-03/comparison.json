{"files":[{"patch":"@@ -301,2 +301,2 @@\n-        \/\/ GET with no body should not set the Content-Length header\n-        if (requestPublisher != null || !\"GET\".equals(request.method())) {\n+        \/\/ GET, HEAD and DELETE with no request body should not set the Content-Length header\n+        if (requestPublisher != null) {\n","filename":"src\/java.net.http\/share\/classes\/jdk\/internal\/net\/http\/Http1Request.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -58,4 +58,2 @@\n-    final String GET_NO_BODY_PATH = \"\/get_no_body\";\n-    final String GET_BODY_PATH = \"\/get_body\";\n-    static final String GET_BODY = \"Get with body\";\n-    static final String RESPONSE_BODY = \"Test Response Body\";\n+    final String NO_BODY_PATH = \"\/no_body\";\n+    final String BODY_PATH = \"\/body\";\n@@ -74,2 +72,2 @@\n-        testContentLengthServer.createContext(GET_NO_BODY_PATH, new NoContentLengthHandler());\n-        testContentLengthServer.createContext(GET_BODY_PATH, new ContentLengthHandler());\n+        testContentLengthServer.createContext(NO_BODY_PATH, new NoContentLengthHandler());\n+        testContentLengthServer.createContext(BODY_PATH, new ContentLengthHandler());\n@@ -86,1 +84,2 @@\n-        testContentLengthServer.stop(0);\n+        if (testContentLengthServer != null)\n+            testContentLengthServer.stop(0);\n@@ -92,0 +91,1 @@\n+        testLog.println(\"Checking GET with no request body\");\n@@ -95,1 +95,1 @@\n-                .uri(URI.create(testContentLenURI + GET_NO_BODY_PATH))\n+                .uri(URI.create(testContentLenURI + NO_BODY_PATH))\n@@ -99,2 +99,1 @@\n-        assertEquals(resp.statusCode(), 200,\n-                \"Content-length header was set in request but should not be present.\");\n+        assertEquals(resp.statusCode(), 200, resp.body());\n@@ -106,0 +105,1 @@\n+        testLog.println(\"Checking GET with request body\");\n@@ -108,2 +108,2 @@\n-                .method(\"GET\", HttpRequest.BodyPublishers.ofString(GET_BODY))\n-                .uri(URI.create(testContentLenURI + GET_BODY_PATH))\n+                .method(\"GET\", HttpRequest.BodyPublishers.ofString(\"GET Body\"))\n+                .uri(URI.create(testContentLenURI + BODY_PATH))\n@@ -113,2 +113,1 @@\n-        assertEquals(resp.statusCode(), 200,\n-                \"Content-length header was not set in request but should be present.\");\n+        assertEquals(resp.statusCode(), 200, resp.body());\n@@ -117,1 +116,59 @@\n-    public static void handleResponse(HttpExchange ex, int rCode) throws IOException {\n+    @Test\n+    \/\/ A DELETE request with no request body should have no Content-length header\n+    public void deleteWithNoBody() throws IOException, InterruptedException {\n+        testLog.println(\"Checking DELETE with no request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(HTTP_1_1)\n+                .DELETE()\n+                .uri(URI.create(testContentLenURI + NO_BODY_PATH))\n+                .build();\n+        HttpClient hc = HttpClient.newHttpClient();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+    }\n+\n+    @Test\n+    \/\/ A DELETE request with a request body should have a Content-length header\n+    public void deleteWithBody() throws IOException, InterruptedException {\n+        testLog.println(\"Checking DELETE with request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(HTTP_1_1)\n+                .method(\"DELETE\", HttpRequest.BodyPublishers.ofString(\"DELETE Body\"))\n+                .uri(URI.create(testContentLenURI + BODY_PATH))\n+                .build();\n+        HttpClient hc = HttpClient.newHttpClient();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+    }\n+\n+    @Test\n+    \/\/ A HEAD request with no request body should have no Content-length header\n+    public void headWithNoBody() throws IOException, InterruptedException {\n+        testLog.println(\"Checking HEAD with no request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(HTTP_1_1)\n+                .HEAD()\n+                .uri(URI.create(testContentLenURI + NO_BODY_PATH))\n+                .build();\n+        HttpClient hc = HttpClient.newHttpClient();\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+    }\n+\n+    @Test\n+    \/\/ A HEAD request with a request body should have a Content-length header\n+    public void headWithBody() throws IOException, InterruptedException {\n+        testLog.println(\"Checking HEAD with request body\");\n+        HttpRequest req = HttpRequest.newBuilder()\n+                .version(HTTP_1_1)\n+                .method(\"HEAD\", HttpRequest.BodyPublishers.ofString(\"HEAD Body\"))\n+                .uri(URI.create(testContentLenURI + BODY_PATH))\n+                .build();\n+        HttpClient hc = HttpClient.newHttpClient();\n+        \/\/ Sending this request invokes sendResponseHeaders which emits a warning about including\n+        \/\/ a Content-length header with a HEAD request\n+        HttpResponse<String> resp = hc.send(req, HttpResponse.BodyHandlers.ofString(UTF_8));\n+        assertEquals(resp.statusCode(), 200, resp.body());\n+    }\n+\n+    public static void handleResponse(HttpExchange ex, String body, int rCode) throws IOException {\n@@ -119,1 +176,1 @@\n-            byte[] bytes = RESPONSE_BODY.getBytes(UTF_8);\n+            byte[] bytes = body.getBytes(UTF_8);\n@@ -129,2 +186,2 @@\n-            testLog.println(\"NoContentLengthHandler: Received Headers \" +\n-                            exchange.getRequestHeaders().entrySet());\n+            testLog.println(\"NoContentLengthHandler: Received Headers \" + exchange.getRequestHeaders().entrySet() +\n+                            \" from \" + exchange.getRequestMethod() + \" request.\");\n@@ -135,1 +192,1 @@\n-                handleResponse(exchange, 200);\n+                handleResponse(exchange, \"Request completed\",200);\n@@ -137,2 +194,3 @@\n-                testLog.println(\"NoContentLengthHandler: Request contained an unexpected Content-length header\");\n-                handleResponse(exchange, 400);\n+                String responseBody = exchange.getRequestMethod() + \" request contained an unexpected \" +\n+                        \"Content-length header.\";\n+                handleResponse(exchange, responseBody, 400);\n@@ -147,2 +205,2 @@\n-            testLog.println(\"ContentLengthHandler: Received Headers \" +\n-                            exchange.getRequestHeaders().entrySet());\n+            testLog.println(\"ContentLengthHandler: Received Headers \" + exchange.getRequestHeaders().entrySet() +\n+                            \" from \" + exchange.getRequestMethod() + \" request.\");\n@@ -153,1 +211,1 @@\n-                handleResponse(exchange, 200);\n+                handleResponse(exchange, \"Request completed\",200);\n@@ -155,2 +213,3 @@\n-                testLog.println(\"ContentLengthHandler: Expected a Content-length header in request but was not present\");\n-                handleResponse(exchange, 400);\n+                String responseBody = \"Expected a Content-length header in \" +\n+                        exchange.getRequestMethod() + \" request but was not present.\";\n+                handleResponse(exchange, responseBody, 400);\n","filename":"test\/jdk\/java\/net\/httpclient\/ContentLengthHeaderTest.java","additions":85,"deletions":26,"binary":false,"changes":111,"status":"modified"}]}