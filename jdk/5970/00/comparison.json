{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,0 +33,1 @@\n+#include \"runtime\/orderAccess.hpp\"\n@@ -46,1 +47,1 @@\n-  return _num_instance_classes;\n+  return Atomic::load(&_num_instance_classes);\n@@ -50,1 +51,1 @@\n-  return _num_array_classes;\n+  return Atomic::load(&_num_array_classes);\n@@ -54,1 +55,1 @@\n-  Atomic::add(&_num_instance_classes, count);\n+  Atomic::add(&_num_instance_classes, count, memory_order_relaxed);\n@@ -58,2 +59,2 @@\n-  assert(count <= _num_instance_classes, \"Sanity\");\n-  Atomic::sub(&_num_instance_classes, count);\n+  size_t old_count = Atomic::fetch_and_add(&_num_instance_classes, -count, memory_order_relaxed);\n+  assert(old_count >= count, \"Sanity\");\n@@ -63,1 +64,1 @@\n-  Atomic::add(&_num_array_classes, count);\n+  Atomic::add(&_num_array_classes, count, memory_order_relaxed);\n@@ -67,2 +68,2 @@\n-  assert(count <= _num_array_classes, \"Sanity\");\n-  Atomic::sub(&_num_array_classes, count);\n+  size_t old_count = Atomic::fetch_and_add(&_num_array_classes, -count, memory_order_relaxed);\n+  assert(old_count >= count, \"Sanity\");\n","filename":"src\/hotspot\/share\/classfile\/classLoaderDataGraph.inline.hpp","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"}]}