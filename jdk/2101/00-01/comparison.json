{"files":[{"patch":"@@ -404,1 +404,1 @@\n-    return old_gen()->allocate(size);\n+    return old_gen()->allocate_and_record(size);\n@@ -412,1 +412,1 @@\n-      return old_gen()->allocate(size);\n+      return old_gen()->allocate_and_record(size);\n@@ -460,1 +460,1 @@\n-    result = old_gen()->allocate(size);\n+    result = old_gen()->allocate_and_record(size);\n@@ -473,1 +473,1 @@\n-    result = old_gen()->allocate(size);\n+    result = old_gen()->allocate_and_record(size);\n","filename":"src\/hotspot\/share\/gc\/parallel\/parallelScavengeHeap.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -150,0 +150,10 @@\n+HeapWord* PSOldGen::allocate_and_record(size_t word_size) {\n+  assert_locked_or_safepoint(Heap_lock);\n+  HeapWord* res = allocate(word_size);\n+  if (res != NULL) {\n+    ParallelScavengeHeap* heap = ParallelScavengeHeap::heap();\n+    heap->size_policy()->tenured_allocation(word_size * HeapWordSize);\n+  }\n+  return res;\n+}\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -137,0 +137,1 @@\n+  \/\/ Allocate memory, but don't record as an oldgen mutator allocation.\n@@ -142,0 +143,3 @@\n+  \/\/ Allocate memory and record as a mutator allocation.\n+  HeapWord* allocate_and_record(size_t word_size);\n+\n","filename":"src\/hotspot\/share\/gc\/parallel\/psOldGen.hpp","additions":4,"deletions":0,"binary":false,"changes":4,"status":"modified"}]}