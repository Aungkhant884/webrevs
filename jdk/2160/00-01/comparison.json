{"files":[{"patch":"@@ -339,0 +339,1 @@\n+  assert(!_is_fixed, \"Don't call for caller provided buffers\");\n@@ -341,1 +342,0 @@\n-  assert(!_is_fixed, \"Don't call for caller provided buffers\");\n@@ -356,10 +356,17 @@\n-  size_t write_len = len;               \/\/ number of non-null bytes to write\n-  size_t end = _written + len + 1;    \/\/ position after write and final '\\0'\n-  if (end > _capacity) {\n-    if (_is_fixed) {\n-      \/\/ if buffer cannot resize, silently truncate\n-      write_len = _capacity - _written - 1; \/\/ leave room for the final '\\0'\n-    } else {\n-      \/\/ For small overruns, double the buffer.  For larger ones,\n-      \/\/ increase to the requested size.\n-      grow(MAX2(end, _capacity * 2));\n+  assert(_capacity >= _written + 1, \"Sanity\");\n+  if (len == 0) {\n+    return;\n+  }\n+  const size_t reasonable_max_len = 1 * G;\n+  if (len >= reasonable_max_len) {\n+    assert(false, \"bad length? (\" SIZE_FORMAT \")\", len);\n+    return;\n+  }\n+  size_t write_len = 0;\n+  if (_is_fixed) {\n+    write_len = MIN2(len, _capacity - _written - 1);\n+  } else {\n+    write_len = len;\n+    size_t needed = _written + len + 1;\n+    if (needed > _capacity) {\n+      grow(MAX2(needed, _capacity * 2));\n@@ -368,2 +375,1 @@\n-  \/\/ invariant: buffer is always null-terminated\n-  guarantee(_written + write_len + 1 <= _capacity, \"stringStream oob\");\n+  assert(_written + write_len + 1 <= _capacity, \"stringStream oob\");\n@@ -371,1 +377,1 @@\n-    memcpy(_buffer + _written, s, write_len);\n+    ::memcpy(_buffer + _written, s, write_len);\n@@ -390,0 +396,1 @@\n+  _newlines = 0;\n@@ -396,1 +403,1 @@\n-  strncpy(copy, _buffer, _written);\n+  ::memcpy(copy, _buffer, _written);\n@@ -407,1 +414,1 @@\n-  if (_is_fixed == false && _buffer != NULL && _buffer != _small_buffer) {\n+  if (_is_fixed == false && _buffer != _small_buffer) {\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":23,"deletions":16,"binary":false,"changes":39,"status":"modified"},{"patch":"@@ -90,1 +90,0 @@\n-   int newlines() const { return _newlines; }\n@@ -195,1 +194,0 @@\n- protected:\n@@ -197,1 +195,1 @@\n-  size_t _written;\n+  size_t _written;  \/\/ Number of characters written, excluding termin. zero\n@@ -200,1 +198,1 @@\n-  char   _small_buffer[32];\n+  char   _small_buffer[48];\n","filename":"src\/hotspot\/share\/utilities\/ostream.hpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"}]}