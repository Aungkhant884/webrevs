{"files":[{"patch":"@@ -808,1 +808,1 @@\n-  } while (!is_terminating_entry(header) && _reader.has_bytes_left());\n+  } while (!is_terminating_entry(header, descriptor) && _reader.has_bytes_left());\n@@ -824,2 +824,6 @@\n-bool DwarfFile::DebugAranges::is_terminating_entry(const DwarfFile::DebugAranges::DebugArangesSetHeader& header) {\n-  return _reader.get_position() >= _entry_end;\n+bool DwarfFile::DebugAranges::is_terminating_entry(const DwarfFile::DebugAranges::DebugArangesSetHeader& header,\n+                                                   const AddressDescriptor& descriptor) {\n+  bool is_terminating = _reader.get_position() >= _entry_end;\n+  assert(!is_terminating || (descriptor.beginning_address == 0 && descriptor.range_length == 0),\n+         \"a terminating entry needs a pair of zero\");\n+  return is_terminating;\n","filename":"src\/hotspot\/share\/utilities\/elfFile.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -497,1 +497,2 @@\n-    bool is_terminating_entry(const DwarfFile::DebugAranges::DebugArangesSetHeader& header);\n+    bool is_terminating_entry(const DwarfFile::DebugAranges::DebugArangesSetHeader& header,\n+                              const AddressDescriptor& descriptor);\n","filename":"src\/hotspot\/share\/utilities\/elfFile.hpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"}]}