{"files":[{"patch":"@@ -785,14 +785,0 @@\n-    private boolean canRead() {\n-        @SuppressWarnings(\"removal\")\n-        SecurityManager sm = System.getSecurityManager();\n-        if (sm != null) {\n-            try {\n-                sm.checkRead(getPathForPermissionCheck());\n-                return true;\n-            } catch (SecurityException ignore) {\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-\n@@ -896,2 +882,0 @@\n-        \/\/ If SM and no read permission, then fall back to result derived so\n-        \/\/ far with case possibly not retained\n@@ -899,2 +883,0 @@\n-        if (!path.canRead())\n-            return result;\n@@ -926,0 +908,9 @@\n+            \/\/ Obtain the directory stream pointer. It will be closed by\n+            \/\/ UnixDirectoryStream::closeImpl.\n+            long dp = -1;\n+            try {\n+                dp = opendir(path);\n+            } catch (UnixException x) {\n+                x.rethrowAsIOException(path);\n+            }\n+\n@@ -931,1 +922,1 @@\n-            try (DirectoryStream<Path> entries = provider.newDirectoryStream(path, filter)) {\n+            try (DirectoryStream<Path> entries = new UnixDirectoryStream(path, dp, filter)) {\n","filename":"src\/java.base\/unix\/classes\/sun\/nio\/fs\/UnixPath.java","additions":10,"deletions":19,"binary":false,"changes":29,"status":"modified"}]}