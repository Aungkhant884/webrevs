{"files":[{"patch":"@@ -683,0 +683,5 @@\n+  \/\/ To avoid fragmentation the full collection requesting to clear the bitmap\n+  \/\/ might use fewer workers than available. To ensure the bitmap is cleared\n+  \/\/ as efficiently as possible the number of active workers are temporarily\n+  \/\/ increased to include all currently created workers.\n+  WithUpdatedActiveWorkers update(workers, workers->created_workers());\n","filename":"src\/hotspot\/share\/gc\/g1\/g1ConcurrentMark.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -97,0 +97,3 @@\n+  \/\/ Finally consider the amount of used regions.\n+  uint used_worker_limit = MAX2(heap->num_used_regions(), 1u);\n+\n@@ -98,3 +101,4 @@\n-  uint worker_count = MIN2(heap_waste_worker_limit, active_worker_limit);\n-  log_debug(gc, task)(\"Requesting %u active workers for full compaction (waste limited workers: %u, adaptive workers: %u)\",\n-                      worker_count, heap_waste_worker_limit, active_worker_limit);\n+  uint worker_count = MIN3(heap_waste_worker_limit, active_worker_limit, used_worker_limit);\n+  log_debug(gc, task)(\"Requesting %u active workers for full compaction (waste limited workers: %u, \"\n+                      \"adaptive workers: %u, used limited workers: %u)\",\n+                      worker_count, heap_waste_worker_limit, active_worker_limit, used_worker_limit);\n","filename":"src\/hotspot\/share\/gc\/g1\/g1FullCollector.cpp","additions":7,"deletions":3,"binary":false,"changes":10,"status":"modified"}]}