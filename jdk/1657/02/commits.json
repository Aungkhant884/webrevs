[{"commit":{"message":"Add total_space_rs, total reserved space to release_reserved_spaces and reserve_address_space_for_archives, made changes to check failed output on test."},"files":[{"filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp"},{"filename":"src\/hotspot\/share\/memory\/metaspaceShared.hpp"},{"filename":"src\/hotspot\/share\/runtime\/os.cpp"},{"filename":"test\/hotspot\/jtreg\/runtime\/cds\/SharedBaseAddress.java"}],"sha":"f79583061ced6aa0dbc22464e45b4a6eed831f8e"},{"commit":{"message":"8253762: JFR: getField(String) should be able to access subfields\n\nReviewed-by: mgronlun"},"files":[{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/EventType.java"},{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/consumer\/RecordedObject.java"},{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/internal\/Type.java"},{"filename":"test\/jdk\/jdk\/jfr\/api\/metadata\/eventtype\/TestGetField.java"}],"sha":"be7c72f87a9f37aa5911bf83f0d2802b7eb38606"},{"commit":{"message":"8257670: sun\/security\/ssl\/SSLSocketImpl\/SSLSocketLeak.java reports leaks\n\nReviewed-by: jnimeh"},"files":[{"filename":"test\/jdk\/sun\/security\/ssl\/SSLSocketImpl\/SSLSocketLeak.java"}],"sha":"9346e035164dc3d4203dc38b1570647e57d7288a"},{"commit":{"message":"8257796: [TESTBUG] TestUseSHA512IntrinsicsOptionOnSupportedCPU.java fails on x86_32\n\nReviewed-by: kvn"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/intrinsics\/sha\/cli\/TestUseSHA512IntrinsicsOptionOnSupportedCPU.java"}],"sha":"702a8b5d17ffeb759875d829d31b79f950db7c8f"},{"commit":{"message":"8257211: C2: Enable call devirtualization during post-parse phase\n\nReviewed-by: kvn, neliasso, thartmann"},"files":[{"filename":"src\/hotspot\/share\/compiler\/compilerDefinitions.cpp"},{"filename":"src\/hotspot\/share\/opto\/c2_globals.hpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.cpp"},{"filename":"src\/hotspot\/share\/opto\/callGenerator.hpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/callnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/compile.cpp"},{"filename":"src\/hotspot\/share\/opto\/compile.hpp"},{"filename":"src\/hotspot\/share\/opto\/doCall.cpp"},{"filename":"src\/hotspot\/share\/opto\/multnode.cpp"},{"filename":"src\/hotspot\/share\/opto\/multnode.hpp"},{"filename":"src\/hotspot\/share\/opto\/node.cpp"},{"filename":"src\/hotspot\/share\/opto\/phaseX.cpp"},{"filename":"src\/hotspot\/share\/opto\/phasetype.hpp"},{"filename":"src\/hotspot\/share\/utilities\/growableArray.hpp"}],"sha":"ceb50aec0d40c8746b7dba6d2a35f67293fcc79b"},{"commit":{"message":"8257572: Deprecate the archaic signal-chaining interfaces: sigset and signal\n\nReviewed-by: ihse, alanb, dcubed, erikj"},"files":[{"filename":"make\/modules\/java.base\/Lib.gmk"},{"filename":"src\/java.base\/unix\/native\/libjsig\/jsig.c"}],"sha":"97e34c476b48d1837e80c2434e11bb9c859ebfe9"},{"commit":{"message":"8257718: LogCompilation: late_inline doesnt work right for JDK 8 logs\n\nReviewed-by: redestad, kvn"},"files":[{"filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogParser.java"}],"sha":"802d9ab515f0b7f9bf285bd1e3c97c08d73ce5c4"},{"commit":{"message":"8257799: Update JLS cross-references in java.compiler\n\nReviewed-by: jjg"},"files":[{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/SourceVersion.java"},{"filename":"src\/java.compiler\/share\/classes\/javax\/lang\/model\/element\/VariableElement.java"}],"sha":"cbeff8f8b41c5335eab27c17f91e4291675f9526"},{"commit":{"message":"8254939: macOS: unused function 'replicate4_imm'\n\nReviewed-by: redestad, thartmann"},"files":[{"filename":"src\/hotspot\/cpu\/x86\/x86.ad"}],"sha":"44c3f8ee3819140fb327bf4f086b7c916cde2806"},{"commit":{"message":"8257805: Add compiler\/blackhole tests to tier1\n\nReviewed-by: kvn"},"files":[{"filename":"test\/hotspot\/jtreg\/TEST.groups"}],"sha":"7569beefdca3d056d1bc410dbc572dcbbfac84fa"},{"commit":{"message":"8257817: Shenandoah: Don't race with conc-weak-in-progress flag in weak-LRB\n\nReviewed-by: rkennke"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp"}],"sha":"768b8e270dad494bdca398218fe93544a0a70c0a"},{"commit":{"message":"8255619: Localized WinResources.properties have MsiInstallerStrings_en.wxl resource\n\nReviewed-by: herrick, naoto, asemenyuk"},"files":[{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_ja.properties"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/resources\/WinResources_zh_CN.properties"}],"sha":"260a27ede334abe7f6cd949b826968aa8bcfa3b8"},{"commit":{"message":"8257514: Fix the issues in jdk.jpackage identified by SpotBugs\n\nReviewed-by: asemenyuk, almatvee, shade"},"files":[{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/CfgFile.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/DeployParams.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/IOUtils.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/OverridableResource.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/PathGroup.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/internal\/ToolValidator.java"},{"filename":"src\/jdk.jpackage\/share\/classes\/jdk\/jpackage\/main\/CommandLine.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/ExecutableRebrander.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WinMsiBundler.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WindowsAppImageBuilder.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixPipeline.java"},{"filename":"src\/jdk.jpackage\/windows\/classes\/jdk\/jpackage\/internal\/WixSourcesBuilder.java"}],"sha":"89bbb02582553faff931b15a687a127933cf2342"},{"commit":{"message":"8257186: Size of heap segments is not computed correctlyFix overflow in size computation for heap segments\n\nReviewed-by: jvernee, chegar"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/HeapMemorySegmentImpl.java"},{"filename":"test\/jdk\/java\/foreign\/TestSegments.java"}],"sha":"ca3dedb4d1ae96558c666e3889afa8fce2c4557c"},{"commit":{"message":"8254784: javac should reject records with @SafeVarargs applied to varargs record component\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/resources\/compiler.properties"},{"filename":"test\/langtools\/tools\/javac\/diags\/examples\/SafeVarargsNotApplicableToRecordAccessors.java"},{"filename":"test\/langtools\/tools\/javac\/records\/RecordCompilationTests.java"}],"sha":"aaf011aab03bd634963faf974536797a02516dee"},{"commit":{"message":"8257788: Class fields could be local in the SunJSSE provider\n\nReviewed-by: shade"},"files":[{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/CertStatusExtension.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/HKDF.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLSecretDerivation.java"},{"filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/SSLTrafficKeyDerivation.java"}],"sha":"909dd8f3c855542ce51a952486b8e1c8245b8129"},{"commit":{"message":"8257679: Improved unix compatibility layer in Windows build (winenv)\n\nReviewed-by: erikj, jvernee, burban"},"files":[{"filename":".github\/workflows\/submit.yml"},{"filename":"make\/GenerateLinkOptData.gmk"},{"filename":"make\/InterimImage.gmk"},{"filename":"make\/RunTests.gmk"},{"filename":"make\/RunTestsPrebuilt.gmk"},{"filename":"make\/RunTestsPrebuiltSpec.gmk"},{"filename":"make\/TestImage.gmk"},{"filename":"make\/autoconf\/basic.m4"},{"filename":"make\/autoconf\/basic_tools.m4"},{"filename":"make\/autoconf\/basic_windows.m4"},{"filename":"make\/autoconf\/boot-jdk.m4"},{"filename":"make\/autoconf\/bootcycle-spec.gmk.in"},{"filename":"make\/autoconf\/build-aux\/config.guess"},{"filename":"make\/autoconf\/build-aux\/config.sub"},{"filename":"make\/autoconf\/build-performance.m4"},{"filename":"make\/autoconf\/compare.sh.in"},{"filename":"make\/autoconf\/configure.ac"},{"filename":"make\/autoconf\/flags-cflags.m4"},{"filename":"make\/autoconf\/flags-ldflags.m4"},{"filename":"make\/autoconf\/flags.m4"},{"filename":"make\/autoconf\/help.m4"},{"filename":"make\/autoconf\/jdk-options.m4"},{"filename":"make\/autoconf\/platform.m4"},{"filename":"make\/autoconf\/source-dirs.m4"},{"filename":"make\/autoconf\/spec.gmk.in"},{"filename":"make\/autoconf\/toolchain.m4"},{"filename":"make\/autoconf\/toolchain_microsoft.m4"},{"filename":"make\/autoconf\/toolchain_windows.m4"},{"filename":"make\/autoconf\/util.m4"},{"filename":"make\/autoconf\/util_paths.m4"},{"filename":"make\/autoconf\/util_windows.m4"},{"filename":"make\/common\/JavaCompilation.gmk"},{"filename":"make\/common\/MakeBase.gmk"},{"filename":"make\/common\/NativeCompilation.gmk"},{"filename":"make\/common\/Utils.gmk"},{"filename":"make\/common\/modules\/GensrcCommonLangtools.gmk"},{"filename":"make\/conf\/jib-profiles.js"},{"filename":"make\/hotspot\/test\/GtestImage.gmk"},{"filename":"make\/ide\/idea\/jdk\/idea.gmk"},{"filename":"make\/ide\/visualstudio\/hotspot\/CreateVSProject.gmk"},{"filename":"make\/ide\/vscode\/hotspot\/CreateVSCodeProject.gmk"},{"filename":"make\/jdk\/src\/classes\/build\/tools\/generatecharacter\/GenerateCharacter.java"},{"filename":"make\/modules\/java.base\/Copy.gmk"},{"filename":"make\/modules\/java.base\/gensrc\/GensrcCharacterData.gmk"},{"filename":"make\/modules\/java.base\/gensrc\/GensrcCharsetCoder.gmk"},{"filename":"make\/scripts\/extract-vs-env.cmd"},{"filename":"make\/scripts\/fixpath.sh"},{"filename":"make\/scripts\/windowsShortName.bat"},{"filename":"make\/src\/native\/fixpath.c"},{"filename":"src\/hotspot\/share\/adlc\/main.cpp"}],"sha":"7c4d53bf7b464990fd65e5f252e7ab6b721ab9d3"},{"commit":{"message":"8257517: LogCompilation: Add -z to the help messages\n\nReviewed-by: redestad"},"files":[{"filename":"src\/utils\/LogCompilation\/src\/main\/java\/com\/sun\/hotspot\/tools\/compiler\/LogCompilation.java"}],"sha":"1d9b3b7cfc8f137329608b37023ec2288859ed66"},{"commit":{"message":"8257037: No javac warning when calling deprecated constructor with diamond\n\nReviewed-by: mcimadamore"},"files":[{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Resolve.java"},{"filename":"test\/langtools\/tools\/javac\/T8257037\/T8257037.java"},{"filename":"test\/langtools\/tools\/javac\/T8257037\/T8257037.out"}],"sha":"228099e1669b5fe3e3c227fa4407e9bcd7af5c41"},{"commit":{"message":"8257798: [PPC64] undefined reference to Klass::vtable_start_offset()\n\nReviewed-by: goetz"},"files":[{"filename":"src\/hotspot\/cpu\/ppc\/ppc.ad"}],"sha":"25406762a406558803a628b10df0d6ac7c7411e9"},{"commit":{"message":"8257793: Shenandoah: SATB barrier should only filter out already strongly marked oops\n\nReviewed-by: shade, rkennke"},"files":[{"filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.inline.hpp"}],"sha":"2b3db195ceb47c5014c720ee62120b308f6d653e"},{"commit":{"message":"8257820: Remove gc\/ergonomics\/TestMinHeapSize.java as it is too brittle\n\nReviewed-by: jiefu, kbarrett"},"files":[],"sha":"48e9f142d71d6b4b70a6b0afd398d4c1eff2eef2"},{"commit":{"message":"8246778: Compiler implementation for Sealed Classes (Second Preview)\n\nCo-authored-by: Vicente Romero <vromero@openjdk.org>\nCo-authored-by: Harold Seigel <hseigel@openjdk.org>\nReviewed-by: lfoltan, mchung, alanb, mcimadamore, chegar"},"files":[{"filename":"src\/hotspot\/share\/prims\/jvm.cpp"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"src\/java.base\/share\/native\/libjava\/Class.c"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/code\/Types.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Check.java"},{"filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/parser\/JavacParser.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/GetPermittedSubclasses.jcod"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/GetPermittedSubclassesTest.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/BaseC.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/BaseI.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/Impl1.java"},{"filename":"test\/hotspot\/jtreg\/runtime\/sealedClasses\/noSubclass\/Impl2.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/sealed_classes\/SealedClassesReflectionTest.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/sealed_classes\/TestSecurityManagerChecks.java"},{"filename":"test\/langtools\/tools\/javac\/sealed\/BinaryCompatibilityTests.java"},{"filename":"test\/langtools\/tools\/javac\/sealed\/SealedCompilationTests.java"}],"sha":"d32d353eee96bf7aa4ce881a24b1b1bb797f3ae1"},{"commit":{"message":"8252807: The jdk.jfr.Recording.getStream does not work when toDisk is disabled\n\nReviewed-by: mgronlun"},"files":[{"filename":"src\/jdk.jfr\/share\/classes\/jdk\/jfr\/Recording.java"}],"sha":"e428ad1bda875324de1e20eccd83ea22ea43e71f"},{"commit":{"message":"8257184: Upstream 8252504: Add a method to MemoryLayout which returns a offset-computing method handle\n\nReviewed-by: mcimadamore, chegar"},"files":[{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/incubator\/foreign\/MemoryLayout.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/LayoutPath.java"},{"filename":"src\/jdk.incubator.foreign\/share\/classes\/jdk\/internal\/foreign\/Utils.java"},{"filename":"test\/jdk\/java\/foreign\/TestLayoutPaths.java"}],"sha":"5ff77098a80901df94cea2d24d337bd33274e3d8"},{"commit":{"message":"8255560: Class::isRecord should check that the current class is final and not abstract\n\nReviewed-by: mchung, darcy"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/lang\/Class.java"},{"filename":"test\/jdk\/java\/lang\/reflect\/records\/IsRecordTest.java"},{"filename":"test\/lib\/jdk\/test\/lib\/ByteCodeLoader.java"}],"sha":"94a37fc57228badf3f2624ad075e1fdaa13139e6"},{"commit":{"message":"8257588: Make os::_page_sizes a bitmask\n\nReviewed-by: tschatzl, stefank"},"files":[{"filename":"src\/hotspot\/os\/aix\/os_aix.cpp"},{"filename":"src\/hotspot\/os\/bsd\/os_bsd.cpp"},{"filename":"src\/hotspot\/os\/linux\/os_linux.cpp"},{"filename":"src\/hotspot\/os\/windows\/os_windows.cpp"},{"filename":"src\/hotspot\/share\/runtime\/os.cpp"},{"filename":"src\/hotspot\/share\/runtime\/os.hpp"},{"filename":"test\/hotspot\/gtest\/runtime\/test_os.cpp"}],"sha":"c0fa4f7007acb318afcf805c324febd5cb7492aa"},{"commit":{"message":"8254802: ThrowingPushPromisesAsStringCustom.java fails in \"try throwing in GET_BODY\"\n\nReviewed-by: michaelm"},"files":[{"filename":"test\/jdk\/java\/net\/httpclient\/http2\/server\/Http2TestServerConnection.java"}],"sha":"f2ca16da833cc51ea570af181c4570f99e043dfe"},{"commit":{"message":"8257575: C2: \"failed: only phis\" assert failure in loop strip mining verification\n\nReviewed-by: thartmann, neliasso"},"files":[{"filename":"src\/hotspot\/share\/opto\/loopnode.cpp"},{"filename":"test\/hotspot\/jtreg\/compiler\/loopstripmining\/TestEliminatedLoadPinnedOnBackedge.java"}],"sha":"634a87d7dc6ec69f94cf1007799be584946b975b"},{"commit":{"message":"8256679: Update serialization javadoc once JOSS changes for records are complete\n\nReviewed-by: chegar, rriggs"},"files":[{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectInputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectOutputStream.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/ObjectStreamClass.java"},{"filename":"src\/java.base\/share\/classes\/java\/io\/Serializable.java"},{"filename":"src\/java.base\/share\/classes\/java\/lang\/Record.java"}],"sha":"10897dd2139cba8bdba51429caeca2df17fad2de"},{"commit":{"message":"8257230: assert(InitialHeapSize >= MinHeapSize) failed: Ergonomics decided on incompatible initial and minimum heap sizes\n\nReviewed-by: tschatzl, sjohanss"},"files":[{"filename":"src\/hotspot\/share\/runtime\/arguments.cpp"}],"sha":"b9cefda8c02e253d011807e8e0342fd74b577459"},{"commit":{"message":"8257803: Add -Xbatch to compiler\/blackhole tests\n\nReviewed-by: dholmes"},"files":[{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeInstanceReturnTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeInstanceTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNonVoidWarning.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeNullCheckTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeStaticReturnTest.java"},{"filename":"test\/hotspot\/jtreg\/compiler\/blackhole\/BlackholeStaticTest.java"}],"sha":"d5d27fa9f64e2bb1433257316cd10a1add60b7b6"},{"commit":{"message":"Add comment for reserve archive space and ccs on windows when mapping on required address"},"files":[{"filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp"}],"sha":"dd9ae050182c36d7a51f62eab2fb3e0ef37a1d7d"},{"commit":{"message":"8255917: runtime\/cds\/SharedBaseAddress.java failed \"assert(reserved_rgn != 0LL) failed: No reserved region\""},"files":[{"filename":"src\/hotspot\/share\/memory\/metaspaceShared.cpp"}],"sha":"1d2f5959726d668470dfba723583f4691f20cd4d"}]