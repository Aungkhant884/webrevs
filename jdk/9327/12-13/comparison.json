{"files":[{"filename":"test\/jdk\/javax\/swing\/JFileChooser\/8288882\/1000-KB-File","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/swing\/JFileChooser\/8288882\/2.5-KB-File","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/swing\/JFileChooser\/8288882\/2.8-MB-File","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/swing\/JFileChooser\/8288882\/2047-Byte-File","binary":true,"status":"deleted"},{"filename":"test\/jdk\/javax\/swing\/JFileChooser\/8288882\/999-KB-File","binary":true,"status":"deleted"},{"patch":"@@ -1,86 +0,0 @@\n-\/*\n- * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n- * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n- *\n- * This code is free software; you can redistribute it and\/or modify it\n- * under the terms of the GNU General Public License version 2 only, as\n- * published by the Free Software Foundation.\n- *\n- * This code is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n- * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n- * version 2 for more details (a copy is included in the LICENSE file that\n- * accompanied this code).\n- *\n- * You should have received a copy of the GNU General Public License version\n- * 2 along with this work; if not, write to the Free Software Foundation,\n- * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n- *\n- * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n- * or visit www.oracle.com if you need additional information or have any\n- * questions.\n- *\/\n-\n-\/*\n- * @test\n- * @bug 8288882\n- * @library \/java\/awt\/regtesthelpers\n- * @build PassFailJFrame\n- * @requires (os.family == \"linux\")\n- * @summary To test if the TEST-EMPTY-FILE size shows 0 KB and other files show correct size.\n- * @run main\/manual FileSizeCheck\n- *\/\n-\n-import java.lang.reflect.InvocationTargetException;\n-\n-import javax.swing.JFrame;\n-import javax.swing.SwingUtilities;\n-import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-import java.nio.file.Path;\n-import javax.swing.JFileChooser;\n-\n-public class FileSizeCheck {\n-\n-    private static JFrame frame;\n-    private static final String INSTRUCTIONS =\n-            \"Click on the \\\"Details\\\" button in right-top corner.\\n\\nScroll Down if required. \\n\\n\" +\n-                    \"Test 1: If the size of 2.5-KB-File shows 2.5 KB\\n\" +\n-                    \"Test 2: If the size of 2.8-MB-File shows 2.8 MB\\n\" +\n-                    \"Test 3: If the size of 999-KB-File shows 999 KB\\n\" +\n-                    \"Test 4: If the size of 1000-KB-File shows 1 MB\\n\" +\n-                    \"Test 5: If the size of 2047-Byte-File shows 2 KB\\n\" +\n-                    \"Test 6: If the size of TEST-EMPTY-FILE shows 0 KB\\n\\n\" +\n-                           \" press PASS.\\n\\n\";\n-\n-    public static void test() {\n-        JFileChooser fc = new JFileChooser();\n-        try {\n-            Path dir = Paths.get(System.getProperty(\"test.src\"));\n-            \/\/ create empty file\n-            Path emptyFile = dir.resolve(\"TEST-EMPTY-FILE.txt\");\n-            if (!Files.exists(emptyFile)) {\n-                Files.createFile(emptyFile);\n-            }\n-            fc.setCurrentDirectory(dir.toFile());\n-        } catch (IOException ex) {\n-            throw new RuntimeException(ex);\n-        }\n-        fc.showOpenDialog(null);\n-    }\n-\n-    public static void main(String args[]) throws Exception {\n-        PassFailJFrame passFailJFrame = new PassFailJFrame(\"JFileChooser Test Instructions\" ,\n-                INSTRUCTIONS, 5, 19, 35);\n-        SwingUtilities.invokeAndWait(() -> {\n-            frame = new JFrame();\n-            PassFailJFrame.addTestWindow(frame);\n-            PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n-            test();\n-        });\n-\n-        passFailJFrame.awaitAndCheck();\n-    }\n-}\n-\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/8288882\/FileSizeCheck.java","additions":0,"deletions":86,"binary":false,"changes":86,"status":"deleted"},{"patch":"","filename":"test\/jdk\/javax\/swing\/JFileChooser\/8288882\/TEST-EMPTY-FILE.txt","additions":0,"deletions":0,"binary":false,"changes":0,"status":"deleted"},{"patch":"@@ -0,0 +1,107 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8288882\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @requires (os.family == \"linux\")\n+ * @summary To test if the TEST-EMPTY-FILE size shows 0 KB and other files show correct size.\n+ * @run main\/manual FileSizeCheck\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.Path;\n+import javax.swing.JFileChooser;\n+import java.io.RandomAccessFile;\n+\n+public class FileSizeCheck {\n+\n+    private static JFrame frame;\n+    private static final String INSTRUCTIONS =\n+            \"Click on the \\\"Details\\\" button in right-top corner.\\n\\nScroll Down if required. \\n\\n\" +\n+                    \"Test 1: If the size of 2.5-KB-File shows 2.5 KB\\n\" +\n+                    \"Test 2: If the size of 2.8-MB-File shows 2.8 MB\\n\" +\n+                    \"Test 3: If the size of 999-KB-File shows 999 KB\\n\" +\n+                    \"Test 4: If the size of 1000-KB-File shows 1 MB\\n\" +\n+                    \"Test 5: If the size of 2047-Byte-File shows 2 KB\\n\" +\n+                    \"Test 6: If the size of Empty-File shows 0 KB\\n\\n\" +\n+                           \" press PASS.\\n\\n\";\n+\n+    public static void test() {\n+        JFileChooser fc = new JFileChooser();\n+        Path dir = Paths.get(System.getProperty(\"test.src\"));\n+        String [] tempFilesName = {\"2.5-KB-File\",\"2.8-MB-File\",\"999-KB-File\",\"1000-KB-File\",\"2047-Byte-File\",\"Empty-File\"};\n+        int [] tempFilesSize = {2500, 2800000,999000,1000000,2047,0};\n+        Path [] tempFilePaths = new Path[tempFilesName.length];\n+        for (int i = 0 ; i < tempFilesName.length ; i++) {\n+            tempFilePaths[i] = dir.resolve(tempFilesName[i]);\n+        }\n+\n+        \/\/ create temp files\n+        try {\n+            for (int i = 0 ; i < tempFilePaths.length ; i++) {\n+                if (!Files.exists(tempFilePaths[i])){\n+                    RandomAccessFile f = new RandomAccessFile(tempFilePaths[i].toString(), \"rw\");\n+                    f.setLength(tempFilesSize[i]);\n+                    f.close();\n+                }\n+            }\n+            fc.setCurrentDirectory(dir.toFile());\n+        } catch (IOException ex) {\n+            throw new RuntimeException(ex);\n+        }\n+\n+        fc.showOpenDialog(null);\n+\n+        \/\/ delete temp files\n+        try {\n+            for (int i = 0 ; i < tempFilePaths.length ; ++i) {\n+                Files.deleteIfExists(Paths.get(tempFilePaths[i].toString()));\n+            }\n+        } catch (IOException ex) {\n+            throw new RuntimeException(ex);\n+        }\n+    }\n+\n+    public static void main(String args[]) throws Exception {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(\"JFileChooser Test Instructions\" ,\n+                INSTRUCTIONS, 5, 19, 35);\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame();\n+            PassFailJFrame.addTestWindow(frame);\n+            PassFailJFrame.positionTestWindow(frame, PassFailJFrame.Position.HORIZONTAL);\n+            test();\n+        });\n+\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n+\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileSizeCheck.java","additions":107,"deletions":0,"binary":false,"changes":107,"status":"added"}]}