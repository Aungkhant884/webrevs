{"files":[{"patch":"@@ -1193,1 +1193,1 @@\n-                long len = ((Long) value) \/ 1024L;\n+                long len = ((Long) value);\n@@ -1195,0 +1195,1 @@\n+                    len \/= 1024L;\n@@ -1197,1 +1198,1 @@\n-                    text = MessageFormat.format(kiloByteString, (len == 0L) ? 1L : len);\n+                    text = (len == 0L) ? 0 + \" bytes\" : len + \" bytes\";\n@@ -1201,1 +1202,1 @@\n-                        text = MessageFormat.format(megaByteString, len);\n+                        text = MessageFormat.format(kiloByteString, len);\n@@ -1204,1 +1205,6 @@\n-                        text = MessageFormat.format(gigaByteString, len);\n+                        if (len < 1024L) {\n+                            text = MessageFormat.format(megaByteString, len);\n+                        } else {\n+                            len \/= 1024L;\n+                            text = MessageFormat.format(gigaByteString, len);\n+                        }\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/FilePane.java","additions":10,"deletions":4,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -0,0 +1,84 @@\n+\/*\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+\/*\n+ * @test\n+ * @bug 8288882\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n+ * @summary To test if the TEST-EMPTY-FILE size shows 0 bytes.\n+ * @run main\/manual ZeroFileSizeCheck\n+ *\/\n+\n+import java.lang.reflect.InvocationTargetException;\n+\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.nio.file.Path;\n+import javax.swing.JFileChooser;\n+\n+public class ZeroFileSizeCheck {\n+\n+    private static JFrame frame;\n+    private static final String text =\n+            \"Click the \\\"Details\\\" button in right-top corner.\\n\\nScroll Down if required. \\n\\nIf the size of TEST-EMPTY-FILE shows Zero bytes in \\nDetails view,\" +\n+                    \" press PASS.\\n\\n\";\n+\n+    public static void createAndShowGUI() throws InterruptedException,\n+            InvocationTargetException {\n+        SwingUtilities.invokeAndWait(() -> {\n+            frame = new JFrame(\"JFileChooser\");\n+            JFileChooser fc = new JFileChooser();\n+            try {\n+                Path currentDir = Paths.get(System.getProperty(\"java.io.tmpdir\"));\n+                \/\/ create empty file\n+                Path emptyFile = currentDir.resolve(\"TEST-EMPTY-FILE.txt\");\n+                if (!Files.exists(emptyFile)) {\n+                    Files.createFile(emptyFile);\n+                }\n+                fc.setCurrentDirectory(currentDir.toFile());\n+            }catch (IOException ex) {\n+                throw new RuntimeException(ex);\n+            }\n+            frame.getContentPane().add(fc);\n+            frame.setSize(400, 400);\n+            frame.setLocationRelativeTo(null);\n+            frame.setVisible(true);\n+\n+            PassFailJFrame.addTestFrame(frame);\n+            PassFailJFrame.positionTestFrame(frame,\n+                    PassFailJFrame.Position.HORIZONTAL);\n+        });\n+    }\n+\n+    public static void main(String[] args) throws InterruptedException,\n+            InvocationTargetException {\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(\"JFileChooser \" +\n+                \"Test Instructions\", text, 5, 19, 35);\n+        createAndShowGUI();\n+        passFailJFrame.awaitAndCheck();\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/ZeroFileSizeCheck.java","additions":84,"deletions":0,"binary":false,"changes":84,"status":"added"}]}