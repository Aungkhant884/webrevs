{"files":[{"patch":"@@ -1212,5 +1212,1 @@\n-                    if (len < 1000L) {\n-                        displayedFileSize[0] = ((len +99) \/ 100L) \/ 10.0d;\n-                    } else {\n-                        displayedFileSize[0] = roundToOneDecimalPlace(len);\n-                    }\n+                    displayedFileSize[0] = roundToOneDecimalPlace(len);\n@@ -1218,1 +1214,3 @@\n-                    if (len < 1000L) {\n+                    double kbVal = roundToOneDecimalPlace(len);\n+                    len = (long) kbVal;\n+                    if (kbVal < baseFileSize) {\n@@ -1220,8 +1218,1 @@\n-                        \/*\n-                         * An offset value of 99 is added to round up the file\n-                         * length.\n-                         *\n-                         * For example, the file size of 101 byte will be converted\n-                         * to 0.2 KB if we add 99 else it will be 0.1 KB.\n-                         *\/\n-                        displayedFileSize[0] = ((len +99) \/ 100L) \/ 10.0d;\n+                        displayedFileSize[0] = kbVal;\n@@ -1229,5 +1220,5 @@\n-                        double kbVal = roundToOneDecimalPlace(len);\n-                        len = (long)kbVal;\n-                        if (kbVal < baseFileSize) {\n-                            updateMessageFormatPattern(kiloByteString);\n-                            displayedFileSize[0] = kbVal;\n+                        double mbVal = roundToOneDecimalPlace(len);\n+                        len = (long) mbVal;\n+                        if (mbVal < baseFileSize) {\n+                            updateMessageFormatPattern(megaByteString);\n+                            displayedFileSize[0] = mbVal;\n@@ -1235,9 +1226,2 @@\n-                            double mbVal = roundToOneDecimalPlace(len);\n-                            len = (long)mbVal;\n-                            if (mbVal < baseFileSize) {\n-                                updateMessageFormatPattern(megaByteString);\n-                                displayedFileSize[0] = mbVal;\n-                            } else {\n-                                updateMessageFormatPattern(gigaByteString);\n-                                displayedFileSize[0] = roundToOneDecimalPlace(len);\n-                            }\n+                            updateMessageFormatPattern(gigaByteString);\n+                            displayedFileSize[0] = roundToOneDecimalPlace(len);\n@@ -1275,3 +1259,1 @@\n-            DecimalFormat df = new DecimalFormat(\"0.0\");\n-            double val = fileSize\/baseFileSize;\n-            return  Double.valueOf(df.format(val));\n+            return Math.ceil(fileSize \/ 100.0d) \/ 10.0d;\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/FilePane.java","additions":13,"deletions":31,"binary":false,"changes":44,"status":"modified"}]}