{"files":[{"patch":"@@ -59,0 +59,1 @@\n+import java.text.DecimalFormat;\n@@ -1127,1 +1128,1 @@\n-        final double baseFileSize = 1000.0;\n+        final static double baseFileSize = 1000.0;\n@@ -1204,2 +1205,2 @@\n-                 * 1-199-byte files are shown as 0.1 KB,\n-                 * 200-299-byte files are shown as 0.2 KB and so on.\n+                 * 1-100-byte files are shown as 0.1 KB,\n+                 * 101-200-byte files are shown as 0.2 KB and so on.\n@@ -1211,4 +1212,2 @@\n-                    if (len == 0) {\n-                        displayedFileSize[0] = 0.0;\n-                    } else if (len > 0 && len < 100L) {\n-                        displayedFileSize[0] = 0.1;\n+                    if (len < 1000L) {\n+                        displayedFileSize[0] = ((len +99) \/ 100L) \/ 10.0d;\n@@ -1216,1 +1215,1 @@\n-                        displayedFileSize[0] = formatToDoubleValue(len);\n+                        displayedFileSize[0] = roundToOneDecimalPlace(len);\n@@ -1219,1 +1218,1 @@\n-                    if (len < 100L) {\n+                    if (len < 1000L) {\n@@ -1221,5 +1220,8 @@\n-                        if (len == 0) {\n-                            displayedFileSize[0] = 0.0;\n-                        } else {\n-                            displayedFileSize[0] = 0.1;\n-                        }\n+                        \/*\n+                         * An offset value of 99 is added to round up the file\n+                         * length.\n+                         *\n+                         * For example, the file size of 101 byte will be converted\n+                         * to 0.2 KB if we add 99 else it will be 0.1 KB.\n+                         *\/\n+                        displayedFileSize[0] = ((len +99) \/ 100L) \/ 10.0d;\n@@ -1227,1 +1229,1 @@\n-                        double kbVal = formatToDoubleValue(len);\n+                        double kbVal = roundToOneDecimalPlace(len);\n@@ -1233,1 +1235,1 @@\n-                            double mbVal = formatToDoubleValue(len);\n+                            double mbVal = roundToOneDecimalPlace(len);\n@@ -1240,1 +1242,1 @@\n-                                displayedFileSize[0] = formatToDoubleValue(len);\n+                                displayedFileSize[0] = roundToOneDecimalPlace(len);\n@@ -1273,1 +1275,3 @@\n-            return (fileSize \/ 100L) \/ 10.0d;\n+            DecimalFormat df = new DecimalFormat(\"0.0\");\n+            double val = fileSize\/baseFileSize;\n+            return  Double.valueOf(df.format(val));\n","filename":"src\/java.desktop\/share\/classes\/sun\/swing\/FilePane.java","additions":22,"deletions":18,"binary":false,"changes":40,"status":"modified"},{"patch":"@@ -53,4 +53,4 @@\n-                    \"Test 3: If the size of 3rd-File-160-Byte shows 0.1 KB\\n\" +\n-                    \"Test 4: If the size of 4th-File-500-Byte shows 0.5 KB\\n\" +\n-                    \"Test 5: If the size of 5th-File-1000-Byte shows 1.0 KB\\n\" +\n-                    \"Test 6: If the size of 6th-File-2047-Byte shows 2.0 KB\\n\" +\n+                    \"Test 3: If the size of 3rd-File-160-Byte shows 0.2 KB\\n\" +\n+                    \"Test 3: If the size of 4th-File-299-Byte shows 0.3 KB\\n\" +\n+                    \"Test 4: If the size of 5th-File-500-Byte shows 0.5 KB\\n\" +\n+                    \"Test 6: If the size of 6th-File-901-Byte shows 1.0 KB\\n\" +\n@@ -65,0 +65,1 @@\n+        fc.setControlButtonsAreShown(false);\n@@ -67,1 +68,1 @@\n-                \"4th-File-500-Byte\", \"5th-File-1000-Byte\", \"6th-File-2047-Byte\",\n+                \"4th-File-299-Byte\", \"5th-File-500-Byte\", \"6th-File-901-Byte\",\n@@ -70,1 +71,1 @@\n-        int[] tempFilesSize = {0, 1, 160, 500, 1_000, 2_047, 999_000, 1_000_000, 2_800_000};\n+        int[] tempFilesSize = {0, 1, 160, 299, 500, 901, 999_000, 1_000_000, 2_800_000};\n","filename":"test\/jdk\/javax\/swing\/JFileChooser\/FileSizeCheck.java","additions":7,"deletions":6,"binary":false,"changes":13,"status":"modified"}]}