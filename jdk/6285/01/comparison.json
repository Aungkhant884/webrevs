{"files":[{"patch":"@@ -1086,1 +1086,1 @@\n-  bool read_base_archive_name(char** target) {\n+  char* read_base_archive_name() {\n@@ -1088,1 +1088,1 @@\n-    size_t name_size = (size_t)_header._base_archive_name_size;\n+    size_t name_size = _header._base_archive_name_size;\n@@ -1090,1 +1090,1 @@\n-    *target = NEW_C_HEAP_ARRAY(char, name_size, mtInternal);\n+    char* base_name = NEW_C_HEAP_ARRAY(char, name_size, mtInternal);\n@@ -1092,1 +1092,1 @@\n-    size_t n = os::read(_fd, *target, (unsigned int)name_size);\n+    size_t n = os::read(_fd, base_name, (unsigned int)name_size);\n@@ -1095,2 +1095,2 @@\n-      FREE_C_HEAP_ARRAY(char, *target);\n-      return false;\n+      FREE_C_HEAP_ARRAY(char, base_name);\n+      return nullptr;\n@@ -1098,4 +1098,4 @@\n-    if (!os::file_exists(*target)) {\n-      log_info(cds)(\"Base archive %s does not exist\", *target);\n-      FREE_C_HEAP_ARRAY(char, *target);\n-      return false;\n+    if (base_name[name_size - 1] != '\\0' || strlen(base_name) != name_size - 1) {\n+      log_info(cds)(\"Base archive name is damaged\");\n+      FREE_C_HEAP_ARRAY(char, base_name);\n+      return nullptr;\n@@ -1103,1 +1103,6 @@\n-    return true;\n+    if (!os::file_exists(base_name)) {\n+      log_info(cds)(\"Base archive %s does not exist\", base_name);\n+      FREE_C_HEAP_ARRAY(char, base_name);\n+      return nullptr;\n+    }\n+    return base_name;\n@@ -1142,2 +1147,2 @@\n-    char* base_name = NULL;\n-    if (!file_helper.read_base_archive_name(&base_name)) {\n+    char* base_name = file_helper.read_base_archive_name();\n+    if (base_name == nullptr) {\n@@ -1173,2 +1178,2 @@\n-    if (!file_helper.read_base_archive_name(base_archive_name)) {\n-      *base_archive_name = NULL;\n+    *base_archive_name = file_helper.read_base_archive_name();\n+    if (*base_archive_name == nullptr) {\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":20,"deletions":15,"binary":false,"changes":35,"status":"modified"},{"patch":"@@ -144,0 +144,1 @@\n+\n@@ -155,2 +156,19 @@\n-               new String[] {\"Base archive \" + baseArchiveName,\n-                             \" does not exist\",\n+               new String[] {\"Base archive name is damaged\",\n+                             \"Header checksum verification failed\"});\n+\n+        \/\/ 6. Modify base archive name to a file that doesn't exist.\n+        System.out.println(\"\\n6. Modify base archive name to a file that doesn't exist\");\n+        String wrongBaseName2 = getNewArchiveName(\"wrongBaseName2\");\n+        copiedJsa = CDSArchiveUtils.copyArchiveFile(jsa, wrongBaseName2);\n+        baseArchivePathOffset = CDSArchiveUtils.baseArchivePathOffset(copiedJsa);\n+        baseArchiveNameSize = CDSArchiveUtils.baseArchiveNameSize(copiedJsa);\n+        offset = baseArchivePathOffset + baseArchiveNameSize - 2;  \/\/ the \"a\" in \".jsa\"\n+        CDSArchiveUtils.writeData(copiedJsa, offset, new byte[] {(byte)'b'}); \/\/ .jsa -> .jsb\n+\n+        \/\/ Make sure it doesn't exist\n+        String badName = baseArchiveName.replace(\".jsa\", \".jsb\");\n+        (new File(badName)).delete();\n+\n+        runTwo(baseArchiveName, wrongBaseName2,\n+               appJar, mainClass, 1,\n+               new String[] {\"Base archive \" + badName + \" does not exist\",\n","filename":"test\/hotspot\/jtreg\/runtime\/cds\/appcds\/dynamicArchive\/ArchiveConsistency.java","additions":20,"deletions":2,"binary":false,"changes":22,"status":"modified"}]}