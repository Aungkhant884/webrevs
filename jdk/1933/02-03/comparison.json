{"files":[{"patch":"@@ -246,5 +246,7 @@\n-        Object[] objs = Security.getImpl(algorithm, \"MessageDigest\", provider);\n-        if (objs[0] instanceof MessageDigest) {\n-            MessageDigest md = (MessageDigest)objs[0];\n-            md.provider = (Provider)objs[1];\n-            return md;\n+\n+        MessageDigest md;\n+        GetInstance.Instance instance = GetInstance.getInstance(\"MessageDigest\",\n+                MessageDigestSpi.class, algorithm, provider);\n+        if (instance.impl instanceof MessageDigest messageDigest) {\n+            md = messageDigest;\n+            md.provider = instance.provider;\n@@ -252,4 +254,2 @@\n-            MessageDigest delegate =\n-                    Delegate.of((MessageDigestSpi)objs[0], algorithm,\n-                    (Provider)objs[1]);\n-            return delegate;\n+            md = Delegate.of((MessageDigestSpi)instance.impl, algorithm,\n+                    instance.provider);\n@@ -257,0 +257,1 @@\n+        return md;\n","filename":"src\/java.base\/share\/classes\/java\/security\/MessageDigest.java","additions":10,"deletions":9,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -1072,1 +1072,1 @@\n-            return type.hashCode() ^ algorithm.hashCode();\n+            return 31*31 + type.hashCode()*31 + algorithm.hashCode();\n@@ -1930,1 +1930,1 @@\n-                    clazz = (ref == null) ? null : (Class<?>)ref.get();\n+                    clazz = (Class<?>)ref.get();\n@@ -1963,1 +1963,1 @@\n-                con = (ref == null) ? null : (Constructor<?>)ref.get();\n+                con = (Constructor<?>)ref.get();\n","filename":"src\/java.base\/share\/classes\/java\/security\/Provider.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -170,1 +170,1 @@\n-        synchronized (ProviderConfig.class) {\n+        synchronized (this) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/jca\/ProviderConfig.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}