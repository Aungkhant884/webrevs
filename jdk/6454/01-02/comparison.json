{"files":[{"patch":"@@ -135,1 +135,1 @@\n-void ZTracer::send_thread_event(const char* name, const Ticks& start, const Ticks& end) {\n+void ZTracer::send_thread_debug(const char* name, const Ticks& start, const Ticks& end) {\n@@ -138,1 +138,1 @@\n-  EventZThreadEvent e(UNTIMED);\n+  EventZThreadDebug e(UNTIMED);\n","filename":"src\/hotspot\/share\/gc\/z\/zTracer.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -42,1 +42,1 @@\n-  void send_thread_event(const char* name, const Ticks& start, const Ticks& end);\n+  void send_thread_debug(const char* name, const Ticks& start, const Ticks& end);\n@@ -51,11 +51,1 @@\n-  void report_thread_event(const char* name, const Ticks& start, const Ticks& end);\n-};\n-\n-class ZTraceThreadPhase : public StackObj {\n-private:\n-  const Ticks       _start;\n-  const char* const _name;\n-\n-public:\n-  ZTraceThreadPhase(const char* name);\n-  ~ZTraceThreadPhase();\n+  void report_thread_debug(const char* name, const Ticks& start, const Ticks& end);\n@@ -65,1 +55,1 @@\n-class ZTraceThreadEvent : public StackObj {\n+class ZTraceThreadDebug : public StackObj {\n@@ -71,2 +61,2 @@\n-  ZTraceThreadEvent(const char* name);\n-  ~ZTraceThreadEvent();\n+  ZTraceThreadDebug(const char* name);\n+  ~ZTraceThreadDebug();\n","filename":"src\/hotspot\/share\/gc\/z\/zTracer.hpp","additions":5,"deletions":15,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -53,3 +53,3 @@\n-inline void ZTracer::report_thread_event(const char* name, const Ticks& start, const Ticks& end) {\n-  if (EventZThreadEvent::is_enabled()) {\n-    send_thread_event(name, start, end);\n+inline void ZTracer::report_thread_debug(const char* name, const Ticks& start, const Ticks& end) {\n+  if (EventZThreadDebug::is_enabled()) {\n+    send_thread_debug(name, start, end);\n@@ -59,1 +59,1 @@\n-inline ZTraceThreadPhase::ZTraceThreadPhase(const char* name) :\n+inline ZTraceThreadDebug::ZTraceThreadDebug(const char* name) :\n@@ -63,10 +63,2 @@\n-inline ZTraceThreadPhase::~ZTraceThreadPhase() {\n-  ZTracer::tracer()->report_thread_phase(_name, _start, Ticks::now());\n-}\n-\n-inline ZTraceThreadEvent::ZTraceThreadEvent(const char* name) :\n-    _start(Ticks::now()),\n-    _name(name) {}\n-\n-inline ZTraceThreadEvent::~ZTraceThreadEvent() {\n-  ZTracer::tracer()->report_thread_event(_name, _start, Ticks::now());\n+inline ZTraceThreadDebug::~ZTraceThreadDebug() {\n+  ZTracer::tracer()->report_thread_debug(_name, _start, Ticks::now());\n","filename":"src\/hotspot\/share\/gc\/z\/zTracer.inline.hpp","additions":6,"deletions":14,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -1037,1 +1037,1 @@\n-  <Event name=\"ZThreadEvent\" category=\"Java Virtual Machine, GC, Detailed\" label=\"ZGC Thread Event\" description=\"Temporary latency measurements used during development and debugging of ZGC\" thread=\"true\" experimental=\"true\">\n+  <Event name=\"ZThreadDebug\" category=\"Java Virtual Machine, GC, Detailed\" label=\"ZGC Thread Event\" description=\"Temporary latency measurements used during development and debugging of ZGC\" thread=\"true\" experimental=\"true\">\n","filename":"src\/hotspot\/share\/jfr\/metadata\/metadata.xml","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -778,1 +778,1 @@\n-    <event name=\"jdk.ZThreadEvent\">\n+    <event name=\"jdk.ZThreadDebug\">\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/default.jfc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -778,1 +778,1 @@\n-    <event name=\"jdk.ZThreadEvent\">\n+    <event name=\"jdk.ZThreadDebug\">\n","filename":"src\/jdk.jfr\/share\/conf\/jfr\/profile.jfc","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}