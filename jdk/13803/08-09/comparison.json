{"files":[{"patch":"@@ -195,1 +195,1 @@\n-    \t$(TOPDIR)\/src\/$(MODULE)\/unix\/native\/libpipewire\/include\n+        $(TOPDIR)\/src\/$(MODULE)\/unix\/native\/libpipewire\/include\n","filename":"make\/modules\/java.desktop\/lib\/Awt2dLibraries.gmk","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -40,0 +40,6 @@\n+\/**\n+ * Helper class for grabbing pixels from the screen using the\n+ * <a href=\"https:\/\/flatpak.github.io\/xdg-desktop-portal\/#gdbus-org.freedesktop.portal.ScreenCast\">\n+ * org.freedesktop.portal.ScreenCast API<\/a>\n+ *\/\n+\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/ScreencastHelper.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -38,0 +38,10 @@\n+\/**\n+ * Helper class used by {@link TokenStorage} as restore token record\n+ * with its associated screen boundaries.\n+ *\n+ * It helps in serialization\/deserialization of screen boundaries\n+ * to\/from string format.\n+ *\n+ * The screen boundary is represented as {@code _x_y_width_height}\n+ * and can be repeated several times.\n+ *\/\n@@ -39,2 +49,3 @@\n-    String token;\n-    List<Rectangle> allowedScreensBounds;\n+\n+    final String token;\n+    final List<Rectangle> allowedScreensBounds;\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenItem.java","additions":13,"deletions":2,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -40,1 +40,0 @@\n-import java.util.ArrayList;\n@@ -42,0 +41,1 @@\n+import java.util.HashSet;\n@@ -44,1 +44,0 @@\n-import java.util.Map;\n@@ -48,1 +47,0 @@\n-import java.util.stream.Collectors;\n@@ -56,0 +54,7 @@\n+\/**\n+ * Helper class for persistent storage of ScreenCast restore tokens\n+ * and associated screen boundaries.\n+ *\n+ * The restore token allows the ScreenCast session to be restored\n+ * with previously granted screen access permissions.\n+ *\/\n@@ -302,1 +307,3 @@\n-        Set<Map.Entry<Object, Object>> entries;\n+        Set<String> malformed = new HashSet<>();\n+        List<TokenItem> allTokenItems;\n+\n@@ -304,1 +311,13 @@\n-            entries = PROPS.entrySet();\n+            allTokenItems = PROPS.entrySet()\n+                    .stream()\n+                    .map(o -> {\n+                        String token = String.valueOf(o.getKey());\n+                        TokenItem tokenItem =\n+                                TokenItem.parse(token, o.getValue());\n+                        if (tokenItem == null) {\n+                            malformed.add(token);\n+                        }\n+                        return tokenItem;\n+                    })\n+                    .filter(Objects::nonNull)\n+                    .toList();\n@@ -307,16 +326,0 @@\n-        Set<String> malformed = new LinkedHashSet<>();\n-\n-        List<TokenItem> allTokenItems = entries\n-                .stream()\n-                .map(o -> {\n-                    String token = String.valueOf(o.getKey());\n-                    TokenItem tokenItem =\n-                            TokenItem.parse(token, o.getValue());\n-                    if (tokenItem == null) {\n-                        malformed.add(token);\n-                    }\n-                    return tokenItem;\n-                })\n-                .filter(obj -> !Objects.isNull(obj))\n-                .toList();\n-\n@@ -346,1 +349,1 @@\n-                .collect(Collectors.toCollection(ArrayList::new));\n+                .toList();\n","filename":"src\/java.desktop\/unix\/classes\/sun\/awt\/screencast\/TokenStorage.java","additions":25,"deletions":22,"binary":false,"changes":47,"status":"modified"}]}