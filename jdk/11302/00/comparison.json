{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -35,1 +35,0 @@\n-import java.security.ProviderException;\n@@ -47,1 +46,1 @@\n- * @see java.security.KeyAgreement\n+ * @see javax.crypto.KeyAgreement\n@@ -83,2 +82,0 @@\n-     *\n-     * @throws ProviderException if the key cannot be encoded\n@@ -100,2 +97,0 @@\n-     *\n-     * @throws ProviderException if the key cannot be encoded\n@@ -108,10 +103,6 @@\n-        try {\n-            byte[] xbytes = x.toByteArray();\n-            DerValue val = new DerValue(DerValue.tag_Integer, xbytes);\n-            this.key = val.toByteArray();\n-            val.clear();\n-            Arrays.fill(xbytes, (byte)0);\n-            encode();\n-        } catch (IOException e) {\n-            throw new ProviderException(\"Cannot produce ASN.1 encoding\", e);\n-        }\n+        byte[] xbytes = x.toByteArray();\n+        DerValue val = new DerValue(DerValue.tag_Integer, xbytes);\n+        this.key = val.toByteArray();\n+        val.clear();\n+        Arrays.fill(xbytes, (byte) 0);\n+        encode();\n@@ -224,2 +215,1 @@\n-            try {\n-                DerOutputStream tmp = new DerOutputStream();\n+            DerOutputStream tmp = new DerOutputStream();\n@@ -227,4 +217,4 @@\n-                \/\/\n-                \/\/ version\n-                \/\/\n-                tmp.putInteger(PKCS8_VERSION);\n+            \/\/\n+            \/\/ version\n+            \/\/\n+            tmp.putInteger(PKCS8_VERSION);\n@@ -232,4 +222,4 @@\n-                \/\/\n-                \/\/ privateKeyAlgorithm\n-                \/\/\n-                DerOutputStream algid = new DerOutputStream();\n+            \/\/\n+            \/\/ privateKeyAlgorithm\n+            \/\/\n+            DerOutputStream algid = new DerOutputStream();\n@@ -237,16 +227,16 @@\n-                \/\/ store OID\n-                algid.putOID(DHPublicKey.DH_OID);\n-                \/\/ encode parameters\n-                DerOutputStream params = new DerOutputStream();\n-                params.putInteger(this.p);\n-                params.putInteger(this.g);\n-                if (this.l != 0) {\n-                    params.putInteger(this.l);\n-                }\n-                \/\/ wrap parameters into SEQUENCE\n-                DerValue paramSequence = new DerValue(DerValue.tag_Sequence,\n-                                                      params.toByteArray());\n-                \/\/ store parameter SEQUENCE in algid\n-                algid.putDerValue(paramSequence);\n-                \/\/ wrap algid into SEQUENCE\n-                tmp.write(DerValue.tag_Sequence, algid);\n+            \/\/ store OID\n+            algid.putOID(DHPublicKey.DH_OID);\n+            \/\/ encode parameters\n+            DerOutputStream params = new DerOutputStream();\n+            params.putInteger(this.p);\n+            params.putInteger(this.g);\n+            if (this.l != 0) {\n+                params.putInteger(this.l);\n+            }\n+            \/\/ wrap parameters into SEQUENCE\n+            DerValue paramSequence = new DerValue(DerValue.tag_Sequence,\n+                    params.toByteArray());\n+            \/\/ store parameter SEQUENCE in algid\n+            algid.putDerValue(paramSequence);\n+            \/\/ wrap algid into SEQUENCE\n+            tmp.write(DerValue.tag_Sequence, algid);\n@@ -254,2 +244,2 @@\n-                \/\/ privateKey\n-                tmp.putOctetString(this.key);\n+            \/\/ privateKey\n+            tmp.putOctetString(this.key);\n@@ -257,7 +247,4 @@\n-                \/\/ make it a SEQUENCE\n-                DerValue val = DerValue.wrap(DerValue.tag_Sequence, tmp);\n-                this.encodedKey = val.toByteArray();\n-                val.clear();\n-            } catch (IOException e) {\n-                throw new AssertionError(e);\n-            }\n+            \/\/ make it a SEQUENCE\n+            DerValue val = DerValue.wrap(DerValue.tag_Sequence, tmp);\n+            this.encodedKey = val.toByteArray();\n+            val.clear();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPrivateKey.java","additions":39,"deletions":52,"binary":false,"changes":91,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -33,1 +33,0 @@\n-import java.security.ProviderException;\n@@ -100,2 +99,0 @@\n-     *\n-     * @exception ProviderException if the key cannot be encoded\n@@ -108,7 +105,3 @@\n-        try {\n-            this.key = new DerValue(DerValue.tag_Integer,\n-                                    this.y.toByteArray()).toByteArray();\n-            this.encodedKey = getEncoded();\n-        } catch (IOException e) {\n-            throw new ProviderException(\"Cannot produce ASN.1 encoding\", e);\n-        }\n+        this.key = new DerValue(DerValue.tag_Integer,\n+                this.y.toByteArray()).toByteArray();\n+        this.encodedKey = getEncoded();\n@@ -204,2 +197,1 @@\n-            try {\n-                DerOutputStream algid = new DerOutputStream();\n+            DerOutputStream algid = new DerOutputStream();\n@@ -207,2 +199,2 @@\n-                \/\/ store oid in algid\n-                algid.putOID(DH_OID);\n+            \/\/ store oid in algid\n+            algid.putOID(DH_OID);\n@@ -210,12 +202,12 @@\n-                \/\/ encode parameters\n-                DerOutputStream params = new DerOutputStream();\n-                params.putInteger(this.p);\n-                params.putInteger(this.g);\n-                if (this.l != 0) {\n-                    params.putInteger(this.l);\n-                }\n-                \/\/ wrap parameters into SEQUENCE\n-                DerValue paramSequence = new DerValue(DerValue.tag_Sequence,\n-                                                      params.toByteArray());\n-                \/\/ store parameter SEQUENCE in algid\n-                algid.putDerValue(paramSequence);\n+            \/\/ encode parameters\n+            DerOutputStream params = new DerOutputStream();\n+            params.putInteger(this.p);\n+            params.putInteger(this.g);\n+            if (this.l != 0) {\n+                params.putInteger(this.l);\n+            }\n+            \/\/ wrap parameters into SEQUENCE\n+            DerValue paramSequence = new DerValue(DerValue.tag_Sequence,\n+                    params.toByteArray());\n+            \/\/ store parameter SEQUENCE in algid\n+            algid.putDerValue(paramSequence);\n@@ -223,3 +215,3 @@\n-                \/\/ wrap algid into SEQUENCE, and store it in key encoding\n-                DerOutputStream tmpDerKey = new DerOutputStream();\n-                tmpDerKey.write(DerValue.tag_Sequence, algid);\n+            \/\/ wrap algid into SEQUENCE, and store it in key encoding\n+            DerOutputStream tmpDerKey = new DerOutputStream();\n+            tmpDerKey.write(DerValue.tag_Sequence, algid);\n@@ -227,2 +219,2 @@\n-                \/\/ store key data\n-                tmpDerKey.putBitString(this.key);\n+            \/\/ store key data\n+            tmpDerKey.putBitString(this.key);\n@@ -230,7 +222,4 @@\n-                \/\/ wrap algid and key into SEQUENCE\n-                DerOutputStream derKey = new DerOutputStream();\n-                derKey.write(DerValue.tag_Sequence, tmpDerKey);\n-                this.encodedKey = derKey.toByteArray();\n-            } catch (IOException e) {\n-                return null;\n-            }\n+            \/\/ wrap algid and key into SEQUENCE\n+            DerOutputStream derKey = new DerOutputStream();\n+            derKey.write(DerValue.tag_Sequence, tmpDerKey);\n+            this.encodedKey = derKey.toByteArray();\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/DHPublicKey.java","additions":28,"deletions":39,"binary":false,"changes":67,"status":"modified"},{"patch":"@@ -110,3 +110,1 @@\n-    byte[] getEncoded()\n-        throws IOException\n-    {\n+    byte[] getEncoded() {\n","filename":"src\/java.base\/share\/classes\/com\/sun\/crypto\/provider\/EncryptedPrivateKeyInfo.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -38,1 +38,1 @@\n-public class ContentInfo {\n+public class ContentInfo implements DerEncoder {\n@@ -169,1 +169,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/ContentInfo.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -118,3 +118,1 @@\n-    public byte[] getEncoded()\n-        throws IOException\n-    {\n+    public byte[] getEncoded() {\n@@ -144,4 +142,3 @@\n-        try {\n-            byte[] thisEncrInfo = this.getEncoded();\n-            byte[] otherEncrInfo\n-                = ((EncryptedPrivateKeyInfo)other).getEncoded();\n+        byte[] thisEncrInfo = this.getEncoded();\n+        byte[] otherEncrInfo\n+                = ((EncryptedPrivateKeyInfo) other).getEncoded();\n@@ -149,7 +146,1 @@\n-            if (thisEncrInfo.length != otherEncrInfo.length)\n-                return false;\n-            for (int i = 0; i < thisEncrInfo.length; i++)\n-                 if (thisEncrInfo[i] != otherEncrInfo[i])\n-                     return false;\n-            return true;\n-        } catch (IOException e) {\n+        if (thisEncrInfo.length != otherEncrInfo.length)\n@@ -157,1 +148,4 @@\n-        }\n+        for (int i = 0; i < thisEncrInfo.length; i++)\n+            if (thisEncrInfo[i] != otherEncrInfo[i])\n+                return false;\n+        return true;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/EncryptedPrivateKeyInfo.java","additions":9,"deletions":15,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -439,12 +439,0 @@\n-    \/**\n-     * Encodes the signed data to an output stream.\n-     *\n-     * @param out the output stream to write the encoded data to.\n-     * @exception IOException on encoding errors.\n-     *\/\n-    public void encodeSignedData(OutputStream out) throws IOException {\n-        DerOutputStream derout = new DerOutputStream();\n-        encodeSignedData(derout);\n-        out.write(derout.toByteArray());\n-    }\n-\n@@ -853,1 +841,1 @@\n-        ByteArrayOutputStream p7out = new ByteArrayOutputStream();\n+        DerOutputStream p7out = new DerOutputStream();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS7.java","additions":1,"deletions":13,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -201,2 +201,1 @@\n-        byte[] b = getEncodedInternal();\n-        return (b == null) ? null : b.clone();\n+        return getEncodedInternal().clone();\n@@ -216,1 +215,1 @@\n-     * @return the encoding, or null if there is an I\/O error.\n+     * @return the encoding\n@@ -220,11 +219,7 @@\n-            try {\n-                DerOutputStream tmp = new DerOutputStream();\n-                tmp.putInteger(V1);\n-                algid.encode(tmp);\n-                tmp.putOctetString(key);\n-                DerValue out = DerValue.wrap(DerValue.tag_Sequence, tmp);\n-                encodedKey = out.toByteArray();\n-                out.clear();\n-            } catch (IOException e) {\n-                \/\/ encodedKey is still null\n-            }\n+            DerOutputStream tmp = new DerOutputStream();\n+            tmp.putInteger(V1);\n+            algid.encode(tmp);\n+            tmp.putOctetString(key);\n+            DerValue out = DerValue.wrap(DerValue.tag_Sequence, tmp);\n+            encodedKey = out.toByteArray();\n+            out.clear();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS8Key.java","additions":9,"deletions":14,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.security.cert.CertificateException;\n@@ -533,1 +532,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -538,1 +537,1 @@\n-            temp.write((byte[])value);\n+            temp.writeBytes((byte[])value);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attribute.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.OutputStream;\n@@ -158,1 +157,1 @@\n-    throws IllegalArgumentException, IOException {\n+            throws IllegalArgumentException {\n@@ -238,1 +237,1 @@\n-    public void encode(byte tag, OutputStream out) throws IOException {\n+    public void encode(byte tag, DerOutputStream out) {\n@@ -243,1 +242,1 @@\n-    private byte[] generateDerEncoding() throws IOException {\n+    private byte[] generateDerEncoding() {\n@@ -254,1 +253,1 @@\n-    public byte[] getDerEncoding() throws IOException {\n+    public byte[] getDerEncoding() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/PKCS9Attributes.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -215,4 +215,1 @@\n-     * @param out\n-     * the output stream on which to write the DER encoding.\n-     *\n-     * @exception IOException on encoding error.\n+     * @param out the output stream on which to write the DER encoding.\n@@ -221,1 +218,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -435,10 +432,5 @@\n-                try {\n-                    \/\/ We don't care whether this extension was marked\n-                    \/\/ critical in the certificate.\n-                    \/\/ We're interested only in its value (i.e., the bits set)\n-                    \/\/ and treat the extension as critical.\n-                    keyUsage = new KeyUsageExtension(keyUsageBits);\n-                } catch (IOException ioe) {\n-                    throw new SignatureException(\"Failed to parse keyUsage \"\n-                                                 + \"extension\");\n-                }\n+                \/\/ We don't care whether this extension was marked\n+                \/\/ critical in the certificate.\n+                \/\/ We're interested only in its value (i.e., the bits set)\n+                \/\/ and treat the extension as critical.\n+                keyUsage = new KeyUsageExtension(keyUsageBits);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs\/SignerInfo.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -198,1 +198,1 @@\n-            throws IOException, SignatureException,\n+            throws SignatureException,\n@@ -220,1 +220,1 @@\n-        scratch.write(subjectPublicKeyInfo.getEncoded()); \/\/ public key\n+        scratch.writeBytes(subjectPublicKeyInfo.getEncoded()); \/\/ public key\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -105,4 +105,1 @@\n-     * @param out\n-     * the OutputStream on which to write the DER encoding.\n-     *\n-     * @exception IOException on encoding errors.\n+     * @param out the DerOutputStream on which to write the DER encoding.\n@@ -111,1 +108,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attribute.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -94,2 +94,1 @@\n-     * @param out the OutputStream to marshal the contents to.\n-     * @exception IOException on encoding errors.\n+     * @param out the DerOutputStream to marshal the contents to.\n@@ -98,1 +97,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs10\/PKCS10Attributes.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -141,1 +141,1 @@\n-    public byte[] getEncoded() throws NoSuchAlgorithmException, IOException\n+    public byte[] getEncoded() throws NoSuchAlgorithmException\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/MacData.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -832,32 +832,0 @@\n-    \/*\n-     * parse Algorithm Parameters\n-     *\/\n-    private AlgorithmParameters parseAlgParameters(ObjectIdentifier algorithm,\n-        DerInputStream in) throws IOException\n-    {\n-        AlgorithmParameters algParams = null;\n-        try {\n-            DerValue params;\n-            if (in.available() == 0) {\n-                params = null;\n-            } else {\n-                params = in.getDerValue();\n-                if (params.tag == DerValue.tag_Null) {\n-                   params = null;\n-                }\n-            }\n-            if (params != null) {\n-                if (algorithm.equals(pbes2_OID)) {\n-                    algParams = AlgorithmParameters.getInstance(\"PBES2\");\n-                } else {\n-                    algParams = AlgorithmParameters.getInstance(\"PBE\");\n-                }\n-                algParams.init(params.toByteArray());\n-            }\n-        } catch (Exception e) {\n-           throw new IOException(\"parseAlgParameters failed: \" +\n-                                 e.getMessage(), e);\n-        }\n-        return algParams;\n-    }\n-\n@@ -1209,1 +1177,1 @@\n-        pfx.write(pfxVersion);\n+        pfx.writeBytes(pfxVersion);\n@@ -1250,1 +1218,1 @@\n-                encrData.write(encryptContent(certsData, password));\n+                encrData.writeBytes(encryptContent(certsData, password));\n@@ -1272,1 +1240,1 @@\n-        pfx.write(authSafeData);\n+        pfx.writeBytes(authSafeData);\n@@ -1618,1 +1586,1 @@\n-        Set<KeyStore.Entry.Attribute> attributes) throws IOException {\n+        Set<KeyStore.Entry.Attribute> attributes) {\n@@ -1624,1 +1592,1 @@\n-        Set<KeyStore.Entry.Attribute> attributes) throws IOException {\n+        Set<KeyStore.Entry.Attribute> attributes) {\n@@ -1678,1 +1646,1 @@\n-            attrs.write(friendlyName);\n+            attrs.writeBytes(friendlyName);\n@@ -1681,1 +1649,1 @@\n-            attrs.write(localKeyID);\n+            attrs.writeBytes(localKeyID);\n@@ -1684,1 +1652,1 @@\n-            attrs.write(trustedKeyUsage);\n+            attrs.writeBytes(trustedKeyUsage);\n@@ -1696,1 +1664,1 @@\n-                attrs.write(((PKCS12Attribute) attribute).getEncoded());\n+                attrs.writeBytes(((PKCS12Attribute) attribute).getEncoded());\n@@ -1709,3 +1677,1 @@\n-    private byte[] getCertificateData()\n-        throws CertificateException, IOException\n-    {\n+    private byte[] getCertificateData() throws CertificateException {\n@@ -1753,1 +1719,1 @@\n-                bagValue.write(certBagValue);\n+                bagValue.writeBytes(certBagValue);\n@@ -1787,1 +1753,1 @@\n-                    safeBag.write(bagAttrs);\n+                    safeBag.writeBytes(bagAttrs);\n@@ -1839,1 +1805,1 @@\n-                bagValue.write(encrInfo.getEncoded());\n+                bagValue.writeBytes(encrInfo.getEncoded());\n@@ -1866,1 +1832,1 @@\n-                bagValue.write(secretBagValue);\n+                bagValue.writeBytes(secretBagValue);\n@@ -1878,1 +1844,1 @@\n-            safeBag.write(bagAttrs);\n+            safeBag.writeBytes(bagAttrs);\n@@ -1934,1 +1900,1 @@\n-            bytes2.write(encodedAlgId);\n+            bytes2.writeBytes(encodedAlgId);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/pkcs12\/PKCS12KeyStore.java","additions":16,"deletions":50,"binary":false,"changes":66,"status":"modified"},{"patch":"@@ -263,12 +263,7 @@\n-            try {\n-                DerOutputStream outseq = new DerOutputStream(100);\n-                outseq.putInteger(r);\n-                outseq.putInteger(s);\n-                DerValue result = new DerValue(DerValue.tag_Sequence,\n-                        outseq.toByteArray());\n-\n-                return result.toByteArray();\n-\n-            } catch (IOException e) {\n-                throw new SignatureException(\"error encoding signature\");\n-            }\n+            DerOutputStream outseq = new DerOutputStream(100);\n+            outseq.putInteger(r);\n+            outseq.putInteger(s);\n+            DerValue result = new DerValue(DerValue.tag_Sequence,\n+                    outseq.toByteArray());\n+\n+            return result.toByteArray();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSA.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -71,9 +71,5 @@\n-        try {\n-            byte[] xbytes = x.toByteArray();\n-            DerValue val = new DerValue(DerValue.tag_Integer, xbytes);\n-            key = val.toByteArray();\n-            val.clear();\n-            Arrays.fill(xbytes, (byte)0);\n-        } catch (IOException e) {\n-            throw new AssertionError(\"Should not happen\", e);\n-        }\n+        byte[] xbytes = x.toByteArray();\n+        DerValue val = new DerValue(DerValue.tag_Integer, xbytes);\n+        key = val.toByteArray();\n+        val.clear();\n+        Arrays.fill(xbytes, (byte)0);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAPrivateKey.java","additions":5,"deletions":9,"binary":false,"changes":14,"status":"modified"},{"patch":"@@ -85,2 +85,1 @@\n-                        BigInteger g)\n-    throws InvalidKeyException {\n+                        BigInteger g) {\n@@ -90,9 +89,4 @@\n-        try {\n-            byte[] keyArray = new DerValue(DerValue.tag_Integer,\n-                               y.toByteArray()).toByteArray();\n-            setKey(new BitArray(keyArray.length*8, keyArray));\n-            encode();\n-        } catch (IOException e) {\n-            throw new InvalidKeyException(\"could not DER encode y: \" +\n-                                          e.getMessage());\n-        }\n+        byte[] keyArray = new DerValue(DerValue.tag_Integer,\n+                           y.toByteArray()).toByteArray();\n+        setKey(new BitArray(keyArray.length*8, keyArray));\n+        encode();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/DSAPublicKey.java","additions":5,"deletions":11,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -208,8 +208,3 @@\n-        AlgorithmId encrAlg;\n-        try {\n-            encrAlg = new AlgorithmId(ObjectIdentifier.of\n-                    (KnownOIDs.JAVASOFT_JDKKeyProtector));\n-            return new EncryptedPrivateKeyInfo(encrAlg,encrKey).getEncoded();\n-        } catch (IOException ioe) {\n-            throw new KeyStoreException(ioe.getMessage());\n-        }\n+        AlgorithmId encrAlg = new AlgorithmId(ObjectIdentifier.of\n+                (KnownOIDs.JAVASOFT_JDKKeyProtector));\n+        return new EncryptedPrivateKeyInfo(encrAlg,encrKey).getEncoded();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/KeyProtector.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-public class CertId {\n+public class CertId implements DerEncoder {\n@@ -157,1 +157,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/provider\/certpath\/CertId.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -202,43 +202,38 @@\n-        try {\n-            byte[][] nbytes = new byte[8][];\n-            nbytes[0] = n.toByteArray();\n-            nbytes[1] = e.toByteArray();\n-            nbytes[2] = d.toByteArray();\n-            nbytes[3] = p.toByteArray();\n-            nbytes[4] = q.toByteArray();\n-            nbytes[5] = pe.toByteArray();\n-            nbytes[6] = qe.toByteArray();\n-            nbytes[7] = coeff.toByteArray();\n-\n-            \/\/ Initiate with a big enough size so there's no need to\n-            \/\/ reallocate memory later and thus can be cleaned up\n-            \/\/ reliably.\n-            DerOutputStream out = new DerOutputStream(\n-                    nbytes[0].length + nbytes[1].length +\n-                    nbytes[2].length + nbytes[3].length +\n-                    nbytes[4].length + nbytes[5].length +\n-                    nbytes[6].length + nbytes[7].length +\n-                    100); \/\/ Enough for version(3) and 8 tag+length(3 or 4)\n-            out.putInteger(0); \/\/ version must be 0\n-            out.putInteger(nbytes[0]);\n-            out.putInteger(nbytes[1]);\n-            out.putInteger(nbytes[2]);\n-            out.putInteger(nbytes[3]);\n-            out.putInteger(nbytes[4]);\n-            out.putInteger(nbytes[5]);\n-            out.putInteger(nbytes[6]);\n-            out.putInteger(nbytes[7]);\n-            \/\/ Private values from [2] on.\n-            Arrays.fill(nbytes[2], (byte)0);\n-            Arrays.fill(nbytes[3], (byte)0);\n-            Arrays.fill(nbytes[4], (byte)0);\n-            Arrays.fill(nbytes[5], (byte)0);\n-            Arrays.fill(nbytes[6], (byte)0);\n-            Arrays.fill(nbytes[7], (byte)0);\n-            DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n-            key = val.toByteArray();\n-            val.clear();\n-        } catch (IOException exc) {\n-            \/\/ should never occur\n-            throw new InvalidKeyException(exc);\n-        }\n+        byte[][] nbytes = new byte[8][];\n+        nbytes[0] = n.toByteArray();\n+        nbytes[1] = e.toByteArray();\n+        nbytes[2] = d.toByteArray();\n+        nbytes[3] = p.toByteArray();\n+        nbytes[4] = q.toByteArray();\n+        nbytes[5] = pe.toByteArray();\n+        nbytes[6] = qe.toByteArray();\n+        nbytes[7] = coeff.toByteArray();\n+\n+        \/\/ Initiate with a big enough size so there's no need to\n+        \/\/ reallocate memory later and thus can be cleaned up\n+        \/\/ reliably.\n+        DerOutputStream out = new DerOutputStream(\n+                nbytes[0].length + nbytes[1].length +\n+                        nbytes[2].length + nbytes[3].length +\n+                        nbytes[4].length + nbytes[5].length +\n+                        nbytes[6].length + nbytes[7].length +\n+                        100); \/\/ Enough for version(3) and 8 tag+length(3 or 4)\n+        out.putInteger(0); \/\/ version must be 0\n+        out.putInteger(nbytes[0]);\n+        out.putInteger(nbytes[1]);\n+        out.putInteger(nbytes[2]);\n+        out.putInteger(nbytes[3]);\n+        out.putInteger(nbytes[4]);\n+        out.putInteger(nbytes[5]);\n+        out.putInteger(nbytes[6]);\n+        out.putInteger(nbytes[7]);\n+        \/\/ Private values from [2] on.\n+        Arrays.fill(nbytes[2], (byte) 0);\n+        Arrays.fill(nbytes[3], (byte) 0);\n+        Arrays.fill(nbytes[4], (byte) 0);\n+        Arrays.fill(nbytes[5], (byte) 0);\n+        Arrays.fill(nbytes[6], (byte) 0);\n+        Arrays.fill(nbytes[7], (byte) 0);\n+        DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n+        key = val.toByteArray();\n+        val.clear();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPrivateCrtKeyImpl.java","additions":38,"deletions":43,"binary":false,"changes":81,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2003, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -28,1 +28,0 @@\n-import java.io.IOException;\n@@ -92,25 +91,20 @@\n-        try {\n-            \/\/ generate the key encoding\n-            byte[] nbytes = n.toByteArray();\n-            byte[] dbytes = d.toByteArray();\n-            DerOutputStream out = new DerOutputStream(\n-                    nbytes.length + dbytes.length + 50);\n-                    \/\/ Enough for 7 zeroes (21) and 2 tag+length(4)\n-            out.putInteger(0); \/\/ version must be 0\n-            out.putInteger(nbytes);\n-            Arrays.fill(nbytes, (byte)0);\n-            out.putInteger(0);\n-            out.putInteger(dbytes);\n-            Arrays.fill(dbytes, (byte)0);\n-            out.putInteger(0);\n-            out.putInteger(0);\n-            out.putInteger(0);\n-            out.putInteger(0);\n-            out.putInteger(0);\n-            DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n-            key = val.toByteArray();\n-            val.clear();\n-        } catch (IOException exc) {\n-            \/\/ should never occur\n-            throw new InvalidKeyException(exc);\n-        }\n+        \/\/ generate the key encoding\n+        byte[] nbytes = n.toByteArray();\n+        byte[] dbytes = d.toByteArray();\n+        DerOutputStream out = new DerOutputStream(\n+                nbytes.length + dbytes.length + 50);\n+        \/\/ Enough for 7 zeroes (21) and 2 tag+length(4)\n+        out.putInteger(0); \/\/ version must be 0\n+        out.putInteger(nbytes);\n+        Arrays.fill(nbytes, (byte) 0);\n+        out.putInteger(0);\n+        out.putInteger(dbytes);\n+        Arrays.fill(dbytes, (byte) 0);\n+        out.putInteger(0);\n+        out.putInteger(0);\n+        out.putInteger(0);\n+        out.putInteger(0);\n+        out.putInteger(0);\n+        DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n+        key = val.toByteArray();\n+        val.clear();\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPrivateKeyImpl.java","additions":21,"deletions":27,"binary":false,"changes":48,"status":"modified"},{"patch":"@@ -129,6 +129,5 @@\n-        try {\n-            \/\/ generate the key encoding\n-            DerOutputStream out = new DerOutputStream();\n-            out.putInteger(n);\n-            out.putInteger(e);\n-            byte[] keyArray =\n+        \/\/ generate the key encoding\n+        DerOutputStream out = new DerOutputStream();\n+        out.putInteger(n);\n+        out.putInteger(e);\n+        byte[] keyArray =\n@@ -136,6 +135,2 @@\n-                             out.toByteArray()).toByteArray();\n-            setKey(new BitArray(keyArray.length*8, keyArray));\n-        } catch (IOException exc) {\n-            \/\/ should never occur\n-            throw new InvalidKeyException(exc);\n-        }\n+                        out.toByteArray()).toByteArray();\n+        setKey(new BitArray(keyArray.length * 8, keyArray));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAPublicKeyImpl.java","additions":7,"deletions":12,"binary":false,"changes":19,"status":"modified"},{"patch":"@@ -196,2 +196,0 @@\n-        } catch (IOException e) {\n-            throw new SignatureException(\"Could not encode data\", e);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSASignature.java","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -173,2 +173,1 @@\n-    public static byte[] encodeSignature(ObjectIdentifier oid, byte[] digest)\n-            throws IOException {\n+    public static byte[] encodeSignature(ObjectIdentifier oid, byte[] digest) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/rsa\/RSAUtil.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.io.IOException;\n-\n@@ -43,2 +41,1 @@\n-    void encode(DerOutputStream out)\n-        throws IOException;\n+    void encode(DerOutputStream out);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerEncoder.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.io.IOException;\n@@ -58,2 +57,2 @@\n-public class DerOutputStream\n-extends ByteArrayOutputStream implements DerEncoder {\n+public final class DerOutputStream\n+        extends ByteArrayOutputStream implements DerEncoder {\n@@ -81,1 +80,1 @@\n-    public DerOutputStream write(byte tag, byte[] buf) throws IOException {\n+    public DerOutputStream write(byte tag, byte[] buf) {\n@@ -84,1 +83,1 @@\n-        write(buf, 0, buf.length);\n+        writeBytes(buf);\n@@ -97,1 +96,1 @@\n-    public DerOutputStream write(byte tag, DerOutputStream out) throws IOException {\n+    public DerOutputStream write(byte tag, DerOutputStream out) {\n@@ -121,2 +120,1 @@\n-    public DerOutputStream writeImplicit(byte tag, DerOutputStream value)\n-    throws IOException {\n+    public DerOutputStream writeImplicit(byte tag, DerOutputStream value) {\n@@ -131,1 +129,1 @@\n-    public DerOutputStream putDerValue(DerValue val) throws IOException {\n+    public DerOutputStream putDerValue(DerValue val) {\n@@ -147,1 +145,1 @@\n-    public DerOutputStream putBoolean(boolean val) throws IOException {\n+    public DerOutputStream putBoolean(boolean val) {\n@@ -162,1 +160,1 @@\n-    public DerOutputStream putEnumerated(int i) throws IOException {\n+    public DerOutputStream putEnumerated(int i) {\n@@ -173,1 +171,1 @@\n-    public DerOutputStream putInteger(BigInteger i) throws IOException {\n+    public DerOutputStream putInteger(BigInteger i) {\n@@ -177,1 +175,1 @@\n-        write(buf, 0, buf.length);\n+        writeBytes(buf);\n@@ -186,1 +184,1 @@\n-    public DerOutputStream putInteger(byte[] buf) throws IOException {\n+    public DerOutputStream putInteger(byte[] buf) {\n@@ -189,1 +187,1 @@\n-        write(buf, 0, buf.length);\n+        writeBytes(buf);\n@@ -197,1 +195,1 @@\n-    public DerOutputStream putInteger(Integer i) throws IOException {\n+    public DerOutputStream putInteger(Integer i) {\n@@ -205,1 +203,1 @@\n-    public DerOutputStream putInteger(int i) throws IOException {\n+    public DerOutputStream putInteger(int i) {\n@@ -211,1 +209,1 @@\n-    private void putIntegerContents(int i) throws IOException {\n+    private void putIntegerContents(int i) {\n@@ -261,1 +259,1 @@\n-    public DerOutputStream putBitString(byte[] bits) throws IOException {\n+    public DerOutputStream putBitString(byte[] bits) {\n@@ -265,1 +263,1 @@\n-        write(bits);\n+        writeBytes(bits);\n@@ -275,1 +273,1 @@\n-    public DerOutputStream putUnalignedBitString(BitArray ba) throws IOException {\n+    public DerOutputStream putUnalignedBitString(BitArray ba) {\n@@ -281,1 +279,1 @@\n-        write(bits);\n+        writeBytes(bits);\n@@ -291,1 +289,1 @@\n-    public DerOutputStream putTruncatedUnalignedBitString(BitArray ba) throws IOException {\n+    public DerOutputStream putTruncatedUnalignedBitString(BitArray ba) {\n@@ -300,1 +298,1 @@\n-    public DerOutputStream putOctetString(byte[] octets) throws IOException {\n+    public DerOutputStream putOctetString(byte[] octets) {\n@@ -308,1 +306,1 @@\n-    public DerOutputStream putNull() throws IOException {\n+    public DerOutputStream putNull() {\n@@ -318,1 +316,1 @@\n-    public DerOutputStream putOID(ObjectIdentifier oid) throws IOException {\n+    public DerOutputStream putOID(ObjectIdentifier oid) {\n@@ -328,1 +326,1 @@\n-    public DerOutputStream putSequence(DerValue[] seq) throws IOException {\n+    public DerOutputStream putSequence(DerValue[] seq) {\n@@ -345,1 +343,1 @@\n-    public DerOutputStream putSet(DerValue[] set) throws IOException {\n+    public DerOutputStream putSet(DerValue[] set) {\n@@ -365,1 +363,1 @@\n-    public DerOutputStream putOrderedSetOf(byte tag, DerEncoder[] set) throws IOException {\n+    public DerOutputStream putOrderedSetOf(byte tag, DerEncoder[] set) {\n@@ -379,1 +377,1 @@\n-    public DerOutputStream putOrderedSet(byte tag, DerEncoder[] set) throws IOException {\n+    public DerOutputStream putOrderedSet(byte tag, DerEncoder[] set) {\n@@ -402,1 +400,1 @@\n-                               Comparator<byte[]> order) throws IOException {\n+                               Comparator<byte[]> order) {\n@@ -419,1 +417,1 @@\n-            bytes.write(bufs[i]);\n+            bytes.writeBytes(bufs[i]);\n@@ -427,1 +425,1 @@\n-    public DerOutputStream putUTF8String(String s) throws IOException {\n+    public DerOutputStream putUTF8String(String s) {\n@@ -434,1 +432,1 @@\n-    public DerOutputStream putPrintableString(String s) throws IOException {\n+    public DerOutputStream putPrintableString(String s) {\n@@ -441,1 +439,1 @@\n-    public DerOutputStream putT61String(String s) throws IOException {\n+    public DerOutputStream putT61String(String s) {\n@@ -452,1 +450,1 @@\n-    public DerOutputStream putIA5String(String s) throws IOException {\n+    public DerOutputStream putIA5String(String s) {\n@@ -459,1 +457,1 @@\n-    public DerOutputStream putBMPString(String s) throws IOException {\n+    public DerOutputStream putBMPString(String s) {\n@@ -466,1 +464,1 @@\n-    public DerOutputStream putGeneralString(String s) throws IOException {\n+    public DerOutputStream putGeneralString(String s) {\n@@ -478,2 +476,1 @@\n-    private DerOutputStream writeString(String s, byte stringTag, Charset charset)\n-        throws IOException {\n+    private DerOutputStream writeString(String s, byte stringTag, Charset charset) {\n@@ -484,1 +481,1 @@\n-        write(data);\n+        writeBytes(data);\n@@ -494,1 +491,1 @@\n-    public DerOutputStream putUTCTime(Date d) throws IOException {\n+    public DerOutputStream putUTCTime(Date d) {\n@@ -504,1 +501,1 @@\n-    public DerOutputStream putGeneralizedTime(Date d) throws IOException {\n+    public DerOutputStream putGeneralizedTime(Date d) {\n@@ -515,1 +512,1 @@\n-    private DerOutputStream putTime(Date d, byte tag) throws IOException {\n+    private DerOutputStream putTime(Date d, byte tag) {\n@@ -541,1 +538,1 @@\n-        write(time);\n+        writeBytes(time);\n@@ -549,1 +546,0 @@\n-     * @exception IOException on writing errors.\n@@ -551,1 +547,1 @@\n-    public void putLength(int len) throws IOException {\n+    public void putLength(int len) {\n@@ -582,2 +578,0 @@\n-     *\n-     *  @exception IOException on output error.\n@@ -586,2 +580,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n-        out.write(toByteArray());\n+    public void encode(DerOutputStream out) {\n+        out.writeBytes(toByteArray());\n@@ -593,1 +587,0 @@\n-     * @throws IOException on output error\n@@ -595,1 +588,1 @@\n-    public DerOutputStream write(DerEncoder encoder) throws IOException {\n+    public DerOutputStream write(DerEncoder encoder) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerOutputStream.java","additions":46,"deletions":53,"binary":false,"changes":99,"status":"modified"},{"patch":"@@ -496,1 +496,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -777,1 +777,1 @@\n-    public byte[] getDataBytes() throws IOException {\n+    public byte[] getDataBytes() {\n@@ -1136,1 +1136,1 @@\n-    public byte[] toByteArray() throws IOException {\n+    public byte[] toByteArray() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/DerValue.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.io.IOException;\n@@ -62,5 +61,1 @@\n-        try {\n-            out.putOID(ObjectIdentifier.of(ko));\n-        } catch (IOException e) {\n-            throw new RuntimeException(\"Internal error\", e);\n-        }\n+        out.putOID(ObjectIdentifier.of(ko));\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/NamedCurve.java","additions":1,"deletions":6,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -327,1 +327,1 @@\n-    void encode(DerOutputStream out) throws IOException {\n+    void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/util\/ObjectIdentifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -623,4 +623,1 @@\n-     * @param out\n-     * the output stream on which to write the DER encoding.\n-     *\n-     * @exception IOException on encoding error.\n+     * @param out the output stream on which to write the DER encoding.\n@@ -629,2 +626,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n-        DerOutputStream         tmp = new DerOutputStream();\n+    public void encode(DerOutputStream out) {\n+        DerOutputStream tmp = new DerOutputStream();\n@@ -708,6 +705,1 @@\n-            byte[] data;\n-            try {\n-                data = value.toByteArray();\n-            } catch (IOException ie) {\n-                throw new IllegalArgumentException(\"DER Value conversion\");\n-            }\n+            byte[] data = value.toByteArray();\n@@ -725,6 +717,1 @@\n-            String valStr;\n-            try {\n-                valStr = new String(value.getDataBytes(), UTF_8);\n-            } catch (IOException ie) {\n-                throw new IllegalArgumentException(\"DER Value conversion\");\n-            }\n+            String valStr = new String(value.getDataBytes(), UTF_8);\n@@ -843,6 +830,1 @@\n-            byte[] data;\n-            try {\n-                data = value.toByteArray();\n-            } catch (IOException ie) {\n-                throw new IllegalArgumentException(\"DER Value conversion\");\n-            }\n+            byte[] data = value.toByteArray();\n@@ -860,6 +842,1 @@\n-            String valStr;\n-            try {\n-                valStr = new String(value.getDataBytes(), UTF_8);\n-            } catch (IOException ie) {\n-                throw new IllegalArgumentException(\"DER Value conversion\");\n-            }\n+            String valStr = new String(value.getDataBytes(), UTF_8);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AVA.java","additions":7,"deletions":30,"binary":false,"changes":37,"status":"modified"},{"patch":"@@ -75,1 +75,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AccessDescription.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -156,4 +156,1 @@\n-     * @param out\n-     * the output stream on which to write the DER encoding.\n-     *\n-     * @exception IOException on encoding error.\n+     * @param out the output stream on which to write the DER encoding.\n@@ -162,1 +159,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -223,1 +220,1 @@\n-            bytes.write(encodedParams);\n+            bytes.writeBytes(encodedParams);\n@@ -232,1 +229,1 @@\n-    public final byte[] encode() throws IOException {\n+    public final byte[] encode() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AlgorithmId.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -79,1 +79,0 @@\n-     * @throws IOException on error\n@@ -82,1 +81,1 @@\n-            List<AccessDescription> accessDescriptions) throws IOException {\n+            List<AccessDescription> accessDescriptions) {\n@@ -141,1 +140,0 @@\n-     * @exception IOException on encoding errors.\n@@ -144,1 +142,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -154,1 +152,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityInfoAccessExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -68,1 +68,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -81,9 +81,5 @@\n-        try {\n-            if (names != null) {\n-                DerOutputStream tmp1 = new DerOutputStream();\n-                names.encode(tmp1);\n-                tmp.writeImplicit(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                  true, TAG_NAMES), tmp1);\n-            }\n-        } catch (Exception e) {\n-            throw new IOException(e.toString());\n+        if (names != null) {\n+            DerOutputStream tmp1 = new DerOutputStream();\n+            names.encode(tmp1);\n+            tmp.writeImplicit(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                              true, TAG_NAMES), tmp1);\n@@ -109,1 +105,0 @@\n-     * @exception IOException on error.\n@@ -112,2 +107,1 @@\n-                                           SerialNumber sn)\n-            throws IOException {\n+                                           SerialNumber sn) {\n@@ -208,1 +202,0 @@\n-     * @exception IOException on error.\n@@ -211,1 +204,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/AuthorityKeyIdentifierExtension.java","additions":8,"deletions":15,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -81,1 +81,1 @@\n-    public BasicConstraintsExtension(boolean ca, int len) throws IOException {\n+    public BasicConstraintsExtension(boolean ca, int len) {\n@@ -92,2 +92,1 @@\n-    public BasicConstraintsExtension(Boolean critical, boolean ca, int len)\n-    throws IOException {\n+    public BasicConstraintsExtension(Boolean critical, boolean ca, int len) {\n@@ -181,1 +180,1 @@\n-     public void encode(DerOutputStream out) throws IOException {\n+     public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/BasicConstraintsExtension.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -96,1 +96,0 @@\n-     * @throws IOException on error\n@@ -99,1 +98,1 @@\n-        List<DistributionPoint> distributionPoints) throws IOException {\n+            List<DistributionPoint> distributionPoints) {\n@@ -111,1 +110,0 @@\n-     * @throws IOException on error\n@@ -114,1 +112,1 @@\n-        List<DistributionPoint> distributionPoints) throws IOException {\n+        List<DistributionPoint> distributionPoints) {\n@@ -125,1 +123,1 @@\n-            String extensionName) throws IOException {\n+            String extensionName) {\n@@ -192,1 +190,0 @@\n-     * @exception IOException on encoding errors.\n@@ -195,1 +192,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -204,1 +201,1 @@\n-            boolean isCritical) throws IOException {\n+            boolean isCritical) {\n@@ -224,1 +221,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLDistributionPointsExtension.java","additions":6,"deletions":9,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -140,1 +140,0 @@\n-     * @exception CRLException on encoding errors.\n@@ -142,7 +141,5 @@\n-    public void encode(OutputStream out, boolean isExplicit)\n-    throws CRLException {\n-        try {\n-            DerOutputStream extOut = new DerOutputStream();\n-            for (Extension ext : map.values()) {\n-                ext.encode(extOut);\n-            }\n+    public void encode(DerOutputStream out, boolean isExplicit) {\n+        DerOutputStream extOut = new DerOutputStream();\n+        for (Extension ext : map.values()) {\n+            ext.encode(extOut);\n+        }\n@@ -150,2 +147,2 @@\n-            DerOutputStream seq = new DerOutputStream();\n-            seq.write(DerValue.tag_Sequence, extOut);\n+        DerOutputStream seq = new DerOutputStream();\n+        seq.write(DerValue.tag_Sequence, extOut);\n@@ -153,6 +150,6 @@\n-            DerOutputStream tmp = new DerOutputStream();\n-            if (isExplicit)\n-                tmp.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                             true, (byte)0), seq);\n-            else\n-                tmp = seq;\n+        DerOutputStream tmp = new DerOutputStream();\n+        if (isExplicit)\n+            tmp.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                    true, (byte) 0), seq);\n+        else\n+            tmp = seq;\n@@ -160,4 +157,1 @@\n-            out.write(tmp.toByteArray());\n-        } catch (IOException e) {\n-            throw new CRLException(\"Encoding error: \" + e.toString());\n-        }\n+        out.writeBytes(tmp.toByteArray());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLExtensions.java","additions":14,"deletions":20,"binary":false,"changes":34,"status":"modified"},{"patch":"@@ -56,1 +56,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -72,1 +72,1 @@\n-    public CRLNumberExtension(int crlNum) throws IOException {\n+    public CRLNumberExtension(int crlNum) {\n@@ -83,1 +83,1 @@\n-    public CRLNumberExtension(BigInteger crlNum) throws IOException {\n+    public CRLNumberExtension(BigInteger crlNum) {\n@@ -91,2 +91,2 @@\n-        boolean isCritical, BigInteger crlNum, String extensionName,\n-        String extensionLabel) throws IOException {\n+            boolean isCritical, BigInteger crlNum, String extensionName,\n+            String extensionLabel) {\n@@ -161,1 +161,0 @@\n-     * @exception IOException on encoding errors.\n@@ -164,1 +163,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -173,1 +172,1 @@\n-            boolean isCritical) throws IOException {\n+            boolean isCritical) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLNumberExtension.java","additions":7,"deletions":8,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -48,1 +48,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -74,2 +74,1 @@\n-    public CRLReasonCodeExtension(boolean critical, int reason)\n-            throws IOException {\n+    public CRLReasonCodeExtension(boolean critical, int reason) {\n@@ -113,1 +112,0 @@\n-     * @exception IOException on encoding errors.\n@@ -116,1 +114,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CRLReasonCodeExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -88,1 +88,0 @@\n-     * @exception IOException on errors.\n@@ -91,1 +90,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateAlgorithmId.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -140,2 +140,0 @@\n-     * @exception CertificateException on encoding errors.\n-     * @exception IOException on errors.\n@@ -144,1 +142,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -156,2 +154,1 @@\n-    public void encode(DerOutputStream out, boolean isCertReq)\n-            throws IOException {\n+    public void encode(DerOutputStream out, boolean isCertReq) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateExtensions.java","additions":2,"deletions":5,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -69,1 +69,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -84,1 +84,0 @@\n-     * @throws IOException on error\n@@ -86,1 +85,1 @@\n-    public CertificateIssuerExtension(GeneralNames issuer) throws IOException {\n+    public CertificateIssuerExtension(GeneralNames issuer) {\n@@ -131,1 +130,0 @@\n-     * @exception IOException on encoding errors\n@@ -134,1 +132,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateIssuerExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -77,1 +77,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -99,2 +99,1 @@\n-    public CertificatePoliciesExtension(List<PolicyInformation> certPolicies)\n-    throws IOException {\n+    public CertificatePoliciesExtension(List<PolicyInformation> certPolicies) {\n@@ -112,1 +111,1 @@\n-            List<PolicyInformation> certPolicies) throws IOException {\n+            List<PolicyInformation> certPolicies) {\n@@ -171,1 +170,0 @@\n-     * @exception IOException on encoding errors.\n@@ -174,1 +172,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePoliciesExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -40,1 +40,1 @@\n-public class CertificatePolicyId {\n+public class CertificatePolicyId implements DerEncoder {\n@@ -82,1 +82,0 @@\n-     * @exception IOException on errors.\n@@ -84,1 +83,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicyId.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -39,1 +39,1 @@\n-public class CertificatePolicyMap {\n+public class CertificatePolicyMap implements DerEncoder {\n@@ -97,1 +97,0 @@\n-     * @exception IOException on errors.\n@@ -99,1 +98,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicyMap.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -41,1 +41,1 @@\n-public class CertificatePolicySet {\n+public class CertificatePolicySet implements DerEncoder {\n@@ -85,1 +85,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificatePolicySet.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -107,1 +107,0 @@\n-     * @exception IOException on errors.\n@@ -110,1 +109,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSerialNumber.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -94,1 +94,0 @@\n-     * @exception IOException on errors.\n@@ -97,1 +96,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateSubjectName.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -126,1 +126,0 @@\n-     * @exception IOException on errors.\n@@ -129,1 +128,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateValidity.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -149,1 +149,0 @@\n-     * @exception IOException on errors.\n@@ -152,1 +151,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateVersion.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -91,1 +91,0 @@\n-     * @exception IOException on errors.\n@@ -94,2 +93,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n-        out.write(key.getEncoded());\n+    public void encode(DerOutputStream out) {\n+        out.writeBytes(key.getEncoded());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/CertificateX509Key.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -153,1 +153,0 @@\n-     * @exception IOException on encoding errors.\n@@ -155,1 +154,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DNSName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    public DeltaCRLIndicatorExtension(int crlNum) throws IOException {\n+    public DeltaCRLIndicatorExtension(int crlNum) {\n@@ -83,1 +83,1 @@\n-    public DeltaCRLIndicatorExtension(BigInteger crlNum) throws IOException {\n+    public DeltaCRLIndicatorExtension(BigInteger crlNum) {\n@@ -105,1 +105,0 @@\n-     * @exception IOException on encoding errors.\n@@ -108,1 +107,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DeltaCRLIndicatorExtension.java","additions":3,"deletions":4,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -32,0 +32,1 @@\n+import sun.security.util.DerEncoder;\n@@ -96,1 +97,1 @@\n-public class DistributionPoint {\n+public class DistributionPoint implements DerEncoder {\n@@ -278,1 +279,0 @@\n-     * @exception IOException on error.\n@@ -280,1 +280,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPoint.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -31,0 +31,1 @@\n+import sun.security.util.DerEncoder;\n@@ -81,1 +82,1 @@\n-public class DistributionPointName {\n+public class DistributionPointName implements DerEncoder {\n@@ -167,1 +168,0 @@\n-     * @exception IOException on encoding error.\n@@ -169,1 +169,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/DistributionPointName.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -127,1 +127,0 @@\n-     * @exception IOException on encoding errors.\n@@ -129,1 +128,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/EDIPartyName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -89,1 +89,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -111,2 +111,1 @@\n-    public ExtendedKeyUsageExtension(Vector<ObjectIdentifier> keyUsages)\n-    throws IOException {\n+    public ExtendedKeyUsageExtension(Vector<ObjectIdentifier> keyUsages) {\n@@ -124,2 +123,1 @@\n-    public ExtendedKeyUsageExtension(Boolean critical, Vector<ObjectIdentifier> keyUsages)\n-            throws IOException {\n+    public ExtendedKeyUsageExtension(Boolean critical, Vector<ObjectIdentifier> keyUsages) {\n@@ -191,1 +189,0 @@\n-     * @exception IOException on encoding errors.\n@@ -194,1 +191,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ExtendedKeyUsageExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -172,1 +172,0 @@\n-     * @exception IOException on encoding errors\n@@ -175,1 +174,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/Extension.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -68,2 +68,1 @@\n-    public FreshestCRLExtension(List<DistributionPoint> distributionPoints)\n-        throws IOException {\n+    public FreshestCRLExtension(List<DistributionPoint> distributionPoints) {\n@@ -91,1 +90,0 @@\n-     * @exception IOException on encoding errors.\n@@ -94,1 +92,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/FreshestCRLExtension.java","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -52,1 +52,1 @@\n-public class GeneralName {\n+public class GeneralName implements DerEncoder {\n@@ -234,1 +234,0 @@\n-     * @exception IOException on encoding errors.\n@@ -236,1 +235,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralName.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -28,2 +28,0 @@\n-import java.io.IOException;\n-\n@@ -39,1 +37,1 @@\n-public interface GeneralNameInterface {\n+public interface GeneralNameInterface extends DerEncoder {\n@@ -68,9 +66,0 @@\n-    \/**\n-     * Encode the name to the specified DerOutputStream.\n-     *\n-     * @param out the DerOutputStream to encode the GeneralName to.\n-     * @exception IOException thrown if the GeneralName could not be\n-     *            encoded.\n-     *\/\n-    void encode(DerOutputStream out) throws IOException;\n-\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralNameInterface.java","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -114,1 +114,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralNames.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-public class GeneralSubtree {\n+public class GeneralSubtree implements DerEncoder {\n@@ -197,1 +197,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtree.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -46,1 +46,1 @@\n-public class GeneralSubtrees implements Cloneable {\n+public class GeneralSubtrees implements Cloneable, DerEncoder {\n@@ -135,1 +135,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/GeneralSubtrees.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -229,1 +229,0 @@\n-     * @exception IOException on encoding errors.\n@@ -231,1 +230,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IPAddressName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -72,1 +72,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -84,1 +84,1 @@\n-    public InhibitAnyPolicyExtension(int skipCerts) throws IOException {\n+    public InhibitAnyPolicyExtension(int skipCerts) {\n@@ -147,1 +147,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InhibitAnyPolicyExtension.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -67,1 +67,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -83,1 +83,1 @@\n-    public InvalidityDateExtension(Date date) throws IOException {\n+    public InvalidityDateExtension(Date date) {\n@@ -93,2 +93,1 @@\n-    public InvalidityDateExtension(boolean critical, Date date)\n-            throws IOException {\n+    public InvalidityDateExtension(boolean critical, Date date) {\n@@ -144,1 +143,0 @@\n-     * @exception IOException on encoding errors\n@@ -147,1 +145,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/InvalidityDateExtension.java","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -55,1 +55,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -69,1 +69,0 @@\n-     * @exception IOException on error.\n@@ -71,2 +70,1 @@\n-    public IssuerAlternativeNameExtension(GeneralNames names)\n-            throws IOException {\n+    public IssuerAlternativeNameExtension(GeneralNames names) {\n@@ -82,1 +80,0 @@\n-     * @exception IOException on error.\n@@ -84,2 +81,1 @@\n-    public IssuerAlternativeNameExtension(Boolean critical, GeneralNames names)\n-            throws IOException {\n+    public IssuerAlternativeNameExtension(Boolean critical, GeneralNames names) {\n@@ -141,1 +137,0 @@\n-     * @exception IOException on encoding error.\n@@ -144,1 +139,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuerAlternativeNameExtension.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -115,1 +115,0 @@\n-     * @throws IOException on encoding error.\n@@ -120,2 +119,1 @@\n-        boolean hasOnlyAttributeCerts, boolean isIndirectCRL)\n-            throws IOException {\n+        boolean hasOnlyAttributeCerts, boolean isIndirectCRL) {\n@@ -225,1 +223,0 @@\n-     * @exception IOException on encoding error.\n@@ -228,1 +225,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -267,1 +264,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/IssuingDistributionPointExtension.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -128,1 +128,1 @@\n-    void encode(DerOutputStream out) throws IOException {\n+    void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyIdentifier.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -62,1 +62,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -97,1 +97,1 @@\n-    public KeyUsageExtension(byte[] bitString) throws IOException {\n+    public KeyUsageExtension(byte[] bitString) {\n@@ -111,1 +111,1 @@\n-    public KeyUsageExtension(boolean[] bitString) throws IOException {\n+    public KeyUsageExtension(boolean[] bitString) {\n@@ -124,1 +124,1 @@\n-    public KeyUsageExtension(BitArray bitString) throws IOException {\n+    public KeyUsageExtension(BitArray bitString) {\n@@ -275,1 +275,0 @@\n-     * @exception IOException on encoding errors.\n@@ -278,1 +277,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/KeyUsageExtension.java","additions":5,"deletions":6,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -104,1 +104,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -138,2 +138,1 @@\n-                                    GeneralSubtrees excluded)\n-            throws IOException {\n+                                    GeneralSubtrees excluded) {\n@@ -229,1 +228,0 @@\n-     * @exception IOException on encoding errors.\n@@ -232,1 +230,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NameConstraintsExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -106,1 +106,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -141,1 +141,1 @@\n-    public NetscapeCertTypeExtension(byte[] bitString) throws IOException {\n+    public NetscapeCertTypeExtension(byte[] bitString) {\n@@ -155,1 +155,1 @@\n-    public NetscapeCertTypeExtension(boolean[] bitString) throws IOException {\n+    public NetscapeCertTypeExtension(boolean[] bitString) {\n@@ -241,1 +241,0 @@\n-     * @exception IOException on encoding errors.\n@@ -244,1 +243,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/NetscapeCertTypeExtension.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -89,1 +89,0 @@\n-     * @exception IOException on encoding errors.\n@@ -91,1 +90,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OIDName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -154,1 +154,0 @@\n-     * @exception IOException on encoding errors.\n@@ -156,1 +155,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/OtherName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -65,1 +65,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -97,2 +97,1 @@\n-    public PolicyConstraintsExtension(int require, int inhibit)\n-    throws IOException {\n+    public PolicyConstraintsExtension(int require, int inhibit) {\n@@ -111,2 +110,1 @@\n-    public PolicyConstraintsExtension(Boolean critical, int require, int inhibit)\n-            throws IOException {\n+    public PolicyConstraintsExtension(Boolean critical, int require, int inhibit) {\n@@ -193,1 +191,0 @@\n-     * @exception IOException on encoding errors.\n@@ -196,1 +193,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyConstraintsExtension.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -35,0 +35,1 @@\n+import sun.security.util.DerEncoder;\n@@ -62,1 +63,1 @@\n-public class PolicyInformation {\n+public class PolicyInformation implements DerEncoder {\n@@ -181,1 +182,0 @@\n-     * @exception IOException on encoding errors.\n@@ -183,1 +183,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n@@ -189,1 +190,1 @@\n-                tmp2.write(pq.getEncoded());\n+                tmp2.writeBytes(pq.getEncoded());\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyInformation.java","additions":5,"deletions":4,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -59,1 +59,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -80,2 +80,1 @@\n-    public PolicyMappingsExtension(List<CertificatePolicyMap> maps)\n-            throws IOException {\n+    public PolicyMappingsExtension(List<CertificatePolicyMap> maps) {\n@@ -132,1 +131,0 @@\n-     * @exception IOException on encoding errors.\n@@ -135,1 +133,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PolicyMappingsExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -71,1 +71,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -104,2 +104,1 @@\n-    public PrivateKeyUsageExtension(Date notBefore, Date notAfter)\n-            throws IOException {\n+    public PrivateKeyUsageExtension(Date notBefore, Date notAfter) {\n@@ -233,1 +232,0 @@\n-     * @exception IOException on encoding errors.\n@@ -236,1 +234,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/PrivateKeyUsageExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -338,1 +338,1 @@\n-    void encode(DerOutputStream out) throws IOException {\n+    void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/RDN.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -117,1 +117,0 @@\n-     * @exception IOException on encoding errors.\n@@ -119,1 +118,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/RFC822Name.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -30,4 +30,1 @@\n-import sun.security.util.BitArray;\n-import sun.security.util.DerInputStream;\n-import sun.security.util.DerOutputStream;\n-import sun.security.util.DerValue;\n+import sun.security.util.*;\n@@ -56,1 +53,1 @@\n-public class ReasonFlags {\n+public class ReasonFlags implements DerEncoder {\n@@ -234,1 +231,0 @@\n-     * @exception IOException on encoding errors.\n@@ -236,1 +232,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/ReasonFlags.java","additions":4,"deletions":7,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2002, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -113,1 +113,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SerialNumber.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -75,1 +75,0 @@\n-     * @exception IOException on error.\n@@ -77,2 +76,1 @@\n-    public SubjectAlternativeNameExtension(GeneralNames names)\n-    throws IOException {\n+    public SubjectAlternativeNameExtension(GeneralNames names) {\n@@ -88,1 +86,0 @@\n-     * @exception IOException on error.\n@@ -90,2 +87,1 @@\n-    public SubjectAlternativeNameExtension(Boolean critical, GeneralNames names)\n-            throws IOException {\n+    public SubjectAlternativeNameExtension(Boolean critical, GeneralNames names) {\n@@ -145,1 +141,0 @@\n-     * @exception IOException on encoding errors.\n@@ -148,1 +143,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectAlternativeNameExtension.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -83,1 +83,0 @@\n-     * @throws IOException on error\n@@ -86,1 +85,1 @@\n-            List<AccessDescription> accessDescriptions) throws IOException {\n+            List<AccessDescription> accessDescriptions) {\n@@ -146,1 +145,0 @@\n-     * @exception IOException on encoding errors.\n@@ -149,1 +147,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n@@ -159,1 +157,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectInfoAccessExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -60,1 +60,1 @@\n-    private void encodeThis() throws IOException {\n+    private void encodeThis() {\n@@ -75,2 +75,1 @@\n-    public SubjectKeyIdentifierExtension(byte[] octetString)\n-            throws IOException {\n+    public SubjectKeyIdentifierExtension(byte[] octetString) {\n@@ -113,1 +112,0 @@\n-     * @exception IOException on encoding errors.\n@@ -116,1 +114,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/SubjectKeyIdentifierExtension.java","additions":3,"deletions":5,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -200,1 +200,0 @@\n-     * @exception IOException on encoding errors.\n@@ -202,1 +201,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/URIName.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -97,1 +97,1 @@\n-    public void encode(DerOutputStream out, byte tag) throws IOException {\n+    public void encode(DerOutputStream out, byte tag) {\n@@ -105,1 +105,1 @@\n-        out.write(bytes);\n+        out.writeBytes(bytes);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/UniqueIdentity.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -367,1 +367,0 @@\n-     * @exception IOException on encoding errors.\n@@ -370,1 +369,1 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X400Address.java","additions":1,"deletions":2,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -829,1 +829,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n+    @Override\n+    public void encode(DerOutputStream out) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X500Name.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -155,1 +155,0 @@\n-     * @exception CRLException on encoding errors.\n@@ -157,12 +156,11 @@\n-    public void encode(DerOutputStream outStrm) throws CRLException {\n-        try {\n-            if (revokedCert == null) {\n-                DerOutputStream tmp = new DerOutputStream();\n-                \/\/ sequence { serialNumber, revocationDate, extensions }\n-                serialNumber.encode(tmp);\n-\n-                if (revocationDate.getTime() < CertificateValidity.YR_2050) {\n-                    tmp.putUTCTime(revocationDate);\n-                } else {\n-                    tmp.putGeneralizedTime(revocationDate);\n-                }\n+    public void encode(DerOutputStream outStrm) {\n+        if (revokedCert == null) {\n+            DerOutputStream tmp = new DerOutputStream();\n+            \/\/ sequence { serialNumber, revocationDate, extensions }\n+            serialNumber.encode(tmp);\n+\n+            if (revocationDate.getTime() < CertificateValidity.YR_2050) {\n+                tmp.putUTCTime(revocationDate);\n+            } else {\n+                tmp.putGeneralizedTime(revocationDate);\n+            }\n@@ -170,2 +168,2 @@\n-                if (extensions != null)\n-                    extensions.encode(tmp, isExplicit);\n+            if (extensions != null)\n+                extensions.encode(tmp, isExplicit);\n@@ -173,2 +171,2 @@\n-                DerOutputStream seq = new DerOutputStream();\n-                seq.write(DerValue.tag_Sequence, tmp);\n+            DerOutputStream seq = new DerOutputStream();\n+            seq.write(DerValue.tag_Sequence, tmp);\n@@ -176,5 +174,1 @@\n-                revokedCert = seq.toByteArray();\n-            }\n-            outStrm.write(revokedCert);\n-        } catch (IOException e) {\n-             throw new CRLException(\"Encoding error: \" + e.toString());\n+            revokedCert = seq.toByteArray();\n@@ -182,0 +176,1 @@\n+        outStrm.writeBytes(revokedCert);\n@@ -187,2 +182,0 @@\n-     *\n-     * @exception CRLException if an encoding error occurs.\n@@ -190,1 +183,1 @@\n-    public byte[] getEncoded() throws CRLException {\n+    public byte[] getEncoded() {\n@@ -195,1 +188,1 @@\n-    private byte[] getEncoded0() throws CRLException {\n+    private byte[] getEncoded0() {\n@@ -526,11 +519,6 @@\n-        try {\n-            byte[] thisEncoded = this.getEncoded0();\n-            byte[] thatEncoded = that.getEncoded0();\n-            for (int i=0; i<thisEncoded.length && i<thatEncoded.length; i++) {\n-                int a = thisEncoded[i] & 0xff;\n-                int b = thatEncoded[i] & 0xff;\n-                if (a != b) return a-b;\n-            }\n-            return thisEncoded.length -thatEncoded.length;\n-        } catch (CRLException ce) {\n-            return -1;\n+        byte[] thisEncoded = this.getEncoded0();\n+        byte[] thatEncoded = that.getEncoded0();\n+        for (int i=0; i<thisEncoded.length && i<thatEncoded.length; i++) {\n+            int a = thisEncoded[i] & 0xff;\n+            int b = thatEncoded[i] & 0xff;\n+            if (a != b) return a-b;\n@@ -538,0 +526,1 @@\n+        return thisEncoded.length -thatEncoded.length;\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLEntryImpl.java","additions":26,"deletions":37,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -301,14 +301,19 @@\n-            try {\n-                DerOutputStream tmp = new DerOutputStream();\n-                DerOutputStream rCerts = new DerOutputStream();\n-                DerOutputStream seq = new DerOutputStream();\n-\n-                if (version != 0) \/\/ v2 crl encode version\n-                    tmp.putInteger(version);\n-                infoSigAlgId.encode(tmp);\n-                if ((version == 0) && (issuer.toString() == null))\n-                    throw new CRLException(\"Null Issuer DN not allowed in v1 CRL\");\n-                issuer.encode(tmp);\n-\n-                if (thisUpdate.getTime() < CertificateValidity.YR_2050)\n-                    tmp.putUTCTime(thisUpdate);\n+            DerOutputStream tmp = new DerOutputStream();\n+            DerOutputStream rCerts = new DerOutputStream();\n+            DerOutputStream seq = new DerOutputStream();\n+\n+            if (version != 0) \/\/ v2 crl encode version\n+                tmp.putInteger(version);\n+            infoSigAlgId.encode(tmp);\n+            if ((version == 0) && (issuer.toString() == null))\n+                throw new CRLException(\"Null Issuer DN not allowed in v1 CRL\");\n+            issuer.encode(tmp);\n+\n+            if (thisUpdate.getTime() < CertificateValidity.YR_2050)\n+                tmp.putUTCTime(thisUpdate);\n+            else\n+                tmp.putGeneralizedTime(thisUpdate);\n+\n+            if (nextUpdate != null) {\n+                if (nextUpdate.getTime() < CertificateValidity.YR_2050)\n+                    tmp.putUTCTime(nextUpdate);\n@@ -316,1 +321,2 @@\n-                    tmp.putGeneralizedTime(thisUpdate);\n+                    tmp.putGeneralizedTime(nextUpdate);\n+            }\n@@ -318,12 +324,3 @@\n-                if (nextUpdate != null) {\n-                    if (nextUpdate.getTime() < CertificateValidity.YR_2050)\n-                        tmp.putUTCTime(nextUpdate);\n-                    else\n-                        tmp.putGeneralizedTime(nextUpdate);\n-                }\n-\n-                if (!revokedList.isEmpty()) {\n-                    for (X509CRLEntry entry : revokedList) {\n-                        ((X509CRLEntryImpl)entry).encode(rCerts);\n-                    }\n-                    tmp.write(DerValue.tag_Sequence, rCerts);\n+            if (!revokedList.isEmpty()) {\n+                for (X509CRLEntry entry : revokedList) {\n+                    ((X509CRLEntryImpl) entry).encode(rCerts);\n@@ -331,0 +328,2 @@\n+                tmp.write(DerValue.tag_Sequence, rCerts);\n+            }\n@@ -332,2 +331,2 @@\n-                if (extensions != null)\n-                    extensions.encode(tmp, isExplicit);\n+            if (extensions != null)\n+                extensions.encode(tmp, isExplicit);\n@@ -335,1 +334,1 @@\n-                seq.write(DerValue.tag_Sequence, tmp);\n+            seq.write(DerValue.tag_Sequence, tmp);\n@@ -337,4 +336,1 @@\n-                return seq.toByteArray();\n-            } catch (IOException e) {\n-                throw new CRLException(\"Encoding error: \" + e.getMessage());\n-            }\n+            return seq.toByteArray();\n@@ -342,1 +338,0 @@\n-\n@@ -608,4 +603,3 @@\n-        try {\n-            Signature sigEngine = SignatureUtil.fromKey(algorithm, key, provider);\n-            AlgorithmId sigAlgId = SignatureUtil.fromSignature(sigEngine, key);\n-            info.infoSigAlgId = sigAlgId;\n+        Signature sigEngine = SignatureUtil.fromKey(algorithm, key, provider);\n+        AlgorithmId sigAlgId = SignatureUtil.fromSignature(sigEngine, key);\n+        info.infoSigAlgId = sigAlgId;\n@@ -613,2 +607,2 @@\n-            DerOutputStream out = new DerOutputStream();\n-            DerOutputStream tmp = new DerOutputStream();\n+        DerOutputStream out = new DerOutputStream();\n+        DerOutputStream tmp = new DerOutputStream();\n@@ -616,3 +610,3 @@\n-            \/\/ encode crl info\n-            byte[] tbsCertList = info.encodeInfo();\n-            tmp.writeBytes(tbsCertList);\n+        \/\/ encode crl info\n+        byte[] tbsCertList = info.encodeInfo();\n+        tmp.writeBytes(tbsCertList);\n@@ -620,2 +614,2 @@\n-            \/\/ encode algorithm identifier\n-            sigAlgId.encode(tmp);\n+        \/\/ encode algorithm identifier\n+        sigAlgId.encode(tmp);\n@@ -623,4 +617,4 @@\n-            \/\/ Create and encode the signature itself.\n-            sigEngine.update(tbsCertList, 0, tbsCertList.length);\n-            byte[] signature = sigEngine.sign();\n-            tmp.putBitString(signature);\n+        \/\/ Create and encode the signature itself.\n+        sigEngine.update(tbsCertList, 0, tbsCertList.length);\n+        byte[] signature = sigEngine.sign();\n+        tmp.putBitString(signature);\n@@ -628,3 +622,3 @@\n-            \/\/ Wrap the signed data in a SEQUENCE { data, algorithm, sig }\n-            out.write(DerValue.tag_Sequence, tmp);\n-            byte[] signedCRL = out.toByteArray();\n+        \/\/ Wrap the signed data in a SEQUENCE { data, algorithm, sig }\n+        out.write(DerValue.tag_Sequence, tmp);\n+        byte[] signedCRL = out.toByteArray();\n@@ -632,6 +626,2 @@\n-            return new X509CRLImpl(info, sigAlgId, signature,\n-                    tbsCertList, signedCRL);\n-        } catch (IOException e) {\n-            throw new CRLException(\"Error while encoding data: \" +\n-                                   e.getMessage());\n-        }\n+        return new X509CRLImpl(info, sigAlgId, signature,\n+                tbsCertList, signedCRL);\n@@ -1254,2 +1244,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n-        out.write(signedCRL.clone());\n+    public void encode(DerOutputStream out) {\n+        out.writeBytes(signedCRL);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CRLImpl.java","additions":51,"deletions":61,"binary":false,"changes":112,"status":"modified"},{"patch":"@@ -263,2 +263,0 @@\n-     *\n-     * @exception IOException on encoding error.\n@@ -267,2 +265,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n-        out.write(signedCert.clone());\n+    public void encode(DerOutputStream out) {\n+        out.writeBytes(signedCert);\n@@ -471,4 +469,3 @@\n-        try {\n-            Signature sigEngine = SignatureUtil.fromKey(\n-                    algorithm, key, provider);\n-            AlgorithmId algId = SignatureUtil.fromSignature(sigEngine, key);\n+        Signature sigEngine = SignatureUtil.fromKey(\n+                algorithm, key, provider);\n+        AlgorithmId algId = SignatureUtil.fromSignature(sigEngine, key);\n@@ -476,2 +473,2 @@\n-            DerOutputStream out = new DerOutputStream();\n-            DerOutputStream tmp = new DerOutputStream();\n+        DerOutputStream out = new DerOutputStream();\n+        DerOutputStream tmp = new DerOutputStream();\n@@ -479,4 +476,4 @@\n-            \/\/ encode certificate info\n-            info.setAlgorithmId(new CertificateAlgorithmId(algId));\n-            info.encode(tmp);\n-            byte[] rawCert = tmp.toByteArray();\n+        \/\/ encode certificate info\n+        info.setAlgorithmId(new CertificateAlgorithmId(algId));\n+        info.encode(tmp);\n+        byte[] rawCert = tmp.toByteArray();\n@@ -484,2 +481,2 @@\n-            \/\/ encode algorithm identifier\n-            algId.encode(tmp);\n+        \/\/ encode algorithm identifier\n+        algId.encode(tmp);\n@@ -487,4 +484,4 @@\n-            \/\/ Create and encode the signature itself.\n-            sigEngine.update(rawCert, 0, rawCert.length);\n-            byte[] signature = sigEngine.sign();\n-            tmp.putBitString(signature);\n+        \/\/ Create and encode the signature itself.\n+        sigEngine.update(rawCert, 0, rawCert.length);\n+        byte[] signature = sigEngine.sign();\n+        tmp.putBitString(signature);\n@@ -492,3 +489,3 @@\n-            \/\/ Wrap the signed data in a SEQUENCE { data, algorithm, sig }\n-            out.write(DerValue.tag_Sequence, tmp);\n-            byte[] signedCert = out.toByteArray();\n+        \/\/ Wrap the signed data in a SEQUENCE { data, algorithm, sig }\n+        out.write(DerValue.tag_Sequence, tmp);\n+        byte[] signedCert = out.toByteArray();\n@@ -496,4 +493,1 @@\n-            return new X509CertImpl(info, algId, signature, signedCert);\n-        } catch (IOException e) {\n-            throw new CertificateEncodingException(e.toString());\n-        }\n+        return new X509CertImpl(info, algId, signature, signedCert);\n@@ -1256,7 +1250,1 @@\n-                try {\n-                    name.encode(derOut);\n-                } catch (IOException ioe) {\n-                    \/\/ should not occur since name has already been decoded\n-                    \/\/ from cert (this would indicate a bug in our code)\n-                    throw new RuntimeException(\"name cannot be encoded\", ioe);\n-                }\n+                name.encode(derOut);\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertImpl.java","additions":22,"deletions":34,"binary":false,"changes":56,"status":"modified"},{"patch":"@@ -151,1 +151,1 @@\n-            throws CertificateException, IOException {\n+            throws CertificateException {\n@@ -156,1 +156,1 @@\n-            out.write(rawCertInfo.clone());\n+            out.writeBytes(rawCertInfo.clone());\n@@ -173,1 +173,1 @@\n-        } catch (IOException | CertificateException e) {\n+        } catch (CertificateException e) {\n@@ -467,2 +467,1 @@\n-    private void emit(DerOutputStream out)\n-    throws CertificateException, IOException {\n+    private void emit(DerOutputStream out) throws CertificateException {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509CertInfo.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -58,1 +58,1 @@\n-public class X509Key implements PublicKey {\n+public class X509Key implements PublicKey, DerEncoder {\n@@ -103,2 +103,1 @@\n-    private X509Key(AlgorithmId algid, BitArray key)\n-    throws InvalidKeyException {\n+    private X509Key(AlgorithmId algid, BitArray key) {\n@@ -193,1 +192,0 @@\n-     * @exception IOException on parsing errors.\n@@ -196,1 +194,1 @@\n-    protected void parseKeyBits() throws IOException, InvalidKeyException {\n+    protected void parseKeyBits() throws InvalidKeyException {\n@@ -290,2 +288,0 @@\n-     *\n-     * @exception IOException on encoding errors.\n@@ -293,2 +289,2 @@\n-    public final void encode(DerOutputStream out) throws IOException\n-    {\n+    @Override\n+    public final void encode(DerOutputStream out) {\n@@ -302,6 +298,1 @@\n-        try {\n-            return getEncodedInternal().clone();\n-        } catch (InvalidKeyException e) {\n-            \/\/ XXX\n-        }\n-        return null;\n+        return getEncodedInternal().clone();\n@@ -310,1 +301,1 @@\n-    public byte[] getEncodedInternal() throws InvalidKeyException {\n+    public byte[] getEncodedInternal() {\n@@ -313,9 +304,3 @@\n-            try {\n-                DerOutputStream out = new DerOutputStream();\n-                encode(out);\n-                encoded = out.toByteArray();\n-            } catch (IOException e) {\n-                throw new InvalidKeyException(\"IOException : \" +\n-                                               e.getMessage());\n-            }\n-            encodedKey = encoded;\n+            DerOutputStream out = new DerOutputStream();\n+            encode(out);\n+            encodedKey = encoded = out.toByteArray();\n@@ -338,1 +323,1 @@\n-    public byte[] encode() throws InvalidKeyException {\n+    public byte[] encode() {\n@@ -431,11 +416,6 @@\n-        try {\n-            byte[] thisEncoded = this.getEncodedInternal();\n-            byte[] otherEncoded;\n-            if (obj instanceof X509Key) {\n-                otherEncoded = ((X509Key)obj).getEncodedInternal();\n-            } else {\n-                otherEncoded = ((Key)obj).getEncoded();\n-            }\n-            return Arrays.equals(thisEncoded, otherEncoded);\n-        } catch (InvalidKeyException e) {\n-            return false;\n+        byte[] thisEncoded = this.getEncodedInternal();\n+        byte[] otherEncoded;\n+        if (obj instanceof X509Key) {\n+            otherEncoded = ((X509Key) obj).getEncodedInternal();\n+        } else {\n+            otherEncoded = ((Key) obj).getEncoded();\n@@ -443,0 +423,1 @@\n+        return Arrays.equals(thisEncoded, otherEncoded);\n@@ -450,10 +431,4 @@\n-        try {\n-            byte[] b1 = getEncodedInternal();\n-            int r = b1.length;\n-            for (int i = 0; i < b1.length; i++) {\n-                r += (b1[i] & 0xff) * 37;\n-            }\n-            return r;\n-        } catch (InvalidKeyException e) {\n-            \/\/ should not happen\n-            return 0;\n+        byte[] b1 = getEncodedInternal();\n+        int r = b1.length;\n+        for (int i = 0; i < b1.length; i++) {\n+            r += (b1[i] & 0xff) * 37;\n@@ -461,0 +436,1 @@\n+        return r;\n@@ -466,2 +442,1 @@\n-    static void encode(DerOutputStream out, AlgorithmId algid, BitArray key)\n-        throws IOException {\n+    static void encode(DerOutputStream out, AlgorithmId algid, BitArray key) {\n","filename":"src\/java.base\/share\/classes\/sun\/security\/x509\/X509Key.java","additions":24,"deletions":49,"binary":false,"changes":73,"status":"modified"},{"patch":"@@ -177,0 +177,3 @@\n+        \/\/ Since JDK-8297065, this method no longer throws a GSSException.\n+        \/\/ The throws clause in the method definition might be removed in\n+        \/\/ a future Java GSS-API update.\n@@ -179,5 +182,1 @@\n-            try {\n-                dout.putOID(oid);\n-            } catch (IOException e) {\n-                throw new GSSException(GSSException.FAILURE, e.getMessage());\n-            }\n+            dout.putOID(oid);\n","filename":"src\/java.security.jgss\/share\/classes\/org\/ietf\/jgss\/Oid.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -158,6 +158,3 @@\n-        try {\n-            DerOutputStream temp = new DerOutputStream();\n-            temp.putOID(mechOid);\n-            mechOidBytesSize = temp.toByteArray().length;\n-        } catch (IOException ignored) {\n-        }\n+        DerOutputStream temp = new DerOutputStream();\n+        temp.putOID(mechOid);\n+        mechOidBytesSize = temp.toByteArray().length;\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSHeader.java","additions":3,"deletions":6,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -411,7 +411,1 @@\n-        try {\n-            dout.putOID(oid);\n-        } catch (IOException e) {\n-            throw new GSSExceptionImpl(GSSException.FAILURE,\n-                                   \"Could not ASN.1 Encode \"\n-                                   + oid.toString());\n-        }\n+        dout.putOID(oid);\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/GSSNameImpl.java","additions":1,"deletions":7,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -91,10 +91,9 @@\n-    final byte[] encode() throws GSSException {\n-        try {\n-            \/\/ create negInitToken\n-            DerOutputStream initToken = new DerOutputStream();\n-\n-            \/\/ DER-encoded mechTypes with CONTEXT 00\n-            if (mechTypes != null) {\n-                initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                                true, (byte) 0x00), mechTypes);\n-            }\n+    final byte[] encode() {\n+        \/\/ create negInitToken\n+        DerOutputStream initToken = new DerOutputStream();\n+\n+        \/\/ DER-encoded mechTypes with CONTEXT 00\n+        if (mechTypes != null) {\n+            initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                    true, (byte) 0x00), mechTypes);\n+        }\n@@ -102,7 +101,7 @@\n-            \/\/ write context flags with CONTEXT 01\n-            if (reqFlags != null) {\n-                DerOutputStream flags = new DerOutputStream();\n-                flags.putUnalignedBitString(reqFlags);\n-                initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                                true, (byte) 0x01), flags);\n-            }\n+        \/\/ write context flags with CONTEXT 01\n+        if (reqFlags != null) {\n+            DerOutputStream flags = new DerOutputStream();\n+            flags.putUnalignedBitString(reqFlags);\n+            initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                    true, (byte) 0x01), flags);\n+        }\n@@ -110,7 +109,7 @@\n-            \/\/ mechToken with CONTEXT 02\n-            if (mechToken != null) {\n-                DerOutputStream dataValue = new DerOutputStream();\n-                dataValue.putOctetString(mechToken);\n-                initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                                true, (byte) 0x02), dataValue);\n-            }\n+        \/\/ mechToken with CONTEXT 02\n+        if (mechToken != null) {\n+            DerOutputStream dataValue = new DerOutputStream();\n+            dataValue.putOctetString(mechToken);\n+            initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                    true, (byte) 0x02), dataValue);\n+        }\n@@ -118,10 +117,5 @@\n-            \/\/ mechListMIC with CONTEXT 03\n-            if (mechListMIC != null) {\n-                if (DEBUG) {\n-                    System.out.println(\"SpNegoToken NegTokenInit: \" +\n-                                        \"sending MechListMIC\");\n-                }\n-                DerOutputStream mic = new DerOutputStream();\n-                mic.putOctetString(mechListMIC);\n-                initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                                true, (byte) 0x03), mic);\n+        \/\/ mechListMIC with CONTEXT 03\n+        if (mechListMIC != null) {\n+            if (DEBUG) {\n+                System.out.println(\"SpNegoToken NegTokenInit: \" +\n+                        \"sending MechListMIC\");\n@@ -129,0 +123,5 @@\n+            DerOutputStream mic = new DerOutputStream();\n+            mic.putOctetString(mechListMIC);\n+            initToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                    true, (byte) 0x03), mic);\n+        }\n@@ -130,5 +129,3 @@\n-            \/\/ insert in a SEQUENCE\n-            DerOutputStream out = new DerOutputStream();\n-            out.write(DerValue.tag_Sequence, initToken);\n-\n-            return out.toByteArray();\n+        \/\/ insert in a SEQUENCE\n+        DerOutputStream out = new DerOutputStream();\n+        out.write(DerValue.tag_Sequence, initToken);\n@@ -136,4 +133,1 @@\n-        } catch (IOException e) {\n-            throw new GSSException(GSSException.DEFECTIVE_TOKEN, -1,\n-                \"Invalid SPNEGO NegTokenInit token : \" + e.getMessage());\n-        }\n+        return out.toByteArray();\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/spnego\/NegTokenInit.java","additions":37,"deletions":43,"binary":false,"changes":80,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2005, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2005, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -78,7 +78,14 @@\n-        try {\n-            \/\/ create negTargToken\n-            DerOutputStream targToken = new DerOutputStream();\n-\n-            \/\/ write the negotiated result with CONTEXT 00\n-            DerOutputStream result = new DerOutputStream();\n-            result.putEnumerated(negResult);\n+        \/\/ create negTargToken\n+        DerOutputStream targToken = new DerOutputStream();\n+\n+        \/\/ write the negotiated result with CONTEXT 00\n+        DerOutputStream result = new DerOutputStream();\n+        result.putEnumerated(negResult);\n+        targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                true, (byte) 0x00), result);\n+\n+        \/\/ supportedMech with CONTEXT 01\n+        if (supportedMech != null) {\n+            DerOutputStream mech = new DerOutputStream();\n+            byte[] mechType = supportedMech.getDER();\n+            mech.writeBytes(mechType);\n@@ -86,10 +93,2 @@\n-                                true, (byte) 0x00), result);\n-\n-            \/\/ supportedMech with CONTEXT 01\n-            if (supportedMech != null) {\n-                DerOutputStream mech = new DerOutputStream();\n-                byte[] mechType = supportedMech.getDER();\n-                mech.write(mechType);\n-                targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                                true, (byte) 0x01), mech);\n-            }\n+                    true, (byte) 0x01), mech);\n+        }\n@@ -97,7 +96,7 @@\n-            \/\/ response Token with CONTEXT 02\n-            if (responseToken != null) {\n-                DerOutputStream rspToken = new DerOutputStream();\n-                rspToken.putOctetString(responseToken);\n-                targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                        true, (byte) 0x02), rspToken);\n-            }\n+        \/\/ response Token with CONTEXT 02\n+        if (responseToken != null) {\n+            DerOutputStream rspToken = new DerOutputStream();\n+            rspToken.putOctetString(responseToken);\n+            targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                    true, (byte) 0x02), rspToken);\n+        }\n@@ -105,10 +104,5 @@\n-            \/\/ mechListMIC with CONTEXT 03\n-            if (mechListMIC != null) {\n-                if (DEBUG) {\n-                    System.out.println(\"SpNegoToken NegTokenTarg: \" +\n-                                                \"sending MechListMIC\");\n-                }\n-                DerOutputStream mic = new DerOutputStream();\n-                mic.putOctetString(mechListMIC);\n-                targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n-                                        true, (byte) 0x03), mic);\n+        \/\/ mechListMIC with CONTEXT 03\n+        if (mechListMIC != null) {\n+            if (DEBUG) {\n+                System.out.println(\"SpNegoToken NegTokenTarg: \" +\n+                        \"sending MechListMIC\");\n@@ -116,0 +110,5 @@\n+            DerOutputStream mic = new DerOutputStream();\n+            mic.putOctetString(mechListMIC);\n+            targToken.write(DerValue.createTag(DerValue.TAG_CONTEXT,\n+                    true, (byte) 0x03), mic);\n+        }\n@@ -117,5 +116,3 @@\n-            \/\/ insert in a SEQUENCE\n-            DerOutputStream out = new DerOutputStream();\n-            out.write(DerValue.tag_Sequence, targToken);\n-\n-            return out.toByteArray();\n+        \/\/ insert in a SEQUENCE\n+        DerOutputStream out = new DerOutputStream();\n+        out.write(DerValue.tag_Sequence, targToken);\n@@ -123,4 +120,1 @@\n-        } catch (IOException e) {\n-            throw new GSSException(GSSException.DEFECTIVE_TOKEN, -1,\n-                \"Invalid SPNEGO NegTokenTarg token : \" + e.getMessage());\n-        }\n+        return out.toByteArray();\n","filename":"src\/java.security.jgss\/share\/classes\/sun\/security\/jgss\/spnego\/NegTokenTarg.java","additions":38,"deletions":44,"binary":false,"changes":82,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2006, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2006, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -233,2 +233,1 @@\n-            try {\n-                encodedPoint =\n+            encodedPoint =\n@@ -236,5 +235,1 @@\n-                        .toByteArray();\n-            } catch (IOException e) {\n-                throw new\n-                    IllegalArgumentException(\"Could not DER encode point\", e);\n-            }\n+                            .toByteArray();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11ECKeyFactory.java","additions":3,"deletions":8,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -804,7 +804,3 @@\n-                try {\n-                    Key key = new sun.security.provider.DSAPublicKey\n-                            (y, params.getP(), params.getQ(), params.getG());\n-                    encoded = key.getEncoded();\n-                } catch (InvalidKeyException e) {\n-                    throw new ProviderException(e);\n-                }\n+                Key key = new sun.security.provider.DSAPublicKey\n+                        (y, params.getP(), params.getQ(), params.getG());\n+                encoded = key.getEncoded();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Key.java","additions":3,"deletions":7,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -768,5 +768,1 @@\n-        try {\n-            return RSAUtil.encodeSignature(digestOID, digest);\n-        } catch (IOException e) {\n-            throw new SignatureException(\"Invalid encoding\", e);\n-        }\n+        return RSAUtil.encodeSignature(digestOID, digest);\n@@ -805,10 +801,6 @@\n-        try {\n-            DerOutputStream outseq = new DerOutputStream(100);\n-            outseq.putInteger(r);\n-            outseq.putInteger(s);\n-            DerValue result = new DerValue(DerValue.tag_Sequence,\n-                                           outseq.toByteArray());\n-            return result.toByteArray();\n-        } catch (IOException e) {\n-            throw new RuntimeException(\"Internal error\", e);\n-        }\n+        DerOutputStream outseq = new DerOutputStream(100);\n+        outseq.putInteger(r);\n+        outseq.putInteger(s);\n+        DerValue result = new DerValue(DerValue.tag_Sequence,\n+                outseq.toByteArray());\n+        return result.toByteArray();\n","filename":"src\/jdk.crypto.cryptoki\/share\/classes\/sun\/security\/pkcs11\/P11Signature.java","additions":7,"deletions":15,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -101,15 +101,10 @@\n-        (AlgorithmId.EC_oid, ECParameters.getAlgorithmParameters(params));\n-        try {\n-            DerOutputStream out = new DerOutputStream();\n-            out.putInteger(1); \/\/ version 1\n-            byte[] privBytes = s.clone();\n-            ArrayUtil.reverse(privBytes);\n-            out.putOctetString(privBytes);\n-            Arrays.fill(privBytes, (byte)0);\n-            DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n-            key = val.toByteArray();\n-            val.clear();\n-        } catch (IOException exc) {\n-            \/\/ should never occur\n-            throw new InvalidKeyException(exc);\n-        }\n+                (AlgorithmId.EC_oid, ECParameters.getAlgorithmParameters(params));\n+        DerOutputStream out = new DerOutputStream();\n+        out.putInteger(1); \/\/ version 1\n+        byte[] privBytes = s.clone();\n+        ArrayUtil.reverse(privBytes);\n+        out.putOctetString(privBytes);\n+        Arrays.fill(privBytes, (byte) 0);\n+        DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n+        key = val.toByteArray();\n+        val.clear();\n@@ -121,21 +116,17 @@\n-        try {\n-            byte[] sArr = s.toByteArray();\n-            \/\/ convert to fixed-length array\n-            int numOctets = (params.getOrder().bitLength() + 7) \/ 8;\n-            byte[] sOctets = new byte[numOctets];\n-            int inPos = Math.max(sArr.length - sOctets.length, 0);\n-            int outPos = Math.max(sOctets.length - sArr.length, 0);\n-            int length = Math.min(sArr.length, sOctets.length);\n-            System.arraycopy(sArr, inPos, sOctets, outPos, length);\n-            Arrays.fill(sArr, (byte)0);\n-\n-            DerOutputStream out = new DerOutputStream();\n-            out.putInteger(1); \/\/ version 1\n-            out.putOctetString(sOctets);\n-            Arrays.fill(sOctets, (byte)0);\n-            DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n-            key = val.toByteArray();\n-            val.clear();\n-        } catch (IOException exc) {\n-            throw new AssertionError(\"Should not happen\", exc);\n-        }\n+        byte[] sArr = s.toByteArray();\n+        \/\/ convert to fixed-length array\n+        int numOctets = (params.getOrder().bitLength() + 7) \/ 8;\n+        byte[] sOctets = new byte[numOctets];\n+        int inPos = Math.max(sArr.length - sOctets.length, 0);\n+        int outPos = Math.max(sOctets.length - sArr.length, 0);\n+        int length = Math.min(sArr.length, sOctets.length);\n+        System.arraycopy(sArr, inPos, sOctets, outPos, length);\n+        Arrays.fill(sArr, (byte) 0);\n+\n+        DerOutputStream out = new DerOutputStream();\n+        out.putInteger(1); \/\/ version 1\n+        out.putOctetString(sOctets);\n+        Arrays.fill(sOctets, (byte) 0);\n+        DerValue val = DerValue.wrap(DerValue.tag_Sequence, out);\n+        key = val.toByteArray();\n+        val.clear();\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ECPrivateKeyImpl.java","additions":27,"deletions":36,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -57,2 +57,0 @@\n-        } catch (IOException ex) {\n-            throw new AssertionError(\"Should not happen\", ex);\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/XDHPrivateKeyImpl.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.security.ProviderException;\n@@ -58,2 +57,0 @@\n-        } catch (IOException ex) {\n-            throw new AssertionError(\"Should not happen\", ex);\n","filename":"src\/jdk.crypto.ec\/share\/classes\/sun\/security\/ec\/ed\/EdDSAPrivateKeyImpl.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -26,1 +26,0 @@\n-import java.io.IOException;\n@@ -32,2 +31,2 @@\n-    public void encode(DerOutputStream out) throws IOException {\n-        throw new IOException();\n+    public void encode(DerOutputStream out) {\n+        throw new RuntimeException();\n","filename":"test\/langtools\/tools\/jdeps\/jdkinternals\/src\/q\/NoRepl.java","additions":2,"deletions":3,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2020, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -231,1 +231,1 @@\n-            ByteArrayOutputStream signedDataOut = new ByteArrayOutputStream();\n+            DerOutputStream signedDataOut = new DerOutputStream();\n","filename":"test\/lib\/jdk\/test\/lib\/security\/timestamp\/TsaSigner.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}