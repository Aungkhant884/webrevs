{"files":[{"patch":"@@ -3949,1 +3949,1 @@\n-        Symbol operator = tree.operator = operators.resolveUnary(tree, tree.getTag(), argtype);\n+        OperatorSymbol operator = tree.operator = operators.resolveUnary(tree, tree.getTag(), argtype);\n@@ -3956,1 +3956,1 @@\n-            int opc = ((OperatorSymbol)operator).opcode;\n+            int opc = operator.opcode;\n@@ -4003,1 +4003,1 @@\n-        Symbol operator = tree.operator = operators.resolveBinary(tree, tree.getTag(), left, right);\n+        OperatorSymbol operator = tree.operator = operators.resolveBinary(tree, tree.getTag(), left, right);\n@@ -4009,1 +4009,1 @@\n-            int opc = ((OperatorSymbol)operator).opcode;\n+            int opc = operator.opcode;\n@@ -5486,1 +5486,1 @@\n-                Symbol sym = null;\n+                VarSymbol sym = null;\n@@ -5490,1 +5490,1 @@\n-                        ((VarSymbol) sym).getConstValue() == null)\n+                        sym.getConstValue() == null)\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Attr.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -427,2 +427,2 @@\n-                JCTree captured_local = make.Ident(fv).setType(fv.type);\n-                syntheticInits.append((JCExpression) captured_local);\n+                JCExpression captured_local = make.Ident(fv).setType(fv.type);\n+                syntheticInits.append(captured_local);\n@@ -433,2 +433,2 @@\n-            JCTree captured_local = make.QualThis(fv.type);\n-            syntheticInits.append((JCExpression) captured_local);\n+            JCExpression captured_local = make.QualThis(fv.type);\n+            syntheticInits.append(captured_local);\n@@ -1187,1 +1187,1 @@\n-            Symbol bsm = rs.resolveInternalMethod(pos, attrEnv, site,\n+            MethodSymbol bsm = rs.resolveInternalMethod(pos, attrEnv, site,\n@@ -1193,1 +1193,1 @@\n-                                            ((MethodSymbol)bsm).asHandle(),\n+                                            bsm.asHandle(),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/LambdaToMethod.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2318,1 +2318,1 @@\n-        Symbol valuesSym = lookupMethod(tree.pos(), names.values,\n+        MethodSymbol valuesSym = lookupMethod(tree.pos(), names.values,\n@@ -2369,1 +2369,1 @@\n-             make.MethodDef((MethodSymbol)valuesSym, make.Block(0, valuesBody));\n+             make.MethodDef(valuesSym, make.Block(0, valuesBody));\n@@ -2584,1 +2584,1 @@\n-        Symbol bsm = rs.resolveInternalMethod(tree.pos(), attrEnv, site,\n+        MethodSymbol bsm = rs.resolveInternalMethod(tree.pos(), attrEnv, site,\n@@ -2596,1 +2596,1 @@\n-                ((MethodSymbol)bsm).asHandle(),\n+                bsm.asHandle(),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/Lower.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-            Symbol bsm = rs.resolveInternalMethod(tree.pos(), env, syms.switchBootstrapsType,\n+            MethodSymbol bsm = rs.resolveInternalMethod(tree.pos(), env, syms.switchBootstrapsType,\n@@ -385,1 +385,1 @@\n-                    ((MethodSymbol)bsm).asHandle(),\n+                    bsm.asHandle(),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/comp\/TransPatterns.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -374,1 +374,1 @@\n-                Symbol bsm = rs.resolveInternalMethod(pos,\n+                MethodSymbol bsm = rs.resolveInternalMethod(pos,\n@@ -383,1 +383,1 @@\n-                        ((MethodSymbol)bsm).asHandle(),\n+                        bsm.asHandle(),\n@@ -490,1 +490,1 @@\n-                Symbol bsm = rs.resolveInternalMethod(pos,\n+                MethodSymbol bsm = rs.resolveInternalMethod(pos,\n@@ -499,1 +499,1 @@\n-                        ((MethodSymbol)bsm).asHandle(),\n+                        bsm.asHandle(),\n","filename":"src\/jdk.compiler\/share\/classes\/com\/sun\/tools\/javac\/jvm\/StringConcat.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"}]}