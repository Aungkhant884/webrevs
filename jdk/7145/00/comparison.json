{"files":[{"patch":"@@ -692,4 +692,0 @@\n-int os::close(int fd) {\n-  return ::close(fd);\n-}\n-\n@@ -723,4 +719,0 @@\n-int os::socket(int domain, int type, int protocol) {\n-  return ::socket(domain, type, protocol);\n-}\n-\n","filename":"src\/hotspot\/os\/posix\/os_posix.cpp","additions":0,"deletions":8,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -127,1 +127,1 @@\n-    result = os::close(fd);\n+    result = ::close(fd);\n@@ -333,1 +333,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -341,1 +341,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -348,1 +348,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -355,1 +355,1 @@\n-  os::close(fd);\n+  ::close(fd);\n@@ -908,1 +908,1 @@\n-    os::close(fd);\n+    ::close(fd);\n","filename":"src\/hotspot\/os\/posix\/perfMemory_posix.cpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -1556,1 +1556,1 @@\n-     (os::read(fd, (void*)&signature_offset, sizeof(signature_offset))))\n+     (::read(fd, (void*)&signature_offset, sizeof(signature_offset))))\n@@ -1565,1 +1565,1 @@\n-     (sizeof(lib_arch) != (os::read(fd, (void*)&lib_arch, sizeof(lib_arch))))\n+     (sizeof(lib_arch) != (::read(fd, (void*)&lib_arch, sizeof(lib_arch))))\n@@ -4765,4 +4765,0 @@\n-int os::close(int fd) {\n-  return ::close(fd);\n-}\n-\n@@ -5728,4 +5724,0 @@\n-int os::socket(int domain, int type, int protocol) {\n-  return ::socket(domain, type, protocol);\n-}\n-\n","filename":"src\/hotspot\/os\/windows\/os_windows.cpp","additions":2,"deletions":10,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -177,2 +177,2 @@\n-    ssize_t read_sz = os::read(fd, buf, buflen);\n-    os::close(fd);\n+    ssize_t read_sz = ::read(fd, buf, buflen);\n+    ::close(fd);\n","filename":"src\/hotspot\/os_cpu\/linux_aarch64\/vm_version_linux_aarch64.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -193,1 +193,1 @@\n-    os::close(_fd);\n+    ::close(_fd);\n@@ -1073,1 +1073,1 @@\n-      os::close(_fd);\n+      ::close(_fd);\n@@ -1095,1 +1095,1 @@\n-    size_t n = os::read(fd, (void*)&gen_header, (unsigned int)size);\n+    size_t n = ::read(fd, (void*)&gen_header, (unsigned int)size);\n@@ -1128,1 +1128,1 @@\n-    n = os::read(fd, (void*)_header, (unsigned int)size);\n+    n = ::read(fd, (void*)_header, (unsigned int)size);\n@@ -1282,1 +1282,1 @@\n-  size_t n = os::read(fd, (void*)_header, (unsigned int)size);\n+  size_t n = ::read(fd, (void*)_header, (unsigned int)size);\n@@ -1653,1 +1653,1 @@\n-    if (os::close(_fd) < 0) {\n+    if (::close(_fd) < 0) {\n@@ -1781,1 +1781,1 @@\n-    \/\/ can't mmap into a ReservedSpace, so we just os::read() the data. We're going to patch all the\n+    \/\/ can't mmap into a ReservedSpace, so we just ::read() the data. We're going to patch all the\n@@ -1887,1 +1887,1 @@\n-  size_t n = os::read(_fd, buffer, (unsigned int)count);\n+  size_t n = ::read(_fd, buffer, (unsigned int)count);\n","filename":"src\/hotspot\/share\/cds\/filemap.cpp","additions":8,"deletions":8,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -256,1 +256,1 @@\n-      size_t num_read = os::read(file_handle, (char*) buffer, st.st_size);\n+      size_t num_read = ::read(file_handle, (char*) buffer, st.st_size);\n@@ -258,1 +258,1 @@\n-      os::close(file_handle);\n+      ::close(file_handle);\n","filename":"src\/hotspot\/share\/classfile\/classLoader.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -255,1 +255,1 @@\n-    os::close(_fd);\n+    ::close(_fd);\n","filename":"src\/hotspot\/share\/classfile\/compactHashtable.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -228,1 +228,1 @@\n-        bytes_read = os::read(partial_fd, buf, (int)nr);\n+        bytes_read = ::read(partial_fd, buf, (int)nr);\n@@ -238,1 +238,1 @@\n-      while ((bytes_read = os::read(partial_fd, buf, buflen-1)) > 0) {\n+      while ((bytes_read = ::read(partial_fd, buf, buflen-1)) > 0) {\n@@ -288,1 +288,1 @@\n-      os::close(partial_fd);\n+      ::close(partial_fd);\n","filename":"src\/hotspot\/share\/compiler\/compileLog.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -97,1 +97,1 @@\n-      ssize_t num_read = os::read(file_handle, (char*) buffer, st.st_size);\n+      ssize_t num_read = ::read(file_handle, (char*) buffer, st.st_size);\n@@ -101,1 +101,1 @@\n-        os::close(file_handle);\n+        ::close(file_handle);\n","filename":"src\/hotspot\/share\/compiler\/directivesParser.cpp","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-                              \/\/ If false, this region was initialized using os::read().\n+                              \/\/ If false, this region was initialized using ::read().\n","filename":"src\/hotspot\/share\/include\/cds.h","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2012, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2012, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -108,1 +108,1 @@\n-    os::close(emergency_fd);\n+    ::close(emergency_fd);\n@@ -301,1 +301,1 @@\n-  os::close(fd);\n+  ::close(fd);\n@@ -392,1 +392,1 @@\n-      os::close(current_fd);\n+      ::close(current_fd);\n","filename":"src\/hotspot\/share\/jfr\/recorder\/repository\/jfrEmergencyDump.cpp","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -138,1 +138,1 @@\n-  os::close(_fd);\n+  ::close(_fd);\n","filename":"src\/hotspot\/share\/jfr\/writers\/jfrStreamWriterHost.inline.hpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -631,1 +631,1 @@\n-    os::close(_fd_for_heap);\n+    ::close(_fd_for_heap);\n","filename":"src\/hotspot\/share\/memory\/virtualspace.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -3326,1 +3326,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -3332,1 +3332,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -3343,1 +3343,1 @@\n-    os::close(fd);\n+    ::close(fd);\n@@ -3350,2 +3350,2 @@\n-  ssize_t bytes_read = os::read(fd, (void *)buf, (unsigned)bytes_alloc);\n-  os::close(fd);\n+  ssize_t bytes_read = ::read(fd, (void *)buf, (unsigned)bytes_alloc);\n+  ::close(fd);\n","filename":"src\/hotspot\/share\/runtime\/arguments.cpp","additions":5,"deletions":5,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -1297,4 +1297,0 @@\n-ssize_t os::read(int fd, void *buf, unsigned int nBytes) {\n-  return ::read(fd, buf, nBytes);\n-}\n-\n","filename":"src\/hotspot\/share\/runtime\/os.cpp","additions":1,"deletions":5,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -546,1 +546,0 @@\n-  static int close(int fd);\n@@ -566,1 +565,0 @@\n-  static ssize_t read(int fd, void *buf, unsigned int nBytes);\n@@ -788,1 +786,0 @@\n-  static int socket(int domain, int type, int protocol);\n","filename":"src\/hotspot\/share\/runtime\/os.hpp","additions":0,"deletions":3,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -49,1 +49,1 @@\n-    os::close(_fd);\n+    ::close(_fd);\n","filename":"src\/hotspot\/share\/services\/heapDumperCompression.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1082,1 +1082,1 @@\n-  int result = os::socket(AF_INET, SOCK_STREAM, 0);\n+  int result = ::socket(AF_INET, SOCK_STREAM, 0);\n","filename":"src\/hotspot\/share\/utilities\/ostream.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -1657,1 +1657,1 @@\n-      os::close(fd_log);\n+      ::close(fd_log);\n","filename":"src\/hotspot\/share\/utilities\/vmError.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}