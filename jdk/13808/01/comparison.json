{"files":[{"patch":"@@ -395,1 +395,1 @@\n-      java --enable-preview <jvm-args> jdk.test.lib.process.ProcessTools <wrapper-name> <test-class> <test-args>\n+      java <jvm-args> -Dmain.wrapper=<wrapper-name> jdk.test.lib.process.ProcessTools <wrapper-name> <test-class> <test-args>\n@@ -397,1 +397,0 @@\n-    private static List<String> addMainWrapperArgs(String mainWrapper, List<String> command) {\n@@ -399,4 +398,1 @@\n-        boolean useModules = command.contains(\"-m\");\n-        if (useModules) {\n-            return command;\n-        }\n+        private static List<String> addMainWrapperArgs(String mainWrapper, List<String> command) {\n@@ -404,3 +400,3 @@\n-        ArrayList<String> args = new ArrayList<>();\n-        final String[] doubleWordArgs = {\"-cp\", \"-classpath\", \"--add-opens\", \"--class-path\", \"--upgrade-module-path\",\n-                \"--add-modules\", \"-d\", \"--add-exports\", \"--patch-module\", \"--module-path\"};\n+        final List<String> unsupportedArgs = List.of(\n+             \"-jar\", \"-cp\", \"-classpath\", \"--class-path\", \"--describe-module\", \"-d\",\n+             \"--dry-run\", \"--list-modules\",\"--validate-modules\", \"-version\");\n@@ -408,3 +404,6 @@\n-        if (mainWrapper.equalsIgnoreCase(\"virtual\")) {\n-            args.add(\"--enable-preview\");\n-        }\n+        final List<String> doubleWordArgs = List.of(\n+             \"-jar\", \"-cp\", \"-classpath\", \"--class-path\", \"--add-opens\", \"--upgrade-module-path\",\n+             \"--describe-module\", \"--add-modules\", \"-d\", \"--add-exports\", \"--limit-modules\",\n+             \"--add-reads\", \"--patch-module\", \"--module-path\", \"--module\", \"-m\", \"-p\");\n+\n+        ArrayList<String> args = new ArrayList<>();\n@@ -425,6 +424,7 @@\n-            for (String dWArg : doubleWordArgs) {\n-                if (cmd.equals(dWArg)) {\n-                    expectSecondArg = true;\n-                    args.add(cmd);\n-                    break;\n-                }\n+            if (unsupportedArgs.contains(cmd)) {\n+                return command;\n+            }\n+            if (doubleWordArgs.contains(cmd)) {\n+                expectSecondArg = true;\n+                args.add(cmd);\n+                continue;\n@@ -435,1 +435,2 @@\n-            if (cmd.startsWith(\"-\")) {\n+            \/\/ command-line or name command-line file\n+            if (cmd.startsWith(\"-\") || cmd.startsWith(\"@\")) {\n@@ -439,0 +440,8 @@\n+\n+            \/\/ if command is like 'java source.java' then return\n+            if (cmd.endsWith(\".java\")) {\n+                return command;\n+            }\n+            \/\/ Some tests might check property to understand\n+            \/\/ if virtual threads are tested\n+            args.add(\"-Dmain.wrapper=\" + mainWrapper);\n","filename":"test\/lib\/jdk\/test\/lib\/process\/ProcessTools.java","additions":28,"deletions":19,"binary":false,"changes":47,"status":"modified"}]}