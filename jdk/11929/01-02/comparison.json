{"files":[{"patch":"@@ -68,3 +68,0 @@\n-    static final ProtocolVersion MAX_TLS_SUPPORTED = TLS13;\n-    static final ProtocolVersion MIN_TLS_SUPPORTED = SSL30;\n-\n@@ -413,1 +410,1 @@\n-}\n\\ No newline at end of file\n+}\n","filename":"src\/java.base\/share\/classes\/sun\/security\/ssl\/ProtocolVersion.java","additions":1,"deletions":4,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -27,0 +27,1 @@\n+ * @library \/javax\/net\/ssl\/templates\n@@ -39,1 +40,1 @@\n-public class HandshakeWithInvalidRecordVersion {\n+public class HandshakeWithInvalidRecordVersion implements SSLContextTemplate {\n@@ -52,22 +53,1 @@\n-\n-    private static SSLContext getSSLContext() throws Exception {\n-        KeyStore ks = KeyStore.getInstance(KeyStore.getDefaultType());\n-        KeyStore ts = KeyStore.getInstance(KeyStore.getDefaultType());\n-        char[] passphrase = \"passphrase\".toCharArray();\n-\n-        ks.load(new FileInputStream(KEYSTORE_PATH), passphrase);\n-        ts.load(new FileInputStream(TRUSTSTORE_PATH), passphrase);\n-\n-        KeyManagerFactory kmf = KeyManagerFactory.getInstance(\"SunX509\");\n-        kmf.init(ks, passphrase);\n-\n-        TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");\n-        tmf.init(ts);\n-\n-        SSLContext sslCtx = SSLContext.getInstance(\"TLS\");\n-\n-        sslCtx.init(kmf.getKeyManagers(), tmf.getTrustManagers(), null);\n-\n-        return sslCtx;\n-    }\n-\n+    \n@@ -75,1 +55,2 @@\n-        executeTest(\"TLSv1.2\",\n+        var runner = new HandshakeWithInvalidRecordVersion();\n+        runner.executeTest(\"TLSv1.2\",\n@@ -78,1 +59,1 @@\n-        executeTest(\"TLSv1.2\",\n+        runner.executeTest(\"TLSv1.2\",\n@@ -81,1 +62,1 @@\n-        executeTest(\"TLSv1.3\",\n+        runner.executeTest(\"TLSv1.3\",\n@@ -84,1 +65,1 @@\n-        executeTest(\"TLSv1.3\",\n+        runner.executeTest(\"TLSv1.3\",\n@@ -89,1 +70,1 @@\n-    private static void executeTest(String expectedProtocol, String[] clientProtocols,\n+    private void executeTest(String expectedProtocol, String[] clientProtocols,\n@@ -96,3 +77,1 @@\n-        SSLContext context = getSSLContext();\n-\n-        SSLEngine cliEngine = context.createSSLEngine();\n+        SSLEngine cliEngine = createClientSSLContext().createSSLEngine();\n@@ -101,1 +80,1 @@\n-        SSLEngine srvEngine = context.createSSLEngine();\n+        SSLEngine srvEngine = createServerSSLContext().createSSLEngine();\n@@ -143,1 +122,1 @@\n-    private static boolean isHandshaking(SSLEngine e) {\n+    private boolean isHandshaking(SSLEngine e) {\n@@ -147,1 +126,1 @@\n-    private static void finishHandshake(SSLEngine client, SSLEngine server) throws Exception {\n+    private void finishHandshake(SSLEngine client, SSLEngine server) throws Exception {\n","filename":"test\/jdk\/javax\/net\/ssl\/SSLEngine\/HandshakeWithInvalidRecordVersion.java","additions":13,"deletions":34,"binary":false,"changes":47,"status":"modified"}]}