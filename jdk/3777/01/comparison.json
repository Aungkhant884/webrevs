{"files":[{"patch":"@@ -702,0 +702,3 @@\n+     * <tr><th scope=\"row\">{@systemProperty native.encoding}<\/th>\n+     *     <td>Character encoding name derived from the host environment and\/or\n+     *     the user's settings. Setting this system property has no effect.<\/td><\/tr>\n","filename":"src\/java.base\/share\/classes\/java\/lang\/System.java","additions":3,"deletions":0,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -51,0 +51,1 @@\n+    private static final String NATIVE_ENCODING;\n@@ -64,0 +65,1 @@\n+        NATIVE_ENCODING = getProperty(props, \"native.encoding\");\n@@ -184,0 +186,13 @@\n+\n+    \/**\n+     * Return the {@code native.encoding} system property.\n+     *\n+     * <strong>{@link SecurityManager#checkPropertyAccess} is NOT checked\n+     * in this method. The caller of this method should take care to ensure\n+     * that the returned property is not made accessible to untrusted code.<\/strong>\n+     *\n+     * @return the {@code native.encoding} system property\n+     *\/\n+    public static String nativeEncoding() {\n+        return NATIVE_ENCODING;\n+    }\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/StaticProperty.java","additions":16,"deletions":1,"binary":false,"changes":17,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -66,0 +66,4 @@\n+        var nativeEncoding = ((raw.propDefault(Raw._file_encoding_NDX) == null)\n+                ? raw.propDefault(Raw._sun_jnu_encoding_NDX)\n+                : raw.propDefault(Raw._file_encoding_NDX));\n+        put(props, \"native.encoding\", nativeEncoding);\n@@ -68,4 +72,1 @@\n-        putIfAbsent(props, \"file.encoding\",\n-                ((raw.propDefault(Raw._file_encoding_NDX) == null)\n-                        ? raw.propDefault(Raw._sun_jnu_encoding_NDX)\n-                        : raw.propDefault(Raw._file_encoding_NDX)));\n+        putIfAbsent(props, \"file.encoding\", nativeEncoding);\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/util\/SystemProps.java","additions":6,"deletions":5,"binary":false,"changes":11,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2018, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n- * @bug 4463345 4244670 8030781\n+ * @bug 4463345 4244670 8030781 8265989\n@@ -83,0 +83,1 @@\n+                {\"native.encoding\"},\n","filename":"test\/jdk\/java\/lang\/System\/PropertyTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"}]}