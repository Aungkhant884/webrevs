{"files":[{"patch":"@@ -24,1 +24,2 @@\n-\/* @test\n+\/*\n+   @test\n@@ -26,1 +27,1 @@\n-   @run main\/manual=yesno PageDialogTest\n+   @run main\/manual PageDialogTest\n@@ -29,3 +30,0 @@\n-import java.awt.*;\n-import java.awt.event.*;\n-import java.awt.print.*;\n@@ -33,1 +31,13 @@\n-import javax.swing.*;\n+import java.awt.BorderLayout;\n+import java.awt.Button;\n+import java.awt.Dialog;\n+import java.awt.FlowLayout;\n+import java.awt.Frame;\n+import java.awt.Panel;\n+import java.awt.TextArea;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+import java.awt.print.PageFormat;\n+import java.awt.print.PrinterJob;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n@@ -37,21 +47,28 @@\n-    public static void main(String[] args) {\n-        String[] instructions =\n-        {\n-            \"The test shows a Toolkit modal dialog. \",\n-            \"Click the 'Open' button. It opens a page dialog.\",\n-            \"The test fails if the page dialog blocks the toolkit\",\n-            \"modal dialog, otherwise it passes.\"\n-        };\n-\n-        Sysout.createDialog( );\n-        Sysout.printInstructions( instructions );\n-\n-        Dialog td = new Dialog((Frame) null, \"Toolkit modal dialog\",\n-                               Dialog.ModalityType.TOOLKIT_MODAL);\n-        td.setLayout(new FlowLayout());\n-        td.add(new Button(\"Dummy\"));\n-        Button tdb = new Button(\"Open\");\n-        tdb.addActionListener(new ActionListener() {\n-            public void actionPerformed(ActionEvent event) {\n-                PrinterJob.getPrinterJob().pageDialog(new PageFormat());\n-            }\n+    public static Frame frame;\n+    public static Dialog dialog;\n+    public static volatile boolean testResult;\n+    public static final CountDownLatch countDownLatch = new CountDownLatch(1);\n+\n+    public static void createUI() {\n+        frame = new Frame(\"Test 6302514\");\n+        String instructions =\n+                \"1. Click on the 'Show Dialog' button to show a 'Toolkit Modal Dialog' \\n\" +\n+                \"2. Click on the 'Open PageDialog' button to show 'Page Dialog'.\\n\" +\n+                \"3. Check if page dialog blocks the 'Toolkit modal dialog'.\\n\"+\n+                \"If yes, then test Pass else test fail.\\n\" +\n+                \"4. Close Page dialog and 'Toolkit modal dialog'\\n\" +\n+                \"5. Click appropriate button to mark the test case pass or fail.\\n\" ;\n+\n+        TextArea instructionsTextArea = new TextArea( instructions, 8,\n+                50, TextArea.SCROLLBARS_NONE );\n+        instructionsTextArea.setEditable(false);\n+        frame.add(BorderLayout.NORTH, instructionsTextArea);\n+\n+        Panel buttonPanel = new Panel(new FlowLayout());\n+        Button passButton = new Button(\"pass\");\n+        passButton.setActionCommand(\"pass\");\n+        passButton.addActionListener(e -> {\n+            testResult = true;\n+            countDownLatch.countDown();\n+            dialog.dispose();\n+            frame.dispose();\n@@ -59,16 +76,0 @@\n-        td.add(tdb);\n-        td.setSize(250, 150);\n-        td.setVisible(true);\n-    }\n-}\n-\n-class Sysout {\n-   private static TestDialog dialog;\n-\n-   public static void createDialogWithInstructions( String[] instructions )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      dialog.printInstructions( instructions );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n@@ -76,8 +77,7 @@\n-   public static void createDialog( )\n-    {\n-      dialog = new TestDialog( new Frame(), \"Instructions\" );\n-      String[] defInstr = { \"Instructions will appear here. \", \"\" } ;\n-      dialog.printInstructions( defInstr );\n-      dialog.show();\n-      println( \"Any messages for the tester will display here.\" );\n-    }\n+        Button failButton = new Button(\"fail\");\n+        failButton.addActionListener(e->{\n+            testResult = false;\n+            countDownLatch.countDown();\n+            dialog.dispose();\n+            frame.dispose();\n+        });\n@@ -85,0 +85,4 @@\n+        Button showDialog = new Button(\"Show Dialog\");\n+        showDialog.addActionListener(e->{\n+            createToolkitModalDialog();\n+        });\n@@ -86,3 +90,6 @@\n-   public static void printInstructions( String[] instructions )\n-    {\n-      dialog.printInstructions( instructions );\n+        buttonPanel.add(showDialog);\n+        buttonPanel.add(passButton);\n+        buttonPanel.add(failButton);\n+        frame.add(BorderLayout.SOUTH, buttonPanel);\n+        frame.pack();\n+        frame.setVisible(true);\n@@ -91,0 +98,11 @@\n+    public static void createToolkitModalDialog() {\n+        dialog = new Dialog((Frame) null, \"Toolkit modal dialog\",\n+                Dialog.ModalityType.TOOLKIT_MODAL);\n+        dialog.setLayout(new FlowLayout());\n+        dialog.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowClosing(WindowEvent e) {\n+                super.windowClosing(e);\n+                dialog.dispose();\n+            }\n+        });\n@@ -92,3 +110,8 @@\n-   public static void println( String messageIn )\n-    {\n-      dialog.displayMessage( messageIn );\n+        Button openPageDialogButton = new Button(\"Open PageDialog\");\n+        openPageDialogButton.addActionListener(e->{\n+            PrinterJob.getPrinterJob().pageDialog(new PageFormat());\n+        });\n+        dialog.add(openPageDialogButton);\n+        dialog.setSize(250, 150);\n+        dialog.setLocationRelativeTo(null);\n+        dialog.setVisible(true);\n@@ -97,78 +120,9 @@\n-}\/\/ Sysout  class\n-\n-\/**\n-  This is part of the standard test machinery.  It provides a place for the\n-   test instructions to be displayed, and a place for interactive messages\n-   to the user to be displayed.\n-  To have the test instructions displayed, see Sysout.\n-  To have a message to the user be displayed, see Sysout.\n-  Do not call anything in this dialog directly.\n-  *\/\n-class TestDialog extends Dialog {\n-\n-   TextArea instructionsText;\n-   TextArea messageText;\n-   int maxStringLength = 80;\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public TestDialog( Frame frame, String name )\n-    {\n-      super( frame, name );\n-      int scrollBoth = TextArea.SCROLLBARS_BOTH;\n-      instructionsText = new TextArea( \"\", 15, maxStringLength, scrollBoth );\n-      add( \"North\", instructionsText );\n-\n-      messageText = new TextArea( \"\", 5, maxStringLength, scrollBoth );\n-      add(\"Center\", messageText);\n-\n-      pack();\n-\n-      show();\n-    }\/\/ TestDialog()\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void printInstructions( String[] instructions )\n-    {\n-      \/\/Clear out any current instructions\n-      instructionsText.setText( \"\" );\n-\n-      \/\/Go down array of instruction strings\n-\n-      String printStr, remainingStr;\n-      for( int i=0; i < instructions.length; i++ )\n-       {\n-         \/\/chop up each into pieces maxSringLength long\n-         remainingStr = instructions[ i ];\n-         while( remainingStr.length() > 0 )\n-          {\n-            \/\/if longer than max then chop off first max chars to print\n-            if( remainingStr.length() >= maxStringLength )\n-             {\n-               \/\/Try to chop on a word boundary\n-               int posOfSpace = remainingStr.\n-                  lastIndexOf( ' ', maxStringLength - 1 );\n-\n-               if( posOfSpace <= 0 ) posOfSpace = maxStringLength - 1;\n-\n-               printStr = remainingStr.substring( 0, posOfSpace + 1 );\n-               remainingStr = remainingStr.substring( posOfSpace + 1 );\n-             }\n-            \/\/else just print\n-            else\n-             {\n-               printStr = remainingStr;\n-               remainingStr = \"\";\n-             }\n-\n-            instructionsText.append( printStr + \"\\n\" );\n-\n-          }\/\/ while\n-\n-       }\/\/ for\n-\n-    }\/\/printInstructions()\n-\n-   \/\/DO NOT call this directly, go through Sysout\n-   public void displayMessage( String messageIn )\n-    {\n-      messageText.append( messageIn + \"\\n\" );\n+    public static void main(String []args) throws InterruptedException {\n+        createUI();\n+        if ( !countDownLatch.await(5, TimeUnit.MINUTES)) {\n+            throw new RuntimeException(\"Timeout : user did not perform any \" +\n+                    \"action on the UI.\");\n+        }\n+        if ( !testResult) {\n+            throw new RuntimeException(\"Test failed\");\n+        }\n@@ -176,0 +130,1 @@\n+}\n@@ -177,1 +132,0 @@\n- }\/\/ TestDialog  class\n","filename":"test\/jdk\/java\/awt\/print\/PrinterJob\/PageDialogTest.java","additions":90,"deletions":136,"binary":false,"changes":226,"status":"modified"}]}