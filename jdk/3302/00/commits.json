[{"commit":{"message":"8264409: AArch64: generate better code for Vector API allTrue\n\nIn Vector API NEON implementation, we use a vector register to\nrepresent vector mask, where an element value of -1 is a true mask and\nan element value of 0 is a false mask. The allTrue() api is used to\ncheck whether all the elements of current mask are set.\n\nCurrently, the AArch64 NEON allTrue implementation looks like:\n\n  andr  $tmp, T16B $src1, $src2\\t# src2 is maskAllTrue\n  notr  $tmp, T16B, $tmp\n  addv  $tmp, T16B, $tmp\n  umov  $dst, $tmp, B, 0\n  cmp   $dst, 0\n  cset  $dst\n\nwhere $src2 is a preset all true (-1) constant. We can optimize it to\nthe code sequence like below, to check whether all bits are set:\n\n  uminv $tmp, T16B, $src1\n  umov  $dst, $tmp, B, 0\n  cmp   $dst, 0xff\n  cset  $dst\n\nWith this codegen improvement, we can see about 8%~70% performance\nuplift on different machines for Alibaba's Vector API bigdata\nbenchmarks [1][2].\n\nTested with tier1 and vector api jtreg tests.\n\n[1] https:\/\/github.com\/openjdk\/panama-vector\/blob\/vectorIntrinsics\/test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/BooleanArrayCheck.java\n[2] https:\/\/github.com\/openjdk\/panama-vector\/blob\/vectorIntrinsics\/test\/jdk\/jdk\/incubator\/vector\/benchmark\/src\/main\/java\/benchmark\/bigdata\/ValueRangeCheckAndCastL2I.java#L93"},"files":[{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon.ad"},{"filename":"src\/hotspot\/cpu\/aarch64\/aarch64_neon_ad.m4"},{"filename":"src\/hotspot\/cpu\/aarch64\/assembler_aarch64.hpp"},{"filename":"test\/hotspot\/gtest\/aarch64\/aarch64-asmtest.py"},{"filename":"test\/hotspot\/gtest\/aarch64\/asmtest.out.h"}],"sha":"b9cfd8acb80bf7680f360619280f2d5eb9b86b9c"}]