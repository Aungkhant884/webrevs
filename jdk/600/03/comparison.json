{"files":[{"patch":"@@ -806,1 +806,1 @@\n-            \"PopupMenu.consumeEventOnClose\", Boolean.TRUE,\n+            \"PopupMenu.consumeEventOnClose\", Boolean.FALSE,\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/gtk\/GTKLookAndFeel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -693,1 +693,1 @@\n-            \"PopupMenu.consumeEventOnClose\", Boolean.TRUE,\n+            \"PopupMenu.consumeEventOnClose\", Boolean.FALSE,\n","filename":"src\/java.desktop\/share\/classes\/com\/sun\/java\/swing\/plaf\/motif\/MotifLookAndFeel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -15196,1 +15196,1 @@\n-               <uiProperty name=\"consumeEventOnClose\" type=\"BOOLEAN\" value=\"true\"\/>\n+               <uiProperty name=\"consumeEventOnClose\" type=\"BOOLEAN\" value=\"false\"\/>\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/plaf\/nimbus\/skin.laf","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -944,1 +944,1 @@\n-            \"PopupMenu.consumeEventOnClose\", Boolean.TRUE,\n+            \"PopupMenu.consumeEventOnClose\", Boolean.FALSE,\n","filename":"src\/java.desktop\/windows\/classes\/com\/sun\/java\/swing\/plaf\/windows\/WindowsLookAndFeel.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -0,0 +1,165 @@\n+\/*\n+ * Copyright (c) 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JMenuItem;\n+import javax.swing.JPopupMenu;\n+import javax.swing.SwingUtilities;\n+import javax.swing.UIManager;\n+import javax.swing.UnsupportedLookAndFeelException;\n+import java.awt.Container;\n+import java.awt.FlowLayout;\n+import java.awt.Point;\n+import java.awt.Robot;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.awt.event.InputEvent;\n+import java.awt.event.MouseEvent;\n+import java.io.StringWriter;\n+import java.io.PrintWriter;\n+\n+\/**\n+ *  @test\n+ *  @bug 8048109\n+ *  @summary JToggleButton does not fire actionPerformed under certain\n+ *  conditions\n+ *  @key headful\n+ *  @run main SetInvokerJPopupMenuTest\n+ *\/\n+\n+public class SetInvokerJPopupMenuTest {\n+\n+    private static MyPopupMenu popup;\n+    private static MyButton jtb ;\n+    private static Robot robot;\n+    private static JFrame f;\n+    private static Point p;\n+    private static boolean isPopupVisible;\n+\n+    public static void main(String[] args) throws Exception {\n+        UIManager.LookAndFeelInfo[] installedLookAndFeels;\n+        installedLookAndFeels = UIManager.getInstalledLookAndFeels();\n+\n+        for(UIManager.LookAndFeelInfo LF : installedLookAndFeels) {\n+            try {\n+                robot = new Robot();\n+                UIManager.setLookAndFeel(LF.getClassName());\n+                SwingUtilities.invokeAndWait(() -> {\n+                    jtb = new MyButton(\"Press Me\");\n+                    jtb.addActionListener(new ActionListener( ) {\n+                        @Override\n+                        public void actionPerformed(ActionEvent ev) {\n+                            if (!popup.isVisible()) {\n+                                postUp();\n+                            }\n+                            else {\n+                                postDown();\n+                            }\n+                        }\n+                    });\n+\n+                    f = new JFrame( );\n+                    f.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n+                    f.setLocationRelativeTo(null);\n+                    f.setSize(300, 400);\n+                    Container c = f.getContentPane( );\n+                    c.setLayout(new FlowLayout( ));\n+                    c.add(jtb);\n+                    f.setVisible(true);\n+                    popup = new MyPopupMenu();\n+                    popup.add(new JMenuItem(\"A\"));\n+                    popup.add(new JMenuItem(\"B\"));\n+                    popup.add(new JMenuItem(\"C\"));\n+                    popup.setVisible(false);\n+                    p = jtb.getLocationOnScreen();\n+                });\n+\n+                robot.waitForIdle();\n+                robot.setAutoDelay(50);\n+                robot.mouseMove(p.x + 15, p.y + 15);\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+                robot.waitForIdle();\n+                robot.mousePress(InputEvent.BUTTON1_DOWN_MASK);\n+                robot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK);\n+\n+            } catch (UnsupportedLookAndFeelException e) {\n+                System.out.println(\"Note: LookAndFeel \" + LF.getClassName()\n+                        + \" is not supported on this configuration\");\n+            } finally {\n+                if (f != null) {\n+                    SwingUtilities.invokeAndWait(() -> f.dispose());\n+                }\n+            }\n+\n+            SwingUtilities.invokeAndWait(() -> {\n+                isPopupVisible = popup.isVisible();\n+            });\n+\n+            if (isPopupVisible) {\n+                throw new RuntimeException(\"PopupMenu is not taken down after\"+\n+                        \" single button click\");\n+            }\n+        }\n+    }\n+\n+    public static void postUp() {\n+        popup.setInvoker(jtb);\n+        popup.setVisible(true);\n+    }\n+\n+    public static void postDown() {\n+        popup.setVisible(false);\n+    }\n+\n+    private static class MyButton extends JButton {\n+        public MyButton(String string) {\n+            super (string);\n+        }\n+        @Override\n+        protected void processMouseEvent(MouseEvent e) {\n+            super.processMouseEvent(e);\n+        }\n+    }\n+\n+    private static class MyPopupMenu extends JPopupMenu {\n+        @Override\n+        public void setVisible( boolean state ) {\n+            if( !state ) {\n+                Exception ex = new Exception();\n+                StringWriter stringWriter = new StringWriter();\n+                PrintWriter printWriter = new PrintWriter( stringWriter );\n+                ex.printStackTrace( printWriter );\n+                String traceString = stringWriter.getBuffer().toString();\n+                if( traceString.lastIndexOf( \"windowDeactivated\" ) > 0\n+                        || traceString.lastIndexOf( \"menuSelectionChanged\" )\n+                        > 0 ) {\n+                    return;\n+                }\n+            }\n+            super.setVisible(state);\n+        }\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JPopupMenu\/SetInvokerJPopupMenuTest.java","additions":165,"deletions":0,"binary":false,"changes":165,"status":"added"}]}