{"files":[{"patch":"@@ -160,1 +160,2 @@\n-        \/\/ Check parse and returned value\n+        \/\/ Check parse and returned value. This was originally intended to ensure\n+        \/\/ a ParseException is not thrown\n@@ -162,1 +163,1 @@\n-                \"Should not throw a ParseException\");\n+                \"Should not throw an Exception\");\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/BigDecimalCompatibilityTest.java","additions":3,"deletions":2,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -246,9 +246,11 @@\n-            assertEquals(parsed2, parsed1, \"DecimalFormat round trip parse(\" +\n-                    num.getClass().getName() +\n-                    \") error: \\n\\toriginal number:  \" + str +\n-                    \"\\n\\tparsed number:    \" + parsed1 +\n-                    \"  (\" + parsed1.getClass().getName() + \")\" +\n-                    \"\\n\\tformatted number: \" + formatted +\n-                    \"\\n\\tre-parsed number: \" + parsed2 +\n-                    \"  (\" + parsed2.getClass().getName() + \")\" +\n-                    \"\\n\\tminus sign: \" + df.getDecimalFormatSymbols().getMinusSign());\n+            assertEquals(parsed2, parsed1, \"\"\"\n+                            DecimalFormat round trip parse(%s) error:\n+                                original number: %s\n+                                parsed number: %s\n+                                (%s)\n+                                formatted number: %s\n+                                re-parsed number: %s\n+                                (%s)\n+                                minus sign: %s\n+                            \"\"\".formatted(num.getClass().getName(), str, parsed1, parsed1.getClass().getName(),\n+                                    formatted, parsed2, parsed2.getClass().getName(), df.getDecimalFormatSymbols().getMinusSign()));\n@@ -257,10 +259,11 @@\n-            fail(\"DecimalFormat parse(\" +\n-                    num.getClass().getName() +\n-                    \") threw an Exception:  \" + e.getMessage() +\n-                    \"\\n\\toriginal number:  \" + str +\n-                    \"\\n\\tparsed number   : \" + parsed1 +\n-                    \"  (\" + parsed1.getClass().getName() + \")\" +\n-                    \"\\n\\tformatted number: \" + formatted +\n-                    \"\\n\\tre-parsed number: \" + parsed2 +\n-                    \"  (\" + parsed2.getClass().getName() + \")\" +\n-                    \"\\n\\tminus sign: \" + df.getDecimalFormatSymbols().getMinusSign());\n+            fail(\"\"\"\n+                    DecimalFormat parse(%s) threw an Exception: %s\n+                        original number: %s\n+                        parsed number: %s\n+                        (%s)\n+                        formatted number: %s\n+                        re-parsed number: %s\n+                        (%s)\n+                        minus sign: %s\n+                    \"\"\".formatted(num.getClass().getName(), e.getMessage(), str, parsed1, parsed1.getClass().getName(),\n+                            formatted, parsed2, parsed2.getClass().getName(), df.getDecimalFormatSymbols().getMinusSign()));\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/Bug4838107.java","additions":22,"deletions":19,"binary":false,"changes":41,"status":"modified"},{"patch":"@@ -70,0 +70,1 @@\n+        \/\/ This was originally intended to ensure a ParseException is not thrown\n@@ -71,1 +72,1 @@\n-                \"DecimalFormat.parse(\\\"%s\\\") should not throw ParseException\");\n+                \"DecimalFormat.parse(\\\"%s\\\") should not throw an Exception\");\n@@ -102,0 +103,1 @@\n+        \/\/ This was originally intended to ensure a ParseException is not thrown\n@@ -103,1 +105,1 @@\n-                \"DecimalFormat.parse(\\\"%s\\\") should not throw ParseException\");\n+                \"DecimalFormat.parse(\\\"%s\\\") should not throw an Exception\");\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/Bug4944439.java","additions":4,"deletions":2,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -45,1 +45,1 @@\n-                \"DecimalFormat.parse() should support subclasses of Number\");\n+                \"DecimalFormat.format() should support subclasses of Number\");\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/Bug4990596.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -47,1 +47,1 @@\n-        \/\/ i.e. \"\\u2019\" as decimal separator, \"\\u2019\" as grouping separator\n+        \/\/ \"\\u2019\" as decimal separator, \"\\u002E\" as grouping separator\n","filename":"test\/jdk\/java\/text\/Format\/NumberFormat\/Bug8132125.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}