{"files":[{"patch":"@@ -72,0 +72,6 @@\n+#ifdef LIBARCH_riscv64\n+#define RISCV_ONLY(code) code\n+#else\n+#define RISCV_ONLY(code)\n+#endif\n+\n@@ -198,2 +204,5 @@\n-      if (size > 0)  p += size;\n-      else           app_data->losing = true;\n+      if (size <= 0 RISCV_ONLY(|| size == EIO)) {\n+        app_data->losing = true;\n+      } else {\n+        p += size;\n+      }\n@@ -288,0 +297,30 @@\n+static void\n+hsdis_memory_error_func(int status, bfd_vma addr, disassemble_info *dinfo) {\n+  DECL_APP_DATA(dinfo);\n+  DECL_EVENT_CALLBACK(app_data);\n+  DECL_PRINTF_CALLBACK(app_data);\n+\n+  uintptr_t p = (uintptr_t)addr;\n+  uintptr_t end = app_data->end_va;\n+\n+  for (int i = 0; p < end; i++) {\n+    if (i > 0) {\n+      \/* Skip the first \"insn\": it has been emitted in decode() when a memory error is happening *\/\n+      (*event_callback)(event_stream, \"insn\", (void*) p);\n+    }\n+\n+    if (end - p >= 4) {\n+      (*printf_callback)(printf_stream, \".4byte\\t0x%08x\\n\", *(uint32_t*)p);\n+      p += 4;\n+    } else if (end - p >= 2) {\n+      (*printf_callback)(printf_stream, \".2byte\\t0x%04x\\n\", *(uint16_t*)p);\n+      p += 2;\n+    } else {\n+      (*printf_callback)(printf_stream, \".1byte\\t0x%02x\\n\", *(uint8_t*)p);\n+      p += 1;\n+    }\n+\n+    (*event_callback)(event_stream, \"\/insn\", (void*) p);\n+  }\n+}\n+\n@@ -349,0 +388,1 @@\n+  app_data->dinfo.memory_error_func = hsdis_memory_error_func;\n","filename":"src\/utils\/hsdis\/binutils\/hsdis-binutils.c","additions":42,"deletions":2,"binary":false,"changes":44,"status":"modified"}]}