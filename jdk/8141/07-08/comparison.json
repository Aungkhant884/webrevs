{"files":[{"patch":"@@ -26,0 +26,2 @@\n+ * @library \/java\/awt\/regtesthelpers\n+ * @build PassFailJFrame\n@@ -33,0 +35,1 @@\n+import java.awt.print.PrinterJob;\n@@ -50,1 +53,0 @@\n-    static JDialog dialog;\n@@ -52,2 +54,9 @@\n-    static volatile boolean testResult = false;\n-    static final CountDownLatch latch = new CountDownLatch(1);\n+\n+    static final String INSTRUCTIONS = \"\"\"\n+         Note: You must have a printer installed for this test.\n+         If printer is not available, the test passes automatically.\n+\n+         A JTable with 1000 rows and a print dialog will be shown.\n+         If only 1 page is printed,\n+         then press fail else press pass.\n+\t\t\"\"\";\n@@ -57,16 +66,1 @@\n-        try {\n-            SwingUtilities.invokeAndWait(() -> {\n-                printAllPagesTest();\n-                createUI();\n-            });\n-\n-            Thread.sleep(1000);\n-            SwingUtilities.invokeAndWait(() -> {\n-                try {\n-                    if (!table.print()) {\n-                        throw new RuntimeException(\"Printing cancelled\");\n-                    }\n-                } catch (PrinterException e) {\n-                    throw new RuntimeException(\"Printing failed: \" + e);\n-                }\n-            });\n+        PassFailJFrame passFailJFrame = new PassFailJFrame(INSTRUCTIONS);\n@@ -74,4 +68,15 @@\n-            \/\/ wait for latch to complete\n-            if (!latch.await(5, TimeUnit.MINUTES)) {\n-                throw new RuntimeException(\"Test timed out\");\n-            }\n+        PrinterJob pj = PrinterJob.getPrinterJob();\n+        if (pj.getPrintService() == null) {\n+            System.out.println(\"Printer not configured or available.\"\n+                    + \" Test cannot continue.\");\n+            PassFailJFrame.forcePass();\n+        }\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            printAllPagesTest();\n+        });\n+\n+        Thread.sleep(1000);\n+\n+        \/\/ add the test frame to dispose\n+        PassFailJFrame.addTestFrame(f);\n@@ -79,2 +84,10 @@\n-            if (!testResult) {\n-                throw new RuntimeException(\"Only 1st page is printed out of multiple pages\");\n+        \/\/ Arrange the test instruction frame and test frame side by side\n+        PassFailJFrame.positionTestFrame(f, PassFailJFrame.Position.HORIZONTAL);\n+\n+        SwingUtilities.invokeAndWait(() -> {\n+            try {\n+                if (!table.print()) {\n+                    throw new RuntimeException(\"Printing cancelled\");\n+                }\n+            } catch (PrinterException e) {\n+                throw new RuntimeException(\"Printing failed: \" + e);\n@@ -82,6 +95,1 @@\n-        } finally {\n-            SwingUtilities.invokeAndWait(() -> {\n-                dispose();\n-            });\n-        }\n-    }\n+        });\n@@ -89,7 +97,1 @@\n-    private static void dispose() {\n-        if (dialog != null) {\n-            dialog.dispose();\n-        }\n-        if (f != null) {\n-            f.dispose();\n-        }\n+        passFailJFrame.awaitAndCheck();\n@@ -98,0 +100,1 @@\n+\n@@ -122,1 +125,0 @@\n-        f.setLocationRelativeTo(null);\n@@ -125,40 +127,0 @@\n-        f.addWindowListener(new PrintAllPagesTest());\n-    }\n-\n-    private static void createUI() {\n-        String description\n-                = \" INSTRUCTIONS:\\n\"\n-                + \" A JTable with 1000 rows and a print dialog will be shown.\\n\"\n-                + \" If only 1 page is printed,\\n \"\n-                + \" then press fail else press pass\";\n-\n-        dialog = new JDialog(f, \"Instructions for Table Print Test\");\n-        dialog.setTitle(\"textselectionTest\");\n-        JTextArea textArea = new JTextArea(description);\n-        textArea.setEditable(false);\n-        final JButton passButton = new JButton(\"PASS\");\n-        passButton.addActionListener((e) -> {\n-            testResult = true;\n-            latch.countDown();\n-        });\n-        final JButton failButton = new JButton(\"FAIL\");\n-        failButton.addActionListener((e) -> {\n-            testResult = false;\n-            latch.countDown();\n-        });\n-        JPanel mainPanel = new JPanel(new BorderLayout());\n-        mainPanel.add(textArea, BorderLayout.CENTER);\n-        JPanel buttonPanel = new JPanel(new FlowLayout());\n-        buttonPanel.add(passButton);\n-        buttonPanel.add(failButton);\n-        mainPanel.add(buttonPanel, BorderLayout.SOUTH);\n-        dialog.add(mainPanel);\n-        dialog.setUndecorated(true);\n-        dialog.pack();\n-        dialog.setVisible(true);\n-        dialog.addWindowListener(new PrintAllPagesTest());\n-    }\n-\n-    @Override\n-    public void windowClosing(WindowEvent e) {\n-        latch.countDown();\n","filename":"test\/jdk\/javax\/swing\/JTable\/PrintAllPagesTest.java","additions":41,"deletions":79,"binary":false,"changes":120,"status":"modified"}]}