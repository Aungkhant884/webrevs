{"files":[{"patch":"@@ -285,0 +285,3 @@\n+        Rectangle bounds = table.getBounds();\n+        bounds.x = bounds.y = 0;\n+\n@@ -306,1 +309,1 @@\n-            if (!((table.getBounds()).intersects(clip))) {\n+            if (!(bounds.intersects(clip))) {\n@@ -309,0 +312,1 @@\n+\n@@ -398,2 +402,0 @@\n-        Rectangle bounds = table.getBounds();\n-        bounds.x = bounds.y = 0;\n","filename":"src\/java.desktop\/share\/classes\/javax\/swing\/TablePrintable.java","additions":5,"deletions":3,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -0,0 +1,152 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+\/*\n+ * @test\n+ * @bug 8257810\n+ * @summary  Verifies if all pages are printed if scrollRectToVisible is set.\n+ * @run main\/manual PrintAllPagesTest\n+ *\/\n+import java.awt.BorderLayout;\n+import java.awt.FlowLayout;\n+import java.awt.Rectangle;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import javax.swing.JButton;\n+import javax.swing.JDialog;\n+import javax.swing.JFrame;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTable;\n+import javax.swing.JTextArea;\n+import javax.swing.SwingUtilities;\n+import javax.swing.table.AbstractTableModel;\n+import javax.swing.table.TableModel;\n+import javax.swing.WindowConstants;\n+\n+public class PrintAllPagesTest {\n+    static JFrame f;\n+    static JDialog dialog;\n+    static boolean testResult = false;\n+    static CountDownLatch latch = new CountDownLatch(1);\n+\n+    public static void main(String[] args) throws Exception {\n+\n+        try {\n+            SwingUtilities.invokeAndWait(() -> {\n+                createUI();\n+                printAllPagesTest();\n+           });\n+\n+            \/\/ wait for latch to complete\n+            boolean ret = false;\n+            ret = latch.await(5, TimeUnit.MINUTES);\n+\n+            if (!ret) {\n+                throw new RuntimeException(\" User has not executed the test\");\n+            }\n+\n+            if (testResult == false) {\n+                throw new RuntimeException(\"Only 1st page is printed out of multiple pages\");\n+            }\n+        } finally {\n+            SwingUtilities.invokeAndWait(() -> {\n+                dispose();\n+            });\n+        }\n+    }\n+\n+    private static void dispose() {\n+        if (dialog != null) {\n+            dialog.dispose();\n+        }\n+        if (f != null) {\n+            f.dispose();\n+        }\n+    }\n+\n+    private static void printAllPagesTest() {\n+        TableModel dataModel = new AbstractTableModel() {\n+            @Override\n+            public int getColumnCount() {\n+                return 10;\n+            }\n+\n+            @Override\n+            public int getRowCount() {\n+                return 1000;\n+            }\n+\n+            @Override\n+            public Object getValueAt(int row, int col) {\n+                return Integer.valueOf(0 == col ? row + 1 : row * col);\n+            }\n+        };\n+        JTable table = new JTable(dataModel);\n+        JScrollPane scrollpane = new JScrollPane(table);\n+        table.scrollRectToVisible(table.getCellRect(table.getRowCount() - 1, 0, false));\n+\n+        f = new JFrame(\"Table test\");\n+        f.add(scrollpane);\n+        f.setSize(1000, 800);\n+        f.setLocationRelativeTo(null);\n+        f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\n+        f.setVisible(true);\n+        try {\n+            table.print();\n+        } catch (Exception e) {}\n+    }\n+\n+    private static void createUI() {\n+        String description\n+                = \" INSTRUCTIONS:\\n\"\n+                + \" A JTable will be shown.\\n\"\n+                + \" If only 1 page is printed,\\n \"\n+                + \" then press fail else press pass\";\n+\n+        dialog = new JDialog();\n+        dialog.setTitle(\"textselectionTest\");\n+        JTextArea textArea = new JTextArea(description);\n+        textArea.setEditable(false);\n+        final JButton passButton = new JButton(\"PASS\");\n+        passButton.addActionListener((e) -> {\n+            testResult = true;\n+            dispose();\n+            latch.countDown();\n+        });\n+        final JButton failButton = new JButton(\"FAIL\");\n+        failButton.addActionListener((e) -> {\n+            testResult = false;\n+            dispose();\n+            latch.countDown();\n+        });\n+        JPanel mainPanel = new JPanel(new BorderLayout());\n+        mainPanel.add(textArea, BorderLayout.CENTER);\n+        JPanel buttonPanel = new JPanel(new FlowLayout());\n+        buttonPanel.add(passButton);\n+        buttonPanel.add(failButton);\n+        mainPanel.add(buttonPanel, BorderLayout.SOUTH);\n+        dialog.add(mainPanel);\n+        dialog.pack();\n+        dialog.setVisible(true);\n+    }\n+}\n","filename":"test\/jdk\/javax\/swing\/JTable\/PrintAllPagesTest.java","additions":152,"deletions":0,"binary":false,"changes":152,"status":"added"}]}