{"files":[{"patch":"@@ -248,0 +248,1 @@\n+    virtual jlong pids_current() = 0;\n","filename":"src\/hotspot\/os\/linux\/cgroupSubsystem_linux.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -255,0 +255,9 @@\n+char* CgroupV1Subsystem::pids_current_val() {\n+  GET_CONTAINER_INFO_CPTR(cptr, _pids, \"\/pids.current\",\n+                     \"Current number of tasks is: %s\", \"%s %*d\", pids_current, 1024);\n+  if (pids_current == NULL) {\n+    return NULL;\n+  }\n+  return os::strdup(pids_current);\n+}\n+\n@@ -269,0 +278,14 @@\n+\n+\/* pids_current\n+ *\n+ * The number of tasks currently in the cgroup (and its descendants) of the process\n+ *\n+ * return:\n+ *    current number of tasks\n+ *    OSCONTAINER_ERROR for not supported\n+ *\/\n+jlong CgroupV1Subsystem::pids_current() {\n+  if (_pids == NULL) return OSCONTAINER_ERROR;\n+  char * pidscurrent_str = pids_current_val();\n+  return limit_from_str(pidscurrent_str);\n+}\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.cpp","additions":23,"deletions":0,"binary":false,"changes":23,"status":"modified"},{"patch":"@@ -91,0 +91,1 @@\n+    jlong pids_current();\n@@ -109,0 +110,1 @@\n+    char * pids_current_val();\n","filename":"src\/hotspot\/os\/linux\/cgroupV1Subsystem_linux.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -238,0 +238,10 @@\n+char* CgroupV2Subsystem::pids_current_val() {\n+  GET_CONTAINER_INFO_CPTR(cptr, _unified, \"\/pids.current\",\n+                     \"Current number of tasks is: %s\", \"%s %*d\", pids_current, 1024);\n+  if (pids_current == NULL) {\n+    return NULL;\n+  }\n+  return os::strdup(pids_current);\n+}\n+\n+\n@@ -252,0 +262,12 @@\n+\/* pids_current\n+ *\n+ * The number of tasks currently in the cgroup (and its descendants) of the process\n+ *\n+ * return:\n+ *    current number of tasks\n+ *    OSCONTAINER_ERROR for not supported\n+ *\/\n+jlong CgroupV2Subsystem::pids_current() {\n+  char * pidscurrent_str = pids_current_val();\n+  return limit_from_str(pidscurrent_str);\n+}\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.cpp","additions":22,"deletions":0,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -64,0 +64,1 @@\n+    char *pids_current_val();\n@@ -83,0 +84,1 @@\n+    jlong pids_current();\n","filename":"src\/hotspot\/os\/linux\/cgroupV2Subsystem_linux.hpp","additions":2,"deletions":0,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -137,0 +137,5 @@\n+\n+jlong OSContainer::pids_current() {\n+  assert(cgroup_subsystem != NULL, \"cgroup subsystem not available\");\n+  return cgroup_subsystem->pids_current();\n+}\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.cpp","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -66,0 +66,1 @@\n+  static jlong pids_current();\n","filename":"src\/hotspot\/os\/linux\/osContainer_linux.hpp","additions":1,"deletions":0,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -2330,0 +2330,10 @@\n+  j = OSContainer::OSContainer::pids_current();\n+  st->print(\"current number of tasks: \");\n+  if (j > 0) {\n+    st->print_cr(JLONG_FORMAT, j);\n+  } else {\n+    if (j == OSCONTAINER_ERROR) {\n+      st->print_cr(\"not supported\");\n+    }\n+  }\n+\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":10,"deletions":0,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2020, Red Hat Inc.\n+ * Copyright (c) 2020, 2021, Red Hat Inc.\n@@ -157,0 +157,5 @@\n+    @Override\n+    public long getPidsCurrent() {\n+        return subsystem.getPidsCurrent();\n+    }\n+\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/CgroupMetrics.java","additions":6,"deletions":1,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -419,0 +419,5 @@\n+    public long getPidsCurrent() {\n+        String pidsCurrentStr = CgroupSubsystemController.getStringValue(pids, \"pids.current\");\n+        return CgroupSubsystem.limitFromString(pidsCurrentStr);\n+    }\n+\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv1\/CgroupV1Subsystem.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -314,0 +314,6 @@\n+    @Override\n+    public long getPidsCurrent() {\n+        String pidsCurrentStr = CgroupSubsystemController.getStringValue(unified, \"pids.current\");\n+        return CgroupSubsystem.limitFromString(pidsCurrentStr);\n+    }\n+\n","filename":"src\/java.base\/linux\/classes\/jdk\/internal\/platform\/cgroupv2\/CgroupV2Subsystem.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -368,0 +368,8 @@\n+    \/**\n+     * Returns the current number of tasks in the Isolation Group.\n+     *\n+     * @return The current number of tasks or -2 if not supported\n+     *\n+     *\/\n+    public long getPidsCurrent();\n+\n","filename":"src\/java.base\/share\/classes\/jdk\/internal\/platform\/Metrics.java","additions":8,"deletions":0,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -411,0 +411,5 @@\n+\n+        long val = c.getPidsCurrent();\n+        ostream.println(formatLimitString(val, INDENT + \"Current number of processes: \",\n+                                          longRetvalNotSupported, false));\n+\n","filename":"src\/java.base\/share\/classes\/sun\/launcher\/LauncherHelper.java","additions":5,"deletions":0,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -109,1 +109,2 @@\n-            \"maximum number of tasks\"\n+            \"maximum number of tasks\",\n+            \"current number of tasks\"\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestMisc.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -96,0 +96,4 @@\n+                if (expectedValue.equals(\"no_value_expected\")) {\n+                    System.out.println(\"No value expected for \" + lineMarker);\n+                    break;\n+                }\n@@ -140,0 +144,2 @@\n+        \/\/ current number of tasks value is hard to predict, so better expect no value\n+        checkResult(lines, \"Current number of tasks is: \", \"no_value_expected\");\n","filename":"test\/hotspot\/jtreg\/containers\/docker\/TestPids.java","additions":6,"deletions":0,"binary":false,"changes":6,"status":"modified"}]}