{"files":[{"patch":"@@ -85,0 +85,3 @@\n+    private static final Set<String> previewModifiers\n+            = Set.of(\"sealed\", \"non-sealed\");\n+\n@@ -185,1 +188,19 @@\n-    public void addClassSignature(Content classInfoTree) {\n+    public void addClassSignature(String modifiers, Content classInfoTree) {\n+        ContentBuilder mods = new ContentBuilder();\n+        String sep = null;\n+        for (String modifiersPart : modifiers.split(\" \")) {\n+            if (sep != null) {\n+                mods.add(sep);\n+            }\n+            if (previewModifiers.contains(modifiersPart)) {\n+                mods.add(modifiersPart);\n+                mods.add(HtmlTree.SUP(links.createLink(htmlIds.forPreviewSection(typeElement),\n+                                                       contents.previewMark)));\n+            } else {\n+                mods.add(modifiersPart);\n+            }\n+            sep = \" \";\n+        }\n+        if (modifiers.endsWith(\" \")) {\n+            mods.add(\" \");\n+        }\n@@ -188,0 +209,1 @@\n+                .setModifiers(mods)\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/ClassWriterImpl.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"},{"patch":"@@ -95,1 +95,1 @@\n-        private final HtmlDocletWriter writer;\n+        private final ClassWriterImpl classWriter;\n@@ -98,1 +98,1 @@\n-        private final Content modifiers;\n+        private Content modifiers;\n@@ -100,4 +100,1 @@\n-        private static final Set<String> previewModifiers\n-                = Set.of(\"sealed\", \"non-sealed\");\n-\n-        TypeSignature(TypeElement typeElement, HtmlDocletWriter writer) {\n+        TypeSignature(TypeElement typeElement, ClassWriterImpl classWriter) {\n@@ -105,22 +102,8 @@\n-            this.writer = writer;\n-            this.utils = writer.utils;\n-            this.configuration = writer.configuration;\n-            this.modifiers = new ContentBuilder();\n-\n-            String mods = utils.modifiersToString(typeElement);\n-            String sep = null;\n-            for (String modifiersPart : mods.split(\" \")) {\n-                if (sep != null) {\n-                    modifiers.add(sep);\n-                }\n-                if (previewModifiers.contains(modifiersPart)) {\n-                    modifiers.add(modifiersPart);\n-                    modifiers.add(HtmlTree.SUP(writer.links.createLink(\n-                            writer.htmlIds.forPreviewSection(typeElement),\n-                            writer.contents.previewMark)));\n-                } else {\n-                    modifiers.add(modifiersPart);\n-                }\n-                sep = \" \";\n-            }\n-            modifiers.add(\" \");\n+            this.classWriter = classWriter;\n+            this.utils = classWriter.utils;\n+            this.configuration = classWriter.configuration;\n+        }\n+\n+        public TypeSignature setModifiers(Content modifiers) {\n+            this.modifiers = modifiers;\n+            return this;\n@@ -132,1 +115,1 @@\n-            Content annotationInfo = writer.getAnnotationInfo(typeElement, true);\n+            Content annotationInfo = classWriter.getAnnotationInfo(typeElement, true);\n@@ -140,2 +123,2 @@\n-            if (writer.options.linkSource()) {\n-                writer.addSrcLink(typeElement, className, nameSpan);\n+            if (classWriter.options.linkSource()) {\n+                classWriter.addSrcLink(typeElement, className, nameSpan);\n@@ -149,1 +132,1 @@\n-            nameSpan.add(writer.getTypeParameterLinks(linkInfo));\n+            nameSpan.add(classWriter.getTypeParameterLinks(linkInfo));\n@@ -163,1 +146,1 @@\n-                        Content link = writer.getLink(new HtmlLinkInfo(configuration,\n+                        Content link = classWriter.getLink(new HtmlLinkInfo(configuration,\n@@ -184,1 +167,1 @@\n-                        Content link = writer.getLink(new HtmlLinkInfo(configuration,\n+                        Content link = classWriter.getLink(new HtmlLinkInfo(configuration,\n@@ -206,2 +189,2 @@\n-                                writer.links.createLink(writer.htmlIds.forPreviewSection(typeElement),\n-                                        writer.contents.previewMark);\n+                                classWriter.links.createLink(classWriter.htmlIds.forPreviewSection(typeElement),\n+                                                             classWriter.contents.previewMark);\n@@ -214,1 +197,1 @@\n-                    Content link = writer.getLink(new HtmlLinkInfo(configuration,\n+                    Content link = classWriter.getLink(new HtmlLinkInfo(configuration,\n@@ -220,1 +203,1 @@\n-                    Content c = Text.of(writer.resources.getText(\"doclet.not.exhaustive\"));\n+                    Content c = Text.of(classWriter.resources.getText(\"doclet.not.exhaustive\"));\n@@ -236,1 +219,1 @@\n-                writer.getAnnotations(e.getAnnotationMirrors(), false)\n+                classWriter.getAnnotations(e.getAnnotationMirrors(), false)\n@@ -238,1 +221,1 @@\n-                Content link = writer.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.RECORD_COMPONENT,\n+                Content link = classWriter.getLink(new HtmlLinkInfo(configuration, HtmlLinkInfo.Kind.RECORD_COMPONENT,\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/formats\/html\/Signatures.java","additions":23,"deletions":40,"binary":false,"changes":63,"status":"modified"},{"patch":"@@ -148,0 +148,1 @@\n+     * @param modifiers the modifiers for the signature\n@@ -150,1 +151,1 @@\n-    void addClassSignature(Content classInfoTree);\n+    void addClassSignature(String modifiers, Content classInfoTree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/ClassWriter.java","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -298,1 +298,1 @@\n-        writer.addClassSignature(classInfoTree);\n+        writer.addClassSignature(utils.modifiersToString(typeElement, true), classInfoTree);\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/builders\/ClassBuilder.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -496,1 +496,1 @@\n-    public String modifiersToString(Element e) {\n+    public String modifiersToString(Element e, boolean trailingSpace) {\n@@ -544,0 +544,3 @@\n+                if (trailingSpace) {\n+                    sb.append(\" \");\n+                }\n","filename":"src\/jdk.javadoc\/share\/classes\/jdk\/javadoc\/internal\/doclets\/toolkit\/util\/Utils.java","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"}]}