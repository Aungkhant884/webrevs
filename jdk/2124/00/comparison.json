{"files":[{"patch":"@@ -4374,1 +4374,1 @@\n-     * {@code IndexOutOfBoundsException} if the index is less than {@code 0}\n+     * {@code ArrayIndexOutOfBoundsException} if the index is less than {@code 0}\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/MethodHandles.java","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2015, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2015, 2021, Oracle and\/or its affiliates. All rights reserved.\n@@ -38,0 +38,1 @@\n+import java.util.List;\n@@ -39,0 +40,1 @@\n+import java.util.function.BiFunction;\n@@ -110,0 +112,3 @@\n+        private static final BiFunction<String, List<Number>, ArrayIndexOutOfBoundsException>\n+            OOBEF = Preconditions.outOfBoundsExceptionFormatter(ArrayIndexOutOfBoundsException::new);\n+\n@@ -112,1 +117,1 @@\n-            return Preconditions.checkIndex(index, ba.length - ALIGN, null);\n+            return Preconditions.checkIndex(index, ba.length - ALIGN, OOBEF);\n","filename":"src\/java.base\/share\/classes\/java\/lang\/invoke\/X-VarHandleByteArrayView.java.template","additions":7,"deletions":2,"binary":false,"changes":9,"status":"modified"}]}