{"files":[{"patch":"@@ -10209,0 +10209,1 @@\n+    \/\/ movzbl zeroes out the upper 32-bit and does not need REX.W\n@@ -10219,1 +10220,1 @@\n-  format %{ \"movzwq  $dst, $src\\t# long & 0xFFFF\" %}\n+  format %{ \"movzwl  $dst, $src\\t# long & 0xFFFF\" %}\n@@ -10221,0 +10222,1 @@\n+    \/\/ movzwl zeroes out the upper 32-bit and does not need REX.W\n","filename":"src\/hotspot\/cpu\/x86\/x86_64.ad","additions":3,"deletions":1,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -32,1 +32,3 @@\n-@Fork(value = 1, jvmArgsAppend = \"-XX:-UseSuperWord\")\n+@Fork(value = 3, jvmArgsAppend = \"-XX:-UseSuperWord\")\n+@Warmup(time = 1, timeUnit = TimeUnit.SECONDS)\n+@Measurement(time = 1, timeUnit = TimeUnit.SECONDS)\n@@ -34,1 +36,2 @@\n-    static final int[] a = new int[1024];\n+    static final int[] INT_ARRAY = new int[1024];\n+    static final long[] LONG_ARRAY = new long[1024];\n@@ -37,3 +40,14 @@\n-    public void inc_mem() {\n-        for (int i = 0; i < a.length; i++) {\n-            a[i]++;\n+    public void andL_rReg_imm255(Blackhole bh) {\n+        for (int i = 0; i < LONG_ARRAY.length; i++) {\n+            long v = LONG_ARRAY[i];\n+            bh.consume(v);\n+            bh.consume(v & 0xFFL);\n+        }\n+    }\n+\n+    @Benchmark\n+    public void andL_rReg_imm65535(Blackhole bh) {\n+        for (int i = 0; i < LONG_ARRAY.length; i++) {\n+            long v = LONG_ARRAY[i];\n+            bh.consume(v);\n+            bh.consume(v & 0xFFFFL);\n@@ -45,2 +59,2 @@\n-        for (int i = 0; i < a.length; i++) {\n-            bh.consume(a[i] + 100);\n+        for (int i = 0; i < INT_ARRAY.length; i++) {\n+            bh.consume(INT_ARRAY[i] + 100);\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/BasicRules.java","additions":21,"deletions":7,"binary":false,"changes":28,"status":"modified"}]}