{"files":[{"patch":"@@ -0,0 +1,50 @@\n+\/*\n+ * Copyright (c) 2022, Oracle and\/or its affiliates. All rights reserved.\n+ * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n+ *\n+ * This code is free software; you can redistribute it and\/or modify it\n+ * under the terms of the GNU General Public License version 2 only, as\n+ * published by the Free Software Foundation.\n+ *\n+ * This code is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+ * version 2 for more details (a copy is included in the LICENSE file that\n+ * accompanied this code).\n+ *\n+ * You should have received a copy of the GNU General Public License version\n+ * 2 along with this work; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n+ *\n+ * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n+ * or visit www.oracle.com if you need additional information or have any\n+ * questions.\n+ *\/\n+package org.openjdk.bench.vm.compiler.x86;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.openjdk.jmh.annotations.*;\n+import org.openjdk.jmh.infra.Blackhole;\n+\n+@BenchmarkMode(Mode.AverageTime)\n+@OutputTimeUnit(TimeUnit.NANOSECONDS)\n+@State(Scope.Benchmark)\n+@Fork(value = 1, jvmArgsAppend = \"-XX:-UseSuperWord\")\n+public class BasicRules {\n+    static final int[] a = new int[1024];\n+\n+    @Benchmark\n+    public void inc_mem() {\n+        for (int i = 0; i < a.length; i++) {\n+            a[i]++;\n+        }\n+    }\n+\n+    @Benchmark\n+    public void add_mem_con(Blackhole bh) {\n+        for (int i = 0; i < a.length; i++) {\n+            bh.consume(a[i] + 100);\n+        }\n+    }\n+}\n+\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/BasicRules.java","additions":50,"deletions":0,"binary":false,"changes":50,"status":"added"},{"patch":"@@ -23,1 +23,1 @@\n-package org.openjdk.bench.vm.compiler;\n+package org.openjdk.bench.vm.compiler.x86;\n","filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/x86\/LeaInstruction.java","additions":1,"deletions":1,"binary":false,"changes":2,"previous_filename":"test\/micro\/org\/openjdk\/bench\/vm\/compiler\/LeaInstruction.java","status":"renamed"}]}