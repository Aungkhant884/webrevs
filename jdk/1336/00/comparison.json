{"files":[{"patch":"@@ -1693,1 +1693,3 @@\n-    parallel_cleaning(false \/* full gc*\/);\n+    if (is_degenerated_gc_in_progress()) {\n+      parallel_cleaning(false \/* full gc*\/);\n+    }\n@@ -1764,4 +1766,2 @@\n-          \/\/ We only evacuate\/update thread and serial weak roots at this pause\n-          ShenandoahRootVerifier::RootTypes types = ShenandoahRootVerifier::combine(ShenandoahRootVerifier::ThreadRoots,\n-                                                                                    ShenandoahRootVerifier::SerialWeakRoots);\n-          verifier()->verify_roots_no_forwarded(types);\n+          \/\/ We only evacuate\/update thread roots at this pause\n+          verifier()->verify_roots_no_forwarded(ShenandoahRootVerifier::ThreadRoots);\n@@ -2414,1 +2414,0 @@\n-\n@@ -2419,1 +2418,1 @@\n-                            ShenandoahPhaseTimings::purge_class_unload);\n+                            ShenandoahPhaseTimings::degen_gc_purge_class_unload);\n@@ -2431,1 +2430,1 @@\n-                            ShenandoahPhaseTimings::purge_cldg);\n+                            ShenandoahPhaseTimings::degen_gc_purge_cldg);\n@@ -2446,1 +2445,1 @@\n-                               ShenandoahPhaseTimings::purge);\n+                               ShenandoahPhaseTimings::degen_gc_purge);\n@@ -2450,1 +2449,1 @@\n-                                               ShenandoahPhaseTimings::purge_weak_par;\n+                                               ShenandoahPhaseTimings::degen_gc_purge_weak_par;\n@@ -2459,1 +2458,1 @@\n-      cleaning_task(timing_phase, &is_alive, &keep_alive, num_workers, is_stw_gc_in_progress());\n+      cleaning_task(timing_phase, &is_alive, &keep_alive, num_workers);\n@@ -2466,1 +2465,1 @@\n-      cleaning_task(timing_phase, &is_alive, &verify_cl, num_workers, is_stw_gc_in_progress());\n+      cleaning_task(timing_phase, &is_alive, &verify_cl, num_workers);\n@@ -2469,1 +2468,1 @@\n-      cleaning_task(timing_phase, &is_alive, &do_nothing_cl, num_workers, is_stw_gc_in_progress());\n+      cleaning_task(timing_phase, &is_alive, &do_nothing_cl, num_workers);\n@@ -2477,0 +2476,1 @@\n+  assert(is_stw_gc_in_progress(), \"Only for Degenerated and Full GC\");\n@@ -2478,3 +2478,1 @@\n-  if (!ShenandoahConcurrentRoots::should_do_concurrent_class_unloading()) {\n-    stw_unload_classes(full_gc);\n-  }\n+  stw_unload_classes(full_gc);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahHeap.cpp","additions":14,"deletions":16,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -43,1 +43,0 @@\n-  bool                      _include_concurrent_roots;\n@@ -49,2 +48,1 @@\n-                                          uint num_workers,\n-                                          bool include_concurrent_roots);\n+                                          uint num_workers);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahParallelCleaning.hpp","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -39,2 +39,1 @@\n-                                                                                                     uint num_workers,\n-                                                                                                     bool include_concurrent_roots) :\n+                                                                                                     uint num_workers) :\n@@ -43,1 +42,1 @@\n-  _is_alive(is_alive), _keep_alive(keep_alive), _include_concurrent_roots(include_concurrent_roots) {\n+  _is_alive(is_alive), _keep_alive(keep_alive) {\n@@ -56,3 +55,1 @@\n-  if (_include_concurrent_roots) {\n-    _weak_processing_task.report_num_dead();\n-  }\n+  _weak_processing_task.report_num_dead();\n@@ -63,3 +60,1 @@\n-  if (_include_concurrent_roots) {\n-    _weak_processing_task.work<IsAlive, KeepAlive>(worker_id, _is_alive, _keep_alive);\n-  }\n+  _weak_processing_task.work<IsAlive, KeepAlive>(worker_id, _is_alive, _keep_alive);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahParallelCleaning.inline.hpp","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -111,2 +111,2 @@\n-    case purge_class_unload:\n-    case purge_weak_par:\n+    case degen_gc_purge_class_unload:\n+    case degen_gc_purge_weak_par:\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -69,6 +69,0 @@\n-  f(purge,                                          \"  System Purge\")                  \\\n-  f(purge_class_unload,                             \"    Unload Classes\")              \\\n-  SHENANDOAH_PAR_PHASE_DO(purge_cu_par_,            \"      CU: \", f)                   \\\n-  f(purge_weak_par,                                 \"    Weak Roots\")                  \\\n-  SHENANDOAH_PAR_PHASE_DO(purge_weak_par_,          \"      WR: \", f)                   \\\n-  f(purge_cldg,                                     \"    CLDG\")                        \\\n@@ -127,0 +121,6 @@\n+  f(degen_gc_purge,                                  \"   System Purge\")                \\\n+  f(degen_gc_purge_class_unload,                     \"     Unload Classes\")            \\\n+  SHENANDOAH_PAR_PHASE_DO(degen_gc_purge_cu_par_,    \"       DCU: \", f)                \\\n+  f(degen_gc_purge_weak_par,                         \"     Weak Roots\")                \\\n+  SHENANDOAH_PAR_PHASE_DO(degen_gc_purge_weak_p_,    \"       DWR: \", f)                \\\n+  f(degen_gc_purge_cldg,                             \"     CLDG\")                      \\\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahPhaseTimings.hpp","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -172,2 +172,0 @@\n-\n-  \/\/ Process light-weight\/limited parallel roots then\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootProcessor.cpp","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -102,3 +102,1 @@\n-    concurrent_weak_roots_do(oops);\n-  } else if (verify(ConcurrentWeakRoots)) {\n-    concurrent_weak_roots_do(oops);\n+    weak_roots_do(oops);\n@@ -158,1 +156,1 @@\n-void ShenandoahRootVerifier::concurrent_weak_roots_do(OopClosure* cl) {\n+void ShenandoahRootVerifier::weak_roots_do(OopClosure* cl) {\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.cpp","additions":2,"deletions":4,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -50,5 +50,3 @@\n-    SerialWeakRoots     = 1 << 4,\n-    ConcurrentWeakRoots = 1 << 5,\n-    WeakRoots           = (SerialWeakRoots | ConcurrentWeakRoots),\n-    StringDedupRoots    = 1 << 6,\n-    JNIHandleRoots      = 1 << 7,\n+    WeakRoots           = 1 << 4,\n+    StringDedupRoots    = 1 << 5,\n+    JNIHandleRoots      = 1 << 6,\n@@ -75,1 +73,1 @@\n-  void concurrent_weak_roots_do(OopClosure* cl);\n+  void weak_roots_do(OopClosure* cl);\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahRootVerifier.hpp","additions":4,"deletions":6,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -718,13 +718,0 @@\n-    switch (weak_roots) {\n-      case _verify_serial_weak_roots:\n-        verifier.excludes(ShenandoahRootVerifier::ConcurrentWeakRoots);\n-        break;\n-      case _verify_concurrent_weak_roots:\n-        verifier.excludes(ShenandoahRootVerifier::SerialWeakRoots);\n-        break;\n-      case _verify_all_weak_roots:\n-        break;\n-      default:\n-        ShouldNotReachHere();\n-    }\n-\n","filename":"src\/hotspot\/share\/gc\/shenandoah\/shenandoahVerifier.cpp","additions":0,"deletions":13,"binary":false,"changes":13,"status":"modified"}]}