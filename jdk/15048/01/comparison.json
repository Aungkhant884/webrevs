{"files":[{"patch":"@@ -112,1 +112,1 @@\n-  bool do_reduce_allocation_merges = ReduceAllocationMerges;\n+  bool do_reduce_allocation_merges = ReduceAllocationMerges && EliminateAllocations;\n","filename":"src\/hotspot\/share\/opto\/c2compiler.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -2324,1 +2324,1 @@\n-        igvn.set_delay_transform(false);\n+        if (failing())  return;\n@@ -2326,0 +2326,1 @@\n+        igvn.set_delay_transform(false);\n","filename":"src\/hotspot\/share\/opto\/compile.cpp","additions":2,"deletions":1,"binary":false,"changes":3,"status":"modified"},{"patch":"@@ -51,1 +51,1 @@\n-  _nodes(C->comp_arena(), ReduceAllocationMerges ? C->unique()*1.10 : C->unique(), C->unique(), nullptr),\n+  _nodes(C->comp_arena(), C->do_reduce_allocation_merges() ? C->unique()*1.10 : C->unique(), C->unique(), nullptr),\n@@ -401,1 +401,1 @@\n-  if (ReduceAllocationMerges && reducible_merges.size() > 0) {\n+  if (reducible_merges.size() > 0) {\n@@ -505,2 +505,3 @@\n-  \/\/ method we might have disabled the compilation and be retrying\n-  \/\/ with RAM disabled.\n+  \/\/ method we might have disabled the compilation and be retrying with RAM\n+  \/\/ disabled.\n+  \/\/ If EliminateAllocations is False, there is no point in reducing merges.\n@@ -723,1 +724,6 @@\n-      assert(false, \"Unexpected use of reducible Phi.\");\n+#ifdef ASSERT\n+      ophi->dump(-3);\n+      assert(false, \"Unexpected user of reducible Phi %d -> %d:%s\", ophi->_idx, use->_idx, use->Name());\n+#endif\n+      _compile->record_failure(C2Compiler::retry_no_reduce_allocation_merges());\n+      return;\n@@ -733,1 +739,1 @@\n-  Unique_Node_List ideal_nodes;\n+  if (!C->do_reduce_allocation_merges()) return;\n@@ -735,0 +741,1 @@\n+  Unique_Node_List ideal_nodes;\n@@ -2299,1 +2306,1 @@\n-        if (ReduceAllocationMerges && use_n->is_Phi() && can_reduce_phi(use_n->as_Phi())) {\n+        if (use_n->is_Phi() && can_reduce_phi(use_n->as_Phi())) {\n@@ -3888,0 +3895,14 @@\n+#ifdef ASSERT\n+  \/\/ At this point reducible Phis shouldn't have AddP users anymore; only SafePoints.\n+  for (uint i = 0; i < reducible_merges.size(); i++ ) {\n+    Node* phi = reducible_merges.at(i);\n+    for (DUIterator_Fast jmax, j = phi->fast_outs(jmax); j < jmax; j++) {\n+      Node *use = phi->fast_out(j);\n+      if (!use->is_SafePoint()) {\n+        phi->dump(-3);\n+        assert(false, \"Unexpected user of reducible Phi -> %s\", use->Name());\n+      }\n+    }\n+  }\n+#endif\n+\n","filename":"src\/hotspot\/share\/opto\/escape.cpp","additions":28,"deletions":7,"binary":false,"changes":35,"status":"modified"}]}