{"files":[{"patch":"@@ -67,3 +67,0 @@\n-    private final static int IPV4_SNDBUF = 65507;\n-    private final static int IPV6_SNDBUF = 65527;\n-    private final static int IPV6_SNDBUF_AIX = 65487;\n@@ -94,1 +91,1 @@\n-                    IPV4_SNDBUF,\n+                    IPSupport.getMaxUDPSendBufSizeIPv4(),\n@@ -99,1 +96,1 @@\n-                    IPV4_SNDBUF,\n+                    IPSupport.getMaxUDPSendBufSizeIPv4(),\n@@ -108,25 +105,10 @@\n-            if (Platform.isAix()) {\n-                testcases.add(new Object[]{\n-                        supplier(() -> DatagramChannel.open()),\n-                        IPV6_SNDBUF_AIX,\n-                        IPv6Addr\n-                });\n-                testcases.add(new Object[]{\n-                        supplier(() -> DatagramChannel.open(INET6)),\n-                        IPV6_SNDBUF_AIX,\n-                        IPv6Addr\n-                });\n-            }\n-            else\n-            {\n-                testcases.add(new Object[]{\n-                        supplier(() -> DatagramChannel.open()),\n-                        IPV6_SNDBUF,\n-                        IPv6Addr\n-                });\n-                testcases.add(new Object[]{\n-                        supplier(() -> DatagramChannel.open(INET6)),\n-                        IPV6_SNDBUF,\n-                        IPv6Addr\n-                });\n-            }\n+            testcases.add(new Object[]{\n+                    supplier(() -> DatagramChannel.open()),\n+                    IPSupport.getMaxUDPSendBufSizeIPv6(),\n+                    IPv6Addr\n+            });\n+            testcases.add(new Object[]{\n+                    supplier(() -> DatagramChannel.open(INET6)),\n+                    IPSupport.getMaxUDPSendBufSizeIPv6(),\n+                    IPv6Addr\n+            });\n@@ -161,1 +143,4 @@\n-                        throw new Error(\"system value \" + receiver.getOption(SO_RCVBUF) + \" for UDP receive buffer too small to hold capacity \" + capacity);\n+                        throw new Error(\"system value \" + \n+                                        receiver.getOption(SO_RCVBUF) + \n+                                        \" for UDP receive buffer too small to hold capacity \" + \n+                                        capacity);\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/SendReceiveMaxSize.java","additions":16,"deletions":31,"binary":false,"changes":47,"status":"modified"},{"patch":"@@ -26,0 +26,2 @@\n+import jdk.test.lib.Platform;\n+\n@@ -51,0 +53,3 @@\n+    private static final int IPV4_SNDBUF = 65507;\n+    private static final int IPV6_SNDBUF = 65527;\n+    private static final int IPV6_SNDBUF_AIX = 65487;\n@@ -114,1 +119,0 @@\n-\n@@ -157,0 +161,18 @@\n+    \/**\n+     * Return current platform's maximum size for IPv4 UDP send buffer\n+     *\/\n+    public static final int getMaxUDPSendBufSizeIPv4() {\n+        return IPV4_SNDBUF;\n+    }\n+\n+    \/**\n+     * Return current platform's maximum size for IPv6 UDP send buffer\n+     *\/\n+    public static final int getMaxUDPSendBufSizeIPv6() {\n+        if (Platform.isAix()) {\n+            return IPV6_SNDBUF_AIX;\n+        }\n+        else {\n+            return IPV6_SNDBUF;\n+        }\n+    }\n","filename":"test\/lib\/jdk\/test\/lib\/net\/IPSupport.java","additions":23,"deletions":1,"binary":false,"changes":24,"status":"modified"}]}