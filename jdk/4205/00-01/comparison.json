{"files":[{"patch":"@@ -2964,0 +2964,15 @@\n+\/\/ Check numa dependent syscalls\n+static bool numa_syscall_check() {\n+  \/\/ NUMA APIs depend on several syscalls. E.g., get_mempolicy is required for numa_get_membind and\n+  \/\/ numa_get_interleave_mask. But these dependent syscalls can be unsupported for various reasons.\n+  \/\/ Especially in dockers, get_mempolicy is not allowed with the default configuration. So it's necessary\n+  \/\/ to check whether the syscalls are available. Currently, only get_mempolicy is checked since checking\n+  \/\/ others like mbind would cause unexpected side effects.\n+  int dummy = 0;\n+  if (syscall(SYS_get_mempolicy, &dummy, NULL, 0, (void*)&dummy, 3) == -1) {\n+    return false;\n+  }\n+\n+  return true;\n+}\n+\n@@ -4481,15 +4496,0 @@\n-\/\/ Check numa dependent syscalls\n-bool os::Linux::numa_syscall_check() {\n-  \/\/ NUMA APIs depend on several syscalls. E.g., get_mempolicy is required for numa_get_membind and\n-  \/\/ numa_get_interleave_mask. But these dependent syscalls can be unsupported for various reasons.\n-  \/\/ Especially in dockers, get_mempolicy is not allowed with the default configuration. So it's necessary\n-  \/\/ to check whether the syscalls are available. Currently, only get_mempolicy is checked since checking\n-  \/\/ others like mbind would cause unexpected side effects.\n-  int dummy = 0;\n-  if (syscall(SYS_get_mempolicy, &dummy, NULL, 0, (void*)&dummy, 3) == -1) {\n-    return false;\n-  }\n-\n-  return true;\n-}\n-\n","filename":"src\/hotspot\/os\/linux\/os_linux.cpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -183,1 +183,0 @@\n-  static bool numa_syscall_check();\n","filename":"src\/hotspot\/os\/linux\/os_linux.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}