{"files":[{"patch":"@@ -92,1 +92,1 @@\n-    public void start() {\n+    public void start() throws Exception {\n@@ -94,7 +94,25 @@\n-\n-        try {\n-            robot = new Robot();\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"The test failed.\", e);\n-        }\n+        robot = new Robot();\n+        robot.waitForIdle();\n+\n+        EventQueue.invokeAndWait(() -> {\n+            srcPoint = list.getLocationOnScreen();\n+            cellBounds = list.getCellBounds(0, 0);\n+        });\n+\n+        srcPoint.translate(cellBounds.x + cellBounds.width \/ 2,\n+                           cellBounds.y + cellBounds.height \/ 2);\n+\n+        EventQueue.invokeAndWait(() -> {\n+            dstPoint = panel.getLocationOnScreen();\n+            d = panel.getSize();\n+        });\n+        dstPoint.translate(d.width \/ 2, d.height \/ 2);\n+\n+        for (int delay = 8; delay < 10000 && !panel.getResult(); delay *= 2) {\n+            System.err.println(\"attempt to drag with delay \" + delay);\n+            robot.mouseMove(srcPoint.x, srcPoint.y);\n+            robot.mousePress(InputEvent.BUTTON1_MASK);\n+            mouse1Pressed = true;\n+            robot.waitForIdle();\n+            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+            mouse1Pressed = false;\n@@ -103,47 +121,11 @@\n-        try {\n-            EventQueue.invokeAndWait(() -> {\n-                srcPoint = list.getLocationOnScreen();\n-                cellBounds = list.getCellBounds(0, 0);\n-            });\n-\n-            srcPoint.translate(cellBounds.x + cellBounds.width \/ 2,\n-                               cellBounds.y + cellBounds.height \/ 2);\n-\n-            EventQueue.invokeAndWait(() -> {\n-                dstPoint = panel.getLocationOnScreen();\n-                d = panel.getSize();\n-            });\n-            dstPoint.translate(d.width \/ 2, d.height \/ 2);\n-\n-            for (int delay = 8; delay < 10000 && !panel.getResult(); delay *= 2) {\n-                System.err.println(\"attempt to drag with delay \" + delay);\n-                robot.mouseMove(srcPoint.x, srcPoint.y);\n-                robot.mousePress(InputEvent.BUTTON1_MASK);\n-                mouse1Pressed = true;\n-                robot.waitForIdle();\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-                mouse1Pressed = false;\n-                robot.waitForIdle();\n-\n-                robot.keyPress(KeyEvent.VK_CONTROL);\n-                ctrlPressed = true;\n-                robot.mousePress(InputEvent.BUTTON1_MASK);\n-                mouse1Pressed = true;\n-\n-                Point p = new Point(srcPoint);\n-                while (!p.equals(dstPoint)) {\n-                    p.translate(sign(dstPoint.x - p.x),\n-                                sign(dstPoint.y - p.y));\n-                    robot.mouseMove(p.x, p.y);\n-                    Thread.sleep(delay);\n-                }\n-            }\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"The test failed.\", e);\n-        } finally {\n-            if (mouse1Pressed) {\n-                robot.mouseRelease(InputEvent.BUTTON1_MASK);\n-            }\n-            if (ctrlPressed) {\n-                robot.keyRelease(KeyEvent.VK_CONTROL);\n+            robot.keyPress(KeyEvent.VK_CONTROL);\n+            ctrlPressed = true;\n+            robot.mousePress(InputEvent.BUTTON1_MASK);\n+            mouse1Pressed = true;\n+\n+            Point p = new Point(srcPoint);\n+            while (!p.equals(dstPoint)) {\n+                p.translate(sign(dstPoint.x - p.x),\n+                            sign(dstPoint.y - p.y));\n+                robot.mouseMove(p.x, p.y);\n+                robot.delay(delay);\n@@ -152,0 +134,6 @@\n+        if (mouse1Pressed) {\n+            robot.mouseRelease(InputEvent.BUTTON1_MASK);\n+        }\n+        if (ctrlPressed) {\n+            robot.keyRelease(KeyEvent.VK_CONTROL);\n+        }\n","filename":"test\/jdk\/java\/awt\/dnd\/DragTriggerEventTest.java","additions":43,"deletions":55,"binary":false,"changes":98,"status":"modified"},{"patch":"@@ -101,7 +101,9 @@\n-    public void start() {\n-        try {\n-            Robot robot = new Robot();\n-            Thread.sleep(1000);\n-            robot.mouseMove(250, 250);\n-            robot.mousePress(InputEvent.BUTTON1_MASK);\n-            for (int y = 250; y < 350; y+=5) {\n+    public void start() throws Exception {\n+        Robot robot = new Robot();\n+        robot.waitForIdle();\n+        Thread.sleep(1000);\n+        robot.mouseMove(250, 250);\n+        robot.waitForIdle();\n+        robot.mousePress(InputEvent.BUTTON1_MASK);\n+        robot.waitForIdle();\n+        for (int y = 250; y < 350; y+=5) {\n@@ -109,1 +111,1 @@\n-                Thread.sleep(100);\n+                robot.delay(100);\n@@ -112,4 +114,0 @@\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-            throw new RuntimeException(\"The test failed.\");\n-        }\n","filename":"test\/jdk\/java\/awt\/dnd\/DropActionChangedTest.java","additions":10,"deletions":12,"binary":false,"changes":22,"status":"modified"}]}