{"files":[{"patch":"@@ -24,2 +24,2 @@\n-import jdk.incubator.foreign.MemorySegment;\n-import jdk.incubator.foreign.ResourceScope;\n+import java.lang.foreign.MemorySegment;\n+import java.lang.foreign.MemorySession;\n@@ -33,0 +33,1 @@\n+import static java.nio.file.StandardOpenOption.*;\n@@ -36,0 +37,1 @@\n+ * @enablePreview\n@@ -40,0 +42,1 @@\n+ * @run main\/othervm LargeMapTest\n@@ -42,0 +45,1 @@\n+    private static final String FILE = \"test.dat\";\n@@ -51,4 +55,1 @@\n-        Path p = Path.of(\"test.dat\");\n-        RandomAccessFile raf = new RandomAccessFile(\"test.dat\", \"rw\");\n-        raf.setLength(LENGTH); \/\/~8gb\n-        raf.close();\n+        Path p = Path.of(FILE);\n@@ -56,1 +57,3 @@\n-\n+        try (RandomAccessFile raf = new RandomAccessFile(FILE, \"rw\");) {\n+            raf.setLength(LENGTH); \/\/~8gb\n+        }\n@@ -61,4 +64,5 @@\n-        MemorySegment mbb = MemorySegment.ofByteBuffer(bb);\n-        MemorySegment mappedMemorySegment = MemorySegment.mapFile(p, 0,\n-            p.toFile().length(), FileChannel.MapMode.READ_WRITE,\n-            ResourceScope.newSharedScope());\n+        try (FileChannel fc = FileChannel.open(p, READ, WRITE);) {\n+            MemorySegment mbb = MemorySegment.ofByteBuffer(bb);\n+            MemorySegment mappedMemorySegment =\n+                fc.map(FileChannel.MapMode.READ_WRITE, 0, p.toFile().length(),\n+                       MemorySession.openImplicit());\n@@ -66,5 +70,8 @@\n-        while (offset < LENGTH) {\n-            System.out.println(\"offset: \" + offset);\n-            MemorySegment target = mappedMemorySegment.asSlice(offset, BUFSIZ);\n-            offset = offset + BUFSIZ;\n-            target.copyFrom(mbb);\n+            final int interval = BUFSIZ*1000;\n+            while (offset < LENGTH) {\n+                if (offset % interval == 0)\n+                    System.out.println(\"offset: \" + offset);\n+                MemorySegment target = mappedMemorySegment.asSlice(offset, BUFSIZ);\n+                offset = offset + BUFSIZ;\n+                target.copyFrom(mbb);\n+            }\n","filename":"test\/jdk\/java\/nio\/channels\/FileChannel\/LargeMapTest.java","additions":23,"deletions":16,"binary":false,"changes":39,"status":"modified"}]}