{"files":[{"patch":"@@ -39,1 +39,0 @@\n-  int hash() const { return _call_stack.hash(); }\n","filename":"src\/hotspot\/share\/services\/allocationSite.hpp","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"},{"patch":"@@ -84,1 +84,1 @@\n-  int index = hash_to_index(stack.hash());\n+  int index = hash_to_index(entry.hash());\n@@ -120,1 +120,2 @@\n-  unsigned int index = hash_to_index(key.hash());\n+  const unsigned int hash = key.calculate_hash();\n+  const unsigned int index = hash_to_index(hash);\n@@ -140,3 +141,5 @@\n-    MallocSite* site = head->data();\n-    if (site->flag() == flags && site->equals(key)) {\n-      return head->data();\n+    if (head->hash() == hash) {\n+      MallocSite* site = head->data();\n+      if (site->flag() == flags && site->equals(key)) {\n+        return head->data();\n+      }\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.cpp","additions":8,"deletions":5,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -60,0 +60,1 @@\n+  const unsigned int                 _hash;\n@@ -65,1 +66,1 @@\n-    _malloc_site(stack, flags), _next(NULL) {\n+    _malloc_site(stack, flags), _hash(stack.calculate_hash()), _next(NULL) {\n@@ -78,0 +79,2 @@\n+  unsigned int hash() const { return _hash; }\n+\n","filename":"src\/hotspot\/share\/services\/mallocSiteTable.hpp","additions":4,"deletions":1,"binary":false,"changes":5,"status":"modified"},{"patch":"@@ -33,10 +33,1 @@\n-static unsigned int calculate_hash(address stack[NMT_TrackingStackDepth]) {\n-  uintptr_t hash = 0;\n-  for (int i = 0; i < NMT_TrackingStackDepth; i++) {\n-    hash += (uintptr_t)stack[i];\n-  }\n-  return hash;\n-}\n-\n-NativeCallStack::NativeCallStack(int toSkip) :\n-  _hash_value(0) {\n+NativeCallStack::NativeCallStack(int toSkip) {\n@@ -58,1 +49,0 @@\n-  _hash_value = calculate_hash(_stack);\n@@ -71,1 +61,0 @@\n-  _hash_value = calculate_hash(_stack);\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.cpp","additions":1,"deletions":12,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -59,1 +59,0 @@\n-  unsigned int  _hash_value;\n@@ -64,1 +63,1 @@\n-  NativeCallStack() : _hash_value(0) {\n+  NativeCallStack() {\n@@ -86,3 +85,0 @@\n-    \/\/ compare hash values\n-    if (hash() != other.hash()) return false;\n-    \/\/ compare each frame\n@@ -97,1 +93,8 @@\n-  unsigned int hash() const { return _hash_value; }\n+  \/\/ Helper; calculates a hash value over the stack frames in this stack\n+  unsigned int calculate_hash() const {\n+    uintptr_t hash = 0;\n+    for (int i = 0; i < NMT_TrackingStackDepth; i++) {\n+      hash += (uintptr_t)_stack[i];\n+    }\n+    return hash;\n+  }\n","filename":"src\/hotspot\/share\/utilities\/nativeCallStack.hpp","additions":9,"deletions":6,"binary":false,"changes":15,"status":"modified"},{"patch":"@@ -88,1 +88,0 @@\n-runtime\/NMT\/CheckForProperDetailStackTrace.java 8261520 generic-all\n","filename":"test\/hotspot\/jtreg\/ProblemList.txt","additions":0,"deletions":1,"binary":false,"changes":1,"status":"modified"}]}