{"files":[{"patch":"@@ -2605,3 +2605,1 @@\n-        \/\/ We succeeded to pop just one frame. When we continue, we will call dontinline_brkpt() again.\n-        Asserts.assertTrue(coughtOom || !env.targetVMOptions.EliminateAllocations,\n-                           \"PopFrame should have triggered an OOM exception in target\");\n+        \/\/ We succeeded to pop just one frame if OOM was raised. When we continue, we will call dontinline_brkpt() again.\n@@ -2609,1 +2607,1 @@\n-                env.targetVMOptions.EliminateAllocations ? \"dontinline_consume_all_memory_brkpt\" : \"dontinline_testMethod\";\n+                env.targetVMOptions.EliminateAllocations && coughtOom ? \"dontinline_consume_all_memory_brkpt\" : \"dontinline_testMethod\";\n@@ -2697,2 +2695,0 @@\n-        Asserts.assertTrue(coughtOom || !env.targetVMOptions.EliminateAllocations,\n-                           \"PopFrame should have triggered an OOM exception in target\");\n@@ -2700,1 +2696,1 @@\n-                env.targetVMOptions.EliminateAllocations ? \"inlinedCallForcedToReturn\" : \"dontinline_testMethod\";\n+                env.targetVMOptions.EliminateAllocations && coughtOom ? \"inlinedCallForcedToReturn\" : \"dontinline_testMethod\";\n@@ -2951,1 +2947,1 @@\n-        if (env.targetVMOptions.EliminateAllocations) {\n+        if (coughtOom) {\n@@ -2953,1 +2949,0 @@\n-            Asserts.assertTrue(coughtOom, \"ForceEarlyReturn should have triggered an OOM exception in target\");\n","filename":"test\/jdk\/com\/sun\/jdi\/EATests.java","additions":4,"deletions":9,"binary":false,"changes":13,"status":"modified"}]}