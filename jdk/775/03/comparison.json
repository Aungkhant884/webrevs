{"files":[{"patch":"@@ -29,2 +29,0 @@\n-\n-com\/sun\/jdi\/EATests.java#id0 8255072 generic-all\n","filename":"test\/jdk\/ProblemList-zgc.txt","additions":0,"deletions":2,"binary":false,"changes":2,"status":"modified"},{"patch":"@@ -150,0 +150,1 @@\n+import sun.hotspot.gc.GC;\n@@ -300,0 +301,1 @@\n+        public final boolean ZGCIsSelected;\n@@ -312,0 +314,2 @@\n+            val = testCaseBaseTargetClass.getValue(testCaseBaseTargetClass.fieldByName(\"ZGCIsSelected\"));\n+            ZGCIsSelected = ((PrimitiveValue) val).booleanValue();\n@@ -777,4 +781,5 @@\n-    public static final boolean UseJVMCICompiler     = unbox(WB.getBooleanVMFlag(\"UseJVMCICompiler\"), false); \/\/ read by debugger\n-    public static final boolean DoEscapeAnalysis     = unbox(WB.getBooleanVMFlag(\"DoEscapeAnalysis\"), UseJVMCICompiler);\n-    public static final boolean EliminateAllocations = unbox(WB.getBooleanVMFlag(\"EliminateAllocations\"), UseJVMCICompiler); \/\/ read by debugger\n-    public static final boolean DeoptimizeObjectsALot   = WB.getBooleanVMFlag(\"DeoptimizeObjectsALot\");                      \/\/ read by debugger\n+    \/\/ Some of the fields are only read by the debugger\n+    public static final boolean UseJVMCICompiler = unbox(WB.getBooleanVMFlag(\"UseJVMCICompiler\"), false);\n+    public static final boolean DoEscapeAnalysis = unbox(WB.getBooleanVMFlag(\"DoEscapeAnalysis\"), UseJVMCICompiler);\n+    public static final boolean EliminateAllocations = unbox(WB.getBooleanVMFlag(\"EliminateAllocations\"), UseJVMCICompiler);\n+    public static final boolean DeoptimizeObjectsALot = WB.getBooleanVMFlag(\"DeoptimizeObjectsALot\");\n@@ -783,0 +788,1 @@\n+    public static final boolean ZGCIsSelected = GC.Z.isSelected();\n@@ -1082,1 +1088,1 @@\n-            this.array = new long[size];\n+            this.array = size > 0 ? new long[size] : null;\n@@ -1092,1 +1098,1 @@\n-        while(size > 0) {\n+        while(true) {\n@@ -1098,0 +1104,1 @@\n+                if (size == 0) break;\n@@ -2606,4 +2613,2 @@\n-        Asserts.assertTrue(coughtOom || !env.targetVMOptions.EliminateAllocations,\n-                           \"PopFrame should have triggered an OOM exception in target\");\n-        String expectedTopFrame =\n-                env.targetVMOptions.EliminateAllocations ? \"dontinline_consume_all_memory_brkpt\" : \"dontinline_testMethod\";\n+        Asserts.assertTrue(coughtOom, \"PopFrame should have triggered an OOM exception in target\");\n+        String expectedTopFrame = \"dontinline_consume_all_memory_brkpt\";\n@@ -2618,1 +2623,6 @@\n-        return super.shouldSkip() || env.targetVMOptions.DeoptimizeObjectsALot || env.targetVMOptions.UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !env.targetVMOptions.EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                env.targetVMOptions.ZGCIsSelected ||\n+                env.targetVMOptions.DeoptimizeObjectsALot ||\n+                env.targetVMOptions.UseJVMCICompiler;\n@@ -2658,1 +2668,6 @@\n-        return super.shouldSkip() || DeoptimizeObjectsALot || UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                ZGCIsSelected ||\n+                DeoptimizeObjectsALot ||\n+                UseJVMCICompiler;\n@@ -2697,4 +2712,2 @@\n-        Asserts.assertTrue(coughtOom || !env.targetVMOptions.EliminateAllocations,\n-                           \"PopFrame should have triggered an OOM exception in target\");\n-        String expectedTopFrame =\n-                env.targetVMOptions.EliminateAllocations ? \"inlinedCallForcedToReturn\" : \"dontinline_testMethod\";\n+        Asserts.assertTrue(coughtOom, \"PopFrame should have triggered an OOM exception in target\");\n+        String expectedTopFrame = \"inlinedCallForcedToReturn\";\n@@ -2708,1 +2721,6 @@\n-        return super.shouldSkip() || env.targetVMOptions.DeoptimizeObjectsALot || env.targetVMOptions.UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !env.targetVMOptions.EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                env.targetVMOptions.ZGCIsSelected ||\n+                env.targetVMOptions.DeoptimizeObjectsALot ||\n+                env.targetVMOptions.UseJVMCICompiler;\n@@ -2764,1 +2782,6 @@\n-        return super.shouldSkip() || DeoptimizeObjectsALot || UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                ZGCIsSelected ||\n+                DeoptimizeObjectsALot ||\n+                UseJVMCICompiler;\n@@ -2951,6 +2974,4 @@\n-        if (env.targetVMOptions.EliminateAllocations) {\n-            printStack(thread);\n-            Asserts.assertTrue(coughtOom, \"ForceEarlyReturn should have triggered an OOM exception in target\");\n-            msg(\"ForceEarlyReturn(2)\");\n-            thread.forceEarlyReturn(env.vm().mirrorOf(43));\n-        }\n+        Asserts.assertTrue(coughtOom, \"ForceEarlyReturn should have triggered an OOM exception in target\");\n+        printStack(thread);\n+        msg(\"ForceEarlyReturn(2)\");\n+        thread.forceEarlyReturn(env.vm().mirrorOf(43));\n@@ -2967,1 +2988,6 @@\n-        return super.shouldSkip() || env.targetVMOptions.DeoptimizeObjectsALot || env.targetVMOptions.UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !env.targetVMOptions.EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                env.targetVMOptions.ZGCIsSelected ||\n+                env.targetVMOptions.DeoptimizeObjectsALot ||\n+                env.targetVMOptions.UseJVMCICompiler;\n@@ -3024,1 +3050,6 @@\n-        return super.shouldSkip() || DeoptimizeObjectsALot || UseJVMCICompiler;\n+        return super.shouldSkip() ||\n+                !EliminateAllocations ||\n+                \/\/ With ZGC the OOME is not always thrown as expected\n+                ZGCIsSelected ||\n+                DeoptimizeObjectsALot ||\n+                UseJVMCICompiler;\n","filename":"test\/jdk\/com\/sun\/jdi\/EATests.java","additions":57,"deletions":26,"binary":false,"changes":83,"status":"modified"}]}