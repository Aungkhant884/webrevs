{"files":[{"patch":"@@ -28,2 +28,1 @@\n-#include \"metaprogramming\/logical.hpp\"\n-#include <type_traits>\n+#include \"utilities\/globalDefinitions.hpp\"\n@@ -31,5 +30,1 @@\n-\/\/ Retained temporarily for backward compatibility.\n-\/\/ For function template SFINAE, use the ENABLE_IF macro below.\n-\/\/ For class template SFINAE, use std::enable_if_t directly.\n-template<bool cond, typename T = void>\n-using EnableIf = std::enable_if<cond, T>;\n+#include <type_traits>\n","filename":"src\/hotspot\/share\/metaprogramming\/enableIf.hpp","additions":2,"deletions":7,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+#include <type_traits>\n+\n@@ -209,1 +211,1 @@\n-    static typename EnableIf<\n+    static std::enable_if_t<\n@@ -211,1 +213,1 @@\n-      FunctionPointerT>::type\n+      FunctionPointerT>\n@@ -232,1 +234,1 @@\n-    static typename EnableIf<\n+    static std::enable_if_t<\n@@ -234,1 +236,1 @@\n-      FunctionPointerT>::type\n+      FunctionPointerT>\n","filename":"src\/hotspot\/share\/oops\/access.inline.hpp","additions":6,"deletions":4,"binary":false,"changes":10,"status":"modified"},{"patch":"@@ -194,3 +194,3 @@\n-  static inline typename EnableIf<\n-    AccessInternal::MustConvertCompressedOop<idecorators, T>::value,\n-    typename HeapOopType<idecorators>::type>::type\n+  static inline std::enable_if_t<\n+    AccessInternal::MustConvertCompressedOop<idecorators, T>,\n+    typename HeapOopType<idecorators>::type>\n@@ -200,2 +200,2 @@\n-  static inline typename EnableIf<\n-    !AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>::type\n+  static inline std::enable_if_t<\n+    !AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>\n@@ -214,2 +214,2 @@\n-  static inline typename EnableIf<\n-    AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>::type\n+  static inline std::enable_if_t<\n+    AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>\n@@ -219,2 +219,2 @@\n-  static inline typename EnableIf<\n-    !AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>::type\n+  static inline std::enable_if_t<\n+    !AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>\n@@ -232,2 +232,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_SEQ_CST>::value, T>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_SEQ_CST>::value, T>\n@@ -237,2 +237,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_ACQUIRE>::value, T>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_ACQUIRE>::value, T>\n@@ -242,2 +242,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_RELAXED>::value, T>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_RELAXED>::value, T>\n@@ -247,2 +247,2 @@\n-  static inline typename EnableIf<\n-    HasDecorator<ds, MO_UNORDERED>::value, T>::type\n+  static inline std::enable_if_t<\n+    HasDecorator<ds, MO_UNORDERED>::value, T>\n@@ -254,2 +254,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_SEQ_CST>::value>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_SEQ_CST>::value>\n@@ -259,2 +259,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_RELEASE>::value>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_RELEASE>::value>\n@@ -264,2 +264,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_RELAXED>::value>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_RELAXED>::value>\n@@ -269,2 +269,2 @@\n-  static inline typename EnableIf<\n-    HasDecorator<ds, MO_UNORDERED>::value>::type\n+  static inline std::enable_if_t<\n+    HasDecorator<ds, MO_UNORDERED>::value>\n@@ -276,2 +276,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_SEQ_CST>::value, T>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_SEQ_CST>::value, T>\n@@ -281,2 +281,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_RELAXED>::value, T>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_RELAXED>::value, T>\n@@ -286,2 +286,2 @@\n-  static typename EnableIf<\n-    HasDecorator<ds, MO_SEQ_CST>::value, T>::type\n+  static std::enable_if_t<\n+    HasDecorator<ds, MO_SEQ_CST>::value, T>\n@@ -295,2 +295,2 @@\n-  static inline typename EnableIf<\n-    !AccessInternal::PossiblyLockedAccess<T>::value, T>::type\n+  static inline std::enable_if_t<\n+    !AccessInternal::PossiblyLockedAccess<T>::value, T>\n@@ -302,2 +302,2 @@\n-  static typename EnableIf<\n-    AccessInternal::PossiblyLockedAccess<T>::value, T>::type\n+  static std::enable_if_t<\n+    AccessInternal::PossiblyLockedAccess<T>::value, T>\n@@ -307,2 +307,2 @@\n-  static inline typename EnableIf<\n-    !AccessInternal::PossiblyLockedAccess<T>::value, T>::type\n+  static inline std::enable_if_t<\n+    !AccessInternal::PossiblyLockedAccess<T>::value, T>\n@@ -314,2 +314,2 @@\n-  static typename EnableIf<\n-    AccessInternal::PossiblyLockedAccess<T>::value, T>::type\n+  static std::enable_if_t<\n+    AccessInternal::PossiblyLockedAccess<T>::value, T>\n@@ -649,2 +649,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value>\n@@ -661,2 +661,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value>\n@@ -674,2 +674,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value>\n@@ -686,2 +686,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value>\n@@ -693,2 +693,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value>\n@@ -705,2 +705,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, T>\n@@ -717,2 +717,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, T>\n@@ -730,2 +730,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value, T>\n@@ -742,2 +742,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value, T>\n@@ -749,2 +749,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value, T>\n@@ -761,2 +761,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, T>\n@@ -773,2 +773,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, T>\n@@ -786,2 +786,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value, T>\n@@ -798,2 +798,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value, T>\n@@ -805,2 +805,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value, T>\n@@ -817,2 +817,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, T>\n@@ -829,2 +829,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, T>\n@@ -842,2 +842,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value, T>\n@@ -854,2 +854,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value, T>\n@@ -861,2 +861,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value, T>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value, T>\n@@ -873,2 +873,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, bool>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && CanHardwireRaw<decorators>::value, bool>\n@@ -891,2 +891,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, bool>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value && !CanHardwireRaw<decorators>::value, bool>\n@@ -910,2 +910,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value, bool>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value, bool>\n@@ -928,2 +928,2 @@\n-    inline static typename EnableIf<\n-      HasDecorator<decorators, AS_RAW>::value>::type\n+    inline static std::enable_if_t<\n+      HasDecorator<decorators, AS_RAW>::value>\n@@ -936,2 +936,2 @@\n-    inline static typename EnableIf<\n-      !HasDecorator<decorators, AS_RAW>::value>::type\n+    inline static std::enable_if_t<\n+      !HasDecorator<decorators, AS_RAW>::value>\n","filename":"src\/hotspot\/share\/oops\/accessBackend.hpp","additions":89,"deletions":89,"binary":false,"changes":178,"status":"modified"},{"patch":"@@ -37,0 +37,2 @@\n+#include <type_traits>\n+\n@@ -39,2 +41,2 @@\n-inline typename EnableIf<\n-  AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>::type\n+inline std::enable_if_t<\n+  AccessInternal::MustConvertCompressedOop<idecorators, T>::value, T>\n@@ -51,1 +53,1 @@\n-inline typename EnableIf<\n+inline std::enable_if_t<\n@@ -53,1 +55,1 @@\n-  typename HeapOopType<idecorators>::type>::type\n+  typename HeapOopType<idecorators>::type>\n@@ -135,2 +137,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_SEQ_CST>::value, T>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_SEQ_CST>::value, T>\n@@ -146,2 +148,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_ACQUIRE>::value, T>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_ACQUIRE>::value, T>\n@@ -154,2 +156,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_RELAXED>::value, T>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_RELAXED>::value, T>\n@@ -162,2 +164,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_SEQ_CST>::value>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_SEQ_CST>::value>\n@@ -170,2 +172,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_RELEASE>::value>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_RELEASE>::value>\n@@ -178,2 +180,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_RELAXED>::value>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_RELAXED>::value>\n@@ -186,2 +188,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_RELAXED>::value, T>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_RELAXED>::value, T>\n@@ -197,2 +199,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_SEQ_CST>::value, T>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_SEQ_CST>::value, T>\n@@ -208,2 +210,2 @@\n-inline typename EnableIf<\n-  HasDecorator<ds, MO_SEQ_CST>::value, T>::type\n+inline std::enable_if_t<\n+  HasDecorator<ds, MO_SEQ_CST>::value, T>\n@@ -221,2 +223,2 @@\n-inline typename EnableIf<\n-  AccessInternal::PossiblyLockedAccess<T>::value, T>::type\n+inline std::enable_if_t<\n+  AccessInternal::PossiblyLockedAccess<T>::value, T>\n@@ -237,2 +239,2 @@\n-inline typename EnableIf<\n-  AccessInternal::PossiblyLockedAccess<T>::value, T>::type\n+inline std::enable_if_t<\n+  AccessInternal::PossiblyLockedAccess<T>::value, T>\n@@ -257,2 +259,2 @@\n-  static inline typename EnableIf<\n-    HasDecorator<decorators, INTERNAL_VALUE_IS_OOP>::value>::type\n+  static inline std::enable_if_t<\n+    HasDecorator<decorators, INTERNAL_VALUE_IS_OOP>::value>\n@@ -276,1 +278,1 @@\n-  static inline typename EnableIf<\n+  static inline std::enable_if_t<\n@@ -278,1 +280,1 @@\n-    HasDecorator<decorators, ARRAYCOPY_ARRAYOF>::value>::type\n+    HasDecorator<decorators, ARRAYCOPY_ARRAYOF>::value>\n@@ -289,1 +291,1 @@\n-  static inline typename EnableIf<\n+  static inline std::enable_if_t<\n@@ -291,1 +293,1 @@\n-    HasDecorator<decorators, ARRAYCOPY_DISJOINT>::value && IsHeapWordSized<T>::value>::type\n+    HasDecorator<decorators, ARRAYCOPY_DISJOINT>::value && IsHeapWordSized<T>::value>\n@@ -307,1 +309,1 @@\n-  static inline typename EnableIf<\n+  static inline std::enable_if_t<\n@@ -311,1 +313,1 @@\n-    !HasDecorator<decorators, ARRAYCOPY_ATOMIC>::value>::type\n+    !HasDecorator<decorators, ARRAYCOPY_ATOMIC>::value>\n@@ -322,1 +324,1 @@\n-  static inline typename EnableIf<\n+  static inline std::enable_if_t<\n@@ -326,1 +328,1 @@\n-    HasDecorator<decorators, ARRAYCOPY_ATOMIC>::value>::type\n+    HasDecorator<decorators, ARRAYCOPY_ATOMIC>::value>\n","filename":"src\/hotspot\/share\/oops\/accessBackend.inline.hpp","additions":38,"deletions":36,"binary":false,"changes":74,"status":"modified"},{"patch":"@@ -396,1 +396,1 @@\n-  typename EnableIf<IsIntegral<T>::value || IsPointer<T>::value>::type>\n+  std::enable_if_t<IsIntegral<T>::value || IsPointer<T>::value>>\n@@ -415,1 +415,1 @@\n-  typename EnableIf<PrimitiveConversions::Translate<T>::value>::type>\n+  std::enable_if_t<PrimitiveConversions::Translate<T>::value>>\n@@ -448,1 +448,1 @@\n-  typename EnableIf<IsIntegral<T>::value>::type>\n+  std::enable_if_t<IsIntegral<T>::value>>\n@@ -465,1 +465,1 @@\n-  typename EnableIf<Atomic::IsPointerConvertible<T*, D*>::value>::type>\n+  std::enable_if_t<Atomic::IsPointerConvertible<T*, D*>::value>>\n@@ -484,1 +484,1 @@\n-  typename EnableIf<PrimitiveConversions::Translate<T>::value>::type>\n+  std::enable_if_t<PrimitiveConversions::Translate<T>::value>>\n@@ -679,1 +679,1 @@\n-  typename EnableIf<IsIntegral<I>::value &&\n+  std::enable_if_t<IsIntegral<I>::value &&\n@@ -682,1 +682,1 @@\n-                    (IsSigned<I>::value == IsSigned<D>::value)>::type>\n+                    (IsSigned<I>::value == IsSigned<D>::value)>>\n@@ -697,1 +697,1 @@\n-  typename EnableIf<IsIntegral<I>::value && (sizeof(I) <= sizeof(P*))>::type>\n+  std::enable_if_t<IsIntegral<I>::value && (sizeof(I) <= sizeof(P*))>>\n@@ -772,1 +772,1 @@\n-  typename EnableIf<IsIntegral<T>::value>::type>\n+  std::enable_if_t<IsIntegral<T>::value>>\n@@ -796,1 +796,1 @@\n-  typename EnableIf<Atomic::IsPointerConvertible<T*, D*>::value &&\n+  std::enable_if_t<Atomic::IsPointerConvertible<T*, D*>::value &&\n@@ -798,1 +798,1 @@\n-                           std::remove_cv_t<U>>::value>::type>\n+                           std::remove_cv_t<U>>::value>>\n@@ -821,1 +821,1 @@\n-  typename EnableIf<PrimitiveConversions::Translate<T>::value>::type>\n+  std::enable_if_t<PrimitiveConversions::Translate<T>::value>>\n@@ -907,1 +907,1 @@\n-  typename EnableIf<IsIntegral<T>::value>::type>\n+  std::enable_if_t<IsIntegral<T>::value>>\n@@ -923,1 +923,1 @@\n-  typename EnableIf<Atomic::IsPointerConvertible<T*, D*>::value>::type>\n+  std::enable_if_t<Atomic::IsPointerConvertible<T*, D*>::value>>\n@@ -942,1 +942,1 @@\n-  typename EnableIf<PrimitiveConversions::Translate<T>::value>::type>\n+  std::enable_if_t<PrimitiveConversions::Translate<T>::value>>\n","filename":"src\/hotspot\/share\/runtime\/atomic.hpp","additions":15,"deletions":15,"binary":false,"changes":30,"status":"modified"},{"patch":"@@ -34,0 +34,2 @@\n+#include <type_traits>\n+\n@@ -76,1 +78,1 @@\n-static typename EnableIf<IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<IsSame<Receiver, Base>::value, void>\n@@ -82,1 +84,1 @@\n-static typename EnableIf<!IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<!IsSame<Receiver, Base>::value, void>\n@@ -97,1 +99,1 @@\n-static typename EnableIf<IsSame<Receiver, Base>::value, bool>::type\n+static std::enable_if_t<IsSame<Receiver, Base>::value, bool>\n@@ -103,1 +105,1 @@\n-static typename EnableIf<!IsSame<Receiver, Base>::value, bool>::type\n+static std::enable_if_t<!IsSame<Receiver, Base>::value, bool>\n@@ -116,1 +118,1 @@\n-static typename EnableIf<IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<IsSame<Receiver, Base>::value, void>\n@@ -122,1 +124,1 @@\n-static typename EnableIf<!IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<!IsSame<Receiver, Base>::value, void>\n@@ -135,1 +137,1 @@\n-static typename EnableIf<IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<IsSame<Receiver, Base>::value, void>\n@@ -141,1 +143,1 @@\n-static typename EnableIf<!IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<!IsSame<Receiver, Base>::value, void>\n@@ -154,1 +156,1 @@\n-static typename EnableIf<IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<IsSame<Receiver, Base>::value, void>\n@@ -160,1 +162,1 @@\n-static typename EnableIf<!IsSame<Receiver, Base>::value, void>::type\n+static std::enable_if_t<!IsSame<Receiver, Base>::value, void>\n","filename":"src\/hotspot\/share\/utilities\/devirtualizer.inline.hpp","additions":12,"deletions":10,"binary":false,"changes":22,"status":"modified"},{"patch":"@@ -37,1 +37,1 @@\n-    static typename EnableIf<condition, char>::type test();\n+    static std::enable_if_t<condition, char> test();\n@@ -39,1 +39,1 @@\n-    static typename EnableIf<!condition, long>::type test();\n+    static std::enable_if_t<!condition, long> test();\n","filename":"test\/hotspot\/gtest\/metaprogramming\/test_enableIf.cpp","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"}]}