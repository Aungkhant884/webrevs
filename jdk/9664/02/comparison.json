{"files":[{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -34,1 +34,1 @@\n- * (see below).  Currently the {@code AuthPermission} object is used to\n+ * (see below).  Currently, the {@code AuthPermission} object is used to\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/AuthPermission.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    public default void destroy() throws DestroyFailedException {\n+    default void destroy() throws DestroyFailedException {\n@@ -66,1 +66,1 @@\n-    public default boolean isDestroyed() {\n+    default boolean isDestroyed() {\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/Destroyable.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -130,1 +130,1 @@\n-    private boolean testing = false;\n+    private final boolean testing = false;\n@@ -272,1 +272,1 @@\n-        if (! (obj instanceof PrivateCredentialPermission))\n+        if (! (obj instanceof PrivateCredentialPermission that))\n@@ -275,2 +275,0 @@\n-        PrivateCredentialPermission that = (PrivateCredentialPermission)obj;\n-\n@@ -319,2 +317,2 @@\n-        String principalClass = null;\n-        String principalName = null;\n+        String principalClass;\n+        String principalName;\n@@ -330,1 +328,1 @@\n-        if (tokenizer.hasMoreTokens() == false) {\n+        if (!tokenizer.hasMoreTokens()) {\n@@ -349,1 +347,1 @@\n-            if (tokenizer.hasMoreTokens() == false) {\n+            if (!tokenizer.hasMoreTokens()) {\n@@ -431,1 +429,1 @@\n-        \/**\n+        \/*\n@@ -536,1 +534,1 @@\n-            \/**\n+            \/*\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/PrivateCredentialPermission.java","additions":8,"deletions":10,"binary":false,"changes":18,"status":"modified"},{"patch":"@@ -28,2 +28,5 @@\n-import java.util.*;\n-import java.io.*;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.io.ObjectStreamField;\n+import java.security.*;\n@@ -31,7 +34,1 @@\n-import java.security.AccessController;\n-import java.security.AccessControlContext;\n-import java.security.DomainCombiner;\n-import java.security.Principal;\n-import java.security.PrivilegedExceptionAction;\n-import java.security.PrivilegedActionException;\n-import java.security.ProtectionDomain;\n+import java.util.*;\n@@ -41,1 +38,0 @@\n-import sun.security.action.GetBooleanAction;\n@@ -93,1 +89,1 @@\n- * does not implement {@code Serializable}.  Therefore all concrete\n+ * does not implement {@code Serializable}.  Therefore, all concrete\n@@ -755,1 +751,1 @@\n-        return new ClassSet<T>(PRINCIPAL_SET, c);\n+        return new ClassSet<>(PRINCIPAL_SET, c);\n@@ -849,1 +845,1 @@\n-        return new ClassSet<T>(PUB_CREDENTIAL_SET, c);\n+        return new ClassSet<>(PUB_CREDENTIAL_SET, c);\n@@ -893,1 +889,1 @@\n-        return new ClassSet<T>(PRIV_CREDENTIAL_SET, c);\n+        return new ClassSet<>(PRIV_CREDENTIAL_SET, c);\n@@ -926,3 +922,1 @@\n-        if (o instanceof Subject) {\n-\n-            final Subject that = (Subject)o;\n+        if (o instanceof final Subject that) {\n@@ -1183,1 +1177,1 @@\n-            this.elements = new LinkedList<E>();\n+            this.elements = new LinkedList<>();\n@@ -1198,2 +1192,2 @@\n-            return new Iterator<E>() {\n-                ListIterator<E> i = list.listIterator(0);\n+            return new Iterator<>() {\n+                final ListIterator<E> i = list.listIterator(0);\n@@ -1201,1 +1195,3 @@\n-                public boolean hasNext() {return i.hasNext();}\n+                public boolean hasNext() {\n+                    return i.hasNext();\n+                }\n@@ -1340,1 +1336,1 @@\n-                    \/\/ Otherwise we check the private cred set to see whether\n+                    \/\/ Otherwise, we check the private cred set to see whether\n@@ -1475,1 +1471,1 @@\n-                \/\/ element's toArray results.  Otherwise we'll let\n+                \/\/ element's toArray results.  Otherwise, we'll let\n@@ -1489,1 +1485,1 @@\n-                \/\/ element's toArray results.  Otherwise we'll let\n+                \/\/ element's toArray results.  Otherwise, we'll let\n@@ -1589,3 +1585,3 @@\n-        private int which;\n-        private Class<T> c;\n-        private Set<T> set;\n+        private final int which;\n+        private final Class<T> c;\n+        private final Set<T> set;\n@@ -1596,1 +1592,1 @@\n-            set = new HashSet<T>();\n+            set = new HashSet<>();\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/Subject.java","additions":24,"deletions":28,"binary":false,"changes":52,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -73,1 +73,1 @@\n-     * whether or not multiple selections from the list of choices are allowed.\n+     * whether multiple selections from the list of choices are allowed.\n@@ -86,3 +86,2 @@\n-     * @param multipleSelectionsAllowed boolean specifying whether or\n-     *                  not multiple selections can be made from the\n-     *                  list of choices.\n+     * @param multipleSelectionsAllowed boolean specifying whether multiple\n+     *                  selections can be made from the list of choices.\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/ChoiceCallback.java","additions":4,"deletions":5,"binary":false,"changes":9,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -45,1 +45,1 @@\n-    private String prompt;\n+    private final String prompt;\n@@ -50,1 +50,1 @@\n-    private String defaultName;\n+    private final String defaultName;\n@@ -69,0 +69,1 @@\n+        this.defaultName = null;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/NameCallback.java","additions":4,"deletions":3,"binary":false,"changes":7,"status":"modified"},{"patch":"@@ -158,3 +158,1 @@\n-        return () -> {\n-            Arrays.fill(password, ' ');\n-        };\n+        return () -> Arrays.fill(password, ' ');\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/PasswordCallback.java","additions":1,"deletions":3,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -46,1 +46,1 @@\n-    private String prompt;\n+    private final String prompt;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/TextInputCallback.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -53,1 +53,1 @@\n-    private int messageType;\n+    private final int messageType;\n@@ -58,1 +58,1 @@\n-    private String message;\n+    private final String message;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/TextOutputCallback.java","additions":3,"deletions":3,"binary":false,"changes":6,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1999, 2019, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1999, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -43,1 +43,1 @@\n-    private Callback callback;\n+    private final Callback callback;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/callback\/UnsupportedCallbackException.java","additions":2,"deletions":2,"binary":false,"changes":4,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2015, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -47,3 +47,3 @@\n-    private String loginModuleName;\n-    private LoginModuleControlFlag controlFlag;\n-    private Map<String,?> options;\n+    private final String loginModuleName;\n+    private final LoginModuleControlFlag controlFlag;\n+    private final Map<String,?> options;\n@@ -125,1 +125,1 @@\n-     * This class represents whether or not a {@code LoginModule}\n+     * This class represents whether a {@code LoginModule}\n@@ -130,1 +130,1 @@\n-        private String controlFlag;\n+        private final String controlFlag;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/login\/AppConfigurationEntry.java","additions":6,"deletions":6,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1998, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1998, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -324,1 +324,1 @@\n-     * may be different than the order of providers returned by\n+     * may be different from the order of providers returned by\n@@ -522,1 +522,1 @@\n-     * Otherwise this method returns null.\n+     * Otherwise, this method returns null.\n@@ -537,1 +537,1 @@\n-     * Otherwise this method returns null.\n+     * Otherwise, this method returns null.\n@@ -552,1 +552,1 @@\n-     * Otherwise this method returns null.\n+     * Otherwise, this method returns null.\n@@ -598,4 +598,4 @@\n-        private ConfigurationSpi spi;\n-        private Provider p;\n-        private String type;\n-        private Configuration.Parameters params;\n+        private final ConfigurationSpi spi;\n+        private final Provider p;\n+        private final String type;\n+        private final Configuration.Parameters params;\n@@ -631,1 +631,1 @@\n-    public static interface Parameters { }\n+    public interface Parameters { }\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/login\/Configuration.java","additions":10,"deletions":10,"binary":false,"changes":20,"status":"modified"},{"patch":"@@ -211,1 +211,1 @@\n-    private Map<String,?> state = new HashMap<String,Object>();\n+    private final Map<String,?> state = new HashMap<>();\n@@ -661,2 +661,1 @@\n-        LoginException error = (originalError != null) ? originalError : le;\n-        throw error;\n+        throw (originalError != null) ? originalError : le;\n@@ -770,1 +769,1 @@\n-                if (status == true) {\n+                if (status) {\n@@ -890,1 +889,1 @@\n-        \/\/ we went thru all the LoginModules.\n+        \/\/ we went through all the LoginModules.\n@@ -894,1 +893,1 @@\n-        } else if (success == false && firstError != null) {\n+        } else if (!success && firstError != null) {\n@@ -897,1 +896,1 @@\n-        } else if (success == false) {\n+        } else if (!success) {\n@@ -906,1 +905,0 @@\n-            return;\n@@ -951,1 +949,1 @@\n-     *          incapsulates Configuration info and actual module instances\n+     *          encapsulates Configuration info and actual module instances\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/login\/LoginContext.java","additions":7,"deletions":9,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,3 +28,0 @@\n-import javax.security.auth.Subject;\n-import javax.security.auth.callback.*;\n-import javax.security.auth.login.*;\n@@ -32,0 +29,3 @@\n+import javax.security.auth.Subject;\n+import javax.security.auth.callback.CallbackHandler;\n+import javax.security.auth.login.LoginException;\n@@ -42,1 +42,1 @@\n- * to be used with a particular login application.  Therefore different\n+ * to be used with a particular login application.  Therefore, different\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/spi\/LoginModule.java","additions":4,"deletions":4,"binary":false,"changes":8,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 2000, 2021, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 2000, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -94,1 +94,1 @@\n-     * Currently referenced from sun.security.x509.X500Name.asX500Principal().\n+     * Currently, it is referenced from sun.security.x509.X500Name.asX500Principal().\n@@ -129,1 +129,1 @@\n-        this(name, Collections.<String, String>emptyMap());\n+        this(name, Collections.emptyMap());\n@@ -291,1 +291,1 @@\n-     * \"RFC1779\", \"RFC2253\", and \"CANONICAL\" (case insensitive).\n+     * \"RFC1779\", \"RFC2253\", and \"CANONICAL\" (case-insensitive).\n@@ -366,1 +366,1 @@\n-     * \"RFC1779\" and \"RFC2253\" (case insensitive). \"CANONICAL\" is not\n+     * \"RFC1779\" and \"RFC2253\" (case-insensitive). \"CANONICAL\" is not\n@@ -464,1 +464,1 @@\n-        if (o instanceof X500Principal == false) {\n+        if (!(o instanceof X500Principal other)) {\n@@ -467,1 +467,0 @@\n-        X500Principal other = (X500Principal)o;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/auth\/x500\/X500Principal.java","additions":6,"deletions":7,"binary":false,"changes":13,"status":"modified"},{"patch":"@@ -2,1 +2,1 @@\n- * Copyright (c) 1997, 2020, Oracle and\/or its affiliates. All rights reserved.\n+ * Copyright (c) 1997, 2022, Oracle and\/or its affiliates. All rights reserved.\n@@ -30,1 +30,0 @@\n-import java.lang.Class;\n@@ -33,2 +32,0 @@\n-import java.security.Security;\n-\n@@ -39,2 +36,1 @@\n-import java.security.PublicKey;\n-import java.util.BitSet;\n+import java.security.Security;\n","filename":"src\/java.base\/share\/classes\/javax\/security\/cert\/X509Certificate.java","additions":2,"deletions":6,"binary":false,"changes":8,"status":"modified"}]}