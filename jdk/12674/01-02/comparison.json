{"files":[{"patch":"@@ -38,0 +38,1 @@\n+import java.net.SocketAddress;\n@@ -78,0 +79,1 @@\n+            SocketAddress localAddress = dc.getLocalAddress();\n@@ -87,3 +89,13 @@\n-                byte[] ba = new byte[maxLength];\n-                DatagramPacket p = new DatagramPacket(ba, maxLength);\n-                assertThrows(SocketException.class, () -> s.receive(p));\n+                while (true) {\n+                    byte[] ba = new byte[maxLength];\n+                    DatagramPacket p = new DatagramPacket(ba, maxLength);\n+                    s.receive(p);\n+                    SocketAddress sender = p.getSocketAddress();\n+                    if (sender.equals(localAddress)) {\n+                        fail(\"Received datagram from \" + sender);\n+                    } else {\n+                        System.err.format(\"Datagram from %s ignored%n\", sender);\n+                    }\n+                }\n+            } catch (SocketException e) {\n+                \/\/ expected\n","filename":"test\/jdk\/java\/nio\/channels\/DatagramChannel\/AdaptorAsyncCloseAfterReceive.java","additions":15,"deletions":3,"binary":false,"changes":18,"status":"modified"}]}