{"files":[{"patch":"@@ -5951,0 +5951,14 @@\n+instruct vshiftS_avx(vec dst, vec src, vec shift) %{\n+  predicate(VectorNode::is_vshift_cnt(n->in(2)) && UseAVX > 0);\n+  match(Set dst ( LShiftVS src shift));\n+  match(Set dst ( RShiftVS src shift));\n+  match(Set dst (URShiftVS src shift));\n+  format %{ \"vshiftw  $dst,$src,$shift\\t! shift packedS\" %}\n+  ins_encode %{\n+    int opcode = this->ideal_Opcode();\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vshiftw(opcode, $dst$$XMMRegister, $src$$XMMRegister, $shift$$XMMRegister, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -5952,1 +5966,1 @@\n-  predicate(VectorNode::is_vshift_cnt(n->in(2)));\n+  predicate(VectorNode::is_vshift_cnt(n->in(2)) && UseAVX == 0);\n@@ -5960,3 +5974,7 @@\n-    if (UseAVX > 0) {\n-      int vlen_enc = vector_length_encoding(this);\n-      __ vshiftw(opcode, $dst$$XMMRegister, $src$$XMMRegister, $shift$$XMMRegister, vlen_enc);\n+    int vlen = vector_length(this);\n+    if (vlen == 2) {\n+      __ movflt($dst$$XMMRegister, $src$$XMMRegister);\n+      __ vshiftw(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n+    } else if (vlen == 4) {\n+      __ movdbl($dst$$XMMRegister, $src$$XMMRegister);\n+      __ vshiftw(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n@@ -5964,12 +5982,3 @@\n-      int vlen = vector_length(this);\n-      if (vlen == 2) {\n-        __ movflt($dst$$XMMRegister, $src$$XMMRegister);\n-        __ vshiftw(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n-      } else if (vlen == 4) {\n-        __ movdbl($dst$$XMMRegister, $src$$XMMRegister);\n-        __ vshiftw(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n-      } else {\n-        assert (vlen == 8, \"sanity\");\n-        __ movdqu($dst$$XMMRegister, $src$$XMMRegister);\n-        __ vshiftw(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n-      }\n+      assert (vlen == 8, \"sanity\");\n+      __ movdqu($dst$$XMMRegister, $src$$XMMRegister);\n+      __ vshiftw(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n@@ -5982,0 +5991,14 @@\n+instruct vshiftI_avx(vec dst, vec src, vec shift) %{\n+  predicate(VectorNode::is_vshift_cnt(n->in(2)) && UseAVX > 0);\n+  match(Set dst ( LShiftVI src shift));\n+  match(Set dst ( RShiftVI src shift));\n+  match(Set dst (URShiftVI src shift));\n+  format %{ \"vshiftd  $dst,$src,$shift\\t! shift packedI\" %}\n+  ins_encode %{\n+    int opcode = this->ideal_Opcode();\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vshiftd(opcode, $dst$$XMMRegister, $src$$XMMRegister, $shift$$XMMRegister, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -5983,1 +6006,1 @@\n-  predicate(VectorNode::is_vshift_cnt(n->in(2)));\n+  predicate(VectorNode::is_vshift_cnt(n->in(2)) && UseAVX == 0);\n@@ -5991,3 +6014,4 @@\n-    if (UseAVX > 0) {\n-      int vlen_enc = vector_length_encoding(this);\n-      __ vshiftd(opcode, $dst$$XMMRegister, $src$$XMMRegister, $shift$$XMMRegister, vlen_enc);\n+    int vlen = vector_length(this);\n+    if (vlen == 2) {\n+      __ movdbl($dst$$XMMRegister, $src$$XMMRegister);\n+      __ vshiftd(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n@@ -5995,9 +6019,3 @@\n-      int vlen = vector_length(this);\n-      if (vlen == 2) {\n-        __ movdbl($dst$$XMMRegister, $src$$XMMRegister);\n-        __ vshiftd(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n-      } else {\n-        assert(vlen == 4, \"sanity\");\n-        __ movdqu($dst$$XMMRegister, $src$$XMMRegister);\n-        __ vshiftd(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n-      }\n+      assert(vlen == 4, \"sanity\");\n+      __ movdqu($dst$$XMMRegister, $src$$XMMRegister);\n+      __ vshiftd(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n@@ -6014,1 +6032,0 @@\n-  effect(TEMP dst, USE src);\n@@ -6037,0 +6054,13 @@\n+instruct vshiftL_avx(vec dst, vec src, vec shift) %{\n+  predicate(VectorNode::is_vshift_cnt(n->in(2)) && UseAVX > 0);\n+  match(Set dst ( LShiftVL src shift));\n+  match(Set dst (URShiftVL src shift));\n+  format %{ \"vshiftq  $dst,$src,$shift\\t! shift packedL\" %}\n+  ins_encode %{\n+    int opcode = this->ideal_Opcode();\n+    int vlen_enc = vector_length_encoding(this);\n+    __ vshiftq(opcode, $dst$$XMMRegister, $src$$XMMRegister, $shift$$XMMRegister, vlen_enc);\n+  %}\n+  ins_pipe( pipe_slow );\n+%}\n+\n@@ -6038,1 +6068,1 @@\n-  predicate(VectorNode::is_vshift_cnt(n->in(2)));\n+  predicate(VectorNode::is_vshift_cnt(n->in(2)) && UseAVX == 0);\n@@ -6045,8 +6075,3 @@\n-    if (UseAVX > 0) {\n-      int vlen_enc = vector_length_encoding(this);\n-      __ vshiftq(opcode, $dst$$XMMRegister, $src$$XMMRegister, $shift$$XMMRegister, vlen_enc);\n-    } else {\n-      assert(vector_length(this) == 2, \"\");\n-      __ movdqu($dst$$XMMRegister, $src$$XMMRegister);\n-      __ vshiftq(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n-    }\n+    assert(vector_length(this) == 2, \"\");\n+    __ movdqu($dst$$XMMRegister, $src$$XMMRegister);\n+    __ vshiftq(opcode, $dst$$XMMRegister, $shift$$XMMRegister);\n@@ -6061,1 +6086,0 @@\n-  effect(TEMP dst, USE src, USE shift);\n","filename":"src\/hotspot\/cpu\/x86\/x86.ad","additions":64,"deletions":40,"binary":false,"changes":104,"status":"modified"}]}