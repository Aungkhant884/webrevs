{"files":[{"patch":"@@ -205,1 +205,1 @@\n-  pop();                        \/\/ Pop oop to unlock\n+  Node* obj = pop(); \/\/ Pop oop to unlock\n@@ -209,1 +209,9 @@\n-  shared_unlock(map()->peek_monitor_box(), map()->peek_monitor_obj());\n+  \/\/ In case of OSR compilation, the monitor may have been transferred\n+  \/\/ from the interpreter frame. Using map()->peek... may return them\n+  \/\/ in wrong order. We should use the popped obj.\n+  if (LockingMode == LM_LEGACY) {\n+    \/\/ May potentially be the wrong one in case of OSR, but we need both, box and obj.\n+    shared_unlock(map()->peek_monitor_box(), map()->peek_monitor_obj());\n+  } else {\n+    shared_unlock(\/* unused *\/ zerocon(T_ADDRESS), obj);\n+  }\n","filename":"src\/hotspot\/share\/opto\/locknode.cpp","additions":10,"deletions":2,"binary":false,"changes":12,"status":"modified"},{"patch":"@@ -2244,1 +2244,1 @@\n-  assert(!box->as_BoxLock()->is_eliminated(), \"sanity\");\n+  assert(box->is_Con() || !box->as_BoxLock()->is_eliminated(), \"sanity\");\n","filename":"src\/hotspot\/share\/opto\/macro.cpp","additions":1,"deletions":1,"binary":false,"changes":2,"status":"modified"}]}