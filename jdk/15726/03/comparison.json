{"files":[{"patch":"@@ -168,0 +168,1 @@\n+\n@@ -169,13 +170,8 @@\n-            int[] offsets = new int[2];\n-            if (date.isStandardTime()) {\n-                \/\/ 1) 2:30am during starting-DST transition is\n-                \/\/    intrepreted as 2:30am ST\n-                \/\/ 2) 5:00pm during DST is still interpreted as 5:00pm ST\n-                \/\/ 3) 1:30am during ending-DST transition is interpreted\n-                \/\/    as 1:30am ST (after transition)\n-                if (zi instanceof ZoneInfo) {\n-                    ((ZoneInfo)zi).getOffsetsByStandard(ms, offsets);\n-                    zoneOffset = offsets[0];\n-                } else {\n-                    zoneOffset = zi.getOffset(ms - zi.getRawOffset());\n-                }\n+            \/\/ 1) 2:30am during starting-DST transition is\n+            \/\/    intrepreted as 3:30am DT\n+            \/\/ 2) 5:00pm during DST is intrepreted as 5:00pm DT\n+            \/\/ 3) 1:30am during ending-DST transition is interpreted\n+            \/\/    as 1:30am DT\/0:30am ST (before transition)\n+            if (zi instanceof ZoneInfo zInfo) {\n+                \/\/ Offset value adjusts accordingly depending on DST status of date\n+                zoneOffset = zInfo.getOffsetsByWall(ms, new int[2]);\n@@ -183,10 +179,1 @@\n-                \/\/ 1) 2:30am during starting-DST transition is\n-                \/\/    intrepreted as 3:30am DT\n-                \/\/ 2) 5:00pm during DST is intrepreted as 5:00pm DT\n-                \/\/ 3) 1:30am during ending-DST transition is interpreted\n-                \/\/    as 1:30am DT\/0:30am ST (before transition)\n-                if (zi instanceof ZoneInfo) {\n-                    zoneOffset = ((ZoneInfo)zi).getOffsetsByWall(ms, offsets);\n-                } else {\n-                    zoneOffset = zi.getOffset(ms - zi.getRawOffset());\n-                }\n+                zoneOffset = zi.getOffset(ms - zi.getRawOffset());\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/AbstractCalendar.java","additions":10,"deletions":23,"binary":false,"changes":33,"status":"modified"},{"patch":"@@ -29,1 +29,0 @@\n-import java.util.Locale;\n@@ -85,3 +84,0 @@\n-    private boolean forceStandardTime;\n-\n-    private Locale locale;\n@@ -296,5 +292,0 @@\n-\n-    public boolean isStandardTime() {\n-        return forceStandardTime;\n-    }\n-\n@@ -302,3 +293,0 @@\n-        if (isStandardTime()) {\n-            return false;\n-        }\n@@ -308,4 +296,0 @@\n-    protected void setLocale(Locale loc) {\n-        locale = loc;\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/CalendarDate.java","additions":0,"deletions":16,"binary":false,"changes":16,"status":"modified"},{"patch":"@@ -28,1 +28,0 @@\n-import java.util.Locale;\n@@ -149,4 +148,0 @@\n-    public boolean isStandardTime() {\n-        return date.isStandardTime();\n-    }\n-\n@@ -157,4 +152,0 @@\n-    protected void setLocale(Locale loc) {\n-        unsupported();\n-    }\n-\n","filename":"src\/java.base\/share\/classes\/sun\/util\/calendar\/ImmutableGregorianDate.java","additions":0,"deletions":9,"binary":false,"changes":9,"status":"modified"}]}